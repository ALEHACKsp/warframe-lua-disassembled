code size: 1883
code size: 16
code size: 3
code size: 4
code size: 50
code size: 19
code size: 95
code size: 15
code size: 35
code size: 11
code size: 14
code size: 14
code size: 32
code size: 99
code size: 59
code size: 21
code size: 124
code size: 79
code size: 87
code size: 130
code size: 1
code size: 12
code size: 9
code size: 12
code size: 9
code size: 12
code size: 9
code size: 12
code size: 9
code size: 17
code size: 12
code size: 9
code size: 12
code size: 9
code size: 4
code size: 17
code size: 17
code size: 17
code size: 46
code size: 39
code size: 38
code size: 31
code size: 28
code size: 29
code size: 21
code size: 34
code size: 17
code size: 87
code size: 31
code size: 86
code size: 11
code size: 6
code size: 10
code size: 4
code size: 86
code size: 471
code size: 29
code size: 18
code size: 14
code size: 15
code size: 56
code size: 81
code size: 13
code size: 15
code size: 7
code size: 14
code size: 28
code size: 32
code size: 36
code size: 7
code size: 14
code size: 15
code size: 20
code size: 20
code size: 29
code size: 53
code size: 28
code size: 7
code size: 14
code size: 15
code size: 27
code size: 14
code size: 32
code size: 75
code size: 5
code size: 13
code size: 15
code size: 44
code size: 571
code size: 46
code size: 8
code size: 6
code size: 18
code size: 47
code size: 41
code size: 230
code size: 70
code size: 27
code size: 191
code size: 31
code size: 214
code size: 65
code size: 377
code size: 108
code size: 190
code size: 2
code size: 45
code size: 12
code size: 77
code size: 14
code size: 7
code size: 97
code size: 60
code size: 64
code size: 8
code size: 68
code size: 71
code size: 295
code size: 89
code size: 29
code size: 71
code size: 10
code size: 10
code size: 10
code size: 10
code size: 10
code size: 10
code size: 10
code size: 10
code size: 10
code size: 10
code size: 228
code size: 44
code size: 22
code size: 112
code size: 20
code size: 24
code size: 65
code size: 65
code size: 78
code size: 111
code size: 5
code size: 5
code size: 110
code size: 6
code size: 7
code size: 106
code size: 28
code size: 101
code size: 71
code size: 79
code size: 24
code size: 204
code size: 13
code size: 103
code size: 70
code size: 70
code size: 57
code size: 213
code size: 4
code size: 115
code size: 44
code size: 25
code size: 1
code size: 19
code size: 3004
code size: 10
code size: 44
code size: 40
code size: 70
code size: 5
code size: 94
code size: 5
code size: 51
code size: 37
code size: 160
code size: 6
code size: 49
code size: 5
code size: 49
code size: 5
code size: 136
code size: 54
code size: 10
code size: 166
code size: 18
code size: 244
code size: 42
code size: 151
code size: 133
code size: 1385
code size: 8
code size: 545
code size: 18
code size: 112
code size: 41
code size: 367
code size: 15
code size: 4
code size: 8
code size: 6
code size: 222
code size: 6
code size: 8
code size: 11
code size: 11
code size: 27
code size: 25
code size: 10
code size: 19
code size: 22
code size: 22
code size: 19
code size: 45
code size: 19
code size: 72
code size: 9
code size: 41
code size: 6
code size: 15
code size: 21
code size: 7
code size: 7
code size: 45
code size: 3
code size: 37
code size: 37
code size: 37
code size: 11
code size: 386
code size: 179
code size: 483
code size: 9
code size: 9
code size: 1
code size: 1
code size: 32
code size: 31
code size: 7
code size: 7
code size: 43
code size: 86
code size: 17
code size: 18
code size: 43
code size: 16
code size: 18
code size: 48
code size: 33
code size: 141
code size: 68
code size: 80
code size: 54
code size: 109
code size: 109
code size: 30
code size: 18
code size: 101
code size: 29
code size: 111
code size: 53
code size: 59
code size: 138
code size: 8
code size: 60
code size: 152
code size: 47
code size: 21
code size: 9
code size: 93
code size: 85
code size: 49
code size: 100
code size: 96
code size: 48
code size: 42
code size: 20
code size: 17
code size: 20
code size: 32
code size: 103
code size: 101
code size: 39
code size: 36
code size: 187
code size: 26
code size: 26
code size: 33
code size: 53
code size: 119
code size: 23
code size: 631
code size: 72
code size: 43
code size: 28
code size: 49
code size: 557
code size: 394
code size: 37
code size: 69
code size: 3
code size: 29
code size: 6
code size: 3
code size: 28
code size: 142
code size: 10
code size: 183
code size: 12
code size: 3
code size: 3
code size: 3
code size: 3
code size: 3
code size: 3
code size: 3
code size: 36
code size: 88
code size: 17
code size: 6
code size: 6
code size: 6
code size: 20
code size: 35
code size: 154
code size: 112
code size: 17
code size: 151
code size: 17
code size: 23
code size: 72
code size: 20
code size: 3
code size: 862
code size: 81
code size: 141
code size: 65
code size: 423
code size: 6
code size: 5
code size: 237
code size: 7
code size: 7
code size: 11
code size: 54
code size: 123
code size: 54
code size: 28
code size: 42
code size: 36
code size: 16
code size: 13
code size: 16
code size: 115
code size: 26
code size: 6
code size: 6
code size: 35
code size: 49
code size: 52
code size: 63
code size: 15
code size: 20
code size: 44
code size: 64
code size: 32
code size: 19
code size: 18
code size: 296
code size: 5
code size: 67
code size: 12
code size: 110
code size: 323
code size: 13
code size: 1
code size: 92
code size: 3
code size: 101
code size: 4
code size: 55
code size: 907
code size: 6
code size: 21
code size: 77
code size: 8
code size: 37
code size: 3
code size: 1
code size: 1
code size: 30
code size: 11
code size: 39
code size: 27
code size: 51
code size: 10
code size: 4
code size: 11
code size: 68
code size: 5
code size: 5
code size: 13
code size: 10
code size: 22
code size: 34
code size: 4
code size: 61
code size: 33
code size: 3
code size: 43
code size: 29
code size: 10
code size: 8
code size: 34
code size: 63
code size: 29
code size: 50
code size: 37
code size: 413
code size: 7
code size: 7
code size: 7
code size: 6
code size: 6
code size: 6
code size: 3
code size: 3
code size: 3
code size: 116
code size: 11
code size: 84
code size: 52
code size: 9
code size: 9
code size: 5
code size: 9
code size: 9
code size: 5
code size: 12
code size: 7
code size: 14
code size: 20
code size: 20
code size: 15
code size: 29
code size: 35
code size: 51
code size: 30
code size: 15
code size: 20
code size: 7
code size: 17
code size: 21
code size: 43
code size: 14
code size: 28
code size: 14
code size: 14
code size: 101
code size: 3
code size: 13
code size: 14
code size: 47
code size: 27
code size: 27
code size: 14
code size: 66
code size: 107
code size: 134
code size: 123
code size: 81
code size: 151
code size: 427
code size: 71
code size: 17
code size: 13
code size: 7
code size: 28
code size: 6
code size: 143
code size: 6
code size: 6
code size: 64
code size: 5
code size: 58
code size: 251
code size: 11
code size: 7
code size: 81
code size: 26
code size: 92
code size: 12
code size: 16
code size: 3
code size: 18
code size: 13
code size: 68
code size: 984
code size: 9
code size: 6
code size: 7
code size: 7
code size: 24
code size: 3
code size: 7
code size: 7
code size: 24
code size: 3
code size: 8
code size: 8
code size: 67
code size: 15
code size: 22
code size: 19
code size: 19
code size: 32
code size: 35
code size: 4
code size: 18
code size: 86
code size: 25
code size: 63
code size: 76
code size: 49
code size: 328
code size: 41
code size: 7
code size: 30
code size: 11
code size: 22
code size: 21
code size: 12
code size: 20
code size: 44
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\lua\Lotus\Interface\ChatRedux.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  228

  1 [-]: NEWTABLE  R0 0 14      ; R0 := {}
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
  3 [-]: LOADK     R2 K2        ; R2 := "/Lotus/StoreItems/Weapons/Ostron/Melee/LotusModularWeapon"
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: SETTABLE  R0 K0 R1     ; R0["zawStoreItem"] := R1
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
  7 [-]: LOADK     R2 K4        ; R2 := "/Lotus/StoreItems/Weapons/Sentients/OperatorAmplifiers/OperatorAmpWeapon"
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: SETTABLE  R0 K3 R1     ; R0["ampStoreItem"] := R1
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 11 [-]: LOADK     R2 K6        ; R2 := "/Lotus/StoreItems/Types/Friendly/Pets/MoaPets/MoaPetPowerSuit"
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETTABLE  R0 K5 R1     ; R0["moaPetStoreItem"] := R1
 14 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 15 [-]: LOADK     R2 K8        ; R2 := "/Lotus/StoreItems/Types/Vehicles/Hoverboard/HoverboardSuit"
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: SETTABLE  R0 K7 R1     ; R0["kdriveStoreItem"] := R1
 18 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 19 [-]: LOADK     R2 K10       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimary"
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: SETTABLE  R0 K9 R1     ; R0["primaryRifleType"] := R1
 22 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 23 [-]: LOADK     R2 K12       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimaryShotgun"
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: SETTABLE  R0 K11 R1    ; R0["primaryShotgunType"] := R1
 26 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 27 [-]: LOADK     R2 K14       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimaryBeam"
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: SETTABLE  R0 K13 R1    ; R0["primaryBeamType"] := R1
 30 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 31 [-]: LOADK     R2 K10       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimary"
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: SETTABLE  R0 K15 R1    ; R0["primarySniperType"] := R1
 34 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 35 [-]: LOADK     R2 K10       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimary"
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: SETTABLE  R0 K16 R1    ; R0["primaryLauncherType"] := R1
 38 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 39 [-]: LOADK     R2 K18       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondary"
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: SETTABLE  R0 K17 R1    ; R0["secondaryRifleType"] := R1
 42 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 43 [-]: LOADK     R2 K20       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondaryBeam"
 44 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 45 [-]: SETTABLE  R0 K19 R1    ; R0["secondaryBeamType"] := R1
 46 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 47 [-]: LOADK     R2 K22       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondaryShotgun"
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: SETTABLE  R0 K21 R1    ; R0["secondaryShotgunType"] := R1
 50 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 51 [-]: LOADK     R2 K18       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondary"
 52 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 53 [-]: SETTABLE  R0 K23 R1    ; R0["secondarySniperType"] := R1
 54 [-]: GETGLOBAL R1 K1        ; R1 := 0x7C282057
 55 [-]: LOADK     R2 K18       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondary"
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: SETTABLE  R0 K24 R1    ; R0["secondaryLauncherType"] := R1
 58 [-]: NEWTABLE  R1 0 7       ; R1 := {}
 59 [-]: SETTABLE  R1 K25 K26   ; R1["Red"] := 11806246
 60 [-]: SETTABLE  R1 K27 K28   ; R1["Green"] := 2796172
 61 [-]: SETTABLE  R1 K29 K30   ; R1["Orange"] := 14786925
 62 [-]: SETTABLE  R1 K31 K32   ; R1["Blue"] := 5676533
 63 [-]: SETTABLE  R1 K33 K34   ; R1["Purple"] := 7690684
 64 [-]: SETTABLE  R1 K35 K36   ; R1["Pink"] := 16090556
 65 [-]: SETTABLE  R1 K37 K38   ; R1["Teal"] := 8702926
 66 [-]: GETGLOBAL R2 K39       ; R2 := _G
 67 [-]: GETTABLE  R2 R2 K40    ; R2 := R2["UIColor_Black"]
 68 [-]: LOADK     R3 K41       ; R3 := 3881016
 69 [-]: GETGLOBAL R4 K39       ; R4 := _G
 70 [-]: GETTABLE  R4 R4 K42    ; R4 := R4["UIColor_White"]
 71 [-]: LOADK     R5 K43       ; R5 := 8298979
 72 [-]: NEWTABLE  R6 0 7       ; R6 := {}
 73 [-]: SETTABLE  R6 K44 K45   ; R6["SPAM_DETECTION_PERIOD"] := 5
 74 [-]: SETTABLE  R6 K46 K45   ; R6["MSGS_PER_PERIOD"] := 5
 75 [-]: SETTABLE  R6 K47 K48   ; R6["SPAM_LOCKOUT_TIME"] := 30
 76 [-]: SETTABLE  R6 K49 K50   ; R6["TRADE_SPAM_DETECTION_PERIOD"] := 120
 77 [-]: SETTABLE  R6 K51 K52   ; R6["TRADE_MSGS_PER_PERIOD"] := 1
 78 [-]: SETTABLE  R6 K53 K50   ; R6["SPAM_REPEATED_MESSAGE_DETECTION_PERIOD"] := 120
 79 [-]: SETTABLE  R6 K54 K55   ; R6["GLOBAL_LINK_PERIOD"] := 15
 80 [-]: LOADK     R7 K56       ; R7 := 3600
 81 [-]: LOADNIL   R8 R8        ; R8 := nil
 82 [-]: LOADK     R9 K57       ; R9 := 0.10000000149012
 83 [-]: LOADK     R10 K58      ; R10 := 20
 84 [-]: LOADK     R11 K59      ; R11 := 10
 85 [-]: LOADK     R12 K60      ; R12 := 125
 86 [-]: LOADK     R13 K61      ; R13 := 0.5
 87 [-]: MOVE      R14 R13      ; R14 := R13
 88 [-]: LOADK     R15 K62      ; R15 := -1
 89 [-]: LOADNIL   R16 R17      ; R16 := R17 := nil
 90 [-]: LOADK     R18 K52      ; R18 := 1
 91 [-]: NEWTABLE  R19 26 0     ; R19 := {}
 92 [-]: LOADK     R20 K63      ; R20 := "-"
 93 [-]: LOADK     R21 K64      ; R21 := "0"
 94 [-]: LOADK     R22 K65      ; R22 := "1"
 95 [-]: LOADK     R23 K66      ; R23 := "2"
 96 [-]: LOADK     R24 K67      ; R24 := "3"
 97 [-]: LOADK     R25 K68      ; R25 := "4"
 98 [-]: LOADK     R26 K69      ; R26 := "5"
 99 [-]: LOADK     R27 K70      ; R27 := "6"
100 [-]: LOADK     R28 K71      ; R28 := "7"
101 [-]: LOADK     R29 K72      ; R29 := "8"
102 [-]: LOADK     R30 K73      ; R30 := "9"
103 [-]: LOADK     R31 K74      ; R31 := "_"
104 [-]: LOADK     R32 K75      ; R32 := "["
105 [-]: LOADK     R33 K76      ; R33 := "]"
106 [-]: LOADK     R34 K77      ; R34 := "A"
107 [-]: LOADK     R35 K78      ; R35 := "B"
108 [-]: LOADK     R36 K79      ; R36 := "C"
109 [-]: LOADK     R37 K80      ; R37 := "D"
110 [-]: LOADK     R38 K81      ; R38 := "E"
111 [-]: LOADK     R39 K82      ; R39 := "F"
112 [-]: LOADK     R40 K83      ; R40 := "G"
113 [-]: LOADK     R41 K84      ; R41 := "H"
114 [-]: LOADK     R42 K85      ; R42 := "I"
115 [-]: LOADK     R43 K86      ; R43 := "J"
116 [-]: LOADK     R44 K87      ; R44 := "K"
117 [-]: LOADK     R45 K88      ; R45 := "L"
118 [-]: LOADK     R46 K89      ; R46 := "M"
119 [-]: LOADK     R47 K90      ; R47 := "N"
120 [-]: LOADK     R48 K91      ; R48 := "O"
121 [-]: LOADK     R49 K92      ; R49 := "P"
122 [-]: LOADK     R50 K93      ; R50 := "Q"
123 [-]: LOADK     R51 K94      ; R51 := "R"
124 [-]: LOADK     R52 K95      ; R52 := "S"
125 [-]: LOADK     R53 K96      ; R53 := "T"
126 [-]: LOADK     R54 K97      ; R54 := "U"
127 [-]: LOADK     R55 K98      ; R55 := "V"
128 [-]: LOADK     R56 K99      ; R56 := "W"
129 [-]: LOADK     R57 K100     ; R57 := "X"
130 [-]: LOADK     R58 K101     ; R58 := "Y"
131 [-]: LOADK     R59 K102     ; R59 := "Z"
132 [-]: SETLIST   R19 40 1     ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 40
133 [-]: GETGLOBAL R20 K103     ; R20 := 0x329BDC44
134 [-]: LOADK     R21 K104     ; R21 := "EE.Interface.Utilities"
135 [-]: CALL      R20 2 2      ; R20 := R20(R21)
136 [-]: GETGLOBAL R21 K103     ; R21 := 0x329BDC44
137 [-]: LOADK     R22 K105     ; R22 := "Lotus.Interface.LotusUtilities"
138 [-]: CALL      R21 2 2      ; R21 := R21(R22)
139 [-]: GETGLOBAL R22 K103     ; R22 := 0x329BDC44
140 [-]: LOADK     R23 K106     ; R23 := "Lotus.Interface.UIUtilities"
141 [-]: CALL      R22 2 2      ; R22 := R22(R23)
142 [-]: GETGLOBAL R23 K103     ; R23 := 0x329BDC44
143 [-]: LOADK     R24 K107     ; R24 := "Lotus.Interface.CardUtilitiesRedux"
144 [-]: CALL      R23 2 2      ; R23 := R23(R24)
145 [-]: GETGLOBAL R24 K103     ; R24 := 0x329BDC44
146 [-]: LOADK     R25 K108     ; R25 := "Lotus.Interface.LotusNetworkUtilities"
147 [-]: CALL      R24 2 2      ; R24 := R24(R25)
148 [-]: GETGLOBAL R25 K103     ; R25 := 0x329BDC44
149 [-]: LOADK     R26 K109     ; R26 := "Lotus.Interface.SequencerUtilities"
150 [-]: CALL      R25 2 2      ; R25 := R25(R26)
151 [-]: GETGLOBAL R26 K103     ; R26 := 0x329BDC44
152 [-]: LOADK     R27 K110     ; R27 := "Lotus.Interface.ModularWeaponUtilities"
153 [-]: CALL      R26 2 2      ; R26 := R26(R27)
154 [-]: GETGLOBAL R27 K103     ; R27 := 0x329BDC44
155 [-]: LOADK     R28 K111     ; R28 := "Lotus.Interface.Libs.PreviewLinkUtilities"
156 [-]: CALL      R27 2 2      ; R27 := R27(R28)
157 [-]: GETGLOBAL R28 K103     ; R28 := 0x329BDC44
158 [-]: LOADK     R29 K112     ; R29 := "EE.Interface.Components.List"
159 [-]: CALL      R28 2 2      ; R28 := R28(R29)
160 [-]: GETGLOBAL R29 K103     ; R29 := 0x329BDC44
161 [-]: LOADK     R30 K113     ; R30 := "EE.Interface.Components.ScrollBar"
162 [-]: CALL      R29 2 2      ; R29 := R29(R30)
163 [-]: GETGLOBAL R30 K103     ; R30 := 0x329BDC44
164 [-]: LOADK     R31 K114     ; R31 := "Lotus.Interface.TextSuggest"
165 [-]: CALL      R30 2 2      ; R30 := R30(R31)
166 [-]: MOVE      R31 R1       ; R31 := R1
167 [-]: MOVE      R32 R0       ; R32 := R0
168 [-]: MOVE      R33 R0       ; R33 := R0
169 [-]: LOADNIL   R34 R36      ; R34 := R35 := R36 := nil
170 [-]: MOVE      R37 R0       ; R37 := R0
171 [-]: LOADNIL   R38 R44      ; R38 := R39 := R40 := R41 := R42 := R43 := R44 := nil
172 [-]: MOVE      R45 R0       ; R45 := R0
173 [-]: MOVE      R46 R0       ; R46 := R0
174 [-]: MOVE      R47 R0       ; R47 := R0
175 [-]: MOVE      R48 R0       ; R48 := R0
176 [-]: MOVE      R49 R0       ; R49 := R0
177 [-]: MOVE      R50 R1       ; R50 := R1
178 [-]: NEWTABLE  R51 0 2      ; R51 := {}
179 [-]: SETTABLE  R51 K115 K116; R51["Enabled"] := "0x1"
180 [-]: SETTABLE  R51 K117 K116; R51["EmoticonConversion"] := "0x1"
181 [-]: LOADK     R52 K52      ; R52 := 1
182 [-]: LOADNIL   R53 R54      ; R53 := R54 := nil
183 [-]: LOADK     R55 K118     ; R55 := 0
184 [-]: LOADK     R56 K118     ; R56 := 0
185 [-]: MOVE      R57 R1       ; R57 := R1
186 [-]: LOADK     R58 K119     ; R58 := 2
187 [-]: MOVE      R59 R1       ; R59 := R1
188 [-]: MOVE      R60 R0       ; R60 := R0
189 [-]: MOVE      R61 R0       ; R61 := R0
190 [-]: NEWTABLE  R62 0 16     ; R62 := {}
191 [-]: SETTABLE  R62 K120 K121; R62["Msg"] := ""
192 [-]: SETTABLE  R62 K122 K121; R62["CurrItemString"] := ""
193 [-]: NEWTABLE  R63 0 0      ; R63 := {}
194 [-]: SETTABLE  R62 K123 R63 ; R62["OmegaLinks"] := R63
195 [-]: NEWTABLE  R63 0 0      ; R63 := {}
196 [-]: SETTABLE  R62 K124 R63 ; R62["SongLinks"] := R63
197 [-]: NEWTABLE  R63 0 0      ; R63 := {}
198 [-]: SETTABLE  R62 K125 R63 ; R62["ZawLinks"] := R63
199 [-]: NEWTABLE  R63 0 0      ; R63 := {}
200 [-]: SETTABLE  R62 K126 R63 ; R62["AmpLinks"] := R63
201 [-]: NEWTABLE  R63 0 0      ; R63 := {}
202 [-]: SETTABLE  R62 K127 R63 ; R62["MoaPetLinks"] := R63
203 [-]: NEWTABLE  R63 0 0      ; R63 := {}
204 [-]: SETTABLE  R62 K128 R63 ; R62["KdriveLinks"] := R63
205 [-]: NEWTABLE  R63 0 0      ; R63 := {}
206 [-]: SETTABLE  R62 K129 R63 ; R62["KitgunLinks"] := R63
207 [-]: NEWTABLE  R63 0 0      ; R63 := {}
208 [-]: SETTABLE  R62 K130 R63 ; R62["AppearanceLinks"] := R63
209 [-]: SETTABLE  R62 K131 K132; R62["CachedAppearanceLink"] := nil
210 [-]: NEWTABLE  R63 0 0      ; R63 := {}
211 [-]: SETTABLE  R62 K133 R63 ; R62["ModConfigLinks"] := R63
212 [-]: SETTABLE  R62 K134 K132; R62["CachedModConfigLink"] := nil
213 [-]: NEWTABLE  R63 0 0      ; R63 := {}
214 [-]: SETTABLE  R62 K135 R63 ; R62["ShawzinLinks"] := R63
215 [-]: SETTABLE  R62 K136 K132; R62["CachedShawzinLink"] := nil
216 [-]: SETTABLE  R62 K137 K138; R62["GuildReplacement"] := "0x0"
217 [-]: GETGLOBAL R63 K139     ; R63 := 0xEC274B1A
218 [-]: LOADK     R64 K140     ; R64 := "ChatRedux"
219 [-]: CALL      R63 2 2      ; R63 := R63(R64)
220 [-]: MOVE      R64 R0       ; R64 := R0
221 [-]: NEWTABLE  R65 0 0      ; R65 := {}
222 [-]: NEWTABLE  R66 0 0      ; R66 := {}
223 [-]: NEWTABLE  R67 0 0      ; R67 := {}
224 [-]: NEWTABLE  R68 0 0      ; R68 := {}
225 [-]: NEWTABLE  R69 0 6      ; R69 := {}
226 [-]: SETTABLE  R69 K141 K118; R69["ALERT"] := 0
227 [-]: SETTABLE  R69 K142 K52 ; R69["NEWS"] := 1
228 [-]: SETTABLE  R69 K143 K119; R69["GOAL"] := 2
229 [-]: SETTABLE  R69 K144 K145; R69["INVASION"] := 3
230 [-]: SETTABLE  R69 K146 K147; R69["BUILD"] := 4
231 [-]: SETTABLE  R69 K148 K45 ; R69["PVPAFFECTOR"] := 5
232 [-]: NEWTABLE  R70 0 30     ; R70 := {}
233 [-]: SETTABLE  R70 K149 K150; R70["OMEGA_STRING_LOC"] := "/Lotus/Language/Items/OmegaModGenericName"
234 [-]: SETTABLE  R70 K151 K152; R70["OMEGA_TYPE_PREFIX"] := "/Lotus/Upgrades/Mods/Randomized/"
235 [-]: SETTABLE  R70 K153 K154; R70["OMEGA_STOREITEM_PREFIX"] := "/Lotus/StoreItems/Upgrades/Mods/Randomized/"
236 [-]: SETTABLE  R70 K155 K45 ; R70["OMEGA_MAX_LINKS"] := 5
237 [-]: SETTABLE  R70 K156 K132; R70["OmegaString"] := nil
238 [-]: SETTABLE  R70 K157 K158; R70["STEP_SEQUENCER_NOTEPACK_PREFIX"] := "/Lotus/Types/Game/NotePacks/"
239 [-]: SETTABLE  R70 K159 K160; R70["STEP_SEQUENCER_STRING_LOC"] := "/Lotus/Language/Menu/Composition_Song"
240 [-]: SETTABLE  R70 K161 K162; R70["STEP_SEQUENCER_STRING_PREFIX"] := "/Lotus/Language/Menu/Composition_Song_Prefix"
241 [-]: GETGLOBAL R71 K164     ; R71 := 0x2C00D429
242 [-]: LOADK     R72 K165     ; R72 := "/Lotus/Types/StoreItems/Packages/StepSequencerPreview"
243 [-]: CALL      R71 2 2      ; R71 := R71(R72)
244 [-]: SETTABLE  R70 K163 R71 ; R70["STEP_SEQUENCER_PREVIEW"] := R71
245 [-]: SETTABLE  R70 K166 K52 ; R70["STEP_SEQUENCER_MAX_LINKS"] := 1
246 [-]: SETTABLE  R70 K167 K132; R70["StepSequencerString"] := nil
247 [-]: SETTABLE  R70 K168 K121; R70["StepSequencerPrefixString"] := ""
248 [-]: SETTABLE  R70 K169 K132; R70["StepSequencerPendingRequest"] := nil
249 [-]: SETTABLE  R70 K170 K132; R70["StepSequencerLoader"] := nil
250 [-]: SETTABLE  R70 K171 K172; R70["ZAW_STRING_LOC"] := "/Lotus/Language/Weapons/LotusModularWeaponName"
251 [-]: SETTABLE  R70 K173 K174; R70["ZAW_STRING_PREFIX"] := "/Lotus/Language/Menu/Chat_Zaw_Link_Prefix"
252 [-]: SETTABLE  R70 K175 K145; R70["ZAW_MAX_LINKS"] := 3
253 [-]: SETTABLE  R70 K176 K132; R70["ZawString"] := nil
254 [-]: SETTABLE  R70 K177 K121; R70["ZawPrefixString"] := ""
255 [-]: SETTABLE  R70 K178 K179; R70["AMP_STRING_LOC"] := "/Lotus/Language/Items/OperatorVoidBeam"
256 [-]: SETTABLE  R70 K180 K181; R70["AMP_STRING_PREFIX"] := "/Lotus/Language/Menu/Chat_Amp_Link_Prefix"
257 [-]: SETTABLE  R70 K182 K145; R70["AMP_MAX_LINKS"] := 3
258 [-]: SETTABLE  R70 K183 K132; R70["AmpString"] := nil
259 [-]: SETTABLE  R70 K184 K121; R70["AmpPrefixString"] := ""
260 [-]: SETTABLE  R70 K185 K186; R70["MOA_PET_STRING_LOC"] := "/Lotus/Language/SolarisVenus/MoaPetItem"
261 [-]: SETTABLE  R70 K187 K188; R70["MOA_PET_STRING_PREFIX"] := "/Lotus/Language/SolarisVenus/Chat_Moa_Pet_Link_Prefix"
262 [-]: SETTABLE  R70 K189 K147; R70["MOA_MAX_LINKS"] := 4
263 [-]: SETTABLE  R70 K190 K132; R70["MoaPetString"] := nil
264 [-]: SETTABLE  R70 K191 K121; R70["MoaPetPrefixString"] := ""
265 [-]: SETTABLE  R70 K192 K193; R70["KDRIVE_STRING_LOC"] := "/Lotus/Language/SolarisVenus/KDriveItem"
266 [-]: SETTABLE  R70 K194 K195; R70["KDRIVE_STRING_PREFIX"] := "/Lotus/Language/SolarisVenus/Chat_KDrive_Link_Prefix"
267 [-]: SETTABLE  R70 K196 K147; R70["KDRIVE_MAX_LINKS"] := 4
268 [-]: SETTABLE  R70 K197 K132; R70["KDriveString"] := nil
269 [-]: SETTABLE  R70 K198 K121; R70["KDrivePrefixString"] := ""
270 [-]: SETTABLE  R70 K199 K200; R70["KITGUN_STRING_LOC"] := "/Lotus/Language/SolarisVenus/Kitgun_Singular"
271 [-]: SETTABLE  R70 K201 K202; R70["KITGUN_STRING_PREFIX"] := "/Lotus/Language/SolarisVenus/Chat_Kitgun_Link_Prefix"
272 [-]: SETTABLE  R70 K203 K145; R70["KITGUN_MAX_LINKS"] := 3
273 [-]: SETTABLE  R70 K204 K132; R70["KitgunString"] := nil
274 [-]: SETTABLE  R70 K205 K121; R70["KitgunPrefixString"] := ""
275 [-]: SETTABLE  R70 K206 K207; R70["APPEARANCE_STRING_LOC"] := "/Lotus/Language/Menu/Appearance_Prefix"
276 [-]: SETTABLE  R70 K208 K207; R70["APPEARANCE_STRING_PREFIX"] := "/Lotus/Language/Menu/Appearance_Prefix"
277 [-]: SETTABLE  R70 K209 K52 ; R70["APPEARANCE_MAX_LINKS"] := 1
278 [-]: SETTABLE  R70 K210 K132; R70["AppearanceString"] := nil
279 [-]: SETTABLE  R70 K211 K121; R70["AppearancePrefixString"] := ""
280 [-]: SETTABLE  R70 K212 K213; R70["MOD_CONFIG_STRING_LOC"] := "/Lotus/Language/Menu/Mod_Prefix"
281 [-]: SETTABLE  R70 K214 K213; R70["MOD_CONFIG_STRING_PREFIX"] := "/Lotus/Language/Menu/Mod_Prefix"
282 [-]: SETTABLE  R70 K215 K52 ; R70["MOD_CONFIG_MAX_LINKS"] := 1
283 [-]: SETTABLE  R70 K216 K132; R70["ModConfigString"] := nil
284 [-]: SETTABLE  R70 K217 K121; R70["ModConfigPrefixString"] := ""
285 [-]: SETTABLE  R70 K218 K219; R70["SHAWZIN_STRING_LOC"] := "/Lotus/Language/Menu/Shawzin_Prefix"
286 [-]: SETTABLE  R70 K220 K219; R70["SHAWZIN_STRING_PREFIX"] := "/Lotus/Language/Menu/Shawzin_Prefix"
287 [-]: SETTABLE  R70 K221 K52 ; R70["SHAWZIN_MAX_LINKS"] := 1
288 [-]: SETTABLE  R70 K222 K132; R70["ShawzinString"] := nil
289 [-]: SETTABLE  R70 K223 K121; R70["ShawzinPrefixString"] := ""
290 [-]: LOADNIL   R71 R72      ; R71 := R72 := nil
291 [-]: NEWTABLE  R73 0 0      ; R73 := {}
292 [-]: NEWTABLE  R74 0 0      ; R74 := {}
293 [-]: LOADNIL   R75 R75      ; R75 := nil
294 [-]: NEWTABLE  R76 0 0      ; R76 := {}
295 [-]: NEWTABLE  R77 0 0      ; R77 := {}
296 [-]: NEWTABLE  R78 0 0      ; R78 := {}
297 [-]: NEWTABLE  R79 0 0      ; R79 := {}
298 [-]: NEWTABLE  R80 0 0      ; R80 := {}
299 [-]: NEWTABLE  R81 0 0      ; R81 := {}
300 [-]: NEWTABLE  R82 0 0      ; R82 := {}
301 [-]: NEWTABLE  R83 0 0      ; R83 := {}
302 [-]: NEWTABLE  R84 0 0      ; R84 := {}
303 [-]: NEWTABLE  R85 0 0      ; R85 := {}
304 [-]: LOADNIL   R86 R86      ; R86 := nil
305 [-]: MOVE      R87 R0       ; R87 := R0
306 [-]: LOADK     R88 K45      ; R88 := 5
307 [-]: LOADK     R89 K145     ; R89 := 3
308 [-]: MOVE      R90 R0       ; R90 := R0
309 [-]: MOVE      R91 R0       ; R91 := R0
310 [-]: MOVE      R92 R0       ; R92 := R0
311 [-]: MOVE      R93 R0       ; R93 := R0
312 [-]: LOADK     R94 K50      ; R94 := 120
313 [-]: LOADNIL   R95 R96      ; R95 := R96 := nil
314 [-]: NEWTABLE  R97 0 4      ; R97 := {}
315 [-]: SETTABLE  R97 K224 K138; R97["InProgress"] := "0x0"
316 [-]: SETTABLE  R97 K225 K132; R97["PlayerId"] := nil
317 [-]: SETTABLE  R97 K226 K121; R97["PlayerName"] := ""
318 [-]: SETTABLE  R97 K227 K138; R97["TempAddToChatPartners"] := "0x0"
319 [-]: NEWTABLE  R98 0 0      ; R98 := {}
320 [-]: LOADK     R99 K52      ; R99 := 1
321 [-]: LOADNIL   R100 R109    ; R100 := R101 := R102 := R103 := R104 := R105 := R106 := R107 := R108 := R109 := nil
322 [-]: LOADK     R110 K121    ; R110 := ""
323 [-]: LOADK     R111 K121    ; R111 := ""
324 [-]: LOADK     R112 K52     ; R112 := 1
325 [-]: LOADK     R113 K118    ; R113 := 0
326 [-]: MOVE      R114 R0      ; R114 := R0
327 [-]: MOVE      R115 R0      ; R115 := R0
328 [-]: LOADK     R116 K121    ; R116 := ""
329 [-]: LOADK     R117 K118    ; R117 := 0
330 [-]: LOADK     R118 K118    ; R118 := 0
331 [-]: MOVE      R119 R0      ; R119 := R0
332 [-]: NEWTABLE  R120 0 3     ; R120 := {}
333 [-]: SETTABLE  R120 K228 K138; R120["ResizingWindow"] := "0x0"
334 [-]: SETTABLE  R120 K229 K118; R120["RefreshChatHistoryCooldown"] := 0
335 [-]: SETTABLE  R120 K230 K138; R120["ResizeRequired"] := "0x0"
336 [-]: LOADNIL   R121 R122    ; R121 := R122 := nil
337 [-]: NEWTABLE  R123 0 2     ; R123 := {}
338 [-]: NEWTABLE  R124 0 0     ; R124 := {}
339 [-]: SETTABLE  R123 K231 R124; R123["Tags"] := R124
340 [-]: NEWTABLE  R124 0 0     ; R124 := {}
341 [-]: SETTABLE  R123 K232 R124; R123["Indexer"] := R124
342 [-]: NEWTABLE  R124 0 2     ; R124 := {}
343 [-]: NEWTABLE  R125 0 0     ; R125 := {}
344 [-]: SETTABLE  R124 K231 R125; R124["Tags"] := R125
345 [-]: NEWTABLE  R125 0 0     ; R125 := {}
346 [-]: SETTABLE  R124 K232 R125; R124["Indexer"] := R125
347 [-]: NEWTABLE  R125 0 2     ; R125 := {}
348 [-]: NEWTABLE  R126 0 0     ; R126 := {}
349 [-]: SETTABLE  R125 K231 R126; R125["Tags"] := R126
350 [-]: NEWTABLE  R126 0 0     ; R126 := {}
351 [-]: SETTABLE  R125 K232 R126; R125["Indexer"] := R126
352 [-]: NEWTABLE  R126 0 2     ; R126 := {}
353 [-]: NEWTABLE  R127 0 0     ; R127 := {}
354 [-]: SETTABLE  R126 K231 R127; R126["Tags"] := R127
355 [-]: NEWTABLE  R127 0 0     ; R127 := {}
356 [-]: SETTABLE  R126 K232 R127; R126["Indexer"] := R127
357 [-]: NEWTABLE  R127 0 2     ; R127 := {}
358 [-]: NEWTABLE  R128 0 0     ; R128 := {}
359 [-]: SETTABLE  R127 K231 R128; R127["Tags"] := R128
360 [-]: NEWTABLE  R128 0 0     ; R128 := {}
361 [-]: SETTABLE  R127 K232 R128; R127["Indexer"] := R128
362 [-]: NEWTABLE  R128 0 2     ; R128 := {}
363 [-]: NEWTABLE  R129 0 0     ; R129 := {}
364 [-]: SETTABLE  R128 K231 R129; R128["Tags"] := R129
365 [-]: NEWTABLE  R129 0 0     ; R129 := {}
366 [-]: SETTABLE  R128 K232 R129; R128["Indexer"] := R129
367 [-]: NEWTABLE  R129 0 2     ; R129 := {}
368 [-]: NEWTABLE  R130 0 0     ; R130 := {}
369 [-]: SETTABLE  R129 K231 R130; R129["Tags"] := R130
370 [-]: NEWTABLE  R130 0 0     ; R130 := {}
371 [-]: SETTABLE  R129 K232 R130; R129["Indexer"] := R130
372 [-]: LOADNIL   R130 R131    ; R130 := R131 := nil
373 [-]: GETTABLE  R132 R20 K233; R132 := R20["0x93C88E0"]
374 [-]: GETGLOBAL R133 K39     ; R133 := _G
375 [-]: GETTABLE  R133 R133 K234; R133 := R133["UIColor_Yellow"]
376 [-]: CALL      R132 2 2     ; R132 := R132(R133)
377 [-]: MOVE      R133 R0      ; R133 := R0
378 [-]: LOADNIL   R134 R134    ; R134 := nil
379 [-]: MOVE      R135 R0      ; R135 := R0
380 [-]: MOVE      R136 R0      ; R136 := R0
381 [-]: NEWTABLE  R137 0 10    ; R137 := {}
382 [-]: SETTABLE  R137 K235 K118; R137["CHANNEL_SESSION"] := 0
383 [-]: SETTABLE  R137 K236 K52; R137["CHANNEL_HUB"] := 1
384 [-]: SETTABLE  R137 K237 K119; R137["CHANNEL_CLAN"] := 2
385 [-]: SETTABLE  R137 K238 K145; R137["CHANNEL_ALLIANCE"] := 3
386 [-]: SETTABLE  R137 K239 K147; R137["CHANNEL_COUNCIL"] := 4
387 [-]: SETTABLE  R137 K240 K45; R137["CHANNEL_GLOBAL"] := 5
388 [-]: SETTABLE  R137 K241 K242; R137["CHANNEL_QA"] := 6
389 [-]: SETTABLE  R137 K243 K244; R137["CHANNEL_RECRUITING"] := 7
390 [-]: SETTABLE  R137 K245 K246; R137["CHANNEL_TRADE"] := 8
391 [-]: SETTABLE  R137 K247 K248; R137["CHANNEL_PRIVATE_CHAT"] := 9
392 [-]: CLOSURE   R138 0       ; R138 := closure(Function #1)
393 [-]: MOVE      R0 R137      ; R0 := R137
394 [-]: MOVE      R0 R38       ; R0 := R38
395 [-]: CLOSURE   R139 1       ; R139 := closure(Function #2)
396 [-]: MOVE      R0 R31       ; R0 := R31
397 [-]: SETGLOBAL R139 K249    ; IsInputBlocked := R139
398 [-]: SETGLOBAL R139 K250    ; 0x6FE7E740 := R139
399 [-]: CLOSURE   R139 2       ; R139 := closure(Function #3)
400 [-]: MOVE      R0 R16       ; R0 := R16
401 [-]: MOVE      R0 R17       ; R0 := R17
402 [-]: CLOSURE   R140 3       ; R140 := closure(Function #4)
403 [-]: MOVE      R0 R77       ; R0 := R77
404 [-]: MOVE      R0 R22       ; R0 := R22
405 [-]: CLOSURE   R141 4       ; R141 := closure(Function #5)
406 [-]: MOVE      R0 R35       ; R0 := R35
407 [-]: MOVE      R0 R110      ; R0 := R110
408 [-]: MOVE      R0 R140      ; R0 := R140
409 [-]: MOVE      R0 R111      ; R0 := R111
410 [-]: CLOSURE   R142 5       ; R142 := closure(Function #6)
411 [-]: CLOSURE   R143 6       ; R143 := closure(Function #7)
412 [-]: CLOSURE   R144 7       ; R144 := closure(Function #8)
413 [-]: MOVE      R0 R38       ; R0 := R38
414 [-]: CLOSURE   R145 8       ; R145 := closure(Function #9)
415 [-]: MOVE      R0 R38       ; R0 := R38
416 [-]: SETGLOBAL R145 K251    ; SystemMessage := R145
417 [-]: SETGLOBAL R145 K252    ; 0xAE78D1F := R145
418 [-]: CLOSURE   R145 9       ; R145 := closure(Function #10)
419 [-]: MOVE      R0 R38       ; R0 := R38
420 [-]: SETGLOBAL R145 K253    ; ChannelSystemMessage := R145
421 [-]: SETGLOBAL R145 K254    ; 0x59AA9F4B := R145
422 [-]: CLOSURE   R145 10      ; R145 := closure(Function #11)
423 [-]: MOVE      R0 R38       ; R0 := R38
424 [-]: SETGLOBAL R145 K255    ; ChannelNotificationMessage := R145
425 [-]: SETGLOBAL R145 K256    ; 0x6ACA52A1 := R145
426 [-]: CLOSURE   R145 11      ; R145 := closure(Function #12)
427 [-]: MOVE      R0 R38       ; R0 := R38
428 [-]: CLOSURE   R146 12      ; R146 := closure(Function #13)
429 [-]: MOVE      R0 R145      ; R0 := R145
430 [-]: MOVE      R0 R98       ; R0 := R98
431 [-]: MOVE      R0 R10       ; R0 := R10
432 [-]: MOVE      R0 R99       ; R0 := R99
433 [-]: CLOSURE   R147 13      ; R147 := closure(Function #14)
434 [-]: MOVE      R0 R98       ; R0 := R98
435 [-]: MOVE      R0 R145      ; R0 := R145
436 [-]: MOVE      R0 R99       ; R0 := R99
437 [-]: MOVE      R0 R20       ; R0 := R20
438 [-]: CLOSURE   R148 14      ; R148 := closure(Function #15)
439 [-]: MOVE      R0 R20       ; R0 := R20
440 [-]: CLOSURE   R149 15      ; R149 := closure(Function #16)
441 [-]: MOVE      R0 R53       ; R0 := R53
442 [-]: MOVE      R0 R56       ; R0 := R56
443 [-]: CLOSURE   R150 16      ; R150 := closure(Function #17)
444 [-]: MOVE      R0 R149      ; R0 := R149
445 [-]: MOVE      R0 R53       ; R0 := R53
446 [-]: MOVE      R0 R38       ; R0 := R38
447 [-]: CLOSURE   R151 17      ; R151 := closure(Function #18)
448 [-]: MOVE      R0 R38       ; R0 := R38
449 [-]: CLOSURE   R152 18      ; R152 := closure(Function #19)
450 [-]: MOVE      R0 R30       ; R0 := R30
451 [-]: MOVE      R0 R72       ; R0 := R72
452 [-]: MOVE      R0 R38       ; R0 := R38
453 [-]: MOVE      R0 R114      ; R0 := R114
454 [-]: MOVE      R0 R115      ; R0 := R115
455 [-]: CLOSURE   R153 19      ; R153 := closure(Function #20)
456 [-]: SETGLOBAL R153 K257    ; MouseCatcherPressed := R153
457 [-]: SETGLOBAL R153 K258    ; 0xF516A966 := R153
458 [-]: CLOSURE   R153 20      ; R153 := closure(Function #21)
459 [-]: MOVE      R0 R38       ; R0 := R38
460 [-]: MOVE      R0 R31       ; R0 := R31
461 [-]: SETGLOBAL R153 K259    ; WindowTitlePress := R153
462 [-]: SETGLOBAL R153 K260    ; 0x5213075B := R153
463 [-]: CLOSURE   R153 21      ; R153 := closure(Function #22)
464 [-]: MOVE      R0 R38       ; R0 := R38
465 [-]: SETGLOBAL R153 K261    ; WindowTitleRelease := R153
466 [-]: SETGLOBAL R153 K262    ; 0x57D2B53C := R153
467 [-]: CLOSURE   R153 22      ; R153 := closure(Function #23)
468 [-]: MOVE      R0 R38       ; R0 := R38
469 [-]: MOVE      R0 R31       ; R0 := R31
470 [-]: SETGLOBAL R153 K263    ; WindowTitleRollOver := R153
471 [-]: SETGLOBAL R153 K264    ; 0xBB3ACD5E := R153
472 [-]: CLOSURE   R153 23      ; R153 := closure(Function #24)
473 [-]: MOVE      R0 R38       ; R0 := R38
474 [-]: SETGLOBAL R153 K265    ; WindowTitleRollOut := R153
475 [-]: SETGLOBAL R153 K266    ; 0x2E1AF24E := R153
476 [-]: CLOSURE   R153 24      ; R153 := closure(Function #25)
477 [-]: MOVE      R0 R38       ; R0 := R38
478 [-]: MOVE      R0 R31       ; R0 := R31
479 [-]: SETGLOBAL R153 K267    ; BottomResizePress := R153
480 [-]: SETGLOBAL R153 K268    ; 0x3A294A7F := R153
481 [-]: CLOSURE   R153 25      ; R153 := closure(Function #26)
482 [-]: MOVE      R0 R38       ; R0 := R38
483 [-]: SETGLOBAL R153 K269    ; BottomResizeRelease := R153
484 [-]: SETGLOBAL R153 K270    ; 0x33C96296 := R153
485 [-]: CLOSURE   R153 26      ; R153 := closure(Function #27)
486 [-]: MOVE      R0 R38       ; R0 := R38
487 [-]: MOVE      R0 R31       ; R0 := R31
488 [-]: SETGLOBAL R153 K271    ; BottomResizeRollOver := R153
489 [-]: SETGLOBAL R153 K272    ; 0x1059705F := R153
490 [-]: CLOSURE   R153 27      ; R153 := closure(Function #28)
491 [-]: MOVE      R0 R38       ; R0 := R38
492 [-]: SETGLOBAL R153 K273    ; BottomResizeRollOut := R153
493 [-]: SETGLOBAL R153 K274    ; 0xAFF84A3 := R153
494 [-]: CLOSURE   R153 28      ; R153 := closure(Function #29)
495 [-]: MOVE      R0 R38       ; R0 := R38
496 [-]: MOVE      R0 R37       ; R0 := R37
497 [-]: SETGLOBAL R153 K275    ; BottomResizeMouseMove := R153
498 [-]: SETGLOBAL R153 K276    ; 0x97179836 := R153
499 [-]: CLOSURE   R153 29      ; R153 := closure(Function #30)
500 [-]: MOVE      R0 R38       ; R0 := R38
501 [-]: MOVE      R0 R31       ; R0 := R31
502 [-]: SETGLOBAL R153 K277    ; TopResizePressed := R153
503 [-]: SETGLOBAL R153 K278    ; 0x7C3F3981 := R153
504 [-]: CLOSURE   R153 30      ; R153 := closure(Function #31)
505 [-]: MOVE      R0 R38       ; R0 := R38
506 [-]: SETGLOBAL R153 K279    ; TopResizeRelease := R153
507 [-]: SETGLOBAL R153 K280    ; 0x91200B14 := R153
508 [-]: CLOSURE   R153 31      ; R153 := closure(Function #32)
509 [-]: MOVE      R0 R38       ; R0 := R38
510 [-]: MOVE      R0 R31       ; R0 := R31
511 [-]: SETGLOBAL R153 K281    ; TopResizeRollOver := R153
512 [-]: SETGLOBAL R153 K282    ; 0xC80DE3E6 := R153
513 [-]: CLOSURE   R153 32      ; R153 := closure(Function #33)
514 [-]: MOVE      R0 R38       ; R0 := R38
515 [-]: SETGLOBAL R153 K283    ; TopResizeRollOut := R153
516 [-]: SETGLOBAL R153 K284    ; 0x888147B1 := R153
517 [-]: CLOSURE   R153 33      ; R153 := closure(Function #34)
518 [-]: MOVE      R0 R38       ; R0 := R38
519 [-]: SETGLOBAL R153 K285    ; Global_onRelease := R153
520 [-]: SETGLOBAL R153 K286    ; 0xDD71B9AE := R153
521 [-]: CLOSURE   R153 34      ; R153 := closure(Function #35)
522 [-]: MOVE      R0 R38       ; R0 := R38
523 [-]: SETGLOBAL R153 K287    ; ChatScrubStartDrag := R153
524 [-]: SETGLOBAL R153 K288    ; 0xEED1AE46 := R153
525 [-]: CLOSURE   R153 35      ; R153 := closure(Function #36)
526 [-]: MOVE      R0 R38       ; R0 := R38
527 [-]: SETGLOBAL R153 K289    ; ChatScrubStopDrag := R153
528 [-]: SETGLOBAL R153 K290    ; 0x4C8308A0 := R153
529 [-]: CLOSURE   R153 36      ; R153 := closure(Function #37)
530 [-]: MOVE      R0 R38       ; R0 := R38
531 [-]: SETGLOBAL R153 K291    ; ChatScrollBarClick := R153
532 [-]: SETGLOBAL R153 K292    ; 0xD27A958B := R153
533 [-]: CLOSURE   R153 37      ; R153 := closure(Function #38)
534 [-]: MOVE      R0 R38       ; R0 := R38
535 [-]: MOVE      R0 R31       ; R0 := R31
536 [-]: SETGLOBAL R153 K293    ; UserLineRollOver := R153
537 [-]: SETGLOBAL R153 K294    ; 0x3FA30205 := R153
538 [-]: CLOSURE   R153 38      ; R153 := closure(Function #39)
539 [-]: MOVE      R0 R38       ; R0 := R38
540 [-]: SETGLOBAL R153 K295    ; UserLineRollOut := R153
541 [-]: SETGLOBAL R153 K296    ; 0xBF54FE42 := R153
542 [-]: CLOSURE   R153 39      ; R153 := closure(Function #40)
543 [-]: MOVE      R0 R38       ; R0 := R38
544 [-]: MOVE      R0 R31       ; R0 := R31
545 [-]: SETGLOBAL R153 K297    ; UserLinePressed := R153
546 [-]: SETGLOBAL R153 K298    ; 0x5504901B := R153
547 [-]: CLOSURE   R153 40      ; R153 := closure(Function #41)
548 [-]: MOVE      R0 R38       ; R0 := R38
549 [-]: MOVE      R0 R31       ; R0 := R31
550 [-]: SETGLOBAL R153 K299    ; EmoteRollOver := R153
551 [-]: SETGLOBAL R153 K300    ; 0x4056F6AF := R153
552 [-]: CLOSURE   R153 41      ; R153 := closure(Function #42)
553 [-]: MOVE      R0 R38       ; R0 := R38
554 [-]: SETGLOBAL R153 K301    ; EmoteRollOut := R153
555 [-]: SETGLOBAL R153 K302    ; 0x8ACF62DD := R153
556 [-]: CLOSURE   R153 42      ; R153 := closure(Function #43)
557 [-]: MOVE      R0 R38       ; R0 := R38
558 [-]: MOVE      R0 R31       ; R0 := R31
559 [-]: MOVE      R0 R20       ; R0 := R20
560 [-]: SETGLOBAL R153 K303    ; EmotePressed := R153
561 [-]: SETGLOBAL R153 K304    ; 0x5915CA1A := R153
562 [-]: CLOSURE   R153 43      ; R153 := closure(Function #44)
563 [-]: MOVE      R0 R38       ; R0 := R38
564 [-]: CLOSURE   R154 44      ; R154 := closure(Function #45)
565 [-]: MOVE      R0 R38       ; R0 := R38
566 [-]: MOVE      R0 R35       ; R0 := R35
567 [-]: CLOSURE   R155 45      ; R155 := closure(Function #46)
568 [-]: MOVE      R0 R153      ; R0 := R153
569 [-]: MOVE      R0 R154      ; R0 := R154
570 [-]: CLOSURE   R156 46      ; R156 := closure(Function #47)
571 [-]: MOVE      R0 R155      ; R0 := R155
572 [-]: MOVE      R0 R35       ; R0 := R35
573 [-]: MOVE      R0 R154      ; R0 := R154
574 [-]: MOVE      R0 R38       ; R0 := R38
575 [-]: CLOSURE   R157 47      ; R157 := closure(Function #48)
576 [-]: MOVE      R0 R38       ; R0 := R38
577 [-]: MOVE      R0 R151      ; R0 := R151
578 [-]: CLOSURE   R158 48      ; R158 := closure(Function #49)
579 [-]: MOVE      R0 R21       ; R0 := R21
580 [-]: MOVE      R0 R44       ; R0 := R44
581 [-]: CLOSURE   R159 49      ; R159 := closure(Function #50)
582 [-]: SETGLOBAL R159 K305    ; ConfirmWeaponRetrieve := R159
583 [-]: SETGLOBAL R159 K306    ; 0x895707FF := R159
584 [-]: CLOSURE   R159 50      ; R159 := closure(Function #51)
585 [-]: MOVE      R0 R31       ; R0 := R31
586 [-]: MOVE      R0 R157      ; R0 := R157
587 [-]: SETGLOBAL R159 K307    ; MinimizeButton := R159
588 [-]: SETGLOBAL R159 K308    ; 0x3A95AD5 := R159
589 [-]: CLOSURE   R159 51      ; R159 := closure(Function #52)
590 [-]: MOVE      R0 R38       ; R0 := R38
591 [-]: CLOSURE   R160 52      ; R160 := closure(Function #53)
592 [-]: MOVE      R0 R159      ; R0 := R159
593 [-]: SETGLOBAL R160 K309    ; IsMinimized := R160
594 [-]: SETGLOBAL R160 K310    ; 0x43E31CF8 := R160
595 [-]: CLOSURE   R160 53      ; R160 := closure(Function #54)
596 [-]: MOVE      R0 R28       ; R0 := R28
597 [-]: MOVE      R0 R35       ; R0 := R35
598 [-]: MOVE      R0 R71       ; R0 := R71
599 [-]: MOVE      R0 R38       ; R0 := R38
600 [-]: MOVE      R0 R20       ; R0 := R20
601 [-]: MOVE      R0 R3        ; R0 := R3
602 [-]: MOVE      R0 R36       ; R0 := R36
603 [-]: MOVE      R0 R19       ; R0 := R19
604 [-]: MOVE      R0 R73       ; R0 := R73
605 [-]: MOVE      R0 R2        ; R0 := R2
606 [-]: MOVE      R0 R4        ; R0 := R4
607 [-]: MOVE      R0 R30       ; R0 := R30
608 [-]: MOVE      R0 R115      ; R0 := R115
609 [-]: MOVE      R0 R152      ; R0 := R152
610 [-]: MOVE      R0 R114      ; R0 := R114
611 [-]: MOVE      R0 R72       ; R0 := R72
612 [-]: MOVE      R0 R113      ; R0 := R113
613 [-]: MOVE      R0 R75       ; R0 := R75
614 [-]: MOVE      R0 R116      ; R0 := R116
615 [-]: MOVE      R0 R22       ; R0 := R22
616 [-]: MOVE      R0 R76       ; R0 := R76
617 [-]: MOVE      R0 R123      ; R0 := R123
618 [-]: MOVE      R0 R124      ; R0 := R124
619 [-]: MOVE      R0 R125      ; R0 := R125
620 [-]: MOVE      R0 R126      ; R0 := R126
621 [-]: MOVE      R0 R127      ; R0 := R127
622 [-]: MOVE      R0 R128      ; R0 := R128
623 [-]: MOVE      R0 R129      ; R0 := R129
624 [-]: CLOSURE   R161 54      ; R161 := closure(Function #55)
625 [-]: MOVE      R0 R20       ; R0 := R20
626 [-]: MOVE      R0 R4        ; R0 := R4
627 [-]: MOVE      R0 R2        ; R0 := R2
628 [-]: MOVE      R0 R1        ; R0 := R1
629 [-]: MOVE      R0 R143      ; R0 := R143
630 [-]: CLOSURE   R162 55      ; R162 := closure(Function #56)
631 [-]: CLOSURE   R163 56      ; R163 := closure(Function #57)
632 [-]: MOVE      R0 R38       ; R0 := R38
633 [-]: MOVE      R0 R62       ; R0 := R62
634 [-]: MOVE      R0 R51       ; R0 := R51
635 [-]: MOVE      R0 R74       ; R0 := R74
636 [-]: MOVE      R0 R162      ; R0 := R162
637 [-]: CLOSURE   R164 57      ; R164 := closure(Function #58)
638 [-]: MOVE      R0 R44       ; R0 := R44
639 [-]: MOVE      R0 R21       ; R0 := R21
640 [-]: MOVE      R0 R38       ; R0 := R38
641 [-]: MOVE      R0 R95       ; R0 := R95
642 [-]: MOVE      R0 R94       ; R0 := R94
643 [-]: CLOSURE   R165 58      ; R165 := closure(Function #59)
644 [-]: NEWTABLE  R166 0 0     ; R166 := {}
645 [-]: LOADK     R167 K311    ; R167 := "GetOmegaCards"
646 [-]: CLOSURE   R168 59      ; R168 := closure(Function #60)
647 [-]: MOVE      R0 R23       ; R0 := R23
648 [-]: SETTABLE  R166 R167 R168; R166[R167] := R168
649 [-]: LOADK     R167 K312    ; R167 := "GetStepSequencers"
650 [-]: CLOSURE   R168 60      ; R168 := closure(Function #61)
651 [-]: MOVE      R0 R25       ; R0 := R25
652 [-]: MOVE      R0 R35       ; R0 := R35
653 [-]: SETTABLE  R166 R167 R168; R166[R167] := R168
654 [-]: LOADK     R167 K313    ; R167 := "GetModularWeapons"
655 [-]: CLOSURE   R168 61      ; R168 := closure(Function #62)
656 [-]: MOVE      R0 R35       ; R0 := R35
657 [-]: MOVE      R0 R0        ; R0 := R0
658 [-]: MOVE      R0 R20       ; R0 := R20
659 [-]: SETTABLE  R166 R167 R168; R166[R167] := R168
660 [-]: LOADK     R167 K314    ; R167 := "GetWeaponConfigs"
661 [-]: CLOSURE   R168 62      ; R168 := closure(Function #63)
662 [-]: SETTABLE  R166 R167 R168; R166[R167] := R168
663 [-]: LOADK     R167 K315    ; R167 := "CanLink"
664 [-]: CLOSURE   R168 63      ; R168 := closure(Function #64)
665 [-]: SETTABLE  R166 R167 R168; R166[R167] := R168
666 [-]: CLOSURE   R167 64      ; R167 := closure(Function #65)
667 [-]: MOVE      R0 R62       ; R0 := R62
668 [-]: MOVE      R0 R20       ; R0 := R20
669 [-]: MOVE      R0 R38       ; R0 := R38
670 [-]: CLOSURE   R168 65      ; R168 := closure(Function #66)
671 [-]: MOVE      R0 R167      ; R0 := R167
672 [-]: MOVE      R0 R62       ; R0 := R62
673 [-]: SETGLOBAL R168 K316    ; RecursiveOmegaReplace := R168
674 [-]: SETGLOBAL R168 K317    ; 0x467BE06F := R168
675 [-]: CLOSURE   R168 66      ; R168 := closure(Function #67)
676 [-]: MOVE      R0 R167      ; R0 := R167
677 [-]: MOVE      R0 R62       ; R0 := R62
678 [-]: SETGLOBAL R168 K318    ; RecursiveSongReplace := R168
679 [-]: SETGLOBAL R168 K319    ; 0x73466551 := R168
680 [-]: CLOSURE   R168 67      ; R168 := closure(Function #68)
681 [-]: MOVE      R0 R167      ; R0 := R167
682 [-]: MOVE      R0 R62       ; R0 := R62
683 [-]: SETGLOBAL R168 K320    ; RecursiveZawReplace := R168
684 [-]: SETGLOBAL R168 K321    ; 0xD7222712 := R168
685 [-]: CLOSURE   R168 68      ; R168 := closure(Function #69)
686 [-]: MOVE      R0 R167      ; R0 := R167
687 [-]: MOVE      R0 R62       ; R0 := R62
688 [-]: SETGLOBAL R168 K322    ; RecursiveAmpReplace := R168
689 [-]: SETGLOBAL R168 K323    ; 0x1D8C17E6 := R168
690 [-]: CLOSURE   R168 69      ; R168 := closure(Function #70)
691 [-]: MOVE      R0 R167      ; R0 := R167
692 [-]: MOVE      R0 R62       ; R0 := R62
693 [-]: SETGLOBAL R168 K324    ; RecursiveMoaPetReplace := R168
694 [-]: SETGLOBAL R168 K325    ; 0x8049261B := R168
695 [-]: CLOSURE   R168 70      ; R168 := closure(Function #71)
696 [-]: MOVE      R0 R167      ; R0 := R167
697 [-]: MOVE      R0 R62       ; R0 := R62
698 [-]: SETGLOBAL R168 K326    ; RecursiveKDriveReplace := R168
699 [-]: SETGLOBAL R168 K327    ; 0xA10674D7 := R168
700 [-]: CLOSURE   R168 71      ; R168 := closure(Function #72)
701 [-]: MOVE      R0 R167      ; R0 := R167
702 [-]: MOVE      R0 R62       ; R0 := R62
703 [-]: SETGLOBAL R168 K328    ; RecursiveKitgunReplace := R168
704 [-]: SETGLOBAL R168 K329    ; 0xDAA8E086 := R168
705 [-]: CLOSURE   R168 72      ; R168 := closure(Function #73)
706 [-]: MOVE      R0 R167      ; R0 := R167
707 [-]: MOVE      R0 R62       ; R0 := R62
708 [-]: SETGLOBAL R168 K330    ; RecursiveAppearanceReplace := R168
709 [-]: SETGLOBAL R168 K331    ; 0x2958814D := R168
710 [-]: CLOSURE   R168 73      ; R168 := closure(Function #74)
711 [-]: MOVE      R0 R167      ; R0 := R167
712 [-]: MOVE      R0 R62       ; R0 := R62
713 [-]: SETGLOBAL R168 K332    ; RecursiveModConfigReplace := R168
714 [-]: SETGLOBAL R168 K333    ; 0x828B804D := R168
715 [-]: CLOSURE   R168 74      ; R168 := closure(Function #75)
716 [-]: MOVE      R0 R167      ; R0 := R167
717 [-]: MOVE      R0 R62       ; R0 := R62
718 [-]: SETGLOBAL R168 K334    ; RecursiveShawzinReplace := R168
719 [-]: SETGLOBAL R168 K335    ; 0x9ED09D34 := R168
720 [-]: CLOSURE   R168 75      ; R168 := closure(Function #76)
721 [-]: MOVE      R0 R38       ; R0 := R38
722 [-]: MOVE      R0 R6        ; R0 := R6
723 [-]: MOVE      R0 R20       ; R0 := R20
724 [-]: CLOSURE   R169 76      ; R169 := closure(Function #77)
725 [-]: MOVE      R0 R38       ; R0 := R38
726 [-]: CLOSURE   R170 77      ; R170 := closure(Function #78)
727 [-]: MOVE      R0 R38       ; R0 := R38
728 [-]: MOVE      R0 R169      ; R0 := R169
729 [-]: CLOSURE   R171 78      ; R171 := closure(Function #79)
730 [-]: MOVE      R0 R38       ; R0 := R38
731 [-]: MOVE      R0 R35       ; R0 := R35
732 [-]: MOVE      R0 R96       ; R0 := R96
733 [-]: MOVE      R0 R169      ; R0 := R169
734 [-]: CLOSURE   R172 79      ; R172 := closure(Function #80)
735 [-]: MOVE      R0 R171      ; R0 := R171
736 [-]: MOVE      R0 R134      ; R0 := R134
737 [-]: SETGLOBAL R172 K336    ; ConfirmModeratorKickBan := R172
738 [-]: SETGLOBAL R172 K337    ; 0x8C648EC1 := R172
739 [-]: CLOSURE   R172 80      ; R172 := closure(Function #81)
740 [-]: MOVE      R0 R20       ; R0 := R20
741 [-]: CLOSURE   R173 81      ; R173 := closure(Function #82)
742 [-]: MOVE      R0 R34       ; R0 := R34
743 [-]: MOVE      R0 R38       ; R0 := R38
744 [-]: MOVE      R0 R134      ; R0 := R134
745 [-]: MOVE      R0 R172      ; R0 := R172
746 [-]: MOVE      R0 R171      ; R0 := R171
747 [-]: CLOSURE   R174 82      ; R174 := closure(Function #83)
748 [-]: MOVE      R0 R38       ; R0 := R38
749 [-]: MOVE      R0 R20       ; R0 := R20
750 [-]: MOVE      R0 R96       ; R0 := R96
751 [-]: SETGLOBAL R174 K338    ; RemoveFromChatPlayerIDResult := R174
752 [-]: SETGLOBAL R174 K339    ; 0xDD50E4A5 := R174
753 [-]: CLOSURE   R174 83      ; R174 := closure(Function #84)
754 [-]: MOVE      R0 R96       ; R0 := R96
755 [-]: MOVE      R0 R21       ; R0 := R21
756 [-]: MOVE      R0 R38       ; R0 := R38
757 [-]: SETGLOBAL R174 K340    ; OnGetPlayerGuildRank := R174
758 [-]: SETGLOBAL R174 K341    ; 0xCC5D6611 := R174
759 [-]: CLOSURE   R174 84      ; R174 := closure(Function #85)
760 [-]: MOVE      R0 R34       ; R0 := R34
761 [-]: MOVE      R0 R53       ; R0 := R53
762 [-]: MOVE      R0 R170      ; R0 := R170
763 [-]: MOVE      R0 R150      ; R0 := R150
764 [-]: CLOSURE   R175 85      ; R175 := closure(Function #86)
765 [-]: MOVE      R0 R34       ; R0 := R34
766 [-]: MOVE      R0 R53       ; R0 := R53
767 [-]: MOVE      R0 R173      ; R0 := R173
768 [-]: MOVE      R0 R150      ; R0 := R150
769 [-]: CLOSURE   R176 86      ; R176 := closure(Function #87)
770 [-]: MOVE      R0 R32       ; R0 := R32
771 [-]: MOVE      R0 R38       ; R0 := R38
772 [-]: MOVE      R0 R31       ; R0 := R31
773 [-]: MOVE      R0 R20       ; R0 := R20
774 [-]: CLOSURE   R177 87      ; R177 := closure(Function #88)
775 [-]: MOVE      R0 R96       ; R0 := R96
776 [-]: SETGLOBAL R177 K342    ; BanPlayer := R177
777 [-]: SETGLOBAL R177 K343    ; 0xE14EBB92 := R177
778 [-]: CLOSURE   R177 88      ; R177 := closure(Function #89)
779 [-]: MOVE      R0 R34       ; R0 := R34
780 [-]: MOVE      R0 R20       ; R0 := R20
781 [-]: MOVE      R0 R96       ; R0 := R96
782 [-]: MOVE      R0 R38       ; R0 := R38
783 [-]: MOVE      R0 R54       ; R0 := R54
784 [-]: MOVE      R0 R176      ; R0 := R176
785 [-]: MOVE      R0 R21       ; R0 := R21
786 [-]: CLOSURE   R178 89      ; R178 := closure(Function #90)
787 [-]: CLOSURE   R179 90      ; R179 := closure(Function #91)
788 [-]: MOVE      R0 R20       ; R0 := R20
789 [-]: CLOSURE   R180 91      ; R180 := closure(Function #92)
790 [-]: CLOSURE   R181 92      ; R181 := closure(Function #93)
791 [-]: MOVE      R0 R180      ; R0 := R180
792 [-]: CLOSURE   R182 93      ; R182 := closure(Function #94)
793 [-]: MOVE      R0 R27       ; R0 := R27
794 [-]: MOVE      R0 R62       ; R0 := R62
795 [-]: MOVE      R0 R70       ; R0 := R70
796 [-]: MOVE      R0 R20       ; R0 := R20
797 [-]: MOVE      R0 R159      ; R0 := R159
798 [-]: MOVE      R0 R100      ; R0 := R100
799 [-]: SETGLOBAL R182 K344    ; LinkAppearance := R182
800 [-]: SETGLOBAL R182 K345    ; 0xC1F2FE12 := R182
801 [-]: CLOSURE   R182 94      ; R182 := closure(Function #95)
802 [-]: MOVE      R0 R27       ; R0 := R27
803 [-]: MOVE      R0 R62       ; R0 := R62
804 [-]: MOVE      R0 R70       ; R0 := R70
805 [-]: MOVE      R0 R20       ; R0 := R20
806 [-]: MOVE      R0 R159      ; R0 := R159
807 [-]: MOVE      R0 R100      ; R0 := R100
808 [-]: SETGLOBAL R182 K346    ; LinkModConfig := R182
809 [-]: SETGLOBAL R182 K347    ; 0x1F8B97F7 := R182
810 [-]: CLOSURE   R182 95      ; R182 := closure(Function #96)
811 [-]: MOVE      R0 R62       ; R0 := R62
812 [-]: MOVE      R0 R70       ; R0 := R70
813 [-]: MOVE      R0 R20       ; R0 := R20
814 [-]: MOVE      R0 R159      ; R0 := R159
815 [-]: MOVE      R0 R100      ; R0 := R100
816 [-]: SETGLOBAL R182 K348    ; LinkShawzin := R182
817 [-]: SETGLOBAL R182 K349    ; 0x1DB9B862 := R182
818 [-]: CLOSURE   R182 96      ; R182 := closure(Function #97)
819 [-]: MOVE      R0 R38       ; R0 := R38
820 [-]: MOVE      R0 R36       ; R0 := R36
821 [-]: MOVE      R0 R70       ; R0 := R70
822 [-]: MOVE      R0 R20       ; R0 := R20
823 [-]: MOVE      R0 R29       ; R0 := R29
824 [-]: MOVE      R0 R163      ; R0 := R163
825 [-]: MOVE      R0 R178      ; R0 := R178
826 [-]: MOVE      R0 R6        ; R0 := R6
827 [-]: MOVE      R0 R146      ; R0 := R146
828 [-]: MOVE      R0 R144      ; R0 := R144
829 [-]: MOVE      R0 R166      ; R0 := R166
830 [-]: MOVE      R0 R62       ; R0 := R62
831 [-]: MOVE      R0 R54       ; R0 := R54
832 [-]: MOVE      R0 R31       ; R0 := R31
833 [-]: MOVE      R0 R176      ; R0 := R176
834 [-]: MOVE      R0 R80       ; R0 := R80
835 [-]: MOVE      R0 R167      ; R0 := R167
836 [-]: MOVE      R0 R25       ; R0 := R25
837 [-]: MOVE      R0 R179      ; R0 := R179
838 [-]: MOVE      R0 R148      ; R0 := R148
839 [-]: MOVE      R0 R81       ; R0 := R81
840 [-]: MOVE      R0 R82       ; R0 := R82
841 [-]: MOVE      R0 R83       ; R0 := R83
842 [-]: MOVE      R0 R84       ; R0 := R84
843 [-]: MOVE      R0 R85       ; R0 := R85
844 [-]: MOVE      R0 R162      ; R0 := R162
845 [-]: MOVE      R0 R35       ; R0 := R35
846 [-]: MOVE      R0 R77       ; R0 := R77
847 [-]: MOVE      R0 R22       ; R0 := R22
848 [-]: MOVE      R0 R16       ; R0 := R16
849 [-]: MOVE      R0 R17       ; R0 := R17
850 [-]: MOVE      R0 R21       ; R0 := R21
851 [-]: MOVE      R0 R106      ; R0 := R106
852 [-]: MOVE      R0 R19       ; R0 := R19
853 [-]: MOVE      R0 R164      ; R0 := R164
854 [-]: MOVE      R0 R97       ; R0 := R97
855 [-]: MOVE      R0 R173      ; R0 := R173
856 [-]: MOVE      R0 R177      ; R0 := R177
857 [-]: MOVE      R0 R165      ; R0 := R165
858 [-]: MOVE      R0 R168      ; R0 := R168
859 [-]: MOVE      R0 R108      ; R0 := R108
860 [-]: MOVE      R0 R138      ; R0 := R138
861 [-]: MOVE      R0 R143      ; R0 := R143
862 [-]: MOVE      R0 R158      ; R0 := R158
863 [-]: MOVE      R0 R1        ; R0 := R1
864 [-]: MOVE      R0 R132      ; R0 := R132
865 [-]: MOVE      R0 R27       ; R0 := R27
866 [-]: MOVE      R0 R78       ; R0 := R78
867 [-]: MOVE      R0 R76       ; R0 := R76
868 [-]: MOVE      R0 R51       ; R0 := R51
869 [-]: MOVE      R0 R112      ; R0 := R112
870 [-]: MOVE      R0 R57       ; R0 := R57
871 [-]: MOVE      R0 R61       ; R0 := R61
872 [-]: MOVE      R0 R44       ; R0 := R44
873 [-]: MOVE      R0 R135      ; R0 := R135
874 [-]: MOVE      R0 R109      ; R0 := R109
875 [-]: CLOSURE   R183 97      ; R183 := closure(Function #98)
876 [-]: MOVE      R0 R38       ; R0 := R38
877 [-]: SETGLOBAL R183 K350    ; ChatChannelJoinUserList := R183
878 [-]: SETGLOBAL R183 K351    ; 0x9A6F0EFD := R183
879 [-]: CLOSURE   R183 98      ; R183 := closure(Function #99)
880 [-]: MOVE      R0 R38       ; R0 := R38
881 [-]: SETGLOBAL R183 K352    ; ChatChannelJoin := R183
882 [-]: SETGLOBAL R183 K353    ; 0x42E40AC9 := R183
883 [-]: CLOSURE   R183 99      ; R183 := closure(Function #100)
884 [-]: MOVE      R0 R38       ; R0 := R38
885 [-]: SETGLOBAL R183 K354    ; ChatChannelLeft := R183
886 [-]: SETGLOBAL R183 K355    ; 0xF3B668B1 := R183
887 [-]: CLOSURE   R183 100     ; R183 := closure(Function #101)
888 [-]: MOVE      R0 R38       ; R0 := R38
889 [-]: SETGLOBAL R183 K356    ; ChatMessageReceived := R183
890 [-]: SETGLOBAL R183 K357    ; 0xBA9DF3EC := R183
891 [-]: CLOSURE   R183 101     ; R183 := closure(Function #102)
892 [-]: MOVE      R0 R38       ; R0 := R38
893 [-]: SETGLOBAL R183 K358    ; InvalidWhisperTarget := R183
894 [-]: SETGLOBAL R183 K359    ; 0x61C0240C := R183
895 [-]: CLOSURE   R183 102     ; R183 := closure(Function #103)
896 [-]: MOVE      R0 R38       ; R0 := R38
897 [-]: MOVE      R0 R20       ; R0 := R20
898 [-]: SETGLOBAL R183 K360    ; OnClanStateChanged := R183
899 [-]: SETGLOBAL R183 K361    ; 0x850D7ED0 := R183
900 [-]: CLOSURE   R183 103     ; R183 := closure(Function #104)
901 [-]: MOVE      R0 R38       ; R0 := R38
902 [-]: MOVE      R0 R31       ; R0 := R31
903 [-]: SETGLOBAL R183 K362    ; WindowTabSelected := R183
904 [-]: SETGLOBAL R183 K363    ; 0xDCC684D2 := R183
905 [-]: CLOSURE   R183 104     ; R183 := closure(Function #105)
906 [-]: MOVE      R0 R38       ; R0 := R38
907 [-]: MOVE      R0 R31       ; R0 := R31
908 [-]: SETGLOBAL R183 K364    ; WindowTabFocused := R183
909 [-]: SETGLOBAL R183 K365    ; 0xA0E507B6 := R183
910 [-]: CLOSURE   R183 105     ; R183 := closure(Function #106)
911 [-]: MOVE      R0 R38       ; R0 := R38
912 [-]: SETGLOBAL R183 K366    ; WindowTabUnfocused := R183
913 [-]: SETGLOBAL R183 K367    ; 0x905195D8 := R183
914 [-]: CLOSURE   R183 106     ; R183 := closure(Function #107)
915 [-]: MOVE      R0 R38       ; R0 := R38
916 [-]: MOVE      R0 R31       ; R0 := R31
917 [-]: SETGLOBAL R183 K368    ; EntryFocused := R183
918 [-]: SETGLOBAL R183 K369    ; 0x381FBE06 := R183
919 [-]: CLOSURE   R183 107     ; R183 := closure(Function #108)
920 [-]: MOVE      R0 R38       ; R0 := R38
921 [-]: SETGLOBAL R183 K370    ; EntryUnfocused := R183
922 [-]: SETGLOBAL R183 K371    ; 0x698CC3D4 := R183
923 [-]: CLOSURE   R183 108     ; R183 := closure(Function #109)
924 [-]: MOVE      R0 R38       ; R0 := R38
925 [-]: MOVE      R0 R31       ; R0 := R31
926 [-]: MOVE      R0 R20       ; R0 := R20
927 [-]: MOVE      R0 R159      ; R0 := R159
928 [-]: MOVE      R0 R100      ; R0 := R100
929 [-]: SETGLOBAL R183 K372    ; EntryPressed := R183
930 [-]: SETGLOBAL R183 K373    ; 0x5204B69A := R183
931 [-]: CLOSURE   R183 109     ; R183 := closure(Function #110)
932 [-]: MOVE      R0 R38       ; R0 := R38
933 [-]: SETGLOBAL R183 K374    ; EntryReleased := R183
934 [-]: SETGLOBAL R183 K375    ; 0xF8E76119 := R183
935 [-]: CLOSURE   R100 110     ; R100 := closure(Function #111)
936 [-]: MOVE      R0 R38       ; R0 := R38
937 [-]: MOVE      R0 R20       ; R0 := R20
938 [-]: CLOSURE   R183 111     ; R183 := closure(Function #112)
939 [-]: MOVE      R0 R31       ; R0 := R31
940 [-]: MOVE      R0 R100      ; R0 := R100
941 [-]: SETGLOBAL R183 K376    ; MaximizeButton := R183
942 [-]: SETGLOBAL R183 K377    ; 0xC712078B := R183
943 [-]: CLOSURE   R183 112     ; R183 := closure(Function #113)
944 [-]: MOVE      R0 R38       ; R0 := R38
945 [-]: SETGLOBAL R183 K378    ; IsMaximized := R183
946 [-]: SETGLOBAL R183 K379    ; 0x779AD6C := R183
947 [-]: CLOSURE   R183 113     ; R183 := closure(Function #114)
948 [-]: MOVE      R0 R38       ; R0 := R38
949 [-]: SETGLOBAL R183 K380    ; IsFull := R183
950 [-]: SETGLOBAL R183 K381    ; 0xD44D2F06 := R183
951 [-]: CLOSURE   R183 114     ; R183 := closure(Function #115)
952 [-]: SETGLOBAL R183 K382    ; AlphabetExpanderFocused := R183
953 [-]: SETGLOBAL R183 K383    ; 0x13C72B42 := R183
954 [-]: CLOSURE   R183 115     ; R183 := closure(Function #116)
955 [-]: SETGLOBAL R183 K384    ; AlphabetExpanderUnfocused := R183
956 [-]: SETGLOBAL R183 K385    ; 0x4E5CF1B9 := R183
957 [-]: CLOSURE   R183 116     ; R183 := closure(Function #117)
958 [-]: MOVE      R0 R31       ; R0 := R31
959 [-]: MOVE      R0 R38       ; R0 := R38
960 [-]: MOVE      R0 R20       ; R0 := R20
961 [-]: CLOSURE   R184 117     ; R184 := closure(Function #118)
962 [-]: MOVE      R0 R183      ; R0 := R183
963 [-]: SETGLOBAL R184 K386    ; AlphabetExpanderPressed := R184
964 [-]: SETGLOBAL R184 K387    ; 0x6ED8B552 := R184
965 [-]: CLOSURE   R184 118     ; R184 := closure(Function #119)
966 [-]: MOVE      R0 R31       ; R0 := R31
967 [-]: MOVE      R0 R38       ; R0 := R38
968 [-]: SETGLOBAL R184 K388    ; AlphabetIndexRollOver := R184
969 [-]: SETGLOBAL R184 K389    ; 0xB5D4C7D7 := R184
970 [-]: CLOSURE   R184 119     ; R184 := closure(Function #120)
971 [-]: MOVE      R0 R31       ; R0 := R31
972 [-]: MOVE      R0 R38       ; R0 := R38
973 [-]: SETGLOBAL R184 K390    ; AlphabetIndexRollOut := R184
974 [-]: SETGLOBAL R184 K391    ; 0xAD9F867E := R184
975 [-]: CLOSURE   R184 120     ; R184 := closure(Function #121)
976 [-]: MOVE      R0 R31       ; R0 := R31
977 [-]: MOVE      R0 R38       ; R0 := R38
978 [-]: SETGLOBAL R184 K392    ; AlphabetIndexPressed := R184
979 [-]: SETGLOBAL R184 K393    ; 0x7F590DE9 := R184
980 [-]: CLOSURE   R184 121     ; R184 := closure(Function #122)
981 [-]: MOVE      R0 R38       ; R0 := R38
982 [-]: SETGLOBAL R184 K394    ; ChatConnectionChanged := R184
983 [-]: SETGLOBAL R184 K395    ; 0x27188C66 := R184
984 [-]: CLOSURE   R184 122     ; R184 := closure(Function #123)
985 [-]: MOVE      R0 R20       ; R0 := R20
986 [-]: MOVE      R0 R38       ; R0 := R38
987 [-]: MOVE      R0 R138      ; R0 := R138
988 [-]: MOVE      R0 R32       ; R0 := R32
989 [-]: MOVE      R0 R37       ; R0 := R37
990 [-]: MOVE      R0 R28       ; R0 := R28
991 [-]: MOVE      R0 R5        ; R0 := R5
992 [-]: MOVE      R0 R143      ; R0 := R143
993 [-]: MOVE      R0 R61       ; R0 := R61
994 [-]: MOVE      R0 R60       ; R0 := R60
995 [-]: MOVE      R0 R4        ; R0 := R4
996 [-]: MOVE      R0 R76       ; R0 := R76
997 [-]: MOVE      R0 R35       ; R0 := R35
998 [-]: MOVE      R0 R56       ; R0 := R56
999 [-]: MOVE      R0 R36       ; R0 := R36
1000 [-]: MOVE      R0 R41       ; R0 := R41
1001 [-]: MOVE      R0 R40       ; R0 := R40
1002 [-]: MOVE      R0 R55       ; R0 := R55
1003 [-]: MOVE      R0 R2        ; R0 := R2
1004 [-]: MOVE      R0 R160      ; R0 := R160
1005 [-]: MOVE      R0 R161      ; R0 := R161
1006 [-]: MOVE      R0 R107      ; R0 := R107
1007 [-]: MOVE      R0 R155      ; R0 := R155
1008 [-]: MOVE      R0 R62       ; R0 := R62
1009 [-]: MOVE      R0 R163      ; R0 := R163
1010 [-]: MOVE      R0 R164      ; R0 := R164
1011 [-]: MOVE      R0 R158      ; R0 := R158
1012 [-]: MOVE      R0 R182      ; R0 := R182
1013 [-]: MOVE      R0 R159      ; R0 := R159
1014 [-]: MOVE      R0 R112      ; R0 := R112
1015 [-]: MOVE      R0 R103      ; R0 := R103
1016 [-]: MOVE      R0 R59       ; R0 := R59
1017 [-]: MOVE      R0 R17       ; R0 := R17
1018 [-]: MOVE      R0 R139      ; R0 := R139
1019 [-]: MOVE      R0 R142      ; R0 := R142
1020 [-]: MOVE      R0 R21       ; R0 := R21
1021 [-]: MOVE      R0 R44       ; R0 := R44
1022 [-]: MOVE      R0 R42       ; R0 := R42
1023 [-]: MOVE      R0 R49       ; R0 := R49
1024 [-]: MOVE      R0 R91       ; R0 := R91
1025 [-]: MOVE      R0 R110      ; R0 := R110
1026 [-]: MOVE      R0 R111      ; R0 := R111
1027 [-]: MOVE      R0 R45       ; R0 := R45
1028 [-]: MOVE      R0 R43       ; R0 := R43
1029 [-]: MOVE      R0 R46       ; R0 := R46
1030 [-]: MOVE      R0 R47       ; R0 := R47
1031 [-]: MOVE      R0 R48       ; R0 := R48
1032 [-]: MOVE      R0 R14       ; R0 := R14
1033 [-]: MOVE      R0 R15       ; R0 := R15
1034 [-]: MOVE      R0 R13       ; R0 := R13
1035 [-]: MOVE      R0 R11       ; R0 := R11
1036 [-]: MOVE      R0 R12       ; R0 := R12
1037 [-]: MOVE      R0 R117      ; R0 := R117
1038 [-]: MOVE      R0 R118      ; R0 := R118
1039 [-]: MOVE      R0 R6        ; R0 := R6
1040 [-]: MOVE      R0 R120      ; R0 := R120
1041 [-]: MOVE      R0 R101      ; R0 := R101
1042 [-]: MOVE      R0 R9        ; R0 := R9
1043 [-]: MOVE      R0 R53       ; R0 := R53
1044 [-]: CLOSURE   R185 123     ; R185 := closure(Function #124)
1045 [-]: MOVE      R0 R52       ; R0 := R52
1046 [-]: MOVE      R0 R55       ; R0 := R55
1047 [-]: MOVE      R0 R56       ; R0 := R56
1048 [-]: MOVE      R0 R38       ; R0 := R38
1049 [-]: CLOSURE   R186 124     ; R186 := closure(Function #125)
1050 [-]: MOVE      R0 R55       ; R0 := R55
1051 [-]: MOVE      R0 R56       ; R0 := R56
1052 [-]: MOVE      R0 R185      ; R0 := R185
1053 [-]: CLOSURE   R187 125     ; R187 := closure(Function #126)
1054 [-]: MOVE      R0 R38       ; R0 := R38
1055 [-]: SETGLOBAL R187 K396    ; onHudMarginsChanged := R187
1056 [-]: SETGLOBAL R187 K397    ; 0x7313D3F8 := R187
1057 [-]: CLOSURE   R187 126     ; R187 := closure(Function #127)
1058 [-]: MOVE      R0 R56       ; R0 := R56
1059 [-]: MOVE      R0 R186      ; R0 := R186
1060 [-]: MOVE      R0 R38       ; R0 := R38
1061 [-]: SETGLOBAL R187 K398    ; onViewportSizeChanged := R187
1062 [-]: SETGLOBAL R187 K399    ; 0x3A900427 := R187
1063 [-]: CLOSURE   R187 127     ; R187 := closure(Function #128)
1064 [-]: MOVE      R0 R38       ; R0 := R38
1065 [-]: MOVE      R0 R35       ; R0 := R35
1066 [-]: MOVE      R0 R63       ; R0 := R63
1067 [-]: SETGLOBAL R187 K400    ; Shutdown := R187
1068 [-]: SETGLOBAL R187 K401    ; 0x3C577FA3 := R187
1069 [-]: CLOSURE   R187 128     ; R187 := closure(Function #129)
1070 [-]: MOVE      R0 R53       ; R0 := R53
1071 [-]: MOVE      R0 R31       ; R0 := R31
1072 [-]: SETGLOBAL R187 K402    ; ContextItemFocused := R187
1073 [-]: SETGLOBAL R187 K403    ; 0x4EBFF264 := R187
1074 [-]: CLOSURE   R187 129     ; R187 := closure(Function #130)
1075 [-]: MOVE      R0 R53       ; R0 := R53
1076 [-]: SETGLOBAL R187 K404    ; ContextItemUnfocused := R187
1077 [-]: SETGLOBAL R187 K405    ; 0xDF83E3EA := R187
1078 [-]: CLOSURE   R187 130     ; R187 := closure(Function #131)
1079 [-]: MOVE      R0 R53       ; R0 := R53
1080 [-]: MOVE      R0 R31       ; R0 := R31
1081 [-]: SETGLOBAL R187 K406    ; ContextItemPressed := R187
1082 [-]: SETGLOBAL R187 K407    ; 0xA1FDADD5 := R187
1083 [-]: CLOSURE   R187 131     ; R187 := closure(Function #132)
1084 [-]: MOVE      R0 R53       ; R0 := R53
1085 [-]: MOVE      R0 R28       ; R0 := R28
1086 [-]: MOVE      R0 R151      ; R0 := R151
1087 [-]: MOVE      R0 R38       ; R0 := R38
1088 [-]: MOVE      R0 R4        ; R0 := R4
1089 [-]: CLOSURE   R188 132     ; R188 := closure(Function #133)
1090 [-]: MOVE      R0 R69       ; R0 := R69
1091 [-]: MOVE      R0 R66       ; R0 := R66
1092 [-]: CLOSURE   R189 133     ; R189 := closure(Function #134)
1093 [-]: MOVE      R0 R21       ; R0 := R21
1094 [-]: CLOSURE   R190 134     ; R190 := closure(Function #135)
1095 [-]: CLOSURE   R191 135     ; R191 := closure(Function #136)
1096 [-]: MOVE      R0 R20       ; R0 := R20
1097 [-]: MOVE      R0 R90       ; R0 := R90
1098 [-]: CLOSURE   R192 136     ; R192 := closure(Function #137)
1099 [-]: MOVE      R0 R20       ; R0 := R20
1100 [-]: CLOSURE   R193 137     ; R193 := closure(Function #138)
1101 [-]: MOVE      R0 R21       ; R0 := R21
1102 [-]: CLOSURE   R194 138     ; R194 := closure(Function #139)
1103 [-]: MOVE      R0 R21       ; R0 := R21
1104 [-]: CLOSURE   R195 139     ; R195 := closure(Function #140)
1105 [-]: MOVE      R0 R35       ; R0 := R35
1106 [-]: SETGLOBAL R195 K408    ; OnSyncInbox := R195
1107 [-]: SETGLOBAL R195 K409    ; 0xD2944B04 := R195
1108 [-]: CLOSURE   R195 140     ; R195 := closure(Function #141)
1109 [-]: MOVE      R0 R38       ; R0 := R38
1110 [-]: CLOSURE   R196 141     ; R196 := closure(Function #142)
1111 [-]: MOVE      R0 R69       ; R0 := R69
1112 [-]: MOVE      R0 R66       ; R0 := R66
1113 [-]: MOVE      R0 R35       ; R0 := R35
1114 [-]: MOVE      R0 R189      ; R0 := R189
1115 [-]: MOVE      R0 R190      ; R0 := R190
1116 [-]: MOVE      R0 R192      ; R0 := R192
1117 [-]: MOVE      R0 R193      ; R0 := R193
1118 [-]: MOVE      R0 R191      ; R0 := R191
1119 [-]: MOVE      R0 R194      ; R0 := R194
1120 [-]: MOVE      R0 R71       ; R0 := R71
1121 [-]: MOVE      R0 R195      ; R0 := R195
1122 [-]: CLOSURE   R197 142     ; R197 := closure(Function #143)
1123 [-]: MOVE      R0 R41       ; R0 := R41
1124 [-]: MOVE      R0 R89       ; R0 := R89
1125 [-]: MOVE      R0 R88       ; R0 := R88
1126 [-]: MOVE      R0 R20       ; R0 := R20
1127 [-]: MOVE      R0 R71       ; R0 := R71
1128 [-]: CLOSURE   R198 143     ; R198 := closure(Function #144)
1129 [-]: MOVE      R0 R35       ; R0 := R35
1130 [-]: MOVE      R0 R141      ; R0 := R141
1131 [-]: MOVE      R0 R64       ; R0 := R64
1132 [-]: MOVE      R0 R133      ; R0 := R133
1133 [-]: MOVE      R0 R188      ; R0 := R188
1134 [-]: MOVE      R0 R65       ; R0 := R65
1135 [-]: MOVE      R0 R69       ; R0 := R69
1136 [-]: MOVE      R0 R66       ; R0 := R66
1137 [-]: MOVE      R0 R67       ; R0 := R67
1138 [-]: MOVE      R0 R68       ; R0 := R68
1139 [-]: MOVE      R0 R196      ; R0 := R196
1140 [-]: MOVE      R0 R197      ; R0 := R197
1141 [-]: SETGLOBAL R198 K410    ; OnSyncWorldState := R198
1142 [-]: SETGLOBAL R198 K411    ; 0xFF9201AF := R198
1143 [-]: CLOSURE   R198 144     ; R198 := closure(Function #145)
1144 [-]: MOVE      R0 R38       ; R0 := R38
1145 [-]: MOVE      R0 R36       ; R0 := R36
1146 [-]: MOVE      R0 R107      ; R0 := R107
1147 [-]: MOVE      R0 R92       ; R0 := R92
1148 [-]: MOVE      R0 R51       ; R0 := R51
1149 [-]: MOVE      R0 R45       ; R0 := R45
1150 [-]: MOVE      R0 R46       ; R0 := R46
1151 [-]: MOVE      R0 R47       ; R0 := R47
1152 [-]: MOVE      R0 R48       ; R0 := R48
1153 [-]: MOVE      R0 R49       ; R0 := R49
1154 [-]: MOVE      R0 R52       ; R0 := R52
1155 [-]: MOVE      R0 R50       ; R0 := R50
1156 [-]: MOVE      R0 R8        ; R0 := R8
1157 [-]: MOVE      R0 R7        ; R0 := R7
1158 [-]: MOVE      R0 R57       ; R0 := R57
1159 [-]: MOVE      R0 R58       ; R0 := R58
1160 [-]: MOVE      R0 R20       ; R0 := R20
1161 [-]: MOVE      R0 R59       ; R0 := R59
1162 [-]: MOVE      R0 R60       ; R0 := R60
1163 [-]: MOVE      R0 R61       ; R0 := R61
1164 [-]: CLOSURE   R199 145     ; R199 := closure(Function #146)
1165 [-]: MOVE      R0 R198      ; R0 := R198
1166 [-]: MOVE      R0 R186      ; R0 := R186
1167 [-]: SETGLOBAL R199 K412    ; OnProfileSaved := R199
1168 [-]: SETGLOBAL R199 K413    ; 0xF048D49D := R199
1169 [-]: CLOSURE   R199 146     ; R199 := closure(Function #147)
1170 [-]: SETGLOBAL R199 K414    ; OnInitPresenceResync := R199
1171 [-]: SETGLOBAL R199 K415    ; 0x86BCD2 := R199
1172 [-]: CLOSURE   R199 147     ; R199 := closure(Function #148)
1173 [-]: MOVE      R0 R124      ; R0 := R124
1174 [-]: MOVE      R0 R80       ; R0 := R80
1175 [-]: MOVE      R0 R166      ; R0 := R166
1176 [-]: CLOSURE   R200 148     ; R200 := closure(Function #149)
1177 [-]: MOVE      R0 R199      ; R0 := R199
1178 [-]: SETGLOBAL R200 K416    ; UpdateOmegaSuggestTree := R200
1179 [-]: SETGLOBAL R200 K417    ; 0x6A2FE79A := R200
1180 [-]: CLOSURE   R200 149     ; R200 := closure(Function #150)
1181 [-]: MOVE      R0 R125      ; R0 := R125
1182 [-]: MOVE      R0 R81       ; R0 := R81
1183 [-]: MOVE      R0 R126      ; R0 := R126
1184 [-]: MOVE      R0 R82       ; R0 := R82
1185 [-]: MOVE      R0 R127      ; R0 := R127
1186 [-]: MOVE      R0 R83       ; R0 := R83
1187 [-]: MOVE      R0 R128      ; R0 := R128
1188 [-]: MOVE      R0 R84       ; R0 := R84
1189 [-]: MOVE      R0 R129      ; R0 := R129
1190 [-]: MOVE      R0 R85       ; R0 := R85
1191 [-]: MOVE      R0 R166      ; R0 := R166
1192 [-]: CLOSURE   R201 150     ; R201 := closure(Function #151)
1193 [-]: MOVE      R0 R200      ; R0 := R200
1194 [-]: SETGLOBAL R201 K418    ; UpdateModularSuggestTree := R201
1195 [-]: SETGLOBAL R201 K419    ; 0x62DA7113 := R201
1196 [-]: CLOSURE   R201 151     ; R201 := closure(Function #152)
1197 [-]: MOVE      R0 R39       ; R0 := R39
1198 [-]: MOVE      R0 R40       ; R0 := R40
1199 [-]: MOVE      R0 R21       ; R0 := R21
1200 [-]: MOVE      R0 R41       ; R0 := R41
1201 [-]: MOVE      R0 R44       ; R0 := R44
1202 [-]: MOVE      R0 R43       ; R0 := R43
1203 [-]: MOVE      R0 R42       ; R0 := R42
1204 [-]: CLOSURE   R202 152     ; R202 := closure(Function #153)
1205 [-]: MOVE      R0 R135      ; R0 := R135
1206 [-]: MOVE      R0 R71       ; R0 := R71
1207 [-]: MOVE      R0 R201      ; R0 := R201
1208 [-]: MOVE      R0 R133      ; R0 := R133
1209 [-]: MOVE      R0 R21       ; R0 := R21
1210 [-]: MOVE      R0 R86       ; R0 := R86
1211 [-]: MOVE      R0 R20       ; R0 := R20
1212 [-]: MOVE      R0 R73       ; R0 := R73
1213 [-]: MOVE      R0 R22       ; R0 := R22
1214 [-]: MOVE      R0 R72       ; R0 := R72
1215 [-]: MOVE      R0 R35       ; R0 := R35
1216 [-]: MOVE      R0 R36       ; R0 := R36
1217 [-]: MOVE      R0 R79       ; R0 := R79
1218 [-]: MOVE      R0 R70       ; R0 := R70
1219 [-]: MOVE      R0 R123      ; R0 := R123
1220 [-]: MOVE      R0 R77       ; R0 := R77
1221 [-]: MOVE      R0 R78       ; R0 := R78
1222 [-]: MOVE      R0 R199      ; R0 := R199
1223 [-]: MOVE      R0 R200      ; R0 := R200
1224 [-]: MOVE      R0 R74       ; R0 := R74
1225 [-]: MOVE      R0 R141      ; R0 := R141
1226 [-]: MOVE      R0 R52       ; R0 := R52
1227 [-]: MOVE      R0 R186      ; R0 := R186
1228 [-]: MOVE      R0 R91       ; R0 := R91
1229 [-]: MOVE      R0 R38       ; R0 := R38
1230 [-]: MOVE      R0 R184      ; R0 := R184
1231 [-]: MOVE      R0 R187      ; R0 := R187
1232 [-]: MOVE      R0 R33       ; R0 := R33
1233 [-]: MOVE      R0 R31       ; R0 := R31
1234 [-]: MOVE      R0 R198      ; R0 := R198
1235 [-]: MOVE      R0 R63       ; R0 := R63
1236 [-]: MOVE      R0 R176      ; R0 := R176
1237 [-]: SETGLOBAL R202 K420    ; Initialize := R202
1238 [-]: SETGLOBAL R202 K421    ; 0x62648036 := R202
1239 [-]: CLOSURE   R202 153     ; R202 := closure(Function #154)
1240 [-]: SETGLOBAL R202 K422    ; ContextMenuFrameRollOut := R202
1241 [-]: SETGLOBAL R202 K423    ; 0xAEE1E06C := R202
1242 [-]: CLOSURE   R202 154     ; R202 := closure(Function #155)
1243 [-]: SETGLOBAL R202 K424    ; ContextMenuRollOut := R202
1244 [-]: SETGLOBAL R202 K425    ; 0x27FCFB2D := R202
1245 [-]: CLOSURE   R202 155     ; R202 := closure(Function #156)
1246 [-]: SETGLOBAL R202 K426    ; ContextMenuRelease := R202
1247 [-]: SETGLOBAL R202 K427    ; 0x18F84B65 := R202
1248 [-]: CLOSURE   R202 156     ; R202 := closure(Function #157)
1249 [-]: MOVE      R0 R34       ; R0 := R34
1250 [-]: MOVE      R0 R38       ; R0 := R38
1251 [-]: CLOSURE   R203 157     ; R203 := closure(Function #158)
1252 [-]: MOVE      R0 R34       ; R0 := R34
1253 [-]: MOVE      R0 R38       ; R0 := R38
1254 [-]: MOVE      R0 R100      ; R0 := R100
1255 [-]: CLOSURE   R204 158     ; R204 := closure(Function #159)
1256 [-]: MOVE      R0 R155      ; R0 := R155
1257 [-]: MOVE      R0 R203      ; R0 := R203
1258 [-]: MOVE      R0 R38       ; R0 := R38
1259 [-]: MOVE      R0 R100      ; R0 := R100
1260 [-]: SETGLOBAL R204 K428    ; TalkToPlayer := R204
1261 [-]: SETGLOBAL R204 K429    ; 0xADE8EF26 := R204
1262 [-]: CLOSURE   R106 159     ; R106 := closure(Function #160)
1263 [-]: MOVE      R0 R24       ; R0 := R24
1264 [-]: MOVE      R0 R38       ; R0 := R38
1265 [-]: MOVE      R0 R35       ; R0 := R35
1266 [-]: CLOSURE   R204 160     ; R204 := closure(Function #161)
1267 [-]: MOVE      R0 R106      ; R0 := R106
1268 [-]: SETGLOBAL R204 K430    ; InviteUser := R204
1269 [-]: SETGLOBAL R204 K431    ; 0xCD009C50 := R204
1270 [-]: CLOSURE   R204 161     ; R204 := closure(Function #162)
1271 [-]: MOVE      R0 R34       ; R0 := R34
1272 [-]: MOVE      R0 R106      ; R0 := R106
1273 [-]: CLOSURE   R205 162     ; R205 := closure(Function #163)
1274 [-]: MOVE      R0 R38       ; R0 := R38
1275 [-]: MOVE      R0 R100      ; R0 := R100
1276 [-]: MOVE      R0 R155      ; R0 := R155
1277 [-]: CLOSURE   R206 163     ; R206 := closure(Function #164)
1278 [-]: MOVE      R0 R205      ; R0 := R205
1279 [-]: SETGLOBAL R206 K432    ; WhisperPlayer := R206
1280 [-]: SETGLOBAL R206 K433    ; 0x6831752D := R206
1281 [-]: CLOSURE   R206 164     ; R206 := closure(Function #165)
1282 [-]: MOVE      R0 R205      ; R0 := R205
1283 [-]: SETGLOBAL R206 K434    ; EnteringTrade := R206
1284 [-]: SETGLOBAL R206 K435    ; 0x785B95CD := R206
1285 [-]: CLOSURE   R206 165     ; R206 := closure(Function #166)
1286 [-]: MOVE      R0 R38       ; R0 := R38
1287 [-]: SETGLOBAL R206 K436    ; EnteringMenu := R206
1288 [-]: SETGLOBAL R206 K437    ; 0x1A82EAB3 := R206
1289 [-]: CLOSURE   R206 166     ; R206 := closure(Function #167)
1290 [-]: MOVE      R0 R18       ; R0 := R18
1291 [-]: MOVE      R0 R38       ; R0 := R38
1292 [-]: SETGLOBAL R206 K438    ; ExitingMenu := R206
1293 [-]: SETGLOBAL R206 K439    ; 0xC2CEC5B7 := R206
1294 [-]: CLOSURE   R206 167     ; R206 := closure(Function #168)
1295 [-]: MOVE      R0 R38       ; R0 := R38
1296 [-]: SETGLOBAL R206 K440    ; EnableInput := R206
1297 [-]: SETGLOBAL R206 K441    ; 0xCF4FF6C0 := R206
1298 [-]: CLOSURE   R206 168     ; R206 := closure(Function #169)
1299 [-]: MOVE      R0 R38       ; R0 := R38
1300 [-]: CLOSURE   R207 169     ; R207 := closure(Function #170)
1301 [-]: MOVE      R0 R206      ; R0 := R206
1302 [-]: SETGLOBAL R207 K442    ; DisableInput := R207
1303 [-]: SETGLOBAL R207 K443    ; 0x86C811FE := R207
1304 [-]: CLOSURE   R207 170     ; R207 := closure(Function #171)
1305 [-]: MOVE      R0 R38       ; R0 := R38
1306 [-]: MOVE      R0 R35       ; R0 := R35
1307 [-]: CLOSURE   R208 171     ; R208 := closure(Function #172)
1308 [-]: MOVE      R0 R38       ; R0 := R38
1309 [-]: MOVE      R0 R207      ; R0 := R207
1310 [-]: CLOSURE   R209 172     ; R209 := closure(Function #173)
1311 [-]: MOVE      R0 R208      ; R0 := R208
1312 [-]: SETGLOBAL R209 K444    ; CloseAllConvos := R209
1313 [-]: SETGLOBAL R209 K445    ; 0x785BDD37 := R209
1314 [-]: LOADNIL   R209 R209    ; R209 := nil
1315 [-]: CLOSURE   R210 173     ; R210 := closure(Function #174)
1316 [-]: MOVE      R0 R35       ; R0 := R35
1317 [-]: MOVE      R0 R20       ; R0 := R20
1318 [-]: MOVE      R0 R38       ; R0 := R38
1319 [-]: MOVE      R0 R209      ; R0 := R209
1320 [-]: SETGLOBAL R210 K446    ; OnGuildChanges := R210
1321 [-]: SETGLOBAL R210 K447    ; 0x6373B5F1 := R210
1322 [-]: CLOSURE   R210 174     ; R210 := closure(Function #175)
1323 [-]: MOVE      R0 R35       ; R0 := R35
1324 [-]: MOVE      R0 R209      ; R0 := R209
1325 [-]: MOVE      R0 R38       ; R0 := R38
1326 [-]: CLOSURE   R211 175     ; R211 := closure(Function #176)
1327 [-]: MOVE      R0 R34       ; R0 := R34
1328 [-]: MOVE      R0 R210      ; R0 := R210
1329 [-]: CLOSURE   R212 176     ; R212 := closure(Function #177)
1330 [-]: SETGLOBAL R212 K448    ; ViewXBLiveAccountIdResult := R212
1331 [-]: SETGLOBAL R212 K449    ; 0x26E1060 := R212
1332 [-]: CLOSURE   R212 177     ; R212 := closure(Function #178)
1333 [-]: MOVE      R0 R34       ; R0 := R34
1334 [-]: MOVE      R0 R35       ; R0 := R35
1335 [-]: CLOSURE   R213 178     ; R213 := closure(Function #179)
1336 [-]: MOVE      R0 R38       ; R0 := R38
1337 [-]: MOVE      R0 R20       ; R0 := R20
1338 [-]: SETGLOBAL R213 K450    ; ViewWarframeProfileAccountIdResult := R213
1339 [-]: SETGLOBAL R213 K451    ; 0x464FF4D1 := R213
1340 [-]: CLOSURE   R213 179     ; R213 := closure(Function #180)
1341 [-]: MOVE      R0 R144      ; R0 := R144
1342 [-]: MOVE      R0 R34       ; R0 := R34
1343 [-]: MOVE      R0 R35       ; R0 := R35
1344 [-]: CLOSURE   R214 180     ; R214 := closure(Function #181)
1345 [-]: MOVE      R0 R144      ; R0 := R144
1346 [-]: MOVE      R0 R35       ; R0 := R35
1347 [-]: MOVE      R0 R34       ; R0 := R34
1348 [-]: MOVE      R0 R38       ; R0 := R38
1349 [-]: MOVE      R0 R176      ; R0 := R176
1350 [-]: MOVE      R0 R178      ; R0 := R178
1351 [-]: MOVE      R0 R21       ; R0 := R21
1352 [-]: CLOSURE   R215 181     ; R215 := closure(Function #182)
1353 [-]: MOVE      R0 R20       ; R0 := R20
1354 [-]: MOVE      R0 R38       ; R0 := R38
1355 [-]: MOVE      R0 R34       ; R0 := R34
1356 [-]: MOVE      R0 R53       ; R0 := R53
1357 [-]: MOVE      R0 R143      ; R0 := R143
1358 [-]: MOVE      R0 R203      ; R0 := R203
1359 [-]: MOVE      R0 R207      ; R0 := R207
1360 [-]: MOVE      R0 R208      ; R0 := R208
1361 [-]: MOVE      R0 R24       ; R0 := R24
1362 [-]: MOVE      R0 R204      ; R0 := R204
1363 [-]: MOVE      R0 R212      ; R0 := R212
1364 [-]: MOVE      R0 R213      ; R0 := R213
1365 [-]: MOVE      R0 R21       ; R0 := R21
1366 [-]: MOVE      R0 R211      ; R0 := R211
1367 [-]: MOVE      R0 R202      ; R0 := R202
1368 [-]: MOVE      R0 R178      ; R0 := R178
1369 [-]: MOVE      R0 R174      ; R0 := R174
1370 [-]: MOVE      R0 R175      ; R0 := R175
1371 [-]: MOVE      R0 R177      ; R0 := R177
1372 [-]: MOVE      R0 R173      ; R0 := R173
1373 [-]: MOVE      R0 R214      ; R0 := R214
1374 [-]: MOVE      R0 R150      ; R0 := R150
1375 [-]: CLOSURE   R216 182     ; R216 := closure(Function #183)
1376 [-]: MOVE      R0 R31       ; R0 := R31
1377 [-]: CLOSURE   R217 183     ; R217 := closure(Function #184)
1378 [-]: MOVE      R0 R216      ; R0 := R216
1379 [-]: SETGLOBAL R217 K452    ; Close := R217
1380 [-]: SETGLOBAL R217 K453    ; 0xA58BB96C := R217
1381 [-]: CLOSURE   R217 184     ; R217 := closure(Function #185)
1382 [-]: MOVE      R0 R33       ; R0 := R33
1383 [-]: MOVE      R0 R39       ; R0 := R39
1384 [-]: MOVE      R0 R201      ; R0 := R201
1385 [-]: MOVE      R0 R38       ; R0 := R38
1386 [-]: MOVE      R0 R206      ; R0 := R206
1387 [-]: MOVE      R0 R71       ; R0 := R71
1388 [-]: MOVE      R0 R86       ; R0 := R86
1389 [-]: MOVE      R0 R35       ; R0 := R35
1390 [-]: MOVE      R0 R87       ; R0 := R87
1391 [-]: MOVE      R0 R8        ; R0 := R8
1392 [-]: MOVE      R0 R21       ; R0 := R21
1393 [-]: MOVE      R0 R25       ; R0 := R25
1394 [-]: MOVE      R0 R70       ; R0 := R70
1395 [-]: MOVE      R0 R30       ; R0 := R30
1396 [-]: MOVE      R0 R72       ; R0 := R72
1397 [-]: SETGLOBAL R217 K454    ; Update := R217
1398 [-]: SETGLOBAL R217 K455    ; 0x8C7099E9 := R217
1399 [-]: CLOSURE   R217 185     ; R217 := closure(Function #186)
1400 [-]: MOVE      R0 R38       ; R0 := R38
1401 [-]: MOVE      R0 R206      ; R0 := R206
1402 [-]: SETGLOBAL R217 K456    ; SetGameplayVisualMode := R217
1403 [-]: SETGLOBAL R217 K457    ; 0xCA09F636 := R217
1404 [-]: CLOSURE   R217 186     ; R217 := closure(Function #187)
1405 [-]: MOVE      R0 R121      ; R0 := R121
1406 [-]: MOVE      R0 R93       ; R0 := R93
1407 [-]: MOVE      R0 R38       ; R0 := R38
1408 [-]: MOVE      R0 R100      ; R0 := R100
1409 [-]: MOVE      R0 R151      ; R0 := R151
1410 [-]: MOVE      R0 R157      ; R0 := R157
1411 [-]: SETGLOBAL R217 K458    ; ToggleFocus := R217
1412 [-]: SETGLOBAL R217 K459    ; 0xD72FCD76 := R217
1413 [-]: CLOSURE   R217 187     ; R217 := closure(Function #188)
1414 [-]: MOVE      R0 R38       ; R0 := R38
1415 [-]: MOVE      R0 R151      ; R0 := R151
1416 [-]: MOVE      R0 R20       ; R0 := R20
1417 [-]: CLOSURE   R218 188     ; R218 := closure(Function #189)
1418 [-]: MOVE      R0 R38       ; R0 := R38
1419 [-]: SETGLOBAL R218 K460    ; LeftArrowFocused := R218
1420 [-]: SETGLOBAL R218 K461    ; 0x899D831B := R218
1421 [-]: CLOSURE   R218 189     ; R218 := closure(Function #190)
1422 [-]: MOVE      R0 R38       ; R0 := R38
1423 [-]: SETGLOBAL R218 K462    ; LeftArrowUnfocused := R218
1424 [-]: SETGLOBAL R218 K463    ; 0x7C0E1FBC := R218
1425 [-]: CLOSURE   R218 190     ; R218 := closure(Function #191)
1426 [-]: MOVE      R0 R217      ; R0 := R217
1427 [-]: MOVE      R0 R20       ; R0 := R20
1428 [-]: SETGLOBAL R218 K464    ; LeftArrowClicked := R218
1429 [-]: SETGLOBAL R218 K465    ; 0x1959C36B := R218
1430 [-]: CLOSURE   R218 191     ; R218 := closure(Function #192)
1431 [-]: MOVE      R0 R38       ; R0 := R38
1432 [-]: SETGLOBAL R218 K466    ; RightArrowFocused := R218
1433 [-]: SETGLOBAL R218 K467    ; 0x16FCD35D := R218
1434 [-]: CLOSURE   R218 192     ; R218 := closure(Function #193)
1435 [-]: MOVE      R0 R38       ; R0 := R38
1436 [-]: SETGLOBAL R218 K468    ; RightArrowUnfocused := R218
1437 [-]: SETGLOBAL R218 K469    ; 0x1FAD888E := R218
1438 [-]: CLOSURE   R218 193     ; R218 := closure(Function #194)
1439 [-]: MOVE      R0 R217      ; R0 := R217
1440 [-]: MOVE      R0 R20       ; R0 := R20
1441 [-]: SETGLOBAL R218 K470    ; RightArrowClicked := R218
1442 [-]: SETGLOBAL R218 K471    ; 0xE83D8665 := R218
1443 [-]: CLOSURE   R218 194     ; R218 := closure(Function #195)
1444 [-]: MOVE      R0 R20       ; R0 := R20
1445 [-]: SETGLOBAL R218 K472    ; MinMaxBtnFocused := R218
1446 [-]: SETGLOBAL R218 K473    ; 0xBA3725F6 := R218
1447 [-]: CLOSURE   R218 195     ; R218 := closure(Function #196)
1448 [-]: SETGLOBAL R218 K474    ; MinMaxBtnUnfocused := R218
1449 [-]: SETGLOBAL R218 K475    ; 0xFC7BB183 := R218
1450 [-]: CLOSURE   R218 196     ; R218 := closure(Function #197)
1451 [-]: MOVE      R0 R31       ; R0 := R31
1452 [-]: MOVE      R0 R159      ; R0 := R159
1453 [-]: MOVE      R0 R100      ; R0 := R100
1454 [-]: MOVE      R0 R102      ; R0 := R102
1455 [-]: SETGLOBAL R218 K476    ; MinMaxBtnClicked := R218
1456 [-]: SETGLOBAL R218 K477    ; 0xF0F3EC19 := R218
1457 [-]: CLOSURE   R218 197     ; R218 := closure(Function #198)
1458 [-]: MOVE      R0 R38       ; R0 := R38
1459 [-]: SETGLOBAL R218 K478    ; onKeyDown_MENU_LEFT_FROM_ANALOG := R218
1460 [-]: SETGLOBAL R218 K479    ; 0x7EA32551 := R218
1461 [-]: CLOSURE   R218 198     ; R218 := closure(Function #199)
1462 [-]: MOVE      R0 R38       ; R0 := R38
1463 [-]: SETGLOBAL R218 K480    ; onKeyDown_MENU_RIGHT_FROM_ANALOG := R218
1464 [-]: SETGLOBAL R218 K481    ; 0x80AA3206 := R218
1465 [-]: CLOSURE   R218 199     ; R218 := closure(Function #200)
1466 [-]: CLOSURE   R219 200     ; R219 := closure(Function #201)
1467 [-]: MOVE      R0 R218      ; R0 := R218
1468 [-]: MOVE      R0 R38       ; R0 := R38
1469 [-]: SETGLOBAL R219 K482    ; onKeyDown_MENU_SELECT := R219
1470 [-]: SETGLOBAL R219 K483    ; 0xEEDD1ACF := R219
1471 [-]: CLOSURE   R219 201     ; R219 := closure(Function #202)
1472 [-]: MOVE      R0 R38       ; R0 := R38
1473 [-]: MOVE      R0 R218      ; R0 := R218
1474 [-]: SETGLOBAL R219 K484    ; onKeyUp_MENU_SELECT := R219
1475 [-]: SETGLOBAL R219 K485    ; 0x4874089C := R219
1476 [-]: CLOSURE   R219 202     ; R219 := closure(Function #203)
1477 [-]: MOVE      R0 R18       ; R0 := R18
1478 [-]: MOVE      R0 R159      ; R0 := R159
1479 [-]: MOVE      R0 R38       ; R0 := R38
1480 [-]: MOVE      R0 R157      ; R0 := R157
1481 [-]: SETGLOBAL R219 K486    ; ScreenStackUpdated := R219
1482 [-]: SETGLOBAL R219 K487    ; 0xE7DA2000 := R219
1483 [-]: CLOSURE   R102 203     ; R102 := closure(Function #204)
1484 [-]: MOVE      R0 R151      ; R0 := R151
1485 [-]: MOVE      R0 R38       ; R0 := R38
1486 [-]: MOVE      R0 R20       ; R0 := R20
1487 [-]: MOVE      R0 R157      ; R0 := R157
1488 [-]: CLOSURE   R219 204     ; R219 := closure(Function #205)
1489 [-]: MOVE      R0 R38       ; R0 := R38
1490 [-]: SETGLOBAL R219 K488    ; onKeyDown_MENU_CANCEL := R219
1491 [-]: SETGLOBAL R219 K489    ; 0x5B2C0B28 := R219
1492 [-]: CLOSURE   R219 205     ; R219 := closure(Function #206)
1493 [-]: MOVE      R0 R38       ; R0 := R38
1494 [-]: MOVE      R0 R31       ; R0 := R31
1495 [-]: MOVE      R0 R102      ; R0 := R102
1496 [-]: SETGLOBAL R219 K490    ; onKeyUp_MENU_CANCEL := R219
1497 [-]: SETGLOBAL R219 K491    ; 0xD853E536 := R219
1498 [-]: CLOSURE   R219 206     ; R219 := closure(Function #207)
1499 [-]: MOVE      R0 R38       ; R0 := R38
1500 [-]: SETGLOBAL R219 K492    ; OSKSendMessageCallback := R219
1501 [-]: SETGLOBAL R219 K493    ; 0x111E8A23 := R219
1502 [-]: CLOSURE   R219 207     ; R219 := closure(Function #208)
1503 [-]: MOVE      R0 R38       ; R0 := R38
1504 [-]: SETGLOBAL R219 K494    ; SendMessageCallback := R219
1505 [-]: SETGLOBAL R219 K495    ; 0x80C2389A := R219
1506 [-]: CLOSURE   R219 208     ; R219 := closure(Function #209)
1507 [-]: MOVE      R0 R21       ; R0 := R21
1508 [-]: SETGLOBAL R219 K496    ; SendMessageWithOSK := R219
1509 [-]: SETGLOBAL R219 K497    ; 0x27904284 := R219
1510 [-]: CLOSURE   R219 209     ; R219 := closure(Function #210)
1511 [-]: MOVE      R0 R38       ; R0 := R38
1512 [-]: MOVE      R0 R31       ; R0 := R31
1513 [-]: SETGLOBAL R219 K498    ; onKeyDown_MENU_GENERIC1 := R219
1514 [-]: SETGLOBAL R219 K499    ; 0xAAAD7C40 := R219
1515 [-]: CLOSURE   R219 210     ; R219 := closure(Function #211)
1516 [-]: MOVE      R0 R38       ; R0 := R38
1517 [-]: SETGLOBAL R219 K500    ; onKeyUp_MENU_GENERIC1 := R219
1518 [-]: SETGLOBAL R219 K501    ; 0x9C484D9E := R219
1519 [-]: CLOSURE   R219 211     ; R219 := closure(Function #212)
1520 [-]: MOVE      R0 R38       ; R0 := R38
1521 [-]: MOVE      R0 R31       ; R0 := R31
1522 [-]: SETGLOBAL R219 K502    ; onKeyDown_MENU_GENERIC2 := R219
1523 [-]: SETGLOBAL R219 K503    ; 0x23E42758 := R219
1524 [-]: CLOSURE   R219 212     ; R219 := closure(Function #213)
1525 [-]: MOVE      R0 R38       ; R0 := R38
1526 [-]: SETGLOBAL R219 K504    ; onKeyUp_MENU_GENERIC2 := R219
1527 [-]: SETGLOBAL R219 K505    ; 0x706E0307 := R219
1528 [-]: CLOSURE   R219 213     ; R219 := closure(Function #214)
1529 [-]: MOVE      R0 R38       ; R0 := R38
1530 [-]: SETGLOBAL R219 K506    ; onKeyUp_MENU_LTHUMB := R219
1531 [-]: SETGLOBAL R219 K507    ; 0xC2ACF47B := R219
1532 [-]: CLOSURE   R219 214     ; R219 := closure(Function #215)
1533 [-]: MOVE      R0 R38       ; R0 := R38
1534 [-]: MOVE      R0 R31       ; R0 := R31
1535 [-]: MOVE      R0 R144      ; R0 := R144
1536 [-]: MOVE      R0 R130      ; R0 := R130
1537 [-]: MOVE      R0 R121      ; R0 := R121
1538 [-]: MOVE      R0 R176      ; R0 := R176
1539 [-]: SETGLOBAL R219 K508    ; onKeyDown_MENU_LTHUMB := R219
1540 [-]: SETGLOBAL R219 K509    ; 0x25342485 := R219
1541 [-]: CLOSURE   R219 215     ; R219 := closure(Function #216)
1542 [-]: MOVE      R0 R38       ; R0 := R38
1543 [-]: SETGLOBAL R219 K510    ; onKeyUp_MENU_RTHUMB := R219
1544 [-]: SETGLOBAL R219 K511    ; 0x719FCEB6 := R219
1545 [-]: CLOSURE   R219 216     ; R219 := closure(Function #217)
1546 [-]: MOVE      R0 R38       ; R0 := R38
1547 [-]: MOVE      R0 R31       ; R0 := R31
1548 [-]: MOVE      R0 R183      ; R0 := R183
1549 [-]: SETGLOBAL R219 K512    ; onKeyDown_MENU_RTHUMB := R219
1550 [-]: SETGLOBAL R219 K513    ; 0x53C99C27 := R219
1551 [-]: CLOSURE   R219 217     ; R219 := closure(Function #218)
1552 [-]: MOVE      R0 R38       ; R0 := R38
1553 [-]: MOVE      R0 R31       ; R0 := R31
1554 [-]: MOVE      R0 R217      ; R0 := R217
1555 [-]: MOVE      R0 R20       ; R0 := R20
1556 [-]: SETGLOBAL R219 K514    ; onKeyDown_MENU_LTRIGGER2 := R219
1557 [-]: SETGLOBAL R219 K515    ; 0x9BD896E0 := R219
1558 [-]: CLOSURE   R219 218     ; R219 := closure(Function #219)
1559 [-]: MOVE      R0 R38       ; R0 := R38
1560 [-]: MOVE      R0 R31       ; R0 := R31
1561 [-]: MOVE      R0 R217      ; R0 := R217
1562 [-]: MOVE      R0 R20       ; R0 := R20
1563 [-]: SETGLOBAL R219 K516    ; onKeyDown_MENU_RTRIGGER2 := R219
1564 [-]: SETGLOBAL R219 K517    ; 0xFE4FF8B := R219
1565 [-]: CLOSURE   R219 219     ; R219 := closure(Function #220)
1566 [-]: MOVE      R0 R38       ; R0 := R38
1567 [-]: SETGLOBAL R219 K518    ; onKeyUp_MENU_RTRIGGER1 := R219
1568 [-]: SETGLOBAL R219 K519    ; 0xEDEA8C7F := R219
1569 [-]: CLOSURE   R219 220     ; R219 := closure(Function #221)
1570 [-]: MOVE      R0 R38       ; R0 := R38
1571 [-]: MOVE      R0 R31       ; R0 := R31
1572 [-]: MOVE      R0 R20       ; R0 := R20
1573 [-]: SETGLOBAL R219 K520    ; onKeyDown_MENU_RTRIGGER1 := R219
1574 [-]: SETGLOBAL R219 K521    ; 0x471768A := R219
1575 [-]: CLOSURE   R219 221     ; R219 := closure(Function #222)
1576 [-]: MOVE      R0 R38       ; R0 := R38
1577 [-]: CLOSURE   R220 222     ; R220 := closure(Function #223)
1578 [-]: MOVE      R0 R38       ; R0 := R38
1579 [-]: CLOSURE   R221 223     ; R221 := closure(Function #224)
1580 [-]: MOVE      R0 R38       ; R0 := R38
1581 [-]: CLOSURE   R222 224     ; R222 := closure(Function #225)
1582 [-]: MOVE      R0 R53       ; R0 := R53
1583 [-]: CLOSURE   R101 225     ; R101 := closure(Function #226)
1584 [-]: MOVE      R0 R38       ; R0 := R38
1585 [-]: MOVE      R0 R20       ; R0 := R20
1586 [-]: MOVE      R0 R221      ; R0 := R221
1587 [-]: MOVE      R0 R222      ; R0 := R222
1588 [-]: CLOSURE   R223 226     ; R223 := closure(Function #227)
1589 [-]: MOVE      R0 R37       ; R0 := R37
1590 [-]: MOVE      R0 R119      ; R0 := R119
1591 [-]: MOVE      R0 R38       ; R0 := R38
1592 [-]: MOVE      R0 R31       ; R0 := R31
1593 [-]: MOVE      R0 R151      ; R0 := R151
1594 [-]: MOVE      R0 R118      ; R0 := R118
1595 [-]: MOVE      R0 R117      ; R0 := R117
1596 [-]: MOVE      R0 R20       ; R0 := R20
1597 [-]: MOVE      R0 R114      ; R0 := R114
1598 [-]: MOVE      R0 R115      ; R0 := R115
1599 [-]: MOVE      R0 R152      ; R0 := R152
1600 [-]: MOVE      R0 R30       ; R0 := R30
1601 [-]: MOVE      R0 R72       ; R0 := R72
1602 [-]: MOVE      R0 R92       ; R0 := R92
1603 [-]: MOVE      R0 R93       ; R0 := R93
1604 [-]: MOVE      R0 R21       ; R0 := R21
1605 [-]: MOVE      R0 R222      ; R0 := R222
1606 [-]: MOVE      R0 R101      ; R0 := R101
1607 [-]: MOVE      R0 R220      ; R0 := R220
1608 [-]: MOVE      R0 R215      ; R0 := R215
1609 [-]: MOVE      R0 R147      ; R0 := R147
1610 [-]: SETGLOBAL R223 K522    ; onRawInputEvent := R223
1611 [-]: SETGLOBAL R223 K523    ; 0x11563913 := R223
1612 [-]: CLOSURE   R223 227     ; R223 := closure(Function #228)
1613 [-]: MOVE      R0 R31       ; R0 := R31
1614 [-]: MOVE      R0 R101      ; R0 := R101
1615 [-]: MOVE      R0 R38       ; R0 := R38
1616 [-]: MOVE      R0 R219      ; R0 := R219
1617 [-]: MOVE      R0 R221      ; R0 := R221
1618 [-]: SETGLOBAL R223 K524    ; onKeyDown_MENU_MOUSE_Z := R223
1619 [-]: SETGLOBAL R223 K525    ; 0x56EAD3A9 := R223
1620 [-]: CLOSURE   R223 228     ; R223 := closure(Function #229)
1621 [-]: SETGLOBAL R223 K526    ; OnGetFriendsResult := R223
1622 [-]: SETGLOBAL R223 K527    ; 0x20DBE059 := R223
1623 [-]: CLOSURE   R223 229     ; R223 := closure(Function #230)
1624 [-]: MOVE      R0 R35       ; R0 := R35
1625 [-]: MOVE      R0 R38       ; R0 := R38
1626 [-]: SETGLOBAL R223 K528    ; OnAddFriendResultToPanel := R223
1627 [-]: SETGLOBAL R223 K529    ; 0xBA6ABF6 := R223
1628 [-]: CLOSURE   R223 230     ; R223 := closure(Function #231)
1629 [-]: MOVE      R0 R35       ; R0 := R35
1630 [-]: SETGLOBAL R223 K530    ; OnAddFriendResultToDialog := R223
1631 [-]: SETGLOBAL R223 K531    ; 0xF15BA1D4 := R223
1632 [-]: CLOSURE   R223 231     ; R223 := closure(Function #232)
1633 [-]: MOVE      R0 R38       ; R0 := R38
1634 [-]: MOVE      R0 R20       ; R0 := R20
1635 [-]: SETGLOBAL R223 K532    ; OnRemoveFriendResultToPanel := R223
1636 [-]: SETGLOBAL R223 K533    ; 0x770E4C30 := R223
1637 [-]: CLOSURE   R223 232     ; R223 := closure(Function #233)
1638 [-]: MOVE      R0 R38       ; R0 := R38
1639 [-]: SETGLOBAL R223 K534    ; SendGameInviteCallback := R223
1640 [-]: SETGLOBAL R223 K535    ; 0xFDBD2C83 := R223
1641 [-]: CLOSURE   R103 233     ; R103 := closure(Function #234)
1642 [-]: MOVE      R0 R38       ; R0 := R38
1643 [-]: MOVE      R0 R20       ; R0 := R20
1644 [-]: MOVE      R0 R139      ; R0 := R139
1645 [-]: MOVE      R0 R156      ; R0 := R156
1646 [-]: MOVE      R0 R16       ; R0 := R16
1647 [-]: MOVE      R0 R168      ; R0 := R168
1648 [-]: MOVE      R0 R155      ; R0 := R155
1649 [-]: CLOSURE   R223 234     ; R223 := closure(Function #235)
1650 [-]: MOVE      R0 R103      ; R0 := R103
1651 [-]: SETGLOBAL R223 K536    ; PrivateConvoPlayerIDResultOutgoing := R223
1652 [-]: SETGLOBAL R223 K537    ; 0x453332BA := R223
1653 [-]: CLOSURE   R223 235     ; R223 := closure(Function #236)
1654 [-]: MOVE      R0 R103      ; R0 := R103
1655 [-]: SETGLOBAL R223 K538    ; PrivateConvoPlayerIDResultIncoming := R223
1656 [-]: SETGLOBAL R223 K539    ; 0x8B373075 := R223
1657 [-]: CLOSURE   R223 236     ; R223 := closure(Function #237)
1658 [-]: MOVE      R0 R38       ; R0 := R38
1659 [-]: MOVE      R0 R20       ; R0 := R20
1660 [-]: MOVE      R0 R24       ; R0 := R24
1661 [-]: CLOSURE   R224 237     ; R224 := closure(Function #238)
1662 [-]: MOVE      R0 R223      ; R0 := R223
1663 [-]: SETGLOBAL R224 K540    ; GameInvitePlayerIDResults := R224
1664 [-]: SETGLOBAL R224 K541    ; 0x75B2E378 := R224
1665 [-]: CLOSURE   R107 238     ; R107 := closure(Function #239)
1666 [-]: MOVE      R0 R20       ; R0 := R20
1667 [-]: CLOSURE   R224 239     ; R224 := closure(Function #240)
1668 [-]: MOVE      R0 R107      ; R0 := R107
1669 [-]: MOVE      R0 R71       ; R0 := R71
1670 [-]: MOVE      R0 R38       ; R0 := R38
1671 [-]: MOVE      R0 R20       ; R0 := R20
1672 [-]: MOVE      R0 R73       ; R0 := R73
1673 [-]: SETGLOBAL R224 K542    ; IconCacheFlushed := R224
1674 [-]: SETGLOBAL R224 K543    ; 0x5C92AF6F := R224
1675 [-]: CLOSURE   R224 240     ; R224 := closure(Function #241)
1676 [-]: MOVE      R0 R38       ; R0 := R38
1677 [-]: MOVE      R0 R20       ; R0 := R20
1678 [-]: SETGLOBAL R224 K544    ; NotifyGamepad := R224
1679 [-]: SETGLOBAL R224 K545    ; 0x223FC054 := R224
1680 [-]: CLOSURE   R224 241     ; R224 := closure(Function #242)
1681 [-]: MOVE      R0 R38       ; R0 := R38
1682 [-]: SETGLOBAL R224 K546    ; SendMessageBarClicked := R224
1683 [-]: SETGLOBAL R224 K547    ; 0x44C54D7C := R224
1684 [-]: CLOSURE   R224 242     ; R224 := closure(Function #243)
1685 [-]: MOVE      R0 R38       ; R0 := R38
1686 [-]: MOVE      R0 R35       ; R0 := R35
1687 [-]: CLOSURE   R225 243     ; R225 := closure(Function #244)
1688 [-]: MOVE      R0 R86       ; R0 := R86
1689 [-]: SETGLOBAL R225 K548    ; ResyncRichPresence := R225
1690 [-]: SETGLOBAL R225 K549    ; 0x2344245F := R225
1691 [-]: CLOSURE   R225 244     ; R225 := closure(Function #245)
1692 [-]: MOVE      R0 R224      ; R0 := R224
1693 [-]: MOVE      R0 R86       ; R0 := R86
1694 [-]: SETGLOBAL R225 K550    ; OnLitePresenceUpdated := R225
1695 [-]: SETGLOBAL R225 K551    ; 0x9B442AD4 := R225
1696 [-]: CLOSURE   R225 245     ; R225 := closure(Function #246)
1697 [-]: MOVE      R0 R87       ; R0 := R87
1698 [-]: SETGLOBAL R225 K552    ; ResyncLitePresence := R225
1699 [-]: SETGLOBAL R225 K553    ; 0x323ED951 := R225
1700 [-]: CLOSURE   R225 246     ; R225 := closure(Function #247)
1701 [-]: MOVE      R0 R35       ; R0 := R35
1702 [-]: SETGLOBAL R225 K554    ; CanResyncPresence := R225
1703 [-]: SETGLOBAL R225 K555    ; 0xE086FF6F := R225
1704 [-]: CLOSURE   R225 247     ; R225 := closure(Function #248)
1705 [-]: MOVE      R0 R225      ; R0 := R225
1706 [-]: CLOSURE   R226 248     ; R226 := closure(Function #249)
1707 [-]: MOVE      R0 R121      ; R0 := R121
1708 [-]: MOVE      R0 R31       ; R0 := R31
1709 [-]: MOVE      R0 R122      ; R0 := R122
1710 [-]: MOVE      R0 R38       ; R0 := R38
1711 [-]: MOVE      R0 R176      ; R0 := R176
1712 [-]: SETGLOBAL R226 K556    ; OnDetailedViewComplete := R226
1713 [-]: SETGLOBAL R226 K557    ; 0x5C94534C := R226
1714 [-]: CLOSURE   R226 249     ; R226 := closure(Function #250)
1715 [-]: MOVE      R0 R144      ; R0 := R144
1716 [-]: MOVE      R0 R215      ; R0 := R215
1717 [-]: MOVE      R0 R121      ; R0 := R121
1718 [-]: MOVE      R0 R70       ; R0 := R70
1719 [-]: MOVE      R0 R20       ; R0 := R20
1720 [-]: MOVE      R0 R0        ; R0 := R0
1721 [-]: MOVE      R0 R181      ; R0 := R181
1722 [-]: MOVE      R0 R148      ; R0 := R148
1723 [-]: MOVE      R0 R159      ; R0 := R159
1724 [-]: MOVE      R0 R102      ; R0 := R102
1725 [-]: MOVE      R0 R27       ; R0 := R27
1726 [-]: MOVE      R0 R166      ; R0 := R166
1727 [-]: MOVE      R0 R54       ; R0 := R54
1728 [-]: MOVE      R0 R31       ; R0 := R31
1729 [-]: MOVE      R0 R176      ; R0 := R176
1730 [-]: MOVE      R0 R79       ; R0 := R79
1731 [-]: MOVE      R0 R122      ; R0 := R122
1732 [-]: MOVE      R0 R26       ; R0 := R26
1733 [-]: MOVE      R0 R21       ; R0 := R21
1734 [-]: MOVE      R0 R225      ; R0 := R225
1735 [-]: MOVE      R0 R22       ; R0 := R22
1736 [-]: SETGLOBAL R226 K558    ; ShowHyperlinkItem := R226
1737 [-]: SETGLOBAL R226 K559    ; 0xCFA3AC0E := R226
1738 [-]: CLOSURE   R226 250     ; R226 := closure(Function #251)
1739 [-]: MOVE      R0 R20       ; R0 := R20
1740 [-]: SETGLOBAL R226 K560    ; RollOver := R226
1741 [-]: SETGLOBAL R226 K561    ; 0x578AD1BD := R226
1742 [-]: CLOSURE   R226 251     ; R226 := closure(Function #252)
1743 [-]: SETGLOBAL R226 K562    ; UserListBtnFocused := R226
1744 [-]: SETGLOBAL R226 K563    ; 0xCA53FC0F := R226
1745 [-]: CLOSURE   R226 252     ; R226 := closure(Function #253)
1746 [-]: SETGLOBAL R226 K564    ; UserListBtnUnfocused := R226
1747 [-]: SETGLOBAL R226 K565    ; 0x315CA05D := R226
1748 [-]: CLOSURE   R104 253     ; R104 := closure(Function #254)
1749 [-]: MOVE      R0 R38       ; R0 := R38
1750 [-]: MOVE      R0 R159      ; R0 := R159
1751 [-]: MOVE      R0 R100      ; R0 := R100
1752 [-]: CLOSURE   R226 254     ; R226 := closure(Function #255)
1753 [-]: MOVE      R0 R104      ; R0 := R104
1754 [-]: SETGLOBAL R226 K566    ; UserListBtnPressed := R226
1755 [-]: SETGLOBAL R226 K567    ; 0x4DAAC443 := R226
1756 [-]: CLOSURE   R226 255     ; R226 := closure(Function #256)
1757 [-]: SETGLOBAL R226 K568    ; EmojiBtnFocused := R226
1758 [-]: SETGLOBAL R226 K569    ; 0x3C131247 := R226
1759 [-]: CLOSURE   R226 256     ; R226 := closure(Function #257)
1760 [-]: SETGLOBAL R226 K570    ; EmojiBtnUnfocused := R226
1761 [-]: SETGLOBAL R226 K571    ; 0x7BD3824 := R226
1762 [-]: CLOSURE   R105 257     ; R105 := closure(Function #258)
1763 [-]: MOVE      R0 R38       ; R0 := R38
1764 [-]: MOVE      R0 R159      ; R0 := R159
1765 [-]: MOVE      R0 R100      ; R0 := R100
1766 [-]: CLOSURE   R226 258     ; R226 := closure(Function #259)
1767 [-]: MOVE      R0 R105      ; R0 := R105
1768 [-]: SETGLOBAL R226 K572    ; EmojiBtnPressed := R226
1769 [-]: SETGLOBAL R226 K573    ; 0xBDC80651 := R226
1770 [-]: CLOSURE   R226 259     ; R226 := closure(Function #260)
1771 [-]: SETGLOBAL R226 K574    ; FilterBtnFocused := R226
1772 [-]: SETGLOBAL R226 K575    ; 0xB37576E := R226
1773 [-]: CLOSURE   R226 260     ; R226 := closure(Function #261)
1774 [-]: SETGLOBAL R226 K576    ; FilterBtnUnfocused := R226
1775 [-]: SETGLOBAL R226 K577    ; 0x247D3817 := R226
1776 [-]: CLOSURE   R226 261     ; R226 := closure(Function #262)
1777 [-]: MOVE      R0 R38       ; R0 := R38
1778 [-]: MOVE      R0 R144      ; R0 := R144
1779 [-]: MOVE      R0 R131      ; R0 := R131
1780 [-]: MOVE      R0 R176      ; R0 := R176
1781 [-]: SETGLOBAL R226 K578    ; FilterBtnPressed := R226
1782 [-]: SETGLOBAL R226 K579    ; 0xAF757D57 := R226
1783 [-]: CLOSURE   R226 262     ; R226 := closure(Function #263)
1784 [-]: MOVE      R0 R31       ; R0 := R31
1785 [-]: MOVE      R0 R38       ; R0 := R38
1786 [-]: SETGLOBAL R226 K580    ; FilterSelected := R226
1787 [-]: SETGLOBAL R226 K581    ; 0xE99F0B6 := R226
1788 [-]: CLOSURE   R226 263     ; R226 := closure(Function #264)
1789 [-]: MOVE      R0 R38       ; R0 := R38
1790 [-]: SETGLOBAL R226 K582    ; FilterFocused := R226
1791 [-]: SETGLOBAL R226 K583    ; 0xA07DBFCE := R226
1792 [-]: CLOSURE   R226 264     ; R226 := closure(Function #265)
1793 [-]: MOVE      R0 R38       ; R0 := R38
1794 [-]: SETGLOBAL R226 K584    ; FilterUnfocused := R226
1795 [-]: SETGLOBAL R226 K585    ; 0x62EF149D := R226
1796 [-]: CLOSURE   R226 265     ; R226 := closure(Function #266)
1797 [-]: MOVE      R0 R38       ; R0 := R38
1798 [-]: MOVE      R0 R114      ; R0 := R114
1799 [-]: MOVE      R0 R116      ; R0 := R116
1800 [-]: SETGLOBAL R226 K586    ; MessageBoxFocused := R226
1801 [-]: SETGLOBAL R226 K587    ; 0x64A23626 := R226
1802 [-]: CLOSURE   R226 266     ; R226 := closure(Function #267)
1803 [-]: MOVE      R0 R38       ; R0 := R38
1804 [-]: MOVE      R0 R114      ; R0 := R114
1805 [-]: MOVE      R0 R30       ; R0 := R30
1806 [-]: MOVE      R0 R72       ; R0 := R72
1807 [-]: MOVE      R0 R115      ; R0 := R115
1808 [-]: SETGLOBAL R226 K588    ; MessageBoxUnfocused := R226
1809 [-]: SETGLOBAL R226 K589    ; 0x12EDE8EB := R226
1810 [-]: CLOSURE   R226 267     ; R226 := closure(Function #268)
1811 [-]: SETGLOBAL R226 K590    ; MessageBoxOnPaste := R226
1812 [-]: SETGLOBAL R226 K591    ; 0xD8B71C7C := R226
1813 [-]: CLOSURE   R226 268     ; R226 := closure(Function #269)
1814 [-]: MOVE      R0 R70       ; R0 := R70
1815 [-]: SETGLOBAL R226 K592    ; ConfirmLoadSong := R226
1816 [-]: SETGLOBAL R226 K593    ; 0xF8B5354D := R226
1817 [-]: CLOSURE   R226 269     ; R226 := closure(Function #270)
1818 [-]: MOVE      R0 R38       ; R0 := R38
1819 [-]: MOVE      R0 R20       ; R0 := R20
1820 [-]: MOVE      R0 R97       ; R0 := R97
1821 [-]: MOVE      R0 R35       ; R0 := R35
1822 [-]: MOVE      R0 R102      ; R0 := R102
1823 [-]: MOVE      R0 R136      ; R0 := R136
1824 [-]: CLOSURE   R227 270     ; R227 := closure(Function #271)
1825 [-]: MOVE      R0 R226      ; R0 := R226
1826 [-]: MOVE      R0 R97       ; R0 := R97
1827 [-]: SETGLOBAL R227 K594    ; OnJoinLobbyComplete := R227
1828 [-]: SETGLOBAL R227 K595    ; 0x83A58929 := R227
1829 [-]: CLOSURE   R227 271     ; R227 := closure(Function #272)
1830 [-]: MOVE      R0 R24       ; R0 := R24
1831 [-]: MOVE      R0 R97       ; R0 := R97
1832 [-]: MOVE      R0 R226      ; R0 := R226
1833 [-]: MOVE      R0 R136      ; R0 := R136
1834 [-]: SETGLOBAL R227 K596    ; OnFindSessionComplete := R227
1835 [-]: SETGLOBAL R227 K597    ; 0xC83DC948 := R227
1836 [-]: CLOSURE   R227 272     ; R227 := closure(Function #273)
1837 [-]: MOVE      R0 R226      ; R0 := R226
1838 [-]: MOVE      R0 R97       ; R0 := R97
1839 [-]: MOVE      R0 R35       ; R0 := R35
1840 [-]: MOVE      R0 R24       ; R0 := R24
1841 [-]: SETGLOBAL R227 K598    ; OnGetPresenceForJoin := R227
1842 [-]: SETGLOBAL R227 K599    ; 0x277E3FA4 := R227
1843 [-]: CLOSURE   R227 273     ; R227 := closure(Function #274)
1844 [-]: MOVE      R0 R226      ; R0 := R226
1845 [-]: MOVE      R0 R20       ; R0 := R20
1846 [-]: MOVE      R0 R35       ; R0 := R35
1847 [-]: MOVE      R0 R97       ; R0 := R97
1848 [-]: SETGLOBAL R227 K600    ; JoinPlayerIDResult := R227
1849 [-]: SETGLOBAL R227 K601    ; 0x15AC7BEE := R227
1850 [-]: CLOSURE   R227 274     ; R227 := closure(Function #275)
1851 [-]: MOVE      R0 R107      ; R0 := R107
1852 [-]: MOVE      R0 R38       ; R0 := R38
1853 [-]: MOVE      R0 R20       ; R0 := R20
1854 [-]: MOVE      R0 R31       ; R0 := R31
1855 [-]: MOVE      R0 R121      ; R0 := R121
1856 [-]: MOVE      R0 R131      ; R0 := R131
1857 [-]: MOVE      R0 R130      ; R0 := R130
1858 [-]: MOVE      R0 R54       ; R0 := R54
1859 [-]: SETGLOBAL R227 K602    ; OnGamepadTransition := R227
1860 [-]: SETGLOBAL R227 K603    ; 0x98E4F633 := R227
1861 [-]: CLOSURE   R227 275     ; R227 := closure(Function #276)
1862 [-]: MOVE      R0 R159      ; R0 := R159
1863 [-]: SETGLOBAL R227 K604    ; onKeyDown_TOGGLE_CHAT_WINDOW_ALT := R227
1864 [-]: SETGLOBAL R227 K605    ; 0xD1F2ACA9 := R227
1865 [-]: CLOSURE   R227 276     ; R227 := closure(Function #277)
1866 [-]: MOVE      R0 R38       ; R0 := R38
1867 [-]: SETGLOBAL R227 K606    ; ForceLargeFont := R227
1868 [-]: SETGLOBAL R227 K607    ; 0x613F93F3 := R227
1869 [-]: CLOSURE   R227 277     ; R227 := closure(Function #278)
1870 [-]: MOVE      R0 R38       ; R0 := R38
1871 [-]: SETGLOBAL R227 K608    ; OnAddToChatChannel := R227
1872 [-]: SETGLOBAL R227 K609    ; 0x2FACB10D := R227
1873 [-]: CLOSURE   R227 278     ; R227 := closure(Function #279)
1874 [-]: MOVE      R0 R38       ; R0 := R38
1875 [-]: SETGLOBAL R227 K610    ; OnAddToGlobalChannel := R227
1876 [-]: SETGLOBAL R227 K611    ; 0x4E4BA8E1 := R227
1877 [-]: CLOSURE   R227 279     ; R227 := closure(Function #280)
1878 [-]: SETGLOBAL R227 K612    ; OnNotifyAscensionCeremonyBegun := R227
1879 [-]: SETGLOBAL R227 K613    ; 0x766D5E09 := R227
1880 [-]: CLOSURE   R108 280     ; R108 := closure(Function #281)
1881 [-]: MOVE      R0 R35       ; R0 := R35
1882 [-]: CLOSURE   R109 281     ; R109 := closure(Function #282)
1883 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 407
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xECFDD17
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R5 U1        ; R5 := U1
  6 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x18AAE1E3"]
  7 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mChannelType"]
  9 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R3 2         ; return R3
 12 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 5; R2 := R3 end
 13 [-]: JMP       5            ; PC := 5
 14 [-]: LOADNIL   R5 R5        ; R5 := nil
 15 [-]: RETURN    R5 2         ; return R5
 16 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 416
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 420
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: LOADNIL   R0 R0        ; R0 := nil
  3 [-]: MOVE      R0 R1        ; R0 := R1
  4 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 425
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x2144C6CB"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: LOADK     R4 K2        ; R4 := "%[([^%[^%]]-)%]"
  6 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
  7 [-]: JMP       47           ; PC := 47
  8 [-]: SELF      R6 R5 K3     ; R7 := R5; R6 := R5["0x633C4246"]
  9 [-]: LOADK     R8 K4        ; R8 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
 10 [-]: LOADK     R9 K5        ; R9 := "%%%0"
 11 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: GETUPVAL  R8 U1        ; R8 := U1
 14 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["0xCECDECDE"]
 15 [-]: MOVE      R9 R5        ; R9 := R5
 16 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 17 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 18 [-]: EQ        1 R7 K7      ; if R7 == nil then PC := 37
 19 [-]: JMP       37           ; PC := 37
 20 [-]: GETGLOBAL R7 K8        ; R7 := 0xD26C89A0
 21 [-]: MOVE      R8 R5        ; R8 := R5
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: GETGLOBAL R8 K0        ; R8 := string
 24 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["0x633C4246"]
 25 [-]: MOVE      R9 R1        ; R9 := R1
 26 [-]: LOADK     R10 K9       ; R10 := "%["
 27 [-]: MOVE      R11 R6       ; R11 := R6
 28 [-]: LOADK     R12 K10      ; R12 := "%]"
 29 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 30 [-]: LOADK     R11 K11      ; R11 := "["
 31 [-]: MOVE      R12 R7       ; R12 := R7
 32 [-]: LOADK     R13 K12      ; R13 := "]"
 33 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
 34 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 35 [-]: MOVE      R1 R8        ; R1 := R8
 36 [-]: JMP       47           ; PC := 47
 37 [-]: GETGLOBAL R8 K0        ; R8 := string
 38 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["0x633C4246"]
 39 [-]: MOVE      R9 R1        ; R9 := R1
 40 [-]: LOADK     R10 K9       ; R10 := "%["
 41 [-]: MOVE      R11 R6       ; R11 := R6
 42 [-]: LOADK     R12 K10      ; R12 := "%]"
 43 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 44 [-]: MOVE      R11 R5       ; R11 := R5
 45 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 46 [-]: MOVE      R1 R8        ; R1 := R8
 47 [-]: TFORLOOP  R2 1         ; R5 :=  R2(R3,R4); if R5 ~= nil then begin PC = 8; R4 := R5 end
 48 [-]: JMP       8            ; PC := 8
 49 [-]: RETURN    R1 2         ; return R1
 50 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 439
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF1877395"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["message"]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x80CA4A2"]
 16 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 17 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 18 [-]: MOVE      R0 R3        ; R0 := R3
 19 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 446
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xB3DD1645
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5EC7A3D2"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: EQ        1 R1 K2      ; if R1 == "_en" then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADK     R1 K3        ; R1 := ""
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: GETGLOBAL R1 K4        ; R1 := Engine
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x1398DAFB"]
 11 [-]: CALL      R1 1 2       ; R1 := R1()
 12 [-]: TEST      R1 0         ; if not R1 then PC := 29
 13 [-]: JMP       29           ; PC := 29
 14 [-]: GETGLOBAL R1 K6        ; R1 := string
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: LOADK     R3 K8        ; R3 := "_EAST$"
 18 [-]: LOADK     R4 K3        ; R4 := ""
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: MOVE      R0 R1        ; R0 := R1
 21 [-]: GETGLOBAL R1 K6        ; R1 := string
 22 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: LOADK     R3 K9        ; R3 := "_WEST$"
 25 [-]: LOADK     R4 K3        ; R4 := ""
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: JMP       43           ; PC := 43
 29 [-]: GETGLOBAL R1 K6        ; R1 := string
 30 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 31 [-]: MOVE      R2 R0        ; R2 := R0
 32 [-]: LOADK     R3 K8        ; R3 := "_EAST$"
 33 [-]: LOADK     R4 K10       ; R4 := "_E"
 34 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: GETGLOBAL R1 K6        ; R1 := string
 37 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 38 [-]: MOVE      R2 R0        ; R2 := R0
 39 [-]: LOADK     R3 K9        ; R3 := "_WEST$"
 40 [-]: LOADK     R4 K11       ; R4 := "_W"
 41 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 42 [-]: MOVE      R0 R1        ; R0 := R1
 43 [-]: GETGLOBAL R1 K6        ; R1 := string
 44 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 45 [-]: MOVE      R2 R0        ; R2 := R0
 46 [-]: LOADK     R3 K12       ; R3 := "NORTH_AMERICA"
 47 [-]: LOADK     R4 K13       ; R4 := "NA"
 48 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 49 [-]: MOVE      R0 R1        ; R0 := R1
 50 [-]: GETGLOBAL R1 K6        ; R1 := string
 51 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 52 [-]: MOVE      R2 R0        ; R2 := R0
 53 [-]: LOADK     R3 K14       ; R3 := "SOUTH_AMERICA"
 54 [-]: LOADK     R4 K15       ; R4 := "SA"
 55 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 56 [-]: MOVE      R0 R1        ; R0 := R1
 57 [-]: GETGLOBAL R1 K6        ; R1 := string
 58 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 59 [-]: MOVE      R2 R0        ; R2 := R0
 60 [-]: LOADK     R3 K16       ; R3 := "OCEANIA"
 61 [-]: LOADK     R4 K17       ; R4 := "AS"
 62 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 63 [-]: MOVE      R0 R1        ; R0 := R1
 64 [-]: GETGLOBAL R1 K6        ; R1 := string
 65 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x633C4246"]
 66 [-]: MOVE      R2 R0        ; R2 := R0
 67 [-]: LOADK     R3 K14       ; R3 := "SOUTH_AMERICA"
 68 [-]: LOADK     R4 K15       ; R4 := "SA"
 69 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 70 [-]: MOVE      R0 R1        ; R0 := R1
 71 [-]: GETGLOBAL R1 K6        ; R1 := string
 72 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["0xDE44F664"]
 73 [-]: MOVE      R2 R0        ; R2 := R0
 74 [-]: LOADK     R3 K19       ; R3 := "_"
 75 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 76 [-]: TEST      R1 1         ; if R1 then PC := 91
 77 [-]: JMP       91           ; PC := 91
 78 [-]: GETGLOBAL R1 K6        ; R1 := string
 79 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["0xC6772A8A"]
 80 [-]: MOVE      R2 R0        ; R2 := R0
 81 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 82 [-]: LT        0 K21 R1     ; if 2 >= R1 then PC := 91
 83 [-]: JMP       91           ; PC := 91
 84 [-]: GETGLOBAL R1 K6        ; R1 := string
 85 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["0x7B782033"]
 86 [-]: MOVE      R2 R0        ; R2 := R0
 87 [-]: LOADK     R3 K23       ; R3 := 1
 88 [-]: LOADK     R4 K21       ; R4 := 2
 89 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 90 [-]: MOVE      R0 R1        ; R0 := R1
 91 [-]: LOADK     R1 K19       ; R1 := "_"
 92 [-]: MOVE      R2 R0        ; R2 := R0
 93 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 94 [-]: RETURN    R1 2         ; return R1
 95 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 475
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  9 [-]: LOADK     R2 K2        ; R2 := 0
 10 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 11 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xFF9D1139"]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 480
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := gClient
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x28A202CE"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: TEST      R3 0         ; if not R3 then PC := 34
  8 [-]: JMP       34           ; PC := 34
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x18AAE1E3"]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 13 [-]: MOVE      R5 R3        ; R5 := R3
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 18 [-]: MOVE      R5 R1        ; R5 := R1
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: TEST      R4 0         ; if not R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 23 [-]: MOVE      R1 R4        ; R1 := R4
 24 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x4313BA6"]
 25 [-]: GETGLOBAL R6 K5        ; R6 := mMovie
 26 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 27 [-]: MOVE      R8 R0        ; R8 := R0
 28 [-]: MOVE      R9 R0        ; R9 := R0
 29 [-]: MOVE      R10 R1       ; R10 := R1
 30 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 31 [-]: GETTABLE  R7 R3 K7     ; R7 := R3["MESSAGE_TYPE_SYSTEM"]
 32 [-]: LOADK     R8 K8        ; R8 := ""
 33 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 34 [-]: RETURN    R2 2         ; return R2
 35 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 496
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xAE78D1F"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 504
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x59AA9F4B"]
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETGLOBAL R5 K2        ; R5 := 0xF595ADDE
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 511
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x6ACA52A1"]
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETGLOBAL R5 K2        ; R5 := 0xF595ADDE
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 518
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETGLOBAL R1 K0        ; R1 := gMatchingService
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF0C493C"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 31
  9 [-]: JMP       31           ; PC := 31
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 31
 14 [-]: JMP       31           ; PC := 31
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x18AAE1E3"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1["0xBBE297EA"]
 24 [-]: LOADK     R5 K5        ; R5 := "#"
 25 [-]: GETTABLE  R6 R2 K6     ; R6 := R2["mChannelName"]
 26 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 27 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 28 [-]: TEST      R3 0         ; if not R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: RETURN    R0 2         ; return R0
 32 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 533
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 1         ; if R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
  7 [-]: LOADK     R3 K1        ; R3 := "%[OMG%-.*%]"
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 1         ; if R1 then PC := 61
 10 [-]: JMP       61           ; PC := 61
 11 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 12 [-]: LOADK     R3 K2        ; R3 := "%[SONG%-.*%]"
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: TEST      R1 1         ; if R1 then PC := 61
 15 [-]: JMP       61           ; PC := 61
 16 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 17 [-]: LOADK     R3 K3        ; R3 := "%[ZAW%-.*%]"
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: TEST      R1 1         ; if R1 then PC := 61
 20 [-]: JMP       61           ; PC := 61
 21 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 22 [-]: LOADK     R3 K4        ; R3 := "%[AMP%-.*%]"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 1         ; if R1 then PC := 61
 25 [-]: JMP       61           ; PC := 61
 26 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 27 [-]: LOADK     R3 K5        ; R3 := "%[MOA%-.*%]"
 28 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 29 [-]: TEST      R1 1         ; if R1 then PC := 61
 30 [-]: JMP       61           ; PC := 61
 31 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 32 [-]: LOADK     R3 K6        ; R3 := "%[KDR%-.*%]"
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: TEST      R1 1         ; if R1 then PC := 61
 35 [-]: JMP       61           ; PC := 61
 36 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 37 [-]: LOADK     R3 K7        ; R3 := "%[KIT%-.*%]"
 38 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 39 [-]: TEST      R1 1         ; if R1 then PC := 61
 40 [-]: JMP       61           ; PC := 61
 41 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 42 [-]: LOADK     R3 K8        ; R3 := "%[FF%-.*%]"
 43 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 44 [-]: TEST      R1 1         ; if R1 then PC := 61
 45 [-]: JMP       61           ; PC := 61
 46 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 47 [-]: LOADK     R3 K9        ; R3 := "%[MOD%-.*%]"
 48 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 49 [-]: TEST      R1 1         ; if R1 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 52 [-]: LOADK     R3 K10       ; R3 := "%[SHZN%-.*%]"
 53 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 54 [-]: TEST      R1 1         ; if R1 then PC := 61
 55 [-]: JMP       61           ; PC := 61
 56 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xDE44F664"]
 57 [-]: LOADK     R3 K11       ; R3 := "{GUILD=.*}"
 58 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 59 [-]: TEST      R1 0         ; if not R1 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: GETUPVAL  R1 U1        ; R1 := U1
 63 [-]: LEN       R1 R1        ; R1 := # R1
 64 [-]: GETUPVAL  R2 U2        ; R2 := U2
 65 [-]: LE        0 R2 R1      ; if R2 > R1 then PC := 72
 66 [-]: JMP       72           ; PC := 72
 67 [-]: GETGLOBAL R1 K12       ; R1 := table
 68 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["0xCDB1FD5E"]
 69 [-]: GETUPVAL  R2 U1        ; R2 := U1
 70 [-]: LOADK     R3 K14       ; R3 := 1
 71 [-]: CALL      R1 3 1       ; R1(R2,R3)
 72 [-]: GETUPVAL  R1 U1        ; R1 := U1
 73 [-]: LEN       R1 R1        ; R1 := # R1
 74 [-]: LT        0 K15 R1     ; if 0 >= R1 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETGLOBAL R1 K16       ; R1 := string
 77 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["0xBDD0D625"]
 78 [-]: GETUPVAL  R2 U1        ; R2 := U1
 79 [-]: GETUPVAL  R3 U1        ; R3 := U1
 80 [-]: LEN       R3 R3        ; R3 := # R3
 81 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 82 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 83 [-]: GETGLOBAL R2 K16       ; R2 := string
 84 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["0xBDD0D625"]
 85 [-]: MOVE      R3 R0        ; R3 := R0
 86 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 87 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: RETURN    R0 1         ; return 
 90 [-]: GETGLOBAL R1 K12       ; R1 := table
 91 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["0xE6450C9D"]
 92 [-]: GETUPVAL  R2 U1        ; R2 := U1
 93 [-]: MOVE      R3 R0        ; R3 := R0
 94 [-]: CALL      R1 3 1       ; R1(R2,R3)
 95 [-]: GETUPVAL  R1 U1        ; R1 := U1
 96 [-]: LEN       R1 R1        ; R1 := # R1
 97 [-]: ADD       R1 R1 K14    ; R1 := R1 + 1
 98 [-]: MOVE      R1 R3        ; R1 := R3
 99 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 567
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LEN       R1 R1        ; R1 := # R1
  3 [-]: EQ        1 R1 K0      ; if R1 == 0 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: LEN       R2 R2        ; R2 := # R2
 13 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LT        0 K0 R0      ; if 0 >= R0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETGLOBAL R1 K1        ; R1 := 0x6374FD98
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: ADD       R2 R2 R0     ; R2 := R2 + R0
 21 [-]: LOADK     R3 K2        ; R3 := 1
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: LEN       R4 R4        ; R4 := # R4
 24 [-]: ADD       R4 R4 K2     ; R4 := R4 + 1
 25 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 26 [-]: GETUPVAL  R2 U2        ; R2 := U2
 27 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 59
 28 [-]: JMP       59           ; PC := 59
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETUPVAL  R2 U3        ; R2 := U3
 31 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xF81722A2"]
 32 [-]: GETUPVAL  R3 U0        ; R3 := U0
 33 [-]: LEN       R3 R3        ; R3 := # R3
 34 [-]: LT        1 R3 R1      ; if R3 < R1 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R3 R0        ; R3 := R0
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: LOADK     R4 K4        ; R4 := ""
 39 [-]: GETUPVAL  R5 U0        ; R5 := U0
 40 [-]: GETUPVAL  R6 U2        ; R6 := U2
 41 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 42 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 43 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 44 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xD6A79FE9"]
 45 [-]: LOADK     R5 K7        ; R5 := "Window.SendMessageBar.MessageBox"
 46 [-]: LOADK     R6 K8        ; R6 := "text"
 47 [-]: MOVE      R7 R2        ; R7 := R2
 48 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 49 [-]: GETGLOBAL R3 K9        ; R3 := string
 50 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xC6772A8A"]
 51 [-]: MOVE      R4 R2        ; R4 := R2
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 54 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x1C19D966"]
 55 [-]: LOADK     R6 K7        ; R6 := "Window.SendMessageBar.MessageBox"
 56 [-]: LOADK     R7 K12       ; R7 := "cursorPos"
 57 [-]: MOVE      R8 R3        ; R8 := R3
 58 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 59 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 593
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        0 R2 K0      ; if R2 ~= 1 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xB11F032"]
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R4 2 1       ; R4(R5)
  7 [-]: JMP       21           ; PC := 21
  8 [-]: TEST      R3 0         ; if not R3 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R4 U0        ; R4 := U0
 11 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0x1C988750"]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: CALL      R4 3 1       ; R4(R5,R6)
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x5AE6E363"]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: MOVE      R6 R1        ; R6 := R1
 20 [-]: CALL      R4 3 1       ; R4(R5,R6)
 21 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 605
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SETTABLE  R4 K0 K1     ; R4["mLongestElement"] := 0
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6470BAF4"]
  5 [-]: MOVE      R6 R2        ; R6 := R2
  6 [-]: MOVE      R7 R3        ; R7 := R3
  7 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
  8 [-]: LOADK     R4 K3        ; R4 := 1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0xC51A5C9D"]
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: LOADK     R6 K3        ; R6 := 1
 13 [-]: FORPREP   R4 41        ; R4 -= R6; PC := 41
 14 [-]: GETUPVAL  R8 U0        ; R8 := U0
 15 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0xD75E681A"]
 16 [-]: MOVE      R10 R7       ; R10 := R7
 17 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 18 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
 19 [-]: MOVE      R10 R8       ; R10 := R8
 20 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 21 [-]: TEST      R9 1         ; if R9 then PC := 41
 22 [-]: JMP       41           ; PC := 41
 23 [-]: GETGLOBAL R9 K7        ; R9 := mMovie
 24 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0x880196A7"]
 25 [-]: GETTABLE  R11 R8 K9    ; R11 := R8["mClipName"]
 26 [-]: LOADK     R12 K10      ; R12 := "Btn"
 27 [-]: LOADK     R13 K11      ; R13 := "_width"
 28 [-]: GETUPVAL  R14 U0       ; R14 := U0
 29 [-]: GETTABLE  R14 R14 K0   ; R14 := R14["mLongestElement"]
 30 [-]: ADD       R14 R14 K12  ; R14 := R14 + 10
 31 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 32 [-]: GETGLOBAL R9 K7        ; R9 := mMovie
 33 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0x880196A7"]
 34 [-]: GETTABLE  R11 R8 K9    ; R11 := R8["mClipName"]
 35 [-]: LOADK     R12 K13      ; R12 := "Bg"
 36 [-]: LOADK     R13 K11      ; R13 := "_width"
 37 [-]: GETUPVAL  R14 U0       ; R14 := U0
 38 [-]: GETTABLE  R14 R14 K0   ; R14 := R14["mLongestElement"]
 39 [-]: ADD       R14 R14 K14  ; R14 := R14 + 13
 40 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 41 [-]: FORLOOP   R4 14        ; R4 += R6; if R4 <= R5 then begin PC := 14; R7 := R4 end
 42 [-]: GETUPVAL  R9 U0        ; R9 := U0
 43 [-]: GETTABLE  R9 R9 K0     ; R9 := R9["mLongestElement"]
 44 [-]: ADD       R9 R9 K12    ; R9 := R9 + 10
 45 [-]: GETUPVAL  R10 U0       ; R10 := U0
 46 [-]: SELF      R10 R10 K4   ; R11 := R10; R10 := R10["0xC51A5C9D"]
 47 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 48 [-]: GETUPVAL  R11 U0       ; R11 := U0
 49 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mForcedVerticalSeparation"]
 50 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
 51 [-]: ADD       R10 R10 K12  ; R10 := R10 + 10
 52 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 53 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 54 [-]: LOADK     R13 K17      ; R13 := "ContextMenu.Bg"
 55 [-]: LOADK     R14 K11      ; R14 := "_width"
 56 [-]: MOVE      R15 R9       ; R15 := R9
 57 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 58 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 59 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 60 [-]: LOADK     R13 K17      ; R13 := "ContextMenu.Bg"
 61 [-]: LOADK     R14 K18      ; R14 := "_height"
 62 [-]: MOVE      R15 R10      ; R15 := R10
 63 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 64 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 65 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 66 [-]: LOADK     R13 K19      ; R13 := "ContextMenu.EdgeTop"
 67 [-]: LOADK     R14 K11      ; R14 := "_width"
 68 [-]: ADD       R15 R9 K20   ; R15 := R9 + 2
 69 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 70 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 71 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 72 [-]: LOADK     R13 K21      ; R13 := "ContextMenu.EdgeLeft"
 73 [-]: LOADK     R14 K18      ; R14 := "_height"
 74 [-]: MOVE      R15 R10      ; R15 := R10
 75 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 76 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 77 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 78 [-]: LOADK     R13 K22      ; R13 := "ContextMenu.EdgeRight"
 79 [-]: LOADK     R14 K23      ; R14 := "_x"
 80 [-]: GETGLOBAL R15 K24      ; R15 := 0xF595ADDE
 81 [-]: GETGLOBAL R16 K7       ; R16 := mMovie
 82 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x6B7B470B"]
 83 [-]: LOADK     R18 K17      ; R18 := "ContextMenu.Bg"
 84 [-]: LOADK     R19 K23      ; R19 := "_x"
 85 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
 86 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 87 [-]: ADD       R15 R15 R9   ; R15 := R15 + R9
 88 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 89 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 90 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 91 [-]: LOADK     R13 K22      ; R13 := "ContextMenu.EdgeRight"
 92 [-]: LOADK     R14 K18      ; R14 := "_height"
 93 [-]: MOVE      R15 R10      ; R15 := R10
 94 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 95 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
 96 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
 97 [-]: LOADK     R13 K26      ; R13 := "ContextMenu.EdgeBottom"
 98 [-]: LOADK     R14 K27      ; R14 := "_y"
 99 [-]: MOVE      R15 R10      ; R15 := R10
100 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
101 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
102 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
103 [-]: LOADK     R13 K26      ; R13 := "ContextMenu.EdgeBottom"
104 [-]: LOADK     R14 K11      ; R14 := "_width"
105 [-]: ADD       R15 R9 K20   ; R15 := R9 + 2
106 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
107 [-]: ADD       R11 R1 R10   ; R11 := R1 + R10
108 [-]: GETUPVAL  R12 U1       ; R12 := U1
109 [-]: LE        0 R12 R11    ; if R12 > R11 then PC := 112
110 [-]: JMP       112          ; PC := 112
111 [-]: SUB       R1 R1 R10    ; R1 := R1 - R10
112 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
113 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
114 [-]: LOADK     R13 K28      ; R13 := "ContextMenu"
115 [-]: LOADK     R14 K23      ; R14 := "_x"
116 [-]: MOVE      R15 R0       ; R15 := R0
117 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
118 [-]: GETGLOBAL R11 K7       ; R11 := mMovie
119 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1C19D966"]
120 [-]: LOADK     R13 K28      ; R13 := "ContextMenu"
121 [-]: LOADK     R14 K27      ; R14 := "_y"
122 [-]: MOVE      R15 R1       ; R15 := R1
123 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
124 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 639
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := _G
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["StalkerMode"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
  8 [-]: LOADK     R4 K4        ; R4 := "ContextMenu"
  9 [-]: LOADK     R5 K5        ; R5 := "enabled"
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 12 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
 14 [-]: LOADK     R4 K4        ; R4 := "ContextMenu"
 15 [-]: LOADK     R5 K6        ; R5 := "_visible"
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: GETGLOBAL R2 K7        ; R2 := 0x400E7765
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x400E7765
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 0         ; if not R2 then PC := 42
 27 [-]: JMP       42           ; PC := 42
 28 [-]: GETGLOBAL R2 K8        ; R2 := 0xF595ADDE
 29 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x6B7B470B"]
 31 [-]: LOADK     R5 K10       ; R5 := "_xmouse"
 32 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 33 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 34 [-]: ADD       R0 R2 K11    ; R0 := R2 + 4
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0xF595ADDE
 36 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 37 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x6B7B470B"]
 38 [-]: LOADK     R5 K12       ; R5 := "_ymouse"
 39 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 40 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 41 [-]: SUB       R1 R2 K11    ; R1 := R2 - 4
 42 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 43 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
 44 [-]: LOADK     R4 K13       ; R4 := "Window"
 45 [-]: LOADK     R5 K14       ; R5 := "noMenuSelection"
 46 [-]: MOVE      R6 R1        ; R6 := R1
 47 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 48 [-]: GETUPVAL  R2 U0        ; R2 := U0
 49 [-]: MOVE      R3 R0        ; R3 := R0
 50 [-]: MOVE      R4 R1        ; R4 := R1
 51 [-]: LOADNIL   R5 R5        ; R5 := nil
 52 [-]: MOVE      R6 R1        ; R6 := R1
 53 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 54 [-]: GETGLOBAL R2 K15       ; R2 := Engine
 55 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["0x9490FE70"]
 56 [-]: CALL      R2 1 2       ; R2 := R2()
 57 [-]: TEST      R2 0         ; if not R2 then PC := 79
 58 [-]: JMP       79           ; PC := 79
 59 [-]: GETUPVAL  R2 U1        ; R2 := U1
 60 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0xC51A5C9D"]
 61 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 62 [-]: LE        0 K18 R2     ; if 1 > R2 then PC := 79
 63 [-]: JMP       79           ; PC := 79
 64 [-]: GETGLOBAL R2 K7        ; R2 := 0x400E7765
 65 [-]: GETUPVAL  R3 U2        ; R3 := U2
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: TEST      R2 1         ; if R2 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETGLOBAL R2 K7        ; R2 := 0x400E7765
 70 [-]: GETUPVAL  R3 U2        ; R3 := U2
 71 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["mUserPanel"]
 72 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 73 [-]: TEST      R2 1         ; if R2 then PC := 79
 74 [-]: JMP       79           ; PC := 79
 75 [-]: GETUPVAL  R2 U2        ; R2 := U2
 76 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["mUserPanel"]
 77 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x3F9ADB3B"]
 78 [-]: CALL      R2 2 1       ; R2(R3)
 79 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 663
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "ContextMenu"
  4 [-]: LOADK     R3 K3        ; R3 := "enabled"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  9 [-]: LOADK     R2 K2        ; R2 := "ContextMenu"
 10 [-]: LOADK     R3 K4        ; R3 := "_visible"
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 14 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 15 [-]: LOADK     R2 K5        ; R2 := "Window"
 16 [-]: LOADK     R3 K6        ; R3 := "noMenuSelection"
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 19 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 87
 23 [-]: JMP       87           ; PC := 87
 24 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 27 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 28 [-]: TEST      R0 1         ; if R0 then PC := 87
 29 [-]: JMP       87           ; PC := 87
 30 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 33 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mListControl"]
 34 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 35 [-]: TEST      R0 1         ; if R0 then PC := 87
 36 [-]: JMP       87           ; PC := 87
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["mUserPanel"]
 39 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["mListControl"]
 40 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0x97B489B5"]
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 43 [-]: GETUPVAL  R2 U0        ; R2 := U0
 44 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mUserPanel"]
 45 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mStoredUserFocusId"]
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: TEST      R1 0         ; if not R1 then PC := 61
 48 [-]: JMP       61           ; PC := 61
 49 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 1         ; if R1 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: GETUPVAL  R1 U0        ; R1 := U0
 55 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 56 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mListControl"]
 57 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x2176B11E"]
 58 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["Id"]
 59 [-]: CALL      R1 3 1       ; R1(R2,R3)
 60 [-]: JMP       87           ; PC := 87
 61 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 62 [-]: GETUPVAL  R2 U0        ; R2 := U0
 63 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mUserPanel"]
 64 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mStoredUserFocusId"]
 65 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 66 [-]: TEST      R1 1         ; if R1 then PC := 87
 67 [-]: JMP       87           ; PC := 87
 68 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 69 [-]: MOVE      R2 R0        ; R2 := R0
 70 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 71 [-]: TEST      R1 1         ; if R1 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: GETUPVAL  R1 U0        ; R1 := U0
 74 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 75 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mStoredUserFocusId"]
 76 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["Id"]
 77 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 87
 78 [-]: JMP       87           ; PC := 87
 79 [-]: GETUPVAL  R1 U0        ; R1 := U0
 80 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 81 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mListControl"]
 82 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 83 [-]: GETUPVAL  R3 U0        ; R3 := U0
 84 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mUserPanel"]
 85 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mStoredUserFocusId"]
 86 [-]: CALL      R1 3 1       ; R1(R2,R3)
 87 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 680
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x248828F7"]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  7 [-]: GETUPVAL  R3 U2        ; R3 := U2
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mInputPanel"]
  9 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mClipPath"]
 10 [-]: LOADK     R4 K5        ; R4 := ".MessageBox"
 11 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 12 [-]: LOADK     R4 K6        ; R4 := "text"
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
 16 [-]: LOADK     R4 K7        ; R4 := "Tip.InputFeedbackLeft"
 17 [-]: LOADK     R5 K6        ; R5 := "text"
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: GETGLOBAL R3 K8        ; R3 := 0xF595ADDE
 20 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 21 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
 22 [-]: GETUPVAL  R6 U2        ; R6 := U2
 23 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mInputPanel"]
 24 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mClipPath"]
 25 [-]: LOADK     R7 K5        ; R7 := ".MessageBox"
 26 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 27 [-]: LOADK     R7 K9        ; R7 := "cursorPos"
 28 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 29 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0xD27A21F7
 31 [-]: MOVE      R5 R1        ; R5 := R1
 32 [-]: MOVE      R6 R3        ; R6 := R3
 33 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 34 [-]: GETGLOBAL R5 K11       ; R5 := string
 35 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["0x7B782033"]
 36 [-]: MOVE      R6 R1        ; R6 := R1
 37 [-]: LOADK     R7 K13       ; R7 := 0
 38 [-]: GETGLOBAL R8 K11       ; R8 := string
 39 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xC6772A8A"]
 40 [-]: MOVE      R9 R2        ; R9 := R2
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: SUB       R8 R4 R8     ; R8 := R4 - R8
 43 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 44 [-]: GETGLOBAL R6 K11       ; R6 := string
 45 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["0x7B782033"]
 46 [-]: MOVE      R7 R1        ; R7 := R1
 47 [-]: ADD       R8 R4 K15    ; R8 := R4 + 1
 48 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 49 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 50 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 51 [-]: LOADK     R9 K17       ; R9 := "/Lotus/Language/Menu/Whitespace"
 52 [-]: MOVE      R10 R0       ; R10 := R0
 53 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 54 [-]: EQ        0 R7 K18     ; if R7 ~= "-" then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADK     R7 K19       ; R7 := ""
 57 [-]: MOVE      R8 R5        ; R8 := R5
 58 [-]: MOVE      R9 R0        ; R9 := R0
 59 [-]: MOVE      R10 R7       ; R10 := R7
 60 [-]: MOVE      R11 R6       ; R11 := R6
 61 [-]: CONCAT    R8 R8 R11    ; R8 := R8 .. R9 .. R10 .. R11
 62 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
 63 [-]: SELF      R9 R9 K20    ; R10 := R9; R9 := R9["0xD6A79FE9"]
 64 [-]: GETUPVAL  R11 U2       ; R11 := U2
 65 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["mInputPanel"]
 66 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mClipPath"]
 67 [-]: LOADK     R12 K5       ; R12 := ".MessageBox"
 68 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 69 [-]: LOADK     R12 K6       ; R12 := "text"
 70 [-]: MOVE      R13 R8       ; R13 := R8
 71 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 72 [-]: GETUPVAL  R9 U0        ; R9 := U0
 73 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["0xA18F392B"]
 74 [-]: GETUPVAL  R10 U1       ; R10 := U1
 75 [-]: CALL      R9 2 1       ; R9(R10)
 76 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
 77 [-]: SELF      R9 R9 K22    ; R10 := R9; R9 := R9["0x12635C5E"]
 78 [-]: GETUPVAL  R11 U2       ; R11 := U2
 79 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["mInputPanel"]
 80 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mClipPath"]
 81 [-]: LOADK     R12 K5       ; R12 := ".MessageBox"
 82 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 83 [-]: CALL      R9 3 1       ; R9(R10,R11)
 84 [-]: GETUPVAL  R9 U2        ; R9 := U2
 85 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["mInputPanel"]
 86 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9["0xF91423B4"]
 87 [-]: MOVE      R11 R1       ; R11 := R1
 88 [-]: CALL      R9 3 1       ; R9(R10,R11)
 89 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
 90 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9["0x880196A7"]
 91 [-]: GETUPVAL  R11 U2       ; R11 := U2
 92 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["mInputPanel"]
 93 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mClipPath"]
 94 [-]: LOADK     R12 K25      ; R12 := "MessageBox"
 95 [-]: LOADK     R13 K9       ; R13 := "cursorPos"
 96 [-]: GETGLOBAL R14 K11      ; R14 := string
 97 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["0xC6772A8A"]
 98 [-]: MOVE      R15 R0       ; R15 := R0
 99 [-]: CALL      R14 2 2      ; R14 := R14(R15)
100 [-]: GETGLOBAL R15 K11      ; R15 := string
101 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["0xC6772A8A"]
102 [-]: MOVE      R16 R2       ; R16 := R2
103 [-]: CALL      R15 2 2      ; R15 := R15(R16)
104 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
105 [-]: GETGLOBAL R15 K11      ; R15 := string
106 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["0xC6772A8A"]
107 [-]: MOVE      R16 R7       ; R16 := R7
108 [-]: CALL      R15 2 2      ; R15 := R15(R16)
109 [-]: ADD       R14 R14 R15  ; R14 := R14 + R15
110 [-]: ADD       R14 R3 R14   ; R14 := R3 + R14
111 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
112 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
113 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9["0x880196A7"]
114 [-]: GETUPVAL  R11 U2       ; R11 := U2
115 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["mInputPanel"]
116 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mClipPath"]
117 [-]: LOADK     R12 K25      ; R12 := "MessageBox"
118 [-]: LOADK     R13 K26      ; R13 := "textSuggestActive"
119 [-]: MOVE      R14 R0       ; R14 := R0
120 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
121 [-]: GETUPVAL  R9 U0        ; R9 := U0
122 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["0xE7E1F009"]
123 [-]: LOADK     R10 K15      ; R10 := 1
124 [-]: GETUPVAL  R11 U1       ; R11 := U1
125 [-]: CALL      R9 3 1       ; R9(R10,R11)
126 [-]: MOVE      R9 R0        ; R9 := R0
127 [-]: MOVE      R9 R3        ; R9 := R3
128 [-]: MOVE      R9 R0        ; R9 := R0
129 [-]: MOVE      R9 R4        ; R9 := R4
130 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 707
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 712
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: TEST      R0 1         ; if R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xAC575C26"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 717
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x63521C50"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 722
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: TEST      R0 1         ; if R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x39C3B175"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 727
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3451E88A"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 734
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xD4E09EEA"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mBottomResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 739
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xF208C4C7"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mBottomResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 744
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x8D6A4C4E"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mBottomResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 749
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x9774A9CF"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mBottomResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 754
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 17
  3 [-]: JMP       17           ; PC := 17
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mWindowStatus"]
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["isDragging"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: TEST      R0 1         ; if R0 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xF208C4C7"]
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mBottomResizeClipName"]
 16 [-]: CALL      R0 3 1       ; R0(R1,R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 760
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xD4E09EEA"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTopResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 765
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xF208C4C7"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTopResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 770
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x8D6A4C4E"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTopResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 775
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x9774A9CF"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTopResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 781
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 4
  3 [-]: JMP       4            ; PC := 4
  4 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 788
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x18AAE1E3"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 10 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mTextScroll"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mTextScroll"]
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x3AEEE6C2"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 795
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x18AAE1E3"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 10 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mTextScroll"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mTextScroll"]
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD963824A"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 802
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x18AAE1E3"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 10 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mTextScroll"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mTextScroll"]
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xA133F1D5"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 810
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mListControl"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 25 [-]: GETGLOBAL R2 K4        ; R2 := 0xF595ADDE
 26 [-]: MOVE      R3 R0        ; R3 := R0
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: SETTABLE  R1 K3 R2     ; R1["mStoredUserFocusId"] := R2
 29 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 30 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6B7B470B"]
 31 [-]: LOADK     R3 K7        ; R3 := "ContextMenu"
 32 [-]: LOADK     R4 K8        ; R4 := "enabled"
 33 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 34 [-]: EQ        0 R1 K9      ; if R1 ~= "true" then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETUPVAL  R1 U0        ; R1 := U0
 38 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 39 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mListControl"]
 40 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 41 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 42 [-]: MOVE      R4 R0        ; R4 := R0
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: MOVE      R4 R1        ; R4 := R1
 45 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 46 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 820
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 15 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mListControl"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 22 [-]: SETTABLE  R1 K3 K4     ; R1["mStoredUserFocusId"] := nil
 23 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6B7B470B"]
 25 [-]: LOADK     R3 K7        ; R3 := "ContextMenu"
 26 [-]: LOADK     R4 K8        ; R4 := "enabled"
 27 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 28 [-]: EQ        0 R1 K9      ; if R1 ~= "true" then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 33 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mListControl"]
 34 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x2176B11E"]
 35 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 38 [-]: CALL      R1 0 1       ; R1(R2,...)
 39 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 830
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 29
  8 [-]: JMP       29           ; PC := 29
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mListControl"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6B7B470B"]
 24 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 25 [-]: LOADK     R4 K6        ; R4 := "enabled"
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: EQ        0 R1 K7      ; if R1 ~= "true" then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 32 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mListControl"]
 33 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x3BC31182"]
 34 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 35 [-]: MOVE      R4 R0        ; R4 := R0
 36 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 37 [-]: CALL      R1 0 1       ; R1(R2,...)
 38 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 837
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mEmoteGrid"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 25 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEmoteGrid"]
 26 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 27 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 30 [-]: CALL      R1 0 1       ; R1(R2,...)
 31 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 843
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 15 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mEmoteGrid"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 22 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEmoteGrid"]
 23 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x2176B11E"]
 24 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 1       ; R1(R2,...)
 28 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 849
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 18 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEmoteGrid"]
 19 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x3BC31182"]
 20 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 23 [-]: CALL      R1 0 1       ; R1(R2,...)
 24 [-]: GETUPVAL  R1 U2        ; R1 := U2
 25 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x25992394"]
 26 [-]: GETGLOBAL R2 K6        ; R2 := _G
 27 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UISound_ItemTipSection"]
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 858
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xDB118937"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0xECFDD17
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mPanelList"]
  9 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 10 [-]: JMP       17           ; PC := 17
 11 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R7 R6 K4     ; R7 := R6["mChannelName"]
 14 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R6 2         ; return R6
 17 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 11; R4 := R5 end
 18 [-]: JMP       11           ; PC := 11
 19 [-]: LOADNIL   R7 R7        ; R7 := nil
 20 [-]: RETURN    R7 2         ; return R7
 21 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 870
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mNextPrivateChatId"]
  3 [-]: LOADK     R3 K1        ; R3 := "#"
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xDB118937"]
  6 [-]: CALL      R4 1 2       ; R4 := R4()
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xDBE013EB"]
 11 [-]: GETUPVAL  R6 U0        ; R6 := U0
 12 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["CHANNEL_ENTER"]
 13 [-]: MOVE      R7 R3        ; R7 := R3
 14 [-]: MOVE      R8 R0        ; R8 := R0
 15 [-]: MOVE      R9 R2        ; R9 := R2
 16 [-]: CALL      R4 6 2       ; R4 := R4(R5,R6,R7,R8,R9)
 17 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETUPVAL  R5 U1        ; R5 := U1
 23 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xB821FEFD"]
 24 [-]: MOVE      R7 R0        ; R7 := R0
 25 [-]: MOVE      R8 R1        ; R8 := R1
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: SETTABLE  R4 K6 R5     ; R4["mHasAccount"] := R5
 28 [-]: GETUPVAL  R5 U0        ; R5 := U0
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["mNextPrivateChatId"]
 31 [-]: ADD       R6 R6 K8     ; R6 := R6 + 1
 32 [-]: SETTABLE  R5 K0 R6     ; R5["mNextPrivateChatId"] := R6
 33 [-]: RETURN    R4 2         ; return R4
 34 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 885
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 0         ; if not R4 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: TEST      R2 1         ; if R2 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 15 [-]: MOVE      R3 R4        ; R3 := R4
 16 [-]: RETURN    R3 2         ; return R3
 17 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 895
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  8 [-]: MOVE      R5 R2        ; R5 := R2
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 0         ; if not R4 then PC := 77
 11 [-]: JMP       77           ; PC := 77
 12 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 61
 16 [-]: JMP       61           ; PC := 61
 17 [-]: GETUPVAL  R4 U1        ; R4 := U1
 18 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x3155222A"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        1 K2 R4      ; if 0 < R4 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R3 R0        ; R3 := R0
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: TEST      R3 1         ; if R3 then PC := 61
 25 [-]: JMP       61           ; PC := 61
 26 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 27 [-]: GETUPVAL  R5 U1        ; R5 := U1
 28 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0xEFBD95B0"]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: GETUPVAL  R6 U1        ; R6 := U1
 31 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xD35AC00A"]
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: GETUPVAL  R7 U1        ; R7 := U1
 34 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x942A2CE9"]
 35 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 36 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 37 [-]: LOADK     R5 K6        ; R5 := 1
 38 [-]: LEN       R6 R4        ; R6 := # R4
 39 [-]: LOADK     R7 K6        ; R7 := 1
 40 [-]: FORPREP   R5 60        ; R5 -= R7; PC := 60
 41 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 42 [-]: LOADK     R10 K6       ; R10 := 1
 43 [-]: LEN       R11 R9       ; R11 := # R9
 44 [-]: LOADK     R12 K6       ; R12 := 1
 45 [-]: FORPREP   R10 56       ; R10 -= R12; PC := 56
 46 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 47 [-]: GETTABLE  R14 R14 K7   ; R14 := R14["mDisplayName"]
 48 [-]: EQ        0 R14 R0     ; if R14 ~= R0 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 51 [-]: GETTABLE  R14 R14 K8   ; R14 := R14["mStatus"]
 52 [-]: EQ        0 R14 K2     ; if R14 ~= 0 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: MOVE      R3 R1        ; R3 := R1
 55 [-]: JMP       57           ; PC := 57
 56 [-]: FORLOOP   R10 46       ; R10 += R12; if R10 <= R11 then begin PC := 46; R13 := R10 end
 57 [-]: TEST      R3 0         ; if not R3 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: JMP       61           ; PC := 61
 60 [-]: FORLOOP   R5 41        ; R5 += R7; if R5 <= R6 then begin PC := 41; R8 := R5 end
 61 [-]: TEST      R3 0         ; if not R3 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: GETUPVAL  R14 U2       ; R14 := U2
 64 [-]: MOVE      R15 R0       ; R15 := R0
 65 [-]: MOVE      R16 R1       ; R16 := R1
 66 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 67 [-]: MOVE      R2 R14       ; R2 := R14
 68 [-]: JMP       77           ; PC := 77
 69 [-]: GETUPVAL  R14 U3       ; R14 := U3
 70 [-]: SELF      R14 R14 K9   ; R15 := R14; R14 := R14["0xAE78D1F"]
 71 [-]: GETGLOBAL R16 K10      ; R16 := mMovie
 72 [-]: SELF      R16 R16 K11  ; R17 := R16; R16 := R16["0x5DB0BD4"]
 73 [-]: LOADK     R18 K12      ; R18 := "/Lotus/Language/Menu/Chat_InitiatePMFailed"
 74 [-]: MOVE      R19 R0       ; R19 := R0
 75 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
 76 [-]: CALL      R14 0 1      ; R14(R15,...)
 77 [-]: GETGLOBAL R14 K0       ; R14 := 0x400E7765
 78 [-]: MOVE      R15 R2       ; R15 := R2
 79 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 80 [-]: TEST      R14 1        ; if R14 then PC := 86
 81 [-]: JMP       86           ; PC := 86
 82 [-]: GETUPVAL  R14 U3       ; R14 := U3
 83 [-]: SELF      R14 R14 K13  ; R15 := R14; R14 := R14["0xE2A2E3AC"]
 84 [-]: MOVE      R16 R2       ; R16 := R2
 85 [-]: CALL      R14 3 1      ; R14(R15,R16)
 86 [-]: RETURN    R3 2         ; return R3
 87 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 937
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
  7 [-]: GETGLOBAL R1 K3        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ForegroundMovie"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETGLOBAL R0 K3        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["CanShowPlayTypeDropDown"]
 14 [-]: TEST      R0 0         ; if not R0 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R0 K3        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["ForegroundMovie"]
 18 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x458F27A9"]
 19 [-]: LOADK     R2 K7        ; R2 := "TogglePlayTypeDropDown"
 20 [-]: LOADK     R3 K8        ; R3 := "true"
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: GETGLOBAL R0 K3        ; R0 := _T
 23 [-]: SETTABLE  R0 K9 K10    ; R0["gToolTip"] := nil
 24 [-]: GETUPVAL  R0 U0        ; R0 := U0
 25 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0["0xC4A34CB3"]
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 28 [-]: CALL      R0 3 1       ; R0(R1,R2)
 29 [-]: GETUPVAL  R0 U1        ; R0 := U1
 30 [-]: CALL      R0 1 1       ; R0()
 31 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 951
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gRegion
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["HIDDEN_PLAYER_NAME"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R1 R0        ; R1 := R0
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UI_MODE_IN_GAME"]
 17 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 20 [-]: GETGLOBAL R2 K4        ; R2 := gGameRules
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: TEST      R1 1         ; if R1 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R1 K4        ; R1 := gGameRules
 25 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x8B598ED4"]
 26 [-]: GETGLOBAL R3 K6        ; R3 := gLotusPvpGameRulesType
 27 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R1 K4        ; R1 := gGameRules
 31 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x8B598ED4"]
 32 [-]: GETGLOBAL R3 K7        ; R3 := gLotusFightingGameRulesType
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: TEST      R1 0         ; if not R1 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R1 R1        ; R1 := R1
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
 39 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x372CB914"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: MOVE      R2 R0        ; R2 := R0
 42 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 43 [-]: MOVE      R4 R1        ; R4 := R1
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1["0x62914D1F"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: EQ        0 R3 K10     ; if R3 ~= 255 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: MOVE      R2 R1        ; R2 := R1
 52 [-]: JMP       85           ; PC := 85
 53 [-]: GETGLOBAL R3 K1        ; R3 := gRegion
 54 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x48FBE19F"]
 55 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 56 [-]: LOADK     R4 K12       ; R4 := 1
 57 [-]: LEN       R5 R3        ; R5 := # R3
 58 [-]: LOADK     R6 K12       ; R6 := 1
 59 [-]: FORPREP   R4 84        ; R4 -= R6; PC := 84
 60 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 61 [-]: SELF      R9 R8 K13    ; R10 := R8; R9 := R8["0x144A28F9"]
 62 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 63 [-]: EQ        0 R9 R0      ; if R9 ~= R0 then PC := 84
 64 [-]: JMP       84           ; PC := 84
 65 [-]: SELF      R9 R8 K9     ; R10 := R8; R9 := R8["0x62914D1F"]
 66 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 67 [-]: SELF      R10 R1 K9    ; R11 := R1; R10 := R1["0x62914D1F"]
 68 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 69 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 82
 70 [-]: JMP       82           ; PC := 82
 71 [-]: GETGLOBAL R9 K14       ; R9 := _T
 72 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PvpMode"]
 73 [-]: TESTSET   R2 R9 0      ; if not R9 then PC := 83 else R2 := R9
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETGLOBAL R9 K14       ; R9 := _T
 76 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PvpMode"]
 77 [-]: GETGLOBAL R10 K16      ; R10 := Lotus_Game
 78 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["PVPMODE_DEATHMATCH"]
 79 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: MOVE      R2 R0        ; R2 := R0
 82 [-]: MOVE      R2 R1        ; R2 := R1
 83 [-]: JMP       85           ; PC := 85
 84 [-]: FORLOOP   R4 60        ; R4 += R6; if R4 <= R5 then begin PC := 60; R7 := R4 end
 85 [-]: RETURN    R2 2         ; return R2
 86 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 984
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R1 K3        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xB7760D"]
 10 [-]: CALL      R1 1 1       ; R1()
 11 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 990
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 996
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["VISUAL_MODE_MENU_SIMPLE"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1000
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1005
; #Upvalues:       28
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: SETTABLE  R2 K0 R0     ; R2["mParent"] := R0
  3 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  4 [-]: SETTABLE  R2 K1 R3     ; R2["mWindow"] := R3
  5 [-]: SETTABLE  R2 K2 R1     ; R2["mClipName"] := R1
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  7 [-]: SETTABLE  R2 K3 R3     ; R2["mClipParent"] := R3
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K5        ; R4 := "."
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 12 [-]: SETTABLE  R2 K4 R3     ; R2["mClipPath"] := R3
 13 [-]: SETTABLE  R2 K6 K7     ; R2["mListControl"] := nil
 14 [-]: SETTABLE  R2 K8 K7     ; R2["mStoredUserFocusId"] := nil
 15 [-]: SETTABLE  R2 K9 K7     ; R2["mUserLocator"] := nil
 16 [-]: SETTABLE  R2 K10 K11   ; R2["mIsExpanded"] := "0x0"
 17 [-]: SETTABLE  R2 K12 K11   ; R2["mUserListInterpolating"] := "0x0"
 18 [-]: CLOSURE   R3 0         ; R3 := closure(Function #54.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: GETUPVAL  R0 U2        ; R0 := U2
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: GETUPVAL  R0 U4        ; R0 := U4
 24 [-]: GETUPVAL  R0 U5        ; R0 := U5
 25 [-]: GETUPVAL  R0 U6        ; R0 := U6
 26 [-]: GETUPVAL  R0 U7        ; R0 := U7
 27 [-]: GETUPVAL  R0 U8        ; R0 := U8
 28 [-]: GETUPVAL  R0 U9        ; R0 := U9
 29 [-]: GETUPVAL  R0 U10       ; R0 := U10
 30 [-]: SETTABLE  R2 K13 R3    ; R2["Initialize"] := R3
 31 [-]: CLOSURE   R3 1         ; R3 := closure(Function #54.2)
 32 [-]: SETTABLE  R2 K14 R3    ; R2["FocusElement"] := R3
 33 [-]: CLOSURE   R3 2         ; R3 := closure(Function #54.3)
 34 [-]: SETTABLE  R2 K15 R3    ; R2["UpdateListFocus"] := R3
 35 [-]: CLOSURE   R3 3         ; R3 := closure(Function #54.4)
 36 [-]: SETTABLE  R2 K16 R3    ; R2["Clear"] := R3
 37 [-]: CLOSURE   R3 4         ; R3 := closure(Function #54.5)
 38 [-]: GETUPVAL  R0 U3        ; R0 := U3
 39 [-]: GETUPVAL  R0 U11       ; R0 := U11
 40 [-]: GETUPVAL  R0 U12       ; R0 := U12
 41 [-]: GETUPVAL  R0 U13       ; R0 := U13
 42 [-]: SETTABLE  R2 K17 R3    ; R2["Update"] := R3
 43 [-]: CLOSURE   R3 5         ; R3 := closure(Function #54.6)
 44 [-]: GETUPVAL  R0 U12       ; R0 := U12
 45 [-]: GETUPVAL  R0 U3        ; R0 := U3
 46 [-]: GETUPVAL  R0 U14       ; R0 := U14
 47 [-]: GETUPVAL  R0 U11       ; R0 := U11
 48 [-]: GETUPVAL  R0 U15       ; R0 := U15
 49 [-]: GETUPVAL  R0 U16       ; R0 := U16
 50 [-]: GETUPVAL  R0 U17       ; R0 := U17
 51 [-]: GETUPVAL  R0 U8        ; R0 := U8
 52 [-]: GETUPVAL  R0 U18       ; R0 := U18
 53 [-]: GETUPVAL  R0 U19       ; R0 := U19
 54 [-]: GETUPVAL  R0 U20       ; R0 := U20
 55 [-]: GETUPVAL  R0 U4        ; R0 := U4
 56 [-]: GETUPVAL  R0 U21       ; R0 := U21
 57 [-]: GETUPVAL  R0 U22       ; R0 := U22
 58 [-]: GETUPVAL  R0 U23       ; R0 := U23
 59 [-]: GETUPVAL  R0 U24       ; R0 := U24
 60 [-]: GETUPVAL  R0 U25       ; R0 := U25
 61 [-]: GETUPVAL  R0 U26       ; R0 := U26
 62 [-]: GETUPVAL  R0 U27       ; R0 := U27
 63 [-]: SETTABLE  R2 K18 R3    ; R2["UpdateTextSuggestion"] := R3
 64 [-]: CLOSURE   R3 6         ; R3 := closure(Function #54.7)
 65 [-]: SETTABLE  R2 K19 R3    ; R2["UpdateElementVisibilityRange"] := R3
 66 [-]: CLOSURE   R3 7         ; R3 := closure(Function #54.8)
 67 [-]: SETTABLE  R2 K20 R3    ; R2["OnUserJoin"] := R3
 68 [-]: CLOSURE   R3 8         ; R3 := closure(Function #54.9)
 69 [-]: SETTABLE  R2 K21 R3    ; R2["OnUserLeave"] := R3
 70 [-]: CLOSURE   R3 9         ; R3 := closure(Function #54.10)
 71 [-]: SETTABLE  R2 K22 R3    ; R2["SetSize"] := R3
 72 [-]: CLOSURE   R3 10        ; R3 := closure(Function #54.11)
 73 [-]: GETUPVAL  R0 U4        ; R0 := U4
 74 [-]: GETUPVAL  R0 U3        ; R0 := U3
 75 [-]: SETTABLE  R2 K23 R3    ; R2["ToggleLocator"] := R3
 76 [-]: CLOSURE   R3 11        ; R3 := closure(Function #54.12)
 77 [-]: GETUPVAL  R0 U3        ; R0 := U3
 78 [-]: GETUPVAL  R0 U4        ; R0 := U4
 79 [-]: SETTABLE  R2 K24 R3    ; R2["ToggleList"] := R3
 80 [-]: CLOSURE   R3 12        ; R3 := closure(Function #54.13)
 81 [-]: GETUPVAL  R0 U4        ; R0 := U4
 82 [-]: GETUPVAL  R0 U3        ; R0 := U3
 83 [-]: GETUPVAL  R0 U6        ; R0 := U6
 84 [-]: SETTABLE  R2 K25 R3    ; R2["ToggleListVis"] := R3
 85 [-]: RETURN    R2 2         ; return R2
 86 [-]: RETURN    R0 1         ; return 


; Function #54.1:
;
; Name:            
; Defined at line: 1018
; #Upvalues:       11
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  2 [-]: SETTABLE  R3 K1 K2     ; R3["x"] := 0
  3 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  4 [-]: SETTABLE  R3 K3 K4     ; R3["ReverseX"] := "0x1"
  5 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  6 [-]: SETTABLE  R3 K5 K2     ; R3["y"] := 0
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  8 [-]: SETTABLE  R3 K6 K7     ; R3["width"] := 194
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 10 [-]: SETTABLE  R3 K8 K9     ; R3["height"] := 27
 11 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 12 [-]: SETTABLE  R3 K10 K4    ; R3["ReverseHeight"] := "0x1"
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0xB40DEC3F"]
 15 [-]: GETGLOBAL R4 K12       ; R4 := mMovie
 16 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 17 [-]: LOADK     R6 K14       ; R6 := ".Panel.UserList.User1"
 18 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 19 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 20 [-]: SETTABLE  R3 K15 K2    ; R3["mElementTransitionTime"] := 0
 21 [-]: CLOSURE   R4 0         ; R4 := closure(Function #54.1.1)
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: SETTABLE  R3 K16 R4    ; R3["setTextColour"] := R4
 24 [-]: SETTABLE  R0 K17 R3    ; R0["mListControl"] := R3
 25 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 26 [-]: SETTABLE  R4 K18 K19   ; R4["mVisibleElements"] := 10
 27 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 28 [-]: SETTABLE  R4 K20 K21   ; R4["mForcedVerticalSeparation"] := 29
 29 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 30 [-]: SETTABLE  R4 K22 K23   ; R4["mIsVisible"] := "0x0"
 31 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 32 [-]: CLOSURE   R5 1         ; R5 := closure(Function #54.1.2)
 33 [-]: SETTABLE  R4 K24 R5    ; R4["OnElementTransitionStarted"] := R5
 34 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 35 [-]: CLOSURE   R5 2         ; R5 := closure(Function #54.1.3)
 36 [-]: GETUPVAL  R0 U2        ; R0 := U2
 37 [-]: SETTABLE  R4 K25 R5    ; R4["OnElementTransitionEnded"] := R5
 38 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 39 [-]: CLOSURE   R5 3         ; R5 := closure(Function #54.1.4)
 40 [-]: MOVE      R0 R0        ; R0 := R0
 41 [-]: GETUPVAL  R0 U3        ; R0 := U3
 42 [-]: SETTABLE  R4 K26 R5    ; R4["ToggleFocus"] := R5
 43 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 44 [-]: CLOSURE   R5 4         ; R5 := closure(Function #54.1.5)
 45 [-]: GETUPVAL  R0 U4        ; R0 := U4
 46 [-]: MOVE      R0 R0        ; R0 := R0
 47 [-]: GETUPVAL  R0 U5        ; R0 := U5
 48 [-]: SETTABLE  R4 K27 R5    ; R4["mElementDrawCallback"] := R5
 49 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 50 [-]: CLOSURE   R5 5         ; R5 := closure(Function #54.1.6)
 51 [-]: MOVE      R0 R0        ; R0 := R0
 52 [-]: SETTABLE  R4 K28 R5    ; R4["mOnFocusedCallback"] := R5
 53 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 54 [-]: CLOSURE   R5 6         ; R5 := closure(Function #54.1.7)
 55 [-]: MOVE      R0 R0        ; R0 := R0
 56 [-]: SETTABLE  R4 K29 R5    ; R4["mOnUnfocusedCallback"] := R5
 57 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 58 [-]: CLOSURE   R5 7         ; R5 := closure(Function #54.1.8)
 59 [-]: SETTABLE  R4 K30 R5    ; R4["mOnSelectedCallback"] := R5
 60 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 61 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["mListControl"]
 62 [-]: GETTABLE  R5 R5 K32    ; R5 := R5["Redraw"]
 63 [-]: SETTABLE  R4 K31 R5    ; R4["_ListControl_Redraw"] := R5
 64 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 65 [-]: CLOSURE   R5 8         ; R5 := closure(Function #54.1.9)
 66 [-]: SETTABLE  R4 K32 R5    ; R4["Redraw"] := R5
 67 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 68 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x3DB61F37"]
 69 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 70 [-]: LOADK     R7 K34       ; R7 := ".Panel.UserList.ScrollBar"
 71 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 72 [-]: CALL      R4 3 1       ; R4(R5,R6)
 73 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 74 [-]: SETTABLE  R4 K35 K4    ; R4["mScrollAlwaysVisible"] := "0x1"
 75 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mListControl"]
 76 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["mScrollBar"]
 77 [-]: CLOSURE   R5 9         ; R5 := closure(Function #54.1.10)
 78 [-]: MOVE      R0 R3        ; R0 := R3
 79 [-]: GETUPVAL  R0 U4        ; R0 := U4
 80 [-]: MOVE      R0 R0        ; R0 := R0
 81 [-]: SETTABLE  R4 K37 R5    ; R4["mScrubStopDragCallback"] := R5
 82 [-]: GETGLOBAL R4 K38       ; R4 := 0x329BDC44
 83 [-]: LOADK     R5 K39       ; R5 := "EE.Interface.Components.Grid"
 84 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 85 [-]: GETTABLE  R5 R4 K41    ; R5 := R4["0x9A7B3F36"]
 86 [-]: GETGLOBAL R6 K12       ; R6 := mMovie
 87 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mClipPath"]
 88 [-]: LOADK     R8 K42       ; R8 := ".AlphabetIndex.Grid.Element"
 89 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 90 [-]: LOADNIL   R8 R8        ; R8 := nil
 91 [-]: LOADK     R9 K43       ; R9 := 5
 92 [-]: LOADK     R10 K44      ; R10 := 6
 93 [-]: CALL      R5 6 2       ; R5 := R5(R6,R7,R8,R9,R10)
 94 [-]: SETTABLE  R0 K40 R5    ; R0["mUserLocator"] := R5
 95 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
 96 [-]: SETTABLE  R5 K45 K23   ; R5["mIsExpanded"] := "0x0"
 97 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
 98 [-]: SETTABLE  R5 K46 K47   ; R5["mColumnSeparation"] := 15
 99 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
100 [-]: SETTABLE  R5 K48 K47   ; R5["mRowSeparation"] := 15
101 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
102 [-]: GETGLOBAL R6 K50       ; R6 := 0xF595ADDE
103 [-]: GETGLOBAL R7 K12       ; R7 := mMovie
104 [-]: SELF      R7 R7 K51    ; R8 := R7; R7 := R7["0x6B7B470B"]
105 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["mClipPath"]
106 [-]: LOADK     R10 K52      ; R10 := ".AlphabetIndex.Grid.Bg"
107 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
108 [-]: LOADK     R10 K53      ; R10 := "_width"
109 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
110 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
111 [-]: ADD       R6 R6 K54    ; R6 := R6 + 1
112 [-]: SETTABLE  R5 K49 R6    ; R5["mGridWidth"] := R6
113 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
114 [-]: CLOSURE   R6 10        ; R6 := closure(Function #54.1.11)
115 [-]: GETUPVAL  R0 U3        ; R0 := U3
116 [-]: GETUPVAL  R0 U4        ; R0 := U4
117 [-]: GETUPVAL  R0 U6        ; R0 := U6
118 [-]: MOVE      R0 R0        ; R0 := R0
119 [-]: SETTABLE  R5 K55 R6    ; R5["ToggleExpanded"] := R6
120 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
121 [-]: CLOSURE   R6 11        ; R6 := closure(Function #54.1.12)
122 [-]: SETTABLE  R5 K24 R6    ; R5["OnElementTransitionStarted"] := R6
123 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
124 [-]: CLOSURE   R6 12        ; R6 := closure(Function #54.1.13)
125 [-]: GETUPVAL  R0 U2        ; R0 := U2
126 [-]: SETTABLE  R5 K25 R6    ; R5["OnElementTransitionEnded"] := R6
127 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
128 [-]: CLOSURE   R6 13        ; R6 := closure(Function #54.1.14)
129 [-]: SETTABLE  R5 K28 R6    ; R5["mOnFocusedCallback"] := R6
130 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
131 [-]: CLOSURE   R6 14        ; R6 := closure(Function #54.1.15)
132 [-]: SETTABLE  R5 K29 R6    ; R5["mOnUnfocusedCallback"] := R6
133 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
134 [-]: CLOSURE   R6 15        ; R6 := closure(Function #54.1.16)
135 [-]: MOVE      R0 R0        ; R0 := R0
136 [-]: GETUPVAL  R0 U3        ; R0 := U3
137 [-]: SETTABLE  R5 K30 R6    ; R5["mOnSelectedCallback"] := R6
138 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
139 [-]: CLOSURE   R6 16        ; R6 := closure(Function #54.1.17)
140 [-]: MOVE      R0 R0        ; R0 := R0
141 [-]: GETUPVAL  R0 U4        ; R0 := U4
142 [-]: SETTABLE  R5 K27 R6    ; R5["mElementDrawCallback"] := R6
143 [-]: GETGLOBAL R5 K12       ; R5 := mMovie
144 [-]: SELF      R5 R5 K56    ; R6 := R5; R5 := R5["0x880196A7"]
145 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mClipPath"]
146 [-]: LOADK     R8 K57       ; R8 := "AlphabetIndex.Grid.Bg"
147 [-]: LOADK     R9 K58       ; R9 := "noMenuSelection"
148 [-]: MOVE      R10 R1       ; R10 := R1
149 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
150 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
151 [-]: SELF      R5 R5 K59    ; R6 := R5; R5 := R5["0xA77DA8EE"]
152 [-]: NEWTABLE  R7 0 2       ; R7 := {}
153 [-]: SETTABLE  R7 K60 K61   ; R7["Letter"] := "#"
154 [-]: SETTABLE  R7 K62 K54   ; R7["index"] := 1
155 [-]: MOVE      R8 R1        ; R8 := R1
156 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
157 [-]: GETTABLE  R5 R0 K40    ; R5 := R0["mUserLocator"]
158 [-]: SELF      R5 R5 K59    ; R6 := R5; R5 := R5["0xA77DA8EE"]
159 [-]: NEWTABLE  R7 0 2       ; R7 := {}
160 [-]: SETTABLE  R7 K60 K63   ; R7["Letter"] := "@"
161 [-]: SETTABLE  R7 K62 K64   ; R7["index"] := 12
162 [-]: MOVE      R8 R1        ; R8 := R1
163 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
164 [-]: LOADK     R5 K47       ; R5 := 15
165 [-]: GETUPVAL  R6 U7        ; R6 := U7
166 [-]: LEN       R6 R6        ; R6 := # R6
167 [-]: LOADK     R7 K54       ; R7 := 1
168 [-]: FORPREP   R5 178       ; R5 -= R7; PC := 178
169 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["mUserLocator"]
170 [-]: SELF      R9 R9 K59    ; R10 := R9; R9 := R9["0xA77DA8EE"]
171 [-]: NEWTABLE  R11 0 2      ; R11 := {}
172 [-]: GETUPVAL  R12 U7       ; R12 := U7
173 [-]: GETTABLE  R12 R12 R8   ; R12 := R12[R8]
174 [-]: SETTABLE  R11 K60 R12  ; R11["Letter"] := R12
175 [-]: SETTABLE  R11 K62 R8   ; R11["index"] := R8
176 [-]: MOVE      R12 R1       ; R12 := R1
177 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
178 [-]: FORLOOP   R5 169       ; R5 += R7; if R5 <= R6 then begin PC := 169; R8 := R5 end
179 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["mUserLocator"]
180 [-]: SELF      R9 R9 K65    ; R10 := R9; R9 := R9["0x6470BAF4"]
181 [-]: CALL      R9 2 1       ; R9(R10)
182 [-]: GETGLOBAL R9 K12       ; R9 := mMovie
183 [-]: SELF      R9 R9 K56    ; R10 := R9; R9 := R9["0x880196A7"]
184 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
185 [-]: LOADK     R12 K66      ; R12 := "AlphabetIndex"
186 [-]: LOADK     R13 K67      ; R13 := "_visible"
187 [-]: MOVE      R14 R0       ; R14 := R0
188 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
189 [-]: GETTABLE  R9 R4 K41    ; R9 := R4["0x9A7B3F36"]
190 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
191 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
192 [-]: LOADK     R12 K69      ; R12 := ".Panel.EmoteGrid.EmoteElement"
193 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
194 [-]: LOADNIL   R12 R12      ; R12 := nil
195 [-]: LOADK     R13 K43      ; R13 := 5
196 [-]: LOADK     R14 K70      ; R14 := 7
197 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
198 [-]: SETTABLE  R0 K68 R9    ; R0["mEmoteGrid"] := R9
199 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
200 [-]: GETTABLE  R10 R0 K68   ; R10 := R0["mEmoteGrid"]
201 [-]: GETTABLE  R10 R10 K71  ; R10 := R10["mInitialX"]
202 [-]: ADD       R10 R10 K72  ; R10 := R10 + 3
203 [-]: SETTABLE  R9 K71 R10   ; R9["mInitialX"] := R10
204 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
205 [-]: SETTABLE  R9 K22 K23   ; R9["mIsVisible"] := "0x0"
206 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
207 [-]: SETTABLE  R9 K46 K73   ; R9["mColumnSeparation"] := 35
208 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
209 [-]: SETTABLE  R9 K48 K74   ; R9["mRowSeparation"] := 33
210 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
211 [-]: SETTABLE  R9 K35 K4    ; R9["mScrollAlwaysVisible"] := "0x1"
212 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
213 [-]: GETTABLE  R10 R0 K68   ; R10 := R0["mEmoteGrid"]
214 [-]: GETTABLE  R10 R10 K76  ; R10 := R10["RedrawScrollBar"]
215 [-]: SETTABLE  R9 K75 R10   ; R9["_RedrawScrollBar"] := R10
216 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
217 [-]: CLOSURE   R10 17       ; R10 := closure(Function #54.1.18)
218 [-]: MOVE      R0 R0        ; R0 := R0
219 [-]: GETUPVAL  R0 U4        ; R0 := U4
220 [-]: SETTABLE  R9 K76 R10   ; R9["RedrawScrollBar"] := R10
221 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
222 [-]: CLOSURE   R10 18       ; R10 := closure(Function #54.1.19)
223 [-]: SETTABLE  R9 K24 R10   ; R9["OnElementTransitionStarted"] := R10
224 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
225 [-]: CLOSURE   R10 19       ; R10 := closure(Function #54.1.20)
226 [-]: GETUPVAL  R0 U2        ; R0 := U2
227 [-]: SETTABLE  R9 K25 R10   ; R9["OnElementTransitionEnded"] := R10
228 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
229 [-]: CLOSURE   R10 20       ; R10 := closure(Function #54.1.21)
230 [-]: GETUPVAL  R0 U3        ; R0 := U3
231 [-]: SETTABLE  R9 K28 R10   ; R9["mOnFocusedCallback"] := R10
232 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
233 [-]: CLOSURE   R10 21       ; R10 := closure(Function #54.1.22)
234 [-]: SETTABLE  R9 K29 R10   ; R9["mOnUnfocusedCallback"] := R10
235 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
236 [-]: CLOSURE   R10 22       ; R10 := closure(Function #54.1.23)
237 [-]: GETUPVAL  R0 U3        ; R0 := U3
238 [-]: SETTABLE  R9 K30 R10   ; R9["mOnSelectedCallback"] := R10
239 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
240 [-]: CLOSURE   R10 23       ; R10 := closure(Function #54.1.24)
241 [-]: MOVE      R0 R0        ; R0 := R0
242 [-]: SETTABLE  R9 K27 R10   ; R9["mElementDrawCallback"] := R10
243 [-]: GETTABLE  R9 R0 K68    ; R9 := R0["mEmoteGrid"]
244 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9["0x3DB61F37"]
245 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
246 [-]: LOADK     R12 K77      ; R12 := ".Panel.EmoteGrid.ScrollBar"
247 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
248 [-]: LOADK     R12 K9       ; R12 := 27
249 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
250 [-]: LOADK     R9 K54       ; R9 := 1
251 [-]: GETUPVAL  R10 U8       ; R10 := U8
252 [-]: LEN       R10 R10      ; R10 := # R10
253 [-]: LOADK     R11 K54      ; R11 := 1
254 [-]: FORPREP   R9 263       ; R9 -= R11; PC := 263
255 [-]: GETTABLE  R13 R0 K68   ; R13 := R0["mEmoteGrid"]
256 [-]: SELF      R13 R13 K59  ; R14 := R13; R13 := R13["0xA77DA8EE"]
257 [-]: NEWTABLE  R15 0 1      ; R15 := {}
258 [-]: GETUPVAL  R16 U8       ; R16 := U8
259 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
260 [-]: SETTABLE  R15 K78 R16  ; R15["mTag"] := R16
261 [-]: MOVE      R16 R1       ; R16 := R1
262 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
263 [-]: FORLOOP   R9 255       ; R9 += R11; if R9 <= R10 then begin PC := 255; R12 := R9 end
264 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
265 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
266 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
267 [-]: LOADK     R16 K79      ; R16 := "Panel.EmoteGrid"
268 [-]: LOADK     R17 K67      ; R17 := "_visible"
269 [-]: MOVE      R18 R0       ; R18 := R0
270 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
271 [-]: SELF      R13 R0 K80   ; R14 := R0; R13 := R0["0xD1D449ED"]
272 [-]: MOVE      R15 R1       ; R15 := R1
273 [-]: MOVE      R16 R2       ; R16 := R2
274 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
275 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
276 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
277 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
278 [-]: LOADK     R16 K81      ; R16 := "Panel.Fill"
279 [-]: LOADK     R17 K82      ; R17 := "_alpha"
280 [-]: LOADK     R18 K83      ; R18 := 75
281 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
282 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
283 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
284 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
285 [-]: LOADK     R16 K81      ; R16 := "Panel.Fill"
286 [-]: LOADK     R17 K84      ; R17 := "_color"
287 [-]: GETUPVAL  R18 U9       ; R18 := U9
288 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
289 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
290 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
291 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
292 [-]: LOADK     R16 K85      ; R16 := "Panel.EdgeTop"
293 [-]: LOADK     R17 K84      ; R17 := "_color"
294 [-]: GETUPVAL  R18 U10      ; R18 := U10
295 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
296 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
297 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
298 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
299 [-]: LOADK     R16 K85      ; R16 := "Panel.EdgeTop"
300 [-]: LOADK     R17 K82      ; R17 := "_alpha"
301 [-]: LOADK     R18 K86      ; R18 := 25
302 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
303 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
304 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
305 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
306 [-]: LOADK     R16 K87      ; R16 := "Panel.EdgeRight"
307 [-]: LOADK     R17 K84      ; R17 := "_color"
308 [-]: GETUPVAL  R18 U10      ; R18 := U10
309 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
310 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
311 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
312 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
313 [-]: LOADK     R16 K87      ; R16 := "Panel.EdgeRight"
314 [-]: LOADK     R17 K82      ; R17 := "_alpha"
315 [-]: LOADK     R18 K86      ; R18 := 25
316 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
317 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
318 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
319 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
320 [-]: LOADK     R16 K88      ; R16 := "Panel.EdgeBottom"
321 [-]: LOADK     R17 K84      ; R17 := "_color"
322 [-]: GETUPVAL  R18 U10      ; R18 := U10
323 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
324 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
325 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
326 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
327 [-]: LOADK     R16 K88      ; R16 := "Panel.EdgeBottom"
328 [-]: LOADK     R17 K82      ; R17 := "_alpha"
329 [-]: LOADK     R18 K86      ; R18 := 25
330 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
331 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
332 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
333 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
334 [-]: LOADK     R16 K89      ; R16 := "Panel.LocatorSeparator"
335 [-]: LOADK     R17 K84      ; R17 := "_color"
336 [-]: GETUPVAL  R18 U10      ; R18 := U10
337 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
338 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
339 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
340 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
341 [-]: LOADK     R16 K89      ; R16 := "Panel.LocatorSeparator"
342 [-]: LOADK     R17 K82      ; R17 := "_alpha"
343 [-]: LOADK     R18 K90      ; R18 := 40
344 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
345 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
346 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
347 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
348 [-]: LOADK     R16 K91      ; R16 := "Panel.LocatorBtn"
349 [-]: LOADK     R17 K82      ; R17 := "_alpha"
350 [-]: GETUPVAL  R18 U4       ; R18 := U4
351 [-]: GETTABLE  R18 R18 K92  ; R18 := R18["0xF81722A2"]
352 [-]: GETGLOBAL R19 K93      ; R19 := Engine
353 [-]: GETTABLE  R19 R19 K94  ; R19 := R19["0x9490FE70"]
354 [-]: CALL      R19 1 2      ; R19 := R19()
355 [-]: LOADK     R20 K95      ; R20 := 100
356 [-]: LOADK     R21 K96      ; R21 := 50
357 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
358 [-]: CALL      R13 0 1      ; R13(R14,...)
359 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
360 [-]: SELF      R13 R13 K97  ; R14 := R13; R13 := R13["0x17028E8F"]
361 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
362 [-]: LOADK     R16 K98      ; R16 := ".Panel.LocatorBtn.Callout.Tf.text"
363 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
364 [-]: LOADK     R16 K99      ; R16 := "<MENU_RTHUMB>"
365 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
366 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
367 [-]: SELF      R13 R13 K56  ; R14 := R13; R13 := R13["0x880196A7"]
368 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
369 [-]: LOADK     R16 K100     ; R16 := "Panel.LocatorBtn.Callout"
370 [-]: LOADK     R17 K67      ; R17 := "_visible"
371 [-]: GETGLOBAL R18 K93      ; R18 := Engine
372 [-]: GETTABLE  R18 R18 K94  ; R18 := R18["0x9490FE70"]
373 [-]: CALL      R18 1 0      ; R18,... := R18()
374 [-]: CALL      R13 0 1      ; R13(R14,...)
375 [-]: GETGLOBAL R13 K12      ; R13 := mMovie
376 [-]: SELF      R13 R13 K97  ; R14 := R13; R13 := R13["0x17028E8F"]
377 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
378 [-]: LOADK     R16 K101     ; R16 := ".Panel.LocatorBtn.Label.text"
379 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
380 [-]: LOADK     R16 K102     ; R16 := "/Lotus/Language/Menu/Chat_AlphabetGridBtn"
381 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
382 [-]: GETGLOBAL R13 K50      ; R13 := 0xF595ADDE
383 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
384 [-]: SELF      R14 R14 K51  ; R15 := R14; R14 := R14["0x6B7B470B"]
385 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
386 [-]: LOADK     R17 K103     ; R17 := ".Panel.LocatorBtn.Label"
387 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
388 [-]: LOADK     R17 K104     ; R17 := "textWidth"
389 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
390 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
391 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
392 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
393 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
394 [-]: LOADK     R17 K105     ; R17 := "Panel.LocatorBtn.Arrow"
395 [-]: LOADK     R18 K106     ; R18 := "_x"
396 [-]: DIV       R19 R13 K107 ; R19 := R13 / 2
397 [-]: ADD       R19 R19 K43  ; R19 := R19 + 5
398 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
399 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
400 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
401 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
402 [-]: LOADK     R17 K108     ; R17 := "Panel.LocatorBtn.Btn"
403 [-]: LOADK     R18 K53      ; R18 := "_width"
404 [-]: ADD       R19 R13 K109 ; R19 := R13 + 20
405 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
406 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
407 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
408 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
409 [-]: LOADK     R17 K100     ; R17 := "Panel.LocatorBtn.Callout"
410 [-]: LOADK     R18 K106     ; R18 := "_x"
411 [-]: DIV       R19 R13 K107 ; R19 := R13 / 2
412 [-]: UNM       R19 R19      ; R19 := - R19
413 [-]: SUB       R19 R19 K110 ; R19 := R19 - 13
414 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
415 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
416 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
417 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
418 [-]: LOADK     R17 K57      ; R17 := "AlphabetIndex.Grid.Bg"
419 [-]: LOADK     R18 K84      ; R18 := "_color"
420 [-]: GETUPVAL  R19 U9       ; R19 := U9
421 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
422 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
423 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
424 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
425 [-]: LOADK     R17 K57      ; R17 := "AlphabetIndex.Grid.Bg"
426 [-]: LOADK     R18 K82      ; R18 := "_alpha"
427 [-]: LOADK     R19 K83      ; R19 := 75
428 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
429 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
430 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
431 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
432 [-]: LOADK     R17 K111     ; R17 := "AlphabetIndex.Grid.EdgeTop"
433 [-]: LOADK     R18 K84      ; R18 := "_color"
434 [-]: GETUPVAL  R19 U10      ; R19 := U10
435 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
436 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
437 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
438 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
439 [-]: LOADK     R17 K111     ; R17 := "AlphabetIndex.Grid.EdgeTop"
440 [-]: LOADK     R18 K82      ; R18 := "_alpha"
441 [-]: LOADK     R19 K86      ; R19 := 25
442 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
443 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
444 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
445 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
446 [-]: LOADK     R17 K112     ; R17 := "AlphabetIndex.Grid.EdgeRight"
447 [-]: LOADK     R18 K84      ; R18 := "_color"
448 [-]: GETUPVAL  R19 U10      ; R19 := U10
449 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
450 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
451 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
452 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
453 [-]: LOADK     R17 K112     ; R17 := "AlphabetIndex.Grid.EdgeRight"
454 [-]: LOADK     R18 K82      ; R18 := "_alpha"
455 [-]: LOADK     R19 K86      ; R19 := 25
456 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
457 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
458 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
459 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
460 [-]: LOADK     R17 K113     ; R17 := "AlphabetIndex.Grid.EdgeBottom"
461 [-]: LOADK     R18 K84      ; R18 := "_color"
462 [-]: GETUPVAL  R19 U10      ; R19 := U10
463 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
464 [-]: GETGLOBAL R14 K12      ; R14 := mMovie
465 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0x880196A7"]
466 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
467 [-]: LOADK     R17 K113     ; R17 := "AlphabetIndex.Grid.EdgeBottom"
468 [-]: LOADK     R18 K82      ; R18 := "_alpha"
469 [-]: LOADK     R19 K86      ; R19 := 25
470 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
471 [-]: RETURN    R0 1         ; return 


; Function #54.1.1:
;
; Name:            
; Defined at line: 1031
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R3 K1        ; R3 := 13421772
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R4 K2        ; R4 := _G
  8 [-]: GETTABLE  R3 R4 K3     ; R3 := R4["UIColor_Yellow"]
  9 [-]: JMP       22           ; PC := 22
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 11 [-]: GETUPVAL  R5 U0        ; R5 := U0
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0xF075C8EC"]
 17 [-]: GETTABLE  R6 R1 K6     ; R6 := R1["User"]
 18 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 19 [-]: TEST      R4 0         ; if not R4 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADK     R3 K7        ; R3 := 6710886
 22 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 23 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 24 [-]: GETTABLE  R6 R1 K10    ; R6 := R1["mClipName"]
 25 [-]: LOADK     R7 K11       ; R7 := "Name"
 26 [-]: LOADK     R8 K12       ; R8 := "textColor"
 27 [-]: MOVE      R9 R3        ; R9 := R3
 28 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 29 [-]: RETURN    R0 1         ; return 


; Function #54.1.2:
;
; Name:            
; Defined at line: 1049
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "enabled"
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mDrawnElements"]
  8 [-]: ADD       R2 R2 K5     ; R2 := R2 + 1
  9 [-]: SETTABLE  R0 K4 R2     ; R0["mDrawnElements"] := R2
 10 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mDrawnElements"]
 11 [-]: SETTABLE  R1 K6 R2     ; R1["mDrawnIndex"] := R2
 12 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 13 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
 14 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
 15 [-]: LOADK     R5 K3        ; R5 := "enabled"
 16 [-]: MOVE      R6 R0        ; R6 := R0
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #54.1.3:
;
; Name:            
; Defined at line: 1057
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R1 0         ; if not R1 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mClipName"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x61494587"]
  8 [-]: LOADK     R4 K2        ; R4 := 0.10000000149012
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #54.1.3.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 14 [-]: RETURN    R0 1         ; return 


; Function #54.1.3.1:
;
; Name:            
; Defined at line: 1060
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mClipName"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x1C19D966"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mClipName"]
 12 [-]: LOADK     R3 K3        ; R3 := "enabled"
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #54.1.4:
;
; Name:            
; Defined at line: 1068
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mParent"]
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mVisualMode"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mParent"]
  6 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
  7 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mIsVisible"]
 12 [-]: TEST      R4 0         ; if not R4 then PC := 28
 13 [-]: JMP       28           ; PC := 28
 14 [-]: GETUPVAL  R4 U0        ; R4 := U0
 15 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mUserLocator"]
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mIsExpanded"]
 17 [-]: TEST      R4 1         ; if R4 then PC := 26
 18 [-]: JMP       26           ; PC := 26
 19 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 20 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x6B7B470B"]
 21 [-]: LOADK     R6 K8        ; R6 := "ContextMenu"
 22 [-]: LOADK     R7 K9        ; R7 := "_visible"
 23 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 24 [-]: EQ        0 R4 K10     ; if R4 ~= "true" then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: GETGLOBAL R5 K6        ; R5 := mMovie
 29 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x880196A7"]
 30 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["mClipName"]
 31 [-]: LOADK     R8 K13       ; R8 := "Callout"
 32 [-]: LOADK     R9 K9        ; R9 := "_visible"
 33 [-]: GETGLOBAL R10 K14      ; R10 := Engine
 34 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0x9490FE70"]
 35 [-]: CALL      R10 1 2      ; R10 := R10()
 36 [-]: TEST      R10 0        ; if not R10 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: TESTSET   R10 R2 0     ; if not R2 then PC := 51 else R10 := R2
 39 [-]: JMP       51           ; PC := 51
 40 [-]: TESTSET   R10 R4 0     ; if not R4 then PC := 51 else R10 := R4
 41 [-]: JMP       51           ; PC := 51
 42 [-]: TESTSET   R10 R3 0     ; if not R3 then PC := 51 else R10 := R3
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETTABLE  R10 R1 K16   ; R10 := R1["User"]
 45 [-]: GETUPVAL  R11 U1       ; R11 := U1
 46 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["mUser"]
 47 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: MOVE      R10 R0       ; R10 := R0
 50 [-]: MOVE      R10 R1       ; R10 := R1
 51 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 52 [-]: SELF      R5 R0 K18    ; R6 := R0; R5 := R0["0x5CDAFE5E"]
 53 [-]: MOVE      R7 R1        ; R7 := R1
 54 [-]: MOVE      R8 R2        ; R8 := R2
 55 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 56 [-]: RETURN    R0 1         ; return 


; Function #54.1.5:
;
; Name:            
; Defined at line: 1076
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x140B4E29"]
  9 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 10 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K4        ; R4 := ".Name"
 12 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 13 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["User"]
 14 [-]: LOADK     R5 K6        ; R5 := "..."
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mParent"]
 18 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mFontName"]
 19 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 24 [-]: LOADK     R4 K10       ; R4 := "Name"
 25 [-]: LOADK     R5 K11       ; R5 := "fontName"
 26 [-]: GETUPVAL  R6 U1        ; R6 := U1
 27 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mParent"]
 28 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mFontName"]
 29 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 30 [-]: GETUPVAL  R1 U1        ; R1 := U1
 31 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mListControl"]
 32 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1["0x97B489B5"]
 33 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 34 [-]: GETUPVAL  R2 U1        ; R2 := U1
 35 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mListControl"]
 36 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0xD72FCD76"]
 37 [-]: MOVE      R4 R0        ; R4 := R0
 38 [-]: GETGLOBAL R5 K15       ; R5 := 0x400E7765
 39 [-]: MOVE      R6 R1        ; R6 := R1
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: TEST      R5 1         ; if R5 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: MOVE      R5 R0        ; R5 := R0
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 48 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 49 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x17028E8F"]
 50 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 51 [-]: LOADK     R5 K17       ; R5 := ".Callout.Tf.text"
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: LOADK     R5 K18       ; R5 := "<MENU_SELECT>"
 54 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 55 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 56 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 57 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 58 [-]: LOADK     R5 K19       ; R5 := "Bg"
 59 [-]: LOADK     R6 K20       ; R6 := "_visible"
 60 [-]: GETTABLE  R7 R0 K21    ; R7 := R0["mDrawnIndex"]
 61 [-]: MOD       R7 R7 K22    ; R7 := R7 % 2
 62 [-]: EQ        0 R7 K23     ; if R7 ~= 0 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: MOVE      R7 R0        ; R7 := R0
 65 [-]: MOVE      R7 R1        ; R7 := R1
 66 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 67 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 68 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 69 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 70 [-]: LOADK     R5 K19       ; R5 := "Bg"
 71 [-]: LOADK     R6 K24       ; R6 := "_alpha"
 72 [-]: LOADK     R7 K25       ; R7 := 20
 73 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 74 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 75 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 76 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 77 [-]: LOADK     R5 K19       ; R5 := "Bg"
 78 [-]: LOADK     R6 K26       ; R6 := "_color"
 79 [-]: GETUPVAL  R7 U2        ; R7 := U2
 80 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 81 [-]: RETURN    R0 1         ; return 


; Function #54.1.6:
;
; Name:            
; Defined at line: 1095
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mListControl"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD72FCD76"]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #54.1.7:
;
; Name:            
; Defined at line: 1104
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: SETTABLE  R1 K3 K0     ; R1["gToolTip"] := nil
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mListControl"]
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xD72FCD76"]
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #54.1.8:
;
; Name:            
; Defined at line: 1112
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["AccountId"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: RETURN    R0 1         ; return 


; Function #54.1.9:
;
; Name:            
; Defined at line: 1119
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mDrawnElements"] := 0
  2 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0["0xFFE47B40"]
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
  7 [-]: TEST      R2 1         ; if R2 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: SETTABLE  R0 K0 K1     ; R0["mDrawnElements"] := 0
 10 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0x51396186"]
 11 [-]: CLOSURE   R6 0         ; R6 := closure(Function #54.1.9.1)
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: CALL      R4 3 1       ; R4(R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #54.1.9.1:
;
; Name:            
; Defined at line: 1127
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mDrawnElements"]
  4 [-]: ADD       R2 R2 K1     ; R2 := R2 + 1
  5 [-]: SETTABLE  R1 K0 R2     ; R1["mDrawnElements"] := R2
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mDrawnElements"]
  8 [-]: SETTABLE  R0 K2 R1     ; R0["mDrawnIndex"] := R1
  9 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x880196A7"]
 11 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
 12 [-]: LOADK     R4 K6        ; R4 := "Btn"
 13 [-]: LOADK     R5 K7        ; R5 := "enabled"
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 16 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x880196A7"]
 18 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
 19 [-]: LOADK     R4 K8        ; R4 := "Bg"
 20 [-]: LOADK     R5 K9        ; R5 := "_visible"
 21 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mDrawnIndex"]
 22 [-]: MOD       R6 R6 K10    ; R6 := R6 % 2
 23 [-]: EQ        0 R6 K11     ; if R6 ~= 0 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R6 R0        ; R6 := R0
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: RETURN    R0 1         ; return 


; Function #54.1.10:
;
; Name:            
; Defined at line: 1139
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xC51A5C9D"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVisibleElements"]
  6 [-]: SUB       R0 R0 R1     ; R0 := R0 - R1
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x6374FD98
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xB57E56DF"]
 10 [-]: GETUPVAL  R3 U2        ; R3 := U2
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mListControl"]
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScrollBar"]
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mCurrentScroll"]
 14 [-]: MUL       R3 R0 R3     ; R3 := R0 * R3
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: LOADK     R3 K7        ; R3 := 0
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 19 [-]: DIV       R2 R1 R0     ; R2 := R1 / R0
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mListControl"]
 22 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScrollBar"]
 23 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mCurrentScroll"]
 24 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mListControl"]
 28 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScrollBar"]
 29 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x1B721C34"]
 30 [-]: MOVE      R5 R2        ; R5 := R2
 31 [-]: CALL      R3 3 1       ; R3(R4,R5)
 32 [-]: RETURN    R0 1         ; return 


; Function #54.1.11:
;
; Name:            
; Defined at line: 1156
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsExpanded"]
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: SETTABLE  R0 K0 R1     ; R0["mIsExpanded"] := R1
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xEC183DDC"]
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mWindow"]
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["x"]
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mWindow"]
 11 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["y"]
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K7        ; R3 := "Window.UserPanel.Panel.LocatorBtn.Arrow"
 16 [-]: LOADK     R4 K8        ; R4 := "_rotation"
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0xF81722A2"]
 19 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIsExpanded"]
 20 [-]: LOADK     R7 K10       ; R7 := 180
 21 [-]: LOADK     R8 K11       ; R8 := 0
 22 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 23 [-]: CALL      R1 0 1       ; R1(R2,...)
 24 [-]: GETGLOBAL R1 K12       ; R1 := 0x400E7765
 25 [-]: GETUPVAL  R2 U2        ; R2 := U2
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1["0x2506D18"]
 31 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIsExpanded"]
 32 [-]: CALL      R1 3 1       ; R1(R2,R3)
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x3F9ADB3B"]
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #54.1.12:
;
; Name:            
; Defined at line: 1170
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "enabled"
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #54.1.13:
;
; Name:            
; Defined at line: 1174
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R1 0         ; if not R1 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mClipName"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x61494587"]
  8 [-]: LOADK     R4 K2        ; R4 := 0.10000000149012
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #54.1.13.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 14 [-]: RETURN    R0 1         ; return 


; Function #54.1.13.1:
;
; Name:            
; Defined at line: 1177
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mClipName"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x1C19D966"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mClipName"]
 12 [-]: LOADK     R3 K3        ; R3 := "enabled"
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #54.1.14:
;
; Name:            
; Defined at line: 1185
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := "Letter"
  9 [-]: LOADK     R5 K5        ; R5 := "textColor"
 10 [-]: GETGLOBAL R6 K6        ; R6 := _G
 11 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["UIColor_Yellow"]
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 15 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 16 [-]: LOADK     R4 K4        ; R4 := "Letter"
 17 [-]: LOADK     R5 K8        ; R5 := "_alpha"
 18 [-]: LOADK     R6 K9        ; R6 := 100
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: RETURN    R0 1         ; return 


; Function #54.1.15:
;
; Name:            
; Defined at line: 1194
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := "Letter"
  9 [-]: LOADK     R5 K5        ; R5 := "textColor"
 10 [-]: GETGLOBAL R6 K6        ; R6 := _G
 11 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["UIColor_White"]
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 15 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 16 [-]: LOADK     R4 K4        ; R4 := "Letter"
 17 [-]: LOADK     R5 K8        ; R5 := "_alpha"
 18 [-]: LOADK     R6 K9        ; R6 := 50
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: RETURN    R0 1         ; return 


; Function #54.1.16:
;
; Name:            
; Defined at line: 1203
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mListControl"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x18AAE1E3"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 29
 15 [-]: JMP       29           ; PC := 29
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 17 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mAlphabetIndex"]
 18 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["index"]
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x5B1DCC65"]
 25 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mAlphabetIndex"]
 26 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["index"]
 27 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 28 [-]: CALL      R2 3 1       ; R2(R3,R4)
 29 [-]: RETURN    R0 1         ; return 


; Function #54.1.17:
;
; Name:            
; Defined at line: 1214
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x97B489B5"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["mId"]
 15 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mId"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: MOVE      R2 R1        ; R2 := R1
 20 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 21 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 22 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 23 [-]: LOADK     R6 K8        ; R6 := "Letter"
 24 [-]: LOADK     R7 K9        ; R7 := "text"
 25 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["Letter"]
 26 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 27 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 28 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 29 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 30 [-]: LOADK     R6 K8        ; R6 := "Letter"
 31 [-]: LOADK     R7 K10       ; R7 := "textColor"
 32 [-]: GETUPVAL  R8 U1        ; R8 := U1
 33 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["0xF81722A2"]
 34 [-]: MOVE      R9 R2        ; R9 := R2
 35 [-]: GETGLOBAL R10 K12      ; R10 := _G
 36 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["UIColor_Yellow"]
 37 [-]: GETGLOBAL R11 K12      ; R11 := _G
 38 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["UIColor_White"]
 39 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 40 [-]: CALL      R3 0 1       ; R3(R4,...)
 41 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 42 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 43 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 44 [-]: LOADK     R6 K8        ; R6 := "Letter"
 45 [-]: LOADK     R7 K15       ; R7 := "_alpha"
 46 [-]: GETUPVAL  R8 U1        ; R8 := U1
 47 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["0xF81722A2"]
 48 [-]: MOVE      R9 R2        ; R9 := R2
 49 [-]: LOADK     R10 K16      ; R10 := 100
 50 [-]: LOADK     R11 K17      ; R11 := 50
 51 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 52 [-]: CALL      R3 0 1       ; R3(R4,...)
 53 [-]: RETURN    R0 1         ; return 


; Function #54.1.18:
;
; Name:            
; Defined at line: 1247
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xFBCF4029"]
  2 [-]: CALL      R1 2 1       ; R1(R2)
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mClipPath"]
  7 [-]: LOADK     R4 K4        ; R4 := ".Panel.EmoteGrid.ScrollBar.Scrub"
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: LOADK     R4 K5        ; R4 := "_visible"
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: EQ        1 R1 K6      ; if R1 == "true" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mClipPath"]
 19 [-]: LOADK     R5 K8        ; R5 := "Panel.EmoteGrid.ScrollBar"
 20 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 21 [-]: GETUPVAL  R7 U1        ; R7 := U1
 22 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["0xF81722A2"]
 23 [-]: MOVE      R8 R1        ; R8 := R1
 24 [-]: LOADK     R9 K11       ; R9 := 100
 25 [-]: LOADK     R10 K12      ; R10 := 50
 26 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 27 [-]: CALL      R2 0 1       ; R2(R3,...)
 28 [-]: RETURN    R0 1         ; return 


; Function #54.1.19:
;
; Name:            
; Defined at line: 1254
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "enabled"
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #54.1.20:
;
; Name:            
; Defined at line: 1258
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R1 0         ; if not R1 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mClipName"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x61494587"]
  8 [-]: LOADK     R4 K2        ; R4 := 0.10000000149012
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #54.1.20.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 14 [-]: RETURN    R0 1         ; return 


; Function #54.1.20.1:
;
; Name:            
; Defined at line: 1261
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mClipName"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x1C19D966"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mClipName"]
 12 [-]: LOADK     R3 K3        ; R3 := "enabled"
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #54.1.21:
;
; Name:            
; Defined at line: 1269
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
  9 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 15 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R1 K5        ; R1 := _T
 18 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mTag"]
 19 [-]: SETTABLE  R1 K6 R2     ; R1["gToolTip"] := R2
 20 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x880196A7"]
 22 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 23 [-]: LOADK     R4 K10       ; R4 := "Bg"
 24 [-]: LOADK     R5 K11       ; R5 := "_visible"
 25 [-]: MOVE      R6 R1        ; R6 := R1
 26 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 27 [-]: RETURN    R0 1         ; return 


; Function #54.1.22:
;
; Name:            
; Defined at line: 1281
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := _T
  6 [-]: SETTABLE  R1 K3 K1     ; R1["gToolTip"] := nil
  7 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x880196A7"]
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 10 [-]: LOADK     R4 K6        ; R4 := "Bg"
 11 [-]: LOADK     R5 K7        ; R5 := "_visible"
 12 [-]: MOVE      R6 R0        ; R6 := R0
 13 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #54.1.23:
;
; Name:            
; Defined at line: 1290
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  4 [-]: LOADK     R4 K3        ; R4 := "Window.SendMessageBar.MessageBox"
  5 [-]: LOADK     R5 K4        ; R5 := "cursorPos"
  6 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
 10 [-]: LOADK     R4 K3        ; R4 := "Window.SendMessageBar.MessageBox"
 11 [-]: LOADK     R5 K5        ; R5 := "text"
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 14 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xD6A79FE9"]
 15 [-]: LOADK     R5 K3        ; R5 := "Window.SendMessageBar.MessageBox"
 16 [-]: LOADK     R6 K5        ; R6 := "text"
 17 [-]: GETGLOBAL R7 K7        ; R7 := 0x3454D096
 18 [-]: MOVE      R8 R2        ; R8 := R2
 19 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mTag"]
 20 [-]: MOVE      R10 R1       ; R10 := R1
 21 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 22 [-]: CALL      R3 0 1       ; R3(R4,...)
 23 [-]: GETGLOBAL R3 K9        ; R3 := Engine
 24 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x9490FE70"]
 25 [-]: CALL      R3 1 2       ; R3 := R3()
 26 [-]: TEST      R3 1         ; if R3 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mInputPanel"]
 30 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xFEE41852"]
 31 [-]: CALL      R3 2 1       ; R3(R4)
 32 [-]: RETURN    R0 1         ; return 


; Function #54.1.24:
;
; Name:            
; Defined at line: 1302
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEmoteGrid"]
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x97B489B5"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["Id"]
 15 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["Id"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: MOVE      R2 R1        ; R2 := R1
 20 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 21 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x49467D4"]
 22 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mTag"]
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 26 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 27 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 28 [-]: LOADK     R7 K10       ; R7 := "Emoji"
 29 [-]: LOADK     R8 K11       ; R8 := "text"
 30 [-]: MOVE      R9 R3        ; R9 := R3
 31 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 32 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 34 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 35 [-]: LOADK     R7 K12       ; R7 := "Bg"
 36 [-]: LOADK     R8 K13       ; R8 := "_alpha"
 37 [-]: LOADK     R9 K14       ; R9 := 25
 38 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 39 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 40 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 41 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 42 [-]: LOADK     R7 K12       ; R7 := "Bg"
 43 [-]: LOADK     R8 K15       ; R8 := "_visible"
 44 [-]: MOVE      R9 R2        ; R9 := R2
 45 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 46 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 47 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 48 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 49 [-]: LOADK     R7 K16       ; R7 := "Tag"
 50 [-]: LOADK     R8 K15       ; R8 := "_visible"
 51 [-]: MOVE      R9 R0        ; R9 := R0
 52 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 53 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 54 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0xD6A79FE9"]
 55 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 56 [-]: LOADK     R7 K18       ; R7 := ".Tag"
 57 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 58 [-]: LOADK     R7 K11       ; R7 := "text"
 59 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["mTag"]
 60 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 61 [-]: GETUPVAL  R4 U0        ; R4 := U0
 62 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mParent"]
 63 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["mFontName"]
 64 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 75
 65 [-]: JMP       75           ; PC := 75
 66 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 67 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 68 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 69 [-]: LOADK     R7 K16       ; R7 := "Tag"
 70 [-]: LOADK     R8 K21       ; R8 := "fontName"
 71 [-]: GETUPVAL  R9 U0        ; R9 := U0
 72 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["mParent"]
 73 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mFontName"]
 74 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 75 [-]: RETURN    R0 1         ; return 


; Function #54.2:
;
; Name:            
; Defined at line: 1363
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x5B1DCC65"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #54.3:
;
; Name:            
; Defined at line: 1367
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x97B489B5"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xA372F64A"]
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 1       ; R2(R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #54.4:
;
; Name:            
; Defined at line: 1375
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xC51A5C9D"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LT        0 K2 R1      ; if 0 >= R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xCE468565"]
  8 [-]: LOADK     R3 K2        ; R3 := 0
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x7CF71D03"]
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #54.5:
;
; Name:            
; Defined at line: 1383
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mScrollBar"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mListControl"]
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScrollBar"]
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x8C7099E9"]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: CALL      R2 3 1       ; R2(R3,R4)
 17 [-]: GETGLOBAL R2 K4        ; R2 := Engine
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x1398DAFB"]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 1         ; if R2 then PC := 44
 21 [-]: JMP       44           ; PC := 44
 22 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 23 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x4AB7BA3E"]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 1         ; if R2 then PC := 44
 26 [-]: JMP       44           ; PC := 44
 27 [-]: GETUPVAL  R2 U0        ; R2 := U0
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mInputPanel"]
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mIsFocused"]
 30 [-]: TEST      R2 0         ; if not R2 then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0x888108BB"]
 34 [-]: CALL      R2 1 2       ; R2 := R2()
 35 [-]: TEST      R2 0         ; if not R2 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETUPVAL  R2 U2        ; R2 := U2
 38 [-]: TEST      R2 0         ; if not R2 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: GETUPVAL  R2 U3        ; R2 := U3
 41 [-]: CALL      R2 1 1       ; R2()
 42 [-]: SELF      R2 R0 K11    ; R3 := R0; R2 := R0["0xCDF9C7D7"]
 43 [-]: CALL      R2 2 1       ; R2(R3)
 44 [-]: RETURN    R0 1         ; return 


; Function #54.6:
;
; Name:            
; Defined at line: 1396
; #Upvalues:       19
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  57

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x6B7B470B"]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mInputPanel"]
  5 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mClipPath"]
  6 [-]: LOADK     R4 K4        ; R4 := ".MessageBox"
  7 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  8 [-]: LOADK     R4 K5        ; R4 := "textSuggestActive"
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: EQ        1 R1 K6      ; if R1 == "true" then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R1 R0        ; R1 := R0
 13 [-]: MOVE      R1 R1        ; R1 := R1
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: TEST      R1 0         ; if not R1 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R1 R1        ; R1 := R1
 19 [-]: MOVE      R1 R2        ; R1 := R2
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: EQ        0 R1 K7      ; if R1 ~= "0x0" then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R1 U3        ; R1 := U3
 24 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0xA18F392B"]
 25 [-]: GETUPVAL  R2 U4        ; R2 := U4
 26 [-]: CALL      R1 2 1       ; R1(R2)
 27 [-]: MOVE      R1 R0        ; R1 := R0
 28 [-]: MOVE      R1 R0        ; R1 := R0
 29 [-]: GETGLOBAL R1 K9        ; R1 := 0xF595ADDE
 30 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 31 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x6B7B470B"]
 32 [-]: GETUPVAL  R4 U1        ; R4 := U1
 33 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mInputPanel"]
 34 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mClipPath"]
 35 [-]: LOADK     R5 K4        ; R5 := ".MessageBox"
 36 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 37 [-]: LOADK     R5 K10       ; R5 := "cursorPos"
 38 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 39 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 40 [-]: EQ        0 R1 K11     ; if R1 ~= nil then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R2 R1        ; R2 := R1
 43 [-]: RETURN    R2 2         ; return R2
 44 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 45 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x6B7B470B"]
 46 [-]: GETUPVAL  R4 U1        ; R4 := U1
 47 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mInputPanel"]
 48 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mClipPath"]
 49 [-]: LOADK     R5 K4        ; R5 := ".MessageBox"
 50 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 51 [-]: LOADK     R5 K12       ; R5 := "text"
 52 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 53 [-]: LT        0 K13 R1     ; if 0 >= R1 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R3 K14       ; R3 := 0xD27A21F7
 56 [-]: MOVE      R4 R2        ; R4 := R2
 57 [-]: MOVE      R5 R1        ; R5 := R1
 58 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 59 [-]: MOVE      R1 R3        ; R1 := R3
 60 [-]: MOVE      R3 R0        ; R3 := R0
 61 [-]: GETGLOBAL R4 K15       ; R4 := string
 62 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["0x7B782033"]
 63 [-]: MOVE      R5 R2        ; R5 := R2
 64 [-]: MOVE      R6 R1        ; R6 := R1
 65 [-]: MOVE      R7 R1        ; R7 := R1
 66 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 67 [-]: GETUPVAL  R5 U5        ; R5 := U5
 68 [-]: TEST      R5 0         ; if not R5 then PC := 108
 69 [-]: JMP       108          ; PC := 108
 70 [-]: GETGLOBAL R5 K15       ; R5 := string
 71 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["0xC6772A8A"]
 72 [-]: MOVE      R6 R2        ; R6 := R2
 73 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 74 [-]: GETUPVAL  R6 U5        ; R6 := U5
 75 [-]: LT        0 R5 R6      ; if R5 >= R6 then PC := 108
 76 [-]: JMP       108          ; PC := 108
 77 [-]: GETUPVAL  R5 U3        ; R5 := U3
 78 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0xA18F392B"]
 79 [-]: GETUPVAL  R6 U4        ; R6 := U4
 80 [-]: CALL      R5 2 1       ; R5(R6)
 81 [-]: MOVE      R5 R0        ; R5 := R0
 82 [-]: MOVE      R5 R0        ; R5 := R0
 83 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 84 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x880196A7"]
 85 [-]: GETUPVAL  R7 U1        ; R7 := U1
 86 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mInputPanel"]
 87 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mClipPath"]
 88 [-]: LOADK     R8 K19       ; R8 := "MessageBox"
 89 [-]: LOADK     R9 K5        ; R9 := "textSuggestActive"
 90 [-]: MOVE      R10 R0       ; R10 := R0
 91 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 92 [-]: GETUPVAL  R5 U3        ; R5 := U3
 93 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["0x1097C22C"]
 94 [-]: LOADK     R6 K21       ; R6 := ""
 95 [-]: GETUPVAL  R7 U4        ; R7 := U4
 96 [-]: MOVE      R8 R0        ; R8 := R0
 97 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 98 [-]: LOADK     R5 K21       ; R5 := ""
 99 [-]: MOVE      R5 R6        ; R5 := R6
100 [-]: MOVE      R5 R0        ; R5 := R0
101 [-]: MOVE      R5 R2        ; R5 := R2
102 [-]: GETGLOBAL R5 K15       ; R5 := string
103 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["0xC6772A8A"]
104 [-]: MOVE      R6 R2        ; R6 := R2
105 [-]: CALL      R5 2 2       ; R5 := R5(R6)
106 [-]: MOVE      R5 R5        ; R5 := R5
107 [-]: JMP       146          ; PC := 146
108 [-]: GETUPVAL  R5 U0        ; R5 := U0
109 [-]: TEST      R5 1         ; if R5 then PC := 146
110 [-]: JMP       146          ; PC := 146
111 [-]: GETUPVAL  R5 U2        ; R5 := U2
112 [-]: TEST      R5 0         ; if not R5 then PC := 146
113 [-]: JMP       146          ; PC := 146
114 [-]: EQ        1 R4 K22     ; if R4 == ":" then PC := 122
115 [-]: JMP       122          ; PC := 122
116 [-]: EQ        1 R4 K23     ; if R4 == "@" then PC := 122
117 [-]: JMP       122          ; PC := 122
118 [-]: EQ        1 R4 K24     ; if R4 == "[" then PC := 122
119 [-]: JMP       122          ; PC := 122
120 [-]: EQ        0 R4 K25     ; if R4 ~= "{" then PC := 146
121 [-]: JMP       146          ; PC := 146
122 [-]: GETGLOBAL R5 K15       ; R5 := string
123 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["0x7B782033"]
124 [-]: MOVE      R6 R2        ; R6 := R2
125 [-]: GETUPVAL  R7 U5        ; R7 := U5
126 [-]: MOVE      R8 R1        ; R8 := R1
127 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
128 [-]: GETGLOBAL R6 K26       ; R6 := 0xECFDD17
129 [-]: GETUPVAL  R7 U7        ; R7 := U7
130 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
131 [-]: JMP       140          ; PC := 140
132 [-]: GETGLOBAL R11 K15      ; R11 := string
133 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["0xBDD0D625"]
134 [-]: MOVE      R12 R5       ; R12 := R5
135 [-]: CALL      R11 2 2      ; R11 := R11(R12)
136 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 140
137 [-]: JMP       140          ; PC := 140
138 [-]: MOVE      R3 R1        ; R3 := R1
139 [-]: JMP       142          ; PC := 142
140 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 132; R8 := R9 end
141 [-]: JMP       132          ; PC := 132
142 [-]: TEST      R3 1         ; if R3 then PC := 146
143 [-]: JMP       146          ; PC := 146
144 [-]: MOVE      R1 R5        ; R1 := R5
145 [-]: MOVE      R4 R6        ; R4 := R6
146 [-]: GETGLOBAL R11 K15      ; R11 := string
147 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0x7B782033"]
148 [-]: MOVE      R12 R2       ; R12 := R2
149 [-]: GETUPVAL  R13 U5       ; R13 := U5
150 [-]: MOVE      R14 R1       ; R14 := R1
151 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
152 [-]: GETUPVAL  R12 U8       ; R12 := U8
153 [-]: EQ        0 R12 R11    ; if R12 ~= R11 then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: RETURN    R0 1         ; return 
156 [-]: JMP       158          ; PC := 158
157 [-]: MOVE      R11 R8       ; R11 := R8
158 [-]: GETGLOBAL R12 K15      ; R12 := string
159 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["0xC6772A8A"]
160 [-]: MOVE      R13 R11      ; R13 := R11
161 [-]: CALL      R12 2 2      ; R12 := R12(R13)
162 [-]: EQ        0 R12 K13    ; if R12 ~= 0 then PC := 192
163 [-]: JMP       192          ; PC := 192
164 [-]: GETUPVAL  R12 U0       ; R12 := U0
165 [-]: TEST      R12 0        ; if not R12 then PC := 192
166 [-]: JMP       192          ; PC := 192
167 [-]: GETUPVAL  R12 U3       ; R12 := U3
168 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["0xA18F392B"]
169 [-]: GETUPVAL  R13 U4       ; R13 := U4
170 [-]: CALL      R12 2 1      ; R12(R13)
171 [-]: MOVE      R12 R0       ; R12 := R0
172 [-]: MOVE      R12 R0       ; R12 := R0
173 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
174 [-]: SELF      R12 R12 K18  ; R13 := R12; R12 := R12["0x880196A7"]
175 [-]: GETUPVAL  R14 U1       ; R14 := U1
176 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["mInputPanel"]
177 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["mClipPath"]
178 [-]: LOADK     R15 K19      ; R15 := "MessageBox"
179 [-]: LOADK     R16 K5       ; R16 := "textSuggestActive"
180 [-]: MOVE      R17 R0       ; R17 := R0
181 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
182 [-]: GETUPVAL  R12 U3       ; R12 := U3
183 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["0x1097C22C"]
184 [-]: LOADK     R13 K21      ; R13 := ""
185 [-]: GETUPVAL  R14 U4       ; R14 := U4
186 [-]: MOVE      R15 R0       ; R15 := R0
187 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
188 [-]: LOADK     R12 K21      ; R12 := ""
189 [-]: MOVE      R12 R6       ; R12 := R6
190 [-]: MOVE      R12 R0       ; R12 := R0
191 [-]: MOVE      R12 R2       ; R12 := R2
192 [-]: GETUPVAL  R12 U9       ; R12 := U9
193 [-]: GETTABLE  R12 R12 K28  ; R12 := R12["0xCECDECDE"]
194 [-]: MOVE      R13 R11      ; R13 := R11
195 [-]: CALL      R12 2 2      ; R12 := R12(R13)
196 [-]: NEWTABLE  R13 0 0      ; R13 := {}
197 [-]: LOADK     R14 K13      ; R14 := 0
198 [-]: LOADK     R15 K21      ; R15 := ""
199 [-]: TEST      R3 1         ; if R3 then PC := 461
200 [-]: JMP       461          ; PC := 461
201 [-]: GETUPVAL  R16 U6       ; R16 := U6
202 [-]: EQ        0 R16 K23    ; if R16 ~= "@" then PC := 277
203 [-]: JMP       277          ; PC := 277
204 [-]: NEWTABLE  R16 0 0      ; R16 := {}
205 [-]: LOADNIL   R17 R18      ; R17 := R18 := nil
206 [-]: GETGLOBAL R19 K29      ; R19 := 0x400E7765
207 [-]: GETUPVAL  R20 U1       ; R20 := U1
208 [-]: SELF      R20 R20 K30  ; R21 := R20; R20 := R20["0x18AAE1E3"]
209 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
210 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
211 [-]: TEST      R19 1        ; if R19 then PC := 221
212 [-]: JMP       221          ; PC := 221
213 [-]: GETUPVAL  R19 U1       ; R19 := U1
214 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0x18AAE1E3"]
215 [-]: CALL      R19 2 2      ; R19 := R19(R20)
216 [-]: GETTABLE  R17 R19 K31  ; R17 := R19["mChannelType"]
217 [-]: GETUPVAL  R19 U1       ; R19 := U1
218 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0x18AAE1E3"]
219 [-]: CALL      R19 2 2      ; R19 := R19(R20)
220 [-]: GETTABLE  R18 R19 K32  ; R18 := R19["mUserList"]
221 [-]: GETUPVAL  R19 U1       ; R19 := U1
222 [-]: GETTABLE  R19 R19 K33  ; R19 := R19["CHANNEL_SESSION"]
223 [-]: EQ        1 R17 R19    ; if R17 == R19 then PC := 233
224 [-]: JMP       233          ; PC := 233
225 [-]: GETUPVAL  R19 U1       ; R19 := U1
226 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["CHANNEL_CLAN"]
227 [-]: EQ        1 R17 R19    ; if R17 == R19 then PC := 233
228 [-]: JMP       233          ; PC := 233
229 [-]: GETUPVAL  R19 U1       ; R19 := U1
230 [-]: GETTABLE  R19 R19 K35  ; R19 := R19["CHANNEL_ALLIANCE"]
231 [-]: EQ        0 R17 R19    ; if R17 ~= R19 then PC := 235
232 [-]: JMP       235          ; PC := 235
233 [-]: MOVE      R16 R18      ; R16 := R18
234 [-]: JMP       236          ; PC := 236
235 [-]: GETUPVAL  R16 U10      ; R16 := U10
236 [-]: EQ        1 R18 K11    ; if R18 == nil then PC := 405
237 [-]: JMP       405          ; PC := 405
238 [-]: GETGLOBAL R19 K26      ; R19 := 0xECFDD17
239 [-]: MOVE      R20 R16      ; R20 := R16
240 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
241 [-]: JMP       274          ; PC := 274
242 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
243 [-]: EQ        1 R24 K11    ; if R24 == nil then PC := 274
244 [-]: JMP       274          ; PC := 274
245 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
246 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["isOnline"]
247 [-]: TEST      R24 0        ; if not R24 then PC := 274
248 [-]: JMP       274          ; PC := 274
249 [-]: GETGLOBAL R24 K15      ; R24 := string
250 [-]: GETTABLE  R24 R24 K37  ; R24 := R24["0xDE44F664"]
251 [-]: LOADK     R25 K23      ; R25 := "@"
252 [-]: GETGLOBAL R26 K15      ; R26 := string
253 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["0xBDD0D625"]
254 [-]: MOVE      R27 R22      ; R27 := R22
255 [-]: CALL      R26 2 2      ; R26 := R26(R27)
256 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
257 [-]: MOVE      R26 R12      ; R26 := R12
258 [-]: LOADK     R27 K38      ; R27 := 1
259 [-]: MOVE      R28 R1       ; R28 := R1
260 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
261 [-]: EQ        1 R24 K11    ; if R24 == nil then PC := 274
262 [-]: JMP       274          ; PC := 274
263 [-]: GETGLOBAL R24 K39      ; R24 := table
264 [-]: GETTABLE  R24 R24 K40  ; R24 := R24["0xE6450C9D"]
265 [-]: MOVE      R25 R13      ; R25 := R13
266 [-]: LOADK     R26 K23      ; R26 := "@"
267 [-]: MOVE      R27 R22      ; R27 := R22
268 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
269 [-]: CALL      R24 3 1      ; R24(R25,R26)
270 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1
271 [-]: LE        0 K41 R14    ; if 8 > R14 then PC := 274
272 [-]: JMP       274          ; PC := 274
273 [-]: JMP       405          ; PC := 405
274 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 242; R21 := R22 end
275 [-]: JMP       242          ; PC := 242
276 [-]: JMP       405          ; PC := 405
277 [-]: GETUPVAL  R24 U6       ; R24 := U6
278 [-]: EQ        0 R24 K22    ; if R24 ~= ":" then PC := 305
279 [-]: JMP       305          ; PC := 305
280 [-]: GETGLOBAL R24 K42      ; R24 := 0x63B09107
281 [-]: GETUPVAL  R25 U7       ; R25 := U7
282 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
283 [-]: JMP       302          ; PC := 302
284 [-]: GETGLOBAL R29 K15      ; R29 := string
285 [-]: GETTABLE  R29 R29 K37  ; R29 := R29["0xDE44F664"]
286 [-]: MOVE      R30 R28      ; R30 := R28
287 [-]: GETUPVAL  R31 U11      ; R31 := U11
288 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0x6FEEFFB3"]
289 [-]: MOVE      R32 R12      ; R32 := R12
290 [-]: CALL      R31 2 0      ; R31,... := R31(R32)
291 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
292 [-]: EQ        0 R29 K38    ; if R29 ~= 1 then PC := 302
293 [-]: JMP       302          ; PC := 302
294 [-]: LT        0 R14 K41    ; if R14 >= 8 then PC := 302
295 [-]: JMP       302          ; PC := 302
296 [-]: GETGLOBAL R29 K39      ; R29 := table
297 [-]: GETTABLE  R29 R29 K40  ; R29 := R29["0xE6450C9D"]
298 [-]: MOVE      R30 R13      ; R30 := R13
299 [-]: MOVE      R31 R28      ; R31 := R28
300 [-]: CALL      R29 3 1      ; R29(R30,R31)
301 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1
302 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 284; R26 := R27 end
303 [-]: JMP       284          ; PC := 284
304 [-]: JMP       405          ; PC := 405
305 [-]: GETUPVAL  R29 U6       ; R29 := U6
306 [-]: EQ        0 R29 K24    ; if R29 ~= "[" then PC := 364
307 [-]: JMP       364          ; PC := 364
308 [-]: LEN       R29 R12      ; R29 := # R12
309 [-]: LE        0 K44 R29    ; if 2 > R29 then PC := 364
310 [-]: JMP       364          ; PC := 364
311 [-]: LOADK     R29 K45      ; R29 := "^"
312 [-]: SELF      R30 R12 K46  ; R31 := R12; R30 := R12["0x633C4246"]
313 [-]: LOADK     R32 K47      ; R32 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
314 [-]: LOADK     R33 K48      ; R33 := "%%%0"
315 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
316 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
317 [-]: NEWTABLE  R30 0 0      ; R30 := {}
318 [-]: CLOSURE   R31 0        ; R31 := closure(Function #54.6.1)
319 [-]: MOVE      R0 R12       ; R0 := R12
320 [-]: GETUPVAL  R0 U9        ; R0 := U9
321 [-]: MOVE      R0 R29       ; R0 := R29
322 [-]: MOVE      R0 R30       ; R0 := R30
323 [-]: MOVE      R32 R31      ; R32 := R31
324 [-]: GETUPVAL  R33 U12      ; R33 := U12
325 [-]: CALL      R32 2 1      ; R32(R33)
326 [-]: MOVE      R32 R31      ; R32 := R31
327 [-]: GETUPVAL  R33 U13      ; R33 := U13
328 [-]: CALL      R32 2 1      ; R32(R33)
329 [-]: MOVE      R32 R31      ; R32 := R31
330 [-]: GETUPVAL  R33 U14      ; R33 := U14
331 [-]: CALL      R32 2 1      ; R32(R33)
332 [-]: MOVE      R32 R31      ; R32 := R31
333 [-]: GETUPVAL  R33 U15      ; R33 := U15
334 [-]: CALL      R32 2 1      ; R32(R33)
335 [-]: MOVE      R32 R31      ; R32 := R31
336 [-]: GETUPVAL  R33 U16      ; R33 := U16
337 [-]: CALL      R32 2 1      ; R32(R33)
338 [-]: MOVE      R32 R31      ; R32 := R31
339 [-]: GETUPVAL  R33 U17      ; R33 := U17
340 [-]: CALL      R32 2 1      ; R32(R33)
341 [-]: MOVE      R32 R31      ; R32 := R31
342 [-]: GETUPVAL  R33 U18      ; R33 := U18
343 [-]: CALL      R32 2 1      ; R32(R33)
344 [-]: LOADK     R32 K38      ; R32 := 1
345 [-]: LEN       R33 R30      ; R33 := # R30
346 [-]: LOADK     R34 K38      ; R34 := 1
347 [-]: FORPREP   R32 361      ; R32 -= R34; PC := 361
348 [-]: LT        0 R14 K41    ; if R14 >= 8 then PC := 362
349 [-]: JMP       362          ; PC := 362
350 [-]: GETGLOBAL R36 K49      ; R36 := 0xD26C89A0
351 [-]: GETTABLE  R37 R30 R35  ; R37 := R30[R35]
352 [-]: CALL      R36 2 2      ; R36 := R36(R37)
353 [-]: GETGLOBAL R37 K39      ; R37 := table
354 [-]: GETTABLE  R37 R37 K40  ; R37 := R37["0xE6450C9D"]
355 [-]: MOVE      R38 R13      ; R38 := R13
356 [-]: MOVE      R39 R36      ; R39 := R36
357 [-]: CALL      R37 3 1      ; R37(R38,R39)
358 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1
359 [-]: JMP       361          ; PC := 361
360 [-]: JMP       362          ; PC := 362
361 [-]: FORLOOP   R32 348      ; R32 += R34; if R32 <= R33 then begin PC := 348; R35 := R32 end
362 [-]: CLOSE     R29          ; SAVE R29,...
363 [-]: JMP       405          ; PC := 405
364 [-]: GETUPVAL  R29 U6       ; R29 := U6
365 [-]: EQ        0 R29 K25    ; if R29 ~= "{" then PC := 405
366 [-]: JMP       405          ; PC := 405
367 [-]: LOADK     R29 K45      ; R29 := "^"
368 [-]: SELF      R30 R12 K46  ; R31 := R12; R30 := R12["0x633C4246"]
369 [-]: LOADK     R32 K47      ; R32 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
370 [-]: LOADK     R33 K48      ; R33 := "%%%0"
371 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
372 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
373 [-]: NEWTABLE  R30 0 0      ; R30 := {}
374 [-]: GETGLOBAL R31 K42      ; R31 := 0x63B09107
375 [-]: GETUPVAL  R32 U1       ; R32 := U1
376 [-]: GETTABLE  R32 R32 K50  ; R32 := R32["mGuildSuggest"]
377 [-]: CALL      R31 2 4      ; R31,R32,R33 := R31(R32)
378 [-]: JMP       403          ; PC := 403
379 [-]: GETGLOBAL R36 K15      ; R36 := string
380 [-]: GETTABLE  R36 R36 K37  ; R36 := R36["0xDE44F664"]
381 [-]: MOVE      R37 R35      ; R37 := R35
382 [-]: MOVE      R38 R29      ; R38 := R29
383 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
384 [-]: TEST      R36 0        ; if not R36 then PC := 403
385 [-]: JMP       403          ; PC := 403
386 [-]: GETGLOBAL R36 K39      ; R36 := table
387 [-]: GETTABLE  R36 R36 K40  ; R36 := R36["0xE6450C9D"]
388 [-]: MOVE      R37 R30      ; R37 := R30
389 [-]: MOVE      R38 R35      ; R38 := R35
390 [-]: CALL      R36 3 1      ; R36(R37,R38)
391 [-]: LT        0 R14 K41    ; if R14 >= 8 then PC := 403
392 [-]: JMP       403          ; PC := 403
393 [-]: SELF      R36 R35 K46  ; R37 := R35; R36 := R35["0x633C4246"]
394 [-]: LOADK     R38 K51      ; R38 := "(%l)([^%s^%-]*)"
395 [-]: CLOSURE   R39 1        ; R39 := closure(Function #54.6.2)
396 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
397 [-]: GETGLOBAL R37 K39      ; R37 := table
398 [-]: GETTABLE  R37 R37 K40  ; R37 := R37["0xE6450C9D"]
399 [-]: MOVE      R38 R13      ; R38 := R13
400 [-]: MOVE      R39 R36      ; R39 := R36
401 [-]: CALL      R37 3 1      ; R37(R38,R39)
402 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1
403 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 379; R33 := R34 end
404 [-]: JMP       379          ; PC := 379
405 [-]: GETUPVAL  R37 U6       ; R37 := U6
406 [-]: EQ        0 R37 K24    ; if R37 ~= "[" then PC := 424
407 [-]: JMP       424          ; PC := 424
408 [-]: LOADK     R37 K38      ; R37 := 1
409 [-]: LEN       R38 R13      ; R38 := # R13
410 [-]: LOADK     R39 K38      ; R39 := 1
411 [-]: FORPREP   R37 423      ; R37 -= R39; PC := 423
412 [-]: GETGLOBAL R41 K15      ; R41 := string
413 [-]: GETTABLE  R41 R41 K16  ; R41 := R41["0x7B782033"]
414 [-]: GETTABLE  R42 R13 R40  ; R42 := R13[R40]
415 [-]: LOADK     R43 K38      ; R43 := 1
416 [-]: GETGLOBAL R44 K15      ; R44 := string
417 [-]: GETTABLE  R44 R44 K17  ; R44 := R44["0xC6772A8A"]
418 [-]: GETTABLE  R45 R13 R40  ; R45 := R13[R40]
419 [-]: CALL      R44 2 2      ; R44 := R44(R45)
420 [-]: SUB       R44 R44 K38  ; R44 := R44 - 1
421 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
422 [-]: SETTABLE  R13 R40 R41  ; R13[R40] := R41
423 [-]: FORLOOP   R37 412      ; R37 += R39; if R37 <= R38 then begin PC := 412; R40 := R37 end
424 [-]: GETGLOBAL R41 K39      ; R41 := table
425 [-]: GETTABLE  R41 R41 K52  ; R41 := R41["0xA5C58010"]
426 [-]: MOVE      R42 R13      ; R42 := R13
427 [-]: CLOSURE   R43 2        ; R43 := closure(Function #54.6.3)
428 [-]: CALL      R41 3 1      ; R41(R42,R43)
429 [-]: GETUPVAL  R41 U6       ; R41 := U6
430 [-]: EQ        0 R41 K24    ; if R41 ~= "[" then PC := 441
431 [-]: JMP       441          ; PC := 441
432 [-]: LOADK     R41 K38      ; R41 := 1
433 [-]: LEN       R42 R13      ; R42 := # R13
434 [-]: LOADK     R43 K38      ; R43 := 1
435 [-]: FORPREP   R41 440      ; R41 -= R43; PC := 440
436 [-]: GETTABLE  R45 R13 R44  ; R45 := R13[R44]
437 [-]: LOADK     R46 K53      ; R46 := "]"
438 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
439 [-]: SETTABLE  R13 R44 R45  ; R13[R44] := R45
440 [-]: FORLOOP   R41 436      ; R41 += R43; if R41 <= R42 then begin PC := 436; R44 := R41 end
441 [-]: GETGLOBAL R45 K42      ; R45 := 0x63B09107
442 [-]: MOVE      R46 R13      ; R46 := R13
443 [-]: CALL      R45 2 4      ; R45,R46,R47 := R45(R46)
444 [-]: JMP       449          ; PC := 449
445 [-]: MOVE      R50 R49      ; R50 := R49
446 [-]: LOADK     R51 K54      ; R51 := "|"
447 [-]: MOVE      R52 R15      ; R52 := R15
448 [-]: CONCAT    R15 R50 R52  ; R15 := R50 .. R51 .. R52
449 [-]: TFORLOOP  R45 2        ; R48,R49 :=  R45(R46,R47); if R48 ~= nil then begin PC = 445; R47 := R48 end
450 [-]: JMP       445          ; PC := 445
451 [-]: EQ        0 R14 K38    ; if R14 ~= 1 then PC := 455
452 [-]: JMP       455          ; PC := 455
453 [-]: TEST      R3 1         ; if R3 then PC := 459
454 [-]: JMP       459          ; PC := 459
455 [-]: MOVE      R50 R15      ; R50 := R15
456 [-]: MOVE      R51 R11      ; R51 := R11
457 [-]: CONCAT    R15 R50 R51  ; R15 := R50 .. R51
458 [-]: JMP       484          ; PC := 484
459 [-]: LOADK     R14 K13      ; R14 := 0
460 [-]: JMP       484          ; PC := 484
461 [-]: GETUPVAL  R50 U3       ; R50 := U3
462 [-]: GETTABLE  R50 R50 K8   ; R50 := R50["0xA18F392B"]
463 [-]: GETUPVAL  R51 U4       ; R51 := U4
464 [-]: CALL      R50 2 1      ; R50(R51)
465 [-]: MOVE      R50 R0       ; R50 := R0
466 [-]: MOVE      R50 R0       ; R50 := R0
467 [-]: GETGLOBAL R50 K0       ; R50 := mMovie
468 [-]: SELF      R50 R50 K18  ; R51 := R50; R50 := R50["0x880196A7"]
469 [-]: GETUPVAL  R52 U1       ; R52 := U1
470 [-]: GETTABLE  R52 R52 K2   ; R52 := R52["mInputPanel"]
471 [-]: GETTABLE  R52 R52 K3   ; R52 := R52["mClipPath"]
472 [-]: LOADK     R53 K19      ; R53 := "MessageBox"
473 [-]: LOADK     R54 K5       ; R54 := "textSuggestActive"
474 [-]: MOVE      R55 R0       ; R55 := R0
475 [-]: CALL      R50 6 1      ; R50(R51,R52,R53,R54,R55)
476 [-]: GETUPVAL  R50 U3       ; R50 := U3
477 [-]: GETTABLE  R50 R50 K20  ; R50 := R50["0x1097C22C"]
478 [-]: LOADK     R51 K21      ; R51 := ""
479 [-]: GETUPVAL  R52 U4       ; R52 := U4
480 [-]: MOVE      R53 R0       ; R53 := R0
481 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
482 [-]: MOVE      R50 R0       ; R50 := R0
483 [-]: MOVE      R50 R2       ; R50 := R2
484 [-]: GETGLOBAL R50 K15      ; R50 := string
485 [-]: GETTABLE  R50 R50 K17  ; R50 := R50["0xC6772A8A"]
486 [-]: MOVE      R51 R15      ; R51 := R15
487 [-]: CALL      R50 2 2      ; R50 := R50(R51)
488 [-]: GETUPVAL  R51 U2       ; R51 := U2
489 [-]: TEST      R51 0        ; if not R51 then PC := 535
490 [-]: JMP       535          ; PC := 535
491 [-]: LT        0 K13 R14    ; if 0 >= R14 then PC := 535
492 [-]: JMP       535          ; PC := 535
493 [-]: GETUPVAL  R51 U6       ; R51 := U6
494 [-]: EQ        0 R51 K22    ; if R51 ~= ":" then PC := 499
495 [-]: JMP       499          ; PC := 499
496 [-]: LEN       R51 R11      ; R51 := # R11
497 [-]: LT        0 K44 R51    ; if 2 >= R51 then PC := 535
498 [-]: JMP       535          ; PC := 535
499 [-]: GETUPVAL  R51 U3       ; R51 := U3
500 [-]: GETTABLE  R51 R51 K55  ; R51 := R51["0x1452A044"]
501 [-]: GETUPVAL  R52 U4       ; R52 := U4
502 [-]: CALL      R51 2 1      ; R51(R52)
503 [-]: GETGLOBAL R51 K0       ; R51 := mMovie
504 [-]: SELF      R51 R51 K18  ; R52 := R51; R51 := R51["0x880196A7"]
505 [-]: GETUPVAL  R53 U1       ; R53 := U1
506 [-]: GETTABLE  R53 R53 K2   ; R53 := R53["mInputPanel"]
507 [-]: GETTABLE  R53 R53 K3   ; R53 := R53["mClipPath"]
508 [-]: LOADK     R54 K19      ; R54 := "MessageBox"
509 [-]: LOADK     R55 K5       ; R55 := "textSuggestActive"
510 [-]: MOVE      R56 R1       ; R56 := R1
511 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
512 [-]: MOVE      R51 R1       ; R51 := R1
513 [-]: MOVE      R51 R0       ; R51 := R0
514 [-]: GETUPVAL  R51 U3       ; R51 := U3
515 [-]: GETTABLE  R51 R51 K56  ; R51 := R51["0x8EA5CA5A"]
516 [-]: MOVE      R52 R11      ; R52 := R11
517 [-]: GETUPVAL  R53 U4       ; R53 := U4
518 [-]: CALL      R51 3 1      ; R51(R52,R53)
519 [-]: GETUPVAL  R51 U3       ; R51 := U3
520 [-]: GETTABLE  R51 R51 K57  ; R51 := R51["0x51095315"]
521 [-]: MOVE      R52 R50      ; R52 := R50
522 [-]: GETUPVAL  R53 U4       ; R53 := U4
523 [-]: CALL      R51 3 1      ; R51(R52,R53)
524 [-]: GETUPVAL  R51 U3       ; R51 := U3
525 [-]: GETTABLE  R51 R51 K20  ; R51 := R51["0x1097C22C"]
526 [-]: MOVE      R52 R15      ; R52 := R15
527 [-]: GETUPVAL  R53 U4       ; R53 := U4
528 [-]: MOVE      R54 R0       ; R54 := R0
529 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
530 [-]: GETUPVAL  R51 U3       ; R51 := U3
531 [-]: GETTABLE  R51 R51 K58  ; R51 := R51["0x8C7099E9"]
532 [-]: GETUPVAL  R52 U4       ; R52 := U4
533 [-]: CALL      R51 2 1      ; R51(R52)
534 [-]: JMP       571          ; PC := 571
535 [-]: GETUPVAL  R51 U2       ; R51 := U2
536 [-]: TEST      R51 0        ; if not R51 then PC := 571
537 [-]: JMP       571          ; PC := 571
538 [-]: EQ        1 R14 K13    ; if R14 == 0 then PC := 546
539 [-]: JMP       546          ; PC := 546
540 [-]: GETUPVAL  R51 U6       ; R51 := U6
541 [-]: EQ        0 R51 K22    ; if R51 ~= ":" then PC := 571
542 [-]: JMP       571          ; PC := 571
543 [-]: LEN       R51 R11      ; R51 := # R11
544 [-]: LE        0 R51 K44    ; if R51 > 2 then PC := 571
545 [-]: JMP       571          ; PC := 571
546 [-]: GETUPVAL  R51 U3       ; R51 := U3
547 [-]: GETTABLE  R51 R51 K20  ; R51 := R51["0x1097C22C"]
548 [-]: LOADK     R52 K21      ; R52 := ""
549 [-]: GETUPVAL  R53 U4       ; R53 := U4
550 [-]: MOVE      R54 R0       ; R54 := R0
551 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
552 [-]: GETUPVAL  R51 U3       ; R51 := U3
553 [-]: GETTABLE  R51 R51 K8   ; R51 := R51["0xA18F392B"]
554 [-]: GETUPVAL  R52 U4       ; R52 := U4
555 [-]: CALL      R51 2 1      ; R51(R52)
556 [-]: GETUPVAL  R51 U3       ; R51 := U3
557 [-]: GETTABLE  R51 R51 K58  ; R51 := R51["0x8C7099E9"]
558 [-]: GETUPVAL  R52 U4       ; R52 := U4
559 [-]: CALL      R51 2 1      ; R51(R52)
560 [-]: GETGLOBAL R51 K0       ; R51 := mMovie
561 [-]: SELF      R51 R51 K18  ; R52 := R51; R51 := R51["0x880196A7"]
562 [-]: GETUPVAL  R53 U1       ; R53 := U1
563 [-]: GETTABLE  R53 R53 K2   ; R53 := R53["mInputPanel"]
564 [-]: GETTABLE  R53 R53 K3   ; R53 := R53["mClipPath"]
565 [-]: LOADK     R54 K19      ; R54 := "MessageBox"
566 [-]: LOADK     R55 K5       ; R55 := "textSuggestActive"
567 [-]: MOVE      R56 R0       ; R56 := R0
568 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
569 [-]: MOVE      R51 R0       ; R51 := R0
570 [-]: MOVE      R51 R0       ; R51 := R0
571 [-]: RETURN    R0 1         ; return 


; Function #54.6.1:
;
; Name:            
; Defined at line: 1501
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Indexer"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x7B782033"]
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: LOADK     R4 K3        ; R4 := 2
  6 [-]: LOADK     R5 K3        ; R5 := 2
  7 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: TEST      R1 0         ; if not R1 then PC := 46
 10 [-]: JMP       46           ; PC := 46
 11 [-]: MOVE      R2 R1        ; R2 := R1
 12 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["Tags"]
 13 [-]: LEN       R3 R3        ; R3 := # R3
 14 [-]: LOADK     R4 K5        ; R4 := 1
 15 [-]: FORPREP   R2 45        ; R2 -= R4; PC := 45
 16 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["Tags"]
 17 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 18 [-]: GETUPVAL  R7 U1        ; R7 := U1
 19 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xCECDECDE"]
 20 [-]: MOVE      R8 R6        ; R8 := R6
 21 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 22 [-]: GETGLOBAL R8 K1        ; R8 := string
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0x633C4246"]
 24 [-]: MOVE      R9 R7        ; R9 := R7
 25 [-]: LOADK     R10 K8       ; R10 := "%]"
 26 [-]: LOADK     R11 K9       ; R11 := ""
 27 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: LE        0 R9 R8      ; if R9 > R8 then PC := 45
 30 [-]: JMP       45           ; PC := 45
 31 [-]: GETGLOBAL R9 K1        ; R9 := string
 32 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["0xDE44F664"]
 33 [-]: MOVE      R10 R7       ; R10 := R7
 34 [-]: GETUPVAL  R11 U2       ; R11 := U2
 35 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 36 [-]: TEST      R9 0         ; if not R9 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETGLOBAL R9 K11       ; R9 := table
 39 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["0xE6450C9D"]
 40 [-]: GETUPVAL  R10 U3       ; R10 := U3
 41 [-]: MOVE      R11 R6       ; R11 := R6
 42 [-]: CALL      R9 3 1       ; R9(R10,R11)
 43 [-]: JMP       45           ; PC := 45
 44 [-]: JMP       46           ; PC := 46
 45 [-]: FORLOOP   R2 16        ; R2 += R4; if R2 <= R3 then begin PC := 16; R5 := R2 end
 46 [-]: RETURN    R0 1         ; return 


; Function #54.6.2:
;
; Name:            
; Defined at line: 1543
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := string
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x639C642A"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #54.6.3:
;
; Name:            
; Defined at line: 1558
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #54.7:
;
; Name:            
; Defined at line: 1602
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mScrollBar"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xBBA39962"]
  4 [-]: SUB       R4 R1 K3     ; R4 := R1 - 28
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
  7 [-]: GETGLOBAL R3 K5        ; R3 := math
  8 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0xF7005A7B"]
  9 [-]: GETGLOBAL R4 K5        ; R4 := math
 10 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xF7005A7B"]
 11 [-]: SUB       R5 R1 K7     ; R5 := R1 - 31
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mListControl"]
 14 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mForcedVerticalSeparation"]
 15 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: SETTABLE  R2 K4 R3     ; R2["mVisibleElements"] := R3
 18 [-]: RETURN    R0 1         ; return 


; Function #54.8:
;
; Name:            
; Defined at line: 1607
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mScroll"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 27
  6 [-]: JMP       27           ; PC := 27
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mScrollBar"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mListControl"]
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScroll"]
 15 [-]: LT        1 R1 R2      ; if R1 < R2 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 18 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mScrollBar"]
 19 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x52FA23CE"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: EQ        0 R3 K5      ; if R3 ~= 1 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 24 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xCE468565"]
 25 [-]: ADD       R5 R2 K5     ; R5 := R2 + 1
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 28 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x9EBF0BD2"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 31 [-]: MOVE      R5 R3        ; R5 := R3
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 1         ; if R4 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: LE        0 R1 R3      ; if R1 > R3 then PC := 47
 36 [-]: JMP       47           ; PC := 47
 37 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x5B1DCC65"]
 38 [-]: GETGLOBAL R6 K9        ; R6 := 0x6374FD98
 39 [-]: ADD       R7 R3 K5     ; R7 := R3 + 1
 40 [-]: LOADK     R8 K5        ; R8 := 1
 41 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mListControl"]
 42 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9["0xC51A5C9D"]
 43 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 44 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 45 [-]: MOVE      R7 R1        ; R7 := R1
 46 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 47 [-]: RETURN    R0 1         ; return 


; Function #54.9:
;
; Name:            
; Defined at line: 1622
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mScroll"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 21
  6 [-]: JMP       21           ; PC := 21
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mScrollBar"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mListControl"]
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScroll"]
 15 [-]: LT        0 R1 R2      ; if R1 >= R2 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 18 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xCE468565"]
 19 [-]: SUB       R5 R2 K5     ; R5 := R2 - 1
 20 [-]: CALL      R3 3 1       ; R3(R4,R5)
 21 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 22 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x9EBF0BD2"]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 25 [-]: MOVE      R5 R3        ; R5 := R3
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: TEST      R4 1         ; if R4 then PC := 41
 28 [-]: JMP       41           ; PC := 41
 29 [-]: LT        0 R1 R3      ; if R1 >= R3 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R4 R0 K7     ; R5 := R0; R4 := R0["0x5B1DCC65"]
 32 [-]: GETGLOBAL R6 K8        ; R6 := 0x6374FD98
 33 [-]: SUB       R7 R3 K5     ; R7 := R3 - 1
 34 [-]: LOADK     R8 K5        ; R8 := 1
 35 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mListControl"]
 36 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0xC51A5C9D"]
 37 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 38 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 39 [-]: MOVE      R7 R1        ; R7 := R1
 40 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 41 [-]: RETURN    R0 1         ; return 


; Function #54.10:
;
; Name:            
; Defined at line: 1636
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mParent"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5528ED75"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mWindow"]
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: SETTABLE  R0 K3 R1     ; R0["mActiveRect"] := R1
  6 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0xD163C1D3"]
  7 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mIsExpanded"]
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 10 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 11 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 12 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 13 [-]: LOADK     R5 K9        ; R5 := "Panel.Fill"
 14 [-]: LOADK     R6 K10       ; R6 := "_width"
 15 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
 16 [-]: SUB       R7 R7 K12    ; R7 := R7 - 1
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 19 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 20 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 21 [-]: LOADK     R5 K9        ; R5 := "Panel.Fill"
 22 [-]: LOADK     R6 K13       ; R6 := "_height"
 23 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 24 [-]: SUB       R7 R7 K15    ; R7 := R7 - 2
 25 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 26 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 27 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 28 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 29 [-]: LOADK     R5 K16       ; R5 := "Blurer"
 30 [-]: LOADK     R6 K10       ; R6 := "_width"
 31 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
 32 [-]: SUB       R7 R7 K12    ; R7 := R7 - 1
 33 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 34 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 35 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 36 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 37 [-]: LOADK     R5 K16       ; R5 := "Blurer"
 38 [-]: LOADK     R6 K13       ; R6 := "_height"
 39 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 40 [-]: SUB       R7 R7 K15    ; R7 := R7 - 2
 41 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 42 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 43 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 44 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 45 [-]: LOADK     R5 K17       ; R5 := "Mask"
 46 [-]: LOADK     R6 K10       ; R6 := "_width"
 47 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
 48 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 49 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 50 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 51 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 52 [-]: LOADK     R5 K17       ; R5 := "Mask"
 53 [-]: LOADK     R6 K13       ; R6 := "_height"
 54 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 55 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 56 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 57 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 58 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 59 [-]: LOADK     R5 K18       ; R5 := "Panel.EdgeBottom"
 60 [-]: LOADK     R6 K19       ; R6 := "_y"
 61 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 62 [-]: SUB       R7 R7 K12    ; R7 := R7 - 1
 63 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 64 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 65 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 66 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 67 [-]: LOADK     R5 K20       ; R5 := "Panel.EdgeRight"
 68 [-]: LOADK     R6 K21       ; R6 := "_x"
 69 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
 70 [-]: SUB       R7 R7 K12    ; R7 := R7 - 1
 71 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 72 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 73 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 74 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 75 [-]: LOADK     R5 K20       ; R5 := "Panel.EdgeRight"
 76 [-]: LOADK     R6 K13       ; R6 := "_height"
 77 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 78 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 79 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 80 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 81 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 82 [-]: LOADK     R5 K22       ; R5 := "Panel.LocatorSeparator"
 83 [-]: LOADK     R6 K19       ; R6 := "_y"
 84 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 85 [-]: SUB       R7 R7 K23    ; R7 := R7 - 27
 86 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 87 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 88 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 89 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 90 [-]: LOADK     R5 K24       ; R5 := "Panel.LocatorBtn"
 91 [-]: LOADK     R6 K19       ; R6 := "_y"
 92 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
 93 [-]: SUB       R7 R7 K25    ; R7 := R7 - 25
 94 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 95 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 96 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
 97 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 98 [-]: LOADK     R5 K26       ; R5 := "Panel.LeftShadow"
 99 [-]: LOADK     R6 K13       ; R6 := "_height"
100 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
101 [-]: SUB       R7 R7 K15    ; R7 := R7 - 2
102 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
103 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
104 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
105 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
106 [-]: LOADK     R5 K27       ; R5 := "Panel.TopShadow"
107 [-]: LOADK     R6 K10       ; R6 := "_width"
108 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
109 [-]: SUB       R7 R7 K15    ; R7 := R7 - 2
110 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
111 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
112 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
113 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
114 [-]: LOADK     R5 K28       ; R5 := "Panel.RightShadow"
115 [-]: LOADK     R6 K21       ; R6 := "_x"
116 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
117 [-]: SUB       R7 R7 K12    ; R7 := R7 - 1
118 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
119 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
120 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
121 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
122 [-]: LOADK     R5 K28       ; R5 := "Panel.RightShadow"
123 [-]: LOADK     R6 K13       ; R6 := "_height"
124 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
125 [-]: SUB       R7 R7 K15    ; R7 := R7 - 2
126 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
127 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
128 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
129 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
130 [-]: LOADK     R5 K29       ; R5 := "Panel.BottomShadow"
131 [-]: LOADK     R6 K19       ; R6 := "_y"
132 [-]: GETTABLE  R7 R1 K14    ; R7 := R1["height"]
133 [-]: SUB       R7 R7 K12    ; R7 := R7 - 1
134 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
135 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
136 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x880196A7"]
137 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
138 [-]: LOADK     R5 K29       ; R5 := "Panel.BottomShadow"
139 [-]: LOADK     R6 K10       ; R6 := "_width"
140 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["width"]
141 [-]: SUB       R7 R7 K15    ; R7 := R7 - 2
142 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
143 [-]: GETGLOBAL R2 K30       ; R2 := 0xF595ADDE
144 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
145 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0x6B7B470B"]
146 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
147 [-]: LOADK     R6 K32       ; R6 := ".Panel.UserList.ScrollBar"
148 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
149 [-]: LOADK     R6 K10       ; R6 := "_width"
150 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
151 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
152 [-]: GETGLOBAL R3 K33       ; R3 := 0x400E7765
153 [-]: MOVE      R4 R2        ; R4 := R2
154 [-]: CALL      R3 2 2       ; R3 := R3(R4)
155 [-]: TEST      R3 1         ; if R3 then PC := 167
156 [-]: JMP       167          ; PC := 167
157 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
158 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
159 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
160 [-]: LOADK     R6 K34       ; R6 := "Panel.UserList.ScrollBar"
161 [-]: LOADK     R7 K21       ; R7 := "_x"
162 [-]: GETTABLE  R8 R1 K11    ; R8 := R1["width"]
163 [-]: DIV       R9 R2 K15    ; R9 := R2 / 2
164 [-]: SUB       R8 R8 R9     ; R8 := R8 - R9
165 [-]: ADD       R8 R8 K15    ; R8 := R8 + 2
166 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
167 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
168 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0x1C19D966"]
169 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
170 [-]: LOADK     R6 K21       ; R6 := "_x"
171 [-]: GETTABLE  R7 R1 K36    ; R7 := R1["x"]
172 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
173 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
174 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0x1C19D966"]
175 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
176 [-]: LOADK     R6 K19       ; R6 := "_y"
177 [-]: GETTABLE  R7 R1 K37    ; R7 := R1["y"]
178 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
179 [-]: GETTABLE  R3 R0 K38    ; R3 := R0["mEmoteGrid"]
180 [-]: GETGLOBAL R4 K40       ; R4 := math
181 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["0xF7005A7B"]
182 [-]: GETTABLE  R5 R1 K14    ; R5 := R1["height"]
183 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["mEmoteGrid"]
184 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["mRowSeparation"]
185 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
186 [-]: CALL      R4 2 2       ; R4 := R4(R5)
187 [-]: SETTABLE  R3 K39 R4    ; R3["mRows"] := R4
188 [-]: GETTABLE  R3 R0 K38    ; R3 := R0["mEmoteGrid"]
189 [-]: GETTABLE  R4 R0 K38    ; R4 := R0["mEmoteGrid"]
190 [-]: GETTABLE  R4 R4 K39    ; R4 := R4["mRows"]
191 [-]: GETTABLE  R5 R0 K38    ; R5 := R0["mEmoteGrid"]
192 [-]: GETTABLE  R5 R5 K44    ; R5 := R5["mColumns"]
193 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
194 [-]: SETTABLE  R3 K43 R4    ; R3["mVisibleElements"] := R4
195 [-]: GETTABLE  R3 R0 K38    ; R3 := R0["mEmoteGrid"]
196 [-]: GETTABLE  R3 R3 K45    ; R3 := R3["mScrollBar"]
197 [-]: SELF      R3 R3 K46    ; R4 := R3; R3 := R3["0xBBA39962"]
198 [-]: GETTABLE  R5 R1 K14    ; R5 := R1["height"]
199 [-]: SUB       R5 R5 K15    ; R5 := R5 - 2
200 [-]: MOVE      R6 R0        ; R6 := R0
201 [-]: MOVE      R7 R1        ; R7 := R1
202 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
203 [-]: GETTABLE  R3 R0 K38    ; R3 := R0["mEmoteGrid"]
204 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0x6470BAF4"]
205 [-]: LOADNIL   R5 R5        ; R5 := nil
206 [-]: MOVE      R6 R0        ; R6 := R0
207 [-]: MOVE      R7 R1        ; R7 := R1
208 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
209 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mParent"]
210 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["mVisualMode"]
211 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mParent"]
212 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
213 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 230
214 [-]: JMP       230          ; PC := 230
215 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mParent"]
216 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["mVisualMode"]
217 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mParent"]
218 [-]: GETTABLE  R4 R4 K50    ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
219 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 230
220 [-]: JMP       230          ; PC := 230
221 [-]: SELF      R3 R0 K51    ; R4 := R0; R3 := R0["0xC86D89A5"]
222 [-]: GETTABLE  R5 R1 K14    ; R5 := R1["height"]
223 [-]: CALL      R3 3 1       ; R3(R4,R5)
224 [-]: GETTABLE  R3 R0 K52    ; R3 := R0["mListControl"]
225 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0x6470BAF4"]
226 [-]: LOADNIL   R5 R5        ; R5 := nil
227 [-]: MOVE      R6 R1        ; R6 := R1
228 [-]: MOVE      R7 R1        ; R7 := R1
229 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
230 [-]: RETURN    R0 1         ; return 


; Function #54.11:
;
; Name:            
; Defined at line: 1682
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mUserLocator"]
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mIsExpanded"]
  5 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mUserLocator"]
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mGridWidth"]
  7 [-]: UNM       R4 R4        ; R4 := - R4
  8 [-]: LOADK     R5 K4        ; R5 := 0
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mUserPanel"]
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mUserLocator"]
 13 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mIsExpanded"]
 14 [-]: TEST      R3 1         ; if R3 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 17 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 18 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 19 [-]: LOADK     R6 K9        ; R6 := "AlphabetIndex"
 20 [-]: LOADK     R7 K10       ; R7 := "_visible"
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 23 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 24 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 25 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 26 [-]: LOADK     R6 K9        ; R6 := "AlphabetIndex"
 27 [-]: LOADK     R7 K11       ; R7 := "noMenuSelection"
 28 [-]: MOVE      R8 R1        ; R8 := R1
 29 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 30 [-]: GETGLOBAL R3 K12       ; R3 := 0x52E17A90
 31 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 32 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 33 [-]: LOADK     R6 K13       ; R6 := ".AlphabetIndex.Grid"
 34 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 35 [-]: GETGLOBAL R6 K14       ; R6 := UISys
 36 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
 37 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 38 [-]: LOADK     R8 K16       ; R8 := "_x"
 39 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 40 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 41 [-]: MOVE      R9 R2        ; R9 := R2
 42 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 43 [-]: LOADK     R9 K17       ; R9 := 0.25
 44 [-]: LOADK     R10 K4       ; R10 := 0
 45 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 46 [-]: GETGLOBAL R3 K12       ; R3 := 0x52E17A90
 47 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 48 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 49 [-]: LOADK     R6 K18       ; R6 := ".AlphabetIndex.Blurer"
 50 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 51 [-]: GETGLOBAL R6 K14       ; R6 := UISys
 52 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
 53 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 54 [-]: LOADK     R8 K16       ; R8 := "_x"
 55 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 56 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 57 [-]: MOVE      R9 R2        ; R9 := R2
 58 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 59 [-]: LOADK     R9 K17       ; R9 := 0.25
 60 [-]: LOADK     R10 K4       ; R10 := 0
 61 [-]: CLOSURE   R11 0        ; R11 := closure(Function #54.11.1)
 62 [-]: GETUPVAL  R0 U1        ; R0 := U1
 63 [-]: MOVE      R0 R0        ; R0 := R0
 64 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 65 [-]: GETUPVAL  R3 U1        ; R3 := U1
 66 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mUserPanel"]
 67 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mUserLocator"]
 68 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x92C22EFA"]
 69 [-]: CALL      R3 2 1       ; R3(R4)
 70 [-]: RETURN    R0 1         ; return 


; Function #54.11.1:
;
; Name:            
; Defined at line: 1691
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mUserPanel"]
  3 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserLocator"]
  4 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mIsExpanded"]
  5 [-]: TEST      R0 1         ; if R0 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x880196A7"]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mClipPath"]
 11 [-]: LOADK     R3 K6        ; R3 := "AlphabetIndex"
 12 [-]: LOADK     R4 K7        ; R4 := "_visible"
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
 16 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x880196A7"]
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mClipPath"]
 19 [-]: LOADK     R3 K6        ; R3 := "AlphabetIndex"
 20 [-]: LOADK     R4 K8        ; R4 := "noMenuSelection"
 21 [-]: GETUPVAL  R5 U0        ; R5 := U0
 22 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["mUserPanel"]
 23 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["mUserLocator"]
 24 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mIsExpanded"]
 25 [-]: MOVE      R5 R5        ; R5 := R5
 26 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #54.12:
;
; Name:            
; Defined at line: 1701
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x11D1121F"]
  3 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipPath"]
  4 [-]: LOADK     R6 K3        ; R6 := ".Panel"
  5 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  6 [-]: CALL      R3 3 1       ; R3(R4,R5)
  7 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  8 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x11D1121F"]
  9 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipPath"]
 10 [-]: LOADK     R6 K4        ; R6 := ".AlphabetIndex"
 11 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 12 [-]: CALL      R3 3 1       ; R3(R4,R5)
 13 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SETTABLE  R0 K6 R1     ; R0["mIsExpanded"] := R1
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mIsExpanded"]
 18 [-]: MOVE      R3 R3        ; R3 := R3
 19 [-]: SETTABLE  R0 K6 R3     ; R0["mIsExpanded"] := R3
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0xEC183DDC"]
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mWindow"]
 24 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["x"]
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mWindow"]
 27 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["y"]
 28 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 29 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mIsExpanded"]
 30 [-]: TEST      R3 1         ; if R3 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["mUserLocator"]
 33 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mIsExpanded"]
 34 [-]: TEST      R3 0         ; if not R3 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0["0x1783C901"]
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: GETUPVAL  R3 U1        ; R3 := U1
 39 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["0xF81722A2"]
 40 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mIsExpanded"]
 41 [-]: LOADK     R5 K14       ; R5 := 0
 42 [-]: GETTABLE  R6 R0 K15    ; R6 := R0["mActiveRect"]
 43 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["width"]
 44 [-]: UNM       R6 R6        ; R6 := - R6
 45 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 46 [-]: GETUPVAL  R4 U1        ; R4 := U1
 47 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["0xF81722A2"]
 48 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mIsExpanded"]
 49 [-]: GETTABLE  R6 R0 K15    ; R6 := R0["mActiveRect"]
 50 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["width"]
 51 [-]: LOADK     R7 K14       ; R7 := 0
 52 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 53 [-]: TEST      R2 0         ; if not R2 then PC := 107
 54 [-]: JMP       107          ; PC := 107
 55 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 56 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
 57 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 58 [-]: LOADK     R8 K18       ; R8 := "Panel"
 59 [-]: LOADK     R9 K19       ; R9 := "_visible"
 60 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mIsExpanded"]
 61 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 62 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 63 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
 64 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 65 [-]: LOADK     R8 K18       ; R8 := "Panel"
 66 [-]: LOADK     R9 K20       ; R9 := "_x"
 67 [-]: MOVE      R10 R3       ; R10 := R3
 68 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 69 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 70 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
 71 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 72 [-]: LOADK     R8 K21       ; R8 := "Blurer"
 73 [-]: LOADK     R9 K19       ; R9 := "_visible"
 74 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mIsExpanded"]
 75 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 76 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 77 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
 78 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 79 [-]: LOADK     R8 K21       ; R8 := "Blurer"
 80 [-]: LOADK     R9 K20       ; R9 := "_x"
 81 [-]: MOVE      R10 R3       ; R10 := R3
 82 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 83 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 84 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
 85 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 86 [-]: LOADK     R8 K22       ; R8 := "AlphabetIndex"
 87 [-]: LOADK     R9 K19       ; R9 := "_visible"
 88 [-]: GETGLOBAL R10 K23      ; R10 := 0x400E7765
 89 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["mUserLocator"]
 90 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 91 [-]: TEST      R10 1        ; if R10 then PC := 96
 92 [-]: JMP       96           ; PC := 96
 93 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["mUserLocator"]
 94 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["mIsExpanded"]
 95 [-]: JMP       98           ; PC := 98
 96 [-]: MOVE      R10 R0       ; R10 := R0
 97 [-]: MOVE      R10 R1       ; R10 := R1
 98 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 99 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
100 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
101 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
102 [-]: LOADK     R8 K22       ; R8 := "AlphabetIndex"
103 [-]: LOADK     R9 K20       ; R9 := "_x"
104 [-]: MOVE      R10 R4       ; R10 := R4
105 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
106 [-]: JMP       191          ; PC := 191
107 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mIsExpanded"]
108 [-]: TEST      R5 0         ; if not R5 then PC := 140
109 [-]: JMP       140          ; PC := 140
110 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
111 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
112 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
113 [-]: LOADK     R8 K18       ; R8 := "Panel"
114 [-]: LOADK     R9 K19       ; R9 := "_visible"
115 [-]: MOVE      R10 R1       ; R10 := R1
116 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
117 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
118 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
119 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
120 [-]: LOADK     R8 K21       ; R8 := "Blurer"
121 [-]: LOADK     R9 K19       ; R9 := "_visible"
122 [-]: MOVE      R10 R1       ; R10 := R1
123 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
124 [-]: GETGLOBAL R5 K23       ; R5 := 0x400E7765
125 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mUserLocator"]
126 [-]: CALL      R5 2 2       ; R5 := R5(R6)
127 [-]: TEST      R5 1         ; if R5 then PC := 140
128 [-]: JMP       140          ; PC := 140
129 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mUserLocator"]
130 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mIsExpanded"]
131 [-]: TEST      R5 0         ; if not R5 then PC := 140
132 [-]: JMP       140          ; PC := 140
133 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
134 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5["0x880196A7"]
135 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
136 [-]: LOADK     R8 K22       ; R8 := "AlphabetIndex"
137 [-]: LOADK     R9 K19       ; R9 := "_visible"
138 [-]: MOVE      R10 R1       ; R10 := R1
139 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
140 [-]: SETTABLE  R0 K24 K25   ; R0["mUserListInterpolating"] := "0x1"
141 [-]: GETGLOBAL R5 K26       ; R5 := 0x52E17A90
142 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
143 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
144 [-]: LOADK     R8 K3        ; R8 := ".Panel"
145 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
146 [-]: GETGLOBAL R8 K27       ; R8 := UISys
147 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["FlashInstance_EASE_OUT"]
148 [-]: NEWTABLE  R9 1 0       ; R9 := {}
149 [-]: LOADK     R10 K20      ; R10 := "_x"
150 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
151 [-]: NEWTABLE  R10 1 0      ; R10 := {}
152 [-]: MOVE      R11 R3       ; R11 := R3
153 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
154 [-]: LOADK     R11 K29      ; R11 := 0.25
155 [-]: LOADK     R12 K14      ; R12 := 0
156 [-]: CLOSURE   R13 0        ; R13 := closure(Function #54.12.1)
157 [-]: MOVE      R0 R0        ; R0 := R0
158 [-]: CALL      R5 9 1       ; R5(R6,R7,R8,R9,R10,R11,R12,R13)
159 [-]: GETGLOBAL R5 K26       ; R5 := 0x52E17A90
160 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
161 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
162 [-]: LOADK     R8 K30       ; R8 := ".Blurer"
163 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
164 [-]: GETGLOBAL R8 K27       ; R8 := UISys
165 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["FlashInstance_EASE_OUT"]
166 [-]: NEWTABLE  R9 1 0       ; R9 := {}
167 [-]: LOADK     R10 K20      ; R10 := "_x"
168 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
169 [-]: NEWTABLE  R10 1 0      ; R10 := {}
170 [-]: MOVE      R11 R3       ; R11 := R3
171 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
172 [-]: LOADK     R11 K29      ; R11 := 0.25
173 [-]: LOADK     R12 K14      ; R12 := 0
174 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
175 [-]: GETGLOBAL R5 K26       ; R5 := 0x52E17A90
176 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
177 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
178 [-]: LOADK     R8 K4        ; R8 := ".AlphabetIndex"
179 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
180 [-]: GETGLOBAL R8 K27       ; R8 := UISys
181 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["FlashInstance_EASE_OUT"]
182 [-]: NEWTABLE  R9 1 0       ; R9 := {}
183 [-]: LOADK     R10 K20      ; R10 := "_x"
184 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
185 [-]: NEWTABLE  R10 1 0      ; R10 := {}
186 [-]: MOVE      R11 R4       ; R11 := R4
187 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
188 [-]: LOADK     R11 K29      ; R11 := 0.25
189 [-]: LOADK     R12 K14      ; R12 := 0
190 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
191 [-]: RETURN    R0 1         ; return 


; Function #54.12.1:
;
; Name:            
; Defined at line: 1741
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mIsExpanded"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 29
  4 [-]: JMP       29           ; PC := 29
  5 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x880196A7"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipPath"]
  9 [-]: LOADK     R3 K4        ; R3 := "Panel"
 10 [-]: LOADK     R4 K5        ; R4 := "_visible"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 13 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x880196A7"]
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipPath"]
 17 [-]: LOADK     R3 K6        ; R3 := "Blurer"
 18 [-]: LOADK     R4 K5        ; R4 := "_visible"
 19 [-]: MOVE      R5 R0        ; R5 := R0
 20 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 21 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x880196A7"]
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipPath"]
 25 [-]: LOADK     R3 K7        ; R3 := "AlphabetIndex"
 26 [-]: LOADK     R4 K5        ; R4 := "_visible"
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: SETTABLE  R0 K8 K9     ; R0["mUserListInterpolating"] := "0x0"
 31 [-]: RETURN    R0 1         ; return 


; Function #54.13:
;
; Name:            
; Defined at line: 1756
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIsExpanded"]
  2 [-]: TEST      R3 0         ; if not R3 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mIsVisible"]
  6 [-]: EQ        0 R3 R1      ; if R3 ~= R1 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xD163C1D3"]
  9 [-]: LOADNIL   R5 R5        ; R5 := nil
 10 [-]: MOVE      R6 R2        ; R6 := R2
 11 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 12 [-]: JMP       21           ; PC := 21
 13 [-]: TEST      R1 1         ; if R1 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mUserLocator"]
 16 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mIsExpanded"]
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x1783C901"]
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 22 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 23 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 24 [-]: LOADK     R6 K9        ; R6 := "Panel.LocatorSeparator"
 25 [-]: LOADK     R7 K10       ; R7 := "_visible"
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 28 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 29 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 30 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 31 [-]: LOADK     R6 K11       ; R6 := "Panel.LocatorBtn"
 32 [-]: LOADK     R7 K10       ; R7 := "_visible"
 33 [-]: MOVE      R8 R1        ; R8 := R1
 34 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 35 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 36 [-]: TESTSET   R4 R1 0      ; if not R1 then PC := 39 else R4 := R1
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIsExpanded"]
 39 [-]: SETTABLE  R3 K2 R4     ; R3["mIsVisible"] := R4
 40 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 41 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 42 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 43 [-]: LOADK     R6 K12       ; R6 := "Panel.UserList"
 44 [-]: LOADK     R7 K10       ; R7 := "_visible"
 45 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mListControl"]
 46 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
 47 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 48 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 49 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
 50 [-]: LOADK     R5 K14       ; R5 := "Window.SendMessageBar.UserListBtn.Arrow"
 51 [-]: LOADK     R6 K15       ; R6 := "_rotation"
 52 [-]: GETUPVAL  R7 U0        ; R7 := U0
 53 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["0xF81722A2"]
 54 [-]: TESTSET   R8 R1 0      ; if not R1 then PC := 57 else R8 := R1
 55 [-]: JMP       57           ; PC := 57
 56 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mIsExpanded"]
 57 [-]: LOADK     R9 K17       ; R9 := 180
 58 [-]: LOADK     R10 K18      ; R10 := 0
 59 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 60 [-]: CALL      R3 0 1       ; R3(R4,...)
 61 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["mEmoteGrid"]
 62 [-]: TEST      R1 1         ; if R1 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIsExpanded"]
 65 [-]: JMP       68           ; PC := 68
 66 [-]: MOVE      R4 R0        ; R4 := R0
 67 [-]: MOVE      R4 R1        ; R4 := R1
 68 [-]: SETTABLE  R3 K2 R4     ; R3["mIsVisible"] := R4
 69 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 70 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 71 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 72 [-]: LOADK     R6 K20       ; R6 := "Panel.EmoteGrid"
 73 [-]: LOADK     R7 K10       ; R7 := "_visible"
 74 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["mEmoteGrid"]
 75 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
 76 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 77 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 78 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
 79 [-]: LOADK     R5 K21       ; R5 := "Window.SendMessageBar.EmojiBtn.Arrow"
 80 [-]: LOADK     R6 K15       ; R6 := "_rotation"
 81 [-]: GETUPVAL  R7 U0        ; R7 := U0
 82 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["0xF81722A2"]
 83 [-]: TEST      R1 1         ; if R1 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mIsExpanded"]
 86 [-]: JMP       89           ; PC := 89
 87 [-]: MOVE      R8 R0        ; R8 := R0
 88 [-]: MOVE      R8 R1        ; R8 := R1
 89 [-]: LOADK     R9 K17       ; R9 := 180
 90 [-]: LOADK     R10 K18      ; R10 := 0
 91 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 92 [-]: CALL      R3 0 1       ; R3(R4,...)
 93 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 94 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
 95 [-]: LOADK     R5 K22       ; R5 := "Window.MouseCatcherBtn"
 96 [-]: LOADK     R6 K23       ; R6 := "_width"
 97 [-]: GETUPVAL  R7 U1        ; R7 := U1
 98 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["mWindow"]
 99 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["width"]
100 [-]: GETUPVAL  R8 U0        ; R8 := U0
101 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["0xF81722A2"]
102 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mListControl"]
103 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["mIsVisible"]
104 [-]: TEST      R9 1         ; if R9 then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: GETTABLE  R9 R0 K19    ; R9 := R0["mEmoteGrid"]
107 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["mIsVisible"]
108 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["mActiveRect"]
109 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["width"]
110 [-]: LOADK     R11 K18      ; R11 := 0
111 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
112 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
113 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
114 [-]: GETGLOBAL R3 K27       ; R3 := Engine
115 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["0x9490FE70"]
116 [-]: CALL      R3 1 2       ; R3 := R3()
117 [-]: TEST      R3 0         ; if not R3 then PC := 192
118 [-]: JMP       192          ; PC := 192
119 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
120 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
121 [-]: LOADK     R5 K29       ; R5 := "Window.SendMessageBar.EmojiBtn.Highlight"
122 [-]: LOADK     R6 K10       ; R6 := "_visible"
123 [-]: GETTABLE  R7 R0 K19    ; R7 := R0["mEmoteGrid"]
124 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
125 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
126 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
127 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
128 [-]: LOADK     R5 K30       ; R5 := "Window.SendMessageBar.EmojiBtn"
129 [-]: LOADK     R6 K31       ; R6 := "_alpha"
130 [-]: GETUPVAL  R7 U0        ; R7 := U0
131 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["0xF81722A2"]
132 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["mEmoteGrid"]
133 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
134 [-]: LOADK     R9 K32       ; R9 := 100
135 [-]: LOADK     R10 K33      ; R10 := 50
136 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
137 [-]: CALL      R3 0 1       ; R3(R4,...)
138 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
139 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
140 [-]: LOADK     R5 K34       ; R5 := "Window.SendMessageBar.UserListBtn.Highlight"
141 [-]: LOADK     R6 K10       ; R6 := "_visible"
142 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mListControl"]
143 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
144 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
145 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
146 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
147 [-]: LOADK     R5 K35       ; R5 := "Window.SendMessageBar.UserListBtn"
148 [-]: LOADK     R6 K31       ; R6 := "_alpha"
149 [-]: GETUPVAL  R7 U0        ; R7 := U0
150 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["0xF81722A2"]
151 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mListControl"]
152 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
153 [-]: LOADK     R9 K32       ; R9 := 100
154 [-]: LOADK     R10 K33      ; R10 := 50
155 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
156 [-]: CALL      R3 0 1       ; R3(R4,...)
157 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
158 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
159 [-]: LOADK     R5 K36       ; R5 := "Window.SendMessageBar.HideWindowBtn.Highlight"
160 [-]: LOADK     R6 K10       ; R6 := "_visible"
161 [-]: GETTABLE  R7 R0 K19    ; R7 := R0["mEmoteGrid"]
162 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
163 [-]: TEST      R7 1         ; if R7 then PC := 169
164 [-]: JMP       169          ; PC := 169
165 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mListControl"]
166 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
167 [-]: MOVE      R7 R7        ; R7 := R7
168 [-]: JMP       171          ; PC := 171
169 [-]: MOVE      R7 R0        ; R7 := R0
170 [-]: MOVE      R7 R1        ; R7 := R1
171 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
172 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
173 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1C19D966"]
174 [-]: LOADK     R5 K37       ; R5 := "Window.SendMessageBar.HideWindowBtn"
175 [-]: LOADK     R6 K31       ; R6 := "_alpha"
176 [-]: GETUPVAL  R7 U0        ; R7 := U0
177 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["0xF81722A2"]
178 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["mEmoteGrid"]
179 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
180 [-]: TEST      R8 1         ; if R8 then PC := 186
181 [-]: JMP       186          ; PC := 186
182 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mListControl"]
183 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
184 [-]: MOVE      R8 R8        ; R8 := R8
185 [-]: JMP       188          ; PC := 188
186 [-]: MOVE      R8 R0        ; R8 := R0
187 [-]: MOVE      R8 R1        ; R8 := R1
188 [-]: LOADK     R9 K32       ; R9 := 100
189 [-]: LOADK     R10 K33      ; R10 := 50
190 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
191 [-]: CALL      R3 0 1       ; R3(R4,...)
192 [-]: GETGLOBAL R3 K38       ; R3 := 0x400E7765
193 [-]: GETUPVAL  R4 U2        ; R4 := U2
194 [-]: CALL      R3 2 2       ; R3 := R3(R4)
195 [-]: TEST      R3 1         ; if R3 then PC := 207
196 [-]: JMP       207          ; PC := 207
197 [-]: GETUPVAL  R3 U2        ; R3 := U2
198 [-]: SELF      R3 R3 K39    ; R4 := R3; R3 := R3["0x3ACB72D"]
199 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mListControl"]
200 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mIsVisible"]
201 [-]: CALL      R3 3 1       ; R3(R4,R5)
202 [-]: GETUPVAL  R3 U2        ; R3 := U2
203 [-]: SELF      R3 R3 K40    ; R4 := R3; R3 := R3["0x6E22ABEF"]
204 [-]: GETTABLE  R5 R0 K19    ; R5 := R0["mEmoteGrid"]
205 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mIsVisible"]
206 [-]: CALL      R3 3 1       ; R3(R4,R5)
207 [-]: GETUPVAL  R3 U0        ; R3 := U0
208 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["0x25992394"]
209 [-]: GETGLOBAL R4 K42       ; R4 := _G
210 [-]: GETTABLE  R4 R4 K43    ; R4 := R4["UISound_ItemTip"]
211 [-]: CALL      R3 2 1       ; R3(R4)
212 [-]: SELF      R3 R0 K44    ; R4 := R0; R3 := R0["0x3F9ADB3B"]
213 [-]: CALL      R3 2 1       ; R3(R4)
214 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1800
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: SETTABLE  R2 K0 R0     ; R2["mParent"] := R0
  3 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  4 [-]: SETTABLE  R2 K1 R3     ; R2["mWindow"] := R3
  5 [-]: SETTABLE  R2 K2 R1     ; R2["mClipName"] := R1
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  7 [-]: SETTABLE  R2 K3 R3     ; R2["mClipParent"] := R3
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K5        ; R4 := "."
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 12 [-]: SETTABLE  R2 K4 R3     ; R2["mClipPath"] := R3
 13 [-]: SETTABLE  R2 K6 K7     ; R2["mIsFocused"] := "0x0"
 14 [-]: SETTABLE  R2 K8 K9     ; R2["MAX_MSG_LIMIT"] := 400
 15 [-]: SETTABLE  R2 K10 K11   ; R2["MAX_MSG_LENGTH_NORMAL"] := 300
 16 [-]: SETTABLE  R2 K12 K13   ; R2["MAX_MSG_LENGTH_RECRUIT_TRADE"] := 180
 17 [-]: GETTABLE  R3 R2 K10    ; R3 := R2["MAX_MSG_LENGTH_NORMAL"]
 18 [-]: SETTABLE  R2 K14 R3    ; R2["mMaxMsgLength"] := R3
 19 [-]: GETGLOBAL R3 K16       ; R3 := 0xF595ADDE
 20 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 21 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x6B7B470B"]
 22 [-]: GETTABLE  R6 R2 K4     ; R6 := R2["mClipPath"]
 23 [-]: LOADK     R7 K19       ; R7 := ".Prompt"
 24 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 25 [-]: LOADK     R7 K20       ; R7 := "_x"
 26 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 27 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 28 [-]: SETTABLE  R2 K15 R3    ; R2["mInitPromptXPos"] := R3
 29 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 30 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 31 [-]: LOADK     R5 K23       ; R5 := "<WARNING>"
 32 [-]: MOVE      R6 R1        ; R6 := R1
 33 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 34 [-]: SETTABLE  R2 K21 R3    ; R2["CharLimitWarning"] := R3
 35 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 36 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 37 [-]: LOADK     R5 K25       ; R5 := "<PROBLEM>"
 38 [-]: MOVE      R6 R1        ; R6 := R1
 39 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 40 [-]: SETTABLE  R2 K24 R3    ; R2["CharLimitError"] := R3
 41 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 42 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 43 [-]: LOADK     R5 K27       ; R5 := "<TIMER>"
 44 [-]: MOVE      R6 R1        ; R6 := R1
 45 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 46 [-]: SETTABLE  R2 K26 R3    ; R2["TimerIcon"] := R3
 47 [-]: SETTABLE  R2 K28 K29   ; R2["CharLimitFlashTime"] := 0
 48 [-]: CLOSURE   R3 0         ; R3 := closure(Function #55.1)
 49 [-]: GETUPVAL  R0 U0        ; R0 := U0
 50 [-]: GETUPVAL  R0 U1        ; R0 := U1
 51 [-]: GETUPVAL  R0 U2        ; R0 := U2
 52 [-]: GETUPVAL  R0 U3        ; R0 := U3
 53 [-]: GETUPVAL  R0 U4        ; R0 := U4
 54 [-]: SETTABLE  R2 K30 R3    ; R2["Initialize"] := R3
 55 [-]: CLOSURE   R3 1         ; R3 := closure(Function #55.2)
 56 [-]: GETUPVAL  R0 U0        ; R0 := U0
 57 [-]: SETTABLE  R2 K31 R3    ; R2["SetSize"] := R3
 58 [-]: CLOSURE   R3 2         ; R3 := closure(Function #55.3)
 59 [-]: SETTABLE  R2 K32 R3    ; R2["SetFocus"] := R3
 60 [-]: CLOSURE   R3 3         ; R3 := closure(Function #55.4)
 61 [-]: SETTABLE  R2 K33 R3    ; R2["UpdateDefaultText"] := R3
 62 [-]: CLOSURE   R3 4         ; R3 := closure(Function #55.5)
 63 [-]: SETTABLE  R2 K34 R3    ; R2["GiveChatFocus"] := R3
 64 [-]: RETURN    R2 2         ; return R2
 65 [-]: RETURN    R0 1         ; return 


; Function #55.1:
;
; Name:            
; Defined at line: 1818
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  2 [-]: SETTABLE  R3 K1 K2     ; R3["x"] := 0
  3 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  4 [-]: SETTABLE  R3 K3 K2     ; R3["y"] := 0
  5 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  6 [-]: SETTABLE  R3 K4 K5     ; R3["ReverseY"] := "0x1"
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  8 [-]: SETTABLE  R3 K6 K2     ; R3["width"] := 0
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 10 [-]: SETTABLE  R3 K7 K5     ; R3["ReverseWidth"] := "0x1"
 11 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 12 [-]: SETTABLE  R3 K8 K9     ; R3["height"] := 35
 13 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0["0xD1D449ED"]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: MOVE      R6 R2        ; R6 := R2
 16 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 17 [-]: CLOSURE   R3 0         ; R3 := closure(Function #55.1.1)
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 20 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 21 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 22 [-]: LOADK     R7 K14       ; R7 := "Arrow"
 23 [-]: LOADK     R8 K15       ; R8 := "_color"
 24 [-]: GETUPVAL  R9 U1        ; R9 := U1
 25 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 26 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 27 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 28 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 29 [-]: LOADK     R7 K14       ; R7 := "Arrow"
 30 [-]: LOADK     R8 K16       ; R8 := "_alpha"
 31 [-]: LOADK     R9 K17       ; R9 := 25
 32 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 33 [-]: MOVE      R4 R3        ; R4 := R3
 34 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 35 [-]: LOADK     R6 K18       ; R6 := ".EmojiBtn"
 36 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 37 [-]: LOADK     R6 K19       ; R6 := "<MENU_RTRIGGER1>"
 38 [-]: GETGLOBAL R7 K20       ; R7 := emojiGridBtnIcon
 39 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 40 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 41 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 42 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 43 [-]: LOADK     R7 K21       ; R7 := "EmojiBtn.Callout"
 44 [-]: LOADK     R8 K22       ; R8 := "_x"
 45 [-]: GETGLOBAL R9 K23       ; R9 := 0xF595ADDE
 46 [-]: GETGLOBAL R10 K11      ; R10 := mMovie
 47 [-]: SELF      R10 R10 K24  ; R11 := R10; R10 := R10["0x6B7B470B"]
 48 [-]: GETTABLE  R12 R0 K13   ; R12 := R0["mClipPath"]
 49 [-]: LOADK     R13 K25      ; R13 := ".EmojiBtn.Callout"
 50 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 51 [-]: LOADK     R13 K22      ; R13 := "_x"
 52 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 53 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 54 [-]: SUB       R9 R9 K26    ; R9 := R9 - 5
 55 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 56 [-]: MOVE      R4 R3        ; R4 := R3
 57 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 58 [-]: LOADK     R6 K27       ; R6 := ".UserListBtn"
 59 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 60 [-]: LOADK     R6 K28       ; R6 := ""
 61 [-]: GETGLOBAL R7 K29       ; R7 := userListBtnIcon
 62 [-]: LOADK     R8 K30       ; R8 := 32
 63 [-]: LOADK     R9 K30       ; R9 := 32
 64 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 65 [-]: MOVE      R4 R3        ; R4 := R3
 66 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 67 [-]: LOADK     R6 K31       ; R6 := ".HyperlinkBtn"
 68 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 69 [-]: LOADK     R6 K32       ; R6 := "<MENU_LTHUMB>"
 70 [-]: GETGLOBAL R7 K33       ; R7 := hyperlinkBtnIcon
 71 [-]: LOADK     R8 K30       ; R8 := 32
 72 [-]: LOADK     R9 K30       ; R9 := 32
 73 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 74 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 75 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 76 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 77 [-]: LOADK     R7 K34       ; R7 := "HyperlinkBtn"
 78 [-]: LOADK     R8 K35       ; R8 := "_visible"
 79 [-]: MOVE      R9 R0        ; R9 := R0
 80 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 81 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 82 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 83 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 84 [-]: LOADK     R7 K36       ; R7 := "HyperlinkBtn.Callout"
 85 [-]: LOADK     R8 K35       ; R8 := "_visible"
 86 [-]: MOVE      R9 R1        ; R9 := R1
 87 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 88 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 89 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 90 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 91 [-]: LOADK     R7 K37       ; R7 := "HyperlinkBtn.Arrow"
 92 [-]: LOADK     R8 K35       ; R8 := "_visible"
 93 [-]: MOVE      R9 R0        ; R9 := R0
 94 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 95 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 96 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
 97 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 98 [-]: LOADK     R7 K38       ; R7 := "HyperlinkBtn.Icon"
 99 [-]: LOADK     R8 K16       ; R8 := "_alpha"
100 [-]: LOADK     R9 K39       ; R9 := 100
101 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
102 [-]: MOVE      R4 R3        ; R4 := R3
103 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
104 [-]: LOADK     R6 K40       ; R6 := ".HideWindowBtn"
105 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
106 [-]: LOADK     R6 K28       ; R6 := ""
107 [-]: GETGLOBAL R7 K41       ; R7 := collapsedBtnIcon
108 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
109 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
110 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
111 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
112 [-]: LOADK     R7 K42       ; R7 := "HideWindowBtn"
113 [-]: LOADK     R8 K35       ; R8 := "_visible"
114 [-]: GETGLOBAL R9 K43       ; R9 := Engine
115 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["0x9490FE70"]
116 [-]: CALL      R9 1 0       ; R9,... := R9()
117 [-]: CALL      R4 0 1       ; R4(R5,...)
118 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
119 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
120 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
121 [-]: LOADK     R7 K45       ; R7 := "HideWindowBtn.Highlight"
122 [-]: LOADK     R8 K35       ; R8 := "_visible"
123 [-]: MOVE      R9 R1        ; R9 := R1
124 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
125 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
126 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
127 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
128 [-]: LOADK     R7 K46       ; R7 := "HideWindowBtn.Icon"
129 [-]: LOADK     R8 K16       ; R8 := "_alpha"
130 [-]: LOADK     R9 K39       ; R9 := 100
131 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
132 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
133 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
134 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
135 [-]: LOADK     R7 K47       ; R7 := "EdgeBottomLeft"
136 [-]: LOADK     R8 K15       ; R8 := "_color"
137 [-]: GETUPVAL  R9 U1        ; R9 := U1
138 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
139 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
140 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
141 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
142 [-]: LOADK     R7 K47       ; R7 := "EdgeBottomLeft"
143 [-]: LOADK     R8 K16       ; R8 := "_alpha"
144 [-]: LOADK     R9 K17       ; R9 := 25
145 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
146 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
147 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
148 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
149 [-]: LOADK     R7 K48       ; R7 := "EdgeTriangle"
150 [-]: LOADK     R8 K15       ; R8 := "_color"
151 [-]: GETUPVAL  R9 U1        ; R9 := U1
152 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
153 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
154 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
155 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
156 [-]: LOADK     R7 K48       ; R7 := "EdgeTriangle"
157 [-]: LOADK     R8 K16       ; R8 := "_alpha"
158 [-]: LOADK     R9 K17       ; R9 := 25
159 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
160 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
161 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
162 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
163 [-]: LOADK     R7 K49       ; R7 := "EdgeFill"
164 [-]: LOADK     R8 K15       ; R8 := "_color"
165 [-]: GETUPVAL  R9 U2        ; R9 := U2
166 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
167 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
168 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
169 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
170 [-]: LOADK     R7 K49       ; R7 := "EdgeFill"
171 [-]: LOADK     R8 K16       ; R8 := "_alpha"
172 [-]: LOADK     R9 K50       ; R9 := 75
173 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
174 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
175 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
176 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
177 [-]: LOADK     R7 K51       ; R7 := "EdgeBottom"
178 [-]: LOADK     R8 K15       ; R8 := "_color"
179 [-]: GETUPVAL  R9 U1        ; R9 := U1
180 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
181 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
182 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
183 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
184 [-]: LOADK     R7 K51       ; R7 := "EdgeBottom"
185 [-]: LOADK     R8 K16       ; R8 := "_alpha"
186 [-]: LOADK     R9 K17       ; R9 := 25
187 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
188 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
189 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
190 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
191 [-]: LOADK     R7 K52       ; R7 := "EdgeTop"
192 [-]: LOADK     R8 K15       ; R8 := "_color"
193 [-]: GETUPVAL  R9 U1        ; R9 := U1
194 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
195 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
196 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
197 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
198 [-]: LOADK     R7 K52       ; R7 := "EdgeTop"
199 [-]: LOADK     R8 K16       ; R8 := "_alpha"
200 [-]: LOADK     R9 K53       ; R9 := 40
201 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
202 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
203 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
204 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
205 [-]: LOADK     R7 K54       ; R7 := "EdgeRight"
206 [-]: LOADK     R8 K15       ; R8 := "_color"
207 [-]: GETUPVAL  R9 U1        ; R9 := U1
208 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
209 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
210 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
211 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
212 [-]: LOADK     R7 K54       ; R7 := "EdgeRight"
213 [-]: LOADK     R8 K16       ; R8 := "_alpha"
214 [-]: LOADK     R9 K17       ; R9 := 25
215 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
216 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
217 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
218 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
219 [-]: LOADK     R7 K55       ; R7 := "DecoLine"
220 [-]: LOADK     R8 K15       ; R8 := "_color"
221 [-]: GETUPVAL  R9 U1        ; R9 := U1
222 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
223 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
224 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
225 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
226 [-]: LOADK     R7 K55       ; R7 := "DecoLine"
227 [-]: LOADK     R8 K16       ; R8 := "_alpha"
228 [-]: LOADK     R9 K17       ; R9 := 25
229 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
230 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
231 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
232 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
233 [-]: LOADK     R7 K56       ; R7 := "Bg"
234 [-]: LOADK     R8 K15       ; R8 := "_color"
235 [-]: GETUPVAL  R9 U2        ; R9 := U2
236 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
237 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
238 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
239 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
240 [-]: LOADK     R7 K56       ; R7 := "Bg"
241 [-]: LOADK     R8 K16       ; R8 := "_alpha"
242 [-]: LOADK     R9 K50       ; R9 := 75
243 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
244 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
245 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
246 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
247 [-]: LOADK     R7 K57       ; R7 := "MessageBox"
248 [-]: LOADK     R8 K58       ; R8 := "cursorColor"
249 [-]: GETGLOBAL R9 K59       ; R9 := _G
250 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["UIColor_White"]
251 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
252 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
253 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
254 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
255 [-]: LOADK     R7 K61       ; R7 := "Prompt"
256 [-]: LOADK     R8 K16       ; R8 := "_alpha"
257 [-]: GETUPVAL  R9 U0        ; R9 := U0
258 [-]: GETTABLE  R9 R9 K62    ; R9 := R9["0xF81722A2"]
259 [-]: GETGLOBAL R10 K43      ; R10 := Engine
260 [-]: GETTABLE  R10 R10 K44  ; R10 := R10["0x9490FE70"]
261 [-]: CALL      R10 1 2      ; R10 := R10()
262 [-]: LOADK     R11 K39      ; R11 := 100
263 [-]: LOADK     R12 K63      ; R12 := 50
264 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
265 [-]: CALL      R4 0 1       ; R4(R5,...)
266 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
267 [-]: SELF      R4 R4 K64    ; R5 := R4; R4 := R4["0xD6A79FE9"]
268 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
269 [-]: LOADK     R7 K65       ; R7 := ".Prompt"
270 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
271 [-]: LOADK     R7 K66       ; R7 := "text"
272 [-]: LOADK     R8 K28       ; R8 := ""
273 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
274 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
275 [-]: SELF      R4 R4 K67    ; R5 := R4; R4 := R4["0x17028E8F"]
276 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
277 [-]: LOADK     R7 K68       ; R7 := ".Callout.Tf.text"
278 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
279 [-]: LOADK     R7 K69       ; R7 := "<MENU_GENERIC1>"
280 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
281 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
282 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
283 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
284 [-]: LOADK     R7 K70       ; R7 := "Callout"
285 [-]: LOADK     R8 K35       ; R8 := "_visible"
286 [-]: GETGLOBAL R9 K43       ; R9 := Engine
287 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["0x9490FE70"]
288 [-]: CALL      R9 1 0       ; R9,... := R9()
289 [-]: CALL      R4 0 1       ; R4(R5,...)
290 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
291 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
292 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
293 [-]: LOADK     R7 K71       ; R7 := "CharLimit"
294 [-]: LOADK     R8 K35       ; R8 := "_visible"
295 [-]: MOVE      R9 R0        ; R9 := R0
296 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
297 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
298 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
299 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
300 [-]: LOADK     R7 K72       ; R7 := "CharLimit.Warning"
301 [-]: LOADK     R8 K35       ; R8 := "_visible"
302 [-]: MOVE      R9 R0        ; R9 := R0
303 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
304 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
305 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
306 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
307 [-]: LOADK     R7 K72       ; R7 := "CharLimit.Warning"
308 [-]: LOADK     R8 K73       ; R8 := "tintIcons"
309 [-]: MOVE      R9 R1        ; R9 := R1
310 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
311 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
312 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
313 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
314 [-]: LOADK     R7 K74       ; R7 := "CharLimit.SpamTime"
315 [-]: LOADK     R8 K73       ; R8 := "tintIcons"
316 [-]: MOVE      R9 R1        ; R9 := R1
317 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
318 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
319 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
320 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
321 [-]: LOADK     R7 K74       ; R7 := "CharLimit.SpamTime"
322 [-]: LOADK     R8 K15       ; R8 := "_color"
323 [-]: GETGLOBAL R9 K59       ; R9 := _G
324 [-]: GETTABLE  R9 R9 K75    ; R9 := R9["UIColor_Black"]
325 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
326 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
327 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
328 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
329 [-]: LOADK     R7 K76       ; R7 := "CharLimit.Bg"
330 [-]: LOADK     R8 K16       ; R8 := "_alpha"
331 [-]: LOADK     R9 K50       ; R9 := 75
332 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
333 [-]: GETGLOBAL R4 K43       ; R4 := Engine
334 [-]: GETTABLE  R4 R4 K44    ; R4 := R4["0x9490FE70"]
335 [-]: CALL      R4 1 2       ; R4 := R4()
336 [-]: TEST      R4 0         ; if not R4 then PC := 362
337 [-]: JMP       362          ; PC := 362
338 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
339 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
340 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
341 [-]: LOADK     R7 K57       ; R7 := "MessageBox"
342 [-]: LOADK     R8 K77       ; R8 := "textColor"
343 [-]: GETUPVAL  R9 U3        ; R9 := U3
344 [-]: GETTABLE  R9 R9 K78    ; R9 := R9["Teal"]
345 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
346 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
347 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
348 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
349 [-]: LOADK     R7 K61       ; R7 := "Prompt"
350 [-]: LOADK     R8 K22       ; R8 := "_x"
351 [-]: GETTABLE  R9 R0 K79    ; R9 := R0["mInitPromptXPos"]
352 [-]: ADD       R9 R9 K17    ; R9 := R9 + 25
353 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
354 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
355 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x880196A7"]
356 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
357 [-]: LOADK     R7 K57       ; R7 := "MessageBox"
358 [-]: LOADK     R8 K22       ; R8 := "_x"
359 [-]: GETTABLE  R9 R0 K79    ; R9 := R0["mInitPromptXPos"]
360 [-]: ADD       R9 R9 K17    ; R9 := R9 + 25
361 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
362 [-]: GETGLOBAL R4 K43       ; R4 := Engine
363 [-]: GETTABLE  R4 R4 K80    ; R4 := R4["0x1398DAFB"]
364 [-]: CALL      R4 1 2       ; R4 := R4()
365 [-]: TEST      R4 0         ; if not R4 then PC := 377
366 [-]: JMP       377          ; PC := 377
367 [-]: GETUPVAL  R4 U4        ; R4 := U4
368 [-]: CALL      R4 1 2       ; R4 := R4()
369 [-]: TEST      R4 0         ; if not R4 then PC := 377
370 [-]: JMP       377          ; PC := 377
371 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
372 [-]: SELF      R4 R4 K81    ; R5 := R4; R4 := R4["0x1C19D966"]
373 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
374 [-]: LOADK     R7 K35       ; R7 := "_visible"
375 [-]: MOVE      R8 R0        ; R8 := R0
376 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
377 [-]: RETURN    R0 1         ; return 


; Function #55.1.1:
;
; Name:            
; Defined at line: 1830
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
  2 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x1C19D966"]
  3 [-]: MOVE      R7 R0        ; R7 := R0
  4 [-]: LOADK     R8 K2        ; R8 := "_alpha"
  5 [-]: GETUPVAL  R9 U0        ; R9 := U0
  6 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["0xF81722A2"]
  7 [-]: GETGLOBAL R10 K4       ; R10 := Engine
  8 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["0x9490FE70"]
  9 [-]: CALL      R10 1 2      ; R10 := R10()
 10 [-]: LOADK     R11 K6       ; R11 := 100
 11 [-]: LOADK     R12 K7       ; R12 := 50
 12 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 13 [-]: CALL      R5 0 1       ; R5(R6,...)
 14 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 15 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x17028E8F"]
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: LOADK     R8 K9        ; R8 := ".Callout.Tf.text"
 18 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 21 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 22 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x880196A7"]
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: LOADK     R8 K11       ; R8 := "Callout"
 25 [-]: LOADK     R9 K12       ; R9 := "_visible"
 26 [-]: GETGLOBAL R10 K4       ; R10 := Engine
 27 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["0x9490FE70"]
 28 [-]: CALL      R10 1 0      ; R10,... := R10()
 29 [-]: CALL      R5 0 1       ; R5(R6,...)
 30 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 31 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x26581636"]
 32 [-]: MOVE      R7 R0        ; R7 := R0
 33 [-]: LOADK     R8 K14       ; R8 := ".Icon"
 34 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 35 [-]: MOVE      R8 R2        ; R8 := R2
 36 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 37 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 55
 38 [-]: JMP       55           ; PC := 55
 39 [-]: EQ        1 R4 K15     ; if R4 == nil then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 42 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x880196A7"]
 43 [-]: MOVE      R7 R0        ; R7 := R0
 44 [-]: LOADK     R8 K16       ; R8 := "Icon"
 45 [-]: LOADK     R9 K17       ; R9 := "_width"
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 48 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 49 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x880196A7"]
 50 [-]: MOVE      R7 R0        ; R7 := R0
 51 [-]: LOADK     R8 K16       ; R8 := "Icon"
 52 [-]: LOADK     R9 K18       ; R9 := "_height"
 53 [-]: MOVE      R10 R4       ; R10 := R4
 54 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 55 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 56 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x880196A7"]
 57 [-]: MOVE      R7 R0        ; R7 := R0
 58 [-]: LOADK     R8 K19       ; R8 := "Arrow"
 59 [-]: LOADK     R9 K12       ; R9 := "_visible"
 60 [-]: GETGLOBAL R10 K4       ; R10 := Engine
 61 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["0x9490FE70"]
 62 [-]: CALL      R10 1 2      ; R10 := R10()
 63 [-]: MOVE      R10 R10      ; R10 := R10
 64 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 65 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 66 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5["0x7E1F26D7"]
 67 [-]: MOVE      R7 R0        ; R7 := R0
 68 [-]: LOADK     R8 K21       ; R8 := ".Highlight"
 69 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 70 [-]: GETGLOBAL R8 K22       ; R8 := _G
 71 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["UIMaterial_RectangleNoDepth"]
 72 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 73 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 74 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x302AAB2F"]
 75 [-]: MOVE      R7 R0        ; R7 := R0
 76 [-]: LOADK     R8 K21       ; R8 := ".Highlight"
 77 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 78 [-]: LOADK     R8 K25       ; R8 := "RectInnerColor"
 79 [-]: LOADK     R9 K26       ; R9 := 0
 80 [-]: LOADK     R10 K26      ; R10 := 0
 81 [-]: LOADK     R11 K26      ; R11 := 0
 82 [-]: LOADK     R12 K26      ; R12 := 0
 83 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
 84 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 85 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x302AAB2F"]
 86 [-]: MOVE      R7 R0        ; R7 := R0
 87 [-]: LOADK     R8 K27       ; R8 := ".Hightlight"
 88 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 89 [-]: LOADK     R8 K28       ; R8 := "RectEdgeColor"
 90 [-]: GETGLOBAL R9 K22       ; R9 := _G
 91 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["UIColorObject_White"]
 92 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["r"]
 93 [-]: GETGLOBAL R10 K22      ; R10 := _G
 94 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["UIColorObject_White"]
 95 [-]: GETTABLE  R10 R10 K31  ; R10 := R10["g"]
 96 [-]: GETGLOBAL R11 K22      ; R11 := _G
 97 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["UIColorObject_White"]
 98 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["b"]
 99 [-]: LOADK     R12 K33      ; R12 := 0.80000001192093
100 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
101 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
102 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x880196A7"]
103 [-]: MOVE      R7 R0        ; R7 := R0
104 [-]: LOADK     R8 K34       ; R8 := "Highlight"
105 [-]: LOADK     R9 K12       ; R9 := "_visible"
106 [-]: MOVE      R10 R0       ; R10 := R0
107 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
108 [-]: RETURN    R0 1         ; return 


; Function #55.2:
;
; Name:            
; Defined at line: 1902
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mParent"]
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x5528ED75"]
  3 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mWindow"]
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
  6 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x1C19D966"]
  7 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mClipPath"]
  8 [-]: LOADK     R7 K6        ; R7 := "_x"
  9 [-]: GETTABLE  R8 R3 K7     ; R8 := R3["x"]
 10 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 11 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 12 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x1C19D966"]
 13 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mClipPath"]
 14 [-]: LOADK     R7 K8        ; R7 := "_y"
 15 [-]: GETTABLE  R8 R3 K9     ; R8 := R3["y"]
 16 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 17 [-]: GETTABLE  R4 R3 K10    ; R4 := R3["width"]
 18 [-]: GETGLOBAL R5 K11       ; R5 := 0xF595ADDE
 19 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 20 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x6B7B470B"]
 21 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["mClipPath"]
 22 [-]: LOADK     R9 K13       ; R9 := ".Bg"
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: LOADK     R9 K6        ; R9 := "_x"
 25 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 26 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 27 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 28 [-]: SUB       R4 R4 K14    ; R4 := R4 - 1
 29 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 30 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 31 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipPath"]
 32 [-]: LOADK     R8 K16       ; R8 := "Bg"
 33 [-]: LOADK     R9 K17       ; R9 := "_width"
 34 [-]: MOVE      R10 R4       ; R10 := R4
 35 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 36 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 37 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 38 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipPath"]
 39 [-]: LOADK     R8 K18       ; R8 := "BgBlurer"
 40 [-]: LOADK     R9 K17       ; R9 := "_width"
 41 [-]: MOVE      R10 R4       ; R10 := R4
 42 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 43 [-]: GETGLOBAL R5 K19       ; R5 := Engine
 44 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["0x9490FE70"]
 45 [-]: CALL      R5 1 2       ; R5 := R5()
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["0xF81722A2"]
 48 [-]: MOVE      R7 R5        ; R7 := R5
 49 [-]: LOADK     R8 K22       ; R8 := 73
 50 [-]: LOADK     R9 K23       ; R9 := 66
 51 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 52 [-]: GETUPVAL  R7 U0        ; R7 := U0
 53 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["0xF81722A2"]
 54 [-]: MOVE      R8 R5        ; R8 := R5
 55 [-]: LOADK     R9 K24       ; R9 := 51
 56 [-]: LOADK     R10 K25      ; R10 := 36
 57 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 58 [-]: GETUPVAL  R8 U0        ; R8 := U0
 59 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["0xF81722A2"]
 60 [-]: MOVE      R9 R5        ; R9 := R5
 61 [-]: LOADK     R10 K26      ; R10 := 28
 62 [-]: LOADK     R11 K27      ; R11 := 0
 63 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 64 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
 65 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
 66 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 67 [-]: LOADK     R12 K28      ; R12 := "EmojiBtn"
 68 [-]: LOADK     R13 K6       ; R13 := "_x"
 69 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
 70 [-]: SUB       R14 R14 R6   ; R14 := R14 - R6
 71 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 72 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
 73 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
 74 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 75 [-]: LOADK     R12 K29      ; R12 := "UserListBtn"
 76 [-]: LOADK     R13 K6       ; R13 := "_x"
 77 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
 78 [-]: SUB       R14 R14 R7   ; R14 := R14 - R7
 79 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 80 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
 81 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
 82 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 83 [-]: LOADK     R12 K30      ; R12 := "HideWindowBtn"
 84 [-]: LOADK     R13 K6       ; R13 := "_x"
 85 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
 86 [-]: SUB       R14 R14 R8   ; R14 := R14 - R8
 87 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 88 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
 89 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
 90 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 91 [-]: LOADK     R12 K31      ; R12 := "HyperlinkBtn"
 92 [-]: LOADK     R13 K6       ; R13 := "_x"
 93 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
 94 [-]: SUB       R14 R14 K32  ; R14 := R14 - 140
 95 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 96 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
 97 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
 98 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 99 [-]: LOADK     R12 K33      ; R12 := "EdgeTop"
100 [-]: LOADK     R13 K17      ; R13 := "_width"
101 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
102 [-]: GETGLOBAL R15 K11      ; R15 := 0xF595ADDE
103 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
104 [-]: SELF      R16 R16 K12  ; R17 := R16; R16 := R16["0x6B7B470B"]
105 [-]: GETTABLE  R18 R0 K5    ; R18 := R0["mClipPath"]
106 [-]: LOADK     R19 K34      ; R19 := ".EdgeTop"
107 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
108 [-]: LOADK     R19 K6       ; R19 := "_x"
109 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
110 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
111 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
112 [-]: SUB       R14 R14 K14  ; R14 := R14 - 1
113 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
114 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
115 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
116 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
117 [-]: LOADK     R12 K35      ; R12 := "EdgeBottom"
118 [-]: LOADK     R13 K17      ; R13 := "_width"
119 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
120 [-]: GETGLOBAL R15 K11      ; R15 := 0xF595ADDE
121 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
122 [-]: SELF      R16 R16 K12  ; R17 := R16; R16 := R16["0x6B7B470B"]
123 [-]: GETTABLE  R18 R0 K5    ; R18 := R0["mClipPath"]
124 [-]: LOADK     R19 K36      ; R19 := ".EdgeBottom"
125 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
126 [-]: LOADK     R19 K6       ; R19 := "_x"
127 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
128 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
129 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
130 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
131 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
132 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
133 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
134 [-]: LOADK     R12 K37      ; R12 := "EdgeRight"
135 [-]: LOADK     R13 K6       ; R13 := "_x"
136 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
137 [-]: SUB       R14 R14 K14  ; R14 := R14 - 1
138 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
139 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
140 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x880196A7"]
141 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
142 [-]: LOADK     R12 K38      ; R12 := "CharLimit"
143 [-]: LOADK     R13 K6       ; R13 := "_x"
144 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["width"]
145 [-]: SUB       R14 R14 K39  ; R14 := R14 - 11
146 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
147 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["mParent"]
148 [-]: SELF      R9 R9 K40    ; R10 := R9; R9 := R9["0x18AAE1E3"]
149 [-]: CALL      R9 2 2       ; R9 := R9(R10)
150 [-]: LOADK     R10 K41      ; R10 := 100
151 [-]: TEST      R5 0         ; if not R5 then PC := 168
152 [-]: JMP       168          ; PC := 168
153 [-]: GETUPVAL  R11 U0       ; R11 := U0
154 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xF81722A2"]
155 [-]: GETGLOBAL R12 K42      ; R12 := 0x400E7765
156 [-]: MOVE      R13 R9       ; R13 := R9
157 [-]: CALL      R12 2 2      ; R12 := R12(R13)
158 [-]: TEST      R12 1        ; if R12 then PC := 162
159 [-]: JMP       162          ; PC := 162
160 [-]: GETTABLE  R12 R9 K43   ; R12 := R9["mHasHyperlink"]
161 [-]: JMP       164          ; PC := 164
162 [-]: MOVE      R12 R0       ; R12 := R0
163 [-]: MOVE      R12 R1       ; R12 := R1
164 [-]: LOADK     R13 K44      ; R13 := 230
165 [-]: LOADK     R14 K45      ; R14 := 175
166 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
167 [-]: MOVE      R10 R11      ; R10 := R11
168 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
169 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x880196A7"]
170 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
171 [-]: LOADK     R14 K46      ; R14 := "MessageBox"
172 [-]: LOADK     R15 K17      ; R15 := "_width"
173 [-]: GETTABLE  R16 R3 K10   ; R16 := R3["width"]
174 [-]: SUB       R16 R16 R10  ; R16 := R16 - R10
175 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
176 [-]: GETGLOBAL R11 K47      ; R11 := 0x8C64AFA9
177 [-]: GETGLOBAL R12 K3       ; R12 := mMovie
178 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
179 [-]: LOADK     R14 K48      ; R14 := ".MessageBox.updateTextFormat"
180 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
181 [-]: CALL      R11 3 1      ; R11(R12,R13)
182 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
183 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x880196A7"]
184 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
185 [-]: LOADK     R14 K49      ; R14 := "FocusButton"
186 [-]: LOADK     R15 K17      ; R15 := "_width"
187 [-]: GETTABLE  R16 R3 K10   ; R16 := R3["width"]
188 [-]: SUB       R16 R16 K41  ; R16 := R16 - 100
189 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
190 [-]: RETURN    R0 1         ; return 


; Function #55.3:
;
; Name:            
; Defined at line: 1936
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETTABLE  R0 K0 R1     ; R0["mIsFocused"] := R1
  2 [-]: RETURN    R0 1         ; return 


; Function #55.4:
;
; Name:            
; Defined at line: 1940
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mParent"]
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mTabMenu"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 30
  7 [-]: JMP       30           ; PC := 30
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  9 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mParent"]
 10 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mTabMenu"]
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mSelectedElement"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mParent"]
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTabMenu"]
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mSelectedElement"]
 18 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["Name"]
 19 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mParent"]
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mMode"]
 21 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mParent"]
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["CHANNEL_PRIVATE_CHAT"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R2 K8        ; R2 := string
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x639C642A"]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 32 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Language/Menu/Chat_DefaultText"
 33 [-]: MOVE      R5 R0        ; R5 := R0
 34 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 35 [-]: SETTABLE  R6 K13 R1    ; R6["CHANNEL"] := R1
 36 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 37 [-]: GETGLOBAL R3 K10       ; R3 := mMovie
 38 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0xD6A79FE9"]
 39 [-]: GETTABLE  R5 R0 K15    ; R5 := R0["mClipPath"]
 40 [-]: LOADK     R6 K16       ; R6 := ".Prompt"
 41 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 42 [-]: LOADK     R6 K17       ; R6 := "text"
 43 [-]: MOVE      R7 R2        ; R7 := R2
 44 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 45 [-]: RETURN    R0 1         ; return 


; Function #55.5:
;
; Name:            
; Defined at line: 1954
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x12635C5E"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipPath"]
  4 [-]: LOADK     R4 K3        ; R4 := ".MessageBox"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x458F27A9"]
  9 [-]: LOADK     R3 K5        ; R3 := "MessageBoxFocused"
 10 [-]: LOADK     R4 K6        ; R4 := ""
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1964
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: LOADK     R3 K0        ; R3 := 1
  2 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
  3 [-]: LOADK     R6 K0        ; R6 := 1
  4 [-]: CLOSURE   R7 0         ; R7 := closure(Function #56.1)
  5 [-]: MOVE      R0 R4        ; R0 := R4
  6 [-]: MOVE      R0 R5        ; R0 := R5
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: MOVE      R0 R3        ; R0 := R3
  9 [-]: CLOSURE   R8 1         ; R8 := closure(Function #56.2)
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R3        ; R0 := R3
 12 [-]: MOVE      R0 R5        ; R0 := R5
 13 [-]: SELF      R9 R0 K1     ; R10 := R0; R9 := R0["0xC6772A8A"]
 14 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 15 [-]: LE        0 R3 R9      ; if R3 > R9 then PC := 77
 16 [-]: JMP       77           ; PC := 77
 17 [-]: MOVE      R9 R7        ; R9 := R7
 18 [-]: LOADK     R10 K2       ; R10 := "^%s+"
 19 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 20 [-]: TEST      R9 0         ; if not R9 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: JMP       75           ; PC := 75
 23 [-]: MOVE      R9 R7        ; R9 := R7
 24 [-]: LOADK     R10 K3       ; R10 := "^\"[^\"]*\""
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: TEST      R9 1         ; if R9 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: MOVE      R9 R7        ; R9 := R7
 29 [-]: LOADK     R10 K4       ; R10 := "^'[^']*'"
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: TEST      R9 0         ; if not R9 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R9 K5        ; R9 := table
 34 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0xE6450C9D"]
 35 [-]: MOVE      R10 R1       ; R10 := R1
 36 [-]: MOVE      R11 R6       ; R11 := R6
 37 [-]: MOVE      R12 R8       ; R12 := R8
 38 [-]: CALL      R12 1 0      ; R12,... := R12()
 39 [-]: CALL      R9 0 1       ; R9(R10,...)
 40 [-]: GETGLOBAL R9 K5        ; R9 := table
 41 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0xE6450C9D"]
 42 [-]: MOVE      R10 R2       ; R10 := R2
 43 [-]: MOVE      R11 R6       ; R11 := R6
 44 [-]: MOVE      R12 R8       ; R12 := R8
 45 [-]: CALL      R12 1 2      ; R12 := R12()
 46 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12["0x7B782033"]
 47 [-]: LOADK     R14 K8       ; R14 := 2
 48 [-]: LOADK     R15 K9       ; R15 := -2
 49 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
 50 [-]: CALL      R9 0 1       ; R9(R10,...)
 51 [-]: ADD       R6 R6 K0     ; R6 := R6 + 1
 52 [-]: JMP       75           ; PC := 75
 53 [-]: MOVE      R9 R7        ; R9 := R7
 54 [-]: LOADK     R10 K10      ; R10 := "[^%s%z]+"
 55 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 56 [-]: TEST      R9 0         ; if not R9 then PC := 74
 57 [-]: JMP       74           ; PC := 74
 58 [-]: GETGLOBAL R9 K5        ; R9 := table
 59 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0xE6450C9D"]
 60 [-]: MOVE      R10 R1       ; R10 := R1
 61 [-]: MOVE      R11 R6       ; R11 := R6
 62 [-]: MOVE      R12 R8       ; R12 := R8
 63 [-]: CALL      R12 1 0      ; R12,... := R12()
 64 [-]: CALL      R9 0 1       ; R9(R10,...)
 65 [-]: GETGLOBAL R9 K5        ; R9 := table
 66 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0xE6450C9D"]
 67 [-]: MOVE      R10 R2       ; R10 := R2
 68 [-]: MOVE      R11 R6       ; R11 := R6
 69 [-]: MOVE      R12 R8       ; R12 := R8
 70 [-]: CALL      R12 1 0      ; R12,... := R12()
 71 [-]: CALL      R9 0 1       ; R9(R10,...)
 72 [-]: ADD       R6 R6 K0     ; R6 := R6 + 1
 73 [-]: JMP       75           ; PC := 75
 74 [-]: MOVE      R5 R3        ; R5 := R3
 75 [-]: ADD       R3 R5 K0     ; R3 := R5 + 1
 76 [-]: JMP       13           ; PC := 13
 77 [-]: RETURN    R0 1         ; return 


; Function #56.1:
;
; Name:            
; Defined at line: 1971
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U2        ; R1 := U2
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xDE44F664"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: GETUPVAL  R4 U3        ; R4 := U3
  5 [-]: CALL      R1 4 3       ; R1,R2 := R1(R2,R3,R4)
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: MOVE      R1 R0        ; R1 := R0
 12 [-]: MOVE      R1 R1        ; R1 := R1
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #56.2:
;
; Name:            
; Defined at line: 1976
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x7B782033"]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETUPVAL  R3 U2        ; R3 := U2
  5 [-]: TAILCALL  R0 4 0       ; R0,... := R0(R1,R2,R3)
  6 [-]: RETURN    R0 0         ; return R0,...
  7 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1998
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x6B7B470B"]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mInputPanel"]
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mClipPath"]
  6 [-]: LOADK     R5 K4        ; R5 := ".MessageBox"
  7 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  8 [-]: LOADK     R5 K5        ; R5 := "text"
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K6        ; R3 := Engine
 11 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x9490FE70"]
 12 [-]: CALL      R3 1 2       ; R3 := R3()
 13 [-]: TEST      R3 0         ; if not R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Msg"]
 18 [-]: EQ        1 R3 K9      ; if R3 == "" then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: GETTABLE  R2 R3 K8     ; R2 := R3["Msg"]
 22 [-]: GETUPVAL  R3 U2        ; R3 := U2
 23 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["Enabled"]
 24 [-]: TEST      R3 0         ; if not R3 then PC := 59
 25 [-]: JMP       59           ; PC := 59
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["EmoticonConversion"]
 28 [-]: TEST      R3 0         ; if not R3 then PC := 59
 29 [-]: JMP       59           ; PC := 59
 30 [-]: LOADK     R3 K12       ; R3 := " "
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: LOADK     R5 K12       ; R5 := " "
 33 [-]: CONCAT    R2 R3 R5     ; R2 := R3 .. R4 .. R5
 34 [-]: GETGLOBAL R3 K13       ; R3 := 0xECFDD17
 35 [-]: GETUPVAL  R4 U3        ; R4 := U3
 36 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 37 [-]: JMP       57           ; PC := 57
 38 [-]: GETGLOBAL R8 K14       ; R8 := 0xD1E7609B
 39 [-]: LOADK     R9 K15       ; R9 := ","
 40 [-]: MOVE      R10 R7       ; R10 := R7
 41 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 42 [-]: LOADK     R9 K16       ; R9 := 1
 43 [-]: LEN       R10 R8       ; R10 := # R8
 44 [-]: LOADK     R11 K16      ; R11 := 1
 45 [-]: FORPREP   R9 56        ; R9 -= R11; PC := 56
 46 [-]: GETGLOBAL R13 K17      ; R13 := string
 47 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["0x633C4246"]
 48 [-]: MOVE      R14 R2       ; R14 := R2
 49 [-]: LOADK     R15 K19      ; R15 := "%f[%S]"
 50 [-]: GETTABLE  R16 R8 R12   ; R16 := R8[R12]
 51 [-]: LOADK     R17 K20      ; R17 := "%f[%s]"
 52 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
 53 [-]: MOVE      R16 R6       ; R16 := R6
 54 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 55 [-]: MOVE      R2 R13       ; R2 := R13
 56 [-]: FORLOOP   R9 46        ; R9 += R11; if R9 <= R10 then begin PC := 46; R12 := R9 end
 57 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 38; R5 := R6 end
 58 [-]: JMP       38           ; PC := 38
 59 [-]: GETGLOBAL R13 K21      ; R13 := 0x48AB3E19
 60 [-]: MOVE      R14 R2       ; R14 := R2
 61 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 62 [-]: MOVE      R2 R13       ; R2 := R13
 63 [-]: TEST      R1 0         ; if not R1 then PC := 75
 64 [-]: JMP       75           ; PC := 75
 65 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
 66 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13["0xD6A79FE9"]
 67 [-]: GETUPVAL  R15 U0       ; R15 := U0
 68 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["mInputPanel"]
 69 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["mClipPath"]
 70 [-]: LOADK     R16 K4       ; R16 := ".MessageBox"
 71 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 72 [-]: LOADK     R16 K5       ; R16 := "text"
 73 [-]: LOADK     R17 K9       ; R17 := ""
 74 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 75 [-]: GETGLOBAL R13 K23      ; R13 := 0x59F0C261
 76 [-]: MOVE      R14 R2       ; R14 := R2
 77 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 78 [-]: MOVE      R2 R13       ; R2 := R13
 79 [-]: NEWTABLE  R13 0 0      ; R13 := {}
 80 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 81 [-]: GETGLOBAL R15 K24      ; R15 := 0x400E7765
 82 [-]: MOVE      R16 R2       ; R16 := R2
 83 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 84 [-]: TEST      R15 1        ; if R15 then PC := 93
 85 [-]: JMP       93           ; PC := 93
 86 [-]: EQ        1 R2 K9      ; if R2 == "" then PC := 93
 87 [-]: JMP       93           ; PC := 93
 88 [-]: GETUPVAL  R15 U4       ; R15 := U4
 89 [-]: MOVE      R16 R2       ; R16 := R2
 90 [-]: MOVE      R17 R13      ; R17 := R13
 91 [-]: MOVE      R18 R14      ; R18 := R14
 92 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 93 [-]: MOVE      R15 R2       ; R15 := R2
 94 [-]: MOVE      R16 R13      ; R16 := R13
 95 [-]: MOVE      R17 R14      ; R17 := R14
 96 [-]: RETURN    R15 4        ; return R15,R16,R17
 97 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2040
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["UI_MODE_IN_GAME"]
  4 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xAE78D1F"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
  9 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 10 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/Chat_UnstuckWrongChannelError"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 16 [-]: GETGLOBAL R2 K6        ; R2 := gGameRules
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R1 K6        ; R1 := gGameRules
 21 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1ACC73A7"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R1 K8        ; R1 := 0x93B1256B
 26 [-]: LOADK     R2 K9        ; R2 := "ChatRedux: Unstuck command failed!"
 27 [-]: CALL      R1 2 1       ; R1(R2)
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETUPVAL  R1 U3        ; R1 := U3
 30 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETUPVAL  R1 U3        ; R1 := U3
 33 [-]: SUB       R1 R0 R1     ; R1 := R0 - R1
 34 [-]: GETUPVAL  R2 U4        ; R2 := U4
 35 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 52
 36 [-]: JMP       52           ; PC := 52
 37 [-]: GETGLOBAL R1 K11       ; R1 := 0xD51B2786
 38 [-]: CALL      R1 1 2       ; R1 := R1()
 39 [-]: MOVE      R1 R3        ; R1 := R3
 40 [-]: GETGLOBAL R1 K6        ; R1 := gGameRules
 41 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x7748C5CA"]
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETUPVAL  R1 U2        ; R1 := U2
 44 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xAE78D1F"]
 45 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 46 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 47 [-]: LOADK     R5 K13       ; R5 := "/Lotus/Language/Menu/Chat_UnstuckExecuted"
 48 [-]: MOVE      R6 R0        ; R6 := R0
 49 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 50 [-]: CALL      R1 0 1       ; R1(R2,...)
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETUPVAL  R1 U2        ; R1 := U2
 53 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xAE78D1F"]
 54 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 55 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 56 [-]: LOADK     R5 K14       ; R5 := "/Lotus/Language/Menu/Chat_UnstuckCooldown"
 57 [-]: MOVE      R6 R0        ; R6 := R0
 58 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 59 [-]: CALL      R1 0 1       ; R1(R2,...)
 60 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2061
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x55669304"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x93B1256B
  4 [-]: LOADK     R3 K2        ; R3 := ">> ITEM LIST - How many items? "
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x9FAED6BC
  6 [-]: LEN       R5 R1        ; R5 := # R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 11 [-]: LOADK     R3 K4        ; R3 := 1
 12 [-]: LEN       R4 R1        ; R4 := # R1
 13 [-]: LOADK     R5 K4        ; R5 := 1
 14 [-]: FORPREP   R3 37        ; R3 -= R5; PC := 37
 15 [-]: GETGLOBAL R7 K5        ; R7 := table
 16 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
 17 [-]: MOVE      R8 R2        ; R8 := R2
 18 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 19 [-]: GETGLOBAL R10 K8       ; R10 := string
 20 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["0x633C4246"]
 21 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 22 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 23 [-]: GETTABLE  R13 R1 R6    ; R13 := R1[R6]
 24 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["locName"]
 25 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x5EC7A3D2"]
 26 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 27 [-]: MOVE      R14 R0       ; R14 := R0
 28 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 29 [-]: LOADK     R12 K14      ; R12 := "<ARCHWING%> "
 30 [-]: LOADK     R13 K15      ; R13 := ""
 31 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 32 [-]: SETTABLE  R9 K7 R10    ; R9["Name"] := R10
 33 [-]: GETTABLE  R10 R1 R6    ; R10 := R1[R6]
 34 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["storeItem"]
 35 [-]: SETTABLE  R9 K16 R10   ; R9["Type"] := R10
 36 [-]: CALL      R7 3 1       ; R7(R8,R9)
 37 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 38 [-]: GETGLOBAL R7 K5        ; R7 := table
 39 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["0xA5C58010"]
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: CLOSURE   R9 0         ; R9 := closure(Function #59.1)
 42 [-]: CALL      R7 3 1       ; R7(R8,R9)
 43 [-]: GETGLOBAL R7 K19       ; R7 := 0x1BF588C6
 44 [-]: LOADK     R8 K20       ; R8 := 0
 45 [-]: CALL      R7 2 1       ; R7(R8)
 46 [-]: GETGLOBAL R7 K21       ; R7 := 0x63B09107
 47 [-]: MOVE      R8 R2        ; R8 := R2
 48 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETGLOBAL R12 K1       ; R12 := 0x93B1256B
 51 [-]: MOVE      R13 R10      ; R13 := R10
 52 [-]: LOADK     R14 K22      ; R14 := ". "
 53 [-]: GETTABLE  R15 R11 K7   ; R15 := R11["Name"]
 54 [-]: LOADK     R16 K23      ; R16 := " -> "
 55 [-]: GETGLOBAL R17 K3       ; R17 := 0x9FAED6BC
 56 [-]: GETTABLE  R18 R11 K16  ; R18 := R11["Type"]
 57 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18["0x1B252E3C"]
 58 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
 59 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 60 [-]: CONCAT    R13 R13 R17  ; R13 := R13 .. R14 .. R15 .. R16 .. R17
 61 [-]: CALL      R12 2 1      ; R12(R13)
 62 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 50; R9 := R10 end
 63 [-]: JMP       50           ; PC := 50
 64 [-]: RETURN    R0 1         ; return 


; Function #59.1:
;
; Name:            
; Defined at line: 2069
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Name"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Name"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2080
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x654F1092"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x6F2E05FD"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x85D4CA1C"]
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 33 [-]: GETGLOBAL R5 K7        ; R5 := gRandomizedArtifactUpgradeType
 34 [-]: LOADK     R6 K8        ; R6 := 1
 35 [-]: LEN       R7 R3        ; R7 := # R3
 36 [-]: LOADK     R8 K8        ; R8 := 1
 37 [-]: FORPREP   R6 66        ; R6 -= R8; PC := 66
 38 [-]: GETGLOBAL R10 K9       ; R10 := 0x1BF588C6
 39 [-]: LOADK     R11 K2       ; R11 := 0
 40 [-]: CALL      R10 2 1      ; R10(R11)
 41 [-]: GETTABLE  R10 R3 R9    ; R10 := R3[R9]
 42 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mItemType"]
 43 [-]: GETGLOBAL R11 K3       ; R11 := 0x400E7765
 44 [-]: MOVE      R12 R10      ; R12 := R10
 45 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 46 [-]: TEST      R11 1        ; if R11 then PC := 66
 47 [-]: JMP       66           ; PC := 66
 48 [-]: SELF      R11 R10 K11  ; R12 := R10; R11 := R10["0x8B598ED4"]
 49 [-]: MOVE      R13 R5       ; R13 := R5
 50 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 51 [-]: TEST      R11 0        ; if not R11 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETUPVAL  R11 U0       ; R11 := U0
 54 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["0x8383A1DC"]
 55 [-]: GETTABLE  R12 R3 R9    ; R12 := R3[R9]
 56 [-]: MOVE      R13 R9       ; R13 := R9
 57 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 58 [-]: GETGLOBAL R12 K13      ; R12 := table
 59 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["0xE6450C9D"]
 60 [-]: MOVE      R13 R4       ; R13 := R4
 61 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 62 [-]: SETTABLE  R14 K15 R11  ; R14["Card"] := R11
 63 [-]: SETTABLE  R14 K16 R9   ; R14["mCardIndex"] := R9
 64 [-]: SETTABLE  R14 K17 K8   ; R14["Count"] := 1
 65 [-]: CALL      R12 3 1      ; R12(R13,R14)
 66 [-]: FORLOOP   R6 38        ; R6 += R8; if R6 <= R7 then begin PC := 38; R9 := R6 end
 67 [-]: RETURN    R4 2         ; return R4
 68 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2112
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x654F1092"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x6F2E05FD"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0xB89F2718"]
 32 [-]: GETGLOBAL R4 K7        ; R4 := notePackManifest
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 35 [-]: GETUPVAL  R5 U1        ; R5 := U1
 36 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x6F2E05FD"]
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xA622A18B"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETGLOBAL R6 K9        ; R6 := 0x63B09107
 41 [-]: MOVE      R7 R5        ; R7 := R5
 42 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 43 [-]: JMP       68           ; PC := 68
 44 [-]: LT        0 R3 R9      ; if R3 >= R9 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: JMP       70           ; PC := 70
 47 [-]: GETTABLE  R11 R10 K10  ; R11 := R10["mName"]
 48 [-]: EQ        1 R11 K11    ; if R11 == nil then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: EQ        0 R11 K12    ; if R11 ~= "" then PC := 60
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETGLOBAL R12 K13      ; R12 := mMovie
 53 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12["0x5DB0BD4"]
 54 [-]: LOADK     R14 K15      ; R14 := "/Lotus/Language/Menu/Composition_SaveSong"
 55 [-]: MOVE      R15 R0       ; R15 := R0
 56 [-]: NEWTABLE  R16 0 1      ; R16 := {}
 57 [-]: SETTABLE  R16 K16 R9   ; R16["INDEX"] := R9
 58 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 59 [-]: MOVE      R11 R12      ; R11 := R12
 60 [-]: GETGLOBAL R12 K17      ; R12 := table
 61 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["0xE6450C9D"]
 62 [-]: MOVE      R13 R4       ; R13 := R4
 63 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 64 [-]: SETTABLE  R14 K10 R11  ; R14["mName"] := R11
 65 [-]: SETTABLE  R14 K19 R10  ; R14["Song"] := R10
 66 [-]: SETTABLE  R14 K20 K21  ; R14["mTintIcons"] := "0x1"
 67 [-]: CALL      R12 3 1      ; R12(R13,R14)
 68 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 44; R8 := R9 end
 69 [-]: JMP       44           ; PC := 44
 70 [-]: RETURN    R4 2         ; return R4
 71 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2148
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  38

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x6F2E05FD"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: LOADNIL   R3 R4        ; R3 := R4 := nil
 18 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 19 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["MWC_MELEE"]
 20 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: SELF      R5 R2 K4     ; R6 := R2; R5 := R2["0xA82A3D30"]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: MOVE      R3 R5        ; R3 := R5
 25 [-]: GETUPVAL  R5 U1        ; R5 := U1
 26 [-]: GETTABLE  R4 R5 K5     ; R4 := R5["zawStoreItem"]
 27 [-]: JMP       87           ; PC := 87
 28 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 29 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["MWC_AMP"]
 30 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2["0x67D14622"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: MOVE      R3 R5        ; R3 := R5
 35 [-]: GETUPVAL  R5 U1        ; R5 := U1
 36 [-]: GETTABLE  R4 R5 K8     ; R4 := R5["ampStoreItem"]
 37 [-]: JMP       87           ; PC := 87
 38 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 39 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["MWC_MOA_PET"]
 40 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 48
 41 [-]: JMP       48           ; PC := 48
 42 [-]: SELF      R5 R2 K10    ; R6 := R2; R5 := R2["0xC4F6B9B9"]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: MOVE      R3 R5        ; R3 := R5
 45 [-]: GETUPVAL  R5 U1        ; R5 := U1
 46 [-]: GETTABLE  R4 R5 K11    ; R4 := R5["moaPetStoreItem"]
 47 [-]: JMP       87           ; PC := 87
 48 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 49 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MWC_HOVERBOARD"]
 50 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 58
 51 [-]: JMP       58           ; PC := 58
 52 [-]: SELF      R5 R2 K13    ; R6 := R2; R5 := R2["0x613232C3"]
 53 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 54 [-]: MOVE      R3 R5        ; R3 := R5
 55 [-]: GETUPVAL  R5 U1        ; R5 := U1
 56 [-]: GETTABLE  R4 R5 K14    ; R4 := R5["kdriveStoreItem"]
 57 [-]: JMP       87           ; PC := 87
 58 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 59 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["MWC_PRIMARY"]
 60 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 63 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["MWC_SECONDARY"]
 64 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 87
 65 [-]: JMP       87           ; PC := 87
 66 [-]: SELF      R5 R2 K17    ; R6 := R2; R5 := R2["0x1D216770"]
 67 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 68 [-]: MOVE      R3 R5        ; R3 := R5
 69 [-]: EQ        0 R3 K18     ; if R3 ~= nil then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 72 [-]: MOVE      R3 R5        ; R3 := R5
 73 [-]: SELF      R5 R2 K19    ; R6 := R2; R5 := R2["0xB5D66AE"]
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: GETGLOBAL R6 K20       ; R6 := 0xECFDD17
 76 [-]: MOVE      R7 R5        ; R7 := R5
 77 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 78 [-]: JMP       84           ; PC := 84
 79 [-]: GETGLOBAL R11 K21      ; R11 := table
 80 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["0xE6450C9D"]
 81 [-]: MOVE      R12 R3       ; R12 := R3
 82 [-]: MOVE      R13 R10      ; R13 := R10
 83 [-]: CALL      R11 3 1      ; R11(R12,R13)
 84 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 79; R8 := R9 end
 85 [-]: JMP       79           ; PC := 79
 86 [-]: LOADNIL   R4 R4        ; R4 := nil
 87 [-]: LOADK     R11 K23      ; R11 := 1
 88 [-]: LEN       R12 R3       ; R12 := # R3
 89 [-]: LOADK     R13 K23      ; R13 := 1
 90 [-]: FORPREP   R11 293      ; R11 -= R13; PC := 293
 91 [-]: GETTABLE  R15 R3 R14   ; R15 := R3[R14]
 92 [-]: GETTABLE  R16 R15 K24  ; R16 := R15["mModularParts"]
 93 [-]: LEN       R16 R16      ; R16 := # R16
 94 [-]: LT        0 K25 R16    ; if 0 >= R16 then PC := 293
 95 [-]: JMP       293          ; PC := 293
 96 [-]: GETGLOBAL R16 K26      ; R16 := gGameConfig
 97 [-]: SELF      R16 R16 K27  ; R17 := R16; R16 := R16["0x3070974D"]
 98 [-]: GETTABLE  R18 R15 K28  ; R18 := R15["mItemType"]
 99 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
100 [-]: GETGLOBAL R17 K26      ; R17 := gGameConfig
101 [-]: SELF      R17 R17 K29  ; R18 := R17; R17 := R17["0x9E8E66BA"]
102 [-]: GETTABLE  R19 R15 K30  ; R19 := R15["mXP"]
103 [-]: GETTABLE  R20 R15 K28  ; R20 := R15["mItemType"]
104 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
105 [-]: LE        1 R16 R17    ; if R16 <= R17 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: MOVE      R18 R0       ; R18 := R0
108 [-]: MOVE      R18 R1       ; R18 := R1
109 [-]: LOADK     R19 K31      ; R19 := "Owned"
110 [-]: GETTABLE  R20 R15 K32  ; R20 := R15["mPolarized"]
111 [-]: LT        0 K25 R20    ; if 0 >= R20 then PC := 115
112 [-]: JMP       115          ; PC := 115
113 [-]: LOADK     R19 K33      ; R19 := "Forma"
114 [-]: JMP       118          ; PC := 118
115 [-]: TEST      R18 0        ; if not R18 then PC := 118
116 [-]: JMP       118          ; PC := 118
117 [-]: LOADK     R19 K34      ; R19 := "Max"
118 [-]: EQ        0 R4 K18     ; if R4 ~= nil then PC := 272
119 [-]: JMP       272          ; PC := 272
120 [-]: GETGLOBAL R20 K2       ; R20 := Lotus_Game
121 [-]: GETTABLE  R20 R20 K35  ; R20 := R20["MWC_INVALID"]
122 [-]: LOADK     R21 K23      ; R21 := 1
123 [-]: GETTABLE  R22 R15 K24  ; R22 := R15["mModularParts"]
124 [-]: LEN       R22 R22      ; R22 := # R22
125 [-]: LOADK     R23 K23      ; R23 := 1
126 [-]: FORPREP   R21 153      ; R21 -= R23; PC := 153
127 [-]: GETGLOBAL R25 K0       ; R25 := 0x400E7765
128 [-]: GETTABLE  R26 R15 K24  ; R26 := R15["mModularParts"]
129 [-]: GETTABLE  R26 R26 R24  ; R26 := R26[R24]
130 [-]: CALL      R25 2 2      ; R25 := R25(R26)
131 [-]: TEST      R25 1        ; if R25 then PC := 153
132 [-]: JMP       153          ; PC := 153
133 [-]: GETTABLE  R25 R15 K24  ; R25 := R15["mModularParts"]
134 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
135 [-]: SELF      R25 R25 K36  ; R26 := R25; R25 := R25["0x8B598ED4"]
136 [-]: GETGLOBAL R27 K37      ; R27 := gLotusGunHandleType
137 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
138 [-]: TEST      R25 0        ; if not R25 then PC := 153
139 [-]: JMP       153          ; PC := 153
140 [-]: GETTABLE  R25 R15 K24  ; R25 := R15["mModularParts"]
141 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
142 [-]: SELF      R25 R25 K36  ; R26 := R25; R25 := R25["0x8B598ED4"]
143 [-]: GETGLOBAL R27 K38      ; R27 := gLotusGunPrimaryHandleType
144 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
145 [-]: TEST      R25 0        ; if not R25 then PC := 150
146 [-]: JMP       150          ; PC := 150
147 [-]: GETGLOBAL R25 K2       ; R25 := Lotus_Game
148 [-]: GETTABLE  R20 R25 K15  ; R20 := R25["MWC_PRIMARY"]
149 [-]: JMP       154          ; PC := 154
150 [-]: GETGLOBAL R25 K2       ; R25 := Lotus_Game
151 [-]: GETTABLE  R20 R25 K16  ; R20 := R25["MWC_SECONDARY"]
152 [-]: JMP       154          ; PC := 154
153 [-]: FORLOOP   R21 127      ; R21 += R23; if R21 <= R22 then begin PC := 127; R24 := R21 end
154 [-]: GETGLOBAL R25 K2       ; R25 := Lotus_Game
155 [-]: GETTABLE  R25 R25 K35  ; R25 := R25["MWC_INVALID"]
156 [-]: EQ        1 R20 R25    ; if R20 == R25 then PC := 272
157 [-]: JMP       272          ; PC := 272
158 [-]: LOADK     R25 K23      ; R25 := 1
159 [-]: GETTABLE  R26 R15 K24  ; R26 := R15["mModularParts"]
160 [-]: LEN       R26 R26      ; R26 := # R26
161 [-]: LOADK     R27 K23      ; R27 := 1
162 [-]: FORPREP   R25 271      ; R25 -= R27; PC := 271
163 [-]: GETTABLE  R29 R15 K24  ; R29 := R15["mModularParts"]
164 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
165 [-]: SELF      R29 R29 K36  ; R30 := R29; R29 := R29["0x8B598ED4"]
166 [-]: GETGLOBAL R31 K39      ; R31 := gLotusGunBarrelType
167 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
168 [-]: TEST      R29 0        ; if not R29 then PC := 271
169 [-]: JMP       271          ; PC := 271
170 [-]: GETGLOBAL R29 K40      ; R29 := 0x7C282057
171 [-]: GETTABLE  R30 R15 K24  ; R30 := R15["mModularParts"]
172 [-]: GETTABLE  R30 R30 R28  ; R30 := R30[R28]
173 [-]: CALL      R29 2 2      ; R29 := R29(R30)
174 [-]: SELF      R30 R29 K41  ; R31 := R29; R30 := R29["0x428F2C5D"]
175 [-]: CALL      R30 2 2      ; R30 := R30(R31)
176 [-]: GETGLOBAL R31 K2       ; R31 := Lotus_Game
177 [-]: GETTABLE  R31 R31 K42  ; R31 := R31["LotusWeaponPart_GT_RIFLE"]
178 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 195
179 [-]: JMP       195          ; PC := 195
180 [-]: GETUPVAL  R31 U2       ; R31 := U2
181 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0xF81722A2"]
182 [-]: GETGLOBAL R32 K2       ; R32 := Lotus_Game
183 [-]: GETTABLE  R32 R32 K15  ; R32 := R32["MWC_PRIMARY"]
184 [-]: EQ        1 R20 R32    ; if R20 == R32 then PC := 187
185 [-]: JMP       187          ; PC := 187
186 [-]: MOVE      R32 R0       ; R32 := R0
187 [-]: MOVE      R32 R1       ; R32 := R1
188 [-]: GETUPVAL  R33 U1       ; R33 := U1
189 [-]: GETTABLE  R33 R33 K44  ; R33 := R33["primaryRifleType"]
190 [-]: GETUPVAL  R34 U1       ; R34 := U1
191 [-]: GETTABLE  R34 R34 K45  ; R34 := R34["secondaryRifleType"]
192 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
193 [-]: MOVE      R4 R31       ; R4 := R31
194 [-]: JMP       272          ; PC := 272
195 [-]: GETGLOBAL R31 K2       ; R31 := Lotus_Game
196 [-]: GETTABLE  R31 R31 K46  ; R31 := R31["LotusWeaponPart_GT_SHOTGUN"]
197 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 214
198 [-]: JMP       214          ; PC := 214
199 [-]: GETUPVAL  R31 U2       ; R31 := U2
200 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0xF81722A2"]
201 [-]: GETGLOBAL R32 K2       ; R32 := Lotus_Game
202 [-]: GETTABLE  R32 R32 K15  ; R32 := R32["MWC_PRIMARY"]
203 [-]: EQ        1 R20 R32    ; if R20 == R32 then PC := 206
204 [-]: JMP       206          ; PC := 206
205 [-]: MOVE      R32 R0       ; R32 := R0
206 [-]: MOVE      R32 R1       ; R32 := R1
207 [-]: GETUPVAL  R33 U1       ; R33 := U1
208 [-]: GETTABLE  R33 R33 K47  ; R33 := R33["primaryShotgunType"]
209 [-]: GETUPVAL  R34 U1       ; R34 := U1
210 [-]: GETTABLE  R34 R34 K48  ; R34 := R34["secondaryShotgunType"]
211 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
212 [-]: MOVE      R4 R31       ; R4 := R31
213 [-]: JMP       272          ; PC := 272
214 [-]: GETGLOBAL R31 K2       ; R31 := Lotus_Game
215 [-]: GETTABLE  R31 R31 K49  ; R31 := R31["LotusWeaponPart_GT_SNIPER"]
216 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 233
217 [-]: JMP       233          ; PC := 233
218 [-]: GETUPVAL  R31 U2       ; R31 := U2
219 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0xF81722A2"]
220 [-]: GETGLOBAL R32 K2       ; R32 := Lotus_Game
221 [-]: GETTABLE  R32 R32 K15  ; R32 := R32["MWC_PRIMARY"]
222 [-]: EQ        1 R20 R32    ; if R20 == R32 then PC := 225
223 [-]: JMP       225          ; PC := 225
224 [-]: MOVE      R32 R0       ; R32 := R0
225 [-]: MOVE      R32 R1       ; R32 := R1
226 [-]: GETUPVAL  R33 U1       ; R33 := U1
227 [-]: GETTABLE  R33 R33 K50  ; R33 := R33["primarySniperType"]
228 [-]: GETUPVAL  R34 U1       ; R34 := U1
229 [-]: GETTABLE  R34 R34 K51  ; R34 := R34["secondarySniperType"]
230 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
231 [-]: MOVE      R4 R31       ; R4 := R31
232 [-]: JMP       272          ; PC := 272
233 [-]: GETGLOBAL R31 K2       ; R31 := Lotus_Game
234 [-]: GETTABLE  R31 R31 K52  ; R31 := R31["LotusWeaponPart_GT_LAUNCHER"]
235 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 252
236 [-]: JMP       252          ; PC := 252
237 [-]: GETUPVAL  R31 U2       ; R31 := U2
238 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0xF81722A2"]
239 [-]: GETGLOBAL R32 K2       ; R32 := Lotus_Game
240 [-]: GETTABLE  R32 R32 K15  ; R32 := R32["MWC_PRIMARY"]
241 [-]: EQ        1 R20 R32    ; if R20 == R32 then PC := 244
242 [-]: JMP       244          ; PC := 244
243 [-]: MOVE      R32 R0       ; R32 := R0
244 [-]: MOVE      R32 R1       ; R32 := R1
245 [-]: GETUPVAL  R33 U1       ; R33 := U1
246 [-]: GETTABLE  R33 R33 K53  ; R33 := R33["primaryLauncherType"]
247 [-]: GETUPVAL  R34 U1       ; R34 := U1
248 [-]: GETTABLE  R34 R34 K54  ; R34 := R34["secondaryLauncherType"]
249 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
250 [-]: MOVE      R4 R31       ; R4 := R31
251 [-]: JMP       272          ; PC := 272
252 [-]: GETGLOBAL R31 K2       ; R31 := Lotus_Game
253 [-]: GETTABLE  R31 R31 K55  ; R31 := R31["LotusWeaponPart_GT_BEAM"]
254 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 272
255 [-]: JMP       272          ; PC := 272
256 [-]: GETUPVAL  R31 U2       ; R31 := U2
257 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0xF81722A2"]
258 [-]: GETGLOBAL R32 K2       ; R32 := Lotus_Game
259 [-]: GETTABLE  R32 R32 K15  ; R32 := R32["MWC_PRIMARY"]
260 [-]: EQ        1 R20 R32    ; if R20 == R32 then PC := 263
261 [-]: JMP       263          ; PC := 263
262 [-]: MOVE      R32 R0       ; R32 := R0
263 [-]: MOVE      R32 R1       ; R32 := R1
264 [-]: GETUPVAL  R33 U1       ; R33 := U1
265 [-]: GETTABLE  R33 R33 K56  ; R33 := R33["primaryBeamType"]
266 [-]: GETUPVAL  R34 U1       ; R34 := U1
267 [-]: GETTABLE  R34 R34 K57  ; R34 := R34["secondaryBeamType"]
268 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
269 [-]: MOVE      R4 R31       ; R4 := R31
270 [-]: JMP       272          ; PC := 272
271 [-]: FORLOOP   R25 163      ; R25 += R27; if R25 <= R26 then begin PC := 163; R28 := R25 end
272 [-]: GETGLOBAL R31 K21      ; R31 := table
273 [-]: GETTABLE  R31 R31 K22  ; R31 := R31["0xE6450C9D"]
274 [-]: MOVE      R32 R1       ; R32 := R1
275 [-]: NEWTABLE  R33 0 5      ; R33 := {}
276 [-]: SETTABLE  R33 K58 R19  ; R33["OwnedStatus"] := R19
277 [-]: GETTABLE  R34 R15 K32  ; R34 := R15["mPolarized"]
278 [-]: SETTABLE  R33 K59 R34  ; R33["Polarized"] := R34
279 [-]: GETUPVAL  R34 U2       ; R34 := U2
280 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["0xF81722A2"]
281 [-]: GETTABLE  R35 R15 K61  ; R35 := R15["mItemName"]
282 [-]: EQ        0 R35 K62    ; if R35 ~= "" then PC := 285
283 [-]: JMP       285          ; PC := 285
284 [-]: MOVE      R35 R0       ; R35 := R0
285 [-]: MOVE      R35 R1       ; R35 := R1
286 [-]: GETTABLE  R36 R15 K61  ; R36 := R15["mItemName"]
287 [-]: LOADNIL   R37 R37      ; R37 := nil
288 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
289 [-]: SETTABLE  R33 K60 R34  ; R33["Name"] := R34
290 [-]: SETTABLE  R33 K63 R4   ; R33["StoreItem"] := R4
291 [-]: SETTABLE  R33 K64 R15  ; R33["RawItem"] := R15
292 [-]: CALL      R31 3 1      ; R31(R32,R33)
293 [-]: FORLOOP   R11 91       ; R11 += R13; if R11 <= R12 then begin PC := 91; R14 := R11 end
294 [-]: RETURN    R1 2         ; return R1
295 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2241
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x654F1092"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x30BDE7F"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: NEWTABLE  R3 3 0       ; R3 := {}
 24 [-]: GETGLOBAL R4 K6        ; R4 := Lotus_Game
 25 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LOT_NORMAL"]
 26 [-]: GETGLOBAL R5 K6        ; R5 := Lotus_Game
 27 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LOT_SENTINEL"]
 28 [-]: GETGLOBAL R6 K6        ; R6 := Lotus_Game
 29 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["LOT_ARCHWING"]
 30 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
 31 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 32 [-]: GETGLOBAL R5 K10       ; R5 := 0x63B09107
 33 [-]: MOVE      R6 R3        ; R6 := R3
 34 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 35 [-]: JMP       86           ; PC := 86
 36 [-]: MOVE      R10 R0       ; R10 := R0
 37 [-]: LOADK     R11 K2       ; R11 := 0
 38 [-]: GETGLOBAL R12 K6       ; R12 := Lotus_Game
 39 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["NUM_NORMAL_LOADOUT_SLOTS"]
 40 [-]: LOADK     R13 K12      ; R13 := 1
 41 [-]: FORPREP   R11 85       ; R11 -= R13; PC := 85
 42 [-]: SELF      R15 R2 K13   ; R16 := R2; R15 := R2["0x6D25F92"]
 43 [-]: MOVE      R17 R9       ; R17 := R9
 44 [-]: MOVE      R18 R14      ; R18 := R14
 45 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 46 [-]: GETGLOBAL R16 K3       ; R16 := 0x400E7765
 47 [-]: GETTABLE  R17 R15 K14  ; R17 := R15["mItem"]
 48 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["mItemType"]
 49 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 50 [-]: TEST      R16 1        ; if R16 then PC := 85
 51 [-]: JMP       85           ; PC := 85
 52 [-]: GETGLOBAL R16 K6       ; R16 := Lotus_Game
 53 [-]: GETTABLE  R16 R16 K16  ; R16 := R16["SUIT_SLOT"]
 54 [-]: EQ        0 R14 R16    ; if R14 ~= R16 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: MOVE      R10 R1       ; R10 := R1
 57 [-]: TEST      R10 0        ; if not R10 then PC := 85
 58 [-]: JMP       85           ; PC := 85
 59 [-]: GETGLOBAL R16 K17      ; R16 := 0x7C282057
 60 [-]: GETTABLE  R17 R15 K14  ; R17 := R15["mItem"]
 61 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["mItemType"]
 62 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 63 [-]: GETGLOBAL R17 K3       ; R17 := 0x400E7765
 64 [-]: MOVE      R18 R16      ; R18 := R16
 65 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 66 [-]: TEST      R17 1        ; if R17 then PC := 85
 67 [-]: JMP       85           ; PC := 85
 68 [-]: GETGLOBAL R17 K18      ; R17 := mMovie
 69 [-]: SELF      R17 R17 K19  ; R18 := R17; R17 := R17["0x5DB0BD4"]
 70 [-]: SELF      R19 R16 K20  ; R20 := R16; R19 := R16["0x616C74B6"]
 71 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 72 [-]: SELF      R19 R19 K21  ; R20 := R19; R19 := R19["0x5EC7A3D2"]
 73 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 74 [-]: MOVE      R20 R0       ; R20 := R0
 75 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 76 [-]: GETGLOBAL R18 K22      ; R18 := table
 77 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["0xE6450C9D"]
 78 [-]: MOVE      R19 R4       ; R19 := R4
 79 [-]: NEWTABLE  R20 0 4      ; R20 := {}
 80 [-]: SETTABLE  R20 K24 R17  ; R20["mName"] := R17
 81 [-]: SETTABLE  R20 K25 R15  ; R20["mStoredItem"] := R15
 82 [-]: SETTABLE  R20 K26 R9   ; R20["mLoadoutType"] := R9
 83 [-]: SETTABLE  R20 K27 R14  ; R20["mLoadoutSlot"] := R14
 84 [-]: CALL      R18 3 1      ; R18(R19,R20)
 85 [-]: FORLOOP   R11 42       ; R11 += R13; if R11 <= R12 then begin PC := 42; R14 := R11 end
 86 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 36; R7 := R8 end
 87 [-]: JMP       36           ; PC := 36
 88 [-]: RETURN    R4 2         ; return R4
 89 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2280
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xA559F558"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 28
 10 [-]: JMP       28           ; PC := 28
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 12 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K3        ; R0 := gGameRules
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x8B598ED4"]
 18 [-]: GETGLOBAL R2 K5        ; R2 := gLotusAttractModeGameRulesType
 19 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 20 [-]: TEST      R0 1         ; if R0 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R0 K3        ; R0 := gGameRules
 23 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0xFFF74EB1"]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R0 R0        ; R0 := R0
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2284
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: SELF      R4 R1 K0     ; R5 := R1; R4 := R1["0x633C4246"]
  2 [-]: LOADK     R6 K1        ; R6 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
  3 [-]: LOADK     R7 K2        ; R7 := "%%%0"
  4 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETGLOBAL R6 K4        ; R6 := string
  7 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["0x633C4246"]
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: LOADK     R8 K5        ; R8 := "%["
 10 [-]: MOVE      R9 R4        ; R9 := R4
 11 [-]: LOADK     R10 K6       ; R10 := "%]"
 12 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 13 [-]: LOADK     R9 K7        ; R9 := "["
 14 [-]: MOVE      R10 R2       ; R10 := R2
 15 [-]: LOADK     R11 K8       ; R11 := "]"
 16 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 17 [-]: LOADK     R10 K9       ; R10 := 1
 18 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 19 [-]: SETTABLE  R5 K3 R6     ; R5["Msg"] := R6
 20 [-]: LOADK     R5 K10       ; R5 := "{"
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: LOADK     R7 K11       ; R7 := "}"
 23 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 24 [-]: GETUPVAL  R6 U1        ; R6 := U1
 25 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["0xF81722A2"]
 26 [-]: GETTABLE  R7 R3 R5     ; R7 := R3[R5]
 27 [-]: EQ        1 R7 K13     ; if R7 == nil then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: LOADK     R8 K14       ; R8 := 0
 32 [-]: GETTABLE  R9 R3 R5     ; R9 := R3[R5]
 33 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 34 [-]: ADD       R6 R6 K9     ; R6 := R6 + 1
 35 [-]: SETTABLE  R3 R5 R6     ; R3[R5] := R6
 36 [-]: GETUPVAL  R6 U2        ; R6 := U2
 37 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["mActivePanelName"]
 38 [-]: EQ        1 R6 K16     ; if R6 == "" then PC := 71
 39 [-]: JMP       71           ; PC := 71
 40 [-]: GETUPVAL  R6 U2        ; R6 := U2
 41 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["mInputPanel"]
 42 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["mMaxMsgLength"]
 43 [-]: GETUPVAL  R7 U2        ; R7 := U2
 44 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mInputPanel"]
 45 [-]: GETUPVAL  R8 U2        ; R8 := U2
 46 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mInputPanel"]
 47 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["MAX_MSG_LIMIT"]
 48 [-]: SETTABLE  R7 K18 R8    ; R7["mMaxMsgLength"] := R8
 49 [-]: GETUPVAL  R7 U2        ; R7 := U2
 50 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["mPanelList"]
 51 [-]: GETUPVAL  R8 U2        ; R8 := U2
 52 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mActivePanelName"]
 53 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 54 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0xE1889BF6"]
 55 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 56 [-]: TEST      R7 1         ; if R7 then PC := 68
 57 [-]: JMP       68           ; PC := 68
 58 [-]: GETGLOBAL R7 K22       ; R7 := mMovie
 59 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7["0xD6A79FE9"]
 60 [-]: GETUPVAL  R9 U2        ; R9 := U2
 61 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mInputPanel"]
 62 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["mClipPath"]
 63 [-]: LOADK     R10 K25      ; R10 := ".MessageBox"
 64 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 65 [-]: LOADK     R10 K26      ; R10 := "text"
 66 [-]: LOADK     R11 K16      ; R11 := ""
 67 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 68 [-]: GETUPVAL  R7 U2        ; R7 := U2
 69 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mInputPanel"]
 70 [-]: SETTABLE  R7 K18 R6    ; R7["mMaxMsgLength"] := R6
 71 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2304
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["OmegaLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2308
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["SongLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2312
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ZawLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2316
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["AmpLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2320
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["MoaPetLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2324
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["KdriveLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2328
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["KitgunLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2332
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["AppearanceLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2336
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ModConfigLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 2340
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ShawzinLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 2344
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x18AAE1E3"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xD51B2786
 12 [-]: CALL      R3 1 2       ; R3 := R3()
 13 [-]: GETTABLE  R4 R2 K3     ; R4 := R2["mParent"]
 14 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mPanelShortcuts"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["CHANNEL_TRADE"]
 17 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 18 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: TEST      R4 0         ; if not R4 then PC := 46
 23 [-]: JMP       46           ; PC := 46
 24 [-]: GETGLOBAL R5 K6        ; R5 := _G
 25 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["TradeSpamBlockTime"]
 26 [-]: EQ        1 R5 K8      ; if R5 == nil then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: GETGLOBAL R5 K6        ; R5 := _G
 29 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["TradeSpamBlockTime"]
 30 [-]: SUB       R5 R3 R5     ; R5 := R3 - R5
 31 [-]: GETUPVAL  R6 U1        ; R6 := U1
 32 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["TRADE_SPAM_DETECTION_PERIOD"]
 33 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R5 K6        ; R5 := _G
 36 [-]: SETTABLE  R5 K7 K8     ; R5["TradeSpamBlockTime"] := nil
 37 [-]: SETTABLE  R2 K10 K8    ; R2["mSpamBlockTime"] := nil
 38 [-]: JMP       63           ; PC := 63
 39 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["0xDC49B9FA"]
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: MOVE      R7 R1        ; R7 := R1
 42 [-]: CALL      R5 3 1       ; R5(R6,R7)
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: RETURN    R5 2         ; return R5
 45 [-]: JMP       63           ; PC := 63
 46 [-]: GETTABLE  R5 R2 K10    ; R5 := R2["mSpamBlockTime"]
 47 [-]: EQ        1 R5 K8      ; if R5 == nil then PC := 63
 48 [-]: JMP       63           ; PC := 63
 49 [-]: GETTABLE  R5 R2 K10    ; R5 := R2["mSpamBlockTime"]
 50 [-]: SUB       R5 R3 R5     ; R5 := R3 - R5
 51 [-]: GETUPVAL  R6 U1        ; R6 := U1
 52 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["SPAM_LOCKOUT_TIME"]
 53 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: SETTABLE  R2 K10 K8    ; R2["mSpamBlockTime"] := nil
 56 [-]: JMP       63           ; PC := 63
 57 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["0xDC49B9FA"]
 58 [-]: MOVE      R6 R2        ; R6 := R2
 59 [-]: MOVE      R7 R0        ; R7 := R0
 60 [-]: CALL      R5 3 1       ; R5(R6,R7)
 61 [-]: MOVE      R5 R1        ; R5 := R1
 62 [-]: RETURN    R5 2         ; return R5
 63 [-]: GETGLOBAL R5 K13       ; R5 := string
 64 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["0xBDD0D625"]
 65 [-]: MOVE      R6 R0        ; R6 := R0
 66 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 67 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 68 [-]: LOADK     R7 K15       ; R7 := "%s+"
 69 [-]: LOADK     R8 K16       ; R8 := "%p+"
 70 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 71 [-]: LOADK     R7 K17       ; R7 := 1
 72 [-]: LEN       R8 R6        ; R8 := # R6
 73 [-]: LOADK     R9 K17       ; R9 := 1
 74 [-]: FORPREP   R7 82        ; R7 -= R9; PC := 82
 75 [-]: GETGLOBAL R11 K13      ; R11 := string
 76 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["0x633C4246"]
 77 [-]: MOVE      R12 R5       ; R12 := R5
 78 [-]: GETTABLE  R13 R6 R10   ; R13 := R6[R10]
 79 [-]: LOADK     R14 K19      ; R14 := ""
 80 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 81 [-]: MOVE      R5 R11       ; R5 := R11
 82 [-]: FORLOOP   R7 75        ; R7 += R9; if R7 <= R8 then begin PC := 75; R10 := R7 end
 83 [-]: LOADK     R11 K20      ; R11 := 97
 84 [-]: LOADK     R12 K21      ; R12 := 122
 85 [-]: LOADK     R13 K17      ; R13 := 1
 86 [-]: FORPREP   R11 101      ; R11 -= R13; PC := 101
 87 [-]: GETGLOBAL R15 K13      ; R15 := string
 88 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["0x9763B71"]
 89 [-]: MOVE      R16 R14      ; R16 := R14
 90 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 91 [-]: GETGLOBAL R16 K13      ; R16 := string
 92 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["0x633C4246"]
 93 [-]: MOVE      R17 R5       ; R17 := R5
 94 [-]: MOVE      R18 R15      ; R18 := R15
 95 [-]: MOVE      R19 R15      ; R19 := R15
 96 [-]: LOADK     R20 K23      ; R20 := "+"
 97 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
 98 [-]: MOVE      R19 R15      ; R19 := R15
 99 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
100 [-]: MOVE      R5 R16       ; R5 := R16
101 [-]: FORLOOP   R11 87       ; R11 += R13; if R11 <= R12 then begin PC := 87; R14 := R11 end
102 [-]: LOADNIL   R16 R16      ; R16 := nil
103 [-]: TEST      R4 1         ; if R4 then PC := 137
104 [-]: JMP       137          ; PC := 137
105 [-]: LOADK     R17 K17      ; R17 := 1
106 [-]: GETTABLE  R18 R2 K24   ; R18 := R2["mLastMessageData"]
107 [-]: LEN       R18 R18      ; R18 := # R18
108 [-]: LOADK     R19 K17      ; R19 := 1
109 [-]: FORPREP   R17 136      ; R17 -= R19; PC := 136
110 [-]: GETTABLE  R21 R2 K24   ; R21 := R2["mLastMessageData"]
111 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
112 [-]: GETTABLE  R22 R21 K25  ; R22 := R21["Message"]
113 [-]: EQ        0 R5 R22     ; if R5 ~= R22 then PC := 136
114 [-]: JMP       136          ; PC := 136
115 [-]: GETTABLE  R22 R21 K26  ; R22 := R21["Time"]
116 [-]: SUB       R22 R3 R22   ; R22 := R3 - R22
117 [-]: GETUPVAL  R23 U1       ; R23 := U1
118 [-]: GETTABLE  R23 R23 K27  ; R23 := R23["SPAM_REPEATED_MESSAGE_DETECTION_PERIOD"]
119 [-]: LT        0 R22 R23    ; if R22 >= R23 then PC := 136
120 [-]: JMP       136          ; PC := 136
121 [-]: GETGLOBAL R22 K28      ; R22 := math
122 [-]: GETTABLE  R22 R22 K29  ; R22 := R22["0x8B011038"]
123 [-]: LOADK     R23 K17      ; R23 := 1
124 [-]: GETGLOBAL R24 K28      ; R24 := math
125 [-]: GETTABLE  R24 R24 K30  ; R24 := R24["0xF7005A7B"]
126 [-]: GETUPVAL  R25 U1       ; R25 := U1
127 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["SPAM_REPEATED_MESSAGE_DETECTION_PERIOD"]
128 [-]: GETTABLE  R26 R21 K26  ; R26 := R21["Time"]
129 [-]: SUB       R26 R3 R26   ; R26 := R3 - R26
130 [-]: SUB       R25 R25 R26  ; R25 := R25 - R26
131 [-]: ADD       R25 K31 R25  ; R25 := 0.5 + R25
132 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
133 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
134 [-]: MOVE      R16 R22      ; R16 := R22
135 [-]: JMP       137          ; PC := 137
136 [-]: FORLOOP   R17 110      ; R17 += R19; if R17 <= R18 then begin PC := 110; R20 := R17 end
137 [-]: GETTABLE  R22 R2 K3    ; R22 := R2["mParent"]
138 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["mPanelShortcuts"]
139 [-]: GETUPVAL  R23 U0       ; R23 := U0
140 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["CHANNEL_GLOBAL"]
141 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
142 [-]: EQ        1 R1 R22     ; if R1 == R22 then PC := 153
143 [-]: JMP       153          ; PC := 153
144 [-]: GETTABLE  R22 R2 K3    ; R22 := R2["mParent"]
145 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["mPanelShortcuts"]
146 [-]: GETUPVAL  R23 U0       ; R23 := U0
147 [-]: GETTABLE  R23 R23 K33  ; R23 := R23["CHANNEL_RECRUITING"]
148 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
149 [-]: EQ        1 R1 R22     ; if R1 == R22 then PC := 153
150 [-]: JMP       153          ; PC := 153
151 [-]: TEST      R4 0         ; if not R4 then PC := 226
152 [-]: JMP       226          ; PC := 226
153 [-]: EQ        1 R16 K8     ; if R16 == nil then PC := 175
154 [-]: JMP       175          ; PC := 175
155 [-]: GETGLOBAL R22 K1       ; R22 := 0x400E7765
156 [-]: MOVE      R23 R2       ; R23 := R2
157 [-]: CALL      R22 2 2      ; R22 := R22(R23)
158 [-]: TEST      R22 1        ; if R22 then PC := 172
159 [-]: JMP       172          ; PC := 172
160 [-]: SELF      R22 R2 K34   ; R23 := R2; R22 := R2["0xAE78D1F"]
161 [-]: GETGLOBAL R24 K35      ; R24 := mMovie
162 [-]: SELF      R24 R24 K36  ; R25 := R24; R24 := R24["0x5DB0BD4"]
163 [-]: LOADK     R26 K37      ; R26 := "/Lotus/Language/Menu/Chat_DupMessageBlock"
164 [-]: MOVE      R27 R0       ; R27 := R0
165 [-]: NEWTABLE  R28 0 1      ; R28 := {}
166 [-]: GETGLOBAL R29 K39      ; R29 := 0x9FAED6BC
167 [-]: MOVE      R30 R16      ; R30 := R16
168 [-]: CALL      R29 2 2      ; R29 := R29(R30)
169 [-]: SETTABLE  R28 K38 R29  ; R28["TIME"] := R29
170 [-]: CALL      R24 5 0      ; R24,... := R24(R25,R26,R27,R28)
171 [-]: CALL      R22 0 1      ; R22(R23,...)
172 [-]: MOVE      R22 R1       ; R22 := R1
173 [-]: RETURN    R22 2        ; return R22
174 [-]: JMP       226          ; PC := 226
175 [-]: GETUPVAL  R22 U2       ; R22 := U2
176 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["0xF81722A2"]
177 [-]: MOVE      R23 R4       ; R23 := R4
178 [-]: GETUPVAL  R24 U1       ; R24 := U1
179 [-]: GETTABLE  R24 R24 K41  ; R24 := R24["TRADE_MSGS_PER_PERIOD"]
180 [-]: GETUPVAL  R25 U1       ; R25 := U1
181 [-]: GETTABLE  R25 R25 K42  ; R25 := R25["MSGS_PER_PERIOD"]
182 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
183 [-]: GETTABLE  R23 R2 K24   ; R23 := R2["mLastMessageData"]
184 [-]: LEN       R23 R23      ; R23 := # R23
185 [-]: LE        0 R22 R23    ; if R22 > R23 then PC := 192
186 [-]: JMP       192          ; PC := 192
187 [-]: GETGLOBAL R23 K43      ; R23 := table
188 [-]: GETTABLE  R23 R23 K44  ; R23 := R23["0xCDB1FD5E"]
189 [-]: GETTABLE  R24 R2 K24   ; R24 := R2["mLastMessageData"]
190 [-]: LOADK     R25 K17      ; R25 := 1
191 [-]: CALL      R23 3 1      ; R23(R24,R25)
192 [-]: GETGLOBAL R23 K43      ; R23 := table
193 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["0xE6450C9D"]
194 [-]: GETTABLE  R24 R2 K24   ; R24 := R2["mLastMessageData"]
195 [-]: NEWTABLE  R25 0 2      ; R25 := {}
196 [-]: SETTABLE  R25 K25 R5   ; R25["Message"] := R5
197 [-]: SETTABLE  R25 K26 R3   ; R25["Time"] := R3
198 [-]: CALL      R23 3 1      ; R23(R24,R25)
199 [-]: GETTABLE  R23 R2 K24   ; R23 := R2["mLastMessageData"]
200 [-]: LEN       R23 R23      ; R23 := # R23
201 [-]: LE        0 R22 R23    ; if R22 > R23 then PC := 226
202 [-]: JMP       226          ; PC := 226
203 [-]: GETTABLE  R23 R2 K24   ; R23 := R2["mLastMessageData"]
204 [-]: GETTABLE  R23 R23 K17  ; R23 := R23[1]
205 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["Time"]
206 [-]: SUB       R24 R3 R23   ; R24 := R3 - R23
207 [-]: TEST      R4 0         ; if not R4 then PC := 219
208 [-]: JMP       219          ; PC := 219
209 [-]: GETUPVAL  R25 U1       ; R25 := U1
210 [-]: GETTABLE  R25 R25 K9   ; R25 := R25["TRADE_SPAM_DETECTION_PERIOD"]
211 [-]: LT        0 R24 R25    ; if R24 >= R25 then PC := 226
212 [-]: JMP       226          ; PC := 226
213 [-]: GETGLOBAL R25 K6       ; R25 := _G
214 [-]: SETTABLE  R25 K7 R23   ; R25["TradeSpamBlockTime"] := R23
215 [-]: SETTABLE  R2 K10 R23   ; R2["mSpamBlockTime"] := R23
216 [-]: NEWTABLE  R25 0 0      ; R25 := {}
217 [-]: SETTABLE  R2 K24 R25   ; R2["mLastMessageData"] := R25
218 [-]: JMP       226          ; PC := 226
219 [-]: GETUPVAL  R25 U1       ; R25 := U1
220 [-]: GETTABLE  R25 R25 K46  ; R25 := R25["SPAM_DETECTION_PERIOD"]
221 [-]: LT        0 R24 R25    ; if R24 >= R25 then PC := 226
222 [-]: JMP       226          ; PC := 226
223 [-]: SETTABLE  R2 K10 R23   ; R2["mSpamBlockTime"] := R23
224 [-]: NEWTABLE  R25 0 0      ; R25 := {}
225 [-]: SETTABLE  R2 K24 R25   ; R2["mLastMessageData"] := R25
226 [-]: MOVE      R25 R0       ; R25 := R0
227 [-]: RETURN    R25 2        ; return R25
228 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 2429
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x18AAE1E3"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := string
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x7B782033"]
  6 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mChannelName"]
  7 [-]: LOADK     R4 K4        ; R4 := 1
  8 [-]: LOADK     R5 K4        ; R5 := 1
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: NEWTABLE  R3 0 5       ; R3 := {}
 11 [-]: SETTABLE  R3 K5 K6     ; R3["G"] := "/Lotus/Language/Menu/Chat_GlobalTitle"
 12 [-]: SETTABLE  R3 K7 K8     ; R3["R"] := "/Lotus/Language/Menu/Chat_RecruitingTitle"
 13 [-]: SETTABLE  R3 K9 K10    ; R3["T"] := "/Lotus/Language/Menu/Chat_TradeTitle"
 14 [-]: SETTABLE  R3 K11 K12   ; R3["D"] := "/Lotus/Language/Menu/Chat_CouncilTitle"
 15 [-]: SETTABLE  R3 K13 K14   ; R3["H"] := "/Lotus/Language/Menu/Chat_HubTitle"
 16 [-]: EQ        0 R0 K15     ; if R0 ~= nil then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R0 K16       ; R0 := ""
 19 [-]: JMP       43           ; PC := 43
 20 [-]: GETTABLE  R4 R3 R2     ; R4 := R3[R2]
 21 [-]: EQ        1 R4 K15     ; if R4 == nil then PC := 37
 22 [-]: JMP       37           ; PC := 37
 23 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 24 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 25 [-]: GETTABLE  R6 R3 R2     ; R6 := R3[R2]
 26 [-]: MOVE      R7 R0        ; R7 := R0
 27 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 28 [-]: GETGLOBAL R5 K17       ; R5 := mMovie
 29 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 30 [-]: MOVE      R7 R0        ; R7 := R0
 31 [-]: MOVE      R8 R0        ; R8 := R0
 32 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 33 [-]: SETTABLE  R9 K19 R4    ; R9["CHANNEL"] := R4
 34 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 35 [-]: MOVE      R0 R5        ; R0 := R5
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R5 K17       ; R5 := mMovie
 38 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 39 [-]: MOVE      R7 R0        ; R7 := R0
 40 [-]: MOVE      R8 R0        ; R8 := R0
 41 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 42 [-]: MOVE      R0 R5        ; R0 := R5
 43 [-]: RETURN    R0 2         ; return R0
 44 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 2455
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := gMatchingService
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xF0C493C"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x18AAE1E3"]
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: LOADK     R4 K3        ; R4 := "#"
  8 [-]: GETTABLE  R5 R3 K4     ; R5 := R3["mChannelName"]
  9 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: MOVE      R1 R5        ; R1 := R5
 14 [-]: SELF      R5 R2 K5     ; R6 := R2; R5 := R2["0xBCCC7C04"]
 15 [-]: MOVE      R7 R4        ; R7 := R4
 16 [-]: MOVE      R8 R0        ; R8 := R0
 17 [-]: MOVE      R9 R1        ; R9 := R1
 18 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 19 [-]: SELF      R5 R3 K6     ; R6 := R3; R5 := R3["0x3EFDAD47"]
 20 [-]: MOVE      R7 R0        ; R7 := R0
 21 [-]: CALL      R5 3 1       ; R5(R6,R7)
 22 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 2466
; #Upvalues:       4
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: SELF      R5 R5 K0     ; R6 := R5; R5 := R5["0x18AAE1E3"]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: GETGLOBAL R6 K1        ; R6 := gMatchingService
  5 [-]: SELF      R6 R6 K2     ; R7 := R6; R6 := R6["0xF0C493C"]
  6 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  7 [-]: LOADK     R7 K3        ; R7 := "#"
  8 [-]: GETTABLE  R8 R5 K4     ; R8 := R5["mChannelName"]
  9 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: LOADK     R9 K5        ; R9 := ""
 12 [-]: GETTABLE  R10 R5 K6    ; R10 := R5["mChannelType"]
 13 [-]: GETUPVAL  R11 U0       ; R11 := U0
 14 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["CHANNEL_CLAN"]
 15 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 37
 16 [-]: JMP       37           ; PC := 37
 17 [-]: GETUPVAL  R10 U1       ; R10 := U1
 18 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0xD35AC00A"]
 19 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 20 [-]: LOADK     R11 K9       ; R11 := 1
 21 [-]: LEN       R12 R10      ; R12 := # R10
 22 [-]: LOADK     R13 K9       ; R13 := 1
 23 [-]: FORPREP   R11 35       ; R11 -= R13; PC := 35
 24 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 25 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["mDisplayName"]
 26 [-]: EQ        0 R15 R0     ; if R15 ~= R0 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 29 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["mRank"]
 30 [-]: EQ        0 R15 K9     ; if R15 ~= 1 then PC := 70
 31 [-]: JMP       70           ; PC := 70
 32 [-]: MOVE      R8 R0        ; R8 := R0
 33 [-]: LOADK     R9 K12       ; R9 := "/Lotus/Language/Menu/Chat_KickWarlordFromClanError"
 34 [-]: JMP       70           ; PC := 70
 35 [-]: FORLOOP   R11 24       ; R11 += R13; if R11 <= R12 then begin PC := 24; R14 := R11 end
 36 [-]: JMP       70           ; PC := 70
 37 [-]: GETTABLE  R15 R5 K6    ; R15 := R5["mChannelType"]
 38 [-]: GETUPVAL  R16 U0       ; R16 := U0
 39 [-]: GETTABLE  R16 R16 K13  ; R16 := R16["CHANNEL_ALLIANCE"]
 40 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 70
 41 [-]: JMP       70           ; PC := 70
 42 [-]: MOVE      R8 R0        ; R8 := R0
 43 [-]: GETUPVAL  R15 U2       ; R15 := U2
 44 [-]: EQ        1 R15 K14    ; if R15 == nil then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Language/Menu/Chat_KickInProgress"
 47 [-]: JMP       70           ; PC := 70
 48 [-]: GETGLOBAL R15 K16      ; R15 := 0x400E7765
 49 [-]: GETUPVAL  R16 U1       ; R16 := U1
 50 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 51 [-]: TEST      R15 1        ; if R15 then PC := 69
 52 [-]: JMP       69           ; PC := 69
 53 [-]: NEWTABLE  R15 0 6      ; R15 := {}
 54 [-]: SETTABLE  R15 K17 R0   ; R15["Name"] := R0
 55 [-]: SETTABLE  R15 K18 R1   ; R15["Kick"] := R1
 56 [-]: SETTABLE  R15 K19 R2   ; R15["Duration"] := R2
 57 [-]: LOADK     R16 K3       ; R16 := "#"
 58 [-]: GETTABLE  R17 R5 K4    ; R17 := R5["mChannelName"]
 59 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
 60 [-]: SETTABLE  R15 K20 R16  ; R15["ChannelName"] := R16
 61 [-]: SETTABLE  R15 K21 R3   ; R15["Reason"] := R3
 62 [-]: SETTABLE  R15 K22 R4   ; R15["Message"] := R4
 63 [-]: MOVE      R15 R2       ; R15 := R2
 64 [-]: GETUPVAL  R15 U1       ; R15 := U1
 65 [-]: SELF      R15 R15 K23  ; R16 := R15; R15 := R15["0x60CE2BDB"]
 66 [-]: MOVE      R17 R0       ; R17 := R0
 67 [-]: LOADK     R18 K24      ; R18 := "RemoveFromChatPlayerIDResult"
 68 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 69 [-]: RETURN    R0 1         ; return 
 70 [-]: GETUPVAL  R15 U2       ; R15 := U2
 71 [-]: EQ        1 R15 K14    ; if R15 == nil then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Language/Menu/Chat_KickInProgress"
 74 [-]: MOVE      R8 R0        ; R8 := R0
 75 [-]: TEST      R8 0         ; if not R8 then PC := 102
 76 [-]: JMP       102          ; PC := 102
 77 [-]: GETUPVAL  R15 U3       ; R15 := U3
 78 [-]: MOVE      R16 R4       ; R16 := R4
 79 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 80 [-]: MOVE      R4 R15       ; R4 := R15
 81 [-]: EQ        0 R3 K14     ; if R3 ~= nil then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: LOADK     R3 K5        ; R3 := ""
 84 [-]: TEST      R1 0         ; if not R1 then PC := 92
 85 [-]: JMP       92           ; PC := 92
 86 [-]: SELF      R15 R6 K25   ; R16 := R6; R15 := R6["0x1024038"]
 87 [-]: MOVE      R17 R0       ; R17 := R0
 88 [-]: MOVE      R18 R7       ; R18 := R7
 89 [-]: MOVE      R19 R4       ; R19 := R4
 90 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
 91 [-]: JMP       112          ; PC := 112
 92 [-]: SELF      R15 R6 K26   ; R16 := R6; R15 := R6["0x4C72629"]
 93 [-]: MOVE      R17 R0       ; R17 := R0
 94 [-]: MOVE      R18 R7       ; R18 := R7
 95 [-]: MOVE      R19 R2       ; R19 := R2
 96 [-]: GETGLOBAL R20 K27      ; R20 := Engine
 97 [-]: GETTABLE  R20 R20 K28  ; R20 := R20["IrcMgr_BM_CHANNEL"]
 98 [-]: MOVE      R21 R3       ; R21 := R3
 99 [-]: MOVE      R22 R4       ; R22 := R4
100 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
101 [-]: JMP       112          ; PC := 112
102 [-]: EQ        1 R9 K5      ; if R9 == "" then PC := 112
103 [-]: JMP       112          ; PC := 112
104 [-]: GETUPVAL  R15 U0       ; R15 := U0
105 [-]: SELF      R15 R15 K29  ; R16 := R15; R15 := R15["0xAE78D1F"]
106 [-]: GETGLOBAL R17 K30      ; R17 := mMovie
107 [-]: SELF      R17 R17 K31  ; R18 := R17; R17 := R17["0x5DB0BD4"]
108 [-]: MOVE      R19 R9       ; R19 := R9
109 [-]: MOVE      R20 R0       ; R20 := R0
110 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
111 [-]: CALL      R15 0 1      ; R15(R16,...)
112 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 2523
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 20
  7 [-]: JMP       20           ; PC := 20
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["NAME"]
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["KICK"]
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["DURATION"]
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["REASON"]
 17 [-]: GETUPVAL  R6 U1        ; R6 := U1
 18 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["MSG"]
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 2529
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x5DB0BD4"]
  3 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Clan/Chat_ConfirmModeratorKick"
  4 [-]: MOVE      R6 R0        ; R6 := R0
  5 [-]: NEWTABLE  R7 0 1       ; R7 := {}
  6 [-]: SETTABLE  R7 K3 R0     ; R7["NAME"] := R0
  7 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
  8 [-]: TEST      R1 1         ; if R1 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 11 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 12 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Language/Clan/Chat_ConfirmModeratorBan"
 13 [-]: MOVE      R7 R0        ; R7 := R0
 14 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 15 [-]: SETTABLE  R8 K3 R0     ; R8["NAME"] := R0
 16 [-]: SETTABLE  R8 K5 R2     ; R8["DURATION"] := R2
 17 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 18 [-]: MOVE      R3 R4        ; R3 := R4
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x1C988750"]
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: LOADK     R6 K7        ; R6 := "ConfirmModeratorKickBan"
 23 [-]: CALL      R4 3 1       ; R4(R5,R6)
 24 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 2537
; #Upvalues:       5
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 0         ; if not R5 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETUPVAL  R5 U0        ; R5 := U0
 12 [-]: GETTABLE  R0 R5 K1     ; R0 := R5["User"]
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x18AAE1E3"]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: GETGLOBAL R6 K3        ; R6 := gMatchingService
 17 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xF0C493C"]
 18 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 19 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 20 [-]: MOVE      R8 R0        ; R8 := R0
 21 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 22 [-]: TEST      R7 1         ; if R7 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 25 [-]: MOVE      R8 R5        ; R8 := R5
 26 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 27 [-]: TEST      R7 1         ; if R7 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 30 [-]: MOVE      R8 R6        ; R8 := R6
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: TEST      R7 0         ; if not R7 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["mChannelType"]
 36 [-]: GETUPVAL  R8 U1        ; R8 := U1
 37 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["CHANNEL_CLAN"]
 38 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["mChannelType"]
 41 [-]: GETUPVAL  R8 U1        ; R8 := U1
 42 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["CHANNEL_ALLIANCE"]
 43 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 58
 44 [-]: JMP       58           ; PC := 58
 45 [-]: NEWTABLE  R7 0 5       ; R7 := {}
 46 [-]: SETTABLE  R7 K8 R0     ; R7["NAME"] := R0
 47 [-]: SETTABLE  R7 K9 R1     ; R7["KICK"] := R1
 48 [-]: SETTABLE  R7 K10 R2    ; R7["DURATION"] := R2
 49 [-]: SETTABLE  R7 K11 R3    ; R7["REASON"] := R3
 50 [-]: SETTABLE  R7 K12 R4    ; R7["MSG"] := R4
 51 [-]: MOVE      R7 R2        ; R7 := R2
 52 [-]: GETUPVAL  R7 U3        ; R7 := U3
 53 [-]: MOVE      R8 R0        ; R8 := R0
 54 [-]: MOVE      R9 R1        ; R9 := R1
 55 [-]: MOVE      R10 R2       ; R10 := R2
 56 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 57 [-]: RETURN    R0 1         ; return 
 58 [-]: GETUPVAL  R7 U4        ; R7 := U4
 59 [-]: MOVE      R8 R0        ; R8 := R0
 60 [-]: MOVE      R9 R1        ; R9 := R1
 61 [-]: MOVE      R10 R2       ; R10 := R2
 62 [-]: MOVE      R11 R3       ; R11 := R3
 63 [-]: MOVE      R12 R4       ; R12 := R4
 64 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 65 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 2558
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: TEST      R0 1         ; if R0 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xAE78D1F"]
 10 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 11 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 12 [-]: GETUPVAL  R6 U1        ; R6 := U1
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["0xF2E044CB"]
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: LOADNIL   R2 R2        ; R2 := nil
 20 [-]: MOVE      R2 R2        ; R2 := R2
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETGLOBAL R2 K6        ; R2 := 0xD1E7609B
 23 [-]: LOADK     R3 K7        ; R3 := ","
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: GETGLOBAL R3 K8        ; R3 := gPlayerProfileMgr
 27 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x21EF7B1A"]
 28 [-]: LOADK     R5 K10       ; R5 := 0
 29 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 30 [-]: GETGLOBAL R4 K11       ; R4 := 0x400E7765
 31 [-]: MOVE      R5 R3        ; R5 := R3
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 0         ; if not R4 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: LOADNIL   R4 R4        ; R4 := nil
 36 [-]: MOVE      R4 R2        ; R4 := R2
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: SELF      R4 R3 K12    ; R5 := R3; R4 := R3["0x36490118"]
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: GETTABLE  R5 R2 K13    ; R5 := R2[1]
 41 [-]: GETGLOBAL R6 K14       ; R6 := Engine
 42 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0x695D4229"]
 43 [-]: CALL      R6 1 2       ; R6 := R6()
 44 [-]: TEST      R6 0         ; if not R6 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R6 K6        ; R6 := 0xD1E7609B
 47 [-]: LOADK     R7 K16       ; R7 := "_"
 48 [-]: MOVE      R8 R5        ; R8 := R5
 49 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 50 [-]: GETTABLE  R5 R6 K13    ; R5 := R6[1]
 51 [-]: GETGLOBAL R7 K17       ; R7 := gGameConfig
 52 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7["0x902F7420"]
 53 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 54 [-]: LOADK     R8 K19       ; R8 := "getGuildRank.php?"
 55 [-]: MOVE      R9 R4        ; R9 := R4
 56 [-]: LOADK     R10 K20      ; R10 := "&checkeeId="
 57 [-]: MOVE      R11 R5       ; R11 := R5
 58 [-]: CONCAT    R7 R7 R11    ; R7 := R7 .. R8 .. R9 .. R10 .. R11
 59 [-]: GETGLOBAL R8 K14       ; R8 := Engine
 60 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["0xC423D52F"]
 61 [-]: MOVE      R9 R7        ; R9 := R7
 62 [-]: LOADK     R10 K22      ; R10 := ""
 63 [-]: LOADK     R11 K23      ; R11 := "OnGetPlayerGuildRank"
 64 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 65 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 2584
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: TEST      R0 0         ; if not R0 then PC := 59
  2 [-]: JMP       59           ; PC := 59
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETGLOBAL R3 K1        ; R3 := gMatchingService
  7 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0xF0C493C"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 76
 13 [-]: JMP       76           ; PC := 76
 14 [-]: GETUPVAL  R4 U0        ; R4 := U0
 15 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 76
 16 [-]: JMP       76           ; PC := 76
 17 [-]: GETUPVAL  R4 U1        ; R4 := U1
 18 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0x7F6E10CD"]
 19 [-]: MOVE      R5 R2        ; R5 := R2
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 50
 22 [-]: JMP       50           ; PC := 50
 23 [-]: GETUPVAL  R4 U0        ; R4 := U0
 24 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Kick"]
 25 [-]: TEST      R4 0         ; if not R4 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: SELF      R4 R3 K7     ; R5 := R3; R4 := R3["0x1024038"]
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Name"]
 30 [-]: GETUPVAL  R7 U0        ; R7 := U0
 31 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["ChannelName"]
 32 [-]: LOADK     R8 K10       ; R8 := ""
 33 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 34 [-]: JMP       76           ; PC := 76
 35 [-]: SELF      R4 R3 K11    ; R5 := R3; R4 := R3["0x4C72629"]
 36 [-]: GETUPVAL  R6 U0        ; R6 := U0
 37 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Name"]
 38 [-]: GETUPVAL  R7 U0        ; R7 := U0
 39 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["ChannelName"]
 40 [-]: GETUPVAL  R8 U0        ; R8 := U0
 41 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["Duration"]
 42 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 43 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["IrcMgr_BM_CHANNEL"]
 44 [-]: GETUPVAL  R10 U0       ; R10 := U0
 45 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["Reason"]
 46 [-]: GETUPVAL  R11 U0       ; R11 := U0
 47 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["Message"]
 48 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 49 [-]: JMP       76           ; PC := 76
 50 [-]: GETUPVAL  R4 U2        ; R4 := U2
 51 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0xAE78D1F"]
 52 [-]: GETGLOBAL R6 K18       ; R6 := mMovie
 53 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 54 [-]: LOADK     R8 K20       ; R8 := "/Lotus/Language/Menu/Chat_KickWarlordFromClanError"
 55 [-]: MOVE      R9 R0        ; R9 := R0
 56 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 57 [-]: CALL      R4 0 1       ; R4(R5,...)
 58 [-]: JMP       76           ; PC := 76
 59 [-]: GETGLOBAL R4 K21       ; R4 := 0x93B1256B
 60 [-]: LOADK     R5 K22       ; R5 := "FAILURE: "
 61 [-]: MOVE      R6 R1        ; R6 := R1
 62 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 63 [-]: CALL      R4 2 1       ; R4(R5)
 64 [-]: GETUPVAL  R4 U2        ; R4 := U2
 65 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0xAE78D1F"]
 66 [-]: GETGLOBAL R6 K18       ; R6 := mMovie
 67 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 68 [-]: LOADK     R8 K23       ; R8 := "/Lotus/Language/Menu/Chat_CouldntFindGuildIdError"
 69 [-]: MOVE      R9 R0        ; R9 := R0
 70 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 71 [-]: GETUPVAL  R11 U0       ; R11 := U0
 72 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Name"]
 73 [-]: SETTABLE  R10 K24 R11  ; R10["NAME"] := R11
 74 [-]: CALL      R6 5 0       ; R6,... := R6(R7,R8,R9,R10)
 75 [-]: CALL      R4 0 1       ; R4(R5,...)
 76 [-]: LOADNIL   R4 R4        ; R4 := nil
 77 [-]: MOVE      R4 R0        ; R4 := R0
 78 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 2607
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R0 R2 K1     ; R0 := R2["User"]
 13 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
 14 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 16 [-]: LOADK     R5 K5        ; R5 := "_xmouse"
 17 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 18 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 19 [-]: ADD       R2 R2 K6     ; R2 := R2 + 4
 20 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 21 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 22 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 23 [-]: LOADK     R6 K7        ; R6 := "_ymouse"
 24 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 25 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 26 [-]: SUB       R3 R3 K6     ; R3 := R3 - 4
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x7CF71D03"]
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 32 [-]: NEWTABLE  R4 5 0       ; R4 := {}
 33 [-]: LOADK     R5 K9        ; R5 := "Caps"
 34 [-]: LOADK     R6 K10       ; R6 := "Spam"
 35 [-]: LOADK     R7 K11       ; R7 := "Topic"
 36 [-]: LOADK     R8 K12       ; R8 := "Abuse"
 37 [-]: LOADK     R9 K13       ; R9 := "UsePrivateMessages"
 38 [-]: SETLIST   R4 5 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 5
 39 [-]: GETGLOBAL R5 K14       ; R5 := string
 40 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["0x7B782033"]
 41 [-]: MOVE      R6 R1        ; R6 := R1
 42 [-]: LOADK     R7 K16       ; R7 := 1
 43 [-]: LOADK     R8 K16       ; R8 := 1
 44 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 45 [-]: EQ        0 R5 K17     ; if R5 ~= "T" then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETGLOBAL R6 K18       ; R6 := table
 48 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0xE6450C9D"]
 49 [-]: MOVE      R7 R4        ; R7 := R4
 50 [-]: LOADK     R8 K20       ; R8 := "TradeEULA"
 51 [-]: CALL      R6 3 1       ; R6(R7,R8)
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETGLOBAL R6 K18       ; R6 := table
 54 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0xE6450C9D"]
 55 [-]: MOVE      R7 R4        ; R7 := R4
 56 [-]: LOADK     R8 K21       ; R8 := "Trading"
 57 [-]: CALL      R6 3 1       ; R6(R7,R8)
 58 [-]: EQ        1 R5 K22     ; if R5 == "R" then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETGLOBAL R6 K18       ; R6 := table
 61 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0xE6450C9D"]
 62 [-]: MOVE      R7 R4        ; R7 := R4
 63 [-]: LOADK     R8 K23       ; R8 := "Recruiting"
 64 [-]: CALL      R6 3 1       ; R6(R7,R8)
 65 [-]: EQ        1 R5 K24     ; if R5 == "G" then PC := 72
 66 [-]: JMP       72           ; PC := 72
 67 [-]: GETGLOBAL R6 K18       ; R6 := table
 68 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0xE6450C9D"]
 69 [-]: MOVE      R7 R4        ; R7 := R4
 70 [-]: LOADK     R8 K25       ; R8 := "UseRegion"
 71 [-]: CALL      R6 3 1       ; R6(R7,R8)
 72 [-]: GETUPVAL  R6 U1        ; R6 := U1
 73 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6["0xA77DA8EE"]
 74 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 75 [-]: SETTABLE  R8 K27 K28   ; R8["Name"] := "/Lotus/Language/IRC/Silent"
 76 [-]: CLOSURE   R9 0         ; R9 := closure(Function #85.1)
 77 [-]: GETUPVAL  R0 U2        ; R0 := U2
 78 [-]: MOVE      R0 R0        ; R0 := R0
 79 [-]: SETTABLE  R8 K29 R9    ; R8["PressedCallback"] := R9
 80 [-]: MOVE      R9 R1        ; R9 := R1
 81 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 82 [-]: LOADK     R6 K16       ; R6 := 1
 83 [-]: LEN       R7 R4        ; R7 := # R4
 84 [-]: LOADK     R8 K16       ; R8 := 1
 85 [-]: FORPREP   R6 104       ; R6 -= R8; PC := 104
 86 [-]: LOADK     R10 K30      ; R10 := "/Lotus/Language/IRC/"
 87 [-]: GETTABLE  R11 R4 R9    ; R11 := R4[R9]
 88 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 89 [-]: LOADK     R11 K31      ; R11 := "/Lotus/Language/IRC/Flush_"
 90 [-]: GETTABLE  R12 R4 R9    ; R12 := R4[R9]
 91 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 92 [-]: GETUPVAL  R12 U1       ; R12 := U1
 93 [-]: SELF      R12 R12 K26  ; R13 := R12; R12 := R12["0xA77DA8EE"]
 94 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 95 [-]: SETTABLE  R14 K27 R10  ; R14["Name"] := R10
 96 [-]: CLOSURE   R15 1        ; R15 := closure(Function #85.2)
 97 [-]: GETUPVAL  R0 U2        ; R0 := U2
 98 [-]: MOVE      R0 R0        ; R0 := R0
 99 [-]: MOVE      R0 R11       ; R0 := R11
100 [-]: SETTABLE  R14 K29 R15  ; R14["PressedCallback"] := R15
101 [-]: MOVE      R15 R1       ; R15 := R1
102 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
103 [-]: CLOSE     R10          ; SAVE R10,...
104 [-]: FORLOOP   R6 86        ; R6 += R8; if R6 <= R7 then begin PC := 86; R9 := R6 end
105 [-]: GETUPVAL  R10 U3       ; R10 := U3
106 [-]: MOVE      R11 R2       ; R11 := R2
107 [-]: MOVE      R12 R3       ; R12 := R3
108 [-]: CALL      R10 3 1      ; R10(R11,R12)
109 [-]: MOVE      R10 R0       ; R10 := R0
110 [-]: RETURN    R10 2        ; return R10
111 [-]: RETURN    R0 1         ; return 


; Function #85.1:
;
; Name:            
; Defined at line: 2635
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: LOADNIL   R2 R2        ; R2 := nil
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #85.2:
;
; Name:            
; Defined at line: 2640
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETUPVAL  R2 U2        ; R2 := U2
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 2648
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R0 R2 K1     ; R0 := R2["User"]
 13 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
 14 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 16 [-]: LOADK     R5 K5        ; R5 := "_xmouse"
 17 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 18 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 19 [-]: ADD       R2 R2 K6     ; R2 := R2 + 4
 20 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 21 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 22 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 23 [-]: LOADK     R6 K7        ; R6 := "_ymouse"
 24 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 25 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 26 [-]: SUB       R3 R3 K6     ; R3 := R3 - 4
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x7CF71D03"]
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 32 [-]: GETUPVAL  R4 U1        ; R4 := U1
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0xA77DA8EE"]
 34 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 35 [-]: SETTABLE  R6 K10 K11   ; R6["Name"] := "/Lotus/Language/IRC/Silent"
 36 [-]: CLOSURE   R7 0         ; R7 := closure(Function #86.1)
 37 [-]: GETUPVAL  R0 U2        ; R0 := U2
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: SETTABLE  R6 K12 R7    ; R6["PressedCallback"] := R7
 40 [-]: MOVE      R7 R1        ; R7 := R1
 41 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 42 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 43 [-]: LOADK     R5 K13       ; R5 := "Caps"
 44 [-]: LOADK     R6 K14       ; R6 := "Spam"
 45 [-]: LOADK     R7 K15       ; R7 := "Topic"
 46 [-]: LOADK     R8 K16       ; R8 := "UsePrivateMessages"
 47 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 48 [-]: GETGLOBAL R5 K17       ; R5 := string
 49 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["0x7B782033"]
 50 [-]: MOVE      R6 R1        ; R6 := R1
 51 [-]: LOADK     R7 K19       ; R7 := 1
 52 [-]: LOADK     R8 K19       ; R8 := 1
 53 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 54 [-]: EQ        0 R5 K20     ; if R5 ~= "T" then PC := 62
 55 [-]: JMP       62           ; PC := 62
 56 [-]: GETGLOBAL R6 K21       ; R6 := table
 57 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["0xE6450C9D"]
 58 [-]: MOVE      R7 R4        ; R7 := R4
 59 [-]: LOADK     R8 K23       ; R8 := "TradeEULA"
 60 [-]: CALL      R6 3 1       ; R6(R7,R8)
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R6 K21       ; R6 := table
 63 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["0xE6450C9D"]
 64 [-]: MOVE      R7 R4        ; R7 := R4
 65 [-]: LOADK     R8 K24       ; R8 := "Trading"
 66 [-]: CALL      R6 3 1       ; R6(R7,R8)
 67 [-]: EQ        1 R5 K25     ; if R5 == "R" then PC := 74
 68 [-]: JMP       74           ; PC := 74
 69 [-]: GETGLOBAL R6 K21       ; R6 := table
 70 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["0xE6450C9D"]
 71 [-]: MOVE      R7 R4        ; R7 := R4
 72 [-]: LOADK     R8 K26       ; R8 := "Recruiting"
 73 [-]: CALL      R6 3 1       ; R6(R7,R8)
 74 [-]: EQ        1 R5 K27     ; if R5 == "G" then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: GETGLOBAL R6 K21       ; R6 := table
 77 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["0xE6450C9D"]
 78 [-]: MOVE      R7 R4        ; R7 := R4
 79 [-]: LOADK     R8 K28       ; R8 := "UseRegion"
 80 [-]: CALL      R6 3 1       ; R6(R7,R8)
 81 [-]: LOADK     R6 K19       ; R6 := 1
 82 [-]: LEN       R7 R4        ; R7 := # R4
 83 [-]: LOADK     R8 K19       ; R8 := 1
 84 [-]: FORPREP   R6 103       ; R6 -= R8; PC := 103
 85 [-]: LOADK     R10 K29      ; R10 := "/Lotus/Language/IRC/"
 86 [-]: GETTABLE  R11 R4 R9    ; R11 := R4[R9]
 87 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 88 [-]: LOADK     R11 K30      ; R11 := "/Lotus/Language/IRC/Kicked_"
 89 [-]: GETTABLE  R12 R4 R9    ; R12 := R4[R9]
 90 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 91 [-]: GETUPVAL  R12 U1       ; R12 := U1
 92 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12["0xA77DA8EE"]
 93 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 94 [-]: SETTABLE  R14 K10 R10  ; R14["Name"] := R10
 95 [-]: CLOSURE   R15 1        ; R15 := closure(Function #86.2)
 96 [-]: GETUPVAL  R0 U2        ; R0 := U2
 97 [-]: MOVE      R0 R0        ; R0 := R0
 98 [-]: MOVE      R0 R11       ; R0 := R11
 99 [-]: SETTABLE  R14 K12 R15  ; R14["PressedCallback"] := R15
100 [-]: MOVE      R15 R1       ; R15 := R1
101 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
102 [-]: CLOSE     R10          ; SAVE R10,...
103 [-]: FORLOOP   R6 85        ; R6 += R8; if R6 <= R7 then begin PC := 85; R9 := R6 end
104 [-]: GETUPVAL  R10 U3       ; R10 := U3
105 [-]: MOVE      R11 R2       ; R11 := R2
106 [-]: MOVE      R12 R3       ; R12 := R3
107 [-]: CALL      R10 3 1      ; R10(R11,R12)
108 [-]: MOVE      R10 R0       ; R10 := R0
109 [-]: RETURN    R10 2        ; return R10
110 [-]: RETURN    R0 1         ; return 


; Function #86.1:
;
; Name:            
; Defined at line: 2658
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K0        ; R3 := "5m"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #86.2:
;
; Name:            
; Defined at line: 2681
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K0        ; R3 := "5m"
  5 [-]: GETUPVAL  R4 U2        ; R4 := U2
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 2689
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: GETGLOBAL R1 K2        ; R1 := Engine
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x9490FE70"]
 10 [-]: CALL      R1 1 2       ; R1 := R1()
 11 [-]: TEST      R1 0         ; if not R1 then PC := 43
 12 [-]: JMP       43           ; PC := 43
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 14 [-]: GETGLOBAL R2 K4        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SetButtonBarEnabled"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 43
 18 [-]: JMP       43           ; PC := 43
 19 [-]: TEST      R0 0         ; if not R0 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETGLOBAL R1 K4        ; R1 := _T
 22 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD7B51EC3"]
 23 [-]: MOVE      R2 R1        ; R2 := R1
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: JMP       43           ; PC := 43
 26 [-]: GETGLOBAL R1 K4        ; R1 := _T
 27 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD7B51EC3"]
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mVisualMode"]
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 32 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETUPVAL  R2 U1        ; R2 := U1
 35 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mVisualMode"]
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["VISUAL_MODE_MENU_SIMPLE"]
 38 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: MOVE      R2 R0        ; R2 := R0
 41 [-]: MOVE      R2 R1        ; R2 := R1
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mVisualMode"]
 45 [-]: GETUPVAL  R2 U1        ; R2 := U1
 46 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 47 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: MOVE      R1 R0        ; R1 := R0
 50 [-]: MOVE      R1 R1        ; R1 := R1
 51 [-]: MOVE      R0 R2        ; R0 := R2
 52 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 53 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0xDA6F41DE"]
 54 [-]: TESTSET   R4 R0 1      ; if R0 then PC := 57 else R4 := R0
 55 [-]: JMP       57           ; PC := 57
 56 [-]: MOVE      R4 R1        ; R4 := R1
 57 [-]: CALL      R2 3 1       ; R2(R3,R4)
 58 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 59 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x71E8736F"]
 60 [-]: TEST      R0 1         ; if R0 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: MOVE      R4 R1        ; R4 := R1
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R4 R0        ; R4 := R0
 65 [-]: MOVE      R4 R1        ; R4 := R1
 66 [-]: CALL      R2 3 1       ; R2(R3,R4)
 67 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 68 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x1C19D966"]
 69 [-]: LOADK     R4 K13       ; R4 := "_root"
 70 [-]: LOADK     R5 K14       ; R5 := "_alpha"
 71 [-]: GETUPVAL  R6 U3        ; R6 := U3
 72 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xF81722A2"]
 73 [-]: MOVE      R7 R0        ; R7 := R0
 74 [-]: LOADK     R8 K16       ; R8 := 0
 75 [-]: LOADK     R9 K17       ; R9 := 100
 76 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 77 [-]: CALL      R2 0 1       ; R2(R3,...)
 78 [-]: GETUPVAL  R2 U3        ; R2 := U3
 79 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["0xF81722A2"]
 80 [-]: TEST      R0 1         ; if R0 then PC := 97
 81 [-]: JMP       97           ; PC := 97
 82 [-]: GETGLOBAL R3 K2        ; R3 := Engine
 83 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0x9490FE70"]
 84 [-]: CALL      R3 1 2       ; R3 := R3()
 85 [-]: TEST      R3 0         ; if not R3 then PC := 99
 86 [-]: JMP       99           ; PC := 99
 87 [-]: GETGLOBAL R3 K4        ; R3 := _T
 88 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["TopMenuOpen"]
 89 [-]: TEST      R3 0         ; if not R3 then PC := 99
 90 [-]: JMP       99           ; PC := 99
 91 [-]: GETUPVAL  R3 U1        ; R3 := U1
 92 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mVisualMode"]
 93 [-]: GETUPVAL  R4 U1        ; R4 := U1
 94 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VISUAL_MODE_MENU_FULL"]
 95 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R3 R0        ; R3 := R0
 98 [-]: MOVE      R3 R1        ; R3 := R1
 99 [-]: LOADK     R4 K20       ; R4 := 0.60000002384186
100 [-]: LOADK     R5 K16       ; R5 := 0
101 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
102 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
103 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3["0xE7F490E3"]
104 [-]: MOVE      R5 R2        ; R5 := R2
105 [-]: CALL      R3 3 1       ; R3(R4,R5)
106 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 2713
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := gMatchingService
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xF0C493C"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: LOADNIL   R1 R1        ; R1 := nil
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x4C72629"]
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Name"]
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["ChannelName"]
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Duration"]
 19 [-]: GETUPVAL  R6 U0        ; R6 := U0
 20 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Mode"]
 21 [-]: GETUPVAL  R7 U0        ; R7 := U0
 22 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["Reason"]
 23 [-]: GETUPVAL  R8 U0        ; R8 := U0
 24 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["Message"]
 25 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 26 [-]: LOADNIL   R1 R1        ; R1 := nil
 27 [-]: MOVE      R1 R0        ; R1 := R0
 28 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 2725
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 27
  6 [-]: JMP       27           ; PC := 27
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R0 R2 K2     ; R0 := R2["User"]
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xF81722A2"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Reason"]
 18 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Reason"]
 24 [-]: LOADK     R5 K0        ; R5 := ""
 25 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 26 [-]: MOVE      R1 R2        ; R1 := R2
 27 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 0         ; if not R2 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: RETURN    R0 1         ; return 
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETUPVAL  R2 U3        ; R2 := U3
 37 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xAE78D1F"]
 38 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 39 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 40 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/Chat_KickInProgress"
 41 [-]: MOVE      R7 R0        ; R7 := R0
 42 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 43 [-]: CALL      R2 0 1       ; R2(R3,...)
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 46 [-]: GETUPVAL  R3 U4        ; R3 := U4
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: GETUPVAL  R2 U4        ; R2 := U4
 51 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0xA58BB96C"]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETUPVAL  R2 U5        ; R2 := U5
 54 [-]: MOVE      R3 R1        ; R3 := R1
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: GETGLOBAL R2 K7        ; R2 := mMovie
 57 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x5FF274BB"]
 58 [-]: GETGLOBAL R4 K12       ; R4 := 0x7C282057
 59 [-]: GETGLOBAL R5 K13       ; R5 := genericSettingsMovie
 60 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 61 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 62 [-]: MOVE      R2 R4        ; R2 := R4
 63 [-]: GETUPVAL  R2 U4        ; R2 := U4
 64 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x458F27A9"]
 65 [-]: LOADK     R4 K15       ; R4 := "SetTitle"
 66 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 67 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 68 [-]: LOADK     R7 K16       ; R7 := "/Lotus/Language/Menu/Chat_BanPlayer"
 69 [-]: MOVE      R8 R1        ; R8 := R1
 70 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 71 [-]: SETTABLE  R9 K17 R0    ; R9["NAME"] := R0
 72 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 73 [-]: CALL      R2 0 1       ; R2(R3,...)
 74 [-]: GETUPVAL  R2 U4        ; R2 := U4
 75 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x458F27A9"]
 76 [-]: LOADK     R4 K18       ; R4 := "SetConfirmButtonActive"
 77 [-]: LOADK     R5 K19       ; R5 := "true"
 78 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 79 [-]: GETGLOBAL R2 K20       ; R2 := _T
 80 [-]: CLOSURE   R3 0         ; R3 := closure(Function #89.1)
 81 [-]: GETUPVAL  R0 U5        ; R0 := U5
 82 [-]: MOVE      R0 R0        ; R0 := R0
 83 [-]: GETUPVAL  R0 U3        ; R0 := U3
 84 [-]: GETUPVAL  R0 U2        ; R0 := U2
 85 [-]: MOVE      R0 R1        ; R0 := R1
 86 [-]: SETTABLE  R2 K21 R3    ; R2["BanPlayerSettingsDone"] := R3
 87 [-]: GETUPVAL  R2 U4        ; R2 := U4
 88 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x458F27A9"]
 89 [-]: LOADK     R4 K22       ; R4 := "SetCallBack"
 90 [-]: LOADK     R5 K21       ; R5 := "BanPlayerSettingsDone"
 91 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 92 [-]: GETGLOBAL R2 K20       ; R2 := _T
 93 [-]: CLOSURE   R3 1         ; R3 := closure(Function #89.2)
 94 [-]: GETUPVAL  R0 U6        ; R0 := U6
 95 [-]: SETTABLE  R2 K23 R3    ; R2["GetSettings"] := R3
 96 [-]: GETUPVAL  R2 U4        ; R2 := U4
 97 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x458F27A9"]
 98 [-]: LOADK     R4 K24       ; R4 := "SetElementsFunction"
 99 [-]: LOADK     R5 K23       ; R5 := "GetSettings"
100 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
101 [-]: RETURN    R0 1         ; return 


; Function #89.1:
;
; Name:            
; Defined at line: 2751
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["BanPlayerSettingsDone"] := nil
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K3 K2     ; R2["GetSettings"] := nil
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 71
 16 [-]: JMP       71           ; PC := 71
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: EQ        1 R2 K5      ; if R2 == "" then PC := 71
 19 [-]: JMP       71           ; PC := 71
 20 [-]: GETUPVAL  R2 U2        ; R2 := U2
 21 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x18AAE1E3"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K7        ; R3 := gMatchingService
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xF0C493C"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 27 [-]: MOVE      R5 R2        ; R5 := R2
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: TEST      R4 0         ; if not R4 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETTABLE  R4 R2 K9     ; R4 := R2["mChannelType"]
 38 [-]: GETUPVAL  R5 U2        ; R5 := U2
 39 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["CHANNEL_CLAN"]
 40 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETTABLE  R4 R2 K9     ; R4 := R2["mChannelType"]
 43 [-]: GETUPVAL  R5 U2        ; R5 := U2
 44 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["CHANNEL_ALLIANCE"]
 45 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: RETURN    R0 1         ; return 
 48 [-]: GETTABLE  R4 R0 K12    ; R4 := R0[1]
 49 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mValue"]
 50 [-]: GETTABLE  R5 R0 K14    ; R5 := R0[2]
 51 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["mValue"]
 52 [-]: LOADK     R6 K15       ; R6 := "#"
 53 [-]: GETTABLE  R7 R2 K16    ; R7 := R2["mChannelName"]
 54 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 55 [-]: NEWTABLE  R7 0 7       ; R7 := {}
 56 [-]: GETUPVAL  R8 U1        ; R8 := U1
 57 [-]: SETTABLE  R7 K17 R8    ; R7["Name"] := R8
 58 [-]: SETTABLE  R7 K18 K19   ; R7["Kick"] := "0x0"
 59 [-]: SETTABLE  R7 K20 R4    ; R7["Mode"] := R4
 60 [-]: SETTABLE  R7 K21 R5    ; R7["Duration"] := R5
 61 [-]: SETTABLE  R7 K22 R6    ; R7["ChannelName"] := R6
 62 [-]: GETUPVAL  R8 U4        ; R8 := U4
 63 [-]: SETTABLE  R7 K23 R8    ; R7["Reason"] := R8
 64 [-]: SETTABLE  R7 K24 K5    ; R7["Message"] := ""
 65 [-]: MOVE      R7 R3        ; R7 := R3
 66 [-]: GETGLOBAL R7 K25       ; R7 := mMovie
 67 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7["0x458F27A9"]
 68 [-]: LOADK     R9 K27       ; R9 := "BanPlayer"
 69 [-]: LOADK     R10 K5       ; R10 := ""
 70 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 71 [-]: RETURN    R0 1         ; return 


; Function #89.2:
;
; Name:            
; Defined at line: 2786
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: NEWTABLE  R1 0 4       ; R1 := {}
  3 [-]: SETTABLE  R1 K1 K2     ; R1["mLabel"] := "/Lotus/Language/Menu/Chat_BanMenu_Mode"
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["TOGGLE"]
  6 [-]: SETTABLE  R1 K3 R2     ; R1["mType"] := R2
  7 [-]: GETGLOBAL R2 K6        ; R2 := Engine
  8 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["IrcMgr_BM_CHANNEL"]
  9 [-]: SETTABLE  R1 K5 R2     ; R1["mValue"] := R2
 10 [-]: NEWTABLE  R2 3 0       ; R2 := {}
 11 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 12 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 13 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 14 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/Chat_BanOption_Channel"
 15 [-]: MOVE      R7 R0        ; R7 := R0
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: SETTABLE  R3 K1 R4     ; R3["mLabel"] := R4
 18 [-]: GETGLOBAL R4 K6        ; R4 := Engine
 19 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["IrcMgr_BM_CHANNEL"]
 20 [-]: SETTABLE  R3 K5 R4     ; R3["mValue"] := R4
 21 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 22 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 23 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 24 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Language/Menu/Chat_BanOption_Id"
 25 [-]: MOVE      R8 R0        ; R8 := R0
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: SETTABLE  R4 K1 R5     ; R4["mLabel"] := R5
 28 [-]: GETGLOBAL R5 K6        ; R5 := Engine
 29 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["IrcMgr_BM_ID"]
 30 [-]: SETTABLE  R4 K5 R5     ; R4["mValue"] := R5
 31 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 32 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 33 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 34 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/Chat_BanOption_Ip"
 35 [-]: MOVE      R9 R0        ; R9 := R0
 36 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 37 [-]: SETTABLE  R5 K1 R6     ; R5["mLabel"] := R6
 38 [-]: GETGLOBAL R6 K6        ; R6 := Engine
 39 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["IrcMgr_BM_IP"]
 40 [-]: SETTABLE  R5 K5 R6     ; R5["mValue"] := R6
 41 [-]: SETLIST   R2 3 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 3
 42 [-]: SETTABLE  R1 K8 R2     ; R1["mToggleValues"] := R2
 43 [-]: SETTABLE  R0 K0 R1     ; R0[1] := R1
 44 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 45 [-]: SETTABLE  R1 K1 K17    ; R1["mLabel"] := "/Lotus/Language/Menu/Chat_BanMenu_Duration"
 46 [-]: GETUPVAL  R2 U0        ; R2 := U0
 47 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["TOGGLE"]
 48 [-]: SETTABLE  R1 K3 R2     ; R1["mType"] := R2
 49 [-]: SETTABLE  R1 K5 K18    ; R1["mValue"] := "1h"
 50 [-]: NEWTABLE  R2 3 0       ; R2 := {}
 51 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 52 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 53 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 54 [-]: LOADK     R6 K19       ; R6 := "/Lotus/Language/Menu/Chat_BanDuration_1H"
 55 [-]: MOVE      R7 R0        ; R7 := R0
 56 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 57 [-]: SETTABLE  R3 K1 R4     ; R3["mLabel"] := R4
 58 [-]: SETTABLE  R3 K5 K18    ; R3["mValue"] := "1h"
 59 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 60 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 61 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 62 [-]: LOADK     R7 K20       ; R7 := "/Lotus/Language/Menu/Chat_BanDuration_1D"
 63 [-]: MOVE      R8 R0        ; R8 := R0
 64 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 65 [-]: SETTABLE  R4 K1 R5     ; R4["mLabel"] := R5
 66 [-]: SETTABLE  R4 K5 K21    ; R4["mValue"] := "1d"
 67 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 68 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 69 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 70 [-]: LOADK     R8 K22       ; R8 := "/Lotus/Language/Menu/Chat_BanDuration_1W"
 71 [-]: MOVE      R9 R0        ; R9 := R0
 72 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 73 [-]: SETTABLE  R5 K1 R6     ; R5["mLabel"] := R6
 74 [-]: SETTABLE  R5 K5 K23    ; R5["mValue"] := "1w"
 75 [-]: SETLIST   R2 3 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 3
 76 [-]: SETTABLE  R1 K8 R2     ; R1["mToggleValues"] := R2
 77 [-]: SETTABLE  R0 K16 R1    ; R0[2] := R1
 78 [-]: RETURN    R0 2         ; return R0
 79 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 2811
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x7B782033"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := 1
  5 [-]: LOADK     R4 K2        ; R4 := 1
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: EQ        1 R1 K3      ; if R1 == "G" then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: EQ        1 R1 K4      ; if R1 == "R" then PC := 22
 10 [-]: JMP       22           ; PC := 22
 11 [-]: EQ        1 R1 K5      ; if R1 == "T" then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: EQ        1 R1 K6      ; if R1 == "D" then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: EQ        1 R1 K7      ; if R1 == "H" then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: EQ        1 R1 K8      ; if R1 == "O" then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: EQ        1 R1 K9      ; if R1 == "Q" then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 2825
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 10 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["MWC_MELEE"]
 11 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 32
 12 [-]: JMP       32           ; PC := 32
 13 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 14 [-]: GETGLOBAL R5 K3        ; R5 := 0x2C00D429
 15 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Types/Weapon/LotusWeaponBlade"
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x2C00D429
 18 [-]: LOADK     R7 K5        ; R7 := "/Lotus/Types/Weapon/LotusWeaponHilt"
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: GETGLOBAL R7 K3        ; R7 := 0x2C00D429
 21 [-]: LOADK     R8 K6        ; R8 := "/Lotus/Types/Weapon/LotusWeaponWeight"
 22 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 23 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 24 [-]: MOVE      R3 R4        ; R3 := R4
 25 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 26 [-]: GETGLOBAL R5 K7        ; R5 := modularStrikes
 27 [-]: GETGLOBAL R6 K8        ; R6 := modularGrips
 28 [-]: GETGLOBAL R7 K9        ; R7 := modularLinks
 29 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 30 [-]: MOVE      R2 R4        ; R2 := R4
 31 [-]: JMP       135          ; PC := 135
 32 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 33 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["MWC_AMP"]
 34 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 37 [-]: GETGLOBAL R5 K3        ; R5 := 0x2C00D429
 38 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Types/Weapon/LotusWeaponAmpOculus"
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETGLOBAL R6 K3        ; R6 := 0x2C00D429
 41 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Types/Weapon/LotusWeaponAmpCore"
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: GETGLOBAL R7 K3        ; R7 := 0x2C00D429
 44 [-]: LOADK     R8 K13       ; R8 := "/Lotus/Types/Weapon/LotusWeaponAmpBrace"
 45 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 46 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 47 [-]: MOVE      R3 R4        ; R3 := R4
 48 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 49 [-]: GETGLOBAL R5 K14       ; R5 := ampBarrels
 50 [-]: GETGLOBAL R6 K15       ; R6 := ampChasis
 51 [-]: GETGLOBAL R7 K16       ; R7 := ampGrips
 52 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 53 [-]: MOVE      R2 R4        ; R2 := R4
 54 [-]: JMP       135          ; PC := 135
 55 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 56 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["MWC_MOA_PET"]
 57 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 82
 58 [-]: JMP       82           ; PC := 82
 59 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 60 [-]: GETGLOBAL R5 K3        ; R5 := 0x2C00D429
 61 [-]: LOADK     R6 K18       ; R6 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetLeg"
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: GETGLOBAL R6 K3        ; R6 := 0x2C00D429
 64 [-]: LOADK     R7 K19       ; R7 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetHead"
 65 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 66 [-]: GETGLOBAL R7 K3        ; R7 := 0x2C00D429
 67 [-]: LOADK     R8 K20       ; R8 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetEngine"
 68 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 69 [-]: GETGLOBAL R8 K3        ; R8 := 0x2C00D429
 70 [-]: LOADK     R9 K21       ; R9 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetPayload"
 71 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 72 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 73 [-]: MOVE      R3 R4        ; R3 := R4
 74 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 75 [-]: GETGLOBAL R5 K22       ; R5 := modularMoaPetLegs
 76 [-]: GETGLOBAL R6 K23       ; R6 := modularMoaPetHeads
 77 [-]: GETGLOBAL R7 K24       ; R7 := modularMoaPetEngines
 78 [-]: GETGLOBAL R8 K25       ; R8 := modularMoaPetPayloads
 79 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 80 [-]: MOVE      R2 R4        ; R2 := R4
 81 [-]: JMP       135          ; PC := 135
 82 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 83 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["MWC_HOVERBOARD"]
 84 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 109
 85 [-]: JMP       109          ; PC := 109
 86 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 87 [-]: GETGLOBAL R5 K3        ; R5 := 0x2C00D429
 88 [-]: LOADK     R6 K27       ; R6 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardDeck"
 89 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 90 [-]: GETGLOBAL R6 K3        ; R6 := 0x2C00D429
 91 [-]: LOADK     R7 K28       ; R7 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardEngine"
 92 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 93 [-]: GETGLOBAL R7 K3        ; R7 := 0x2C00D429
 94 [-]: LOADK     R8 K29       ; R8 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardFront"
 95 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 96 [-]: GETGLOBAL R8 K3        ; R8 := 0x2C00D429
 97 [-]: LOADK     R9 K30       ; R9 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardJet"
 98 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 99 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
100 [-]: MOVE      R3 R4        ; R3 := R4
101 [-]: NEWTABLE  R4 4 0       ; R4 := {}
102 [-]: GETGLOBAL R5 K31       ; R5 := modularKDriveDecks
103 [-]: GETGLOBAL R6 K32       ; R6 := modularKDriveEngines
104 [-]: GETGLOBAL R7 K33       ; R7 := modularKDriveFronts
105 [-]: GETGLOBAL R8 K34       ; R8 := modularKDriveJets
106 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
107 [-]: MOVE      R2 R4        ; R2 := R4
108 [-]: JMP       135          ; PC := 135
109 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
110 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["MWC_PRIMARY"]
111 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 117
112 [-]: JMP       117          ; PC := 117
113 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
114 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["MWC_SECONDARY"]
115 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 135
116 [-]: JMP       135          ; PC := 135
117 [-]: NEWTABLE  R4 2 0       ; R4 := {}
118 [-]: GETGLOBAL R5 K3        ; R5 := 0x2C00D429
119 [-]: LOADK     R6 K37       ; R6 := "/Lotus/Types/Weapon/LotusGunHandle"
120 [-]: CALL      R5 2 2       ; R5 := R5(R6)
121 [-]: GETGLOBAL R6 K3        ; R6 := 0x2C00D429
122 [-]: LOADK     R7 K38       ; R7 := "/Lotus/Types/Weapon/LotusGunBarrel"
123 [-]: CALL      R6 2 2       ; R6 := R6(R7)
124 [-]: GETGLOBAL R7 K3        ; R7 := 0x2C00D429
125 [-]: LOADK     R8 K39       ; R8 := "/Lotus/Types/Weapon/LotusGunClip"
126 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
127 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
128 [-]: MOVE      R3 R4        ; R3 := R4
129 [-]: NEWTABLE  R4 3 0       ; R4 := {}
130 [-]: GETGLOBAL R5 K40       ; R5 := modularGunHandles
131 [-]: GETGLOBAL R6 K41       ; R6 := modularGunBarrels
132 [-]: GETGLOBAL R7 K42       ; R7 := modularGunClips
133 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
134 [-]: MOVE      R2 R4        ; R2 := R4
135 [-]: NEWTABLE  R4 0 0       ; R4 := {}
136 [-]: LOADK     R5 K43       ; R5 := 1
137 [-]: LEN       R6 R2        ; R6 := # R2
138 [-]: LOADK     R7 K43       ; R7 := 1
139 [-]: FORPREP   R5 202       ; R5 -= R7; PC := 202
140 [-]: LOADNIL   R9 R9        ; R9 := nil
141 [-]: LOADK     R10 K43      ; R10 := 1
142 [-]: GETTABLE  R11 R0 K44   ; R11 := R0["mModularParts"]
143 [-]: LEN       R11 R11      ; R11 := # R11
144 [-]: LOADK     R12 K43      ; R12 := 1
145 [-]: FORPREP   R10 156      ; R10 -= R12; PC := 156
146 [-]: GETTABLE  R14 R0 K44   ; R14 := R0["mModularParts"]
147 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
148 [-]: SELF      R14 R14 K45  ; R15 := R14; R14 := R14["0x8B598ED4"]
149 [-]: GETTABLE  R16 R3 R8    ; R16 := R3[R8]
150 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
151 [-]: TEST      R14 0        ; if not R14 then PC := 156
152 [-]: JMP       156          ; PC := 156
153 [-]: GETTABLE  R14 R0 K44   ; R14 := R0["mModularParts"]
154 [-]: GETTABLE  R9 R14 R13   ; R9 := R14[R13]
155 [-]: JMP       157          ; PC := 157
156 [-]: FORLOOP   R10 146      ; R10 += R12; if R10 <= R11 then begin PC := 146; R13 := R10 end
157 [-]: EQ        0 R9 K46     ; if R9 ~= nil then PC := 171
158 [-]: JMP       171          ; PC := 171
159 [-]: GETGLOBAL R14 K47      ; R14 := 0x93B1256B
160 [-]: LOADK     R15 K48      ; R15 := "ChatRedux::ModularLink: Could not find part of type: "
161 [-]: GETTABLE  R16 R3 R8    ; R16 := R3[R8]
162 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16["0x1B252E3C"]
163 [-]: CALL      R16 2 2      ; R16 := R16(R17)
164 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
165 [-]: CALL      R14 2 1      ; R14(R15)
166 [-]: GETUPVAL  R14 U0       ; R14 := U0
167 [-]: GETTABLE  R14 R14 K50  ; R14 := R14["0xB11F032"]
168 [-]: LOADK     R15 K51      ; R15 := "/Lotus/Language/Menu/Chat_LinkModularWeaponFailed"
169 [-]: CALL      R14 2 1      ; R14(R15)
170 [-]: RETURN    R0 1         ; return 
171 [-]: GETTABLE  R14 R2 R8    ; R14 := R2[R8]
172 [-]: LOADNIL   R15 R15      ; R15 := nil
173 [-]: LOADK     R16 K43      ; R16 := 1
174 [-]: LEN       R17 R14      ; R17 := # R14
175 [-]: LOADK     R18 K43      ; R18 := 1
176 [-]: FORPREP   R16 182      ; R16 -= R18; PC := 182
177 [-]: GETTABLE  R20 R14 R19  ; R20 := R14[R19]
178 [-]: EQ        0 R9 R20     ; if R9 ~= R20 then PC := 182
179 [-]: JMP       182          ; PC := 182
180 [-]: SUB       R15 R19 K43  ; R15 := R19 - 1
181 [-]: JMP       183          ; PC := 183
182 [-]: FORLOOP   R16 177      ; R16 += R18; if R16 <= R17 then begin PC := 177; R19 := R16 end
183 [-]: EQ        0 R15 K46    ; if R15 ~= nil then PC := 197
184 [-]: JMP       197          ; PC := 197
185 [-]: GETGLOBAL R20 K47      ; R20 := 0x93B1256B
186 [-]: LOADK     R21 K52      ; R21 := "ChatRedux::ModularLink: Could not find: "
187 [-]: SELF      R22 R9 K49   ; R23 := R9; R22 := R9["0x1B252E3C"]
188 [-]: CALL      R22 2 2      ; R22 := R22(R23)
189 [-]: LOADK     R23 K53      ; R23 := " in part tables"
190 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
191 [-]: CALL      R20 2 1      ; R20(R21)
192 [-]: GETUPVAL  R20 U0       ; R20 := U0
193 [-]: GETTABLE  R20 R20 K50  ; R20 := R20["0xB11F032"]
194 [-]: LOADK     R21 K51      ; R21 := "/Lotus/Language/Menu/Chat_LinkModularWeaponFailed"
195 [-]: CALL      R20 2 1      ; R20(R21)
196 [-]: RETURN    R0 1         ; return 
197 [-]: GETGLOBAL R20 K54      ; R20 := table
198 [-]: GETTABLE  R20 R20 K55  ; R20 := R20["0xE6450C9D"]
199 [-]: MOVE      R21 R4       ; R21 := R4
200 [-]: MOVE      R22 R15      ; R22 := R15
201 [-]: CALL      R20 3 1      ; R20(R21,R22)
202 [-]: FORLOOP   R5 140       ; R5 += R7; if R5 <= R6 then begin PC := 140; R8 := R5 end
203 [-]: RETURN    R4 2         ; return R4
204 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 2892
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MWC_MOA_PET"]
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MWC_HOVERBOARD"]
  7 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R1 K3        ; R1 := 4
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: LOADK     R1 K4        ; R1 := 3
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 2900
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R2 3 0       ; R2 := {}
  2 [-]: GETGLOBAL R3 K0        ; R3 := modularStrikes
  3 [-]: GETGLOBAL R4 K1        ; R4 := modularGrips
  4 [-]: GETGLOBAL R5 K2        ; R5 := modularLinks
  5 [-]: SETLIST   R2 3 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 3
  6 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["MWC_MOA_PET"]
  8 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: NEWTABLE  R3 4 0       ; R3 := {}
 11 [-]: GETGLOBAL R4 K5        ; R4 := modularMoaPetLegs
 12 [-]: GETGLOBAL R5 K6        ; R5 := modularMoaPetHeads
 13 [-]: GETGLOBAL R6 K7        ; R6 := modularMoaPetEngines
 14 [-]: GETGLOBAL R7 K8        ; R7 := modularMoaPetPayloads
 15 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
 16 [-]: MOVE      R2 R3        ; R2 := R3
 17 [-]: JMP       55           ; PC := 55
 18 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
 19 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["MWC_HOVERBOARD"]
 20 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: NEWTABLE  R3 4 0       ; R3 := {}
 23 [-]: GETGLOBAL R4 K10       ; R4 := modularKDriveDecks
 24 [-]: GETGLOBAL R5 K11       ; R5 := modularKDriveEngines
 25 [-]: GETGLOBAL R6 K12       ; R6 := modularKDriveFronts
 26 [-]: GETGLOBAL R7 K13       ; R7 := modularKDriveJets
 27 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
 28 [-]: MOVE      R2 R3        ; R2 := R3
 29 [-]: JMP       55           ; PC := 55
 30 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
 31 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["MWC_AMP"]
 32 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: NEWTABLE  R3 3 0       ; R3 := {}
 35 [-]: GETGLOBAL R4 K15       ; R4 := ampBarrels
 36 [-]: GETGLOBAL R5 K16       ; R5 := ampChasis
 37 [-]: GETGLOBAL R6 K17       ; R6 := ampGrips
 38 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
 39 [-]: MOVE      R2 R3        ; R2 := R3
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
 42 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["MWC_PRIMARY"]
 43 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
 46 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["MWC_SECONDARY"]
 47 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: NEWTABLE  R3 3 0       ; R3 := {}
 50 [-]: GETGLOBAL R4 K20       ; R4 := modularGunHandles
 51 [-]: GETGLOBAL R5 K21       ; R5 := modularGunBarrels
 52 [-]: GETGLOBAL R6 K22       ; R6 := modularGunClips
 53 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
 54 [-]: MOVE      R2 R3        ; R2 := R3
 55 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 56 [-]: SETTABLE  R3 K23 K24   ; R3["Gild"] := "0x0"
 57 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 58 [-]: SETTABLE  R3 K25 R4    ; R3["Parts"] := R4
 59 [-]: LEN       R4 R0        ; R4 := # R0
 60 [-]: GETUPVAL  R5 U0        ; R5 := U0
 61 [-]: MOVE      R6 R1        ; R6 := R1
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETGLOBAL R4 K26       ; R4 := 0x93B1256B
 66 [-]: LOADK     R5 K27       ; R5 := "ChatRedux::ModularLink: DecodeModularWeapon did not return the correct number of parts."
 67 [-]: CALL      R4 2 1       ; R4(R5)
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: GETGLOBAL R4 K28       ; R4 := 0xF595ADDE
 70 [-]: GETTABLE  R5 R0 K29    ; R5 := R0[1]
 71 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 72 [-]: EQ        1 R4 K29     ; if R4 == 1 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: MOVE      R4 R0        ; R4 := R0
 75 [-]: MOVE      R4 R1        ; R4 := R1
 76 [-]: SETTABLE  R3 K23 R4    ; R3["Gild"] := R4
 77 [-]: LOADK     R4 K29       ; R4 := 1
 78 [-]: LEN       R5 R2        ; R5 := # R2
 79 [-]: LOADK     R6 K29       ; R6 := 1
 80 [-]: FORPREP   R4 101       ; R4 -= R6; PC := 101
 81 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 82 [-]: GETGLOBAL R9 K28       ; R9 := 0xF595ADDE
 83 [-]: ADD       R10 R7 K29   ; R10 := R7 + 1
 84 [-]: GETTABLE  R10 R0 R10   ; R10 := R0[R10]
 85 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 86 [-]: EQ        1 R9 K30     ; if R9 == nil then PC := 91
 87 [-]: JMP       91           ; PC := 91
 88 [-]: LEN       R10 R8       ; R10 := # R8
 89 [-]: LE        0 R10 R9     ; if R10 > R9 then PC := 95
 90 [-]: JMP       95           ; PC := 95
 91 [-]: GETGLOBAL R10 K26      ; R10 := 0x93B1256B
 92 [-]: LOADK     R11 K31      ; R11 := "ChatRedux::ModularLink: Index could not be found in part table."
 93 [-]: CALL      R10 2 1      ; R10(R11)
 94 [-]: RETURN    R0 1         ; return 
 95 [-]: GETGLOBAL R10 K32      ; R10 := table
 96 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["0xE6450C9D"]
 97 [-]: GETTABLE  R11 R3 K25   ; R11 := R3["Parts"]
 98 [-]: ADD       R12 R9 K29   ; R12 := R9 + 1
 99 [-]: GETTABLE  R12 R8 R12   ; R12 := R8[R12]
100 [-]: CALL      R10 3 1      ; R10(R11,R12)
101 [-]: FORLOOP   R4 81        ; R4 += R6; if R4 <= R5 then begin PC := 81; R7 := R4 end
102 [-]: RETURN    R3 2         ; return R3
103 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 2938
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["AppearanceStoredItem"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xB5CC9D31"]
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["AppearanceStoredItem"]
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["StoredItem"]
 13 [-]: GETGLOBAL R2 K1        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["AppearanceStoredItem"]
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LoadOutType"]
 16 [-]: GETGLOBAL R3 K1        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AppearanceStoredItem"]
 18 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["LoadOutSlot"]
 19 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 20 [-]: TEST      R0 1         ; if R0 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: SETTABLE  R1 K7 R0     ; R1["CachedAppearanceLink"] := R0
 25 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x6B7B470B"]
 27 [-]: LOADK     R3 K10       ; R3 := "Window.SendMessageBar.MessageBox"
 28 [-]: LOADK     R4 K11       ; R4 := "text"
 29 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 30 [-]: GETGLOBAL R2 K8        ; R2 := mMovie
 31 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 32 [-]: GETUPVAL  R4 U2        ; R4 := U2
 33 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["APPEARANCE_STRING_LOC"]
 34 [-]: MOVE      R5 R0        ; R5 := R0
 35 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 36 [-]: GETGLOBAL R3 K14       ; R3 := string
 37 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["0xDE44F664"]
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: LOADK     R5 K16       ; R5 := "%["
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: LOADK     R7 K17       ; R7 := "%]"
 42 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 43 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 44 [-]: TEST      R3 1         ; if R3 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: LOADK     R4 K18       ; R4 := " ["
 48 [-]: MOVE      R5 R2        ; R5 := R2
 49 [-]: LOADK     R6 K19       ; R6 := "]"
 50 [-]: CONCAT    R1 R3 R6     ; R1 := R3 .. R4 .. R5 .. R6
 51 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 52 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0xD6A79FE9"]
 53 [-]: LOADK     R5 K10       ; R5 := "Window.SendMessageBar.MessageBox"
 54 [-]: LOADK     R6 K11       ; R6 := "text"
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K1        ; R3 := _T
 58 [-]: SETTABLE  R3 K2 K21    ; R3["AppearanceStoredItem"] := nil
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["0x25992394"]
 61 [-]: GETGLOBAL R4 K23       ; R4 := _G
 62 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["UISound_Select"]
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETUPVAL  R3 U4        ; R3 := U4
 65 [-]: CALL      R3 1 2       ; R3 := R3()
 66 [-]: TEST      R3 0         ; if not R3 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: GETUPVAL  R3 U5        ; R3 := U5
 69 [-]: CALL      R3 1 1       ; R3()
 70 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 2965
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ModConfigStoredItem"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xC0D126DC"]
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ModConfigStoredItem"]
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["StoredItem"]
 13 [-]: GETGLOBAL R2 K1        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["ModConfigStoredItem"]
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LoadOutType"]
 16 [-]: GETGLOBAL R3 K1        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["ModConfigStoredItem"]
 18 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["LoadOutSlot"]
 19 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 20 [-]: TEST      R0 1         ; if R0 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: SETTABLE  R1 K7 R0     ; R1["CachedModConfigLink"] := R0
 25 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x6B7B470B"]
 27 [-]: LOADK     R3 K10       ; R3 := "Window.SendMessageBar.MessageBox"
 28 [-]: LOADK     R4 K11       ; R4 := "text"
 29 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 30 [-]: GETGLOBAL R2 K8        ; R2 := mMovie
 31 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 32 [-]: GETUPVAL  R4 U2        ; R4 := U2
 33 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["MOD_CONFIG_STRING_LOC"]
 34 [-]: MOVE      R5 R0        ; R5 := R0
 35 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 36 [-]: GETGLOBAL R3 K14       ; R3 := string
 37 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["0xDE44F664"]
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: LOADK     R5 K16       ; R5 := "%["
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: LOADK     R7 K17       ; R7 := "%]"
 42 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 43 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 44 [-]: TEST      R3 1         ; if R3 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: LOADK     R4 K18       ; R4 := " ["
 48 [-]: MOVE      R5 R2        ; R5 := R2
 49 [-]: LOADK     R6 K19       ; R6 := "]"
 50 [-]: CONCAT    R1 R3 R6     ; R1 := R3 .. R4 .. R5 .. R6
 51 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 52 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0xD6A79FE9"]
 53 [-]: LOADK     R5 K10       ; R5 := "Window.SendMessageBar.MessageBox"
 54 [-]: LOADK     R6 K11       ; R6 := "text"
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K1        ; R3 := _T
 58 [-]: SETTABLE  R3 K2 K21    ; R3["ModConfigStoredItem"] := nil
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["0x25992394"]
 61 [-]: GETGLOBAL R4 K23       ; R4 := _G
 62 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["UISound_Select"]
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETUPVAL  R3 U4        ; R3 := U4
 65 [-]: CALL      R3 1 2       ; R3 := R3()
 66 [-]: TEST      R3 0         ; if not R3 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: GETUPVAL  R3 U5        ; R3 := U5
 69 [-]: CALL      R3 1 1       ; R3()
 70 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 2992
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _G
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["RecordedSong"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: LOADK     R1 K4        ; R1 := "SHZN-"
 10 [-]: GETGLOBAL R2 K1        ; R2 := _G
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["RecordedSong"]
 12 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 13 [-]: SETTABLE  R0 K3 R1     ; R0["CachedShawzinLink"] := R1
 14 [-]: GETGLOBAL R0 K5        ; R0 := mMovie
 15 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x6B7B470B"]
 16 [-]: LOADK     R2 K7        ; R2 := "Window.SendMessageBar.MessageBox"
 17 [-]: LOADK     R3 K8        ; R3 := "text"
 18 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 19 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 20 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["SHAWZIN_STRING_LOC"]
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 25 [-]: GETGLOBAL R2 K11       ; R2 := string
 26 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xDE44F664"]
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: LOADK     R4 K13       ; R4 := "%["
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: LOADK     R6 K14       ; R6 := "%]"
 31 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 32 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 33 [-]: TEST      R2 1         ; if R2 then PC := 46
 34 [-]: JMP       46           ; PC := 46
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: LOADK     R3 K15       ; R3 := " ["
 37 [-]: MOVE      R4 R1        ; R4 := R1
 38 [-]: LOADK     R5 K16       ; R5 := "]"
 39 [-]: CONCAT    R0 R2 R5     ; R0 := R2 .. R3 .. R4 .. R5
 40 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 41 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0xD6A79FE9"]
 42 [-]: LOADK     R4 K7        ; R4 := "Window.SendMessageBar.MessageBox"
 43 [-]: LOADK     R5 K8        ; R5 := "text"
 44 [-]: MOVE      R6 R0        ; R6 := R0
 45 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 46 [-]: GETUPVAL  R2 U2        ; R2 := U2
 47 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x25992394"]
 48 [-]: GETGLOBAL R3 K1        ; R3 := _G
 49 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["UISound_Select"]
 50 [-]: CALL      R2 2 1       ; R2(R3)
 51 [-]: GETUPVAL  R2 U3        ; R2 := U3
 52 [-]: CALL      R2 1 2       ; R2 := R2()
 53 [-]: TEST      R2 0         ; if not R2 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: GETUPVAL  R2 U4        ; R2 := U4
 56 [-]: CALL      R2 1 1       ; R2()
 57 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3013
; #Upvalues:       56
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  2 [-]: SETTABLE  R5 K0 K1     ; R5["MESSAGE_TYPE_INVALID"] := -1
  3 [-]: SETTABLE  R5 K2 K3     ; R5["MESSAGE_TYPE_REGION"] := 0
  4 [-]: SETTABLE  R5 K4 K5     ; R5["MESSAGE_TYPE_CLAN"] := 1
  5 [-]: SETTABLE  R5 K6 K7     ; R5["MESSAGE_TYPE_SQUAD"] := 2
  6 [-]: SETTABLE  R5 K8 K9     ; R5["MESSAGE_TYPE_TRADE"] := 3
  7 [-]: SETTABLE  R5 K10 K11   ; R5["MESSAGE_TYPE_HUB"] := 4
  8 [-]: SETTABLE  R5 K12 K13   ; R5["MESSAGE_TYPE_JOIN_CHANNEL"] := 5
  9 [-]: SETTABLE  R5 K14 K15   ; R5["MESSAGE_TYPE_LEAVE_CHANNEL"] := 6
 10 [-]: SETTABLE  R5 K16 K17   ; R5["MESSAGE_TYPE_COUNCIL"] := 7
 11 [-]: SETTABLE  R5 K18 K19   ; R5["MESSAGE_TYPE_SYSTEM"] := 8
 12 [-]: SETTABLE  R5 K20 K21   ; R5["MESSAGE_TYPE_BROADCAST"] := 9
 13 [-]: SETTABLE  R5 K22 K23   ; R5["MESSAGE_TYPE_RECRUITING"] := 10
 14 [-]: SETTABLE  R5 K24 K25   ; R5["MESSAGE_TYPE_ALLIANCE"] := 11
 15 [-]: SETTABLE  R5 K26 K27   ; R5["MESSAGE_TYPE_FRIEND"] := 12
 16 [-]: SETTABLE  R5 K28 K29   ; R5["MESSAGE_TYPE_INGAME_WHISPER"] := 13
 17 [-]: SETTABLE  R5 K30 K31   ; R5["MESSAGE_TYPE_NOTIFICATION"] := 14
 18 [-]: SETTABLE  R5 K32 K33   ; R5["MESSAGE_TYPE_STAFF"] := 15
 19 [-]: SETTABLE  R5 K34 K35   ; R5["MESSAGE_TYPE_CY_MOD"] := 16
 20 [-]: SETTABLE  R5 K36 R0    ; R5["mParent"] := R0
 21 [-]: SETTABLE  R5 K37 K38   ; R5["mIsActive"] := "0x0"
 22 [-]: SETTABLE  R5 K39 R4    ; R5["mIsChatEnabled"] := R4
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["CHANNEL_GLOBAL"]
 25 [-]: EQ        1 R2 R6      ; if R2 == R6 then PC := 39
 26 [-]: JMP       39           ; PC := 39
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["CHANNEL_RECRUITING"]
 29 [-]: EQ        1 R2 R6      ; if R2 == R6 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["CHANNEL_TRADE"]
 33 [-]: EQ        1 R2 R6      ; if R2 == R6 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETUPVAL  R6 U0        ; R6 := U0
 36 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["CHANNEL_QA"]
 37 [-]: EQ        0 R2 R6      ; if R2 ~= R6 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: MOVE      R6 R0        ; R6 := R0
 40 [-]: MOVE      R6 R1        ; R6 := R1
 41 [-]: SETTABLE  R5 K40 R6    ; R5["mIsFlashingEnabled"] := R6
 42 [-]: SETTABLE  R5 K45 K38   ; R5["mCanFlash"] := "0x0"
 43 [-]: GETGLOBAL R6 K46       ; R6 := string
 44 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["0x633C4246"]
 45 [-]: MOVE      R7 R1        ; R7 := R1
 46 [-]: LOADK     R8 K48       ; R8 := "#"
 47 [-]: LOADK     R9 K49       ; R9 := ""
 48 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 49 [-]: MOVE      R1 R6        ; R1 := R6
 50 [-]: SETTABLE  R5 K50 R3    ; R5["mFriendlyName"] := R3
 51 [-]: SETTABLE  R5 K51 R1    ; R5["mChannelName"] := R1
 52 [-]: SETTABLE  R5 K52 R1    ; R5["mClipName"] := R1
 53 [-]: GETTABLE  R6 R0 K52    ; R6 := R0["mClipName"]
 54 [-]: LOADK     R7 K54       ; R7 := ".TabbedChatPanel"
 55 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 56 [-]: SETTABLE  R5 K53 R6    ; R5["mClipTemplate"] := R6
 57 [-]: GETTABLE  R6 R5 K53    ; R6 := R5["mClipTemplate"]
 58 [-]: SETTABLE  R5 K55 R6    ; R5["mClipPath"] := R6
 59 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 60 [-]: SETTABLE  R5 K56 R6    ; R5["mUserList"] := R6
 61 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 62 [-]: SETTABLE  R5 K57 R6    ; R5["mChatHistory"] := R6
 63 [-]: SETTABLE  R5 K58 K38   ; R5["mHasHyperlink"] := "0x0"
 64 [-]: SETTABLE  R5 K59 K3    ; R5["mRegularMessageCount"] := 0
 65 [-]: SETTABLE  R5 K60 K3    ; R5["mMaxVisibleChatLines"] := 0
 66 [-]: SETTABLE  R5 K61 K62   ; R5["mMaxChatHistory"] := 200
 67 [-]: SETTABLE  R5 K63 K64   ; R5["mTextScroll"] := nil
 68 [-]: SETTABLE  R5 K65 K3    ; R5["mScrollBack"] := 0
 69 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 70 [-]: SETTABLE  R5 K66 R6    ; R5["mCachedLines"] := R6
 71 [-]: SETTABLE  R5 K67 K3    ; R5["mChannelType"] := 0
 72 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 73 [-]: SETTABLE  R5 K68 R6    ; R5["mLastMessageData"] := R6
 74 [-]: SETTABLE  R5 K69 K64   ; R5["mSpamBlockTime"] := nil
 75 [-]: SETTABLE  R5 K70 K64   ; R5["mStoredFocusIndex"] := nil
 76 [-]: SETTABLE  R5 K71 K64   ; R5["mPreviousPresState"] := nil
 77 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 78 [-]: SETTABLE  R5 K72 R6    ; R5["mAlphabetIndex"] := R6
 79 [-]: CLOSURE   R6 0         ; R6 := closure(Function #97.1)
 80 [-]: SETTABLE  R5 K73 R6    ; R5["ClearHistory"] := R6
 81 [-]: CLOSURE   R6 1         ; R6 := closure(Function #97.2)
 82 [-]: GETUPVAL  R0 U0        ; R0 := U0
 83 [-]: GETUPVAL  R0 U1        ; R0 := U1
 84 [-]: GETUPVAL  R0 U2        ; R0 := U2
 85 [-]: GETUPVAL  R0 U3        ; R0 := U3
 86 [-]: SETTABLE  R5 K74 R6    ; R5["PopulateFilterList"] := R6
 87 [-]: CLOSURE   R6 2         ; R6 := closure(Function #97.3)
 88 [-]: MOVE      R0 R2        ; R0 := R2
 89 [-]: GETUPVAL  R0 U4        ; R0 := U4
 90 [-]: GETUPVAL  R0 U0        ; R0 := U0
 91 [-]: GETUPVAL  R0 U3        ; R0 := U3
 92 [-]: SETTABLE  R5 K75 R6    ; R5["Initialize"] := R6
 93 [-]: CLOSURE   R6 3         ; R6 := closure(Function #97.4)
 94 [-]: SETTABLE  R5 K76 R6    ; R5["Update"] := R6
 95 [-]: CLOSURE   R6 4         ; R6 := closure(Function #97.5)
 96 [-]: GETUPVAL  R0 U5        ; R0 := U5
 97 [-]: GETUPVAL  R0 U3        ; R0 := U3
 98 [-]: GETUPVAL  R0 U2        ; R0 := U2
 99 [-]: GETUPVAL  R0 U6        ; R0 := U6
100 [-]: GETUPVAL  R0 U7        ; R0 := U7
101 [-]: GETUPVAL  R0 U8        ; R0 := U8
102 [-]: GETUPVAL  R0 U9        ; R0 := U9
103 [-]: GETUPVAL  R0 U10       ; R0 := U10
104 [-]: GETUPVAL  R0 U11       ; R0 := U11
105 [-]: GETUPVAL  R0 U12       ; R0 := U12
106 [-]: GETUPVAL  R0 U13       ; R0 := U13
107 [-]: GETUPVAL  R0 U14       ; R0 := U14
108 [-]: GETUPVAL  R0 U15       ; R0 := U15
109 [-]: GETUPVAL  R0 U16       ; R0 := U16
110 [-]: GETUPVAL  R0 U17       ; R0 := U17
111 [-]: GETUPVAL  R0 U18       ; R0 := U18
112 [-]: GETUPVAL  R0 U19       ; R0 := U19
113 [-]: GETUPVAL  R0 U20       ; R0 := U20
114 [-]: GETUPVAL  R0 U21       ; R0 := U21
115 [-]: GETUPVAL  R0 U22       ; R0 := U22
116 [-]: GETUPVAL  R0 U23       ; R0 := U23
117 [-]: GETUPVAL  R0 U24       ; R0 := U24
118 [-]: GETUPVAL  R0 U25       ; R0 := U25
119 [-]: GETUPVAL  R0 U0        ; R0 := U0
120 [-]: GETUPVAL  R0 U26       ; R0 := U26
121 [-]: GETUPVAL  R0 U27       ; R0 := U27
122 [-]: GETUPVAL  R0 U28       ; R0 := U28
123 [-]: GETUPVAL  R0 U29       ; R0 := U29
124 [-]: GETUPVAL  R0 U30       ; R0 := U30
125 [-]: GETUPVAL  R0 U31       ; R0 := U31
126 [-]: GETUPVAL  R0 U32       ; R0 := U32
127 [-]: GETUPVAL  R0 U33       ; R0 := U33
128 [-]: GETUPVAL  R0 U34       ; R0 := U34
129 [-]: GETUPVAL  R0 U35       ; R0 := U35
130 [-]: GETUPVAL  R0 U36       ; R0 := U36
131 [-]: GETUPVAL  R0 U37       ; R0 := U37
132 [-]: GETUPVAL  R0 U38       ; R0 := U38
133 [-]: GETUPVAL  R0 U39       ; R0 := U39
134 [-]: GETUPVAL  R0 U40       ; R0 := U40
135 [-]: GETUPVAL  R0 U41       ; R0 := U41
136 [-]: SETTABLE  R5 K77 R6    ; R5["OnMessageSent"] := R6
137 [-]: CLOSURE   R6 5         ; R6 := closure(Function #97.6)
138 [-]: GETUPVAL  R0 U3        ; R0 := U3
139 [-]: GETUPVAL  R0 U7        ; R0 := U7
140 [-]: GETUPVAL  R0 U0        ; R0 := U0
141 [-]: SETTABLE  R5 K78 R6    ; R5["DisplaySpamMessage"] := R6
142 [-]: CLOSURE   R6 6         ; R6 := closure(Function #97.7)
143 [-]: SETTABLE  R5 K79 R6    ; R5["_makeUserEntry"] := R6
144 [-]: CLOSURE   R6 7         ; R6 := closure(Function #97.8)
145 [-]: GETUPVAL  R0 U31       ; R0 := U31
146 [-]: GETUPVAL  R0 U33       ; R0 := U33
147 [-]: SETTABLE  R5 K80 R6    ; R5["OnUserInChannelCommon"] := R6
148 [-]: CLOSURE   R6 8         ; R6 := closure(Function #97.9)
149 [-]: GETUPVAL  R0 U0        ; R0 := U0
150 [-]: GETUPVAL  R0 U42       ; R0 := U42
151 [-]: GETUPVAL  R0 U43       ; R0 := U43
152 [-]: GETUPVAL  R0 U31       ; R0 := U31
153 [-]: GETUPVAL  R0 U33       ; R0 := U33
154 [-]: SETTABLE  R5 K81 R6    ; R5["PopulateUserList"] := R6
155 [-]: CLOSURE   R6 9         ; R6 := closure(Function #97.10)
156 [-]: SETTABLE  R5 K82 R6    ; R5["OnUserJoin"] := R6
157 [-]: CLOSURE   R6 10        ; R6 := closure(Function #97.11)
158 [-]: GETUPVAL  R0 U0        ; R0 := U0
159 [-]: SETTABLE  R5 K83 R6    ; R5["OnUserLeave"] := R6
160 [-]: CLOSURE   R6 11        ; R6 := closure(Function #97.12)
161 [-]: GETUPVAL  R0 U44       ; R0 := U44
162 [-]: GETUPVAL  R0 U0        ; R0 := U0
163 [-]: SETTABLE  R5 K84 R6    ; R5["_getLineVars"] := R6
164 [-]: CLOSURE   R6 12        ; R6 := closure(Function #97.13)
165 [-]: GETUPVAL  R0 U2        ; R0 := U2
166 [-]: GETUPVAL  R0 U45       ; R0 := U45
167 [-]: GETUPVAL  R0 U46       ; R0 := U46
168 [-]: GETUPVAL  R0 U0        ; R0 := U0
169 [-]: GETUPVAL  R0 U3        ; R0 := U3
170 [-]: GETUPVAL  R0 U47       ; R0 := U47
171 [-]: GETUPVAL  R0 U28       ; R0 := U28
172 [-]: SETTABLE  R5 K85 R6    ; R5["_makeLineEntry"] := R6
173 [-]: CLOSURE   R6 13        ; R6 := closure(Function #97.14)
174 [-]: GETUPVAL  R0 U48       ; R0 := U48
175 [-]: GETUPVAL  R0 U3        ; R0 := U3
176 [-]: GETUPVAL  R0 U49       ; R0 := U49
177 [-]: GETUPVAL  R0 U45       ; R0 := U45
178 [-]: GETUPVAL  R0 U50       ; R0 := U50
179 [-]: SETTABLE  R5 K86 R6    ; R5["RefreshText"] := R6
180 [-]: CLOSURE   R6 14        ; R6 := closure(Function #97.15)
181 [-]: GETUPVAL  R0 U0        ; R0 := U0
182 [-]: SETTABLE  R5 K87 R6    ; R5["OnDeactivated"] := R6
183 [-]: CLOSURE   R6 15        ; R6 := closure(Function #97.16)
184 [-]: GETUPVAL  R0 U42       ; R0 := U42
185 [-]: GETUPVAL  R0 U0        ; R0 := U0
186 [-]: SETTABLE  R5 K88 R6    ; R5["OnActivated"] := R6
187 [-]: CLOSURE   R6 16        ; R6 := closure(Function #97.17)
188 [-]: SETTABLE  R5 K89 R6    ; R5["_removeUserMsgs"] := R6
189 [-]: CLOSURE   R6 17        ; R6 := closure(Function #97.18)
190 [-]: GETUPVAL  R0 U42       ; R0 := U42
191 [-]: GETUPVAL  R0 U51       ; R0 := U51
192 [-]: GETUPVAL  R0 U52       ; R0 := U52
193 [-]: GETUPVAL  R0 U3        ; R0 := U3
194 [-]: GETUPVAL  R0 U49       ; R0 := U49
195 [-]: GETUPVAL  R0 U48       ; R0 := U48
196 [-]: SETTABLE  R5 K90 R6    ; R5["_onLineAdded"] := R6
197 [-]: CLOSURE   R6 18        ; R6 := closure(Function #97.19)
198 [-]: SETTABLE  R5 K91 R6    ; R5["SystemMessage"] := R6
199 [-]: CLOSURE   R6 19        ; R6 := closure(Function #97.20)
200 [-]: SETTABLE  R5 K92 R6    ; R5["NotificationMessage"] := R6
201 [-]: CLOSURE   R6 20        ; R6 := closure(Function #97.21)
202 [-]: GETUPVAL  R0 U53       ; R0 := U53
203 [-]: GETUPVAL  R0 U31       ; R0 := U31
204 [-]: GETUPVAL  R0 U54       ; R0 := U54
205 [-]: GETUPVAL  R0 U43       ; R0 := U43
206 [-]: GETUPVAL  R0 U55       ; R0 := U55
207 [-]: SETTABLE  R5 K93 R6    ; R5["OnChatMessageReceived"] := R6
208 [-]: CLOSURE   R6 21        ; R6 := closure(Function #97.22)
209 [-]: SETTABLE  R5 K94 R6    ; R5["OnResizePress"] := R6
210 [-]: CLOSURE   R6 22        ; R6 := closure(Function #97.23)
211 [-]: SETTABLE  R5 K95 R6    ; R5["OnResizeRelease"] := R6
212 [-]: RETURN    R5 2         ; return R5
213 [-]: RETURN    R0 1         ; return 


; Function #97.1:
;
; Name:            
; Defined at line: 3061
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: SETTABLE  R0 K0 R1     ; R0["mChatHistory"] := R1
  3 [-]: SETTABLE  R0 K1 K2     ; R0["mHasHyperlink"] := "0x0"
  4 [-]: RETURN    R0 1         ; return 


; Function #97.2:
;
; Name:            
; Defined at line: 3066
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mFilterList"]
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x7CF71D03"]
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 109
 11 [-]: JMP       109          ; PC := 109
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0x93B1256B
 13 [-]: LOADK     R2 K4        ; R2 := "Chat: Filters for "
 14 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mChannelName"]
 15 [-]: LOADK     R4 K6        ; R4 := ":"
 16 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xB307631A"]
 20 [-]: GETGLOBAL R3 K8        ; R3 := string
 21 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x7B782033"]
 22 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mChannelName"]
 23 [-]: LOADK     R5 K10       ; R5 := 1
 24 [-]: LOADK     R6 K10       ; R6 := 1
 25 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 26 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 27 [-]: GETGLOBAL R2 K8        ; R2 := string
 28 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0xBDD0D625"]
 29 [-]: LOADK     R3 K12       ; R3 := "["
 30 [-]: GETGLOBAL R4 K13       ; R4 := mMovie
 31 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 32 [-]: GETUPVAL  R6 U2        ; R6 := U2
 33 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["APPEARANCE_STRING_LOC"]
 34 [-]: MOVE      R7 R0        ; R7 := R0
 35 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 36 [-]: LOADK     R5 K6        ; R5 := ":"
 37 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: GETGLOBAL R3 K8        ; R3 := string
 40 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0xBDD0D625"]
 41 [-]: LOADK     R4 K12       ; R4 := "["
 42 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 43 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 44 [-]: GETUPVAL  R7 U2        ; R7 := U2
 45 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["MOD_CONFIG_STRING_PREFIX"]
 46 [-]: MOVE      R8 R0        ; R8 := R0
 47 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 48 [-]: LOADK     R6 K6        ; R6 := ":"
 49 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 50 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 51 [-]: GETGLOBAL R4 K8        ; R4 := string
 52 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xBDD0D625"]
 53 [-]: LOADK     R5 K12       ; R5 := "["
 54 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
 55 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 56 [-]: GETUPVAL  R8 U2        ; R8 := U2
 57 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["SHAWZIN_STRING_LOC"]
 58 [-]: MOVE      R9 R0        ; R9 := R0
 59 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 60 [-]: LOADK     R7 K6        ; R7 := ":"
 61 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: LOADK     R5 K10       ; R5 := 1
 64 [-]: LEN       R6 R1        ; R6 := # R1
 65 [-]: LOADK     R7 K10       ; R7 := 1
 66 [-]: FORPREP   R5 108       ; R5 -= R7; PC := 108
 67 [-]: GETGLOBAL R9 K8        ; R9 := string
 68 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["0xBDD0D625"]
 69 [-]: GETTABLE  R10 R1 R8    ; R10 := R1[R8]
 70 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["filter"]
 71 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 72 [-]: MOVE      R10 R9       ; R10 := R9
 73 [-]: EQ        0 R10 K19    ; if R10 ~= "[ff-" then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: MOVE      R10 R2       ; R10 := R2
 76 [-]: JMP       84           ; PC := 84
 77 [-]: EQ        0 R10 K20    ; if R10 ~= "[mod-" then PC := 81
 78 [-]: JMP       81           ; PC := 81
 79 [-]: MOVE      R10 R3       ; R10 := R3
 80 [-]: JMP       84           ; PC := 84
 81 [-]: EQ        0 R10 K21    ; if R10 ~= "[song-" then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: MOVE      R10 R4       ; R10 := R4
 84 [-]: NEWTABLE  R11 0 3      ; R11 := {}
 85 [-]: SETTABLE  R11 K22 R10  ; R11["Label"] := R10
 86 [-]: SETTABLE  R11 K23 R9   ; R11["Filter"] := R9
 87 [-]: GETTABLE  R12 R1 R8    ; R12 := R1[R8]
 88 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["include"]
 89 [-]: SETTABLE  R11 K24 R12  ; R11["Include"] := R12
 90 [-]: GETUPVAL  R12 U0       ; R12 := U0
 91 [-]: GETTABLE  R12 R12 K0   ; R12 := R12["mFilterList"]
 92 [-]: SELF      R12 R12 K26  ; R13 := R12; R12 := R12["0xA77DA8EE"]
 93 [-]: MOVE      R14 R11      ; R14 := R11
 94 [-]: MOVE      R15 R1       ; R15 := R1
 95 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 96 [-]: GETGLOBAL R12 K3       ; R12 := 0x93B1256B
 97 [-]: LOADK     R13 K27      ; R13 := "Filter: "
 98 [-]: GETTABLE  R14 R11 K23  ; R14 := R11["Filter"]
 99 [-]: LOADK     R15 K28      ; R15 := ", "
100 [-]: GETUPVAL  R16 U3       ; R16 := U3
101 [-]: GETTABLE  R16 R16 K29  ; R16 := R16["0xF81722A2"]
102 [-]: GETTABLE  R17 R11 K24  ; R17 := R11["Include"]
103 [-]: LOADK     R18 K24      ; R18 := "Include"
104 [-]: LOADK     R19 K30      ; R19 := "Exclude"
105 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
106 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
107 [-]: CALL      R12 2 1      ; R12(R13)
108 [-]: FORLOOP   R5 67        ; R5 += R7; if R5 <= R6 then begin PC := 67; R8 := R5 end
109 [-]: GETUPVAL  R12 U0       ; R12 := U0
110 [-]: GETTABLE  R12 R12 K0   ; R12 := R12["mFilterList"]
111 [-]: SELF      R12 R12 K31  ; R13 := R12; R12 := R12["0x6470BAF4"]
112 [-]: LOADNIL   R14 R15      ; R14 := R15 := nil
113 [-]: MOVE      R16 R1       ; R16 := R1
114 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
115 [-]: RETURN    R0 1         ; return 


; Function #97.3:
;
; Name:            
; Defined at line: 3096
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: SETTABLE  R0 K0 R3     ; R0["mChannelType"] := R3
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0x83DCEAB1"]
  5 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
  6 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mClipPath"]
  7 [-]: LOADK     R6 K5        ; R6 := ".ScrollBar"
  8 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  9 [-]: LOADK     R6 K6        ; R6 := 100
 10 [-]: LOADK     R7 K7        ; R7 := 0.5
 11 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 12 [-]: SETTABLE  R0 K1 R3     ; R0["mTextScroll"] := R3
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 14 [-]: SETTABLE  R3 K8 K9     ; R3["mInitialY"] := 0
 15 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 16 [-]: GETUPVAL  R4 U2        ; R4 := U2
 17 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mInitChatPanelScrollXScale"]
 18 [-]: TEST      R4 1         ; if R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADK     R4 K12       ; R4 := 1
 21 [-]: SETTABLE  R3 K10 R4    ; R3["mInitialHitzoneScaleX"] := R4
 22 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 23 [-]: CLOSURE   R4 0         ; R4 := closure(Function #97.3.1)
 24 [-]: MOVE      R0 R0        ; R0 := R0
 25 [-]: GETUPVAL  R0 U3        ; R0 := U3
 26 [-]: SETTABLE  R3 K13 R4    ; R3["mScrollValueChangedCallback"] := R4
 27 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 28 [-]: CLOSURE   R4 1         ; R4 := closure(Function #97.3.2)
 29 [-]: SETTABLE  R3 K14 R4    ; R3["mScrubStopDragCallback"] := R4
 30 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 31 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x98E4F633"]
 32 [-]: GETGLOBAL R5 K16       ; R5 := Engine
 33 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["0x9490FE70"]
 34 [-]: CALL      R5 1 2       ; R5 := R5()
 35 [-]: MOVE      R5 R5        ; R5 := R5
 36 [-]: CALL      R3 3 1       ; R3(R4,R5)
 37 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 38 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x62648036"]
 39 [-]: CALL      R3 2 1       ; R3(R4)
 40 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 41 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x1B721C34"]
 42 [-]: LOADK     R5 K12       ; R5 := 1
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: RETURN    R0 1         ; return 


; Function #97.3.1:
;
; Name:            
; Defined at line: 3105
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mChatHistory"]
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mMaxVisibleChatLines"]
  6 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x6374FD98
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0xB57E56DF"]
 10 [-]: SUB       R5 K4 R0     ; R5 := 1 - R0
 11 [-]: MUL       R5 R2 R5     ; R5 := R2 * R5
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: LOADK     R5 K5        ; R5 := 0
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: SETTABLE  R4 K6 R3     ; R4["mScrollBack"] := R3
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mIsActive"]
 20 [-]: TEST      R4 0         ; if not R4 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0xEEFE2F88"]
 24 [-]: CALL      R4 2 1       ; R4(R5)
 25 [-]: RETURN    R0 1         ; return 


; Function #97.3.2:
;
; Name:            
; Defined at line: 3115
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #97.4:
;
; Name:            
; Defined at line: 3122
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTextScroll"]
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x8C7099E9"]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: CALL      R2 3 1       ; R2(R3,R4)
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["queuedBroadcastMessage"]
 11 [-]: TEST      R2 0         ; if not R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x4313BA6"]
 14 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["queuedBroadcastMessage"]
 15 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["MESSAGE_TYPE_BROADCAST"]
 16 [-]: LOADK     R6 K6        ; R6 := ""
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: SETTABLE  R0 K3 K7     ; R0["queuedBroadcastMessage"] := nil
 19 [-]: RETURN    R0 1         ; return 


; Function #97.5:
;
; Name:            
; Defined at line: 3132
; #Upvalues:       40
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  66

  1 [-]: GETGLOBAL R2 K0        ; R2 := gPlayerProfileMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x21EF7B1A"]
  3 [-]: LOADK     R4 K2        ; R4 := 0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mIsChatEnabled"]
 11 [-]: TEST      R3 1         ; if R3 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: CALL      R3 3 4       ; R3,R4,R5 := R3(R4,R5)
 18 [-]: EQ        1 R3 K5      ; if R3 == "" then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 21 [-]: MOVE      R7 R3        ; R7 := R3
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: GETGLOBAL R6 K6        ; R6 := string
 27 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0xC6772A8A"]
 28 [-]: MOVE      R7 R3        ; R7 := R3
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["mParent"]
 31 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mInputPanel"]
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["mMaxMsgLength"]
 33 [-]: LT        0 R7 R6      ; if R7 >= R6 then PC := 77
 34 [-]: JMP       77           ; PC := 77
 35 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["mParent"]
 36 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mInputPanel"]
 37 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mMaxMsgLength"]
 38 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["mParent"]
 39 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mInputPanel"]
 40 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["MAX_MSG_LIMIT"]
 41 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 53
 42 [-]: JMP       53           ; PC := 53
 43 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0["0x4313BA6"]
 44 [-]: GETGLOBAL R8 K13       ; R8 := mMovie
 45 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8["0x5DB0BD4"]
 46 [-]: LOADK     R10 K15      ; R10 := "/Lotus/Language/Menu/Chat_ExceededMsgIRCLengthLimitError"
 47 [-]: MOVE      R11 R0       ; R11 := R0
 48 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 49 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["MESSAGE_TYPE_SYSTEM"]
 50 [-]: LOADK     R10 K5       ; R10 := ""
 51 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 52 [-]: JMP       67           ; PC := 67
 53 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0["0x4313BA6"]
 54 [-]: GETGLOBAL R8 K13       ; R8 := mMovie
 55 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8["0x5DB0BD4"]
 56 [-]: LOADK     R10 K17      ; R10 := "/Lotus/Language/Menu/Chat_ExceededMsgLengthLimitError"
 57 [-]: MOVE      R11 R0       ; R11 := R0
 58 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 59 [-]: GETTABLE  R13 R0 K8    ; R13 := R0["mParent"]
 60 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["mInputPanel"]
 61 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["mMaxMsgLength"]
 62 [-]: SETTABLE  R12 K18 R13  ; R12["LIMIT"] := R13
 63 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 64 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["MESSAGE_TYPE_SYSTEM"]
 65 [-]: LOADK     R10 K5       ; R10 := ""
 66 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 67 [-]: GETUPVAL  R6 U1        ; R6 := U1
 68 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0x25992394"]
 69 [-]: GETGLOBAL R7 K20       ; R7 := _G
 70 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["UISound_Error"]
 71 [-]: CALL      R6 2 1       ; R6(R7)
 72 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["mParent"]
 73 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mInputPanel"]
 74 [-]: SETTABLE  R6 K22 K23   ; R6["CharLimitFlashTime"] := 2.5
 75 [-]: MOVE      R6 R1        ; R6 := R1
 76 [-]: RETURN    R6 2         ; return R6
 77 [-]: CLOSURE   R6 0         ; R6 := closure(Function #97.5.1)
 78 [-]: CLOSURE   R7 1         ; R7 := closure(Function #97.5.2)
 79 [-]: GETUPVAL  R0 U2        ; R0 := U2
 80 [-]: CLOSURE   R8 2         ; R8 := closure(Function #97.5.3)
 81 [-]: GETUPVAL  R0 U3        ; R0 := U3
 82 [-]: MOVE      R0 R0        ; R0 := R0
 83 [-]: GETUPVAL  R0 U4        ; R0 := U4
 84 [-]: GETUPVAL  R0 U1        ; R0 := U1
 85 [-]: GETUPVAL  R9 U5        ; R9 := U5
 86 [-]: MOVE      R10 R3       ; R10 := R3
 87 [-]: CALL      R9 2 1       ; R9(R10)
 88 [-]: GETGLOBAL R9 K24       ; R9 := 0xD51B2786
 89 [-]: CALL      R9 1 2       ; R9 := R9()
 90 [-]: LOADK     R10 K25      ; R10 := 1
 91 [-]: LEN       R11 R3       ; R11 := # R3
 92 [-]: LT        0 R10 R11    ; if R10 >= R11 then PC := 1272
 93 [-]: JMP       1272         ; PC := 1272
 94 [-]: GETGLOBAL R11 K6       ; R11 := string
 95 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["0xDE44F664"]
 96 [-]: MOVE      R12 R3       ; R12 := R3
 97 [-]: LOADK     R13 K27      ; R13 := "%[[^%]%[]*%]"
 98 [-]: MOVE      R14 R10      ; R14 := R10
 99 [-]: CALL      R11 4 3      ; R11,R12 := R11(R12,R13,R14)
100 [-]: TEST      R11 0        ; if not R11 then PC := 1272
101 [-]: JMP       1272         ; PC := 1272
102 [-]: GETGLOBAL R13 K6       ; R13 := string
103 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["0x7B782033"]
104 [-]: MOVE      R14 R3       ; R14 := R3
105 [-]: ADD       R15 R11 K25  ; R15 := R11 + 1
106 [-]: SUB       R16 R12 K25  ; R16 := R12 - 1
107 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
108 [-]: GETGLOBAL R14 K6       ; R14 := string
109 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["0xBDD0D625"]
110 [-]: MOVE      R15 R13      ; R15 := R13
111 [-]: CALL      R14 2 2      ; R14 := R14(R15)
112 [-]: GETUPVAL  R15 U2       ; R15 := U2
113 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["OmegaString"]
114 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 229
115 [-]: JMP       229          ; PC := 229
116 [-]: GETUPVAL  R15 U6       ; R15 := U6
117 [-]: LOADK     R16 K31      ; R16 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
118 [-]: NEWTABLE  R17 0 1      ; R17 := {}
119 [-]: LOADK     R18 K33      ; R18 := "["
120 [-]: MOVE      R19 R14      ; R19 := R14
121 [-]: LOADK     R20 K34      ; R20 := "]"
122 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
123 [-]: SETTABLE  R17 K32 R18  ; R17["LINK"] := R18
124 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
125 [-]: TEST      R15 0        ; if not R15 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: RETURN    R0 1         ; return 
128 [-]: GETUPVAL  R15 U7       ; R15 := U7
129 [-]: GETTABLE  R15 R15 K35  ; R15 := R15["0x6E9EB0BA"]
130 [-]: CALL      R15 1 2      ; R15 := R15()
131 [-]: LEN       R15 R15      ; R15 := # R15
132 [-]: LT        0 K2 R15     ; if 0 >= R15 then PC := 218
133 [-]: JMP       218          ; PC := 218
134 [-]: MOVE      R15 R6       ; R15 := R6
135 [-]: GETUPVAL  R16 U8       ; R16 := U8
136 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["OmegaLinks"]
137 [-]: CALL      R15 2 2      ; R15 := R15(R16)
138 [-]: GETUPVAL  R16 U2       ; R16 := U2
139 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["OMEGA_MAX_LINKS"]
140 [-]: LE        0 R16 R15    ; if R16 > R15 then PC := 157
141 [-]: JMP       157          ; PC := 157
142 [-]: SELF      R15 R0 K12   ; R16 := R0; R15 := R0["0x4313BA6"]
143 [-]: GETGLOBAL R17 K13      ; R17 := mMovie
144 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17["0x5DB0BD4"]
145 [-]: LOADK     R19 K38      ; R19 := "/Lotus/Language/Menu/Chat_ExceededOmegaLimitError"
146 [-]: MOVE      R20 R0       ; R20 := R0
147 [-]: NEWTABLE  R21 0 1      ; R21 := {}
148 [-]: GETUPVAL  R22 U2       ; R22 := U2
149 [-]: GETTABLE  R22 R22 K37  ; R22 := R22["OMEGA_MAX_LINKS"]
150 [-]: SETTABLE  R21 K18 R22  ; R21["LIMIT"] := R22
151 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
152 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["MESSAGE_TYPE_SYSTEM"]
153 [-]: LOADK     R19 K5       ; R19 := ""
154 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
155 [-]: MOVE      R15 R1       ; R15 := R1
156 [-]: RETURN    R15 2        ; return R15
157 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
158 [-]: GETGLOBAL R16 K39      ; R16 := _T
159 [-]: GETTABLE  R16 R16 K40  ; R16 := R16["OpenScreen"]
160 [-]: CALL      R15 2 2      ; R15 := R15(R16)
161 [-]: TEST      R15 1        ; if R15 then PC := 1268
162 [-]: JMP       1268         ; PC := 1268
163 [-]: GETGLOBAL R15 K39      ; R15 := _T
164 [-]: GETTABLE  R15 R15 K41  ; R15 := R15["0x10F7E690"]
165 [-]: LOADK     R16 K42      ; R16 := "ItemBrowsing"
166 [-]: CALL      R15 2 2      ; R15 := R15(R16)
167 [-]: MOVE      R15 R9       ; R15 := R9
168 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
169 [-]: GETUPVAL  R16 U9       ; R16 := U9
170 [-]: CALL      R15 2 2      ; R15 := R15(R16)
171 [-]: TEST      R15 1        ; if R15 then PC := 1268
172 [-]: JMP       1268         ; PC := 1268
173 [-]: MOVE      R15 R1       ; R15 := R1
174 [-]: MOVE      R15 R10      ; R15 := R10
175 [-]: GETUPVAL  R15 U8       ; R15 := U8
176 [-]: SETTABLE  R15 K43 R3   ; R15["Msg"] := R3
177 [-]: GETUPVAL  R15 U8       ; R15 := U8
178 [-]: SETTABLE  R15 K44 R13  ; R15["CurrItemString"] := R13
179 [-]: GETUPVAL  R15 U9       ; R15 := U9
180 [-]: SELF      R15 R15 K45  ; R16 := R15; R15 := R15["0x458F27A9"]
181 [-]: LOADK     R17 K46      ; R17 := "SetTitle"
182 [-]: GETGLOBAL R18 K13      ; R18 := mMovie
183 [-]: SELF      R18 R18 K14  ; R19 := R18; R18 := R18["0x5DB0BD4"]
184 [-]: LOADK     R20 K47      ; R20 := "/Lotus/Language/Menu/OmegaLink_Title"
185 [-]: MOVE      R21 R0       ; R21 := R0
186 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
187 [-]: CALL      R15 0 1      ; R15(R16,...)
188 [-]: GETUPVAL  R15 U9       ; R15 := U9
189 [-]: SELF      R15 R15 K45  ; R16 := R15; R15 := R15["0x458F27A9"]
190 [-]: LOADK     R17 K48      ; R17 := "SetRequiredSelections"
191 [-]: LOADK     R18 K25      ; R18 := 1
192 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
193 [-]: GETGLOBAL R15 K39      ; R15 := _T
194 [-]: CLOSURE   R16 3        ; R16 := closure(Function #97.5.4)
195 [-]: GETUPVAL  R0 U11       ; R0 := U11
196 [-]: GETUPVAL  R0 U10       ; R0 := U10
197 [-]: SETTABLE  R15 K49 R16  ; R15["OmegaSelectionDone"] := R16
198 [-]: GETUPVAL  R15 U9       ; R15 := U9
199 [-]: SELF      R15 R15 K45  ; R16 := R15; R15 := R15["0x458F27A9"]
200 [-]: LOADK     R17 K50      ; R17 := "SetCallBack"
201 [-]: LOADK     R18 K49      ; R18 := "OmegaSelectionDone"
202 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
203 [-]: GETGLOBAL R15 K39      ; R15 := _T
204 [-]: CLOSURE   R16 4        ; R16 := closure(Function #97.5.5)
205 [-]: GETUPVAL  R0 U7        ; R0 := U7
206 [-]: SETTABLE  R15 K51 R16  ; R15["GetOmegaCards"] := R16
207 [-]: GETUPVAL  R15 U9       ; R15 := U9
208 [-]: SELF      R15 R15 K45  ; R16 := R15; R15 := R15["0x458F27A9"]
209 [-]: LOADK     R17 K52      ; R17 := "SetElementsFunction"
210 [-]: LOADK     R18 K51      ; R18 := "GetOmegaCards"
211 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
212 [-]: GETUPVAL  R15 U11      ; R15 := U11
213 [-]: MOVE      R16 R1       ; R16 := R1
214 [-]: CALL      R15 2 1      ; R15(R16)
215 [-]: MOVE      R15 R1       ; R15 := R1
216 [-]: RETURN    R15 2        ; return R15
217 [-]: JMP       1268         ; PC := 1268
218 [-]: GETGLOBAL R15 K13      ; R15 := mMovie
219 [-]: SELF      R15 R15 K14  ; R16 := R15; R15 := R15["0x5DB0BD4"]
220 [-]: LOADK     R17 K53      ; R17 := "/Lotus/Language/Menu/Omega_NoneOwned"
221 [-]: MOVE      R18 R0       ; R18 := R0
222 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
223 [-]: GETUPVAL  R16 U1       ; R16 := U1
224 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["0xB11F032"]
225 [-]: MOVE      R17 R15      ; R17 := R15
226 [-]: CALL      R16 2 1      ; R16(R17)
227 [-]: RETURN    R0 1         ; return 
228 [-]: JMP       1268         ; PC := 1268
229 [-]: GETUPVAL  R16 U12      ; R16 := U12
230 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
231 [-]: EQ        1 R16 K55    ; if R16 == nil then PC := 319
232 [-]: JMP       319          ; PC := 319
233 [-]: MOVE      R16 R6       ; R16 := R6
234 [-]: GETUPVAL  R17 U8       ; R17 := U8
235 [-]: GETTABLE  R17 R17 K36  ; R17 := R17["OmegaLinks"]
236 [-]: CALL      R16 2 2      ; R16 := R16(R17)
237 [-]: GETUPVAL  R17 U2       ; R17 := U2
238 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["OMEGA_MAX_LINKS"]
239 [-]: LE        0 R17 R16    ; if R17 > R16 then PC := 256
240 [-]: JMP       256          ; PC := 256
241 [-]: SELF      R16 R0 K12   ; R17 := R0; R16 := R0["0x4313BA6"]
242 [-]: GETGLOBAL R18 K13      ; R18 := mMovie
243 [-]: SELF      R18 R18 K14  ; R19 := R18; R18 := R18["0x5DB0BD4"]
244 [-]: LOADK     R20 K38      ; R20 := "/Lotus/Language/Menu/Chat_ExceededOmegaLimitError"
245 [-]: MOVE      R21 R0       ; R21 := R0
246 [-]: NEWTABLE  R22 0 1      ; R22 := {}
247 [-]: GETUPVAL  R23 U2       ; R23 := U2
248 [-]: GETTABLE  R23 R23 K37  ; R23 := R23["OMEGA_MAX_LINKS"]
249 [-]: SETTABLE  R22 K18 R23  ; R22["LIMIT"] := R23
250 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
251 [-]: GETTABLE  R19 R0 K16   ; R19 := R0["MESSAGE_TYPE_SYSTEM"]
252 [-]: LOADK     R20 K5       ; R20 := ""
253 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
254 [-]: MOVE      R16 R1       ; R16 := R1
255 [-]: RETURN    R16 2        ; return R16
256 [-]: GETUPVAL  R16 U7       ; R16 := U7
257 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["0x6E9EB0BA"]
258 [-]: CALL      R16 1 2      ; R16 := R16()
259 [-]: LOADNIL   R17 R17      ; R17 := nil
260 [-]: GETGLOBAL R18 K56      ; R18 := 0x63B09107
261 [-]: MOVE      R19 R16      ; R19 := R16
262 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
263 [-]: JMP       304          ; PC := 304
264 [-]: GETGLOBAL R23 K57      ; R23 := 0x7C282057
265 [-]: GETTABLE  R24 R22 K58  ; R24 := R22["Card"]
266 [-]: GETTABLE  R24 R24 K59  ; R24 := R24["mUpgradeItemType"]
267 [-]: CALL      R23 2 2      ; R23 := R23(R24)
268 [-]: GETGLOBAL R24 K3       ; R24 := 0x400E7765
269 [-]: MOVE      R25 R23      ; R25 := R23
270 [-]: CALL      R24 2 2      ; R24 := R24(R25)
271 [-]: TEST      R24 1        ; if R24 then PC := 302
272 [-]: JMP       302          ; PC := 302
273 [-]: GETTABLE  R24 R22 K58  ; R24 := R22["Card"]
274 [-]: GETTABLE  R24 R24 K60  ; R24 := R24["mUpgrade"]
275 [-]: GETTABLE  R24 R24 K61  ; R24 := R24["mUpgradeFingerprint"]
276 [-]: SELF      R25 R23 K62  ; R26 := R23; R25 := R23["0x14BF6A8B"]
277 [-]: MOVE      R27 R24      ; R27 := R24
278 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
279 [-]: TEST      R25 0        ; if not R25 then PC := 302
280 [-]: JMP       302          ; PC := 302
281 [-]: GETGLOBAL R25 K6       ; R25 := string
282 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["0xBDD0D625"]
283 [-]: SELF      R26 R23 K63  ; R27 := R23; R26 := R23["0x9631703E"]
284 [-]: MOVE      R28 R24      ; R28 := R24
285 [-]: CALL      R26 3 0      ; R26,... := R26(R27,R28)
286 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
287 [-]: GETGLOBAL R26 K6       ; R26 := string
288 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["0xBDD0D625"]
289 [-]: MOVE      R27 R13      ; R27 := R13
290 [-]: CALL      R26 2 2      ; R26 := R26(R27)
291 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 302
292 [-]: JMP       302          ; PC := 302
293 [-]: LOADK     R25 K64      ; R25 := "OMG-"
294 [-]: SELF      R26 R23 K65  ; R27 := R23; R26 := R23["0x34820572"]
295 [-]: CALL      R26 2 2      ; R26 := R26(R27)
296 [-]: LOADK     R27 K66      ; R27 := ":"
297 [-]: SELF      R28 R23 K67  ; R29 := R23; R28 := R23["0x899CB40B"]
298 [-]: MOVE      R30 R24      ; R30 := R24
299 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
300 [-]: CONCAT    R17 R25 R28  ; R17 := R25 .. R26 .. R27 .. R28
301 [-]: JMP       306          ; PC := 306
302 [-]: GETGLOBAL R25 K68      ; R25 := 0x1BF588C6
303 [-]: CALL      R25 1 1      ; R25()
304 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 264; R20 := R21 end
305 [-]: JMP       264          ; PC := 264
306 [-]: EQ        1 R17 K55    ; if R17 == nil then PC := 317
307 [-]: JMP       317          ; PC := 317
308 [-]: GETUPVAL  R25 U13      ; R25 := U13
309 [-]: MOVE      R26 R3       ; R26 := R3
310 [-]: MOVE      R27 R13      ; R27 := R13
311 [-]: MOVE      R28 R17      ; R28 := R17
312 [-]: GETUPVAL  R29 U8       ; R29 := U8
313 [-]: GETTABLE  R29 R29 K36  ; R29 := R29["OmegaLinks"]
314 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
315 [-]: RETURN    R0 1         ; return 
316 [-]: JMP       1268         ; PC := 1268
317 [-]: ADD       R10 R12 K25  ; R10 := R12 + 1
318 [-]: JMP       1268         ; PC := 1268
319 [-]: GETUPVAL  R25 U2       ; R25 := U2
320 [-]: GETTABLE  R25 R25 K69  ; R25 := R25["StepSequencerString"]
321 [-]: EQ        0 R14 R25    ; if R14 ~= R25 then PC := 441
322 [-]: JMP       441          ; PC := 441
323 [-]: GETUPVAL  R25 U6       ; R25 := U6
324 [-]: LOADK     R26 K31      ; R26 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
325 [-]: NEWTABLE  R27 0 1      ; R27 := {}
326 [-]: LOADK     R28 K33      ; R28 := "["
327 [-]: MOVE      R29 R14      ; R29 := R14
328 [-]: LOADK     R30 K34      ; R30 := "]"
329 [-]: CONCAT    R28 R28 R30  ; R28 := R28 .. R29 .. R30
330 [-]: SETTABLE  R27 K32 R28  ; R27["LINK"] := R28
331 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
332 [-]: TEST      R25 0        ; if not R25 then PC := 335
333 [-]: JMP       335          ; PC := 335
334 [-]: RETURN    R0 1         ; return 
335 [-]: GETUPVAL  R25 U7       ; R25 := U7
336 [-]: GETTABLE  R25 R25 K70  ; R25 := R25["0xA622A18B"]
337 [-]: CALL      R25 1 2      ; R25 := R25()
338 [-]: LEN       R25 R25      ; R25 := # R25
339 [-]: LT        0 K2 R25     ; if 0 >= R25 then PC := 431
340 [-]: JMP       431          ; PC := 431
341 [-]: MOVE      R25 R6       ; R25 := R6
342 [-]: GETUPVAL  R26 U8       ; R26 := U8
343 [-]: GETTABLE  R26 R26 K71  ; R26 := R26["SongLinks"]
344 [-]: CALL      R25 2 2      ; R25 := R25(R26)
345 [-]: GETUPVAL  R26 U2       ; R26 := U2
346 [-]: GETTABLE  R26 R26 K72  ; R26 := R26["STEP_SEQUENCER_MAX_LINKS"]
347 [-]: LE        0 R26 R25    ; if R26 > R25 then PC := 363
348 [-]: JMP       363          ; PC := 363
349 [-]: SELF      R25 R0 K12   ; R26 := R0; R25 := R0["0x4313BA6"]
350 [-]: GETGLOBAL R27 K13      ; R27 := mMovie
351 [-]: SELF      R27 R27 K14  ; R28 := R27; R27 := R27["0x5DB0BD4"]
352 [-]: LOADK     R29 K73      ; R29 := "/Lotus/Language/Menu/Chat_ExceededSongLimitError"
353 [-]: MOVE      R30 R0       ; R30 := R0
354 [-]: NEWTABLE  R31 0 1      ; R31 := {}
355 [-]: GETUPVAL  R32 U2       ; R32 := U2
356 [-]: GETTABLE  R32 R32 K72  ; R32 := R32["STEP_SEQUENCER_MAX_LINKS"]
357 [-]: SETTABLE  R31 K18 R32  ; R31["LIMIT"] := R32
358 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
359 [-]: GETTABLE  R28 R0 K16   ; R28 := R0["MESSAGE_TYPE_SYSTEM"]
360 [-]: LOADK     R29 K5       ; R29 := ""
361 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
362 [-]: RETURN    R0 1         ; return 
363 [-]: GETGLOBAL R25 K13      ; R25 := mMovie
364 [-]: SELF      R25 R25 K74  ; R26 := R25; R25 := R25["0x5FF274BB"]
365 [-]: GETGLOBAL R27 K20      ; R27 := _G
366 [-]: GETTABLE  R27 R27 K75  ; R27 := R27["UIMovie_GenericMenu"]
367 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
368 [-]: MOVE      R25 R9       ; R25 := R9
369 [-]: GETGLOBAL R25 K3       ; R25 := 0x400E7765
370 [-]: GETUPVAL  R26 U9       ; R26 := U9
371 [-]: CALL      R25 2 2      ; R25 := R25(R26)
372 [-]: TEST      R25 1        ; if R25 then PC := 1268
373 [-]: JMP       1268         ; PC := 1268
374 [-]: MOVE      R25 R1       ; R25 := R1
375 [-]: MOVE      R25 R10      ; R25 := R10
376 [-]: GETUPVAL  R25 U9       ; R25 := U9
377 [-]: SELF      R25 R25 K45  ; R26 := R25; R25 := R25["0x458F27A9"]
378 [-]: LOADK     R27 K46      ; R27 := "SetTitle"
379 [-]: LOADK     R28 K76      ; R28 := "/Lotus/Language/Menu/Composition_SelectSong"
380 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
381 [-]: GETGLOBAL R25 K39      ; R25 := _T
382 [-]: CLOSURE   R26 5        ; R26 := closure(Function #97.5.6)
383 [-]: GETUPVAL  R0 U2        ; R0 := U2
384 [-]: GETUPVAL  R0 U10       ; R0 := U10
385 [-]: GETUPVAL  R0 U8        ; R0 := U8
386 [-]: MOVE      R0 R3        ; R0 := R3
387 [-]: MOVE      R0 R13       ; R0 := R13
388 [-]: GETUPVAL  R0 U11       ; R0 := U11
389 [-]: GETUPVAL  R0 U1        ; R0 := U1
390 [-]: SETTABLE  R25 K77 R26  ; R25["SongSelectionDone"] := R26
391 [-]: GETUPVAL  R25 U9       ; R25 := U9
392 [-]: SELF      R25 R25 K45  ; R26 := R25; R25 := R25["0x458F27A9"]
393 [-]: LOADK     R27 K50      ; R27 := "SetCallBack"
394 [-]: LOADK     R28 K77      ; R28 := "SongSelectionDone"
395 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
396 [-]: GETGLOBAL R25 K39      ; R25 := _T
397 [-]: CLOSURE   R26 6        ; R26 := closure(Function #97.5.7)
398 [-]: GETUPVAL  R0 U7        ; R0 := U7
399 [-]: SETTABLE  R25 K78 R26  ; R25["GetSongList"] := R26
400 [-]: GETUPVAL  R25 U9       ; R25 := U9
401 [-]: SELF      R25 R25 K45  ; R26 := R25; R25 := R25["0x458F27A9"]
402 [-]: LOADK     R27 K52      ; R27 := "SetElementsFunction"
403 [-]: LOADK     R28 K78      ; R28 := "GetSongList"
404 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
405 [-]: GETGLOBAL R25 K39      ; R25 := _T
406 [-]: CLOSURE   R26 7        ; R26 := closure(Function #97.5.8)
407 [-]: GETUPVAL  R0 U2        ; R0 := U2
408 [-]: GETUPVAL  R0 U14       ; R0 := U14
409 [-]: GETUPVAL  R0 U9        ; R0 := U9
410 [-]: SETTABLE  R25 K79 R26  ; R25["OnSongFocused"] := R26
411 [-]: GETUPVAL  R25 U9       ; R25 := U9
412 [-]: SELF      R25 R25 K45  ; R26 := R25; R25 := R25["0x458F27A9"]
413 [-]: LOADK     R27 K80      ; R27 := "SetOnFocusedCallback"
414 [-]: LOADK     R28 K79      ; R28 := "OnSongFocused"
415 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
416 [-]: GETGLOBAL R25 K39      ; R25 := _T
417 [-]: CLOSURE   R26 8        ; R26 := closure(Function #97.5.9)
418 [-]: GETUPVAL  R0 U9        ; R0 := U9
419 [-]: GETUPVAL  R0 U2        ; R0 := U2
420 [-]: SETTABLE  R25 K81 R26  ; R25["OnSongUnfocused"] := R26
421 [-]: GETUPVAL  R25 U9       ; R25 := U9
422 [-]: SELF      R25 R25 K45  ; R26 := R25; R25 := R25["0x458F27A9"]
423 [-]: LOADK     R27 K82      ; R27 := "SetOnUnfocusedCallback"
424 [-]: LOADK     R28 K81      ; R28 := "OnSongUnfocused"
425 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
426 [-]: GETUPVAL  R25 U11      ; R25 := U11
427 [-]: MOVE      R26 R1       ; R26 := R1
428 [-]: CALL      R25 2 1      ; R25(R26)
429 [-]: RETURN    R0 1         ; return 
430 [-]: JMP       1268         ; PC := 1268
431 [-]: GETUPVAL  R25 U1       ; R25 := U1
432 [-]: GETTABLE  R25 R25 K54  ; R25 := R25["0xB11F032"]
433 [-]: GETGLOBAL R26 K13      ; R26 := mMovie
434 [-]: SELF      R26 R26 K14  ; R27 := R26; R26 := R26["0x5DB0BD4"]
435 [-]: LOADK     R28 K83      ; R28 := "/Lotus/Language/Menu/Song_NoneOwned"
436 [-]: MOVE      R29 R0       ; R29 := R0
437 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
438 [-]: CALL      R25 0 1      ; R25(R26,...)
439 [-]: RETURN    R0 1         ; return 
440 [-]: JMP       1268         ; PC := 1268
441 [-]: GETUPVAL  R25 U2       ; R25 := U2
442 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["ZawString"]
443 [-]: EQ        1 R14 R25    ; if R14 == R25 then PC := 461
444 [-]: JMP       461          ; PC := 461
445 [-]: GETUPVAL  R25 U2       ; R25 := U2
446 [-]: GETTABLE  R25 R25 K85  ; R25 := R25["AmpString"]
447 [-]: EQ        1 R14 R25    ; if R14 == R25 then PC := 461
448 [-]: JMP       461          ; PC := 461
449 [-]: GETUPVAL  R25 U2       ; R25 := U2
450 [-]: GETTABLE  R25 R25 K86  ; R25 := R25["MoaPetString"]
451 [-]: EQ        1 R14 R25    ; if R14 == R25 then PC := 461
452 [-]: JMP       461          ; PC := 461
453 [-]: GETUPVAL  R25 U2       ; R25 := U2
454 [-]: GETTABLE  R25 R25 K87  ; R25 := R25["KDriveString"]
455 [-]: EQ        1 R14 R25    ; if R14 == R25 then PC := 461
456 [-]: JMP       461          ; PC := 461
457 [-]: GETUPVAL  R25 U2       ; R25 := U2
458 [-]: GETTABLE  R25 R25 K88  ; R25 := R25["KitgunString"]
459 [-]: EQ        0 R14 R25    ; if R14 ~= R25 then PC := 665
460 [-]: JMP       665          ; PC := 665
461 [-]: GETUPVAL  R25 U6       ; R25 := U6
462 [-]: LOADK     R26 K31      ; R26 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
463 [-]: NEWTABLE  R27 0 1      ; R27 := {}
464 [-]: LOADK     R28 K33      ; R28 := "["
465 [-]: MOVE      R29 R14      ; R29 := R14
466 [-]: LOADK     R30 K34      ; R30 := "]"
467 [-]: CONCAT    R28 R28 R30  ; R28 := R28 .. R29 .. R30
468 [-]: SETTABLE  R27 K32 R28  ; R27["LINK"] := R28
469 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
470 [-]: TEST      R25 0        ; if not R25 then PC := 473
471 [-]: JMP       473          ; PC := 473
472 [-]: RETURN    R0 1         ; return 
473 [-]: GETGLOBAL R25 K89      ; R25 := Lotus_Game
474 [-]: GETTABLE  R25 R25 K90  ; R25 := R25["MWC_MELEE"]
475 [-]: GETUPVAL  R26 U8       ; R26 := U8
476 [-]: GETTABLE  R26 R26 K91  ; R26 := R26["ZawLinks"]
477 [-]: LOADK     R27 K92      ; R27 := "/Lotus/Language/Menu/Chat_ExceededZawLimitError"
478 [-]: LOADK     R28 K93      ; R28 := "ZAW-"
479 [-]: LOADK     R29 K94      ; R29 := "RecursiveZawReplace"
480 [-]: GETUPVAL  R30 U2       ; R30 := U2
481 [-]: GETTABLE  R30 R30 K85  ; R30 := R30["AmpString"]
482 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 492
483 [-]: JMP       492          ; PC := 492
484 [-]: GETGLOBAL R30 K89      ; R30 := Lotus_Game
485 [-]: GETTABLE  R25 R30 K95  ; R25 := R30["MWC_AMP"]
486 [-]: GETUPVAL  R30 U8       ; R30 := U8
487 [-]: GETTABLE  R26 R30 K96  ; R26 := R30["AmpLinks"]
488 [-]: LOADK     R27 K97      ; R27 := "/Lotus/Language/Menu/Chat_ExceededAmpLimitError"
489 [-]: LOADK     R28 K98      ; R28 := "AMP-"
490 [-]: LOADK     R29 K99      ; R29 := "RecursiveAmpReplace"
491 [-]: JMP       527          ; PC := 527
492 [-]: GETUPVAL  R30 U2       ; R30 := U2
493 [-]: GETTABLE  R30 R30 K86  ; R30 := R30["MoaPetString"]
494 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 504
495 [-]: JMP       504          ; PC := 504
496 [-]: GETGLOBAL R30 K89      ; R30 := Lotus_Game
497 [-]: GETTABLE  R25 R30 K100 ; R25 := R30["MWC_MOA_PET"]
498 [-]: GETUPVAL  R30 U8       ; R30 := U8
499 [-]: GETTABLE  R26 R30 K101 ; R26 := R30["MoaPetLinks"]
500 [-]: LOADK     R27 K102     ; R27 := "/Lotus/Language/SolarisVenus/Chat_ExceededMoaPetLimitError"
501 [-]: LOADK     R28 K103     ; R28 := "MOA-"
502 [-]: LOADK     R29 K104     ; R29 := "RecursiveMoaPetReplace"
503 [-]: JMP       527          ; PC := 527
504 [-]: GETUPVAL  R30 U2       ; R30 := U2
505 [-]: GETTABLE  R30 R30 K87  ; R30 := R30["KDriveString"]
506 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 516
507 [-]: JMP       516          ; PC := 516
508 [-]: GETGLOBAL R30 K89      ; R30 := Lotus_Game
509 [-]: GETTABLE  R25 R30 K105 ; R25 := R30["MWC_HOVERBOARD"]
510 [-]: GETUPVAL  R30 U8       ; R30 := U8
511 [-]: GETTABLE  R26 R30 K106 ; R26 := R30["KdriveLinks"]
512 [-]: LOADK     R27 K107     ; R27 := "/Lotus/Language/SolarisVenus/Chat_ExceededHBLimitError"
513 [-]: LOADK     R28 K108     ; R28 := "KDR-"
514 [-]: LOADK     R29 K109     ; R29 := "RecursiveKDriveReplace"
515 [-]: JMP       527          ; PC := 527
516 [-]: GETUPVAL  R30 U2       ; R30 := U2
517 [-]: GETTABLE  R30 R30 K88  ; R30 := R30["KitgunString"]
518 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 527
519 [-]: JMP       527          ; PC := 527
520 [-]: GETGLOBAL R30 K89      ; R30 := Lotus_Game
521 [-]: GETTABLE  R25 R30 K110 ; R25 := R30["MWC_PRIMARY"]
522 [-]: GETUPVAL  R30 U8       ; R30 := U8
523 [-]: GETTABLE  R26 R30 K111 ; R26 := R30["KitgunLinks"]
524 [-]: LOADK     R27 K112     ; R27 := "/Lotus/Language/SolarisVenus/Chat_ExceededKitgunLimitError"
525 [-]: LOADK     R28 K113     ; R28 := "KIT-"
526 [-]: LOADK     R29 K114     ; R29 := "RecursiveKitgunReplace"
527 [-]: GETUPVAL  R30 U7       ; R30 := U7
528 [-]: GETTABLE  R30 R30 K115 ; R30 := R30["0xEC150538"]
529 [-]: MOVE      R31 R25      ; R31 := R25
530 [-]: CALL      R30 2 2      ; R30 := R30(R31)
531 [-]: LEN       R30 R30      ; R30 := # R30
532 [-]: LT        0 K2 R30     ; if 0 >= R30 then PC := 614
533 [-]: JMP       614          ; PC := 614
534 [-]: MOVE      R30 R7       ; R30 := R7
535 [-]: MOVE      R31 R25      ; R31 := R25
536 [-]: CALL      R30 2 2      ; R30 := R30(R31)
537 [-]: MOVE      R31 R6       ; R31 := R6
538 [-]: MOVE      R32 R26      ; R32 := R26
539 [-]: CALL      R31 2 2      ; R31 := R31(R32)
540 [-]: LE        0 R30 R31    ; if R30 > R31 then PC := 554
541 [-]: JMP       554          ; PC := 554
542 [-]: SELF      R31 R0 K12   ; R32 := R0; R31 := R0["0x4313BA6"]
543 [-]: GETGLOBAL R33 K13      ; R33 := mMovie
544 [-]: SELF      R33 R33 K14  ; R34 := R33; R33 := R33["0x5DB0BD4"]
545 [-]: MOVE      R35 R27      ; R35 := R27
546 [-]: MOVE      R36 R0       ; R36 := R0
547 [-]: NEWTABLE  R37 0 1      ; R37 := {}
548 [-]: SETTABLE  R37 K18 R30  ; R37["LIMIT"] := R30
549 [-]: CALL      R33 5 2      ; R33 := R33(R34,R35,R36,R37)
550 [-]: GETTABLE  R34 R0 K16   ; R34 := R0["MESSAGE_TYPE_SYSTEM"]
551 [-]: LOADK     R35 K5       ; R35 := ""
552 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
553 [-]: RETURN    R0 1         ; return 
554 [-]: GETGLOBAL R31 K39      ; R31 := _T
555 [-]: GETTABLE  R31 R31 K41  ; R31 := R31["0x10F7E690"]
556 [-]: LOADK     R32 K42      ; R32 := "ItemBrowsing"
557 [-]: CALL      R31 2 2      ; R31 := R31(R32)
558 [-]: MOVE      R31 R9       ; R31 := R9
559 [-]: GETGLOBAL R31 K3       ; R31 := 0x400E7765
560 [-]: GETUPVAL  R32 U9       ; R32 := U9
561 [-]: CALL      R31 2 2      ; R31 := R31(R32)
562 [-]: TEST      R31 1        ; if R31 then PC := 663
563 [-]: JMP       663          ; PC := 663
564 [-]: MOVE      R31 R1       ; R31 := R1
565 [-]: MOVE      R31 R10      ; R31 := R10
566 [-]: GETUPVAL  R31 U8       ; R31 := U8
567 [-]: SETTABLE  R31 K43 R3   ; R31["Msg"] := R3
568 [-]: GETUPVAL  R31 U8       ; R31 := U8
569 [-]: SETTABLE  R31 K44 R13  ; R31["CurrItemString"] := R13
570 [-]: GETUPVAL  R31 U9       ; R31 := U9
571 [-]: SELF      R31 R31 K45  ; R32 := R31; R31 := R31["0x458F27A9"]
572 [-]: LOADK     R33 K46      ; R33 := "SetTitle"
573 [-]: GETGLOBAL R34 K13      ; R34 := mMovie
574 [-]: SELF      R34 R34 K14  ; R35 := R34; R34 := R34["0x5DB0BD4"]
575 [-]: LOADK     R36 K116     ; R36 := "/Lotus/Language/OstronCrafting/Crafting_WeapSelectTitle"
576 [-]: MOVE      R37 R0       ; R37 := R0
577 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
578 [-]: CALL      R31 0 1      ; R31(R32,...)
579 [-]: GETUPVAL  R31 U9       ; R31 := U9
580 [-]: SELF      R31 R31 K45  ; R32 := R31; R31 := R31["0x458F27A9"]
581 [-]: LOADK     R33 K48      ; R33 := "SetRequiredSelections"
582 [-]: LOADK     R34 K25      ; R34 := 1
583 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
584 [-]: GETGLOBAL R31 K39      ; R31 := _T
585 [-]: CLOSURE   R32 9        ; R32 := closure(Function #97.5.10)
586 [-]: GETUPVAL  R0 U11       ; R0 := U11
587 [-]: GETUPVAL  R0 U10       ; R0 := U10
588 [-]: GETUPVAL  R0 U15       ; R0 := U15
589 [-]: MOVE      R0 R25       ; R0 := R25
590 [-]: MOVE      R0 R28       ; R0 := R28
591 [-]: MOVE      R0 R29       ; R0 := R29
592 [-]: SETTABLE  R31 K117 R32 ; R31["WeaponSelectionDone"] := R32
593 [-]: GETUPVAL  R31 U9       ; R31 := U9
594 [-]: SELF      R31 R31 K45  ; R32 := R31; R31 := R31["0x458F27A9"]
595 [-]: LOADK     R33 K50      ; R33 := "SetCallBack"
596 [-]: LOADK     R34 K117     ; R34 := "WeaponSelectionDone"
597 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
598 [-]: GETGLOBAL R31 K39      ; R31 := _T
599 [-]: CLOSURE   R32 10       ; R32 := closure(Function #97.5.11)
600 [-]: GETUPVAL  R0 U7        ; R0 := U7
601 [-]: MOVE      R0 R25       ; R0 := R25
602 [-]: SETTABLE  R31 K118 R32 ; R31["GetWeapons"] := R32
603 [-]: GETUPVAL  R31 U9       ; R31 := U9
604 [-]: SELF      R31 R31 K45  ; R32 := R31; R31 := R31["0x458F27A9"]
605 [-]: LOADK     R33 K52      ; R33 := "SetElementsFunction"
606 [-]: LOADK     R34 K118     ; R34 := "GetWeapons"
607 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
608 [-]: GETUPVAL  R31 U11      ; R31 := U11
609 [-]: MOVE      R32 R1       ; R32 := R1
610 [-]: CALL      R31 2 1      ; R31(R32)
611 [-]: MOVE      R31 R1       ; R31 := R1
612 [-]: RETURN    R31 2        ; return R31
613 [-]: JMP       663          ; PC := 663
614 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
615 [-]: GETTABLE  R31 R31 K90  ; R31 := R31["MWC_MELEE"]
616 [-]: EQ        0 R25 R31    ; if R25 ~= R31 then PC := 623
617 [-]: JMP       623          ; PC := 623
618 [-]: GETUPVAL  R31 U1       ; R31 := U1
619 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["0xB11F032"]
620 [-]: LOADK     R32 K119     ; R32 := "/Lotus/Language/Menu/Chat_NoModularWeapons"
621 [-]: CALL      R31 2 1      ; R31(R32)
622 [-]: JMP       662          ; PC := 662
623 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
624 [-]: GETTABLE  R31 R31 K95  ; R31 := R31["MWC_AMP"]
625 [-]: EQ        0 R25 R31    ; if R25 ~= R31 then PC := 632
626 [-]: JMP       632          ; PC := 632
627 [-]: GETUPVAL  R31 U1       ; R31 := U1
628 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["0xB11F032"]
629 [-]: LOADK     R32 K120     ; R32 := "/Lotus/Language/OstronCrafting/Chat_NoModularWeapons_Amp"
630 [-]: CALL      R31 2 1      ; R31(R32)
631 [-]: JMP       662          ; PC := 662
632 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
633 [-]: GETTABLE  R31 R31 K100 ; R31 := R31["MWC_MOA_PET"]
634 [-]: EQ        0 R25 R31    ; if R25 ~= R31 then PC := 641
635 [-]: JMP       641          ; PC := 641
636 [-]: GETUPVAL  R31 U1       ; R31 := U1
637 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["0xB11F032"]
638 [-]: LOADK     R32 K121     ; R32 := "/Lotus/Language/SolarisVenus/Chat_NoModularWeapons_Moa"
639 [-]: CALL      R31 2 1      ; R31(R32)
640 [-]: JMP       662          ; PC := 662
641 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
642 [-]: GETTABLE  R31 R31 K105 ; R31 := R31["MWC_HOVERBOARD"]
643 [-]: EQ        0 R25 R31    ; if R25 ~= R31 then PC := 650
644 [-]: JMP       650          ; PC := 650
645 [-]: GETUPVAL  R31 U1       ; R31 := U1
646 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["0xB11F032"]
647 [-]: LOADK     R32 K122     ; R32 := "/Lotus/Language/SolarisVenus/Chat_NoModularWeapons_HB"
648 [-]: CALL      R31 2 1      ; R31(R32)
649 [-]: JMP       662          ; PC := 662
650 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
651 [-]: GETTABLE  R31 R31 K110 ; R31 := R31["MWC_PRIMARY"]
652 [-]: EQ        1 R25 R31    ; if R25 == R31 then PC := 658
653 [-]: JMP       658          ; PC := 658
654 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
655 [-]: GETTABLE  R31 R31 K123 ; R31 := R31["MWC_SECONDARY"]
656 [-]: EQ        0 R25 R31    ; if R25 ~= R31 then PC := 662
657 [-]: JMP       662          ; PC := 662
658 [-]: GETUPVAL  R31 U1       ; R31 := U1
659 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["0xB11F032"]
660 [-]: LOADK     R32 K124     ; R32 := "/Lotus/Language/SolarisVenus/Chat_NoModularWeapons_Kitgun"
661 [-]: CALL      R31 2 1      ; R31(R32)
662 [-]: RETURN    R0 1         ; return 
663 [-]: CLOSE     R25          ; SAVE R25,...
664 [-]: JMP       1268         ; PC := 1268
665 [-]: GETUPVAL  R25 U2       ; R25 := U2
666 [-]: GETTABLE  R25 R25 K125 ; R25 := R25["AppearanceString"]
667 [-]: EQ        0 R14 R25    ; if R14 ~= R25 then PC := 807
668 [-]: JMP       807          ; PC := 807
669 [-]: GETUPVAL  R25 U6       ; R25 := U6
670 [-]: LOADK     R26 K31      ; R26 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
671 [-]: NEWTABLE  R27 0 1      ; R27 := {}
672 [-]: LOADK     R28 K33      ; R28 := "["
673 [-]: MOVE      R29 R14      ; R29 := R14
674 [-]: LOADK     R30 K34      ; R30 := "]"
675 [-]: CONCAT    R28 R28 R30  ; R28 := R28 .. R29 .. R30
676 [-]: SETTABLE  R27 K32 R28  ; R27["LINK"] := R28
677 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
678 [-]: TEST      R25 0        ; if not R25 then PC := 681
679 [-]: JMP       681          ; PC := 681
680 [-]: RETURN    R0 1         ; return 
681 [-]: MOVE      R25 R8       ; R25 := R8
682 [-]: MOVE      R26 R9       ; R26 := R9
683 [-]: CALL      R25 2 2      ; R25 := R25(R26)
684 [-]: EQ        1 R25 K5     ; if R25 == "" then PC := 693
685 [-]: JMP       693          ; PC := 693
686 [-]: SELF      R26 R0 K12   ; R27 := R0; R26 := R0["0x4313BA6"]
687 [-]: MOVE      R28 R25      ; R28 := R25
688 [-]: GETTABLE  R29 R0 K16   ; R29 := R0["MESSAGE_TYPE_SYSTEM"]
689 [-]: LOADK     R30 K5       ; R30 := ""
690 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
691 [-]: MOVE      R26 R1       ; R26 := R1
692 [-]: RETURN    R26 2        ; return R26
693 [-]: MOVE      R26 R6       ; R26 := R6
694 [-]: GETUPVAL  R27 U8       ; R27 := U8
695 [-]: GETTABLE  R27 R27 K126 ; R27 := R27["AppearanceLinks"]
696 [-]: CALL      R26 2 2      ; R26 := R26(R27)
697 [-]: GETUPVAL  R27 U2       ; R27 := U2
698 [-]: GETTABLE  R27 R27 K127 ; R27 := R27["APPEARANCE_MAX_LINKS"]
699 [-]: LE        0 R27 R26    ; if R27 > R26 then PC := 715
700 [-]: JMP       715          ; PC := 715
701 [-]: SELF      R26 R0 K12   ; R27 := R0; R26 := R0["0x4313BA6"]
702 [-]: GETGLOBAL R28 K13      ; R28 := mMovie
703 [-]: SELF      R28 R28 K14  ; R29 := R28; R28 := R28["0x5DB0BD4"]
704 [-]: LOADK     R30 K128     ; R30 := "/Lotus/Language/Menu/Chat_ExceededLoadoutLimitError"
705 [-]: MOVE      R31 R0       ; R31 := R0
706 [-]: NEWTABLE  R32 0 1      ; R32 := {}
707 [-]: GETUPVAL  R33 U2       ; R33 := U2
708 [-]: GETTABLE  R33 R33 K127 ; R33 := R33["APPEARANCE_MAX_LINKS"]
709 [-]: SETTABLE  R32 K18 R33  ; R32["LIMIT"] := R33
710 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
711 [-]: GETTABLE  R29 R0 K16   ; R29 := R0["MESSAGE_TYPE_SYSTEM"]
712 [-]: LOADK     R30 K5       ; R30 := ""
713 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
714 [-]: RETURN    R0 1         ; return 
715 [-]: GETUPVAL  R26 U8       ; R26 := U8
716 [-]: GETTABLE  R26 R26 K129 ; R26 := R26["CachedAppearanceLink"]
717 [-]: EQ        0 R26 K55    ; if R26 ~= nil then PC := 793
718 [-]: JMP       793          ; PC := 793
719 [-]: GETUPVAL  R26 U7       ; R26 := U7
720 [-]: GETTABLE  R26 R26 K130 ; R26 := R26["0xC9297D51"]
721 [-]: CALL      R26 1 2      ; R26 := R26()
722 [-]: TEST      R26 1        ; if R26 then PC := 735
723 [-]: JMP       735          ; PC := 735
724 [-]: GETUPVAL  R26 U16      ; R26 := U16
725 [-]: GETGLOBAL R27 K13      ; R27 := mMovie
726 [-]: SELF      R27 R27 K14  ; R28 := R27; R27 := R27["0x5DB0BD4"]
727 [-]: LOADK     R29 K131     ; R29 := "/Lotus/Language/Menu/NotAllowedInMission"
728 [-]: MOVE      R30 R0       ; R30 := R0
729 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
730 [-]: LOADK     R28 K5       ; R28 := ""
731 [-]: LOADK     R29 K25      ; R29 := 1
732 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
733 [-]: RETURN    R0 1         ; return 
734 [-]: JMP       785          ; PC := 785
735 [-]: GETUPVAL  R26 U7       ; R26 := U7
736 [-]: GETTABLE  R26 R26 K132 ; R26 := R26["0x184FED0E"]
737 [-]: CALL      R26 1 2      ; R26 := R26()
738 [-]: LEN       R26 R26      ; R26 := # R26
739 [-]: LT        0 K2 R26     ; if 0 >= R26 then PC := 785
740 [-]: JMP       785          ; PC := 785
741 [-]: GETGLOBAL R26 K13      ; R26 := mMovie
742 [-]: SELF      R26 R26 K74  ; R27 := R26; R26 := R26["0x5FF274BB"]
743 [-]: GETGLOBAL R28 K20      ; R28 := _G
744 [-]: GETTABLE  R28 R28 K75  ; R28 := R28["UIMovie_GenericMenu"]
745 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
746 [-]: MOVE      R26 R9       ; R26 := R9
747 [-]: GETGLOBAL R26 K3       ; R26 := 0x400E7765
748 [-]: GETUPVAL  R27 U9       ; R27 := U9
749 [-]: CALL      R26 2 2      ; R26 := R26(R27)
750 [-]: TEST      R26 1        ; if R26 then PC := 784
751 [-]: JMP       784          ; PC := 784
752 [-]: MOVE      R26 R1       ; R26 := R1
753 [-]: MOVE      R26 R10      ; R26 := R10
754 [-]: GETUPVAL  R26 U9       ; R26 := U9
755 [-]: SELF      R26 R26 K45  ; R27 := R26; R26 := R26["0x458F27A9"]
756 [-]: LOADK     R28 K46      ; R28 := "SetTitle"
757 [-]: LOADK     R29 K133     ; R29 := "/Lotus/Language/Menu/Select_Item_To_Link"
758 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
759 [-]: GETGLOBAL R26 K39      ; R26 := _T
760 [-]: CLOSURE   R27 11       ; R27 := closure(Function #97.5.12)
761 [-]: GETUPVAL  R0 U10       ; R0 := U10
762 [-]: GETUPVAL  R0 U8        ; R0 := U8
763 [-]: MOVE      R0 R3        ; R0 := R3
764 [-]: MOVE      R0 R13       ; R0 := R13
765 [-]: GETUPVAL  R0 U11       ; R0 := U11
766 [-]: SETTABLE  R26 K134 R27 ; R26["LoadoutSelectionDone"] := R27
767 [-]: GETUPVAL  R26 U9       ; R26 := U9
768 [-]: SELF      R26 R26 K45  ; R27 := R26; R26 := R26["0x458F27A9"]
769 [-]: LOADK     R28 K50      ; R28 := "SetCallBack"
770 [-]: LOADK     R29 K134     ; R29 := "LoadoutSelectionDone"
771 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
772 [-]: GETGLOBAL R26 K39      ; R26 := _T
773 [-]: CLOSURE   R27 12       ; R27 := closure(Function #97.5.13)
774 [-]: GETUPVAL  R0 U7        ; R0 := U7
775 [-]: SETTABLE  R26 K135 R27 ; R26["GetLoadoutList"] := R27
776 [-]: GETUPVAL  R26 U9       ; R26 := U9
777 [-]: SELF      R26 R26 K45  ; R27 := R26; R26 := R26["0x458F27A9"]
778 [-]: LOADK     R28 K52      ; R28 := "SetElementsFunction"
779 [-]: LOADK     R29 K135     ; R29 := "GetLoadoutList"
780 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
781 [-]: GETUPVAL  R26 U11      ; R26 := U11
782 [-]: MOVE      R27 R1       ; R27 := R1
783 [-]: CALL      R26 2 1      ; R26(R27)
784 [-]: RETURN    R0 1         ; return 
785 [-]: SELF      R26 R0 K12   ; R27 := R0; R26 := R0["0x4313BA6"]
786 [-]: GETGLOBAL R28 K13      ; R28 := mMovie
787 [-]: SELF      R28 R28 K14  ; R29 := R28; R28 := R28["0x5DB0BD4"]
788 [-]: LOADK     R30 K136     ; R30 := "/Lotus/Language/Menu/Chat_NoAppearanceLink"
789 [-]: MOVE      R31 R0       ; R31 := R0
790 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
791 [-]: CALL      R26 0 1      ; R26(R27,...)
792 [-]: RETURN    R0 1         ; return 
793 [-]: GETUPVAL  R26 U8       ; R26 := U8
794 [-]: SETTABLE  R26 K43 R3   ; R26["Msg"] := R3
795 [-]: GETUPVAL  R26 U8       ; R26 := U8
796 [-]: SETTABLE  R26 K44 R13  ; R26["CurrItemString"] := R13
797 [-]: GETGLOBAL R26 K13      ; R26 := mMovie
798 [-]: SELF      R26 R26 K45  ; R27 := R26; R26 := R26["0x458F27A9"]
799 [-]: LOADK     R28 K137     ; R28 := "RecursiveAppearanceReplace"
800 [-]: GETUPVAL  R29 U8       ; R29 := U8
801 [-]: GETTABLE  R29 R29 K129 ; R29 := R29["CachedAppearanceLink"]
802 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
803 [-]: GETUPVAL  R26 U8       ; R26 := U8
804 [-]: SETTABLE  R26 K129 K55 ; R26["CachedAppearanceLink"] := nil
805 [-]: RETURN    R0 1         ; return 
806 [-]: JMP       1268         ; PC := 1268
807 [-]: GETUPVAL  R26 U2       ; R26 := U2
808 [-]: GETTABLE  R26 R26 K138 ; R26 := R26["ModConfigString"]
809 [-]: EQ        0 R14 R26    ; if R14 ~= R26 then PC := 951
810 [-]: JMP       951          ; PC := 951
811 [-]: GETUPVAL  R26 U6       ; R26 := U6
812 [-]: LOADK     R27 K31      ; R27 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
813 [-]: NEWTABLE  R28 0 1      ; R28 := {}
814 [-]: LOADK     R29 K33      ; R29 := "["
815 [-]: MOVE      R30 R14      ; R30 := R14
816 [-]: LOADK     R31 K34      ; R31 := "]"
817 [-]: CONCAT    R29 R29 R31  ; R29 := R29 .. R30 .. R31
818 [-]: SETTABLE  R28 K32 R29  ; R28["LINK"] := R29
819 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
820 [-]: TEST      R26 0        ; if not R26 then PC := 823
821 [-]: JMP       823          ; PC := 823
822 [-]: RETURN    R0 1         ; return 
823 [-]: MOVE      R26 R8       ; R26 := R8
824 [-]: MOVE      R27 R9       ; R27 := R9
825 [-]: CALL      R26 2 2      ; R26 := R26(R27)
826 [-]: EQ        1 R26 K5     ; if R26 == "" then PC := 835
827 [-]: JMP       835          ; PC := 835
828 [-]: SELF      R27 R0 K12   ; R28 := R0; R27 := R0["0x4313BA6"]
829 [-]: MOVE      R29 R26      ; R29 := R26
830 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
831 [-]: LOADK     R31 K5       ; R31 := ""
832 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
833 [-]: MOVE      R27 R1       ; R27 := R1
834 [-]: RETURN    R27 2        ; return R27
835 [-]: MOVE      R27 R6       ; R27 := R6
836 [-]: GETUPVAL  R28 U8       ; R28 := U8
837 [-]: GETTABLE  R28 R28 K139 ; R28 := R28["ModConfigLinks"]
838 [-]: CALL      R27 2 2      ; R27 := R27(R28)
839 [-]: GETUPVAL  R28 U2       ; R28 := U2
840 [-]: GETTABLE  R28 R28 K140 ; R28 := R28["MOD_CONFIG_MAX_LINKS"]
841 [-]: LE        0 R28 R27    ; if R28 > R27 then PC := 857
842 [-]: JMP       857          ; PC := 857
843 [-]: SELF      R27 R0 K12   ; R28 := R0; R27 := R0["0x4313BA6"]
844 [-]: GETGLOBAL R29 K13      ; R29 := mMovie
845 [-]: SELF      R29 R29 K14  ; R30 := R29; R29 := R29["0x5DB0BD4"]
846 [-]: LOADK     R31 K128     ; R31 := "/Lotus/Language/Menu/Chat_ExceededLoadoutLimitError"
847 [-]: MOVE      R32 R0       ; R32 := R0
848 [-]: NEWTABLE  R33 0 1      ; R33 := {}
849 [-]: GETUPVAL  R34 U2       ; R34 := U2
850 [-]: GETTABLE  R34 R34 K140 ; R34 := R34["MOD_CONFIG_MAX_LINKS"]
851 [-]: SETTABLE  R33 K18 R34  ; R33["LIMIT"] := R34
852 [-]: CALL      R29 5 2      ; R29 := R29(R30,R31,R32,R33)
853 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
854 [-]: LOADK     R31 K5       ; R31 := ""
855 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
856 [-]: RETURN    R0 1         ; return 
857 [-]: GETUPVAL  R27 U8       ; R27 := U8
858 [-]: GETTABLE  R27 R27 K141 ; R27 := R27["CachedModConfigLink"]
859 [-]: EQ        0 R27 K55    ; if R27 ~= nil then PC := 937
860 [-]: JMP       937          ; PC := 937
861 [-]: GETUPVAL  R27 U7       ; R27 := U7
862 [-]: GETTABLE  R27 R27 K130 ; R27 := R27["0xC9297D51"]
863 [-]: CALL      R27 1 2      ; R27 := R27()
864 [-]: TEST      R27 1        ; if R27 then PC := 877
865 [-]: JMP       877          ; PC := 877
866 [-]: GETUPVAL  R27 U16      ; R27 := U16
867 [-]: GETGLOBAL R28 K13      ; R28 := mMovie
868 [-]: SELF      R28 R28 K14  ; R29 := R28; R28 := R28["0x5DB0BD4"]
869 [-]: LOADK     R30 K131     ; R30 := "/Lotus/Language/Menu/NotAllowedInMission"
870 [-]: MOVE      R31 R0       ; R31 := R0
871 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
872 [-]: LOADK     R29 K5       ; R29 := ""
873 [-]: LOADK     R30 K25      ; R30 := 1
874 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
875 [-]: RETURN    R0 1         ; return 
876 [-]: JMP       927          ; PC := 927
877 [-]: GETUPVAL  R27 U7       ; R27 := U7
878 [-]: GETTABLE  R27 R27 K132 ; R27 := R27["0x184FED0E"]
879 [-]: CALL      R27 1 2      ; R27 := R27()
880 [-]: LEN       R27 R27      ; R27 := # R27
881 [-]: LT        0 K2 R27     ; if 0 >= R27 then PC := 927
882 [-]: JMP       927          ; PC := 927
883 [-]: GETGLOBAL R27 K13      ; R27 := mMovie
884 [-]: SELF      R27 R27 K74  ; R28 := R27; R27 := R27["0x5FF274BB"]
885 [-]: GETGLOBAL R29 K20      ; R29 := _G
886 [-]: GETTABLE  R29 R29 K75  ; R29 := R29["UIMovie_GenericMenu"]
887 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
888 [-]: MOVE      R27 R9       ; R27 := R9
889 [-]: GETGLOBAL R27 K3       ; R27 := 0x400E7765
890 [-]: GETUPVAL  R28 U9       ; R28 := U9
891 [-]: CALL      R27 2 2      ; R27 := R27(R28)
892 [-]: TEST      R27 1        ; if R27 then PC := 926
893 [-]: JMP       926          ; PC := 926
894 [-]: MOVE      R27 R1       ; R27 := R1
895 [-]: MOVE      R27 R10      ; R27 := R10
896 [-]: GETUPVAL  R27 U9       ; R27 := U9
897 [-]: SELF      R27 R27 K45  ; R28 := R27; R27 := R27["0x458F27A9"]
898 [-]: LOADK     R29 K46      ; R29 := "SetTitle"
899 [-]: LOADK     R30 K133     ; R30 := "/Lotus/Language/Menu/Select_Item_To_Link"
900 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
901 [-]: GETGLOBAL R27 K39      ; R27 := _T
902 [-]: CLOSURE   R28 13       ; R28 := closure(Function #97.5.14)
903 [-]: GETUPVAL  R0 U10       ; R0 := U10
904 [-]: GETUPVAL  R0 U8        ; R0 := U8
905 [-]: MOVE      R0 R3        ; R0 := R3
906 [-]: MOVE      R0 R13       ; R0 := R13
907 [-]: GETUPVAL  R0 U11       ; R0 := U11
908 [-]: SETTABLE  R27 K142 R28 ; R27["ModConfigSelectionDone"] := R28
909 [-]: GETUPVAL  R27 U9       ; R27 := U9
910 [-]: SELF      R27 R27 K45  ; R28 := R27; R27 := R27["0x458F27A9"]
911 [-]: LOADK     R29 K50      ; R29 := "SetCallBack"
912 [-]: LOADK     R30 K142     ; R30 := "ModConfigSelectionDone"
913 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
914 [-]: GETGLOBAL R27 K39      ; R27 := _T
915 [-]: CLOSURE   R28 14       ; R28 := closure(Function #97.5.15)
916 [-]: GETUPVAL  R0 U7        ; R0 := U7
917 [-]: SETTABLE  R27 K143 R28 ; R27["GetModConfigList"] := R28
918 [-]: GETUPVAL  R27 U9       ; R27 := U9
919 [-]: SELF      R27 R27 K45  ; R28 := R27; R27 := R27["0x458F27A9"]
920 [-]: LOADK     R29 K52      ; R29 := "SetElementsFunction"
921 [-]: LOADK     R30 K143     ; R30 := "GetModConfigList"
922 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
923 [-]: GETUPVAL  R27 U11      ; R27 := U11
924 [-]: MOVE      R28 R1       ; R28 := R1
925 [-]: CALL      R27 2 1      ; R27(R28)
926 [-]: RETURN    R0 1         ; return 
927 [-]: SELF      R27 R0 K12   ; R28 := R0; R27 := R0["0x4313BA6"]
928 [-]: GETGLOBAL R29 K13      ; R29 := mMovie
929 [-]: SELF      R29 R29 K14  ; R30 := R29; R29 := R29["0x5DB0BD4"]
930 [-]: LOADK     R31 K144     ; R31 := "/Lotus/Language/Menu/Chat_NoModLink"
931 [-]: MOVE      R32 R0       ; R32 := R0
932 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
933 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
934 [-]: LOADK     R31 K5       ; R31 := ""
935 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
936 [-]: RETURN    R0 1         ; return 
937 [-]: GETUPVAL  R27 U8       ; R27 := U8
938 [-]: SETTABLE  R27 K43 R3   ; R27["Msg"] := R3
939 [-]: GETUPVAL  R27 U8       ; R27 := U8
940 [-]: SETTABLE  R27 K44 R13  ; R27["CurrItemString"] := R13
941 [-]: GETGLOBAL R27 K13      ; R27 := mMovie
942 [-]: SELF      R27 R27 K45  ; R28 := R27; R27 := R27["0x458F27A9"]
943 [-]: LOADK     R29 K145     ; R29 := "RecursiveModConfigReplace"
944 [-]: GETUPVAL  R30 U8       ; R30 := U8
945 [-]: GETTABLE  R30 R30 K141 ; R30 := R30["CachedModConfigLink"]
946 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
947 [-]: GETUPVAL  R27 U8       ; R27 := U8
948 [-]: SETTABLE  R27 K141 K55 ; R27["CachedModConfigLink"] := nil
949 [-]: RETURN    R0 1         ; return 
950 [-]: JMP       1268         ; PC := 1268
951 [-]: GETUPVAL  R27 U2       ; R27 := U2
952 [-]: GETTABLE  R27 R27 K146 ; R27 := R27["ShawzinString"]
953 [-]: EQ        0 R14 R27    ; if R14 ~= R27 then PC := 1017
954 [-]: JMP       1017         ; PC := 1017
955 [-]: GETUPVAL  R27 U6       ; R27 := U6
956 [-]: LOADK     R28 K31      ; R28 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
957 [-]: NEWTABLE  R29 0 1      ; R29 := {}
958 [-]: LOADK     R30 K33      ; R30 := "["
959 [-]: MOVE      R31 R14      ; R31 := R14
960 [-]: LOADK     R32 K34      ; R32 := "]"
961 [-]: CONCAT    R30 R30 R32  ; R30 := R30 .. R31 .. R32
962 [-]: SETTABLE  R29 K32 R30  ; R29["LINK"] := R30
963 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
964 [-]: TEST      R27 0        ; if not R27 then PC := 967
965 [-]: JMP       967          ; PC := 967
966 [-]: RETURN    R0 1         ; return 
967 [-]: GETUPVAL  R27 U8       ; R27 := U8
968 [-]: GETTABLE  R27 R27 K147 ; R27 := R27["CachedShawzinLink"]
969 [-]: EQ        0 R27 K55    ; if R27 ~= nil then PC := 981
970 [-]: JMP       981          ; PC := 981
971 [-]: SELF      R27 R0 K12   ; R28 := R0; R27 := R0["0x4313BA6"]
972 [-]: GETGLOBAL R29 K13      ; R29 := mMovie
973 [-]: SELF      R29 R29 K14  ; R30 := R29; R29 := R29["0x5DB0BD4"]
974 [-]: LOADK     R31 K148     ; R31 := "/Lotus/Language/Menu/Chat_NoShawzinLink"
975 [-]: MOVE      R32 R0       ; R32 := R0
976 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
977 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
978 [-]: LOADK     R31 K5       ; R31 := ""
979 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
980 [-]: RETURN    R0 1         ; return 
981 [-]: MOVE      R27 R6       ; R27 := R6
982 [-]: GETUPVAL  R28 U8       ; R28 := U8
983 [-]: GETTABLE  R28 R28 K149 ; R28 := R28["ShawzinLinks"]
984 [-]: CALL      R27 2 2      ; R27 := R27(R28)
985 [-]: GETUPVAL  R28 U2       ; R28 := U2
986 [-]: GETTABLE  R28 R28 K150 ; R28 := R28["SHAWZIN_MAX_LINKS"]
987 [-]: LE        0 R28 R27    ; if R28 > R27 then PC := 1003
988 [-]: JMP       1003         ; PC := 1003
989 [-]: SELF      R27 R0 K12   ; R28 := R0; R27 := R0["0x4313BA6"]
990 [-]: GETGLOBAL R29 K13      ; R29 := mMovie
991 [-]: SELF      R29 R29 K14  ; R30 := R29; R29 := R29["0x5DB0BD4"]
992 [-]: LOADK     R31 K73      ; R31 := "/Lotus/Language/Menu/Chat_ExceededSongLimitError"
993 [-]: MOVE      R32 R0       ; R32 := R0
994 [-]: NEWTABLE  R33 0 1      ; R33 := {}
995 [-]: GETUPVAL  R34 U2       ; R34 := U2
996 [-]: GETTABLE  R34 R34 K150 ; R34 := R34["SHAWZIN_MAX_LINKS"]
997 [-]: SETTABLE  R33 K18 R34  ; R33["LIMIT"] := R34
998 [-]: CALL      R29 5 2      ; R29 := R29(R30,R31,R32,R33)
999 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
1000 [-]: LOADK     R31 K5       ; R31 := ""
1001 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
1002 [-]: RETURN    R0 1         ; return 
1003 [-]: GETUPVAL  R27 U8       ; R27 := U8
1004 [-]: SETTABLE  R27 K43 R3   ; R27["Msg"] := R3
1005 [-]: GETUPVAL  R27 U8       ; R27 := U8
1006 [-]: SETTABLE  R27 K44 R13  ; R27["CurrItemString"] := R13
1007 [-]: GETGLOBAL R27 K13      ; R27 := mMovie
1008 [-]: SELF      R27 R27 K45  ; R28 := R27; R27 := R27["0x458F27A9"]
1009 [-]: LOADK     R29 K151     ; R29 := "RecursiveShawzinReplace"
1010 [-]: GETUPVAL  R30 U8       ; R30 := U8
1011 [-]: GETTABLE  R30 R30 K147 ; R30 := R30["CachedShawzinLink"]
1012 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
1013 [-]: GETUPVAL  R27 U8       ; R27 := U8
1014 [-]: SETTABLE  R27 K147 K55 ; R27["CachedShawzinLink"] := nil
1015 [-]: RETURN    R0 1         ; return 
1016 [-]: JMP       1268         ; PC := 1268
1017 [-]: GETUPVAL  R27 U17      ; R27 := U17
1018 [-]: GETTABLE  R27 R27 R14  ; R27 := R27[R14]
1019 [-]: EQ        0 R27 K55    ; if R27 ~= nil then PC := 1037
1020 [-]: JMP       1037         ; PC := 1037
1021 [-]: GETUPVAL  R27 U18      ; R27 := U18
1022 [-]: GETTABLE  R27 R27 R14  ; R27 := R27[R14]
1023 [-]: EQ        0 R27 K55    ; if R27 ~= nil then PC := 1037
1024 [-]: JMP       1037         ; PC := 1037
1025 [-]: GETUPVAL  R27 U19      ; R27 := U19
1026 [-]: GETTABLE  R27 R27 R14  ; R27 := R27[R14]
1027 [-]: EQ        0 R27 K55    ; if R27 ~= nil then PC := 1037
1028 [-]: JMP       1037         ; PC := 1037
1029 [-]: GETUPVAL  R27 U20      ; R27 := U20
1030 [-]: GETTABLE  R27 R27 R14  ; R27 := R27[R14]
1031 [-]: EQ        0 R27 K55    ; if R27 ~= nil then PC := 1037
1032 [-]: JMP       1037         ; PC := 1037
1033 [-]: GETUPVAL  R27 U21      ; R27 := U21
1034 [-]: GETTABLE  R27 R27 R14  ; R27 := R27[R14]
1035 [-]: EQ        1 R27 K55    ; if R27 == nil then PC := 1267
1036 [-]: JMP       1267         ; PC := 1267
1037 [-]: GETGLOBAL R27 K89      ; R27 := Lotus_Game
1038 [-]: GETTABLE  R27 R27 K90  ; R27 := R27["MWC_MELEE"]
1039 [-]: LOADK     R28 K92      ; R28 := "/Lotus/Language/Menu/Chat_ExceededZawLimitError"
1040 [-]: GETUPVAL  R29 U8       ; R29 := U8
1041 [-]: GETTABLE  R29 R29 K91  ; R29 := R29["ZawLinks"]
1042 [-]: LOADK     R30 K93      ; R30 := "ZAW-"
1043 [-]: GETUPVAL  R31 U18      ; R31 := U18
1044 [-]: GETTABLE  R31 R31 R14  ; R31 := R31[R14]
1045 [-]: EQ        1 R31 K55    ; if R31 == nil then PC := 1054
1046 [-]: JMP       1054         ; PC := 1054
1047 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
1048 [-]: GETTABLE  R27 R31 K95  ; R27 := R31["MWC_AMP"]
1049 [-]: GETUPVAL  R31 U8       ; R31 := U8
1050 [-]: GETTABLE  R29 R31 K96  ; R29 := R31["AmpLinks"]
1051 [-]: LOADK     R28 K97      ; R28 := "/Lotus/Language/Menu/Chat_ExceededAmpLimitError"
1052 [-]: LOADK     R30 K98      ; R30 := "AMP-"
1053 [-]: JMP       1086         ; PC := 1086
1054 [-]: GETUPVAL  R31 U19      ; R31 := U19
1055 [-]: GETTABLE  R31 R31 R14  ; R31 := R31[R14]
1056 [-]: EQ        1 R31 K55    ; if R31 == nil then PC := 1065
1057 [-]: JMP       1065         ; PC := 1065
1058 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
1059 [-]: GETTABLE  R27 R31 K100 ; R27 := R31["MWC_MOA_PET"]
1060 [-]: GETUPVAL  R31 U8       ; R31 := U8
1061 [-]: GETTABLE  R29 R31 K101 ; R29 := R31["MoaPetLinks"]
1062 [-]: LOADK     R28 K102     ; R28 := "/Lotus/Language/SolarisVenus/Chat_ExceededMoaPetLimitError"
1063 [-]: LOADK     R30 K103     ; R30 := "MOA-"
1064 [-]: JMP       1086         ; PC := 1086
1065 [-]: GETUPVAL  R31 U20      ; R31 := U20
1066 [-]: GETTABLE  R31 R31 R14  ; R31 := R31[R14]
1067 [-]: EQ        1 R31 K55    ; if R31 == nil then PC := 1076
1068 [-]: JMP       1076         ; PC := 1076
1069 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
1070 [-]: GETTABLE  R27 R31 K105 ; R27 := R31["MWC_HOVERBOARD"]
1071 [-]: GETUPVAL  R31 U8       ; R31 := U8
1072 [-]: GETTABLE  R29 R31 K106 ; R29 := R31["KdriveLinks"]
1073 [-]: LOADK     R28 K107     ; R28 := "/Lotus/Language/SolarisVenus/Chat_ExceededHBLimitError"
1074 [-]: LOADK     R30 K108     ; R30 := "KDR-"
1075 [-]: JMP       1086         ; PC := 1086
1076 [-]: GETUPVAL  R31 U21      ; R31 := U21
1077 [-]: GETTABLE  R31 R31 R14  ; R31 := R31[R14]
1078 [-]: EQ        1 R31 K55    ; if R31 == nil then PC := 1086
1079 [-]: JMP       1086         ; PC := 1086
1080 [-]: GETGLOBAL R31 K89      ; R31 := Lotus_Game
1081 [-]: GETTABLE  R27 R31 K110 ; R27 := R31["MWC_PRIMARY"]
1082 [-]: GETUPVAL  R31 U8       ; R31 := U8
1083 [-]: GETTABLE  R29 R31 K111 ; R29 := R31["KitgunLinks"]
1084 [-]: LOADK     R28 K112     ; R28 := "/Lotus/Language/SolarisVenus/Chat_ExceededKitgunLimitError"
1085 [-]: LOADK     R30 K113     ; R30 := "KIT-"
1086 [-]: MOVE      R31 R7       ; R31 := R7
1087 [-]: MOVE      R32 R27      ; R32 := R27
1088 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1089 [-]: MOVE      R32 R6       ; R32 := R6
1090 [-]: MOVE      R33 R29      ; R33 := R29
1091 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1092 [-]: LE        0 R31 R32    ; if R31 > R32 then PC := 1106
1093 [-]: JMP       1106         ; PC := 1106
1094 [-]: SELF      R32 R0 K12   ; R33 := R0; R32 := R0["0x4313BA6"]
1095 [-]: GETGLOBAL R34 K13      ; R34 := mMovie
1096 [-]: SELF      R34 R34 K14  ; R35 := R34; R34 := R34["0x5DB0BD4"]
1097 [-]: MOVE      R36 R28      ; R36 := R28
1098 [-]: MOVE      R37 R0       ; R37 := R0
1099 [-]: NEWTABLE  R38 0 1      ; R38 := {}
1100 [-]: SETTABLE  R38 K18 R31  ; R38["LIMIT"] := R31
1101 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
1102 [-]: GETTABLE  R35 R0 K16   ; R35 := R0["MESSAGE_TYPE_SYSTEM"]
1103 [-]: LOADK     R36 K5       ; R36 := ""
1104 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1105 [-]: RETURN    R0 1         ; return 
1106 [-]: GETUPVAL  R32 U7       ; R32 := U7
1107 [-]: GETTABLE  R32 R32 K115 ; R32 := R32["0xEC150538"]
1108 [-]: MOVE      R33 R27      ; R33 := R27
1109 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1110 [-]: LOADNIL   R33 R33      ; R33 := nil
1111 [-]: GETGLOBAL R34 K56      ; R34 := 0x63B09107
1112 [-]: MOVE      R35 R32      ; R35 := R32
1113 [-]: CALL      R34 2 4      ; R34,R35,R36 := R34(R35)
1114 [-]: JMP       1253         ; PC := 1253
1115 [-]: GETTABLE  R39 R38 K152 ; R39 := R38["Name"]
1116 [-]: EQ        1 R39 K55    ; if R39 == nil then PC := 1253
1117 [-]: JMP       1253         ; PC := 1253
1118 [-]: GETGLOBAL R39 K6       ; R39 := string
1119 [-]: GETTABLE  R39 R39 K29  ; R39 := R39["0xBDD0D625"]
1120 [-]: GETTABLE  R40 R38 K152 ; R40 := R38["Name"]
1121 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1122 [-]: EQ        0 R39 R14    ; if R39 ~= R14 then PC := 1253
1123 [-]: JMP       1253         ; PC := 1253
1124 [-]: GETUPVAL  R39 U15      ; R39 := U15
1125 [-]: GETTABLE  R40 R38 K153 ; R40 := R38["RawItem"]
1126 [-]: MOVE      R41 R27      ; R41 := R27
1127 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
1128 [-]: EQ        0 R39 K55    ; if R39 ~= nil then PC := 1131
1129 [-]: JMP       1131         ; PC := 1131
1130 [-]: RETURN    R0 1         ; return 
1131 [-]: LOADNIL   R40 R40      ; R40 := nil
1132 [-]: GETGLOBAL R41 K89      ; R41 := Lotus_Game
1133 [-]: GETTABLE  R41 R41 K100 ; R41 := R41["MWC_MOA_PET"]
1134 [-]: EQ        0 R27 R41    ; if R27 ~= R41 then PC := 1157
1135 [-]: JMP       1157         ; PC := 1157
1136 [-]: GETGLOBAL R41 K154     ; R41 := 0x7B89D6F2
1137 [-]: GETTABLE  R42 R38 K153 ; R42 := R38["RawItem"]
1138 [-]: SELF      R42 R42 K155 ; R43 := R42; R42 := R42["0x17D2B78C"]
1139 [-]: GETGLOBAL R44 K89      ; R44 := Lotus_Game
1140 [-]: GETTABLE  R44 R44 K156 ; R44 := R44["WF_GILDED"]
1141 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1142 [-]: GETTABLE  R43 R39 K25  ; R43 := R39[1]
1143 [-]: GETGLOBAL R44 K157     ; R44 := modularMoaPetLegs
1144 [-]: LEN       R44 R44      ; R44 := # R44
1145 [-]: GETTABLE  R45 R39 K158 ; R45 := R39[2]
1146 [-]: GETGLOBAL R46 K159     ; R46 := modularMoaPetHeads
1147 [-]: LEN       R46 R46      ; R46 := # R46
1148 [-]: GETTABLE  R47 R39 K160 ; R47 := R39[3]
1149 [-]: GETGLOBAL R48 K161     ; R48 := modularMoaPetEngines
1150 [-]: LEN       R48 R48      ; R48 := # R48
1151 [-]: GETTABLE  R49 R39 K162 ; R49 := R39[4]
1152 [-]: GETGLOBAL R50 K163     ; R50 := modularMoaPetPayloads
1153 [-]: LEN       R50 R50      ; R50 := # R50
1154 [-]: CALL      R41 10 2     ; R41 := R41(R42,R43,R44,R45,R46,R47,R48,R49,R50)
1155 [-]: MOVE      R40 R41      ; R40 := R41
1156 [-]: JMP       1247         ; PC := 1247
1157 [-]: GETGLOBAL R41 K89      ; R41 := Lotus_Game
1158 [-]: GETTABLE  R41 R41 K105 ; R41 := R41["MWC_HOVERBOARD"]
1159 [-]: EQ        0 R27 R41    ; if R27 ~= R41 then PC := 1182
1160 [-]: JMP       1182         ; PC := 1182
1161 [-]: GETGLOBAL R41 K154     ; R41 := 0x7B89D6F2
1162 [-]: GETTABLE  R42 R38 K153 ; R42 := R38["RawItem"]
1163 [-]: SELF      R42 R42 K155 ; R43 := R42; R42 := R42["0x17D2B78C"]
1164 [-]: GETGLOBAL R44 K89      ; R44 := Lotus_Game
1165 [-]: GETTABLE  R44 R44 K156 ; R44 := R44["WF_GILDED"]
1166 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1167 [-]: GETTABLE  R43 R39 K25  ; R43 := R39[1]
1168 [-]: GETGLOBAL R44 K164     ; R44 := modularKDriveDecks
1169 [-]: LEN       R44 R44      ; R44 := # R44
1170 [-]: GETTABLE  R45 R39 K158 ; R45 := R39[2]
1171 [-]: GETGLOBAL R46 K165     ; R46 := modularKDriveEngines
1172 [-]: LEN       R46 R46      ; R46 := # R46
1173 [-]: GETTABLE  R47 R39 K160 ; R47 := R39[3]
1174 [-]: GETGLOBAL R48 K166     ; R48 := modularKDriveFronts
1175 [-]: LEN       R48 R48      ; R48 := # R48
1176 [-]: GETTABLE  R49 R39 K162 ; R49 := R39[4]
1177 [-]: GETGLOBAL R50 K167     ; R50 := modularKDriveJets
1178 [-]: LEN       R50 R50      ; R50 := # R50
1179 [-]: CALL      R41 10 2     ; R41 := R41(R42,R43,R44,R45,R46,R47,R48,R49,R50)
1180 [-]: MOVE      R40 R41      ; R40 := R41
1181 [-]: JMP       1247         ; PC := 1247
1182 [-]: GETGLOBAL R41 K89      ; R41 := Lotus_Game
1183 [-]: GETTABLE  R41 R41 K95  ; R41 := R41["MWC_AMP"]
1184 [-]: EQ        0 R27 R41    ; if R27 ~= R41 then PC := 1204
1185 [-]: JMP       1204         ; PC := 1204
1186 [-]: GETGLOBAL R41 K154     ; R41 := 0x7B89D6F2
1187 [-]: GETTABLE  R42 R38 K153 ; R42 := R38["RawItem"]
1188 [-]: SELF      R42 R42 K155 ; R43 := R42; R42 := R42["0x17D2B78C"]
1189 [-]: GETGLOBAL R44 K89      ; R44 := Lotus_Game
1190 [-]: GETTABLE  R44 R44 K156 ; R44 := R44["WF_GILDED"]
1191 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1192 [-]: GETTABLE  R43 R39 K25  ; R43 := R39[1]
1193 [-]: GETGLOBAL R44 K168     ; R44 := ampBarrels
1194 [-]: LEN       R44 R44      ; R44 := # R44
1195 [-]: GETTABLE  R45 R39 K158 ; R45 := R39[2]
1196 [-]: GETGLOBAL R46 K169     ; R46 := ampChasis
1197 [-]: LEN       R46 R46      ; R46 := # R46
1198 [-]: GETTABLE  R47 R39 K160 ; R47 := R39[3]
1199 [-]: GETGLOBAL R48 K170     ; R48 := ampGrips
1200 [-]: LEN       R48 R48      ; R48 := # R48
1201 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
1202 [-]: MOVE      R40 R41      ; R40 := R41
1203 [-]: JMP       1247         ; PC := 1247
1204 [-]: GETGLOBAL R41 K89      ; R41 := Lotus_Game
1205 [-]: GETTABLE  R41 R41 K110 ; R41 := R41["MWC_PRIMARY"]
1206 [-]: EQ        1 R27 R41    ; if R27 == R41 then PC := 1212
1207 [-]: JMP       1212         ; PC := 1212
1208 [-]: GETGLOBAL R41 K89      ; R41 := Lotus_Game
1209 [-]: GETTABLE  R41 R41 K123 ; R41 := R41["MWC_SECONDARY"]
1210 [-]: EQ        0 R27 R41    ; if R27 ~= R41 then PC := 1230
1211 [-]: JMP       1230         ; PC := 1230
1212 [-]: GETGLOBAL R41 K154     ; R41 := 0x7B89D6F2
1213 [-]: GETTABLE  R42 R38 K153 ; R42 := R38["RawItem"]
1214 [-]: SELF      R42 R42 K155 ; R43 := R42; R42 := R42["0x17D2B78C"]
1215 [-]: GETGLOBAL R44 K89      ; R44 := Lotus_Game
1216 [-]: GETTABLE  R44 R44 K156 ; R44 := R44["WF_GILDED"]
1217 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1218 [-]: GETTABLE  R43 R39 K25  ; R43 := R39[1]
1219 [-]: GETGLOBAL R44 K171     ; R44 := modularGunHandles
1220 [-]: LEN       R44 R44      ; R44 := # R44
1221 [-]: GETTABLE  R45 R39 K158 ; R45 := R39[2]
1222 [-]: GETGLOBAL R46 K172     ; R46 := modularGunBarrels
1223 [-]: LEN       R46 R46      ; R46 := # R46
1224 [-]: GETTABLE  R47 R39 K160 ; R47 := R39[3]
1225 [-]: GETGLOBAL R48 K173     ; R48 := modularGunClips
1226 [-]: LEN       R48 R48      ; R48 := # R48
1227 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
1228 [-]: MOVE      R40 R41      ; R40 := R41
1229 [-]: JMP       1247         ; PC := 1247
1230 [-]: GETGLOBAL R41 K154     ; R41 := 0x7B89D6F2
1231 [-]: GETTABLE  R42 R38 K153 ; R42 := R38["RawItem"]
1232 [-]: SELF      R42 R42 K155 ; R43 := R42; R42 := R42["0x17D2B78C"]
1233 [-]: GETGLOBAL R44 K89      ; R44 := Lotus_Game
1234 [-]: GETTABLE  R44 R44 K156 ; R44 := R44["WF_GILDED"]
1235 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1236 [-]: GETTABLE  R43 R39 K25  ; R43 := R39[1]
1237 [-]: GETGLOBAL R44 K174     ; R44 := modularStrikes
1238 [-]: LEN       R44 R44      ; R44 := # R44
1239 [-]: GETTABLE  R45 R39 K158 ; R45 := R39[2]
1240 [-]: GETGLOBAL R46 K175     ; R46 := modularGrips
1241 [-]: LEN       R46 R46      ; R46 := # R46
1242 [-]: GETTABLE  R47 R39 K160 ; R47 := R39[3]
1243 [-]: GETGLOBAL R48 K176     ; R48 := modularLinks
1244 [-]: LEN       R48 R48      ; R48 := # R48
1245 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
1246 [-]: MOVE      R40 R41      ; R40 := R41
1247 [-]: MOVE      R41 R30      ; R41 := R30
1248 [-]: GETTABLE  R42 R38 K152 ; R42 := R38["Name"]
1249 [-]: LOADK     R43 K66      ; R43 := ":"
1250 [-]: MOVE      R44 R40      ; R44 := R40
1251 [-]: CONCAT    R33 R41 R44  ; R33 := R41 .. R42 .. R43 .. R44
1252 [-]: JMP       1255         ; PC := 1255
1253 [-]: TFORLOOP  R34 2        ; R37,R38 :=  R34(R35,R36); if R37 ~= nil then begin PC = 1115; R36 := R37 end
1254 [-]: JMP       1115         ; PC := 1115
1255 [-]: EQ        1 R33 K55    ; if R33 == nil then PC := 1265
1256 [-]: JMP       1265         ; PC := 1265
1257 [-]: GETUPVAL  R41 U13      ; R41 := U13
1258 [-]: MOVE      R42 R3       ; R42 := R3
1259 [-]: MOVE      R43 R13      ; R43 := R13
1260 [-]: MOVE      R44 R33      ; R44 := R33
1261 [-]: MOVE      R45 R29      ; R45 := R29
1262 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1263 [-]: RETURN    R0 1         ; return 
1264 [-]: JMP       1268         ; PC := 1268
1265 [-]: ADD       R10 R12 K25  ; R10 := R12 + 1
1266 [-]: JMP       1268         ; PC := 1268
1267 [-]: ADD       R10 R12 K25  ; R10 := R12 + 1
1268 [-]: CLOSE     R13          ; SAVE R13,...
1269 [-]: JMP       91           ; PC := 91
1270 [-]: JMP       1272         ; PC := 1272
1271 [-]: JMP       91           ; PC := 91
1272 [-]: MOVE      R13 R6       ; R13 := R6
1273 [-]: GETUPVAL  R14 U8       ; R14 := U8
1274 [-]: GETTABLE  R14 R14 K36  ; R14 := R14["OmegaLinks"]
1275 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1276 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1277 [-]: JMP       1332         ; PC := 1332
1278 [-]: MOVE      R13 R6       ; R13 := R6
1279 [-]: GETUPVAL  R14 U8       ; R14 := U8
1280 [-]: GETTABLE  R14 R14 K71  ; R14 := R14["SongLinks"]
1281 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1282 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1283 [-]: JMP       1332         ; PC := 1332
1284 [-]: MOVE      R13 R6       ; R13 := R6
1285 [-]: GETUPVAL  R14 U8       ; R14 := U8
1286 [-]: GETTABLE  R14 R14 K91  ; R14 := R14["ZawLinks"]
1287 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1288 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1289 [-]: JMP       1332         ; PC := 1332
1290 [-]: MOVE      R13 R6       ; R13 := R6
1291 [-]: GETUPVAL  R14 U8       ; R14 := U8
1292 [-]: GETTABLE  R14 R14 K96  ; R14 := R14["AmpLinks"]
1293 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1294 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1295 [-]: JMP       1332         ; PC := 1332
1296 [-]: MOVE      R13 R6       ; R13 := R6
1297 [-]: GETUPVAL  R14 U8       ; R14 := U8
1298 [-]: GETTABLE  R14 R14 K101 ; R14 := R14["MoaPetLinks"]
1299 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1300 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1301 [-]: JMP       1332         ; PC := 1332
1302 [-]: MOVE      R13 R6       ; R13 := R6
1303 [-]: GETUPVAL  R14 U8       ; R14 := U8
1304 [-]: GETTABLE  R14 R14 K106 ; R14 := R14["KdriveLinks"]
1305 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1306 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1307 [-]: JMP       1332         ; PC := 1332
1308 [-]: MOVE      R13 R6       ; R13 := R6
1309 [-]: GETUPVAL  R14 U8       ; R14 := U8
1310 [-]: GETTABLE  R14 R14 K111 ; R14 := R14["KitgunLinks"]
1311 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1312 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1313 [-]: JMP       1332         ; PC := 1332
1314 [-]: MOVE      R13 R6       ; R13 := R6
1315 [-]: GETUPVAL  R14 U8       ; R14 := U8
1316 [-]: GETTABLE  R14 R14 K126 ; R14 := R14["AppearanceLinks"]
1317 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1318 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1319 [-]: JMP       1332         ; PC := 1332
1320 [-]: MOVE      R13 R6       ; R13 := R6
1321 [-]: GETUPVAL  R14 U8       ; R14 := U8
1322 [-]: GETTABLE  R14 R14 K139 ; R14 := R14["ModConfigLinks"]
1323 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1324 [-]: LT        1 K2 R13     ; if 0 < R13 then PC := 1332
1325 [-]: JMP       1332         ; PC := 1332
1326 [-]: MOVE      R13 R6       ; R13 := R6
1327 [-]: GETUPVAL  R14 U8       ; R14 := U8
1328 [-]: GETTABLE  R14 R14 K149 ; R14 := R14["ShawzinLinks"]
1329 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1330 [-]: LT        0 K2 R13     ; if 0 >= R13 then PC := 1348
1331 [-]: JMP       1348         ; PC := 1348
1332 [-]: NEWTABLE  R13 0 0      ; R13 := {}
1333 [-]: MOVE      R4 R13       ; R4 := R13
1334 [-]: NEWTABLE  R13 0 0      ; R13 := {}
1335 [-]: MOVE      R5 R13       ; R5 := R13
1336 [-]: GETGLOBAL R13 K3       ; R13 := 0x400E7765
1337 [-]: MOVE      R14 R3       ; R14 := R3
1338 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1339 [-]: TEST      R13 1        ; if R13 then PC := 1348
1340 [-]: JMP       1348         ; PC := 1348
1341 [-]: EQ        1 R3 K5      ; if R3 == "" then PC := 1348
1342 [-]: JMP       1348         ; PC := 1348
1343 [-]: GETUPVAL  R13 U22      ; R13 := U22
1344 [-]: MOVE      R14 R3       ; R14 := R3
1345 [-]: MOVE      R15 R4       ; R15 := R4
1346 [-]: MOVE      R16 R5       ; R16 := R5
1347 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
1348 [-]: GETUPVAL  R13 U8       ; R13 := U8
1349 [-]: GETTABLE  R13 R13 K177 ; R13 := R13["GuildReplacement"]
1350 [-]: TEST      R13 1        ; if R13 then PC := 1375
1351 [-]: JMP       1375         ; PC := 1375
1352 [-]: GETGLOBAL R13 K6       ; R13 := string
1353 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["0xDE44F664"]
1354 [-]: MOVE      R14 R3       ; R14 := R3
1355 [-]: LOADK     R15 K178     ; R15 := "{GUILD=.*}"
1356 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
1357 [-]: TEST      R13 0        ; if not R13 then PC := 1375
1358 [-]: JMP       1375         ; PC := 1375
1359 [-]: GETUPVAL  R14 U23      ; R14 := U23
1360 [-]: SELF      R14 R14 K179 ; R15 := R14; R14 := R14["0x18AAE1E3"]
1361 [-]: CALL      R14 2 2      ; R14 := R14(R15)
1362 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
1363 [-]: MOVE      R16 R14      ; R16 := R14
1364 [-]: CALL      R15 2 2      ; R15 := R15(R16)
1365 [-]: TEST      R15 1        ; if R15 then PC := 1374
1366 [-]: JMP       1374         ; PC := 1374
1367 [-]: SELF      R15 R14 K180 ; R16 := R14; R15 := R14["0xAE78D1F"]
1368 [-]: GETGLOBAL R17 K13      ; R17 := mMovie
1369 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17["0x5DB0BD4"]
1370 [-]: LOADK     R19 K181     ; R19 := "/Lotus/Language/Menu/Chat_InvalidClanLink"
1371 [-]: MOVE      R20 R0       ; R20 := R0
1372 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
1373 [-]: CALL      R15 0 1      ; R15(R16,...)
1374 [-]: RETURN    R0 1         ; return 
1375 [-]: GETUPVAL  R15 U8       ; R15 := U8
1376 [-]: GETTABLE  R15 R15 K177 ; R15 := R15["GuildReplacement"]
1377 [-]: TEST      R15 1        ; if R15 then PC := 1501
1378 [-]: JMP       1501         ; PC := 1501
1379 [-]: GETUPVAL  R15 U23      ; R15 := U23
1380 [-]: GETTABLE  R15 R15 K182 ; R15 := R15["mCachedGuildId"]
1381 [-]: EQ        1 R15 K55    ; if R15 == nil then PC := 1501
1382 [-]: JMP       1501         ; PC := 1501
1383 [-]: GETUPVAL  R15 U23      ; R15 := U23
1384 [-]: GETTABLE  R15 R15 K182 ; R15 := R15["mCachedGuildId"]
1385 [-]: EQ        1 R15 K5     ; if R15 == "" then PC := 1501
1386 [-]: JMP       1501         ; PC := 1501
1387 [-]: LOADK     R10 K25      ; R10 := 1
1388 [-]: LEN       R15 R3       ; R15 := # R3
1389 [-]: LT        0 R10 R15    ; if R10 >= R15 then PC := 1459
1390 [-]: JMP       1459         ; PC := 1459
1391 [-]: GETGLOBAL R15 K6       ; R15 := string
1392 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["0xDE44F664"]
1393 [-]: MOVE      R16 R3       ; R16 := R3
1394 [-]: LOADK     R17 K183     ; R17 := "{[^%]%[{}]*}"
1395 [-]: MOVE      R18 R10      ; R18 := R10
1396 [-]: CALL      R15 4 3      ; R15,R16 := R15(R16,R17,R18)
1397 [-]: TEST      R15 0        ; if not R15 then PC := 1459
1398 [-]: JMP       1459         ; PC := 1459
1399 [-]: GETGLOBAL R17 K6       ; R17 := string
1400 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["0x7B782033"]
1401 [-]: MOVE      R18 R3       ; R18 := R3
1402 [-]: ADD       R19 R15 K25  ; R19 := R15 + 1
1403 [-]: SUB       R20 R16 K25  ; R20 := R16 - 1
1404 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
1405 [-]: GETGLOBAL R18 K6       ; R18 := string
1406 [-]: GETTABLE  R18 R18 K29  ; R18 := R18["0xBDD0D625"]
1407 [-]: MOVE      R19 R17      ; R19 := R17
1408 [-]: CALL      R18 2 2      ; R18 := R18(R19)
1409 [-]: LOADNIL   R19 R19      ; R19 := nil
1410 [-]: GETUPVAL  R20 U24      ; R20 := U24
1411 [-]: SELF      R20 R20 K184 ; R21 := R20; R20 := R20["0x6D176768"]
1412 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1413 [-]: GETGLOBAL R21 K6       ; R21 := string
1414 [-]: GETTABLE  R21 R21 K29  ; R21 := R21["0xBDD0D625"]
1415 [-]: GETGLOBAL R22 K13      ; R22 := mMovie
1416 [-]: SELF      R22 R22 K14  ; R23 := R22; R22 := R22["0x5DB0BD4"]
1417 [-]: LOADK     R24 K185     ; R24 := "/Lotus/Language/Menu/Chat_ClanTitle"
1418 [-]: MOVE      R25 R0       ; R25 := R0
1419 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
1420 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
1421 [-]: EQ        1 R18 R21    ; if R18 == R21 then PC := 1429
1422 [-]: JMP       1429         ; PC := 1429
1423 [-]: GETGLOBAL R21 K6       ; R21 := string
1424 [-]: GETTABLE  R21 R21 K29  ; R21 := R21["0xBDD0D625"]
1425 [-]: MOVE      R22 R20      ; R22 := R20
1426 [-]: CALL      R21 2 2      ; R21 := R21(R22)
1427 [-]: EQ        0 R18 R21    ; if R18 ~= R21 then PC := 1430
1428 [-]: JMP       1430         ; PC := 1430
1429 [-]: MOVE      R19 R20      ; R19 := R20
1430 [-]: TEST      R19 0        ; if not R19 then PC := 1455
1431 [-]: JMP       1455         ; PC := 1455
1432 [-]: SELF      R21 R17 K186 ; R22 := R17; R21 := R17["0x633C4246"]
1433 [-]: LOADK     R23 K187     ; R23 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
1434 [-]: LOADK     R24 K188     ; R24 := "%%%0"
1435 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
1436 [-]: GETGLOBAL R22 K6       ; R22 := string
1437 [-]: GETTABLE  R22 R22 K186 ; R22 := R22["0x633C4246"]
1438 [-]: MOVE      R23 R3       ; R23 := R3
1439 [-]: LOADK     R24 K189     ; R24 := "{"
1440 [-]: MOVE      R25 R21      ; R25 := R21
1441 [-]: LOADK     R26 K190     ; R26 := "}"
1442 [-]: CONCAT    R24 R24 R26  ; R24 := R24 .. R25 .. R26
1443 [-]: LOADK     R25 K191     ; R25 := "{GUILD="
1444 [-]: GETUPVAL  R26 U23      ; R26 := U23
1445 [-]: GETTABLE  R26 R26 K182 ; R26 := R26["mCachedGuildId"]
1446 [-]: LOADK     R27 K66      ; R27 := ":"
1447 [-]: MOVE      R28 R19      ; R28 := R19
1448 [-]: LOADK     R29 K190     ; R29 := "}"
1449 [-]: CONCAT    R25 R25 R29  ; R25 := R25 .. R26 .. R27 .. R28 .. R29
1450 [-]: LOADK     R26 K25      ; R26 := 1
1451 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
1452 [-]: MOVE      R3 R22       ; R3 := R22
1453 [-]: GETUPVAL  R22 U8       ; R22 := U8
1454 [-]: SETTABLE  R22 K177 K192; R22["GuildReplacement"] := "0x1"
1455 [-]: ADD       R10 R16 K25  ; R10 := R16 + 1
1456 [-]: JMP       1388         ; PC := 1388
1457 [-]: JMP       1459         ; PC := 1459
1458 [-]: JMP       1388         ; PC := 1388
1459 [-]: GETUPVAL  R22 U8       ; R22 := U8
1460 [-]: GETTABLE  R22 R22 K177 ; R22 := R22["GuildReplacement"]
1461 [-]: TEST      R22 0        ; if not R22 then PC := 1501
1462 [-]: JMP       1501         ; PC := 1501
1463 [-]: GETUPVAL  R22 U23      ; R22 := U23
1464 [-]: GETTABLE  R22 R22 K193 ; R22 := R22["mActivePanelName"]
1465 [-]: EQ        1 R22 K5     ; if R22 == "" then PC := 1501
1466 [-]: JMP       1501         ; PC := 1501
1467 [-]: GETUPVAL  R22 U8       ; R22 := U8
1468 [-]: SETTABLE  R22 K43 R3   ; R22["Msg"] := R3
1469 [-]: GETTABLE  R22 R0 K8    ; R22 := R0["mParent"]
1470 [-]: GETTABLE  R22 R22 K9   ; R22 := R22["mInputPanel"]
1471 [-]: GETTABLE  R22 R22 K10  ; R22 := R22["mMaxMsgLength"]
1472 [-]: GETTABLE  R23 R0 K8    ; R23 := R0["mParent"]
1473 [-]: GETTABLE  R23 R23 K9   ; R23 := R23["mInputPanel"]
1474 [-]: GETTABLE  R24 R0 K8    ; R24 := R0["mParent"]
1475 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["mInputPanel"]
1476 [-]: GETTABLE  R24 R24 K11  ; R24 := R24["MAX_MSG_LIMIT"]
1477 [-]: SETTABLE  R23 K10 R24  ; R23["mMaxMsgLength"] := R24
1478 [-]: GETUPVAL  R23 U23      ; R23 := U23
1479 [-]: GETTABLE  R23 R23 K194 ; R23 := R23["mPanelList"]
1480 [-]: GETUPVAL  R24 U23      ; R24 := U23
1481 [-]: GETTABLE  R24 R24 K193 ; R24 := R24["mActivePanelName"]
1482 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
1483 [-]: SELF      R23 R23 K195 ; R24 := R23; R23 := R23["0xE1889BF6"]
1484 [-]: CALL      R23 2 2      ; R23 := R23(R24)
1485 [-]: TEST      R23 1        ; if R23 then PC := 1497
1486 [-]: JMP       1497         ; PC := 1497
1487 [-]: GETGLOBAL R23 K13      ; R23 := mMovie
1488 [-]: SELF      R23 R23 K196 ; R24 := R23; R23 := R23["0xD6A79FE9"]
1489 [-]: GETUPVAL  R25 U23      ; R25 := U23
1490 [-]: GETTABLE  R25 R25 K9   ; R25 := R25["mInputPanel"]
1491 [-]: GETTABLE  R25 R25 K197 ; R25 := R25["mClipPath"]
1492 [-]: LOADK     R26 K198     ; R26 := ".MessageBox"
1493 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
1494 [-]: LOADK     R26 K199     ; R26 := "text"
1495 [-]: LOADK     R27 K5       ; R27 := ""
1496 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
1497 [-]: GETTABLE  R23 R0 K8    ; R23 := R0["mParent"]
1498 [-]: GETTABLE  R23 R23 K9   ; R23 := R23["mInputPanel"]
1499 [-]: SETTABLE  R23 K10 R22  ; R23["mMaxMsgLength"] := R22
1500 [-]: RETURN    R0 1         ; return 
1501 [-]: GETUPVAL  R23 U8       ; R23 := U8
1502 [-]: SETTABLE  R23 K177 K200; R23["GuildReplacement"] := "0x0"
1503 [-]: LOADK     R23 K201     ; R23 := "#"
1504 [-]: GETTABLE  R24 R0 K202  ; R24 := R0["mChannelName"]
1505 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
1506 [-]: LEN       R24 R4       ; R24 := # R4
1507 [-]: GETGLOBAL R25 K6       ; R25 := string
1508 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["0xBDD0D625"]
1509 [-]: GETTABLE  R26 R4 K25   ; R26 := R4[1]
1510 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1511 [-]: SETTABLE  R4 K25 R25   ; R4[1] := R25
1512 [-]: GETUPVAL  R25 U23      ; R25 := U23
1513 [-]: SELF      R25 R25 K179 ; R26 := R25; R25 := R25["0x18AAE1E3"]
1514 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1515 [-]: GETGLOBAL R26 K203     ; R26 := gMatchingService
1516 [-]: SELF      R26 R26 K204 ; R27 := R26; R26 := R26["0xF0C493C"]
1517 [-]: CALL      R26 2 2      ; R26 := R26(R27)
1518 [-]: CLOSURE   R27 15       ; R27 := closure(Function #97.5.16)
1519 [-]: MOVE      R0 R10       ; R0 := R10
1520 [-]: MOVE      R0 R3        ; R0 := R3
1521 [-]: GETUPVAL  R0 U25       ; R0 := U25
1522 [-]: GETUPVAL  R0 U26       ; R0 := U26
1523 [-]: GETUPVAL  R0 U8        ; R0 := U8
1524 [-]: GETUPVAL  R0 U23       ; R0 := U23
1525 [-]: MOVE      R28 R0       ; R28 := R0
1526 [-]: GETTABLE  R29 R4 K25   ; R29 := R4[1]
1527 [-]: EQ        1 R29 K205   ; if R29 == "/w" then PC := 1532
1528 [-]: JMP       1532         ; PC := 1532
1529 [-]: GETTABLE  R29 R4 K25   ; R29 := R4[1]
1530 [-]: EQ        0 R29 K206   ; if R29 ~= "/whisper" then PC := 1654
1531 [-]: JMP       1654         ; PC := 1654
1532 [-]: GETGLOBAL R29 K20      ; R29 := _G
1533 [-]: GETTABLE  R29 R29 K207 ; R29 := R29["StalkerMode"]
1534 [-]: TEST      R29 1        ; if R29 then PC := 1654
1535 [-]: JMP       1654         ; PC := 1654
1536 [-]: MOVE      R29 R27      ; R29 := R27
1537 [-]: CALL      R29 1 2      ; R29 := R29()
1538 [-]: TEST      R29 1        ; if R29 then PC := 1541
1539 [-]: JMP       1541         ; PC := 1541
1540 [-]: RETURN    R0 1         ; return 
1541 [-]: LE        0 K160 R24   ; if 3 > R24 then PC := 1643
1542 [-]: JMP       1643         ; PC := 1643
1543 [-]: GETTABLE  R23 R5 K158  ; R23 := R5[2]
1544 [-]: GETGLOBAL R29 K3       ; R29 := 0x400E7765
1545 [-]: GETUPVAL  R30 U24      ; R30 := U24
1546 [-]: CALL      R29 2 2      ; R29 := R29(R30)
1547 [-]: TEST      R29 1        ; if R29 then PC := 1568
1548 [-]: JMP       1568         ; PC := 1568
1549 [-]: GETUPVAL  R29 U24      ; R29 := U24
1550 [-]: SELF      R29 R29 K208 ; R30 := R29; R29 := R29["0xF075C8EC"]
1551 [-]: MOVE      R31 R23      ; R31 := R23
1552 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
1553 [-]: TEST      R29 0        ; if not R29 then PC := 1568
1554 [-]: JMP       1568         ; PC := 1568
1555 [-]: SELF      R29 R0 K12   ; R30 := R0; R29 := R0["0x4313BA6"]
1556 [-]: GETGLOBAL R31 K13      ; R31 := mMovie
1557 [-]: SELF      R31 R31 K14  ; R32 := R31; R31 := R31["0x5DB0BD4"]
1558 [-]: LOADK     R33 K209     ; R33 := "/Lotus/Language/Menu/Chat_CannotWhisperIgnoredPlayer"
1559 [-]: MOVE      R34 R0       ; R34 := R0
1560 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1561 [-]: MOVE      R32 R23      ; R32 := R23
1562 [-]: LOADK     R33 K210     ; R33 := "."
1563 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
1564 [-]: GETTABLE  R32 R0 K16   ; R32 := R0["MESSAGE_TYPE_SYSTEM"]
1565 [-]: LOADK     R33 K5       ; R33 := ""
1566 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
1567 [-]: JMP       1652         ; PC := 1652
1568 [-]: GETGLOBAL R29 K3       ; R29 := 0x400E7765
1569 [-]: GETTABLE  R30 R0 K8    ; R30 := R0["mParent"]
1570 [-]: GETTABLE  R30 R30 K211 ; R30 := R30["mUser"]
1571 [-]: CALL      R29 2 2      ; R29 := R29(R30)
1572 [-]: TEST      R29 1        ; if R29 then PC := 1595
1573 [-]: JMP       1595         ; PC := 1595
1574 [-]: GETGLOBAL R29 K6       ; R29 := string
1575 [-]: GETTABLE  R29 R29 K29  ; R29 := R29["0xBDD0D625"]
1576 [-]: GETTABLE  R30 R0 K8    ; R30 := R0["mParent"]
1577 [-]: GETTABLE  R30 R30 K211 ; R30 := R30["mUser"]
1578 [-]: CALL      R29 2 2      ; R29 := R29(R30)
1579 [-]: GETGLOBAL R30 K6       ; R30 := string
1580 [-]: GETTABLE  R30 R30 K29  ; R30 := R30["0xBDD0D625"]
1581 [-]: MOVE      R31 R23      ; R31 := R23
1582 [-]: CALL      R30 2 2      ; R30 := R30(R31)
1583 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 1595
1584 [-]: JMP       1595         ; PC := 1595
1585 [-]: SELF      R29 R0 K12   ; R30 := R0; R29 := R0["0x4313BA6"]
1586 [-]: GETGLOBAL R31 K13      ; R31 := mMovie
1587 [-]: SELF      R31 R31 K14  ; R32 := R31; R31 := R31["0x5DB0BD4"]
1588 [-]: LOADK     R33 K212     ; R33 := "/Lotus/Language/Menu/Chat_CannotWhisperSelf"
1589 [-]: MOVE      R34 R0       ; R34 := R0
1590 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1591 [-]: GETTABLE  R32 R0 K16   ; R32 := R0["MESSAGE_TYPE_SYSTEM"]
1592 [-]: LOADK     R33 K5       ; R33 := ""
1593 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
1594 [-]: JMP       1652         ; PC := 1652
1595 [-]: GETUPVAL  R29 U1       ; R29 := U1
1596 [-]: GETTABLE  R29 R29 K213 ; R29 := R29["0x4BACCB71"]
1597 [-]: MOVE      R30 R23      ; R30 := R23
1598 [-]: LOADK     R31 K214     ; R31 := "[]"
1599 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
1600 [-]: EQ        1 R29 K2     ; if R29 == 0 then PC := 1612
1601 [-]: JMP       1612         ; PC := 1612
1602 [-]: SELF      R29 R0 K12   ; R30 := R0; R29 := R0["0x4313BA6"]
1603 [-]: GETGLOBAL R31 K13      ; R31 := mMovie
1604 [-]: SELF      R31 R31 K14  ; R32 := R31; R31 := R31["0x5DB0BD4"]
1605 [-]: LOADK     R33 K215     ; R33 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
1606 [-]: MOVE      R34 R0       ; R34 := R0
1607 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1608 [-]: GETTABLE  R32 R0 K16   ; R32 := R0["MESSAGE_TYPE_SYSTEM"]
1609 [-]: LOADK     R33 K5       ; R33 := ""
1610 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
1611 [-]: JMP       1652         ; PC := 1652
1612 [-]: GETGLOBAL R29 K6       ; R29 := string
1613 [-]: GETTABLE  R29 R29 K26  ; R29 := R29["0xDE44F664"]
1614 [-]: MOVE      R30 R3       ; R30 := R3
1615 [-]: GETTABLE  R31 R4 K158  ; R31 := R4[2]
1616 [-]: LOADK     R32 K216     ; R32 := " "
1617 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
1618 [-]: LOADK     R32 K2       ; R32 := 0
1619 [-]: MOVE      R33 R1       ; R33 := R1
1620 [-]: CALL      R29 5 3      ; R29,R30 := R29(R30,R31,R32,R33)
1621 [-]: EQ        0 R30 K55    ; if R30 ~= nil then PC := 1624
1622 [-]: JMP       1624         ; PC := 1624
1623 [-]: RETURN    R0 1         ; return 
1624 [-]: GETGLOBAL R31 K6       ; R31 := string
1625 [-]: GETTABLE  R31 R31 K28  ; R31 := R31["0x7B782033"]
1626 [-]: MOVE      R32 R3       ; R32 := R3
1627 [-]: ADD       R33 R30 K25  ; R33 := R30 + 1
1628 [-]: LOADK     R34 K217     ; R34 := -1
1629 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1630 [-]: MOVE      R3 R31       ; R3 := R31
1631 [-]: GETGLOBAL R31 K3       ; R31 := 0x400E7765
1632 [-]: MOVE      R32 R26      ; R32 := R26
1633 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1634 [-]: TEST      R31 1        ; if R31 then PC := 1652
1635 [-]: JMP       1652         ; PC := 1652
1636 [-]: MOVE      R3 R27       ; R3 := R27
1637 [-]: MOVE      R23 R28      ; R23 := R28
1638 [-]: SELF      R31 R26 K218 ; R32 := R26; R31 := R26["0x535FF489"]
1639 [-]: MOVE      R33 R23      ; R33 := R23
1640 [-]: LOADK     R34 K219     ; R34 := "PrivateConvoPlayerIDResultOutgoing"
1641 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
1642 [-]: JMP       1652         ; PC := 1652
1643 [-]: SELF      R31 R0 K12   ; R32 := R0; R31 := R0["0x4313BA6"]
1644 [-]: GETGLOBAL R33 K13      ; R33 := mMovie
1645 [-]: SELF      R33 R33 K14  ; R34 := R33; R33 := R33["0x5DB0BD4"]
1646 [-]: LOADK     R35 K220     ; R35 := "/Lotus/Language/Menu/Chat_HelpWhisper"
1647 [-]: MOVE      R36 R0       ; R36 := R0
1648 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
1649 [-]: GETTABLE  R34 R0 K16   ; R34 := R0["MESSAGE_TYPE_SYSTEM"]
1650 [-]: LOADK     R35 K5       ; R35 := ""
1651 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1652 [-]: RETURN    R0 1         ; return 
1653 [-]: JMP       2823         ; PC := 2823
1654 [-]: GETTABLE  R31 R4 K25   ; R31 := R4[1]
1655 [-]: EQ        0 R31 K221   ; if R31 ~= "/c" then PC := 1690
1656 [-]: JMP       1690         ; PC := 1690
1657 [-]: GETTABLE  R31 R0 K8    ; R31 := R0["mParent"]
1658 [-]: GETTABLE  R31 R31 K222 ; R31 := R31["mPanelShortcuts"]
1659 [-]: GETUPVAL  R32 U23      ; R32 := U23
1660 [-]: GETTABLE  R32 R32 K223 ; R32 := R32["CHANNEL_CLAN"]
1661 [-]: GETTABLE  R23 R31 R32  ; R23 := R31[R32]
1662 [-]: EQ        0 R23 K55    ; if R23 ~= nil then PC := 1665
1663 [-]: JMP       1665         ; PC := 1665
1664 [-]: RETURN    R0 1         ; return 
1665 [-]: GETTABLE  R31 R0 K8    ; R31 := R0["mParent"]
1666 [-]: SELF      R31 R31 K224 ; R32 := R31; R31 := R31["0x527A2C42"]
1667 [-]: GETUPVAL  R33 U23      ; R33 := U23
1668 [-]: GETTABLE  R33 R33 K223 ; R33 := R33["CHANNEL_CLAN"]
1669 [-]: CALL      R31 3 1      ; R31(R32,R33)
1670 [-]: LT        0 K25 R24    ; if 1 >= R24 then PC := 1688
1671 [-]: JMP       1688         ; PC := 1688
1672 [-]: GETGLOBAL R31 K6       ; R31 := string
1673 [-]: GETTABLE  R31 R31 K26  ; R31 := R31["0xDE44F664"]
1674 [-]: MOVE      R32 R3       ; R32 := R3
1675 [-]: LOADK     R33 K216     ; R33 := " "
1676 [-]: CALL      R31 3 3      ; R31,R32 := R31(R32,R33)
1677 [-]: EQ        0 R32 K55    ; if R32 ~= nil then PC := 1680
1678 [-]: JMP       1680         ; PC := 1680
1679 [-]: RETURN    R0 1         ; return 
1680 [-]: GETGLOBAL R33 K6       ; R33 := string
1681 [-]: GETTABLE  R33 R33 K28  ; R33 := R33["0x7B782033"]
1682 [-]: MOVE      R34 R3       ; R34 := R3
1683 [-]: ADD       R35 R32 K25  ; R35 := R32 + 1
1684 [-]: LOADK     R36 K217     ; R36 := -1
1685 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
1686 [-]: MOVE      R3 R33       ; R3 := R33
1687 [-]: JMP       2823         ; PC := 2823
1688 [-]: RETURN    R0 1         ; return 
1689 [-]: JMP       2823         ; PC := 2823
1690 [-]: GETTABLE  R33 R4 K25   ; R33 := R4[1]
1691 [-]: EQ        0 R33 K225   ; if R33 ~= "/d" then PC := 1726
1692 [-]: JMP       1726         ; PC := 1726
1693 [-]: GETTABLE  R33 R0 K8    ; R33 := R0["mParent"]
1694 [-]: GETTABLE  R33 R33 K222 ; R33 := R33["mPanelShortcuts"]
1695 [-]: GETUPVAL  R34 U23      ; R34 := U23
1696 [-]: GETTABLE  R34 R34 K226 ; R34 := R34["CHANNEL_COUNCIL"]
1697 [-]: GETTABLE  R23 R33 R34  ; R23 := R33[R34]
1698 [-]: EQ        0 R23 K55    ; if R23 ~= nil then PC := 1701
1699 [-]: JMP       1701         ; PC := 1701
1700 [-]: RETURN    R0 1         ; return 
1701 [-]: GETTABLE  R33 R0 K8    ; R33 := R0["mParent"]
1702 [-]: SELF      R33 R33 K224 ; R34 := R33; R33 := R33["0x527A2C42"]
1703 [-]: GETUPVAL  R35 U23      ; R35 := U23
1704 [-]: GETTABLE  R35 R35 K226 ; R35 := R35["CHANNEL_COUNCIL"]
1705 [-]: CALL      R33 3 1      ; R33(R34,R35)
1706 [-]: LT        0 K25 R24    ; if 1 >= R24 then PC := 1724
1707 [-]: JMP       1724         ; PC := 1724
1708 [-]: GETGLOBAL R33 K6       ; R33 := string
1709 [-]: GETTABLE  R33 R33 K26  ; R33 := R33["0xDE44F664"]
1710 [-]: MOVE      R34 R3       ; R34 := R3
1711 [-]: LOADK     R35 K216     ; R35 := " "
1712 [-]: CALL      R33 3 3      ; R33,R34 := R33(R34,R35)
1713 [-]: EQ        0 R34 K55    ; if R34 ~= nil then PC := 1716
1714 [-]: JMP       1716         ; PC := 1716
1715 [-]: RETURN    R0 1         ; return 
1716 [-]: GETGLOBAL R35 K6       ; R35 := string
1717 [-]: GETTABLE  R35 R35 K28  ; R35 := R35["0x7B782033"]
1718 [-]: MOVE      R36 R3       ; R36 := R3
1719 [-]: ADD       R37 R34 K25  ; R37 := R34 + 1
1720 [-]: LOADK     R38 K217     ; R38 := -1
1721 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
1722 [-]: MOVE      R3 R35       ; R3 := R35
1723 [-]: JMP       2823         ; PC := 2823
1724 [-]: RETURN    R0 1         ; return 
1725 [-]: JMP       2823         ; PC := 2823
1726 [-]: GETTABLE  R35 R4 K25   ; R35 := R4[1]
1727 [-]: EQ        0 R35 K227   ; if R35 ~= "/s" then PC := 1762
1728 [-]: JMP       1762         ; PC := 1762
1729 [-]: GETTABLE  R35 R0 K8    ; R35 := R0["mParent"]
1730 [-]: GETTABLE  R35 R35 K222 ; R35 := R35["mPanelShortcuts"]
1731 [-]: GETUPVAL  R36 U23      ; R36 := U23
1732 [-]: GETTABLE  R36 R36 K228 ; R36 := R36["CHANNEL_SESSION"]
1733 [-]: GETTABLE  R23 R35 R36  ; R23 := R35[R36]
1734 [-]: EQ        0 R23 K55    ; if R23 ~= nil then PC := 1737
1735 [-]: JMP       1737         ; PC := 1737
1736 [-]: RETURN    R0 1         ; return 
1737 [-]: GETTABLE  R35 R0 K8    ; R35 := R0["mParent"]
1738 [-]: SELF      R35 R35 K224 ; R36 := R35; R35 := R35["0x527A2C42"]
1739 [-]: GETUPVAL  R37 U23      ; R37 := U23
1740 [-]: GETTABLE  R37 R37 K228 ; R37 := R37["CHANNEL_SESSION"]
1741 [-]: CALL      R35 3 1      ; R35(R36,R37)
1742 [-]: LT        0 K25 R24    ; if 1 >= R24 then PC := 1760
1743 [-]: JMP       1760         ; PC := 1760
1744 [-]: GETGLOBAL R35 K6       ; R35 := string
1745 [-]: GETTABLE  R35 R35 K26  ; R35 := R35["0xDE44F664"]
1746 [-]: MOVE      R36 R3       ; R36 := R3
1747 [-]: LOADK     R37 K216     ; R37 := " "
1748 [-]: CALL      R35 3 3      ; R35,R36 := R35(R36,R37)
1749 [-]: EQ        0 R36 K55    ; if R36 ~= nil then PC := 1752
1750 [-]: JMP       1752         ; PC := 1752
1751 [-]: RETURN    R0 1         ; return 
1752 [-]: GETGLOBAL R37 K6       ; R37 := string
1753 [-]: GETTABLE  R37 R37 K28  ; R37 := R37["0x7B782033"]
1754 [-]: MOVE      R38 R3       ; R38 := R3
1755 [-]: ADD       R39 R36 K25  ; R39 := R36 + 1
1756 [-]: LOADK     R40 K217     ; R40 := -1
1757 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
1758 [-]: MOVE      R3 R37       ; R3 := R37
1759 [-]: JMP       2823         ; PC := 2823
1760 [-]: RETURN    R0 1         ; return 
1761 [-]: JMP       2823         ; PC := 2823
1762 [-]: GETTABLE  R37 R4 K25   ; R37 := R4[1]
1763 [-]: EQ        0 R37 K229   ; if R37 ~= "/r" then PC := 1798
1764 [-]: JMP       1798         ; PC := 1798
1765 [-]: GETTABLE  R37 R0 K8    ; R37 := R0["mParent"]
1766 [-]: GETTABLE  R37 R37 K222 ; R37 := R37["mPanelShortcuts"]
1767 [-]: GETUPVAL  R38 U23      ; R38 := U23
1768 [-]: GETTABLE  R38 R38 K230 ; R38 := R38["CHANNEL_HUB"]
1769 [-]: GETTABLE  R23 R37 R38  ; R23 := R37[R38]
1770 [-]: EQ        0 R23 K55    ; if R23 ~= nil then PC := 1773
1771 [-]: JMP       1773         ; PC := 1773
1772 [-]: RETURN    R0 1         ; return 
1773 [-]: GETTABLE  R37 R0 K8    ; R37 := R0["mParent"]
1774 [-]: SELF      R37 R37 K224 ; R38 := R37; R37 := R37["0x527A2C42"]
1775 [-]: GETUPVAL  R39 U23      ; R39 := U23
1776 [-]: GETTABLE  R39 R39 K230 ; R39 := R39["CHANNEL_HUB"]
1777 [-]: CALL      R37 3 1      ; R37(R38,R39)
1778 [-]: LT        0 K25 R24    ; if 1 >= R24 then PC := 1796
1779 [-]: JMP       1796         ; PC := 1796
1780 [-]: GETGLOBAL R37 K6       ; R37 := string
1781 [-]: GETTABLE  R37 R37 K26  ; R37 := R37["0xDE44F664"]
1782 [-]: MOVE      R38 R3       ; R38 := R3
1783 [-]: LOADK     R39 K216     ; R39 := " "
1784 [-]: CALL      R37 3 3      ; R37,R38 := R37(R38,R39)
1785 [-]: EQ        0 R38 K55    ; if R38 ~= nil then PC := 1788
1786 [-]: JMP       1788         ; PC := 1788
1787 [-]: RETURN    R0 1         ; return 
1788 [-]: GETGLOBAL R39 K6       ; R39 := string
1789 [-]: GETTABLE  R39 R39 K28  ; R39 := R39["0x7B782033"]
1790 [-]: MOVE      R40 R3       ; R40 := R3
1791 [-]: ADD       R41 R38 K25  ; R41 := R38 + 1
1792 [-]: LOADK     R42 K217     ; R42 := -1
1793 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
1794 [-]: MOVE      R3 R39       ; R3 := R39
1795 [-]: JMP       2823         ; PC := 2823
1796 [-]: RETURN    R0 1         ; return 
1797 [-]: JMP       2823         ; PC := 2823
1798 [-]: GETTABLE  R39 R4 K25   ; R39 := R4[1]
1799 [-]: EQ        0 R39 K231   ; if R39 ~= "/g" then PC := 1834
1800 [-]: JMP       1834         ; PC := 1834
1801 [-]: GETTABLE  R39 R0 K8    ; R39 := R0["mParent"]
1802 [-]: GETTABLE  R39 R39 K222 ; R39 := R39["mPanelShortcuts"]
1803 [-]: GETUPVAL  R40 U23      ; R40 := U23
1804 [-]: GETTABLE  R40 R40 K232 ; R40 := R40["CHANNEL_GLOBAL"]
1805 [-]: GETTABLE  R23 R39 R40  ; R23 := R39[R40]
1806 [-]: EQ        0 R23 K55    ; if R23 ~= nil then PC := 1809
1807 [-]: JMP       1809         ; PC := 1809
1808 [-]: RETURN    R0 1         ; return 
1809 [-]: GETTABLE  R39 R0 K8    ; R39 := R0["mParent"]
1810 [-]: SELF      R39 R39 K224 ; R40 := R39; R39 := R39["0x527A2C42"]
1811 [-]: GETUPVAL  R41 U23      ; R41 := U23
1812 [-]: GETTABLE  R41 R41 K232 ; R41 := R41["CHANNEL_GLOBAL"]
1813 [-]: CALL      R39 3 1      ; R39(R40,R41)
1814 [-]: LT        0 K25 R24    ; if 1 >= R24 then PC := 1832
1815 [-]: JMP       1832         ; PC := 1832
1816 [-]: GETGLOBAL R39 K6       ; R39 := string
1817 [-]: GETTABLE  R39 R39 K26  ; R39 := R39["0xDE44F664"]
1818 [-]: MOVE      R40 R3       ; R40 := R3
1819 [-]: LOADK     R41 K216     ; R41 := " "
1820 [-]: CALL      R39 3 3      ; R39,R40 := R39(R40,R41)
1821 [-]: EQ        0 R40 K55    ; if R40 ~= nil then PC := 1824
1822 [-]: JMP       1824         ; PC := 1824
1823 [-]: RETURN    R0 1         ; return 
1824 [-]: GETGLOBAL R41 K6       ; R41 := string
1825 [-]: GETTABLE  R41 R41 K28  ; R41 := R41["0x7B782033"]
1826 [-]: MOVE      R42 R3       ; R42 := R3
1827 [-]: ADD       R43 R40 K25  ; R43 := R40 + 1
1828 [-]: LOADK     R44 K217     ; R44 := -1
1829 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
1830 [-]: MOVE      R3 R41       ; R3 := R41
1831 [-]: JMP       2823         ; PC := 2823
1832 [-]: RETURN    R0 1         ; return 
1833 [-]: JMP       2823         ; PC := 2823
1834 [-]: GETTABLE  R41 R4 K25   ; R41 := R4[1]
1835 [-]: EQ        1 R41 K233   ; if R41 == "/?" then PC := 1843
1836 [-]: JMP       1843         ; PC := 1843
1837 [-]: GETTABLE  R41 R4 K25   ; R41 := R4[1]
1838 [-]: EQ        1 R41 K234   ; if R41 == "/help" then PC := 1843
1839 [-]: JMP       1843         ; PC := 1843
1840 [-]: GETTABLE  R41 R4 K25   ; R41 := R4[1]
1841 [-]: EQ        0 R41 K235   ; if R41 ~= "/h" then PC := 2049
1842 [-]: JMP       2049         ; PC := 2049
1843 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1844 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1845 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1846 [-]: LOADK     R45 K236     ; R45 := "/Lotus/Language/Menu/Chat_HelpGlobal"
1847 [-]: MOVE      R46 R0       ; R46 := R0
1848 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1849 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1850 [-]: LOADK     R45 K5       ; R45 := ""
1851 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1852 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1853 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1854 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1855 [-]: LOADK     R45 K237     ; R45 := "/Lotus/Language/Menu/Chat_HelpClan"
1856 [-]: MOVE      R46 R0       ; R46 := R0
1857 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1858 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1859 [-]: LOADK     R45 K5       ; R45 := ""
1860 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1861 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1862 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1863 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1864 [-]: LOADK     R45 K238     ; R45 := "/Lotus/Language/Menu/Chat_HelpSquad"
1865 [-]: MOVE      R46 R0       ; R46 := R0
1866 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1867 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1868 [-]: LOADK     R45 K5       ; R45 := ""
1869 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1870 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1871 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1872 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1873 [-]: LOADK     R45 K239     ; R45 := "/Lotus/Language/Menu/Chat_HelpHub"
1874 [-]: MOVE      R46 R0       ; R46 := R0
1875 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1876 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1877 [-]: LOADK     R45 K5       ; R45 := ""
1878 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1879 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1880 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1881 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1882 [-]: LOADK     R45 K240     ; R45 := "/Lotus/Language/Menu/Chat_HelpCouncil"
1883 [-]: MOVE      R46 R0       ; R46 := R0
1884 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1885 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1886 [-]: LOADK     R45 K5       ; R45 := ""
1887 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1888 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1889 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1890 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1891 [-]: LOADK     R45 K220     ; R45 := "/Lotus/Language/Menu/Chat_HelpWhisper"
1892 [-]: MOVE      R46 R0       ; R46 := R0
1893 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1894 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1895 [-]: LOADK     R45 K5       ; R45 := ""
1896 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1897 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1898 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1899 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1900 [-]: LOADK     R45 K241     ; R45 := "/Lotus/Language/Menu/Chat_HelpIgnore"
1901 [-]: MOVE      R46 R0       ; R46 := R0
1902 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1903 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1904 [-]: LOADK     R45 K5       ; R45 := ""
1905 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1906 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1907 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1908 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1909 [-]: LOADK     R45 K242     ; R45 := "/Lotus/Language/Menu/Chat_HelpTabSwitch"
1910 [-]: MOVE      R46 R0       ; R46 := R0
1911 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1912 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1913 [-]: LOADK     R45 K5       ; R45 := ""
1914 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1915 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1916 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1917 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1918 [-]: LOADK     R45 K243     ; R45 := "/Lotus/Language/Menu/Chat_AddFriendHelp_Windows"
1919 [-]: MOVE      R46 R0       ; R46 := R0
1920 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1921 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1922 [-]: LOADK     R45 K5       ; R45 := ""
1923 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1924 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1925 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1926 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1927 [-]: LOADK     R45 K244     ; R45 := "/Lotus/Language/Menu/Chat_RemoveFriendHelp"
1928 [-]: MOVE      R46 R0       ; R46 := R0
1929 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1930 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1931 [-]: LOADK     R45 K5       ; R45 := ""
1932 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1933 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1934 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1935 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1936 [-]: LOADK     R45 K245     ; R45 := "/Lotus/Language/Menu/Chat_HelpMotd"
1937 [-]: MOVE      R46 R0       ; R46 := R0
1938 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1939 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1940 [-]: LOADK     R45 K5       ; R45 := ""
1941 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1942 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1943 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1944 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1945 [-]: LOADK     R45 K246     ; R45 := "/Lotus/Language/Menu/Chat_HelpInvite"
1946 [-]: MOVE      R46 R0       ; R46 := R0
1947 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1948 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1949 [-]: LOADK     R45 K5       ; R45 := ""
1950 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1951 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1952 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1953 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1954 [-]: LOADK     R45 K247     ; R45 := "/Lotus/Language/Menu/Chat_HelpProfile"
1955 [-]: MOVE      R46 R0       ; R46 := R0
1956 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1957 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1958 [-]: LOADK     R45 K5       ; R45 := ""
1959 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1960 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1961 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1962 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1963 [-]: LOADK     R45 K248     ; R45 := "/Lotus/Language/Menu/Chat_HelpGoto"
1964 [-]: MOVE      R46 R0       ; R46 := R0
1965 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1966 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1967 [-]: LOADK     R45 K5       ; R45 := ""
1968 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1969 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1970 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1971 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1972 [-]: LOADK     R45 K249     ; R45 := "/Lotus/Language/Menu/Chat_HelpUnstuck"
1973 [-]: MOVE      R46 R0       ; R46 := R0
1974 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1975 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1976 [-]: LOADK     R45 K5       ; R45 := ""
1977 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1978 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1979 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1980 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1981 [-]: LOADK     R45 K250     ; R45 := "/Lotus/Language/Menu/Chat_HelpJoin"
1982 [-]: MOVE      R46 R0       ; R46 := R0
1983 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1984 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1985 [-]: LOADK     R45 K5       ; R45 := ""
1986 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1987 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1988 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1989 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1990 [-]: LOADK     R45 K251     ; R45 := "/Lotus/Language/SystemMessages/Chat_HelpDND"
1991 [-]: MOVE      R46 R0       ; R46 := R0
1992 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1993 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1994 [-]: LOADK     R45 K5       ; R45 := ""
1995 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1996 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
1997 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
1998 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
1999 [-]: LOADK     R45 K252     ; R45 := "/Lotus/Language/SystemMessages/Chat_HelpNormal"
2000 [-]: MOVE      R46 R0       ; R46 := R0
2001 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2002 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2003 [-]: LOADK     R45 K5       ; R45 := ""
2004 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2005 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
2006 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2007 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2008 [-]: LOADK     R45 K253     ; R45 := "/Lotus/Language/Menu/Chat_HelpItemLink"
2009 [-]: MOVE      R46 R0       ; R46 := R0
2010 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2011 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2012 [-]: LOADK     R45 K5       ; R45 := ""
2013 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2014 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
2015 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2016 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2017 [-]: LOADK     R45 K254     ; R45 := "/Lotus/Language/Menu/Chat_HelpGuildLink"
2018 [-]: MOVE      R46 R0       ; R46 := R0
2019 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2020 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2021 [-]: LOADK     R45 K5       ; R45 := ""
2022 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2023 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
2024 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2025 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2026 [-]: LOADK     R45 K255     ; R45 := "/Lotus/Language/Menu/Chat_HelpUserLink"
2027 [-]: MOVE      R46 R0       ; R46 := R0
2028 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2029 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2030 [-]: LOADK     R45 K5       ; R45 := ""
2031 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2032 [-]: GETGLOBAL R41 K256     ; R41 := Engine
2033 [-]: LOADK     R42 K257     ; R42 := "0x695D4229"
2034 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
2035 [-]: CALL      R41 1 2      ; R41 := R41()
2036 [-]: TEST      R41 0        ; if not R41 then PC := 2047
2037 [-]: JMP       2047         ; PC := 2047
2038 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
2039 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2040 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2041 [-]: LOADK     R45 K258     ; R45 := "/Lotus/Language/Menu/Chat_HelpGamertags"
2042 [-]: MOVE      R46 R0       ; R46 := R0
2043 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2044 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2045 [-]: LOADK     R45 K5       ; R45 := ""
2046 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2047 [-]: RETURN    R0 1         ; return 
2048 [-]: JMP       2823         ; PC := 2823
2049 [-]: LOADK     R41 K25      ; R41 := 1
2050 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2051 [-]: LOADK     R42 K259     ; R42 := "/t"
2052 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2063
2053 [-]: JMP       2063         ; PC := 2063
2054 [-]: GETTABLE  R41 R0 K8    ; R41 := R0["mParent"]
2055 [-]: LOADK     R43 K260     ; R43 := "0xFAFBBCBD"
2056 [-]: SELF      R41 R41 R43  ; R42 := R41; R41 := R41[R43]
2057 [-]: GETUPVAL  R43 U1       ; R43 := U1
2058 [-]: LOADK     R44 K261     ; R44 := "INCREMENT"
2059 [-]: GETTABLE  R43 R43 R44  ; R43 := R43[R44]
2060 [-]: CALL      R41 3 1      ; R41(R42,R43)
2061 [-]: RETURN    R0 1         ; return 
2062 [-]: JMP       2823         ; PC := 2823
2063 [-]: LOADK     R41 K25      ; R41 := 1
2064 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2065 [-]: LOADK     R42 K262     ; R42 := "/i"
2066 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2073
2067 [-]: JMP       2073         ; PC := 2073
2068 [-]: LOADK     R41 K25      ; R41 := 1
2069 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2070 [-]: LOADK     R42 K263     ; R42 := "/ignore"
2071 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2113
2072 [-]: JMP       2113         ; PC := 2113
2073 [-]: LEN       R41 R4       ; R41 := # R4
2074 [-]: LOADK     R42 K158     ; R42 := 2
2075 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2102
2076 [-]: JMP       2102         ; PC := 2102
2077 [-]: GETUPVAL  R41 U1       ; R41 := U1
2078 [-]: GETTABLE  R41 R41 K213 ; R41 := R41["0x4BACCB71"]
2079 [-]: LOADK     R42 K158     ; R42 := 2
2080 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2081 [-]: LOADK     R43 K214     ; R43 := "[]"
2082 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
2083 [-]: LOADK     R42 K2       ; R42 := 0
2084 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2095
2085 [-]: JMP       2095         ; PC := 2095
2086 [-]: GETUPVAL  R41 U23      ; R41 := U23
2087 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2088 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2089 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2090 [-]: LOADK     R45 K215     ; R45 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2091 [-]: MOVE      R46 R0       ; R46 := R0
2092 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2093 [-]: CALL      R41 0 1      ; R41(R42,...)
2094 [-]: JMP       2111         ; PC := 2111
2095 [-]: GETTABLE  R41 R0 K8    ; R41 := R0["mParent"]
2096 [-]: LOADK     R43 K264     ; R43 := "0xB1FCFF49"
2097 [-]: SELF      R41 R41 R43  ; R42 := R41; R41 := R41[R43]
2098 [-]: LOADK     R43 K158     ; R43 := 2
2099 [-]: GETTABLE  R43 R5 R43   ; R43 := R5[R43]
2100 [-]: CALL      R41 3 1      ; R41(R42,R43)
2101 [-]: JMP       2111         ; PC := 2111
2102 [-]: SELF      R41 R0 K12   ; R42 := R0; R41 := R0["0x4313BA6"]
2103 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2104 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2105 [-]: LOADK     R45 K241     ; R45 := "/Lotus/Language/Menu/Chat_HelpIgnore"
2106 [-]: MOVE      R46 R0       ; R46 := R0
2107 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2108 [-]: GETTABLE  R44 R0 K16   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2109 [-]: LOADK     R45 K5       ; R45 := ""
2110 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2111 [-]: RETURN    R0 1         ; return 
2112 [-]: JMP       2823         ; PC := 2823
2113 [-]: LOADK     R41 K25      ; R41 := 1
2114 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2115 [-]: LOADK     R42 K265     ; R42 := "/f"
2116 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2123
2117 [-]: JMP       2123         ; PC := 2123
2118 [-]: LOADK     R41 K25      ; R41 := 1
2119 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2120 [-]: LOADK     R42 K266     ; R42 := "/friend"
2121 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2256
2122 [-]: JMP       2256         ; PC := 2256
2123 [-]: GETGLOBAL R41 K20      ; R41 := _G
2124 [-]: GETTABLE  R41 R41 K207 ; R41 := R41["StalkerMode"]
2125 [-]: TEST      R41 1        ; if R41 then PC := 2256
2126 [-]: JMP       2256         ; PC := 2256
2127 [-]: LEN       R41 R4       ; R41 := # R4
2128 [-]: LOADK     R42 K160     ; R42 := 3
2129 [-]: LT        1 R41 R42    ; if R41 < R42 then PC := 2135
2130 [-]: JMP       2135         ; PC := 2135
2131 [-]: LEN       R41 R4       ; R41 := # R4
2132 [-]: LOADK     R42 K162     ; R42 := 4
2133 [-]: LT        0 R42 R41    ; if R42 >= R41 then PC := 2152
2134 [-]: JMP       2152         ; PC := 2152
2135 [-]: GETUPVAL  R41 U23      ; R41 := U23
2136 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2137 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2138 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2139 [-]: LOADK     R45 K243     ; R45 := "/Lotus/Language/Menu/Chat_AddFriendHelp_Windows"
2140 [-]: MOVE      R46 R0       ; R46 := R0
2141 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2142 [-]: CALL      R41 0 1      ; R41(R42,...)
2143 [-]: GETUPVAL  R41 U23      ; R41 := U23
2144 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2145 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2146 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2147 [-]: LOADK     R45 K244     ; R45 := "/Lotus/Language/Menu/Chat_RemoveFriendHelp"
2148 [-]: MOVE      R46 R0       ; R46 := R0
2149 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2150 [-]: CALL      R41 0 1      ; R41(R42,...)
2151 [-]: JMP       2254         ; PC := 2254
2152 [-]: LOADK     R41 K158     ; R41 := 2
2153 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2154 [-]: LOADK     R42 K267     ; R42 := "a"
2155 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2162
2156 [-]: JMP       2162         ; PC := 2162
2157 [-]: LOADK     R41 K158     ; R41 := 2
2158 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2159 [-]: LOADK     R42 K268     ; R42 := "add"
2160 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2211
2161 [-]: JMP       2211         ; PC := 2211
2162 [-]: GETGLOBAL R41 K6       ; R41 := string
2163 [-]: GETTABLE  R41 R41 K29  ; R41 := R41["0xBDD0D625"]
2164 [-]: LOADK     R42 K160     ; R42 := 3
2165 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2166 [-]: CALL      R41 2 2      ; R41 := R41(R42)
2167 [-]: GETGLOBAL R42 K6       ; R42 := string
2168 [-]: GETTABLE  R42 R42 K29  ; R42 := R42["0xBDD0D625"]
2169 [-]: GETTABLE  R43 R0 K8    ; R43 := R0["mParent"]
2170 [-]: GETTABLE  R43 R43 K211 ; R43 := R43["mUser"]
2171 [-]: CALL      R42 2 2      ; R42 := R42(R43)
2172 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2183
2173 [-]: JMP       2183         ; PC := 2183
2174 [-]: GETUPVAL  R41 U23      ; R41 := U23
2175 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2176 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2177 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2178 [-]: LOADK     R45 K269     ; R45 := "/Lotus/Language/Menu/SocialOverlay_FriendAddSelfError"
2179 [-]: MOVE      R46 R0       ; R46 := R0
2180 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2181 [-]: CALL      R41 0 1      ; R41(R42,...)
2182 [-]: JMP       2254         ; PC := 2254
2183 [-]: GETUPVAL  R41 U1       ; R41 := U1
2184 [-]: GETTABLE  R41 R41 K213 ; R41 := R41["0x4BACCB71"]
2185 [-]: LOADK     R42 K160     ; R42 := 3
2186 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2187 [-]: LOADK     R43 K214     ; R43 := "[]"
2188 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
2189 [-]: LOADK     R42 K2       ; R42 := 0
2190 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2201
2191 [-]: JMP       2201         ; PC := 2201
2192 [-]: GETUPVAL  R41 U23      ; R41 := U23
2193 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2194 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2195 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2196 [-]: LOADK     R45 K215     ; R45 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2197 [-]: MOVE      R46 R0       ; R46 := R0
2198 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2199 [-]: CALL      R41 0 1      ; R41(R42,...)
2200 [-]: JMP       2254         ; PC := 2254
2201 [-]: GETUPVAL  R41 U29      ; R41 := U29
2202 [-]: LOADK     R42 K270     ; R42 := "0x5FBAC3D"
2203 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
2204 [-]: LOADK     R42 K160     ; R42 := 3
2205 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2206 [-]: LOADK     R43 K271     ; R43 := "OnAddFriendResultToPanel"
2207 [-]: LOADK     R44 K162     ; R44 := 4
2208 [-]: GETTABLE  R44 R5 R44   ; R44 := R5[R44]
2209 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
2210 [-]: JMP       2254         ; PC := 2254
2211 [-]: LEN       R41 R4       ; R41 := # R4
2212 [-]: LOADK     R42 K160     ; R42 := 3
2213 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2238
2214 [-]: JMP       2238         ; PC := 2238
2215 [-]: LOADK     R41 K158     ; R41 := 2
2216 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2217 [-]: LOADK     R42 K272     ; R42 := "r"
2218 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2225
2219 [-]: JMP       2225         ; PC := 2225
2220 [-]: LOADK     R41 K158     ; R41 := 2
2221 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2222 [-]: LOADK     R42 K273     ; R42 := "remove"
2223 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2238
2224 [-]: JMP       2238         ; PC := 2238
2225 [-]: GETGLOBAL R41 K3       ; R41 := 0x400E7765
2226 [-]: GETUPVAL  R42 U24      ; R42 := U24
2227 [-]: CALL      R41 2 2      ; R41 := R41(R42)
2228 [-]: TEST      R41 1        ; if R41 then PC := 2254
2229 [-]: JMP       2254         ; PC := 2254
2230 [-]: GETUPVAL  R41 U24      ; R41 := U24
2231 [-]: LOADK     R43 K274     ; R43 := "0xC0B18FB5"
2232 [-]: SELF      R41 R41 R43  ; R42 := R41; R41 := R41[R43]
2233 [-]: LOADK     R43 K160     ; R43 := 3
2234 [-]: GETTABLE  R43 R5 R43   ; R43 := R5[R43]
2235 [-]: LOADK     R44 K275     ; R44 := "OnRemoveFriendResultToPanel"
2236 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
2237 [-]: JMP       2254         ; PC := 2254
2238 [-]: GETUPVAL  R41 U23      ; R41 := U23
2239 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2240 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2241 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2242 [-]: LOADK     R45 K243     ; R45 := "/Lotus/Language/Menu/Chat_AddFriendHelp_Windows"
2243 [-]: MOVE      R46 R0       ; R46 := R0
2244 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2245 [-]: CALL      R41 0 1      ; R41(R42,...)
2246 [-]: GETUPVAL  R41 U23      ; R41 := U23
2247 [-]: SELF      R41 R41 K180 ; R42 := R41; R41 := R41["0xAE78D1F"]
2248 [-]: GETGLOBAL R43 K13      ; R43 := mMovie
2249 [-]: SELF      R43 R43 K14  ; R44 := R43; R43 := R43["0x5DB0BD4"]
2250 [-]: LOADK     R45 K244     ; R45 := "/Lotus/Language/Menu/Chat_RemoveFriendHelp"
2251 [-]: MOVE      R46 R0       ; R46 := R0
2252 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2253 [-]: CALL      R41 0 1      ; R41(R42,...)
2254 [-]: RETURN    R0 1         ; return 
2255 [-]: JMP       2823         ; PC := 2823
2256 [-]: LOADK     R41 K25      ; R41 := 1
2257 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2258 [-]: LOADK     R42 K276     ; R42 := "/motd"
2259 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2313
2260 [-]: JMP       2313         ; PC := 2313
2261 [-]: LOADK     R41 K25      ; R41 := 1
2262 [-]: LT        0 R41 R24    ; if R41 >= R24 then PC := 2303
2263 [-]: JMP       2303         ; PC := 2303
2264 [-]: GETGLOBAL R41 K6       ; R41 := string
2265 [-]: GETTABLE  R41 R41 K26  ; R41 := R41["0xDE44F664"]
2266 [-]: MOVE      R42 R3       ; R42 := R3
2267 [-]: LOADK     R43 K216     ; R43 := " "
2268 [-]: CALL      R41 3 3      ; R41,R42 := R41(R42,R43)
2269 [-]: GETGLOBAL R43 K6       ; R43 := string
2270 [-]: GETTABLE  R43 R43 K28  ; R43 := R43["0x7B782033"]
2271 [-]: MOVE      R44 R3       ; R44 := R3
2272 [-]: LOADK     R45 K25      ; R45 := 1
2273 [-]: ADD       R45 R42 R45  ; R45 := R42 + R45
2274 [-]: LOADK     R46 K217     ; R46 := -1
2275 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2276 [-]: MOVE      R3 R43       ; R3 := R43
2277 [-]: GETGLOBAL R43 K6       ; R43 := string
2278 [-]: GETTABLE  R43 R43 K7   ; R43 := R43["0xC6772A8A"]
2279 [-]: MOVE      R44 R3       ; R44 := R3
2280 [-]: CALL      R43 2 2      ; R43 := R43(R44)
2281 [-]: LOADK     R44 K277     ; R44 := 256
2282 [-]: LT        0 R44 R43    ; if R44 >= R43 then PC := 2291
2283 [-]: JMP       2291         ; PC := 2291
2284 [-]: GETGLOBAL R43 K6       ; R43 := string
2285 [-]: GETTABLE  R43 R43 K28  ; R43 := R43["0x7B782033"]
2286 [-]: MOVE      R44 R3       ; R44 := R3
2287 [-]: LOADK     R45 K25      ; R45 := 1
2288 [-]: LOADK     R46 K277     ; R46 := 256
2289 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2290 [-]: MOVE      R3 R43       ; R3 := R43
2291 [-]: GETGLOBAL R43 K3       ; R43 := 0x400E7765
2292 [-]: GETUPVAL  R44 U24      ; R44 := U24
2293 [-]: CALL      R43 2 2      ; R43 := R43(R44)
2294 [-]: TEST      R43 1        ; if R43 then PC := 2311
2295 [-]: JMP       2311         ; PC := 2311
2296 [-]: GETUPVAL  R43 U24      ; R43 := U24
2297 [-]: LOADK     R45 K278     ; R45 := "0x26FCBF60"
2298 [-]: SELF      R43 R43 R45  ; R44 := R43; R43 := R43[R45]
2299 [-]: MOVE      R45 R3       ; R45 := R3
2300 [-]: MOVE      R46 R0       ; R46 := R0
2301 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
2302 [-]: JMP       2311         ; PC := 2311
2303 [-]: GETUPVAL  R43 U23      ; R43 := U23
2304 [-]: SELF      R43 R43 K180 ; R44 := R43; R43 := R43["0xAE78D1F"]
2305 [-]: GETGLOBAL R45 K13      ; R45 := mMovie
2306 [-]: SELF      R45 R45 K14  ; R46 := R45; R45 := R45["0x5DB0BD4"]
2307 [-]: LOADK     R47 K245     ; R47 := "/Lotus/Language/Menu/Chat_HelpMotd"
2308 [-]: MOVE      R48 R0       ; R48 := R0
2309 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
2310 [-]: CALL      R43 0 1      ; R43(R44,...)
2311 [-]: RETURN    R0 1         ; return 
2312 [-]: JMP       2823         ; PC := 2823
2313 [-]: LOADK     R43 K25      ; R43 := 1
2314 [-]: GETTABLE  R43 R4 R43   ; R43 := R4[R43]
2315 [-]: LOADK     R44 K279     ; R44 := "/invite"
2316 [-]: EQ        1 R43 R44    ; if R43 == R44 then PC := 2323
2317 [-]: JMP       2323         ; PC := 2323
2318 [-]: LOADK     R43 K25      ; R43 := 1
2319 [-]: GETTABLE  R43 R4 R43   ; R43 := R4[R43]
2320 [-]: LOADK     R44 K280     ; R44 := "/inv"
2321 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 2367
2322 [-]: JMP       2367         ; PC := 2367
2323 [-]: GETGLOBAL R43 K20      ; R43 := _G
2324 [-]: GETTABLE  R43 R43 K207 ; R43 := R43["StalkerMode"]
2325 [-]: TEST      R43 1        ; if R43 then PC := 2367
2326 [-]: JMP       2367         ; PC := 2367
2327 [-]: LOADK     R43 K158     ; R43 := 2
2328 [-]: EQ        0 R24 R43    ; if R24 ~= R43 then PC := 2357
2329 [-]: JMP       2357         ; PC := 2357
2330 [-]: LOADNIL   R43 R43      ; R43 := nil
2331 [-]: GETUPVAL  R44 U1       ; R44 := U1
2332 [-]: GETTABLE  R44 R44 K213 ; R44 := R44["0x4BACCB71"]
2333 [-]: LOADK     R45 K158     ; R45 := 2
2334 [-]: GETTABLE  R45 R5 R45   ; R45 := R5[R45]
2335 [-]: LOADK     R46 K214     ; R46 := "[]"
2336 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
2337 [-]: LOADK     R45 K2       ; R45 := 0
2338 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 2341
2339 [-]: JMP       2341         ; PC := 2341
2340 [-]: LOADK     R43 K215     ; R43 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2341 [-]: TEST      R43 0        ; if not R43 then PC := 2352
2342 [-]: JMP       2352         ; PC := 2352
2343 [-]: GETUPVAL  R44 U23      ; R44 := U23
2344 [-]: SELF      R44 R44 K180 ; R45 := R44; R44 := R44["0xAE78D1F"]
2345 [-]: GETGLOBAL R46 K13      ; R46 := mMovie
2346 [-]: SELF      R46 R46 K14  ; R47 := R46; R46 := R46["0x5DB0BD4"]
2347 [-]: MOVE      R48 R43      ; R48 := R43
2348 [-]: MOVE      R49 R0       ; R49 := R0
2349 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
2350 [-]: CALL      R44 0 1      ; R44(R45,...)
2351 [-]: JMP       2365         ; PC := 2365
2352 [-]: GETUPVAL  R44 U30      ; R44 := U30
2353 [-]: LOADK     R45 K158     ; R45 := 2
2354 [-]: GETTABLE  R45 R5 R45   ; R45 := R5[R45]
2355 [-]: CALL      R44 2 1      ; R44(R45)
2356 [-]: JMP       2365         ; PC := 2365
2357 [-]: GETUPVAL  R44 U23      ; R44 := U23
2358 [-]: SELF      R44 R44 K180 ; R45 := R44; R44 := R44["0xAE78D1F"]
2359 [-]: GETGLOBAL R46 K13      ; R46 := mMovie
2360 [-]: SELF      R46 R46 K14  ; R47 := R46; R46 := R46["0x5DB0BD4"]
2361 [-]: LOADK     R48 K246     ; R48 := "/Lotus/Language/Menu/Chat_HelpInvite"
2362 [-]: MOVE      R49 R0       ; R49 := R0
2363 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
2364 [-]: CALL      R44 0 1      ; R44(R45,...)
2365 [-]: RETURN    R0 1         ; return 
2366 [-]: JMP       2823         ; PC := 2823
2367 [-]: LOADK     R44 K25      ; R44 := 1
2368 [-]: GETTABLE  R44 R4 R44   ; R44 := R4[R44]
2369 [-]: LOADK     R45 K281     ; R45 := "/profile"
2370 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 2420
2371 [-]: JMP       2420         ; PC := 2420
2372 [-]: LOADK     R44 K158     ; R44 := 2
2373 [-]: EQ        0 R24 R44    ; if R24 ~= R44 then PC := 2410
2374 [-]: JMP       2410         ; PC := 2410
2375 [-]: LOADNIL   R44 R44      ; R44 := nil
2376 [-]: GETUPVAL  R45 U1       ; R45 := U1
2377 [-]: GETTABLE  R45 R45 K213 ; R45 := R45["0x4BACCB71"]
2378 [-]: LOADK     R46 K158     ; R46 := 2
2379 [-]: GETTABLE  R46 R5 R46   ; R46 := R5[R46]
2380 [-]: LOADK     R47 K214     ; R47 := "[]"
2381 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
2382 [-]: LOADK     R46 K2       ; R46 := 0
2383 [-]: EQ        1 R45 R46    ; if R45 == R46 then PC := 2386
2384 [-]: JMP       2386         ; PC := 2386
2385 [-]: LOADK     R44 K215     ; R44 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2386 [-]: TEST      R44 0        ; if not R44 then PC := 2397
2387 [-]: JMP       2397         ; PC := 2397
2388 [-]: GETUPVAL  R45 U23      ; R45 := U23
2389 [-]: SELF      R45 R45 K180 ; R46 := R45; R45 := R45["0xAE78D1F"]
2390 [-]: GETGLOBAL R47 K13      ; R47 := mMovie
2391 [-]: SELF      R47 R47 K14  ; R48 := R47; R47 := R47["0x5DB0BD4"]
2392 [-]: MOVE      R49 R44      ; R49 := R44
2393 [-]: MOVE      R50 R0       ; R50 := R0
2394 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
2395 [-]: CALL      R45 0 1      ; R45(R46,...)
2396 [-]: JMP       2418         ; PC := 2418
2397 [-]: GETGLOBAL R45 K3       ; R45 := 0x400E7765
2398 [-]: GETUPVAL  R46 U24      ; R46 := U24
2399 [-]: CALL      R45 2 2      ; R45 := R45(R46)
2400 [-]: TEST      R45 1        ; if R45 then PC := 2418
2401 [-]: JMP       2418         ; PC := 2418
2402 [-]: GETUPVAL  R45 U24      ; R45 := U24
2403 [-]: LOADK     R47 K282     ; R47 := "0x60CE2BDB"
2404 [-]: SELF      R45 R45 R47  ; R46 := R45; R45 := R45[R47]
2405 [-]: LOADK     R47 K158     ; R47 := 2
2406 [-]: GETTABLE  R47 R5 R47   ; R47 := R5[R47]
2407 [-]: LOADK     R48 K283     ; R48 := "ViewWarframeProfileAccountIdResult"
2408 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
2409 [-]: JMP       2418         ; PC := 2418
2410 [-]: GETUPVAL  R45 U23      ; R45 := U23
2411 [-]: SELF      R45 R45 K180 ; R46 := R45; R45 := R45["0xAE78D1F"]
2412 [-]: GETGLOBAL R47 K13      ; R47 := mMovie
2413 [-]: SELF      R47 R47 K14  ; R48 := R47; R47 := R47["0x5DB0BD4"]
2414 [-]: LOADK     R49 K247     ; R49 := "/Lotus/Language/Menu/Chat_HelpProfile"
2415 [-]: MOVE      R50 R0       ; R50 := R0
2416 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
2417 [-]: CALL      R45 0 1      ; R45(R46,...)
2418 [-]: RETURN    R0 1         ; return 
2419 [-]: JMP       2823         ; PC := 2823
2420 [-]: LOADK     R45 K25      ; R45 := 1
2421 [-]: GETTABLE  R45 R4 R45   ; R45 := R4[R45]
2422 [-]: LOADK     R46 K284     ; R46 := "/goto"
2423 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 2496
2424 [-]: JMP       2496         ; PC := 2496
2425 [-]: MOVE      R45 R27      ; R45 := R27
2426 [-]: CALL      R45 1 2      ; R45 := R45()
2427 [-]: TEST      R45 1        ; if R45 then PC := 2430
2428 [-]: JMP       2430         ; PC := 2430
2429 [-]: RETURN    R0 1         ; return 
2430 [-]: LOADK     R45 K158     ; R45 := 2
2431 [-]: EQ        0 R24 R45    ; if R24 ~= R45 then PC := 2486
2432 [-]: JMP       2486         ; PC := 2486
2433 [-]: GETGLOBAL R45 K3       ; R45 := 0x400E7765
2434 [-]: GETUPVAL  R46 U23      ; R46 := U23
2435 [-]: LOADK     R47 K285     ; R47 := "mUserPanel"
2436 [-]: GETTABLE  R46 R46 R47  ; R46 := R46[R47]
2437 [-]: CALL      R45 2 2      ; R45 := R45(R46)
2438 [-]: TEST      R45 1        ; if R45 then PC := 2486
2439 [-]: JMP       2486         ; PC := 2486
2440 [-]: GETGLOBAL R45 K6       ; R45 := string
2441 [-]: LOADK     R46 K286     ; R46 := "0x639C642A"
2442 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
2443 [-]: LOADK     R46 K158     ; R46 := 2
2444 [-]: GETTABLE  R46 R4 R46   ; R46 := R4[R46]
2445 [-]: CALL      R45 2 2      ; R45 := R45(R46)
2446 [-]: MOVE      R46 R0       ; R46 := R0
2447 [-]: LOADK     R47 K25      ; R47 := 1
2448 [-]: LOADK     R48 K287     ; R48 := "mAlphabetIndex"
2449 [-]: GETTABLE  R48 R0 R48   ; R48 := R0[R48]
2450 [-]: LEN       R48 R48      ; R48 := # R48
2451 [-]: LOADK     R49 K25      ; R49 := 1
2452 [-]: FORPREP   R47 2468     ; R47 -= R49; PC := 2468
2453 [-]: GETUPVAL  R51 U31      ; R51 := U31
2454 [-]: GETTABLE  R51 R51 R50  ; R51 := R51[R50]
2455 [-]: EQ        0 R45 R51    ; if R45 ~= R51 then PC := 2468
2456 [-]: JMP       2468         ; PC := 2468
2457 [-]: GETUPVAL  R51 U23      ; R51 := U23
2458 [-]: LOADK     R52 K285     ; R52 := "mUserPanel"
2459 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
2460 [-]: LOADK     R53 K288     ; R53 := "0x5B1DCC65"
2461 [-]: SELF      R51 R51 R53  ; R52 := R51; R51 := R51[R53]
2462 [-]: LOADK     R53 K287     ; R53 := "mAlphabetIndex"
2463 [-]: GETTABLE  R53 R0 R53   ; R53 := R0[R53]
2464 [-]: GETTABLE  R53 R53 R50  ; R53 := R53[R50]
2465 [-]: CALL      R51 3 1      ; R51(R52,R53)
2466 [-]: MOVE      R46 R1       ; R46 := R1
2467 [-]: JMP       2469         ; PC := 2469
2468 [-]: FORLOOP   R47 2453     ; R47 += R49; if R47 <= R48 then begin PC := 2453; R50 := R47 end
2469 [-]: TEST      R46 1        ; if R46 then PC := 2494
2470 [-]: JMP       2494         ; PC := 2494
2471 [-]: GETGLOBAL R51 K13      ; R51 := mMovie
2472 [-]: SELF      R51 R51 K14  ; R52 := R51; R51 := R51["0x5DB0BD4"]
2473 [-]: LOADK     R53 K289     ; R53 := "/Lotus/Language/Menu/Chat_GotoUnknownIndex"
2474 [-]: MOVE      R54 R0       ; R54 := R0
2475 [-]: NEWTABLE  R55 0 1      ; R55 := {}
2476 [-]: LOADK     R56 K290     ; R56 := "LETTER"
2477 [-]: LOADK     R57 K158     ; R57 := 2
2478 [-]: GETTABLE  R57 R4 R57   ; R57 := R4[R57]
2479 [-]: SETTABLE  R55 R56 R57  ; R55[R56] := R57
2480 [-]: CALL      R51 5 2      ; R51 := R51(R52,R53,R54,R55)
2481 [-]: GETUPVAL  R52 U23      ; R52 := U23
2482 [-]: SELF      R52 R52 K180 ; R53 := R52; R52 := R52["0xAE78D1F"]
2483 [-]: MOVE      R54 R51      ; R54 := R51
2484 [-]: CALL      R52 3 1      ; R52(R53,R54)
2485 [-]: JMP       2494         ; PC := 2494
2486 [-]: GETUPVAL  R52 U23      ; R52 := U23
2487 [-]: SELF      R52 R52 K180 ; R53 := R52; R52 := R52["0xAE78D1F"]
2488 [-]: GETGLOBAL R54 K13      ; R54 := mMovie
2489 [-]: SELF      R54 R54 K14  ; R55 := R54; R54 := R54["0x5DB0BD4"]
2490 [-]: LOADK     R56 K248     ; R56 := "/Lotus/Language/Menu/Chat_HelpGoto"
2491 [-]: MOVE      R57 R0       ; R57 := R0
2492 [-]: CALL      R54 4 0      ; R54,... := R54(R55,R56,R57)
2493 [-]: CALL      R52 0 1      ; R52(R53,...)
2494 [-]: RETURN    R0 1         ; return 
2495 [-]: JMP       2823         ; PC := 2823
2496 [-]: LOADK     R52 K25      ; R52 := 1
2497 [-]: GETTABLE  R52 R4 R52   ; R52 := R4[R52]
2498 [-]: LOADK     R53 K291     ; R53 := "/unstuck"
2499 [-]: EQ        0 R52 R53    ; if R52 ~= R53 then PC := 2506
2500 [-]: JMP       2506         ; PC := 2506
2501 [-]: GETUPVAL  R52 U32      ; R52 := U32
2502 [-]: MOVE      R53 R9       ; R53 := R9
2503 [-]: CALL      R52 2 1      ; R52(R53)
2504 [-]: RETURN    R0 1         ; return 
2505 [-]: JMP       2823         ; PC := 2823
2506 [-]: LOADK     R52 K25      ; R52 := 1
2507 [-]: GETTABLE  R52 R4 R52   ; R52 := R4[R52]
2508 [-]: LOADK     R53 K292     ; R53 := "/join"
2509 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 2520
2510 [-]: JMP       2520         ; PC := 2520
2511 [-]: GETGLOBAL R52 K20      ; R52 := _G
2512 [-]: GETTABLE  R52 R52 K207 ; R52 := R52["StalkerMode"]
2513 [-]: TEST      R52 0        ; if not R52 then PC := 2646
2514 [-]: JMP       2646         ; PC := 2646
2515 [-]: LOADK     R52 K25      ; R52 := 1
2516 [-]: GETTABLE  R52 R4 R52   ; R52 := R4[R52]
2517 [-]: LOADK     R53 K293     ; R53 := "/stalk"
2518 [-]: EQ        0 R52 R53    ; if R52 ~= R53 then PC := 2646
2519 [-]: JMP       2646         ; PC := 2646
2520 [-]: LOADK     R52 K158     ; R52 := 2
2521 [-]: EQ        0 R24 R52    ; if R24 ~= R52 then PC := 2636
2522 [-]: JMP       2636         ; PC := 2636
2523 [-]: LOADNIL   R52 R52      ; R52 := nil
2524 [-]: GETUPVAL  R53 U33      ; R53 := U33
2525 [-]: LOADK     R54 K294     ; R54 := "InProgress"
2526 [-]: GETTABLE  R53 R53 R54  ; R53 := R53[R54]
2527 [-]: TEST      R53 0        ; if not R53 then PC := 2531
2528 [-]: JMP       2531         ; PC := 2531
2529 [-]: LOADK     R52 K295     ; R52 := "/Lotus/Language/Menu/Chat_JoinInProgress"
2530 [-]: JMP       2541         ; PC := 2541
2531 [-]: GETUPVAL  R53 U1       ; R53 := U1
2532 [-]: GETTABLE  R53 R53 K213 ; R53 := R53["0x4BACCB71"]
2533 [-]: LOADK     R54 K158     ; R54 := 2
2534 [-]: GETTABLE  R54 R5 R54   ; R54 := R5[R54]
2535 [-]: LOADK     R55 K214     ; R55 := "[]"
2536 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
2537 [-]: LOADK     R54 K2       ; R54 := 0
2538 [-]: EQ        1 R53 R54    ; if R53 == R54 then PC := 2541
2539 [-]: JMP       2541         ; PC := 2541
2540 [-]: LOADK     R52 K215     ; R52 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2541 [-]: TEST      R52 0        ; if not R52 then PC := 2552
2542 [-]: JMP       2552         ; PC := 2552
2543 [-]: GETUPVAL  R53 U23      ; R53 := U23
2544 [-]: SELF      R53 R53 K180 ; R54 := R53; R53 := R53["0xAE78D1F"]
2545 [-]: GETGLOBAL R55 K13      ; R55 := mMovie
2546 [-]: SELF      R55 R55 K14  ; R56 := R55; R55 := R55["0x5DB0BD4"]
2547 [-]: MOVE      R57 R52      ; R57 := R52
2548 [-]: MOVE      R58 R0       ; R58 := R0
2549 [-]: CALL      R55 4 0      ; R55,... := R55(R56,R57,R58)
2550 [-]: CALL      R53 0 1      ; R53(R54,...)
2551 [-]: JMP       2644         ; PC := 2644
2552 [-]: GETGLOBAL R53 K3       ; R53 := 0x400E7765
2553 [-]: GETUPVAL  R54 U24      ; R54 := U24
2554 [-]: CALL      R53 2 2      ; R53 := R53(R54)
2555 [-]: TEST      R53 1        ; if R53 then PC := 2644
2556 [-]: JMP       2644         ; PC := 2644
2557 [-]: GETUPVAL  R53 U33      ; R53 := U33
2558 [-]: LOADK     R54 K294     ; R54 := "InProgress"
2559 [-]: MOVE      R55 R1       ; R55 := R1
2560 [-]: SETTABLE  R53 R54 R55  ; R53[R54] := R55
2561 [-]: GETUPVAL  R53 U33      ; R53 := U33
2562 [-]: LOADK     R54 K296     ; R54 := "PlayerId"
2563 [-]: LOADNIL   R55 R55      ; R55 := nil
2564 [-]: SETTABLE  R53 R54 R55  ; R53[R54] := R55
2565 [-]: GETUPVAL  R53 U33      ; R53 := U33
2566 [-]: LOADK     R54 K297     ; R54 := "PlayerName"
2567 [-]: SETTABLE  R53 R54 K5   ; R53[R54] := ""
2568 [-]: GETUPVAL  R53 U33      ; R53 := U33
2569 [-]: LOADK     R54 K298     ; R54 := "TempAddToChatPartners"
2570 [-]: MOVE      R55 R0       ; R55 := R0
2571 [-]: SETTABLE  R53 R54 R55  ; R53[R54] := R55
2572 [-]: GETUPVAL  R53 U33      ; R53 := U33
2573 [-]: LOADK     R54 K299     ; R54 := "Presence"
2574 [-]: LOADNIL   R55 R55      ; R55 := nil
2575 [-]: SETTABLE  R53 R54 R55  ; R53[R54] := R55
2576 [-]: GETUPVAL  R53 U24      ; R53 := U24
2577 [-]: LOADK     R55 K300     ; R55 := "0xC3FB73FF"
2578 [-]: SELF      R53 R53 R55  ; R54 := R53; R53 := R53[R55]
2579 [-]: CALL      R53 2 2      ; R53 := R53(R54)
2580 [-]: LOADK     R54 K25      ; R54 := 1
2581 [-]: LEN       R55 R53      ; R55 := # R53
2582 [-]: LOADK     R56 K25      ; R56 := 1
2583 [-]: FORPREP   R54 2610     ; R54 -= R56; PC := 2610
2584 [-]: GETGLOBAL R58 K6       ; R58 := string
2585 [-]: GETTABLE  R58 R58 K29  ; R58 := R58["0xBDD0D625"]
2586 [-]: GETTABLE  R59 R53 R57  ; R59 := R53[R57]
2587 [-]: LOADK     R60 K301     ; R60 := "mDisplayName"
2588 [-]: GETTABLE  R59 R59 R60  ; R59 := R59[R60]
2589 [-]: CALL      R58 2 2      ; R58 := R58(R59)
2590 [-]: GETGLOBAL R59 K6       ; R59 := string
2591 [-]: GETTABLE  R59 R59 K29  ; R59 := R59["0xBDD0D625"]
2592 [-]: LOADK     R60 K158     ; R60 := 2
2593 [-]: GETTABLE  R60 R5 R60   ; R60 := R5[R60]
2594 [-]: CALL      R59 2 2      ; R59 := R59(R60)
2595 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2610
2596 [-]: JMP       2610         ; PC := 2610
2597 [-]: GETUPVAL  R58 U33      ; R58 := U33
2598 [-]: LOADK     R59 K296     ; R59 := "PlayerId"
2599 [-]: GETTABLE  R60 R53 R57  ; R60 := R53[R57]
2600 [-]: LOADK     R61 K302     ; R61 := "mId"
2601 [-]: GETTABLE  R60 R60 R61  ; R60 := R60[R61]
2602 [-]: SETTABLE  R58 R59 R60  ; R58[R59] := R60
2603 [-]: GETUPVAL  R58 U33      ; R58 := U33
2604 [-]: LOADK     R59 K297     ; R59 := "PlayerName"
2605 [-]: GETTABLE  R60 R53 R57  ; R60 := R53[R57]
2606 [-]: LOADK     R61 K301     ; R61 := "mDisplayName"
2607 [-]: GETTABLE  R60 R60 R61  ; R60 := R60[R61]
2608 [-]: SETTABLE  R58 R59 R60  ; R58[R59] := R60
2609 [-]: JMP       2611         ; PC := 2611
2610 [-]: FORLOOP   R54 2584     ; R54 += R56; if R54 <= R55 then begin PC := 2584; R57 := R54 end
2611 [-]: GETUPVAL  R58 U33      ; R58 := U33
2612 [-]: LOADK     R59 K296     ; R59 := "PlayerId"
2613 [-]: GETTABLE  R58 R58 R59  ; R58 := R58[R59]
2614 [-]: LOADNIL   R59 R59      ; R59 := nil
2615 [-]: EQ        1 R58 R59    ; if R58 == R59 then PC := 2628
2616 [-]: JMP       2628         ; PC := 2628
2617 [-]: GETUPVAL  R58 U24      ; R58 := U24
2618 [-]: LOADK     R60 K303     ; R60 := "0xCF9CF66D"
2619 [-]: SELF      R58 R58 R60  ; R59 := R58; R58 := R58[R60]
2620 [-]: NEWTABLE  R60 1 0      ; R60 := {}
2621 [-]: GETUPVAL  R61 U33      ; R61 := U33
2622 [-]: LOADK     R62 K296     ; R62 := "PlayerId"
2623 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2624 [-]: SETLIST   R60 1 1      ; R60[(1-1)*FPF+i] := R(60+i), 1 <= i <= 1
2625 [-]: LOADK     R61 K304     ; R61 := "OnGetPresenceForJoin"
2626 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
2627 [-]: JMP       2644         ; PC := 2644
2628 [-]: GETUPVAL  R58 U24      ; R58 := U24
2629 [-]: LOADK     R60 K282     ; R60 := "0x60CE2BDB"
2630 [-]: SELF      R58 R58 R60  ; R59 := R58; R58 := R58[R60]
2631 [-]: LOADK     R60 K158     ; R60 := 2
2632 [-]: GETTABLE  R60 R5 R60   ; R60 := R5[R60]
2633 [-]: LOADK     R61 K305     ; R61 := "JoinPlayerIDResult"
2634 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
2635 [-]: JMP       2644         ; PC := 2644
2636 [-]: GETUPVAL  R58 U23      ; R58 := U23
2637 [-]: SELF      R58 R58 K180 ; R59 := R58; R58 := R58["0xAE78D1F"]
2638 [-]: GETGLOBAL R60 K13      ; R60 := mMovie
2639 [-]: SELF      R60 R60 K14  ; R61 := R60; R60 := R60["0x5DB0BD4"]
2640 [-]: LOADK     R62 K250     ; R62 := "/Lotus/Language/Menu/Chat_HelpJoin"
2641 [-]: MOVE      R63 R0       ; R63 := R0
2642 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
2643 [-]: CALL      R58 0 1      ; R58(R59,...)
2644 [-]: RETURN    R0 1         ; return 
2645 [-]: JMP       2823         ; PC := 2823
2646 [-]: LOADK     R58 K25      ; R58 := 1
2647 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2648 [-]: LOADK     R59 K306     ; R59 := "/dnd"
2649 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2665
2650 [-]: JMP       2665         ; PC := 2665
2651 [-]: GETGLOBAL R58 K20      ; R58 := _G
2652 [-]: LOADK     R59 K307     ; R59 := "mDoNotDisturb"
2653 [-]: MOVE      R60 R1       ; R60 := R1
2654 [-]: SETTABLE  R58 R59 R60  ; R58[R59] := R60
2655 [-]: GETUPVAL  R58 U23      ; R58 := U23
2656 [-]: SELF      R58 R58 K180 ; R59 := R58; R58 := R58["0xAE78D1F"]
2657 [-]: GETGLOBAL R60 K13      ; R60 := mMovie
2658 [-]: SELF      R60 R60 K14  ; R61 := R60; R60 := R60["0x5DB0BD4"]
2659 [-]: LOADK     R62 K308     ; R62 := "/Lotus/Language/SystemMessages/DoNotDisturb"
2660 [-]: MOVE      R63 R0       ; R63 := R0
2661 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
2662 [-]: CALL      R58 0 1      ; R58(R59,...)
2663 [-]: RETURN    R0 1         ; return 
2664 [-]: JMP       2823         ; PC := 2823
2665 [-]: LOADK     R58 K25      ; R58 := 1
2666 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2667 [-]: LOADK     R59 K309     ; R59 := "/normal"
2668 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2684
2669 [-]: JMP       2684         ; PC := 2684
2670 [-]: GETGLOBAL R58 K20      ; R58 := _G
2671 [-]: LOADK     R59 K307     ; R59 := "mDoNotDisturb"
2672 [-]: MOVE      R60 R0       ; R60 := R0
2673 [-]: SETTABLE  R58 R59 R60  ; R58[R59] := R60
2674 [-]: GETUPVAL  R58 U23      ; R58 := U23
2675 [-]: SELF      R58 R58 K180 ; R59 := R58; R58 := R58["0xAE78D1F"]
2676 [-]: GETGLOBAL R60 K13      ; R60 := mMovie
2677 [-]: SELF      R60 R60 K14  ; R61 := R60; R60 := R60["0x5DB0BD4"]
2678 [-]: LOADK     R62 K310     ; R62 := "/Lotus/Language/SystemMessages/Normal"
2679 [-]: MOVE      R63 R0       ; R63 := R0
2680 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
2681 [-]: CALL      R58 0 1      ; R58(R59,...)
2682 [-]: RETURN    R0 1         ; return 
2683 [-]: JMP       2823         ; PC := 2823
2684 [-]: LOADK     R58 K25      ; R58 := 1
2685 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2686 [-]: LOADK     R59 K311     ; R59 := "/deop"
2687 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2718
2688 [-]: JMP       2718         ; PC := 2718
2689 [-]: GETGLOBAL R58 K3       ; R58 := 0x400E7765
2690 [-]: MOVE      R59 R25      ; R59 := R25
2691 [-]: CALL      R58 2 2      ; R58 := R58(R59)
2692 [-]: TEST      R58 1        ; if R58 then PC := 2718
2693 [-]: JMP       2718         ; PC := 2718
2694 [-]: GETGLOBAL R58 K3       ; R58 := 0x400E7765
2695 [-]: MOVE      R59 R26      ; R59 := R26
2696 [-]: CALL      R58 2 2      ; R58 := R58(R59)
2697 [-]: TEST      R58 1        ; if R58 then PC := 2718
2698 [-]: JMP       2718         ; PC := 2718
2699 [-]: LOADK     R60 K312     ; R60 := "0x3F7DB00B"
2700 [-]: SELF      R58 R26 R60  ; R59 := R26; R58 := R26[R60]
2701 [-]: LOADK     R60 K201     ; R60 := "#"
2702 [-]: GETTABLE  R61 R25 K202 ; R61 := R25["mChannelName"]
2703 [-]: CONCAT    R60 R60 R61  ; R60 := R60 .. R61
2704 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
2705 [-]: TEST      R58 0        ; if not R58 then PC := 2712
2706 [-]: JMP       2712         ; PC := 2712
2707 [-]: GETUPVAL  R58 U23      ; R58 := U23
2708 [-]: SELF      R58 R58 K180 ; R59 := R58; R58 := R58["0xAE78D1F"]
2709 [-]: LOADK     R60 K313     ; R60 := "DeOperator succeeded!"
2710 [-]: CALL      R58 3 1      ; R58(R59,R60)
2711 [-]: JMP       2716         ; PC := 2716
2712 [-]: GETUPVAL  R58 U23      ; R58 := U23
2713 [-]: SELF      R58 R58 K180 ; R59 := R58; R58 := R58["0xAE78D1F"]
2714 [-]: LOADK     R60 K314     ; R60 := "DeOperator failed."
2715 [-]: CALL      R58 3 1      ; R58(R59,R60)
2716 [-]: RETURN    R0 1         ; return 
2717 [-]: JMP       2823         ; PC := 2823
2718 [-]: LOADK     R58 K25      ; R58 := 1
2719 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2720 [-]: LOADK     R59 K315     ; R59 := "/kick"
2721 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2735
2722 [-]: JMP       2735         ; PC := 2735
2723 [-]: LEN       R58 R4       ; R58 := # R4
2724 [-]: LOADK     R59 K158     ; R59 := 2
2725 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2735
2726 [-]: JMP       2735         ; PC := 2735
2727 [-]: GETUPVAL  R58 U34      ; R58 := U34
2728 [-]: LOADK     R59 K158     ; R59 := 2
2729 [-]: GETTABLE  R59 R4 R59   ; R59 := R4[R59]
2730 [-]: MOVE      R60 R0       ; R60 := R0
2731 [-]: LOADK     R61 K316     ; R61 := "5m"
2732 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
2733 [-]: RETURN    R0 1         ; return 
2734 [-]: JMP       2823         ; PC := 2823
2735 [-]: LOADK     R58 K25      ; R58 := 1
2736 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2737 [-]: LOADK     R59 K317     ; R59 := "/ban"
2738 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2773
2739 [-]: JMP       2773         ; PC := 2773
2740 [-]: LEN       R58 R4       ; R58 := # R4
2741 [-]: LOADK     R59 K158     ; R59 := 2
2742 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2773
2743 [-]: JMP       2773         ; PC := 2773
2744 [-]: GETGLOBAL R58 K3       ; R58 := 0x400E7765
2745 [-]: MOVE      R59 R25      ; R59 := R25
2746 [-]: CALL      R58 2 2      ; R58 := R58(R59)
2747 [-]: TEST      R58 1        ; if R58 then PC := 2773
2748 [-]: JMP       2773         ; PC := 2773
2749 [-]: GETGLOBAL R58 K3       ; R58 := 0x400E7765
2750 [-]: MOVE      R59 R26      ; R59 := R26
2751 [-]: CALL      R58 2 2      ; R58 := R58(R59)
2752 [-]: TEST      R58 1        ; if R58 then PC := 2773
2753 [-]: JMP       2773         ; PC := 2773
2754 [-]: LOADK     R60 K318     ; R60 := "0xBBE297EA"
2755 [-]: SELF      R58 R26 R60  ; R59 := R26; R58 := R26[R60]
2756 [-]: LOADK     R60 K201     ; R60 := "#"
2757 [-]: GETTABLE  R61 R25 K202 ; R61 := R25["mChannelName"]
2758 [-]: CONCAT    R60 R60 R61  ; R60 := R60 .. R61
2759 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
2760 [-]: TEST      R58 0        ; if not R58 then PC := 2773
2761 [-]: JMP       2773         ; PC := 2773
2762 [-]: GETUPVAL  R58 U3       ; R58 := U3
2763 [-]: GETTABLE  R59 R25 K202 ; R59 := R25["mChannelName"]
2764 [-]: CALL      R58 2 2      ; R58 := R58(R59)
2765 [-]: TEST      R58 0        ; if not R58 then PC := 2773
2766 [-]: JMP       2773         ; PC := 2773
2767 [-]: GETUPVAL  R58 U35      ; R58 := U35
2768 [-]: LOADK     R59 K158     ; R59 := 2
2769 [-]: GETTABLE  R59 R4 R59   ; R59 := R4[R59]
2770 [-]: CALL      R58 2 1      ; R58(R59)
2771 [-]: RETURN    R0 1         ; return 
2772 [-]: JMP       2823         ; PC := 2823
2773 [-]: LOADK     R58 K25      ; R58 := 1
2774 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2775 [-]: LOADK     R59 K319     ; R59 := "/itemlist"
2776 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2786
2777 [-]: JMP       2786         ; PC := 2786
2778 [-]: MOVE      R58 R0       ; R58 := R0
2779 [-]: TEST      R58 0        ; if not R58 then PC := 2786
2780 [-]: JMP       2786         ; PC := 2786
2781 [-]: GETUPVAL  R58 U36      ; R58 := U36
2782 [-]: GETGLOBAL R59 K320     ; R59 := codexStorePairManifest
2783 [-]: CALL      R58 2 1      ; R58(R59)
2784 [-]: RETURN    R0 1         ; return 
2785 [-]: JMP       2823         ; PC := 2823
2786 [-]: LOADK     R58 K25      ; R58 := 1
2787 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2788 [-]: LOADK     R59 K321     ; R59 := "/secretitemlist"
2789 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2799
2790 [-]: JMP       2799         ; PC := 2799
2791 [-]: MOVE      R58 R0       ; R58 := R0
2792 [-]: TEST      R58 0        ; if not R58 then PC := 2799
2793 [-]: JMP       2799         ; PC := 2799
2794 [-]: GETUPVAL  R58 U36      ; R58 := U36
2795 [-]: GETGLOBAL R59 K322     ; R59 := codexSecretStorePairManifest
2796 [-]: CALL      R58 2 1      ; R58(R59)
2797 [-]: RETURN    R0 1         ; return 
2798 [-]: JMP       2823         ; PC := 2823
2799 [-]: LOADK     R58 K25      ; R58 := 1
2800 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2801 [-]: LOADK     R59 K323     ; R59 := "/relaunch"
2802 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2822
2803 [-]: JMP       2822         ; PC := 2822
2804 [-]: LEN       R58 R4       ; R58 := # R4
2805 [-]: LOADK     R59 K25      ; R59 := 1
2806 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2822
2807 [-]: JMP       2822         ; PC := 2822
2808 [-]: GETGLOBAL R58 K256     ; R58 := Engine
2809 [-]: LOADK     R59 K324     ; R59 := "0x1398DAFB"
2810 [-]: GETTABLE  R58 R58 R59  ; R58 := R58[R59]
2811 [-]: CALL      R58 1 2      ; R58 := R58()
2812 [-]: TEST      R58 1        ; if R58 then PC := 2822
2813 [-]: JMP       2822         ; PC := 2822
2814 [-]: GETGLOBAL R58 K325     ; R58 := gFlashMgr
2815 [-]: LOADK     R60 K326     ; R60 := "0x1041EAD3"
2816 [-]: SELF      R58 R58 R60  ; R59 := R58; R58 := R58[R60]
2817 [-]: GETGLOBAL R60 K57      ; R60 := 0x7C282057
2818 [-]: LOADK     R61 K327     ; R61 := "/EE/Editor/ToolMenus/Commands/CmdRelaunch"
2819 [-]: CALL      R60 2 0      ; R60,... := R60(R61)
2820 [-]: CALL      R58 0 1      ; R58(R59,...)
2821 [-]: JMP       2823         ; PC := 2823
2822 [-]: MOVE      R28 R1       ; R28 := R1
2823 [-]: MOVE      R58 R27      ; R58 := R27
2824 [-]: CALL      R58 1 2      ; R58 := R58()
2825 [-]: TEST      R58 1        ; if R58 then PC := 2828
2826 [-]: JMP       2828         ; PC := 2828
2827 [-]: RETURN    R0 1         ; return 
2828 [-]: TEST      R28 0        ; if not R28 then PC := 2867
2829 [-]: JMP       2867         ; PC := 2867
2830 [-]: GETGLOBAL R58 K6       ; R58 := string
2831 [-]: GETTABLE  R58 R58 K28  ; R58 := R58["0x7B782033"]
2832 [-]: LOADK     R59 K25      ; R59 := 1
2833 [-]: GETTABLE  R59 R4 R59   ; R59 := R4[R59]
2834 [-]: LOADK     R60 K25      ; R60 := 1
2835 [-]: LOADK     R61 K25      ; R61 := 1
2836 [-]: CALL      R58 4 2      ; R58 := R58(R59,R60,R61)
2837 [-]: LOADK     R59 K328     ; R59 := "/"
2838 [-]: EQ        1 R58 R59    ; if R58 == R59 then PC := 2843
2839 [-]: JMP       2843         ; PC := 2843
2840 [-]: LOADK     R59 K329     ; R59 := "!"
2841 [-]: EQ        0 R58 R59    ; if R58 ~= R59 then PC := 2867
2842 [-]: JMP       2867         ; PC := 2867
2843 [-]: GETUPVAL  R59 U23      ; R59 := U23
2844 [-]: SELF      R59 R59 K180 ; R60 := R59; R59 := R59["0xAE78D1F"]
2845 [-]: GETGLOBAL R61 K13      ; R61 := mMovie
2846 [-]: SELF      R61 R61 K14  ; R62 := R61; R61 := R61["0x5DB0BD4"]
2847 [-]: LOADK     R63 K330     ; R63 := "/Lotus/Language/Menu/Chat_UnknownCommand"
2848 [-]: MOVE      R64 R0       ; R64 := R0
2849 [-]: CALL      R61 4 2      ; R61 := R61(R62,R63,R64)
2850 [-]: LOADK     R62 K216     ; R62 := " "
2851 [-]: GETGLOBAL R63 K6       ; R63 := string
2852 [-]: GETTABLE  R63 R63 K28  ; R63 := R63["0x7B782033"]
2853 [-]: MOVE      R64 R3       ; R64 := R3
2854 [-]: LOADK     R65 K158     ; R65 := 2
2855 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
2856 [-]: CONCAT    R61 R61 R63  ; R61 := R61 .. R62 .. R63
2857 [-]: CALL      R59 3 1      ; R59(R60,R61)
2858 [-]: GETUPVAL  R59 U23      ; R59 := U23
2859 [-]: SELF      R59 R59 K180 ; R60 := R59; R59 := R59["0xAE78D1F"]
2860 [-]: GETGLOBAL R61 K13      ; R61 := mMovie
2861 [-]: SELF      R61 R61 K14  ; R62 := R61; R61 := R61["0x5DB0BD4"]
2862 [-]: LOADK     R63 K331     ; R63 := "/Lotus/Language/Menu/Chat_HelpPrompt"
2863 [-]: MOVE      R64 R0       ; R64 := R0
2864 [-]: CALL      R61 4 0      ; R61,... := R61(R62,R63,R64)
2865 [-]: CALL      R59 0 1      ; R59(R60,...)
2866 [-]: RETURN    R0 1         ; return 
2867 [-]: GETGLOBAL R59 K39      ; R59 := _T
2868 [-]: LOADK     R60 K332     ; R60 := "WareframeMiniGameChatCallback"
2869 [-]: GETTABLE  R59 R59 R60  ; R59 := R59[R60]
2870 [-]: TEST      R59 0        ; if not R59 then PC := 2879
2871 [-]: JMP       2879         ; PC := 2879
2872 [-]: GETGLOBAL R59 K39      ; R59 := _T
2873 [-]: LOADK     R60 K333     ; R60 := "0xB6C1499"
2874 [-]: GETTABLE  R59 R59 R60  ; R59 := R59[R60]
2875 [-]: MOVE      R60 R0       ; R60 := R0
2876 [-]: MOVE      R61 R3       ; R61 := R3
2877 [-]: TAILCALL  R59 3 0      ; R59,... := R59(R60,R61)
2878 [-]: RETURN    R59 0        ; return R59,...
2879 [-]: GETUPVAL  R59 U37      ; R59 := U37
2880 [-]: MOVE      R60 R3       ; R60 := R3
2881 [-]: MOVE      R61 R23      ; R61 := R23
2882 [-]: CALL      R59 3 2      ; R59 := R59(R60,R61)
2883 [-]: TEST      R59 0        ; if not R59 then PC := 2887
2884 [-]: JMP       2887         ; PC := 2887
2885 [-]: MOVE      R59 R1       ; R59 := R1
2886 [-]: RETURN    R59 2        ; return R59
2887 [-]: GETUPVAL  R59 U3       ; R59 := U3
2888 [-]: GETTABLE  R60 R0 K202  ; R60 := R0["mChannelName"]
2889 [-]: CALL      R59 2 2      ; R59 := R59(R60)
2890 [-]: TEST      R59 0        ; if not R59 then PC := 2911
2891 [-]: JMP       2911         ; PC := 2911
2892 [-]: MOVE      R59 R6       ; R59 := R6
2893 [-]: GETUPVAL  R60 U8       ; R60 := U8
2894 [-]: GETTABLE  R60 R60 K126 ; R60 := R60["AppearanceLinks"]
2895 [-]: CALL      R59 2 2      ; R59 := R59(R60)
2896 [-]: LOADK     R60 K2       ; R60 := 0
2897 [-]: LT        1 R60 R59    ; if R60 < R59 then PC := 2906
2898 [-]: JMP       2906         ; PC := 2906
2899 [-]: MOVE      R59 R6       ; R59 := R6
2900 [-]: GETUPVAL  R60 U8       ; R60 := U8
2901 [-]: GETTABLE  R60 R60 K139 ; R60 := R60["ModConfigLinks"]
2902 [-]: CALL      R59 2 2      ; R59 := R59(R60)
2903 [-]: LOADK     R60 K2       ; R60 := 0
2904 [-]: LT        0 R60 R59    ; if R60 >= R59 then PC := 2911
2905 [-]: JMP       2911         ; PC := 2911
2906 [-]: GETGLOBAL R59 K20      ; R59 := _G
2907 [-]: LOADK     R60 K334     ; R60 := "Chat_GlobalLinkCooldown"
2908 [-]: GETGLOBAL R61 K24      ; R61 := 0xD51B2786
2909 [-]: CALL      R61 1 2      ; R61 := R61()
2910 [-]: SETTABLE  R59 R60 R61  ; R59[R60] := R61
2911 [-]: GETGLOBAL R59 K6       ; R59 := string
2912 [-]: GETTABLE  R59 R59 K28  ; R59 := R59["0x7B782033"]
2913 [-]: MOVE      R60 R23      ; R60 := R23
2914 [-]: LOADK     R61 K25      ; R61 := 1
2915 [-]: LOADK     R62 K25      ; R62 := 1
2916 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
2917 [-]: EQ        1 R59 K201   ; if R59 == "#" then PC := 2920
2918 [-]: JMP       2920         ; PC := 2920
2919 [-]: MOVE      R59 R0       ; R59 := R0
2920 [-]: MOVE      R59 R1       ; R59 := R1
2921 [-]: TEST      R59 0        ; if not R59 then PC := 2965
2922 [-]: JMP       2965         ; PC := 2965
2923 [-]: GETGLOBAL R60 K6       ; R60 := string
2924 [-]: GETTABLE  R60 R60 K28  ; R60 := R60["0x7B782033"]
2925 [-]: MOVE      R61 R23      ; R61 := R23
2926 [-]: LOADK     R62 K158     ; R62 := 2
2927 [-]: LOADK     R63 K158     ; R63 := 2
2928 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
2929 [-]: GETUPVAL  R61 U23      ; R61 := U23
2930 [-]: LOADK     R62 K335     ; R62 := "0xDB118937"
2931 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2932 [-]: CALL      R61 1 2      ; R61 := R61()
2933 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2965
2934 [-]: JMP       2965         ; PC := 2965
2935 [-]: GETGLOBAL R60 K6       ; R60 := string
2936 [-]: GETTABLE  R60 R60 K28  ; R60 := R60["0x7B782033"]
2937 [-]: GETTABLE  R61 R0 K202  ; R61 := R0["mChannelName"]
2938 [-]: LOADK     R62 K158     ; R62 := 2
2939 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
2940 [-]: MOVE      R23 R60      ; R23 := R60
2941 [-]: GETGLOBAL R60 K3       ; R60 := 0x400E7765
2942 [-]: GETUPVAL  R61 U24      ; R61 := U24
2943 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2944 [-]: TEST      R60 1        ; if R60 then PC := 2965
2945 [-]: JMP       2965         ; PC := 2965
2946 [-]: GETUPVAL  R60 U24      ; R60 := U24
2947 [-]: SELF      R60 R60 K208 ; R61 := R60; R60 := R60["0xF075C8EC"]
2948 [-]: MOVE      R62 R23      ; R62 := R23
2949 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
2950 [-]: TEST      R60 0        ; if not R60 then PC := 2965
2951 [-]: JMP       2965         ; PC := 2965
2952 [-]: SELF      R60 R0 K12   ; R61 := R0; R60 := R0["0x4313BA6"]
2953 [-]: GETGLOBAL R62 K13      ; R62 := mMovie
2954 [-]: SELF      R62 R62 K14  ; R63 := R62; R62 := R62["0x5DB0BD4"]
2955 [-]: LOADK     R64 K209     ; R64 := "/Lotus/Language/Menu/Chat_CannotWhisperIgnoredPlayer"
2956 [-]: MOVE      R65 R0       ; R65 := R0
2957 [-]: CALL      R62 4 2      ; R62 := R62(R63,R64,R65)
2958 [-]: MOVE      R63 R23      ; R63 := R23
2959 [-]: LOADK     R64 K210     ; R64 := "."
2960 [-]: CONCAT    R62 R62 R64  ; R62 := R62 .. R63 .. R64
2961 [-]: GETTABLE  R63 R0 K16   ; R63 := R0["MESSAGE_TYPE_SYSTEM"]
2962 [-]: LOADK     R64 K5       ; R64 := ""
2963 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
2964 [-]: RETURN    R0 1         ; return 
2965 [-]: GETGLOBAL R60 K3       ; R60 := 0x400E7765
2966 [-]: MOVE      R61 R26      ; R61 := R26
2967 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2968 [-]: TEST      R60 1        ; if R60 then PC := 3004
2969 [-]: JMP       3004         ; PC := 3004
2970 [-]: GETGLOBAL R60 K20      ; R60 := _G
2971 [-]: GETTABLE  R60 R60 K207 ; R60 := R60["StalkerMode"]
2972 [-]: TEST      R60 1        ; if R60 then PC := 3004
2973 [-]: JMP       3004         ; PC := 3004
2974 [-]: LOADK     R62 K336     ; R62 := "0x654F1092"
2975 [-]: SELF      R60 R2 R62   ; R61 := R2; R60 := R2[R62]
2976 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2977 [-]: MOVE      R60 R24      ; R60 := R24
2978 [-]: GETUPVAL  R60 U24      ; R60 := U24
2979 [-]: TEST      R60 0        ; if not R60 then PC := 2985
2980 [-]: JMP       2985         ; PC := 2985
2981 [-]: GETUPVAL  R60 U38      ; R60 := U38
2982 [-]: MOVE      R61 R3       ; R61 := R3
2983 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2984 [-]: MOVE      R3 R60       ; R3 := R60
2985 [-]: LOADK     R62 K337     ; R62 := "0x610E964D"
2986 [-]: SELF      R60 R26 R62  ; R61 := R26; R60 := R26[R62]
2987 [-]: MOVE      R62 R3       ; R62 := R3
2988 [-]: MOVE      R63 R23      ; R63 := R23
2989 [-]: MOVE      R64 R1       ; R64 := R1
2990 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
2991 [-]: GETUPVAL  R60 U39      ; R60 := U39
2992 [-]: CALL      R60 1 2      ; R60 := R60()
2993 [-]: LOADNIL   R61 R61      ; R61 := nil
2994 [-]: EQ        1 R60 R61    ; if R60 == R61 then PC := 3004
2995 [-]: JMP       3004         ; PC := 3004
2996 [-]: GETGLOBAL R61 K338     ; R61 := gGameStatsMgr
2997 [-]: LOADK     R63 K339     ; R63 := "0x31F80B49"
2998 [-]: SELF      R61 R61 R63  ; R62 := R61; R61 := R61[R63]
2999 [-]: GETGLOBAL R63 K340     ; R63 := 0xEC274B1A
3000 [-]: LOADK     R64 K341     ; R64 := "CHAT_MESSAGE_SENT"
3001 [-]: CALL      R63 2 2      ; R63 := R63(R64)
3002 [-]: MOVE      R64 R60      ; R64 := R60
3003 [-]: CALL      R61 4 1      ; R61(R62,R63,R64)
3004 [-]: RETURN    R0 1         ; return 


; Function #97.5.1:
;
; Name:            
; Defined at line: 3160
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xECFDD17
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  5 [-]: JMP       7            ; PC := 7
  6 [-]: ADD       R1 R1 R6     ; R1 := R1 + R6
  7 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 6; R4 := R5 end
  8 [-]: JMP       6            ; PC := 6
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #97.5.2:
;
; Name:            
; Defined at line: 3168
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MWC_AMP"]
  3 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["AMP_MAX_LINKS"]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: JMP       44           ; PC := 44
  9 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["MWC_MOA_PET"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["MOA_MAX_LINKS"]
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       44           ; PC := 44
 17 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MWC_HOVERBOARD"]
 19 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["KDRIVE_MAX_LINKS"]
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       44           ; PC := 44
 25 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
 26 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["MWC_MELEE"]
 27 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["ZAW_MAX_LINKS"]
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: JMP       44           ; PC := 44
 33 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
 34 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["MWC_PRIMARY"]
 35 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
 38 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["MWC_SECONDARY"]
 39 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETUPVAL  R1 U0        ; R1 := U0
 42 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["KITGUN_MAX_LINKS"]
 43 [-]: RETURN    R1 2         ; return R1
 44 [-]: RETURN    R0 1         ; return 


; Function #97.5.3:
;
; Name:            
; Defined at line: 3184
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mChannelName"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 0         ; if not R2 then PC := 39
  7 [-]: JMP       39           ; PC := 39
  8 [-]: GETGLOBAL R2 K2        ; R2 := _G
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Chat_GlobalLinkCooldown"]
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETGLOBAL R2 K2        ; R2 := _G
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Chat_GlobalLinkCooldown"]
 14 [-]: SUB       R2 R0 R2     ; R2 := R0 - R2
 15 [-]: GETUPVAL  R3 U2        ; R3 := U2
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["GLOBAL_LINK_PERIOD"]
 17 [-]: LE        0 R2 R3      ; if R2 > R3 then PC := 39
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 20 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 21 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Language/Menu/Chat_LinkGlobal"
 22 [-]: MOVE      R6 R0        ; R6 := R0
 23 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 24 [-]: GETUPVAL  R8 U3        ; R8 := U3
 25 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["0x7E197415"]
 26 [-]: GETUPVAL  R9 U2        ; R9 := U2
 27 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["GLOBAL_LINK_PERIOD"]
 28 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 29 [-]: SETTABLE  R7 K9 R8     ; R7["COOLDOWN"] := R8
 30 [-]: GETGLOBAL R8 K12       ; R8 := math
 31 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["0xBCF846DF"]
 32 [-]: GETUPVAL  R9 U2        ; R9 := U2
 33 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["GLOBAL_LINK_PERIOD"]
 34 [-]: SUB       R9 R9 R2     ; R9 := R9 - R2
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: SETTABLE  R7 K11 R8    ; R7["TIME"] := R8
 37 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 38 [-]: MOVE      R1 R3        ; R1 := R3
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: RETURN    R0 1         ; return 


; Function #97.5.4:
;
; Name:            
; Defined at line: 3228
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetOmegaCards"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["OmegaSelectionDone"] := nil
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: MOVE      R1 R1        ; R1 := R1
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 70
 15 [-]: JMP       70           ; PC := 70
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 17 [-]: GETTABLE  R3 R0 K5     ; R3 := R0[1]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 70
 20 [-]: JMP       70           ; PC := 70
 21 [-]: GETTABLE  R1 R0 K5     ; R1 := R0[1]
 22 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["Card"]
 23 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mUpgrade"]
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mUpgradeFingerprint"]
 25 [-]: GETGLOBAL R3 K9        ; R3 := 0x7C282057
 26 [-]: GETTABLE  R4 R1 K6     ; R4 := R1["Card"]
 27 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mUpgradeItemType"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: GETGLOBAL R4 K11       ; R4 := string
 30 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0xDE44F664"]
 31 [-]: MOVE      R5 R2        ; R5 := R2
 32 [-]: LOADK     R6 K13       ; R6 := "\"IsSentinel\":true"
 33 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 34 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: SELF      R4 R3 K14    ; R5 := R3; R4 := R3["0x14BF6A8B"]
 37 [-]: MOVE      R6 R2        ; R6 := R2
 38 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 39 [-]: MOVE      R4 R4        ; R4 := R4
 40 [-]: JMP       43           ; PC := 43
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: MOVE      R4 R1        ; R4 := R1
 43 [-]: LOADNIL   R5 R5        ; R5 := nil
 44 [-]: TEST      R4 0         ; if not R4 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R6 K9        ; R6 := 0x7C282057
 47 [-]: GETGLOBAL R7 K15       ; R7 := companionRivenMaskType
 48 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 49 [-]: MOVE      R5 R6        ; R5 := R6
 50 [-]: JMP       52           ; PC := 52
 51 [-]: MOVE      R5 R3        ; R5 := R3
 52 [-]: LOADK     R6 K16       ; R6 := "OMG-"
 53 [-]: SELF      R7 R5 K17    ; R8 := R5; R7 := R5["0x34820572"]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: LOADK     R8 K18       ; R8 := ":"
 56 [-]: SELF      R9 R5 K19    ; R10 := R5; R9 := R5["0x899CB40B"]
 57 [-]: MOVE      R11 R2       ; R11 := R2
 58 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 59 [-]: CONCAT    R6 R6 R9     ; R6 := R6 .. R7 .. R8 .. R9
 60 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 61 [-]: GETGLOBAL R8 K20       ; R8 := mMovie
 62 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 63 [-]: TEST      R7 1         ; if R7 then PC := 70
 64 [-]: JMP       70           ; PC := 70
 65 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 66 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x458F27A9"]
 67 [-]: LOADK     R9 K22       ; R9 := "RecursiveOmegaReplace"
 68 [-]: MOVE      R10 R6       ; R10 := R6
 69 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 70 [-]: RETURN    R0 1         ; return 


; Function #97.5.5:
;
; Name:            
; Defined at line: 3258
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x6E9EB0BA"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #97.5.6:
;
; Name:            
; Defined at line: 3315
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["SongSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetSongList"] := nil
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: SETTABLE  R1 K4 K2     ; R1["OnSongFocused"] := nil
  7 [-]: GETGLOBAL R1 K0        ; R1 := _T
  8 [-]: SETTABLE  R1 K5 K2     ; R1["OnSongUnfocused"] := nil
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["StepSequencerLoader"]
 16 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["StepSequencer"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 22 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["StepSequencer"]
 23 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xD4C2743F"]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SETTABLE  R1 K6 K2     ; R1["StepSequencerLoader"] := nil
 27 [-]: MOVE      R1 R0        ; R1 := R0
 28 [-]: MOVE      R1 R1        ; R1 := R1
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: GETUPVAL  R2 U3        ; R2 := U3
 31 [-]: SETTABLE  R1 K10 R2    ; R1["Msg"] := R2
 32 [-]: GETUPVAL  R1 U2        ; R1 := U2
 33 [-]: GETUPVAL  R2 U4        ; R2 := U4
 34 [-]: SETTABLE  R1 K11 R2    ; R1["CurrItemString"] := R2
 35 [-]: GETUPVAL  R1 U5        ; R1 := U5
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: CALL      R1 2 1       ; R1(R2)
 38 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 39 [-]: MOVE      R2 R0        ; R2 := R0
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: TEST      R1 1         ; if R1 then PC := 94
 42 [-]: JMP       94           ; PC := 94
 43 [-]: GETTABLE  R1 R0 K12    ; R1 := R0[1]
 44 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 94
 45 [-]: JMP       94           ; PC := 94
 46 [-]: GETUPVAL  R1 U6        ; R1 := U6
 47 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["0x4BACCB71"]
 48 [-]: GETTABLE  R2 R0 K12    ; R2 := R0[1]
 49 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["mName"]
 50 [-]: LOADK     R3 K15       ; R3 := " "
 51 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 52 [-]: LT        0 K16 R1     ; if 0 >= R1 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETUPVAL  R2 U6        ; R2 := U6
 55 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["0xB11F032"]
 56 [-]: LOADK     R3 K18       ; R3 := "/Lotus/Language/Menu/Chat_SongInvalidCharacters"
 57 [-]: CALL      R2 2 1       ; R2(R3)
 58 [-]: RETURN    R0 1         ; return 
 59 [-]: GETTABLE  R2 R0 K12    ; R2 := R0[1]
 60 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Song"]
 61 [-]: LOADK     R3 K20       ; R3 := "SONG-"
 62 [-]: GETTABLE  R4 R0 K12    ; R4 := R0[1]
 63 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mName"]
 64 [-]: LOADK     R5 K21       ; R5 := ":"
 65 [-]: GETTABLE  R6 R2 K22    ; R6 := R2["mFingerPrint"]
 66 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 67 [-]: LOADK     R4 K16       ; R4 := 0
 68 [-]: GETGLOBAL R5 K23       ; R5 := Lotus_Game
 69 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["MAX_NoteType"]
 70 [-]: SUB       R5 R5 K12    ; R5 := R5 - 1
 71 [-]: LOADK     R6 K12       ; R6 := 1
 72 [-]: FORPREP   R4 88        ; R4 -= R6; PC := 88
 73 [-]: MOVE      R8 R3        ; R8 := R3
 74 [-]: LOADK     R9 K21       ; R9 := ":"
 75 [-]: CONCAT    R3 R8 R9     ; R3 := R8 .. R9
 76 [-]: SELF      R8 R2 K25    ; R9 := R2; R8 := R2["0x37D618A0"]
 77 [-]: MOVE      R10 R7       ; R10 := R7
 78 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 79 [-]: GETGLOBAL R9 K7        ; R9 := 0x400E7765
 80 [-]: MOVE      R10 R8       ; R10 := R8
 81 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 82 [-]: TEST      R9 1         ; if R9 then PC := 88
 83 [-]: JMP       88           ; PC := 88
 84 [-]: MOVE      R9 R3        ; R9 := R3
 85 [-]: SELF      R10 R8 K26   ; R11 := R8; R10 := R8["0x34820572"]
 86 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 87 [-]: CONCAT    R3 R9 R10    ; R3 := R9 .. R10
 88 [-]: FORLOOP   R4 73        ; R4 += R6; if R4 <= R5 then begin PC := 73; R7 := R4 end
 89 [-]: GETGLOBAL R9 K27       ; R9 := mMovie
 90 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9["0x458F27A9"]
 91 [-]: LOADK     R11 K29      ; R11 := "RecursiveSongReplace"
 92 [-]: MOVE      R12 R3       ; R12 := R3
 93 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 94 [-]: RETURN    R0 1         ; return 


; Function #97.5.7:
;
; Name:            
; Defined at line: 3358
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xA622A18B"]
  3 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #97.5.8:
;
; Name:            
; Defined at line: 3364
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["StepSequencerLoader"]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x1D22DBD8"]
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: SETTABLE  R1 K0 R2     ; R1["StepSequencerLoader"] := R2
 10 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 11 [-]: LOADK     R2 K3        ; R2 := 0
 12 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["MAX_NoteType"]
 14 [-]: SUB       R3 R3 K6     ; R3 := R3 - 1
 15 [-]: LOADK     R4 K6        ; R4 := 1
 16 [-]: FORPREP   R2 28        ; R2 -= R4; PC := 28
 17 [-]: GETGLOBAL R6 K7        ; R6 := table
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0xE6450C9D"]
 19 [-]: MOVE      R7 R1        ; R7 := R1
 20 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 21 [-]: SETTABLE  R8 K9 R5     ; R8["NoteType"] := R5
 22 [-]: GETTABLE  R9 R0 K11    ; R9 := R0["Song"]
 23 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x37D618A0"]
 24 [-]: MOVE      R11 R5       ; R11 := R5
 25 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 26 [-]: SETTABLE  R8 K10 R9    ; R8["NotePack"] := R9
 27 [-]: CALL      R6 3 1       ; R6(R7,R8)
 28 [-]: FORLOOP   R2 17        ; R2 += R4; if R2 <= R3 then begin PC := 17; R5 := R2 end
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["0x42A8DD23"]
 31 [-]: GETUPVAL  R7 U0        ; R7 := U0
 32 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["StepSequencerLoader"]
 33 [-]: MOVE      R8 R1        ; R8 := R1
 34 [-]: GETTABLE  R9 R0 K11    ; R9 := R0["Song"]
 35 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mFingerPrint"]
 36 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 37 [-]: GETUPVAL  R6 U2        ; R6 := U2
 38 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x880196A7"]
 39 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["mClipName"]
 40 [-]: LOADK     R9 K17       ; R9 := "Label"
 41 [-]: LOADK     R10 K18      ; R10 := "text"
 42 [-]: GETTABLE  R11 R0 K19   ; R11 := R0["mName"]
 43 [-]: LOADK     R12 K20      ; R12 := "  "
 44 [-]: GETGLOBAL R13 K21      ; R13 := mMovie
 45 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13["0x5DB0BD4"]
 46 [-]: LOADK     R15 K23      ; R15 := "<SPEAKER>"
 47 [-]: MOVE      R16 R1       ; R16 := R1
 48 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 49 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
 50 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 51 [-]: RETURN    R0 1         ; return 


; Function #97.5.9:
;
; Name:            
; Defined at line: 3380
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
  6 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  7 [-]: LOADK     R4 K3        ; R4 := "Label"
  8 [-]: LOADK     R5 K4        ; R5 := "text"
  9 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mName"]
 10 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 13 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 37
 14 [-]: JMP       37           ; PC := 37
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["StepSequencerLoader"]
 18 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["StepSequencer"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 35
 21 [-]: JMP       35           ; PC := 35
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 24 [-]: SETTABLE  R1 K9 K1     ; R1["Loader"] := nil
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 27 [-]: SETTABLE  R1 K10 K11   ; R1["IsLoading"] := "0x0"
 28 [-]: GETUPVAL  R1 U1        ; R1 := U1
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 30 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["StepSequencer"]
 31 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x3DE5CD9B"]
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R1 3 1       ; R1(R2,R3)
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETUPVAL  R1 U1        ; R1 := U1
 36 [-]: SETTABLE  R1 K6 K1     ; R1["StepSequencerLoader"] := nil
 37 [-]: RETURN    R0 1         ; return 


; Function #97.5.10:
;
; Name:            
; Defined at line: 3459
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetWeapons"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["WeaponSelectionDone"] := nil
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: MOVE      R1 R1        ; R1 := R1
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 160
 15 [-]: JMP       160          ; PC := 160
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 17 [-]: GETTABLE  R3 R0 K5     ; R3 := R0[1]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 160
 20 [-]: JMP       160          ; PC := 160
 21 [-]: GETTABLE  R1 R0 K5     ; R1 := R0[1]
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["RawItem"]
 24 [-]: GETUPVAL  R4 U3        ; R4 := U3
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: LOADNIL   R3 R3        ; R3 := nil
 30 [-]: GETUPVAL  R4 U3        ; R4 := U3
 31 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 32 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["MWC_MOA_PET"]
 33 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 56
 34 [-]: JMP       56           ; PC := 56
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0x7B89D6F2
 36 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["RawItem"]
 37 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x17D2B78C"]
 38 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
 39 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["WF_GILDED"]
 40 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 41 [-]: GETTABLE  R6 R2 K5     ; R6 := R2[1]
 42 [-]: GETGLOBAL R7 K12       ; R7 := modularMoaPetLegs
 43 [-]: LEN       R7 R7        ; R7 := # R7
 44 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2]
 45 [-]: GETGLOBAL R9 K14       ; R9 := modularMoaPetHeads
 46 [-]: LEN       R9 R9        ; R9 := # R9
 47 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3]
 48 [-]: GETGLOBAL R11 K16      ; R11 := modularMoaPetEngines
 49 [-]: LEN       R11 R11      ; R11 := # R11
 50 [-]: GETTABLE  R12 R2 K17   ; R12 := R2[4]
 51 [-]: GETGLOBAL R13 K18      ; R13 := modularMoaPetPayloads
 52 [-]: LEN       R13 R13      ; R13 := # R13
 53 [-]: CALL      R4 10 2      ; R4 := R4(R5,R6,R7,R8,R9,R10,R11,R12,R13)
 54 [-]: MOVE      R3 R4        ; R3 := R4
 55 [-]: JMP       150          ; PC := 150
 56 [-]: GETUPVAL  R4 U3        ; R4 := U3
 57 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 58 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["MWC_HOVERBOARD"]
 59 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 82
 60 [-]: JMP       82           ; PC := 82
 61 [-]: GETGLOBAL R4 K9        ; R4 := 0x7B89D6F2
 62 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["RawItem"]
 63 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x17D2B78C"]
 64 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
 65 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["WF_GILDED"]
 66 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 67 [-]: GETTABLE  R6 R2 K5     ; R6 := R2[1]
 68 [-]: GETGLOBAL R7 K20       ; R7 := modularKDriveDecks
 69 [-]: LEN       R7 R7        ; R7 := # R7
 70 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2]
 71 [-]: GETGLOBAL R9 K21       ; R9 := modularKDriveEngines
 72 [-]: LEN       R9 R9        ; R9 := # R9
 73 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3]
 74 [-]: GETGLOBAL R11 K22      ; R11 := modularKDriveFronts
 75 [-]: LEN       R11 R11      ; R11 := # R11
 76 [-]: GETTABLE  R12 R2 K17   ; R12 := R2[4]
 77 [-]: GETGLOBAL R13 K23      ; R13 := modularKDriveJets
 78 [-]: LEN       R13 R13      ; R13 := # R13
 79 [-]: CALL      R4 10 2      ; R4 := R4(R5,R6,R7,R8,R9,R10,R11,R12,R13)
 80 [-]: MOVE      R3 R4        ; R3 := R4
 81 [-]: JMP       150          ; PC := 150
 82 [-]: GETUPVAL  R4 U3        ; R4 := U3
 83 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 84 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["MWC_AMP"]
 85 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 105
 86 [-]: JMP       105          ; PC := 105
 87 [-]: GETGLOBAL R4 K9        ; R4 := 0x7B89D6F2
 88 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["RawItem"]
 89 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x17D2B78C"]
 90 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
 91 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["WF_GILDED"]
 92 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 93 [-]: GETTABLE  R6 R2 K5     ; R6 := R2[1]
 94 [-]: GETGLOBAL R7 K25       ; R7 := ampBarrels
 95 [-]: LEN       R7 R7        ; R7 := # R7
 96 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2]
 97 [-]: GETGLOBAL R9 K26       ; R9 := ampChasis
 98 [-]: LEN       R9 R9        ; R9 := # R9
 99 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3]
100 [-]: GETGLOBAL R11 K27      ; R11 := ampGrips
101 [-]: LEN       R11 R11      ; R11 := # R11
102 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
103 [-]: MOVE      R3 R4        ; R3 := R4
104 [-]: JMP       150          ; PC := 150
105 [-]: GETUPVAL  R4 U3        ; R4 := U3
106 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
107 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["MWC_PRIMARY"]
108 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 115
109 [-]: JMP       115          ; PC := 115
110 [-]: GETUPVAL  R4 U3        ; R4 := U3
111 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
112 [-]: GETTABLE  R5 R5 K29    ; R5 := R5["MWC_SECONDARY"]
113 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 133
114 [-]: JMP       133          ; PC := 133
115 [-]: GETGLOBAL R4 K9        ; R4 := 0x7B89D6F2
116 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["RawItem"]
117 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x17D2B78C"]
118 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
119 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["WF_GILDED"]
120 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
121 [-]: GETTABLE  R6 R2 K5     ; R6 := R2[1]
122 [-]: GETGLOBAL R7 K30       ; R7 := modularGunHandles
123 [-]: LEN       R7 R7        ; R7 := # R7
124 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2]
125 [-]: GETGLOBAL R9 K31       ; R9 := modularGunBarrels
126 [-]: LEN       R9 R9        ; R9 := # R9
127 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3]
128 [-]: GETGLOBAL R11 K32      ; R11 := modularGunClips
129 [-]: LEN       R11 R11      ; R11 := # R11
130 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
131 [-]: MOVE      R3 R4        ; R3 := R4
132 [-]: JMP       150          ; PC := 150
133 [-]: GETGLOBAL R4 K9        ; R4 := 0x7B89D6F2
134 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["RawItem"]
135 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x17D2B78C"]
136 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
137 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["WF_GILDED"]
138 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
139 [-]: GETTABLE  R6 R2 K5     ; R6 := R2[1]
140 [-]: GETGLOBAL R7 K33       ; R7 := modularStrikes
141 [-]: LEN       R7 R7        ; R7 := # R7
142 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2]
143 [-]: GETGLOBAL R9 K34       ; R9 := modularGrips
144 [-]: LEN       R9 R9        ; R9 := # R9
145 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3]
146 [-]: GETGLOBAL R11 K35      ; R11 := modularLinks
147 [-]: LEN       R11 R11      ; R11 := # R11
148 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
149 [-]: MOVE      R3 R4        ; R3 := R4
150 [-]: GETUPVAL  R4 U4        ; R4 := U4
151 [-]: GETTABLE  R5 R1 K36    ; R5 := R1["Name"]
152 [-]: LOADK     R6 K37       ; R6 := ":"
153 [-]: MOVE      R7 R3        ; R7 := R3
154 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
155 [-]: GETGLOBAL R5 K38       ; R5 := mMovie
156 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5["0x458F27A9"]
157 [-]: GETUPVAL  R7 U5        ; R7 := U5
158 [-]: MOVE      R8 R4        ; R8 := R4
159 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
160 [-]: RETURN    R0 1         ; return 


; Function #97.5.11:
;
; Name:            
; Defined at line: 3495
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xEC150538"]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: RETURN    R0 2         ; return R0
  6 [-]: RETURN    R0 1         ; return 


; Function #97.5.12:
;
; Name:            
; Defined at line: 3545
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["LoadoutSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetLoadoutList"] := nil
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: SETTABLE  R1 K4 R2     ; R1["Msg"] := R2
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETUPVAL  R2 U3        ; R2 := U3
 12 [-]: SETTABLE  R1 K5 R2     ; R1["CurrItemString"] := R2
 13 [-]: GETUPVAL  R1 U4        ; R1 := U4
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETTABLE  R1 R0 K7     ; R1 := R0[1]
 22 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 49
 23 [-]: JMP       49           ; PC := 49
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 26 [-]: GETTABLE  R3 R0 K7     ; R3 := R0[1]
 27 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mStoredItem"]
 28 [-]: SETTABLE  R2 K9 R3     ; R2["StoredItem"] := R3
 29 [-]: GETTABLE  R3 R0 K7     ; R3 := R0[1]
 30 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mLoadoutType"]
 31 [-]: SETTABLE  R2 K11 R3    ; R2["LoadOutType"] := R3
 32 [-]: GETTABLE  R3 R0 K7     ; R3 := R0[1]
 33 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mLoadoutSlot"]
 34 [-]: SETTABLE  R2 K13 R3    ; R2["LoadOutSlot"] := R3
 35 [-]: SETTABLE  R1 K8 R2     ; R1["AppearanceStoredItem"] := R2
 36 [-]: GETGLOBAL R1 K15       ; R1 := mMovie
 37 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x458F27A9"]
 38 [-]: LOADK     R3 K17       ; R3 := "LinkAppearance"
 39 [-]: LOADK     R4 K18       ; R4 := ""
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K15       ; R1 := mMovie
 42 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x458F27A9"]
 43 [-]: LOADK     R3 K19       ; R3 := "RecursiveAppearanceReplace"
 44 [-]: GETUPVAL  R4 U1        ; R4 := U1
 45 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["CachedAppearanceLink"]
 46 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 47 [-]: GETUPVAL  R1 U1        ; R1 := U1
 48 [-]: SETTABLE  R1 K20 K2    ; R1["CachedAppearanceLink"] := nil
 49 [-]: RETURN    R0 1         ; return 


; Function #97.5.13:
;
; Name:            
; Defined at line: 3566
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x184FED0E"]
  3 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #97.5.14:
;
; Name:            
; Defined at line: 3615
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ModConfigSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetModConfigList"] := nil
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: SETTABLE  R1 K4 R2     ; R1["Msg"] := R2
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETUPVAL  R2 U3        ; R2 := U3
 12 [-]: SETTABLE  R1 K5 R2     ; R1["CurrItemString"] := R2
 13 [-]: GETUPVAL  R1 U4        ; R1 := U4
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETTABLE  R1 R0 K7     ; R1 := R0[1]
 22 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 49
 23 [-]: JMP       49           ; PC := 49
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 26 [-]: GETTABLE  R3 R0 K7     ; R3 := R0[1]
 27 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mStoredItem"]
 28 [-]: SETTABLE  R2 K9 R3     ; R2["StoredItem"] := R3
 29 [-]: GETTABLE  R3 R0 K7     ; R3 := R0[1]
 30 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mLoadoutType"]
 31 [-]: SETTABLE  R2 K11 R3    ; R2["LoadOutType"] := R3
 32 [-]: GETTABLE  R3 R0 K7     ; R3 := R0[1]
 33 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mLoadoutSlot"]
 34 [-]: SETTABLE  R2 K13 R3    ; R2["LoadOutSlot"] := R3
 35 [-]: SETTABLE  R1 K8 R2     ; R1["ModConfigStoredItem"] := R2
 36 [-]: GETGLOBAL R1 K15       ; R1 := mMovie
 37 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x458F27A9"]
 38 [-]: LOADK     R3 K17       ; R3 := "LinkModConfig"
 39 [-]: LOADK     R4 K18       ; R4 := ""
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K15       ; R1 := mMovie
 42 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x458F27A9"]
 43 [-]: LOADK     R3 K19       ; R3 := "RecursiveModConfigReplace"
 44 [-]: GETUPVAL  R4 U1        ; R4 := U1
 45 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["CachedModConfigLink"]
 46 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 47 [-]: GETUPVAL  R1 U1        ; R1 := U1
 48 [-]: SETTABLE  R1 K20 K2    ; R1["CachedModConfigLink"] := nil
 49 [-]: RETURN    R0 1         ; return 


; Function #97.5.15:
;
; Name:            
; Defined at line: 3636
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x184FED0E"]
  3 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #97.5.16:
;
; Name:            
; Defined at line: 3833
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: LEN       R1 R1        ; R1 := # R1
  6 [-]: LT        0 R0 R1      ; if R0 >= R1 then PC := 134
  7 [-]: JMP       134          ; PC := 134
  8 [-]: GETGLOBAL R0 K1        ; R0 := string
  9 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xDE44F664"]
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: LOADK     R2 K3        ; R2 := "%[[^%]%[]*%]"
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: CALL      R0 4 3       ; R0,R1 := R0(R1,R2,R3)
 14 [-]: TEST      R0 0         ; if not R0 then PC := 134
 15 [-]: JMP       134          ; PC := 134
 16 [-]: GETGLOBAL R2 K1        ; R2 := string
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x7B782033"]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: ADD       R4 R0 K0     ; R4 := R0 + 1
 20 [-]: SUB       R5 R1 K0     ; R5 := R1 - 1
 21 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 22 [-]: LOADK     R3 K5        ; R3 := "{"
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: LOADK     R5 K6        ; R5 := "}"
 25 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 26 [-]: GETUPVAL  R4 U2        ; R4 := U2
 27 [-]: GETUPVAL  R5 U3        ; R5 := U3
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["0xCECDECDE"]
 29 [-]: MOVE      R6 R2        ; R6 := R2
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 32 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 57
 33 [-]: JMP       57           ; PC := 57
 34 [-]: GETGLOBAL R5 K9        ; R5 := 0xD26C89A0
 35 [-]: MOVE      R6 R4        ; R6 := R4
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: SELF      R6 R2 K10    ; R7 := R2; R6 := R2["0x633C4246"]
 38 [-]: LOADK     R8 K11       ; R8 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
 39 [-]: LOADK     R9 K12       ; R9 := "%%%0"
 40 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 41 [-]: GETGLOBAL R7 K1        ; R7 := string
 42 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["0x633C4246"]
 43 [-]: GETUPVAL  R8 U1        ; R8 := U1
 44 [-]: LOADK     R9 K13       ; R9 := "%["
 45 [-]: MOVE      R10 R6       ; R10 := R6
 46 [-]: LOADK     R11 K14      ; R11 := "%]"
 47 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 48 [-]: LOADK     R10 K15      ; R10 := "["
 49 [-]: MOVE      R11 R5       ; R11 := R5
 50 [-]: LOADK     R12 K16      ; R12 := "]"
 51 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 52 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 53 [-]: MOVE      R7 R1        ; R7 := R1
 54 [-]: ADD       R7 R1 K0     ; R7 := R1 + 1
 55 [-]: MOVE      R7 R0        ; R7 := R0
 56 [-]: JMP       3            ; PC := 3
 57 [-]: GETUPVAL  R7 U4        ; R7 := U4
 58 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["OmegaLinks"]
 59 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 60 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 61 [-]: JMP       109          ; PC := 109
 62 [-]: GETUPVAL  R7 U4        ; R7 := U4
 63 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["SongLinks"]
 64 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 65 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 66 [-]: JMP       109          ; PC := 109
 67 [-]: GETUPVAL  R7 U4        ; R7 := U4
 68 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["ZawLinks"]
 69 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 70 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 71 [-]: JMP       109          ; PC := 109
 72 [-]: GETUPVAL  R7 U4        ; R7 := U4
 73 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["AmpLinks"]
 74 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 75 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 76 [-]: JMP       109          ; PC := 109
 77 [-]: GETUPVAL  R7 U4        ; R7 := U4
 78 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["MoaPetLinks"]
 79 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 80 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 81 [-]: JMP       109          ; PC := 109
 82 [-]: GETUPVAL  R7 U4        ; R7 := U4
 83 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["KdriveLinks"]
 84 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 85 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 86 [-]: JMP       109          ; PC := 109
 87 [-]: GETUPVAL  R7 U4        ; R7 := U4
 88 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["KitgunLinks"]
 89 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 90 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 91 [-]: JMP       109          ; PC := 109
 92 [-]: GETUPVAL  R7 U4        ; R7 := U4
 93 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["AppearanceLinks"]
 94 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 95 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
 96 [-]: JMP       109          ; PC := 109
 97 [-]: GETUPVAL  R7 U4        ; R7 := U4
 98 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["ModConfigLinks"]
 99 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
100 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
101 [-]: JMP       109          ; PC := 109
102 [-]: GETUPVAL  R7 U4        ; R7 := U4
103 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["ShawzinLinks"]
104 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
105 [-]: EQ        0 R7 K8      ; if R7 ~= nil then PC := 109
106 [-]: JMP       109          ; PC := 109
107 [-]: EQ        0 R2 K27     ; if R2 ~= "DE" then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: ADD       R7 R1 K0     ; R7 := R1 + 1
110 [-]: MOVE      R7 R0        ; R7 := R0
111 [-]: JMP       3            ; PC := 3
112 [-]: GETUPVAL  R7 U5        ; R7 := U5
113 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7["0x18AAE1E3"]
114 [-]: CALL      R7 2 2       ; R7 := R7(R8)
115 [-]: GETGLOBAL R8 K29       ; R8 := 0x400E7765
116 [-]: MOVE      R9 R7        ; R9 := R7
117 [-]: CALL      R8 2 2       ; R8 := R8(R9)
118 [-]: TEST      R8 1         ; if R8 then PC := 129
119 [-]: JMP       129          ; PC := 129
120 [-]: SELF      R8 R7 K30    ; R9 := R7; R8 := R7["0xAE78D1F"]
121 [-]: GETGLOBAL R10 K31      ; R10 := mMovie
122 [-]: SELF      R10 R10 K32  ; R11 := R10; R10 := R10["0x5DB0BD4"]
123 [-]: LOADK     R12 K33      ; R12 := "/Lotus/Language/Menu/Chat_InvalidLinkedItem"
124 [-]: MOVE      R13 R0       ; R13 := R0
125 [-]: NEWTABLE  R14 0 1      ; R14 := {}
126 [-]: SETTABLE  R14 K34 R2   ; R14["ITEMNAME"] := R2
127 [-]: CALL      R10 5 0      ; R10,... := R10(R11,R12,R13,R14)
128 [-]: CALL      R8 0 1       ; R8(R9,...)
129 [-]: MOVE      R8 R0        ; R8 := R0
130 [-]: RETURN    R8 2         ; return R8
131 [-]: JMP       3            ; PC := 3
132 [-]: JMP       134          ; PC := 134
133 [-]: JMP       3            ; PC := 3
134 [-]: MOVE      R8 R1        ; R8 := R1
135 [-]: RETURN    R8 2         ; return R8
136 [-]: RETURN    R0 1         ; return 


; Function #97.6:
;
; Name:            
; Defined at line: 4287
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/Chat_SpamBlockTrade"
  5 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Menu/Chat_SpamBlock"
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: GETGLOBAL R3 K3        ; R3 := math
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xF7005A7B"]
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["0xF81722A2"]
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: GETUPVAL  R6 U1        ; R6 := U1
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["TRADE_SPAM_DETECTION_PERIOD"]
 14 [-]: GETUPVAL  R7 U1        ; R7 := U1
 15 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["SPAM_LOCKOUT_TIME"]
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: GETGLOBAL R5 K7        ; R5 := 0xD51B2786
 18 [-]: CALL      R5 1 2       ; R5 := R5()
 19 [-]: GETUPVAL  R6 U0        ; R6 := U0
 20 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["0xF81722A2"]
 21 [-]: MOVE      R7 R1        ; R7 := R1
 22 [-]: GETGLOBAL R8 K8        ; R8 := _G
 23 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["TradeSpamBlockTime"]
 24 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mSpamBlockTime"]
 25 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 26 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 27 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: GETUPVAL  R4 U2        ; R4 := U2
 30 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x18AAE1E3"]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 35 [-]: TEST      R5 1         ; if R5 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: SELF      R5 R4 K13    ; R6 := R4; R5 := R4["0xAE78D1F"]
 38 [-]: GETGLOBAL R7 K14       ; R7 := mMovie
 39 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 40 [-]: MOVE      R9 R2        ; R9 := R2
 41 [-]: MOVE      R10 R0       ; R10 := R0
 42 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 43 [-]: SETTABLE  R11 K16 R3   ; R11["TIME"] := R3
 44 [-]: CALL      R7 5 0       ; R7,... := R7(R8,R9,R10,R11)
 45 [-]: CALL      R5 0 1       ; R5(R6,...)
 46 [-]: GETUPVAL  R5 U0        ; R5 := U0
 47 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["0x25992394"]
 48 [-]: GETGLOBAL R6 K8        ; R6 := _G
 49 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["UISound_Error"]
 50 [-]: CALL      R5 2 1       ; R5(R6)
 51 [-]: GETUPVAL  R5 U2        ; R5 := U2
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["mInputPanel"]
 53 [-]: SETTABLE  R5 K20 K21   ; R5["CharLimitFlashTime"] := 2.5
 54 [-]: RETURN    R0 1         ; return 


; Function #97.7:
;
; Name:            
; Defined at line: 4299
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  2 [-]: SETTABLE  R3 K0 R2     ; R3["isOnline"] := R2
  3 [-]: SETTABLE  R3 K1 R1     ; R3["name"] := R1
  4 [-]: GETGLOBAL R4 K3        ; R4 := string
  5 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xBDD0D625"]
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: SETTABLE  R3 K2 R4     ; R3["lowercaseName"] := R4
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: RETURN    R0 1         ; return 


; Function #97.8:
;
; Name:            
; Defined at line: 4304
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mChannelName"]
  7 [-]: EQ        0 R4 R2      ; if R4 ~= R2 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HIDDEN_PLAYER_NAME"]
 11 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R4 K3        ; R4 := string
 15 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xDE44F664"]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K5        ; R6 := "@"
 18 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 19 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R4 K3        ; R4 := string
 22 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x7B782033"]
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: LOADK     R6 K7        ; R6 := 2
 25 [-]: LOADK     R7 K8        ; R7 := -1
 26 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 27 [-]: MOVE      R1 R4        ; R1 := R4
 28 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0["0xC97B3222"]
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 32 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["mIsActive"]
 33 [-]: TEST      R5 0         ; if not R5 then PC := 162
 34 [-]: JMP       162          ; PC := 162
 35 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 36 [-]: GETTABLE  R6 R4 K12    ; R6 := R4["name"]
 37 [-]: SETTABLE  R5 K11 R6    ; R5["User"] := R6
 38 [-]: GETTABLE  R6 R4 K14    ; R6 := R4["lowercaseName"]
 39 [-]: SETTABLE  R5 K13 R6    ; R5["UserLower"] := R6
 40 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mChannelName"]
 41 [-]: SETTABLE  R5 K15 R6    ; R5["Channel"] := R6
 42 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["mParent"]
 43 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["mUserPanel"]
 44 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["mListControl"]
 45 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["mElements"]
 46 [-]: LEN       R6 R6        ; R6 := # R6
 47 [-]: LOADK     R7 K20       ; R7 := 0
 48 [-]: LOADK     R8 K21       ; R8 := 1
 49 [-]: ADD       R9 R6 K21    ; R9 := R6 + 1
 50 [-]: GETTABLE  R10 R5 K13   ; R10 := R5["UserLower"]
 51 [-]: LT        0 R8 R9      ; if R8 >= R9 then PC := 76
 52 [-]: JMP       76           ; PC := 76
 53 [-]: GETGLOBAL R11 K22      ; R11 := 0x1BF588C6
 54 [-]: LOADK     R12 K20      ; R12 := 0
 55 [-]: CALL      R11 2 1      ; R11(R12)
 56 [-]: GETGLOBAL R11 K23      ; R11 := math
 57 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["0xF7005A7B"]
 58 [-]: ADD       R12 R8 R9    ; R12 := R8 + R9
 59 [-]: DIV       R12 R12 K7   ; R12 := R12 / 2
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: GETTABLE  R12 R0 K16   ; R12 := R0["mParent"]
 62 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["mUserPanel"]
 63 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["mListControl"]
 64 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["mElements"]
 65 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 66 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["UserLower"]
 67 [-]: EQ        0 R12 R10    ; if R12 ~= R10 then PC := 70
 68 [-]: JMP       70           ; PC := 70
 69 [-]: RETURN    R0 1         ; return 
 70 [-]: LT        0 R10 R12    ; if R10 >= R12 then PC := 74
 71 [-]: JMP       74           ; PC := 74
 72 [-]: MOVE      R9 R11       ; R9 := R11
 73 [-]: JMP       51           ; PC := 51
 74 [-]: ADD       R8 R11 K21   ; R8 := R11 + 1
 75 [-]: JMP       51           ; PC := 51
 76 [-]: MOVE      R7 R9        ; R7 := R9
 77 [-]: LOADK     R13 K21      ; R13 := 1
 78 [-]: GETTABLE  R14 R0 K25   ; R14 := R0["mAlphabetIndex"]
 79 [-]: LEN       R14 R14      ; R14 := # R14
 80 [-]: LOADK     R15 K21      ; R15 := 1
 81 [-]: FORPREP   R13 108      ; R13 -= R15; PC := 108
 82 [-]: GETTABLE  R17 R0 K25   ; R17 := R0["mAlphabetIndex"]
 83 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 84 [-]: LT        1 R7 R17     ; if R7 < R17 then PC := 103
 85 [-]: JMP       103          ; PC := 103
 86 [-]: GETTABLE  R17 R0 K25   ; R17 := R0["mAlphabetIndex"]
 87 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 88 [-]: EQ        0 R7 R17     ; if R7 ~= R17 then PC := 108
 89 [-]: JMP       108          ; PC := 108
 90 [-]: GETGLOBAL R17 K3       ; R17 := string
 91 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["0x639C642A"]
 92 [-]: GETGLOBAL R18 K3       ; R18 := string
 93 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["0x7B782033"]
 94 [-]: GETTABLE  R19 R5 K13   ; R19 := R5["UserLower"]
 95 [-]: LOADK     R20 K21      ; R20 := 1
 96 [-]: LOADK     R21 K21      ; R21 := 1
 97 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
 98 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 99 [-]: GETUPVAL  R18 U1       ; R18 := U1
100 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
101 [-]: LT        0 R17 R18    ; if R17 >= R18 then PC := 108
102 [-]: JMP       108          ; PC := 108
103 [-]: GETTABLE  R17 R0 K25   ; R17 := R0["mAlphabetIndex"]
104 [-]: GETTABLE  R18 R0 K25   ; R18 := R0["mAlphabetIndex"]
105 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
106 [-]: ADD       R18 R18 K21  ; R18 := R18 + 1
107 [-]: SETTABLE  R17 R16 R18  ; R17[R16] := R18
108 [-]: FORLOOP   R13 82       ; R13 += R15; if R13 <= R14 then begin PC := 82; R16 := R13 end
109 [-]: GETTABLE  R17 R0 K16   ; R17 := R0["mParent"]
110 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["mUserPanel"]
111 [-]: GETTABLE  R17 R17 K18  ; R17 := R17["mListControl"]
112 [-]: SELF      R17 R17 K27  ; R18 := R17; R17 := R17["0xA6D439FA"]
113 [-]: MOVE      R19 R7       ; R19 := R7
114 [-]: MOVE      R20 R5       ; R20 := R5
115 [-]: MOVE      R21 R1       ; R21 := R1
116 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
117 [-]: TEST      R3 1         ; if R3 then PC := 162
118 [-]: JMP       162          ; PC := 162
119 [-]: GETTABLE  R17 R0 K16   ; R17 := R0["mParent"]
120 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["mVisualMode"]
121 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mParent"]
122 [-]: GETTABLE  R18 R18 K29  ; R18 := R18["VISUAL_MODE_MENU_SIMPLE"]
123 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 162
124 [-]: JMP       162          ; PC := 162
125 [-]: GETTABLE  R17 R0 K16   ; R17 := R0["mParent"]
126 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["mVisualMode"]
127 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mParent"]
128 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["VISUAL_MODE_GAMEPLAY_SIMPLE"]
129 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 162
130 [-]: JMP       162          ; PC := 162
131 [-]: GETTABLE  R17 R0 K16   ; R17 := R0["mParent"]
132 [-]: SELF      R17 R17 K31  ; R18 := R17; R17 := R17["0x5528ED75"]
133 [-]: GETTABLE  R19 R0 K16   ; R19 := R0["mParent"]
134 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["mUserPanel"]
135 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["mWindow"]
136 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
137 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mParent"]
138 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["mUserPanel"]
139 [-]: SELF      R18 R18 K33  ; R19 := R18; R18 := R18["0xC86D89A5"]
140 [-]: GETTABLE  R20 R17 K34  ; R20 := R17["height"]
141 [-]: CALL      R18 3 1      ; R18(R19,R20)
142 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mParent"]
143 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["mUserPanel"]
144 [-]: SELF      R18 R18 K35  ; R19 := R18; R18 := R18["0xAC4AB24D"]
145 [-]: MOVE      R20 R7       ; R20 := R7
146 [-]: CALL      R18 3 1      ; R18(R19,R20)
147 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mParent"]
148 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["mUserPanel"]
149 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["mListControl"]
150 [-]: SELF      R18 R18 K36  ; R19 := R18; R18 := R18["0x6470BAF4"]
151 [-]: LOADNIL   R20 R20      ; R20 := nil
152 [-]: MOVE      R21 R0       ; R21 := R0
153 [-]: MOVE      R22 R1       ; R22 := R1
154 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
155 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mParent"]
156 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["mUserPanel"]
157 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["mListControl"]
158 [-]: SELF      R18 R18 K37  ; R19 := R18; R18 := R18["0x51396186"]
159 [-]: CLOSURE   R20 0        ; R20 := closure(Function #97.8.1)
160 [-]: MOVE      R0 R0        ; R0 := R0
161 [-]: CALL      R18 3 1      ; R18(R19,R20)
162 [-]: GETTABLE  R18 R0 K38   ; R18 := R0["mUserList"]
163 [-]: SETTABLE  R18 R1 R4    ; R18[R1] := R4
164 [-]: MOVE      R18 R1       ; R18 := R1
165 [-]: RETURN    R18 2        ; return R18
166 [-]: RETURN    R0 1         ; return 


; Function #97.8.1:
;
; Name:            
; Defined at line: 4363
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 18
  2 [-]: JMP       18           ; PC := 18
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K4        ; R4 := "_y"
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mParent"]
 12 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mUserPanel"]
 13 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mListControl"]
 14 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xF68300E4"]
 15 [-]: MOVE      R7 R0        ; R7 := R0
 16 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 17 [-]: CALL      R1 0 1       ; R1(R2,...)
 18 [-]: RETURN    R0 1         ; return 


; Function #97.9:
;
; Name:            
; Defined at line: 4375
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mIsActive"]
  2 [-]: TEST      R2 1         ; if R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: EQ        0 R1 K1      ; if R1 ~= "0x0" then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mListControl"]
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x9EBF0BD2"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: SETTABLE  R0 K2 R2     ; R0["mStoredFocusIndex"] := R2
 13 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mParent"]
 14 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x8B082A0E"]
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K8        ; R2 := Engine
 18 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x1398DAFB"]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 0         ; if not R2 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: CALL      R2 1 2       ; R2 := R2()
 24 [-]: TEST      R2 0         ; if not R2 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mVisualMode"]
 28 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
 29 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mVisualMode"]
 32 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 34 [-]: JMP       46           ; PC := 46
 35 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mParent"]
 36 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x5528ED75"]
 37 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mParent"]
 38 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mUserPanel"]
 39 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mWindow"]
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mParent"]
 42 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mUserPanel"]
 43 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0xC86D89A5"]
 44 [-]: GETTABLE  R5 R2 K16    ; R5 := R2["height"]
 45 [-]: CALL      R3 3 1       ; R3(R4,R5)
 46 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mChannelType"]
 47 [-]: GETUPVAL  R4 U0        ; R4 := U0
 48 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["CHANNEL_PRIVATE_CHAT"]
 49 [-]: LE        0 R4 R3      ; if R4 > R3 then PC := 73
 50 [-]: JMP       73           ; PC := 73
 51 [-]: GETGLOBAL R3 K19       ; R3 := string
 52 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["0x7B782033"]
 53 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mChannelName"]
 54 [-]: LOADK     R5 K22       ; R5 := 2
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mParent"]
 57 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mUserPanel"]
 58 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mListControl"]
 59 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xA77DA8EE"]
 60 [-]: NEWTABLE  R6 0 4       ; R6 := {}
 61 [-]: SETTABLE  R6 K24 K25   ; R6["Id"] := 1
 62 [-]: SETTABLE  R6 K26 R3    ; R6["User"] := R3
 63 [-]: GETGLOBAL R7 K19       ; R7 := string
 64 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["0xBDD0D625"]
 65 [-]: MOVE      R8 R3        ; R8 := R3
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: SETTABLE  R6 K27 R7    ; R6["UserLower"] := R7
 68 [-]: GETTABLE  R7 R0 K21    ; R7 := R0["mChannelName"]
 69 [-]: SETTABLE  R6 K29 R7    ; R6["Channel"] := R7
 70 [-]: MOVE      R7 R1        ; R7 := R1
 71 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 72 [-]: JMP       205          ; PC := 205
 73 [-]: GETGLOBAL R4 K30       ; R4 := gMatchingService
 74 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0xF0C493C"]
 75 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 76 [-]: GETGLOBAL R5 K32       ; R5 := 0x400E7765
 77 [-]: MOVE      R6 R4        ; R6 := R4
 78 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 79 [-]: TEST      R5 1         ; if R5 then PC := 205
 80 [-]: JMP       205          ; PC := 205
 81 [-]: SELF      R5 R4 K33    ; R6 := R4; R5 := R4["0x40840BEC"]
 82 [-]: LOADK     R7 K34       ; R7 := "#"
 83 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["mChannelName"]
 84 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 85 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 86 [-]: GETGLOBAL R6 K32       ; R6 := 0x400E7765
 87 [-]: MOVE      R7 R5        ; R7 := R5
 88 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 89 [-]: TEST      R6 1         ; if R6 then PC := 205
 90 [-]: JMP       205          ; PC := 205
 91 [-]: LEN       R6 R5        ; R6 := # R5
 92 [-]: LT        0 K35 R6     ; if 0 >= R6 then PC := 205
 93 [-]: JMP       205          ; PC := 205
 94 [-]: SETTABLE  R0 K36 K37   ; R0["mInitialPopulationDone"] := "0x1"
 95 [-]: LEN       R6 R5        ; R6 := # R5
 96 [-]: LOADNIL   R7 R7        ; R7 := nil
 97 [-]: LOADK     R8 K25       ; R8 := 1
 98 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["mChannelType"]
 99 [-]: GETUPVAL  R10 U0       ; R10 := U0
100 [-]: GETTABLE  R10 R10 K38  ; R10 := R10["CHANNEL_SESSION"]
101 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 104
102 [-]: JMP       104          ; PC := 104
103 [-]: MOVE      R9 R0        ; R9 := R0
104 [-]: MOVE      R9 R1        ; R9 := R1
105 [-]: NEWTABLE  R10 0 0      ; R10 := {}
106 [-]: SETTABLE  R0 K39 R10   ; R0["mAlphabetIndex"] := R10
107 [-]: LOADK     R10 K25      ; R10 := 1
108 [-]: MOVE      R11 R6       ; R11 := R6
109 [-]: LOADK     R12 K25      ; R12 := 1
110 [-]: FORPREP   R10 191      ; R10 -= R12; PC := 191
111 [-]: GETGLOBAL R14 K40      ; R14 := 0x1BF588C6
112 [-]: LOADK     R15 K35      ; R15 := 0
113 [-]: CALL      R14 2 1      ; R14(R15)
114 [-]: GETTABLE  R14 R5 R13   ; R14 := R5[R13]
115 [-]: GETTABLE  R14 R14 K41  ; R14 := R14["member"]
116 [-]: TEST      R9 0         ; if not R9 then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: GETUPVAL  R15 U2       ; R15 := U2
119 [-]: MOVE      R16 R14      ; R16 := R14
120 [-]: CALL      R15 2 2      ; R15 := R15(R16)
121 [-]: TEST      R15 0        ; if not R15 then PC := 191
122 [-]: JMP       191          ; PC := 191
123 [-]: GETUPVAL  R15 U3       ; R15 := U3
124 [-]: GETTABLE  R15 R15 K42  ; R15 := R15["HIDDEN_PLAYER_NAME"]
125 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 191
126 [-]: JMP       191          ; PC := 191
127 [-]: SELF      R15 R0 K43   ; R16 := R0; R15 := R0["0xC97B3222"]
128 [-]: MOVE      R17 R14      ; R17 := R14
129 [-]: MOVE      R18 R1       ; R18 := R1
130 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
131 [-]: MOVE      R7 R15       ; R7 := R15
132 [-]: GETTABLE  R15 R0 K44   ; R15 := R0["mUserList"]
133 [-]: SETTABLE  R15 R14 R7   ; R15[R14] := R7
134 [-]: GETUPVAL  R15 U0       ; R15 := U0
135 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["mUserPanel"]
136 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["mListControl"]
137 [-]: SELF      R15 R15 K23  ; R16 := R15; R15 := R15["0xA77DA8EE"]
138 [-]: NEWTABLE  R17 0 4      ; R17 := {}
139 [-]: SETTABLE  R17 K24 R13  ; R17["Id"] := R13
140 [-]: GETTABLE  R18 R7 K45   ; R18 := R7["name"]
141 [-]: SETTABLE  R17 K26 R18  ; R17["User"] := R18
142 [-]: GETTABLE  R18 R7 K46   ; R18 := R7["lowercaseName"]
143 [-]: SETTABLE  R17 K27 R18  ; R17["UserLower"] := R18
144 [-]: GETTABLE  R18 R0 K21   ; R18 := R0["mChannelName"]
145 [-]: SETTABLE  R17 K29 R18  ; R17["Channel"] := R18
146 [-]: MOVE      R18 R1       ; R18 := R1
147 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
148 [-]: EQ        1 R8 K25     ; if R8 == 1 then PC := 161
149 [-]: JMP       161          ; PC := 161
150 [-]: GETGLOBAL R15 K19      ; R15 := string
151 [-]: GETTABLE  R15 R15 K20  ; R15 := R15["0x7B782033"]
152 [-]: GETTABLE  R16 R7 K46   ; R16 := R7["lowercaseName"]
153 [-]: LOADK     R17 K25      ; R17 := 1
154 [-]: LOADK     R18 K25      ; R18 := 1
155 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
156 [-]: GETUPVAL  R16 U4       ; R16 := U4
157 [-]: SUB       R17 R8 K25   ; R17 := R8 - 1
158 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
159 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 191
160 [-]: JMP       191          ; PC := 191
161 [-]: MOVE      R15 R8       ; R15 := R8
162 [-]: GETUPVAL  R16 U4       ; R16 := U4
163 [-]: LEN       R16 R16      ; R16 := # R16
164 [-]: LOADK     R17 K25      ; R17 := 1
165 [-]: FORPREP   R15 190      ; R15 -= R17; PC := 190
166 [-]: GETGLOBAL R19 K19      ; R19 := string
167 [-]: GETTABLE  R19 R19 K47  ; R19 := R19["0x639C642A"]
168 [-]: GETGLOBAL R20 K19      ; R20 := string
169 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["0x7B782033"]
170 [-]: GETTABLE  R21 R7 K46   ; R21 := R7["lowercaseName"]
171 [-]: LOADK     R22 K25      ; R22 := 1
172 [-]: LOADK     R23 K25      ; R23 := 1
173 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
174 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
175 [-]: GETUPVAL  R20 U4       ; R20 := U4
176 [-]: GETTABLE  R20 R20 R18  ; R20 := R20[R18]
177 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 190
178 [-]: JMP       190          ; PC := 190
179 [-]: MOVE      R19 R8       ; R19 := R8
180 [-]: SUB       R20 R18 K25  ; R20 := R18 - 1
181 [-]: LOADK     R21 K25      ; R21 := 1
182 [-]: FORPREP   R19 185      ; R19 -= R21; PC := 185
183 [-]: GETTABLE  R23 R0 K39   ; R23 := R0["mAlphabetIndex"]
184 [-]: SETTABLE  R23 R22 R13  ; R23[R22] := R13
185 [-]: FORLOOP   R19 183      ; R19 += R21; if R19 <= R20 then begin PC := 183; R22 := R19 end
186 [-]: GETTABLE  R23 R0 K39   ; R23 := R0["mAlphabetIndex"]
187 [-]: SETTABLE  R23 R18 R13  ; R23[R18] := R13
188 [-]: ADD       R8 R18 K25   ; R8 := R18 + 1
189 [-]: JMP       191          ; PC := 191
190 [-]: FORLOOP   R15 166      ; R15 += R17; if R15 <= R16 then begin PC := 166; R18 := R15 end
191 [-]: FORLOOP   R10 111      ; R10 += R12; if R10 <= R11 then begin PC := 111; R13 := R10 end
192 [-]: GETUPVAL  R23 U0       ; R23 := U0
193 [-]: GETTABLE  R23 R23 K3   ; R23 := R23["mUserPanel"]
194 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["mListControl"]
195 [-]: SELF      R23 R23 K48  ; R24 := R23; R23 := R23["0xC51A5C9D"]
196 [-]: CALL      R23 2 2      ; R23 := R23(R24)
197 [-]: MOVE      R24 R8       ; R24 := R8
198 [-]: GETUPVAL  R25 U4       ; R25 := U4
199 [-]: LEN       R25 R25      ; R25 := # R25
200 [-]: LOADK     R26 K25      ; R26 := 1
201 [-]: FORPREP   R24 204      ; R24 -= R26; PC := 204
202 [-]: GETTABLE  R28 R0 K39   ; R28 := R0["mAlphabetIndex"]
203 [-]: SETTABLE  R28 R27 R23  ; R28[R27] := R23
204 [-]: FORLOOP   R24 202      ; R24 += R26; if R24 <= R25 then begin PC := 202; R27 := R24 end
205 [-]: GETTABLE  R28 R0 K6    ; R28 := R0["mParent"]
206 [-]: GETTABLE  R28 R28 K3   ; R28 := R28["mUserPanel"]
207 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["mListControl"]
208 [-]: SELF      R28 R28 K49  ; R29 := R28; R28 := R28["0x6470BAF4"]
209 [-]: LOADNIL   R30 R30      ; R30 := nil
210 [-]: MOVE      R31 R1       ; R31 := R1
211 [-]: MOVE      R32 R1       ; R32 := R1
212 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
213 [-]: GETUPVAL  R28 U0       ; R28 := U0
214 [-]: GETTABLE  R28 R28 K3   ; R28 := R28["mUserPanel"]
215 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["mListControl"]
216 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28["0xC51A5C9D"]
217 [-]: CALL      R28 2 2      ; R28 := R28(R29)
218 [-]: GETGLOBAL R29 K8       ; R29 := Engine
219 [-]: GETTABLE  R29 R29 K50  ; R29 := R29["0x9490FE70"]
220 [-]: CALL      R29 1 2      ; R29 := R29()
221 [-]: TEST      R29 0        ; if not R29 then PC := 244
222 [-]: JMP       244          ; PC := 244
223 [-]: GETGLOBAL R29 K32      ; R29 := 0x400E7765
224 [-]: GETTABLE  R30 R0 K2    ; R30 := R0["mStoredFocusIndex"]
225 [-]: CALL      R29 2 2      ; R29 := R29(R30)
226 [-]: TEST      R29 1        ; if R29 then PC := 244
227 [-]: JMP       244          ; PC := 244
228 [-]: LT        0 K35 R28    ; if 0 >= R28 then PC := 244
229 [-]: JMP       244          ; PC := 244
230 [-]: GETTABLE  R29 R0 K2    ; R29 := R0["mStoredFocusIndex"]
231 [-]: LT        0 R28 R29    ; if R28 >= R29 then PC := 239
232 [-]: JMP       239          ; PC := 239
233 [-]: GETUPVAL  R29 U0       ; R29 := U0
234 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["mUserPanel"]
235 [-]: SELF      R29 R29 K51  ; R30 := R29; R29 := R29["0x5B1DCC65"]
236 [-]: MOVE      R31 R28      ; R31 := R28
237 [-]: CALL      R29 3 1      ; R29(R30,R31)
238 [-]: JMP       244          ; PC := 244
239 [-]: GETUPVAL  R29 U0       ; R29 := U0
240 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["mUserPanel"]
241 [-]: SELF      R29 R29 K51  ; R30 := R29; R29 := R29["0x5B1DCC65"]
242 [-]: GETTABLE  R31 R0 K2    ; R31 := R0["mStoredFocusIndex"]
243 [-]: CALL      R29 3 1      ; R29(R30,R31)
244 [-]: RETURN    R0 1         ; return 


; Function #97.10:
;
; Name:            
; Defined at line: 4465
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mChannelName"]
  2 [-]: EQ        1 R5 R2      ; if R5 == R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInitialPopulationDone"]
  6 [-]: TEST      R5 1         ; if R5 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0["0x81219848"]
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: CALL      R5 3 1       ; R5(R6,R7)
 11 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInitialPopulationDone"]
 12 [-]: TEST      R5 0         ; if not R5 then PC := 42
 13 [-]: JMP       42           ; PC := 42
 14 [-]: SELF      R5 R0 K3     ; R6 := R0; R5 := R0["0xB5648885"]
 15 [-]: MOVE      R7 R1        ; R7 := R1
 16 [-]: MOVE      R8 R2        ; R8 := R2
 17 [-]: MOVE      R9 R4        ; R9 := R4
 18 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 19 [-]: TEST      R5 0         ; if not R5 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mWelcome"]
 22 [-]: EQ        0 R5 K5      ; if R5 ~= nil then PC := 42
 23 [-]: JMP       42           ; PC := 42
 24 [-]: GETGLOBAL R5 K6        ; R5 := _G
 25 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["StalkerMode"]
 26 [-]: TEST      R5 1         ; if R5 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0x4313BA6"]
 29 [-]: GETGLOBAL R7 K9        ; R7 := mMovie
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 31 [-]: LOADK     R9 K11       ; R9 := "/Lotus/Language/Menu/Chat_HelpPrompt"
 32 [-]: MOVE      R10 R0       ; R10 := R0
 33 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 34 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["MESSAGE_TYPE_SYSTEM"]
 35 [-]: LOADK     R9 K13       ; R9 := ""
 36 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 37 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 38 [-]: SETTABLE  R0 K14 R5    ; R0["mCachedLines"] := R5
 39 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 40 [-]: SETTABLE  R5 K15 K16   ; R5["done"] := 1
 41 [-]: SETTABLE  R0 K4 R5     ; R0["mWelcome"] := R5
 42 [-]: RETURN    R0 1         ; return 


; Function #97.11:
;
; Name:            
; Defined at line: 4493
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mChannelName"]
  2 [-]: EQ        0 R4 R2      ; if R4 ~= R2 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mChannelType"]
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["CHANNEL_PRIVATE_CHAT"]
  7 [-]: LE        0 R5 R4      ; if R5 > R4 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mUserList"]
 11 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0["0xC97B3222"]
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: MOVE      R8 R0        ; R8 := R0
 14 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 15 [-]: SETTABLE  R4 R1 R5     ; R4[R1] := R5
 16 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mIsActive"]
 17 [-]: TEST      R4 0         ; if not R4 then PC := 146
 18 [-]: JMP       146          ; PC := 146
 19 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mParent"]
 20 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mUserPanel"]
 21 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mListControl"]
 22 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0xC51A5C9D"]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: LOADNIL   R5 R5        ; R5 := nil
 25 [-]: LOADK     R6 K10       ; R6 := 1
 26 [-]: MOVE      R7 R4        ; R7 := R4
 27 [-]: LT        0 R6 R7      ; if R6 >= R7 then PC := 66
 28 [-]: JMP       66           ; PC := 66
 29 [-]: GETGLOBAL R8 K11       ; R8 := 0x1BF588C6
 30 [-]: LOADK     R9 K12       ; R9 := 0
 31 [-]: CALL      R8 2 1       ; R8(R9)
 32 [-]: GETGLOBAL R8 K13       ; R8 := math
 33 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xF7005A7B"]
 34 [-]: ADD       R9 R6 R7     ; R9 := R6 + R7
 35 [-]: DIV       R9 R9 K15    ; R9 := R9 / 2
 36 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 37 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mParent"]
 38 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["mUserPanel"]
 39 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mListControl"]
 40 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["mElements"]
 41 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 42 [-]: GETGLOBAL R10 K17      ; R10 := 0x400E7765
 43 [-]: MOVE      R11 R9       ; R11 := R9
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: TEST      R10 1        ; if R10 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETTABLE  R10 R9 K18   ; R10 := R9["User"]
 48 [-]: EQ        0 R10 R1     ; if R10 ~= R1 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: MOVE      R5 R8        ; R5 := R8
 51 [-]: JMP       66           ; PC := 66
 52 [-]: JMP       27           ; PC := 27
 53 [-]: GETTABLE  R10 R9 K19   ; R10 := R9["UserLower"]
 54 [-]: GETGLOBAL R11 K20      ; R11 := string
 55 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xBDD0D625"]
 56 [-]: MOVE      R12 R1       ; R12 := R1
 57 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 58 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: MOVE      R7 R8        ; R7 := R8
 61 [-]: MOVE      R5 R7        ; R5 := R7
 62 [-]: JMP       27           ; PC := 27
 63 [-]: ADD       R6 R8 K10    ; R6 := R8 + 1
 64 [-]: MOVE      R5 R6        ; R5 := R6
 65 [-]: JMP       27           ; PC := 27
 66 [-]: EQ        1 R5 K22     ; if R5 == nil then PC := 146
 67 [-]: JMP       146          ; PC := 146
 68 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mParent"]
 69 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["mUserPanel"]
 70 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mListControl"]
 71 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["mElements"]
 72 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 73 [-]: GETGLOBAL R11 K17      ; R11 := 0x400E7765
 74 [-]: MOVE      R12 R10      ; R12 := R10
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: TEST      R11 1        ; if R11 then PC := 146
 77 [-]: JMP       146          ; PC := 146
 78 [-]: GETTABLE  R11 R10 K18  ; R11 := R10["User"]
 79 [-]: EQ        0 R11 R1     ; if R11 ~= R1 then PC := 146
 80 [-]: JMP       146          ; PC := 146
 81 [-]: LOADK     R11 K10      ; R11 := 1
 82 [-]: GETTABLE  R12 R0 K23   ; R12 := R0["mAlphabetIndex"]
 83 [-]: LEN       R12 R12      ; R12 := # R12
 84 [-]: LOADK     R13 K10      ; R13 := 1
 85 [-]: FORPREP   R11 101      ; R11 -= R13; PC := 101
 86 [-]: GETTABLE  R15 R0 K23   ; R15 := R0["mAlphabetIndex"]
 87 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
 88 [-]: LT        1 R5 R15     ; if R5 < R15 then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETTABLE  R15 R0 K23   ; R15 := R0["mAlphabetIndex"]
 91 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
 92 [-]: EQ        0 R5 R15     ; if R5 ~= R15 then PC := 101
 93 [-]: JMP       101          ; PC := 101
 94 [-]: EQ        0 R5 R4      ; if R5 ~= R4 then PC := 101
 95 [-]: JMP       101          ; PC := 101
 96 [-]: GETTABLE  R15 R0 K23   ; R15 := R0["mAlphabetIndex"]
 97 [-]: GETTABLE  R16 R0 K23   ; R16 := R0["mAlphabetIndex"]
 98 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
 99 [-]: SUB       R16 R16 K10  ; R16 := R16 - 1
100 [-]: SETTABLE  R15 R14 R16  ; R15[R14] := R16
101 [-]: FORLOOP   R11 86       ; R11 += R13; if R11 <= R12 then begin PC := 86; R14 := R11 end
102 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mParent"]
103 [-]: GETTABLE  R15 R15 K7   ; R15 := R15["mUserPanel"]
104 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["mListControl"]
105 [-]: SELF      R15 R15 K24  ; R16 := R15; R15 := R15["0x96ABF26F"]
106 [-]: MOVE      R17 R5       ; R17 := R5
107 [-]: MOVE      R18 R1       ; R18 := R1
108 [-]: MOVE      R19 R1       ; R19 := R1
109 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
110 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mParent"]
111 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["mVisualMode"]
112 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["mParent"]
113 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["VISUAL_MODE_MENU_SIMPLE"]
114 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 146
115 [-]: JMP       146          ; PC := 146
116 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mParent"]
117 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["mVisualMode"]
118 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["mParent"]
119 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["VISUAL_MODE_GAMEPLAY_SIMPLE"]
120 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 146
121 [-]: JMP       146          ; PC := 146
122 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mParent"]
123 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15["0x5528ED75"]
124 [-]: GETTABLE  R17 R0 K6    ; R17 := R0["mParent"]
125 [-]: GETTABLE  R17 R17 K7   ; R17 := R17["mUserPanel"]
126 [-]: GETTABLE  R17 R17 K29  ; R17 := R17["mWindow"]
127 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
128 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["mParent"]
129 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["mUserPanel"]
130 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16["0xC86D89A5"]
131 [-]: GETTABLE  R18 R15 K31  ; R18 := R15["height"]
132 [-]: CALL      R16 3 1      ; R16(R17,R18)
133 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["mParent"]
134 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["mUserPanel"]
135 [-]: SELF      R16 R16 K32  ; R17 := R16; R16 := R16["0xD51B4477"]
136 [-]: MOVE      R18 R5       ; R18 := R5
137 [-]: CALL      R16 3 1      ; R16(R17,R18)
138 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["mParent"]
139 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["mUserPanel"]
140 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["mListControl"]
141 [-]: SELF      R16 R16 K33  ; R17 := R16; R16 := R16["0x6470BAF4"]
142 [-]: LOADNIL   R18 R18      ; R18 := nil
143 [-]: MOVE      R19 R0       ; R19 := R0
144 [-]: MOVE      R20 R1       ; R20 := R1
145 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
146 [-]: TEST      R3 0         ; if not R3 then PC := 151
147 [-]: JMP       151          ; PC := 151
148 [-]: SELF      R16 R0 K34   ; R17 := R0; R16 := R0["0x3EFDAD47"]
149 [-]: MOVE      R18 R1       ; R18 := R1
150 [-]: CALL      R16 3 1      ; R16(R17,R18)
151 [-]: RETURN    R0 1         ; return 


; Function #97.12:
;
; Name:            
; Defined at line: 4554
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R4 R1        ; R4 := R1
  2 [-]: LOADNIL   R5 R5        ; R5 := nil
  3 [-]: GETUPVAL  R6 U0        ; R6 := U0
  4 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Teal"]
  5 [-]: GETGLOBAL R7 K1        ; R7 := _G
  6 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["UIColor_White"]
  7 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["MESSAGE_TYPE_SYSTEM"]
  8 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETGLOBAL R8 K1        ; R8 := _G
 11 [-]: GETTABLE  R6 R8 K2     ; R6 := R8["UIColor_White"]
 12 [-]: JMP       128          ; PC := 128
 13 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["MESSAGE_TYPE_BROADCAST"]
 14 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R6 R8 K5     ; R6 := R8["Red"]
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R7 R8 K5     ; R7 := R8["Red"]
 20 [-]: JMP       128          ; PC := 128
 21 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["MESSAGE_TYPE_NOTIFICATION"]
 22 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 42
 23 [-]: JMP       42           ; PC := 42
 24 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["mChannelType"]
 25 [-]: GETUPVAL  R9 U1        ; R9 := U1
 26 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["CHANNEL_HUB"]
 27 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R8 K9        ; R8 := gMatchingService
 30 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8["0xA99F3BEF"]
 31 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 32 [-]: TEST      R8 0         ; if not R8 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R8 K1        ; R8 := _G
 35 [-]: GETTABLE  R6 R8 K11    ; R6 := R8["UIColor_Gold"]
 36 [-]: GETGLOBAL R8 K1        ; R8 := _G
 37 [-]: GETTABLE  R7 R8 K11    ; R7 := R8["UIColor_Gold"]
 38 [-]: JMP       128          ; PC := 128
 39 [-]: GETGLOBAL R8 K1        ; R8 := _G
 40 [-]: GETTABLE  R6 R8 K2     ; R6 := R8["UIColor_White"]
 41 [-]: JMP       128          ; PC := 128
 42 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["MESSAGE_TYPE_CLAN"]
 43 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["MESSAGE_TYPE_ALLIANCE"]
 46 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETUPVAL  R8 U0        ; R8 := U0
 49 [-]: GETTABLE  R6 R8 K14    ; R6 := R8["Green"]
 50 [-]: JMP       83           ; PC := 83
 51 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["MESSAGE_TYPE_SQUAD"]
 52 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETUPVAL  R8 U0        ; R8 := U0
 55 [-]: GETTABLE  R6 R8 K16    ; R6 := R8["Blue"]
 56 [-]: JMP       83           ; PC := 83
 57 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["MESSAGE_TYPE_COUNCIL"]
 58 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: GETTABLE  R6 R8 K18    ; R6 := R8["Orange"]
 62 [-]: JMP       83           ; PC := 83
 63 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["MESSAGE_TYPE_FRIEND"]
 64 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["MESSAGE_TYPE_INGAME_WHISPER"]
 67 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 72
 68 [-]: JMP       72           ; PC := 72
 69 [-]: GETUPVAL  R8 U0        ; R8 := U0
 70 [-]: GETTABLE  R6 R8 K21    ; R6 := R8["Pink"]
 71 [-]: JMP       83           ; PC := 83
 72 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["MESSAGE_TYPE_STAFF"]
 73 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: GETTABLE  R8 R0 K23    ; R8 := R0["MESSAGE_TYPE_CY_MOD"]
 76 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: GETUPVAL  R8 U0        ; R8 := U0
 79 [-]: GETTABLE  R6 R8 K24    ; R6 := R8["Purple"]
 80 [-]: GETUPVAL  R8 U0        ; R8 := U0
 81 [-]: GETTABLE  R7 R8 K24    ; R7 := R8["Purple"]
 82 [-]: JMP       83           ; PC := 83
 83 [-]: TEST      R2 0         ; if not R2 then PC := 127
 84 [-]: JMP       127          ; PC := 127
 85 [-]: GETGLOBAL R8 K25       ; R8 := string
 86 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["0xDE44F664"]
 87 [-]: MOVE      R9 R1        ; R9 := R1
 88 [-]: LOADK     R10 K27      ; R10 := ":"
 89 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 90 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["mParent"]
 91 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["mShowTimeStamps"]
 92 [-]: EQ        1 R9 K30     ; if R9 == nil then PC := 105
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["mParent"]
 95 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["mShowTimeStamps"]
 96 [-]: TEST      R9 0         ; if not R9 then PC := 105
 97 [-]: JMP       105          ; PC := 105
 98 [-]: GETGLOBAL R9 K25       ; R9 := string
 99 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["0xDE44F664"]
100 [-]: MOVE      R10 R1       ; R10 := R1
101 [-]: LOADK     R11 K27      ; R11 := ":"
102 [-]: LOADK     R12 K31      ; R12 := 8
103 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
104 [-]: MOVE      R8 R9        ; R8 := R9
105 [-]: EQ        0 R8 K30     ; if R8 ~= nil then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: LOADK     R8 K32       ; R8 := 1
108 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["MESSAGE_TYPE_CLAN"]
109 [-]: EQ        0 R3 R9      ; if R3 ~= R9 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: GETUPVAL  R9 U0        ; R9 := U0
112 [-]: GETTABLE  R7 R9 K14    ; R7 := R9["Green"]
113 [-]: GETGLOBAL R9 K25       ; R9 := string
114 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["0x7B782033"]
115 [-]: MOVE      R10 R1       ; R10 := R1
116 [-]: LOADK     R11 K34      ; R11 := 0
117 [-]: SUB       R12 R8 K32   ; R12 := R8 - 1
118 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
119 [-]: MOVE      R4 R9        ; R4 := R9
120 [-]: GETGLOBAL R9 K25       ; R9 := string
121 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["0x7B782033"]
122 [-]: MOVE      R10 R1       ; R10 := R1
123 [-]: MOVE      R11 R8       ; R11 := R8
124 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
125 [-]: MOVE      R5 R9        ; R5 := R9
126 [-]: JMP       128          ; PC := 128
127 [-]: MOVE      R6 R7        ; R6 := R7
128 [-]: MOVE      R9 R4        ; R9 := R4
129 [-]: MOVE      R10 R5       ; R10 := R5
130 [-]: MOVE      R11 R6       ; R11 := R6
131 [-]: MOVE      R12 R7       ; R12 := R7
132 [-]: RETURN    R9 5         ; return R9,R10,R11,R12
133 [-]: RETURN    R0 1         ; return 


; Function #97.13:
;
; Name:            
; Defined at line: 4608
; #Upvalues:       7
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  93

  1 [-]: GETGLOBAL R4 K0        ; R4 := string
  2 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0x633C4246"]
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: LOADK     R6 K2        ; R6 := "<"
  5 [-]: LOADK     R7 K3        ; R7 := "&lt;"
  6 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  7 [-]: MOVE      R1 R4        ; R1 := R4
  8 [-]: GETGLOBAL R4 K0        ; R4 := string
  9 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0x633C4246"]
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: LOADK     R6 K4        ; R6 := ">"
 12 [-]: LOADK     R7 K5        ; R7 := "&gt;"
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R1 R4        ; R1 := R4
 15 [-]: GETGLOBAL R4 K0        ; R4 := string
 16 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0x633C4246"]
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: LOADK     R6 K6        ; R6 := "\r([^\n])"
 19 [-]: LOADK     R7 K7        ; R7 := "\r\n%1"
 20 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 21 [-]: MOVE      R1 R4        ; R1 := R4
 22 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 23 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 24 [-]: SETTABLE  R4 K8 R5     ; R4["Item"] := R5
 25 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 26 [-]: SETTABLE  R4 K9 R5     ; R4["Guild"] := R5
 27 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 28 [-]: SETTABLE  R5 K8 K10    ; R5["Item"] := 1
 29 [-]: SETTABLE  R5 K9 K10    ; R5["Guild"] := 1
 30 [-]: LOADNIL   R6 R6        ; R6 := nil
 31 [-]: GETGLOBAL R7 K0        ; R7 := string
 32 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 33 [-]: MOVE      R8 R1        ; R8 := R1
 34 [-]: LOADK     R9 K12       ; R9 := "%[OMG%-.*%]"
 35 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 36 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 37 [-]: JMP       109          ; PC := 109
 38 [-]: GETGLOBAL R7 K0        ; R7 := string
 39 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 40 [-]: MOVE      R8 R1        ; R8 := R1
 41 [-]: LOADK     R9 K14       ; R9 := "%[SONG%-.*%]"
 42 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 43 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 44 [-]: JMP       109          ; PC := 109
 45 [-]: GETGLOBAL R7 K0        ; R7 := string
 46 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: LOADK     R9 K15       ; R9 := "%[ZAW%-.*%]"
 49 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 50 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 51 [-]: JMP       109          ; PC := 109
 52 [-]: GETGLOBAL R7 K0        ; R7 := string
 53 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 54 [-]: MOVE      R8 R1        ; R8 := R1
 55 [-]: LOADK     R9 K16       ; R9 := "%[AMP%-.*%]"
 56 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 57 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 58 [-]: JMP       109          ; PC := 109
 59 [-]: GETGLOBAL R7 K0        ; R7 := string
 60 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 61 [-]: MOVE      R8 R1        ; R8 := R1
 62 [-]: LOADK     R9 K17       ; R9 := "%[MOA%-.*%]"
 63 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 64 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 65 [-]: JMP       109          ; PC := 109
 66 [-]: GETGLOBAL R7 K0        ; R7 := string
 67 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 68 [-]: MOVE      R8 R1        ; R8 := R1
 69 [-]: LOADK     R9 K18       ; R9 := "%[KDR%-.*%]"
 70 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 71 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 72 [-]: JMP       109          ; PC := 109
 73 [-]: GETGLOBAL R7 K0        ; R7 := string
 74 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 75 [-]: MOVE      R8 R1        ; R8 := R1
 76 [-]: LOADK     R9 K19       ; R9 := "%[KIT%-.*%]"
 77 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 78 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 79 [-]: JMP       109          ; PC := 109
 80 [-]: GETGLOBAL R7 K0        ; R7 := string
 81 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 82 [-]: MOVE      R8 R1        ; R8 := R1
 83 [-]: LOADK     R9 K20       ; R9 := "%[FF%-.*%]"
 84 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 85 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 86 [-]: JMP       109          ; PC := 109
 87 [-]: GETGLOBAL R7 K0        ; R7 := string
 88 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 89 [-]: MOVE      R8 R1        ; R8 := R1
 90 [-]: LOADK     R9 K21       ; R9 := "%[MOD%-.*%]"
 91 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 92 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
 93 [-]: JMP       109          ; PC := 109
 94 [-]: GETGLOBAL R7 K0        ; R7 := string
 95 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
 96 [-]: MOVE      R8 R1        ; R8 := R1
 97 [-]: LOADK     R9 K22       ; R9 := "%[SHZN%-.*%]"
 98 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 99 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
100 [-]: JMP       109          ; PC := 109
101 [-]: GETGLOBAL R7 K0        ; R7 := string
102 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
103 [-]: MOVE      R8 R1        ; R8 := R1
104 [-]: LOADK     R9 K23       ; R9 := "{GUILD=.*}"
105 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
106 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: MOVE      R7 R0        ; R7 := R0
109 [-]: MOVE      R7 R1        ; R7 := R1
110 [-]: TEST      R7 0         ; if not R7 then PC := 669
111 [-]: JMP       669          ; PC := 669
112 [-]: LOADNIL   R8 R8        ; R8 := nil
113 [-]: LOADK     R9 K24       ; R9 := ""
114 [-]: LOADK     R10 K25      ; R10 := 0
115 [-]: LEN       R11 R1       ; R11 := # R1
116 [-]: LE        0 R10 R11    ; if R10 > R11 then PC := 669
117 [-]: JMP       669          ; PC := 669
118 [-]: GETGLOBAL R11 K0       ; R11 := string
119 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["0xDE44F664"]
120 [-]: MOVE      R12 R1       ; R12 := R1
121 [-]: LOADK     R13 K26      ; R13 := "[%[{%]}]"
122 [-]: ADD       R14 R10 K10  ; R14 := R10 + 1
123 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
124 [-]: MOVE      R10 R11      ; R10 := R11
125 [-]: GETGLOBAL R11 K27      ; R11 := 0x400E7765
126 [-]: MOVE      R12 R10      ; R12 := R10
127 [-]: CALL      R11 2 2      ; R11 := R11(R12)
128 [-]: TEST      R11 0        ; if not R11 then PC := 131
129 [-]: JMP       131          ; PC := 131
130 [-]: JMP       669          ; PC := 669
131 [-]: GETGLOBAL R11 K0       ; R11 := string
132 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0x7B782033"]
133 [-]: MOVE      R12 R1       ; R12 := R1
134 [-]: MOVE      R13 R10      ; R13 := R10
135 [-]: MOVE      R14 R10      ; R14 := R10
136 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
137 [-]: EQ        0 R11 K29    ; if R11 ~= "[" then PC := 142
138 [-]: JMP       142          ; PC := 142
139 [-]: MOVE      R8 R10       ; R8 := R10
140 [-]: LOADK     R9 K30       ; R9 := "item"
141 [-]: JMP       115          ; PC := 115
142 [-]: EQ        0 R11 K31    ; if R11 ~= "{" then PC := 147
143 [-]: JMP       147          ; PC := 147
144 [-]: MOVE      R8 R10       ; R8 := R10
145 [-]: LOADK     R9 K32       ; R9 := "clan"
146 [-]: JMP       115          ; PC := 115
147 [-]: GETGLOBAL R12 K27      ; R12 := 0x400E7765
148 [-]: MOVE      R13 R8       ; R13 := R8
149 [-]: CALL      R12 2 2      ; R12 := R12(R13)
150 [-]: TEST      R12 1        ; if R12 then PC := 156
151 [-]: JMP       156          ; PC := 156
152 [-]: EQ        0 R9 K30     ; if R9 ~= "item" then PC := 156
153 [-]: JMP       156          ; PC := 156
154 [-]: EQ        1 R11 K33    ; if R11 == "]" then PC := 160
155 [-]: JMP       160          ; PC := 160
156 [-]: EQ        0 R9 K32     ; if R9 ~= "clan" then PC := 115
157 [-]: JMP       115          ; PC := 115
158 [-]: EQ        0 R11 K34    ; if R11 ~= "}" then PC := 115
159 [-]: JMP       115          ; PC := 115
160 [-]: GETGLOBAL R12 K0       ; R12 := string
161 [-]: GETTABLE  R12 R12 K28  ; R12 := R12["0x7B782033"]
162 [-]: MOVE      R13 R1       ; R13 := R1
163 [-]: ADD       R14 R8 K10   ; R14 := R8 + 1
164 [-]: SUB       R15 R10 K10  ; R15 := R10 - 1
165 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
166 [-]: MOVE      R6 R12       ; R6 := R12
167 [-]: EQ        0 R9 K30     ; if R9 ~= "item" then PC := 612
168 [-]: JMP       612          ; PC := 612
169 [-]: GETGLOBAL R12 K0       ; R12 := string
170 [-]: GETTABLE  R12 R12 K35  ; R12 := R12["0xBDD0D625"]
171 [-]: MOVE      R13 R6       ; R13 := R6
172 [-]: CALL      R12 2 2      ; R12 := R12(R13)
173 [-]: GETGLOBAL R13 K0       ; R13 := string
174 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["0x7B782033"]
175 [-]: MOVE      R14 R12      ; R14 := R12
176 [-]: LOADK     R15 K10      ; R15 := 1
177 [-]: LOADK     R16 K36      ; R16 := 4
178 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
179 [-]: EQ        0 R13 K37    ; if R13 ~= "omg-" then PC := 242
180 [-]: JMP       242          ; PC := 242
181 [-]: GETGLOBAL R13 K0       ; R13 := string
182 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0xDE44F664"]
183 [-]: MOVE      R14 R6       ; R14 := R6
184 [-]: LOADK     R15 K38      ; R15 := ":"
185 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
186 [-]: GETGLOBAL R14 K39      ; R14 := 0x7C282057
187 [-]: GETUPVAL  R15 U0       ; R15 := U0
188 [-]: GETTABLE  R15 R15 K40  ; R15 := R15["OMEGA_TYPE_PREFIX"]
189 [-]: GETGLOBAL R16 K0       ; R16 := string
190 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["0x7B782033"]
191 [-]: MOVE      R17 R6       ; R17 := R6
192 [-]: LOADK     R18 K41      ; R18 := 5
193 [-]: SUB       R19 R13 K10  ; R19 := R13 - 1
194 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
195 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
196 [-]: CALL      R14 2 2      ; R14 := R14(R15)
197 [-]: GETGLOBAL R15 K27      ; R15 := 0x400E7765
198 [-]: MOVE      R16 R14      ; R16 := R14
199 [-]: CALL      R15 2 2      ; R15 := R15(R16)
200 [-]: TEST      R15 1        ; if R15 then PC := 666
201 [-]: JMP       666          ; PC := 666
202 [-]: SELF      R15 R14 K42  ; R16 := R14; R15 := R14["0x66D820BD"]
203 [-]: GETGLOBAL R17 K0       ; R17 := string
204 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["0x7B782033"]
205 [-]: MOVE      R18 R6       ; R18 := R6
206 [-]: ADD       R19 R13 K10  ; R19 := R13 + 1
207 [-]: CALL      R17 3 0      ; R17,... := R17(R18,R19)
208 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
209 [-]: SELF      R16 R14 K43  ; R17 := R14; R16 := R14["0x9631703E"]
210 [-]: MOVE      R18 R15      ; R18 := R15
211 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
212 [-]: LOADK     R17 K44      ; R17 := "<a color=\"#33ccff\" hovercolor=\""
213 [-]: GETUPVAL  R18 U1       ; R18 := U1
214 [-]: LOADK     R19 K45      ; R19 := "\" href=\"#onHyperlinkPressed:"
215 [-]: MOVE      R20 R6       ; R20 := R6
216 [-]: LOADK     R21 K46      ; R21 := "\">"
217 [-]: CONCAT    R17 R17 R21  ; R17 := R17 .. R18 .. R19 .. R20 .. R21
218 [-]: GETGLOBAL R18 K47      ; R18 := table
219 [-]: GETTABLE  R18 R18 K48  ; R18 := R18["0xE6450C9D"]
220 [-]: GETTABLE  R19 R4 K8    ; R19 := R4["Item"]
221 [-]: NEWTABLE  R20 0 3      ; R20 := {}
222 [-]: SETTABLE  R20 K49 R16  ; R20["Name"] := R16
223 [-]: SETTABLE  R20 K50 R17  ; R20["LinkStart"] := R17
224 [-]: SETTABLE  R20 K51 R6   ; R20["LinkString"] := R6
225 [-]: CALL      R18 3 1      ; R18(R19,R20)
226 [-]: GETGLOBAL R18 K0       ; R18 := string
227 [-]: GETTABLE  R18 R18 K1   ; R18 := R18["0x633C4246"]
228 [-]: MOVE      R19 R1       ; R19 := R1
229 [-]: LOADK     R20 K52      ; R20 := "%[OMG-[^%]]+%]"
230 [-]: LOADK     R21 K29      ; R21 := "["
231 [-]: MOVE      R22 R16      ; R22 := R16
232 [-]: LOADK     R23 K33      ; R23 := "]"
233 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
234 [-]: LOADK     R22 K10      ; R22 := 1
235 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
236 [-]: LEN       R19 R18      ; R19 := # R18
237 [-]: ADD       R19 R10 R19  ; R19 := R10 + R19
238 [-]: LEN       R20 R1       ; R20 := # R1
239 [-]: SUB       R10 R19 R20  ; R10 := R19 - R20
240 [-]: MOVE      R1 R18       ; R1 := R18
241 [-]: JMP       666          ; PC := 666
242 [-]: GETGLOBAL R19 K0       ; R19 := string
243 [-]: GETTABLE  R19 R19 K28  ; R19 := R19["0x7B782033"]
244 [-]: MOVE      R20 R12      ; R20 := R12
245 [-]: LOADK     R21 K10      ; R21 := 1
246 [-]: LOADK     R22 K41      ; R22 := 5
247 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
248 [-]: EQ        0 R19 K53    ; if R19 ~= "song-" then PC := 294
249 [-]: JMP       294          ; PC := 294
250 [-]: LOADK     R19 K44      ; R19 := "<a color=\"#33ccff\" hovercolor=\""
251 [-]: GETUPVAL  R20 U1       ; R20 := U1
252 [-]: LOADK     R21 K45      ; R21 := "\" href=\"#onHyperlinkPressed:"
253 [-]: MOVE      R22 R6       ; R22 := R6
254 [-]: LOADK     R23 K46      ; R23 := "\">"
255 [-]: CONCAT    R19 R19 R23  ; R19 := R19 .. R20 .. R21 .. R22 .. R23
256 [-]: GETUPVAL  R20 U0       ; R20 := U0
257 [-]: GETTABLE  R20 R20 K54  ; R20 := R20["StepSequencerPrefixString"]
258 [-]: GETGLOBAL R21 K0       ; R21 := string
259 [-]: GETTABLE  R21 R21 K28  ; R21 := R21["0x7B782033"]
260 [-]: MOVE      R22 R6       ; R22 := R6
261 [-]: LOADK     R23 K55      ; R23 := 6
262 [-]: GETGLOBAL R24 K0       ; R24 := string
263 [-]: GETTABLE  R24 R24 K11  ; R24 := R24["0xDE44F664"]
264 [-]: MOVE      R25 R6       ; R25 := R6
265 [-]: LOADK     R26 K38      ; R26 := ":"
266 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
267 [-]: SUB       R24 R24 K10  ; R24 := R24 - 1
268 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
269 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
270 [-]: GETGLOBAL R21 K47      ; R21 := table
271 [-]: GETTABLE  R21 R21 K48  ; R21 := R21["0xE6450C9D"]
272 [-]: GETTABLE  R22 R4 K8    ; R22 := R4["Item"]
273 [-]: NEWTABLE  R23 0 3      ; R23 := {}
274 [-]: SETTABLE  R23 K49 R20  ; R23["Name"] := R20
275 [-]: SETTABLE  R23 K50 R19  ; R23["LinkStart"] := R19
276 [-]: SETTABLE  R23 K51 R6   ; R23["LinkString"] := R6
277 [-]: CALL      R21 3 1      ; R21(R22,R23)
278 [-]: GETGLOBAL R21 K0       ; R21 := string
279 [-]: GETTABLE  R21 R21 K1   ; R21 := R21["0x633C4246"]
280 [-]: MOVE      R22 R1       ; R22 := R1
281 [-]: LOADK     R23 K56      ; R23 := "%[SONG-[^%]]+%]"
282 [-]: LOADK     R24 K29      ; R24 := "["
283 [-]: MOVE      R25 R20      ; R25 := R20
284 [-]: LOADK     R26 K33      ; R26 := "]"
285 [-]: CONCAT    R24 R24 R26  ; R24 := R24 .. R25 .. R26
286 [-]: LOADK     R25 K10      ; R25 := 1
287 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
288 [-]: LEN       R22 R21      ; R22 := # R21
289 [-]: ADD       R22 R10 R22  ; R22 := R10 + R22
290 [-]: LEN       R23 R1       ; R23 := # R1
291 [-]: SUB       R10 R22 R23  ; R10 := R22 - R23
292 [-]: MOVE      R1 R21       ; R1 := R21
293 [-]: JMP       666          ; PC := 666
294 [-]: GETGLOBAL R22 K0       ; R22 := string
295 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["0x7B782033"]
296 [-]: MOVE      R23 R12      ; R23 := R12
297 [-]: LOADK     R24 K10      ; R24 := 1
298 [-]: LOADK     R25 K36      ; R25 := 4
299 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
300 [-]: EQ        1 R22 K57    ; if R22 == "zaw-" then PC := 334
301 [-]: JMP       334          ; PC := 334
302 [-]: GETGLOBAL R22 K0       ; R22 := string
303 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["0x7B782033"]
304 [-]: MOVE      R23 R12      ; R23 := R12
305 [-]: LOADK     R24 K10      ; R24 := 1
306 [-]: LOADK     R25 K36      ; R25 := 4
307 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
308 [-]: EQ        1 R22 K58    ; if R22 == "amp-" then PC := 334
309 [-]: JMP       334          ; PC := 334
310 [-]: GETGLOBAL R22 K0       ; R22 := string
311 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["0x7B782033"]
312 [-]: MOVE      R23 R12      ; R23 := R12
313 [-]: LOADK     R24 K10      ; R24 := 1
314 [-]: LOADK     R25 K36      ; R25 := 4
315 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
316 [-]: EQ        1 R22 K59    ; if R22 == "moa-" then PC := 334
317 [-]: JMP       334          ; PC := 334
318 [-]: GETGLOBAL R22 K0       ; R22 := string
319 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["0x7B782033"]
320 [-]: MOVE      R23 R12      ; R23 := R12
321 [-]: LOADK     R24 K10      ; R24 := 1
322 [-]: LOADK     R25 K36      ; R25 := 4
323 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
324 [-]: EQ        1 R22 K60    ; if R22 == "kdr-" then PC := 334
325 [-]: JMP       334          ; PC := 334
326 [-]: GETGLOBAL R22 K0       ; R22 := string
327 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["0x7B782033"]
328 [-]: MOVE      R23 R12      ; R23 := R12
329 [-]: LOADK     R24 K10      ; R24 := 1
330 [-]: LOADK     R25 K36      ; R25 := 4
331 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
332 [-]: EQ        0 R22 K61    ; if R22 ~= "kit-" then PC := 440
333 [-]: JMP       440          ; PC := 440
334 [-]: GETGLOBAL R22 K62      ; R22 := Lotus_Game
335 [-]: GETTABLE  R22 R22 K63  ; R22 := R22["MWC_MELEE"]
336 [-]: GETUPVAL  R23 U0       ; R23 := U0
337 [-]: GETTABLE  R23 R23 K64  ; R23 := R23["ZawPrefixString"]
338 [-]: LOADK     R24 K65      ; R24 := "ZAW%-"
339 [-]: GETGLOBAL R25 K0       ; R25 := string
340 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["0x7B782033"]
341 [-]: MOVE      R26 R12      ; R26 := R12
342 [-]: LOADK     R27 K10      ; R27 := 1
343 [-]: LOADK     R28 K36      ; R28 := 4
344 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
345 [-]: EQ        0 R25 K58    ; if R25 ~= "amp-" then PC := 353
346 [-]: JMP       353          ; PC := 353
347 [-]: GETGLOBAL R25 K62      ; R25 := Lotus_Game
348 [-]: GETTABLE  R22 R25 K66  ; R22 := R25["MWC_AMP"]
349 [-]: GETUPVAL  R25 U0       ; R25 := U0
350 [-]: GETTABLE  R23 R25 K67  ; R23 := R25["AmpPrefixString"]
351 [-]: LOADK     R24 K68      ; R24 := "AMP%-"
352 [-]: JMP       394          ; PC := 394
353 [-]: GETGLOBAL R25 K0       ; R25 := string
354 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["0x7B782033"]
355 [-]: MOVE      R26 R12      ; R26 := R12
356 [-]: LOADK     R27 K10      ; R27 := 1
357 [-]: LOADK     R28 K36      ; R28 := 4
358 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
359 [-]: EQ        0 R25 K59    ; if R25 ~= "moa-" then PC := 367
360 [-]: JMP       367          ; PC := 367
361 [-]: GETGLOBAL R25 K62      ; R25 := Lotus_Game
362 [-]: GETTABLE  R22 R25 K69  ; R22 := R25["MWC_MOA_PET"]
363 [-]: GETUPVAL  R25 U0       ; R25 := U0
364 [-]: GETTABLE  R23 R25 K70  ; R23 := R25["MoaPetPrefixString"]
365 [-]: LOADK     R24 K71      ; R24 := "MOA%-"
366 [-]: JMP       394          ; PC := 394
367 [-]: GETGLOBAL R25 K0       ; R25 := string
368 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["0x7B782033"]
369 [-]: MOVE      R26 R12      ; R26 := R12
370 [-]: LOADK     R27 K10      ; R27 := 1
371 [-]: LOADK     R28 K36      ; R28 := 4
372 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
373 [-]: EQ        0 R25 K60    ; if R25 ~= "kdr-" then PC := 381
374 [-]: JMP       381          ; PC := 381
375 [-]: GETGLOBAL R25 K62      ; R25 := Lotus_Game
376 [-]: GETTABLE  R22 R25 K72  ; R22 := R25["MWC_HOVERBOARD"]
377 [-]: GETUPVAL  R25 U0       ; R25 := U0
378 [-]: GETTABLE  R23 R25 K73  ; R23 := R25["KDrivePrefixString"]
379 [-]: LOADK     R24 K74      ; R24 := "KDR%-"
380 [-]: JMP       394          ; PC := 394
381 [-]: GETGLOBAL R25 K0       ; R25 := string
382 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["0x7B782033"]
383 [-]: MOVE      R26 R12      ; R26 := R12
384 [-]: LOADK     R27 K10      ; R27 := 1
385 [-]: LOADK     R28 K36      ; R28 := 4
386 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
387 [-]: EQ        0 R25 K61    ; if R25 ~= "kit-" then PC := 394
388 [-]: JMP       394          ; PC := 394
389 [-]: GETGLOBAL R25 K62      ; R25 := Lotus_Game
390 [-]: GETTABLE  R22 R25 K75  ; R22 := R25["MWC_PRIMARY"]
391 [-]: GETUPVAL  R25 U0       ; R25 := U0
392 [-]: GETTABLE  R23 R25 K76  ; R23 := R25["KitgunPrefixString"]
393 [-]: LOADK     R24 K77      ; R24 := "KIT%-"
394 [-]: LOADK     R25 K44      ; R25 := "<a color=\"#33ccff\" hovercolor=\""
395 [-]: GETUPVAL  R26 U1       ; R26 := U1
396 [-]: LOADK     R27 K45      ; R27 := "\" href=\"#onHyperlinkPressed:"
397 [-]: MOVE      R28 R6       ; R28 := R6
398 [-]: LOADK     R29 K46      ; R29 := "\">"
399 [-]: CONCAT    R25 R25 R29  ; R25 := R25 .. R26 .. R27 .. R28 .. R29
400 [-]: GETGLOBAL R26 K0       ; R26 := string
401 [-]: GETTABLE  R26 R26 K11  ; R26 := R26["0xDE44F664"]
402 [-]: MOVE      R27 R6       ; R27 := R6
403 [-]: LOADK     R28 K38      ; R28 := ":"
404 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
405 [-]: MOVE      R27 R23      ; R27 := R23
406 [-]: GETGLOBAL R28 K0       ; R28 := string
407 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["0x7B782033"]
408 [-]: MOVE      R29 R6       ; R29 := R6
409 [-]: LOADK     R30 K41      ; R30 := 5
410 [-]: SUB       R31 R26 K10  ; R31 := R26 - 1
411 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
412 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
413 [-]: GETGLOBAL R28 K47      ; R28 := table
414 [-]: GETTABLE  R28 R28 K48  ; R28 := R28["0xE6450C9D"]
415 [-]: GETTABLE  R29 R4 K8    ; R29 := R4["Item"]
416 [-]: NEWTABLE  R30 0 3      ; R30 := {}
417 [-]: SETTABLE  R30 K49 R27  ; R30["Name"] := R27
418 [-]: SETTABLE  R30 K50 R25  ; R30["LinkStart"] := R25
419 [-]: SETTABLE  R30 K51 R6   ; R30["LinkString"] := R6
420 [-]: CALL      R28 3 1      ; R28(R29,R30)
421 [-]: GETGLOBAL R28 K0       ; R28 := string
422 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["0x633C4246"]
423 [-]: MOVE      R29 R1       ; R29 := R1
424 [-]: LOADK     R30 K78      ; R30 := "%["
425 [-]: MOVE      R31 R24      ; R31 := R24
426 [-]: LOADK     R32 K79      ; R32 := "[^%]]+%]"
427 [-]: CONCAT    R30 R30 R32  ; R30 := R30 .. R31 .. R32
428 [-]: LOADK     R31 K29      ; R31 := "["
429 [-]: MOVE      R32 R27      ; R32 := R27
430 [-]: LOADK     R33 K33      ; R33 := "]"
431 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
432 [-]: LOADK     R32 K10      ; R32 := 1
433 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
434 [-]: LEN       R29 R28      ; R29 := # R28
435 [-]: ADD       R29 R10 R29  ; R29 := R10 + R29
436 [-]: LEN       R30 R1       ; R30 := # R1
437 [-]: SUB       R10 R29 R30  ; R10 := R29 - R30
438 [-]: MOVE      R1 R28       ; R1 := R28
439 [-]: JMP       666          ; PC := 666
440 [-]: GETGLOBAL R29 K0       ; R29 := string
441 [-]: GETTABLE  R29 R29 K28  ; R29 := R29["0x7B782033"]
442 [-]: MOVE      R30 R12      ; R30 := R12
443 [-]: LOADK     R31 K10      ; R31 := 1
444 [-]: LOADK     R32 K80      ; R32 := 3
445 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
446 [-]: EQ        0 R29 K81    ; if R29 ~= "ff-" then PC := 506
447 [-]: JMP       506          ; PC := 506
448 [-]: GETUPVAL  R29 U0       ; R29 := U0
449 [-]: GETTABLE  R29 R29 K82  ; R29 := R29["AppearancePrefixString"]
450 [-]: GETUPVAL  R30 U2       ; R30 := U2
451 [-]: GETTABLE  R30 R30 K83  ; R30 := R30["0x6722708F"]
452 [-]: MOVE      R31 R6       ; R31 := R6
453 [-]: CALL      R30 2 2      ; R30 := R30(R31)
454 [-]: GETGLOBAL R31 K27      ; R31 := 0x400E7765
455 [-]: MOVE      R32 R30      ; R32 := R30
456 [-]: CALL      R31 2 2      ; R31 := R31(R32)
457 [-]: TEST      R31 1        ; if R31 then PC := 470
458 [-]: JMP       470          ; PC := 470
459 [-]: MOVE      R31 R29      ; R31 := R29
460 [-]: LOADK     R32 K84      ; R32 := ": "
461 [-]: GETGLOBAL R33 K85      ; R33 := mMovie
462 [-]: SELF      R33 R33 K86  ; R34 := R33; R33 := R33["0x5DB0BD4"]
463 [-]: SELF      R35 R30 K87  ; R36 := R30; R35 := R30["0x616C74B6"]
464 [-]: CALL      R35 2 2      ; R35 := R35(R36)
465 [-]: SELF      R35 R35 K88  ; R36 := R35; R35 := R35["0x5EC7A3D2"]
466 [-]: CALL      R35 2 2      ; R35 := R35(R36)
467 [-]: MOVE      R36 R0       ; R36 := R0
468 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
469 [-]: CONCAT    R29 R31 R33  ; R29 := R31 .. R32 .. R33
470 [-]: GETUPVAL  R31 U2       ; R31 := U2
471 [-]: GETTABLE  R31 R31 K89  ; R31 := R31["0xB19BA59"]
472 [-]: MOVE      R32 R6       ; R32 := R6
473 [-]: MOVE      R33 R3       ; R33 := R3
474 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
475 [-]: MOVE      R6 R31       ; R6 := R31
476 [-]: LOADK     R31 K44      ; R31 := "<a color=\"#33ccff\" hovercolor=\""
477 [-]: GETUPVAL  R32 U1       ; R32 := U1
478 [-]: LOADK     R33 K45      ; R33 := "\" href=\"#onHyperlinkPressed:"
479 [-]: MOVE      R34 R6       ; R34 := R6
480 [-]: LOADK     R35 K46      ; R35 := "\">"
481 [-]: CONCAT    R31 R31 R35  ; R31 := R31 .. R32 .. R33 .. R34 .. R35
482 [-]: GETGLOBAL R32 K47      ; R32 := table
483 [-]: GETTABLE  R32 R32 K48  ; R32 := R32["0xE6450C9D"]
484 [-]: GETTABLE  R33 R4 K8    ; R33 := R4["Item"]
485 [-]: NEWTABLE  R34 0 3      ; R34 := {}
486 [-]: SETTABLE  R34 K49 R29  ; R34["Name"] := R29
487 [-]: SETTABLE  R34 K50 R31  ; R34["LinkStart"] := R31
488 [-]: SETTABLE  R34 K51 R6   ; R34["LinkString"] := R6
489 [-]: CALL      R32 3 1      ; R32(R33,R34)
490 [-]: GETGLOBAL R32 K0       ; R32 := string
491 [-]: GETTABLE  R32 R32 K1   ; R32 := R32["0x633C4246"]
492 [-]: MOVE      R33 R1       ; R33 := R1
493 [-]: LOADK     R34 K90      ; R34 := "%[FF-[^%]]+%]"
494 [-]: LOADK     R35 K29      ; R35 := "["
495 [-]: MOVE      R36 R29      ; R36 := R29
496 [-]: LOADK     R37 K33      ; R37 := "]"
497 [-]: CONCAT    R35 R35 R37  ; R35 := R35 .. R36 .. R37
498 [-]: LOADK     R36 K10      ; R36 := 1
499 [-]: CALL      R32 5 2      ; R32 := R32(R33,R34,R35,R36)
500 [-]: LEN       R33 R32      ; R33 := # R32
501 [-]: ADD       R33 R10 R33  ; R33 := R10 + R33
502 [-]: LEN       R34 R1       ; R34 := # R1
503 [-]: SUB       R10 R33 R34  ; R10 := R33 - R34
504 [-]: MOVE      R1 R32       ; R1 := R32
505 [-]: JMP       666          ; PC := 666
506 [-]: GETGLOBAL R33 K0       ; R33 := string
507 [-]: GETTABLE  R33 R33 K28  ; R33 := R33["0x7B782033"]
508 [-]: MOVE      R34 R12      ; R34 := R12
509 [-]: LOADK     R35 K10      ; R35 := 1
510 [-]: LOADK     R36 K36      ; R36 := 4
511 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
512 [-]: EQ        0 R33 K91    ; if R33 ~= "mod-" then PC := 572
513 [-]: JMP       572          ; PC := 572
514 [-]: GETUPVAL  R33 U0       ; R33 := U0
515 [-]: GETTABLE  R33 R33 K92  ; R33 := R33["ModConfigPrefixString"]
516 [-]: GETUPVAL  R34 U2       ; R34 := U2
517 [-]: GETTABLE  R34 R34 K83  ; R34 := R34["0x6722708F"]
518 [-]: MOVE      R35 R6       ; R35 := R6
519 [-]: CALL      R34 2 2      ; R34 := R34(R35)
520 [-]: GETGLOBAL R35 K27      ; R35 := 0x400E7765
521 [-]: MOVE      R36 R34      ; R36 := R34
522 [-]: CALL      R35 2 2      ; R35 := R35(R36)
523 [-]: TEST      R35 1        ; if R35 then PC := 536
524 [-]: JMP       536          ; PC := 536
525 [-]: MOVE      R35 R33      ; R35 := R33
526 [-]: LOADK     R36 K84      ; R36 := ": "
527 [-]: GETGLOBAL R37 K85      ; R37 := mMovie
528 [-]: SELF      R37 R37 K86  ; R38 := R37; R37 := R37["0x5DB0BD4"]
529 [-]: SELF      R39 R34 K87  ; R40 := R34; R39 := R34["0x616C74B6"]
530 [-]: CALL      R39 2 2      ; R39 := R39(R40)
531 [-]: SELF      R39 R39 K88  ; R40 := R39; R39 := R39["0x5EC7A3D2"]
532 [-]: CALL      R39 2 2      ; R39 := R39(R40)
533 [-]: MOVE      R40 R0       ; R40 := R0
534 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
535 [-]: CONCAT    R33 R35 R37  ; R33 := R35 .. R36 .. R37
536 [-]: GETUPVAL  R35 U2       ; R35 := U2
537 [-]: GETTABLE  R35 R35 K89  ; R35 := R35["0xB19BA59"]
538 [-]: MOVE      R36 R6       ; R36 := R6
539 [-]: LOADNIL   R37 R37      ; R37 := nil
540 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
541 [-]: MOVE      R6 R35       ; R6 := R35
542 [-]: LOADK     R35 K44      ; R35 := "<a color=\"#33ccff\" hovercolor=\""
543 [-]: GETUPVAL  R36 U1       ; R36 := U1
544 [-]: LOADK     R37 K45      ; R37 := "\" href=\"#onHyperlinkPressed:"
545 [-]: MOVE      R38 R6       ; R38 := R6
546 [-]: LOADK     R39 K46      ; R39 := "\">"
547 [-]: CONCAT    R35 R35 R39  ; R35 := R35 .. R36 .. R37 .. R38 .. R39
548 [-]: GETGLOBAL R36 K47      ; R36 := table
549 [-]: GETTABLE  R36 R36 K48  ; R36 := R36["0xE6450C9D"]
550 [-]: GETTABLE  R37 R4 K8    ; R37 := R4["Item"]
551 [-]: NEWTABLE  R38 0 3      ; R38 := {}
552 [-]: SETTABLE  R38 K49 R33  ; R38["Name"] := R33
553 [-]: SETTABLE  R38 K50 R35  ; R38["LinkStart"] := R35
554 [-]: SETTABLE  R38 K51 R6   ; R38["LinkString"] := R6
555 [-]: CALL      R36 3 1      ; R36(R37,R38)
556 [-]: GETGLOBAL R36 K0       ; R36 := string
557 [-]: GETTABLE  R36 R36 K1   ; R36 := R36["0x633C4246"]
558 [-]: MOVE      R37 R1       ; R37 := R1
559 [-]: LOADK     R38 K93      ; R38 := "%[MOD-[^%]]+%]"
560 [-]: LOADK     R39 K29      ; R39 := "["
561 [-]: MOVE      R40 R33      ; R40 := R33
562 [-]: LOADK     R41 K33      ; R41 := "]"
563 [-]: CONCAT    R39 R39 R41  ; R39 := R39 .. R40 .. R41
564 [-]: LOADK     R40 K10      ; R40 := 1
565 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
566 [-]: LEN       R37 R36      ; R37 := # R36
567 [-]: ADD       R37 R10 R37  ; R37 := R10 + R37
568 [-]: LEN       R38 R1       ; R38 := # R1
569 [-]: SUB       R10 R37 R38  ; R10 := R37 - R38
570 [-]: MOVE      R1 R36       ; R1 := R36
571 [-]: JMP       666          ; PC := 666
572 [-]: GETGLOBAL R37 K0       ; R37 := string
573 [-]: GETTABLE  R37 R37 K28  ; R37 := R37["0x7B782033"]
574 [-]: MOVE      R38 R12      ; R38 := R12
575 [-]: LOADK     R39 K10      ; R39 := 1
576 [-]: LOADK     R40 K41      ; R40 := 5
577 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
578 [-]: EQ        0 R37 K94    ; if R37 ~= "shzn-" then PC := 666
579 [-]: JMP       666          ; PC := 666
580 [-]: LOADK     R37 K44      ; R37 := "<a color=\"#33ccff\" hovercolor=\""
581 [-]: GETUPVAL  R38 U1       ; R38 := U1
582 [-]: LOADK     R39 K45      ; R39 := "\" href=\"#onHyperlinkPressed:"
583 [-]: MOVE      R40 R6       ; R40 := R6
584 [-]: LOADK     R41 K46      ; R41 := "\">"
585 [-]: CONCAT    R37 R37 R41  ; R37 := R37 .. R38 .. R39 .. R40 .. R41
586 [-]: GETUPVAL  R38 U0       ; R38 := U0
587 [-]: GETTABLE  R38 R38 K95  ; R38 := R38["ShawzinPrefixString"]
588 [-]: GETGLOBAL R39 K47      ; R39 := table
589 [-]: GETTABLE  R39 R39 K48  ; R39 := R39["0xE6450C9D"]
590 [-]: GETTABLE  R40 R4 K8    ; R40 := R4["Item"]
591 [-]: NEWTABLE  R41 0 3      ; R41 := {}
592 [-]: SETTABLE  R41 K49 R38  ; R41["Name"] := R38
593 [-]: SETTABLE  R41 K50 R37  ; R41["LinkStart"] := R37
594 [-]: SETTABLE  R41 K51 R6   ; R41["LinkString"] := R6
595 [-]: CALL      R39 3 1      ; R39(R40,R41)
596 [-]: GETGLOBAL R39 K0       ; R39 := string
597 [-]: GETTABLE  R39 R39 K1   ; R39 := R39["0x633C4246"]
598 [-]: MOVE      R40 R1       ; R40 := R1
599 [-]: LOADK     R41 K96      ; R41 := "%[SHZN-[^%]]+%]"
600 [-]: LOADK     R42 K29      ; R42 := "["
601 [-]: MOVE      R43 R38      ; R43 := R38
602 [-]: LOADK     R44 K33      ; R44 := "]"
603 [-]: CONCAT    R42 R42 R44  ; R42 := R42 .. R43 .. R44
604 [-]: LOADK     R43 K10      ; R43 := 1
605 [-]: CALL      R39 5 2      ; R39 := R39(R40,R41,R42,R43)
606 [-]: LEN       R40 R39      ; R40 := # R39
607 [-]: ADD       R40 R10 R40  ; R40 := R10 + R40
608 [-]: LEN       R41 R1       ; R41 := # R1
609 [-]: SUB       R10 R40 R41  ; R10 := R40 - R41
610 [-]: MOVE      R1 R39       ; R1 := R39
611 [-]: JMP       666          ; PC := 666
612 [-]: GETGLOBAL R40 K0       ; R40 := string
613 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["0x7B782033"]
614 [-]: MOVE      R41 R1       ; R41 := R1
615 [-]: ADD       R42 R8 K10   ; R42 := R8 + 1
616 [-]: SUB       R43 R10 K10  ; R43 := R10 - 1
617 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
618 [-]: MOVE      R6 R40       ; R6 := R40
619 [-]: GETGLOBAL R40 K0       ; R40 := string
620 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["0x7B782033"]
621 [-]: MOVE      R41 R6       ; R41 := R6
622 [-]: LOADK     R42 K10      ; R42 := 1
623 [-]: LOADK     R43 K55      ; R43 := 6
624 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
625 [-]: EQ        0 R40 K97    ; if R40 ~= "GUILD=" then PC := 666
626 [-]: JMP       666          ; PC := 666
627 [-]: GETGLOBAL R40 K0       ; R40 := string
628 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["0x7B782033"]
629 [-]: MOVE      R41 R6       ; R41 := R6
630 [-]: GETGLOBAL R42 K0       ; R42 := string
631 [-]: GETTABLE  R42 R42 K11  ; R42 := R42["0xDE44F664"]
632 [-]: MOVE      R43 R6       ; R43 := R6
633 [-]: LOADK     R44 K38      ; R44 := ":"
634 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
635 [-]: ADD       R42 R42 K10  ; R42 := R42 + 1
636 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
637 [-]: LOADK     R41 K44      ; R41 := "<a color=\"#33ccff\" hovercolor=\""
638 [-]: GETUPVAL  R42 U1       ; R42 := U1
639 [-]: LOADK     R43 K45      ; R43 := "\" href=\"#onHyperlinkPressed:"
640 [-]: MOVE      R44 R6       ; R44 := R6
641 [-]: LOADK     R45 K46      ; R45 := "\">"
642 [-]: CONCAT    R41 R41 R45  ; R41 := R41 .. R42 .. R43 .. R44 .. R45
643 [-]: GETGLOBAL R42 K47      ; R42 := table
644 [-]: GETTABLE  R42 R42 K48  ; R42 := R42["0xE6450C9D"]
645 [-]: GETTABLE  R43 R4 K9    ; R43 := R4["Guild"]
646 [-]: NEWTABLE  R44 0 3      ; R44 := {}
647 [-]: SETTABLE  R44 K49 R40  ; R44["Name"] := R40
648 [-]: SETTABLE  R44 K50 R41  ; R44["LinkStart"] := R41
649 [-]: SETTABLE  R44 K51 R6   ; R44["LinkString"] := R6
650 [-]: CALL      R42 3 1      ; R42(R43,R44)
651 [-]: GETGLOBAL R42 K0       ; R42 := string
652 [-]: GETTABLE  R42 R42 K1   ; R42 := R42["0x633C4246"]
653 [-]: MOVE      R43 R1       ; R43 := R1
654 [-]: LOADK     R44 K98      ; R44 := "{GUILD=[^}]+}"
655 [-]: LOADK     R45 K31      ; R45 := "{"
656 [-]: MOVE      R46 R40      ; R46 := R40
657 [-]: LOADK     R47 K34      ; R47 := "}"
658 [-]: CONCAT    R45 R45 R47  ; R45 := R45 .. R46 .. R47
659 [-]: LOADK     R46 K10      ; R46 := 1
660 [-]: CALL      R42 5 2      ; R42 := R42(R43,R44,R45,R46)
661 [-]: LEN       R43 R42      ; R43 := # R42
662 [-]: ADD       R43 R10 R43  ; R43 := R10 + R43
663 [-]: LEN       R44 R1       ; R44 := # R1
664 [-]: SUB       R10 R43 R44  ; R10 := R43 - R44
665 [-]: MOVE      R1 R42       ; R1 := R42
666 [-]: LOADK     R9 K24       ; R9 := ""
667 [-]: LOADNIL   R8 R8        ; R8 := nil
668 [-]: JMP       115          ; PC := 115
669 [-]: GETGLOBAL R43 K85      ; R43 := mMovie
670 [-]: SELF      R43 R43 K99  ; R44 := R43; R43 := R43["0xD6A79FE9"]
671 [-]: GETTABLE  R45 R0 K100  ; R45 := R0["mClipPath"]
672 [-]: LOADK     R46 K101     ; R46 := ".ChatArea"
673 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
674 [-]: LOADK     R46 K102     ; R46 := "text"
675 [-]: MOVE      R47 R1       ; R47 := R1
676 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
677 [-]: NEWTABLE  R43 0 0      ; R43 := {}
678 [-]: GETGLOBAL R44 K103     ; R44 := 0xF595ADDE
679 [-]: GETGLOBAL R45 K85      ; R45 := mMovie
680 [-]: SELF      R45 R45 K104 ; R46 := R45; R45 := R45["0x6B7B470B"]
681 [-]: GETTABLE  R47 R0 K100  ; R47 := R0["mClipPath"]
682 [-]: LOADK     R48 K101     ; R48 := ".ChatArea"
683 [-]: CONCAT    R47 R47 R48  ; R47 := R47 .. R48
684 [-]: LOADK     R48 K105     ; R48 := "textLines"
685 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
686 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
687 [-]: MOVE      R45 R1       ; R45 := R1
688 [-]: LOADK     R46 K10      ; R46 := 1
689 [-]: MOVE      R47 R44      ; R47 := R44
690 [-]: LOADK     R48 K10      ; R48 := 1
691 [-]: FORPREP   R46 731      ; R46 -= R48; PC := 731
692 [-]: GETGLOBAL R50 K106     ; R50 := 0x8C64AFA9
693 [-]: GETGLOBAL R51 K85      ; R51 := mMovie
694 [-]: GETTABLE  R52 R0 K100  ; R52 := R0["mClipPath"]
695 [-]: LOADK     R53 K107     ; R53 := ".ChatArea.getLine"
696 [-]: CONCAT    R52 R52 R53  ; R52 := R52 .. R53
697 [-]: SUB       R53 R49 K10  ; R53 := R49 - 1
698 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
699 [-]: SELF      R51 R50 K108 ; R52 := R50; R51 := R50["0xC6772A8A"]
700 [-]: CALL      R51 2 2      ; R51 := R51(R52)
701 [-]: LOADNIL   R52 R52      ; R52 := nil
702 [-]: LT        0 R49 R44    ; if R49 >= R44 then PC := 719
703 [-]: JMP       719          ; PC := 719
704 [-]: SELF      R53 R45 K28  ; R54 := R45; R53 := R45["0x7B782033"]
705 [-]: ADD       R55 R51 K10  ; R55 := R51 + 1
706 [-]: ADD       R56 R51 K10  ; R56 := R51 + 1
707 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
708 [-]: EQ        1 R53 K109   ; if R53 == " " then PC := 711
709 [-]: JMP       711          ; PC := 711
710 [-]: MOVE      R52 R0       ; R52 := R0
711 [-]: MOVE      R52 R1       ; R52 := R1
712 [-]: TEST      R52 0        ; if not R52 then PC := 715
713 [-]: JMP       715          ; PC := 715
714 [-]: ADD       R51 R51 K10  ; R51 := R51 + 1
715 [-]: SELF      R53 R45 K28  ; R54 := R45; R53 := R45["0x7B782033"]
716 [-]: ADD       R55 R51 K10  ; R55 := R51 + 1
717 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
718 [-]: MOVE      R45 R53      ; R45 := R53
719 [-]: NEWTABLE  R53 0 5      ; R53 := {}
720 [-]: SETTABLE  R53 K102 R50 ; R53["text"] := R50
721 [-]: SETTABLE  R53 K110 R2  ; R53["messageType"] := R2
722 [-]: EQ        1 R49 K10    ; if R49 == 1 then PC := 725
723 [-]: JMP       725          ; PC := 725
724 [-]: MOVE      R54 R0       ; R54 := R0
725 [-]: MOVE      R54 R1       ; R54 := R1
726 [-]: SETTABLE  R53 K111 R54 ; R53["firstLine"] := R54
727 [-]: NEWTABLE  R54 0 0      ; R54 := {}
728 [-]: SETTABLE  R53 K112 R54 ; R53["hyperLinks"] := R54
729 [-]: SETTABLE  R53 K113 R52 ; R53["endSpace"] := R52
730 [-]: SETTABLE  R43 R49 R53  ; R43[R49] := R53
731 [-]: FORLOOP   R46 692      ; R46 += R48; if R46 <= R47 then begin PC := 692; R49 := R46 end
732 [-]: GETUPVAL  R53 U3       ; R53 := U3
733 [-]: SELF      R53 R53 K114 ; R54 := R53; R53 := R53["0x18AAE1E3"]
734 [-]: CALL      R53 2 2      ; R53 := R53(R54)
735 [-]: NEWTABLE  R54 0 0      ; R54 := {}
736 [-]: GETGLOBAL R55 K27      ; R55 := 0x400E7765
737 [-]: MOVE      R56 R53      ; R56 := R53
738 [-]: CALL      R55 2 2      ; R55 := R55(R56)
739 [-]: TEST      R55 1        ; if R55 then PC := 742
740 [-]: JMP       742          ; PC := 742
741 [-]: GETTABLE  R54 R53 K115 ; R54 := R53["mUserList"]
742 [-]: LOADK     R55 K10      ; R55 := 1
743 [-]: MOVE      R56 R44      ; R56 := R44
744 [-]: LOADK     R57 K10      ; R57 := 1
745 [-]: FORPREP   R55 1383     ; R55 -= R57; PC := 1383
746 [-]: GETTABLE  R59 R43 R58  ; R59 := R43[R58]
747 [-]: GETTABLE  R59 R59 K102 ; R59 := R59["text"]
748 [-]: GETGLOBAL R60 K0       ; R60 := string
749 [-]: GETTABLE  R60 R60 K11  ; R60 := R60["0xDE44F664"]
750 [-]: MOVE      R61 R1       ; R61 := R1
751 [-]: LOADK     R62 K116     ; R62 := "%[.*%]"
752 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
753 [-]: EQ        0 R60 K13    ; if R60 ~= nil then PC := 769
754 [-]: JMP       769          ; PC := 769
755 [-]: GETGLOBAL R60 K0       ; R60 := string
756 [-]: GETTABLE  R60 R60 K11  ; R60 := R60["0xDE44F664"]
757 [-]: MOVE      R61 R1       ; R61 := R1
758 [-]: LOADK     R62 K117     ; R62 := "{.*}"
759 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
760 [-]: EQ        0 R60 K13    ; if R60 ~= nil then PC := 769
761 [-]: JMP       769          ; PC := 769
762 [-]: GETGLOBAL R60 K0       ; R60 := string
763 [-]: GETTABLE  R60 R60 K11  ; R60 := R60["0xDE44F664"]
764 [-]: MOVE      R61 R1       ; R61 := R1
765 [-]: LOADK     R62 K118     ; R62 := "@"
766 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
767 [-]: EQ        1 R60 K13    ; if R60 == nil then PC := 1381
768 [-]: JMP       1381         ; PC := 1381
769 [-]: LOADNIL   R60 R60      ; R60 := nil
770 [-]: NEWTABLE  R61 0 0      ; R61 := {}
771 [-]: LOADK     R62 K25      ; R62 := 0
772 [-]: LOADK     R63 K24      ; R63 := ""
773 [-]: LOADK     R64 K25      ; R64 := 0
774 [-]: GETTABLE  R65 R43 R58  ; R65 := R43[R58]
775 [-]: GETTABLE  R65 R65 K102 ; R65 := R65["text"]
776 [-]: LEN       R65 R65      ; R65 := # R65
777 [-]: LE        0 R64 R65    ; if R64 > R65 then PC := 1125
778 [-]: JMP       1125         ; PC := 1125
779 [-]: EQ        1 R63 K119   ; if R63 == "username" then PC := 796
780 [-]: JMP       796          ; PC := 796
781 [-]: GETGLOBAL R65 K0       ; R65 := string
782 [-]: GETTABLE  R65 R65 K11  ; R65 := R65["0xDE44F664"]
783 [-]: GETTABLE  R66 R43 R58  ; R66 := R43[R58]
784 [-]: GETTABLE  R66 R66 K102 ; R66 := R66["text"]
785 [-]: LOADK     R67 K120     ; R67 := "[@%[{%]}]"
786 [-]: ADD       R68 R64 K10  ; R68 := R64 + 1
787 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
788 [-]: MOVE      R64 R65      ; R64 := R65
789 [-]: GETGLOBAL R65 K27      ; R65 := 0x400E7765
790 [-]: MOVE      R66 R64      ; R66 := R64
791 [-]: CALL      R65 2 2      ; R65 := R65(R66)
792 [-]: TEST      R65 0        ; if not R65 then PC := 797
793 [-]: JMP       797          ; PC := 797
794 [-]: JMP       1125         ; PC := 1125
795 [-]: JMP       797          ; PC := 797
796 [-]: ADD       R64 R64 K10  ; R64 := R64 + 1
797 [-]: GETGLOBAL R65 K0       ; R65 := string
798 [-]: GETTABLE  R65 R65 K28  ; R65 := R65["0x7B782033"]
799 [-]: GETTABLE  R66 R43 R58  ; R66 := R43[R58]
800 [-]: GETTABLE  R66 R66 K102 ; R66 := R66["text"]
801 [-]: MOVE      R67 R64      ; R67 := R64
802 [-]: MOVE      R68 R64      ; R68 := R64
803 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
804 [-]: EQ        0 R65 K118   ; if R65 ~= "@" then PC := 830
805 [-]: JMP       830          ; PC := 830
806 [-]: MOVE      R60 R64      ; R60 := R64
807 [-]: GETGLOBAL R66 K47      ; R66 := table
808 [-]: GETTABLE  R66 R66 K48  ; R66 := R66["0xE6450C9D"]
809 [-]: MOVE      R67 R61      ; R67 := R61
810 [-]: MOVE      R68 R60      ; R68 := R60
811 [-]: CALL      R66 3 1      ; R66(R67,R68)
812 [-]: ADD       R66 R64 K36  ; R66 := R64 + 4
813 [-]: GETTABLE  R67 R43 R58  ; R67 := R43[R58]
814 [-]: GETTABLE  R67 R67 K102 ; R67 := R67["text"]
815 [-]: LEN       R67 R67      ; R67 := # R67
816 [-]: LT        0 R66 R67    ; if R66 >= R67 then PC := 828
817 [-]: JMP       828          ; PC := 828
818 [-]: GETGLOBAL R66 K0       ; R66 := string
819 [-]: GETTABLE  R66 R66 K28  ; R66 := R66["0x7B782033"]
820 [-]: GETTABLE  R67 R43 R58  ; R67 := R43[R58]
821 [-]: GETTABLE  R67 R67 K102 ; R67 := R67["text"]
822 [-]: ADD       R68 R64 K10  ; R68 := R64 + 1
823 [-]: ADD       R69 R64 K36  ; R69 := R64 + 4
824 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
825 [-]: EQ        0 R66 K121   ; if R66 ~= "[DE]" then PC := 828
826 [-]: JMP       828          ; PC := 828
827 [-]: ADD       R64 R64 K36  ; R64 := R64 + 4
828 [-]: LOADK     R63 K119     ; R63 := "username"
829 [-]: JMP       774          ; PC := 774
830 [-]: GETGLOBAL R66 K27      ; R66 := 0x400E7765
831 [-]: MOVE      R67 R60      ; R67 := R60
832 [-]: CALL      R66 2 2      ; R66 := R66(R67)
833 [-]: TEST      R66 1        ; if R66 then PC := 912
834 [-]: JMP       912          ; PC := 912
835 [-]: EQ        0 R63 K119   ; if R63 ~= "username" then PC := 912
836 [-]: JMP       912          ; PC := 912
837 [-]: GETTABLE  R66 R43 R58  ; R66 := R43[R58]
838 [-]: GETTABLE  R66 R66 K102 ; R66 := R66["text"]
839 [-]: LEN       R66 R66      ; R66 := # R66
840 [-]: EQ        1 R64 R66    ; if R64 == R66 then PC := 855
841 [-]: JMP       855          ; PC := 855
842 [-]: GETGLOBAL R66 K0       ; R66 := string
843 [-]: GETTABLE  R66 R66 K11  ; R66 := R66["0xDE44F664"]
844 [-]: GETGLOBAL R67 K0       ; R67 := string
845 [-]: GETTABLE  R67 R67 K28  ; R67 := R67["0x7B782033"]
846 [-]: GETTABLE  R68 R43 R58  ; R68 := R43[R58]
847 [-]: GETTABLE  R68 R68 K102 ; R68 := R68["text"]
848 [-]: ADD       R69 R64 K10  ; R69 := R64 + 1
849 [-]: ADD       R70 R64 K10  ; R70 := R64 + 1
850 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
851 [-]: LOADK     R68 K122     ; R68 := "[%a%d_%-%.]"
852 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
853 [-]: TEST      R66 1        ; if R66 then PC := 912
854 [-]: JMP       912          ; PC := 912
855 [-]: GETGLOBAL R66 K0       ; R66 := string
856 [-]: GETTABLE  R66 R66 K28  ; R66 := R66["0x7B782033"]
857 [-]: GETTABLE  R67 R43 R58  ; R67 := R43[R58]
858 [-]: GETTABLE  R67 R67 K102 ; R67 := R67["text"]
859 [-]: MOVE      R68 R60      ; R68 := R60
860 [-]: MOVE      R69 R64      ; R69 := R64
861 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
862 [-]: MOVE      R6 R66       ; R6 := R66
863 [-]: GETGLOBAL R66 K0       ; R66 := string
864 [-]: GETTABLE  R66 R66 K28  ; R66 := R66["0x7B782033"]
865 [-]: MOVE      R67 R6       ; R67 := R6
866 [-]: LOADK     R68 K123     ; R68 := 2
867 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
868 [-]: GETTABLE  R66 R54 R66  ; R66 := R54[R66]
869 [-]: TEST      R66 0        ; if not R66 then PC := 907
870 [-]: JMP       907          ; PC := 907
871 [-]: GETGLOBAL R66 K0       ; R66 := string
872 [-]: GETTABLE  R66 R66 K28  ; R66 := R66["0x7B782033"]
873 [-]: MOVE      R67 R6       ; R67 := R6
874 [-]: LOADK     R68 K123     ; R68 := 2
875 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
876 [-]: GETTABLE  R66 R54 R66  ; R66 := R54[R66]
877 [-]: GETTABLE  R66 R66 K124 ; R66 := R66["isOnline"]
878 [-]: TEST      R66 0        ; if not R66 then PC := 907
879 [-]: JMP       907          ; PC := 907
880 [-]: LOADK     R66 K44      ; R66 := "<a color=\"#33ccff\" hovercolor=\""
881 [-]: GETUPVAL  R67 U1       ; R67 := U1
882 [-]: LOADK     R68 K45      ; R68 := "\" href=\"#onHyperlinkPressed:"
883 [-]: MOVE      R69 R6       ; R69 := R6
884 [-]: LOADK     R70 K46      ; R70 := "\">"
885 [-]: MOVE      R71 R6       ; R71 := R6
886 [-]: LOADK     R72 K125     ; R72 := "</a>"
887 [-]: CONCAT    R66 R66 R72  ; R66 := R66 .. R67 .. R68 .. R69 .. R70 .. R71 .. R72
888 [-]: GETGLOBAL R67 K0       ; R67 := string
889 [-]: GETTABLE  R67 R67 K28  ; R67 := R67["0x7B782033"]
890 [-]: MOVE      R68 R59      ; R68 := R59
891 [-]: LOADK     R69 K25      ; R69 := 0
892 [-]: ADD       R70 R60 R62  ; R70 := R60 + R62
893 [-]: SUB       R70 R70 K10  ; R70 := R70 - 1
894 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
895 [-]: MOVE      R68 R66      ; R68 := R66
896 [-]: GETGLOBAL R69 K0       ; R69 := string
897 [-]: GETTABLE  R69 R69 K28  ; R69 := R69["0x7B782033"]
898 [-]: MOVE      R70 R59      ; R70 := R59
899 [-]: ADD       R71 R64 R62  ; R71 := R64 + R62
900 [-]: ADD       R71 R71 K10  ; R71 := R71 + 1
901 [-]: CALL      R69 3 2      ; R69 := R69(R70,R71)
902 [-]: CONCAT    R59 R67 R69  ; R59 := R67 .. R68 .. R69
903 [-]: LEN       R67 R66      ; R67 := # R66
904 [-]: LEN       R68 R6       ; R68 := # R6
905 [-]: SUB       R67 R67 R68  ; R67 := R67 - R68
906 [-]: ADD       R62 R62 R67  ; R62 := R62 + R67
907 [-]: LOADNIL   R60 R60      ; R60 := nil
908 [-]: NEWTABLE  R67 0 0      ; R67 := {}
909 [-]: MOVE      R61 R67      ; R61 := R67
910 [-]: LOADK     R63 K24      ; R63 := ""
911 [-]: JMP       774          ; PC := 774
912 [-]: EQ        0 R65 K29    ; if R65 ~= "[" then PC := 922
913 [-]: JMP       922          ; PC := 922
914 [-]: MOVE      R60 R64      ; R60 := R64
915 [-]: GETGLOBAL R67 K47      ; R67 := table
916 [-]: GETTABLE  R67 R67 K48  ; R67 := R67["0xE6450C9D"]
917 [-]: MOVE      R68 R61      ; R68 := R61
918 [-]: MOVE      R69 R60      ; R69 := R60
919 [-]: CALL      R67 3 1      ; R67(R68,R69)
920 [-]: LOADK     R63 K30      ; R63 := "item"
921 [-]: JMP       774          ; PC := 774
922 [-]: EQ        0 R65 K31    ; if R65 ~= "{" then PC := 932
923 [-]: JMP       932          ; PC := 932
924 [-]: MOVE      R60 R64      ; R60 := R64
925 [-]: GETGLOBAL R67 K47      ; R67 := table
926 [-]: GETTABLE  R67 R67 K48  ; R67 := R67["0xE6450C9D"]
927 [-]: MOVE      R68 R61      ; R68 := R61
928 [-]: MOVE      R69 R60      ; R69 := R60
929 [-]: CALL      R67 3 1      ; R67(R68,R69)
930 [-]: LOADK     R63 K32      ; R63 := "clan"
931 [-]: JMP       774          ; PC := 774
932 [-]: GETGLOBAL R67 K27      ; R67 := 0x400E7765
933 [-]: MOVE      R68 R60      ; R68 := R60
934 [-]: CALL      R67 2 2      ; R67 := R67(R68)
935 [-]: TEST      R67 1        ; if R67 then PC := 774
936 [-]: JMP       774          ; PC := 774
937 [-]: EQ        0 R63 K30    ; if R63 ~= "item" then PC := 941
938 [-]: JMP       941          ; PC := 941
939 [-]: EQ        1 R65 K33    ; if R65 == "]" then PC := 945
940 [-]: JMP       945          ; PC := 945
941 [-]: EQ        0 R63 K32    ; if R63 ~= "clan" then PC := 774
942 [-]: JMP       774          ; PC := 774
943 [-]: EQ        0 R65 K34    ; if R65 ~= "}" then PC := 774
944 [-]: JMP       774          ; PC := 774
945 [-]: GETUPVAL  R67 U4       ; R67 := U4
946 [-]: GETTABLE  R67 R67 K126 ; R67 := R67["0xF81722A2"]
947 [-]: EQ        1 R65 K33    ; if R65 == "]" then PC := 950
948 [-]: JMP       950          ; PC := 950
949 [-]: MOVE      R68 R0       ; R68 := R0
950 [-]: MOVE      R68 R1       ; R68 := R1
951 [-]: LOADK     R69 K8       ; R69 := "Item"
952 [-]: LOADK     R70 K9       ; R70 := "Guild"
953 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
954 [-]: GETUPVAL  R68 U4       ; R68 := U4
955 [-]: GETTABLE  R68 R68 K126 ; R68 := R68["0xF81722A2"]
956 [-]: EQ        1 R67 K8     ; if R67 == "Item" then PC := 959
957 [-]: JMP       959          ; PC := 959
958 [-]: MOVE      R69 R0       ; R69 := R0
959 [-]: MOVE      R69 R1       ; R69 := R1
960 [-]: LOADK     R70 K29      ; R70 := "["
961 [-]: LOADK     R71 K31      ; R71 := "{"
962 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
963 [-]: GETUPVAL  R69 U4       ; R69 := U4
964 [-]: GETTABLE  R69 R69 K126 ; R69 := R69["0xF81722A2"]
965 [-]: EQ        1 R67 K8     ; if R67 == "Item" then PC := 968
966 [-]: JMP       968          ; PC := 968
967 [-]: MOVE      R70 R0       ; R70 := R0
968 [-]: MOVE      R70 R1       ; R70 := R1
969 [-]: LOADK     R71 K33      ; R71 := "]"
970 [-]: LOADK     R72 K34      ; R72 := "}"
971 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
972 [-]: GETGLOBAL R70 K0       ; R70 := string
973 [-]: GETTABLE  R70 R70 K28  ; R70 := R70["0x7B782033"]
974 [-]: GETTABLE  R71 R43 R58  ; R71 := R43[R58]
975 [-]: GETTABLE  R71 R71 K102 ; R71 := R71["text"]
976 [-]: ADD       R72 R60 K10  ; R72 := R60 + 1
977 [-]: SUB       R73 R64 K10  ; R73 := R64 - 1
978 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
979 [-]: MOVE      R6 R70       ; R6 := R70
980 [-]: LOADNIL   R70 R70      ; R70 := nil
981 [-]: MOVE      R71 R1       ; R71 := R1
982 [-]: GETTABLE  R72 R4 R67   ; R72 := R4[R67]
983 [-]: LEN       R72 R72      ; R72 := # R72
984 [-]: GETTABLE  R73 R5 R67   ; R73 := R5[R67]
985 [-]: LE        0 R73 R72    ; if R73 > R72 then PC := 990
986 [-]: JMP       990          ; PC := 990
987 [-]: GETTABLE  R72 R4 R67   ; R72 := R4[R67]
988 [-]: GETTABLE  R73 R5 R67   ; R73 := R5[R67]
989 [-]: GETTABLE  R70 R72 R73  ; R70 := R72[R73]
990 [-]: EQ        1 R70 K13    ; if R70 == nil then PC := 1069
991 [-]: JMP       1069         ; PC := 1069
992 [-]: GETTABLE  R72 R70 K49  ; R72 := R70["Name"]
993 [-]: EQ        0 R6 R72     ; if R6 ~= R72 then PC := 1036
994 [-]: JMP       1036         ; PC := 1036
995 [-]: GETTABLE  R72 R70 K50  ; R72 := R70["LinkStart"]
996 [-]: MOVE      R73 R68      ; R73 := R68
997 [-]: GETTABLE  R74 R70 K49  ; R74 := R70["Name"]
998 [-]: MOVE      R75 R69      ; R75 := R69
999 [-]: LOADK     R76 K125     ; R76 := "</a>"
1000 [-]: CONCAT    R72 R72 R76  ; R72 := R72 .. R73 .. R74 .. R75 .. R76
1001 [-]: GETGLOBAL R73 K0       ; R73 := string
1002 [-]: GETTABLE  R73 R73 K28  ; R73 := R73["0x7B782033"]
1003 [-]: MOVE      R74 R59      ; R74 := R59
1004 [-]: LOADK     R75 K25      ; R75 := 0
1005 [-]: ADD       R76 R60 R62  ; R76 := R60 + R62
1006 [-]: SUB       R76 R76 K10  ; R76 := R76 - 1
1007 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
1008 [-]: MOVE      R74 R72      ; R74 := R72
1009 [-]: GETGLOBAL R75 K0       ; R75 := string
1010 [-]: GETTABLE  R75 R75 K28  ; R75 := R75["0x7B782033"]
1011 [-]: MOVE      R76 R59      ; R76 := R59
1012 [-]: ADD       R77 R64 R62  ; R77 := R64 + R62
1013 [-]: ADD       R77 R77 K10  ; R77 := R77 + 1
1014 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
1015 [-]: CONCAT    R59 R73 R75  ; R59 := R73 .. R74 .. R75
1016 [-]: LEN       R73 R72      ; R73 := # R72
1017 [-]: LEN       R74 R6       ; R74 := # R6
1018 [-]: SUB       R73 R73 R74  ; R73 := R73 - R74
1019 [-]: SUB       R73 R73 K123 ; R73 := R73 - 2
1020 [-]: ADD       R62 R62 R73  ; R62 := R62 + R73
1021 [-]: GETTABLE  R73 R5 R67   ; R73 := R5[R67]
1022 [-]: ADD       R73 R73 K10  ; R73 := R73 + 1
1023 [-]: SETTABLE  R5 R67 R73   ; R5[R67] := R73
1024 [-]: GETGLOBAL R73 K47      ; R73 := table
1025 [-]: GETTABLE  R73 R73 K48  ; R73 := R73["0xE6450C9D"]
1026 [-]: GETTABLE  R74 R43 R58  ; R74 := R43[R58]
1027 [-]: GETTABLE  R74 R74 K112 ; R74 := R74["hyperLinks"]
1028 [-]: NEWTABLE  R75 0 3      ; R75 := {}
1029 [-]: GETTABLE  R76 R70 K49  ; R76 := R70["Name"]
1030 [-]: SETTABLE  R75 K49 R76  ; R75["Name"] := R76
1031 [-]: GETTABLE  R76 R70 K51  ; R76 := R70["LinkString"]
1032 [-]: SETTABLE  R75 K8 R76   ; R75["Item"] := R76
1033 [-]: SETTABLE  R75 K127 R67 ; R75["LinkType"] := R67
1034 [-]: CALL      R73 3 1      ; R73(R74,R75)
1035 [-]: JMP       1118         ; PC := 1118
1036 [-]: EQ        0 R67 K8     ; if R67 ~= "Item" then PC := 1048
1037 [-]: JMP       1048         ; PC := 1048
1038 [-]: GETGLOBAL R73 K0       ; R73 := string
1039 [-]: GETTABLE  R73 R73 K11  ; R73 := R73["0xDE44F664"]
1040 [-]: GETTABLE  R74 R70 K49  ; R74 := R70["Name"]
1041 [-]: LOADK     R75 K78      ; R75 := "%["
1042 [-]: MOVE      R76 R6       ; R76 := R6
1043 [-]: LOADK     R77 K128     ; R77 := "%]"
1044 [-]: CONCAT    R75 R75 R77  ; R75 := R75 .. R76 .. R77
1045 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1046 [-]: TEST      R73 1        ; if R73 then PC := 1060
1047 [-]: JMP       1060         ; PC := 1060
1048 [-]: EQ        0 R67 K9     ; if R67 ~= "Guild" then PC := 1118
1049 [-]: JMP       1118         ; PC := 1118
1050 [-]: GETGLOBAL R73 K0       ; R73 := string
1051 [-]: GETTABLE  R73 R73 K11  ; R73 := R73["0xDE44F664"]
1052 [-]: GETTABLE  R74 R70 K49  ; R74 := R70["Name"]
1053 [-]: LOADK     R75 K31      ; R75 := "{"
1054 [-]: MOVE      R76 R6       ; R76 := R6
1055 [-]: LOADK     R77 K34      ; R77 := "}"
1056 [-]: CONCAT    R75 R75 R77  ; R75 := R75 .. R76 .. R77
1057 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1058 [-]: TEST      R73 0        ; if not R73 then PC := 1118
1059 [-]: JMP       1118         ; PC := 1118
1060 [-]: MOVE      R71 R0       ; R71 := R0
1061 [-]: LEN       R73 R61      ; R73 := # R61
1062 [-]: SETTABLE  R61 R73 K13  ; R61[R73] := nil
1063 [-]: LEN       R73 R61      ; R73 := # R61
1064 [-]: LT        0 K25 R73    ; if 0 >= R73 then PC := 1118
1065 [-]: JMP       1118         ; PC := 1118
1066 [-]: LEN       R73 R61      ; R73 := # R61
1067 [-]: GETTABLE  R60 R61 R73  ; R60 := R61[R73]
1068 [-]: JMP       1118         ; PC := 1118
1069 [-]: EQ        0 R67 K8     ; if R67 ~= "Item" then PC := 1118
1070 [-]: JMP       1118         ; PC := 1118
1071 [-]: GETUPVAL  R73 U5       ; R73 := U5
1072 [-]: GETUPVAL  R74 U6       ; R74 := U6
1073 [-]: GETTABLE  R74 R74 K129 ; R74 := R74["0xCECDECDE"]
1074 [-]: MOVE      R75 R6       ; R75 := R6
1075 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1076 [-]: GETTABLE  R73 R73 R74  ; R73 := R73[R74]
1077 [-]: EQ        1 R73 K13    ; if R73 == nil then PC := 1118
1078 [-]: JMP       1118         ; PC := 1118
1079 [-]: LOADK     R74 K44      ; R74 := "<a color=\"#33ccff\" hovercolor=\""
1080 [-]: GETUPVAL  R75 U1       ; R75 := U1
1081 [-]: LOADK     R76 K45      ; R76 := "\" href=\"#onHyperlinkPressed:"
1082 [-]: MOVE      R77 R73      ; R77 := R73
1083 [-]: LOADK     R78 K46      ; R78 := "\">"
1084 [-]: MOVE      R79 R68      ; R79 := R68
1085 [-]: MOVE      R80 R6       ; R80 := R6
1086 [-]: MOVE      R81 R69      ; R81 := R69
1087 [-]: LOADK     R82 K125     ; R82 := "</a>"
1088 [-]: CONCAT    R74 R74 R82  ; R74 := R74 .. R75 .. R76 .. R77 .. R78 .. R79 .. R80 .. R81 .. R82
1089 [-]: GETGLOBAL R75 K0       ; R75 := string
1090 [-]: GETTABLE  R75 R75 K28  ; R75 := R75["0x7B782033"]
1091 [-]: MOVE      R76 R59      ; R76 := R59
1092 [-]: LOADK     R77 K25      ; R77 := 0
1093 [-]: ADD       R78 R60 R62  ; R78 := R60 + R62
1094 [-]: SUB       R78 R78 K10  ; R78 := R78 - 1
1095 [-]: CALL      R75 4 2      ; R75 := R75(R76,R77,R78)
1096 [-]: MOVE      R76 R74      ; R76 := R74
1097 [-]: GETGLOBAL R77 K0       ; R77 := string
1098 [-]: GETTABLE  R77 R77 K28  ; R77 := R77["0x7B782033"]
1099 [-]: MOVE      R78 R59      ; R78 := R59
1100 [-]: ADD       R79 R64 R62  ; R79 := R64 + R62
1101 [-]: ADD       R79 R79 K10  ; R79 := R79 + 1
1102 [-]: CALL      R77 3 2      ; R77 := R77(R78,R79)
1103 [-]: CONCAT    R59 R75 R77  ; R59 := R75 .. R76 .. R77
1104 [-]: LEN       R75 R74      ; R75 := # R74
1105 [-]: LEN       R76 R6       ; R76 := # R6
1106 [-]: SUB       R75 R75 R76  ; R75 := R75 - R76
1107 [-]: SUB       R75 R75 K123 ; R75 := R75 - 2
1108 [-]: ADD       R62 R62 R75  ; R62 := R62 + R75
1109 [-]: GETGLOBAL R75 K47      ; R75 := table
1110 [-]: GETTABLE  R75 R75 K48  ; R75 := R75["0xE6450C9D"]
1111 [-]: GETTABLE  R76 R43 R58  ; R76 := R43[R58]
1112 [-]: GETTABLE  R76 R76 K112 ; R76 := R76["hyperLinks"]
1113 [-]: NEWTABLE  R77 0 3      ; R77 := {}
1114 [-]: SETTABLE  R77 K49 R6   ; R77["Name"] := R6
1115 [-]: SETTABLE  R77 K8 R73   ; R77["Item"] := R73
1116 [-]: SETTABLE  R77 K127 R67 ; R77["LinkType"] := R67
1117 [-]: CALL      R75 3 1      ; R75(R76,R77)
1118 [-]: TEST      R71 0        ; if not R71 then PC := 774
1119 [-]: JMP       774          ; PC := 774
1120 [-]: LOADK     R63 K24      ; R63 := ""
1121 [-]: LOADNIL   R60 R60      ; R60 := nil
1122 [-]: NEWTABLE  R75 0 0      ; R75 := {}
1123 [-]: MOVE      R61 R75      ; R61 := R75
1124 [-]: JMP       774          ; PC := 774
1125 [-]: EQ        1 R63 K30    ; if R63 == "item" then PC := 1129
1126 [-]: JMP       1129         ; PC := 1129
1127 [-]: EQ        0 R63 K32    ; if R63 ~= "clan" then PC := 1381
1128 [-]: JMP       1381         ; PC := 1381
1129 [-]: GETGLOBAL R75 K103     ; R75 := 0xF595ADDE
1130 [-]: MOVE      R76 R44      ; R76 := R44
1131 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1132 [-]: EQ        1 R58 R75    ; if R58 == R75 then PC := 1381
1133 [-]: JMP       1381         ; PC := 1381
1134 [-]: GETGLOBAL R75 K27      ; R75 := 0x400E7765
1135 [-]: MOVE      R76 R60      ; R76 := R60
1136 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1137 [-]: TEST      R75 1        ; if R75 then PC := 1381
1138 [-]: JMP       1381         ; PC := 1381
1139 [-]: LOADK     R75 K25      ; R75 := 0
1140 [-]: ADD       R76 R58 K10  ; R76 := R58 + 1
1141 [-]: GETTABLE  R76 R43 R76  ; R76 := R43[R76]
1142 [-]: GETTABLE  R76 R76 K102 ; R76 := R76["text"]
1143 [-]: LEN       R76 R76      ; R76 := # R76
1144 [-]: LE        0 R75 R76    ; if R75 > R76 then PC := 1381
1145 [-]: JMP       1381         ; PC := 1381
1146 [-]: GETGLOBAL R76 K0       ; R76 := string
1147 [-]: GETTABLE  R76 R76 K11  ; R76 := R76["0xDE44F664"]
1148 [-]: ADD       R77 R58 K10  ; R77 := R58 + 1
1149 [-]: GETTABLE  R77 R43 R77  ; R77 := R43[R77]
1150 [-]: GETTABLE  R77 R77 K102 ; R77 := R77["text"]
1151 [-]: LOADK     R78 K26      ; R78 := "[%[{%]}]"
1152 [-]: ADD       R79 R75 K10  ; R79 := R75 + 1
1153 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
1154 [-]: MOVE      R75 R76      ; R75 := R76
1155 [-]: GETGLOBAL R76 K27      ; R76 := 0x400E7765
1156 [-]: MOVE      R77 R75      ; R77 := R75
1157 [-]: CALL      R76 2 2      ; R76 := R76(R77)
1158 [-]: TEST      R76 0        ; if not R76 then PC := 1161
1159 [-]: JMP       1161         ; PC := 1161
1160 [-]: JMP       1381         ; PC := 1381
1161 [-]: GETGLOBAL R76 K0       ; R76 := string
1162 [-]: GETTABLE  R76 R76 K28  ; R76 := R76["0x7B782033"]
1163 [-]: ADD       R77 R58 K10  ; R77 := R58 + 1
1164 [-]: GETTABLE  R77 R43 R77  ; R77 := R43[R77]
1165 [-]: GETTABLE  R77 R77 K102 ; R77 := R77["text"]
1166 [-]: MOVE      R78 R75      ; R78 := R75
1167 [-]: MOVE      R79 R75      ; R79 := R75
1168 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
1169 [-]: EQ        1 R76 K29    ; if R76 == "[" then PC := 1381
1170 [-]: JMP       1381         ; PC := 1381
1171 [-]: EQ        0 R76 K31    ; if R76 ~= "{" then PC := 1175
1172 [-]: JMP       1175         ; PC := 1175
1173 [-]: JMP       1381         ; PC := 1381
1174 [-]: JMP       1140         ; PC := 1140
1175 [-]: EQ        1 R76 K33    ; if R76 == "]" then PC := 1179
1176 [-]: JMP       1179         ; PC := 1179
1177 [-]: EQ        0 R76 K34    ; if R76 ~= "}" then PC := 1140
1178 [-]: JMP       1140         ; PC := 1140
1179 [-]: GETUPVAL  R77 U4       ; R77 := U4
1180 [-]: GETTABLE  R77 R77 K126 ; R77 := R77["0xF81722A2"]
1181 [-]: EQ        1 R76 K33    ; if R76 == "]" then PC := 1184
1182 [-]: JMP       1184         ; PC := 1184
1183 [-]: MOVE      R78 R0       ; R78 := R0
1184 [-]: MOVE      R78 R1       ; R78 := R1
1185 [-]: LOADK     R79 K8       ; R79 := "Item"
1186 [-]: LOADK     R80 K9       ; R80 := "Guild"
1187 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
1188 [-]: GETUPVAL  R78 U4       ; R78 := U4
1189 [-]: GETTABLE  R78 R78 K126 ; R78 := R78["0xF81722A2"]
1190 [-]: EQ        1 R77 K8     ; if R77 == "Item" then PC := 1193
1191 [-]: JMP       1193         ; PC := 1193
1192 [-]: MOVE      R79 R0       ; R79 := R0
1193 [-]: MOVE      R79 R1       ; R79 := R1
1194 [-]: LOADK     R80 K29      ; R80 := "["
1195 [-]: LOADK     R81 K31      ; R81 := "{"
1196 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
1197 [-]: GETUPVAL  R79 U4       ; R79 := U4
1198 [-]: GETTABLE  R79 R79 K126 ; R79 := R79["0xF81722A2"]
1199 [-]: EQ        1 R77 K8     ; if R77 == "Item" then PC := 1202
1200 [-]: JMP       1202         ; PC := 1202
1201 [-]: MOVE      R80 R0       ; R80 := R0
1202 [-]: MOVE      R80 R1       ; R80 := R1
1203 [-]: LOADK     R81 K33      ; R81 := "]"
1204 [-]: LOADK     R82 K34      ; R82 := "}"
1205 [-]: CALL      R79 4 2      ; R79 := R79(R80,R81,R82)
1206 [-]: GETGLOBAL R80 K0       ; R80 := string
1207 [-]: GETTABLE  R80 R80 K28  ; R80 := R80["0x7B782033"]
1208 [-]: GETTABLE  R81 R43 R58  ; R81 := R43[R58]
1209 [-]: GETTABLE  R81 R81 K102 ; R81 := R81["text"]
1210 [-]: ADD       R82 R60 K10  ; R82 := R60 + 1
1211 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
1212 [-]: GETGLOBAL R81 K0       ; R81 := string
1213 [-]: GETTABLE  R81 R81 K28  ; R81 := R81["0x7B782033"]
1214 [-]: ADD       R82 R58 K10  ; R82 := R58 + 1
1215 [-]: GETTABLE  R82 R43 R82  ; R82 := R43[R82]
1216 [-]: GETTABLE  R82 R82 K102 ; R82 := R82["text"]
1217 [-]: LOADK     R83 K25      ; R83 := 0
1218 [-]: SUB       R84 R75 K10  ; R84 := R75 - 1
1219 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
1220 [-]: GETTABLE  R82 R43 R58  ; R82 := R43[R58]
1221 [-]: GETTABLE  R82 R82 K113 ; R82 := R82["endSpace"]
1222 [-]: TEST      R82 0        ; if not R82 then PC := 1229
1223 [-]: JMP       1229         ; PC := 1229
1224 [-]: MOVE      R82 R80      ; R82 := R80
1225 [-]: LOADK     R83 K109     ; R83 := " "
1226 [-]: MOVE      R84 R81      ; R84 := R81
1227 [-]: CONCAT    R6 R82 R84   ; R6 := R82 .. R83 .. R84
1228 [-]: JMP       1232         ; PC := 1232
1229 [-]: MOVE      R82 R80      ; R82 := R80
1230 [-]: MOVE      R83 R81      ; R83 := R81
1231 [-]: CONCAT    R6 R82 R83   ; R6 := R82 .. R83
1232 [-]: LOADNIL   R82 R82      ; R82 := nil
1233 [-]: GETTABLE  R83 R4 R77   ; R83 := R4[R77]
1234 [-]: LEN       R83 R83      ; R83 := # R83
1235 [-]: GETTABLE  R84 R5 R77   ; R84 := R5[R77]
1236 [-]: LE        0 R84 R83    ; if R84 > R83 then PC := 1241
1237 [-]: JMP       1241         ; PC := 1241
1238 [-]: GETTABLE  R83 R4 R77   ; R83 := R4[R77]
1239 [-]: GETTABLE  R84 R5 R77   ; R84 := R5[R77]
1240 [-]: GETTABLE  R82 R83 R84  ; R82 := R83[R84]
1241 [-]: EQ        0 R77 K8     ; if R77 ~= "Item" then PC := 1312
1242 [-]: JMP       1312         ; PC := 1312
1243 [-]: GETUPVAL  R83 U5       ; R83 := U5
1244 [-]: GETUPVAL  R84 U6       ; R84 := U6
1245 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["0xCECDECDE"]
1246 [-]: MOVE      R85 R6       ; R85 := R6
1247 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1248 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1249 [-]: EQ        1 R83 K13    ; if R83 == nil then PC := 1312
1250 [-]: JMP       1312         ; PC := 1312
1251 [-]: GETGLOBAL R84 K0       ; R84 := string
1252 [-]: GETTABLE  R84 R84 K35  ; R84 := R84["0xBDD0D625"]
1253 [-]: MOVE      R85 R6       ; R85 := R6
1254 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1255 [-]: SELF      R84 R84 K1   ; R85 := R84; R84 := R84["0x633C4246"]
1256 [-]: LOADK     R86 K130     ; R86 := "(%l)([^%s^%-]*)"
1257 [-]: CLOSURE   R87 0        ; R87 := closure(Function #97.13.1)
1258 [-]: CALL      R84 4 2      ; R84 := R84(R85,R86,R87)
1259 [-]: MOVE      R6 R84       ; R6 := R84
1260 [-]: LOADK     R84 K44      ; R84 := "<a color=\"#33ccff\" hovercolor=\""
1261 [-]: GETUPVAL  R85 U1       ; R85 := U1
1262 [-]: LOADK     R86 K45      ; R86 := "\" href=\"#onHyperlinkPressed:"
1263 [-]: MOVE      R87 R83      ; R87 := R83
1264 [-]: LOADK     R88 K46      ; R88 := "\">"
1265 [-]: CONCAT    R84 R84 R88  ; R84 := R84 .. R85 .. R86 .. R87 .. R88
1266 [-]: GETGLOBAL R85 K0       ; R85 := string
1267 [-]: GETTABLE  R85 R85 K28  ; R85 := R85["0x7B782033"]
1268 [-]: MOVE      R86 R59      ; R86 := R59
1269 [-]: LOADK     R87 K25      ; R87 := 0
1270 [-]: ADD       R88 R60 R62  ; R88 := R60 + R62
1271 [-]: SUB       R88 R88 K10  ; R88 := R88 - 1
1272 [-]: CALL      R85 4 2      ; R85 := R85(R86,R87,R88)
1273 [-]: MOVE      R86 R84      ; R86 := R84
1274 [-]: LOADK     R87 K29      ; R87 := "["
1275 [-]: GETGLOBAL R88 K0       ; R88 := string
1276 [-]: GETTABLE  R88 R88 K28  ; R88 := R88["0x7B782033"]
1277 [-]: MOVE      R89 R59      ; R89 := R59
1278 [-]: ADD       R90 R60 K10  ; R90 := R60 + 1
1279 [-]: ADD       R90 R90 R62  ; R90 := R90 + R62
1280 [-]: CALL      R88 3 2      ; R88 := R88(R89,R90)
1281 [-]: CONCAT    R59 R85 R88  ; R59 := R85 .. R86 .. R87 .. R88
1282 [-]: ADD       R85 R58 K10  ; R85 := R58 + 1
1283 [-]: GETTABLE  R85 R43 R85  ; R85 := R43[R85]
1284 [-]: GETGLOBAL R86 K0       ; R86 := string
1285 [-]: GETTABLE  R86 R86 K28  ; R86 := R86["0x7B782033"]
1286 [-]: ADD       R87 R58 K10  ; R87 := R58 + 1
1287 [-]: GETTABLE  R87 R43 R87  ; R87 := R43[R87]
1288 [-]: GETTABLE  R87 R87 K102 ; R87 := R87["text"]
1289 [-]: LOADK     R88 K25      ; R88 := 0
1290 [-]: SUB       R89 R75 K10  ; R89 := R75 - 1
1291 [-]: CALL      R86 4 2      ; R86 := R86(R87,R88,R89)
1292 [-]: LOADK     R87 K131     ; R87 := "]</a>"
1293 [-]: GETGLOBAL R88 K0       ; R88 := string
1294 [-]: GETTABLE  R88 R88 K28  ; R88 := R88["0x7B782033"]
1295 [-]: ADD       R89 R58 K10  ; R89 := R58 + 1
1296 [-]: GETTABLE  R89 R43 R89  ; R89 := R43[R89]
1297 [-]: GETTABLE  R89 R89 K102 ; R89 := R89["text"]
1298 [-]: ADD       R90 R75 K10  ; R90 := R75 + 1
1299 [-]: CALL      R88 3 2      ; R88 := R88(R89,R90)
1300 [-]: CONCAT    R86 R86 R88  ; R86 := R86 .. R87 .. R88
1301 [-]: SETTABLE  R85 K102 R86 ; R85["text"] := R86
1302 [-]: GETGLOBAL R85 K47      ; R85 := table
1303 [-]: GETTABLE  R85 R85 K48  ; R85 := R85["0xE6450C9D"]
1304 [-]: GETTABLE  R86 R43 R58  ; R86 := R43[R58]
1305 [-]: GETTABLE  R86 R86 K112 ; R86 := R86["hyperLinks"]
1306 [-]: NEWTABLE  R87 0 3      ; R87 := {}
1307 [-]: SETTABLE  R87 K49 R6   ; R87["Name"] := R6
1308 [-]: SETTABLE  R87 K8 R83   ; R87["Item"] := R83
1309 [-]: SETTABLE  R87 K127 R77 ; R87["LinkType"] := R77
1310 [-]: CALL      R85 3 1      ; R85(R86,R87)
1311 [-]: JMP       1381         ; PC := 1381
1312 [-]: EQ        1 R82 K13    ; if R82 == nil then PC := 1140
1313 [-]: JMP       1140         ; PC := 1140
1314 [-]: GETTABLE  R85 R82 K49  ; R85 := R82["Name"]
1315 [-]: EQ        0 R6 R85     ; if R6 ~= R85 then PC := 1140
1316 [-]: JMP       1140         ; PC := 1140
1317 [-]: GETTABLE  R85 R82 K50  ; R85 := R82["LinkStart"]
1318 [-]: MOVE      R86 R78      ; R86 := R78
1319 [-]: GETTABLE  R87 R82 K49  ; R87 := R82["Name"]
1320 [-]: MOVE      R88 R79      ; R88 := R79
1321 [-]: LOADK     R89 K125     ; R89 := "</a>"
1322 [-]: CONCAT    R85 R85 R89  ; R85 := R85 .. R86 .. R87 .. R88 .. R89
1323 [-]: GETGLOBAL R86 K0       ; R86 := string
1324 [-]: GETTABLE  R86 R86 K28  ; R86 := R86["0x7B782033"]
1325 [-]: MOVE      R87 R59      ; R87 := R59
1326 [-]: LOADK     R88 K25      ; R88 := 0
1327 [-]: ADD       R89 R60 R62  ; R89 := R60 + R62
1328 [-]: SUB       R89 R89 K10  ; R89 := R89 - 1
1329 [-]: CALL      R86 4 2      ; R86 := R86(R87,R88,R89)
1330 [-]: GETTABLE  R87 R82 K50  ; R87 := R82["LinkStart"]
1331 [-]: MOVE      R88 R78      ; R88 := R78
1332 [-]: GETGLOBAL R89 K0       ; R89 := string
1333 [-]: GETTABLE  R89 R89 K28  ; R89 := R89["0x7B782033"]
1334 [-]: MOVE      R90 R59      ; R90 := R59
1335 [-]: ADD       R91 R60 R62  ; R91 := R60 + R62
1336 [-]: ADD       R91 R91 K10  ; R91 := R91 + 1
1337 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1338 [-]: CONCAT    R59 R86 R89  ; R59 := R86 .. R87 .. R88 .. R89
1339 [-]: LEN       R86 R85      ; R86 := # R85
1340 [-]: LEN       R87 R6       ; R87 := # R6
1341 [-]: SUB       R86 R86 R87  ; R86 := R86 - R87
1342 [-]: SUB       R86 R86 K123 ; R86 := R86 - 2
1343 [-]: ADD       R62 R62 R86  ; R62 := R62 + R86
1344 [-]: GETTABLE  R86 R5 R77   ; R86 := R5[R77]
1345 [-]: ADD       R86 R86 K10  ; R86 := R86 + 1
1346 [-]: SETTABLE  R5 R77 R86   ; R5[R77] := R86
1347 [-]: ADD       R86 R58 K10  ; R86 := R58 + 1
1348 [-]: GETTABLE  R86 R43 R86  ; R86 := R43[R86]
1349 [-]: GETGLOBAL R87 K0       ; R87 := string
1350 [-]: GETTABLE  R87 R87 K28  ; R87 := R87["0x7B782033"]
1351 [-]: ADD       R88 R58 K10  ; R88 := R58 + 1
1352 [-]: GETTABLE  R88 R43 R88  ; R88 := R43[R88]
1353 [-]: GETTABLE  R88 R88 K102 ; R88 := R88["text"]
1354 [-]: LOADK     R89 K25      ; R89 := 0
1355 [-]: SUB       R90 R75 K10  ; R90 := R75 - 1
1356 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1357 [-]: MOVE      R88 R79      ; R88 := R79
1358 [-]: LOADK     R89 K125     ; R89 := "</a>"
1359 [-]: GETGLOBAL R90 K0       ; R90 := string
1360 [-]: GETTABLE  R90 R90 K28  ; R90 := R90["0x7B782033"]
1361 [-]: ADD       R91 R58 K10  ; R91 := R58 + 1
1362 [-]: GETTABLE  R91 R43 R91  ; R91 := R43[R91]
1363 [-]: GETTABLE  R91 R91 K102 ; R91 := R91["text"]
1364 [-]: ADD       R92 R75 K10  ; R92 := R75 + 1
1365 [-]: CALL      R90 3 2      ; R90 := R90(R91,R92)
1366 [-]: CONCAT    R87 R87 R90  ; R87 := R87 .. R88 .. R89 .. R90
1367 [-]: SETTABLE  R86 K102 R87 ; R86["text"] := R87
1368 [-]: GETGLOBAL R86 K47      ; R86 := table
1369 [-]: GETTABLE  R86 R86 K48  ; R86 := R86["0xE6450C9D"]
1370 [-]: GETTABLE  R87 R43 R58  ; R87 := R43[R58]
1371 [-]: GETTABLE  R87 R87 K112 ; R87 := R87["hyperLinks"]
1372 [-]: NEWTABLE  R88 0 3      ; R88 := {}
1373 [-]: GETTABLE  R89 R82 K49  ; R89 := R82["Name"]
1374 [-]: SETTABLE  R88 K49 R89  ; R88["Name"] := R89
1375 [-]: GETTABLE  R89 R82 K51  ; R89 := R82["LinkString"]
1376 [-]: SETTABLE  R88 K8 R89   ; R88["Item"] := R89
1377 [-]: SETTABLE  R88 K127 R77 ; R88["LinkType"] := R77
1378 [-]: CALL      R86 3 1      ; R86(R87,R88)
1379 [-]: JMP       1381         ; PC := 1381
1380 [-]: JMP       1140         ; PC := 1140
1381 [-]: GETTABLE  R86 R43 R58  ; R86 := R43[R58]
1382 [-]: SETTABLE  R86 K102 R59 ; R86["text"] := R59
1383 [-]: FORLOOP   R55 746      ; R55 += R57; if R55 <= R56 then begin PC := 746; R58 := R55 end
1384 [-]: RETURN    R43 2        ; return R43
1385 [-]: RETURN    R0 1         ; return 


; Function #97.13.1:
;
; Name:            
; Defined at line: 4896
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := string
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x639C642A"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #97.14:
;
; Name:            
; Defined at line: 4925
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  77

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x1BF588C6
  2 [-]: LOADK     R3 K1        ; R3 := 0
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: LOADK     R2 K1        ; R2 := 0
  5 [-]: LOADK     R3 K2        ; R3 := ""
  6 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mLineLog"]
  7 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 98
  8 [-]: JMP       98           ; PC := 98
  9 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mLineLog"]
 10 [-]: LEN       R4 R4        ; R4 := # R4
 11 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mChatHistory"]
 12 [-]: LEN       R5 R5        ; R5 := # R5
 13 [-]: LT        0 K1 R4      ; if 0 >= R4 then PC := 98
 14 [-]: JMP       98           ; PC := 98
 15 [-]: MOVE      R6 R4        ; R6 := R4
 16 [-]: LOADK     R7 K6        ; R7 := 1
 17 [-]: LOADK     R8 K7        ; R8 := -1
 18 [-]: FORPREP   R6 97        ; R6 -= R8; PC := 97
 19 [-]: GETTABLE  R10 R0 K5    ; R10 := R0["mChatHistory"]
 20 [-]: LEN       R10 R10      ; R10 := # R10
 21 [-]: GETTABLE  R11 R0 K8    ; R11 := R0["mMaxChatHistory"]
 22 [-]: LE        0 R11 R10    ; if R11 > R10 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: JMP       98           ; PC := 98
 25 [-]: MOD       R10 R9 K9    ; R10 := R9 % 50
 26 [-]: EQ        0 R10 K1     ; if R10 ~= 0 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETGLOBAL R10 K0       ; R10 := 0x1BF588C6
 29 [-]: LOADK     R11 K1       ; R11 := 0
 30 [-]: CALL      R10 2 1      ; R10(R11)
 31 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["mLineLog"]
 32 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 33 [-]: GETTABLE  R11 R10 K10  ; R11 := R10["text"]
 34 [-]: GETTABLE  R12 R10 K11  ; R12 := R10["sender"]
 35 [-]: GETTABLE  R13 R0 K12   ; R13 := R0["mHasHyperlink"]
 36 [-]: TEST      R13 1        ; if R13 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETTABLE  R13 R10 K13  ; R13 := R10["hyperLinks"]
 39 [-]: LEN       R13 R13      ; R13 := # R13
 40 [-]: LT        1 K1 R13     ; if 0 < R13 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R13 R0       ; R13 := R0
 43 [-]: MOVE      R13 R1       ; R13 := R1
 44 [-]: SETTABLE  R0 K12 R13   ; R0["mHasHyperlink"] := R13
 45 [-]: EQ        1 R12 K4     ; if R12 == nil then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: EQ        1 R12 K2     ; if R12 == "" then PC := 51
 48 [-]: JMP       51           ; PC := 51
 49 [-]: GETUPVAL  R13 U0       ; R13 := U0
 50 [-]: SETTABLE  R13 R12 K14  ; R13[R12] := "0x1"
 51 [-]: EQ        0 R5 K1      ; if R5 ~= 0 then PC := 97
 52 [-]: JMP       97           ; PC := 97
 53 [-]: GETUPVAL  R13 U1       ; R13 := U1
 54 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["0xF81722A2"]
 55 [-]: GETUPVAL  R14 U2       ; R14 := U2
 56 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["Enabled"]
 57 [-]: GETGLOBAL R15 K17      ; R15 := mMovie
 58 [-]: SELF      R15 R15 K18  ; R16 := R15; R15 := R15["0x49467D4"]
 59 [-]: MOVE      R17 R11      ; R17 := R11
 60 [-]: MOVE      R18 R1       ; R18 := R1
 61 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 62 [-]: MOVE      R16 R11      ; R16 := R11
 63 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 64 [-]: MOVE      R11 R13      ; R11 := R13
 65 [-]: GETTABLE  R13 R0 K19   ; R13 := R0["mParent"]
 66 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["mShowTimeStamps"]
 67 [-]: EQ        1 R13 K4     ; if R13 == nil then PC := 76
 68 [-]: JMP       76           ; PC := 76
 69 [-]: GETTABLE  R13 R0 K19   ; R13 := R0["mParent"]
 70 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["mShowTimeStamps"]
 71 [-]: TEST      R13 0        ; if not R13 then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: GETTABLE  R13 R10 K21  ; R13 := R10["timeStamp"]
 74 [-]: MOVE      R14 R11      ; R14 := R11
 75 [-]: CONCAT    R11 R13 R14  ; R11 := R13 .. R14
 76 [-]: SELF      R13 R0 K22   ; R14 := R0; R13 := R0["0xD969B3C2"]
 77 [-]: MOVE      R15 R11      ; R15 := R11
 78 [-]: GETTABLE  R16 R10 K23  ; R16 := R10["messageType"]
 79 [-]: GETTABLE  R17 R10 K11  ; R17 := R10["sender"]
 80 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
 81 [-]: LEN       R14 R13      ; R14 := # R13
 82 [-]: MOVE      R15 R14      ; R15 := R14
 83 [-]: LOADK     R16 K6       ; R16 := 1
 84 [-]: LOADK     R17 K7       ; R17 := -1
 85 [-]: FORPREP   R15 96       ; R15 -= R17; PC := 96
 86 [-]: GETTABLE  R19 R13 R18  ; R19 := R13[R18]
 87 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["text"]
 88 [-]: EQ        1 R19 K2     ; if R19 == "" then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETGLOBAL R19 K24      ; R19 := table
 91 [-]: GETTABLE  R19 R19 K25  ; R19 := R19["0xE6450C9D"]
 92 [-]: GETTABLE  R20 R0 K5    ; R20 := R0["mChatHistory"]
 93 [-]: LOADK     R21 K6       ; R21 := 1
 94 [-]: GETTABLE  R22 R13 R18  ; R22 := R13[R18]
 95 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
 96 [-]: FORLOOP   R15 86       ; R15 += R17; if R15 <= R16 then begin PC := 86; R18 := R15 end
 97 [-]: FORLOOP   R6 19        ; R6 += R8; if R6 <= R7 then begin PC := 19; R9 := R6 end
 98 [-]: GETGLOBAL R19 K26      ; R19 := Engine
 99 [-]: GETTABLE  R19 R19 K27  ; R19 := R19["0x9490FE70"]
100 [-]: CALL      R19 1 2      ; R19 := R19()
101 [-]: TEST      R19 0        ; if not R19 then PC := 109
102 [-]: JMP       109          ; PC := 109
103 [-]: GETGLOBAL R19 K17      ; R19 := mMovie
104 [-]: SELF      R19 R19 K28  ; R20 := R19; R19 := R19["0x1C19D966"]
105 [-]: LOADK     R21 K29      ; R21 := "Window.SendMessageBar.HyperlinkBtn"
106 [-]: LOADK     R22 K30      ; R22 := "_visible"
107 [-]: GETTABLE  R23 R0 K12   ; R23 := R0["mHasHyperlink"]
108 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
109 [-]: GETGLOBAL R19 K31      ; R19 := 0xF595ADDE
110 [-]: GETGLOBAL R20 K17      ; R20 := mMovie
111 [-]: SELF      R20 R20 K32  ; R21 := R20; R20 := R20["0x6B7B470B"]
112 [-]: GETTABLE  R22 R0 K33   ; R22 := R0["mClipPath"]
113 [-]: LOADK     R23 K34      ; R23 := ".ChatArea"
114 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
115 [-]: LOADK     R23 K35      ; R23 := "fontSize"
116 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
117 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
118 [-]: GETTABLE  R20 R0 K19   ; R20 := R0["mParent"]
119 [-]: SELF      R20 R20 K36  ; R21 := R20; R20 := R20["0x5528ED75"]
120 [-]: GETTABLE  R22 R0 K19   ; R22 := R0["mParent"]
121 [-]: GETTABLE  R22 R22 K37  ; R22 := R22["mChatPanelWindow"]
122 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
123 [-]: GETTABLE  R21 R0 K5    ; R21 := R0["mChatHistory"]
124 [-]: LEN       R21 R21      ; R21 := # R21
125 [-]: GETTABLE  R22 R0 K38   ; R22 := R0["mMaxVisibleChatLines"]
126 [-]: SUB       R22 R21 R22  ; R22 := R21 - R22
127 [-]: ADD       R22 R22 K6   ; R22 := R22 + 1
128 [-]: GETGLOBAL R23 K39      ; R23 := math
129 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["0x8B011038"]
130 [-]: LOADK     R24 K1       ; R24 := 0
131 [-]: GETTABLE  R25 R0 K41   ; R25 := R0["mScrollBack"]
132 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
133 [-]: SUB       R22 R22 R23  ; R22 := R22 - R23
134 [-]: GETGLOBAL R23 K42      ; R23 := 0x6374FD98
135 [-]: MOVE      R24 R22      ; R24 := R22
136 [-]: LOADK     R25 K6       ; R25 := 1
137 [-]: MOVE      R26 R21      ; R26 := R21
138 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
139 [-]: MOVE      R22 R23      ; R22 := R23
140 [-]: GETGLOBAL R23 K31      ; R23 := 0xF595ADDE
141 [-]: GETGLOBAL R24 K17      ; R24 := mMovie
142 [-]: SELF      R24 R24 K32  ; R25 := R24; R24 := R24["0x6B7B470B"]
143 [-]: GETTABLE  R26 R0 K33   ; R26 := R0["mClipPath"]
144 [-]: LOADK     R27 K34      ; R27 := ".ChatArea"
145 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
146 [-]: LOADK     R27 K43      ; R27 := "_height"
147 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
148 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
149 [-]: GETGLOBAL R24 K39      ; R24 := math
150 [-]: GETTABLE  R24 R24 K40  ; R24 := R24["0x8B011038"]
151 [-]: GETGLOBAL R25 K39      ; R25 := math
152 [-]: GETTABLE  R25 R25 K44  ; R25 := R25["0xF7005A7B"]
153 [-]: MUL       R26 R19 K45  ; R26 := R19 * 1.5499999523163
154 [-]: DIV       R26 R23 R26  ; R26 := R23 / R26
155 [-]: CALL      R25 2 2      ; R25 := R25(R26)
156 [-]: LOADK     R26 K1       ; R26 := 0
157 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
158 [-]: SETTABLE  R0 K38 R24   ; R0["mMaxVisibleChatLines"] := R24
159 [-]: LOADK     R24 K1       ; R24 := 0
160 [-]: LOADNIL   R25 R29      ; R25 := R26 := R27 := R28 := R29 := nil
161 [-]: NEWTABLE  R30 0 0      ; R30 := {}
162 [-]: LOADK     R31 K46      ; R31 := "<a color=\"#%X\" hovercolor=\""
163 [-]: GETUPVAL  R32 U3       ; R32 := U3
164 [-]: LOADK     R33 K47      ; R33 := "\" href=\"#onHyperlinkPressed:@"
165 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
166 [-]: LOADK     R32 K48      ; R32 := "</a><font color=\"#%X\">"
167 [-]: LOADK     R33 K49      ; R33 := "<font color=\"#%X\">"
168 [-]: LOADK     R34 K1       ; R34 := 0
169 [-]: LT        0 K1 R22     ; if 0 >= R22 then PC := 436
170 [-]: JMP       436          ; PC := 436
171 [-]: LE        0 R22 R21    ; if R22 > R21 then PC := 436
172 [-]: JMP       436          ; PC := 436
173 [-]: GETTABLE  R35 R0 K38   ; R35 := R0["mMaxVisibleChatLines"]
174 [-]: LT        0 R2 R35     ; if R2 >= R35 then PC := 436
175 [-]: JMP       436          ; PC := 436
176 [-]: GETTABLE  R35 R0 K5    ; R35 := R0["mChatHistory"]
177 [-]: GETTABLE  R35 R35 R22  ; R35 := R35[R22]
178 [-]: SELF      R36 R0 K50   ; R37 := R0; R36 := R0["0x97B52048"]
179 [-]: GETTABLE  R38 R35 K10  ; R38 := R35["text"]
180 [-]: GETTABLE  R39 R35 K51  ; R39 := R35["firstLine"]
181 [-]: GETTABLE  R40 R35 K23  ; R40 := R35["messageType"]
182 [-]: CALL      R36 5 5      ; R36,R37,R38,R39 := R36(R37,R38,R39,R40)
183 [-]: MOVE      R29 R39      ; R29 := R39
184 [-]: MOVE      R28 R38      ; R28 := R38
185 [-]: MOVE      R27 R37      ; R27 := R37
186 [-]: MOVE      R26 R36      ; R26 := R36
187 [-]: LOADNIL   R36 R36      ; R36 := nil
188 [-]: GETGLOBAL R37 K52      ; R37 := 0xAA09E79D
189 [-]: MOVE      R38 R30      ; R38 := R30
190 [-]: CALL      R37 2 2      ; R37 := R37(R38)
191 [-]: EQ        1 R37 K4     ; if R37 == nil then PC := 198
192 [-]: JMP       198          ; PC := 198
193 [-]: GETGLOBAL R37 K24      ; R37 := table
194 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
195 [-]: MOVE      R38 R30      ; R38 := R30
196 [-]: LOADK     R39 K53      ; R39 := "<br>"
197 [-]: CALL      R37 3 1      ; R37(R38,R39)
198 [-]: GETTABLE  R37 R0 K38   ; R37 := R0["mMaxVisibleChatLines"]
199 [-]: SUB       R37 R37 K6   ; R37 := R37 - 1
200 [-]: EQ        1 R2 R37     ; if R2 == R37 then PC := 204
201 [-]: JMP       204          ; PC := 204
202 [-]: EQ        0 R22 R21    ; if R22 ~= R21 then PC := 206
203 [-]: JMP       206          ; PC := 206
204 [-]: LEN       R37 R30      ; R37 := # R30
205 [-]: ADD       R36 R37 K6   ; R36 := R37 + 1
206 [-]: EQ        1 R27 K4     ; if R27 == nil then PC := 252
207 [-]: JMP       252          ; PC := 252
208 [-]: GETGLOBAL R37 K24      ; R37 := table
209 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
210 [-]: MOVE      R38 R30      ; R38 := R30
211 [-]: GETGLOBAL R39 K54      ; R39 := string
212 [-]: GETTABLE  R39 R39 K55  ; R39 := R39["0x4B1F4F58"]
213 [-]: MOVE      R40 R31      ; R40 := R31
214 [-]: MOVE      R41 R28      ; R41 := R28
215 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
216 [-]: CALL      R37 0 1      ; R37(R38,...)
217 [-]: GETGLOBAL R37 K24      ; R37 := table
218 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
219 [-]: MOVE      R38 R30      ; R38 := R30
220 [-]: MOVE      R39 R26      ; R39 := R26
221 [-]: LOADK     R40 K56      ; R40 := "|"
222 [-]: GETGLOBAL R41 K57      ; R41 := 0x9FAED6BC
223 [-]: MOVE      R42 R22      ; R42 := R22
224 [-]: CALL      R41 2 2      ; R41 := R41(R42)
225 [-]: CONCAT    R39 R39 R41  ; R39 := R39 .. R40 .. R41
226 [-]: CALL      R37 3 1      ; R37(R38,R39)
227 [-]: GETGLOBAL R37 K24      ; R37 := table
228 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
229 [-]: MOVE      R38 R30      ; R38 := R30
230 [-]: LOADK     R39 K58      ; R39 := "\">"
231 [-]: CALL      R37 3 1      ; R37(R38,R39)
232 [-]: GETGLOBAL R37 K24      ; R37 := table
233 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
234 [-]: MOVE      R38 R30      ; R38 := R30
235 [-]: MOVE      R39 R26      ; R39 := R26
236 [-]: CALL      R37 3 1      ; R37(R38,R39)
237 [-]: GETGLOBAL R37 K24      ; R37 := table
238 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
239 [-]: MOVE      R38 R30      ; R38 := R30
240 [-]: GETGLOBAL R39 K54      ; R39 := string
241 [-]: GETTABLE  R39 R39 K55  ; R39 := R39["0x4B1F4F58"]
242 [-]: MOVE      R40 R32      ; R40 := R32
243 [-]: MOVE      R41 R29      ; R41 := R29
244 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
245 [-]: CALL      R37 0 1      ; R37(R38,...)
246 [-]: GETGLOBAL R37 K24      ; R37 := table
247 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
248 [-]: MOVE      R38 R30      ; R38 := R30
249 [-]: MOVE      R39 R27      ; R39 := R27
250 [-]: CALL      R37 3 1      ; R37(R38,R39)
251 [-]: JMP       287          ; PC := 287
252 [-]: GETTABLE  R37 R35 K23  ; R37 := R35["messageType"]
253 [-]: GETTABLE  R38 R0 K59   ; R38 := R0["MESSAGE_TYPE_SYSTEM"]
254 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 264
255 [-]: JMP       264          ; PC := 264
256 [-]: GETTABLE  R37 R35 K23  ; R37 := R35["messageType"]
257 [-]: GETTABLE  R38 R0 K60   ; R38 := R0["MESSAGE_TYPE_BROADCAST"]
258 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 264
259 [-]: JMP       264          ; PC := 264
260 [-]: GETTABLE  R37 R35 K23  ; R37 := R35["messageType"]
261 [-]: GETTABLE  R38 R0 K61   ; R38 := R0["MESSAGE_TYPE_NOTIFICATION"]
262 [-]: EQ        0 R37 R38    ; if R37 ~= R38 then PC := 282
263 [-]: JMP       282          ; PC := 282
264 [-]: GETTABLE  R37 R35 K51  ; R37 := R35["firstLine"]
265 [-]: TEST      R37 0        ; if not R37 then PC := 276
266 [-]: JMP       276          ; PC := 276
267 [-]: GETGLOBAL R37 K24      ; R37 := table
268 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
269 [-]: MOVE      R38 R30      ; R38 := R30
270 [-]: GETGLOBAL R39 K54      ; R39 := string
271 [-]: GETTABLE  R39 R39 K55  ; R39 := R39["0x4B1F4F58"]
272 [-]: MOVE      R40 R33      ; R40 := R33
273 [-]: MOVE      R41 R28      ; R41 := R28
274 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
275 [-]: CALL      R37 0 1      ; R37(R38,...)
276 [-]: GETGLOBAL R37 K24      ; R37 := table
277 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
278 [-]: MOVE      R38 R30      ; R38 := R30
279 [-]: MOVE      R39 R26      ; R39 := R26
280 [-]: CALL      R37 3 1      ; R37(R38,R39)
281 [-]: JMP       287          ; PC := 287
282 [-]: GETGLOBAL R37 K24      ; R37 := table
283 [-]: GETTABLE  R37 R37 K25  ; R37 := R37["0xE6450C9D"]
284 [-]: MOVE      R38 R30      ; R38 := R30
285 [-]: MOVE      R39 R26      ; R39 := R26
286 [-]: CALL      R37 3 1      ; R37(R38,R39)
287 [-]: GETGLOBAL R37 K62      ; R37 := 0x400E7765
288 [-]: MOVE      R38 R36      ; R38 := R36
289 [-]: CALL      R37 2 2      ; R37 := R37(R38)
290 [-]: TEST      R37 1        ; if R37 then PC := 340
291 [-]: JMP       340          ; PC := 340
292 [-]: MOVE      R37 R0       ; R37 := R0
293 [-]: LOADK     R38 K1       ; R38 := 0
294 [-]: LOADK     R39 K1       ; R39 := 0
295 [-]: MOVE      R40 R36      ; R40 := R36
296 [-]: LEN       R41 R30      ; R41 := # R30
297 [-]: LOADK     R42 K6       ; R42 := 1
298 [-]: FORPREP   R40 331      ; R40 -= R42; PC := 331
299 [-]: GETTABLE  R44 R30 R43  ; R44 := R30[R43]
300 [-]: TEST      R37 1        ; if R37 then PC := 319
301 [-]: JMP       319          ; PC := 319
302 [-]: SELF      R45 R44 K63  ; R46 := R44; R45 := R44["0xDE44F664"]
303 [-]: LOADK     R47 K64      ; R47 := "</a>"
304 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
305 [-]: EQ        1 R45 K4     ; if R45 == nil then PC := 313
306 [-]: JMP       313          ; PC := 313
307 [-]: SELF      R46 R44 K65  ; R47 := R44; R46 := R44["0x7B782033"]
308 [-]: ADD       R48 R45 K66  ; R48 := R45 + 4
309 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
310 [-]: MOVE      R44 R46      ; R44 := R46
311 [-]: MOVE      R37 R1       ; R37 := R1
312 [-]: JMP       319          ; PC := 319
313 [-]: SELF      R46 R44 K63  ; R47 := R44; R46 := R44["0xDE44F664"]
314 [-]: LOADK     R48 K67      ; R48 := "<a"
315 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
316 [-]: TEST      R46 0        ; if not R46 then PC := 319
317 [-]: JMP       319          ; PC := 319
318 [-]: MOVE      R37 R1       ; R37 := R1
319 [-]: TEST      R37 0        ; if not R37 then PC := 331
320 [-]: JMP       331          ; PC := 331
321 [-]: SELF      R46 R44 K68  ; R47 := R44; R46 := R44["0x633C4246"]
322 [-]: LOADK     R48 K67      ; R48 := "<a"
323 [-]: LOADK     R49 K2       ; R49 := ""
324 [-]: CALL      R46 4 3      ; R46,R47 := R46(R47,R48,R49)
325 [-]: SELF      R48 R44 K68  ; R49 := R44; R48 := R44["0x633C4246"]
326 [-]: LOADK     R50 K69      ; R50 := "</a"
327 [-]: LOADK     R51 K2       ; R51 := ""
328 [-]: CALL      R48 4 3      ; R48,R49 := R48(R49,R50,R51)
329 [-]: ADD       R38 R38 R47  ; R38 := R38 + R47
330 [-]: ADD       R39 R39 R49  ; R39 := R39 + R49
331 [-]: FORLOOP   R40 299      ; R40 += R42; if R40 <= R41 then begin PC := 299; R43 := R40 end
332 [-]: LT        0 R39 R38    ; if R39 >= R38 then PC := 432
333 [-]: JMP       432          ; PC := 432
334 [-]: GETGLOBAL R50 K24      ; R50 := table
335 [-]: GETTABLE  R50 R50 K25  ; R50 := R50["0xE6450C9D"]
336 [-]: MOVE      R51 R30      ; R51 := R30
337 [-]: LOADK     R52 K64      ; R52 := "</a>"
338 [-]: CALL      R50 3 1      ; R50(R51,R52)
339 [-]: JMP       432          ; PC := 432
340 [-]: EQ        0 R2 K1      ; if R2 ~= 0 then PC := 432
341 [-]: JMP       432          ; PC := 432
342 [-]: EQ        0 R27 K4     ; if R27 ~= nil then PC := 432
343 [-]: JMP       432          ; PC := 432
344 [-]: SELF      R50 R26 K63  ; R51 := R26; R50 := R26["0xDE44F664"]
345 [-]: LOADK     R52 K67      ; R52 := "<a"
346 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
347 [-]: SELF      R51 R26 K63  ; R52 := R26; R51 := R26["0xDE44F664"]
348 [-]: LOADK     R53 K69      ; R53 := "</a"
349 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
350 [-]: MOVE      R52 R1       ; R52 := R1
351 [-]: SELF      R53 R26 K68  ; R54 := R26; R53 := R26["0x633C4246"]
352 [-]: LOADK     R55 K67      ; R55 := "<a"
353 [-]: LOADK     R56 K2       ; R56 := ""
354 [-]: CALL      R53 4 3      ; R53,R54 := R53(R54,R55,R56)
355 [-]: SELF      R55 R26 K68  ; R56 := R26; R55 := R26["0x633C4246"]
356 [-]: LOADK     R57 K69      ; R57 := "</a"
357 [-]: LOADK     R58 K2       ; R58 := ""
358 [-]: CALL      R55 4 3      ; R55,R56 := R55(R56,R57,R58)
359 [-]: EQ        0 R54 R56    ; if R54 ~= R56 then PC := 369
360 [-]: JMP       369          ; PC := 369
361 [-]: EQ        1 R50 K4     ; if R50 == nil then PC := 369
362 [-]: JMP       369          ; PC := 369
363 [-]: EQ        1 R51 K4     ; if R51 == nil then PC := 369
364 [-]: JMP       369          ; PC := 369
365 [-]: LT        1 R50 R51    ; if R50 < R51 then PC := 368
366 [-]: JMP       368          ; PC := 368
367 [-]: MOVE      R52 R0       ; R52 := R0
368 [-]: MOVE      R52 R1       ; R52 := R1
369 [-]: TEST      R52 0        ; if not R52 then PC := 373
370 [-]: JMP       373          ; PC := 373
371 [-]: LT        0 R54 R56    ; if R54 >= R56 then PC := 410
372 [-]: JMP       410          ; PC := 410
373 [-]: LT        0 K6 R22     ; if 1 >= R22 then PC := 410
374 [-]: JMP       410          ; PC := 410
375 [-]: GETTABLE  R57 R0 K5    ; R57 := R0["mChatHistory"]
376 [-]: SUB       R58 R22 K6   ; R58 := R22 - 1
377 [-]: GETTABLE  R57 R57 R58  ; R57 := R57[R58]
378 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["text"]
379 [-]: LEN       R58 R57      ; R58 := # R57
380 [-]: LT        0 K1 R58     ; if 0 >= R58 then PC := 432
381 [-]: JMP       432          ; PC := 432
382 [-]: LOADNIL   R58 R58      ; R58 := nil
383 [-]: LOADK     R59 K1       ; R59 := 0
384 [-]: EQ        1 R59 K4     ; if R59 == nil then PC := 396
385 [-]: JMP       396          ; PC := 396
386 [-]: SELF      R60 R57 K63  ; R61 := R57; R60 := R57["0xDE44F664"]
387 [-]: LOADK     R62 K67      ; R62 := "<a"
388 [-]: MOVE      R63 R59      ; R63 := R59
389 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
390 [-]: MOVE      R59 R60      ; R59 := R60
391 [-]: EQ        1 R59 K4     ; if R59 == nil then PC := 384
392 [-]: JMP       384          ; PC := 384
393 [-]: MOVE      R58 R59      ; R58 := R59
394 [-]: ADD       R59 R59 K6   ; R59 := R59 + 1
395 [-]: JMP       384          ; PC := 384
396 [-]: SELF      R60 R57 K63  ; R61 := R57; R60 := R57["0xDE44F664"]
397 [-]: LOADK     R62 K70      ; R62 := ">"
398 [-]: MOVE      R63 R58      ; R63 := R58
399 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
400 [-]: GETGLOBAL R61 K24      ; R61 := table
401 [-]: GETTABLE  R61 R61 K25  ; R61 := R61["0xE6450C9D"]
402 [-]: MOVE      R62 R30      ; R62 := R30
403 [-]: LEN       R63 R30      ; R63 := # R30
404 [-]: SELF      R64 R57 K65  ; R65 := R57; R64 := R57["0x7B782033"]
405 [-]: MOVE      R66 R58      ; R66 := R58
406 [-]: MOVE      R67 R60      ; R67 := R60
407 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
408 [-]: CALL      R61 0 1      ; R61(R62,...)
409 [-]: JMP       432          ; PC := 432
410 [-]: EQ        0 R22 K6     ; if R22 ~= 1 then PC := 432
411 [-]: JMP       432          ; PC := 432
412 [-]: GETGLOBAL R61 K62      ; R61 := 0x400E7765
413 [-]: MOVE      R62 R51      ; R62 := R51
414 [-]: CALL      R61 2 2      ; R61 := R61(R62)
415 [-]: TEST      R61 1        ; if R61 then PC := 432
416 [-]: JMP       432          ; PC := 432
417 [-]: GETGLOBAL R61 K62      ; R61 := 0x400E7765
418 [-]: MOVE      R62 R50      ; R62 := R50
419 [-]: CALL      R61 2 2      ; R61 := R61(R62)
420 [-]: TEST      R61 1        ; if R61 then PC := 424
421 [-]: JMP       424          ; PC := 424
422 [-]: LT        0 R51 R50    ; if R51 >= R50 then PC := 432
423 [-]: JMP       432          ; PC := 432
424 [-]: GETGLOBAL R61 K54      ; R61 := string
425 [-]: GETTABLE  R61 R61 K68  ; R61 := R61["0x633C4246"]
426 [-]: GETTABLE  R62 R30 R22  ; R62 := R30[R22]
427 [-]: LOADK     R63 K64      ; R63 := "</a>"
428 [-]: LOADK     R64 K2       ; R64 := ""
429 [-]: LOADK     R65 K6       ; R65 := 1
430 [-]: CALL      R61 5 2      ; R61 := R61(R62,R63,R64,R65)
431 [-]: SETTABLE  R30 R22 R61  ; R30[R22] := R61
432 [-]: ADD       R34 R34 K6   ; R34 := R34 + 1
433 [-]: ADD       R2 R2 K6     ; R2 := R2 + 1
434 [-]: ADD       R22 R22 K6   ; R22 := R22 + 1
435 [-]: JMP       169          ; PC := 169
436 [-]: LOADK     R61 K6       ; R61 := 1
437 [-]: MOVE      R62 R34      ; R62 := R34
438 [-]: LOADK     R63 K6       ; R63 := 1
439 [-]: FORPREP   R61 445      ; R61 -= R63; PC := 445
440 [-]: GETGLOBAL R65 K24      ; R65 := table
441 [-]: GETTABLE  R65 R65 K25  ; R65 := R65["0xE6450C9D"]
442 [-]: MOVE      R66 R30      ; R66 := R30
443 [-]: LOADK     R67 K71      ; R67 := "</font>"
444 [-]: CALL      R65 3 1      ; R65(R66,R67)
445 [-]: FORLOOP   R61 440      ; R61 += R63; if R61 <= R62 then begin PC := 440; R64 := R61 end
446 [-]: GETGLOBAL R65 K24      ; R65 := table
447 [-]: GETTABLE  R65 R65 K72  ; R65 := R65["0x1D822E8E"]
448 [-]: MOVE      R66 R30      ; R66 := R30
449 [-]: CALL      R65 2 2      ; R65 := R65(R66)
450 [-]: MOVE      R3 R65       ; R3 := R65
451 [-]: LOADK     R65 K73      ; R65 := "<p><font >"
452 [-]: MOVE      R66 R3       ; R66 := R3
453 [-]: LOADK     R67 K74      ; R67 := "</font></p>"
454 [-]: CONCAT    R3 R65 R67   ; R3 := R65 .. R66 .. R67
455 [-]: GETGLOBAL R65 K17      ; R65 := mMovie
456 [-]: SELF      R65 R65 K75  ; R66 := R65; R65 := R65["0xD6A79FE9"]
457 [-]: GETTABLE  R67 R0 K33   ; R67 := R0["mClipPath"]
458 [-]: LOADK     R68 K34      ; R68 := ".ChatArea"
459 [-]: CONCAT    R67 R67 R68  ; R67 := R67 .. R68
460 [-]: LOADK     R68 K10      ; R68 := "text"
461 [-]: MOVE      R69 R3       ; R69 := R3
462 [-]: CALL      R65 5 1      ; R65(R66,R67,R68,R69)
463 [-]: GETTABLE  R65 R0 K38   ; R65 := R0["mMaxVisibleChatLines"]
464 [-]: GETTABLE  R66 R0 K5    ; R66 := R0["mChatHistory"]
465 [-]: LEN       R66 R66      ; R66 := # R66
466 [-]: DIV       R65 R65 R66  ; R65 := R65 / R66
467 [-]: LT        0 K1 R65     ; if 0 >= R65 then PC := 471
468 [-]: JMP       471          ; PC := 471
469 [-]: LT        1 R65 K6     ; if R65 < 1 then PC := 472
470 [-]: JMP       472          ; PC := 472
471 [-]: MOVE      R66 R0       ; R66 := R0
472 [-]: MOVE      R66 R1       ; R66 := R1
473 [-]: GETGLOBAL R67 K17      ; R67 := mMovie
474 [-]: SELF      R67 R67 K76  ; R68 := R67; R67 := R67["0x880196A7"]
475 [-]: GETTABLE  R69 R0 K33   ; R69 := R0["mClipPath"]
476 [-]: LOADK     R70 K77      ; R70 := "ScrollBar.Scrub"
477 [-]: LOADK     R71 K30      ; R71 := "_visible"
478 [-]: MOVE      R72 R66      ; R72 := R66
479 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
480 [-]: GETGLOBAL R67 K17      ; R67 := mMovie
481 [-]: SELF      R67 R67 K76  ; R68 := R67; R67 := R67["0x880196A7"]
482 [-]: GETTABLE  R69 R0 K33   ; R69 := R0["mClipPath"]
483 [-]: LOADK     R70 K78      ; R70 := "ScrollBar"
484 [-]: LOADK     R71 K79      ; R71 := "_alpha"
485 [-]: GETUPVAL  R72 U1       ; R72 := U1
486 [-]: GETTABLE  R72 R72 K15  ; R72 := R72["0xF81722A2"]
487 [-]: MOVE      R73 R66      ; R73 := R66
488 [-]: LOADK     R74 K80      ; R74 := 100
489 [-]: LOADK     R75 K9       ; R75 := 50
490 [-]: CALL      R72 4 0      ; R72,... := R72(R73,R74,R75)
491 [-]: CALL      R67 0 1      ; R67(R68,...)
492 [-]: GETTABLE  R67 R20 K81  ; R67 := R20["height"]
493 [-]: EQ        1 R67 K4     ; if R67 == nil then PC := 499
494 [-]: JMP       499          ; PC := 499
495 [-]: GETTABLE  R67 R0 K82   ; R67 := R0["mTextScroll"]
496 [-]: SELF      R67 R67 K83  ; R68 := R67; R67 := R67["0xBBA39962"]
497 [-]: GETTABLE  R69 R20 K81  ; R69 := R20["height"]
498 [-]: CALL      R67 3 1      ; R67(R68,R69)
499 [-]: GETTABLE  R67 R0 K84   ; R67 := R0["UsedLines"]
500 [-]: EQ        0 R67 K4     ; if R67 ~= nil then PC := 503
501 [-]: JMP       503          ; PC := 503
502 [-]: SETTABLE  R0 K84 K6    ; R0["UsedLines"] := 1
503 [-]: ADD       R67 R24 K6   ; R67 := R24 + 1
504 [-]: GETUPVAL  R68 U4       ; R68 := U4
505 [-]: LOADK     R69 K6       ; R69 := 1
506 [-]: FORPREP   R67 543      ; R67 -= R69; PC := 543
507 [-]: GETTABLE  R71 R0 K33   ; R71 := R0["mClipPath"]
508 [-]: LOADK     R72 K85      ; R72 := ".ChatEntryLine"
509 [-]: MOVE      R73 R70      ; R73 := R70
510 [-]: CONCAT    R25 R71 R73  ; R25 := R71 .. R72 .. R73
511 [-]: LT        0 K6 R70     ; if 1 >= R70 then PC := 520
512 [-]: JMP       520          ; PC := 520
513 [-]: GETGLOBAL R71 K86      ; R71 := 0x8C64AFA9
514 [-]: GETGLOBAL R72 K17      ; R72 := mMovie
515 [-]: MOVE      R73 R25      ; R73 := R25
516 [-]: LOADK     R74 K87      ; R74 := ".removeMovieClip"
517 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
518 [-]: CALL      R71 3 1      ; R71(R72,R73)
519 [-]: JMP       543          ; PC := 543
520 [-]: GETGLOBAL R71 K17      ; R71 := mMovie
521 [-]: SELF      R71 R71 K75  ; R72 := R71; R71 := R71["0xD6A79FE9"]
522 [-]: MOVE      R73 R25      ; R73 := R25
523 [-]: LOADK     R74 K88      ; R74 := ".Message1"
524 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
525 [-]: LOADK     R74 K10      ; R74 := "text"
526 [-]: LOADK     R75 K2       ; R75 := ""
527 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
528 [-]: GETGLOBAL R71 K17      ; R71 := mMovie
529 [-]: SELF      R71 R71 K75  ; R72 := R71; R71 := R71["0xD6A79FE9"]
530 [-]: MOVE      R73 R25      ; R73 := R25
531 [-]: LOADK     R74 K89      ; R74 := ".Message2"
532 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
533 [-]: LOADK     R74 K10      ; R74 := "text"
534 [-]: LOADK     R75 K2       ; R75 := ""
535 [-]: CALL      R71 5 1      ; R71(R72,R73,R74,R75)
536 [-]: GETGLOBAL R71 K17      ; R71 := mMovie
537 [-]: SELF      R71 R71 K76  ; R72 := R71; R71 := R71["0x880196A7"]
538 [-]: MOVE      R73 R25      ; R73 := R25
539 [-]: LOADK     R74 K90      ; R74 := "Btn"
540 [-]: LOADK     R75 K30      ; R75 := "_visible"
541 [-]: MOVE      R76 R0       ; R76 := R0
542 [-]: CALL      R71 6 1      ; R71(R72,R73,R74,R75,R76)
543 [-]: FORLOOP   R67 507      ; R67 += R69; if R67 <= R68 then begin PC := 507; R70 := R67 end
544 [-]: MOVE      R24 R4       ; R24 := R4
545 [-]: RETURN    R0 1         ; return 


; Function #97.15:
;
; Name:            
; Defined at line: 5125
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIsActive"] := "0x0"
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
  4 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mListControl"]
  5 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x9EBF0BD2"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K2 R1     ; R0["mStoredFocusIndex"] := R1
  8 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mStoredFocusIndex"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mListControl"]
 16 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mScroll"]
 17 [-]: SETTABLE  R0 K2 R1     ; R0["mStoredFocusIndex"] := R1
 18 [-]: RETURN    R0 1         ; return 


; Function #97.16:
;
; Name:            
; Defined at line: 5134
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mIsActive"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: SETTABLE  R0 K0 K1     ; R0["mIsActive"] := "0x1"
  6 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0xEEFE2F88"]
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mCachedLines"]
  9 [-]: LEN       R2 R2        ; R2 := # R2
 10 [-]: LT        0 K4 R2      ; if 0 >= R2 then PC := 29
 11 [-]: JMP       29           ; PC := 29
 12 [-]: LOADK     R3 K5        ; R3 := 1
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: LOADK     R5 K5        ; R5 := 1
 15 [-]: FORPREP   R3 26        ; R3 -= R5; PC := 26
 16 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["mCachedLines"]
 17 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 18 [-]: SELF      R8 R0 K6     ; R9 := R0; R8 := R0["0x4313BA6"]
 19 [-]: GETTABLE  R10 R7 K7    ; R10 := R7["Line"]
 20 [-]: GETTABLE  R11 R7 K8    ; R11 := R7["MsgType"]
 21 [-]: GETTABLE  R12 R7 K9    ; R12 := R7["TimeStamp"]
 22 [-]: MOVE      R13 R0       ; R13 := R0
 23 [-]: MOVE      R14 R1       ; R14 := R1
 24 [-]: GETTABLE  R15 R7 K10   ; R15 := R7["sender"]
 25 [-]: CALL      R8 8 1       ; R8(R9,R10,R11,R12,R13,R14,R15)
 26 [-]: FORLOOP   R3 16        ; R3 += R5; if R3 <= R4 then begin PC := 16; R6 := R3 end
 27 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 28 [-]: SETTABLE  R0 K3 R8     ; R0["mCachedLines"] := R8
 29 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["mParent"]
 30 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["mChannelType"]
 31 [-]: SETTABLE  R8 K12 R9    ; R8["mMode"] := R9
 32 [-]: SELF      R8 R0 K14    ; R9 := R0; R8 := R0["0xC663748B"]
 33 [-]: CALL      R8 2 1       ; R8(R9)
 34 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["mParent"]
 35 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mTabMenu"]
 36 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8["0xD289D75"]
 37 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["mTabElement"]
 38 [-]: CALL      R8 3 1       ; R8(R9,R10)
 39 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["mParent"]
 40 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mVisualMode"]
 41 [-]: GETTABLE  R9 R0 K11    ; R9 := R0["mParent"]
 42 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["VISUAL_MODE_MENU_SIMPLE"]
 43 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 72
 44 [-]: JMP       72           ; PC := 72
 45 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["mParent"]
 46 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mVisualMode"]
 47 [-]: GETTABLE  R9 R0 K11    ; R9 := R0["mParent"]
 48 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 49 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 72
 50 [-]: JMP       72           ; PC := 72
 51 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["mIsChatEnabled"]
 52 [-]: TEST      R8 0         ; if not R8 then PC := 72
 53 [-]: JMP       72           ; PC := 72
 54 [-]: GETGLOBAL R8 K22       ; R8 := Engine
 55 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["0x1398DAFB"]
 56 [-]: CALL      R8 1 2       ; R8 := R8()
 57 [-]: TEST      R8 0         ; if not R8 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETUPVAL  R8 U0        ; R8 := U0
 60 [-]: CALL      R8 1 2       ; R8 := R8()
 61 [-]: TEST      R8 1         ; if R8 then PC := 72
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 64 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x880196A7"]
 65 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["mParent"]
 66 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mClipName"]
 67 [-]: LOADK     R11 K27      ; R11 := "SendMessageBar"
 68 [-]: LOADK     R12 K28      ; R12 := "_visible"
 69 [-]: MOVE      R13 R1       ; R13 := R1
 70 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 73 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x880196A7"]
 74 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["mParent"]
 75 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mClipName"]
 76 [-]: LOADK     R11 K27      ; R11 := "SendMessageBar"
 77 [-]: LOADK     R12 K28      ; R12 := "_visible"
 78 [-]: MOVE      R13 R0       ; R13 := R0
 79 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 80 [-]: GETGLOBAL R8 K22       ; R8 := Engine
 81 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["0x9490FE70"]
 82 [-]: CALL      R8 1 2       ; R8 := R8()
 83 [-]: TEST      R8 1         ; if R8 then PC := 109
 84 [-]: JMP       109          ; PC := 109
 85 [-]: GETGLOBAL R8 K22       ; R8 := Engine
 86 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["0x212137BC"]
 87 [-]: CALL      R8 1 2       ; R8 := R8()
 88 [-]: TEST      R8 1         ; if R8 then PC := 109
 89 [-]: JMP       109          ; PC := 109
 90 [-]: GETGLOBAL R8 K31       ; R8 := 0x400E7765
 91 [-]: GETUPVAL  R9 U1        ; R9 := U1
 92 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["mInputPanel"]
 93 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 94 [-]: TEST      R8 1         ; if R8 then PC := 109
 95 [-]: JMP       109          ; PC := 109
 96 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 97 [-]: SELF      R8 R8 K33    ; R9 := R8; R8 := R8["0x6B7B470B"]
 98 [-]: GETUPVAL  R10 U1       ; R10 := U1
 99 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["mInputPanel"]
100 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["mClipPath"]
101 [-]: LOADK     R11 K28      ; R11 := "_visible"
102 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
103 [-]: EQ        0 R8 K35     ; if R8 ~= "true" then PC := 109
104 [-]: JMP       109          ; PC := 109
105 [-]: GETUPVAL  R8 U1        ; R8 := U1
106 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mInputPanel"]
107 [-]: SELF      R8 R8 K36    ; R9 := R8; R8 := R8["0xFEE41852"]
108 [-]: CALL      R8 2 1       ; R8(R9)
109 [-]: SELF      R8 R0 K37    ; R9 := R0; R8 := R0["0x81219848"]
110 [-]: MOVE      R10 R1       ; R10 := R1
111 [-]: CALL      R8 3 1       ; R8(R9,R10)
112 [-]: RETURN    R0 1         ; return 


; Function #97.17:
;
; Name:            
; Defined at line: 5176
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R2 2 0       ; R2 := {}
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mLineLog"]
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mCachedLines"]
  4 [-]: SETLIST   R2 2 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 2
  5 [-]: LOADK     R3 K2        ; R3 := 1
  6 [-]: LEN       R4 R2        ; R4 := # R2
  7 [-]: LOADK     R5 K2        ; R5 := 1
  8 [-]: FORPREP   R3 33        ; R3 -= R5; PC := 33
  9 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 10 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 33
 11 [-]: JMP       33           ; PC := 33
 12 [-]: LOADK     R7 K2        ; R7 := 1
 13 [-]: GETTABLE  R8 R2 R6     ; R8 := R2[R6]
 14 [-]: LEN       R9 R8        ; R9 := # R8
 15 [-]: LE        0 R7 R9      ; if R7 > R9 then PC := 33
 16 [-]: JMP       33           ; PC := 33
 17 [-]: GETTABLE  R9 R8 R7     ; R9 := R8[R7]
 18 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["sender"]
 19 [-]: EQ        1 R9 K3      ; if R9 == nil then PC := 31
 20 [-]: JMP       31           ; PC := 31
 21 [-]: GETTABLE  R9 R8 R7     ; R9 := R8[R7]
 22 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["sender"]
 23 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETGLOBAL R9 K5        ; R9 := table
 26 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0xCDB1FD5E"]
 27 [-]: MOVE      R10 R8       ; R10 := R8
 28 [-]: MOVE      R11 R7       ; R11 := R7
 29 [-]: CALL      R9 3 1       ; R9(R10,R11)
 30 [-]: JMP       14           ; PC := 14
 31 [-]: ADD       R7 R7 K2     ; R7 := R7 + 1
 32 [-]: JMP       14           ; PC := 14
 33 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 34 [-]: SELF      R9 R0 K7     ; R10 := R0; R9 := R0["0x3037CE7E"]
 35 [-]: CALL      R9 2 1       ; R9(R10)
 36 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mIsActive"]
 37 [-]: TEST      R9 0         ; if not R9 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: SELF      R9 R0 K9     ; R10 := R0; R9 := R0["0xEEFE2F88"]
 40 [-]: CALL      R9 2 1       ; R9(R10)
 41 [-]: RETURN    R0 1         ; return 


; Function #97.18:
;
; Name:            
; Defined at line: 5199
; #Upvalues:       6
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mIsChatEnabled"]
  2 [-]: TEST      R7 0         ; if not R7 then PC := 16
  3 [-]: JMP       16           ; PC := 16
  4 [-]: GETGLOBAL R7 K1        ; R7 := Engine
  5 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["0x1398DAFB"]
  6 [-]: CALL      R7 1 2       ; R7 := R7()
  7 [-]: TEST      R7 0         ; if not R7 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: CALL      R7 1 2       ; R7 := R7()
 11 [-]: TEST      R7 0         ; if not R7 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["MESSAGE_TYPE_BROADCAST"]
 14 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["MESSAGE_TYPE_INVALID"]
 20 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["MESSAGE_TYPE_JOIN_CHANNEL"]
 21 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["MESSAGE_TYPE_LEAVE_CHANNEL"]
 24 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: GETUPVAL  R7 U1        ; R7 := U1
 28 [-]: TEST      R7 0         ; if not R7 then PC := 105
 29 [-]: JMP       105          ; PC := 105
 30 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["MESSAGE_TYPE_BROADCAST"]
 31 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 105
 32 [-]: JMP       105          ; PC := 105
 33 [-]: GETGLOBAL R7 K8        ; R7 := string
 34 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xDE44F664"]
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: LOADK     R9 K10       ; R9 := ":"
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: LOADK     R8 K11       ; R8 := ""
 39 [-]: TEST      R7 0         ; if not R7 then PC := 105
 40 [-]: JMP       105          ; PC := 105
 41 [-]: GETGLOBAL R9 K8        ; R9 := string
 42 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["0xC6772A8A"]
 43 [-]: MOVE      R10 R1       ; R10 := R1
 44 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 45 [-]: LT        0 R7 R9      ; if R7 >= R9 then PC := 105
 46 [-]: JMP       105          ; PC := 105
 47 [-]: GETGLOBAL R9 K8        ; R9 := string
 48 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0x7B782033"]
 49 [-]: MOVE      R10 R1       ; R10 := R1
 50 [-]: LOADK     R11 K14      ; R11 := 0
 51 [-]: MOVE      R12 R7       ; R12 := R7
 52 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 53 [-]: MOVE      R8 R9        ; R8 := R9
 54 [-]: GETGLOBAL R9 K8        ; R9 := string
 55 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0x7B782033"]
 56 [-]: MOVE      R10 R1       ; R10 := R1
 57 [-]: ADD       R11 R7 K15   ; R11 := R7 + 1
 58 [-]: GETGLOBAL R12 K8       ; R12 := string
 59 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["0xC6772A8A"]
 60 [-]: MOVE      R13 R1       ; R13 := R1
 61 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 62 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 63 [-]: MOVE      R1 R9        ; R1 := R9
 64 [-]: SELF      R9 R1 K9     ; R10 := R1; R9 := R1["0xDE44F664"]
 65 [-]: LOADK     R11 K16      ; R11 := "%[.-%-.-:.*%]"
 66 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 67 [-]: TEST      R9 0         ; if not R9 then PC := 96
 68 [-]: JMP       96           ; PC := 96
 69 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 70 [-]: LOADK     R10 K14      ; R10 := 0
 71 [-]: GETGLOBAL R11 K8       ; R11 := string
 72 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0x633C4246"]
 73 [-]: MOVE      R12 R1       ; R12 := R1
 74 [-]: LOADK     R13 K18      ; R13 := "(%[.-%-.-:)(.*)(%])"
 75 [-]: CLOSURE   R14 0        ; R14 := closure(Function #97.18.1)
 76 [-]: MOVE      R0 R10       ; R0 := R10
 77 [-]: MOVE      R0 R9        ; R0 := R9
 78 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 79 [-]: MOVE      R1 R11       ; R1 := R11
 80 [-]: GETGLOBAL R11 K19      ; R11 := 0xF5BEE61A
 81 [-]: MOVE      R12 R1       ; R12 := R1
 82 [-]: GETGLOBAL R13 K20      ; R13 := Script
 83 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["TSC_CHAT"]
 84 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 85 [-]: MOVE      R1 R11       ; R1 := R11
 86 [-]: GETGLOBAL R11 K8       ; R11 := string
 87 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0x633C4246"]
 88 [-]: MOVE      R12 R1       ; R12 := R1
 89 [-]: LOADK     R13 K22      ; R13 := "%[REP%d-%]"
 90 [-]: CLOSURE   R14 1        ; R14 := closure(Function #97.18.2)
 91 [-]: MOVE      R0 R9        ; R0 := R9
 92 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 93 [-]: MOVE      R1 R11       ; R1 := R11
 94 [-]: CLOSE     R9           ; SAVE R9,...
 95 [-]: JMP       102          ; PC := 102
 96 [-]: GETGLOBAL R9 K19       ; R9 := 0xF5BEE61A
 97 [-]: MOVE      R10 R1       ; R10 := R1
 98 [-]: GETGLOBAL R11 K20      ; R11 := Script
 99 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["TSC_CHAT"]
100 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
101 [-]: MOVE      R1 R9        ; R1 := R9
102 [-]: MOVE      R9 R8        ; R9 := R8
103 [-]: MOVE      R10 R1       ; R10 := R1
104 [-]: CONCAT    R1 R9 R10    ; R1 := R9 .. R10
105 [-]: TEST      R5 1         ; if R5 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: SETTABLE  R0 K23 K24   ; R0["mCanFlash"] := "0x1"
108 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mIsActive"]
109 [-]: TEST      R9 0         ; if not R9 then PC := 117
110 [-]: JMP       117          ; PC := 117
111 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["mParent"]
112 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["mVisualMode"]
113 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["mParent"]
114 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["VISUAL_MODE_MENU_SIMPLE"]
115 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 180
116 [-]: JMP       180          ; PC := 180
117 [-]: GETTABLE  R9 R0 K29    ; R9 := R0["MESSAGE_TYPE_SYSTEM"]
118 [-]: EQ        1 R2 R9      ; if R2 == R9 then PC := 180
119 [-]: JMP       180          ; PC := 180
120 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["MESSAGE_TYPE_BROADCAST"]
121 [-]: EQ        1 R2 R9      ; if R2 == R9 then PC := 180
122 [-]: JMP       180          ; PC := 180
123 [-]: GETGLOBAL R9 K30       ; R9 := 0x400E7765
124 [-]: GETTABLE  R10 R0 K31   ; R10 := R0["mTabElement"]
125 [-]: CALL      R9 2 2       ; R9 := R9(R10)
126 [-]: TEST      R9 1         ; if R9 then PC := 180
127 [-]: JMP       180          ; PC := 180
128 [-]: GETTABLE  R9 R0 K32    ; R9 := R0["mIsFlashingEnabled"]
129 [-]: TEST      R9 0         ; if not R9 then PC := 136
130 [-]: JMP       136          ; PC := 136
131 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["mParent"]
132 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["mTabMenu"]
133 [-]: SELF      R9 R9 K34    ; R10 := R9; R9 := R9["0x8D05C017"]
134 [-]: GETTABLE  R11 R0 K31   ; R11 := R0["mTabElement"]
135 [-]: CALL      R9 3 1       ; R9(R10,R11)
136 [-]: GETTABLE  R9 R0 K35    ; R9 := R0["MESSAGE_TYPE_FRIEND"]
137 [-]: EQ        1 R2 R9      ; if R2 == R9 then PC := 180
138 [-]: JMP       180          ; PC := 180
139 [-]: GETGLOBAL R9 K8        ; R9 := string
140 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["0xBDD0D625"]
141 [-]: MOVE      R10 R1       ; R10 := R1
142 [-]: CALL      R9 2 2       ; R9 := R9(R10)
143 [-]: GETGLOBAL R10 K8       ; R10 := string
144 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["0xDE44F664"]
145 [-]: MOVE      R11 R9       ; R11 := R9
146 [-]: GETTABLE  R12 R0 K26   ; R12 := R0["mParent"]
147 [-]: GETTABLE  R12 R12 K37  ; R12 := R12["mSearchUserName"]
148 [-]: LOADK     R13 K14      ; R13 := 0
149 [-]: MOVE      R14 R1       ; R14 := R1
150 [-]: CALL      R10 5 3      ; R10,R11 := R10(R11,R12,R13,R14)
151 [-]: EQ        1 R10 K4     ; if R10 == nil then PC := 180
152 [-]: JMP       180          ; PC := 180
153 [-]: GETGLOBAL R12 K8       ; R12 := string
154 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["0xDE44F664"]
155 [-]: MOVE      R13 R9       ; R13 := R9
156 [-]: LOADK     R14 K38      ; R14 := "^[^%s%p]"
157 [-]: ADD       R15 R11 K15  ; R15 := R11 + 1
158 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
159 [-]: EQ        0 R12 K4     ; if R12 ~= nil then PC := 180
160 [-]: JMP       180          ; PC := 180
161 [-]: GETUPVAL  R12 U2       ; R12 := U2
162 [-]: TEST      R12 1        ; if R12 then PC := 175
163 [-]: JMP       175          ; PC := 175
164 [-]: GETGLOBAL R12 K30      ; R12 := 0x400E7765
165 [-]: GETGLOBAL R13 K39      ; R13 := _G
166 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["UISound_ChatDM"]
167 [-]: CALL      R12 2 2      ; R12 := R12(R13)
168 [-]: TEST      R12 1        ; if R12 then PC := 175
169 [-]: JMP       175          ; PC := 175
170 [-]: GETUPVAL  R12 U3       ; R12 := U3
171 [-]: GETTABLE  R12 R12 K41  ; R12 := R12["0x25992394"]
172 [-]: GETGLOBAL R13 K39      ; R13 := _G
173 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["UISound_ChatDM"]
174 [-]: CALL      R12 2 1      ; R12(R13)
175 [-]: GETTABLE  R12 R0 K26   ; R12 := R0["mParent"]
176 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["mTabMenu"]
177 [-]: SELF      R12 R12 K42  ; R13 := R12; R12 := R12["0xD744AB44"]
178 [-]: GETTABLE  R14 R0 K31   ; R14 := R0["mTabElement"]
179 [-]: CALL      R12 3 1      ; R12(R13,R14)
180 [-]: GETTABLE  R12 R0 K25   ; R12 := R0["mIsActive"]
181 [-]: TEST      R12 1        ; if R12 then PC := 195
182 [-]: JMP       195          ; PC := 195
183 [-]: NEWTABLE  R12 0 4      ; R12 := {}
184 [-]: SETTABLE  R12 K43 R1   ; R12["Line"] := R1
185 [-]: SETTABLE  R12 K44 R2   ; R12["MsgType"] := R2
186 [-]: SETTABLE  R12 K45 R3   ; R12["TimeStamp"] := R3
187 [-]: SETTABLE  R12 K46 R6   ; R12["sender"] := R6
188 [-]: GETTABLE  R13 R0 K47   ; R13 := R0["mCachedLines"]
189 [-]: GETTABLE  R14 R0 K47   ; R14 := R0["mCachedLines"]
190 [-]: LEN       R14 R14      ; R14 := # R14
191 [-]: ADD       R14 R14 K15  ; R14 := R14 + 1
192 [-]: SETTABLE  R13 R14 R12  ; R13[R14] := R12
193 [-]: RETURN    R0 1         ; return 
194 [-]: JMP       200          ; PC := 200
195 [-]: TEST      R5 1         ; if R5 then PC := 200
196 [-]: JMP       200          ; PC := 200
197 [-]: GETTABLE  R13 R0 K26   ; R13 := R0["mParent"]
198 [-]: SELF      R13 R13 K48  ; R14 := R13; R13 := R13["0x2240369"]
199 [-]: CALL      R13 2 1      ; R13(R14)
200 [-]: GETTABLE  R13 R0 K49   ; R13 := R0["mLineLog"]
201 [-]: EQ        0 R13 K4     ; if R13 ~= nil then PC := 205
202 [-]: JMP       205          ; PC := 205
203 [-]: NEWTABLE  R13 0 0      ; R13 := {}
204 [-]: SETTABLE  R0 K49 R13   ; R0["mLineLog"] := R13
205 [-]: GETTABLE  R13 R0 K49   ; R13 := R0["mLineLog"]
206 [-]: LEN       R13 R13      ; R13 := # R13
207 [-]: GETTABLE  R14 R0 K50   ; R14 := R0["mMaxChatHistory"]
208 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 216
209 [-]: JMP       216          ; PC := 216
210 [-]: GETGLOBAL R13 K51      ; R13 := table
211 [-]: GETTABLE  R13 R13 K52  ; R13 := R13["0xCDB1FD5E"]
212 [-]: GETTABLE  R14 R0 K49   ; R14 := R0["mLineLog"]
213 [-]: LOADK     R15 K15      ; R15 := 1
214 [-]: CALL      R13 3 1      ; R13(R14,R15)
215 [-]: JMP       205          ; PC := 205
216 [-]: GETTABLE  R13 R0 K49   ; R13 := R0["mLineLog"]
217 [-]: LEN       R13 R13      ; R13 := # R13
218 [-]: ADD       R13 R13 K15  ; R13 := R13 + 1
219 [-]: GETTABLE  R14 R0 K49   ; R14 := R0["mLineLog"]
220 [-]: NEWTABLE  R15 0 5      ; R15 := {}
221 [-]: SETTABLE  R15 K53 R1   ; R15["text"] := R1
222 [-]: SETTABLE  R15 K54 R2   ; R15["messageType"] := R2
223 [-]: SETTABLE  R15 K55 R3   ; R15["timeStamp"] := R3
224 [-]: SETTABLE  R15 K46 R6   ; R15["sender"] := R6
225 [-]: NEWTABLE  R16 0 0      ; R16 := {}
226 [-]: SETTABLE  R15 K56 R16  ; R15["hyperLinks"] := R16
227 [-]: SETTABLE  R14 R13 R15  ; R14[R13] := R15
228 [-]: GETUPVAL  R14 U3       ; R14 := U3
229 [-]: GETTABLE  R14 R14 K57  ; R14 := R14["0xF81722A2"]
230 [-]: GETUPVAL  R15 U4       ; R15 := U4
231 [-]: GETTABLE  R15 R15 K58  ; R15 := R15["Enabled"]
232 [-]: GETGLOBAL R16 K59      ; R16 := mMovie
233 [-]: SELF      R16 R16 K60  ; R17 := R16; R16 := R16["0x49467D4"]
234 [-]: MOVE      R18 R1       ; R18 := R1
235 [-]: MOVE      R19 R1       ; R19 := R1
236 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
237 [-]: MOVE      R17 R1       ; R17 := R1
238 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
239 [-]: MOVE      R1 R14       ; R1 := R14
240 [-]: GETTABLE  R14 R0 K26   ; R14 := R0["mParent"]
241 [-]: GETTABLE  R14 R14 K61  ; R14 := R14["mShowTimeStamps"]
242 [-]: EQ        1 R14 K4     ; if R14 == nil then PC := 251
243 [-]: JMP       251          ; PC := 251
244 [-]: GETTABLE  R14 R0 K26   ; R14 := R0["mParent"]
245 [-]: GETTABLE  R14 R14 K61  ; R14 := R14["mShowTimeStamps"]
246 [-]: TEST      R14 0        ; if not R14 then PC := 251
247 [-]: JMP       251          ; PC := 251
248 [-]: MOVE      R14 R3       ; R14 := R3
249 [-]: MOVE      R15 R1       ; R15 := R1
250 [-]: CONCAT    R1 R14 R15   ; R1 := R14 .. R15
251 [-]: SELF      R14 R0 K62   ; R15 := R0; R14 := R0["0xD969B3C2"]
252 [-]: MOVE      R16 R1       ; R16 := R1
253 [-]: MOVE      R17 R2       ; R17 := R2
254 [-]: MOVE      R18 R6       ; R18 := R6
255 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
256 [-]: GETTABLE  R15 R0 K63   ; R15 := R0["mChatHistory"]
257 [-]: LEN       R15 R15      ; R15 := # R15
258 [-]: LEN       R16 R14      ; R16 := # R14
259 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
260 [-]: GETTABLE  R16 R0 K50   ; R16 := R0["mMaxChatHistory"]
261 [-]: LT        0 R16 R15    ; if R16 >= R15 then PC := 269
262 [-]: JMP       269          ; PC := 269
263 [-]: GETGLOBAL R15 K51      ; R15 := table
264 [-]: GETTABLE  R15 R15 K52  ; R15 := R15["0xCDB1FD5E"]
265 [-]: GETTABLE  R16 R0 K63   ; R16 := R0["mChatHistory"]
266 [-]: LOADK     R17 K15      ; R17 := 1
267 [-]: CALL      R15 3 1      ; R15(R16,R17)
268 [-]: JMP       256          ; PC := 256
269 [-]: LOADK     R15 K15      ; R15 := 1
270 [-]: LEN       R16 R14      ; R16 := # R14
271 [-]: LOADK     R17 K15      ; R17 := 1
272 [-]: FORPREP   R15 298      ; R15 -= R17; PC := 298
273 [-]: GETTABLE  R19 R14 R18  ; R19 := R14[R18]
274 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["text"]
275 [-]: EQ        1 R19 K11    ; if R19 == "" then PC := 298
276 [-]: JMP       298          ; PC := 298
277 [-]: GETGLOBAL R19 K51      ; R19 := table
278 [-]: GETTABLE  R19 R19 K64  ; R19 := R19["0xE6450C9D"]
279 [-]: GETTABLE  R20 R0 K63   ; R20 := R0["mChatHistory"]
280 [-]: GETTABLE  R21 R14 R18  ; R21 := R14[R18]
281 [-]: CALL      R19 3 1      ; R19(R20,R21)
282 [-]: LOADK     R19 K15      ; R19 := 1
283 [-]: GETTABLE  R20 R14 R18  ; R20 := R14[R18]
284 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["hyperLinks"]
285 [-]: LEN       R20 R20      ; R20 := # R20
286 [-]: LOADK     R21 K15      ; R21 := 1
287 [-]: FORPREP   R19 297      ; R19 -= R21; PC := 297
288 [-]: GETGLOBAL R23 K51      ; R23 := table
289 [-]: GETTABLE  R23 R23 K64  ; R23 := R23["0xE6450C9D"]
290 [-]: GETTABLE  R24 R0 K49   ; R24 := R0["mLineLog"]
291 [-]: GETTABLE  R24 R24 R13  ; R24 := R24[R13]
292 [-]: GETTABLE  R24 R24 K56  ; R24 := R24["hyperLinks"]
293 [-]: GETTABLE  R25 R14 R18  ; R25 := R14[R18]
294 [-]: GETTABLE  R25 R25 K56  ; R25 := R25["hyperLinks"]
295 [-]: GETTABLE  R25 R25 R22  ; R25 := R25[R22]
296 [-]: CALL      R23 3 1      ; R23(R24,R25)
297 [-]: FORLOOP   R19 288      ; R19 += R21; if R19 <= R20 then begin PC := 288; R22 := R19 end
298 [-]: FORLOOP   R15 273      ; R15 += R17; if R15 <= R16 then begin PC := 273; R18 := R15 end
299 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 305
300 [-]: JMP       305          ; PC := 305
301 [-]: EQ        1 R6 K11     ; if R6 == "" then PC := 305
302 [-]: JMP       305          ; PC := 305
303 [-]: GETUPVAL  R23 U5       ; R23 := U5
304 [-]: SETTABLE  R23 R6 K24   ; R23[R6] := "0x1"
305 [-]: GETTABLE  R23 R0 K65   ; R23 := R0["mHasHyperlink"]
306 [-]: TEST      R23 1        ; if R23 then PC := 316
307 [-]: JMP       316          ; PC := 316
308 [-]: GETTABLE  R23 R0 K49   ; R23 := R0["mLineLog"]
309 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
310 [-]: GETTABLE  R23 R23 K56  ; R23 := R23["hyperLinks"]
311 [-]: LEN       R23 R23      ; R23 := # R23
312 [-]: LT        1 K14 R23    ; if 0 < R23 then PC := 315
313 [-]: JMP       315          ; PC := 315
314 [-]: MOVE      R23 R0       ; R23 := R0
315 [-]: MOVE      R23 R1       ; R23 := R1
316 [-]: SETTABLE  R0 K65 R23   ; R0["mHasHyperlink"] := R23
317 [-]: GETTABLE  R23 R0 K63   ; R23 := R0["mChatHistory"]
318 [-]: LEN       R23 R23      ; R23 := # R23
319 [-]: GETTABLE  R24 R0 K66   ; R24 := R0["mMaxVisibleChatLines"]
320 [-]: DIV       R24 R24 R23  ; R24 := R24 / R23
321 [-]: GETTABLE  R25 R0 K67   ; R25 := R0["mTextScroll"]
322 [-]: GETTABLE  R26 R0 K66   ; R26 := R0["mMaxVisibleChatLines"]
323 [-]: SUB       R26 R23 R26  ; R26 := R23 - R26
324 [-]: DIV       R26 K15 R26  ; R26 := 1 / R26
325 [-]: SETTABLE  R25 K68 R26  ; R25["mScrollStep"] := R26
326 [-]: GETTABLE  R25 R0 K67   ; R25 := R0["mTextScroll"]
327 [-]: SELF      R25 R25 K69  ; R26 := R25; R25 := R25["0xEB312755"]
328 [-]: MOVE      R27 R24      ; R27 := R24
329 [-]: MOVE      R28 R1       ; R28 := R1
330 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
331 [-]: GETTABLE  R25 R0 K70   ; R25 := R0["mScrollBack"]
332 [-]: LT        0 K14 R25    ; if 0 >= R25 then PC := 359
333 [-]: JMP       359          ; PC := 359
334 [-]: GETGLOBAL R25 K71      ; R25 := 0x6374FD98
335 [-]: GETTABLE  R26 R0 K70   ; R26 := R0["mScrollBack"]
336 [-]: LEN       R27 R14      ; R27 := # R14
337 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
338 [-]: LOADK     R27 K14      ; R27 := 0
339 [-]: GETTABLE  R28 R0 K50   ; R28 := R0["mMaxChatHistory"]
340 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
341 [-]: SETTABLE  R0 K70 R25   ; R0["mScrollBack"] := R25
342 [-]: GETTABLE  R25 R0 K63   ; R25 := R0["mChatHistory"]
343 [-]: LEN       R25 R25      ; R25 := # R25
344 [-]: GETTABLE  R26 R0 K70   ; R26 := R0["mScrollBack"]
345 [-]: GETTABLE  R27 R0 K66   ; R27 := R0["mMaxVisibleChatLines"]
346 [-]: SUB       R27 R25 R27  ; R27 := R25 - R27
347 [-]: DIV       R26 R26 R27  ; R26 := R26 / R27
348 [-]: GETTABLE  R27 R0 K67   ; R27 := R0["mTextScroll"]
349 [-]: SELF      R27 R27 K72  ; R28 := R27; R27 := R27["0x1B721C34"]
350 [-]: SUB       R29 K15 R26  ; R29 := 1 - R26
351 [-]: LOADNIL   R30 R30      ; R30 := nil
352 [-]: GETTABLE  R31 R0 K50   ; R31 := R0["mMaxChatHistory"]
353 [-]: EQ        1 R25 R31    ; if R25 == R31 then PC := 356
354 [-]: JMP       356          ; PC := 356
355 [-]: MOVE      R31 R0       ; R31 := R0
356 [-]: MOVE      R31 R1       ; R31 := R1
357 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
358 [-]: JMP       363          ; PC := 363
359 [-]: GETTABLE  R27 R0 K67   ; R27 := R0["mTextScroll"]
360 [-]: SELF      R27 R27 K72  ; R28 := R27; R27 := R27["0x1B721C34"]
361 [-]: LOADK     R29 K15      ; R29 := 1
362 [-]: CALL      R27 3 1      ; R27(R28,R29)
363 [-]: TEST      R4 1         ; if R4 then PC := 367
364 [-]: JMP       367          ; PC := 367
365 [-]: SELF      R27 R0 K73   ; R28 := R0; R27 := R0["0xEEFE2F88"]
366 [-]: CALL      R27 2 1      ; R27(R28)
367 [-]: RETURN    R0 1         ; return 


; Function #97.18.1:
;
; Name:            
; Defined at line: 5227
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: ADD       R3 R3 K0     ; R3 := R3 + 1
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R3 K1        ; R3 := "[REP"
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: LOADK     R5 K2        ; R5 := "]"
  7 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: SETTABLE  R4 R3 R1     ; R4[R3] := R1
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: MOVE      R6 R2        ; R6 := R2
 13 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 14 [-]: RETURN    R4 2         ; return R4
 15 [-]: RETURN    R0 1         ; return 


; Function #97.18.2:
;
; Name:            
; Defined at line: 5234
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #97.19:
;
; Name:            
; Defined at line: 5334
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0x4313BA6"]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["MESSAGE_TYPE_SYSTEM"]
  4 [-]: LOADK     R7 K2        ; R7 := ""
  5 [-]: MOVE      R8 R0        ; R8 := R0
  6 [-]: MOVE      R9 R2        ; R9 := R2
  7 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
  8 [-]: RETURN    R0 1         ; return 


; Function #97.20:
;
; Name:            
; Defined at line: 5338
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x4313BA6"]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["MESSAGE_TYPE_NOTIFICATION"]
  4 [-]: LOADK     R6 K2        ; R6 := ""
  5 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  6 [-]: RETURN    R0 1         ; return 


; Function #97.21:
;
; Name:            
; Defined at line: 5342
; #Upvalues:       5
; #Parameters:     8
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mIsChatEnabled"]
  2 [-]: TEST      R8 1         ; if R8 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: LOADNIL   R8 R8        ; R8 := nil
  6 [-]: LOADK     R9 K1        ; R9 := ""
  7 [-]: LOADK     R10 K1       ; R10 := ""
  8 [-]: GETGLOBAL R11 K2       ; R11 := string
  9 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["0xDE44F664"]
 10 [-]: MOVE      R12 R2       ; R12 := R2
 11 [-]: LOADK     R13 K4       ; R13 := "#"
 12 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 13 [-]: EQ        1 R11 K5     ; if R11 == nil then PC := 203
 14 [-]: JMP       203          ; PC := 203
 15 [-]: LOADK     R11 K4       ; R11 := "#"
 16 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["mChannelName"]
 17 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 18 [-]: EQ        1 R2 R11     ; if R2 == R11 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: EQ        0 R1 K1      ; if R1 ~= "" then PC := 64
 22 [-]: JMP       64           ; PC := 64
 23 [-]: EQ        1 R3 K1      ; if R3 == "" then PC := 45
 24 [-]: JMP       45           ; PC := 45
 25 [-]: GETGLOBAL R11 K2       ; R11 := string
 26 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x7B782033"]
 27 [-]: MOVE      R12 R2       ; R12 := R2
 28 [-]: LOADK     R13 K8       ; R13 := 2
 29 [-]: LOADK     R14 K8       ; R14 := 2
 30 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 31 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
 32 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12["0xE61632A5"]
 33 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 34 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R11 K11      ; R11 := mMovie
 37 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 38 [-]: MOVE      R13 R3       ; R13 := R3
 39 [-]: MOVE      R14 R0       ; R14 := R0
 40 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 41 [-]: MOVE      R3 R11       ; R3 := R11
 42 [-]: MOVE      R9 R3        ; R9 := R3
 43 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["MESSAGE_TYPE_CLAN"]
 44 [-]: JMP       214          ; PC := 214
 45 [-]: EQ        1 R3 K1      ; if R3 == "" then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: GETGLOBAL R11 K2       ; R11 := string
 48 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x7B782033"]
 49 [-]: MOVE      R12 R3       ; R12 := R3
 50 [-]: LOADK     R13 K14      ; R13 := 1
 51 [-]: LOADK     R14 K14      ; R14 := 1
 52 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 53 [-]: EQ        0 R11 K15    ; if R11 ~= "/" then PC := 61
 54 [-]: JMP       61           ; PC := 61
 55 [-]: GETGLOBAL R11 K11      ; R11 := mMovie
 56 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 57 [-]: MOVE      R13 R3       ; R13 := R3
 58 [-]: MOVE      R14 R0       ; R14 := R0
 59 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 60 [-]: MOVE      R3 R11       ; R3 := R11
 61 [-]: MOVE      R9 R3        ; R9 := R3
 62 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["MESSAGE_TYPE_SYSTEM"]
 63 [-]: JMP       214          ; PC := 214
 64 [-]: GETGLOBAL R11 K2       ; R11 := string
 65 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x7B782033"]
 66 [-]: MOVE      R12 R2       ; R12 := R2
 67 [-]: LOADK     R13 K8       ; R13 := 2
 68 [-]: LOADK     R14 K8       ; R14 := 2
 69 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 70 [-]: GETGLOBAL R12 K17      ; R12 := Engine
 71 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["UT_STAFF"]
 72 [-]: LE        0 R12 R7     ; if R12 > R7 then PC := 96
 73 [-]: JMP       96           ; PC := 96
 74 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
 75 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12["0xE61632A5"]
 76 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 77 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 96
 78 [-]: JMP       96           ; PC := 96
 79 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
 80 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x414FA566"]
 81 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 82 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 96
 83 [-]: JMP       96           ; PC := 96
 84 [-]: GETUPVAL  R12 U0       ; R12 := U0
 85 [-]: GETUPVAL  R13 U1       ; R13 := U1
 86 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["UI_MODE_IN_DOJO"]
 87 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 94
 88 [-]: JMP       94           ; PC := 94
 89 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
 90 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12["0x1278933D"]
 91 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 92 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["MESSAGE_TYPE_STAFF"]
 95 [-]: JMP       186          ; PC := 186
 96 [-]: GETUPVAL  R12 U2       ; R12 := U2
 97 [-]: TEST      R12 0        ; if not R12 then PC := 125
 98 [-]: JMP       125          ; PC := 125
 99 [-]: GETGLOBAL R12 K17      ; R12 := Engine
100 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["UT_MODERATOR"]
101 [-]: LE        0 R12 R7     ; if R12 > R7 then PC := 125
102 [-]: JMP       125          ; PC := 125
103 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
104 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12["0xE61632A5"]
105 [-]: CALL      R12 2 2      ; R12 := R12(R13)
106 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 125
107 [-]: JMP       125          ; PC := 125
108 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
109 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x414FA566"]
110 [-]: CALL      R12 2 2      ; R12 := R12(R13)
111 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 125
112 [-]: JMP       125          ; PC := 125
113 [-]: GETUPVAL  R12 U0       ; R12 := U0
114 [-]: GETUPVAL  R13 U1       ; R13 := U1
115 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["UI_MODE_IN_DOJO"]
116 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
119 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12["0x1278933D"]
120 [-]: CALL      R12 2 2      ; R12 := R12(R13)
121 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 125
122 [-]: JMP       125          ; PC := 125
123 [-]: GETTABLE  R8 R0 K24    ; R8 := R0["MESSAGE_TYPE_CY_MOD"]
124 [-]: JMP       186          ; PC := 186
125 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
126 [-]: SELF      R12 R12 K25  ; R13 := R12; R12 := R12["0x24731BA8"]
127 [-]: CALL      R12 2 2      ; R12 := R12(R13)
128 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 132
129 [-]: JMP       132          ; PC := 132
130 [-]: GETTABLE  R8 R0 K26    ; R8 := R0["MESSAGE_TYPE_REGION"]
131 [-]: JMP       186          ; PC := 186
132 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
133 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12["0xE61632A5"]
134 [-]: CALL      R12 2 2      ; R12 := R12(R13)
135 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 139
136 [-]: JMP       139          ; PC := 139
137 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["MESSAGE_TYPE_CLAN"]
138 [-]: JMP       186          ; PC := 186
139 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
140 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12["0x960E8AD7"]
141 [-]: CALL      R12 2 2      ; R12 := R12(R13)
142 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 152
143 [-]: JMP       152          ; PC := 152
144 [-]: GETUPVAL  R12 U3       ; R12 := U3
145 [-]: MOVE      R13 R1       ; R13 := R1
146 [-]: CALL      R12 2 2      ; R12 := R12(R13)
147 [-]: TEST      R12 1        ; if R12 then PC := 150
148 [-]: JMP       150          ; PC := 150
149 [-]: RETURN    R0 1         ; return 
150 [-]: GETTABLE  R8 R0 K28    ; R8 := R0["MESSAGE_TYPE_SQUAD"]
151 [-]: JMP       186          ; PC := 186
152 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
153 [-]: SELF      R12 R12 K29  ; R13 := R12; R12 := R12["0x13EFEC25"]
154 [-]: CALL      R12 2 2      ; R12 := R12(R13)
155 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 159
156 [-]: JMP       159          ; PC := 159
157 [-]: GETTABLE  R8 R0 K30    ; R8 := R0["MESSAGE_TYPE_COUNCIL"]
158 [-]: JMP       186          ; PC := 186
159 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
160 [-]: SELF      R12 R12 K31  ; R13 := R12; R12 := R12["0x595A6A24"]
161 [-]: CALL      R12 2 2      ; R12 := R12(R13)
162 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 166
163 [-]: JMP       166          ; PC := 166
164 [-]: GETTABLE  R8 R0 K32    ; R8 := R0["MESSAGE_TYPE_RECRUITING"]
165 [-]: JMP       186          ; PC := 186
166 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
167 [-]: SELF      R12 R12 K33  ; R13 := R12; R12 := R12["0x4AF36D8B"]
168 [-]: CALL      R12 2 2      ; R12 := R12(R13)
169 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 173
170 [-]: JMP       173          ; PC := 173
171 [-]: GETTABLE  R8 R0 K34    ; R8 := R0["MESSAGE_TYPE_TRADE"]
172 [-]: JMP       186          ; PC := 186
173 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
174 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x414FA566"]
175 [-]: CALL      R12 2 2      ; R12 := R12(R13)
176 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 180
177 [-]: JMP       180          ; PC := 180
178 [-]: GETTABLE  R8 R0 K35    ; R8 := R0["MESSAGE_TYPE_ALLIANCE"]
179 [-]: JMP       186          ; PC := 186
180 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["mParent"]
181 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12["0x1278933D"]
182 [-]: CALL      R12 2 2      ; R12 := R12(R13)
183 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 186
184 [-]: JMP       186          ; PC := 186
185 [-]: GETTABLE  R8 R0 K36    ; R8 := R0["MESSAGE_TYPE_HUB"]
186 [-]: GETUPVAL  R12 U4       ; R12 := U4
187 [-]: MOVE      R13 R3       ; R13 := R3
188 [-]: CALL      R12 2 3      ; R12,R13 := R12(R13)
189 [-]: MOVE      R3 R13       ; R3 := R13
190 [-]: MOVE      R10 R12      ; R10 := R12
191 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
192 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x5DB0BD4"]
193 [-]: MOVE      R14 R10      ; R14 := R10
194 [-]: MOVE      R15 R1       ; R15 := R1
195 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
196 [-]: MOVE      R10 R12      ; R10 := R12
197 [-]: MOVE      R12 R10      ; R12 := R10
198 [-]: MOVE      R13 R1       ; R13 := R1
199 [-]: LOADK     R14 K37      ; R14 := ": "
200 [-]: MOVE      R15 R3       ; R15 := R3
201 [-]: CONCAT    R9 R12 R15   ; R9 := R12 .. R13 .. R14 .. R15
202 [-]: JMP       214          ; PC := 214
203 [-]: EQ        0 R1 K1      ; if R1 ~= "" then PC := 208
204 [-]: JMP       208          ; PC := 208
205 [-]: MOVE      R9 R3        ; R9 := R3
206 [-]: GETTABLE  R8 R0 K38    ; R8 := R0["MESSAGE_TYPE_BROADCAST"]
207 [-]: JMP       214          ; PC := 214
208 [-]: GETTABLE  R12 R0 K39   ; R12 := R0["mChannelType"]
209 [-]: GETTABLE  R13 R0 K9    ; R13 := R0["mParent"]
210 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["CHANNEL_PRIVATE_CHAT"]
211 [-]: LE        0 R13 R12    ; if R13 > R12 then PC := 214
212 [-]: JMP       214          ; PC := 214
213 [-]: RETURN    R0 1         ; return 
214 [-]: SELF      R12 R0 K41   ; R13 := R0; R12 := R0["0x4313BA6"]
215 [-]: MOVE      R14 R9       ; R14 := R9
216 [-]: MOVE      R15 R8       ; R15 := R8
217 [-]: MOVE      R16 R4       ; R16 := R4
218 [-]: MOVE      R17 R5       ; R17 := R5
219 [-]: MOVE      R18 R6       ; R18 := R6
220 [-]: MOVE      R19 R1       ; R19 := R1
221 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
222 [-]: RETURN    R0 1         ; return 


; Function #97.22:
;
; Name:            
; Defined at line: 5432
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["Resizing"] := "0x1"
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mParent"]
  3 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
  4 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8B082A0E"]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #97.23:
;
; Name:            
; Defined at line: 5437
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Resizing"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: SETTABLE  R0 K0 K1     ; R0["Resizing"] := "0x0"
  5 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x81219848"]
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 5447
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x27B1C973"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 5453
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xAC4AB24D"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 5459
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0xD1E7609B
  7 [-]: LOADK     R3 K2        ; R3 := ","
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: LOADK     R3 K3        ; R3 := ""
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: LEN       R5 R2        ; R5 := # R2
 13 [-]: EQ        0 R5 K4      ; if R5 ~= 2 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETTABLE  R3 R2 K5     ; R3 := R2[1]
 16 [-]: GETTABLE  R5 R2 K4     ; R5 := R2[2]
 17 [-]: EQ        1 R5 K6      ; if R5 == "true" then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: MOVE      R4 R1        ; R4 := R1
 21 [-]: GETUPVAL  R5 U0        ; R5 := U0
 22 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xD51B4477"]
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: MOVE      R8 R3        ; R8 := R3
 25 [-]: MOVE      R9 R4        ; R9 := R4
 26 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 27 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 5473
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 25
  5 [-]: JMP       25           ; PC := 25
  6 [-]: GETGLOBAL R2 K1        ; R2 := _G
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["StalkerMode"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: TEST      R1 0         ; if not R1 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETGLOBAL R2 K3        ; R2 := string
 13 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xDE44F664"]
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: LOADK     R4 K5        ; R4 := "Welcome, Tenno."
 16 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xA7D41027"]
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 25 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 5482
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF70CE43F"]
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 5489
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x36BA5F48"]
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: TEST      R1 1         ; if R1 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: LOADK     R1 K2        ; R1 := "#C"
 12 [-]: LOADK     R2 K3        ; R2 := "clanname"
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xDBE013EB"]
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 5497
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mGrid"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mGrid"]
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BC31182"]
 18 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 1       ; R1(R2,...)
 22 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 5502
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mGrid"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mGrid"]
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 18 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 1       ; R1(R2,...)
 22 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 5507
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mGrid"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mGrid"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 5514
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 45
 11 [-]: JMP       45           ; PC := 45
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: TEST      R1 1         ; if R1 then PC := 45
 14 [-]: JMP       45           ; PC := 45
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF61F409A"]
 18 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 22 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 1         ; if R2 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R2 K4        ; R2 := Engine
 28 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x9490FE70"]
 29 [-]: CALL      R2 1 2       ; R2 := R2()
 30 [-]: TEST      R2 1         ; if R2 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
 34 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xCEE14A30"]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 0         ; if not R2 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
 40 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x8ABD6CC8"]
 41 [-]: GETGLOBAL R4 K3        ; R4 := 0xF595ADDE
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 44 [-]: CALL      R2 0 1       ; R2(R3,...)
 45 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 5523
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 5529
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 72
  5 [-]: JMP       72           ; PC := 72
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 72
 11 [-]: JMP       72           ; PC := 72
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: TEST      R1 1         ; if R1 then PC := 72
 14 [-]: JMP       72           ; PC := 72
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xAC575C26"]
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x25992394"]
 20 [-]: GETGLOBAL R2 K4        ; R2 := _G
 21 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_ItemTipSection"]
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
 25 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xF61F409A"]
 26 [-]: GETGLOBAL R3 K7        ; R3 := 0xF595ADDE
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 29 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 30 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 72
 34 [-]: JMP       72           ; PC := 72
 35 [-]: GETGLOBAL R2 K8        ; R2 := Engine
 36 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x9490FE70"]
 37 [-]: CALL      R2 1 2       ; R2 := R2()
 38 [-]: TEST      R2 1         ; if R2 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
 42 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0xCEE14A30"]
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 0         ; if not R2 then PC := 72
 45 [-]: JMP       72           ; PC := 72
 46 [-]: GETUPVAL  R2 U0        ; R2 := U0
 47 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0xE2A2E3AC"]
 48 [-]: GETUPVAL  R4 U0        ; R4 := U0
 49 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mPanelList"]
 50 [-]: GETTABLE  R5 R1 K13    ; R5 := R1["ChannelName"]
 51 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 52 [-]: CALL      R2 3 1       ; R2(R3,R4)
 53 [-]: GETUPVAL  R2 U3        ; R2 := U3
 54 [-]: CALL      R2 1 2       ; R2 := R2()
 55 [-]: TEST      R2 0         ; if not R2 then PC := 72
 56 [-]: JMP       72           ; PC := 72
 57 [-]: GETUPVAL  R2 U4        ; R2 := U4
 58 [-]: MOVE      R3 R0        ; R3 := R0
 59 [-]: CALL      R2 2 1       ; R2(R3)
 60 [-]: GETGLOBAL R2 K8        ; R2 := Engine
 61 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x9490FE70"]
 62 [-]: CALL      R2 1 2       ; R2 := R2()
 63 [-]: TEST      R2 1         ; if R2 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R2 U0        ; R2 := U0
 66 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
 67 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x2176B11E"]
 68 [-]: GETGLOBAL R4 K7        ; R4 := 0xF595ADDE
 69 [-]: MOVE      R5 R0        ; R5 := R0
 70 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 71 [-]: CALL      R2 0 1       ; R2(R3,...)
 72 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 5546
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x63521C50"]
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 5553
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mVisualMode"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
  6 [-]: JMP       16           ; PC := 16
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xD1BD9D6"]
  9 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 10 [-]: LOADK     R3 K4        ; R3 := "Window.TabMenu.ExpandCallout"
 11 [-]: GETGLOBAL R4 K5        ; R4 := _G
 12 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["UIFx_ConsolePress"]
 13 [-]: LOADK     R5 K7        ; R5 := 6
 14 [-]: LOADK     R6 K8        ; R6 := 2
 15 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 16 [-]: GETGLOBAL R1 K9        ; R1 := Engine
 17 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x9490FE70"]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: GETGLOBAL R1 K11       ; R1 := _T
 22 [-]: SETTABLE  R1 K12 K13   ; R1["gToolTip"] := nil
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0xC4A34CB3"]
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["VISUAL_MODE_MENU_FULL"]
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 29 [-]: GETGLOBAL R1 K16       ; R1 := 0x400E7765
 30 [-]: GETGLOBAL R2 K11       ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["ForegroundMovie"]
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: TEST      R1 1         ; if R1 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R1 K11       ; R1 := _T
 36 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["ForegroundMovie"]
 37 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1["0x458F27A9"]
 38 [-]: LOADK     R3 K19       ; R3 := "TogglePlayTypeDropDown"
 39 [-]: LOADK     R4 K20       ; R4 := "false"
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 5571
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 5577
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 5581
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 5586
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.UserPanel.Panel.LocatorBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 100
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 5590
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.UserPanel.Panel.LocatorBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 50
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 5594
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 45
  3 [-]: JMP       45           ; PC := 45
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 1         ; if R0 then PC := 45
  9 [-]: JMP       45           ; PC := 45
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 45
 16 [-]: JMP       45           ; PC := 45
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
 19 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mIsExpanded"]
 20 [-]: TEST      R0 0         ; if not R0 then PC := 45
 21 [-]: JMP       45           ; PC := 45
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mUserListInterpolating"]
 25 [-]: TEST      R0 1         ; if R0 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R0 K5        ; R0 := Engine
 28 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x9490FE70"]
 29 [-]: CALL      R0 1 2       ; R0 := R0()
 30 [-]: TEST      R0 0         ; if not R0 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: GETUPVAL  R0 U2        ; R0 := U2
 33 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["0xD1BD9D6"]
 34 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 35 [-]: LOADK     R2 K9        ; R2 := "Window.UserPanel.Panel.LocatorBtn.Callout"
 36 [-]: GETGLOBAL R3 K10       ; R3 := _G
 37 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["UIFx_ConsolePress"]
 38 [-]: LOADK     R4 K12       ; R4 := 0
 39 [-]: LOADK     R5 K12       ; R5 := 0
 40 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 41 [-]: GETUPVAL  R0 U1        ; R0 := U1
 42 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
 43 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0x1783C901"]
 44 [-]: CALL      R0 2 1       ; R0(R1)
 45 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 5607
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 5612
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 28
  3 [-]: JMP       28           ; PC := 28
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserLocator"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 24 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 25 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mIsExpanded"]
 26 [-]: TEST      R1 1         ; if R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 31 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 32 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0xF595ADDE
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 36 [-]: CALL      R1 0 1       ; R1(R2,...)
 37 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5619
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 28
  3 [-]: JMP       28           ; PC := 28
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserLocator"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 24 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 25 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mIsExpanded"]
 26 [-]: TEST      R1 1         ; if R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 31 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 32 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x2176B11E"]
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0xF595ADDE
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 36 [-]: CALL      R1 0 1       ; R1(R2,...)
 37 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5626
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 28
  3 [-]: JMP       28           ; PC := 28
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserLocator"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 24 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 25 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mIsExpanded"]
 26 [-]: TEST      R1 1         ; if R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
 31 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
 32 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x3BC31182"]
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0xF595ADDE
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 36 [-]: CALL      R1 0 1       ; R1(R2,...)
 37 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5634
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3DD6A91C"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5642
; #Upvalues:       59
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: SETTABLE  R1 K0 K1     ; R1["VISUAL_MODE_INVALID"] := -1
  3 [-]: SETTABLE  R1 K2 K3     ; R1["VISUAL_MODE_MENU_FULL"] := 0
  4 [-]: SETTABLE  R1 K4 K5     ; R1["VISUAL_MODE_MENU_SIMPLE"] := 1
  5 [-]: SETTABLE  R1 K6 K7     ; R1["VISUAL_MODE_GAMEPLAY_SIMPLE"] := 2
  6 [-]: SETTABLE  R1 K8 K9     ; R1["VISUAL_MODE_GAMEPLAY_FULL"] := 3
  7 [-]: SETTABLE  R1 K10 K3    ; R1["CHANNEL_EXIT"] := 0
  8 [-]: SETTABLE  R1 K11 K5    ; R1["CHANNEL_ENTER"] := 1
  9 [-]: SETTABLE  R1 K12 K3    ; R1["CHANNEL_SESSION"] := 0
 10 [-]: SETTABLE  R1 K13 K5    ; R1["CHANNEL_HUB"] := 1
 11 [-]: SETTABLE  R1 K14 K7    ; R1["CHANNEL_CLAN"] := 2
 12 [-]: SETTABLE  R1 K15 K9    ; R1["CHANNEL_ALLIANCE"] := 3
 13 [-]: SETTABLE  R1 K16 K17   ; R1["CHANNEL_COUNCIL"] := 4
 14 [-]: SETTABLE  R1 K18 K19   ; R1["CHANNEL_GLOBAL"] := 5
 15 [-]: SETTABLE  R1 K20 K21   ; R1["CHANNEL_QA"] := 6
 16 [-]: SETTABLE  R1 K22 K23   ; R1["CHANNEL_RECRUITING"] := 7
 17 [-]: SETTABLE  R1 K24 K25   ; R1["CHANNEL_TRADE"] := 8
 18 [-]: SETTABLE  R1 K26 K27   ; R1["CHANNEL_PRIVATE_CHAT"] := 9
 19 [-]: SETTABLE  R1 K28 R0    ; R1["mClipName"] := R0
 20 [-]: SETTABLE  R1 K29 K30   ; R1["mUser"] := ""
 21 [-]: SETTABLE  R1 K31 K3    ; R1["mMouseX"] := 0
 22 [-]: SETTABLE  R1 K32 K3    ; R1["mMouseY"] := 0
 23 [-]: SETTABLE  R1 K33 K34   ; R1["mMouseIsDragging"] := "0x0"
 24 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 25 [-]: SETTABLE  R1 K35 R2    ; R1["mWindow"] := R2
 26 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 27 [-]: SETTABLE  R1 K36 R2    ; R1["mChatPanelWindow"] := R2
 28 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 29 [-]: SETTABLE  R1 K37 R2    ; R1["mWindowTitle"] := R2
 30 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 31 [-]: SETTABLE  R1 K38 R2    ; R1["mWindowStatus"] := R2
 32 [-]: SETTABLE  R1 K39 K40   ; R1["mCachedGuildId"] := nil
 33 [-]: SETTABLE  R1 K41 K30   ; R1["mCachedGuildMotd"] := ""
 34 [-]: SETTABLE  R1 K42 K40   ; R1["mCachedAllianceId"] := nil
 35 [-]: SETTABLE  R1 K43 K30   ; R1["mCachedAllianceMotd"] := ""
 36 [-]: SETTABLE  R1 K44 K40   ; R1["mCachedSessionID"] := nil
 37 [-]: SETTABLE  R1 K45 K30   ; R1["mCachedCurSessionName"] := ""
 38 [-]: SETTABLE  R1 K46 K30   ; R1["mCachedOldSessionName"] := ""
 39 [-]: SETTABLE  R1 K47 K5    ; R1["mCachedHostHistoryCount"] := 1
 40 [-]: SETTABLE  R1 K48 K3    ; R1["mCachedCouncilLevel"] := 0
 41 [-]: SETTABLE  R1 K49 K34   ; R1["mCachedRecruiting"] := "0x0"
 42 [-]: SETTABLE  R1 K50 K40   ; R1["mCachedHubID"] := nil
 43 [-]: SETTABLE  R1 K51 K40   ; R1["mCachedUIMode"] := nil
 44 [-]: SETTABLE  R1 K52 K34   ; R1["mCachedPersistentRelayHubActive"] := "0x0"
 45 [-]: SETTABLE  R1 K53 K34   ; R1["mIsScenarioChannel"] := "0x0"
 46 [-]: SETTABLE  R1 K54 K55   ; R1["mFocusHubOnActive"] := "0x1"
 47 [-]: SETTABLE  R1 K56 K5    ; R1["mFontIndex"] := 1
 48 [-]: SETTABLE  R1 K57 K40   ; R1["mInputPanel"] := nil
 49 [-]: SETTABLE  R1 K58 K40   ; R1["mUserPanel"] := nil
 50 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 51 [-]: SETTABLE  R1 K59 R2    ; R1["mPanelList"] := R2
 52 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 53 [-]: SETTABLE  R1 K60 R2    ; R1["mPanelShortcuts"] := R2
 54 [-]: SETTABLE  R1 K61 K30   ; R1["mActivePanelName"] := ""
 55 [-]: SETTABLE  R1 K62 K30   ; R1["mPrevPanelName"] := ""
 56 [-]: SETTABLE  R1 K63 K3    ; R1["mFontButtonWidth"] := 0
 57 [-]: SETTABLE  R1 K64 K40   ; R1["mTabMenu"] := nil
 58 [-]: GETTABLE  R2 R1 K26    ; R2 := R1["CHANNEL_PRIVATE_CHAT"]
 59 [-]: SETTABLE  R1 K65 R2    ; R1["mNextPrivateChatId"] := R2
 60 [-]: GETUPVAL  R2 U0        ; R2 := U0
 61 [-]: GETTABLE  R2 R2 K67    ; R2 := R2["0xF81722A2"]
 62 [-]: GETGLOBAL R3 K68       ; R3 := gFlashMgr
 63 [-]: SELF      R3 R3 K69    ; R4 := R3; R3 := R3["0x1089D053"]
 64 [-]: LOADK     R5 K70       ; R5 := "HUD.UseAlternateHud"
 65 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 66 [-]: LOADK     R4 K71       ; R4 := 0.0099999997764826
 67 [-]: LOADK     R5 K25       ; R5 := 8
 68 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 69 [-]: SETTABLE  R1 K66 R2    ; R1["mDelayedFadeOutTimer"] := R2
 70 [-]: SETTABLE  R1 K72 K3    ; R1["mActiveTabListFadeOutTimer"] := 0
 71 [-]: SETTABLE  R1 K73 K3    ; R1["mActiveChatFadeOutTimer"] := 0
 72 [-]: SETTABLE  R1 K74 K34   ; R1["mIsConnected"] := "0x0"
 73 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 74 [-]: SETTABLE  R1 K75 R2    ; R1["mPendingChannels"] := R2
 75 [-]: SETTABLE  R1 K76 K40   ; R1["mPendingGlobalChannelName"] := nil
 76 [-]: SETTABLE  R1 K77 K40   ; R1["mPendingRecruitingChannelName"] := nil
 77 [-]: SETTABLE  R1 K78 K40   ; R1["mPendingTradeChannelName"] := nil
 78 [-]: SETTABLE  R1 K79 K40   ; R1["mPendingCouncilChannelName"] := nil
 79 [-]: SETTABLE  R1 K80 K40   ; R1["mPendingQAChannelName"] := nil
 80 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["VISUAL_MODE_INVALID"]
 81 [-]: SETTABLE  R1 K81 R2    ; R1["mVisualMode"] := R2
 82 [-]: GETTABLE  R2 R1 K18    ; R2 := R1["CHANNEL_GLOBAL"]
 83 [-]: SETTABLE  R1 K82 R2    ; R1["mMode"] := R2
 84 [-]: SETTABLE  R1 K83 K84   ; R1["FSCommandWindowTitlePress"] := "WindowTitlePress"
 85 [-]: SETTABLE  R1 K85 K86   ; R1["FSCommandWindowTitleRelease"] := "WindowTitleRelease"
 86 [-]: SETTABLE  R1 K87 K88   ; R1["FSCommandWindowTitleRollOver"] := "WindowTitleRollOver"
 87 [-]: SETTABLE  R1 K89 K90   ; R1["FSCommandWindowTitleRollOut"] := "WindowTitleRollOut"
 88 [-]: SETTABLE  R1 K91 K92   ; R1["mTopResizeClipName"] := "Window.TabMenu.Resize"
 89 [-]: SETTABLE  R1 K93 K94   ; R1["mBottomResizeClipName"] := "Window.WindowStatus.Resize"
 90 [-]: SETTABLE  R1 K95 K34   ; R1["mHasRecievedBroadcast"] := "0x0"
 91 [-]: SETTABLE  R1 K96 K34   ; R1["mReconnecting"] := "0x0"
 92 [-]: SETTABLE  R1 K97 K3    ; R1["mMenuPanelXPos"] := 0
 93 [-]: SETTABLE  R1 K98 K34   ; R1["mLeftArrowFocused"] := "0x0"
 94 [-]: SETTABLE  R1 K99 K34   ; R1["mLeftArrowFlashing"] := "0x0"
 95 [-]: SETTABLE  R1 K100 K34  ; R1["mRightArrowFocused"] := "0x0"
 96 [-]: SETTABLE  R1 K101 K34  ; R1["mRightArrowFlashing"] := "0x0"
 97 [-]: SETTABLE  R1 K102 K40  ; R1["mFilterList"] := nil
 98 [-]: SETTABLE  R1 K103 K104 ; R1["mFilterBtnOffset"] := 20
 99 [-]: GETGLOBAL R2 K106      ; R2 := 0xF595ADDE
100 [-]: GETGLOBAL R3 K107      ; R3 := mMovie
101 [-]: SELF      R3 R3 K108   ; R4 := R3; R3 := R3["0x6B7B470B"]
102 [-]: MOVE      R5 R0        ; R5 := R0
103 [-]: LOADK     R6 K109      ; R6 := ".TabbedChatPanel.ScrollBar.HitZone"
104 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
105 [-]: LOADK     R6 K110      ; R6 := "_xscale"
106 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
107 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
108 [-]: SETTABLE  R1 K105 R2   ; R1["mInitChatPanelScrollXScale"] := R2
109 [-]: CLOSURE   R2 0         ; R2 := closure(Function #123.1)
110 [-]: GETUPVAL  R0 U1        ; R0 := U1
111 [-]: GETUPVAL  R0 U0        ; R0 := U0
112 [-]: SETTABLE  R1 K111 R2   ; R1["OnConnectionChanged"] := R2
113 [-]: CLOSURE   R2 1         ; R2 := closure(Function #123.2)
114 [-]: GETUPVAL  R0 U1        ; R0 := U1
115 [-]: GETUPVAL  R0 U2        ; R0 := U2
116 [-]: GETUPVAL  R0 U3        ; R0 := U3
117 [-]: SETTABLE  R1 K112 R2   ; R1["SetVisualMode"] := R2
118 [-]: CLOSURE   R2 2         ; R2 := closure(Function #123.3)
119 [-]: SETTABLE  R1 K113 R2   ; R1["OnWindowTitlePress"] := R2
120 [-]: CLOSURE   R2 3         ; R2 := closure(Function #123.4)
121 [-]: SETTABLE  R1 K114 R2   ; R1["OnWindowTitleRelease"] := R2
122 [-]: CLOSURE   R2 4         ; R2 := closure(Function #123.5)
123 [-]: SETTABLE  R1 K115 R2   ; R1["OnWindowTitleRollOver"] := R2
124 [-]: CLOSURE   R2 5         ; R2 := closure(Function #123.6)
125 [-]: SETTABLE  R1 K116 R2   ; R1["OnWindowTitleRollOut"] := R2
126 [-]: CLOSURE   R2 6         ; R2 := closure(Function #123.7)
127 [-]: SETTABLE  R1 K117 R2   ; R1["OnResizePress"] := R2
128 [-]: CLOSURE   R2 7         ; R2 := closure(Function #123.8)
129 [-]: GETUPVAL  R0 U4        ; R0 := U4
130 [-]: SETTABLE  R1 K118 R2   ; R1["OnResizeRelease"] := R2
131 [-]: CLOSURE   R2 8         ; R2 := closure(Function #123.9)
132 [-]: SETTABLE  R1 K119 R2   ; R1["OnResizeRollOver"] := R2
133 [-]: CLOSURE   R2 9         ; R2 := closure(Function #123.10)
134 [-]: SETTABLE  R1 K120 R2   ; R1["OnResizeRollOut"] := R2
135 [-]: CLOSURE   R2 10        ; R2 := closure(Function #123.11)
136 [-]: GETUPVAL  R0 U0        ; R0 := U0
137 [-]: SETTABLE  R1 K121 R2   ; R1["GetCoordsRelativeToParent"] := R2
138 [-]: CLOSURE   R2 11        ; R2 := closure(Function #123.12)
139 [-]: GETUPVAL  R0 U5        ; R0 := U5
140 [-]: GETUPVAL  R0 U1        ; R0 := U1
141 [-]: GETUPVAL  R0 U6        ; R0 := U6
142 [-]: SETTABLE  R1 K122 R2   ; R1["CreateSimpleTabList"] := R2
143 [-]: CLOSURE   R2 12        ; R2 := closure(Function #123.13)
144 [-]: SETTABLE  R1 K123 R2   ; R1["SetArrowVisibilities"] := R2
145 [-]: CLOSURE   R2 13        ; R2 := closure(Function #123.14)
146 [-]: GETUPVAL  R0 U7        ; R0 := U7
147 [-]: SETTABLE  R1 K124 R2   ; R1["AddTab"] := R2
148 [-]: CLOSURE   R2 14        ; R2 := closure(Function #123.15)
149 [-]: SETTABLE  R1 K125 R2   ; R1["RemoveTab"] := R2
150 [-]: CLOSURE   R2 15        ; R2 := closure(Function #123.16)
151 [-]: GETUPVAL  R0 U5        ; R0 := U5
152 [-]: GETUPVAL  R0 U1        ; R0 := U1
153 [-]: GETUPVAL  R0 U8        ; R0 := U8
154 [-]: GETUPVAL  R0 U0        ; R0 := U0
155 [-]: GETUPVAL  R0 U9        ; R0 := U9
156 [-]: GETUPVAL  R0 U6        ; R0 := U6
157 [-]: SETTABLE  R1 K126 R2   ; R1["_initializeTabs"] := R2
158 [-]: CLOSURE   R2 16        ; R2 := closure(Function #123.17)
159 [-]: SETTABLE  R1 K127 R2   ; R1["SetTabMenuPanelPos"] := R2
160 [-]: CLOSURE   R2 17        ; R2 := closure(Function #123.18)
161 [-]: GETUPVAL  R0 U10       ; R0 := U10
162 [-]: SETTABLE  R1 K128 R2   ; R1["InitializeTabArrows"] := R2
163 [-]: CLOSURE   R2 18        ; R2 := closure(Function #123.19)
164 [-]: GETUPVAL  R0 U1        ; R0 := U1
165 [-]: GETUPVAL  R0 U2        ; R0 := U2
166 [-]: GETUPVAL  R0 U11       ; R0 := U11
167 [-]: SETTABLE  R1 K129 R2   ; R1["SetActive"] := R2
168 [-]: CLOSURE   R2 19        ; R2 := closure(Function #123.20)
169 [-]: SETTABLE  R1 K130 R2   ; R1["Shutdown"] := R2
170 [-]: CLOSURE   R2 20        ; R2 := closure(Function #123.21)
171 [-]: SETTABLE  R1 K131 R2   ; R1["SystemMessage"] := R2
172 [-]: CLOSURE   R2 21        ; R2 := closure(Function #123.22)
173 [-]: SETTABLE  R1 K132 R2   ; R1["ChannelSystemMessage"] := R2
174 [-]: CLOSURE   R2 22        ; R2 := closure(Function #123.23)
175 [-]: SETTABLE  R1 K133 R2   ; R1["NotificationMessage"] := R2
176 [-]: CLOSURE   R2 23        ; R2 := closure(Function #123.24)
177 [-]: SETTABLE  R1 K134 R2   ; R1["ChannelNotificationMessage"] := R2
178 [-]: CLOSURE   R2 24        ; R2 := closure(Function #123.25)
179 [-]: SETTABLE  R1 K135 R2   ; R1["SwitchModes"] := R2
180 [-]: CLOSURE   R2 25        ; R2 := closure(Function #123.26)
181 [-]: GETUPVAL  R0 U0        ; R0 := U0
182 [-]: GETUPVAL  R0 U12       ; R0 := U12
183 [-]: GETUPVAL  R0 U1        ; R0 := U1
184 [-]: SETTABLE  R1 K136 R2   ; R1["ToggleIgnoreUser"] := R2
185 [-]: CLOSURE   R2 26        ; R2 := closure(Function #123.27)
186 [-]: GETUPVAL  R0 U13       ; R0 := U13
187 [-]: GETUPVAL  R0 U14       ; R0 := U14
188 [-]: GETUPVAL  R0 U15       ; R0 := U15
189 [-]: GETUPVAL  R0 U16       ; R0 := U16
190 [-]: GETUPVAL  R0 U17       ; R0 := U17
191 [-]: GETUPVAL  R0 U0        ; R0 := U0
192 [-]: SETTABLE  R1 K137 R2   ; R1["SetInitWindowPosition"] := R2
193 [-]: CLOSURE   R2 27        ; R2 := closure(Function #123.28)
194 [-]: GETUPVAL  R0 U14       ; R0 := U14
195 [-]: GETUPVAL  R0 U15       ; R0 := U15
196 [-]: GETUPVAL  R0 U17       ; R0 := U17
197 [-]: GETUPVAL  R0 U13       ; R0 := U13
198 [-]: GETUPVAL  R0 U0        ; R0 := U0
199 [-]: SETTABLE  R1 K138 R2   ; R1["SetInitWindowSize"] := R2
200 [-]: CLOSURE   R2 28        ; R2 := closure(Function #123.29)
201 [-]: GETUPVAL  R0 U0        ; R0 := U0
202 [-]: SETTABLE  R1 K139 R2   ; R1["UpdateFilterPositions"] := R2
203 [-]: CLOSURE   R2 29        ; R2 := closure(Function #123.30)
204 [-]: GETUPVAL  R0 U5        ; R0 := U5
205 [-]: GETUPVAL  R0 U14       ; R0 := U14
206 [-]: GETUPVAL  R0 U18       ; R0 := U18
207 [-]: GETUPVAL  R0 U10       ; R0 := U10
208 [-]: SETTABLE  R1 K140 R2   ; R1["InitializeChatArea"] := R2
209 [-]: CLOSURE   R2 30        ; R2 := closure(Function #123.31)
210 [-]: GETUPVAL  R0 U18       ; R0 := U18
211 [-]: GETUPVAL  R0 U10       ; R0 := U10
212 [-]: GETUPVAL  R0 U19       ; R0 := U19
213 [-]: GETUPVAL  R0 U20       ; R0 := U20
214 [-]: GETUPVAL  R0 U21       ; R0 := U21
215 [-]: GETUPVAL  R0 U12       ; R0 := U12
216 [-]: GETUPVAL  R0 U22       ; R0 := U22
217 [-]: GETUPVAL  R0 U14       ; R0 := U14
218 [-]: GETUPVAL  R0 U1        ; R0 := U1
219 [-]: GETUPVAL  R0 U0        ; R0 := U0
220 [-]: SETTABLE  R1 K141 R2   ; R1["Initialize"] := R2
221 [-]: CLOSURE   R2 31        ; R2 := closure(Function #123.32)
222 [-]: GETUPVAL  R0 U23       ; R0 := U23
223 [-]: GETUPVAL  R0 U24       ; R0 := U24
224 [-]: GETUPVAL  R0 U25       ; R0 := U25
225 [-]: SETTABLE  R1 K142 R2   ; R1["OnMessageSent"] := R2
226 [-]: CLOSURE   R2 32        ; R2 := closure(Function #123.33)
227 [-]: GETUPVAL  R0 U26       ; R0 := U26
228 [-]: SETTABLE  R1 K143 R2   ; R1["OnUserJoin"] := R2
229 [-]: CLOSURE   R2 33        ; R2 := closure(Function #123.34)
230 [-]: SETTABLE  R1 K144 R2   ; R1["OnUserLeave"] := R2
231 [-]: CLOSURE   R2 34        ; R2 := closure(Function #123.35)
232 [-]: GETUPVAL  R0 U0        ; R0 := U0
233 [-]: SETTABLE  R1 K145 R2   ; R1["cycleActiveTab"] := R2
234 [-]: CLOSURE   R2 35        ; R2 := closure(Function #123.36)
235 [-]: GETUPVAL  R0 U0        ; R0 := U0
236 [-]: GETUPVAL  R0 U27       ; R0 := U27
237 [-]: GETUPVAL  R0 U12       ; R0 := U12
238 [-]: GETUPVAL  R0 U7        ; R0 := U7
239 [-]: GETUPVAL  R0 U28       ; R0 := U28
240 [-]: GETUPVAL  R0 U1        ; R0 := U1
241 [-]: GETUPVAL  R0 U29       ; R0 := U29
242 [-]: SETTABLE  R1 K146 R2   ; R1["OnChannelStateChanged"] := R2
243 [-]: CLOSURE   R2 36        ; R2 := closure(Function #123.37)
244 [-]: GETUPVAL  R0 U0        ; R0 := U0
245 [-]: GETUPVAL  R0 U22       ; R0 := U22
246 [-]: GETUPVAL  R0 U30       ; R0 := U30
247 [-]: GETUPVAL  R0 U31       ; R0 := U31
248 [-]: SETTABLE  R1 K147 R2   ; R1["OnChatMessageReceived"] := R2
249 [-]: CLOSURE   R2 37        ; R2 := closure(Function #123.38)
250 [-]: GETUPVAL  R0 U32       ; R0 := U32
251 [-]: GETUPVAL  R0 U33       ; R0 := U33
252 [-]: SETTABLE  R1 K148 R2   ; R1["OnInvalidWhisperTarget"] := R2
253 [-]: CLOSURE   R2 38        ; R2 := closure(Function #123.39)
254 [-]: GETUPVAL  R0 U26       ; R0 := U26
255 [-]: SETTABLE  R1 K149 R2   ; R1["OnChatChannelJoinUserList"] := R2
256 [-]: CLOSURE   R2 39        ; R2 := closure(Function #123.40)
257 [-]: SETTABLE  R1 K150 R2   ; R1["_getRegionChannelPrefix"] := R2
258 [-]: CLOSURE   R2 40        ; R2 := closure(Function #123.41)
259 [-]: GETUPVAL  R0 U14       ; R0 := U14
260 [-]: GETUPVAL  R0 U34       ; R0 := U34
261 [-]: SETTABLE  R1 K151 R2   ; R1["_getGlobalChannelName"] := R2
262 [-]: CLOSURE   R2 41        ; R2 := closure(Function #123.42)
263 [-]: SETTABLE  R1 K152 R2   ; R1["_getRegionChannel"] := R2
264 [-]: CLOSURE   R2 42        ; R2 := closure(Function #123.43)
265 [-]: SETTABLE  R1 K153 R2   ; R1["_getSquadChannelPrefix"] := R2
266 [-]: CLOSURE   R2 43        ; R2 := closure(Function #123.44)
267 [-]: SETTABLE  R1 K154 R2   ; R1["_joinSquadChannel"] := R2
268 [-]: CLOSURE   R2 44        ; R2 := closure(Function #123.45)
269 [-]: GETUPVAL  R0 U12       ; R0 := U12
270 [-]: SETTABLE  R1 K155 R2   ; R1["_updateSquad"] := R2
271 [-]: CLOSURE   R2 45        ; R2 := closure(Function #123.46)
272 [-]: GETUPVAL  R0 U35       ; R0 := U35
273 [-]: GETUPVAL  R0 U36       ; R0 := U36
274 [-]: GETUPVAL  R0 U37       ; R0 := U37
275 [-]: SETTABLE  R1 K156 R2   ; R1["_updateHub"] := R2
276 [-]: CLOSURE   R2 46        ; R2 := closure(Function #123.47)
277 [-]: SETTABLE  R1 K157 R2   ; R1["_getClanChannelPrefix"] := R2
278 [-]: CLOSURE   R2 47        ; R2 := closure(Function #123.48)
279 [-]: SETTABLE  R1 K158 R2   ; R1["_getCouncilChannelPrefix"] := R2
280 [-]: CLOSURE   R2 48        ; R2 := closure(Function #123.49)
281 [-]: SETTABLE  R1 K159 R2   ; R1["_getRecruitingChannelPrefix"] := R2
282 [-]: CLOSURE   R2 49        ; R2 := closure(Function #123.50)
283 [-]: SETTABLE  R1 K160 R2   ; R1["_getTradeChannelPrefix"] := R2
284 [-]: CLOSURE   R2 50        ; R2 := closure(Function #123.51)
285 [-]: SETTABLE  R1 K161 R2   ; R1["_getQAChannelPrefix"] := R2
286 [-]: CLOSURE   R2 51        ; R2 := closure(Function #123.52)
287 [-]: SETTABLE  R1 K162 R2   ; R1["_getAllianceChannelPrefix"] := R2
288 [-]: CLOSURE   R2 52        ; R2 := closure(Function #123.53)
289 [-]: SETTABLE  R1 K163 R2   ; R1["_getPrivateChatChannelPrefix"] := R2
290 [-]: CLOSURE   R2 53        ; R2 := closure(Function #123.54)
291 [-]: GETUPVAL  R0 U0        ; R0 := U0
292 [-]: GETUPVAL  R0 U36       ; R0 := U36
293 [-]: GETUPVAL  R0 U35       ; R0 := U35
294 [-]: SETTABLE  R1 K164 R2   ; R1["_getHubChannelPrefix"] := R2
295 [-]: CLOSURE   R2 54        ; R2 := closure(Function #123.55)
296 [-]: GETUPVAL  R0 U38       ; R0 := U38
297 [-]: GETUPVAL  R0 U12       ; R0 := U12
298 [-]: SETTABLE  R1 K165 R2   ; R1["_updateCouncil"] := R2
299 [-]: CLOSURE   R2 55        ; R2 := closure(Function #123.56)
300 [-]: SETTABLE  R1 K166 R2   ; R1["_getRecruitingChannel"] := R2
301 [-]: CLOSURE   R2 56        ; R2 := closure(Function #123.57)
302 [-]: SETTABLE  R1 K167 R2   ; R1["_getTradeChannel"] := R2
303 [-]: CLOSURE   R2 57        ; R2 := closure(Function #123.58)
304 [-]: SETTABLE  R1 K168 R2   ; R1["_getQAChannel"] := R2
305 [-]: CLOSURE   R2 58        ; R2 := closure(Function #123.59)
306 [-]: SETTABLE  R1 K169 R2   ; R1["SetPendingChannelName"] := R2
307 [-]: CLOSURE   R2 59        ; R2 := closure(Function #123.60)
308 [-]: SETTABLE  R1 K170 R2   ; R1["SetIsChannelEnabled"] := R2
309 [-]: CLOSURE   R2 60        ; R2 := closure(Function #123.61)
310 [-]: GETUPVAL  R0 U39       ; R0 := U39
311 [-]: SETTABLE  R1 K171 R2   ; R1["_updateGlobalChat"] := R2
312 [-]: CLOSURE   R2 61        ; R2 := closure(Function #123.62)
313 [-]: GETUPVAL  R0 U12       ; R0 := U12
314 [-]: GETUPVAL  R0 U40       ; R0 := U40
315 [-]: GETUPVAL  R0 U0        ; R0 := U0
316 [-]: SETTABLE  R1 K172 R2   ; R1["_updateAlliance"] := R2
317 [-]: CLOSURE   R2 62        ; R2 := closure(Function #123.63)
318 [-]: GETUPVAL  R0 U12       ; R0 := U12
319 [-]: GETUPVAL  R0 U41       ; R0 := U41
320 [-]: GETUPVAL  R0 U0        ; R0 := U0
321 [-]: SETTABLE  R1 K173 R2   ; R1["_updateClan"] := R2
322 [-]: CLOSURE   R2 63        ; R2 := closure(Function #123.64)
323 [-]: SETTABLE  R1 K174 R2   ; R1["UpdateFadeOut"] := R2
324 [-]: CLOSURE   R2 64        ; R2 := closure(Function #123.65)
325 [-]: GETUPVAL  R0 U1        ; R0 := U1
326 [-]: GETUPVAL  R0 U0        ; R0 := U0
327 [-]: SETTABLE  R1 K175 R2   ; R1["UpdateFlashingElement"] := R2
328 [-]: CLOSURE   R2 65        ; R2 := closure(Function #123.66)
329 [-]: GETUPVAL  R0 U12       ; R0 := U12
330 [-]: GETUPVAL  R0 U14       ; R0 := U14
331 [-]: GETUPVAL  R0 U15       ; R0 := U15
332 [-]: GETUPVAL  R0 U42       ; R0 := U42
333 [-]: GETUPVAL  R0 U37       ; R0 := U37
334 [-]: GETUPVAL  R0 U43       ; R0 := U43
335 [-]: GETUPVAL  R0 U44       ; R0 := U44
336 [-]: GETUPVAL  R0 U45       ; R0 := U45
337 [-]: GETUPVAL  R0 U46       ; R0 := U46
338 [-]: GETUPVAL  R0 U47       ; R0 := U47
339 [-]: GETUPVAL  R0 U48       ; R0 := U48
340 [-]: GETUPVAL  R0 U49       ; R0 := U49
341 [-]: GETUPVAL  R0 U50       ; R0 := U50
342 [-]: GETUPVAL  R0 U51       ; R0 := U51
343 [-]: GETUPVAL  R0 U1        ; R0 := U1
344 [-]: GETUPVAL  R0 U0        ; R0 := U0
345 [-]: GETUPVAL  R0 U52       ; R0 := U52
346 [-]: GETUPVAL  R0 U53       ; R0 := U53
347 [-]: GETUPVAL  R0 U54       ; R0 := U54
348 [-]: GETUPVAL  R0 U55       ; R0 := U55
349 [-]: GETUPVAL  R0 U56       ; R0 := U56
350 [-]: SETTABLE  R1 K176 R2   ; R1["Update"] := R2
351 [-]: CLOSURE   R2 66        ; R2 := closure(Function #123.67)
352 [-]: GETUPVAL  R0 U0        ; R0 := U0
353 [-]: GETUPVAL  R0 U13       ; R0 := U13
354 [-]: SETTABLE  R1 K177 R2   ; R1["SetCompressed"] := R2
355 [-]: CLOSURE   R2 67        ; R2 := closure(Function #123.68)
356 [-]: GETUPVAL  R0 U17       ; R0 := U17
357 [-]: GETUPVAL  R0 U13       ; R0 := U13
358 [-]: GETUPVAL  R0 U0        ; R0 := U0
359 [-]: GETUPVAL  R0 U57       ; R0 := U57
360 [-]: GETUPVAL  R0 U14       ; R0 := U14
361 [-]: GETUPVAL  R0 U15       ; R0 := U15
362 [-]: SETTABLE  R1 K178 R2   ; R1["SetPosition"] := R2
363 [-]: CLOSURE   R2 68        ; R2 := closure(Function #123.69)
364 [-]: GETUPVAL  R0 U0        ; R0 := U0
365 [-]: SETTABLE  R1 K179 R2   ; R1["SetMinMaxBtnPos"] := R2
366 [-]: CLOSURE   R2 69        ; R2 := closure(Function #123.70)
367 [-]: GETUPVAL  R0 U17       ; R0 := U17
368 [-]: GETUPVAL  R0 U13       ; R0 := U13
369 [-]: GETUPVAL  R0 U1        ; R0 := U1
370 [-]: GETUPVAL  R0 U55       ; R0 := U55
371 [-]: GETUPVAL  R0 U14       ; R0 := U14
372 [-]: GETUPVAL  R0 U15       ; R0 := U15
373 [-]: SETTABLE  R1 K180 R2   ; R1["SetSize"] := R2
374 [-]: CLOSURE   R2 70        ; R2 := closure(Function #123.71)
375 [-]: SETTABLE  R1 K181 R2   ; R1["GetActivePanel"] := R2
376 [-]: CLOSURE   R2 71        ; R2 := closure(Function #123.72)
377 [-]: SETTABLE  R1 K182 R2   ; R1["SetFontSize"] := R2
378 [-]: CLOSURE   R2 72        ; R2 := closure(Function #123.73)
379 [-]: SETTABLE  R1 K183 R2   ; R1["ResetFadeOutTimer"] := R2
380 [-]: CLOSURE   R2 73        ; R2 := closure(Function #123.74)
381 [-]: GETUPVAL  R0 U58       ; R0 := U58
382 [-]: GETUPVAL  R0 U0        ; R0 := U0
383 [-]: GETUPVAL  R0 U1        ; R0 := U1
384 [-]: SETTABLE  R1 K184 R2   ; R1["ToggleSelectedElement"] := R2
385 [-]: RETURN    R1 2         ; return R1
386 [-]: RETURN    R0 1         ; return 


; Function #123.1:
;
; Name:            
; Defined at line: 5724
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: EQ        0 R3 K1      ; if R3 ~= 0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: LOADK     R4 K1        ; R4 := 0
  9 [-]: TEST      R3 1         ; if R3 then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: EQ        0 R2 K2      ; if R2 ~= "Reconnect" then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: SETTABLE  R0 K3 K4     ; R0["mReconnecting"] := "0x0"
 14 [-]: JMP       24           ; PC := 24
 15 [-]: EQ        1 R2 K5      ; if R2 == "" then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0xAE78D1F"]
 18 [-]: MOVE      R7 R2        ; R7 := R2
 19 [-]: CALL      R5 3 1       ; R5(R6,R7)
 20 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mIsConnected"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: SETTABLE  R0 K3 K8     ; R0["mReconnecting"] := "0x1"
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 25 [-]: GETGLOBAL R6 K10       ; R6 := gMatchingService
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: TEST      R5 0         ; if not R5 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R5 K10       ; R5 := gMatchingService
 31 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0xF0C493C"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: GETGLOBAL R6 K9        ; R6 := 0x400E7765
 34 [-]: MOVE      R7 R5        ; R7 := R5
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: TEST      R6 1         ; if R6 then PC := 53
 37 [-]: JMP       53           ; PC := 53
 38 [-]: SELF      R6 R5 K12    ; R7 := R5; R6 := R5["0x9A3FB19F"]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: MOVE      R4 R6        ; R4 := R6
 41 [-]: JMP       53           ; PC := 53
 42 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mReconnecting"]
 43 [-]: TEST      R6 0         ; if not R6 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0["0xAE78D1F"]
 46 [-]: GETGLOBAL R8 K13       ; R8 := mMovie
 47 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8["0x5DB0BD4"]
 48 [-]: LOADK     R10 K15      ; R10 := "/Lotus/Language/Menu/Chat_Reconnected"
 49 [-]: MOVE      R11 R0       ; R11 := R0
 50 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 51 [-]: CALL      R6 0 1       ; R6(R7,...)
 52 [-]: SETTABLE  R0 K3 K4     ; R0["mReconnecting"] := "0x0"
 53 [-]: SETTABLE  R0 K7 R3     ; R0["mIsConnected"] := R3
 54 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
 55 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6["0x880196A7"]
 56 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mClipName"]
 57 [-]: LOADK     R9 K18       ; R9 := "TabMenu.WindowTitle.Arrows"
 58 [-]: LOADK     R10 K19      ; R10 := "_visible"
 59 [-]: GETTABLE  R11 R0 K7    ; R11 := R0["mIsConnected"]
 60 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 61 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
 62 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6["0x880196A7"]
 63 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mClipName"]
 64 [-]: LOADK     R9 K20       ; R9 := "TabMenu.WindowTitle.Spinner"
 65 [-]: LOADK     R10 K19      ; R10 := "_visible"
 66 [-]: GETTABLE  R11 R0 K7    ; R11 := R0["mIsConnected"]
 67 [-]: TEST      R11 1        ; if R11 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LT        1 R4 K21     ; if R4 < 120 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R11 R0       ; R11 := R0
 72 [-]: MOVE      R11 R1       ; R11 := R1
 73 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 74 [-]: TEST      R3 0         ; if not R3 then PC := 101
 75 [-]: JMP       101          ; PC := 101
 76 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mPendingChannels"]
 77 [-]: LEN       R6 R6        ; R6 := # R6
 78 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 179
 79 [-]: JMP       179          ; PC := 179
 80 [-]: GETGLOBAL R6 K10       ; R6 := gMatchingService
 81 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0xF0C493C"]
 82 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 83 [-]: GETGLOBAL R7 K9        ; R7 := 0x400E7765
 84 [-]: MOVE      R8 R6        ; R8 := R6
 85 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 86 [-]: TEST      R7 1         ; if R7 then PC := 98
 87 [-]: JMP       98           ; PC := 98
 88 [-]: LOADK     R7 K23       ; R7 := 1
 89 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["mPendingChannels"]
 90 [-]: LEN       R8 R8        ; R8 := # R8
 91 [-]: LOADK     R9 K23       ; R9 := 1
 92 [-]: FORPREP   R7 97        ; R7 -= R9; PC := 97
 93 [-]: SELF      R11 R6 K24   ; R12 := R6; R11 := R6["0x21939A99"]
 94 [-]: GETTABLE  R13 R0 K22   ; R13 := R0["mPendingChannels"]
 95 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 96 [-]: CALL      R11 3 1      ; R11(R12,R13)
 97 [-]: FORLOOP   R7 93        ; R7 += R9; if R7 <= R8 then begin PC := 93; R10 := R7 end
 98 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 99 [-]: SETTABLE  R0 K22 R11   ; R0["mPendingChannels"] := R11
100 [-]: JMP       179          ; PC := 179
101 [-]: GETGLOBAL R11 K9       ; R11 := 0x400E7765
102 [-]: GETUPVAL  R12 U0       ; R12 := U0
103 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["mPanelList"]
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: TEST      R11 1        ; if R11 then PC := 179
106 [-]: JMP       179          ; PC := 179
107 [-]: GETGLOBAL R11 K26      ; R11 := 0xECFDD17
108 [-]: GETUPVAL  R12 U0       ; R12 := U0
109 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["mPanelList"]
110 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
111 [-]: JMP       177          ; PC := 177
112 [-]: LOADK     R16 K27      ; R16 := "#"
113 [-]: GETTABLE  R17 R15 K28  ; R17 := R15["mChannelName"]
114 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
115 [-]: GETTABLE  R17 R15 K29  ; R17 := R15["mChannelType"]
116 [-]: GETTABLE  R18 R0 K30   ; R18 := R0["CHANNEL_GLOBAL"]
117 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 122
118 [-]: JMP       122          ; PC := 122
119 [-]: GETTABLE  R17 R0 K31   ; R17 := R0["mPendingGlobalChannelName"]
120 [-]: EQ        0 R17 K32    ; if R17 ~= nil then PC := 151
121 [-]: JMP       151          ; PC := 151
122 [-]: GETTABLE  R17 R15 K29  ; R17 := R15["mChannelType"]
123 [-]: GETTABLE  R18 R0 K33   ; R18 := R0["CHANNEL_RECRUITING"]
124 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 129
125 [-]: JMP       129          ; PC := 129
126 [-]: GETTABLE  R17 R0 K34   ; R17 := R0["mPendingRecruitingChannelName"]
127 [-]: EQ        0 R17 K32    ; if R17 ~= nil then PC := 151
128 [-]: JMP       151          ; PC := 151
129 [-]: GETTABLE  R17 R15 K29  ; R17 := R15["mChannelType"]
130 [-]: GETTABLE  R18 R0 K35   ; R18 := R0["CHANNEL_TRADE"]
131 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 136
132 [-]: JMP       136          ; PC := 136
133 [-]: GETTABLE  R17 R0 K36   ; R17 := R0["mPendingTradeChannelName"]
134 [-]: EQ        0 R17 K32    ; if R17 ~= nil then PC := 151
135 [-]: JMP       151          ; PC := 151
136 [-]: GETTABLE  R17 R15 K29  ; R17 := R15["mChannelType"]
137 [-]: GETTABLE  R18 R0 K37   ; R18 := R0["CHANNEL_QA"]
138 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 143
139 [-]: JMP       143          ; PC := 143
140 [-]: GETTABLE  R17 R0 K38   ; R17 := R0["mPendingQAChannelName"]
141 [-]: EQ        0 R17 K32    ; if R17 ~= nil then PC := 151
142 [-]: JMP       151          ; PC := 151
143 [-]: GETTABLE  R17 R15 K29  ; R17 := R15["mChannelType"]
144 [-]: GETTABLE  R18 R0 K39   ; R18 := R0["CHANNEL_COUNCIL"]
145 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 150
146 [-]: JMP       150          ; PC := 150
147 [-]: GETTABLE  R17 R0 K40   ; R17 := R0["mPendingCouncilChannelName"]
148 [-]: EQ        0 R17 K32    ; if R17 ~= nil then PC := 151
149 [-]: JMP       151          ; PC := 151
150 [-]: MOVE      R17 R0       ; R17 := R0
151 [-]: MOVE      R17 R1       ; R17 := R1
152 [-]: TEST      R17 1        ; if R17 then PC := 176
153 [-]: JMP       176          ; PC := 176
154 [-]: GETGLOBAL R18 K41      ; R18 := string
155 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["0x7B782033"]
156 [-]: MOVE      R19 R16      ; R19 := R16
157 [-]: LOADK     R20 K43      ; R20 := 2
158 [-]: LOADK     R21 K43      ; R21 := 2
159 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
160 [-]: GETTABLE  R19 R0 K44   ; R19 := R0["0xDB118937"]
161 [-]: CALL      R19 1 2      ; R19 := R19()
162 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 176
163 [-]: JMP       176          ; PC := 176
164 [-]: GETUPVAL  R18 U1       ; R18 := U1
165 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["0xC0F9C0F0"]
166 [-]: GETTABLE  R19 R0 K22   ; R19 := R0["mPendingChannels"]
167 [-]: MOVE      R20 R16      ; R20 := R16
168 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
169 [-]: EQ        0 R18 K46    ; if R18 ~= -1 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R18 K47      ; R18 := table
172 [-]: GETTABLE  R18 R18 K48  ; R18 := R18["0xE6450C9D"]
173 [-]: GETTABLE  R19 R0 K22   ; R19 := R0["mPendingChannels"]
174 [-]: MOVE      R20 R16      ; R20 := R16
175 [-]: CALL      R18 3 1      ; R18(R19,R20)
176 [-]: SETTABLE  R15 K49 K4   ; R15["mInitialPopulationDone"] := "0x0"
177 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 112; R13 := R14 end
178 [-]: JMP       112          ; PC := 112
179 [-]: RETURN    R0 1         ; return 


; Function #123.2:
;
; Name:            
; Defined at line: 5796
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: LOADK     R3 K0        ; R3 := 100
  2 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  3 [-]: LOADK     R5 K1        ; R5 := "Window.TabMenu"
  4 [-]: LOADK     R6 K2        ; R6 := "Window.WindowStatus"
  5 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
  6 [-]: NEWTABLE  R5 14 0      ; R5 := {}
  7 [-]: LOADK     R6 K3        ; R6 := "Window.FontIncrease"
  8 [-]: LOADK     R7 K4        ; R7 := "Window.TabbedChatPanel.ScrollBar"
  9 [-]: LOADK     R8 K5        ; R8 := "Window.TabbedChatPanel.Fill"
 10 [-]: LOADK     R9 K6        ; R9 := "Window.TabbedChatPanel.FillBlurer"
 11 [-]: LOADK     R10 K7       ; R10 := "Window.TabbedChatPanel.EdgeLeft"
 12 [-]: LOADK     R11 K8       ; R11 := "Window.TabbedChatPanel.EdgeRight"
 13 [-]: LOADK     R12 K9       ; R12 := "Window.TabbedChatPanel.DecoLine"
 14 [-]: LOADK     R13 K10      ; R13 := "Window.TabbedChatPanel.DecoCurve"
 15 [-]: LOADK     R14 K11      ; R14 := "Window.TabbedChatPanel.FilterBtn"
 16 [-]: LOADK     R15 K12      ; R15 := "Window.TabbedChatPanel.FilterList"
 17 [-]: LOADK     R16 K13      ; R16 := "Window.TabbedChatPanel.FilterListMask"
 18 [-]: LOADK     R17 K14      ; R17 := "Window.SendMessageBar"
 19 [-]: LOADK     R18 K15      ; R18 := "Window.UserPanel"
 20 [-]: LOADK     R19 K16      ; R19 := "Window.MouseCatcherBtn"
 21 [-]: SETLIST   R5 14 1      ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 14
 22 [-]: GETGLOBAL R6 K17       ; R6 := gFlashMgr
 23 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6["0x1089D053"]
 24 [-]: LOADK     R8 K19       ; R8 := "Lotus.EnableTraceLogging"
 25 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 26 [-]: TEST      R6 0         ; if not R6 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R6 K20       ; R6 := 0x93B1256B
 29 [-]: LOADK     R7 K21       ; R7 := "SetVisualMode("
 30 [-]: MOVE      R8 R1        ; R8 := R1
 31 [-]: LOADK     R9 K22       ; R9 := ")"
 32 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 33 [-]: CALL      R6 2 1       ; R6(R7)
 34 [-]: GETGLOBAL R6 K23       ; R6 := Engine
 35 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["0x9490FE70"]
 36 [-]: CALL      R6 1 2       ; R6 := R6()
 37 [-]: TEST      R6 0         ; if not R6 then PC := 60
 38 [-]: JMP       60           ; PC := 60
 39 [-]: GETGLOBAL R6 K25       ; R6 := table
 40 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["0xE6450C9D"]
 41 [-]: MOVE      R7 R5        ; R7 := R5
 42 [-]: LOADK     R8 K27       ; R8 := "Window.TabbedChatPanel.FilterCallout"
 43 [-]: CALL      R6 3 1       ; R6(R7,R8)
 44 [-]: GETGLOBAL R6 K28       ; R6 := _T
 45 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["TopMenuOpen"]
 46 [-]: TEST      R6 0         ; if not R6 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETTABLE  R6 R0 K30    ; R6 := R0["VISUAL_MODE_MENU_FULL"]
 49 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 56
 50 [-]: JMP       56           ; PC := 56
 51 [-]: GETGLOBAL R6 K31       ; R6 := mMovie
 52 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6["0xE7F490E3"]
 53 [-]: LOADK     R8 K33       ; R8 := 0.60000002384186
 54 [-]: CALL      R6 3 1       ; R6(R7,R8)
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETGLOBAL R6 K31       ; R6 := mMovie
 57 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6["0xE7F490E3"]
 58 [-]: LOADK     R8 K34       ; R8 := 0
 59 [-]: CALL      R6 3 1       ; R6(R7,R8)
 60 [-]: LOADNIL   R6 R6        ; R6 := nil
 61 [-]: GETUPVAL  R7 U0        ; R7 := U0
 62 [-]: SELF      R7 R7 K35    ; R8 := R7; R7 := R7["0x18AAE1E3"]
 63 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 64 [-]: TEST      R7 0         ; if not R7 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETUPVAL  R7 U1        ; R7 := U1
 67 [-]: CALL      R7 1 2       ; R7 := R7()
 68 [-]: MOVE      R6 R7        ; R6 := R7
 69 [-]: GETTABLE  R7 R0 K30    ; R7 := R0["VISUAL_MODE_MENU_FULL"]
 70 [-]: EQ        1 R1 R7      ; if R1 == R7 then PC := 75
 71 [-]: JMP       75           ; PC := 75
 72 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
 73 [-]: EQ        0 R1 R7      ; if R1 ~= R7 then PC := 100
 74 [-]: JMP       100          ; PC := 100
 75 [-]: GETGLOBAL R7 K31       ; R7 := mMovie
 76 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7["0x1C19D966"]
 77 [-]: LOADK     R9 K38       ; R9 := "Window"
 78 [-]: LOADK     R10 K39      ; R10 := "noMenuSelection"
 79 [-]: MOVE      R11 R0       ; R11 := R0
 80 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 81 [-]: GETGLOBAL R7 K31       ; R7 := mMovie
 82 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7["0x1C19D966"]
 83 [-]: LOADK     R9 K1        ; R9 := "Window.TabMenu"
 84 [-]: LOADK     R10 K39      ; R10 := "noMenuSelection"
 85 [-]: MOVE      R11 R0       ; R11 := R0
 86 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 87 [-]: GETGLOBAL R7 K40       ; R7 := gGameStatsMgr
 88 [-]: EQ        1 R7 K41     ; if R7 == nil then PC := 124
 89 [-]: JMP       124          ; PC := 124
 90 [-]: EQ        1 R6 K41     ; if R6 == nil then PC := 124
 91 [-]: JMP       124          ; PC := 124
 92 [-]: GETGLOBAL R7 K40       ; R7 := gGameStatsMgr
 93 [-]: SELF      R7 R7 K42    ; R8 := R7; R7 := R7["0xCFF953A5"]
 94 [-]: GETGLOBAL R9 K43       ; R9 := 0xEC274B1A
 95 [-]: LOADK     R10 K44      ; R10 := "IN_CHAT_VIEW_TIME"
 96 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 97 [-]: MOVE      R10 R6       ; R10 := R6
 98 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 99 [-]: JMP       124          ; PC := 124
100 [-]: GETGLOBAL R7 K31       ; R7 := mMovie
101 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7["0x1C19D966"]
102 [-]: LOADK     R9 K38       ; R9 := "Window"
103 [-]: LOADK     R10 K39      ; R10 := "noMenuSelection"
104 [-]: MOVE      R11 R1       ; R11 := R1
105 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
106 [-]: GETGLOBAL R7 K31       ; R7 := mMovie
107 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7["0x1C19D966"]
108 [-]: LOADK     R9 K1        ; R9 := "Window.TabMenu"
109 [-]: LOADK     R10 K39      ; R10 := "noMenuSelection"
110 [-]: MOVE      R11 R1       ; R11 := R1
111 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
112 [-]: GETGLOBAL R7 K40       ; R7 := gGameStatsMgr
113 [-]: EQ        1 R7 K41     ; if R7 == nil then PC := 124
114 [-]: JMP       124          ; PC := 124
115 [-]: EQ        1 R6 K41     ; if R6 == nil then PC := 124
116 [-]: JMP       124          ; PC := 124
117 [-]: GETGLOBAL R7 K40       ; R7 := gGameStatsMgr
118 [-]: SELF      R7 R7 K45    ; R8 := R7; R7 := R7["0x47B87262"]
119 [-]: GETGLOBAL R9 K43       ; R9 := 0xEC274B1A
120 [-]: LOADK     R10 K44      ; R10 := "IN_CHAT_VIEW_TIME"
121 [-]: CALL      R9 2 2       ; R9 := R9(R10)
122 [-]: MOVE      R10 R6       ; R10 := R6
123 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
124 [-]: GETTABLE  R7 R0 K30    ; R7 := R0["VISUAL_MODE_MENU_FULL"]
125 [-]: EQ        1 R1 R7      ; if R1 == R7 then PC := 131
126 [-]: JMP       131          ; PC := 131
127 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
128 [-]: EQ        1 R1 R7      ; if R1 == R7 then PC := 131
129 [-]: JMP       131          ; PC := 131
130 [-]: MOVE      R7 R0        ; R7 := R0
131 [-]: MOVE      R7 R1        ; R7 := R1
132 [-]: GETGLOBAL R8 K28       ; R8 := _T
133 [-]: SETTABLE  R8 K46 R7    ; R8["ChatMaximized"] := R7
134 [-]: GETUPVAL  R8 U2        ; R8 := U2
135 [-]: TEST      R8 1         ; if R8 then PC := 166
136 [-]: JMP       166          ; PC := 166
137 [-]: GETTABLE  R8 R0 K30    ; R8 := R0["VISUAL_MODE_MENU_FULL"]
138 [-]: EQ        1 R1 R8      ; if R1 == R8 then PC := 146
139 [-]: JMP       146          ; PC := 146
140 [-]: GETTABLE  R8 R0 K36    ; R8 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
141 [-]: EQ        1 R1 R8      ; if R1 == R8 then PC := 146
142 [-]: JMP       146          ; PC := 146
143 [-]: GETTABLE  R8 R0 K47    ; R8 := R0["VISUAL_MODE_MENU_SIMPLE"]
144 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 155
145 [-]: JMP       155          ; PC := 155
146 [-]: GETGLOBAL R8 K31       ; R8 := mMovie
147 [-]: SELF      R8 R8 K48    ; R9 := R8; R8 := R8["0xDA6F41DE"]
148 [-]: MOVE      R10 R0       ; R10 := R0
149 [-]: CALL      R8 3 1       ; R8(R9,R10)
150 [-]: GETGLOBAL R8 K31       ; R8 := mMovie
151 [-]: SELF      R8 R8 K49    ; R9 := R8; R8 := R8["0x71E8736F"]
152 [-]: MOVE      R10 R1       ; R10 := R1
153 [-]: CALL      R8 3 1       ; R8(R9,R10)
154 [-]: JMP       166          ; PC := 166
155 [-]: GETTABLE  R8 R0 K50    ; R8 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
156 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: GETGLOBAL R8 K31       ; R8 := mMovie
159 [-]: SELF      R8 R8 K48    ; R9 := R8; R8 := R8["0xDA6F41DE"]
160 [-]: MOVE      R10 R1       ; R10 := R1
161 [-]: CALL      R8 3 1       ; R8(R9,R10)
162 [-]: GETGLOBAL R8 K31       ; R8 := mMovie
163 [-]: SELF      R8 R8 K49    ; R9 := R8; R8 := R8["0x71E8736F"]
164 [-]: MOVE      R10 R0       ; R10 := R0
165 [-]: CALL      R8 3 1       ; R8(R9,R10)
166 [-]: TEST      R7 0         ; if not R7 then PC := 204
167 [-]: JMP       204          ; PC := 204
168 [-]: GETGLOBAL R8 K51       ; R8 := 0x400E7765
169 [-]: GETTABLE  R9 R0 K52    ; R9 := R0["mUserPanel"]
170 [-]: CALL      R8 2 2       ; R8 := R8(R9)
171 [-]: TEST      R8 1         ; if R8 then PC := 187
172 [-]: JMP       187          ; PC := 187
173 [-]: SELF      R8 R0 K53    ; R9 := R0; R8 := R0["0x5528ED75"]
174 [-]: GETTABLE  R10 R0 K52   ; R10 := R0["mUserPanel"]
175 [-]: GETTABLE  R10 R10 K54  ; R10 := R10["mWindow"]
176 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
177 [-]: GETTABLE  R9 R0 K52    ; R9 := R0["mUserPanel"]
178 [-]: SELF      R9 R9 K55    ; R10 := R9; R9 := R9["0xC86D89A5"]
179 [-]: GETTABLE  R11 R8 K56   ; R11 := R8["height"]
180 [-]: CALL      R9 3 1       ; R9(R10,R11)
181 [-]: GETTABLE  R9 R0 K52    ; R9 := R0["mUserPanel"]
182 [-]: GETTABLE  R9 R9 K57    ; R9 := R9["mListControl"]
183 [-]: SELF      R9 R9 K58    ; R10 := R9; R9 := R9["0x6470BAF4"]
184 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
185 [-]: MOVE      R13 R1       ; R13 := R1
186 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
187 [-]: SELF      R9 R0 K35    ; R10 := R0; R9 := R0["0x18AAE1E3"]
188 [-]: CALL      R9 2 2       ; R9 := R9(R10)
189 [-]: GETGLOBAL R10 K51      ; R10 := 0x400E7765
190 [-]: MOVE      R11 R9       ; R11 := R9
191 [-]: CALL      R10 2 2      ; R10 := R10(R11)
192 [-]: TEST      R10 1        ; if R10 then PC := 217
193 [-]: JMP       217          ; PC := 217
194 [-]: GETGLOBAL R10 K51      ; R10 := 0x400E7765
195 [-]: GETTABLE  R11 R0 K59   ; R11 := R0["mTabMenu"]
196 [-]: CALL      R10 2 2      ; R10 := R10(R11)
197 [-]: TEST      R10 1        ; if R10 then PC := 217
198 [-]: JMP       217          ; PC := 217
199 [-]: GETTABLE  R10 R0 K59   ; R10 := R0["mTabMenu"]
200 [-]: SELF      R10 R10 K60  ; R11 := R10; R10 := R10["0xD79ED359"]
201 [-]: GETTABLE  R12 R9 K61   ; R12 := R9["mTabElement"]
202 [-]: CALL      R10 3 1      ; R10(R11,R12)
203 [-]: JMP       217          ; PC := 217
204 [-]: GETGLOBAL R10 K31      ; R10 := mMovie
205 [-]: SELF      R10 R10 K62  ; R11 := R10; R10 := R10["0x1AA40FBC"]
206 [-]: CALL      R10 2 2      ; R10 := R10(R11)
207 [-]: GETGLOBAL R11 K51      ; R11 := 0x400E7765
208 [-]: MOVE      R12 R10      ; R12 := R10
209 [-]: CALL      R11 2 2      ; R11 := R11(R12)
210 [-]: TEST      R11 1        ; if R11 then PC := 217
211 [-]: JMP       217          ; PC := 217
212 [-]: EQ        0 R10 K63    ; if R10 ~= "MessageBox" then PC := 217
213 [-]: JMP       217          ; PC := 217
214 [-]: GETGLOBAL R11 K31      ; R11 := mMovie
215 [-]: SELF      R11 R11 K64  ; R12 := R11; R11 := R11["0x40C7B339"]
216 [-]: CALL      R11 2 1      ; R11(R12)
217 [-]: GETTABLE  R11 R0 K30   ; R11 := R0["VISUAL_MODE_MENU_FULL"]
218 [-]: EQ        1 R1 R11     ; if R1 == R11 then PC := 226
219 [-]: JMP       226          ; PC := 226
220 [-]: GETTABLE  R11 R0 K36   ; R11 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
221 [-]: EQ        1 R1 R11     ; if R1 == R11 then PC := 226
222 [-]: JMP       226          ; PC := 226
223 [-]: GETTABLE  R11 R0 K47   ; R11 := R0["VISUAL_MODE_MENU_SIMPLE"]
224 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 232
225 [-]: JMP       232          ; PC := 232
226 [-]: GETGLOBAL R11 K31      ; R11 := mMovie
227 [-]: SELF      R11 R11 K37  ; R12 := R11; R11 := R11["0x1C19D966"]
228 [-]: LOADK     R13 K65      ; R13 := "Window.Hint"
229 [-]: LOADK     R14 K66      ; R14 := "_alpha"
230 [-]: LOADK     R15 K34      ; R15 := 0
231 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
232 [-]: GETTABLE  R11 R0 K30   ; R11 := R0["VISUAL_MODE_MENU_FULL"]
233 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 239
234 [-]: JMP       239          ; PC := 239
235 [-]: GETTABLE  R11 R0 K67   ; R11 := R0["mVisualMode"]
236 [-]: GETTABLE  R12 R0 K30   ; R12 := R0["VISUAL_MODE_MENU_FULL"]
237 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 246
238 [-]: JMP       246          ; PC := 246
239 [-]: GETTABLE  R11 R0 K36   ; R11 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
240 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 329
241 [-]: JMP       329          ; PC := 329
242 [-]: GETTABLE  R11 R0 K67   ; R11 := R0["mVisualMode"]
243 [-]: GETTABLE  R12 R0 K36   ; R12 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
244 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 329
245 [-]: JMP       329          ; PC := 329
246 [-]: SETTABLE  R0 K67 R1    ; R0["mVisualMode"] := R1
247 [-]: SELF      R11 R0 K68   ; R12 := R0; R11 := R0["0xD272AC7A"]
248 [-]: MOVE      R13 R0       ; R13 := R0
249 [-]: MOVE      R14 R2       ; R14 := R2
250 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
251 [-]: GETGLOBAL R11 K69      ; R11 := 0xECFDD17
252 [-]: GETTABLE  R12 R0 K70   ; R12 := R0["mPanelList"]
253 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
254 [-]: JMP       265          ; PC := 265
255 [-]: GETGLOBAL R16 K51      ; R16 := 0x400E7765
256 [-]: MOVE      R17 R15      ; R17 := R15
257 [-]: CALL      R16 2 2      ; R16 := R16(R17)
258 [-]: TEST      R16 1        ; if R16 then PC := 265
259 [-]: JMP       265          ; PC := 265
260 [-]: GETTABLE  R16 R0 K71   ; R16 := R0["mActivePanelName"]
261 [-]: EQ        1 R14 R16    ; if R14 == R16 then PC := 265
262 [-]: JMP       265          ; PC := 265
263 [-]: SELF      R16 R15 K72  ; R17 := R15; R16 := R15["0xEEFE2F88"]
264 [-]: CALL      R16 2 1      ; R16(R17)
265 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 255; R13 := R14 end
266 [-]: JMP       255          ; PC := 255
267 [-]: GETGLOBAL R16 K51      ; R16 := 0x400E7765
268 [-]: GETTABLE  R17 R0 K70   ; R17 := R0["mPanelList"]
269 [-]: GETTABLE  R18 R0 K71   ; R18 := R0["mActivePanelName"]
270 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
271 [-]: CALL      R16 2 2      ; R16 := R16(R17)
272 [-]: TEST      R16 1        ; if R16 then PC := 280
273 [-]: JMP       280          ; PC := 280
274 [-]: GETTABLE  R16 R0 K70   ; R16 := R0["mPanelList"]
275 [-]: GETTABLE  R17 R0 K71   ; R17 := R0["mActivePanelName"]
276 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
277 [-]: SELF      R16 R16 K72  ; R17 := R16; R16 := R16["0xEEFE2F88"]
278 [-]: CALL      R16 2 1      ; R16(R17)
279 [-]: JMP       304          ; PC := 304
280 [-]: GETGLOBAL R16 K51      ; R16 := 0x400E7765
281 [-]: GETTABLE  R17 R0 K59   ; R17 := R0["mTabMenu"]
282 [-]: CALL      R16 2 2      ; R16 := R16(R17)
283 [-]: TEST      R16 1        ; if R16 then PC := 304
284 [-]: JMP       304          ; PC := 304
285 [-]: GETTABLE  R16 R0 K59   ; R16 := R0["mTabMenu"]
286 [-]: SELF      R16 R16 K73  ; R17 := R16; R16 := R16["0xC51A5C9D"]
287 [-]: CALL      R16 2 2      ; R16 := R16(R17)
288 [-]: LT        0 K34 R16    ; if 0 >= R16 then PC := 304
289 [-]: JMP       304          ; PC := 304
290 [-]: GETTABLE  R16 R0 K59   ; R16 := R0["mTabMenu"]
291 [-]: SELF      R16 R16 K74  ; R17 := R16; R16 := R16["0xD75E681A"]
292 [-]: LOADK     R18 K75      ; R18 := 1
293 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
294 [-]: GETGLOBAL R17 K51      ; R17 := 0x400E7765
295 [-]: MOVE      R18 R16      ; R18 := R16
296 [-]: CALL      R17 2 2      ; R17 := R17(R18)
297 [-]: TEST      R17 1        ; if R17 then PC := 304
298 [-]: JMP       304          ; PC := 304
299 [-]: SELF      R17 R0 K76   ; R18 := R0; R17 := R0["0xE2A2E3AC"]
300 [-]: GETTABLE  R19 R0 K70   ; R19 := R0["mPanelList"]
301 [-]: GETTABLE  R20 R16 K77  ; R20 := R16["ChannelName"]
302 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
303 [-]: CALL      R17 3 1      ; R17(R18,R19)
304 [-]: GETGLOBAL R17 K23      ; R17 := Engine
305 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["0x9490FE70"]
306 [-]: CALL      R17 1 2      ; R17 := R17()
307 [-]: TEST      R17 1        ; if R17 then PC := 337
308 [-]: JMP       337          ; PC := 337
309 [-]: GETGLOBAL R17 K23      ; R17 := Engine
310 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["0x212137BC"]
311 [-]: CALL      R17 1 2      ; R17 := R17()
312 [-]: TEST      R17 1        ; if R17 then PC := 337
313 [-]: JMP       337          ; PC := 337
314 [-]: GETGLOBAL R17 K51      ; R17 := 0x400E7765
315 [-]: GETTABLE  R18 R0 K79   ; R18 := R0["mInputPanel"]
316 [-]: CALL      R17 2 2      ; R17 := R17(R18)
317 [-]: TEST      R17 1        ; if R17 then PC := 337
318 [-]: JMP       337          ; PC := 337
319 [-]: GETTABLE  R17 R0 K30   ; R17 := R0["VISUAL_MODE_MENU_FULL"]
320 [-]: EQ        1 R1 R17     ; if R1 == R17 then PC := 325
321 [-]: JMP       325          ; PC := 325
322 [-]: GETTABLE  R17 R0 K36   ; R17 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
323 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 337
324 [-]: JMP       337          ; PC := 337
325 [-]: GETTABLE  R17 R0 K79   ; R17 := R0["mInputPanel"]
326 [-]: SELF      R17 R17 K80  ; R18 := R17; R17 := R17["0xFEE41852"]
327 [-]: CALL      R17 2 1      ; R17(R18)
328 [-]: JMP       337          ; PC := 337
329 [-]: GETTABLE  R17 R0 K47   ; R17 := R0["VISUAL_MODE_MENU_SIMPLE"]
330 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 337
331 [-]: JMP       337          ; PC := 337
332 [-]: SETTABLE  R0 K67 R1    ; R0["mVisualMode"] := R1
333 [-]: SELF      R17 R0 K68   ; R18 := R0; R17 := R0["0xD272AC7A"]
334 [-]: MOVE      R19 R1       ; R19 := R1
335 [-]: MOVE      R20 R2       ; R20 := R2
336 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
337 [-]: GETTABLE  R17 R0 K50   ; R17 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
338 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 342
339 [-]: JMP       342          ; PC := 342
340 [-]: LOADK     R3 K34       ; R3 := 0
341 [-]: JMP       350          ; PC := 350
342 [-]: SELF      R17 R0 K81   ; R18 := R0; R17 := R0["0x2240369"]
343 [-]: CALL      R17 2 1      ; R17(R18)
344 [-]: GETGLOBAL R17 K31      ; R17 := mMovie
345 [-]: SELF      R17 R17 K37  ; R18 := R17; R17 := R17["0x1C19D966"]
346 [-]: LOADK     R19 K82      ; R19 := "Window.TabbedChatPanel"
347 [-]: LOADK     R20 K66      ; R20 := "_alpha"
348 [-]: LOADK     R21 K0       ; R21 := 100
349 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
350 [-]: SETTABLE  R0 K67 R1    ; R0["mVisualMode"] := R1
351 [-]: LOADK     R17 K75      ; R17 := 1
352 [-]: LEN       R18 R4       ; R18 := # R4
353 [-]: LOADK     R19 K75      ; R19 := 1
354 [-]: FORPREP   R17 361      ; R17 -= R19; PC := 361
355 [-]: GETGLOBAL R21 K31      ; R21 := mMovie
356 [-]: SELF      R21 R21 K37  ; R22 := R21; R21 := R21["0x1C19D966"]
357 [-]: GETTABLE  R23 R4 R20   ; R23 := R4[R20]
358 [-]: LOADK     R24 K66      ; R24 := "_alpha"
359 [-]: MOVE      R25 R3       ; R25 := R3
360 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
361 [-]: FORLOOP   R17 355      ; R17 += R19; if R17 <= R18 then begin PC := 355; R20 := R17 end
362 [-]: LOADK     R21 K75      ; R21 := 1
363 [-]: LEN       R22 R5       ; R22 := # R5
364 [-]: LOADK     R23 K75      ; R23 := 1
365 [-]: FORPREP   R21 372      ; R21 -= R23; PC := 372
366 [-]: GETGLOBAL R25 K31      ; R25 := mMovie
367 [-]: SELF      R25 R25 K37  ; R26 := R25; R25 := R25["0x1C19D966"]
368 [-]: GETTABLE  R27 R5 R24   ; R27 := R5[R24]
369 [-]: LOADK     R28 K83      ; R28 := "_visible"
370 [-]: MOVE      R29 R7       ; R29 := R7
371 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
372 [-]: FORLOOP   R21 366      ; R21 += R23; if R21 <= R22 then begin PC := 366; R24 := R21 end
373 [-]: GETTABLE  R25 R0 K47   ; R25 := R0["VISUAL_MODE_MENU_SIMPLE"]
374 [-]: EQ        0 R1 R25     ; if R1 ~= R25 then PC := 377
375 [-]: JMP       377          ; PC := 377
376 [-]: MOVE      R25 R0       ; R25 := R0
377 [-]: MOVE      R25 R1       ; R25 := R1
378 [-]: GETGLOBAL R26 K17      ; R26 := gFlashMgr
379 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1089D053"]
380 [-]: LOADK     R28 K84      ; R28 := "HUD.UseAlternateHud"
381 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
382 [-]: TEST      R26 0        ; if not R26 then PC := 385
383 [-]: JMP       385          ; PC := 385
384 [-]: MOVE      R25 R7       ; R25 := R7
385 [-]: GETGLOBAL R26 K31      ; R26 := mMovie
386 [-]: SELF      R26 R26 K37  ; R27 := R26; R26 := R26["0x1C19D966"]
387 [-]: LOADK     R28 K82      ; R28 := "Window.TabbedChatPanel"
388 [-]: LOADK     R29 K83      ; R29 := "_visible"
389 [-]: MOVE      R30 R25      ; R30 := R25
390 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
391 [-]: GETGLOBAL R26 K31      ; R26 := mMovie
392 [-]: SELF      R26 R26 K37  ; R27 := R26; R26 := R26["0x1C19D966"]
393 [-]: LOADK     R28 K85      ; R28 := "Window.TabMenu.MenuPanel"
394 [-]: LOADK     R29 K83      ; R29 := "_visible"
395 [-]: GETTABLE  R30 R0 K50   ; R30 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
396 [-]: EQ        0 R1 R30     ; if R1 ~= R30 then PC := 399
397 [-]: JMP       399          ; PC := 399
398 [-]: MOVE      R30 R0       ; R30 := R0
399 [-]: MOVE      R30 R1       ; R30 := R1
400 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
401 [-]: GETGLOBAL R26 K51      ; R26 := 0x400E7765
402 [-]: GETTABLE  R27 R0 K59   ; R27 := R0["mTabMenu"]
403 [-]: CALL      R26 2 2      ; R26 := R26(R27)
404 [-]: TEST      R26 1        ; if R26 then PC := 431
405 [-]: JMP       431          ; PC := 431
406 [-]: GETGLOBAL R26 K51      ; R26 := 0x400E7765
407 [-]: GETTABLE  R27 R0 K59   ; R27 := R0["mTabMenu"]
408 [-]: GETTABLE  R27 R27 K86  ; R27 := R27["mSelectedElement"]
409 [-]: CALL      R26 2 2      ; R26 := R26(R27)
410 [-]: TEST      R26 1        ; if R26 then PC := 431
411 [-]: JMP       431          ; PC := 431
412 [-]: GETTABLE  R26 R0 K50   ; R26 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
413 [-]: EQ        0 R1 R26     ; if R1 ~= R26 then PC := 425
414 [-]: JMP       425          ; PC := 425
415 [-]: GETTABLE  R26 R0 K59   ; R26 := R0["mTabMenu"]
416 [-]: GETTABLE  R26 R26 K86  ; R26 := R26["mSelectedElement"]
417 [-]: GETTABLE  R26 R26 K87  ; R26 := R26["isFlashing"]
418 [-]: TEST      R26 0        ; if not R26 then PC := 425
419 [-]: JMP       425          ; PC := 425
420 [-]: GETTABLE  R26 R0 K59   ; R26 := R0["mTabMenu"]
421 [-]: SELF      R26 R26 K60  ; R27 := R26; R26 := R26["0xD79ED359"]
422 [-]: GETTABLE  R28 R0 K59   ; R28 := R0["mTabMenu"]
423 [-]: GETTABLE  R28 R28 K86  ; R28 := R28["mSelectedElement"]
424 [-]: CALL      R26 3 1      ; R26(R27,R28)
425 [-]: GETTABLE  R26 R0 K59   ; R26 := R0["mTabMenu"]
426 [-]: SELF      R26 R26 K88  ; R27 := R26; R26 := R26["0x775B2AE5"]
427 [-]: GETTABLE  R28 R0 K59   ; R28 := R0["mTabMenu"]
428 [-]: GETTABLE  R28 R28 K86  ; R28 := R28["mSelectedElement"]
429 [-]: MOVE      R29 R0       ; R29 := R0
430 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
431 [-]: GETTABLE  R26 R0 K67   ; R26 := R0["mVisualMode"]
432 [-]: GETTABLE  R27 R0 K50   ; R27 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
433 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 441
434 [-]: JMP       441          ; PC := 441
435 [-]: GETTABLE  R26 R0 K89   ; R26 := R0["mSimpleTabList"]
436 [-]: SELF      R26 R26 K58  ; R27 := R26; R26 := R26["0x6470BAF4"]
437 [-]: LOADNIL   R28 R28      ; R28 := nil
438 [-]: MOVE      R29 R1       ; R29 := R1
439 [-]: MOVE      R30 R1       ; R30 := R1
440 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
441 [-]: SELF      R26 R0 K90   ; R27 := R0; R26 := R0["0x62F6283F"]
442 [-]: CALL      R26 2 1      ; R26(R27)
443 [-]: GETGLOBAL R26 K51      ; R26 := 0x400E7765
444 [-]: GETTABLE  R27 R0 K79   ; R27 := R0["mInputPanel"]
445 [-]: CALL      R26 2 2      ; R26 := R26(R27)
446 [-]: TEST      R26 1        ; if R26 then PC := 456
447 [-]: JMP       456          ; PC := 456
448 [-]: GETGLOBAL R26 K31      ; R26 := mMovie
449 [-]: SELF      R26 R26 K91  ; R27 := R26; R26 := R26["0x880196A7"]
450 [-]: GETTABLE  R28 R0 K79   ; R28 := R0["mInputPanel"]
451 [-]: GETTABLE  R28 R28 K92  ; R28 := R28["mClipPath"]
452 [-]: LOADK     R29 K93      ; R29 := "Callout"
453 [-]: LOADK     R30 K66      ; R30 := "_alpha"
454 [-]: MOVE      R31 R3       ; R31 := R3
455 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
456 [-]: GETUPVAL  R26 U2       ; R26 := U2
457 [-]: TEST      R26 1        ; if R26 then PC := 483
458 [-]: JMP       483          ; PC := 483
459 [-]: GETGLOBAL R26 K23      ; R26 := Engine
460 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["0x9490FE70"]
461 [-]: CALL      R26 1 2      ; R26 := R26()
462 [-]: TEST      R26 0        ; if not R26 then PC := 483
463 [-]: JMP       483          ; PC := 483
464 [-]: GETGLOBAL R26 K28      ; R26 := _T
465 [-]: GETTABLE  R26 R26 K94  ; R26 := R26["SetButtonBarEnabled"]
466 [-]: TEST      R26 0        ; if not R26 then PC := 483
467 [-]: JMP       483          ; PC := 483
468 [-]: GETTABLE  R26 R0 K36   ; R26 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
469 [-]: EQ        1 R1 R26     ; if R1 == R26 then PC := 474
470 [-]: JMP       474          ; PC := 474
471 [-]: GETTABLE  R26 R0 K30   ; R26 := R0["VISUAL_MODE_MENU_FULL"]
472 [-]: EQ        0 R1 R26     ; if R1 ~= R26 then PC := 479
473 [-]: JMP       479          ; PC := 479
474 [-]: GETGLOBAL R26 K28      ; R26 := _T
475 [-]: GETTABLE  R26 R26 K95  ; R26 := R26["0xD7B51EC3"]
476 [-]: MOVE      R27 R0       ; R27 := R0
477 [-]: CALL      R26 2 1      ; R26(R27)
478 [-]: JMP       483          ; PC := 483
479 [-]: GETGLOBAL R26 K28      ; R26 := _T
480 [-]: GETTABLE  R26 R26 K95  ; R26 := R26["0xD7B51EC3"]
481 [-]: MOVE      R27 R1       ; R27 := R1
482 [-]: CALL      R26 2 1      ; R26(R27)
483 [-]: RETURN    R0 1         ; return 


; Function #123.3:
;
; Name:            
; Defined at line: 5977
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "trackAsMenu"
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mWindowTitle"]
  8 [-]: SETTABLE  R1 K5 K6     ; R1["isDragging"] := "0x1"
  9 [-]: RETURN    R0 1         ; return 


; Function #123.4:
;
; Name:            
; Defined at line: 5982
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "trackAsMenu"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mWindowTitle"]
  8 [-]: SETTABLE  R1 K5 K6     ; R1["isDragging"] := "0x0"
  9 [-]: RETURN    R0 1         ; return 


; Function #123.5:
;
; Name:            
; Defined at line: 5987
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #123.6:
;
; Name:            
; Defined at line: 5990
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #123.7:
;
; Name:            
; Defined at line: 5993
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mVisualMode"]
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: LOADK     R5 K4        ; R5 := "trackAsMenu"
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 12 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 16 [-]: LOADK     R6 K6        ; R6 := 100
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mWindowStatus"]
 19 [-]: SETTABLE  R2 K8 K9     ; R2["isDragging"] := "0x1"
 20 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mWindowStatus"]
 21 [-]: SETTABLE  R2 K10 R1    ; R2["ResizeClipName"] := R1
 22 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mPanelList"]
 23 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mActivePanelName"]
 24 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 25 [-]: EQ        1 R2 K13     ; if R2 == nil then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mPanelList"]
 28 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mActivePanelName"]
 29 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 30 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0xD4E09EEA"]
 31 [-]: CALL      R2 2 1       ; R2(R3)
 32 [-]: RETURN    R0 1         ; return 


; Function #123.8:
;
; Name:            
; Defined at line: 6008
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K2        ; R5 := "trackAsMenu"
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: LOADK     R5 K3        ; R5 := "_alpha"
 11 [-]: LOADK     R6 K4        ; R6 := 50
 12 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 13 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mWindowStatus"]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: SETTABLE  R2 K6 R3     ; R2["isDragging"] := R3
 16 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mPanelList"]
 17 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mActivePanelName"]
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mPanelList"]
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mActivePanelName"]
 23 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 24 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0xF208C4C7"]
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["Resizing"]
 28 [-]: TEST      R2 0         ; if not R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: SETTABLE  R0 K11 K12   ; R0["Resizing"] := "0x0"
 31 [-]: RETURN    R0 1         ; return 


; Function #123.9:
;
; Name:            
; Defined at line: 6021
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K2        ; R5 := "_alpha"
  5 [-]: LOADK     R6 K3        ; R6 := 75
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #123.10:
;
; Name:            
; Defined at line: 6025
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K2        ; R5 := "_alpha"
  5 [-]: LOADK     R6 K3        ; R6 := 50
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #123.11:
;
; Name:            
; Defined at line: 6029
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["x"]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xF81722A2"]
  5 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["ReverseX"]
  6 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
  7 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["width"]
  8 [-]: LOADK     R7 K5        ; R7 := 0
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 11 [-]: SETTABLE  R2 K0 R3     ; R2["x"] := R3
 12 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["y"]
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xF81722A2"]
 15 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["ReverseY"]
 16 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
 17 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["height"]
 18 [-]: LOADK     R7 K5        ; R7 := 0
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 21 [-]: SETTABLE  R2 K6 R3     ; R2["y"] := R3
 22 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["width"]
 23 [-]: GETUPVAL  R4 U0        ; R4 := U0
 24 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xF81722A2"]
 25 [-]: GETTABLE  R5 R1 K9     ; R5 := R1["ReverseWidth"]
 26 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
 27 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["width"]
 28 [-]: LOADK     R7 K5        ; R7 := 0
 29 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 30 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 31 [-]: SETTABLE  R2 K4 R3     ; R2["width"] := R3
 32 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["height"]
 33 [-]: GETUPVAL  R4 U0        ; R4 := U0
 34 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xF81722A2"]
 35 [-]: GETTABLE  R5 R1 K10    ; R5 := R1["ReverseHeight"]
 36 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
 37 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["height"]
 38 [-]: LOADK     R7 K5        ; R7 := 0
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 41 [-]: SETTABLE  R2 K8 R3     ; R2["height"] := R3
 42 [-]: RETURN    R2 2         ; return R2
 43 [-]: RETURN    R0 1         ; return 


; Function #123.12:
;
; Name:            
; Defined at line: 6043
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xB40DEC3F"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  4 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mClipName"]
  5 [-]: LOADK     R4 K4        ; R4 := ".Hint.SimpleTabList.SimpleElement"
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["mSimpleTabList"] := R1
  9 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 10 [-]: SETTABLE  R1 K5 K6     ; R1["mForcedHorizontalSeparation"] := 0
 11 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 12 [-]: SETTABLE  R1 K7 K6     ; R1["mForcedVerticalSeparation"] := 0
 13 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 14 [-]: SETTABLE  R1 K8 K9     ; R1["mFlashDuration"] := 3
 15 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 16 [-]: CLOSURE   R2 0         ; R2 := closure(Function #123.12.1)
 17 [-]: SETTABLE  R1 K10 R2    ; R1["GetIndexForTabId"] := R2
 18 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 19 [-]: CLOSURE   R2 1         ; R2 := closure(Function #123.12.2)
 20 [-]: SETTABLE  R1 K11 R2    ; R1["GetElementByTabId"] := R2
 21 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 22 [-]: CLOSURE   R2 2         ; R2 := closure(Function #123.12.3)
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: SETTABLE  R1 K12 R2    ; R1["ShowPersonalNotification"] := R2
 25 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 26 [-]: CLOSURE   R2 3         ; R2 := closure(Function #123.12.4)
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: SETTABLE  R1 K13 R2    ; R1["FlashTab"] := R2
 29 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 30 [-]: CLOSURE   R2 4         ; R2 := closure(Function #123.12.5)
 31 [-]: GETUPVAL  R0 U1        ; R0 := U1
 32 [-]: SETTABLE  R1 K14 R2    ; R1["AddTab"] := R2
 33 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 34 [-]: CLOSURE   R2 5         ; R2 := closure(Function #123.12.6)
 35 [-]: GETUPVAL  R0 U1        ; R0 := U1
 36 [-]: SETTABLE  R1 K15 R2    ; R1["RemoveTab"] := R2
 37 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 38 [-]: CLOSURE   R2 6         ; R2 := closure(Function #123.12.7)
 39 [-]: SETTABLE  R1 K16 R2    ; R1["CalculateX"] := R2
 40 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 41 [-]: CLOSURE   R2 7         ; R2 := closure(Function #123.12.8)
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: GETUPVAL  R0 U2        ; R0 := U2
 44 [-]: SETTABLE  R1 K17 R2    ; R1["mElementDrawCallback"] := R2
 45 [-]: GETGLOBAL R1 K18       ; R1 := Engine
 46 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["0x9490FE70"]
 47 [-]: CALL      R1 1 2       ; R1 := R1()
 48 [-]: TEST      R1 0         ; if not R1 then PC := 66
 49 [-]: JMP       66           ; PC := 66
 50 [-]: GETGLOBAL R1 K20       ; R1 := 0xF595ADDE
 51 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 52 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x6B7B470B"]
 53 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 54 [-]: LOADK     R5 K22       ; R5 := ".Hint.SimpleTabList"
 55 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 56 [-]: LOADK     R5 K23       ; R5 := "_x"
 57 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 58 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 59 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 60 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0x880196A7"]
 61 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 62 [-]: LOADK     R5 K25       ; R5 := "Hint.SimpleTabList"
 63 [-]: LOADK     R6 K23       ; R6 := "_x"
 64 [-]: ADD       R7 R1 K26    ; R7 := R1 + 5
 65 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 66 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSimpleTabList"]
 67 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0xA77DA8EE"]
 68 [-]: NEWTABLE  R4 0 1       ; R4 := {}
 69 [-]: SETTABLE  R4 K28 K29   ; R4["mTabId"] := nil
 70 [-]: MOVE      R5 R1        ; R5 := R1
 71 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 72 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 73 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0x880196A7"]
 74 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 75 [-]: LOADK     R5 K30       ; R5 := "Hint.SimpleTabListMask"
 76 [-]: LOADK     R6 K31       ; R6 := "_y"
 77 [-]: LOADK     R7 K32       ; R7 := -50
 78 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 79 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 80 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0x880196A7"]
 81 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 82 [-]: LOADK     R5 K30       ; R5 := "Hint.SimpleTabListMask"
 83 [-]: LOADK     R6 K33       ; R6 := "_height"
 84 [-]: LOADK     R7 K34       ; R7 := 100
 85 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 86 [-]: RETURN    R0 1         ; return 


; Function #123.12.1:
;
; Name:            
; Defined at line: 6053
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R2 K0        ; R2 := 2
  2 [-]: LOADK     R3 K0        ; R3 := 2
  3 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0xC51A5C9D"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: LOADK     R5 K2        ; R5 := 1
  6 [-]: FORPREP   R3 15        ; R3 -= R5; PC := 15
  7 [-]: SELF      R7 R0 K3     ; R8 := R0; R7 := R0["0xD75E681A"]
  8 [-]: MOVE      R9 R6        ; R9 := R6
  9 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 10 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mTabId"]
 11 [-]: LE        0 R1 R8      ; if R1 > R8 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: JMP       16           ; PC := 16
 14 [-]: ADD       R2 R2 K2     ; R2 := R2 + 1
 15 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #123.12.2:
;
; Name:            
; Defined at line: 6068
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R3 K0        ; R3 := 1
  2 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0xC51A5C9D"]
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: LOADK     R5 K0        ; R5 := 1
  5 [-]: FORPREP   R3 16        ; R3 -= R5; PC := 16
  6 [-]: SELF      R7 R0 K2     ; R8 := R0; R7 := R0["0xD75E681A"]
  7 [-]: MOVE      R9 R6        ; R9 := R6
  8 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
  9 [-]: MOVE      R2 R7        ; R2 := R7
 10 [-]: GETTABLE  R7 R2 K3     ; R7 := R2["mTabId"]
 11 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: JMP       17           ; PC := 17
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADNIL   R2 R2        ; R2 := nil
 16 [-]: FORLOOP   R3 6         ; R3 += R5; if R3 <= R4 then begin PC := 6; R6 := R3 end
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: RETURN    R0 1         ; return 


; Function #123.12.3:
;
; Name:            
; Defined at line: 6083
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0x53805A31"]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 23
  8 [-]: JMP       23           ; PC := 23
  9 [-]: SETTABLE  R3 K2 K3     ; R3["mHasPersonalNotification"] := "0x1"
 10 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 11 [-]: GETTABLE  R5 R3 K4     ; R5 := R3["mClipName"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 43
 14 [-]: JMP       43           ; PC := 43
 15 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x880196A7"]
 17 [-]: GETTABLE  R6 R3 K4     ; R6 := R3["mClipName"]
 18 [-]: LOADK     R7 K7        ; R7 := "Dot"
 19 [-]: LOADK     R8 K8        ; R8 := "_visible"
 20 [-]: MOVE      R9 R1        ; R9 := R1
 21 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 22 [-]: JMP       43           ; PC := 43
 23 [-]: TEST      R2 0         ; if not R2 then PC := 43
 24 [-]: JMP       43           ; PC := 43
 25 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0["0x36D9355B"]
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 28 [-]: SELF      R5 R0 K10    ; R6 := R0; R5 := R0["0xA6D439FA"]
 29 [-]: MOVE      R7 R4        ; R7 := R4
 30 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 31 [-]: SETTABLE  R8 K11 R1    ; R8["mTabId"] := R1
 32 [-]: SETTABLE  R8 K2 K3     ; R8["mHasPersonalNotification"] := "0x1"
 33 [-]: GETUPVAL  R9 U0        ; R9 := U0
 34 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mVisualMode"]
 35 [-]: GETUPVAL  R10 U0       ; R10 := U0
 36 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 37 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: MOVE      R9 R0        ; R9 := R0
 40 [-]: MOVE      R9 R1        ; R9 := R1
 41 [-]: MOVE      R10 R1       ; R10 := R1
 42 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 43 [-]: RETURN    R0 1         ; return 


; Function #123.12.4:
;
; Name:            
; Defined at line: 6099
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x36D9355B"]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xD75E681A"]
  5 [-]: MOVE      R5 R2        ; R5 := R2
  6 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  8 [-]: MOVE      R5 R3        ; R5 := R3
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 1         ; if R4 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mDelayedFadeOutTimer"]
 14 [-]: SETTABLE  R3 K3 R4     ; R3["mFlashingTimer"] := R4
 15 [-]: SETTABLE  R3 K5 K6     ; R3["mBouncing"] := "0x0"
 16 [-]: RETURN    R0 1         ; return 


; Function #123.12.5:
;
; Name:            
; Defined at line: 6108
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x36D9355B"]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xA6D439FA"]
  5 [-]: MOVE      R5 R2        ; R5 := R2
  6 [-]: NEWTABLE  R6 0 1       ; R6 := {}
  7 [-]: SETTABLE  R6 K2 R1     ; R6["mTabId"] := R1
  8 [-]: GETUPVAL  R7 U0        ; R7 := U0
  9 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mVisualMode"]
 10 [-]: GETUPVAL  R8 U0        ; R8 := U0
 11 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 12 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R7 R0        ; R7 := R0
 15 [-]: MOVE      R7 R1        ; R7 := R1
 16 [-]: MOVE      R8 R1        ; R8 := R1
 17 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 18 [-]: RETURN    R0 1         ; return 


; Function #123.12.6:
;
; Name:            
; Defined at line: 6114
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0x53805A31"]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 48
  8 [-]: JMP       48           ; PC := 48
  9 [-]: GETTABLE  R4 R3 K2     ; R4 := R3["mIndex"]
 10 [-]: EQ        1 R4 K3      ; if R4 == 1 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mVisualMode"]
 14 [-]: GETUPVAL  R5 U0        ; R5 := U0
 15 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 16 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x96ABF26F"]
 21 [-]: GETTABLE  R7 R3 K2     ; R7 := R3["mIndex"]
 22 [-]: MOVE      R8 R4        ; R8 := R4
 23 [-]: MOVE      R9 R4        ; R9 := R4
 24 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 25 [-]: JMP       48           ; PC := 48
 26 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 27 [-]: GETTABLE  R6 R3 K7     ; R6 := R3["mClipName"]
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: TEST      R5 1         ; if R5 then PC := 48
 30 [-]: JMP       48           ; PC := 48
 31 [-]: SETTABLE  R3 K8 K9     ; R3["mHasPersonalNotification"] := "0x0"
 32 [-]: GETGLOBAL R5 K10       ; R5 := mMovie
 33 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x880196A7"]
 34 [-]: GETTABLE  R7 R3 K7     ; R7 := R3["mClipName"]
 35 [-]: LOADK     R8 K12       ; R8 := "Dot"
 36 [-]: LOADK     R9 K13       ; R9 := "_visible"
 37 [-]: MOVE      R10 R0       ; R10 := R0
 38 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 39 [-]: TEST      R2 0         ; if not R2 then PC := 48
 40 [-]: JMP       48           ; PC := 48
 41 [-]: SETTABLE  R3 K14 K15   ; R3["mTabId"] := nil
 42 [-]: GETGLOBAL R5 K10       ; R5 := mMovie
 43 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x1C19D966"]
 44 [-]: GETTABLE  R7 R3 K7     ; R7 := R3["mClipName"]
 45 [-]: LOADK     R8 K13       ; R8 := "_visible"
 46 [-]: MOVE      R9 R0        ; R9 := R0
 47 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 48 [-]: RETURN    R0 1         ; return 


; Function #123.12.7:
;
; Name:            
; Defined at line: 6136
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mIndex"]
  3 [-]: LT        0 K2 R3      ; if 1 >= R3 then PC := 32
  4 [-]: JMP       32           ; PC := 32
  5 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xD75E681A"]
  6 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mIndex"]
  7 [-]: SUB       R5 R5 K2     ; R5 := R5 - 1
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 32
 13 [-]: JMP       32           ; PC := 32
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0xF595ADDE
 15 [-]: GETGLOBAL R5 K6        ; R5 := mMovie
 16 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x6B7B470B"]
 17 [-]: GETTABLE  R7 R3 K8     ; R7 := R3["mClipName"]
 18 [-]: LOADK     R8 K9        ; R8 := "_x"
 19 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 20 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 21 [-]: GETGLOBAL R5 K5        ; R5 := 0xF595ADDE
 22 [-]: GETGLOBAL R6 K6        ; R6 := mMovie
 23 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0x6B7B470B"]
 24 [-]: GETTABLE  R8 R3 K8     ; R8 := R3["mClipName"]
 25 [-]: LOADK     R9 K10       ; R9 := ".SelectedLine"
 26 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 27 [-]: LOADK     R9 K11       ; R9 := "_width"
 28 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 29 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 30 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 31 [-]: ADD       R2 R4 K12    ; R2 := R4 + 5
 32 [-]: RETURN    R2 2         ; return R2
 33 [-]: RETURN    R0 1         ; return 


; Function #123.12.8:
;
; Name:            
; Defined at line: 6149
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTabMenu"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 14 [-]: LOADK     R4 K6        ; R4 := "_visible"
 15 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mTabId"]
 16 [-]: EQ        0 R5 K1      ; if R5 ~= nil then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 21 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["mTabId"]
 22 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mTabMenu"]
 27 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0xF61F409A"]
 28 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mTabId"]
 29 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 30 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 0         ; if not R2 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: LOADK     R2 K9        ; R2 := 1
 37 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 38 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
 39 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 40 [-]: LOADK     R6 K11       ; R6 := "Label"
 41 [-]: LOADK     R7 K12       ; R7 := "multiline"
 42 [-]: MOVE      R8 R0        ; R8 := R0
 43 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 44 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 45 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
 46 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 47 [-]: LOADK     R6 K13       ; R6 := "Icon"
 48 [-]: LOADK     R7 K6        ; R7 := "_visible"
 49 [-]: GETGLOBAL R8 K2        ; R8 := 0x400E7765
 50 [-]: GETTABLE  R9 R1 K13    ; R9 := R1["Icon"]
 51 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 52 [-]: MOVE      R8 R8        ; R8 := R8
 53 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 54 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 55 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
 56 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 57 [-]: LOADK     R6 K11       ; R6 := "Label"
 58 [-]: LOADK     R7 K6        ; R7 := "_visible"
 59 [-]: GETGLOBAL R8 K2        ; R8 := 0x400E7765
 60 [-]: GETTABLE  R9 R1 K13    ; R9 := R1["Icon"]
 61 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 62 [-]: CALL      R3 0 1       ; R3(R4,...)
 63 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 64 [-]: GETTABLE  R4 R1 K13    ; R4 := R1["Icon"]
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 77
 67 [-]: JMP       77           ; PC := 77
 68 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 69 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x26581636"]
 70 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 71 [-]: LOADK     R6 K15       ; R6 := ".Icon"
 72 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 73 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["Icon"]
 74 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 75 [-]: LOADK     R2 K16       ; R2 := 16
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 78 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x17028E8F"]
 79 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 80 [-]: LOADK     R6 K18       ; R6 := ".Label.text"
 81 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 82 [-]: GETTABLE  R6 R1 K19    ; R6 := R1["Name"]
 83 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 84 [-]: GETGLOBAL R3 K20       ; R3 := 0xF595ADDE
 85 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 86 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x6B7B470B"]
 87 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 88 [-]: LOADK     R7 K22       ; R7 := ".Label"
 89 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 90 [-]: LOADK     R7 K23       ; R7 := "textWidth"
 91 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 92 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 93 [-]: MOVE      R2 R3        ; R2 := R3
 94 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 95 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
 96 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 97 [-]: LOADK     R6 K24       ; R6 := "Dot"
 98 [-]: LOADK     R7 K25       ; R7 := "_color"
 99 [-]: GETGLOBAL R8 K26       ; R8 := _G
100 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["UIColor_Red"]
101 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
102 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
103 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
104 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
105 [-]: LOADK     R6 K24       ; R6 := "Dot"
106 [-]: LOADK     R7 K6        ; R7 := "_visible"
107 [-]: GETTABLE  R8 R0 K28    ; R8 := R0["mHasPersonalNotification"]
108 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
109 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
110 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
111 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
112 [-]: LOADK     R6 K24       ; R6 := "Dot"
113 [-]: LOADK     R7 K29       ; R7 := "_x"
114 [-]: MOVE      R8 R2        ; R8 := R2
115 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
116 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
117 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
118 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
119 [-]: LOADK     R6 K30       ; R6 := "SelectedLine"
120 [-]: LOADK     R7 K25       ; R7 := "_color"
121 [-]: GETUPVAL  R8 U1        ; R8 := U1
122 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
123 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
124 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
125 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
126 [-]: LOADK     R6 K30       ; R6 := "SelectedLine"
127 [-]: LOADK     R7 K31       ; R7 := "_width"
128 [-]: MOVE      R8 R2        ; R8 := R2
129 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
130 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
131 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
132 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
133 [-]: LOADK     R6 K30       ; R6 := "SelectedLine"
134 [-]: LOADK     R7 K6        ; R7 := "_visible"
135 [-]: GETTABLE  R8 R0 K32    ; R8 := R0["mIndex"]
136 [-]: EQ        1 R8 K9      ; if R8 == 1 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: MOVE      R8 R0        ; R8 := R0
139 [-]: MOVE      R8 R1        ; R8 := R1
140 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
141 [-]: RETURN    R0 1         ; return 


; Function #123.13:
;
; Name:            
; Defined at line: 6199
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R1 1         ; if R1 then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mVisualMode"]
  4 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mVisualMode"]
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
  9 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 12 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mTabMenu"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mTabMenu"]
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xC51A5C9D"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: LT        1 K6 R2      ; if 1 < R2 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: GETGLOBAL R3 K7        ; R3 := Engine
 24 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x9490FE70"]
 25 [-]: CALL      R3 1 2       ; R3 := R3()
 26 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 27 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x880196A7"]
 28 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 29 [-]: LOADK     R7 K12       ; R7 := "TabMenu.LeftBumper"
 30 [-]: LOADK     R8 K13       ; R8 := "_visible"
 31 [-]: TESTSET   R9 R3 0      ; if not R3 then PC := 34 else R9 := R3
 32 [-]: JMP       34           ; PC := 34
 33 [-]: MOVE      R9 R2        ; R9 := R2
 34 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 35 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 36 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x880196A7"]
 37 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 38 [-]: LOADK     R7 K14       ; R7 := "TabMenu.RightBumper"
 39 [-]: LOADK     R8 K13       ; R8 := "_visible"
 40 [-]: TESTSET   R9 R3 0      ; if not R3 then PC := 43 else R9 := R3
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R9 R2        ; R9 := R2
 43 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 44 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 45 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x880196A7"]
 46 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 47 [-]: LOADK     R7 K15       ; R7 := "TabMenu.LeftArrow"
 48 [-]: LOADK     R8 K13       ; R8 := "_visible"
 49 [-]: TEST      R3 1         ; if R3 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: MOVE      R9 R2        ; R9 := R2
 52 [-]: JMP       55           ; PC := 55
 53 [-]: MOVE      R9 R0        ; R9 := R0
 54 [-]: MOVE      R9 R1        ; R9 := R1
 55 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 56 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 57 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x880196A7"]
 58 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 59 [-]: LOADK     R7 K16       ; R7 := "TabMenu.RightArrow"
 60 [-]: LOADK     R8 K13       ; R8 := "_visible"
 61 [-]: TEST      R3 1         ; if R3 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: MOVE      R9 R2        ; R9 := R2
 64 [-]: JMP       67           ; PC := 67
 65 [-]: MOVE      R9 R0        ; R9 := R0
 66 [-]: MOVE      R9 R1        ; R9 := R1
 67 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 68 [-]: RETURN    R0 1         ; return 


; Function #123.14:
;
; Name:            
; Defined at line: 6212
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mPanelList"]
  2 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
  3 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["mChannelType"]
  4 [-]: LOADNIL   R6 R6        ; R6 := nil
  5 [-]: GETGLOBAL R7 K2        ; R7 := channelIcons
  6 [-]: GETTABLE  R8 R4 K1     ; R8 := R4["mChannelType"]
  7 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1
  8 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
  9 [-]: EQ        1 R7 K4      ; if R7 == nil then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R7 K2        ; R7 := channelIcons
 12 [-]: GETTABLE  R8 R4 K1     ; R8 := R4["mChannelType"]
 13 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1
 14 [-]: GETTABLE  R6 R7 R8     ; R6 := R7[R8]
 15 [-]: NEWTABLE  R7 0 6       ; R7 := {}
 16 [-]: SETTABLE  R7 K5 R6     ; R7["Icon"] := R6
 17 [-]: SETTABLE  R7 K6 R1     ; R7["Name"] := R1
 18 [-]: SETTABLE  R7 K7 R2     ; R7["ChannelName"] := R2
 19 [-]: SETTABLE  R7 K8 R3     ; R7["IsActive"] := R3
 20 [-]: SETTABLE  R7 K9 R5     ; R7["Id"] := R5
 21 [-]: SETTABLE  R7 K10 K11   ; R7["isFlashing"] := "0x0"
 22 [-]: LOADK     R8 K3        ; R8 := 1
 23 [-]: LOADK     R9 K3        ; R9 := 1
 24 [-]: GETTABLE  R10 R0 K12   ; R10 := R0["mTabMenu"]
 25 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0xC51A5C9D"]
 26 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 27 [-]: LOADK     R11 K3       ; R11 := 1
 28 [-]: FORPREP   R9 39        ; R9 -= R11; PC := 39
 29 [-]: GETTABLE  R13 R0 K12   ; R13 := R0["mTabMenu"]
 30 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13["0xD75E681A"]
 31 [-]: MOVE      R15 R8       ; R15 := R8
 32 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 33 [-]: GETTABLE  R14 R7 K9    ; R14 := R7["Id"]
 34 [-]: GETTABLE  R15 R13 K9   ; R15 := R13["Id"]
 35 [-]: LT        0 R14 R15    ; if R14 >= R15 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: JMP       40           ; PC := 40
 38 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1
 39 [-]: FORLOOP   R9 29        ; R9 += R11; if R9 <= R10 then begin PC := 29; R12 := R9 end
 40 [-]: GETGLOBAL R14 K15      ; R14 := 0x93B1256B
 41 [-]: LOADK     R15 K16      ; R15 := "ChatRedux::AddTab: Adding tab with channel name: "
 42 [-]: MOVE      R16 R2       ; R16 := R2
 43 [-]: LOADK     R17 K17      ; R17 := " to index "
 44 [-]: GETGLOBAL R18 K18      ; R18 := 0x9FAED6BC
 45 [-]: MOVE      R19 R8       ; R19 := R8
 46 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 47 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 48 [-]: CALL      R14 2 1      ; R14(R15)
 49 [-]: GETTABLE  R14 R0 K12   ; R14 := R0["mTabMenu"]
 50 [-]: SELF      R14 R14 K19  ; R15 := R14; R14 := R14["0xA6D439FA"]
 51 [-]: MOVE      R16 R8       ; R16 := R8
 52 [-]: MOVE      R17 R7       ; R17 := R7
 53 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 54 [-]: GETTABLE  R15 R4 K20   ; R15 := R4["mIsFlashingEnabled"]
 55 [-]: TEST      R15 0        ; if not R15 then PC := 77
 56 [-]: JMP       77           ; PC := 77
 57 [-]: GETTABLE  R15 R4 K21   ; R15 := R4["mCanFlash"]
 58 [-]: TEST      R15 0        ; if not R15 then PC := 77
 59 [-]: JMP       77           ; PC := 77
 60 [-]: GETTABLE  R15 R4 K22   ; R15 := R4["mCachedLines"]
 61 [-]: LEN       R15 R15      ; R15 := # R15
 62 [-]: LT        0 K23 R15    ; if 0 >= R15 then PC := 77
 63 [-]: JMP       77           ; PC := 77
 64 [-]: GETGLOBAL R15 K24      ; R15 := Engine
 65 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["0x1398DAFB"]
 66 [-]: CALL      R15 1 2      ; R15 := R15()
 67 [-]: TEST      R15 0        ; if not R15 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETUPVAL  R15 U0       ; R15 := U0
 70 [-]: CALL      R15 1 2      ; R15 := R15()
 71 [-]: TEST      R15 1        ; if R15 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETTABLE  R15 R0 K12   ; R15 := R0["mTabMenu"]
 74 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15["0x8D05C017"]
 75 [-]: MOVE      R17 R14      ; R17 := R14
 76 [-]: CALL      R15 3 1      ; R15(R16,R17)
 77 [-]: SELF      R15 R0 K27   ; R16 := R0; R15 := R0["0xDD0B0B9E"]
 78 [-]: CALL      R15 2 1      ; R15(R16)
 79 [-]: RETURN    R7 2         ; return R7
 80 [-]: RETURN    R0 1         ; return 


; Function #123.15:
;
; Name:            
; Defined at line: 6245
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := string
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0x7B782033"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K2        ; R5 := 2
  5 [-]: LOADK     R6 K3        ; R6 := -1
  6 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  7 [-]: MOVE      R1 R3        ; R1 := R3
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0x93B1256B
  9 [-]: LOADK     R4 K5        ; R4 := "ChatRedux::RemoveTab: Removing tab with name "
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: LOADK     R6 K6        ; R6 := ", pSkipRedraw: "
 12 [-]: GETGLOBAL R7 K7        ; R7 := 0x9FAED6BC
 13 [-]: MOVE      R8 R2        ; R8 := R2
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mTabMenu"]
 18 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mElements"]
 19 [-]: LEN       R3 R3        ; R3 := # R3
 20 [-]: LOADK     R4 K10       ; R4 := 1
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: LOADK     R6 K10       ; R6 := 1
 23 [-]: FORPREP   R4 51        ; R4 -= R6; PC := 51
 24 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["mTabMenu"]
 25 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mElements"]
 26 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 27 [-]: GETTABLE  R9 R8 K11    ; R9 := R8["ChannelName"]
 28 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 51
 29 [-]: JMP       51           ; PC := 51
 30 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mTabMenu"]
 31 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0xD79ED359"]
 32 [-]: MOVE      R11 R8       ; R11 := R8
 33 [-]: MOVE      R12 R1       ; R12 := R1
 34 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 35 [-]: LT        0 K10 R3     ; if 1 >= R3 then PC := 44
 36 [-]: JMP       44           ; PC := 44
 37 [-]: TEST      R2 1         ; if R2 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mTabMenu"]
 40 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9["0x6A69B60"]
 41 [-]: MOVE      R11 R8       ; R11 := R8
 42 [-]: MOVE      R12 R7       ; R12 := R7
 43 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 44 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mTabMenu"]
 45 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x96ABF26F"]
 46 [-]: MOVE      R11 R7       ; R11 := R7
 47 [-]: MOVE      R12 R2       ; R12 := R2
 48 [-]: MOVE      R13 R2       ; R13 := R2
 49 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 50 [-]: JMP       52           ; PC := 52
 51 [-]: FORLOOP   R4 24        ; R4 += R6; if R4 <= R5 then begin PC := 24; R7 := R4 end
 52 [-]: SELF      R9 R0 K15    ; R10 := R0; R9 := R0["0xDD0B0B9E"]
 53 [-]: CALL      R9 2 1       ; R9(R10)
 54 [-]: RETURN    R0 1         ; return 


; Function #123.16:
;
; Name:            
; Defined at line: 6267
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xB40DEC3F"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  4 [-]: LOADK     R3 K3        ; R3 := "Window.TabMenu.MenuPanel.MenuEntry"
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: SETTABLE  R0 K0 R1     ; R0["mTabMenu"] := R1
  7 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
  8 [-]: SETTABLE  R1 K4 K5     ; R1["mForcedVerticalSeparation"] := 0
  9 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 10 [-]: SETTABLE  R1 K6 K5     ; R1["mForcedHorizontalSeparation"] := 0
 11 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 12 [-]: SETTABLE  R1 K7 K5     ; R1["mInitialX"] := 0
 13 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 14 [-]: SETTABLE  R1 K8 R0     ; R1["mParent"] := R0
 15 [-]: GETGLOBAL R1 K9        ; R1 := 0x8C64AFA9
 16 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 17 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mTabMenu"]
 18 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mClipName"]
 19 [-]: LOADK     R4 K11       ; R4 := ".swapDepths"
 20 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 21 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mTabMenu"]
 22 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mInitialDepth"]
 23 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mTabMenu"]
 24 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["mDepthDirection"]
 25 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 28 [-]: CLOSURE   R2 0         ; R2 := closure(Function #123.16.1)
 29 [-]: SETTABLE  R1 K14 R2    ; R1["OnRemoveElement"] := R2
 30 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 31 [-]: CLOSURE   R2 1         ; R2 := closure(Function #123.16.2)
 32 [-]: GETUPVAL  R0 U1        ; R0 := U1
 33 [-]: SETTABLE  R1 K15 R2    ; R1["ShowPersonalNotification"] := R2
 34 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 35 [-]: CLOSURE   R2 2         ; R2 := closure(Function #123.16.3)
 36 [-]: SETTABLE  R1 K16 R2    ; R1["HidePersonalNotification"] := R2
 37 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 38 [-]: CLOSURE   R2 3         ; R2 := closure(Function #123.16.4)
 39 [-]: GETUPVAL  R0 U2        ; R0 := U2
 40 [-]: GETUPVAL  R0 U1        ; R0 := U1
 41 [-]: GETUPVAL  R0 U3        ; R0 := U3
 42 [-]: GETUPVAL  R0 U4        ; R0 := U4
 43 [-]: SETTABLE  R1 K17 R2    ; R1["StartFlashing"] := R2
 44 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 45 [-]: CLOSURE   R2 4         ; R2 := closure(Function #123.16.5)
 46 [-]: GETUPVAL  R0 U1        ; R0 := U1
 47 [-]: SETTABLE  R1 K18 R2    ; R1["StopFlashing"] := R2
 48 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 49 [-]: CLOSURE   R2 5         ; R2 := closure(Function #123.16.6)
 50 [-]: GETUPVAL  R0 U1        ; R0 := U1
 51 [-]: SETTABLE  R1 K19 R2    ; R1["SetTabColour"] := R2
 52 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 53 [-]: CLOSURE   R2 6         ; R2 := closure(Function #123.16.7)
 54 [-]: GETUPVAL  R0 U5        ; R0 := U5
 55 [-]: SETTABLE  R1 K20 R2    ; R1["DrawDecoLine"] := R2
 56 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 57 [-]: CLOSURE   R2 7         ; R2 := closure(Function #123.16.8)
 58 [-]: GETUPVAL  R0 U1        ; R0 := U1
 59 [-]: SETTABLE  R1 K21 R2    ; R1["SetDivLinePos"] := R2
 60 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 61 [-]: CLOSURE   R2 8         ; R2 := closure(Function #123.16.9)
 62 [-]: GETUPVAL  R0 U1        ; R0 := U1
 63 [-]: SETTABLE  R1 K22 R2    ; R1["SetRightBumperPos"] := R2
 64 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 65 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mTabMenu"]
 66 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["Redraw"]
 67 [-]: SETTABLE  R1 K23 R2    ; R1["_TabMenu_Redraw"] := R2
 68 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 69 [-]: CLOSURE   R2 9         ; R2 := closure(Function #123.16.10)
 70 [-]: SETTABLE  R1 K24 R2    ; R1["Redraw"] := R2
 71 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 72 [-]: CLOSURE   R2 10        ; R2 := closure(Function #123.16.11)
 73 [-]: SETTABLE  R1 K25 R2    ; R1["CalculateX"] := R2
 74 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 75 [-]: CLOSURE   R2 11        ; R2 := closure(Function #123.16.12)
 76 [-]: MOVE      R0 R0        ; R0 := R0
 77 [-]: GETUPVAL  R0 U1        ; R0 := U1
 78 [-]: GETUPVAL  R0 U3        ; R0 := U3
 79 [-]: SETTABLE  R1 K26 R2    ; R1["mElementDrawCallback"] := R2
 80 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 81 [-]: CLOSURE   R2 12        ; R2 := closure(Function #123.16.13)
 82 [-]: GETUPVAL  R0 U1        ; R0 := U1
 83 [-]: SETTABLE  R1 K27 R2    ; R1["IsMouseInTabMask"] := R2
 84 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 85 [-]: CLOSURE   R2 13        ; R2 := closure(Function #123.16.14)
 86 [-]: GETUPVAL  R0 U1        ; R0 := U1
 87 [-]: SETTABLE  R1 K28 R2    ; R1["mOnFocusedCallback"] := R2
 88 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 89 [-]: CLOSURE   R2 14        ; R2 := closure(Function #123.16.15)
 90 [-]: GETUPVAL  R0 U1        ; R0 := U1
 91 [-]: SETTABLE  R1 K29 R2    ; R1["mOnUnfocusedCallback"] := R2
 92 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 93 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mTabMenu"]
 94 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["OnSelected"]
 95 [-]: SETTABLE  R1 K30 R2    ; R1["_TabMenu_OnSelected"] := R2
 96 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 97 [-]: CLOSURE   R2 15        ; R2 := closure(Function #123.16.16)
 98 [-]: MOVE      R0 R0        ; R0 := R0
 99 [-]: GETUPVAL  R0 U1        ; R0 := U1
100 [-]: SETTABLE  R1 K31 R2    ; R1["OnSelected"] := R2
101 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
102 [-]: CLOSURE   R2 16        ; R2 := closure(Function #123.16.17)
103 [-]: GETUPVAL  R0 U1        ; R0 := U1
104 [-]: MOVE      R0 R0        ; R0 := R0
105 [-]: GETUPVAL  R0 U3        ; R0 := U3
106 [-]: SETTABLE  R1 K32 R2    ; R1["mOnSelectedCallback"] := R2
107 [-]: SELF      R1 R0 K33    ; R2 := R0; R1 := R0["0x8D82A3A2"]
108 [-]: CALL      R1 2 1       ; R1(R2)
109 [-]: RETURN    R0 1         ; return 


; Function #123.16.1:
;
; Name:            
; Defined at line: 6276
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0xD75E681A"]
  2 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0xC51A5C9D"]
  3 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
  4 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mInitialX"]
  6 [-]: LE        1 K3 R4      ; if 0 <= R4 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
  9 [-]: MOVE      R5 R3        ; R5 := R3
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 0         ; if not R4 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: LOADNIL   R4 R4        ; R4 := nil
 15 [-]: GETTABLE  R5 R3 K5     ; R5 := R3["Id"]
 16 [-]: GETTABLE  R6 R1 K5     ; R6 := R1["Id"]
 17 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 46
 18 [-]: JMP       46           ; PC := 46
 19 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0["0xD75E681A"]
 20 [-]: SUB       R7 R2 K6     ; R7 := R2 - 1
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 23 [-]: MOVE      R7 R5        ; R7 := R5
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: TEST      R6 0         ; if not R6 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R6 K7        ; R6 := 0xF595ADDE
 29 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
 30 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x6B7B470B"]
 31 [-]: GETTABLE  R9 R5 K10    ; R9 := R5["mClipName"]
 32 [-]: LOADK     R10 K11      ; R10 := "_x"
 33 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 34 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 35 [-]: GETGLOBAL R7 K7        ; R7 := 0xF595ADDE
 36 [-]: GETGLOBAL R8 K8        ; R8 := mMovie
 37 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x6B7B470B"]
 38 [-]: GETTABLE  R10 R5 K10   ; R10 := R5["mClipName"]
 39 [-]: LOADK     R11 K12      ; R11 := ".Bg"
 40 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 41 [-]: LOADK     R11 K13      ; R11 := "_width"
 42 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 43 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 44 [-]: ADD       R4 R6 R7     ; R4 := R6 + R7
 45 [-]: JMP       89           ; PC := 89
 46 [-]: SELF      R6 R0 K0     ; R7 := R0; R6 := R0["0xD75E681A"]
 47 [-]: ADD       R8 R2 K6     ; R8 := R2 + 1
 48 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 49 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 50 [-]: MOVE      R8 R6        ; R8 := R6
 51 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 52 [-]: TEST      R7 0         ; if not R7 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R7 K7        ; R7 := 0xF595ADDE
 56 [-]: GETGLOBAL R8 K8        ; R8 := mMovie
 57 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x6B7B470B"]
 58 [-]: GETTABLE  R10 R6 K10   ; R10 := R6["mClipName"]
 59 [-]: LOADK     R11 K11      ; R11 := "_x"
 60 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 61 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 62 [-]: GETGLOBAL R8 K7        ; R8 := 0xF595ADDE
 63 [-]: GETGLOBAL R9 K8        ; R9 := mMovie
 64 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x6B7B470B"]
 65 [-]: GETTABLE  R11 R1 K10   ; R11 := R1["mClipName"]
 66 [-]: LOADK     R12 K11      ; R12 := "_x"
 67 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 68 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 69 [-]: GETGLOBAL R9 K7        ; R9 := 0xF595ADDE
 70 [-]: GETGLOBAL R10 K8       ; R10 := mMovie
 71 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x6B7B470B"]
 72 [-]: GETTABLE  R12 R3 K10   ; R12 := R3["mClipName"]
 73 [-]: LOADK     R13 K11      ; R13 := "_x"
 74 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 75 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 76 [-]: GETGLOBAL R10 K7       ; R10 := 0xF595ADDE
 77 [-]: GETGLOBAL R11 K8       ; R11 := mMovie
 78 [-]: SELF      R11 R11 K9   ; R12 := R11; R11 := R11["0x6B7B470B"]
 79 [-]: GETTABLE  R13 R3 K10   ; R13 := R3["mClipName"]
 80 [-]: LOADK     R14 K12      ; R14 := ".Bg"
 81 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 82 [-]: LOADK     R14 K13      ; R14 := "_width"
 83 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 84 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 85 [-]: SUB       R10 R10 K14  ; R10 := R10 - 10
 86 [-]: SUB       R11 R7 R8    ; R11 := R7 - R8
 87 [-]: SUB       R11 R9 R11   ; R11 := R9 - R11
 88 [-]: ADD       R4 R11 R10   ; R4 := R11 + R10
 89 [-]: GETGLOBAL R11 K7       ; R11 := 0xF595ADDE
 90 [-]: GETGLOBAL R12 K8       ; R12 := mMovie
 91 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12["0x6B7B470B"]
 92 [-]: LOADK     R14 K15      ; R14 := "Window.TabMenu.TabMask"
 93 [-]: LOADK     R15 K13      ; R15 := "_width"
 94 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
 95 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 96 [-]: LT        0 R4 R11     ; if R4 >= R11 then PC := 109
 97 [-]: JMP       109          ; PC := 109
 98 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["mInitialX"]
 99 [-]: GETGLOBAL R13 K16      ; R13 := math
100 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["0x65F9712A"]
101 [-]: SUB       R14 R11 R4   ; R14 := R11 - R4
102 [-]: GETGLOBAL R15 K16      ; R15 := math
103 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0xF93F7CC8"]
104 [-]: GETTABLE  R16 R0 K2    ; R16 := R0["mInitialX"]
105 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
106 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
107 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
108 [-]: SETTABLE  R0 K2 R12    ; R0["mInitialX"] := R12
109 [-]: RETURN    R0 1         ; return 


; Function #123.16.2:
;
; Name:            
; Defined at line: 6306
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["hasPersonalNotification"]
  8 [-]: TEST      R2 1         ; if R2 then PC := 30
  9 [-]: JMP       30           ; PC := 30
 10 [-]: SETTABLE  R1 K1 K2     ; R1["hasPersonalNotification"] := "0x1"
 11 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x880196A7"]
 13 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["mClipName"]
 14 [-]: LOADK     R5 K6        ; R5 := "Dot"
 15 [-]: LOADK     R6 K7        ; R6 := "_visible"
 16 [-]: MOVE      R7 R1        ; R7 := R1
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mSimpleTabList"]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: TEST      R2 1         ; if R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mSimpleTabList"]
 26 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0xD744AB44"]
 27 [-]: GETTABLE  R4 R1 K10    ; R4 := R1["Id"]
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 30 [-]: RETURN    R0 1         ; return 


; Function #123.16.3:
;
; Name:            
; Defined at line: 6322
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["hasPersonalNotification"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: SETTABLE  R1 K1 K2     ; R1["hasPersonalNotification"] := "0x0"
 11 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x880196A7"]
 13 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["mClipName"]
 14 [-]: LOADK     R5 K6        ; R5 := "Dot"
 15 [-]: LOADK     R6 K7        ; R6 := "_visible"
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: RETURN    R0 1         ; return 


; Function #123.16.4:
;
; Name:            
; Defined at line: 6334
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 101
  5 [-]: JMP       101          ; PC := 101
  6 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["isFlashing"]
  7 [-]: TEST      R2 1         ; if R2 then PC := 65
  8 [-]: JMP       65           ; PC := 65
  9 [-]: SETTABLE  R1 K1 K2     ; R1["isFlashing"] := "0x1"
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: TEST      R2 1         ; if R2 then PC := 46
 12 [-]: JMP       46           ; PC := 46
 13 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["Id"]
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["CHANNEL_SESSION"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["Id"]
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["CHANNEL_PRIVATE_CHAT"]
 21 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 46
 22 [-]: JMP       46           ; PC := 46
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xF81722A2"]
 25 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["Id"]
 26 [-]: GETUPVAL  R4 U1        ; R4 := U1
 27 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["CHANNEL_SESSION"]
 28 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R3 R0        ; R3 := R0
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: GETGLOBAL R4 K7        ; R4 := _G
 33 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["UISound_ChatSquad"]
 34 [-]: GETGLOBAL R5 K7        ; R5 := _G
 35 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["UISound_ChatPM"]
 36 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 1         ; if R3 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: GETUPVAL  R3 U2        ; R3 := U2
 43 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x25992394"]
 44 [-]: MOVE      R4 R2        ; R4 := R2
 45 [-]: CALL      R3 2 1       ; R3(R4)
 46 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 47 [-]: GETUPVAL  R4 U1        ; R4 := U1
 48 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mSimpleTabList"]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: TEST      R3 1         ; if R3 then PC := 65
 51 [-]: JMP       65           ; PC := 65
 52 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mSelectedElement"]
 53 [-]: EQ        1 R3 K13     ; if R3 == nil then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mSelectedElement"]
 56 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Id"]
 57 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["Id"]
 58 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETUPVAL  R3 U1        ; R3 := U1
 61 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mSimpleTabList"]
 62 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x9F48FD3"]
 63 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Id"]
 64 [-]: CALL      R3 3 1       ; R3(R4,R5)
 65 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 66 [-]: GETUPVAL  R4 U1        ; R4 := U1
 67 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mSimpleTabList"]
 68 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 69 [-]: TEST      R3 1         ; if R3 then PC := 101
 70 [-]: JMP       101          ; PC := 101
 71 [-]: GETUPVAL  R3 U1        ; R3 := U1
 72 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mVisualMode"]
 73 [-]: GETUPVAL  R4 U1        ; R4 := U1
 74 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 75 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 101
 76 [-]: JMP       101          ; PC := 101
 77 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mSelectedElement"]
 78 [-]: EQ        1 R3 K13     ; if R3 == nil then PC := 85
 79 [-]: JMP       85           ; PC := 85
 80 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mSelectedElement"]
 81 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Id"]
 82 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["Id"]
 83 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MOVE      R3 R0        ; R3 := R0
 86 [-]: MOVE      R3 R1        ; R3 := R1
 87 [-]: GETUPVAL  R4 U3        ; R4 := U3
 88 [-]: TEST      R4 0         ; if not R4 then PC := 92
 89 [-]: JMP       92           ; PC := 92
 90 [-]: TEST      R3 0         ; if not R3 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: GETUPVAL  R4 U1        ; R4 := U1
 93 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0x2240369"]
 94 [-]: MOVE      R6 R3        ; R6 := R3
 95 [-]: CALL      R4 3 1       ; R4(R5,R6)
 96 [-]: GETUPVAL  R4 U1        ; R4 := U1
 97 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mSimpleTabList"]
 98 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x733FD1EB"]
 99 [-]: GETTABLE  R6 R1 K3     ; R6 := R1["Id"]
100 [-]: CALL      R4 3 1       ; R4(R5,R6)
101 [-]: RETURN    R0 1         ; return 


; Function #123.16.5:
;
; Name:            
; Defined at line: 6364
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x84540F20"]
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R3 3 1       ; R3(R4,R5)
  9 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["isFlashing"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SETTABLE  R1 K2 K3     ; R1["isFlashing"] := "0x0"
 13 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x775B2AE5"]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mSimpleTabList"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mSimpleTabList"]
 25 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x6BFD539D"]
 26 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["Id"]
 27 [-]: MOVE      R6 R2        ; R6 := R2
 28 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 29 [-]: RETURN    R0 1         ; return 


; Function #123.16.6:
;
; Name:            
; Defined at line: 6379
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R4 K1        ; R4 := 50
  5 [-]: GETGLOBAL R5 K2        ; R5 := _G
  6 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["UIColor_White"]
  7 [-]: GETGLOBAL R6 K2        ; R6 := _G
  8 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["UIColorObject_Black"]
  9 [-]: SELF      R7 R0 K5     ; R8 := R0; R7 := R0["0x97B489B5"]
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: GETGLOBAL R8 K6        ; R8 := 0x400E7765
 12 [-]: MOVE      R9 R7        ; R9 := R7
 13 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 14 [-]: TEST      R8 1         ; if R8 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETTABLE  R8 R7 K7     ; R8 := R7["Id"]
 17 [-]: GETTABLE  R9 R1 K7     ; R9 := R1["Id"]
 18 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: MOVE      R8 R2        ; R8 := R2
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R8 R0        ; R8 := R0
 23 [-]: MOVE      R8 R1        ; R8 := R1
 24 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mSelectedElement"]
 25 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 59
 26 [-]: JMP       59           ; PC := 59
 27 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mSelectedElement"]
 28 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["Id"]
 29 [-]: GETTABLE  R10 R1 K7    ; R10 := R1["Id"]
 30 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 59
 31 [-]: JMP       59           ; PC := 59
 32 [-]: GETUPVAL  R9 U0        ; R9 := U0
 33 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mVisualMode"]
 34 [-]: GETUPVAL  R10 U0       ; R10 := U0
 35 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["VISUAL_MODE_MENU_SIMPLE"]
 36 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETTABLE  R9 R1 K11    ; R9 := R1["isFlashing"]
 39 [-]: TEST      R9 1         ; if R9 then PC := 59
 40 [-]: JMP       59           ; PC := 59
 41 [-]: GETUPVAL  R9 U0        ; R9 := U0
 42 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mVisualMode"]
 43 [-]: GETUPVAL  R10 U0       ; R10 := U0
 44 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["VISUAL_MODE_MENU_FULL"]
 45 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETUPVAL  R9 U0        ; R9 := U0
 48 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mVisualMode"]
 49 [-]: GETUPVAL  R10 U0       ; R10 := U0
 50 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["VISUAL_MODE_GAMEPLAY_FULL"]
 51 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R9 K2        ; R9 := _G
 54 [-]: GETTABLE  R6 R9 K14    ; R6 := R9["UIColorObject_White"]
 55 [-]: GETGLOBAL R9 K2        ; R9 := _G
 56 [-]: GETTABLE  R5 R9 K15    ; R5 := R9["UIColor_Black"]
 57 [-]: LOADK     R4 K16       ; R4 := 100
 58 [-]: JMP       72           ; PC := 72
 59 [-]: TEST      R8 0         ; if not R8 then PC := 63
 60 [-]: JMP       63           ; PC := 63
 61 [-]: LOADK     R4 K16       ; R4 := 100
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETTABLE  R9 R1 K11    ; R9 := R1["isFlashing"]
 64 [-]: TEST      R9 0         ; if not R9 then PC := 72
 65 [-]: JMP       72           ; PC := 72
 66 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
 67 [-]: MOVE      R10 R3       ; R10 := R3
 68 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 69 [-]: TEST      R9 1         ; if R9 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R4 R3        ; R4 := R3
 72 [-]: GETGLOBAL R9 K17       ; R9 := mMovie
 73 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9["0x880196A7"]
 74 [-]: GETTABLE  R11 R1 K19   ; R11 := R1["mClipName"]
 75 [-]: LOADK     R12 K20      ; R12 := "Icon"
 76 [-]: LOADK     R13 K21      ; R13 := "_alpha"
 77 [-]: MOVE      R14 R4       ; R14 := R4
 78 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 79 [-]: GETGLOBAL R9 K17       ; R9 := mMovie
 80 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9["0x880196A7"]
 81 [-]: GETTABLE  R11 R1 K19   ; R11 := R1["mClipName"]
 82 [-]: LOADK     R12 K20      ; R12 := "Icon"
 83 [-]: LOADK     R13 K22      ; R13 := "_color"
 84 [-]: MOVE      R14 R5       ; R14 := R5
 85 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 86 [-]: GETGLOBAL R9 K17       ; R9 := mMovie
 87 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9["0x880196A7"]
 88 [-]: GETTABLE  R11 R1 K19   ; R11 := R1["mClipName"]
 89 [-]: LOADK     R12 K23      ; R12 := "Label"
 90 [-]: LOADK     R13 K21      ; R13 := "_alpha"
 91 [-]: MOVE      R14 R4       ; R14 := R4
 92 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 93 [-]: GETGLOBAL R9 K17       ; R9 := mMovie
 94 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9["0x880196A7"]
 95 [-]: GETTABLE  R11 R1 K19   ; R11 := R1["mClipName"]
 96 [-]: LOADK     R12 K23      ; R12 := "Label"
 97 [-]: LOADK     R13 K24      ; R13 := "textColor"
 98 [-]: MOVE      R14 R5       ; R14 := R5
 99 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
100 [-]: GETGLOBAL R9 K17       ; R9 := mMovie
101 [-]: SELF      R9 R9 K25    ; R10 := R9; R9 := R9["0x302AAB2F"]
102 [-]: GETTABLE  R11 R1 K19   ; R11 := R1["mClipName"]
103 [-]: LOADK     R12 K26      ; R12 := ".Bg"
104 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
105 [-]: LOADK     R12 K27      ; R12 := "RectInnerColor"
106 [-]: GETTABLE  R13 R6 K28   ; R13 := R6["r"]
107 [-]: GETTABLE  R14 R6 K29   ; R14 := R6["g"]
108 [-]: GETTABLE  R15 R6 K30   ; R15 := R6["b"]
109 [-]: LOADK     R16 K31      ; R16 := 1
110 [-]: CALL      R9 8 1       ; R9(R10,R11,R12,R13,R14,R15,R16)
111 [-]: RETURN    R0 1         ; return 


; Function #123.16.7:
;
; Name:            
; Defined at line: 6411
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mClipName"]
  7 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mSelectedElement"]
 11 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mSelectedElement"]
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Id"]
 15 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Id"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: MOVE      R2 R1        ; R2 := R1
 20 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 21 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x880196A7"]
 22 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mClipName"]
 23 [-]: LOADK     R6 K7        ; R6 := "DecoLine"
 24 [-]: LOADK     R7 K8        ; R7 := "_visible"
 25 [-]: MOVE      R8 R2        ; R8 := R2
 26 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 27 [-]: TEST      R2 1         ; if R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 31 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 32 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x6B7B470B"]
 33 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 34 [-]: LOADK     R7 K11       ; R7 := ".Bg"
 35 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 36 [-]: LOADK     R7 K12       ; R7 := "_width"
 37 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 38 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 39 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 40 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x880196A7"]
 41 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 42 [-]: LOADK     R7 K7        ; R7 := "DecoLine"
 43 [-]: LOADK     R8 K12       ; R8 := "_width"
 44 [-]: SUB       R9 R3 K13    ; R9 := R3 - 4
 45 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 46 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 47 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x880196A7"]
 48 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 49 [-]: LOADK     R7 K7        ; R7 := "DecoLine"
 50 [-]: LOADK     R8 K14       ; R8 := "_color"
 51 [-]: GETUPVAL  R9 U0        ; R9 := U0
 52 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 53 [-]: RETURN    R0 1         ; return 


; Function #123.16.8:
;
; Name:            
; Defined at line: 6428
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: LOADK     R2 K0        ; R2 := 0
  3 [-]: GETGLOBAL R3 K1        ; R3 := Engine
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0x9490FE70"]
  5 [-]: CALL      R3 1 2       ; R3 := R3()
  6 [-]: TEST      R3 0         ; if not R3 then PC := 29
  7 [-]: JMP       29           ; PC := 29
  8 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
  9 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 12 [-]: LOADK     R6 K6        ; R6 := ".TabMenu.RightBumper"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: LOADK     R6 K7        ; R6 := "_x"
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: MOVE      R1 R3        ; R1 := R3
 17 [-]: GETGLOBAL R3 K8        ; R3 := 0xF595ADDE
 18 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 20 [-]: GETUPVAL  R6 U0        ; R6 := U0
 21 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mClipName"]
 22 [-]: LOADK     R7 K9        ; R7 := ".TabMenu.RightBumper.Tf"
 23 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 24 [-]: LOADK     R7 K10       ; R7 := "textWidth"
 25 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 26 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 27 [-]: MOVE      R2 R3        ; R2 := R3
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 30 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 33 [-]: LOADK     R6 K11       ; R6 := ".TabMenu.RightArrow"
 34 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 35 [-]: LOADK     R6 K7        ; R6 := "_x"
 36 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 37 [-]: MOVE      R1 R3        ; R1 := R3
 38 [-]: GETGLOBAL R3 K8        ; R3 := 0xF595ADDE
 39 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 40 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 41 [-]: GETUPVAL  R6 U0        ; R6 := U0
 42 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mClipName"]
 43 [-]: LOADK     R7 K11       ; R7 := ".TabMenu.RightArrow"
 44 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 45 [-]: LOADK     R7 K12       ; R7 := "_width"
 46 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 47 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 48 [-]: MOVE      R2 R3        ; R2 := R3
 49 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 50 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x880196A7"]
 51 [-]: GETUPVAL  R5 U0        ; R5 := U0
 52 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 53 [-]: LOADK     R6 K14       ; R6 := "TabMenu.TabDivLine"
 54 [-]: LOADK     R7 K7        ; R7 := "_x"
 55 [-]: DIV       R8 R2 K15    ; R8 := R2 / 2
 56 [-]: ADD       R8 R1 R8     ; R8 := R1 + R8
 57 [-]: ADD       R8 R8 K16    ; R8 := R8 + 5
 58 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 59 [-]: RETURN    R0 1         ; return 


; Function #123.16.9:
;
; Name:            
; Defined at line: 6442
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xC51A5C9D"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: EQ        0 R1 K1      ; if R1 ~= 0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: LOADNIL   R2 R2        ; R2 := nil
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: LOADK     R4 K2        ; R4 := 1
  9 [-]: LOADK     R5 K3        ; R5 := -1
 10 [-]: FORPREP   R3 30        ; R3 -= R5; PC := 30
 11 [-]: SELF      R7 R0 K4     ; R8 := R0; R7 := R0["0xD75E681A"]
 12 [-]: MOVE      R9 R6        ; R9 := R6
 13 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 14 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 15 [-]: MOVE      R9 R7        ; R9 := R7
 16 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 17 [-]: TEST      R8 1         ; if R8 then PC := 30
 18 [-]: JMP       30           ; PC := 30
 19 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mClipName"]
 20 [-]: EQ        1 R8 K7      ; if R8 == nil then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETGLOBAL R8 K8        ; R8 := mMovie
 23 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x6B7B470B"]
 24 [-]: GETTABLE  R10 R7 K6    ; R10 := R7["mClipName"]
 25 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 26 [-]: EQ        1 R8 K10     ; if R8 == "undefined" then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R2 R7        ; R2 := R7
 29 [-]: JMP       31           ; PC := 31
 30 [-]: FORLOOP   R3 11        ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
 31 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 32 [-]: MOVE      R9 R2        ; R9 := R2
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: TEST      R8 0         ; if not R8 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R8 K11       ; R8 := 0xF595ADDE
 38 [-]: GETGLOBAL R9 K8        ; R9 := mMovie
 39 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x6B7B470B"]
 40 [-]: GETTABLE  R11 R2 K6    ; R11 := R2["mClipName"]
 41 [-]: LOADK     R12 K12      ; R12 := "_x"
 42 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 43 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 44 [-]: GETGLOBAL R9 K11       ; R9 := 0xF595ADDE
 45 [-]: GETGLOBAL R10 K8       ; R10 := mMovie
 46 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x6B7B470B"]
 47 [-]: GETTABLE  R12 R2 K6    ; R12 := R2["mClipName"]
 48 [-]: LOADK     R13 K13      ; R13 := ".Bg"
 49 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 50 [-]: LOADK     R13 K14      ; R13 := "_width"
 51 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 52 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 53 [-]: GETGLOBAL R10 K11      ; R10 := 0xF595ADDE
 54 [-]: GETGLOBAL R11 K8       ; R11 := mMovie
 55 [-]: SELF      R11 R11 K9   ; R12 := R11; R11 := R11["0x6B7B470B"]
 56 [-]: GETUPVAL  R13 U0       ; R13 := U0
 57 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["mClipName"]
 58 [-]: LOADK     R14 K15      ; R14 := ".TabMenu.TabMask"
 59 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 60 [-]: LOADK     R14 K12      ; R14 := "_x"
 61 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 62 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 63 [-]: GETGLOBAL R11 K11      ; R11 := 0xF595ADDE
 64 [-]: GETGLOBAL R12 K8       ; R12 := mMovie
 65 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12["0x6B7B470B"]
 66 [-]: GETUPVAL  R14 U0       ; R14 := U0
 67 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["mClipName"]
 68 [-]: LOADK     R15 K15      ; R15 := ".TabMenu.TabMask"
 69 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
 70 [-]: LOADK     R15 K14      ; R15 := "_width"
 71 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
 72 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 73 [-]: GETGLOBAL R12 K11      ; R12 := 0xF595ADDE
 74 [-]: GETGLOBAL R13 K8       ; R13 := mMovie
 75 [-]: SELF      R13 R13 K9   ; R14 := R13; R13 := R13["0x6B7B470B"]
 76 [-]: GETUPVAL  R15 U0       ; R15 := U0
 77 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["mClipName"]
 78 [-]: LOADK     R16 K16      ; R16 := ".TabMenu.RightBumper.Tf"
 79 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 80 [-]: LOADK     R16 K17      ; R16 := "textWidth"
 81 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 82 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 83 [-]: ADD       R13 R8 R9    ; R13 := R8 + R9
 84 [-]: ADD       R13 R13 R12  ; R13 := R13 + R12
 85 [-]: ADD       R13 R13 K18  ; R13 := R13 + 36
 86 [-]: DIV       R14 R12 K19  ; R14 := R12 / 2
 87 [-]: ADD       R14 R11 R14  ; R14 := R11 + R14
 88 [-]: ADD       R14 R14 K19  ; R14 := R14 + 2
 89 [-]: ADD       R14 R10 R14  ; R14 := R10 + R14
 90 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: DIV       R14 R12 K19  ; R14 := R12 / 2
 93 [-]: ADD       R14 R11 R14  ; R14 := R11 + R14
 94 [-]: ADD       R14 R14 K19  ; R14 := R14 + 2
 95 [-]: ADD       R13 R10 R14  ; R13 := R10 + R14
 96 [-]: GETGLOBAL R14 K8       ; R14 := mMovie
 97 [-]: SELF      R14 R14 K20  ; R15 := R14; R14 := R14["0x880196A7"]
 98 [-]: GETUPVAL  R16 U0       ; R16 := U0
 99 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["mClipName"]
100 [-]: LOADK     R17 K21      ; R17 := "TabMenu.RightBumper"
101 [-]: LOADK     R18 K12      ; R18 := "_x"
102 [-]: MOVE      R19 R13      ; R19 := R13
103 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
104 [-]: GETGLOBAL R14 K11      ; R14 := 0xF595ADDE
105 [-]: GETGLOBAL R15 K8       ; R15 := mMovie
106 [-]: SELF      R15 R15 K9   ; R16 := R15; R15 := R15["0x6B7B470B"]
107 [-]: GETUPVAL  R17 U0       ; R17 := U0
108 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["mClipName"]
109 [-]: LOADK     R18 K22      ; R18 := ".TabMenu.RightArrow"
110 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
111 [-]: LOADK     R18 K14      ; R18 := "_width"
112 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
113 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
114 [-]: ADD       R15 R8 R9    ; R15 := R8 + R9
115 [-]: ADD       R15 R15 R14  ; R15 := R15 + R14
116 [-]: ADD       R15 R15 K23  ; R15 := R15 + 24
117 [-]: ADD       R16 R11 R14  ; R16 := R11 + R14
118 [-]: SUB       R16 R16 K19  ; R16 := R16 - 2
119 [-]: ADD       R16 R10 R16  ; R16 := R10 + R16
120 [-]: LT        0 R16 R15    ; if R16 >= R15 then PC := 125
121 [-]: JMP       125          ; PC := 125
122 [-]: ADD       R16 R11 R14  ; R16 := R11 + R14
123 [-]: SUB       R16 R16 K19  ; R16 := R16 - 2
124 [-]: ADD       R15 R10 R16  ; R15 := R10 + R16
125 [-]: GETGLOBAL R16 K8       ; R16 := mMovie
126 [-]: SELF      R16 R16 K20  ; R17 := R16; R16 := R16["0x880196A7"]
127 [-]: GETUPVAL  R18 U0       ; R18 := U0
128 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["mClipName"]
129 [-]: LOADK     R19 K24      ; R19 := "TabMenu.RightArrow"
130 [-]: LOADK     R20 K12      ; R20 := "_x"
131 [-]: MOVE      R21 R15      ; R21 := R15
132 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
133 [-]: SELF      R16 R0 K25   ; R17 := R0; R16 := R0["0xCBF66E00"]
134 [-]: CALL      R16 2 1      ; R16(R17)
135 [-]: GETUPVAL  R16 U0       ; R16 := U0
136 [-]: SELF      R16 R16 K26  ; R17 := R16; R16 := R16["0x62F6283F"]
137 [-]: CALL      R16 2 1      ; R16(R17)
138 [-]: RETURN    R0 1         ; return 


; Function #123.16.10:
;
; Name:            
; Defined at line: 6488
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0["0x5F973B6F"]
  2 [-]: MOVE      R6 R1        ; R6 := R1
  3 [-]: MOVE      R7 R2        ; R7 := R2
  4 [-]: MOVE      R8 R3        ; R8 := R3
  5 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
  6 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0xFFA8B92B"]
  7 [-]: CALL      R4 2 1       ; R4(R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #123.16.11:
;
; Name:            
; Defined at line: 6494
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Id"]
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mElements"]
  4 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[1]
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Id"]
  6 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 59
  7 [-]: JMP       59           ; PC := 59
  8 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x3B1D5FB4"]
  9 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["Id"]
 10 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 11 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0["0xD75E681A"]
 12 [-]: SUB       R6 R3 K3     ; R6 := R3 - 1
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K6        ; R5 := 0x400E7765
 15 [-]: MOVE      R6 R4        ; R6 := R4
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: TEST      R5 1         ; if R5 then PC := 59
 18 [-]: JMP       59           ; PC := 59
 19 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["mClipName"]
 20 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 21 [-]: MOVE      R7 R5        ; R7 := R5
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: JMP       41           ; PC := 41
 26 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 27 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x6B7B470B"]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: GETGLOBAL R7 K6        ; R7 := 0x400E7765
 31 [-]: MOVE      R8 R6        ; R8 := R6
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: TEST      R7 1         ; if R7 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R7 K10       ; R7 := 0x9FAED6BC
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: EQ        0 R7 K11     ; if R7 ~= "undefined" then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: JMP       41           ; PC := 41
 41 [-]: GETGLOBAL R7 K12       ; R7 := 0xF595ADDE
 42 [-]: GETGLOBAL R8 K8        ; R8 := mMovie
 43 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x6B7B470B"]
 44 [-]: GETTABLE  R10 R4 K7    ; R10 := R4["mClipName"]
 45 [-]: LOADK     R11 K13      ; R11 := ".Bg"
 46 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 47 [-]: LOADK     R11 K14      ; R11 := "_width"
 48 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 49 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 50 [-]: GETGLOBAL R8 K12       ; R8 := 0xF595ADDE
 51 [-]: GETGLOBAL R9 K8        ; R9 := mMovie
 52 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x6B7B470B"]
 53 [-]: GETTABLE  R11 R4 K7    ; R11 := R4["mClipName"]
 54 [-]: LOADK     R12 K15      ; R12 := "_x"
 55 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 56 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 57 [-]: ADD       R8 R8 R7     ; R8 := R8 + R7
 58 [-]: ADD       R2 R8 K3     ; R2 := R8 + 1
 59 [-]: RETURN    R2 2         ; return R2
 60 [-]: RETURN    R0 1         ; return 


; Function #123.16.12:
;
; Name:            
; Defined at line: 6521
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x8C64AFA9
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".setMask"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: LOADK     R4 K4        ; R4 := "Window.TabMenu.TabMask"
  7 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  8 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mPanelList"]
 11 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["ChannelName"]
 12 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mPanelList"]
 18 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["ChannelName"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: SETTABLE  R1 K8 R0     ; R1["mTabElement"] := R0
 21 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 24 [-]: LOADK     R4 K10       ; R4 := "Icon"
 25 [-]: LOADK     R5 K11       ; R5 := "_visible"
 26 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["Icon"]
 27 [-]: EQ        0 R6 K12     ; if R6 ~= nil then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R6 R0        ; R6 := R0
 30 [-]: MOVE      R6 R1        ; R6 := R1
 31 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 32 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 33 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x880196A7"]
 34 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 35 [-]: LOADK     R4 K13       ; R4 := "Label"
 36 [-]: LOADK     R5 K11       ; R5 := "_visible"
 37 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["Icon"]
 38 [-]: EQ        1 R6 K12     ; if R6 == nil then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: MOVE      R6 R0        ; R6 := R0
 41 [-]: MOVE      R6 R1        ; R6 := R1
 42 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 43 [-]: GETTABLE  R1 R0 K10    ; R1 := R0["Icon"]
 44 [-]: EQ        1 R1 K12     ; if R1 == nil then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 47 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x26581636"]
 48 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 49 [-]: LOADK     R4 K15       ; R4 := ".Icon"
 50 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 51 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["Icon"]
 52 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 53 [-]: JMP       61           ; PC := 61
 54 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 55 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x17028E8F"]
 56 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 57 [-]: LOADK     R4 K17       ; R4 := ".Label.text"
 58 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 59 [-]: GETTABLE  R4 R0 K18    ; R4 := R0["Name"]
 60 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 61 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 62 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1["0x7E1F26D7"]
 63 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 64 [-]: LOADK     R4 K20       ; R4 := ".Bg"
 65 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 66 [-]: GETGLOBAL R4 K21       ; R4 := _G
 67 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["UIMaterial_RectangleNoDepth"]
 68 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 69 [-]: GETUPVAL  R1 U1        ; R1 := U1
 70 [-]: GETTABLE  R1 R1 K23    ; R1 := R1["mTabMenu"]
 71 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1["0x775B2AE5"]
 72 [-]: MOVE      R3 R0        ; R3 := R0
 73 [-]: MOVE      R4 R0        ; R4 := R0
 74 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 75 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 76 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1["0x302AAB2F"]
 77 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 78 [-]: LOADK     R4 K20       ; R4 := ".Bg"
 79 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 80 [-]: LOADK     R4 K26       ; R4 := "RectEdgeColor"
 81 [-]: GETGLOBAL R5 K21       ; R5 := _G
 82 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["UIColorObject_White"]
 83 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["r"]
 84 [-]: GETGLOBAL R6 K21       ; R6 := _G
 85 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["UIColorObject_White"]
 86 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["g"]
 87 [-]: GETGLOBAL R7 K21       ; R7 := _G
 88 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["UIColorObject_White"]
 89 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["b"]
 90 [-]: LOADK     R8 K31       ; R8 := 0.050000000745058
 91 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 92 [-]: GETUPVAL  R1 U2        ; R1 := U2
 93 [-]: GETTABLE  R1 R1 K32    ; R1 := R1["0xF81722A2"]
 94 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["Icon"]
 95 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R2 R0        ; R2 := R0
 98 [-]: MOVE      R2 R1        ; R2 := R1
 99 [-]: GETGLOBAL R3 K33       ; R3 := 0xF595ADDE
100 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
101 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0x6B7B470B"]
102 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
103 [-]: LOADK     R7 K35       ; R7 := ".Label"
104 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
105 [-]: LOADK     R7 K36       ; R7 := "textWidth"
106 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
107 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
108 [-]: ADD       R3 R3 K37    ; R3 := R3 + 14
109 [-]: LOADK     R4 K38       ; R4 := 35
110 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
111 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
112 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
113 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
114 [-]: LOADK     R5 K39       ; R5 := "Btn"
115 [-]: LOADK     R6 K40       ; R6 := "_width"
116 [-]: MOVE      R7 R1        ; R7 := R1
117 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
118 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
119 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
120 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
121 [-]: LOADK     R5 K41       ; R5 := "Bg"
122 [-]: LOADK     R6 K40       ; R6 := "_width"
123 [-]: MOVE      R7 R1        ; R7 := R1
124 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
125 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
126 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
127 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
128 [-]: LOADK     R5 K42       ; R5 := "Dot"
129 [-]: LOADK     R6 K43       ; R6 := "_color"
130 [-]: GETGLOBAL R7 K21       ; R7 := _G
131 [-]: GETTABLE  R7 R7 K44    ; R7 := R7["UIColor_Red"]
132 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
133 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
134 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
135 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
136 [-]: LOADK     R5 K42       ; R5 := "Dot"
137 [-]: LOADK     R6 K11       ; R6 := "_visible"
138 [-]: GETTABLE  R7 R0 K45    ; R7 := R0["hasPersonalNotificion"]
139 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
140 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
141 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
142 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
143 [-]: LOADK     R5 K42       ; R5 := "Dot"
144 [-]: LOADK     R6 K46       ; R6 := "_x"
145 [-]: SUB       R7 R1 K47    ; R7 := R1 - 8
146 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
147 [-]: GETUPVAL  R2 U0        ; R2 := U0
148 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["mTabMenu"]
149 [-]: SELF      R2 R2 K48    ; R3 := R2; R2 := R2["0x3BD0EA31"]
150 [-]: MOVE      R4 R0        ; R4 := R0
151 [-]: CALL      R2 3 1       ; R2(R3,R4)
152 [-]: RETURN    R0 1         ; return 


; Function #123.16.13:
;
; Name:            
; Defined at line: 6551
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  4 [-]: LOADK     R4 K3        ; R4 := "_xmouse"
  5 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  8 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
 10 [-]: LOADK     R5 K4        ; R5 := "Window.TabMenu"
 11 [-]: LOADK     R6 K5        ; R6 := "_x"
 12 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 13 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 14 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
 15 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
 17 [-]: LOADK     R6 K6        ; R6 := "Window.TabMenu.TabMask"
 18 [-]: LOADK     R7 K5        ; R7 := "_x"
 19 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 20 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 21 [-]: GETGLOBAL R4 K0        ; R4 := 0xF595ADDE
 22 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 23 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 24 [-]: LOADK     R7 K6        ; R7 := "Window.TabMenu.TabMask"
 25 [-]: LOADK     R8 K7        ; R8 := "_width"
 26 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 27 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 28 [-]: GETUPVAL  R5 U0        ; R5 := U0
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mWindow"]
 30 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["x"]
 31 [-]: ADD       R5 R5 R2     ; R5 := R5 + R2
 32 [-]: ADD       R5 R5 R3     ; R5 := R5 + R3
 33 [-]: LT        1 R1 R5      ; if R1 < R5 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETUPVAL  R5 U0        ; R5 := U0
 36 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mWindow"]
 37 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["x"]
 38 [-]: ADD       R5 R5 R2     ; R5 := R5 + R2
 39 [-]: ADD       R5 R5 R3     ; R5 := R5 + R3
 40 [-]: ADD       R5 R5 R4     ; R5 := R5 + R4
 41 [-]: LT        0 R5 R1      ; if R5 >= R1 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: MOVE      R5 R0        ; R5 := R0
 44 [-]: RETURN    R5 2         ; return R5
 45 [-]: MOVE      R5 R1        ; R5 := R1
 46 [-]: RETURN    R5 2         ; return R5
 47 [-]: RETURN    R0 1         ; return 


; Function #123.16.14:
;
; Name:            
; Defined at line: 6565
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mTabMenu"]
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x775B2AE5"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Icon"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisualMode"]
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETGLOBAL R1 K6        ; R1 := _T
 19 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["Name"]
 20 [-]: SETTABLE  R1 K7 R2     ; R1["gToolTip"] := R2
 21 [-]: RETURN    R0 1         ; return 


; Function #123.16.15:
;
; Name:            
; Defined at line: 6573
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mTabMenu"]
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x775B2AE5"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: SETTABLE  R1 K3 K4     ; R1["gToolTip"] := nil
  9 [-]: RETURN    R0 1         ; return 


; Function #123.16.16:
;
; Name:            
; Defined at line: 6580
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  2 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  3 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
  4 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["mClipName"]
  5 [-]: LOADK     R6 K4        ; R6 := ".Bg"
  6 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  7 [-]: LOADK     R6 K5        ; R6 := "_width"
  8 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  9 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 10 [-]: SUB       R2 R2 K6     ; R2 := R2 - 5
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
 12 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 13 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
 14 [-]: GETTABLE  R6 R1 K3     ; R6 := R1["mClipName"]
 15 [-]: LOADK     R7 K7        ; R7 := "_x"
 16 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 17 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0xF595ADDE
 19 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 20 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 21 [-]: LOADK     R7 K8        ; R7 := "Window.TabMenu.TabMask"
 22 [-]: LOADK     R8 K5        ; R8 := "_width"
 23 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 24 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 25 [-]: MOVE      R5 R1        ; R5 := R1
 26 [-]: GETUPVAL  R6 U0        ; R6 := U0
 27 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mTabMenu"]
 28 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0xD79ED359"]
 29 [-]: MOVE      R8 R1        ; R8 := R1
 30 [-]: CALL      R6 3 1       ; R6(R7,R8)
 31 [-]: LT        0 R3 K11     ; if R3 >= 0 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: UNM       R6 R3        ; R6 := - R3
 34 [-]: GETUPVAL  R7 U0        ; R7 := U0
 35 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mTabMenu"]
 36 [-]: GETUPVAL  R8 U0        ; R8 := U0
 37 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mTabMenu"]
 38 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["mInitialX"]
 39 [-]: ADD       R8 R8 R6     ; R8 := R8 + R6
 40 [-]: SETTABLE  R7 K12 R8    ; R7["mInitialX"] := R8
 41 [-]: JMP       56           ; PC := 56
 42 [-]: ADD       R7 R3 R2     ; R7 := R3 + R2
 43 [-]: LT        0 R4 R7      ; if R4 >= R7 then PC := 55
 44 [-]: JMP       55           ; PC := 55
 45 [-]: ADD       R7 R3 R2     ; R7 := R3 + R2
 46 [-]: SUB       R7 R7 R4     ; R7 := R7 - R4
 47 [-]: GETUPVAL  R8 U0        ; R8 := U0
 48 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mTabMenu"]
 49 [-]: GETUPVAL  R9 U0        ; R9 := U0
 50 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mTabMenu"]
 51 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mInitialX"]
 52 [-]: SUB       R9 R9 R7     ; R9 := R9 - R7
 53 [-]: SETTABLE  R8 K12 R9    ; R8["mInitialX"] := R9
 54 [-]: JMP       56           ; PC := 56
 55 [-]: MOVE      R5 R0        ; R5 := R0
 56 [-]: LOADNIL   R8 R8        ; R8 := nil
 57 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["mSelectedElement"]
 58 [-]: EQ        1 R9 K14     ; if R9 == nil then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["mSelectedElement"]
 61 [-]: GETTABLE  R8 R9 K15    ; R8 := R9["Id"]
 62 [-]: SELF      R9 R0 K16    ; R10 := R0; R9 := R0["0xC0C614FE"]
 63 [-]: MOVE      R11 R1       ; R11 := R1
 64 [-]: CALL      R9 3 1       ; R9(R10,R11)
 65 [-]: TEST      R5 0         ; if not R5 then PC := 74
 66 [-]: JMP       74           ; PC := 74
 67 [-]: GETUPVAL  R9 U1        ; R9 := U1
 68 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mTabMenu"]
 69 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9["0x6470BAF4"]
 70 [-]: LOADNIL   R11 R11      ; R11 := nil
 71 [-]: MOVE      R12 R1       ; R12 := R1
 72 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 73 [-]: JMP       93           ; PC := 93
 74 [-]: EQ        1 R8 K14     ; if R8 == nil then PC := 93
 75 [-]: JMP       93           ; PC := 93
 76 [-]: GETTABLE  R9 R1 K15    ; R9 := R1["Id"]
 77 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 93
 78 [-]: JMP       93           ; PC := 93
 79 [-]: SELF      R9 R0 K18    ; R10 := R0; R9 := R0["0xF61F409A"]
 80 [-]: MOVE      R11 R8       ; R11 := R8
 81 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 82 [-]: GETGLOBAL R10 K19      ; R10 := 0x400E7765
 83 [-]: MOVE      R11 R9       ; R11 := R9
 84 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 85 [-]: TEST      R10 1        ; if R10 then PC := 93
 86 [-]: JMP       93           ; PC := 93
 87 [-]: GETTABLE  R10 R0 K20   ; R10 := R0["0x490928C6"]
 88 [-]: MOVE      R11 R9       ; R11 := R9
 89 [-]: CALL      R10 2 1      ; R10(R11)
 90 [-]: SELF      R10 R0 K21   ; R11 := R0; R10 := R0["0x3BD0EA31"]
 91 [-]: MOVE      R12 R9       ; R12 := R9
 92 [-]: CALL      R10 3 1      ; R10(R11,R12)
 93 [-]: RETURN    R0 1         ; return 


; Function #123.16.17:
;
; Name:            
; Defined at line: 6617
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mTabMenu"]
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x775B2AE5"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mTabMenu"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BD0EA31"]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mPanelList"]
 14 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["ChannelName"]
 15 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 16 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["mIsActive"]
 17 [-]: TEST      R2 1         ; if R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xE2A2E3AC"]
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CALL      R2 3 1       ; R2(R3,R4)
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x400E7765
 24 [-]: GETUPVAL  R3 U1        ; R3 := U1
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mSimpleTabList"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 1         ; if R2 then PC := 49
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETUPVAL  R2 U1        ; R2 := U1
 30 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mSimpleTabList"]
 31 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mElements"]
 32 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[1]
 33 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["Id"]
 34 [-]: SETTABLE  R2 K11 R3    ; R2["mTabId"] := R3
 35 [-]: GETUPVAL  R2 U1        ; R2 := U1
 36 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mVisualMode"]
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 39 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 49
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mSimpleTabList"]
 43 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["0xA372F64A"]
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mSimpleTabList"]
 46 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mElements"]
 47 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[1]
 48 [-]: CALL      R2 2 1       ; R2(R3)
 49 [-]: GETGLOBAL R2 K7        ; R2 := 0x400E7765
 50 [-]: GETUPVAL  R3 U1        ; R3 := U1
 51 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["mInputPanel"]
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: TEST      R2 1         ; if R2 then PC := 85
 54 [-]: JMP       85           ; PC := 85
 55 [-]: GETUPVAL  R2 U1        ; R2 := U1
 56 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mInputPanel"]
 57 [-]: GETUPVAL  R3 U2        ; R3 := U2
 58 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["0xF81722A2"]
 59 [-]: GETUPVAL  R4 U1        ; R4 := U1
 60 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mMode"]
 61 [-]: GETUPVAL  R5 U1        ; R5 := U1
 62 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["CHANNEL_RECRUITING"]
 63 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R4 U1        ; R4 := U1
 66 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mMode"]
 67 [-]: GETUPVAL  R5 U1        ; R5 := U1
 68 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["CHANNEL_TRADE"]
 69 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R4 R0        ; R4 := R0
 72 [-]: MOVE      R4 R1        ; R4 := R1
 73 [-]: GETUPVAL  R5 U1        ; R5 := U1
 74 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mInputPanel"]
 75 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["MAX_MSG_LENGTH_RECRUIT_TRADE"]
 76 [-]: GETUPVAL  R6 U1        ; R6 := U1
 77 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mInputPanel"]
 78 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["MAX_MSG_LENGTH_NORMAL"]
 79 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 80 [-]: SETTABLE  R2 K17 R3    ; R2["mMaxMsgLength"] := R3
 81 [-]: GETUPVAL  R2 U1        ; R2 := U1
 82 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mInputPanel"]
 83 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0xAE7C226B"]
 84 [-]: CALL      R2 2 1       ; R2(R3)
 85 [-]: RETURN    R0 1         ; return 


; Function #123.17:
;
; Name:            
; Defined at line: 6647
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R1 0         ; if not R1 then PC := 34
  2 [-]: JMP       34           ; PC := 34
  3 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x9490FE70"]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: TEST      R2 0         ; if not R2 then PC := 22
  7 [-]: JMP       22           ; PC := 22
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
  9 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 10 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 11 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 12 [-]: LOADK     R6 K6        ; R6 := ".TabMenu.LeftBumper.Tf"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: LOADK     R6 K7        ; R6 := "textWidth"
 15 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: DIV       R3 R2 K9     ; R3 := R2 / 2
 18 [-]: ADD       R3 K10 R3    ; R3 := 24 + R3
 19 [-]: ADD       R3 R3 K11    ; R3 := R3 + 6
 20 [-]: SETTABLE  R0 K8 R3     ; R0["mMenuPanelXPos"] := R3
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 23 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 24 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 25 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mClipName"]
 26 [-]: LOADK     R7 K12       ; R7 := ".TabMenu.LeftArrow"
 27 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 28 [-]: LOADK     R7 K13       ; R7 := "_width"
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: SUB       R4 R3 K14    ; R4 := R3 - 4
 32 [-]: ADD       R4 K15 R4    ; R4 := 15 + R4
 33 [-]: SETTABLE  R0 K8 R4     ; R0["mMenuPanelXPos"] := R4
 34 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mMenuPanelXPos"]
 35 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 36 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x880196A7"]
 37 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipName"]
 38 [-]: LOADK     R8 K17       ; R8 := "TabMenu.TabMask"
 39 [-]: LOADK     R9 K18       ; R9 := "_x"
 40 [-]: MOVE      R10 R4       ; R10 := R4
 41 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 42 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 43 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x880196A7"]
 44 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipName"]
 45 [-]: LOADK     R8 K19       ; R8 := "TabMenu.MenuPanel"
 46 [-]: LOADK     R9 K18       ; R9 := "_x"
 47 [-]: MOVE      R10 R4       ; R10 := R4
 48 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 49 [-]: RETURN    R0 1         ; return 


; Function #123.18:
;
; Name:            
; Defined at line: 6663
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mTabMenu"]
  2 [-]: SETTABLE  R2 K1 K2     ; R2["mInitialX"] := 0
  3 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0xDD0B0B9E"]
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
  8 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
  9 [-]: LOADK     R5 K7        ; R5 := "TabMenu.LeftArrow"
 10 [-]: LOADK     R6 K8        ; R6 := "_alpha"
 11 [-]: LOADK     R7 K9        ; R7 := 50
 12 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 13 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 15 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 16 [-]: LOADK     R5 K10       ; R5 := "TabMenu.RightArrow"
 17 [-]: LOADK     R6 K8        ; R6 := "_alpha"
 18 [-]: LOADK     R7 K9        ; R7 := 50
 19 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 20 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 22 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 23 [-]: LOADK     R5 K11       ; R5 := "TabMenu.TabDivLine"
 24 [-]: LOADK     R6 K12       ; R6 := "_color"
 25 [-]: GETUPVAL  R7 U0        ; R7 := U0
 26 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 27 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 28 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 29 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 30 [-]: LOADK     R5 K11       ; R5 := "TabMenu.TabDivLine"
 31 [-]: LOADK     R6 K8        ; R6 := "_alpha"
 32 [-]: LOADK     R7 K13       ; R7 := 40
 33 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 34 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 35 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 36 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 37 [-]: LOADK     R5 K14       ; R5 := "TabMenu.ExpandCallout"
 38 [-]: LOADK     R6 K15       ; R6 := "_x"
 39 [-]: LOADK     R7 K16       ; R7 := 10
 40 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 41 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 42 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x17028E8F"]
 43 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 44 [-]: LOADK     R5 K18       ; R5 := ".TabMenu.LeftBumper.Tf.text"
 45 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 46 [-]: LOADK     R5 K19       ; R5 := "<MENU_LTRIGGER2>"
 47 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 48 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 49 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x17028E8F"]
 50 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 51 [-]: LOADK     R5 K20       ; R5 := ".TabMenu.RightBumper.Tf.text"
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: LOADK     R5 K21       ; R5 := "<MENU_RTRIGGER2>"
 54 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 55 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 56 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 57 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 58 [-]: LOADK     R5 K22       ; R5 := "TabMenu.LeftBumper"
 59 [-]: LOADK     R6 K15       ; R6 := "_x"
 60 [-]: LOADK     R7 K23       ; R7 := 24
 61 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 62 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 63 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 64 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 65 [-]: LOADK     R5 K22       ; R5 := "TabMenu.LeftBumper"
 66 [-]: LOADK     R6 K24       ; R6 := "_y"
 67 [-]: LOADK     R7 K25       ; R7 := 15
 68 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 69 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 70 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 71 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 72 [-]: LOADK     R5 K26       ; R5 := "TabMenu.RightBumper"
 73 [-]: LOADK     R6 K24       ; R6 := "_y"
 74 [-]: LOADK     R7 K25       ; R7 := 15
 75 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 76 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 77 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 78 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 79 [-]: LOADK     R5 K7        ; R5 := "TabMenu.LeftArrow"
 80 [-]: LOADK     R6 K15       ; R6 := "_x"
 81 [-]: LOADK     R7 K25       ; R7 := 15
 82 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 83 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 84 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 85 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 86 [-]: LOADK     R5 K7        ; R5 := "TabMenu.LeftArrow"
 87 [-]: LOADK     R6 K24       ; R6 := "_y"
 88 [-]: LOADK     R7 K27       ; R7 := 17
 89 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 90 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 91 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 92 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 93 [-]: LOADK     R5 K10       ; R5 := "TabMenu.RightArrow"
 94 [-]: LOADK     R6 K24       ; R6 := "_y"
 95 [-]: LOADK     R7 K27       ; R7 := 17
 96 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 97 [-]: SELF      R2 R0 K28    ; R3 := R0; R2 := R0["0x9717BA00"]
 98 [-]: MOVE      R4 R1        ; R4 := R1
 99 [-]: CALL      R2 3 1       ; R2(R3,R4)
100 [-]: RETURN    R0 1         ; return 


; Function #123.19:
;
; Name:            
; Defined at line: 6684
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mChannelName"]
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mActivePanelName"]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LOADNIL   R2 R2        ; R2 := nil
  9 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mActivePanelName"]
 10 [-]: EQ        1 R3 K3      ; if R3 == "" then PC := 56
 11 [-]: JMP       56           ; PC := 56
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 13 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mPanelList"]
 14 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mActivePanelName"]
 15 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 56
 18 [-]: JMP       56           ; PC := 56
 19 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mPanelList"]
 20 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mActivePanelName"]
 21 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 22 [-]: GETTABLE  R2 R3 K6     ; R2 := R3["mChannelType"]
 23 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mActivePanelName"]
 24 [-]: SETTABLE  R0 K7 R3     ; R0["mPrevPanelName"] := R3
 25 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mPanelList"]
 26 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mActivePanelName"]
 27 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 28 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xB85DD00B"]
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mVisualMode"]
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["VISUAL_MODE_MENU_FULL"]
 34 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETUPVAL  R3 U0        ; R3 := U0
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mVisualMode"]
 38 [-]: GETUPVAL  R4 U0        ; R4 := U0
 39 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["VISUAL_MODE_GAMEPLAY_FULL"]
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 56
 41 [-]: JMP       56           ; PC := 56
 42 [-]: GETUPVAL  R3 U1        ; R3 := U1
 43 [-]: CALL      R3 1 2       ; R3 := R3()
 44 [-]: GETGLOBAL R4 K12       ; R4 := gGameStatsMgr
 45 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 56
 48 [-]: JMP       56           ; PC := 56
 49 [-]: GETGLOBAL R4 K12       ; R4 := gGameStatsMgr
 50 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x47B87262"]
 51 [-]: GETGLOBAL R6 K14       ; R6 := 0xEC274B1A
 52 [-]: LOADK     R7 K15       ; R7 := "IN_CHAT_VIEW_TIME"
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: MOVE      R7 R3        ; R7 := R3
 55 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 56 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 96
 57 [-]: JMP       96           ; PC := 96
 58 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 59 [-]: MOVE      R4 R2        ; R4 := R2
 60 [-]: SELF      R4 R1 K16    ; R5 := R1; R4 := R1["0xEEFE2F88"]
 61 [-]: CALL      R4 2 1       ; R4(R5)
 62 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mChannelName"]
 63 [-]: SETTABLE  R0 K2 R4     ; R0["mActivePanelName"] := R4
 64 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mPanelList"]
 65 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mChannelName"]
 66 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 67 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0x86042FF2"]
 68 [-]: MOVE      R6 R2        ; R6 := R2
 69 [-]: CALL      R4 3 1       ; R4(R5,R6)
 70 [-]: GETUPVAL  R4 U0        ; R4 := U0
 71 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mVisualMode"]
 72 [-]: GETUPVAL  R5 U0        ; R5 := U0
 73 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["VISUAL_MODE_MENU_FULL"]
 74 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 82
 75 [-]: JMP       82           ; PC := 82
 76 [-]: GETUPVAL  R4 U0        ; R4 := U0
 77 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mVisualMode"]
 78 [-]: GETUPVAL  R5 U0        ; R5 := U0
 79 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["VISUAL_MODE_GAMEPLAY_FULL"]
 80 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETUPVAL  R4 U1        ; R4 := U1
 83 [-]: CALL      R4 1 2       ; R4 := R4()
 84 [-]: GETGLOBAL R5 K12       ; R5 := gGameStatsMgr
 85 [-]: EQ        1 R5 K0      ; if R5 == nil then PC := 96
 86 [-]: JMP       96           ; PC := 96
 87 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 96
 88 [-]: JMP       96           ; PC := 96
 89 [-]: GETGLOBAL R5 K12       ; R5 := gGameStatsMgr
 90 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0xCFF953A5"]
 91 [-]: GETGLOBAL R7 K14       ; R7 := 0xEC274B1A
 92 [-]: LOADK     R8 K15       ; R8 := "IN_CHAT_VIEW_TIME"
 93 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 94 [-]: MOVE      R8 R4        ; R8 := R4
 95 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 96 [-]: RETURN    R0 1         ; return 


; Function #123.20:
;
; Name:            
; Defined at line: 6724
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gMatchingService
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := gMatchingService
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF0C493C"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K3        ; R2 := 0xECFDD17
 17 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mPanelList"]
 18 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 19 [-]: JMP       46           ; PC := 46
 20 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 21 [-]: MOVE      R8 R6        ; R8 := R6
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: TEST      R7 1         ; if R7 then PC := 46
 24 [-]: JMP       46           ; PC := 46
 25 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 26 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["CHANNEL_GLOBAL"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 41
 28 [-]: JMP       41           ; PC := 41
 29 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 30 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["CHANNEL_RECRUITING"]
 31 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 41
 32 [-]: JMP       41           ; PC := 41
 33 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 34 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["CHANNEL_TRADE"]
 35 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 38 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["CHANNEL_QA"]
 39 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: SELF      R7 R1 K10    ; R8 := R1; R7 := R1["0x542CAA30"]
 42 [-]: LOADK     R9 K11       ; R9 := "#"
 43 [-]: GETTABLE  R10 R6 K12   ; R10 := R6["mChannelName"]
 44 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 45 [-]: CALL      R7 3 1       ; R7(R8,R9)
 46 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 20; R4 := R5 end
 47 [-]: JMP       20           ; PC := 20
 48 [-]: RETURN    R0 1         ; return 


; Function #123.21:
;
; Name:            
; Defined at line: 6742
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x2240369"]
  2 [-]: CALL      R2 2 1       ; R2(R3)
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0xECFDD17
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  6 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
  9 [-]: MOVE      R9 R7        ; R9 := R7
 10 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 11 [-]: TEST      R8 1         ; if R8 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R8 R7 K4     ; R9 := R7; R8 := R7["0xAE78D1F"]
 14 [-]: MOVE      R10 R1       ; R10 := R1
 15 [-]: CALL      R8 3 1       ; R8(R9,R10)
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 8; R5 := R6 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: TEST      R2 1         ; if R2 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["mClipName"]
 22 [-]: LOADK     R9 K6        ; R9 := ".TabbedChatPanel"
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: GETGLOBAL R9 K7        ; R9 := string
 25 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x4B1F4F58"]
 26 [-]: LOADK     R10 K9       ; R10 := "<p><font color=\"#%X\">"
 27 [-]: GETGLOBAL R11 K10      ; R11 := _G
 28 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["UIColor_White"]
 29 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 30 [-]: MOVE      R10 R1       ; R10 := R1
 31 [-]: LOADK     R11 K12      ; R11 := "</font></p>"
 32 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 33 [-]: GETGLOBAL R10 K13      ; R10 := mMovie
 34 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0xD6A79FE9"]
 35 [-]: MOVE      R12 R8       ; R12 := R8
 36 [-]: LOADK     R13 K15      ; R13 := ".ChatArea"
 37 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 38 [-]: LOADK     R13 K16      ; R13 := "text"
 39 [-]: MOVE      R14 R9       ; R14 := R9
 40 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: RETURN    R0 1         ; return 


; Function #123.22:
;
; Name:            
; Defined at line: 6764
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0x2240369"]
  2 [-]: CALL      R3 2 1       ; R3(R4)
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xECFDD17
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
  8 [-]: MOVE      R9 R7        ; R9 := R7
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 1         ; if R8 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mChannelType"]
 13 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7["0xAE78D1F"]
 16 [-]: MOVE      R10 R1       ; R10 := R1
 17 [-]: CALL      R8 3 1       ; R8(R9,R10)
 18 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 19 [-]: JMP       7            ; PC := 7
 20 [-]: RETURN    R0 1         ; return 


; Function #123.23:
;
; Name:            
; Defined at line: 6773
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x2240369"]
  2 [-]: CALL      R2 2 1       ; R2(R3)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xECFDD17
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mPanelList"]
  5 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R7 K3        ; R7 := 0x400E7765
  8 [-]: MOVE      R8 R6        ; R8 := R6
  9 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 10 [-]: TEST      R7 1         ; if R7 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: SELF      R7 R6 K4     ; R8 := R6; R7 := R6["0xE707B98B"]
 13 [-]: MOVE      R9 R1        ; R9 := R1
 14 [-]: CALL      R7 3 1       ; R7(R8,R9)
 15 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 7; R4 := R5 end
 16 [-]: JMP       7            ; PC := 7
 17 [-]: RETURN    R0 1         ; return 


; Function #123.24:
;
; Name:            
; Defined at line: 6782
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0x2240369"]
  2 [-]: CALL      R3 2 1       ; R3(R4)
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xECFDD17
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
  8 [-]: MOVE      R9 R7        ; R9 := R7
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 1         ; if R8 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mChannelType"]
 13 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7["0xE707B98B"]
 16 [-]: MOVE      R10 R1       ; R10 := R1
 17 [-]: CALL      R8 3 1       ; R8(R9,R10)
 18 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 19 [-]: JMP       7            ; PC := 7
 20 [-]: RETURN    R0 1         ; return 


; Function #123.25:
;
; Name:            
; Defined at line: 6791
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SETTABLE  R0 K0 R1     ; R0["mMode"] := R1
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 32
  3 [-]: JMP       32           ; PC := 32
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mPanelShortcuts"]
  5 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  6 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R3 K3        ; R3 := string
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xDE44F664"]
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: LOADK     R5 K5        ; R5 := "#"
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R4 K3        ; R4 := string
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x7B782033"]
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: ADD       R6 R3 K7     ; R6 := R3 + 1
 20 [-]: LOADK     R7 K8        ; R7 := -1
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: MOVE      R2 R4        ; R2 := R4
 23 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mPanelList"]
 24 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
 25 [-]: EQ        0 R4 K1      ; if R4 ~= nil then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: SELF      R4 R0 K10    ; R5 := R0; R4 := R0["0xE2A2E3AC"]
 29 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mPanelList"]
 30 [-]: GETTABLE  R6 R6 R2     ; R6 := R6[R2]
 31 [-]: CALL      R4 3 1       ; R4(R5,R6)
 32 [-]: RETURN    R0 1         ; return 


; Function #123.26:
;
; Name:            
; Defined at line: 6813
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0x4BACCB71"]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: LOADK     R4 K1        ; R4 := "[]"
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: EQ        1 R2 K2      ; if R2 == 0 then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xAE78D1F"]
  9 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 10 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 11 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
 12 [-]: MOVE      R8 R0        ; R8 := R0
 13 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 14 [-]: CALL      R3 0 1       ; R3(R4,...)
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: JMP       72           ; PC := 72
 17 [-]: GETGLOBAL R3 K7        ; R3 := 0x400E7765
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 1         ; if R3 then PC := 72
 21 [-]: JMP       72           ; PC := 72
 22 [-]: GETGLOBAL R3 K8        ; R3 := string
 23 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xBDD0D625"]
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K8        ; R4 := string
 27 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xBDD0D625"]
 28 [-]: GETUPVAL  R5 U2        ; R5 := U2
 29 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mUser"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 47
 32 [-]: JMP       47           ; PC := 47
 33 [-]: GETUPVAL  R3 U1        ; R3 := U1
 34 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0xF075C8EC"]
 35 [-]: MOVE      R5 R1        ; R5 := R1
 36 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 37 [-]: TEST      R3 1         ; if R3 then PC := 47
 38 [-]: JMP       47           ; PC := 47
 39 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xAE78D1F"]
 40 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 41 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 42 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Language/Menu/Chat_CannotIgnoreSelf"
 43 [-]: MOVE      R8 R0        ; R8 := R0
 44 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 45 [-]: CALL      R3 0 1       ; R3(R4,...)
 46 [-]: RETURN    R0 1         ; return 
 47 [-]: GETUPVAL  R3 U1        ; R3 := U1
 48 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xB1FCFF49"]
 49 [-]: MOVE      R5 R1        ; R5 := R1
 50 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 51 [-]: TEST      R3 0         ; if not R3 then PC := 63
 52 [-]: JMP       63           ; PC := 63
 53 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xAE78D1F"]
 54 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 55 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 56 [-]: LOADK     R7 K14       ; R7 := "/Lotus/Language/Menu/Chat_IgnoringUser"
 57 [-]: MOVE      R8 R0        ; R8 := R0
 58 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 59 [-]: SETTABLE  R9 K15 R1    ; R9["USER"] := R1
 60 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 61 [-]: CALL      R3 0 1       ; R3(R4,...)
 62 [-]: JMP       72           ; PC := 72
 63 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xAE78D1F"]
 64 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 65 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 66 [-]: LOADK     R7 K16       ; R7 := "/Lotus/Language/Menu/Chat_ListeningUser"
 67 [-]: MOVE      R8 R0        ; R8 := R0
 68 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 69 [-]: SETTABLE  R9 K15 R1    ; R9["USER"] := R1
 70 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 71 [-]: CALL      R3 0 1       ; R3(R4,...)
 72 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mUserPanel"]
 73 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["mListControl"]
 74 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0xC51A5C9D"]
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: LOADK     R4 K20       ; R4 := 1
 77 [-]: MOVE      R5 R3        ; R5 := R3
 78 [-]: LOADK     R6 K20       ; R6 := 1
 79 [-]: FORPREP   R4 102       ; R4 -= R6; PC := 102
 80 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mUserPanel"]
 81 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mListControl"]
 82 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mElements"]
 83 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 84 [-]: EQ        1 R8 K22     ; if R8 == nil then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mUserPanel"]
 87 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mListControl"]
 88 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mElements"]
 89 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 90 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["User"]
 91 [-]: EQ        0 R8 R1      ; if R8 ~= R1 then PC := 102
 92 [-]: JMP       102          ; PC := 102
 93 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mUserPanel"]
 94 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mListControl"]
 95 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["0xA372F64A"]
 96 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["mUserPanel"]
 97 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["mListControl"]
 98 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["mElements"]
 99 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
100 [-]: CALL      R8 2 1       ; R8(R9)
101 [-]: JMP       103          ; PC := 103
102 [-]: FORLOOP   R4 80        ; R4 += R6; if R4 <= R5 then begin PC := 80; R7 := R4 end
103 [-]: RETURN    R0 1         ; return 


; Function #123.27:
;
; Name:            
; Defined at line: 6846
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R2 K0        ; R2 := 0
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETGLOBAL R4 K1        ; R4 := Engine
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0x1398DAFB"]
  5 [-]: CALL      R4 1 2       ; R4 := R4()
  6 [-]: TEST      R4 1         ; if R4 then PC := 89
  7 [-]: JMP       89           ; PC := 89
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 1         ; if R4 then PC := 89
 12 [-]: JMP       89           ; PC := 89
 13 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 14 [-]: GETUPVAL  R6 U2        ; R6 := U2
 15 [-]: TEST      R6 0         ; if not R6 then PC := 36
 16 [-]: JMP       36           ; PC := 36
 17 [-]: GETUPVAL  R6 U1        ; R6 := U1
 18 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x49E6E8A2"]
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 21 [-]: TEST      R6 0         ; if not R6 then PC := 36
 22 [-]: JMP       36           ; PC := 36
 23 [-]: GETUPVAL  R6 U1        ; R6 := U1
 24 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xA0E1A62F"]
 25 [-]: MOVE      R8 R1        ; R8 := R1
 26 [-]: MOVE      R9 R1        ; R9 := R1
 27 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 28 [-]: MOVE      R4 R6        ; R4 := R6
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xA0E1A62F"]
 31 [-]: MOVE      R8 R1        ; R8 := R1
 32 [-]: MOVE      R9 R0        ; R9 := R0
 33 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 34 [-]: MOVE      R5 R6        ; R5 := R6
 35 [-]: JMP       57           ; PC := 57
 36 [-]: GETUPVAL  R6 U3        ; R6 := U3
 37 [-]: TEST      R6 0         ; if not R6 then PC := 57
 38 [-]: JMP       57           ; PC := 57
 39 [-]: GETUPVAL  R6 U1        ; R6 := U1
 40 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x49E6E8A2"]
 41 [-]: MOVE      R8 R0        ; R8 := R0
 42 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 43 [-]: TEST      R6 0         ; if not R6 then PC := 57
 44 [-]: JMP       57           ; PC := 57
 45 [-]: GETUPVAL  R6 U1        ; R6 := U1
 46 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xA0E1A62F"]
 47 [-]: MOVE      R8 R0        ; R8 := R0
 48 [-]: MOVE      R9 R1        ; R9 := R1
 49 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 50 [-]: MOVE      R4 R6        ; R4 := R6
 51 [-]: GETUPVAL  R6 U1        ; R6 := U1
 52 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xA0E1A62F"]
 53 [-]: MOVE      R8 R0        ; R8 := R0
 54 [-]: MOVE      R9 R0        ; R9 := R0
 55 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 56 [-]: MOVE      R5 R6        ; R5 := R6
 57 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 58 [-]: MOVE      R7 R4        ; R7 := R4
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: TEST      R6 1         ; if R6 then PC := 89
 61 [-]: JMP       89           ; PC := 89
 62 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 63 [-]: MOVE      R7 R5        ; R7 := R5
 64 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 65 [-]: TEST      R6 1         ; if R6 then PC := 89
 66 [-]: JMP       89           ; PC := 89
 67 [-]: GETGLOBAL R6 K6        ; R6 := 0xF595ADDE
 68 [-]: MOVE      R7 R4        ; R7 := R4
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: GETUPVAL  R7 U4        ; R7 := U4
 71 [-]: MUL       R2 R6 R7     ; R2 := R6 * R7
 72 [-]: TEST      R1 0         ; if not R1 then PC := 77
 73 [-]: JMP       77           ; PC := 77
 74 [-]: LE        0 K7 R5      ; if 0.94999998807907 > R5 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: LOADK     R5 K8        ; R5 := 1
 77 [-]: GETGLOBAL R6 K6        ; R6 := 0xF595ADDE
 78 [-]: MOVE      R7 R5        ; R7 := R5
 79 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 80 [-]: GETUPVAL  R7 U0        ; R7 := U0
 81 [-]: MUL       R3 R6 R7     ; R3 := R6 * R7
 82 [-]: GETUPVAL  R6 U0        ; R6 := U0
 83 [-]: DIV       R6 R6 K9     ; R6 := R6 / 2
 84 [-]: LT        0 R6 R3      ; if R6 >= R3 then PC := 89
 85 [-]: JMP       89           ; PC := 89
 86 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mWindow"]
 87 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["height"]
 88 [-]: SUB       R3 R3 R6     ; R3 := R3 - R6
 89 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0["0xEC183DDC"]
 90 [-]: GETUPVAL  R8 U5        ; R8 := U5
 91 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["0xB57E56DF"]
 92 [-]: MOVE      R9 R2        ; R9 := R2
 93 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 94 [-]: GETUPVAL  R9 U5        ; R9 := U5
 95 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0xB57E56DF"]
 96 [-]: MOVE      R10 R3       ; R10 := R3
 97 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 98 [-]: MOVE      R10 R1       ; R10 := R1
 99 [-]: MOVE      R11 R0       ; R11 := R0
100 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
101 [-]: RETURN    R0 1         ; return 


; Function #123.28:
;
; Name:            
; Defined at line: 6881
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: LOADK     R2 K0        ; R2 := 0
  3 [-]: GETGLOBAL R3 K1        ; R3 := Engine
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0x1398DAFB"]
  5 [-]: CALL      R3 1 2       ; R3 := R3()
  6 [-]: TEST      R3 1         ; if R3 then PC := 29
  7 [-]: JMP       29           ; PC := 29
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 29
 12 [-]: JMP       29           ; PC := 29
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x513358CF"]
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 18 [-]: MOVE      R1 R3        ; R1 := R3
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x513358CF"]
 21 [-]: GETUPVAL  R5 U1        ; R5 := U1
 22 [-]: MOVE      R6 R0        ; R6 := R0
 23 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 24 [-]: MOVE      R2 R3        ; R2 := R3
 25 [-]: GETUPVAL  R3 U2        ; R3 := U2
 26 [-]: MUL       R1 R1 R3     ; R1 := R1 * R3
 27 [-]: GETUPVAL  R3 U3        ; R3 := U3
 28 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 29 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0xD1D449ED"]
 30 [-]: GETUPVAL  R5 U4        ; R5 := U4
 31 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xB57E56DF"]
 32 [-]: MOVE      R6 R1        ; R6 := R1
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: GETUPVAL  R6 U4        ; R6 := U4
 35 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xB57E56DF"]
 36 [-]: MOVE      R7 R2        ; R7 := R2
 37 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 38 [-]: CALL      R3 0 1       ; R3(R4,...)
 39 [-]: RETURN    R0 1         ; return 


; Function #123.29:
;
; Name:            
; Defined at line: 6894
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x9490FE70"]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mFilterBtnOffset"]
  7 [-]: LOADK     R4 K4        ; R4 := 0
  8 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  9 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 10 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x880196A7"]
 11 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mClipName"]
 12 [-]: LOADK     R5 K8        ; R5 := "TabbedChatPanel.FilterBtn"
 13 [-]: LOADK     R6 K9        ; R6 := "_x"
 14 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mOrigFilterPos"]
 15 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["Btn"]
 16 [-]: ADD       R7 R7 R1     ; R7 := R7 + R1
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 19 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x880196A7"]
 20 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mClipName"]
 21 [-]: LOADK     R5 K12       ; R5 := "TabbedChatPanel.FilterList"
 22 [-]: LOADK     R6 K9        ; R6 := "_x"
 23 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mOrigFilterPos"]
 24 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["List"]
 25 [-]: ADD       R7 R7 R1     ; R7 := R7 + R1
 26 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 27 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 28 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x880196A7"]
 29 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mClipName"]
 30 [-]: LOADK     R5 K14       ; R5 := "TabbedChatPanel.FilterListMask"
 31 [-]: LOADK     R6 K9        ; R6 := "_x"
 32 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mOrigFilterPos"]
 33 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["Mask"]
 34 [-]: ADD       R7 R7 R1     ; R7 := R7 + R1
 35 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 36 [-]: RETURN    R0 1         ; return 


; Function #123.30:
;
; Name:            
; Defined at line: 6901
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: LOADK     R2 K1        ; R2 := ".TabbedChatPanel"
  3 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  4 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  5 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x26581636"]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: LOADK     R5 K4        ; R5 := ".FilterBtn"
  8 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  9 [-]: GETGLOBAL R5 K5        ; R5 := chatFilterMgrIcon
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 12 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x17028E8F"]
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: LOADK     R5 K7        ; R5 := ".FilterCallout.Tf.text"
 15 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 16 [-]: LOADK     R5 K8        ; R5 := "<MENU_GENERIC2>"
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 19 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 20 [-]: MOVE      R4 R1        ; R4 := R1
 21 [-]: LOADK     R5 K10       ; R5 := "FilterCallout"
 22 [-]: LOADK     R6 K11       ; R6 := "_visible"
 23 [-]: GETGLOBAL R7 K12       ; R7 := Engine
 24 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["0x9490FE70"]
 25 [-]: CALL      R7 1 0       ; R7,... := R7()
 26 [-]: CALL      R2 0 1       ; R2(R3,...)
 27 [-]: SELF      R2 R0 K14    ; R3 := R0; R2 := R0["0xF771919A"]
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["0xB40DEC3F"]
 31 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: LOADK     R5 K17       ; R5 := ".FilterList.Element"
 34 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 35 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 36 [-]: SETTABLE  R0 K15 R2    ; R0["mFilterList"] := R2
 37 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 38 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0xE13A565"]
 39 [-]: LOADK     R4 K19       ; R4 := "FilterSelected"
 40 [-]: LOADK     R5 K20       ; R5 := "FilterFocused"
 41 [-]: LOADK     R6 K21       ; R6 := "FilterUnfocused"
 42 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 43 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 44 [-]: SETTABLE  R2 K22 K23   ; R2["mForcedVerticalSeparation"] := 0
 45 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 46 [-]: SETTABLE  R2 K24 K25   ; R2["mForcedHorizontalSeparation"] := 5
 47 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 48 [-]: CLOSURE   R3 0         ; R3 := closure(Function #123.30.1)
 49 [-]: SETTABLE  R2 K26 R3    ; R2["mOnFocusedCallback"] := R3
 50 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 51 [-]: CLOSURE   R3 1         ; R3 := closure(Function #123.30.2)
 52 [-]: SETTABLE  R2 K27 R3    ; R2["mOnUnfocusedCallback"] := R3
 53 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 54 [-]: CLOSURE   R3 2         ; R3 := closure(Function #123.30.3)
 55 [-]: MOVE      R0 R0        ; R0 := R0
 56 [-]: GETUPVAL  R0 U1        ; R0 := U1
 57 [-]: SETTABLE  R2 K28 R3    ; R2["mOnSelectedCallback"] := R3
 58 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 59 [-]: CLOSURE   R3 3         ; R3 := closure(Function #123.30.4)
 60 [-]: SETTABLE  R2 K29 R3    ; R2["AdjustBtnWidth"] := R3
 61 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 62 [-]: CLOSURE   R3 4         ; R3 := closure(Function #123.30.5)
 63 [-]: MOVE      R0 R0        ; R0 := R0
 64 [-]: SETTABLE  R2 K30 R3    ; R2["mElementDrawCallback"] := R3
 65 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mFilterList"]
 66 [-]: CLOSURE   R3 5         ; R3 := closure(Function #123.30.6)
 67 [-]: SETTABLE  R2 K31 R3    ; R2["CalculateX"] := R3
 68 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 69 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 70 [-]: MOVE      R4 R1        ; R4 := R1
 71 [-]: LOADK     R5 K32       ; R5 := "ChatArea"
 72 [-]: LOADK     R6 K33       ; R6 := "ignoreIconOffset"
 73 [-]: LOADK     R7 K34       ; R7 := "true"
 74 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 75 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 76 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 77 [-]: MOVE      R4 R1        ; R4 := R1
 78 [-]: LOADK     R5 K35       ; R5 := "Fill"
 79 [-]: LOADK     R6 K36       ; R6 := "_color"
 80 [-]: GETUPVAL  R7 U2        ; R7 := U2
 81 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 82 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 83 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 84 [-]: MOVE      R4 R1        ; R4 := R1
 85 [-]: LOADK     R5 K35       ; R5 := "Fill"
 86 [-]: LOADK     R6 K37       ; R6 := "_alpha"
 87 [-]: LOADK     R7 K38       ; R7 := 75
 88 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 89 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 90 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 91 [-]: MOVE      R4 R1        ; R4 := R1
 92 [-]: LOADK     R5 K39       ; R5 := "EdgeLeft"
 93 [-]: LOADK     R6 K36       ; R6 := "_color"
 94 [-]: GETUPVAL  R7 U3        ; R7 := U3
 95 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 96 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 97 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 98 [-]: MOVE      R4 R1        ; R4 := R1
 99 [-]: LOADK     R5 K39       ; R5 := "EdgeLeft"
100 [-]: LOADK     R6 K37       ; R6 := "_alpha"
101 [-]: LOADK     R7 K40       ; R7 := 25
102 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
103 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
104 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
105 [-]: MOVE      R4 R1        ; R4 := R1
106 [-]: LOADK     R5 K41       ; R5 := "EdgeRight"
107 [-]: LOADK     R6 K36       ; R6 := "_color"
108 [-]: GETUPVAL  R7 U3        ; R7 := U3
109 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
110 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
111 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
112 [-]: MOVE      R4 R1        ; R4 := R1
113 [-]: LOADK     R5 K41       ; R5 := "EdgeRight"
114 [-]: LOADK     R6 K37       ; R6 := "_alpha"
115 [-]: LOADK     R7 K40       ; R7 := 25
116 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
117 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
118 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
119 [-]: MOVE      R4 R1        ; R4 := R1
120 [-]: LOADK     R5 K42       ; R5 := "DecoLine"
121 [-]: LOADK     R6 K36       ; R6 := "_color"
122 [-]: GETUPVAL  R7 U3        ; R7 := U3
123 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
124 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
125 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
126 [-]: MOVE      R4 R1        ; R4 := R1
127 [-]: LOADK     R5 K42       ; R5 := "DecoLine"
128 [-]: LOADK     R6 K37       ; R6 := "_alpha"
129 [-]: LOADK     R7 K40       ; R7 := 25
130 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
131 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
132 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
133 [-]: MOVE      R4 R1        ; R4 := R1
134 [-]: LOADK     R5 K43       ; R5 := "DecoCurve"
135 [-]: LOADK     R6 K36       ; R6 := "_color"
136 [-]: GETUPVAL  R7 U3        ; R7 := U3
137 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
138 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
139 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
140 [-]: MOVE      R4 R1        ; R4 := R1
141 [-]: LOADK     R5 K43       ; R5 := "DecoCurve"
142 [-]: LOADK     R6 K37       ; R6 := "_alpha"
143 [-]: LOADK     R7 K40       ; R7 := 25
144 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
145 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
146 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
147 [-]: MOVE      R4 R1        ; R4 := R1
148 [-]: LOADK     R5 K44       ; R5 := "ScrollBar.Scrub"
149 [-]: LOADK     R6 K45       ; R6 := "startScrubCallback"
150 [-]: LOADK     R7 K46       ; R7 := "ChatScrubStartDrag"
151 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
152 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
153 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
154 [-]: MOVE      R4 R1        ; R4 := R1
155 [-]: LOADK     R5 K44       ; R5 := "ScrollBar.Scrub"
156 [-]: LOADK     R6 K47       ; R6 := "stopScrubCallback"
157 [-]: LOADK     R7 K48       ; R7 := "ChatScrubStopDrag"
158 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
159 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
160 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
161 [-]: MOVE      R4 R1        ; R4 := R1
162 [-]: LOADK     R5 K49       ; R5 := "ScrollBar"
163 [-]: LOADK     R6 K50       ; R6 := "clickScrollBarCallback"
164 [-]: LOADK     R7 K51       ; R7 := "ChatScrollBarClick"
165 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
166 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
167 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
168 [-]: MOVE      R4 R1        ; R4 := R1
169 [-]: LOADK     R5 K44       ; R5 := "ScrollBar.Scrub"
170 [-]: LOADK     R6 K11       ; R6 := "_visible"
171 [-]: MOVE      R7 R0        ; R7 := R0
172 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
173 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
174 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
175 [-]: MOVE      R4 R1        ; R4 := R1
176 [-]: LOADK     R5 K49       ; R5 := "ScrollBar"
177 [-]: LOADK     R6 K11       ; R6 := "_visible"
178 [-]: MOVE      R7 R0        ; R7 := R0
179 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
180 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
181 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
182 [-]: MOVE      R4 R1        ; R4 := R1
183 [-]: LOADK     R5 K49       ; R5 := "ScrollBar"
184 [-]: LOADK     R6 K52       ; R6 := "_y"
185 [-]: LOADK     R7 K53       ; R7 := 8
186 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
187 [-]: RETURN    R0 1         ; return 


; Function #123.30.1:
;
; Name:            
; Defined at line: 6914
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x302AAB2F"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".Bg"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
  7 [-]: GETGLOBAL R5 K5        ; R5 := _G
  8 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_Yellow"]
  9 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 10 [-]: GETGLOBAL R6 K5        ; R6 := _G
 11 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_Yellow"]
 12 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 13 [-]: GETGLOBAL R7 K5        ; R7 := _G
 14 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_Yellow"]
 15 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 16 [-]: LOADK     R8 K10       ; R8 := 0.89999997615814
 17 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 18 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x880196A7"]
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 21 [-]: LOADK     R4 K12       ; R4 := "CrossIcon"
 22 [-]: LOADK     R5 K13       ; R5 := "_color"
 23 [-]: GETGLOBAL R6 K5        ; R6 := _G
 24 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["UIColor_Yellow"]
 25 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 26 [-]: RETURN    R0 1         ; return 


; Function #123.30.2:
;
; Name:            
; Defined at line: 6919
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x302AAB2F"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".Bg"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
  7 [-]: GETGLOBAL R5 K5        ; R5 := _G
  8 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_White"]
  9 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 10 [-]: GETGLOBAL R6 K5        ; R6 := _G
 11 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_White"]
 12 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 13 [-]: GETGLOBAL R7 K5        ; R7 := _G
 14 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_White"]
 15 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 16 [-]: LOADK     R8 K10       ; R8 := 0.25
 17 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 18 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x880196A7"]
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 21 [-]: LOADK     R4 K12       ; R4 := "CrossIcon"
 22 [-]: LOADK     R5 K13       ; R5 := "_color"
 23 [-]: GETGLOBAL R6 K5        ; R6 := _G
 24 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["UIColor_White"]
 25 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 26 [-]: RETURN    R0 1         ; return 


; Function #123.30.3:
;
; Name:            
; Defined at line: 6924
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x18AAE1E3"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 33
  8 [-]: JMP       33           ; PC := 33
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 33
 13 [-]: JMP       33           ; PC := 33
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x69D25AB1"]
 16 [-]: GETGLOBAL R4 K3        ; R4 := string
 17 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0x7B782033"]
 18 [-]: GETTABLE  R5 R1 K5     ; R5 := R1["mChannelName"]
 19 [-]: LOADK     R6 K6        ; R6 := 1
 20 [-]: LOADK     R7 K6        ; R7 := 1
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: GETGLOBAL R5 K7        ; R5 := Engine
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0x37358602"]
 24 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["Filter"]
 25 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["Include"]
 26 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 27 [-]: CALL      R2 0 1       ; R2(R3,...)
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mFilterList"]
 30 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x96ABF26F"]
 31 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["mIndex"]
 32 [-]: CALL      R2 3 1       ; R2(R3,R4)
 33 [-]: RETURN    R0 1         ; return 


; Function #123.30.4:
;
; Name:            
; Defined at line: 6934
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xF595ADDE
  6 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x6B7B470B"]
  8 [-]: LOADK     R4 K5        ; R4 := "Window.TabbedChatPanel.FilterListMask"
  9 [-]: LOADK     R5 K6        ; R5 := "_width"
 10 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
 13 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 14 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 15 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 16 [-]: LOADK     R6 K7        ; R6 := "_x"
 17 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 18 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 19 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 20 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 21 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 22 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 23 [-]: LOADK     R7 K8        ; R7 := ".Bg"
 24 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 25 [-]: LOADK     R7 K6        ; R7 := "_width"
 26 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 27 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 28 [-]: LT        1 R2 R1      ; if R2 < R1 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 33 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x880196A7"]
 34 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 35 [-]: LOADK     R8 K10       ; R8 := "Btn"
 36 [-]: LOADK     R9 K11       ; R9 := "_visible"
 37 [-]: MOVE      R10 R4       ; R10 := R4
 38 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 39 [-]: TEST      R4 0         ; if not R4 then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: GETGLOBAL R5 K12       ; R5 := math
 42 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["0x65F9712A"]
 43 [-]: MOVE      R6 R3        ; R6 := R3
 44 [-]: SUB       R7 R1 R2     ; R7 := R1 - R2
 45 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 46 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 47 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
 48 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mClipName"]
 49 [-]: LOADK     R9 K10       ; R9 := "Btn"
 50 [-]: LOADK     R10 K6       ; R10 := "_width"
 51 [-]: MOVE      R11 R5       ; R11 := R5
 52 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 53 [-]: RETURN    R0 1         ; return 


; Function #123.30.5:
;
; Name:            
; Defined at line: 6952
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R1 K0        ; R1 := "<p>"
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Include"]
  3 [-]: TEST      R2 1         ; if R2 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: LOADK     R3 K2        ; R3 := "<font color=\"#C80406\">"
  7 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
  8 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
  9 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Menu/FilterMgr_ExcludeTag"
 10 [-]: MOVE      R7 R0        ; R7 := R0
 11 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 12 [-]: LOADK     R5 K6        ; R5 := " "
 13 [-]: LOADK     R6 K7        ; R6 := "</font>"
 14 [-]: CONCAT    R1 R2 R6     ; R1 := R2 .. R3 .. R4 .. R5 .. R6
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: LOADK     R3 K8        ; R3 := "<font color=\"#FFFFFF\">"
 17 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Label"]
 18 [-]: LOADK     R5 K10       ; R5 := "</font></p>"
 19 [-]: CONCAT    R1 R2 R5     ; R1 := R2 .. R3 .. R4 .. R5
 20 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 21 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x880196A7"]
 22 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mClipName"]
 23 [-]: LOADK     R5 K9        ; R5 := "Label"
 24 [-]: LOADK     R6 K13       ; R6 := "text"
 25 [-]: MOVE      R7 R1        ; R7 := R1
 26 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 27 [-]: GETGLOBAL R2 K14       ; R2 := 0xF595ADDE
 28 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 29 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x6B7B470B"]
 30 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 31 [-]: LOADK     R6 K16       ; R6 := ".Label"
 32 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 33 [-]: LOADK     R6 K17       ; R6 := "textWidth"
 34 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 35 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 36 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 37 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 38 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 39 [-]: LOADK     R6 K19       ; R6 := ".Bg"
 40 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 41 [-]: GETGLOBAL R6 K20       ; R6 := _G
 42 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["UIMaterial_RectangleNoDepth"]
 43 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 44 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 45 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x302AAB2F"]
 46 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 47 [-]: LOADK     R6 K19       ; R6 := ".Bg"
 48 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 49 [-]: LOADK     R6 K23       ; R6 := "RectEdgeColor"
 50 [-]: GETGLOBAL R7 K20       ; R7 := _G
 51 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["UIColorObject_White"]
 52 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["r"]
 53 [-]: GETGLOBAL R8 K20       ; R8 := _G
 54 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["UIColorObject_White"]
 55 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["g"]
 56 [-]: GETGLOBAL R9 K20       ; R9 := _G
 57 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["UIColorObject_White"]
 58 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["b"]
 59 [-]: LOADK     R10 K28      ; R10 := 0.25
 60 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 61 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 62 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x302AAB2F"]
 63 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 64 [-]: LOADK     R6 K19       ; R6 := ".Bg"
 65 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 66 [-]: LOADK     R6 K29       ; R6 := "RectInnerColor"
 67 [-]: GETGLOBAL R7 K20       ; R7 := _G
 68 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["UIColorObject_Black"]
 69 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["r"]
 70 [-]: GETGLOBAL R8 K20       ; R8 := _G
 71 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["UIColorObject_Black"]
 72 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["g"]
 73 [-]: GETGLOBAL R9 K20       ; R9 := _G
 74 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["UIColorObject_Black"]
 75 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["b"]
 76 [-]: LOADK     R10 K31      ; R10 := 0.94999998807907
 77 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 78 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 79 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x880196A7"]
 80 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 81 [-]: LOADK     R6 K32       ; R6 := "Bg"
 82 [-]: LOADK     R7 K33       ; R7 := "_width"
 83 [-]: ADD       R8 R2 K34    ; R8 := R2 + 42
 84 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 85 [-]: GETUPVAL  R3 U0        ; R3 := U0
 86 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["mFilterList"]
 87 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["0x3356ECBD"]
 88 [-]: MOVE      R4 R0        ; R4 := R0
 89 [-]: CALL      R3 2 1       ; R3(R4)
 90 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 91 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x880196A7"]
 92 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 93 [-]: LOADK     R6 K37       ; R6 := "Separator"
 94 [-]: LOADK     R7 K38       ; R7 := "_alpha"
 95 [-]: LOADK     R8 K39       ; R8 := 25
 96 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 97 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 98 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x880196A7"]
 99 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
100 [-]: LOADK     R6 K37       ; R6 := "Separator"
101 [-]: LOADK     R7 K40       ; R7 := "_x"
102 [-]: ADD       R8 R2 K41    ; R8 := R2 + 15
103 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
104 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
105 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x880196A7"]
106 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
107 [-]: LOADK     R6 K42       ; R6 := "CrossIcon"
108 [-]: LOADK     R7 K43       ; R7 := "_color"
109 [-]: GETGLOBAL R8 K20       ; R8 := _G
110 [-]: GETTABLE  R8 R8 K44    ; R8 := R8["UIColor_White"]
111 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
112 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
113 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x880196A7"]
114 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
115 [-]: LOADK     R6 K42       ; R6 := "CrossIcon"
116 [-]: LOADK     R7 K40       ; R7 := "_x"
117 [-]: ADD       R8 R2 K41    ; R8 := R2 + 15
118 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
119 [-]: RETURN    R0 1         ; return 


; Function #123.30.6:
;
; Name:            
; Defined at line: 6975
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: LOADK     R3 K1        ; R3 := 1
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mIndex"]
  4 [-]: SUB       R4 R4 K1     ; R4 := R4 - 1
  5 [-]: LOADK     R5 K1        ; R5 := 1
  6 [-]: FORPREP   R3 21        ; R3 -= R5; PC := 21
  7 [-]: GETGLOBAL R7 K3        ; R7 := 0xF595ADDE
  8 [-]: GETGLOBAL R8 K4        ; R8 := mMovie
  9 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x6B7B470B"]
 10 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mElements"]
 11 [-]: GETTABLE  R10 R10 R6   ; R10 := R10[R6]
 12 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["mClipName"]
 13 [-]: LOADK     R11 K8       ; R11 := ".Bg"
 14 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 15 [-]: LOADK     R11 K9       ; R11 := "_width"
 16 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 17 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 18 [-]: ADD       R8 R2 R7     ; R8 := R2 + R7
 19 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mForcedHorizontalSeparation"]
 20 [-]: ADD       R2 R8 R9     ; R2 := R8 + R9
 21 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: RETURN    R0 1         ; return 


; Function #123.31:
;
; Name:            
; Defined at line: 7011
; #Upvalues:       10
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  2 [-]: SETTABLE  R5 K1 K2     ; R5["x"] := 0
  3 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  4 [-]: SETTABLE  R5 K3 K2     ; R5["y"] := 0
  5 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  6 [-]: SETTABLE  R5 K4 K2     ; R5["width"] := 0
  7 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  8 [-]: SETTABLE  R5 K5 K2     ; R5["height"] := 0
  9 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 10 [-]: SETTABLE  R5 K6 K7     ; R5["minWidth"] := 460
 11 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 12 [-]: SETTABLE  R5 K8 K9     ; R5["minHeight"] := 255
 13 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 14 [-]: SETTABLE  R5 K10 K11   ; R5["maxWidth"] := 0.80000001192093
 15 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 16 [-]: SETTABLE  R5 K12 K13   ; R5["maxHeight"] := 0.69999998807907
 17 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 18 [-]: SETTABLE  R5 K14 K15   ; R5["minimizeY"] := -40
 19 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 20 [-]: SETTABLE  R5 K16 K17   ; R5["minimizeX"] := 120
 21 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 22 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
 23 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 24 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
 25 [-]: LOADK     R9 K22       ; R9 := "stage"
 26 [-]: LOADK     R10 K18      ; R10 := "stageWidth"
 27 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 28 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 29 [-]: SETTABLE  R5 K18 R6    ; R5["stageWidth"] := R6
 30 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 31 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
 32 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 33 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
 34 [-]: LOADK     R9 K22       ; R9 := "stage"
 35 [-]: LOADK     R10 K23      ; R10 := "stageHeight"
 36 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 37 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 38 [-]: SETTABLE  R5 K23 R6    ; R5["stageHeight"] := R6
 39 [-]: GETTABLE  R5 R0 K24    ; R5 := R0["mChatPanelWindow"]
 40 [-]: SETTABLE  R5 K1 K25    ; R5["x"] := 1
 41 [-]: GETTABLE  R5 R0 K24    ; R5 := R0["mChatPanelWindow"]
 42 [-]: SETTABLE  R5 K3 K26    ; R5["y"] := 33
 43 [-]: GETTABLE  R5 R0 K24    ; R5 := R0["mChatPanelWindow"]
 44 [-]: SETTABLE  R5 K4 K27    ; R5["width"] := -2
 45 [-]: GETTABLE  R5 R0 K24    ; R5 := R0["mChatPanelWindow"]
 46 [-]: SETTABLE  R5 K28 K29   ; R5["ReverseWidth"] := "0x1"
 47 [-]: GETTABLE  R5 R0 K24    ; R5 := R0["mChatPanelWindow"]
 48 [-]: SETTABLE  R5 K5 K30    ; R5["height"] := -33
 49 [-]: GETTABLE  R5 R0 K24    ; R5 := R0["mChatPanelWindow"]
 50 [-]: SETTABLE  R5 K31 K29   ; R5["ReverseHeight"] := "0x1"
 51 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 52 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
 53 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 54 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
 55 [-]: LOADK     R9 K34       ; R9 := "Window.TabbedChatPanel.FilterList"
 56 [-]: LOADK     R10 K35      ; R10 := "_x"
 57 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 58 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 59 [-]: SETTABLE  R5 K33 R6    ; R5["List"] := R6
 60 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
 61 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 62 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
 63 [-]: LOADK     R9 K37       ; R9 := "Window.TabbedChatPanel.FilterListMask"
 64 [-]: LOADK     R10 K35      ; R10 := "_x"
 65 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 66 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 67 [-]: SETTABLE  R5 K36 R6    ; R5["Mask"] := R6
 68 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
 69 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 70 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
 71 [-]: LOADK     R9 K39       ; R9 := "Window.TabbedChatPanel.FilterBtn"
 72 [-]: LOADK     R10 K35      ; R10 := "_x"
 73 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 74 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 75 [-]: SETTABLE  R5 K38 R6    ; R5["Btn"] := R6
 76 [-]: SETTABLE  R0 K32 R5    ; R0["mOrigFilterPos"] := R5
 77 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
 78 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
 79 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
 80 [-]: LOADK     R8 K42       ; R8 := "TabMenu"
 81 [-]: LOADK     R9 K35       ; R9 := "_x"
 82 [-]: LOADK     R10 K2       ; R10 := 0
 83 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 84 [-]: GETTABLE  R5 R0 K43    ; R5 := R0["mWindowTitle"]
 85 [-]: SETTABLE  R5 K44 K45   ; R5["isDragging"] := "0x0"
 86 [-]: GETTABLE  R5 R0 K43    ; R5 := R0["mWindowTitle"]
 87 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
 88 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
 89 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
 90 [-]: GETTABLE  R9 R0 K41    ; R9 := R0["mClipName"]
 91 [-]: LOADK     R10 K46      ; R10 := ".TabMenu.WindowTitle"
 92 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 93 [-]: LOADK     R10 K47      ; R10 := "_height"
 94 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 95 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 96 [-]: SETTABLE  R5 K5 R6     ; R5["height"] := R6
 97 [-]: GETTABLE  R5 R0 K48    ; R5 := R0["mWindowStatus"]
 98 [-]: SETTABLE  R5 K44 K45   ; R5["isDragging"] := "0x0"
 99 [-]: GETTABLE  R5 R0 K48    ; R5 := R0["mWindowStatus"]
100 [-]: GETGLOBAL R6 K19       ; R6 := 0xF595ADDE
101 [-]: GETGLOBAL R7 K20       ; R7 := mMovie
102 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x6B7B470B"]
103 [-]: GETTABLE  R9 R0 K41    ; R9 := R0["mClipName"]
104 [-]: LOADK     R10 K49      ; R10 := ".WindowStatus"
105 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
106 [-]: LOADK     R10 K47      ; R10 := "_height"
107 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
108 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
109 [-]: SETTABLE  R5 K5 R6     ; R5["height"] := R6
110 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
111 [-]: SELF      R5 R5 K50    ; R6 := R5; R5 := R5["0x1C19D966"]
112 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
113 [-]: LOADK     R8 K51       ; R8 := "Id"
114 [-]: LOADK     R9 K52       ; R9 := "Window"
115 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
116 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
117 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
118 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
119 [-]: LOADK     R8 K53       ; R8 := "MouseCatcherBtn"
120 [-]: LOADK     R9 K35       ; R9 := "_x"
121 [-]: LOADK     R10 K2       ; R10 := 0
122 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
123 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
124 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
125 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
126 [-]: LOADK     R8 K54       ; R8 := "TabMenu.WindowTitle.Fill"
127 [-]: LOADK     R9 K55       ; R9 := "FSCommandPress"
128 [-]: GETTABLE  R10 R0 K56   ; R10 := R0["FSCommandWindowTitlePress"]
129 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
130 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
131 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
132 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
133 [-]: LOADK     R8 K54       ; R8 := "TabMenu.WindowTitle.Fill"
134 [-]: LOADK     R9 K57       ; R9 := "FSCommandRelease"
135 [-]: GETTABLE  R10 R0 K58   ; R10 := R0["FSCommandWindowTitleRelease"]
136 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
137 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
138 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
139 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
140 [-]: LOADK     R8 K54       ; R8 := "TabMenu.WindowTitle.Fill"
141 [-]: LOADK     R9 K59       ; R9 := "FSCommandRollOver"
142 [-]: GETTABLE  R10 R0 K60   ; R10 := R0["FSCommandWindowTitleRollOver"]
143 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
144 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
145 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
146 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
147 [-]: LOADK     R8 K54       ; R8 := "TabMenu.WindowTitle.Fill"
148 [-]: LOADK     R9 K61       ; R9 := "FSCommandRollOut"
149 [-]: GETTABLE  R10 R0 K62   ; R10 := R0["FSCommandWindowTitleRollOut"]
150 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
151 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
152 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
153 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
154 [-]: LOADK     R8 K54       ; R8 := "TabMenu.WindowTitle.Fill"
155 [-]: LOADK     R9 K63       ; R9 := "_color"
156 [-]: GETUPVAL  R10 U0       ; R10 := U0
157 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
158 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
159 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
160 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
161 [-]: LOADK     R8 K54       ; R8 := "TabMenu.WindowTitle.Fill"
162 [-]: LOADK     R9 K64       ; R9 := "_alpha"
163 [-]: LOADK     R10 K65      ; R10 := 75
164 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
165 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
166 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
167 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
168 [-]: LOADK     R8 K66       ; R8 := "TabMenu.WindowTitle.EdgeTop"
169 [-]: LOADK     R9 K63       ; R9 := "_color"
170 [-]: GETUPVAL  R10 U1       ; R10 := U1
171 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
172 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
173 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
174 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
175 [-]: LOADK     R8 K66       ; R8 := "TabMenu.WindowTitle.EdgeTop"
176 [-]: LOADK     R9 K64       ; R9 := "_alpha"
177 [-]: LOADK     R10 K67      ; R10 := 25
178 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
179 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
180 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
181 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
182 [-]: LOADK     R8 K68       ; R8 := "TabMenu.WindowTitle.EdgeLeft"
183 [-]: LOADK     R9 K63       ; R9 := "_color"
184 [-]: GETUPVAL  R10 U1       ; R10 := U1
185 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
186 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
187 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
188 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
189 [-]: LOADK     R8 K68       ; R8 := "TabMenu.WindowTitle.EdgeLeft"
190 [-]: LOADK     R9 K64       ; R9 := "_alpha"
191 [-]: LOADK     R10 K67      ; R10 := 25
192 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
193 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
194 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
195 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
196 [-]: LOADK     R8 K69       ; R8 := "TabMenu.WindowTitle.EdgeRight"
197 [-]: LOADK     R9 K63       ; R9 := "_color"
198 [-]: GETUPVAL  R10 U1       ; R10 := U1
199 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
200 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
201 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
202 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
203 [-]: LOADK     R8 K69       ; R8 := "TabMenu.WindowTitle.EdgeRight"
204 [-]: LOADK     R9 K64       ; R9 := "_alpha"
205 [-]: LOADK     R10 K67      ; R10 := 25
206 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
207 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
208 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
209 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
210 [-]: LOADK     R8 K70       ; R8 := "TabMenu.WindowTitle.EdgeBottom"
211 [-]: LOADK     R9 K63       ; R9 := "_color"
212 [-]: GETUPVAL  R10 U1       ; R10 := U1
213 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
214 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
215 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
216 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
217 [-]: LOADK     R8 K70       ; R8 := "TabMenu.WindowTitle.EdgeBottom"
218 [-]: LOADK     R9 K64       ; R9 := "_alpha"
219 [-]: LOADK     R10 K71      ; R10 := 40
220 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
221 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
222 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
223 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
224 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
225 [-]: LOADK     R9 K55       ; R9 := "FSCommandPress"
226 [-]: LOADK     R10 K73      ; R10 := "BottomResizePress"
227 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
228 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
229 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
230 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
231 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
232 [-]: LOADK     R9 K57       ; R9 := "FSCommandRelease"
233 [-]: LOADK     R10 K74      ; R10 := "BottomResizeRelease"
234 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
235 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
236 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
237 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
238 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
239 [-]: LOADK     R9 K59       ; R9 := "FSCommandRollOver"
240 [-]: LOADK     R10 K75      ; R10 := "BottomResizeRollOver"
241 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
242 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
243 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
244 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
245 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
246 [-]: LOADK     R9 K61       ; R9 := "FSCommandRollOut"
247 [-]: LOADK     R10 K76      ; R10 := "BottomResizeRollOut"
248 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
249 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
250 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
251 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
252 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
253 [-]: LOADK     R9 K77       ; R9 := "FSCommandMouseMove"
254 [-]: LOADK     R10 K78      ; R10 := "BottomResizeMouseMove"
255 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
256 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
257 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
258 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
259 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
260 [-]: LOADK     R9 K35       ; R9 := "_x"
261 [-]: LOADK     R10 K2       ; R10 := 0
262 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
263 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
264 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
265 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
266 [-]: LOADK     R8 K72       ; R8 := "WindowStatus.Resize"
267 [-]: LOADK     R9 K64       ; R9 := "_alpha"
268 [-]: LOADK     R10 K79      ; R10 := 50
269 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
270 [-]: GETGLOBAL R5 K20       ; R5 := mMovie
271 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x880196A7"]
272 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mClipName"]
273 [-]: LOADK     R8 K80       ; R8 := "TabbedChatPanel.ScrollBar"
274 [-]: LOADK     R9 K81       ; R9 := "_visible"
275 [-]: MOVE      R10 R0       ; R10 := R0
276 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
277 [-]: SELF      R5 R0 K82    ; R6 := R0; R5 := R0["0x54FC8737"]
278 [-]: CALL      R5 2 1       ; R5(R6)
279 [-]: GETUPVAL  R5 U2        ; R5 := U2
280 [-]: MOVE      R6 R0        ; R6 := R0
281 [-]: LOADK     R7 K84       ; R7 := "UserPanel"
282 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
283 [-]: SETTABLE  R0 K83 R5    ; R0["mUserPanel"] := R5
284 [-]: GETTABLE  R5 R0 K83    ; R5 := R0["mUserPanel"]
285 [-]: SELF      R5 R5 K85    ; R6 := R5; R5 := R5["0x62648036"]
286 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mWindow"]
287 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["width"]
288 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mWindow"]
289 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["height"]
290 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
291 [-]: GETUPVAL  R5 U3        ; R5 := U3
292 [-]: MOVE      R6 R0        ; R6 := R0
293 [-]: LOADK     R7 K87       ; R7 := "SendMessageBar"
294 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
295 [-]: SETTABLE  R0 K86 R5    ; R0["mInputPanel"] := R5
296 [-]: GETTABLE  R5 R0 K86    ; R5 := R0["mInputPanel"]
297 [-]: SELF      R5 R5 K85    ; R6 := R5; R5 := R5["0x62648036"]
298 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mWindow"]
299 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["width"]
300 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mWindow"]
301 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["height"]
302 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
303 [-]: GETGLOBAL R5 K88       ; R5 := gPlayerProfileMgr
304 [-]: SELF      R5 R5 K89    ; R6 := R5; R5 := R5["0x21EF7B1A"]
305 [-]: LOADK     R7 K2        ; R7 := 0
306 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
307 [-]: GETGLOBAL R6 K90       ; R6 := 0x400E7765
308 [-]: MOVE      R7 R5        ; R7 := R5
309 [-]: CALL      R6 2 2       ; R6 := R6(R7)
310 [-]: TEST      R6 1         ; if R6 then PC := 322
311 [-]: JMP       322          ; PC := 322
312 [-]: SELF      R6 R5 K92    ; R7 := R5; R6 := R5["0x144A28F9"]
313 [-]: CALL      R6 2 2       ; R6 := R6(R7)
314 [-]: SETTABLE  R0 K91 R6    ; R0["mUser"] := R6
315 [-]: LOADK     R6 K94       ; R6 := "@"
316 [-]: GETGLOBAL R7 K95       ; R7 := string
317 [-]: GETTABLE  R7 R7 K96    ; R7 := R7["0xBDD0D625"]
318 [-]: GETTABLE  R8 R0 K91    ; R8 := R0["mUser"]
319 [-]: CALL      R7 2 2       ; R7 := R7(R8)
320 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
321 [-]: SETTABLE  R0 K93 R6    ; R0["mSearchUserName"] := R6
322 [-]: SETTABLE  R0 K97 K2    ; R0["mCachedIsCounselor"] := 0
323 [-]: SELF      R6 R0 K98    ; R7 := R0; R6 := R0["0xC5927144"]
324 [-]: CALL      R6 2 1       ; R6(R7)
325 [-]: SELF      R6 R0 K99    ; R7 := R0; R6 := R0["0xBC3854A9"]
326 [-]: CALL      R6 2 1       ; R6(R7)
327 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
328 [-]: SELF      R6 R6 K40    ; R7 := R6; R6 := R6["0x880196A7"]
329 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
330 [-]: LOADK     R9 K100      ; R9 := "TabMenu.Resize"
331 [-]: LOADK     R10 K64      ; R10 := "_alpha"
332 [-]: LOADK     R11 K79      ; R11 := 50
333 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
334 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
335 [-]: SELF      R6 R6 K40    ; R7 := R6; R6 := R6["0x880196A7"]
336 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
337 [-]: LOADK     R9 K101      ; R9 := "TabMenu.MinMaxBtn"
338 [-]: LOADK     R10 K81      ; R10 := "_visible"
339 [-]: GETGLOBAL R11 K102     ; R11 := Engine
340 [-]: GETTABLE  R11 R11 K103 ; R11 := R11["0x9490FE70"]
341 [-]: CALL      R11 1 2      ; R11 := R11()
342 [-]: MOVE      R11 R11      ; R11 := R11
343 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
344 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
345 [-]: SELF      R6 R6 K40    ; R7 := R6; R6 := R6["0x880196A7"]
346 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
347 [-]: LOADK     R9 K104      ; R9 := "TabMenu.MinMaxBtn.Icon"
348 [-]: LOADK     R10 K64      ; R10 := "_alpha"
349 [-]: LOADK     R11 K79      ; R11 := 50
350 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
351 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
352 [-]: SELF      R6 R6 K105   ; R7 := R6; R6 := R6["0x7E1F26D7"]
353 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
354 [-]: LOADK     R9 K106      ; R9 := ".TabMenu.MinMaxBtn.Bg"
355 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
356 [-]: GETGLOBAL R9 K107      ; R9 := _G
357 [-]: GETTABLE  R9 R9 K108   ; R9 := R9["UIMaterial_RectangleNoDepth"]
358 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
359 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
360 [-]: SELF      R6 R6 K109   ; R7 := R6; R6 := R6["0x302AAB2F"]
361 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
362 [-]: LOADK     R9 K106      ; R9 := ".TabMenu.MinMaxBtn.Bg"
363 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
364 [-]: LOADK     R9 K110      ; R9 := "RectEdgeColor"
365 [-]: GETGLOBAL R10 K107     ; R10 := _G
366 [-]: GETTABLE  R10 R10 K111 ; R10 := R10["UIColorObject_White"]
367 [-]: GETTABLE  R10 R10 K112 ; R10 := R10["r"]
368 [-]: GETGLOBAL R11 K107     ; R11 := _G
369 [-]: GETTABLE  R11 R11 K111 ; R11 := R11["UIColorObject_White"]
370 [-]: GETTABLE  R11 R11 K113 ; R11 := R11["g"]
371 [-]: GETGLOBAL R12 K107     ; R12 := _G
372 [-]: GETTABLE  R12 R12 K111 ; R12 := R12["UIColorObject_White"]
373 [-]: GETTABLE  R12 R12 K114 ; R12 := R12["b"]
374 [-]: LOADK     R13 K115     ; R13 := 0.050000000745058
375 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
376 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
377 [-]: SELF      R6 R6 K109   ; R7 := R6; R6 := R6["0x302AAB2F"]
378 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
379 [-]: LOADK     R9 K106      ; R9 := ".TabMenu.MinMaxBtn.Bg"
380 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
381 [-]: LOADK     R9 K116      ; R9 := "RectInnerColor"
382 [-]: GETGLOBAL R10 K107     ; R10 := _G
383 [-]: GETTABLE  R10 R10 K117 ; R10 := R10["UIColorObject_Black"]
384 [-]: GETTABLE  R10 R10 K112 ; R10 := R10["r"]
385 [-]: GETGLOBAL R11 K107     ; R11 := _G
386 [-]: GETTABLE  R11 R11 K117 ; R11 := R11["UIColorObject_Black"]
387 [-]: GETTABLE  R11 R11 K113 ; R11 := R11["g"]
388 [-]: GETGLOBAL R12 K107     ; R12 := _G
389 [-]: GETTABLE  R12 R12 K117 ; R12 := R12["UIColorObject_Black"]
390 [-]: GETTABLE  R12 R12 K114 ; R12 := R12["b"]
391 [-]: LOADK     R13 K25      ; R13 := 1
392 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
393 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
394 [-]: SELF      R6 R6 K40    ; R7 := R6; R6 := R6["0x880196A7"]
395 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
396 [-]: LOADK     R9 K118      ; R9 := "TabMenu.MinMaxBtn.Separator"
397 [-]: LOADK     R10 K64      ; R10 := "_alpha"
398 [-]: LOADK     R11 K67      ; R11 := 25
399 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
400 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
401 [-]: SELF      R6 R6 K40    ; R7 := R6; R6 := R6["0x880196A7"]
402 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
403 [-]: LOADK     R9 K118      ; R9 := "TabMenu.MinMaxBtn.Separator"
404 [-]: LOADK     R10 K63      ; R10 := "_color"
405 [-]: GETUPVAL  R11 U1       ; R11 := U1
406 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
407 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
408 [-]: SELF      R6 R6 K40    ; R7 := R6; R6 := R6["0x880196A7"]
409 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["mClipName"]
410 [-]: LOADK     R9 K119      ; R9 := "TabMenu.ExpandCallout"
411 [-]: LOADK     R10 K81      ; R10 := "_visible"
412 [-]: MOVE      R11 R0       ; R11 := R0
413 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
414 [-]: GETUPVAL  R6 U4        ; R6 := U4
415 [-]: CALL      R6 1 1       ; R6()
416 [-]: GETGLOBAL R6 K120      ; R6 := gMatchingService
417 [-]: SELF      R6 R6 K121   ; R7 := R6; R6 := R6["0xF0C493C"]
418 [-]: CALL      R6 2 2       ; R6 := R6(R7)
419 [-]: GETGLOBAL R7 K90       ; R7 := 0x400E7765
420 [-]: MOVE      R8 R6        ; R8 := R6
421 [-]: CALL      R7 2 2       ; R7 := R7(R8)
422 [-]: TEST      R7 1         ; if R7 then PC := 540
423 [-]: JMP       540          ; PC := 540
424 [-]: GETGLOBAL R7 K90       ; R7 := 0x400E7765
425 [-]: MOVE      R8 R5        ; R8 := R5
426 [-]: CALL      R7 2 2       ; R7 := R7(R8)
427 [-]: TEST      R7 1         ; if R7 then PC := 540
428 [-]: JMP       540          ; PC := 540
429 [-]: GETGLOBAL R7 K90       ; R7 := 0x400E7765
430 [-]: GETUPVAL  R8 U5        ; R8 := U5
431 [-]: CALL      R7 2 2       ; R7 := R7(R8)
432 [-]: TEST      R7 1         ; if R7 then PC := 540
433 [-]: JMP       540          ; PC := 540
434 [-]: GETUPVAL  R7 U5        ; R7 := U5
435 [-]: SELF      R7 R7 K122   ; R8 := R7; R7 := R7["0xF5EE1A19"]
436 [-]: LOADK     R9 K123      ; R9 := "ChatChannelJoin"
437 [-]: CALL      R7 3 1       ; R7(R8,R9)
438 [-]: GETUPVAL  R7 U5        ; R7 := U5
439 [-]: SELF      R7 R7 K124   ; R8 := R7; R7 := R7["0x88E2DA20"]
440 [-]: LOADK     R9 K125      ; R9 := "ChatChannelLeft"
441 [-]: CALL      R7 3 1       ; R7(R8,R9)
442 [-]: GETUPVAL  R7 U5        ; R7 := U5
443 [-]: SELF      R7 R7 K126   ; R8 := R7; R7 := R7["0x2B62F858"]
444 [-]: LOADK     R9 K127      ; R9 := "ChatChannelJoinUserList"
445 [-]: CALL      R7 3 1       ; R7(R8,R9)
446 [-]: GETUPVAL  R7 U5        ; R7 := U5
447 [-]: SELF      R7 R7 K128   ; R8 := R7; R7 := R7["0x697FD067"]
448 [-]: LOADK     R9 K129      ; R9 := "ChatMessageReceived"
449 [-]: CALL      R7 3 1       ; R7(R8,R9)
450 [-]: GETUPVAL  R7 U5        ; R7 := U5
451 [-]: SELF      R7 R7 K130   ; R8 := R7; R7 := R7["0xD6602530"]
452 [-]: LOADK     R9 K131      ; R9 := "InvalidWhisperTarget"
453 [-]: CALL      R7 3 1       ; R7(R8,R9)
454 [-]: GETUPVAL  R7 U5        ; R7 := U5
455 [-]: SELF      R7 R7 K132   ; R8 := R7; R7 := R7["0x682FF480"]
456 [-]: LOADK     R9 K133      ; R9 := "SystemMessage"
457 [-]: CALL      R7 3 1       ; R7(R8,R9)
458 [-]: GETUPVAL  R7 U5        ; R7 := U5
459 [-]: SELF      R7 R7 K134   ; R8 := R7; R7 := R7["0x473B4601"]
460 [-]: LOADK     R9 K135      ; R9 := "ChatConnectionChanged"
461 [-]: CALL      R7 3 1       ; R7(R8,R9)
462 [-]: SELF      R7 R6 K137   ; R8 := R6; R7 := R6["0xBDD64BD5"]
463 [-]: CALL      R7 2 2       ; R7 := R7(R8)
464 [-]: SETTABLE  R0 K136 R7   ; R0["mIsConnected"] := R7
465 [-]: GETTABLE  R7 R0 K136   ; R7 := R0["mIsConnected"]
466 [-]: TEST      R7 0         ; if not R7 then PC := 521
467 [-]: JMP       521          ; PC := 521
468 [-]: LOADK     R7 K138      ; R7 := ""
469 [-]: GETGLOBAL R8 K120      ; R8 := gMatchingService
470 [-]: SELF      R8 R8 K139   ; R9 := R8; R8 := R8["0xD5E03646"]
471 [-]: CALL      R8 2 2       ; R8 := R8(R9)
472 [-]: GETGLOBAL R9 K90       ; R9 := 0x400E7765
473 [-]: MOVE      R10 R8       ; R10 := R8
474 [-]: CALL      R9 2 2       ; R9 := R9(R10)
475 [-]: TEST      R9 1         ; if R9 then PC := 480
476 [-]: JMP       480          ; PC := 480
477 [-]: SELF      R9 R8 K140   ; R10 := R8; R9 := R8["0xA57F2EB3"]
478 [-]: CALL      R9 2 2       ; R9 := R9(R10)
479 [-]: MOVE      R7 R9        ; R7 := R9
480 [-]: LOADK     R9 K141      ; R9 := "#"
481 [-]: GETTABLE  R10 R0 K142  ; R10 := R0["0x960E8AD7"]
482 [-]: CALL      R10 1 2      ; R10 := R10()
483 [-]: MOVE      R11 R7       ; R11 := R7
484 [-]: CONCAT    R7 R9 R11    ; R7 := R9 .. R10 .. R11
485 [-]: GETGLOBAL R9 K90       ; R9 := 0x400E7765
486 [-]: MOVE      R10 R6       ; R10 := R6
487 [-]: CALL      R9 2 2       ; R9 := R9(R10)
488 [-]: TEST      R9 1         ; if R9 then PC := 521
489 [-]: JMP       521          ; PC := 521
490 [-]: SELF      R9 R6 K143   ; R10 := R6; R9 := R6["0xAC78812D"]
491 [-]: CALL      R9 2 2       ; R9 := R9(R10)
492 [-]: GETGLOBAL R10 K90      ; R10 := 0x400E7765
493 [-]: MOVE      R11 R9       ; R11 := R9
494 [-]: CALL      R10 2 2      ; R10 := R10(R11)
495 [-]: TEST      R10 1        ; if R10 then PC := 521
496 [-]: JMP       521          ; PC := 521
497 [-]: LEN       R10 R9       ; R10 := # R9
498 [-]: LT        0 K2 R10     ; if 0 >= R10 then PC := 521
499 [-]: JMP       521          ; PC := 521
500 [-]: LOADK     R10 K25      ; R10 := 1
501 [-]: LEN       R11 R9       ; R11 := # R9
502 [-]: LOADK     R12 K25      ; R12 := 1
503 [-]: FORPREP   R10 520      ; R10 -= R12; PC := 520
504 [-]: GETGLOBAL R14 K95      ; R14 := string
505 [-]: GETTABLE  R14 R14 K144 ; R14 := R14["0x7B782033"]
506 [-]: GETTABLE  R15 R9 R13   ; R15 := R9[R13]
507 [-]: LOADK     R16 K145     ; R16 := 2
508 [-]: LOADK     R17 K145     ; R17 := 2
509 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
510 [-]: GETTABLE  R15 R0 K142  ; R15 := R0["0x960E8AD7"]
511 [-]: CALL      R15 1 2      ; R15 := R15()
512 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 520
513 [-]: JMP       520          ; PC := 520
514 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
515 [-]: EQ        1 R7 R14     ; if R7 == R14 then PC := 520
516 [-]: JMP       520          ; PC := 520
517 [-]: SELF      R14 R6 K146  ; R15 := R6; R14 := R6["0x542CAA30"]
518 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
519 [-]: CALL      R14 3 1      ; R14(R15,R16)
520 [-]: FORLOOP   R10 504      ; R10 += R12; if R10 <= R11 then begin PC := 504; R13 := R10 end
521 [-]: GETUPVAL  R14 U5       ; R14 := U5
522 [-]: SELF      R14 R14 K147 ; R15 := R14; R14 := R14["0xC3FB73FF"]
523 [-]: CALL      R14 2 2      ; R14 := R14(R15)
524 [-]: GETGLOBAL R15 K90      ; R15 := 0x400E7765
525 [-]: MOVE      R16 R14      ; R16 := R14
526 [-]: CALL      R15 2 2      ; R15 := R15(R16)
527 [-]: TEST      R15 1        ; if R15 then PC := 540
528 [-]: JMP       540          ; PC := 540
529 [-]: LOADK     R15 K25      ; R15 := 1
530 [-]: LEN       R16 R14      ; R16 := # R14
531 [-]: LOADK     R17 K25      ; R17 := 1
532 [-]: FORPREP   R15 539      ; R15 -= R17; PC := 539
533 [-]: GETUPVAL  R19 U6       ; R19 := U6
534 [-]: GETTABLE  R20 R14 R18  ; R20 := R14[R18]
535 [-]: GETTABLE  R20 R20 K148 ; R20 := R20["mDisplayName"]
536 [-]: GETTABLE  R21 R14 R18  ; R21 := R14[R18]
537 [-]: GETTABLE  R21 R21 K149 ; R21 := R21["mId"]
538 [-]: CALL      R19 3 1      ; R19(R20,R21)
539 [-]: FORLOOP   R15 533      ; R15 += R17; if R15 <= R16 then begin PC := 533; R18 := R15 end
540 [-]: GETGLOBAL R19 K20      ; R19 := mMovie
541 [-]: SELF      R19 R19 K40  ; R20 := R19; R19 := R19["0x880196A7"]
542 [-]: GETTABLE  R21 R0 K41   ; R21 := R0["mClipName"]
543 [-]: LOADK     R22 K150     ; R22 := "TabMenu.WindowTitle.Arrows"
544 [-]: LOADK     R23 K81      ; R23 := "_visible"
545 [-]: GETTABLE  R24 R0 K136  ; R24 := R0["mIsConnected"]
546 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
547 [-]: GETGLOBAL R19 K20      ; R19 := mMovie
548 [-]: SELF      R19 R19 K40  ; R20 := R19; R19 := R19["0x880196A7"]
549 [-]: GETTABLE  R21 R0 K41   ; R21 := R0["mClipName"]
550 [-]: LOADK     R22 K151     ; R22 := "TabMenu.WindowTitle.Spinner"
551 [-]: LOADK     R23 K81      ; R23 := "_visible"
552 [-]: GETTABLE  R24 R0 K136  ; R24 := R0["mIsConnected"]
553 [-]: MOVE      R24 R24      ; R24 := R24
554 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
555 [-]: GETGLOBAL R19 K20      ; R19 := mMovie
556 [-]: SELF      R19 R19 K50  ; R20 := R19; R19 := R19["0x1C19D966"]
557 [-]: LOADK     R21 K152     ; R21 := "Window.TabbedChatPanel"
558 [-]: LOADK     R22 K64      ; R22 := "_alpha"
559 [-]: LOADK     R23 K2       ; R23 := 0
560 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
561 [-]: GETGLOBAL R19 K20      ; R19 := mMovie
562 [-]: SELF      R19 R19 K50  ; R20 := R19; R19 := R19["0x1C19D966"]
563 [-]: LOADK     R21 K153     ; R21 := "Window.Hint"
564 [-]: LOADK     R22 K64      ; R22 := "_alpha"
565 [-]: LOADK     R23 K2       ; R23 := 0
566 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
567 [-]: SELF      R19 R0 K154  ; R20 := R0; R19 := R0["0xE9E7C453"]
568 [-]: CALL      R19 2 1      ; R19(R20)
569 [-]: SELF      R19 R0 K155  ; R20 := R0; R19 := R0["0xBCE68750"]
570 [-]: CALL      R19 2 1      ; R19(R20)
571 [-]: SELF      R19 R0 K156  ; R20 := R0; R19 := R0["0xC4A34CB3"]
572 [-]: GETTABLE  R21 R0 K157  ; R21 := R0["mVisualMode"]
573 [-]: CALL      R19 3 1      ; R19(R20,R21)
574 [-]: GETGLOBAL R19 K90      ; R19 := 0x400E7765
575 [-]: GETUPVAL  R20 U7       ; R20 := U7
576 [-]: CALL      R19 2 2      ; R19 := R19(R20)
577 [-]: TEST      R19 1        ; if R19 then PC := 631
578 [-]: JMP       631          ; PC := 631
579 [-]: GETUPVAL  R19 U7       ; R19 := U7
580 [-]: SELF      R19 R19 K158 ; R20 := R19; R19 := R19["0x32623CD6"]
581 [-]: CALL      R19 2 2      ; R19 := R19(R20)
582 [-]: GETUPVAL  R20 U7       ; R20 := U7
583 [-]: SELF      R20 R20 K159 ; R21 := R20; R20 := R20["0x7729CAB8"]
584 [-]: CALL      R20 2 2      ; R20 := R20(R21)
585 [-]: GETUPVAL  R21 U7       ; R21 := U7
586 [-]: SELF      R21 R21 K160 ; R22 := R21; R21 := R21["0xDF7C5E3D"]
587 [-]: CALL      R21 2 2      ; R21 := R21(R22)
588 [-]: TEST      R19 1        ; if R19 then PC := 592
589 [-]: JMP       592          ; PC := 592
590 [-]: TEST      R20 0        ; if not R20 then PC := 598
591 [-]: JMP       598          ; PC := 598
592 [-]: GETTABLE  R22 R0 K83   ; R22 := R0["mUserPanel"]
593 [-]: SELF      R22 R22 K161 ; R23 := R22; R22 := R22["0x26978121"]
594 [-]: MOVE      R24 R19      ; R24 := R19
595 [-]: MOVE      R25 R1       ; R25 := R1
596 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
597 [-]: JMP       622          ; PC := 622
598 [-]: GETGLOBAL R22 K20      ; R22 := mMovie
599 [-]: SELF      R22 R22 K50  ; R23 := R22; R22 := R22["0x1C19D966"]
600 [-]: LOADK     R24 K162     ; R24 := "Window.MouseCatcherBtn"
601 [-]: LOADK     R25 K163     ; R25 := "_width"
602 [-]: GETUPVAL  R26 U8       ; R26 := U8
603 [-]: GETTABLE  R26 R26 K0   ; R26 := R26["mWindow"]
604 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["width"]
605 [-]: GETUPVAL  R27 U9       ; R27 := U9
606 [-]: GETTABLE  R27 R27 K164 ; R27 := R27["0xF81722A2"]
607 [-]: GETTABLE  R28 R0 K83   ; R28 := R0["mUserPanel"]
608 [-]: GETTABLE  R28 R28 K165 ; R28 := R28["mListControl"]
609 [-]: GETTABLE  R28 R28 K166 ; R28 := R28["mIsVisible"]
610 [-]: TEST      R28 1        ; if R28 then PC := 615
611 [-]: JMP       615          ; PC := 615
612 [-]: GETTABLE  R28 R0 K83   ; R28 := R0["mUserPanel"]
613 [-]: GETTABLE  R28 R28 K167 ; R28 := R28["mEmoteGrid"]
614 [-]: GETTABLE  R28 R28 K166 ; R28 := R28["mIsVisible"]
615 [-]: GETTABLE  R29 R0 K83   ; R29 := R0["mUserPanel"]
616 [-]: GETTABLE  R29 R29 K168 ; R29 := R29["mActiveRect"]
617 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["width"]
618 [-]: LOADK     R30 K2       ; R30 := 0
619 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
620 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
621 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
622 [-]: TEST      R20 1        ; if R20 then PC := 631
623 [-]: JMP       631          ; PC := 631
624 [-]: TEST      R19 0        ; if not R19 then PC := 631
625 [-]: JMP       631          ; PC := 631
626 [-]: TEST      R21 0        ; if not R21 then PC := 631
627 [-]: JMP       631          ; PC := 631
628 [-]: GETTABLE  R22 R0 K83   ; R22 := R0["mUserPanel"]
629 [-]: SELF      R22 R22 K169 ; R23 := R22; R22 := R22["0x1783C901"]
630 [-]: CALL      R22 2 1      ; R22(R23)
631 [-]: RETURN    R0 1         ; return 


; Function #123.32:
;
; Name:            
; Defined at line: 7197
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 K1     ; R2["Msg"] := ""
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R2 K2 K1     ; R2["CurrItemString"] := ""
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  7 [-]: SETTABLE  R2 K3 R3     ; R2["OmegaLinks"] := R3
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 10 [-]: SETTABLE  R2 K4 R3     ; R2["SongLinks"] := R3
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 13 [-]: SETTABLE  R2 K5 R3     ; R2["ZawLinks"] := R3
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 16 [-]: SETTABLE  R2 K6 R3     ; R2["AmpLinks"] := R3
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 19 [-]: SETTABLE  R2 K7 R3     ; R2["MoaPetLinks"] := R3
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 22 [-]: SETTABLE  R2 K8 R3     ; R2["KdriveLinks"] := R3
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 25 [-]: SETTABLE  R2 K9 R3     ; R2["KitgunLinks"] := R3
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 28 [-]: SETTABLE  R2 K10 R3    ; R2["AppearanceLinks"] := R3
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 31 [-]: SETTABLE  R2 K11 R3    ; R2["ModConfigLinks"] := R3
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 34 [-]: SETTABLE  R2 K12 R3    ; R2["ShawzinLinks"] := R3
 35 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["mActivePanelName"]
 36 [-]: EQ        1 R2 K1      ; if R2 == "" then PC := 56
 37 [-]: JMP       56           ; PC := 56
 38 [-]: GETTABLE  R2 R0 K14    ; R2 := R0["mPanelList"]
 39 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["mActivePanelName"]
 40 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 41 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0xE1889BF6"]
 42 [-]: MOVE      R4 R1        ; R4 := R1
 43 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 44 [-]: TEST      R2 1         ; if R2 then PC := 70
 45 [-]: JMP       70           ; PC := 70
 46 [-]: GETGLOBAL R2 K16       ; R2 := mMovie
 47 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0xD6A79FE9"]
 48 [-]: GETTABLE  R4 R0 K18    ; R4 := R0["mInputPanel"]
 49 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mClipPath"]
 50 [-]: LOADK     R5 K20       ; R5 := ".MessageBox"
 51 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 52 [-]: LOADK     R5 K21       ; R5 := "text"
 53 [-]: LOADK     R6 K1        ; R6 := ""
 54 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 55 [-]: JMP       70           ; PC := 70
 56 [-]: GETUPVAL  R2 U1        ; R2 := U1
 57 [-]: MOVE      R3 R1        ; R3 := R1
 58 [-]: MOVE      R4 R1        ; R4 := R1
 59 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
 60 [-]: LEN       R5 R3        ; R5 := # R3
 61 [-]: EQ        0 R5 K22     ; if R5 ~= 1 then PC := 70
 62 [-]: JMP       70           ; PC := 70
 63 [-]: GETTABLE  R5 R3 K22    ; R5 := R3[1]
 64 [-]: EQ        0 R5 K23     ; if R5 ~= "/unstuck" then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R5 U2        ; R5 := U2
 67 [-]: GETGLOBAL R6 K24       ; R6 := 0xD51B2786
 68 [-]: CALL      R6 1 0       ; R6,... := R6()
 69 [-]: CALL      R5 0 1       ; R5(R6,...)
 70 [-]: SELF      R5 R0 K25    ; R6 := R0; R5 := R0["0x2240369"]
 71 [-]: CALL      R5 2 1       ; R5(R6)
 72 [-]: RETURN    R0 1         ; return 


; Function #123.33:
;
; Name:            
; Defined at line: 7228
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := string
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xDE44F664"]
  3 [-]: MOVE      R4 R2        ; R4 := R2
  4 [-]: LOADK     R5 K2        ; R5 := "#"
  5 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  6 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R3 K0        ; R3 := string
  9 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: LOADK     R5 K5        ; R5 := 2
 12 [-]: LOADK     R6 K6        ; R6 := -1
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: MOVE      R2 R3        ; R2 := R3
 15 [-]: GETGLOBAL R3 K0        ; R3 := string
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: LOADK     R5 K7        ; R5 := 1
 19 [-]: LOADK     R6 K7        ; R6 := 1
 20 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 21 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["0x960E8AD7"]
 22 [-]: CALL      R4 1 2       ; R4 := R4()
 23 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: TEST      R4 1         ; if R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R4 K9        ; R4 := 0x400E7765
 32 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["mPanelList"]
 33 [-]: GETTABLE  R5 R5 R2     ; R5 := R5[R2]
 34 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 35 [-]: TEST      R4 1         ; if R4 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["mPanelList"]
 38 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
 39 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xAC4AB24D"]
 40 [-]: MOVE      R6 R1        ; R6 := R1
 41 [-]: MOVE      R7 R2        ; R7 := R2
 42 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 43 [-]: RETURN    R0 1         ; return 


; Function #123.34:
;
; Name:            
; Defined at line: 7244
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R4 K0        ; R4 := string
  2 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xDE44F664"]
  3 [-]: MOVE      R5 R2        ; R5 := R2
  4 [-]: LOADK     R6 K2        ; R6 := "#"
  5 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  6 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R4 K0        ; R4 := string
  9 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0x7B782033"]
 10 [-]: MOVE      R5 R2        ; R5 := R2
 11 [-]: LOADK     R6 K5        ; R6 := 2
 12 [-]: LOADK     R7 K6        ; R7 := -1
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R2 R4        ; R2 := R4
 15 [-]: GETGLOBAL R4 K7        ; R4 := 0x400E7765
 16 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mPanelList"]
 17 [-]: GETTABLE  R5 R5 R2     ; R5 := R5[R2]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mPanelList"]
 22 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
 23 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0xD51B4477"]
 24 [-]: MOVE      R6 R1        ; R6 := R1
 25 [-]: MOVE      R7 R2        ; R7 := R2
 26 [-]: MOVE      R8 R3        ; R8 := R3
 27 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 28 [-]: RETURN    R0 1         ; return 


; Function #123.35:
;
; Name:            
; Defined at line: 7253
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTabMenu"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mSelectedElement"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTabMenu"]
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xC51A5C9D"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LE        0 R2 K4      ; if R2 > 1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTabMenu"]
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mSelectedElement"]
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mIndex"]
 16 [-]: ADD       R3 R2 R1     ; R3 := R2 + R1
 17 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTabMenu"]
 18 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xC51A5C9D"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R3 K4        ; R3 := 1
 23 [-]: JMP       30           ; PC := 30
 24 [-]: LE        0 R3 K6      ; if R3 > 0 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTabMenu"]
 27 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xC51A5C9D"]
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: MOVE      R3 R4        ; R3 := R4
 30 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTabMenu"]
 31 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0xD75E681A"]
 32 [-]: MOVE      R6 R3        ; R6 := R3
 33 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 34 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 35 [-]: MOVE      R6 R4        ; R6 := R4
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: TEST      R5 1         ; if R5 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0xE2A2E3AC"]
 40 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["mPanelList"]
 41 [-]: GETTABLE  R8 R4 K10    ; R8 := R4["ChannelName"]
 42 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 43 [-]: CALL      R5 3 1       ; R5(R6,R7)
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0x25992394"]
 46 [-]: GETGLOBAL R6 K12       ; R6 := _G
 47 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["UISound_ItemTipSection"]
 48 [-]: CALL      R5 2 1       ; R5(R6)
 49 [-]: RETURN    R0 1         ; return 


; Function #123.36:
;
; Name:            
; Defined at line: 7274
; #Upvalues:       7
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: GETGLOBAL R7 K0        ; R7 := gMatchingService
  2 [-]: SELF      R7 R7 K1     ; R8 := R7; R7 := R7["0xF0C493C"]
  3 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  4 [-]: GETGLOBAL R8 K2        ; R8 := 0x400E7765
  5 [-]: MOVE      R9 R7        ; R9 := R7
  6 [-]: CALL      R8 2 2       ; R8 := R8(R9)
  7 [-]: TEST      R8 0         ; if not R8 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["CHANNEL_ENTER"]
 11 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 38
 12 [-]: JMP       38           ; PC := 38
 13 [-]: GETGLOBAL R8 K2        ; R8 := 0x400E7765
 14 [-]: GETGLOBAL R9 K4        ; R9 := gRegion
 15 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 16 [-]: TEST      R8 1         ; if R8 then PC := 38
 17 [-]: JMP       38           ; PC := 38
 18 [-]: GETGLOBAL R8 K4        ; R8 := gRegion
 19 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x48FBE19F"]
 20 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 21 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
 22 [-]: MOVE      R10 R8       ; R10 := R8
 23 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 24 [-]: TEST      R9 1         ; if R9 then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: LEN       R9 R8        ; R9 := # R8
 27 [-]: LT        0 K6 R9      ; if 0 >= R9 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETTABLE  R9 R8 K7     ; R9 := R8[1]
 30 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0xAF835E05"]
 31 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 32 [-]: TEST      R9 0         ; if not R9 then PC := 38
 33 [-]: JMP       38           ; PC := 38
 34 [-]: GETGLOBAL R9 K9        ; R9 := 0x93B1256B
 35 [-]: LOADK     R10 K10      ; R10 := "Ghost player, not joining channel"
 36 [-]: CALL      R9 2 1       ; R9(R10)
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: EQ        0 R3 K11     ; if R3 ~= nil then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: MOVE      R3 R2        ; R3 := R2
 41 [-]: LOADNIL   R9 R9        ; R9 := nil
 42 [-]: GETGLOBAL R10 K12      ; R10 := 0xF595ADDE
 43 [-]: MOVE      R11 R1       ; R11 := R1
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: MOVE      R1 R10       ; R1 := R10
 46 [-]: EQ        0 R1 K7      ; if R1 ~= 1 then PC := 347
 47 [-]: JMP       347          ; PC := 347
 48 [-]: GETTABLE  R10 R0 K13   ; R10 := R0["CHANNEL_GLOBAL"]
 49 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: SETTABLE  R0 K14 R2    ; R0["mPendingGlobalChannelName"] := R2
 52 [-]: JMP       102          ; PC := 102
 53 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["CHANNEL_RECRUITING"]
 54 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: SETTABLE  R0 K16 R2    ; R0["mPendingRecruitingChannelName"] := R2
 57 [-]: JMP       102          ; PC := 102
 58 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["CHANNEL_TRADE"]
 59 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 63
 60 [-]: JMP       63           ; PC := 63
 61 [-]: SETTABLE  R0 K18 R2    ; R0["mPendingTradeChannelName"] := R2
 62 [-]: JMP       102          ; PC := 102
 63 [-]: GETTABLE  R10 R0 K19   ; R10 := R0["CHANNEL_QA"]
 64 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: SETTABLE  R0 K20 R2    ; R0["mPendingQAChannelName"] := R2
 67 [-]: JMP       102          ; PC := 102
 68 [-]: GETTABLE  R10 R0 K21   ; R10 := R0["CHANNEL_COUNCIL"]
 69 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: SETTABLE  R0 K22 R2    ; R0["mPendingCouncilChannelName"] := R2
 72 [-]: JMP       102          ; PC := 102
 73 [-]: GETGLOBAL R10 K23      ; R10 := string
 74 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["0x7B782033"]
 75 [-]: MOVE      R11 R2       ; R11 := R2
 76 [-]: LOADK     R12 K25      ; R12 := 2
 77 [-]: LOADK     R13 K25      ; R13 := 2
 78 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 79 [-]: GETTABLE  R11 R0 K26   ; R11 := R0["0xDB118937"]
 80 [-]: CALL      R11 1 2      ; R11 := R11()
 81 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 102
 82 [-]: JMP       102          ; PC := 102
 83 [-]: GETTABLE  R10 R0 K27   ; R10 := R0["mIsConnected"]
 84 [-]: TEST      R10 0        ; if not R10 then PC := 90
 85 [-]: JMP       90           ; PC := 90
 86 [-]: SELF      R10 R7 K28   ; R11 := R7; R10 := R7["0x21939A99"]
 87 [-]: MOVE      R12 R2       ; R12 := R2
 88 [-]: CALL      R10 3 1      ; R10(R11,R12)
 89 [-]: JMP       102          ; PC := 102
 90 [-]: GETUPVAL  R10 U0       ; R10 := U0
 91 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["0xC0F9C0F0"]
 92 [-]: GETTABLE  R11 R0 K30   ; R11 := R0["mPendingChannels"]
 93 [-]: MOVE      R12 R2       ; R12 := R2
 94 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 95 [-]: EQ        0 R10 K31    ; if R10 ~= -1 then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: GETGLOBAL R10 K32      ; R10 := table
 98 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["0xE6450C9D"]
 99 [-]: GETTABLE  R11 R0 K30   ; R11 := R0["mPendingChannels"]
100 [-]: MOVE      R12 R2       ; R12 := R2
101 [-]: CALL      R10 3 1      ; R10(R11,R12)
102 [-]: MOVE      R10 R1       ; R10 := R1
103 [-]: GETUPVAL  R11 U1       ; R11 := U1
104 [-]: MOVE      R12 R0       ; R12 := R0
105 [-]: MOVE      R13 R2       ; R13 := R2
106 [-]: MOVE      R14 R4       ; R14 := R4
107 [-]: MOVE      R15 R3       ; R15 := R3
108 [-]: MOVE      R16 R10      ; R16 := R10
109 [-]: CALL      R11 6 2      ; R11 := R11(R12,R13,R14,R15,R16)
110 [-]: MOVE      R9 R11       ; R9 := R11
111 [-]: SELF      R11 R9 K34   ; R12 := R9; R11 := R9["0x62648036"]
112 [-]: GETTABLE  R13 R0 K35   ; R13 := R0["mWindow"]
113 [-]: GETTABLE  R13 R13 K36  ; R13 := R13["width"]
114 [-]: GETTABLE  R14 R0 K35   ; R14 := R0["mWindow"]
115 [-]: GETTABLE  R14 R14 K37  ; R14 := R14["height"]
116 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
117 [-]: GETTABLE  R11 R0 K38   ; R11 := R0["mPanelList"]
118 [-]: GETTABLE  R12 R9 K39   ; R12 := R9["mChannelName"]
119 [-]: SETTABLE  R11 R12 R9   ; R11[R12] := R9
120 [-]: NEWTABLE  R11 0 0      ; R11 := {}
121 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
122 [-]: GETUPVAL  R13 U2       ; R13 := U2
123 [-]: CALL      R12 2 2      ; R12 := R12(R13)
124 [-]: TEST      R12 1        ; if R12 then PC := 130
125 [-]: JMP       130          ; PC := 130
126 [-]: GETUPVAL  R12 U2       ; R12 := U2
127 [-]: SELF      R12 R12 K40  ; R13 := R12; R12 := R12["0x5CEF3ABC"]
128 [-]: CALL      R12 2 2      ; R12 := R12(R13)
129 [-]: MOVE      R11 R12      ; R11 := R12
130 [-]: LOADK     R12 K7       ; R12 := 1
131 [-]: LEN       R13 R11      ; R13 := # R11
132 [-]: LOADK     R14 K7       ; R14 := 1
133 [-]: FORPREP   R12 217      ; R12 -= R14; PC := 217
134 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
135 [-]: GETTABLE  R16 R16 K41  ; R16 := R16["channel"]
136 [-]: GETGLOBAL R17 K23      ; R17 := string
137 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["0x7B782033"]
138 [-]: MOVE      R18 R16      ; R18 := R16
139 [-]: LOADK     R19 K7       ; R19 := 1
140 [-]: LOADK     R20 K7       ; R20 := 1
141 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
142 [-]: EQ        1 R17 K42    ; if R17 == "#" then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: MOVE      R17 R0       ; R17 := R0
145 [-]: MOVE      R17 R1       ; R17 := R1
146 [-]: GETTABLE  R18 R11 R15  ; R18 := R11[R15]
147 [-]: GETTABLE  R18 R18 K43  ; R18 := R18["entries"]
148 [-]: LOADK     R19 K7       ; R19 := 1
149 [-]: LEN       R20 R18      ; R20 := # R18
150 [-]: LOADK     R21 K7       ; R21 := 1
151 [-]: FORPREP   R19 216      ; R19 -= R21; PC := 216
152 [-]: GETGLOBAL R23 K44      ; R23 := 0x1BF588C6
153 [-]: LOADK     R24 K6       ; R24 := 0
154 [-]: CALL      R23 2 1      ; R23(R24)
155 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
156 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["timeStamp"]
157 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
158 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["content"]
159 [-]: EQ        0 R23 K11    ; if R23 ~= nil then PC := 162
160 [-]: JMP       162          ; PC := 162
161 [-]: LOADK     R23 K47      ; R23 := ""
162 [-]: TEST      R17 1        ; if R17 then PC := 168
163 [-]: JMP       168          ; PC := 168
164 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
165 [-]: GETTABLE  R25 R25 K48  ; R25 := R25["source"]
166 [-]: EQ        0 R25 K47    ; if R25 ~= "" then PC := 180
167 [-]: JMP       180          ; PC := 180
168 [-]: SELF      R25 R9 K49   ; R26 := R9; R25 := R9["0xA7D41027"]
169 [-]: GETTABLE  R27 R18 R22  ; R27 := R18[R22]
170 [-]: GETTABLE  R27 R27 K48  ; R27 := R27["source"]
171 [-]: MOVE      R28 R16      ; R28 := R16
172 [-]: MOVE      R29 R24      ; R29 := R24
173 [-]: MOVE      R30 R23      ; R30 := R23
174 [-]: MOVE      R31 R1       ; R31 := R1
175 [-]: MOVE      R32 R1       ; R32 := R1
176 [-]: GETTABLE  R33 R18 R22  ; R33 := R18[R22]
177 [-]: GETTABLE  R33 R33 K50  ; R33 := R33["userType"]
178 [-]: CALL      R25 9 1      ; R25(R26,R27,R28,R29,R30,R31,R32,R33)
179 [-]: JMP       216          ; PC := 216
180 [-]: GETGLOBAL R25 K51      ; R25 := 0xD1E7609B
181 [-]: LOADK     R26 K52      ; R26 := ","
182 [-]: MOVE      R27 R16      ; R27 := R16
183 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
184 [-]: EQ        1 R25 K11    ; if R25 == nil then PC := 216
185 [-]: JMP       216          ; PC := 216
186 [-]: LEN       R26 R25      ; R26 := # R25
187 [-]: EQ        0 R26 K25    ; if R26 ~= 2 then PC := 216
188 [-]: JMP       216          ; PC := 216
189 [-]: GETTABLE  R26 R0 K26   ; R26 := R0["0xDB118937"]
190 [-]: CALL      R26 1 2      ; R26 := R26()
191 [-]: GETTABLE  R27 R25 K7   ; R27 := R25[1]
192 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
193 [-]: GETTABLE  R27 R9 K39   ; R27 := R9["mChannelName"]
194 [-]: EQ        1 R26 R27    ; if R26 == R27 then PC := 203
195 [-]: JMP       203          ; PC := 203
196 [-]: GETTABLE  R26 R0 K26   ; R26 := R0["0xDB118937"]
197 [-]: CALL      R26 1 2      ; R26 := R26()
198 [-]: GETTABLE  R27 R25 K25  ; R27 := R25[2]
199 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
200 [-]: GETTABLE  R27 R9 K39   ; R27 := R9["mChannelName"]
201 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 216
202 [-]: JMP       216          ; PC := 216
203 [-]: SELF      R26 R9 K53   ; R27 := R9; R26 := R9["0x4313BA6"]
204 [-]: GETTABLE  R28 R18 R22  ; R28 := R18[R22]
205 [-]: GETTABLE  R28 R28 K48  ; R28 := R28["source"]
206 [-]: LOADK     R29 K54      ; R29 := ": "
207 [-]: MOVE      R30 R24      ; R30 := R24
208 [-]: CONCAT    R28 R28 R30  ; R28 := R28 .. R29 .. R30
209 [-]: GETTABLE  R29 R9 K55   ; R29 := R9["MESSAGE_TYPE_FRIEND"]
210 [-]: MOVE      R30 R23      ; R30 := R23
211 [-]: MOVE      R31 R0       ; R31 := R0
212 [-]: MOVE      R32 R1       ; R32 := R1
213 [-]: GETTABLE  R33 R18 R22  ; R33 := R18[R22]
214 [-]: GETTABLE  R33 R33 K48  ; R33 := R33["source"]
215 [-]: CALL      R26 8 1      ; R26(R27,R28,R29,R30,R31,R32,R33)
216 [-]: FORLOOP   R19 152      ; R19 += R21; if R19 <= R20 then begin PC := 152; R22 := R19 end
217 [-]: FORLOOP   R12 134      ; R12 += R14; if R12 <= R13 then begin PC := 134; R15 := R12 end
218 [-]: GETGLOBAL R26 K56      ; R26 := Engine
219 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["0x1398DAFB"]
220 [-]: CALL      R26 1 2      ; R26 := R26()
221 [-]: TEST      R26 0        ; if not R26 then PC := 269
222 [-]: JMP       269          ; PC := 269
223 [-]: GETUPVAL  R26 U3       ; R26 := U3
224 [-]: CALL      R26 1 2      ; R26 := R26()
225 [-]: TEST      R26 0        ; if not R26 then PC := 269
226 [-]: JMP       269          ; PC := 269
227 [-]: GETGLOBAL R26 K56      ; R26 := Engine
228 [-]: GETTABLE  R26 R26 K58  ; R26 := R26["0x695D4229"]
229 [-]: CALL      R26 1 2      ; R26 := R26()
230 [-]: TEST      R26 0        ; if not R26 then PC := 243
231 [-]: JMP       243          ; PC := 243
232 [-]: SELF      R26 R9 K53   ; R27 := R9; R26 := R9["0x4313BA6"]
233 [-]: GETGLOBAL R28 K59      ; R28 := mMovie
234 [-]: SELF      R28 R28 K60  ; R29 := R28; R28 := R28["0x5DB0BD4"]
235 [-]: LOADK     R30 K61      ; R30 := "/Lotus/Language/Menu/SocialOverlay_ContentRestriction_XBone"
236 [-]: MOVE      R31 R0       ; R31 := R0
237 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
238 [-]: GETTABLE  R29 R9 K62   ; R29 := R9["MESSAGE_TYPE_BROADCAST"]
239 [-]: LOADK     R30 K47      ; R30 := ""
240 [-]: MOVE      R31 R1       ; R31 := R1
241 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
242 [-]: JMP       269          ; PC := 269
243 [-]: GETGLOBAL R26 K56      ; R26 := Engine
244 [-]: GETTABLE  R26 R26 K63  ; R26 := R26["0x47916128"]
245 [-]: CALL      R26 1 2      ; R26 := R26()
246 [-]: TEST      R26 0        ; if not R26 then PC := 259
247 [-]: JMP       259          ; PC := 259
248 [-]: SELF      R26 R9 K53   ; R27 := R9; R26 := R9["0x4313BA6"]
249 [-]: GETGLOBAL R28 K59      ; R28 := mMovie
250 [-]: SELF      R28 R28 K60  ; R29 := R28; R28 := R28["0x5DB0BD4"]
251 [-]: LOADK     R30 K64      ; R30 := "/Lotus/Language/Menu/SocialOverlay_ContentRestriction_Switch"
252 [-]: MOVE      R31 R0       ; R31 := R0
253 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
254 [-]: GETTABLE  R29 R9 K62   ; R29 := R9["MESSAGE_TYPE_BROADCAST"]
255 [-]: LOADK     R30 K47      ; R30 := ""
256 [-]: MOVE      R31 R1       ; R31 := R1
257 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
258 [-]: JMP       269          ; PC := 269
259 [-]: SELF      R26 R9 K53   ; R27 := R9; R26 := R9["0x4313BA6"]
260 [-]: GETGLOBAL R28 K59      ; R28 := mMovie
261 [-]: SELF      R28 R28 K60  ; R29 := R28; R28 := R28["0x5DB0BD4"]
262 [-]: LOADK     R30 K65      ; R30 := "/Lotus/Language/Menu/SocialOverlay_ContentRestriction"
263 [-]: MOVE      R31 R0       ; R31 := R0
264 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
265 [-]: GETTABLE  R29 R9 K62   ; R29 := R9["MESSAGE_TYPE_BROADCAST"]
266 [-]: LOADK     R30 K47      ; R30 := ""
267 [-]: MOVE      R31 R1       ; R31 := R1
268 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
269 [-]: SELF      R26 R0 K66   ; R27 := R0; R26 := R0["0x9F48FD3"]
270 [-]: MOVE      R28 R3       ; R28 := R3
271 [-]: GETTABLE  R29 R9 K39   ; R29 := R9["mChannelName"]
272 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
273 [-]: GETTABLE  R27 R0 K38   ; R27 := R0["mPanelList"]
274 [-]: GETTABLE  R28 R9 K39   ; R28 := R9["mChannelName"]
275 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
276 [-]: SETTABLE  R27 K67 R26  ; R27["mTabElement"] := R26
277 [-]: GETGLOBAL R27 K68      ; R27 := gPlayerProfileMgr
278 [-]: SELF      R27 R27 K69  ; R28 := R27; R27 := R27["0x21EF7B1A"]
279 [-]: LOADK     R29 K6       ; R29 := 0
280 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
281 [-]: SELF      R28 R27 K70  ; R29 := R27; R28 := R27["0x278AF238"]
282 [-]: LOADK     R30 K71      ; R30 := "default_qa"
283 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
284 [-]: TEST      R28 0        ; if not R28 then PC := 318
285 [-]: JMP       318          ; PC := 318
286 [-]: GETUPVAL  R28 U4       ; R28 := U4
287 [-]: CALL      R28 1 2      ; R28 := R28()
288 [-]: TEST      R28 1        ; if R28 then PC := 308
289 [-]: JMP       308          ; PC := 308
290 [-]: GETTABLE  R28 R0 K72   ; R28 := R0["mActivePanelName"]
291 [-]: EQ        1 R28 K47    ; if R28 == "" then PC := 298
292 [-]: JMP       298          ; PC := 298
293 [-]: GETTABLE  R28 R9 K73   ; R28 := R9["mChannelType"]
294 [-]: GETUPVAL  R29 U5       ; R29 := U5
295 [-]: GETTABLE  R29 R29 K19  ; R29 := R29["CHANNEL_QA"]
296 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 308
297 [-]: JMP       308          ; PC := 308
298 [-]: GETGLOBAL R28 K74      ; R28 := _G
299 [-]: GETTABLE  R28 R28 K75  ; R28 := R28["StalkerMode"]
300 [-]: TEST      R28 1        ; if R28 then PC := 308
301 [-]: JMP       308          ; PC := 308
302 [-]: SELF      R28 R0 K76   ; R29 := R0; R28 := R0["0xE2A2E3AC"]
303 [-]: GETTABLE  R30 R0 K38   ; R30 := R0["mPanelList"]
304 [-]: GETTABLE  R31 R9 K39   ; R31 := R9["mChannelName"]
305 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
306 [-]: CALL      R28 3 1      ; R28(R29,R30)
307 [-]: JMP       556          ; PC := 556
308 [-]: GETUPVAL  R28 U5       ; R28 := U5
309 [-]: SELF      R28 R28 K77  ; R29 := R28; R28 := R28["0xD1D449ED"]
310 [-]: GETUPVAL  R30 U5       ; R30 := U5
311 [-]: GETTABLE  R30 R30 K35  ; R30 := R30["mWindow"]
312 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["width"]
313 [-]: GETUPVAL  R31 U5       ; R31 := U5
314 [-]: GETTABLE  R31 R31 K35  ; R31 := R31["mWindow"]
315 [-]: GETTABLE  R31 R31 K37  ; R31 := R31["height"]
316 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
317 [-]: JMP       556          ; PC := 556
318 [-]: GETUPVAL  R28 U4       ; R28 := U4
319 [-]: CALL      R28 1 2      ; R28 := R28()
320 [-]: TEST      R28 1        ; if R28 then PC := 337
321 [-]: JMP       337          ; PC := 337
322 [-]: TEST      R5 1         ; if R5 then PC := 337
323 [-]: JMP       337          ; PC := 337
324 [-]: GETTABLE  R28 R0 K72   ; R28 := R0["mActivePanelName"]
325 [-]: EQ        0 R28 K47    ; if R28 ~= "" then PC := 337
326 [-]: JMP       337          ; PC := 337
327 [-]: GETGLOBAL R28 K74      ; R28 := _G
328 [-]: GETTABLE  R28 R28 K75  ; R28 := R28["StalkerMode"]
329 [-]: TEST      R28 1        ; if R28 then PC := 337
330 [-]: JMP       337          ; PC := 337
331 [-]: SELF      R28 R0 K76   ; R29 := R0; R28 := R0["0xE2A2E3AC"]
332 [-]: GETTABLE  R30 R0 K38   ; R30 := R0["mPanelList"]
333 [-]: GETTABLE  R31 R9 K39   ; R31 := R9["mChannelName"]
334 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
335 [-]: CALL      R28 3 1      ; R28(R29,R30)
336 [-]: JMP       556          ; PC := 556
337 [-]: GETUPVAL  R28 U5       ; R28 := U5
338 [-]: SELF      R28 R28 K77  ; R29 := R28; R28 := R28["0xD1D449ED"]
339 [-]: GETUPVAL  R30 U5       ; R30 := U5
340 [-]: GETTABLE  R30 R30 K35  ; R30 := R30["mWindow"]
341 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["width"]
342 [-]: GETUPVAL  R31 U5       ; R31 := U5
343 [-]: GETTABLE  R31 R31 K35  ; R31 := R31["mWindow"]
344 [-]: GETTABLE  R31 R31 K37  ; R31 := R31["height"]
345 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
346 [-]: JMP       556          ; PC := 556
347 [-]: MOVE      R28 R2       ; R28 := R2
348 [-]: GETGLOBAL R29 K23      ; R29 := string
349 [-]: GETTABLE  R29 R29 K78  ; R29 := R29["0xDE44F664"]
350 [-]: MOVE      R30 R28      ; R30 := R28
351 [-]: LOADK     R31 K42      ; R31 := "#"
352 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
353 [-]: EQ        1 R29 K11    ; if R29 == nil then PC := 362
354 [-]: JMP       362          ; PC := 362
355 [-]: GETGLOBAL R29 K23      ; R29 := string
356 [-]: GETTABLE  R29 R29 K24  ; R29 := R29["0x7B782033"]
357 [-]: MOVE      R30 R28      ; R30 := R28
358 [-]: LOADK     R31 K25      ; R31 := 2
359 [-]: LOADK     R32 K31      ; R32 := -1
360 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
361 [-]: MOVE      R28 R29      ; R28 := R29
362 [-]: GETTABLE  R29 R0 K72   ; R29 := R0["mActivePanelName"]
363 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 386
364 [-]: JMP       386          ; PC := 386
365 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
366 [-]: GETTABLE  R30 R0 K38   ; R30 := R0["mPanelList"]
367 [-]: GETTABLE  R31 R0 K79   ; R31 := R0["mPrevPanelName"]
368 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
369 [-]: CALL      R29 2 2      ; R29 := R29(R30)
370 [-]: TEST      R29 1        ; if R29 then PC := 378
371 [-]: JMP       378          ; PC := 378
372 [-]: SELF      R29 R0 K76   ; R30 := R0; R29 := R0["0xE2A2E3AC"]
373 [-]: GETTABLE  R31 R0 K38   ; R31 := R0["mPanelList"]
374 [-]: GETTABLE  R32 R0 K79   ; R32 := R0["mPrevPanelName"]
375 [-]: GETTABLE  R31 R31 R32  ; R31 := R31[R32]
376 [-]: CALL      R29 3 1      ; R29(R30,R31)
377 [-]: JMP       382          ; PC := 382
378 [-]: SELF      R29 R0 K80   ; R30 := R0; R29 := R0["0xFAFBBCBD"]
379 [-]: GETUPVAL  R31 U0       ; R31 := U0
380 [-]: GETTABLE  R31 R31 K81  ; R31 := R31["INCREMENT"]
381 [-]: CALL      R29 3 1      ; R29(R30,R31)
382 [-]: GETTABLE  R29 R0 K72   ; R29 := R0["mActivePanelName"]
383 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 386
384 [-]: JMP       386          ; PC := 386
385 [-]: SETTABLE  R0 K72 K47   ; R0["mActivePanelName"] := ""
386 [-]: GETTABLE  R29 R0 K38   ; R29 := R0["mPanelList"]
387 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
388 [-]: EQ        1 R29 K11    ; if R29 == nil then PC := 397
389 [-]: JMP       397          ; PC := 397
390 [-]: GETTABLE  R29 R0 K82   ; R29 := R0["mPanelShortcuts"]
391 [-]: GETTABLE  R30 R0 K38   ; R30 := R0["mPanelList"]
392 [-]: GETTABLE  R30 R30 R28  ; R30 := R30[R28]
393 [-]: GETTABLE  R30 R30 K73  ; R30 := R30["mChannelType"]
394 [-]: SETTABLE  R29 R30 K11  ; R29[R30] := nil
395 [-]: GETTABLE  R29 R0 K38   ; R29 := R0["mPanelList"]
396 [-]: SETTABLE  R29 R28 K11  ; R29[R28] := nil
397 [-]: SELF      R29 R0 K83   ; R30 := R0; R29 := R0["0x6BFD539D"]
398 [-]: MOVE      R31 R2       ; R31 := R2
399 [-]: MOVE      R32 R6       ; R32 := R6
400 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
401 [-]: GETGLOBAL R29 K23      ; R29 := string
402 [-]: GETTABLE  R29 R29 K78  ; R29 := R29["0xDE44F664"]
403 [-]: MOVE      R30 R2       ; R30 := R2
404 [-]: LOADK     R31 K42      ; R31 := "#"
405 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
406 [-]: EQ        0 R29 K11    ; if R29 ~= nil then PC := 411
407 [-]: JMP       411          ; PC := 411
408 [-]: LOADK     R29 K42      ; R29 := "#"
409 [-]: MOVE      R30 R2       ; R30 := R2
410 [-]: CONCAT    R2 R29 R30   ; R2 := R29 .. R30
411 [-]: GETGLOBAL R29 K23      ; R29 := string
412 [-]: GETTABLE  R29 R29 K24  ; R29 := R29["0x7B782033"]
413 [-]: MOVE      R30 R2       ; R30 := R2
414 [-]: LOADK     R31 K25      ; R31 := 2
415 [-]: LOADK     R32 K25      ; R32 := 2
416 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
417 [-]: GETTABLE  R30 R0 K84   ; R30 := R0["0x1278933D"]
418 [-]: MOVE      R31 R0       ; R31 := R0
419 [-]: CALL      R30 2 2      ; R30 := R30(R31)
420 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 423
421 [-]: JMP       423          ; PC := 423
422 [-]: MOVE      R29 R0       ; R29 := R0
423 [-]: MOVE      R29 R1       ; R29 := R1
424 [-]: GETGLOBAL R30 K23      ; R30 := string
425 [-]: GETTABLE  R30 R30 K24  ; R30 := R30["0x7B782033"]
426 [-]: MOVE      R31 R2       ; R31 := R2
427 [-]: LOADK     R32 K25      ; R32 := 2
428 [-]: LOADK     R33 K25      ; R33 := 2
429 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
430 [-]: GETTABLE  R31 R0 K26   ; R31 := R0["0xDB118937"]
431 [-]: CALL      R31 1 2      ; R31 := R31()
432 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 439
433 [-]: JMP       439          ; PC := 439
434 [-]: TEST      R29 1        ; if R29 then PC := 439
435 [-]: JMP       439          ; PC := 439
436 [-]: SELF      R30 R7 K85   ; R31 := R7; R30 := R7["0x542CAA30"]
437 [-]: MOVE      R32 R2       ; R32 := R2
438 [-]: CALL      R30 3 1      ; R30(R31,R32)
439 [-]: TEST      R29 0        ; if not R29 then PC := 446
440 [-]: JMP       446          ; PC := 446
441 [-]: GETTABLE  R30 R0 K86   ; R30 := R0["mIsScenarioChannel"]
442 [-]: TEST      R30 0        ; if not R30 then PC := 446
443 [-]: JMP       446          ; PC := 446
444 [-]: SETTABLE  R0 K86 K87   ; R0["mIsScenarioChannel"] := "0x0"
445 [-]: SETTABLE  R0 K88 K87   ; R0["mCachedPersistentRelayHubActive"] := "0x0"
446 [-]: GETTABLE  R30 R0 K13   ; R30 := R0["CHANNEL_GLOBAL"]
447 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 454
448 [-]: JMP       454          ; PC := 454
449 [-]: GETTABLE  R30 R0 K14   ; R30 := R0["mPendingGlobalChannelName"]
450 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 454
451 [-]: JMP       454          ; PC := 454
452 [-]: SETTABLE  R0 K14 K11   ; R0["mPendingGlobalChannelName"] := nil
453 [-]: JMP       485          ; PC := 485
454 [-]: GETTABLE  R30 R0 K15   ; R30 := R0["CHANNEL_RECRUITING"]
455 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 462
456 [-]: JMP       462          ; PC := 462
457 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["mPendingRecruitingChannelName"]
458 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 462
459 [-]: JMP       462          ; PC := 462
460 [-]: SETTABLE  R0 K16 K11   ; R0["mPendingRecruitingChannelName"] := nil
461 [-]: JMP       485          ; PC := 485
462 [-]: GETTABLE  R30 R0 K17   ; R30 := R0["CHANNEL_TRADE"]
463 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 470
464 [-]: JMP       470          ; PC := 470
465 [-]: GETTABLE  R30 R0 K18   ; R30 := R0["mPendingTradeChannelName"]
466 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 470
467 [-]: JMP       470          ; PC := 470
468 [-]: SETTABLE  R0 K18 K11   ; R0["mPendingTradeChannelName"] := nil
469 [-]: JMP       485          ; PC := 485
470 [-]: GETTABLE  R30 R0 K19   ; R30 := R0["CHANNEL_QA"]
471 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 478
472 [-]: JMP       478          ; PC := 478
473 [-]: GETTABLE  R30 R0 K20   ; R30 := R0["mPendingQAChannelName"]
474 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 478
475 [-]: JMP       478          ; PC := 478
476 [-]: SETTABLE  R0 K20 K11   ; R0["mPendingQAChannelName"] := nil
477 [-]: JMP       485          ; PC := 485
478 [-]: GETTABLE  R30 R0 K21   ; R30 := R0["CHANNEL_COUNCIL"]
479 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 485
480 [-]: JMP       485          ; PC := 485
481 [-]: GETTABLE  R30 R0 K22   ; R30 := R0["mPendingCouncilChannelName"]
482 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 485
483 [-]: JMP       485          ; PC := 485
484 [-]: SETTABLE  R0 K22 K11   ; R0["mPendingCouncilChannelName"] := nil
485 [-]: GETUPVAL  R30 U0       ; R30 := U0
486 [-]: GETTABLE  R30 R30 K29  ; R30 := R30["0xC0F9C0F0"]
487 [-]: GETTABLE  R31 R0 K30   ; R31 := R0["mPendingChannels"]
488 [-]: MOVE      R32 R2       ; R32 := R2
489 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
490 [-]: EQ        0 R30 K31    ; if R30 ~= -1 then PC := 497
491 [-]: JMP       497          ; PC := 497
492 [-]: GETGLOBAL R31 K32      ; R31 := table
493 [-]: GETTABLE  R31 R31 K89  ; R31 := R31["0xCDB1FD5E"]
494 [-]: GETTABLE  R32 R0 K30   ; R32 := R0["mPendingChannels"]
495 [-]: MOVE      R33 R30      ; R33 := R30
496 [-]: CALL      R31 3 1      ; R31(R32,R33)
497 [-]: GETTABLE  R31 R0 K72   ; R31 := R0["mActivePanelName"]
498 [-]: EQ        0 R31 K47    ; if R31 ~= "" then PC := 556
499 [-]: JMP       556          ; PC := 556
500 [-]: GETGLOBAL R31 K2       ; R31 := 0x400E7765
501 [-]: GETTABLE  R32 R0 K90   ; R32 := R0["mUserPanel"]
502 [-]: CALL      R31 2 2      ; R31 := R31(R32)
503 [-]: TEST      R31 1        ; if R31 then PC := 514
504 [-]: JMP       514          ; PC := 514
505 [-]: GETTABLE  R31 R0 K90   ; R31 := R0["mUserPanel"]
506 [-]: SELF      R31 R31 K91  ; R32 := R31; R31 := R31["0x8B082A0E"]
507 [-]: CALL      R31 2 1      ; R31(R32)
508 [-]: GETGLOBAL R31 K59      ; R31 := mMovie
509 [-]: SELF      R31 R31 K92  ; R32 := R31; R31 := R31["0x1C19D966"]
510 [-]: LOADK     R33 K93      ; R33 := "Window.SendMessageBar"
511 [-]: LOADK     R34 K94      ; R34 := "_visible"
512 [-]: MOVE      R35 R0       ; R35 := R0
513 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
514 [-]: LOADK     R31 K7       ; R31 := 1
515 [-]: GETUPVAL  R32 U6       ; R32 := U6
516 [-]: LOADK     R33 K7       ; R33 := 1
517 [-]: FORPREP   R31 553      ; R31 -= R33; PC := 553
518 [-]: LOADK     R35 K95      ; R35 := "Window.TabbedChatPanel.ChatEntryLine"
519 [-]: MOVE      R36 R34      ; R36 := R34
520 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
521 [-]: LT        0 K7 R34     ; if 1 >= R34 then PC := 530
522 [-]: JMP       530          ; PC := 530
523 [-]: GETGLOBAL R36 K96      ; R36 := 0x8C64AFA9
524 [-]: GETGLOBAL R37 K59      ; R37 := mMovie
525 [-]: MOVE      R38 R35      ; R38 := R35
526 [-]: LOADK     R39 K97      ; R39 := ".removeMovieClip"
527 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
528 [-]: CALL      R36 3 1      ; R36(R37,R38)
529 [-]: JMP       553          ; PC := 553
530 [-]: GETGLOBAL R36 K59      ; R36 := mMovie
531 [-]: SELF      R36 R36 K98  ; R37 := R36; R36 := R36["0xD6A79FE9"]
532 [-]: MOVE      R38 R35      ; R38 := R35
533 [-]: LOADK     R39 K99      ; R39 := ".Message1"
534 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
535 [-]: LOADK     R39 K100     ; R39 := "text"
536 [-]: LOADK     R40 K47      ; R40 := ""
537 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
538 [-]: GETGLOBAL R36 K59      ; R36 := mMovie
539 [-]: SELF      R36 R36 K98  ; R37 := R36; R36 := R36["0xD6A79FE9"]
540 [-]: MOVE      R38 R35      ; R38 := R35
541 [-]: LOADK     R39 K101     ; R39 := ".Message2"
542 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
543 [-]: LOADK     R39 K100     ; R39 := "text"
544 [-]: LOADK     R40 K47      ; R40 := ""
545 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
546 [-]: GETGLOBAL R36 K59      ; R36 := mMovie
547 [-]: SELF      R36 R36 K102 ; R37 := R36; R36 := R36["0x880196A7"]
548 [-]: MOVE      R38 R35      ; R38 := R35
549 [-]: LOADK     R39 K103     ; R39 := "Btn"
550 [-]: LOADK     R40 K94      ; R40 := "_visible"
551 [-]: MOVE      R41 R0       ; R41 := R0
552 [-]: CALL      R36 6 1      ; R36(R37,R38,R39,R40,R41)
553 [-]: FORLOOP   R31 518      ; R31 += R33; if R31 <= R32 then begin PC := 518; R34 := R31 end
554 [-]: LOADK     R36 K7       ; R36 := 1
555 [-]: MOVE      R36 R6       ; R36 := R6
556 [-]: RETURN    R9 2         ; return R9
557 [-]: RETURN    R0 1         ; return 


; Function #123.37:
;
; Name:            
; Defined at line: 7475
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  45

  1 [-]: EQ        0 R1 K0      ; if R1 ~= "" then PC := 146
  2 [-]: JMP       146          ; PC := 146
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xECFDD17
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
  8 [-]: MOVE      R9 R7        ; R9 := R7
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 1         ; if R8 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: SELF      R8 R7 K4     ; R9 := R7; R8 := R7["0xA7D41027"]
 13 [-]: LOADK     R10 K0       ; R10 := ""
 14 [-]: LOADK     R11 K0       ; R11 := ""
 15 [-]: MOVE      R12 R2       ; R12 := R2
 16 [-]: LOADK     R13 K0       ; R13 := ""
 17 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 18 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 19 [-]: JMP       7            ; PC := 7
 20 [-]: GETGLOBAL R8 K5        ; R8 := string
 21 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["0xBDD0D625"]
 22 [-]: MOVE      R9 R2        ; R9 := R2
 23 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 24 [-]: GETGLOBAL R9 K5        ; R9 := string
 25 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xAF449107"]
 26 [-]: MOVE      R10 R8       ; R10 := R8
 27 [-]: LOADK     R11 K8       ; R11 := "(%d+)%s*minute"
 28 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 29 [-]: GETGLOBAL R10 K5       ; R10 := string
 30 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xAF449107"]
 31 [-]: MOVE      R11 R8       ; R11 := R8
 32 [-]: LOADK     R12 K9       ; R12 := "deploy.*%s.*remain"
 33 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 34 [-]: EQ        0 R10 K10    ; if R10 ~= nil then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETGLOBAL R10 K5       ; R10 := string
 37 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xAF449107"]
 38 [-]: MOVE      R11 R8       ; R11 := R8
 39 [-]: LOADK     R12 K11      ; R12 := "deploy.*%s.*stay"
 40 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 41 [-]: EQ        0 R10 K10    ; if R10 ~= nil then PC := 44
 42 [-]: JMP       44           ; PC := 44
 43 [-]: MOVE      R10 R0       ; R10 := R0
 44 [-]: MOVE      R10 R1       ; R10 := R1
 45 [-]: GETGLOBAL R11 K5       ; R11 := string
 46 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xAF449107"]
 47 [-]: MOVE      R12 R8       ; R12 := R8
 48 [-]: LOADK     R13 K12      ; R13 := "deploy.*%s.*restart"
 49 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 50 [-]: EQ        0 R11 K10    ; if R11 ~= nil then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R11 R0       ; R11 := R0
 53 [-]: MOVE      R11 R1       ; R11 := R1
 54 [-]: GETGLOBAL R12 K13      ; R12 := _T
 55 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["ShowNotification"]
 56 [-]: EQ        1 R12 K10    ; if R12 == nil then PC := 394
 57 [-]: JMP       394          ; PC := 394
 58 [-]: TEST      R10 1        ; if R10 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: TEST      R11 1        ; if R11 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: EQ        1 R9 K10     ; if R9 == nil then PC := 394
 63 [-]: JMP       394          ; PC := 394
 64 [-]: GETGLOBAL R12 K5       ; R12 := string
 65 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xAF449107"]
 66 [-]: MOVE      R13 R8       ; R13 := R8
 67 [-]: LOADK     R14 K15      ; R14 := "updat"
 68 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 69 [-]: EQ        0 R12 K10    ; if R12 ~= nil then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R12 R0       ; R12 := R0
 72 [-]: MOVE      R12 R1       ; R12 := R1
 73 [-]: LOADK     R13 K0       ; R13 := ""
 74 [-]: LOADK     R14 K16      ; R14 := 10
 75 [-]: MOVE      R15 R0       ; R15 := R0
 76 [-]: TEST      R10 0        ; if not R10 then PC := 95
 77 [-]: JMP       95           ; PC := 95
 78 [-]: TEST      R12 0        ; if not R12 then PC := 87
 79 [-]: JMP       87           ; PC := 87
 80 [-]: GETGLOBAL R16 K17      ; R16 := mMovie
 81 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16["0x5DB0BD4"]
 82 [-]: LOADK     R18 K19      ; R18 := "/Lotus/Language/Menu/Notification_UpdateDeploying"
 83 [-]: MOVE      R19 R0       ; R19 := R0
 84 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 85 [-]: MOVE      R13 R16      ; R13 := R16
 86 [-]: JMP       93           ; PC := 93
 87 [-]: GETGLOBAL R16 K17      ; R16 := mMovie
 88 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16["0x5DB0BD4"]
 89 [-]: LOADK     R18 K20      ; R18 := "/Lotus/Language/Menu/Notification_HotfixDeploying"
 90 [-]: MOVE      R19 R0       ; R19 := R0
 91 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 92 [-]: MOVE      R13 R16      ; R13 := R16
 93 [-]: LOADK     R14 K21      ; R14 := 600
 94 [-]: JMP       135          ; PC := 135
 95 [-]: TEST      R11 0        ; if not R11 then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: GETGLOBAL R16 K17      ; R16 := mMovie
 98 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16["0x5DB0BD4"]
 99 [-]: LOADK     R18 K22      ; R18 := "/Lotus/Language/Menu/Notification_PatchDeployed"
100 [-]: MOVE      R19 R0       ; R19 := R0
101 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
102 [-]: MOVE      R13 R16      ; R13 := R16
103 [-]: MOVE      R15 R1       ; R15 := R1
104 [-]: JMP       135          ; PC := 135
105 [-]: TEST      R12 0        ; if not R12 then PC := 116
106 [-]: JMP       116          ; PC := 116
107 [-]: GETGLOBAL R16 K17      ; R16 := mMovie
108 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16["0x5DB0BD4"]
109 [-]: LOADK     R18 K23      ; R18 := "/Lotus/Language/Menu/Notification_UpdateTimeLeft"
110 [-]: MOVE      R19 R0       ; R19 := R0
111 [-]: NEWTABLE  R20 0 1      ; R20 := {}
112 [-]: SETTABLE  R20 K24 R9   ; R20["TIME"] := R9
113 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
114 [-]: MOVE      R13 R16      ; R13 := R16
115 [-]: JMP       135          ; PC := 135
116 [-]: LOADK     R16 K25      ; R16 := "/Lotus/Language/Menu/"
117 [-]: GETUPVAL  R17 U0       ; R17 := U0
118 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["0xF81722A2"]
119 [-]: EQ        1 R9 K27     ; if R9 == "1" then PC := 122
120 [-]: JMP       122          ; PC := 122
121 [-]: MOVE      R18 R0       ; R18 := R0
122 [-]: MOVE      R18 R1       ; R18 := R1
123 [-]: LOADK     R19 K28      ; R19 := "Notification_HotfixTimeLeft1Minute"
124 [-]: LOADK     R20 K29      ; R20 := "Notification_HotfixTimeLeft"
125 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
126 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
127 [-]: GETGLOBAL R17 K17      ; R17 := mMovie
128 [-]: SELF      R17 R17 K18  ; R18 := R17; R17 := R17["0x5DB0BD4"]
129 [-]: MOVE      R19 R16      ; R19 := R16
130 [-]: MOVE      R20 R0       ; R20 := R0
131 [-]: NEWTABLE  R21 0 1      ; R21 := {}
132 [-]: SETTABLE  R21 K24 R9   ; R21["TIME"] := R9
133 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
134 [-]: MOVE      R13 R17      ; R13 := R17
135 [-]: GETGLOBAL R17 K13      ; R17 := _T
136 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["0x761CAD7D"]
137 [-]: MOVE      R18 R13      ; R18 := R13
138 [-]: LOADK     R19 K31      ; R19 := "NewBuild"
139 [-]: MOVE      R20 R1       ; R20 := R1
140 [-]: MOVE      R21 R14      ; R21 := R14
141 [-]: GETGLOBAL R22 K32      ; R22 := _G
142 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["UIColor_Red"]
143 [-]: MOVE      R23 R15      ; R23 := R15
144 [-]: CALL      R17 7 1      ; R17(R18,R19,R20,R21,R22,R23)
145 [-]: JMP       394          ; PC := 394
146 [-]: GETGLOBAL R17 K34      ; R17 := 0xD1E7609B
147 [-]: LOADK     R18 K35      ; R18 := ","
148 [-]: MOVE      R19 R1       ; R19 := R1
149 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
150 [-]: GETTABLE  R18 R17 K36  ; R18 := R17[1]
151 [-]: GETTABLE  R19 R17 K37  ; R19 := R17[2]
152 [-]: GETTABLE  R20 R17 K38  ; R20 := R17[3]
153 [-]: GETUPVAL  R21 U0       ; R21 := U0
154 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["0xF81722A2"]
155 [-]: GETTABLE  R22 R17 K39  ; R22 := R17[4]
156 [-]: EQ        1 R22 K10    ; if R22 == nil then PC := 159
157 [-]: JMP       159          ; PC := 159
158 [-]: MOVE      R22 R0       ; R22 := R0
159 [-]: MOVE      R22 R1       ; R22 := R1
160 [-]: GETGLOBAL R23 K40      ; R23 := Engine
161 [-]: GETTABLE  R23 R23 K41  ; R23 := R23["UT_NORMAL"]
162 [-]: GETGLOBAL R24 K42      ; R24 := 0xF595ADDE
163 [-]: GETTABLE  R25 R17 K39  ; R25 := R17[4]
164 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
165 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
166 [-]: GETTABLE  R22 R17 K43  ; R22 := R17[5]
167 [-]: GETGLOBAL R23 K5       ; R23 := string
168 [-]: GETTABLE  R23 R23 K44  ; R23 := R23["0x7B782033"]
169 [-]: MOVE      R24 R19      ; R24 := R19
170 [-]: LOADK     R25 K36      ; R25 := 1
171 [-]: LOADK     R26 K36      ; R26 := 1
172 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
173 [-]: EQ        1 R23 K45    ; if R23 == "#" then PC := 176
174 [-]: JMP       176          ; PC := 176
175 [-]: MOVE      R23 R0       ; R23 := R0
176 [-]: MOVE      R23 R1       ; R23 := R1
177 [-]: EQ        0 R20 K10    ; if R20 ~= nil then PC := 180
178 [-]: JMP       180          ; PC := 180
179 [-]: LOADK     R20 K0       ; R20 := ""
180 [-]: EQ        0 R18 K0     ; if R18 ~= "" then PC := 232
181 [-]: JMP       232          ; PC := 232
182 [-]: GETGLOBAL R24 K34      ; R24 := 0xD1E7609B
183 [-]: LOADK     R25 K35      ; R25 := ","
184 [-]: MOVE      R26 R2       ; R26 := R2
185 [-]: LOADK     R27 K38      ; R27 := 3
186 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
187 [-]: LEN       R25 R24      ; R25 := # R24
188 [-]: LT        0 K36 R25    ; if 1 >= R25 then PC := 374
189 [-]: JMP       374          ; PC := 374
190 [-]: TEST      R23 0        ; if not R23 then PC := 374
191 [-]: JMP       374          ; PC := 374
192 [-]: GETTABLE  R25 R24 K36  ; R25 := R24[1]
193 [-]: EQ        0 R25 K46    ; if R25 ~= "clear" then PC := 374
194 [-]: JMP       374          ; PC := 374
195 [-]: GETTABLE  R25 R24 K37  ; R25 := R24[2]
196 [-]: GETGLOBAL R26 K5       ; R26 := string
197 [-]: GETTABLE  R26 R26 K47  ; R26 := R26["0xDE44F664"]
198 [-]: MOVE      R27 R19      ; R27 := R19
199 [-]: LOADK     R28 K45      ; R28 := "#"
200 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
201 [-]: EQ        1 R26 K10    ; if R26 == nil then PC := 208
202 [-]: JMP       208          ; PC := 208
203 [-]: SELF      R26 R19 K44  ; R27 := R19; R26 := R19["0x7B782033"]
204 [-]: LOADK     R28 K37      ; R28 := 2
205 [-]: LOADK     R29 K48      ; R29 := -1
206 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
207 [-]: MOVE      R19 R26      ; R19 := R26
208 [-]: GETGLOBAL R26 K3       ; R26 := 0x400E7765
209 [-]: GETTABLE  R27 R0 K2    ; R27 := R0["mPanelList"]
210 [-]: GETTABLE  R27 R27 R19  ; R27 := R27[R19]
211 [-]: CALL      R26 2 2      ; R26 := R26(R27)
212 [-]: TEST      R26 1        ; if R26 then PC := 219
213 [-]: JMP       219          ; PC := 219
214 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["mPanelList"]
215 [-]: GETTABLE  R26 R26 R19  ; R26 := R26[R19]
216 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26["0x3EFDAD47"]
217 [-]: MOVE      R28 R25      ; R28 := R25
218 [-]: CALL      R26 3 1      ; R26(R27,R28)
219 [-]: LEN       R26 R24      ; R26 := # R24
220 [-]: EQ        0 R26 K38    ; if R26 ~= 3 then PC := 230
221 [-]: JMP       230          ; PC := 230
222 [-]: GETTABLE  R26 R0 K50   ; R26 := R0["mUser"]
223 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 230
224 [-]: JMP       230          ; PC := 230
225 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["mPanelList"]
226 [-]: GETTABLE  R26 R26 R19  ; R26 := R26[R19]
227 [-]: SELF      R26 R26 K51  ; R27 := R26; R26 := R26["0xE707B98B"]
228 [-]: GETTABLE  R28 R24 K38  ; R28 := R24[3]
229 [-]: CALL      R26 3 1      ; R26(R27,R28)
230 [-]: RETURN    R0 1         ; return 
231 [-]: JMP       374          ; PC := 374
232 [-]: TEST      R23 1        ; if R23 then PC := 374
233 [-]: JMP       374          ; PC := 374
234 [-]: MOVE      R26 R19      ; R26 := R19
235 [-]: GETTABLE  R27 R0 K50   ; R27 := R0["mUser"]
236 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 239
237 [-]: JMP       239          ; PC := 239
238 [-]: MOVE      R26 R18      ; R26 := R18
239 [-]: GETUPVAL  R27 U1       ; R27 := U1
240 [-]: MOVE      R28 R26      ; R28 := R26
241 [-]: LOADNIL   R29 R29      ; R29 := nil
242 [-]: MOVE      R30 R1       ; R30 := R1
243 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
244 [-]: GETTABLE  R28 R0 K50   ; R28 := R0["mUser"]
245 [-]: EQ        1 R18 R28    ; if R18 == R28 then PC := 256
246 [-]: JMP       256          ; PC := 256
247 [-]: GETGLOBAL R28 K32      ; R28 := _G
248 [-]: GETTABLE  R28 R28 K52  ; R28 := R28["mDoNotDisturb"]
249 [-]: TEST      R28 0        ; if not R28 then PC := 256
250 [-]: JMP       256          ; PC := 256
251 [-]: GETGLOBAL R28 K3       ; R28 := 0x400E7765
252 [-]: MOVE      R29 R27      ; R29 := R27
253 [-]: CALL      R28 2 2      ; R28 := R28(R29)
254 [-]: TEST      R28 1        ; if R28 then PC := 307
255 [-]: JMP       307          ; PC := 307
256 [-]: GETGLOBAL R28 K3       ; R28 := 0x400E7765
257 [-]: MOVE      R29 R27      ; R29 := R27
258 [-]: CALL      R28 2 2      ; R28 := R28(R29)
259 [-]: TEST      R28 0        ; if not R28 then PC := 291
260 [-]: JMP       291          ; PC := 291
261 [-]: EQ        1 R22 K10    ; if R22 == nil then PC := 278
262 [-]: JMP       278          ; PC := 278
263 [-]: GETUPVAL  R28 U2       ; R28 := U2
264 [-]: MOVE      R29 R1       ; R29 := R1
265 [-]: MOVE      R30 R22      ; R30 := R22
266 [-]: LOADK     R31 K35      ; R31 := ","
267 [-]: MOVE      R32 R18      ; R32 := R18
268 [-]: CONCAT    R30 R30 R32  ; R30 := R30 .. R31 .. R32
269 [-]: MOVE      R31 R1       ; R31 := R1
270 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
271 [-]: GETUPVAL  R28 U1       ; R28 := U1
272 [-]: MOVE      R29 R26      ; R29 := R26
273 [-]: LOADNIL   R30 R30      ; R30 := nil
274 [-]: MOVE      R31 R1       ; R31 := R1
275 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
276 [-]: MOVE      R27 R28      ; R27 := R28
277 [-]: JMP       307          ; PC := 307
278 [-]: GETGLOBAL R28 K53      ; R28 := gMatchingService
279 [-]: SELF      R28 R28 K54  ; R29 := R28; R28 := R28["0xF0C493C"]
280 [-]: CALL      R28 2 2      ; R28 := R28(R29)
281 [-]: GETGLOBAL R29 K3       ; R29 := 0x400E7765
282 [-]: MOVE      R30 R28      ; R30 := R28
283 [-]: CALL      R29 2 2      ; R29 := R29(R30)
284 [-]: TEST      R29 1        ; if R29 then PC := 307
285 [-]: JMP       307          ; PC := 307
286 [-]: SELF      R29 R28 K55  ; R30 := R28; R29 := R28["0x535FF489"]
287 [-]: MOVE      R31 R18      ; R31 := R18
288 [-]: LOADK     R32 K56      ; R32 := "PrivateConvoPlayerIDResultIncoming"
289 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
290 [-]: JMP       307          ; PC := 307
291 [-]: GETGLOBAL R29 K3       ; R29 := 0x400E7765
292 [-]: MOVE      R30 R27      ; R30 := R27
293 [-]: CALL      R29 2 2      ; R29 := R29(R30)
294 [-]: TEST      R29 1        ; if R29 then PC := 307
295 [-]: JMP       307          ; PC := 307
296 [-]: SELF      R29 R27 K57  ; R30 := R27; R29 := R27["0x4313BA6"]
297 [-]: MOVE      R31 R18      ; R31 := R18
298 [-]: LOADK     R32 K58      ; R32 := ": "
299 [-]: MOVE      R33 R2       ; R33 := R2
300 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
301 [-]: GETTABLE  R32 R27 K59  ; R32 := R27["MESSAGE_TYPE_FRIEND"]
302 [-]: MOVE      R33 R20      ; R33 := R20
303 [-]: MOVE      R34 R0       ; R34 := R0
304 [-]: MOVE      R35 R0       ; R35 := R0
305 [-]: MOVE      R36 R18      ; R36 := R18
306 [-]: CALL      R29 8 1      ; R29(R30,R31,R32,R33,R34,R35,R36)
307 [-]: GETTABLE  R29 R0 K60   ; R29 := R0["User"]
308 [-]: EQ        1 R18 R29    ; if R18 == R29 then PC := 336
309 [-]: JMP       336          ; PC := 336
310 [-]: GETGLOBAL R29 K32      ; R29 := _G
311 [-]: GETTABLE  R29 R29 K52  ; R29 := R29["mDoNotDisturb"]
312 [-]: TEST      R29 0        ; if not R29 then PC := 336
313 [-]: JMP       336          ; PC := 336
314 [-]: GETGLOBAL R29 K3       ; R29 := 0x400E7765
315 [-]: MOVE      R30 R27      ; R30 := R27
316 [-]: CALL      R29 2 2      ; R29 := R29(R30)
317 [-]: TEST      R29 0        ; if not R29 then PC := 336
318 [-]: JMP       336          ; PC := 336
319 [-]: GETGLOBAL R29 K53      ; R29 := gMatchingService
320 [-]: SELF      R29 R29 K54  ; R30 := R29; R29 := R29["0xF0C493C"]
321 [-]: CALL      R29 2 2      ; R29 := R29(R30)
322 [-]: GETGLOBAL R30 K3       ; R30 := 0x400E7765
323 [-]: MOVE      R31 R29      ; R31 := R29
324 [-]: CALL      R30 2 2      ; R30 := R30(R31)
325 [-]: TEST      R30 1        ; if R30 then PC := 336
326 [-]: JMP       336          ; PC := 336
327 [-]: SELF      R30 R29 K61  ; R31 := R29; R30 := R29["0x610E964D"]
328 [-]: GETGLOBAL R32 K17      ; R32 := mMovie
329 [-]: SELF      R32 R32 K18  ; R33 := R32; R32 := R32["0x5DB0BD4"]
330 [-]: LOADK     R34 K62      ; R34 := "/Lotus/Language/SystemMessages/Chat_AutoReply"
331 [-]: MOVE      R35 R0       ; R35 := R0
332 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
333 [-]: MOVE      R33 R18      ; R33 := R18
334 [-]: MOVE      R34 R0       ; R34 := R0
335 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
336 [-]: GETUPVAL  R30 U3       ; R30 := U3
337 [-]: TEST      R30 0        ; if not R30 then PC := 373
338 [-]: JMP       373          ; PC := 373
339 [-]: GETTABLE  R30 R0 K50   ; R30 := R0["mUser"]
340 [-]: EQ        1 R18 R30    ; if R18 == R30 then PC := 373
341 [-]: JMP       373          ; PC := 373
342 [-]: GETGLOBAL R30 K32      ; R30 := _G
343 [-]: GETTABLE  R30 R30 K52  ; R30 := R30["mDoNotDisturb"]
344 [-]: TEST      R30 1        ; if R30 then PC := 373
345 [-]: JMP       373          ; PC := 373
346 [-]: SELF      R30 R0 K63   ; R31 := R0; R30 := R0["0x18AAE1E3"]
347 [-]: CALL      R30 2 2      ; R30 := R30(R31)
348 [-]: GETGLOBAL R31 K3       ; R31 := 0x400E7765
349 [-]: MOVE      R32 R30      ; R32 := R30
350 [-]: CALL      R31 2 2      ; R31 := R31(R32)
351 [-]: TEST      R31 1        ; if R31 then PC := 373
352 [-]: JMP       373          ; PC := 373
353 [-]: GETGLOBAL R31 K3       ; R31 := 0x400E7765
354 [-]: MOVE      R32 R27      ; R32 := R27
355 [-]: CALL      R31 2 2      ; R31 := R31(R32)
356 [-]: TEST      R31 1        ; if R31 then PC := 373
357 [-]: JMP       373          ; PC := 373
358 [-]: GETTABLE  R31 R30 K64  ; R31 := R30["mChannelName"]
359 [-]: GETTABLE  R32 R27 K64  ; R32 := R27["mChannelName"]
360 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 373
361 [-]: JMP       373          ; PC := 373
362 [-]: SELF      R31 R30 K57  ; R32 := R30; R31 := R30["0x4313BA6"]
363 [-]: MOVE      R33 R18      ; R33 := R18
364 [-]: LOADK     R34 K58      ; R34 := ": "
365 [-]: MOVE      R35 R2       ; R35 := R2
366 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
367 [-]: GETTABLE  R34 R30 K65  ; R34 := R30["MESSAGE_TYPE_INGAME_WHISPER"]
368 [-]: MOVE      R35 R20      ; R35 := R20
369 [-]: MOVE      R36 R0       ; R36 := R0
370 [-]: MOVE      R37 R0       ; R37 := R0
371 [-]: MOVE      R38 R18      ; R38 := R18
372 [-]: CALL      R31 8 1      ; R31(R32,R33,R34,R35,R36,R37,R38)
373 [-]: RETURN    R0 1         ; return 
374 [-]: GETGLOBAL R31 K1       ; R31 := 0xECFDD17
375 [-]: GETTABLE  R32 R0 K2    ; R32 := R0["mPanelList"]
376 [-]: CALL      R31 2 4      ; R31,R32,R33 := R31(R32)
377 [-]: JMP       392          ; PC := 392
378 [-]: GETGLOBAL R36 K3       ; R36 := 0x400E7765
379 [-]: MOVE      R37 R35      ; R37 := R35
380 [-]: CALL      R36 2 2      ; R36 := R36(R37)
381 [-]: TEST      R36 1        ; if R36 then PC := 392
382 [-]: JMP       392          ; PC := 392
383 [-]: SELF      R36 R35 K4   ; R37 := R35; R36 := R35["0xA7D41027"]
384 [-]: MOVE      R38 R18      ; R38 := R18
385 [-]: MOVE      R39 R19      ; R39 := R19
386 [-]: MOVE      R40 R2       ; R40 := R2
387 [-]: MOVE      R41 R20      ; R41 := R20
388 [-]: MOVE      R42 R0       ; R42 := R0
389 [-]: MOVE      R43 R0       ; R43 := R0
390 [-]: MOVE      R44 R21      ; R44 := R21
391 [-]: CALL      R36 9 1      ; R36(R37,R38,R39,R40,R41,R42,R43,R44)
392 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 378; R33 := R34 end
393 [-]: JMP       378          ; PC := 378
394 [-]: RETURN    R0 1         ; return 


; Function #123.38:
;
; Name:            
; Defined at line: 7610
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: CALL      R2 1 1       ; R2()
  6 [-]: GETGLOBAL R2 K0        ; R2 := string
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xDE44F664"]
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: LOADK     R4 K2        ; R4 := "#"
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 37
 12 [-]: JMP       37           ; PC := 37
 13 [-]: GETGLOBAL R2 K4        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["WareframeMiniGameChatCallback"]
 15 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 37
 16 [-]: JMP       37           ; PC := 37
 17 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 18 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x5DB0BD4"]
 19 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/Chat_FriendOffline"
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 22 [-]: SETTABLE  R6 K9 R1     ; R6["FRIEND"] := R1
 23 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 24 [-]: GETGLOBAL R3 K10       ; R3 := 0x400E7765
 25 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["mPanelList"]
 26 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mActivePanelName"]
 27 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["mPanelList"]
 32 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mActivePanelName"]
 33 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 34 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xAE78D1F"]
 35 [-]: MOVE      R5 R2        ; R5 := R2
 36 [-]: CALL      R3 3 1       ; R3(R4,R5)
 37 [-]: RETURN    R0 1         ; return 


; Function #123.39:
;
; Name:            
; Defined at line: 7626
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xD1E7609B
  2 [-]: LOADK     R4 K1        ; R4 := ","
  3 [-]: MOVE      R5 R2        ; R5 := R2
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K2        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0xDE44F664"]
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: LOADK     R6 K4        ; R6 := "#"
  9 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 10 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R4 R1 K6     ; R5 := R1; R4 := R1["0x7B782033"]
 13 [-]: LOADK     R6 K7        ; R6 := 2
 14 [-]: LOADK     R7 K8        ; R7 := -1
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: MOVE      R1 R4        ; R1 := R4
 17 [-]: GETGLOBAL R4 K2        ; R4 := string
 18 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x7B782033"]
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: LOADK     R6 K9        ; R6 := 1
 21 [-]: LOADK     R7 K9        ; R7 := 1
 22 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 23 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["0x960E8AD7"]
 24 [-]: CALL      R5 1 2       ; R5 := R5()
 25 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: GETGLOBAL R5 K11       ; R5 := 0x400E7765
 30 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mPanelList"]
 31 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 1         ; if R5 then PC := 69
 34 [-]: JMP       69           ; PC := 69
 35 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mPanelList"]
 36 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 37 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["mInitialPopulationDone"]
 38 [-]: TEST      R5 1         ; if R5 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mPanelList"]
 41 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 42 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5["0x81219848"]
 43 [-]: MOVE      R7 R1        ; R7 := R1
 44 [-]: CALL      R5 3 1       ; R5(R6,R7)
 45 [-]: JMP       69           ; PC := 69
 46 [-]: LEN       R5 R3        ; R5 := # R3
 47 [-]: LOADK     R6 K9        ; R6 := 1
 48 [-]: MOVE      R7 R5        ; R7 := R5
 49 [-]: LOADK     R8 K9        ; R8 := 1
 50 [-]: FORPREP   R6 68        ; R6 -= R8; PC := 68
 51 [-]: TEST      R4 0         ; if not R4 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETUPVAL  R10 U0       ; R10 := U0
 54 [-]: GETTABLE  R11 R3 R9    ; R11 := R3[R9]
 55 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 56 [-]: TEST      R10 0        ; if not R10 then PC := 68
 57 [-]: JMP       68           ; PC := 68
 58 [-]: GETTABLE  R10 R0 K12   ; R10 := R0["mPanelList"]
 59 [-]: GETTABLE  R10 R10 R1   ; R10 := R10[R1]
 60 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0xAC4AB24D"]
 61 [-]: GETTABLE  R12 R3 R9    ; R12 := R3[R9]
 62 [-]: MOVE      R13 R1       ; R13 := R1
 63 [-]: LT        1 R9 R5      ; if R9 < R5 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: MOVE      R14 R0       ; R14 := R0
 66 [-]: MOVE      R14 R1       ; R14 := R1
 67 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 68 [-]: FORLOOP   R6 51        ; R6 += R8; if R6 <= R7 then begin PC := 51; R9 := R6 end
 69 [-]: RETURN    R0 1         ; return 


; Function #123.40:
;
; Name:            
; Defined at line: 7651
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := "G"
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #123.41:
;
; Name:            
; Defined at line: 7655
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := "#"
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: GETGLOBAL R4 K1        ; R4 := string
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0x639C642A"]
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0xB3DD1645
  6 [-]: CALL      R5 1 2       ; R5 := R5()
  7 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x5EC7A3D2"]
  8 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
  9 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 10 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: TEST      R3 0         ; if not R3 then PC := 28
 13 [-]: JMP       28           ; PC := 28
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: TEST      R4 1         ; if R4 then PC := 28
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x2C10FB71"]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: GETUPVAL  R6 U1        ; R6 := U1
 24 [-]: SELF      R7 R4 K7     ; R8 := R4; R7 := R4["0x449637EF"]
 25 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 26 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 27 [-]: CONCAT    R2 R5 R6     ; R2 := R5 .. R6
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: RETURN    R0 1         ; return 


; Function #123.42:
;
; Name:            
; Defined at line: 7670
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x5AB07477"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x24731BA8"]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #123.43:
;
; Name:            
; Defined at line: 7674
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "S"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.44:
;
; Name:            
; Defined at line: 7679
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  3 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/Chat_SquadTitle"
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xDBE013EB"]
  7 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["CHANNEL_ENTER"]
  8 [-]: MOVE      R6 R1        ; R6 := R1
  9 [-]: MOVE      R7 R2        ; R7 := R2
 10 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["CHANNEL_SESSION"]
 11 [-]: CALL      R3 6 2       ; R3 := R3(R4,R5,R6,R7,R8)
 12 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mPanelShortcuts"]
 13 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["CHANNEL_SESSION"]
 14 [-]: SETTABLE  R4 R5 R1     ; R4[R5] := R1
 15 [-]: GETGLOBAL R4 K7        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 28
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETGLOBAL R4 K8        ; R4 := gMatchingService
 21 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0xA99F3BEF"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R4 R0 K10    ; R5 := R0; R4 := R0["0xE2A2E3AC"]
 26 [-]: MOVE      R6 R3        ; R6 := R3
 27 [-]: CALL      R4 3 1       ; R4(R5,R6)
 28 [-]: RETURN    R0 1         ; return 


; Function #123.45:
;
; Name:            
; Defined at line: 7689
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := gMatchingService
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xD5E03646"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0xA57F2EB3"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: MOVE      R1 R3        ; R1 := R3
 12 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mCachedSessionID"]
 13 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 87
 14 [-]: JMP       87           ; PC := 87
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 16 [-]: LOADK     R4 K6        ; R4 := "CHATREDUX - SessionId does not match cached id;"
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mCachedSessionID"]
 19 [-]: EQ        0 R3 K7      ; if R3 ~= nil then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 22 [-]: LOADK     R4 K8        ; R4 := "CHATREDUX - No cached session id."
 23 [-]: CALL      R3 2 1       ; R3(R4)
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 26 [-]: LOADK     R4 K9        ; R4 := "CHATREDUX - CachedSessionID: "
 27 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mCachedSessionID"]
 28 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 33 [-]: LOADK     R4 K10       ; R4 := "CHATREDUX - No session id."
 34 [-]: CALL      R3 2 1       ; R3(R4)
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 37 [-]: LOADK     R4 K11       ; R4 := "CHATREDUX - SessionID: "
 38 [-]: MOVE      R5 R1        ; R5 := R1
 39 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 40 [-]: CALL      R3 2 1       ; R3(R4)
 41 [-]: CLOSURE   R3 0         ; R3 := closure(Function #123.45.1)
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mCachedSessionID"]
 44 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 66
 45 [-]: JMP       66           ; PC := 66
 46 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mCachedSessionID"]
 47 [-]: EQ        1 R4 K12     ; if R4 == "" then PC := 66
 48 [-]: JMP       66           ; PC := 66
 49 [-]: GETGLOBAL R4 K5        ; R4 := 0x93B1256B
 50 [-]: LOADK     R5 K13       ; R5 := "CHATREDUX - CachedSessionID2: "
 51 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mCachedSessionID"]
 52 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 53 [-]: CALL      R4 2 1       ; R4(R5)
 54 [-]: MOVE      R4 R3        ; R4 := R3
 55 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mCachedSessionID"]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: SETTABLE  R0 K14 R4    ; R0["mCachedOldSessionName"] := R4
 58 [-]: SELF      R4 R0 K15    ; R5 := R0; R4 := R0["0xDBE013EB"]
 59 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["CHANNEL_EXIT"]
 60 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["mCachedOldSessionName"]
 61 [-]: LOADK     R8 K12       ; R8 := ""
 62 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 63 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mPanelShortcuts"]
 64 [-]: GETTABLE  R5 R0 K18    ; R5 := R0["CHANNEL_SESSION"]
 65 [-]: SETTABLE  R4 R5 K7     ; R4[R5] := nil
 66 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 86
 67 [-]: JMP       86           ; PC := 86
 68 [-]: EQ        1 R1 K12     ; if R1 == "" then PC := 86
 69 [-]: JMP       86           ; PC := 86
 70 [-]: GETGLOBAL R4 K5        ; R4 := 0x93B1256B
 71 [-]: LOADK     R5 K19       ; R5 := "CHATREDUX - SessionID2: "
 72 [-]: MOVE      R6 R1        ; R6 := R1
 73 [-]: LOADK     R7 K20       ; R7 := " - "
 74 [-]: GETGLOBAL R8 K21       ; R8 := 0x9FAED6BC
 75 [-]: MOVE      R9 R1        ; R9 := R1
 76 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 77 [-]: CONCAT    R5 R5 R8     ; R5 := R5 .. R6 .. R7 .. R8
 78 [-]: CALL      R4 2 1       ; R4(R5)
 79 [-]: MOVE      R4 R3        ; R4 := R3
 80 [-]: MOVE      R5 R1        ; R5 := R1
 81 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 82 [-]: SETTABLE  R0 K22 R4    ; R0["mCachedCurSessionName"] := R4
 83 [-]: SELF      R4 R0 K23    ; R5 := R0; R4 := R0["0xB5BDFFC3"]
 84 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mCachedCurSessionName"]
 85 [-]: CALL      R4 3 1       ; R4(R5,R6)
 86 [-]: SETTABLE  R0 K4 R1     ; R0["mCachedSessionID"] := R1
 87 [-]: LOADK     R4 K24       ; R4 := 1
 88 [-]: GETGLOBAL R5 K25       ; R5 := gPromotedToHost
 89 [-]: TEST      R5 1         ; if R5 then PC := 118
 90 [-]: JMP       118          ; PC := 118
 91 [-]: GETGLOBAL R6 K2        ; R6 := 0x400E7765
 92 [-]: GETGLOBAL R7 K26       ; R7 := gGameRules
 93 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 94 [-]: TEST      R6 1         ; if R6 then PC := 118
 95 [-]: JMP       118          ; PC := 118
 96 [-]: GETGLOBAL R6 K26       ; R6 := gGameRules
 97 [-]: SELF      R6 R6 K27    ; R7 := R6; R6 := R6["0x8B598ED4"]
 98 [-]: GETGLOBAL R8 K28       ; R8 := gLotusBaseGameRulesType
 99 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
100 [-]: TEST      R6 0         ; if not R6 then PC := 118
101 [-]: JMP       118          ; PC := 118
102 [-]: GETGLOBAL R6 K26       ; R6 := gGameRules
103 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6["0x8BA0C0A"]
104 [-]: CALL      R6 2 2       ; R6 := R6(R7)
105 [-]: MOVE      R4 R6        ; R4 := R6
106 [-]: EQ        0 R4 K24     ; if R4 ~= 1 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: GETTABLE  R6 R0 K30    ; R6 := R0["mCachedHostHistoryCount"]
109 [-]: LT        0 K24 R6     ; if 1 >= R6 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: SETTABLE  R0 K30 K24   ; R0["mCachedHostHistoryCount"] := 1
112 [-]: JMP       118          ; PC := 118
113 [-]: GETTABLE  R6 R0 K30    ; R6 := R0["mCachedHostHistoryCount"]
114 [-]: LT        1 R6 R4      ; if R6 < R4 then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: MOVE      R5 R0        ; R5 := R0
117 [-]: MOVE      R5 R1        ; R5 := R1
118 [-]: TEST      R5 0         ; if not R5 then PC := 142
119 [-]: JMP       142          ; PC := 142
120 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mCachedCurSessionName"]
121 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["mCachedOldSessionName"]
122 [-]: EQ        1 R6 K12     ; if R6 == "" then PC := 142
123 [-]: JMP       142          ; PC := 142
124 [-]: EQ        1 R7 K12     ; if R7 == "" then PC := 142
125 [-]: JMP       142          ; PC := 142
126 [-]: SETTABLE  R0 K30 R4    ; R0["mCachedHostHistoryCount"] := R4
127 [-]: SETTABLE  R0 K22 K12   ; R0["mCachedCurSessionName"] := ""
128 [-]: SETTABLE  R0 K14 K12   ; R0["mCachedOldSessionName"] := ""
129 [-]: SELF      R8 R0 K15    ; R9 := R0; R8 := R0["0xDBE013EB"]
130 [-]: GETTABLE  R10 R0 K16   ; R10 := R0["CHANNEL_EXIT"]
131 [-]: MOVE      R11 R6       ; R11 := R6
132 [-]: LOADK     R12 K12      ; R12 := ""
133 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
134 [-]: GETUPVAL  R8 U0        ; R8 := U0
135 [-]: SELF      R8 R8 K31    ; R9 := R8; R8 := R8["0x44173DE3"]
136 [-]: MOVE      R10 R6       ; R10 := R6
137 [-]: MOVE      R11 R7       ; R11 := R7
138 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
139 [-]: SELF      R8 R0 K23    ; R9 := R0; R8 := R0["0xB5BDFFC3"]
140 [-]: MOVE      R10 R6       ; R10 := R6
141 [-]: CALL      R8 3 1       ; R8(R9,R10)
142 [-]: RETURN    R0 1         ; return 


; Function #123.45.1:
;
; Name:            
; Defined at line: 7712
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "#"
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x960E8AD7"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x9FAED6BC
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #123.46:
;
; Name:            
; Defined at line: 7767
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := gMatchingService
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xA99F3BEF"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCachedPersistentRelayHubActive"]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R2 K3        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["HubChannel"]
 11 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mCachedHubID"]
 15 [-]: SETTABLE  R2 K4 R3     ; R2["HubChannel"] := R3
 16 [-]: GETGLOBAL R2 K3        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["HubChannel"]
 18 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mCachedHubID"]
 21 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: MOVE      R2 R1        ; R2 := R1
 25 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["UI_MODE_IN_SPACE_HUB"]
 28 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 37
 29 [-]: JMP       37           ; PC := 37
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETUPVAL  R4 U0        ; R4 := U0
 32 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["UI_MODE_IN_SPACE_HUB"]
 33 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: TEST      R1 0         ; if not R1 then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCachedPersistentRelayHubActive"]
 38 [-]: EQ        1 R3 R1      ; if R3 == R1 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETGLOBAL R3 K3        ; R3 := _T
 41 [-]: SETTABLE  R3 K4 K5     ; R3["HubChannel"] := nil
 42 [-]: MOVE      R2 R1        ; R2 := R1
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 45 [-]: GETUPVAL  R4 U1        ; R4 := U1
 46 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 49 [-]: GETUPVAL  R4 U0        ; R4 := U0
 50 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["UI_MODE_IN_GAME"]
 51 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: MOVE      R3 R0        ; R3 := R0
 54 [-]: MOVE      R3 R1        ; R3 := R1
 55 [-]: SETTABLE  R0 K9 R3     ; R0["mFocusHubOnActive"] := R3
 56 [-]: GETUPVAL  R3 U1        ; R3 := U1
 57 [-]: SETTABLE  R0 K7 R3     ; R0["mCachedUIMode"] := R3
 58 [-]: SETTABLE  R0 K2 R1     ; R0["mCachedPersistentRelayHubActive"] := R1
 59 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCachedPersistentRelayHubActive"]
 60 [-]: TEST      R3 0         ; if not R3 then PC := 79
 61 [-]: JMP       79           ; PC := 79
 62 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 63 [-]: GETUPVAL  R4 U0        ; R4 := U0
 64 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["UI_MODE_IN_GAME"]
 65 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 79
 66 [-]: JMP       79           ; PC := 79
 67 [-]: GETGLOBAL R3 K3        ; R3 := _T
 68 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["HubChannel"]
 69 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 79
 70 [-]: JMP       79           ; PC := 79
 71 [-]: GETGLOBAL R3 K0        ; R3 := gMatchingService
 72 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x96E7D347"]
 73 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 74 [-]: EQ        1 R3 K12     ; if R3 == "" then PC := 79
 75 [-]: JMP       79           ; PC := 79
 76 [-]: GETGLOBAL R4 K3        ; R4 := _T
 77 [-]: SETTABLE  R4 K4 R3     ; R4["HubChannel"] := R3
 78 [-]: MOVE      R2 R1        ; R2 := R1
 79 [-]: TEST      R2 1         ; if R2 then PC := 99
 80 [-]: JMP       99           ; PC := 99
 81 [-]: GETUPVAL  R4 U1        ; R4 := U1
 82 [-]: GETUPVAL  R5 U0        ; R5 := U0
 83 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["UI_MODE_IN_SPACE_HUB"]
 84 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 93
 85 [-]: JMP       93           ; PC := 93
 86 [-]: GETUPVAL  R4 U1        ; R4 := U1
 87 [-]: GETUPVAL  R5 U0        ; R5 := U0
 88 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["UI_MODE_IN_DOJO"]
 89 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 93
 90 [-]: JMP       93           ; PC := 93
 91 [-]: TEST      R1 0         ; if not R1 then PC := 98
 92 [-]: JMP       98           ; PC := 98
 93 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mCachedHubID"]
 94 [-]: GETGLOBAL R5 K3        ; R5 := _T
 95 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["HubChannel"]
 96 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 99
 97 [-]: JMP       99           ; PC := 99
 98 [-]: RETURN    R0 1         ; return 
 99 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mIsScenarioChannel"]
100 [-]: TEST      R4 1         ; if R4 then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mCachedPersistentRelayHubActive"]
103 [-]: SETTABLE  R0 K14 R4    ; R0["mIsScenarioChannel"] := R4
104 [-]: CLOSURE   R4 0         ; R4 := closure(Function #123.46.1)
105 [-]: MOVE      R0 R0        ; R0 := R0
106 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mCachedHubID"]
107 [-]: EQ        1 R5 K5      ; if R5 == nil then PC := 120
108 [-]: JMP       120          ; PC := 120
109 [-]: MOVE      R5 R4        ; R5 := R4
110 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mCachedHubID"]
111 [-]: CALL      R5 2 2       ; R5 := R5(R6)
112 [-]: SELF      R6 R0 K15    ; R7 := R0; R6 := R0["0xDBE013EB"]
113 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["CHANNEL_EXIT"]
114 [-]: MOVE      R9 R5        ; R9 := R5
115 [-]: LOADK     R10 K12      ; R10 := ""
116 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
117 [-]: GETTABLE  R6 R0 K17    ; R6 := R0["mPanelShortcuts"]
118 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["CHANNEL_HUB"]
119 [-]: SETTABLE  R6 R7 K5     ; R6[R7] := nil
120 [-]: GETGLOBAL R6 K3        ; R6 := _T
121 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["HubChannel"]
122 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 180
123 [-]: JMP       180          ; PC := 180
124 [-]: LOADNIL   R6 R6        ; R6 := nil
125 [-]: GETGLOBAL R7 K19       ; R7 := string
126 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["0xDE44F664"]
127 [-]: GETGLOBAL R8 K19       ; R8 := string
128 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["0xBDD0D625"]
129 [-]: GETGLOBAL R9 K3        ; R9 := _T
130 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["HubChannel"]
131 [-]: CALL      R8 2 2       ; R8 := R8(R9)
132 [-]: LOADK     R9 K22       ; R9 := "scenario"
133 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
134 [-]: TEST      R7 0         ; if not R7 then PC := 138
135 [-]: JMP       138          ; PC := 138
136 [-]: LOADK     R6 K23       ; R6 := "/Lotus/Language/Game/Scenario"
137 [-]: JMP       144          ; PC := 144
138 [-]: GETUPVAL  R7 U2        ; R7 := U2
139 [-]: TEST      R7 0         ; if not R7 then PC := 143
140 [-]: JMP       143          ; PC := 143
141 [-]: LOADK     R6 K24       ; R6 := "/Lotus/Language/Game/Dojo"
142 [-]: JMP       144          ; PC := 144
143 [-]: LOADK     R6 K25       ; R6 := "/Lotus/Language/Menu/Chat_HubTitle"
144 [-]: GETGLOBAL R7 K26       ; R7 := mMovie
145 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7["0x5DB0BD4"]
146 [-]: MOVE      R9 R6        ; R9 := R6
147 [-]: MOVE      R10 R0       ; R10 := R0
148 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
149 [-]: MOVE      R6 R7        ; R6 := R7
150 [-]: MOVE      R7 R4        ; R7 := R4
151 [-]: GETGLOBAL R8 K3        ; R8 := _T
152 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["HubChannel"]
153 [-]: CALL      R7 2 2       ; R7 := R7(R8)
154 [-]: SELF      R8 R0 K15    ; R9 := R0; R8 := R0["0xDBE013EB"]
155 [-]: GETTABLE  R10 R0 K28   ; R10 := R0["CHANNEL_ENTER"]
156 [-]: MOVE      R11 R7       ; R11 := R7
157 [-]: MOVE      R12 R6       ; R12 := R6
158 [-]: GETTABLE  R13 R0 K18   ; R13 := R0["CHANNEL_HUB"]
159 [-]: CALL      R8 6 2       ; R8 := R8(R9,R10,R11,R12,R13)
160 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["mPanelShortcuts"]
161 [-]: GETTABLE  R10 R0 K18   ; R10 := R0["CHANNEL_HUB"]
162 [-]: SETTABLE  R9 R10 R7    ; R9[R10] := R7
163 [-]: GETGLOBAL R9 K29       ; R9 := 0x400E7765
164 [-]: MOVE      R10 R8       ; R10 := R8
165 [-]: CALL      R9 2 2       ; R9 := R9(R10)
166 [-]: TEST      R9 1         ; if R9 then PC := 180
167 [-]: JMP       180          ; PC := 180
168 [-]: GETTABLE  R9 R8 K30    ; R9 := R8["mIsActive"]
169 [-]: TEST      R9 1         ; if R9 then PC := 180
170 [-]: JMP       180          ; PC := 180
171 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mCachedHubID"]
172 [-]: EQ        0 R9 K5      ; if R9 ~= nil then PC := 180
173 [-]: JMP       180          ; PC := 180
174 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mFocusHubOnActive"]
175 [-]: TEST      R9 0         ; if not R9 then PC := 180
176 [-]: JMP       180          ; PC := 180
177 [-]: SELF      R9 R0 K31    ; R10 := R0; R9 := R0["0xE2A2E3AC"]
178 [-]: MOVE      R11 R8       ; R11 := R8
179 [-]: CALL      R9 3 1       ; R9(R10,R11)
180 [-]: GETGLOBAL R9 K3        ; R9 := _T
181 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["HubChannel"]
182 [-]: SETTABLE  R0 K6 R9     ; R0["mCachedHubID"] := R9
183 [-]: RETURN    R0 1         ; return 


; Function #123.46.1:
;
; Name:            
; Defined at line: 7805
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 K0        ; R1 := "#"
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1278933D"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: LOADK     R3 K2        ; R3 := "_"
  7 [-]: GETGLOBAL R4 K3        ; R4 := 0x9FAED6BC
  8 [-]: MOVE      R5 R0        ; R5 := R0
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: CONCAT    R1 R1 R4     ; R1 := R1 .. R2 .. R3 .. R4
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #123.47:
;
; Name:            
; Defined at line: 7840
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := "C"
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #123.48:
;
; Name:            
; Defined at line: 7844
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "D"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.49:
;
; Name:            
; Defined at line: 7848
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "R"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.50:
;
; Name:            
; Defined at line: 7852
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "T"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.51:
;
; Name:            
; Defined at line: 7856
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "Q"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.52:
;
; Name:            
; Defined at line: 7860
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "A"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.53:
;
; Name:            
; Defined at line: 7864
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "F"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #123.54:
;
; Name:            
; Defined at line: 7868
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["HubChannel"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETGLOBAL R1 K2        ; R1 := string
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xDE44F664"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := string
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xBDD0D625"]
  9 [-]: GETGLOBAL R3 K0        ; R3 := _T
 10 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["HubChannel"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: LOADK     R3 K5        ; R3 := "scenario"
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: TEST      R1 1         ; if R1 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: TEST      R0 0         ; if not R0 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["mIsScenarioChannel"]
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADK     R1 K7        ; R1 := "O"
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0xF81722A2"]
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UI_MODE_IN_DOJO"]
 28 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: LOADK     R3 K10       ; R3 := "J"
 33 [-]: LOADK     R4 K11       ; R4 := "H"
 34 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 35 [-]: RETURN    R1 2         ; return R1
 36 [-]: RETURN    R0 1         ; return 


; Function #123.55:
;
; Name:            
; Defined at line: 7875
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5C6E2C7A"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mPendingCouncilChannelName"]
 16 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 49
 17 [-]: JMP       49           ; PC := 49
 18 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mIsConnected"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mVisualMode"]
 22 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 49
 24 [-]: JMP       49           ; PC := 49
 25 [-]: LOADK     R2 K7        ; R2 := "#"
 26 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mActivePanelName"]
 27 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 28 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mPendingCouncilChannelName"]
 29 [-]: EQ        1 R3 R2      ; if R3 == R2 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETGLOBAL R3 K9        ; R3 := _G
 32 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["hasJoinedCouncilChat"]
 33 [-]: TEST      R3 0         ; if not R3 then PC := 49
 34 [-]: JMP       49           ; PC := 49
 35 [-]: GETGLOBAL R3 K11       ; R3 := gMatchingService
 36 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xF0C493C"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 39 [-]: MOVE      R5 R3        ; R5 := R3
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3["0x21939A99"]
 44 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mPendingCouncilChannelName"]
 45 [-]: CALL      R4 3 1       ; R4(R5,R6)
 46 [-]: SETTABLE  R0 K2 K3     ; R0["mPendingCouncilChannelName"] := nil
 47 [-]: GETGLOBAL R4 K9        ; R4 := _G
 48 [-]: SETTABLE  R4 K10 K14   ; R4["hasJoinedCouncilChat"] := "0x1"
 49 [-]: GETTABLE  R4 R0 K15    ; R4 := R0["mCachedIsCounselor"]
 50 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 88
 51 [-]: JMP       88           ; PC := 88
 52 [-]: CLOSURE   R4 0         ; R4 := closure(Function #123.55.1)
 53 [-]: MOVE      R0 R0        ; R0 := R0
 54 [-]: GETTABLE  R5 R0 K15    ; R5 := R0["mCachedIsCounselor"]
 55 [-]: TEST      R5 0         ; if not R5 then PC := 68
 56 [-]: JMP       68           ; PC := 68
 57 [-]: MOVE      R5 R4        ; R5 := R4
 58 [-]: LOADK     R6 K16       ; R6 := ""
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: SELF      R6 R0 K17    ; R7 := R0; R6 := R0["0xDBE013EB"]
 61 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["CHANNEL_EXIT"]
 62 [-]: MOVE      R9 R5        ; R9 := R5
 63 [-]: LOADK     R10 K16      ; R10 := ""
 64 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 65 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["mPanelShortcuts"]
 66 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["CHANNEL_COUNCIL"]
 67 [-]: SETTABLE  R6 R7 K3     ; R6[R7] := nil
 68 [-]: TEST      R1 0         ; if not R1 then PC := 87
 69 [-]: JMP       87           ; PC := 87
 70 [-]: MOVE      R6 R4        ; R6 := R4
 71 [-]: LOADK     R7 K16       ; R7 := ""
 72 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 73 [-]: GETGLOBAL R7 K21       ; R7 := mMovie
 74 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 75 [-]: LOADK     R9 K23       ; R9 := "/Lotus/Language/Menu/Chat_CouncilTitle"
 76 [-]: MOVE      R10 R0       ; R10 := R0
 77 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 78 [-]: SELF      R8 R0 K17    ; R9 := R0; R8 := R0["0xDBE013EB"]
 79 [-]: GETTABLE  R10 R0 K24   ; R10 := R0["CHANNEL_ENTER"]
 80 [-]: MOVE      R11 R6       ; R11 := R6
 81 [-]: MOVE      R12 R7       ; R12 := R7
 82 [-]: GETTABLE  R13 R0 K20   ; R13 := R0["CHANNEL_COUNCIL"]
 83 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 84 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["mPanelShortcuts"]
 85 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["CHANNEL_COUNCIL"]
 86 [-]: SETTABLE  R8 R9 R6     ; R8[R9] := R6
 87 [-]: SETTABLE  R0 K15 R1    ; R0["mCachedIsCounselor"] := R1
 88 [-]: RETURN    R0 1         ; return 


; Function #123.55.1:
;
; Name:            
; Defined at line: 7896
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x633C4246"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := " "
  5 [-]: LOADK     R4 K3        ; R4 := "_"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: LOADK     R1 K4        ; R1 := "#"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x13EFEC25"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x9FAED6BC
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #123.56:
;
; Name:            
; Defined at line: 7918
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x5AB07477"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x595A6A24"]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #123.57:
;
; Name:            
; Defined at line: 7922
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x5AB07477"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x4AF36D8B"]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #123.58:
;
; Name:            
; Defined at line: 7926
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x5AB07477"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x10543D7B"]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #123.59:
;
; Name:            
; Defined at line: 7930
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["CHANNEL_GLOBAL"]
  2 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: SETTABLE  R0 K1 R1     ; R0["mPendingGlobalChannelName"] := R1
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["CHANNEL_RECRUITING"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: SETTABLE  R0 K3 R1     ; R0["mPendingRecruitingChannelName"] := R1
 10 [-]: JMP       20           ; PC := 20
 11 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["CHANNEL_TRADE"]
 12 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SETTABLE  R0 K5 R1     ; R0["mPendingTradeChannelName"] := R1
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["CHANNEL_QA"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: SETTABLE  R0 K7 R1     ; R0["mPendingQAChannelName"] := R1
 20 [-]: RETURN    R0 1         ; return 


; Function #123.60:
;
; Name:            
; Defined at line: 7943
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["CHANNEL_GLOBAL"]
  2 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: SETTABLE  R0 K1 R1     ; R0["mRegionChatEnabled"] := R1
  5 [-]: JMP       35           ; PC := 35
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["CHANNEL_RECRUITING"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: TESTSET   R3 R1 0      ; if not R1 then PC := 14 else R3 := R1
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETGLOBAL R3 K4        ; R3 := _G
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["StalkerMode"]
 13 [-]: MOVE      R3 R3        ; R3 := R3
 14 [-]: SETTABLE  R0 K3 R3     ; R0["mRecruitingChatEnabled"] := R3
 15 [-]: JMP       35           ; PC := 35
 16 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["CHANNEL_TRADE"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 26
 18 [-]: JMP       26           ; PC := 26
 19 [-]: TESTSET   R3 R1 0      ; if not R1 then PC := 24 else R3 := R1
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETGLOBAL R3 K4        ; R3 := _G
 22 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["StalkerMode"]
 23 [-]: MOVE      R3 R3        ; R3 := R3
 24 [-]: SETTABLE  R0 K7 R3     ; R0["mTradeChatEnabled"] := R3
 25 [-]: JMP       35           ; PC := 35
 26 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["CHANNEL_QA"]
 27 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: TESTSET   R3 R1 0      ; if not R1 then PC := 34 else R3 := R1
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETGLOBAL R3 K4        ; R3 := _G
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["StalkerMode"]
 33 [-]: MOVE      R3 R3        ; R3 := R3
 34 [-]: SETTABLE  R0 K9 R3     ; R0["mQAChatEnabled"] := R3
 35 [-]: RETURN    R0 1         ; return 


; Function #123.61:
;
; Name:            
; Defined at line: 7956
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
  2 [-]: JMP       30           ; PC := 30
  3 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mIsConnected"]
  4 [-]: TEST      R5 0         ; if not R5 then PC := 30
  5 [-]: JMP       30           ; PC := 30
  6 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mVisualMode"]
  7 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["VISUAL_MODE_MENU_SIMPLE"]
  8 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 30
  9 [-]: JMP       30           ; PC := 30
 10 [-]: LOADK     R5 K4        ; R5 := "#"
 11 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mActivePanelName"]
 12 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 13 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETGLOBAL R6 K6        ; R6 := gMatchingService
 16 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0xF0C493C"]
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: GETGLOBAL R7 K8        ; R7 := 0x400E7765
 19 [-]: MOVE      R8 R6        ; R8 := R6
 20 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 21 [-]: TEST      R7 1         ; if R7 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x21939A99"]
 24 [-]: MOVE      R9 R1        ; R9 := R1
 25 [-]: CALL      R7 3 1       ; R7(R8,R9)
 26 [-]: SELF      R7 R0 K10    ; R8 := R0; R7 := R0["0xCAB73D36"]
 27 [-]: LOADNIL   R9 R9        ; R9 := nil
 28 [-]: MOVE      R10 R4       ; R10 := R4
 29 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 30 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 125
 33 [-]: JMP       125          ; PC := 125
 34 [-]: SELF      R7 R0 K11    ; R8 := R0; R7 := R0["0x3B98BEF0"]
 35 [-]: MOVE      R9 R3        ; R9 := R3
 36 [-]: MOVE      R10 R4       ; R10 := R4
 37 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 38 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0["0xE8A299B5"]
 39 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 40 [-]: GETGLOBAL R8 K13       ; R8 := mMovie
 41 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8["0x5DB0BD4"]
 42 [-]: LOADK     R10 K15      ; R10 := "/Lotus/Language/Menu/Chat_GlobalTitle"
 43 [-]: MOVE      R11 R0       ; R11 := R0
 44 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 45 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["CHANNEL_RECRUITING"]
 46 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: SELF      R9 R0 K17    ; R10 := R0; R9 := R0["0x253BF2D4"]
 49 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 50 [-]: MOVE      R7 R9        ; R7 := R9
 51 [-]: GETGLOBAL R9 K13       ; R9 := mMovie
 52 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 53 [-]: LOADK     R11 K18      ; R11 := "/Lotus/Language/Menu/Chat_RecruitingTitle"
 54 [-]: MOVE      R12 R0       ; R12 := R0
 55 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 56 [-]: MOVE      R8 R9        ; R8 := R9
 57 [-]: JMP       83           ; PC := 83
 58 [-]: GETTABLE  R9 R0 K19    ; R9 := R0["CHANNEL_TRADE"]
 59 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 71
 60 [-]: JMP       71           ; PC := 71
 61 [-]: SELF      R9 R0 K20    ; R10 := R0; R9 := R0["0x608FA5CD"]
 62 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 63 [-]: MOVE      R7 R9        ; R7 := R9
 64 [-]: GETGLOBAL R9 K13       ; R9 := mMovie
 65 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 66 [-]: LOADK     R11 K21      ; R11 := "/Lotus/Language/Menu/Chat_TradeTitle"
 67 [-]: MOVE      R12 R0       ; R12 := R0
 68 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 69 [-]: MOVE      R8 R9        ; R8 := R9
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["CHANNEL_QA"]
 72 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 83
 73 [-]: JMP       83           ; PC := 83
 74 [-]: SELF      R9 R0 K23    ; R10 := R0; R9 := R0["0xD2FACED1"]
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: MOVE      R7 R9        ; R7 := R9
 77 [-]: GETGLOBAL R9 K13       ; R9 := mMovie
 78 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 79 [-]: LOADK     R11 K24      ; R11 := "/Lotus/Language/Menu/Chat_QandATitle"
 80 [-]: MOVE      R12 R0       ; R12 := R0
 81 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 82 [-]: MOVE      R8 R9        ; R8 := R9
 83 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mPanelShortcuts"]
 84 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
 85 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 100
 86 [-]: JMP       100          ; PC := 100
 87 [-]: TEST      R3 0         ; if not R3 then PC := 93
 88 [-]: JMP       93           ; PC := 93
 89 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mPanelShortcuts"]
 90 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
 91 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 100
 92 [-]: JMP       100          ; PC := 100
 93 [-]: SELF      R9 R0 K26    ; R10 := R0; R9 := R0["0xDBE013EB"]
 94 [-]: GETTABLE  R11 R0 K27   ; R11 := R0["CHANNEL_EXIT"]
 95 [-]: GETTABLE  R12 R0 K25   ; R12 := R0["mPanelShortcuts"]
 96 [-]: GETTABLE  R12 R12 R4   ; R12 := R12[R4]
 97 [-]: MOVE      R13 R8       ; R13 := R8
 98 [-]: MOVE      R14 R4       ; R14 := R4
 99 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
100 [-]: TEST      R3 0         ; if not R3 then PC := 125
101 [-]: JMP       125          ; PC := 125
102 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mPanelShortcuts"]
103 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
104 [-]: EQ        0 R9 K0      ; if R9 ~= nil then PC := 125
105 [-]: JMP       125          ; PC := 125
106 [-]: SELF      R9 R0 K26    ; R10 := R0; R9 := R0["0xDBE013EB"]
107 [-]: GETTABLE  R11 R0 K28   ; R11 := R0["CHANNEL_ENTER"]
108 [-]: MOVE      R12 R7       ; R12 := R7
109 [-]: MOVE      R13 R8       ; R13 := R8
110 [-]: MOVE      R14 R4       ; R14 := R4
111 [-]: MOVE      R15 R1       ; R15 := R1
112 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
113 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mPanelShortcuts"]
114 [-]: SETTABLE  R9 R4 R7     ; R9[R4] := R7
115 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mIsConnected"]
116 [-]: TEST      R9 1         ; if R9 then PC := 125
117 [-]: JMP       125          ; PC := 125
118 [-]: SELF      R9 R0 K29    ; R10 := R0; R9 := R0["0xAE78D1F"]
119 [-]: GETGLOBAL R11 K13      ; R11 := mMovie
120 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5DB0BD4"]
121 [-]: LOADK     R13 K30      ; R13 := "/Lotus/Language/Menu/Chat_ConnectingTitle"
122 [-]: MOVE      R14 R0       ; R14 := R0
123 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
124 [-]: CALL      R9 0 1       ; R9(R10,...)
125 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mPanelShortcuts"]
126 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
127 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 154
128 [-]: JMP       154          ; PC := 154
129 [-]: GETGLOBAL R9 K8        ; R9 := 0x400E7765
130 [-]: SELF      R10 R0 K31   ; R11 := R0; R10 := R0["0x18AAE1E3"]
131 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
132 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
133 [-]: TEST      R9 0         ; if not R9 then PC := 154
134 [-]: JMP       154          ; PC := 154
135 [-]: GETUPVAL  R9 U0        ; R9 := U0
136 [-]: TEST      R9 0         ; if not R9 then PC := 154
137 [-]: JMP       154          ; PC := 154
138 [-]: GETGLOBAL R9 K32       ; R9 := _G
139 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["StalkerMode"]
140 [-]: TEST      R9 1         ; if R9 then PC := 154
141 [-]: JMP       154          ; PC := 154
142 [-]: GETTABLE  R9 R0 K34    ; R9 := R0["mPanelList"]
143 [-]: GETGLOBAL R10 K35      ; R10 := string
144 [-]: GETTABLE  R10 R10 K36  ; R10 := R10["0x633C4246"]
145 [-]: GETTABLE  R11 R0 K25   ; R11 := R0["mPanelShortcuts"]
146 [-]: GETTABLE  R11 R11 R4   ; R11 := R11[R4]
147 [-]: LOADK     R12 K4       ; R12 := "#"
148 [-]: LOADK     R13 K37      ; R13 := ""
149 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
150 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
151 [-]: SELF      R10 R0 K38   ; R11 := R0; R10 := R0["0xE2A2E3AC"]
152 [-]: MOVE      R12 R9       ; R12 := R9
153 [-]: CALL      R10 3 1      ; R10(R11,R12)
154 [-]: RETURN    R0 1         ; return 


; Function #123.62:
;
; Name:            
; Defined at line: 8009
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x79998309"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCachedAllianceId"]
 11 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 68
 12 [-]: JMP       68           ; PC := 68
 13 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCachedAllianceId"]
 14 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R2 K4        ; R2 := gMatchingService
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xF0C493C"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x2BFAC54F"]
 25 [-]: MOVE      R5 R1        ; R5 := R1
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: CLOSURE   R3 0         ; R3 := closure(Function #123.62.1)
 28 [-]: MOVE      R0 R0        ; R0 := R0
 29 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mCachedAllianceId"]
 30 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mCachedAllianceId"]
 33 [-]: EQ        1 R4 K7      ; if R4 == "" then PC := 46
 34 [-]: JMP       46           ; PC := 46
 35 [-]: MOVE      R4 R3        ; R4 := R3
 36 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mCachedAllianceId"]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0xDBE013EB"]
 39 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["CHANNEL_EXIT"]
 40 [-]: MOVE      R8 R4        ; R8 := R4
 41 [-]: LOADK     R9 K7        ; R9 := ""
 42 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 43 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["mPanelShortcuts"]
 44 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["CHANNEL_CLAN"]
 45 [-]: SETTABLE  R5 R6 K3     ; R5[R6] := nil
 46 [-]: EQ        1 R1 K7      ; if R1 == "" then PC := 65
 47 [-]: JMP       65           ; PC := 65
 48 [-]: MOVE      R5 R3        ; R5 := R3
 49 [-]: MOVE      R6 R1        ; R6 := R1
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: GETGLOBAL R6 K12       ; R6 := mMovie
 52 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 53 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/Chat_AllianceTitle"
 54 [-]: MOVE      R9 R0        ; R9 := R0
 55 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 56 [-]: SELF      R7 R0 K8     ; R8 := R0; R7 := R0["0xDBE013EB"]
 57 [-]: GETTABLE  R9 R0 K15    ; R9 := R0["CHANNEL_ENTER"]
 58 [-]: MOVE      R10 R5       ; R10 := R5
 59 [-]: MOVE      R11 R6       ; R11 := R6
 60 [-]: GETTABLE  R12 R0 K16   ; R12 := R0["CHANNEL_ALLIANCE"]
 61 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 62 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mPanelShortcuts"]
 63 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["CHANNEL_ALLIANCE"]
 64 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 65 [-]: SETTABLE  R0 K2 R1     ; R0["mCachedAllianceId"] := R1
 66 [-]: JMP       68           ; PC := 68
 67 [-]: SETTABLE  R0 K2 K7     ; R0["mCachedAllianceId"] := ""
 68 [-]: GETTABLE  R7 R0 K17    ; R7 := R0["mCachedAllianceMotd"]
 69 [-]: GETUPVAL  R8 U1        ; R8 := U1
 70 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 112
 71 [-]: JMP       112          ; PC := 112
 72 [-]: GETTABLE  R7 R0 K17    ; R7 := R0["mCachedAllianceMotd"]
 73 [-]: EQ        1 R7 K7      ; if R7 == "" then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: MOVE      R7 R0        ; R7 := R0
 76 [-]: MOVE      R7 R1        ; R7 := R1
 77 [-]: EQ        1 R1 K7      ; if R1 == "" then PC := 84
 78 [-]: JMP       84           ; PC := 84
 79 [-]: GETUPVAL  R8 U2        ; R8 := U2
 80 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["0x36BA5F48"]
 81 [-]: CALL      R8 1 2       ; R8 := R8()
 82 [-]: TEST      R8 0         ; if not R8 then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: GETUPVAL  R8 U1        ; R8 := U1
 85 [-]: SETTABLE  R0 K17 R8    ; R0["mCachedAllianceMotd"] := R8
 86 [-]: JMP       112          ; PC := 112
 87 [-]: GETGLOBAL R8 K19       ; R8 := 0xECFDD17
 88 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["mPanelList"]
 89 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 90 [-]: JMP       110          ; PC := 110
 91 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
 92 [-]: MOVE      R14 R12      ; R14 := R12
 93 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 94 [-]: TEST      R13 1        ; if R13 then PC := 110
 95 [-]: JMP       110          ; PC := 110
 96 [-]: GETTABLE  R13 R12 K21  ; R13 := R12["mChannelType"]
 97 [-]: GETTABLE  R14 R0 K16   ; R14 := R0["CHANNEL_ALLIANCE"]
 98 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 110
 99 [-]: JMP       110          ; PC := 110
100 [-]: GETTABLE  R13 R0 K22   ; R13 := R0["mActivePanelName"]
101 [-]: EQ        0 R13 R11    ; if R13 ~= R11 then PC := 110
102 [-]: JMP       110          ; PC := 110
103 [-]: SELF      R13 R12 K23  ; R14 := R12; R13 := R12["0xAE78D1F"]
104 [-]: GETUPVAL  R15 U1       ; R15 := U1
105 [-]: MOVE      R16 R7       ; R16 := R7
106 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
107 [-]: GETUPVAL  R13 U1       ; R13 := U1
108 [-]: SETTABLE  R0 K17 R13   ; R0["mCachedAllianceMotd"] := R13
109 [-]: JMP       112          ; PC := 112
110 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 91; R10 := R11 end
111 [-]: JMP       91           ; PC := 91
112 [-]: RETURN    R0 1         ; return 


; Function #123.62.1:
;
; Name:            
; Defined at line: 8027
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x633C4246"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := " "
  5 [-]: LOADK     R4 K3        ; R4 := "_"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: LOADK     R1 K4        ; R1 := "#"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x414FA566"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x9FAED6BC
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #123.63:
;
; Name:            
; Defined at line: 8072
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x4F02F956"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x15793965"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: MOVE      R1 R2        ; R1 := R2
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADK     R1 K3        ; R1 := ""
 19 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mCachedGuildId"]
 20 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 107
 21 [-]: JMP       107          ; PC := 107
 22 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mCachedGuildId"]
 23 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 36
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETGLOBAL R2 K6        ; R2 := gMatchingService
 26 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF0C493C"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 29 [-]: MOVE      R4 R2        ; R4 := R2
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: TEST      R3 1         ; if R3 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x2BFAC54F"]
 34 [-]: MOVE      R5 R1        ; R5 := R1
 35 [-]: CALL      R3 3 1       ; R3(R4,R5)
 36 [-]: CLOSURE   R3 0         ; R3 := closure(Function #123.63.1)
 37 [-]: MOVE      R0 R0        ; R0 := R0
 38 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mCachedGuildId"]
 39 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mCachedGuildId"]
 42 [-]: EQ        1 R4 K3      ; if R4 == "" then PC := 55
 43 [-]: JMP       55           ; PC := 55
 44 [-]: MOVE      R4 R3        ; R4 := R3
 45 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mCachedGuildId"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0["0xDBE013EB"]
 48 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["CHANNEL_EXIT"]
 49 [-]: MOVE      R8 R4        ; R8 := R4
 50 [-]: LOADK     R9 K3        ; R9 := ""
 51 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 52 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mPanelShortcuts"]
 53 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["CHANNEL_CLAN"]
 54 [-]: SETTABLE  R5 R6 K5     ; R5[R6] := nil
 55 [-]: EQ        1 R1 K3      ; if R1 == "" then PC := 74
 56 [-]: JMP       74           ; PC := 74
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: MOVE      R6 R1        ; R6 := R1
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
 61 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 62 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Menu/Chat_ClanTitle"
 63 [-]: MOVE      R9 R0        ; R9 := R0
 64 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 65 [-]: SELF      R7 R0 K9     ; R8 := R0; R7 := R0["0xDBE013EB"]
 66 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["CHANNEL_ENTER"]
 67 [-]: MOVE      R10 R5       ; R10 := R5
 68 [-]: MOVE      R11 R6       ; R11 := R6
 69 [-]: GETTABLE  R12 R0 K12   ; R12 := R0["CHANNEL_CLAN"]
 70 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 71 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["mPanelShortcuts"]
 72 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["CHANNEL_CLAN"]
 73 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 74 [-]: SETTABLE  R0 K4 R1     ; R0["mCachedGuildId"] := R1
 75 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 76 [-]: GETGLOBAL R8 K13       ; R8 := mMovie
 77 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8["0x5DB0BD4"]
 78 [-]: LOADK     R10 K15      ; R10 := "/Lotus/Language/Menu/Chat_ClanTitle"
 79 [-]: MOVE      R11 R0       ; R11 := R0
 80 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 81 [-]: GETUPVAL  R9 U0        ; R9 := U0
 82 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9["0x6D176768"]
 83 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 84 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 85 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 86 [-]: SETTABLE  R0 K18 R8    ; R0["mGuildSuggest"] := R8
 87 [-]: GETTABLE  R8 R7 K19    ; R8 := R7[2]
 88 [-]: EQ        1 R8 K3      ; if R8 == "" then PC := 107
 89 [-]: JMP       107          ; PC := 107
 90 [-]: GETGLOBAL R8 K20       ; R8 := 0x63B09107
 91 [-]: MOVE      R9 R7        ; R9 := R7
 92 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETGLOBAL R13 K21      ; R13 := table
 95 [-]: GETTABLE  R13 R13 K22  ; R13 := R13["0xE6450C9D"]
 96 [-]: GETTABLE  R14 R0 K18   ; R14 := R0["mGuildSuggest"]
 97 [-]: LOADK     R15 K23      ; R15 := "{"
 98 [-]: GETGLOBAL R16 K24      ; R16 := string
 99 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["0xBDD0D625"]
100 [-]: MOVE      R17 R12      ; R17 := R12
101 [-]: CALL      R16 2 2      ; R16 := R16(R17)
102 [-]: LOADK     R17 K26      ; R17 := "}"
103 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
104 [-]: CALL      R13 3 1      ; R13(R14,R15)
105 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 94; R10 := R11 end
106 [-]: JMP       94           ; PC := 94
107 [-]: GETTABLE  R13 R0 K27   ; R13 := R0["mCachedGuildMotd"]
108 [-]: GETUPVAL  R14 U1       ; R14 := U1
109 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 151
110 [-]: JMP       151          ; PC := 151
111 [-]: GETTABLE  R13 R0 K27   ; R13 := R0["mCachedGuildMotd"]
112 [-]: EQ        1 R13 K3     ; if R13 == "" then PC := 115
113 [-]: JMP       115          ; PC := 115
114 [-]: MOVE      R13 R0       ; R13 := R0
115 [-]: MOVE      R13 R1       ; R13 := R1
116 [-]: EQ        1 R1 K3      ; if R1 == "" then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: GETUPVAL  R14 U2       ; R14 := U2
119 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["0x36BA5F48"]
120 [-]: CALL      R14 1 2      ; R14 := R14()
121 [-]: TEST      R14 0        ; if not R14 then PC := 126
122 [-]: JMP       126          ; PC := 126
123 [-]: GETUPVAL  R14 U1       ; R14 := U1
124 [-]: SETTABLE  R0 K27 R14   ; R0["mCachedGuildMotd"] := R14
125 [-]: JMP       151          ; PC := 151
126 [-]: GETGLOBAL R14 K29      ; R14 := 0xECFDD17
127 [-]: GETTABLE  R15 R0 K30   ; R15 := R0["mPanelList"]
128 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
129 [-]: JMP       147          ; PC := 147
130 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
131 [-]: MOVE      R20 R18      ; R20 := R18
132 [-]: CALL      R19 2 2      ; R19 := R19(R20)
133 [-]: TEST      R19 1        ; if R19 then PC := 147
134 [-]: JMP       147          ; PC := 147
135 [-]: GETTABLE  R19 R18 K31  ; R19 := R18["mChannelType"]
136 [-]: GETTABLE  R20 R0 K12   ; R20 := R0["CHANNEL_CLAN"]
137 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 147
138 [-]: JMP       147          ; PC := 147
139 [-]: GETTABLE  R19 R0 K32   ; R19 := R0["mActivePanelName"]
140 [-]: EQ        0 R19 R17    ; if R19 ~= R17 then PC := 147
141 [-]: JMP       147          ; PC := 147
142 [-]: SELF      R19 R18 K33  ; R20 := R18; R19 := R18["0xAE78D1F"]
143 [-]: GETUPVAL  R21 U1       ; R21 := U1
144 [-]: MOVE      R22 R13      ; R22 := R13
145 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
146 [-]: JMP       149          ; PC := 149
147 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 130; R16 := R17 end
148 [-]: JMP       130          ; PC := 130
149 [-]: GETUPVAL  R19 U1       ; R19 := U1
150 [-]: SETTABLE  R0 K27 R19   ; R0["mCachedGuildMotd"] := R19
151 [-]: RETURN    R0 1         ; return 


; Function #123.63.1:
;
; Name:            
; Defined at line: 8098
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x633C4246"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := " "
  5 [-]: LOADK     R4 K3        ; R4 := "_"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: LOADK     R1 K4        ; R1 := "#"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xE61632A5"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x9FAED6BC
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #123.64:
;
; Name:            
; Defined at line: 8148
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LT        0 K0 R2      ; if 0 >= R2 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mVisualMode"]
  4 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
  5 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 22
  6 [-]: JMP       22           ; PC := 22
  7 [-]: SUB       R2 R2 R1     ; R2 := R2 - R1
  8 [-]: LOADK     R4 K3        ; R4 := 100
  9 [-]: LE        0 R2 K0      ; if R2 > 0 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R4 K0        ; R4 := 0
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LE        0 R2 K4      ; if R2 > 1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MUL       R4 R2 K3     ; R4 := R2 * 100
 16 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 17 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x1C19D966"]
 18 [-]: MOVE      R7 R3        ; R7 := R3
 19 [-]: LOADK     R8 K7        ; R8 := "_alpha"
 20 [-]: MOVE      R9 R4        ; R9 := R4
 21 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: RETURN    R0 1         ; return 


; Function #123.65:
;
; Name:            
; Defined at line: 8165
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mFlashingTimer"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 72
  3 [-]: JMP       72           ; PC := 72
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mFlashingTimer"]
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mDelayedFadeOutTimer"]
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mFlashAlpha"]
 13 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mFlashingTimer"]
 14 [-]: GETGLOBAL R4 K4        ; R4 := 0x6306558E
 15 [-]: CALL      R4 1 2       ; R4 := R4()
 16 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 17 [-]: SETTABLE  R0 K0 R3     ; R0["mFlashingTimer"] := R3
 18 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mFlashingTimer"]
 19 [-]: LE        0 R3 K5      ; if R3 > 0 then PC := 36
 20 [-]: JMP       36           ; PC := 36
 21 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 22 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x11D1121F"]
 23 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipName"]
 24 [-]: LOADK     R6 K9        ; R6 := ".Icon"
 25 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 28 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x880196A7"]
 29 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipName"]
 30 [-]: LOADK     R6 K11       ; R6 := "Icon"
 31 [-]: LOADK     R7 K12       ; R7 := "_y"
 32 [-]: LOADK     R8 K13       ; R8 := 8
 33 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 34 [-]: SETTABLE  R0 K0 K1     ; R0["mFlashingTimer"] := nil
 35 [-]: LOADK     R2 K14       ; R2 := 100
 36 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 37 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 38 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipName"]
 39 [-]: LOADK     R6 K16       ; R6 := "_alpha"
 40 [-]: MOVE      R7 R2        ; R7 := R2
 41 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 42 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mBouncing"]
 43 [-]: TEST      R3 1         ; if R3 then PC := 72
 44 [-]: JMP       72           ; PC := 72
 45 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mFlashingTimer"]
 46 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 72
 47 [-]: JMP       72           ; PC := 72
 48 [-]: SETTABLE  R0 K17 K18   ; R0["mBouncing"] := "0x1"
 49 [-]: GETGLOBAL R3 K19       ; R3 := 0x52E17A90
 50 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 51 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipName"]
 52 [-]: LOADK     R6 K9        ; R6 := ".Icon"
 53 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 54 [-]: GETGLOBAL R6 K20       ; R6 := UISys
 55 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
 56 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 57 [-]: LOADK     R8 K12       ; R8 := "_y"
 58 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 59 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 60 [-]: LOADK     R9 K5        ; R9 := 0
 61 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 62 [-]: LOADK     R9 K22       ; R9 := 0.25
 63 [-]: GETUPVAL  R10 U1       ; R10 := U1
 64 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["0xF81722A2"]
 65 [-]: MOVE      R11 R1       ; R11 := R1
 66 [-]: LOADK     R12 K5       ; R12 := 0
 67 [-]: LOADK     R13 K24      ; R13 := 1
 68 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 69 [-]: CLOSURE   R11 0        ; R11 := closure(Function #123.65.1)
 70 [-]: MOVE      R0 R0        ; R0 := R0
 71 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 72 [-]: RETURN    R0 1         ; return 


; Function #123.65.1:
;
; Name:            
; Defined at line: 8184
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mClipName"]
  5 [-]: LOADK     R3 K3        ; R3 := ".Icon"
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: GETGLOBAL R3 K4        ; R3 := UISys
  8 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["FlashInstance_EASE_OUT_ELASTIC"]
  9 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 10 [-]: LOADK     R5 K6        ; R5 := "_y"
 11 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 12 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 13 [-]: LOADK     R6 K7        ; R6 := 8
 14 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 15 [-]: LOADK     R6 K8        ; R6 := 0.5
 16 [-]: LOADK     R7 K9        ; R7 := 0
 17 [-]: CLOSURE   R8 0         ; R8 := closure(Function #123.65.1.1)
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 20 [-]: RETURN    R0 1         ; return 


; Function #123.65.1.1:
;
; Name:            
; Defined at line: 8185
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mBouncing"] := "0x0"
  3 [-]: RETURN    R0 1         ; return 


; Function #123.66:
;
; Name:            
; Defined at line: 8192
; #Upvalues:       21
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mIsConnected"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 159
  3 [-]: JMP       159          ; PC := 159
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 43
 13 [-]: JMP       43           ; PC := 43
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0x93B1256B
 15 [-]: LOADK     R3 K3        ; R3 := "ChatRedux::Update GameData and profilesettings dead"
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K4        ; R2 := gPlayerProfileMgr
 18 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 19 [-]: LOADK     R4 K6        ; R4 := 0
 20 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 21 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0x654F1092"]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x3EEB612E"]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 33 [-]: GETUPVAL  R4 U0        ; R4 := U0
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 1         ; if R3 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 38 [-]: GETUPVAL  R4 U1        ; R4 := U1
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 0         ; if not R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: SELF      R3 R0 K9     ; R4 := R0; R3 := R0["0xC4307FF8"]
 44 [-]: CALL      R3 2 1       ; R3(R4)
 45 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0["0x9186244C"]
 46 [-]: CALL      R3 2 1       ; R3(R4)
 47 [-]: SELF      R3 R0 K11    ; R4 := R0; R3 := R0["0x74EED58F"]
 48 [-]: CALL      R3 2 1       ; R3(R4)
 49 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0["0x3DABA790"]
 50 [-]: CALL      R3 2 1       ; R3(R4)
 51 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0["0xB6732A80"]
 52 [-]: CALL      R3 2 1       ; R3(R4)
 53 [-]: GETUPVAL  R3 U2        ; R3 := U2
 54 [-]: TEST      R3 0         ; if not R3 then PC := 63
 55 [-]: JMP       63           ; PC := 63
 56 [-]: SELF      R3 R0 K14    ; R4 := R0; R3 := R0["0x6951C0FB"]
 57 [-]: GETTABLE  R5 R0 K15    ; R5 := R0["mPendingGlobalChannelName"]
 58 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["mRegionChatEnabled"]
 59 [-]: GETUPVAL  R7 U3        ; R7 := U3
 60 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["CHANNEL_GLOBAL"]
 61 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETTABLE  R3 R0 K16    ; R3 := R0["mRegionChatEnabled"]
 64 [-]: TEST      R3 0         ; if not R3 then PC := 72
 65 [-]: JMP       72           ; PC := 72
 66 [-]: SELF      R3 R0 K14    ; R4 := R0; R3 := R0["0x6951C0FB"]
 67 [-]: GETTABLE  R5 R0 K15    ; R5 := R0["mPendingGlobalChannelName"]
 68 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["mRegionChatEnabled"]
 69 [-]: MOVE      R7 R0        ; R7 := R0
 70 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["CHANNEL_GLOBAL"]
 71 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 72 [-]: GETUPVAL  R3 U2        ; R3 := U2
 73 [-]: TEST      R3 1         ; if R3 then PC := 81
 74 [-]: JMP       81           ; PC := 81
 75 [-]: GETUPVAL  R3 U4        ; R3 := U4
 76 [-]: TEST      R3 1         ; if R3 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETUPVAL  R3 U5        ; R3 := U5
 79 [-]: TEST      R3 0         ; if not R3 then PC := 105
 80 [-]: JMP       105          ; PC := 105
 81 [-]: GETUPVAL  R3 U6        ; R3 := U6
 82 [-]: GETUPVAL  R4 U5        ; R4 := U5
 83 [-]: TEST      R4 0         ; if not R4 then PC := 98
 84 [-]: JMP       98           ; PC := 98
 85 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 86 [-]: GETGLOBAL R5 K18       ; R5 := gGameRules
 87 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 88 [-]: TEST      R4 1         ; if R4 then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETGLOBAL R4 K18       ; R4 := gGameRules
 91 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4["0x5DFBCA3F"]
 92 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 93 [-]: GETGLOBAL R5 K20       ; R5 := Lotus_Game
 94 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["PVP_SELECTING_TEAMS"]
 95 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R3 R0        ; R3 := R0
 98 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x6951C0FB"]
 99 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mPendingRecruitingChannelName"]
100 [-]: GETTABLE  R7 R0 K23    ; R7 := R0["mRecruitingChatEnabled"]
101 [-]: MOVE      R8 R3        ; R8 := R3
102 [-]: GETTABLE  R9 R0 K24    ; R9 := R0["CHANNEL_RECRUITING"]
103 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
104 [-]: JMP       114          ; PC := 114
105 [-]: GETTABLE  R4 R0 K23    ; R4 := R0["mRecruitingChatEnabled"]
106 [-]: TEST      R4 0         ; if not R4 then PC := 114
107 [-]: JMP       114          ; PC := 114
108 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x6951C0FB"]
109 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mPendingRecruitingChannelName"]
110 [-]: GETTABLE  R7 R0 K23    ; R7 := R0["mRecruitingChatEnabled"]
111 [-]: MOVE      R8 R0        ; R8 := R0
112 [-]: GETTABLE  R9 R0 K24    ; R9 := R0["CHANNEL_RECRUITING"]
113 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
114 [-]: GETUPVAL  R4 U2        ; R4 := U2
115 [-]: TEST      R4 1         ; if R4 then PC := 120
116 [-]: JMP       120          ; PC := 120
117 [-]: GETUPVAL  R4 U4        ; R4 := U4
118 [-]: TEST      R4 0         ; if not R4 then PC := 131
119 [-]: JMP       131          ; PC := 131
120 [-]: GETGLOBAL R4 K25       ; R4 := 0x86466050
121 [-]: CALL      R4 1 2       ; R4 := R4()
122 [-]: TEST      R4 1         ; if R4 then PC := 131
123 [-]: JMP       131          ; PC := 131
124 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x6951C0FB"]
125 [-]: GETTABLE  R6 R0 K26    ; R6 := R0["mPendingTradeChannelName"]
126 [-]: GETTABLE  R7 R0 K27    ; R7 := R0["mTradeChatEnabled"]
127 [-]: GETUPVAL  R8 U7        ; R8 := U7
128 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["CHANNEL_TRADE"]
129 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
130 [-]: JMP       140          ; PC := 140
131 [-]: GETTABLE  R4 R0 K27    ; R4 := R0["mTradeChatEnabled"]
132 [-]: TEST      R4 0         ; if not R4 then PC := 140
133 [-]: JMP       140          ; PC := 140
134 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x6951C0FB"]
135 [-]: GETTABLE  R6 R0 K26    ; R6 := R0["mPendingTradeChannelName"]
136 [-]: GETTABLE  R7 R0 K27    ; R7 := R0["mTradeChatEnabled"]
137 [-]: MOVE      R8 R0        ; R8 := R0
138 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["CHANNEL_TRADE"]
139 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
140 [-]: GETUPVAL  R4 U2        ; R4 := U2
141 [-]: TEST      R4 0         ; if not R4 then PC := 150
142 [-]: JMP       150          ; PC := 150
143 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x6951C0FB"]
144 [-]: GETTABLE  R6 R0 K29    ; R6 := R0["mPendingQAChannelName"]
145 [-]: GETTABLE  R7 R0 K30    ; R7 := R0["mQAChatEnabled"]
146 [-]: GETUPVAL  R8 U8        ; R8 := U8
147 [-]: GETTABLE  R9 R0 K31    ; R9 := R0["CHANNEL_QA"]
148 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
149 [-]: JMP       159          ; PC := 159
150 [-]: GETTABLE  R4 R0 K30    ; R4 := R0["mQAChatEnabled"]
151 [-]: TEST      R4 0         ; if not R4 then PC := 159
152 [-]: JMP       159          ; PC := 159
153 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x6951C0FB"]
154 [-]: GETTABLE  R6 R0 K29    ; R6 := R0["mPendingQAChannelName"]
155 [-]: GETTABLE  R7 R0 K30    ; R7 := R0["mQAChatEnabled"]
156 [-]: MOVE      R8 R0        ; R8 := R0
157 [-]: GETTABLE  R9 R0 K31    ; R9 := R0["CHANNEL_QA"]
158 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
159 [-]: SELF      R4 R0 K33    ; R5 := R0; R4 := R0["0xFF82BFA3"]
160 [-]: MOVE      R6 R1        ; R6 := R1
161 [-]: GETTABLE  R7 R0 K32    ; R7 := R0["mActiveTabListFadeOutTimer"]
162 [-]: LOADK     R8 K34       ; R8 := "Window.Hint"
163 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
164 [-]: SETTABLE  R0 K32 R4    ; R0["mActiveTabListFadeOutTimer"] := R4
165 [-]: SELF      R4 R0 K33    ; R5 := R0; R4 := R0["0xFF82BFA3"]
166 [-]: MOVE      R6 R1        ; R6 := R1
167 [-]: GETTABLE  R7 R0 K35    ; R7 := R0["mActiveChatFadeOutTimer"]
168 [-]: LOADK     R8 K36       ; R8 := "Window.TabbedChatPanel"
169 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
170 [-]: SETTABLE  R0 K35 R4    ; R0["mActiveChatFadeOutTimer"] := R4
171 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["mActiveTabListFadeOutTimer"]
172 [-]: LE        0 R4 K6      ; if R4 > 0 then PC := 181
173 [-]: JMP       181          ; PC := 181
174 [-]: GETTABLE  R4 R0 K35    ; R4 := R0["mActiveChatFadeOutTimer"]
175 [-]: LE        0 R4 K6      ; if R4 > 0 then PC := 181
176 [-]: JMP       181          ; PC := 181
177 [-]: GETGLOBAL R4 K37       ; R4 := mMovie
178 [-]: SELF      R4 R4 K38    ; R5 := R4; R4 := R4["0x625791A8"]
179 [-]: MOVE      R6 R0        ; R6 := R0
180 [-]: CALL      R4 3 1       ; R4(R5,R6)
181 [-]: GETUPVAL  R4 U9        ; R4 := U9
182 [-]: GETUPVAL  R5 U10       ; R5 := U10
183 [-]: MUL       R5 R5 R1     ; R5 := R5 * R1
184 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
185 [-]: MOVE      R4 R9        ; R4 := R9
186 [-]: GETUPVAL  R4 U9        ; R4 := U9
187 [-]: LT        1 R4 K6      ; if R4 < 0 then PC := 193
188 [-]: JMP       193          ; PC := 193
189 [-]: GETUPVAL  R4 U9        ; R4 := U9
190 [-]: GETUPVAL  R5 U11       ; R5 := U11
191 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 202
192 [-]: JMP       202          ; PC := 202
193 [-]: GETGLOBAL R4 K39       ; R4 := 0x6374FD98
194 [-]: GETUPVAL  R5 U9        ; R5 := U9
195 [-]: LOADK     R6 K6        ; R6 := 0
196 [-]: GETUPVAL  R7 U11       ; R7 := U11
197 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
198 [-]: MOVE      R4 R9        ; R4 := R9
199 [-]: GETUPVAL  R4 U10       ; R4 := U10
200 [-]: MUL       R4 R4 K40    ; R4 := R4 * -1
201 [-]: MOVE      R4 R10       ; R4 := R10
202 [-]: GETUPVAL  R4 U9        ; R4 := U9
203 [-]: GETUPVAL  R5 U11       ; R5 := U11
204 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
205 [-]: GETGLOBAL R5 K41       ; R5 := 0x93034B55
206 [-]: GETUPVAL  R6 U12       ; R6 := U12
207 [-]: GETUPVAL  R7 U13       ; R7 := U13
208 [-]: MOVE      R8 R4        ; R8 := R4
209 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
210 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
211 [-]: GETTABLE  R7 R0 K42    ; R7 := R0["mSimpleTabList"]
212 [-]: CALL      R6 2 2       ; R6 := R6(R7)
213 [-]: TEST      R6 1         ; if R6 then PC := 220
214 [-]: JMP       220          ; PC := 220
215 [-]: SETTABLE  R0 K43 R5    ; R0["mFlashAlpha"] := R5
216 [-]: GETTABLE  R6 R0 K42    ; R6 := R0["mSimpleTabList"]
217 [-]: SELF      R6 R6 K44    ; R7 := R6; R6 := R6["0x9D2060CB"]
218 [-]: GETTABLE  R8 R0 K45    ; R8 := R0["UpdateFlashingElementDelegate"]
219 [-]: CALL      R6 3 1       ; R6(R7,R8)
220 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
221 [-]: GETTABLE  R7 R0 K46    ; R7 := R0["mInputPanel"]
222 [-]: CALL      R6 2 2       ; R6 := R6(R7)
223 [-]: TEST      R6 1         ; if R6 then PC := 257
224 [-]: JMP       257          ; PC := 257
225 [-]: GETTABLE  R6 R0 K46    ; R6 := R0["mInputPanel"]
226 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["CharLimitFlashTime"]
227 [-]: LT        0 K6 R6      ; if 0 >= R6 then PC := 257
228 [-]: JMP       257          ; PC := 257
229 [-]: GETTABLE  R6 R0 K46    ; R6 := R0["mInputPanel"]
230 [-]: GETTABLE  R7 R0 K46    ; R7 := R0["mInputPanel"]
231 [-]: GETTABLE  R7 R7 K47    ; R7 := R7["CharLimitFlashTime"]
232 [-]: SUB       R7 R7 R1     ; R7 := R7 - R1
233 [-]: SETTABLE  R6 K47 R7    ; R6["CharLimitFlashTime"] := R7
234 [-]: GETTABLE  R6 R0 K46    ; R6 := R0["mInputPanel"]
235 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["CharLimitFlashTime"]
236 [-]: LE        0 R6 K6      ; if R6 > 0 then PC := 247
237 [-]: JMP       247          ; PC := 247
238 [-]: GETGLOBAL R6 K37       ; R6 := mMovie
239 [-]: SELF      R6 R6 K48    ; R7 := R6; R6 := R6["0x1C19D966"]
240 [-]: LOADK     R8 K49       ; R8 := "Window.SendMessageBar.CharLimit"
241 [-]: LOADK     R9 K50       ; R9 := "_alpha"
242 [-]: LOADK     R10 K51      ; R10 := 100
243 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
244 [-]: GETTABLE  R6 R0 K46    ; R6 := R0["mInputPanel"]
245 [-]: SETTABLE  R6 K47 K6    ; R6["CharLimitFlashTime"] := 0
246 [-]: JMP       257          ; PC := 257
247 [-]: GETGLOBAL R6 K37       ; R6 := mMovie
248 [-]: SELF      R6 R6 K48    ; R7 := R6; R6 := R6["0x1C19D966"]
249 [-]: LOADK     R8 K49       ; R8 := "Window.SendMessageBar.CharLimit"
250 [-]: LOADK     R9 K50       ; R9 := "_alpha"
251 [-]: GETGLOBAL R10 K41      ; R10 := 0x93034B55
252 [-]: LOADK     R11 K52      ; R11 := 50
253 [-]: LOADK     R12 K51      ; R12 := 100
254 [-]: MOVE      R13 R4       ; R13 := R4
255 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
256 [-]: CALL      R6 0 1       ; R6(R7,...)
257 [-]: GETUPVAL  R6 U14       ; R6 := U14
258 [-]: GETTABLE  R6 R6 K53    ; R6 := R6["mVisualMode"]
259 [-]: GETUPVAL  R7 U14       ; R7 := U14
260 [-]: GETTABLE  R7 R7 K54    ; R7 := R7["VISUAL_MODE_GAMEPLAY_SIMPLE"]
261 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 264
262 [-]: JMP       264          ; PC := 264
263 [-]: RETURN    R0 1         ; return 
264 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
265 [-]: GETTABLE  R7 R0 K55    ; R7 := R0["mTabMenu"]
266 [-]: CALL      R6 2 2       ; R6 := R6(R7)
267 [-]: TEST      R6 1         ; if R6 then PC := 422
268 [-]: JMP       422          ; PC := 422
269 [-]: MOVE      R6 R0        ; R6 := R0
270 [-]: MOVE      R7 R0        ; R7 := R0
271 [-]: GETGLOBAL R8 K56       ; R8 := 0xF595ADDE
272 [-]: GETGLOBAL R9 K37       ; R9 := mMovie
273 [-]: SELF      R9 R9 K57    ; R10 := R9; R9 := R9["0x6B7B470B"]
274 [-]: LOADK     R11 K58      ; R11 := "Window.TabMenu.TabMask"
275 [-]: LOADK     R12 K59      ; R12 := "_width"
276 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
277 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
278 [-]: LOADK     R9 K60       ; R9 := 1
279 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mTabMenu"]
280 [-]: SELF      R10 R10 K61  ; R11 := R10; R10 := R10["0xC51A5C9D"]
281 [-]: CALL      R10 2 2      ; R10 := R10(R11)
282 [-]: LOADK     R11 K60      ; R11 := 1
283 [-]: FORPREP   R9 337       ; R9 -= R11; PC := 337
284 [-]: GETTABLE  R13 R0 K55   ; R13 := R0["mTabMenu"]
285 [-]: SELF      R13 R13 K62  ; R14 := R13; R13 := R13["0xD75E681A"]
286 [-]: MOVE      R15 R12      ; R15 := R12
287 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
288 [-]: GETGLOBAL R14 K1       ; R14 := 0x400E7765
289 [-]: MOVE      R15 R13      ; R15 := R13
290 [-]: CALL      R14 2 2      ; R14 := R14(R15)
291 [-]: TEST      R14 1        ; if R14 then PC := 337
292 [-]: JMP       337          ; PC := 337
293 [-]: GETTABLE  R14 R13 K63  ; R14 := R13["isFlashing"]
294 [-]: TEST      R14 0        ; if not R14 then PC := 337
295 [-]: JMP       337          ; PC := 337
296 [-]: GETUPVAL  R14 U14      ; R14 := U14
297 [-]: GETTABLE  R14 R14 K55  ; R14 := R14["mTabMenu"]
298 [-]: SELF      R14 R14 K64  ; R15 := R14; R14 := R14["0x775B2AE5"]
299 [-]: MOVE      R16 R13      ; R16 := R13
300 [-]: MOVE      R17 R0       ; R17 := R0
301 [-]: MOVE      R18 R5       ; R18 := R5
302 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
303 [-]: GETGLOBAL R14 K56      ; R14 := 0xF595ADDE
304 [-]: GETGLOBAL R15 K37      ; R15 := mMovie
305 [-]: SELF      R15 R15 K57  ; R16 := R15; R15 := R15["0x6B7B470B"]
306 [-]: GETTABLE  R17 R13 K65  ; R17 := R13["mClipName"]
307 [-]: LOADK     R18 K66      ; R18 := "_x"
308 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
309 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
310 [-]: EQ        0 R14 K67    ; if R14 ~= nil then PC := 313
311 [-]: JMP       313          ; PC := 313
312 [-]: LOADK     R14 K6       ; R14 := 0
313 [-]: GETGLOBAL R15 K56      ; R15 := 0xF595ADDE
314 [-]: GETGLOBAL R16 K37      ; R16 := mMovie
315 [-]: SELF      R16 R16 K57  ; R17 := R16; R16 := R16["0x6B7B470B"]
316 [-]: GETTABLE  R18 R13 K65  ; R18 := R13["mClipName"]
317 [-]: LOADK     R19 K68      ; R19 := ".Bg"
318 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
319 [-]: LOADK     R19 K59      ; R19 := "_width"
320 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
321 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
322 [-]: EQ        0 R15 K67    ; if R15 ~= nil then PC := 325
323 [-]: JMP       325          ; PC := 325
324 [-]: LOADK     R15 K6       ; R15 := 0
325 [-]: TEST      R6 1         ; if R6 then PC := 332
326 [-]: JMP       332          ; PC := 332
327 [-]: ADD       R16 R14 R15  ; R16 := R14 + R15
328 [-]: LT        0 R16 K6     ; if R16 >= 0 then PC := 332
329 [-]: JMP       332          ; PC := 332
330 [-]: MOVE      R6 R1        ; R6 := R1
331 [-]: JMP       337          ; PC := 337
332 [-]: TEST      R7 1         ; if R7 then PC := 337
333 [-]: JMP       337          ; PC := 337
334 [-]: LT        0 R8 R14     ; if R8 >= R14 then PC := 337
335 [-]: JMP       337          ; PC := 337
336 [-]: MOVE      R7 R1        ; R7 := R1
337 [-]: FORLOOP   R9 284       ; R9 += R11; if R9 <= R10 then begin PC := 284; R12 := R9 end
338 [-]: GETUPVAL  R16 U14      ; R16 := U14
339 [-]: GETTABLE  R16 R16 K69  ; R16 := R16["mLeftArrowFocused"]
340 [-]: TEST      R16 1        ; if R16 then PC := 366
341 [-]: JMP       366          ; PC := 366
342 [-]: GETUPVAL  R16 U14      ; R16 := U14
343 [-]: GETTABLE  R16 R16 K70  ; R16 := R16["mLeftArrowFlashing"]
344 [-]: EQ        0 R6 R16     ; if R6 ~= R16 then PC := 348
345 [-]: JMP       348          ; PC := 348
346 [-]: TEST      R6 0         ; if not R6 then PC := 366
347 [-]: JMP       366          ; PC := 366
348 [-]: GETGLOBAL R16 K37      ; R16 := mMovie
349 [-]: SELF      R16 R16 K48  ; R17 := R16; R16 := R16["0x1C19D966"]
350 [-]: GETUPVAL  R18 U15      ; R18 := U15
351 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["0xF81722A2"]
352 [-]: GETGLOBAL R19 K72      ; R19 := Engine
353 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["0x9490FE70"]
354 [-]: CALL      R19 1 2      ; R19 := R19()
355 [-]: LOADK     R20 K74      ; R20 := "Window.TabMenu.LeftBumper"
356 [-]: LOADK     R21 K75      ; R21 := "Window.TabMenu.LeftArrow"
357 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
358 [-]: LOADK     R19 K50      ; R19 := "_alpha"
359 [-]: GETUPVAL  R20 U15      ; R20 := U15
360 [-]: GETTABLE  R20 R20 K71  ; R20 := R20["0xF81722A2"]
361 [-]: MOVE      R21 R6       ; R21 := R6
362 [-]: MOVE      R22 R5       ; R22 := R5
363 [-]: LOADK     R23 K52      ; R23 := 50
364 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
365 [-]: CALL      R16 0 1      ; R16(R17,...)
366 [-]: GETUPVAL  R16 U14      ; R16 := U14
367 [-]: GETTABLE  R16 R16 K76  ; R16 := R16["mRightArrowFocused"]
368 [-]: TEST      R16 1        ; if R16 then PC := 394
369 [-]: JMP       394          ; PC := 394
370 [-]: GETUPVAL  R16 U14      ; R16 := U14
371 [-]: GETTABLE  R16 R16 K77  ; R16 := R16["mRightArrowFlashing"]
372 [-]: EQ        0 R7 R16     ; if R7 ~= R16 then PC := 376
373 [-]: JMP       376          ; PC := 376
374 [-]: TEST      R7 0         ; if not R7 then PC := 394
375 [-]: JMP       394          ; PC := 394
376 [-]: GETGLOBAL R16 K37      ; R16 := mMovie
377 [-]: SELF      R16 R16 K48  ; R17 := R16; R16 := R16["0x1C19D966"]
378 [-]: GETUPVAL  R18 U15      ; R18 := U15
379 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["0xF81722A2"]
380 [-]: GETGLOBAL R19 K72      ; R19 := Engine
381 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["0x9490FE70"]
382 [-]: CALL      R19 1 2      ; R19 := R19()
383 [-]: LOADK     R20 K78      ; R20 := "Window.TabMenu.RightBumper"
384 [-]: LOADK     R21 K79      ; R21 := "Window.TabMenu.RightArrow"
385 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
386 [-]: LOADK     R19 K50      ; R19 := "_alpha"
387 [-]: GETUPVAL  R20 U15      ; R20 := U15
388 [-]: GETTABLE  R20 R20 K71  ; R20 := R20["0xF81722A2"]
389 [-]: MOVE      R21 R7       ; R21 := R7
390 [-]: MOVE      R22 R5       ; R22 := R5
391 [-]: LOADK     R23 K51      ; R23 := 100
392 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
393 [-]: CALL      R16 0 1      ; R16(R17,...)
394 [-]: GETUPVAL  R16 U14      ; R16 := U14
395 [-]: SETTABLE  R16 K70 R6   ; R16["mLeftArrowFlashing"] := R6
396 [-]: GETUPVAL  R16 U14      ; R16 := U14
397 [-]: SETTABLE  R16 K77 R7   ; R16["mRightArrowFlashing"] := R7
398 [-]: GETUPVAL  R16 U16      ; R16 := U16
399 [-]: EQ        1 R16 K6     ; if R16 == 0 then PC := 422
400 [-]: JMP       422          ; PC := 422
401 [-]: GETUPVAL  R16 U17      ; R16 := U17
402 [-]: EQ        1 R16 K6     ; if R16 == 0 then PC := 408
403 [-]: JMP       408          ; PC := 408
404 [-]: GETUPVAL  R16 U17      ; R16 := U17
405 [-]: SUB       R16 R16 K60  ; R16 := R16 - 1
406 [-]: MOVE      R16 R17      ; R16 := R17
407 [-]: JMP       422          ; PC := 422
408 [-]: GETGLOBAL R16 K72      ; R16 := Engine
409 [-]: GETTABLE  R16 R16 K80  ; R16 := R16["0x890747BC"]
410 [-]: CALL      R16 1 2      ; R16 := R16()
411 [-]: TEST      R16 0        ; if not R16 then PC := 416
412 [-]: JMP       416          ; PC := 416
413 [-]: LOADK     R16 K6       ; R16 := 0
414 [-]: MOVE      R16 R16      ; R16 := R16
415 [-]: JMP       422          ; PC := 422
416 [-]: GETUPVAL  R16 U14      ; R16 := U14
417 [-]: SELF      R16 R16 K81  ; R17 := R16; R16 := R16["0xFAFBBCBD"]
418 [-]: GETUPVAL  R18 U16      ; R18 := U16
419 [-]: CALL      R16 3 1      ; R16(R17,R18)
420 [-]: LOADK     R16 K6       ; R16 := 0
421 [-]: MOVE      R16 R16      ; R16 := R16
422 [-]: GETGLOBAL R16 K37      ; R16 := mMovie
423 [-]: SELF      R16 R16 K57  ; R17 := R16; R16 := R16["0x6B7B470B"]
424 [-]: LOADK     R18 K82      ; R18 := "Window.SendMessageBar.MessageBox"
425 [-]: LOADK     R19 K83      ; R19 := "text"
426 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
427 [-]: GETGLOBAL R17 K37      ; R17 := mMovie
428 [-]: SELF      R17 R17 K48  ; R18 := R17; R17 := R17["0x1C19D966"]
429 [-]: LOADK     R19 K84      ; R19 := "Window.SendMessageBar.Prompt"
430 [-]: LOADK     R20 K85      ; R20 := "_visible"
431 [-]: EQ        1 R16 K86    ; if R16 == "" then PC := 434
432 [-]: JMP       434          ; PC := 434
433 [-]: MOVE      R21 R0       ; R21 := R0
434 [-]: MOVE      R21 R1       ; R21 := R1
435 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
436 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
437 [-]: GETUPVAL  R18 U14      ; R18 := U14
438 [-]: CALL      R17 2 2      ; R17 := R17(R18)
439 [-]: TEST      R17 1        ; if R17 then PC := 638
440 [-]: JMP       638          ; PC := 638
441 [-]: MOVE      R17 R0       ; R17 := R0
442 [-]: MOVE      R18 R0       ; R18 := R0
443 [-]: LOADK     R19 K6       ; R19 := 0
444 [-]: LOADK     R20 K6       ; R20 := 0
445 [-]: GETGLOBAL R21 K72      ; R21 := Engine
446 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["0x9490FE70"]
447 [-]: CALL      R21 1 2      ; R21 := R21()
448 [-]: TEST      R21 1        ; if R21 then PC := 518
449 [-]: JMP       518          ; PC := 518
450 [-]: GETUPVAL  R21 U14      ; R21 := U14
451 [-]: GETTABLE  R21 R21 K46  ; R21 := R21["mInputPanel"]
452 [-]: GETTABLE  R21 R21 K87  ; R21 := R21["mMaxMsgLength"]
453 [-]: GETGLOBAL R22 K88      ; R22 := string
454 [-]: GETTABLE  R22 R22 K89  ; R22 := R22["0xC6772A8A"]
455 [-]: MOVE      R23 R16      ; R23 := R16
456 [-]: CALL      R22 2 2      ; R22 := R22(R23)
457 [-]: SUB       R21 R21 R22  ; R21 := R21 - R22
458 [-]: LE        1 R21 K90    ; if R21 <= 20 then PC := 461
459 [-]: JMP       461          ; PC := 461
460 [-]: MOVE      R17 R0       ; R17 := R0
461 [-]: MOVE      R17 R1       ; R17 := R1
462 [-]: GETGLOBAL R22 K37      ; R22 := mMovie
463 [-]: SELF      R22 R22 K48  ; R23 := R22; R22 := R22["0x1C19D966"]
464 [-]: LOADK     R24 K91      ; R24 := "Window.SendMessageBar.CharLimit.Warning"
465 [-]: LOADK     R25 K85      ; R25 := "_visible"
466 [-]: MOVE      R26 R17      ; R26 := R17
467 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
468 [-]: TEST      R17 0        ; if not R17 then PC := 518
469 [-]: JMP       518          ; PC := 518
470 [-]: GETUPVAL  R22 U15      ; R22 := U15
471 [-]: GETTABLE  R22 R22 K71  ; R22 := R22["0xF81722A2"]
472 [-]: LE        1 K6 R21     ; if 0 <= R21 then PC := 475
473 [-]: JMP       475          ; PC := 475
474 [-]: MOVE      R23 R0       ; R23 := R0
475 [-]: MOVE      R23 R1       ; R23 := R1
476 [-]: GETUPVAL  R24 U14      ; R24 := U14
477 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["mInputPanel"]
478 [-]: GETTABLE  R24 R24 K92  ; R24 := R24["CharLimitWarning"]
479 [-]: GETUPVAL  R25 U14      ; R25 := U14
480 [-]: GETTABLE  R25 R25 K46  ; R25 := R25["mInputPanel"]
481 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["CharLimitError"]
482 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
483 [-]: GETGLOBAL R23 K37      ; R23 := mMovie
484 [-]: SELF      R23 R23 K48  ; R24 := R23; R23 := R23["0x1C19D966"]
485 [-]: LOADK     R25 K91      ; R25 := "Window.SendMessageBar.CharLimit.Warning"
486 [-]: LOADK     R26 K83      ; R26 := "text"
487 [-]: MOVE      R27 R22      ; R27 := R22
488 [-]: LOADK     R28 K94      ; R28 := " "
489 [-]: GETGLOBAL R29 K95      ; R29 := 0x9FAED6BC
490 [-]: MOVE      R30 R21      ; R30 := R21
491 [-]: CALL      R29 2 2      ; R29 := R29(R30)
492 [-]: CONCAT    R27 R27 R29  ; R27 := R27 .. R28 .. R29
493 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
494 [-]: GETGLOBAL R23 K37      ; R23 := mMovie
495 [-]: SELF      R23 R23 K48  ; R24 := R23; R23 := R23["0x1C19D966"]
496 [-]: LOADK     R25 K91      ; R25 := "Window.SendMessageBar.CharLimit.Warning"
497 [-]: LOADK     R26 K96      ; R26 := "textColor"
498 [-]: GETUPVAL  R27 U15      ; R27 := U15
499 [-]: GETTABLE  R27 R27 K71  ; R27 := R27["0xF81722A2"]
500 [-]: LE        1 K6 R21     ; if 0 <= R21 then PC := 503
501 [-]: JMP       503          ; PC := 503
502 [-]: MOVE      R28 R0       ; R28 := R0
503 [-]: MOVE      R28 R1       ; R28 := R1
504 [-]: GETGLOBAL R29 K97      ; R29 := _G
505 [-]: GETTABLE  R29 R29 K98  ; R29 := R29["UIColor_Black"]
506 [-]: GETGLOBAL R30 K97      ; R30 := _G
507 [-]: GETTABLE  R30 R30 K99  ; R30 := R30["UIColor_Red"]
508 [-]: CALL      R27 4 0      ; R27,... := R27(R28,R29,R30)
509 [-]: CALL      R23 0 1      ; R23(R24,...)
510 [-]: GETGLOBAL R23 K56      ; R23 := 0xF595ADDE
511 [-]: GETGLOBAL R24 K37      ; R24 := mMovie
512 [-]: SELF      R24 R24 K57  ; R25 := R24; R24 := R24["0x6B7B470B"]
513 [-]: LOADK     R26 K91      ; R26 := "Window.SendMessageBar.CharLimit.Warning"
514 [-]: LOADK     R27 K100     ; R27 := "textWidth"
515 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
516 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
517 [-]: ADD       R19 R23 K101 ; R19 := R23 + 16
518 [-]: GETUPVAL  R23 U14      ; R23 := U14
519 [-]: SELF      R23 R23 K102 ; R24 := R23; R23 := R23["0x18AAE1E3"]
520 [-]: CALL      R23 2 2      ; R23 := R23(R24)
521 [-]: GETGLOBAL R24 K1       ; R24 := 0x400E7765
522 [-]: MOVE      R25 R23      ; R25 := R23
523 [-]: CALL      R24 2 2      ; R24 := R24(R25)
524 [-]: TEST      R24 1        ; if R24 then PC := 600
525 [-]: JMP       600          ; PC := 600
526 [-]: GETTABLE  R24 R23 K103 ; R24 := R23["mChannelType"]
527 [-]: GETUPVAL  R25 U14      ; R25 := U14
528 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["CHANNEL_TRADE"]
529 [-]: EQ        1 R24 R25    ; if R24 == R25 then PC := 532
530 [-]: JMP       532          ; PC := 532
531 [-]: MOVE      R24 R0       ; R24 := R0
532 [-]: MOVE      R24 R1       ; R24 := R1
533 [-]: GETUPVAL  R25 U15      ; R25 := U15
534 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["0xF81722A2"]
535 [-]: MOVE      R26 R24      ; R26 := R24
536 [-]: GETGLOBAL R27 K97      ; R27 := _G
537 [-]: GETTABLE  R27 R27 K104 ; R27 := R27["TradeSpamBlockTime"]
538 [-]: GETTABLE  R28 R23 K105 ; R28 := R23["mSpamBlockTime"]
539 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
540 [-]: EQ        1 R25 K67    ; if R25 == nil then PC := 600
541 [-]: JMP       600          ; PC := 600
542 [-]: GETUPVAL  R26 U15      ; R26 := U15
543 [-]: GETTABLE  R26 R26 K71  ; R26 := R26["0xF81722A2"]
544 [-]: MOVE      R27 R24      ; R27 := R24
545 [-]: GETUPVAL  R28 U18      ; R28 := U18
546 [-]: GETTABLE  R28 R28 K106 ; R28 := R28["TRADE_SPAM_DETECTION_PERIOD"]
547 [-]: GETUPVAL  R29 U18      ; R29 := U18
548 [-]: GETTABLE  R29 R29 K107 ; R29 := R29["SPAM_LOCKOUT_TIME"]
549 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
550 [-]: GETGLOBAL R27 K108     ; R27 := 0xD51B2786
551 [-]: CALL      R27 1 2      ; R27 := R27()
552 [-]: SUB       R27 R27 R25  ; R27 := R27 - R25
553 [-]: SUB       R26 R26 R27  ; R26 := R26 - R27
554 [-]: LT        0 K6 R26     ; if 0 >= R26 then PC := 600
555 [-]: JMP       600          ; PC := 600
556 [-]: GETUPVAL  R27 U15      ; R27 := U15
557 [-]: GETTABLE  R27 R27 K71  ; R27 := R27["0xF81722A2"]
558 [-]: MOVE      R28 R17      ; R28 := R17
559 [-]: LOADK     R29 K109     ; R29 := -20
560 [-]: LOADK     R30 K110     ; R30 := 3
561 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
562 [-]: GETGLOBAL R28 K37      ; R28 := mMovie
563 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28["0x1C19D966"]
564 [-]: LOADK     R30 K111     ; R30 := "Window.SendMessageBar.CharLimit.SpamTime"
565 [-]: LOADK     R31 K112     ; R31 := "_y"
566 [-]: MOVE      R32 R27      ; R32 := R27
567 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
568 [-]: GETGLOBAL R28 K37      ; R28 := mMovie
569 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28["0x1C19D966"]
570 [-]: LOADK     R30 K111     ; R30 := "Window.SendMessageBar.CharLimit.SpamTime"
571 [-]: LOADK     R31 K83      ; R31 := "text"
572 [-]: GETUPVAL  R32 U14      ; R32 := U14
573 [-]: GETTABLE  R32 R32 K46  ; R32 := R32["mInputPanel"]
574 [-]: GETTABLE  R32 R32 K113 ; R32 := R32["TimerIcon"]
575 [-]: LOADK     R33 K94      ; R33 := " "
576 [-]: GETGLOBAL R34 K95      ; R34 := 0x9FAED6BC
577 [-]: GETGLOBAL R35 K114     ; R35 := math
578 [-]: GETTABLE  R35 R35 K115 ; R35 := R35["0xF7005A7B"]
579 [-]: MOVE      R36 R26      ; R36 := R26
580 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
581 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
582 [-]: LOADK     R35 K116     ; R35 := "s"
583 [-]: CONCAT    R32 R32 R35  ; R32 := R32 .. R33 .. R34 .. R35
584 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
585 [-]: GETGLOBAL R28 K56      ; R28 := 0xF595ADDE
586 [-]: GETGLOBAL R29 K37      ; R29 := mMovie
587 [-]: SELF      R29 R29 K57  ; R30 := R29; R29 := R29["0x6B7B470B"]
588 [-]: LOADK     R31 K111     ; R31 := "Window.SendMessageBar.CharLimit.SpamTime"
589 [-]: LOADK     R32 K100     ; R32 := "textWidth"
590 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
591 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
592 [-]: ADD       R28 R28 K101 ; R28 := R28 + 16
593 [-]: GETGLOBAL R29 K114     ; R29 := math
594 [-]: GETTABLE  R29 R29 K117 ; R29 := R29["0x8B011038"]
595 [-]: MOVE      R30 R19      ; R30 := R19
596 [-]: MOVE      R31 R28      ; R31 := R28
597 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
598 [-]: MOVE      R19 R29      ; R19 := R29
599 [-]: MOVE      R18 R1       ; R18 := R1
600 [-]: GETGLOBAL R29 K37      ; R29 := mMovie
601 [-]: SELF      R29 R29 K48  ; R30 := R29; R29 := R29["0x1C19D966"]
602 [-]: LOADK     R31 K111     ; R31 := "Window.SendMessageBar.CharLimit.SpamTime"
603 [-]: LOADK     R32 K85      ; R32 := "_visible"
604 [-]: MOVE      R33 R18      ; R33 := R18
605 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
606 [-]: TESTSET   R29 R17 1    ; if R17 then PC := 609 else R29 := R17
607 [-]: JMP       609          ; PC := 609
608 [-]: MOVE      R29 R18      ; R29 := R18
609 [-]: GETGLOBAL R30 K37      ; R30 := mMovie
610 [-]: SELF      R30 R30 K48  ; R31 := R30; R30 := R30["0x1C19D966"]
611 [-]: LOADK     R32 K49      ; R32 := "Window.SendMessageBar.CharLimit"
612 [-]: LOADK     R33 K85      ; R33 := "_visible"
613 [-]: MOVE      R34 R29      ; R34 := R29
614 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
615 [-]: TEST      R29 0        ; if not R29 then PC := 638
616 [-]: JMP       638          ; PC := 638
617 [-]: GETUPVAL  R30 U15      ; R30 := U15
618 [-]: GETTABLE  R30 R30 K71  ; R30 := R30["0xF81722A2"]
619 [-]: TESTSET   R31 R17 0    ; if not R17 then PC := 622 else R31 := R17
620 [-]: JMP       622          ; PC := 622
621 [-]: MOVE      R31 R18      ; R31 := R18
622 [-]: LOADK     R32 K118     ; R32 := 2
623 [-]: LOADK     R33 K60      ; R33 := 1
624 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
625 [-]: MUL       R20 K119 R30 ; R20 := 23 * R30
626 [-]: GETGLOBAL R30 K37      ; R30 := mMovie
627 [-]: SELF      R30 R30 K48  ; R31 := R30; R30 := R30["0x1C19D966"]
628 [-]: LOADK     R32 K120     ; R32 := "Window.SendMessageBar.CharLimit.Bg"
629 [-]: LOADK     R33 K59      ; R33 := "_width"
630 [-]: MOVE      R34 R19      ; R34 := R19
631 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
632 [-]: GETGLOBAL R30 K37      ; R30 := mMovie
633 [-]: SELF      R30 R30 K48  ; R31 := R30; R30 := R30["0x1C19D966"]
634 [-]: LOADK     R32 K120     ; R32 := "Window.SendMessageBar.CharLimit.Bg"
635 [-]: LOADK     R33 K121     ; R33 := "_height"
636 [-]: MOVE      R34 R20      ; R34 := R20
637 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
638 [-]: GETUPVAL  R30 U19      ; R30 := U19
639 [-]: GETTABLE  R30 R30 K122 ; R30 := R30["RefreshChatHistoryCooldown"]
640 [-]: LT        0 K6 R30     ; if 0 >= R30 then PC := 647
641 [-]: JMP       647          ; PC := 647
642 [-]: GETUPVAL  R30 U19      ; R30 := U19
643 [-]: GETUPVAL  R31 U19      ; R31 := U19
644 [-]: GETTABLE  R31 R31 K122 ; R31 := R31["RefreshChatHistoryCooldown"]
645 [-]: SUB       R31 R31 R1   ; R31 := R31 - R1
646 [-]: SETTABLE  R30 K122 R31 ; R30["RefreshChatHistoryCooldown"] := R31
647 [-]: GETGLOBAL R30 K123     ; R30 := _T
648 [-]: GETUPVAL  R31 U20      ; R31 := U20
649 [-]: CALL      R31 1 2      ; R31 := R31()
650 [-]: SETTABLE  R30 K124 R31 ; R30["MouseInChatArea"] := R31
651 [-]: GETTABLE  R30 R0 K125  ; R30 := R0["mWindowTitle"]
652 [-]: GETTABLE  R30 R30 K126 ; R30 := R30["isDragging"]
653 [-]: TEST      R30 1        ; if R30 then PC := 657
654 [-]: JMP       657          ; PC := 657
655 [-]: GETTABLE  R30 R0 K127  ; R30 := R0["mWindowStatus"]
656 [-]: GETTABLE  R30 R30 K126 ; R30 := R30["isDragging"]
657 [-]: TEST      R30 0        ; if not R30 then PC := 789
658 [-]: JMP       789          ; PC := 789
659 [-]: GETGLOBAL R31 K56      ; R31 := 0xF595ADDE
660 [-]: GETGLOBAL R32 K37      ; R32 := mMovie
661 [-]: SELF      R32 R32 K57  ; R33 := R32; R32 := R32["0x6B7B470B"]
662 [-]: LOADK     R34 K128     ; R34 := "_xmouse"
663 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
664 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
665 [-]: GETGLOBAL R32 K56      ; R32 := 0xF595ADDE
666 [-]: GETGLOBAL R33 K37      ; R33 := mMovie
667 [-]: SELF      R33 R33 K57  ; R34 := R33; R33 := R33["0x6B7B470B"]
668 [-]: LOADK     R35 K129     ; R35 := "_ymouse"
669 [-]: CALL      R33 3 0      ; R33,... := R33(R34,R35)
670 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
671 [-]: GETTABLE  R33 R0 K130  ; R33 := R0["mInitMouseX"]
672 [-]: EQ        0 R33 K67    ; if R33 ~= nil then PC := 688
673 [-]: JMP       688          ; PC := 688
674 [-]: SETTABLE  R0 K130 R31  ; R0["mInitMouseX"] := R31
675 [-]: SETTABLE  R0 K131 R32  ; R0["mInitMouseY"] := R32
676 [-]: GETTABLE  R33 R0 K133  ; R33 := R0["mWindow"]
677 [-]: GETTABLE  R33 R33 K134 ; R33 := R33["x"]
678 [-]: SETTABLE  R0 K132 R33  ; R0["mInitWindowX"] := R33
679 [-]: GETTABLE  R33 R0 K133  ; R33 := R0["mWindow"]
680 [-]: GETTABLE  R33 R33 K136 ; R33 := R33["y"]
681 [-]: SETTABLE  R0 K135 R33  ; R0["mInitWindowY"] := R33
682 [-]: GETTABLE  R33 R0 K133  ; R33 := R0["mWindow"]
683 [-]: GETTABLE  R33 R33 K138 ; R33 := R33["width"]
684 [-]: SETTABLE  R0 K137 R33  ; R0["mInitWindowW"] := R33
685 [-]: GETTABLE  R33 R0 K133  ; R33 := R0["mWindow"]
686 [-]: GETTABLE  R33 R33 K140 ; R33 := R33["height"]
687 [-]: SETTABLE  R0 K139 R33  ; R0["mInitWindowH"] := R33
688 [-]: GETTABLE  R33 R0 K141  ; R33 := R0["mPrevMouseX"]
689 [-]: EQ        0 R33 R31    ; if R33 ~= R31 then PC := 694
690 [-]: JMP       694          ; PC := 694
691 [-]: GETTABLE  R33 R0 K142  ; R33 := R0["mPrevMouseY"]
692 [-]: EQ        1 R33 R32    ; if R33 == R32 then PC := 755
693 [-]: JMP       755          ; PC := 755
694 [-]: GETTABLE  R33 R0 K132  ; R33 := R0["mInitWindowX"]
695 [-]: SUB       R33 R31 R33  ; R33 := R31 - R33
696 [-]: GETTABLE  R34 R0 K130  ; R34 := R0["mInitMouseX"]
697 [-]: GETTABLE  R35 R0 K132  ; R35 := R0["mInitWindowX"]
698 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
699 [-]: SUB       R33 R33 R34  ; R33 := R33 - R34
700 [-]: GETTABLE  R34 R0 K135  ; R34 := R0["mInitWindowY"]
701 [-]: SUB       R34 R32 R34  ; R34 := R32 - R34
702 [-]: GETTABLE  R35 R0 K131  ; R35 := R0["mInitMouseY"]
703 [-]: GETTABLE  R36 R0 K135  ; R36 := R0["mInitWindowY"]
704 [-]: SUB       R35 R35 R36  ; R35 := R35 - R36
705 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
706 [-]: GETTABLE  R35 R0 K125  ; R35 := R0["mWindowTitle"]
707 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["isDragging"]
708 [-]: TEST      R35 0        ; if not R35 then PC := 719
709 [-]: JMP       719          ; PC := 719
710 [-]: SELF      R35 R0 K143  ; R36 := R0; R35 := R0["0xEC183DDC"]
711 [-]: GETTABLE  R37 R0 K132  ; R37 := R0["mInitWindowX"]
712 [-]: ADD       R37 R37 R33  ; R37 := R37 + R33
713 [-]: GETTABLE  R38 R0 K135  ; R38 := R0["mInitWindowY"]
714 [-]: ADD       R38 R38 R34  ; R38 := R38 + R34
715 [-]: MOVE      R39 R1       ; R39 := R1
716 [-]: MOVE      R40 R0       ; R40 := R0
717 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
718 [-]: JMP       786          ; PC := 786
719 [-]: GETTABLE  R35 R0 K127  ; R35 := R0["mWindowStatus"]
720 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["isDragging"]
721 [-]: TEST      R35 0        ; if not R35 then PC := 786
722 [-]: JMP       786          ; PC := 786
723 [-]: GETUPVAL  R35 U19      ; R35 := U19
724 [-]: SETTABLE  R35 K144 K145; R35["ResizingWindow"] := "0x1"
725 [-]: GETTABLE  R35 R0 K127  ; R35 := R0["mWindowStatus"]
726 [-]: GETTABLE  R35 R35 K146 ; R35 := R35["ResizeClipName"]
727 [-]: GETTABLE  R36 R0 K147  ; R36 := R0["mTopResizeClipName"]
728 [-]: EQ        0 R35 R36    ; if R35 ~= R36 then PC := 738
729 [-]: JMP       738          ; PC := 738
730 [-]: SELF      R35 R0 K143  ; R36 := R0; R35 := R0["0xEC183DDC"]
731 [-]: GETTABLE  R37 R0 K132  ; R37 := R0["mInitWindowX"]
732 [-]: GETTABLE  R38 R0 K135  ; R38 := R0["mInitWindowY"]
733 [-]: ADD       R38 R38 R34  ; R38 := R38 + R34
734 [-]: MOVE      R39 R1       ; R39 := R1
735 [-]: MOVE      R40 R0       ; R40 := R0
736 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
737 [-]: UNM       R34 R34      ; R34 := - R34
738 [-]: SELF      R35 R0 K148  ; R36 := R0; R35 := R0["0xD1D449ED"]
739 [-]: GETGLOBAL R37 K114     ; R37 := math
740 [-]: GETTABLE  R37 R37 K149 ; R37 := R37["0x65F9712A"]
741 [-]: GETTABLE  R38 R0 K137  ; R38 := R0["mInitWindowW"]
742 [-]: ADD       R38 R38 R33  ; R38 := R38 + R33
743 [-]: LOADK     R39 K150     ; R39 := 1738
744 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
745 [-]: GETTABLE  R38 R0 K139  ; R38 := R0["mInitWindowH"]
746 [-]: ADD       R38 R38 R34  ; R38 := R38 + R34
747 [-]: GETUPVAL  R39 U19      ; R39 := U19
748 [-]: GETTABLE  R39 R39 K122 ; R39 := R39["RefreshChatHistoryCooldown"]
749 [-]: LE        1 R39 K6     ; if R39 <= 0 then PC := 752
750 [-]: JMP       752          ; PC := 752
751 [-]: MOVE      R39 R0       ; R39 := R0
752 [-]: MOVE      R39 R1       ; R39 := R1
753 [-]: CALL      R35 5 1      ; R35(R36,R37,R38,R39)
754 [-]: JMP       786          ; PC := 786
755 [-]: GETUPVAL  R35 U19      ; R35 := U19
756 [-]: GETTABLE  R35 R35 K151 ; R35 := R35["ResizeRequired"]
757 [-]: TEST      R35 0        ; if not R35 then PC := 786
758 [-]: JMP       786          ; PC := 786
759 [-]: GETUPVAL  R35 U19      ; R35 := U19
760 [-]: GETTABLE  R35 R35 K122 ; R35 := R35["RefreshChatHistoryCooldown"]
761 [-]: LE        0 R35 K6     ; if R35 > 0 then PC := 786
762 [-]: JMP       786          ; PC := 786
763 [-]: GETUPVAL  R35 U19      ; R35 := U19
764 [-]: SETTABLE  R35 K151 K152; R35["ResizeRequired"] := "0x0"
765 [-]: GETGLOBAL R35 K153     ; R35 := 0xECFDD17
766 [-]: GETTABLE  R36 R0 K154  ; R36 := R0["mPanelList"]
767 [-]: CALL      R35 2 4      ; R35,R36,R37 := R35(R36)
768 [-]: JMP       771          ; PC := 771
769 [-]: SELF      R40 R39 K155 ; R41 := R39; R40 := R39["0x3037CE7E"]
770 [-]: CALL      R40 2 1      ; R40(R41)
771 [-]: TFORLOOP  R35 2        ; R38,R39 :=  R35(R36,R37); if R38 ~= nil then begin PC = 769; R37 := R38 end
772 [-]: JMP       769          ; PC := 769
773 [-]: GETGLOBAL R40 K1       ; R40 := 0x400E7765
774 [-]: GETTABLE  R41 R0 K154  ; R41 := R0["mPanelList"]
775 [-]: GETTABLE  R42 R0 K156  ; R42 := R0["mActivePanelName"]
776 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
777 [-]: CALL      R40 2 2      ; R40 := R40(R41)
778 [-]: TEST      R40 1        ; if R40 then PC := 786
779 [-]: JMP       786          ; PC := 786
780 [-]: GETTABLE  R40 R0 K154  ; R40 := R0["mPanelList"]
781 [-]: GETTABLE  R41 R0 K156  ; R41 := R0["mActivePanelName"]
782 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
783 [-]: SELF      R40 R40 K157 ; R41 := R40; R40 := R40["0xEEFE2F88"]
784 [-]: MOVE      R42 R1       ; R42 := R1
785 [-]: CALL      R40 3 1      ; R40(R41,R42)
786 [-]: SETTABLE  R0 K141 R31  ; R0["mPrevMouseX"] := R31
787 [-]: SETTABLE  R0 K142 R32  ; R0["mPrevMouseY"] := R32
788 [-]: JMP       828          ; PC := 828
789 [-]: SETTABLE  R0 K130 K67  ; R0["mInitMouseX"] := nil
790 [-]: SETTABLE  R0 K131 K67  ; R0["mInitMouseY"] := nil
791 [-]: SETTABLE  R0 K141 K67  ; R0["mPrevMouseX"] := nil
792 [-]: SETTABLE  R0 K142 K67  ; R0["mPrevMouseY"] := nil
793 [-]: SETTABLE  R0 K132 K67  ; R0["mInitWindowX"] := nil
794 [-]: SETTABLE  R0 K135 K67  ; R0["mInitWindowY"] := nil
795 [-]: SETTABLE  R0 K137 K67  ; R0["mInitWindowW"] := nil
796 [-]: SETTABLE  R0 K139 K67  ; R0["mInitWindowH"] := nil
797 [-]: GETUPVAL  R40 U19      ; R40 := U19
798 [-]: GETTABLE  R40 R40 K144 ; R40 := R40["ResizingWindow"]
799 [-]: TEST      R40 0        ; if not R40 then PC := 828
800 [-]: JMP       828          ; PC := 828
801 [-]: GETUPVAL  R40 U19      ; R40 := U19
802 [-]: SETTABLE  R40 K144 K152; R40["ResizingWindow"] := "0x0"
803 [-]: GETUPVAL  R40 U19      ; R40 := U19
804 [-]: SETTABLE  R40 K151 K152; R40["ResizeRequired"] := "0x0"
805 [-]: GETUPVAL  R40 U19      ; R40 := U19
806 [-]: SETTABLE  R40 K122 K6  ; R40["RefreshChatHistoryCooldown"] := 0
807 [-]: GETGLOBAL R40 K153     ; R40 := 0xECFDD17
808 [-]: GETTABLE  R41 R0 K154  ; R41 := R0["mPanelList"]
809 [-]: CALL      R40 2 4      ; R40,R41,R42 := R40(R41)
810 [-]: JMP       813          ; PC := 813
811 [-]: SELF      R45 R44 K155 ; R46 := R44; R45 := R44["0x3037CE7E"]
812 [-]: CALL      R45 2 1      ; R45(R46)
813 [-]: TFORLOOP  R40 2        ; R43,R44 :=  R40(R41,R42); if R43 ~= nil then begin PC = 811; R42 := R43 end
814 [-]: JMP       811          ; PC := 811
815 [-]: GETGLOBAL R45 K1       ; R45 := 0x400E7765
816 [-]: GETTABLE  R46 R0 K154  ; R46 := R0["mPanelList"]
817 [-]: GETTABLE  R47 R0 K156  ; R47 := R0["mActivePanelName"]
818 [-]: GETTABLE  R46 R46 R47  ; R46 := R46[R47]
819 [-]: CALL      R45 2 2      ; R45 := R45(R46)
820 [-]: TEST      R45 1        ; if R45 then PC := 828
821 [-]: JMP       828          ; PC := 828
822 [-]: GETTABLE  R45 R0 K154  ; R45 := R0["mPanelList"]
823 [-]: GETTABLE  R46 R0 K156  ; R46 := R0["mActivePanelName"]
824 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
825 [-]: SELF      R45 R45 K157 ; R46 := R45; R45 := R45["0xEEFE2F88"]
826 [-]: MOVE      R47 R1       ; R47 := R1
827 [-]: CALL      R45 3 1      ; R45(R46,R47)
828 [-]: GETTABLE  R45 R0 K158  ; R45 := R0["mMouseIsDragging"]
829 [-]: EQ        1 R45 R30    ; if R45 == R30 then PC := 839
830 [-]: JMP       839          ; PC := 839
831 [-]: SELF      R45 R0 K143  ; R46 := R0; R45 := R0["0xEC183DDC"]
832 [-]: GETTABLE  R47 R0 K133  ; R47 := R0["mWindow"]
833 [-]: GETTABLE  R47 R47 K134 ; R47 := R47["x"]
834 [-]: GETTABLE  R48 R0 K133  ; R48 := R0["mWindow"]
835 [-]: GETTABLE  R48 R48 K136 ; R48 := R48["y"]
836 [-]: MOVE      R49 R1       ; R49 := R1
837 [-]: MOVE      R50 R0       ; R50 := R0
838 [-]: CALL      R45 6 1      ; R45(R46,R47,R48,R49,R50)
839 [-]: SETTABLE  R0 K158 R30  ; R0["mMouseIsDragging"] := R30
840 [-]: TEST      R30 0        ; if not R30 then PC := 844
841 [-]: JMP       844          ; PC := 844
842 [-]: GETGLOBAL R45 K123     ; R45 := _T
843 [-]: SETTABLE  R45 K124 K145; R45["MouseInChatArea"] := "0x1"
844 [-]: GETTABLE  R45 R0 K159  ; R45 := R0["mUserPanel"]
845 [-]: SELF      R45 R45 K160 ; R46 := R45; R45 := R45["0x8C7099E9"]
846 [-]: MOVE      R47 R1       ; R47 := R1
847 [-]: CALL      R45 3 1      ; R45(R46,R47)
848 [-]: GETGLOBAL R45 K153     ; R45 := 0xECFDD17
849 [-]: GETTABLE  R46 R0 K154  ; R46 := R0["mPanelList"]
850 [-]: CALL      R45 2 4      ; R45,R46,R47 := R45(R46)
851 [-]: JMP       860          ; PC := 860
852 [-]: GETGLOBAL R50 K1       ; R50 := 0x400E7765
853 [-]: MOVE      R51 R49      ; R51 := R49
854 [-]: CALL      R50 2 2      ; R50 := R50(R51)
855 [-]: TEST      R50 1        ; if R50 then PC := 860
856 [-]: JMP       860          ; PC := 860
857 [-]: SELF      R50 R49 K160 ; R51 := R49; R50 := R49["0x8C7099E9"]
858 [-]: MOVE      R52 R1       ; R52 := R1
859 [-]: CALL      R50 3 1      ; R50(R51,R52)
860 [-]: TFORLOOP  R45 2        ; R48,R49 :=  R45(R46,R47); if R48 ~= nil then begin PC = 852; R47 := R48 end
861 [-]: JMP       852          ; PC := 852
862 [-]: RETURN    R0 1         ; return 


; Function #123.67:
;
; Name:            
; Defined at line: 8484
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: NEWTABLE  R3 4 0       ; R3 := {}
  2 [-]: LOADK     R4 K0        ; R4 := "Window.TabMenu.WindowTitle"
  3 [-]: LOADK     R5 K1        ; R5 := "Window.TabMenu.TabDivLine"
  4 [-]: LOADK     R6 K2        ; R6 := "Window.WindowStatus"
  5 [-]: LOADK     R7 K3        ; R7 := "Window.TabMenu.Resize"
  6 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
  7 [-]: TEST      R2 0         ; if not R2 then PC := 32
  8 [-]: JMP       32           ; PC := 32
  9 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 10 [-]: GETGLOBAL R5 K5        ; R5 := _G
 11 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UISound_WindowOpen"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 32
 14 [-]: JMP       32           ; PC := 32
 15 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 16 [-]: GETGLOBAL R5 K5        ; R5 := _G
 17 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["UISound_WindowClose"]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 32
 20 [-]: JMP       32           ; PC := 32
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0x25992394"]
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0xF81722A2"]
 25 [-]: MOVE      R6 R1        ; R6 := R1
 26 [-]: GETGLOBAL R7 K5        ; R7 := _G
 27 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UISound_WindowOpen"]
 28 [-]: GETGLOBAL R8 K5        ; R8 := _G
 29 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["UISound_WindowClose"]
 30 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 31 [-]: CALL      R4 0 1       ; R4(R5,...)
 32 [-]: LOADK     R4 K10       ; R4 := 0
 33 [-]: TEST      R1 0         ; if not R1 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mWindow"]
 36 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["y"]
 37 [-]: GETUPVAL  R6 U1        ; R6 := U1
 38 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["mWindow"]
 39 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["y"]
 40 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["mWindow"]
 41 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["height"]
 42 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 43 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 44 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["mWindow"]
 47 [-]: GETTABLE  R4 R7 K13    ; R4 := R7["height"]
 48 [-]: GETGLOBAL R7 K14       ; R7 := mMovie
 49 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x1C19D966"]
 50 [-]: LOADK     R9 K16       ; R9 := "Window.TabMenu.ExpandCallout"
 51 [-]: LOADK     R10 K17      ; R10 := "_visible"
 52 [-]: MOVE      R11 R1       ; R11 := R1
 53 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 54 [-]: GETGLOBAL R7 K14       ; R7 := mMovie
 55 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x1C19D966"]
 56 [-]: LOADK     R9 K18       ; R9 := "Window.TabMenu"
 57 [-]: LOADK     R10 K19      ; R10 := "_y"
 58 [-]: MOVE      R11 R4       ; R11 := R4
 59 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 60 [-]: LOADK     R7 K20       ; R7 := 1
 61 [-]: LEN       R8 R3        ; R8 := # R3
 62 [-]: LOADK     R9 K20       ; R9 := 1
 63 [-]: FORPREP   R7 70        ; R7 -= R9; PC := 70
 64 [-]: GETGLOBAL R11 K14      ; R11 := mMovie
 65 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x1C19D966"]
 66 [-]: GETTABLE  R13 R3 R10   ; R13 := R3[R10]
 67 [-]: LOADK     R14 K17      ; R14 := "_visible"
 68 [-]: MOVE      R15 R1       ; R15 := R1
 69 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 70 [-]: FORLOOP   R7 64        ; R7 += R9; if R7 <= R8 then begin PC := 64; R10 := R7 end
 71 [-]: SELF      R11 R0 K21   ; R12 := R0; R11 := R0["0xDD0B0B9E"]
 72 [-]: CALL      R11 2 1      ; R11(R12)
 73 [-]: SELF      R11 R0 K22   ; R12 := R0; R11 := R0["0xEC183DDC"]
 74 [-]: GETTABLE  R13 R0 K11   ; R13 := R0["mWindow"]
 75 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["x"]
 76 [-]: GETTABLE  R14 R0 K11   ; R14 := R0["mWindow"]
 77 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["y"]
 78 [-]: MOVE      R15 R0       ; R15 := R0
 79 [-]: MOVE      R16 R2       ; R16 := R2
 80 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 81 [-]: RETURN    R0 1         ; return 


; Function #123.68:
;
; Name:            
; Defined at line: 8520
; #Upvalues:       6
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: LOADK     R5 K0        ; R5 := 10
  2 [-]: GETUPVAL  R6 U0        ; R6 := U0
  3 [-]: GETUPVAL  R7 U1        ; R7 := U1
  4 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mWindow"]
  5 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["width"]
  6 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mWindow"]
  7 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["height"]
  8 [-]: GETUPVAL  R10 U2       ; R10 := U2
  9 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0xF81722A2"]
 10 [-]: GETUPVAL  R11 U2       ; R11 := U2
 11 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0xCFE52766"]
 12 [-]: CALL      R11 1 2      ; R11 := R11()
 13 [-]: GETUPVAL  R12 U3       ; R12 := U3
 14 [-]: DIV       R12 R12 K6   ; R12 := R12 / 2
 15 [-]: MUL       R12 R6 R12   ; R12 := R6 * R12
 16 [-]: LOADK     R13 K7       ; R13 := 0
 17 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 18 [-]: GETUPVAL  R11 U2       ; R11 := U2
 19 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["0xF81722A2"]
 20 [-]: GETUPVAL  R12 U2       ; R12 := U2
 21 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["0xCFE52766"]
 22 [-]: CALL      R12 1 2      ; R12 := R12()
 23 [-]: GETUPVAL  R13 U3       ; R13 := U3
 24 [-]: DIV       R13 R13 K6   ; R13 := R13 / 2
 25 [-]: MUL       R13 R7 R13   ; R13 := R7 * R13
 26 [-]: LOADK     R14 K7       ; R14 := 0
 27 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 28 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mVisualMode"]
 29 [-]: GETTABLE  R13 R0 K9    ; R13 := R0["VISUAL_MODE_MENU_SIMPLE"]
 30 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 49
 31 [-]: JMP       49           ; PC := 49
 32 [-]: GETGLOBAL R12 K10      ; R12 := 0xF595ADDE
 33 [-]: GETGLOBAL R13 K11      ; R13 := mMovie
 34 [-]: SELF      R13 R13 K12  ; R14 := R13; R13 := R13["0x6B7B470B"]
 35 [-]: LOADK     R15 K13      ; R15 := "Window.TabMenu"
 36 [-]: LOADK     R16 K14      ; R16 := "_y"
 37 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 38 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 39 [-]: ADD       R12 R2 R12   ; R12 := R2 + R12
 40 [-]: GETGLOBAL R13 K15      ; R13 := 0x6374FD98
 41 [-]: MOVE      R14 R12      ; R14 := R12
 42 [-]: MOVE      R15 R11      ; R15 := R11
 43 [-]: SUB       R16 R7 K16   ; R16 := R7 - 33
 44 [-]: SUB       R16 R16 R11  ; R16 := R16 - R11
 45 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 46 [-]: SUB       R14 R13 R12  ; R14 := R13 - R12
 47 [-]: ADD       R2 R2 R14    ; R2 := R2 + R14
 48 [-]: JMP       58           ; PC := 58
 49 [-]: GETGLOBAL R14 K15      ; R14 := 0x6374FD98
 50 [-]: MOVE      R15 R2       ; R15 := R2
 51 [-]: MOVE      R16 R11      ; R16 := R11
 52 [-]: SUB       R17 R7 R9    ; R17 := R7 - R9
 53 [-]: MUL       R18 R5 K17   ; R18 := R5 * 3
 54 [-]: ADD       R18 R18 R11  ; R18 := R18 + R11
 55 [-]: SUB       R17 R17 R18  ; R17 := R17 - R18
 56 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 57 [-]: MOVE      R2 R14       ; R2 := R14
 58 [-]: GETTABLE  R14 R0 K18   ; R14 := R0["mUserPanel"]
 59 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["mIsExpanded"]
 60 [-]: TEST      R14 0        ; if not R14 then PC := 75
 61 [-]: JMP       75           ; PC := 75
 62 [-]: GETTABLE  R14 R0 K18   ; R14 := R0["mUserPanel"]
 63 [-]: GETTABLE  R14 R14 K1   ; R14 := R14["mWindow"]
 64 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["width"]
 65 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
 66 [-]: GETTABLE  R14 R0 K18   ; R14 := R0["mUserPanel"]
 67 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mUserLocator"]
 68 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["mIsExpanded"]
 69 [-]: TEST      R14 0        ; if not R14 then PC := 75
 70 [-]: JMP       75           ; PC := 75
 71 [-]: GETTABLE  R14 R0 K18   ; R14 := R0["mUserPanel"]
 72 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mUserLocator"]
 73 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mGridWidth"]
 74 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
 75 [-]: GETGLOBAL R14 K15      ; R14 := 0x6374FD98
 76 [-]: MOVE      R15 R1       ; R15 := R1
 77 [-]: MOVE      R16 R10      ; R16 := R10
 78 [-]: SUB       R17 R6 R8    ; R17 := R6 - R8
 79 [-]: SUB       R17 R17 R10  ; R17 := R17 - R10
 80 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 81 [-]: MOVE      R1 R14       ; R1 := R14
 82 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["mWindow"]
 83 [-]: SETTABLE  R14 K22 R1   ; R14["x"] := R1
 84 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["mWindow"]
 85 [-]: SETTABLE  R14 K23 R2   ; R14["y"] := R2
 86 [-]: GETGLOBAL R14 K11      ; R14 := mMovie
 87 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14["0x1C19D966"]
 88 [-]: GETTABLE  R16 R0 K25   ; R16 := R0["mClipName"]
 89 [-]: LOADK     R17 K26      ; R17 := "_x"
 90 [-]: MOVE      R18 R1       ; R18 := R1
 91 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 92 [-]: GETGLOBAL R14 K11      ; R14 := mMovie
 93 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14["0x1C19D966"]
 94 [-]: GETTABLE  R16 R0 K25   ; R16 := R0["mClipName"]
 95 [-]: LOADK     R17 K14      ; R17 := "_y"
 96 [-]: MOVE      R18 R2       ; R18 := R2
 97 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 98 [-]: GETGLOBAL R14 K27      ; R14 := Engine
 99 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["0x9490FE70"]
100 [-]: CALL      R14 1 2      ; R14 := R14()
101 [-]: TEST      R14 1        ; if R14 then PC := 141
102 [-]: JMP       141          ; PC := 141
103 [-]: TEST      R3 0         ; if not R3 then PC := 141
104 [-]: JMP       141          ; PC := 141
105 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["mWindow"]
106 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["y"]
107 [-]: GETUPVAL  R15 U1       ; R15 := U1
108 [-]: DIV       R15 R15 K6   ; R15 := R15 / 2
109 [-]: LT        0 R15 R14    ; if R15 >= R14 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["mWindow"]
112 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["height"]
113 [-]: ADD       R2 R2 R14    ; R2 := R2 + R14
114 [-]: GETGLOBAL R14 K15      ; R14 := 0x6374FD98
115 [-]: DIV       R15 R1 R6    ; R15 := R1 / R6
116 [-]: LOADK     R16 K7       ; R16 := 0
117 [-]: LOADK     R17 K29      ; R17 := 1
118 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
119 [-]: GETGLOBAL R15 K15      ; R15 := 0x6374FD98
120 [-]: DIV       R16 R2 R7    ; R16 := R2 / R7
121 [-]: LOADK     R17 K7       ; R17 := 0
122 [-]: LOADK     R18 K29      ; R18 := 1
123 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
124 [-]: GETGLOBAL R16 K30      ; R16 := 0x400E7765
125 [-]: GETUPVAL  R17 U4       ; R17 := U4
126 [-]: CALL      R16 2 2      ; R16 := R16(R17)
127 [-]: TEST      R16 1        ; if R16 then PC := 141
128 [-]: JMP       141          ; PC := 141
129 [-]: GETUPVAL  R16 U4       ; R16 := U4
130 [-]: SELF      R16 R16 K31  ; R17 := R16; R16 := R16["0x6B0A7B24"]
131 [-]: GETUPVAL  R18 U5       ; R18 := U5
132 [-]: MOVE      R19 R1       ; R19 := R1
133 [-]: MOVE      R20 R14      ; R20 := R14
134 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
135 [-]: GETUPVAL  R16 U4       ; R16 := U4
136 [-]: SELF      R16 R16 K31  ; R17 := R16; R16 := R16["0x6B0A7B24"]
137 [-]: GETUPVAL  R18 U5       ; R18 := U5
138 [-]: MOVE      R19 R0       ; R19 := R0
139 [-]: MOVE      R20 R15      ; R20 := R15
140 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
141 [-]: RETURN    R0 1         ; return 


; Function #123.69:
;
; Name:            
; Defined at line: 8566
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "TabMenu.MinMaxBtn.Separator"
  5 [-]: LOADK     R5 K4        ; R5 := "_visible"
  6 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mVisualMode"]
  7 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["VISUAL_MODE_MENU_SIMPLE"]
  8 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R6 R0        ; R6 := R0
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["mWindow"]
 14 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["width"]
 15 [-]: SUB       R1 R1 K9     ; R1 := R1 - 27
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mVisualMode"]
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
 18 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 41
 19 [-]: JMP       41           ; PC := 41
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0xF81722A2"]
 22 [-]: GETGLOBAL R3 K11       ; R3 := Engine
 23 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0x9490FE70"]
 24 [-]: CALL      R3 1 2       ; R3 := R3()
 25 [-]: GETGLOBAL R4 K13       ; R4 := 0xF595ADDE
 26 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 27 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5["0x6B7B470B"]
 28 [-]: LOADK     R7 K15       ; R7 := "Window.TabMenu.RightBumper"
 29 [-]: LOADK     R8 K16       ; R8 := "_x"
 30 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 31 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 32 [-]: GETGLOBAL R5 K13       ; R5 := 0xF595ADDE
 33 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
 34 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x6B7B470B"]
 35 [-]: LOADK     R8 K17       ; R8 := "Window.TabMenu.RightArrow"
 36 [-]: LOADK     R9 K16       ; R9 := "_x"
 37 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 38 [-]: CALL      R5 0 0       ; R5,... := R5(R6,...)
 39 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 40 [-]: SUB       R1 R2 K18    ; R1 := R2 - 6
 41 [-]: GETGLOBAL R3 K19       ; R3 := 0x8C64AFA9
 42 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 43 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 44 [-]: LOADK     R6 K20       ; R6 := ".TabMenu.MinMaxBtn.Icon.gotoAndStop"
 45 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["0xF81722A2"]
 48 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mVisualMode"]
 49 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["VISUAL_MODE_MENU_SIMPLE"]
 50 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R7 R0        ; R7 := R0
 53 [-]: MOVE      R7 R1        ; R7 := R1
 54 [-]: LOADK     R8 K21       ; R8 := "Min"
 55 [-]: LOADK     R9 K22       ; R9 := "Max"
 56 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 57 [-]: CALL      R3 0 1       ; R3(R4,...)
 58 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 59 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x880196A7"]
 60 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 61 [-]: LOADK     R6 K23       ; R6 := "TabMenu.MinMaxBtn"
 62 [-]: LOADK     R7 K16       ; R7 := "_x"
 63 [-]: MOVE      R8 R1        ; R8 := R1
 64 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 65 [-]: RETURN    R0 1         ; return 


; Function #123.70:
;
; Name:            
; Defined at line: 8581
; #Upvalues:       6
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x6374FD98
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mWindow"]
  4 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["minWidth"]
  5 [-]: GETUPVAL  R7 U0        ; R7 := U0
  6 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mWindow"]
  7 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["maxWidth"]
  8 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: MOVE      R1 R4        ; R1 := R4
 11 [-]: GETGLOBAL R4 K0        ; R4 := 0x6374FD98
 12 [-]: MOVE      R5 R2        ; R5 := R2
 13 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mWindow"]
 14 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["minHeight"]
 15 [-]: GETUPVAL  R7 U1        ; R7 := U1
 16 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mWindow"]
 17 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["maxHeight"]
 18 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: MOVE      R2 R4        ; R2 := R4
 21 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mWindow"]
 22 [-]: SETTABLE  R4 K6 R1     ; R4["width"] := R1
 23 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mWindow"]
 24 [-]: SETTABLE  R4 K7 R2     ; R4["height"] := R2
 25 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 26 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 27 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 28 [-]: LOADK     R7 K11       ; R7 := "TabMenu.WindowTitle.Fill"
 29 [-]: LOADK     R8 K12       ; R8 := "_width"
 30 [-]: SUB       R9 R1 K13    ; R9 := R1 - 2
 31 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 32 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 34 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 35 [-]: LOADK     R7 K14       ; R7 := "TabMenu.WindowTitle.FillBlurer"
 36 [-]: LOADK     R8 K12       ; R8 := "_width"
 37 [-]: SUB       R9 R1 K13    ; R9 := R1 - 2
 38 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 39 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 40 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 41 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 42 [-]: LOADK     R7 K15       ; R7 := "TabMenu.WindowTitle.EdgeTop"
 43 [-]: LOADK     R8 K12       ; R8 := "_width"
 44 [-]: SUB       R9 R1 K13    ; R9 := R1 - 2
 45 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 46 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 47 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 48 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 49 [-]: LOADK     R7 K16       ; R7 := "TabMenu.WindowTitle.EdgeBottom"
 50 [-]: LOADK     R8 K12       ; R8 := "_width"
 51 [-]: SUB       R9 R1 K13    ; R9 := R1 - 2
 52 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 53 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 54 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 55 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 56 [-]: LOADK     R7 K17       ; R7 := "TabMenu.WindowTitle.EdgeRight"
 57 [-]: LOADK     R8 K18       ; R8 := "_x"
 58 [-]: SUB       R9 R1 K19    ; R9 := R1 - 1
 59 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 60 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 61 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 62 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 63 [-]: LOADK     R7 K20       ; R7 := "WindowStatus"
 64 [-]: LOADK     R8 K21       ; R8 := "_y"
 65 [-]: ADD       R9 R2 K22    ; R9 := R2 + 18
 66 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 67 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 68 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 69 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 70 [-]: LOADK     R7 K20       ; R7 := "WindowStatus"
 71 [-]: LOADK     R8 K18       ; R8 := "_x"
 72 [-]: SUB       R9 R1 K23    ; R9 := R1 - 9
 73 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 74 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 75 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 76 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 77 [-]: LOADK     R7 K24       ; R7 := "Hint"
 78 [-]: LOADK     R8 K21       ; R8 := "_y"
 79 [-]: ADD       R9 R2 K25    ; R9 := R2 + 6
 80 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 81 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 82 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 83 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 84 [-]: LOADK     R7 K26       ; R7 := "Hint.SimpleTabListMask"
 85 [-]: LOADK     R8 K12       ; R8 := "_width"
 86 [-]: MOVE      R9 R1        ; R9 := R1
 87 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 88 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 89 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
 90 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
 91 [-]: LOADK     R7 K27       ; R7 := "FontIncrease"
 92 [-]: LOADK     R8 K18       ; R8 := "_x"
 93 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["mFontButtonWidth"]
 94 [-]: ADD       R9 R9 K29    ; R9 := R9 + 3
 95 [-]: MUL       R9 R9 K13    ; R9 := R9 * 2
 96 [-]: SUB       R9 R1 R9     ; R9 := R1 - R9
 97 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 98 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
 99 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
100 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
101 [-]: LOADK     R7 K30       ; R7 := "MouseCatcherBtn"
102 [-]: LOADK     R8 K21       ; R8 := "_y"
103 [-]: LOADK     R9 K31       ; R9 := 0
104 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
105 [-]: GETGLOBAL R4 K8        ; R4 := mMovie
106 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x880196A7"]
107 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClipName"]
108 [-]: LOADK     R7 K30       ; R7 := "MouseCatcherBtn"
109 [-]: LOADK     R8 K32       ; R8 := "_height"
110 [-]: GETTABLE  R9 R0 K33    ; R9 := R0["mWindowTitle"]
111 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["height"]
112 [-]: ADD       R9 R2 R9     ; R9 := R2 + R9
113 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
114 [-]: LOADK     R4 K34       ; R4 := 70
115 [-]: GETGLOBAL R5 K8        ; R5 := mMovie
116 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x880196A7"]
117 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mClipName"]
118 [-]: LOADK     R8 K35       ; R8 := "TabMenu.TabMask"
119 [-]: LOADK     R9 K12       ; R9 := "_width"
120 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mWindow"]
121 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["width"]
122 [-]: SUB       R10 R10 R4   ; R10 := R10 - R4
123 [-]: GETGLOBAL R11 K36      ; R11 := 0xF595ADDE
124 [-]: GETGLOBAL R12 K8       ; R12 := mMovie
125 [-]: SELF      R12 R12 K37  ; R13 := R12; R12 := R12["0x6B7B470B"]
126 [-]: GETTABLE  R14 R0 K10   ; R14 := R0["mClipName"]
127 [-]: LOADK     R15 K38      ; R15 := ".TabMenu.TabMask"
128 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
129 [-]: LOADK     R15 K18      ; R15 := "_x"
130 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
131 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
132 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
133 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
134 [-]: GETGLOBAL R5 K39       ; R5 := 0x400E7765
135 [-]: GETUPVAL  R6 U2        ; R6 := U2
136 [-]: GETTABLE  R6 R6 K40    ; R6 := R6["mTabMenu"]
137 [-]: CALL      R5 2 2       ; R5 := R5(R6)
138 [-]: TEST      R5 1         ; if R5 then PC := 144
139 [-]: JMP       144          ; PC := 144
140 [-]: GETUPVAL  R5 U2        ; R5 := U2
141 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["mTabMenu"]
142 [-]: SELF      R5 R5 K41    ; R6 := R5; R5 := R5["0xFFA8B92B"]
143 [-]: CALL      R5 2 1       ; R5(R6)
144 [-]: GETGLOBAL R5 K8        ; R5 := mMovie
145 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x880196A7"]
146 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mClipName"]
147 [-]: LOADK     R8 K42       ; R8 := "TabMenu.Resize"
148 [-]: LOADK     R9 K18       ; R9 := "_x"
149 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mWindow"]
150 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["width"]
151 [-]: GETGLOBAL R11 K36      ; R11 := 0xF595ADDE
152 [-]: GETGLOBAL R12 K8       ; R12 := mMovie
153 [-]: SELF      R12 R12 K37  ; R13 := R12; R12 := R12["0x6B7B470B"]
154 [-]: GETTABLE  R14 R0 K10   ; R14 := R0["mClipName"]
155 [-]: LOADK     R15 K43      ; R15 := ".TabMenu.Resize"
156 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
157 [-]: LOADK     R15 K12      ; R15 := "_width"
158 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
159 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
160 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
161 [-]: SUB       R10 R10 K19  ; R10 := R10 - 1
162 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
163 [-]: SELF      R5 R0 K44    ; R6 := R0; R5 := R0["0x5528ED75"]
164 [-]: GETTABLE  R7 R0 K45    ; R7 := R0["mChatPanelWindow"]
165 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
166 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
167 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
168 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
169 [-]: LOADK     R9 K46       ; R9 := "TabbedChatPanel"
170 [-]: LOADK     R10 K18      ; R10 := "_x"
171 [-]: GETTABLE  R11 R0 K45   ; R11 := R0["mChatPanelWindow"]
172 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["x"]
173 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
174 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
175 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
176 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
177 [-]: LOADK     R9 K46       ; R9 := "TabbedChatPanel"
178 [-]: LOADK     R10 K21      ; R10 := "_y"
179 [-]: GETTABLE  R11 R0 K45   ; R11 := R0["mChatPanelWindow"]
180 [-]: GETTABLE  R11 R11 K48  ; R11 := R11["y"]
181 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
182 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
183 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
184 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
185 [-]: LOADK     R9 K49       ; R9 := "TabbedChatPanel.Fill"
186 [-]: LOADK     R10 K12      ; R10 := "_width"
187 [-]: GETTABLE  R11 R5 K6    ; R11 := R5["width"]
188 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
189 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
190 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
191 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
192 [-]: LOADK     R9 K49       ; R9 := "TabbedChatPanel.Fill"
193 [-]: LOADK     R10 K32      ; R10 := "_height"
194 [-]: GETTABLE  R11 R5 K7    ; R11 := R5["height"]
195 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
196 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
197 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
198 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
199 [-]: LOADK     R9 K50       ; R9 := "TabbedChatPanel.FillBlurer"
200 [-]: LOADK     R10 K12      ; R10 := "_width"
201 [-]: GETTABLE  R11 R5 K6    ; R11 := R5["width"]
202 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
203 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
204 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
205 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
206 [-]: LOADK     R9 K50       ; R9 := "TabbedChatPanel.FillBlurer"
207 [-]: LOADK     R10 K32      ; R10 := "_height"
208 [-]: GETTABLE  R11 R5 K7    ; R11 := R5["height"]
209 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
210 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
211 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
212 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
213 [-]: LOADK     R9 K51       ; R9 := "TabbedChatPanel.EdgeRight"
214 [-]: LOADK     R10 K18      ; R10 := "_x"
215 [-]: GETTABLE  R11 R5 K6    ; R11 := R5["width"]
216 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
217 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
218 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
219 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
220 [-]: LOADK     R9 K51       ; R9 := "TabbedChatPanel.EdgeRight"
221 [-]: LOADK     R10 K32      ; R10 := "_height"
222 [-]: GETTABLE  R11 R5 K7    ; R11 := R5["height"]
223 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
224 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
225 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
226 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
227 [-]: LOADK     R9 K52       ; R9 := "TabbedChatPanel.EdgeLeft"
228 [-]: LOADK     R10 K32      ; R10 := "_height"
229 [-]: GETTABLE  R11 R5 K7    ; R11 := R5["height"]
230 [-]: SUB       R11 R11 K53  ; R11 := R11 - 31
231 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
232 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
233 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
234 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mClipName"]
235 [-]: LOADK     R9 K54       ; R9 := "TabbedChatPanel.DecoLine"
236 [-]: LOADK     R10 K32      ; R10 := "_height"
237 [-]: GETTABLE  R11 R5 K7    ; R11 := R5["height"]
238 [-]: SUB       R11 R11 K55  ; R11 := R11 - 17
239 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
240 [-]: GETGLOBAL R6 K36       ; R6 := 0xF595ADDE
241 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
242 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7["0x6B7B470B"]
243 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
244 [-]: LOADK     R10 K56      ; R10 := ".TabbedChatPanel.ScrollBar"
245 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
246 [-]: LOADK     R10 K12      ; R10 := "_width"
247 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
248 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
249 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
250 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
251 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
252 [-]: LOADK     R10 K57      ; R10 := "TabbedChatPanel.ScrollBar"
253 [-]: LOADK     R11 K18      ; R11 := "_x"
254 [-]: GETTABLE  R12 R5 K6    ; R12 := R5["width"]
255 [-]: DIV       R13 R6 K13   ; R13 := R6 / 2
256 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
257 [-]: ADD       R12 R12 K29  ; R12 := R12 + 3
258 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
259 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
260 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
261 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
262 [-]: LOADK     R10 K58      ; R10 := "TabbedChatPanel.ChatArea"
263 [-]: LOADK     R11 K12      ; R11 := "_width"
264 [-]: GETTABLE  R12 R5 K6    ; R12 := R5["width"]
265 [-]: SUB       R12 R12 K59  ; R12 := R12 - 10
266 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
267 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
268 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
269 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
270 [-]: LOADK     R10 K58      ; R10 := "TabbedChatPanel.ChatArea"
271 [-]: LOADK     R11 K32      ; R11 := "_height"
272 [-]: GETTABLE  R12 R5 K7    ; R12 := R5["height"]
273 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
274 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
275 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
276 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
277 [-]: LOADK     R10 K58      ; R10 := "TabbedChatPanel.ChatArea"
278 [-]: LOADK     R11 K21      ; R11 := "_y"
279 [-]: GETTABLE  R12 R5 K7    ; R12 := R5["height"]
280 [-]: SUB       R12 R12 K60  ; R12 := R12 - 25
281 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
282 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
283 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
284 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
285 [-]: LOADK     R10 K58      ; R10 := "TabbedChatPanel.ChatArea"
286 [-]: LOADK     R11 K61      ; R11 := "verticalAlignment"
287 [-]: LOADK     R12 K62      ; R12 := "bottom"
288 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
289 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
290 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
291 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
292 [-]: LOADK     R10 K63      ; R10 := "TabbedChatPanel.FilterListMask"
293 [-]: LOADK     R11 K12      ; R11 := "_width"
294 [-]: GETTABLE  R12 R5 K6    ; R12 := R5["width"]
295 [-]: SUB       R12 R12 K64  ; R12 := R12 - 49
296 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
297 [-]: GETGLOBAL R7 K39       ; R7 := 0x400E7765
298 [-]: GETTABLE  R8 R0 K65    ; R8 := R0["mFilterList"]
299 [-]: CALL      R7 2 2       ; R7 := R7(R8)
300 [-]: TEST      R7 1         ; if R7 then PC := 307
301 [-]: JMP       307          ; PC := 307
302 [-]: GETTABLE  R7 R0 K65    ; R7 := R0["mFilterList"]
303 [-]: SELF      R7 R7 K66    ; R8 := R7; R7 := R7["0x9D2060CB"]
304 [-]: CLOSURE   R9 0         ; R9 := closure(Function #123.70.1)
305 [-]: MOVE      R0 R0        ; R0 := R0
306 [-]: CALL      R7 3 1       ; R7(R8,R9)
307 [-]: LOADK     R7 K67       ; R7 := 0.25
308 [-]: GETUPVAL  R8 U3        ; R8 := U3
309 [-]: MOVE      R9 R3        ; R9 := R3
310 [-]: SETTABLE  R8 K68 R9    ; R8["ResizeRequired"] := R9
311 [-]: TEST      R3 0         ; if not R3 then PC := 315
312 [-]: JMP       315          ; PC := 315
313 [-]: GETUPVAL  R8 U3        ; R8 := U3
314 [-]: SETTABLE  R8 K69 R7    ; R8["RefreshChatHistoryCooldown"] := R7
315 [-]: GETGLOBAL R8 K70       ; R8 := 0xECFDD17
316 [-]: GETTABLE  R9 R0 K71    ; R9 := R0["mPanelList"]
317 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
318 [-]: JMP       348          ; PC := 348
319 [-]: TEST      R3 1         ; if R3 then PC := 346
320 [-]: JMP       346          ; PC := 346
321 [-]: GETTABLE  R13 R12 K72  ; R13 := R12["mIsActive"]
322 [-]: TEST      R13 0        ; if not R13 then PC := 346
323 [-]: JMP       346          ; PC := 346
324 [-]: GETGLOBAL R13 K36      ; R13 := 0xF595ADDE
325 [-]: GETGLOBAL R14 K8       ; R14 := mMovie
326 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0x6B7B470B"]
327 [-]: GETTABLE  R16 R0 K10   ; R16 := R0["mClipName"]
328 [-]: LOADK     R17 K73      ; R17 := ".TabbedChatPanel."
329 [-]: LOADK     R18 K74      ; R18 := "ChatArea"
330 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
331 [-]: LOADK     R17 K75      ; R17 := "textLines"
332 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
333 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
334 [-]: SUB       R13 R13 K19  ; R13 := R13 - 1
335 [-]: GETTABLE  R14 R0 K76   ; R14 := R0["numLines"]
336 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 341
337 [-]: JMP       341          ; PC := 341
338 [-]: GETTABLE  R14 R12 K77  ; R14 := R12["mMaxVisibleChatLines"]
339 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 348
340 [-]: JMP       348          ; PC := 348
341 [-]: GETUPVAL  R14 U3       ; R14 := U3
342 [-]: SETTABLE  R14 K69 R7   ; R14["RefreshChatHistoryCooldown"] := R7
343 [-]: SELF      R14 R12 K78  ; R15 := R12; R14 := R12["0x3037CE7E"]
344 [-]: CALL      R14 2 1      ; R14(R15)
345 [-]: JMP       348          ; PC := 348
346 [-]: SELF      R14 R12 K78  ; R15 := R12; R14 := R12["0x3037CE7E"]
347 [-]: CALL      R14 2 1      ; R14(R15)
348 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 319; R10 := R11 end
349 [-]: JMP       319          ; PC := 319
350 [-]: GETGLOBAL R14 K39      ; R14 := 0x400E7765
351 [-]: GETTABLE  R15 R0 K71   ; R15 := R0["mPanelList"]
352 [-]: GETTABLE  R16 R0 K79   ; R16 := R0["mActivePanelName"]
353 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
354 [-]: CALL      R14 2 2      ; R14 := R14(R15)
355 [-]: TEST      R14 1        ; if R14 then PC := 375
356 [-]: JMP       375          ; PC := 375
357 [-]: GETTABLE  R14 R0 K71   ; R14 := R0["mPanelList"]
358 [-]: GETTABLE  R15 R0 K79   ; R15 := R0["mActivePanelName"]
359 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
360 [-]: SELF      R14 R14 K80  ; R15 := R14; R14 := R14["0xEEFE2F88"]
361 [-]: MOVE      R16 R1       ; R16 := R1
362 [-]: CALL      R14 3 1      ; R14(R15,R16)
363 [-]: GETGLOBAL R14 K36      ; R14 := 0xF595ADDE
364 [-]: GETGLOBAL R15 K8       ; R15 := mMovie
365 [-]: SELF      R15 R15 K37  ; R16 := R15; R15 := R15["0x6B7B470B"]
366 [-]: GETTABLE  R17 R0 K10   ; R17 := R0["mClipName"]
367 [-]: LOADK     R18 K73      ; R18 := ".TabbedChatPanel."
368 [-]: LOADK     R19 K74      ; R19 := "ChatArea"
369 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
370 [-]: LOADK     R18 K75      ; R18 := "textLines"
371 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
372 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
373 [-]: SUB       R14 R14 K19  ; R14 := R14 - 1
374 [-]: SETTABLE  R0 K76 R14   ; R0["numLines"] := R14
375 [-]: GETTABLE  R14 R0 K81   ; R14 := R0["mUserPanel"]
376 [-]: SELF      R14 R14 K82  ; R15 := R14; R14 := R14["0xD1D449ED"]
377 [-]: MOVE      R16 R1       ; R16 := R1
378 [-]: MOVE      R17 R2       ; R17 := R2
379 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
380 [-]: GETTABLE  R14 R0 K83   ; R14 := R0["mInputPanel"]
381 [-]: SELF      R14 R14 K82  ; R15 := R14; R14 := R14["0xD1D449ED"]
382 [-]: MOVE      R16 R1       ; R16 := R1
383 [-]: MOVE      R17 R2       ; R17 := R2
384 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
385 [-]: GETGLOBAL R14 K84      ; R14 := Engine
386 [-]: GETTABLE  R14 R14 K85  ; R14 := R14["0x9490FE70"]
387 [-]: CALL      R14 1 2      ; R14 := R14()
388 [-]: TEST      R14 1        ; if R14 then PC := 423
389 [-]: JMP       423          ; PC := 423
390 [-]: GETGLOBAL R14 K0       ; R14 := 0x6374FD98
391 [-]: GETTABLE  R15 R0 K1    ; R15 := R0["mWindow"]
392 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["width"]
393 [-]: GETUPVAL  R16 U0       ; R16 := U0
394 [-]: DIV       R15 R15 R16  ; R15 := R15 / R16
395 [-]: LOADK     R16 K31      ; R16 := 0
396 [-]: LOADK     R17 K19      ; R17 := 1
397 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
398 [-]: GETGLOBAL R15 K0       ; R15 := 0x6374FD98
399 [-]: GETTABLE  R16 R0 K1    ; R16 := R0["mWindow"]
400 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["height"]
401 [-]: GETUPVAL  R17 U1       ; R17 := U1
402 [-]: DIV       R16 R16 R17  ; R16 := R16 / R17
403 [-]: LOADK     R17 K31      ; R17 := 0
404 [-]: LOADK     R18 K19      ; R18 := 1
405 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
406 [-]: GETGLOBAL R16 K39      ; R16 := 0x400E7765
407 [-]: GETUPVAL  R17 U4       ; R17 := U4
408 [-]: CALL      R16 2 2      ; R16 := R16(R17)
409 [-]: TEST      R16 1        ; if R16 then PC := 423
410 [-]: JMP       423          ; PC := 423
411 [-]: GETUPVAL  R16 U4       ; R16 := U4
412 [-]: SELF      R16 R16 K86  ; R17 := R16; R16 := R16["0x6299C0AD"]
413 [-]: GETUPVAL  R18 U5       ; R18 := U5
414 [-]: MOVE      R19 R1       ; R19 := R1
415 [-]: MOVE      R20 R14      ; R20 := R14
416 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
417 [-]: GETUPVAL  R16 U4       ; R16 := U4
418 [-]: SELF      R16 R16 K86  ; R17 := R16; R16 := R16["0x6299C0AD"]
419 [-]: GETUPVAL  R18 U5       ; R18 := U5
420 [-]: MOVE      R19 R0       ; R19 := R0
421 [-]: MOVE      R20 R15      ; R20 := R15
422 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
423 [-]: RETURN    R0 1         ; return 


; Function #123.70.1:
;
; Name:            
; Defined at line: 8640
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mFilterList"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x3356ECBD"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #123.71:
;
; Name:            
; Defined at line: 8682
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mPanelList"]
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mActivePanelName"]
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #123.72:
;
; Name:            
; Defined at line: 8687
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x18AAE1E3"]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: NEWTABLE  R3 3 0       ; R3 := {}
  4 [-]: LOADK     R4 K1        ; R4 := 13
  5 [-]: LOADK     R5 K2        ; R5 := 15
  6 [-]: LOADK     R6 K3        ; R6 := 17
  7 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
  8 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  9 [-]: LOADK     R5 K4        ; R5 := "FixedSize"
 10 [-]: LOADK     R6 K5        ; R6 := "Arial Unicode MS"
 11 [-]: LOADK     R7 K5        ; R7 := "Arial Unicode MS"
 12 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 13 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 14 [-]: LOADK     R6 K6        ; R6 := 20.10000038147
 15 [-]: LOADK     R7 K7        ; R7 := 23.049999237061
 16 [-]: LOADK     R8 K8        ; R8 := 25.799999237061
 17 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 18 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 19 [-]: LOADK     R7 K9        ; R7 := 4
 20 [-]: LOADK     R8 K10       ; R8 := 3
 21 [-]: LOADK     R9 K11       ; R9 := 2
 22 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 23 [-]: GETTABLE  R7 R3 R1     ; R7 := R3[R1]
 24 [-]: GETTABLE  R8 R4 R1     ; R8 := R4[R1]
 25 [-]: GETGLOBAL R9 K12       ; R9 := Engine
 26 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0x1398DAFB"]
 27 [-]: CALL      R9 1 2       ; R9 := R9()
 28 [-]: TEST      R9 0         ; if not R9 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADK     R8 K5        ; R8 := "Arial Unicode MS"
 31 [-]: GETGLOBAL R9 K14       ; R9 := mMovie
 32 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
 33 [-]: LOADK     R11 K16      ; R11 := "Window.TabbedChatPanel.ChatArea"
 34 [-]: LOADK     R12 K17      ; R12 := "fontName"
 35 [-]: MOVE      R13 R8       ; R13 := R8
 36 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 37 [-]: GETGLOBAL R9 K14       ; R9 := mMovie
 38 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
 39 [-]: LOADK     R11 K16      ; R11 := "Window.TabbedChatPanel.ChatArea"
 40 [-]: LOADK     R12 K18      ; R12 := "fontSize"
 41 [-]: MOVE      R13 R7       ; R13 := R7
 42 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 43 [-]: GETGLOBAL R9 K14       ; R9 := mMovie
 44 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9["0xD6A79FE9"]
 45 [-]: LOADK     R11 K16      ; R11 := "Window.TabbedChatPanel.ChatArea"
 46 [-]: LOADK     R12 K20      ; R12 := "text"
 47 [-]: LOADK     R13 K21      ; R13 := ""
 48 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 49 [-]: GETGLOBAL R9 K14       ; R9 := mMovie
 50 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
 51 [-]: LOADK     R11 K22      ; R11 := "Window.Hint"
 52 [-]: LOADK     R12 K23      ; R12 := "Callout"
 53 [-]: MOVE      R13 R8       ; R13 := R8
 54 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 55 [-]: SETTABLE  R0 K24 R8    ; R0["mFontName"] := R8
 56 [-]: GETGLOBAL R9 K25       ; R9 := smallChatTextMaterial
 57 [-]: EQ        0 R1 K26     ; if R1 ~= 1 then PC := 64
 58 [-]: JMP       64           ; PC := 64
 59 [-]: GETGLOBAL R10 K12      ; R10 := Engine
 60 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["0x1398DAFB"]
 61 [-]: CALL      R10 1 2      ; R10 := R10()
 62 [-]: TEST      R10 0        ; if not R10 then PC := 79
 63 [-]: JMP       79           ; PC := 79
 64 [-]: NEWTABLE  R10 0 4      ; R10 := {}
 65 [-]: SETTABLE  R10 K27 K28  ; R10["_ko"] := "0x1"
 66 [-]: SETTABLE  R10 K29 K28  ; R10["_ja"] := "0x1"
 67 [-]: SETTABLE  R10 K30 K28  ; R10["_zh"] := "0x1"
 68 [-]: SETTABLE  R10 K31 K28  ; R10["_tc"] := "0x1"
 69 [-]: GETGLOBAL R11 K32      ; R11 := 0xB3DD1645
 70 [-]: CALL      R11 1 2      ; R11 := R11()
 71 [-]: SELF      R11 R11 K33  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 72 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 73 [-]: GETTABLE  R11 R10 R11  ; R11 := R10[R11]
 74 [-]: TEST      R11 0        ; if not R11 then PC := 78
 75 [-]: JMP       78           ; PC := 78
 76 [-]: GETGLOBAL R9 K34       ; R9 := scalingChatAsianTextMaterial
 77 [-]: JMP       79           ; PC := 79
 78 [-]: GETGLOBAL R9 K35       ; R9 := scalingChatTextMaterial
 79 [-]: GETGLOBAL R11 K14      ; R11 := mMovie
 80 [-]: SELF      R11 R11 K36  ; R12 := R11; R11 := R11["0xADBA304B"]
 81 [-]: MOVE      R13 R9       ; R13 := R9
 82 [-]: CALL      R11 3 1      ; R11(R12,R13)
 83 [-]: LOADK     R11 K37      ; R11 := 0
 84 [-]: LOADNIL   R12 R13      ; R12 := R13 := nil
 85 [-]: MOVE      R14 R0       ; R14 := R0
 86 [-]: ADD       R11 R11 K26  ; R11 := R11 + 1
 87 [-]: LOADK     R15 K38      ; R15 := "Window.TabbedChatPanel.ChatEntryLine"
 88 [-]: MOVE      R16 R11      ; R16 := R11
 89 [-]: CONCAT    R12 R15 R16  ; R12 := R15 .. R16
 90 [-]: GETGLOBAL R15 K14      ; R15 := mMovie
 91 [-]: SELF      R15 R15 K39  ; R16 := R15; R15 := R15["0x6B7B470B"]
 92 [-]: MOVE      R17 R12      ; R17 := R12
 93 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 94 [-]: MOVE      R13 R15      ; R13 := R15
 95 [-]: EQ        1 R13 K40    ; if R13 == nil then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: GETGLOBAL R15 K41      ; R15 := 0x9FAED6BC
 98 [-]: MOVE      R16 R13      ; R16 := R13
 99 [-]: CALL      R15 2 2      ; R15 := R15(R16)
100 [-]: EQ        0 R15 K42    ; if R15 ~= "undefined" then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: MOVE      R14 R0       ; R14 := R0
103 [-]: MOVE      R14 R1       ; R14 := R1
104 [-]: TEST      R14 0        ; if not R14 then PC := 136
105 [-]: JMP       136          ; PC := 136
106 [-]: MOVE      R15 R12      ; R15 := R12
107 [-]: LOADK     R16 K43      ; R16 := ".Message1"
108 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
109 [-]: MOVE      R16 R12      ; R16 := R12
110 [-]: LOADK     R17 K44      ; R17 := ".Message2"
111 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
112 [-]: GETGLOBAL R17 K14      ; R17 := mMovie
113 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x1C19D966"]
114 [-]: MOVE      R19 R15      ; R19 := R15
115 [-]: LOADK     R20 K17      ; R20 := "fontName"
116 [-]: MOVE      R21 R8       ; R21 := R8
117 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
118 [-]: GETGLOBAL R17 K14      ; R17 := mMovie
119 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x1C19D966"]
120 [-]: MOVE      R19 R16      ; R19 := R16
121 [-]: LOADK     R20 K17      ; R20 := "fontName"
122 [-]: MOVE      R21 R8       ; R21 := R8
123 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
124 [-]: GETGLOBAL R17 K14      ; R17 := mMovie
125 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x1C19D966"]
126 [-]: MOVE      R19 R15      ; R19 := R15
127 [-]: LOADK     R20 K18      ; R20 := "fontSize"
128 [-]: MOVE      R21 R7       ; R21 := R7
129 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
130 [-]: GETGLOBAL R17 K14      ; R17 := mMovie
131 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x1C19D966"]
132 [-]: MOVE      R19 R16      ; R19 := R16
133 [-]: LOADK     R20 K18      ; R20 := "fontSize"
134 [-]: MOVE      R21 R7       ; R21 := R7
135 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
136 [-]: TEST      R14 1        ; if R14 then PC := 86
137 [-]: JMP       86           ; PC := 86
138 [-]: GETGLOBAL R17 K45      ; R17 := 0xECFDD17
139 [-]: GETTABLE  R18 R0 K46   ; R18 := R0["mPanelList"]
140 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
141 [-]: JMP       144          ; PC := 144
142 [-]: SELF      R22 R21 K47  ; R23 := R21; R22 := R21["0x3037CE7E"]
143 [-]: CALL      R22 2 1      ; R22(R23)
144 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 142; R19 := R20 end
145 [-]: JMP       142          ; PC := 142
146 [-]: GETGLOBAL R22 K48      ; R22 := 0x400E7765
147 [-]: MOVE      R23 R2       ; R23 := R2
148 [-]: CALL      R22 2 2      ; R22 := R22(R23)
149 [-]: TEST      R22 1        ; if R22 then PC := 154
150 [-]: JMP       154          ; PC := 154
151 [-]: SELF      R22 R2 K49   ; R23 := R2; R22 := R2["0xEEFE2F88"]
152 [-]: MOVE      R24 R1       ; R24 := R1
153 [-]: CALL      R22 3 1      ; R22(R23,R24)
154 [-]: GETGLOBAL R22 K45      ; R22 := 0xECFDD17
155 [-]: NEWTABLE  R23 2 0      ; R23 := {}
156 [-]: LOADK     R24 K50      ; R24 := ".MessageBox"
157 [-]: LOADK     R25 K51      ; R25 := ".Prompt"
158 [-]: SETLIST   R23 2 1      ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 2
159 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
160 [-]: JMP       189          ; PC := 189
161 [-]: GETTABLE  R27 R0 K52   ; R27 := R0["mInputPanel"]
162 [-]: GETTABLE  R27 R27 K53  ; R27 := R27["mClipPath"]
163 [-]: MOVE      R28 R26      ; R28 := R26
164 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
165 [-]: GETGLOBAL R28 K14      ; R28 := mMovie
166 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0x1C19D966"]
167 [-]: MOVE      R30 R27      ; R30 := R27
168 [-]: LOADK     R31 K17      ; R31 := "fontName"
169 [-]: MOVE      R32 R8       ; R32 := R8
170 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
171 [-]: GETGLOBAL R28 K14      ; R28 := mMovie
172 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0x1C19D966"]
173 [-]: MOVE      R30 R27      ; R30 := R27
174 [-]: LOADK     R31 K18      ; R31 := "fontSize"
175 [-]: MOVE      R32 R7       ; R32 := R7
176 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
177 [-]: GETGLOBAL R28 K14      ; R28 := mMovie
178 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0x1C19D966"]
179 [-]: MOVE      R30 R27      ; R30 := R27
180 [-]: LOADK     R31 K54      ; R31 := "_height"
181 [-]: GETTABLE  R32 R5 R1    ; R32 := R5[R1]
182 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
183 [-]: GETGLOBAL R28 K14      ; R28 := mMovie
184 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0x1C19D966"]
185 [-]: MOVE      R30 R27      ; R30 := R27
186 [-]: LOADK     R31 K55      ; R31 := "_y"
187 [-]: GETTABLE  R32 R6 R1    ; R32 := R6[R1]
188 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
189 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 161; R24 := R25 end
190 [-]: JMP       161          ; PC := 161
191 [-]: GETGLOBAL R28 K48      ; R28 := 0x400E7765
192 [-]: GETTABLE  R29 R0 K56   ; R29 := R0["mUserPanel"]
193 [-]: CALL      R28 2 2      ; R28 := R28(R29)
194 [-]: TEST      R28 1        ; if R28 then PC := 208
195 [-]: JMP       208          ; PC := 208
196 [-]: GETGLOBAL R28 K48      ; R28 := 0x400E7765
197 [-]: GETTABLE  R29 R0 K56   ; R29 := R0["mUserPanel"]
198 [-]: GETTABLE  R29 R29 K57  ; R29 := R29["mListControl"]
199 [-]: CALL      R28 2 2      ; R28 := R28(R29)
200 [-]: TEST      R28 1        ; if R28 then PC := 208
201 [-]: JMP       208          ; PC := 208
202 [-]: GETTABLE  R28 R0 K56   ; R28 := R0["mUserPanel"]
203 [-]: GETTABLE  R28 R28 K57  ; R28 := R28["mListControl"]
204 [-]: SELF      R28 R28 K58  ; R29 := R28; R28 := R28["0x51396186"]
205 [-]: CLOSURE   R30 0        ; R30 := closure(Function #123.72.1)
206 [-]: MOVE      R0 R0        ; R0 := R0
207 [-]: CALL      R28 3 1      ; R28(R29,R30)
208 [-]: GETGLOBAL R28 K48      ; R28 := 0x400E7765
209 [-]: GETTABLE  R29 R0 K56   ; R29 := R0["mUserPanel"]
210 [-]: CALL      R28 2 2      ; R28 := R28(R29)
211 [-]: TEST      R28 1        ; if R28 then PC := 225
212 [-]: JMP       225          ; PC := 225
213 [-]: GETGLOBAL R28 K48      ; R28 := 0x400E7765
214 [-]: GETTABLE  R29 R0 K56   ; R29 := R0["mUserPanel"]
215 [-]: GETTABLE  R29 R29 K59  ; R29 := R29["mEmoteGrid"]
216 [-]: CALL      R28 2 2      ; R28 := R28(R29)
217 [-]: TEST      R28 1        ; if R28 then PC := 225
218 [-]: JMP       225          ; PC := 225
219 [-]: GETTABLE  R28 R0 K56   ; R28 := R0["mUserPanel"]
220 [-]: GETTABLE  R28 R28 K59  ; R28 := R28["mEmoteGrid"]
221 [-]: SELF      R28 R28 K58  ; R29 := R28; R28 := R28["0x51396186"]
222 [-]: CLOSURE   R30 1        ; R30 := closure(Function #123.72.2)
223 [-]: MOVE      R0 R0        ; R0 := R0
224 [-]: CALL      R28 3 1      ; R28(R29,R30)
225 [-]: GETGLOBAL R28 K14      ; R28 := mMovie
226 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0x1C19D966"]
227 [-]: LOADK     R30 K60      ; R30 := "Window.UserPanel.Panel.LocatorBtn.Label"
228 [-]: LOADK     R31 K17      ; R31 := "fontName"
229 [-]: MOVE      R32 R8       ; R32 := R8
230 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
231 [-]: GETGLOBAL R28 K14      ; R28 := mMovie
232 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0x1C19D966"]
233 [-]: LOADK     R30 K60      ; R30 := "Window.UserPanel.Panel.LocatorBtn.Label"
234 [-]: LOADK     R31 K61      ; R31 := "textColor"
235 [-]: LOADK     R32 K62      ; R32 := 13421772
236 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
237 [-]: RETURN    R0 1         ; return 


; Function #123.72.1:
;
; Name:            
; Defined at line: 8760
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mListControl"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA372F64A"]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #123.72.2:
;
; Name:            
; Defined at line: 8767
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mEmoteGrid"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA372F64A"]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #123.73:
;
; Name:            
; Defined at line: 8777
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mDelayedFadeOutTimer"]
  2 [-]: SETTABLE  R0 K0 R2     ; R0["mActiveTabListFadeOutTimer"] := R2
  3 [-]: TEST      R1 1         ; if R1 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mDelayedFadeOutTimer"]
  6 [-]: SETTABLE  R0 K2 R2     ; R0["mActiveChatFadeOutTimer"] := R2
  7 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x625791A8"]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #123.74:
;
; Name:            
; Defined at line: 8787
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mUserPanel"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mListControl"]
  3 [-]: LOADNIL   R3 R3        ; R3 := nil
  4 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
  5 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x6B7B470B"]
  6 [-]: LOADK     R6 K4        ; R6 := "ContextMenu"
  7 [-]: LOADK     R7 K5        ; R7 := "_visible"
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: EQ        0 R4 K6      ; if R4 ~= "true" then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0x9EBF0BD2"]
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: MOVE      R3 R4        ; R3 := R4
 15 [-]: GETGLOBAL R4 K8        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADK     R3 K9        ; R3 := 0
 21 [-]: GETTABLE  R4 R2 K10    ; R4 := R2["mWrapAroundNavigation"]
 22 [-]: TEST      R4 0         ; if not R4 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0x7C43280B"]
 26 [-]: MOVE      R5 R3        ; R5 := R3
 27 [-]: MOVE      R6 R1        ; R6 := R1
 28 [-]: LOADK     R7 K12       ; R7 := 1
 29 [-]: SELF      R8 R2 K13    ; R9 := R2; R8 := R2["0xC51A5C9D"]
 30 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 31 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 32 [-]: MOVE      R3 R4        ; R3 := R4
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R4 K14       ; R4 := 0x6374FD98
 35 [-]: ADD       R5 R3 R1     ; R5 := R3 + R1
 36 [-]: LOADK     R6 K12       ; R6 := 1
 37 [-]: SELF      R7 R2 K13    ; R8 := R2; R7 := R2["0xC51A5C9D"]
 38 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 39 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 40 [-]: MOVE      R3 R4        ; R3 := R4
 41 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mUserPanel"]
 42 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mListControl"]
 43 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETUPVAL  R4 U2        ; R4 := U2
 46 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mUserPanel"]
 47 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0x5B1DCC65"]
 48 [-]: MOVE      R6 R3        ; R6 := R3
 49 [-]: CALL      R4 3 1       ; R4(R5,R6)
 50 [-]: JMP       54           ; PC := 54
 51 [-]: SELF      R4 R2 K15    ; R5 := R2; R4 := R2["0x5B1DCC65"]
 52 [-]: MOVE      R6 R3        ; R6 := R3
 53 [-]: CALL      R4 3 1       ; R4(R5,R6)
 54 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 8818
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x1C19D966"]
  3 [-]: LOADK     R5 K2        ; R5 := "_root"
  4 [-]: LOADK     R6 K3        ; R6 := "_xscale"
  5 [-]: GETUPVAL  R7 U0        ; R7 := U0
  6 [-]: MUL       R7 R7 K4     ; R7 := R7 * 100
  7 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
  8 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  9 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x1C19D966"]
 10 [-]: LOADK     R5 K2        ; R5 := "_root"
 11 [-]: LOADK     R6 K5        ; R6 := "_yscale"
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: MUL       R7 R7 K4     ; R7 := R7 * 100
 14 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: GETUPVAL  R3 U2        ; R3 := U2
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 22 [-]: MOVE      R3 R2        ; R3 := R2
 23 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 24 [-]: GETUPVAL  R4 U3        ; R4 := U3
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 1         ; if R3 then PC := 123
 27 [-]: JMP       123          ; PC := 123
 28 [-]: TEST      R2 0         ; if not R2 then PC := 123
 29 [-]: JMP       123          ; PC := 123
 30 [-]: GETUPVAL  R3 U3        ; R3 := U3
 31 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mWindow"]
 32 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["x"]
 33 [-]: SUB       R3 R0 R3     ; R3 := R0 - R3
 34 [-]: DIV       R3 R3 R0     ; R3 := R3 / R0
 35 [-]: SUB       R3 K9 R3     ; R3 := 1 - R3
 36 [-]: GETUPVAL  R4 U3        ; R4 := U3
 37 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mWindow"]
 38 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["y"]
 39 [-]: SUB       R4 R1 R4     ; R4 := R1 - R4
 40 [-]: DIV       R4 R4 R1     ; R4 := R4 / R1
 41 [-]: SUB       R4 K9 R4     ; R4 := 1 - R4
 42 [-]: GETUPVAL  R5 U3        ; R5 := U3
 43 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mWindow"]
 44 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["width"]
 45 [-]: GETUPVAL  R6 U3        ; R6 := U3
 46 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mWindow"]
 47 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["height"]
 48 [-]: GETUPVAL  R7 U3        ; R7 := U3
 49 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["mWindowTitle"]
 50 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["height"]
 51 [-]: ADD       R6 R6 R7     ; R6 := R6 + R7
 52 [-]: DIV       R7 R5 R0     ; R7 := R5 / R0
 53 [-]: GETUPVAL  R8 U1        ; R8 := U1
 54 [-]: DIV       R8 R5 R8     ; R8 := R5 / R8
 55 [-]: DIV       R9 R6 R1     ; R9 := R6 / R1
 56 [-]: GETUPVAL  R10 U2       ; R10 := U2
 57 [-]: DIV       R10 R6 R10   ; R10 := R6 / R10
 58 [-]: LOADK     R11 K14      ; R11 := 0
 59 [-]: LE        1 R3 K15     ; if R3 <= 0.5 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R12 R0       ; R12 := R0
 62 [-]: MOVE      R12 R1       ; R12 := R1
 63 [-]: ADD       R13 R3 R7    ; R13 := R3 + R7
 64 [-]: LE        1 R13 K15    ; if R13 <= 0.5 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: MOVE      R13 R0       ; R13 := R0
 67 [-]: MOVE      R13 R1       ; R13 := R1
 68 [-]: MOVE      R14 R12      ; R14 := R12
 69 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 78
 70 [-]: JMP       78           ; PC := 78
 71 [-]: SUB       R15 K15 R3   ; R15 := 0.5 - R3
 72 [-]: ADD       R16 R3 R7    ; R16 := R3 + R7
 73 [-]: SUB       R16 R16 R15  ; R16 := R16 - R15
 74 [-]: LT        1 R16 R15    ; if R16 < R15 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: MOVE      R14 R0       ; R14 := R0
 77 [-]: MOVE      R14 R1       ; R14 := R1
 78 [-]: TEST      R14 0        ; if not R14 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETUPVAL  R17 U1       ; R17 := U1
 81 [-]: MUL       R11 R17 R3   ; R11 := R17 * R3
 82 [-]: JMP       87           ; PC := 87
 83 [-]: GETUPVAL  R17 U1       ; R17 := U1
 84 [-]: SUB       R18 R7 R8    ; R18 := R7 - R8
 85 [-]: ADD       R18 R18 R3   ; R18 := R18 + R3
 86 [-]: MUL       R11 R17 R18  ; R11 := R17 * R18
 87 [-]: LOADK     R17 K14      ; R17 := 0
 88 [-]: LE        1 R4 K15     ; if R4 <= 0.5 then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: MOVE      R18 R0       ; R18 := R0
 91 [-]: MOVE      R18 R1       ; R18 := R1
 92 [-]: ADD       R19 R4 R9    ; R19 := R4 + R9
 93 [-]: LE        1 R19 K15    ; if R19 <= 0.5 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R19 R0       ; R19 := R0
 96 [-]: MOVE      R19 R1       ; R19 := R1
 97 [-]: MOVE      R20 R18      ; R20 := R18
 98 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 107
 99 [-]: JMP       107          ; PC := 107
100 [-]: SUB       R21 K15 R4   ; R21 := 0.5 - R4
101 [-]: ADD       R22 R4 R7    ; R22 := R4 + R7
102 [-]: SUB       R22 R22 R21  ; R22 := R22 - R21
103 [-]: LT        1 R22 R21    ; if R22 < R21 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R20 R0       ; R20 := R0
106 [-]: MOVE      R20 R1       ; R20 := R1
107 [-]: TEST      R20 0        ; if not R20 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETUPVAL  R23 U2       ; R23 := U2
110 [-]: MUL       R17 R23 R4   ; R17 := R23 * R4
111 [-]: JMP       116          ; PC := 116
112 [-]: GETUPVAL  R23 U2       ; R23 := U2
113 [-]: SUB       R24 R9 R10   ; R24 := R9 - R10
114 [-]: ADD       R24 R24 R4   ; R24 := R24 + R4
115 [-]: MUL       R17 R23 R24  ; R17 := R23 * R24
116 [-]: GETUPVAL  R23 U3       ; R23 := U3
117 [-]: SELF      R23 R23 K16  ; R24 := R23; R23 := R23["0xEC183DDC"]
118 [-]: MOVE      R25 R11      ; R25 := R11
119 [-]: MOVE      R26 R17      ; R26 := R17
120 [-]: MOVE      R27 R1       ; R27 := R1
121 [-]: MOVE      R28 R0       ; R28 := R0
122 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
123 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 8874
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
  2 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  3 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
  4 [-]: LOADK     R6 K3        ; R6 := "stage"
  5 [-]: LOADK     R7 K4        ; R7 := "stageWidth"
  6 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
  7 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0xF595ADDE
  9 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 10 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 11 [-]: LOADK     R7 K3        ; R7 := "stage"
 12 [-]: LOADK     R8 K5        ; R8 := "stageHeight"
 13 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 14 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETUPVAL  R6 U1        ; R6 := U1
 17 [-]: GETGLOBAL R7 K0        ; R7 := 0xF595ADDE
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: MOVE      R0 R7        ; R0 := R7
 21 [-]: GETGLOBAL R7 K0        ; R7 := 0xF595ADDE
 22 [-]: MOVE      R8 R1        ; R8 := R1
 23 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 24 [-]: MOVE      R1 R7        ; R1 := R7
 25 [-]: GETGLOBAL R7 K6        ; R7 := Engine
 26 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x1398DAFB"]
 27 [-]: CALL      R7 1 2       ; R7 := R7()
 28 [-]: TEST      R7 1         ; if R7 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: LT        1 R0 R3      ; if R0 < R3 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: LT        0 R1 R4      ; if R1 >= R4 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: MOVE      R3 R0        ; R3 := R0
 35 [-]: MOVE      R4 R1        ; R4 := R1
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETGLOBAL R7 K8        ; R7 := math
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0x8B011038"]
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: MOVE      R9 R3        ; R9 := R3
 41 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 42 [-]: MOVE      R7 R0        ; R7 := R0
 43 [-]: GETGLOBAL R7 K8        ; R7 := math
 44 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0x8B011038"]
 45 [-]: MOVE      R8 R1        ; R8 := R1
 46 [-]: MOVE      R9 R4        ; R9 := R4
 47 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: GETUPVAL  R7 U2        ; R7 := U2
 50 [-]: MOVE      R8 R5        ; R8 := R5
 51 [-]: MOVE      R9 R6        ; R9 := R6
 52 [-]: MOVE      R10 R2       ; R10 := R2
 53 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 54 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 8899
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R0 K1        ; R0 := Engine
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x9490FE70"]
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: TEST      R0 0         ; if not R0 then PC := 28
 10 [-]: JMP       28           ; PC := 28
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xBCE68750"]
 13 [-]: CALL      R0 2 1       ; R0(R1)
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xE9E7C453"]
 16 [-]: CALL      R0 2 1       ; R0(R1)
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mVisualMode"]
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VISUAL_MODE_MENU_SIMPLE"]
 21 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xC4A34CB3"]
 25 [-]: GETUPVAL  R2 U0        ; R2 := U0
 26 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 27 [-]: CALL      R0 3 1       ; R0(R1,R2)
 28 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 8909
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R3 3 1       ; R3(R4,R5)
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: GETUPVAL  R4 U2        ; R4 := U2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: GETUPVAL  R3 U2        ; R3 := U2
 12 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0xD1D449ED"]
 13 [-]: GETUPVAL  R5 U2        ; R5 := U2
 14 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mWindow"]
 15 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["width"]
 16 [-]: GETUPVAL  R6 U2        ; R6 := U2
 17 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["mWindow"]
 18 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["height"]
 19 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xBCE68750"]
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: LT        1 R2 R5      ; if R2 < R5 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: GETUPVAL  R3 U2        ; R3 := U2
 29 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xE9E7C453"]
 30 [-]: CALL      R3 2 1       ; R3(R4)
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mVisualMode"]
 33 [-]: GETUPVAL  R4 U2        ; R4 := U2
 34 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
 35 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETUPVAL  R3 U2        ; R3 := U2
 38 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0xC4A34CB3"]
 39 [-]: GETUPVAL  R5 U2        ; R5 := U2
 40 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["VISUAL_MODE_MENU_SIMPLE"]
 41 [-]: CALL      R3 3 1       ; R3(R4,R5)
 42 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 8925
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3C577FA3"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 0         ; if not R0 then PC := 26
 13 [-]: JMP       26           ; PC := 26
 14 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
 15 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
 16 [-]: LOADK     R2 K4        ; R2 := 0
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x654F1092"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 27 [-]: GETUPVAL  R2 U1        ; R2 := U1
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R1 U1        ; R1 := U1
 32 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x73E8D1CB"]
 33 [-]: LOADK     R3 K7        ; R3 := "OnSyncWorldState"
 34 [-]: GETUPVAL  R4 U2        ; R4 := U2
 35 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 36 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 8944
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 12 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 15 [-]: CALL      R1 0 1       ; R1(R2,...)
 16 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 8951
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2176B11E"]
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 12 [-]: CALL      R1 0 1       ; R1(R2,...)
 13 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 8958
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x3BC31182"]
 12 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 15 [-]: CALL      R1 0 1       ; R1(R2,...)
 16 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 8965
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xB40DEC3F"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := "ContextMenu.Btn1"
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xE13A565"]
  9 [-]: LOADK     R2 K4        ; R2 := "ContextItemPressed"
 10 [-]: LOADK     R3 K5        ; R3 := "ContextItemFocused"
 11 [-]: LOADK     R4 K6        ; R4 := "ContextItemUnfocused"
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SETTABLE  R0 K7 K8     ; R0["mLongestElement"] := 0
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: SETTABLE  R0 K9 K10    ; R0["mForcedVerticalSeparation"] := 16
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: SETTABLE  R0 K11 K12   ; R0["mWrapAroundNavigation"] := "0x0"
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: SETTABLE  R0 K13 K14   ; R0["mVisibleElements"] := 8
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: CLOSURE   R1 0         ; R1 := closure(Function #132.1)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SETTABLE  R0 K15 R1    ; R0["SetElementColor"] := R1
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: CLOSURE   R1 1         ; R1 := closure(Function #132.2)
 27 [-]: GETUPVAL  R0 U0        ; R0 := U0
 28 [-]: SETTABLE  R0 K16 R1    ; R0["mOnFocusedCallback"] := R1
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: CLOSURE   R1 2         ; R1 := closure(Function #132.3)
 31 [-]: GETUPVAL  R0 U0        ; R0 := U0
 32 [-]: SETTABLE  R0 K17 R1    ; R0["mOnUnfocusedCallback"] := R1
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: CLOSURE   R1 3         ; R1 := closure(Function #132.4)
 35 [-]: GETUPVAL  R0 U2        ; R0 := U2
 36 [-]: SETTABLE  R0 K18 R1    ; R0["mOnSelectedCallback"] := R1
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: CLOSURE   R1 4         ; R1 := closure(Function #132.5)
 39 [-]: GETUPVAL  R0 U0        ; R0 := U0
 40 [-]: GETUPVAL  R0 U3        ; R0 := U3
 41 [-]: SETTABLE  R0 K19 R1    ; R0["mElementDrawCallback"] := R1
 42 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 43 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 44 [-]: LOADK     R2 K21       ; R2 := "ContextMenu.Bg"
 45 [-]: LOADK     R3 K22       ; R3 := "_color"
 46 [-]: GETGLOBAL R4 K23       ; R4 := _G
 47 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["UIColor_Black"]
 48 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 49 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 50 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 51 [-]: LOADK     R2 K21       ; R2 := "ContextMenu.Bg"
 52 [-]: LOADK     R3 K25       ; R3 := "_alpha"
 53 [-]: LOADK     R4 K26       ; R4 := 75
 54 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 55 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 56 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 57 [-]: LOADK     R2 K27       ; R2 := "ContextMenu.EdgeTop"
 58 [-]: LOADK     R3 K22       ; R3 := "_color"
 59 [-]: GETUPVAL  R4 U4        ; R4 := U4
 60 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 61 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 62 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 63 [-]: LOADK     R2 K27       ; R2 := "ContextMenu.EdgeTop"
 64 [-]: LOADK     R3 K25       ; R3 := "_alpha"
 65 [-]: LOADK     R4 K28       ; R4 := 25
 66 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 67 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 68 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 69 [-]: LOADK     R2 K29       ; R2 := "ContextMenu.EdgeLeft"
 70 [-]: LOADK     R3 K22       ; R3 := "_color"
 71 [-]: GETUPVAL  R4 U4        ; R4 := U4
 72 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 73 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 74 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 75 [-]: LOADK     R2 K29       ; R2 := "ContextMenu.EdgeLeft"
 76 [-]: LOADK     R3 K25       ; R3 := "_alpha"
 77 [-]: LOADK     R4 K28       ; R4 := 25
 78 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 79 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 80 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 81 [-]: LOADK     R2 K30       ; R2 := "ContextMenu.EdgeRight"
 82 [-]: LOADK     R3 K22       ; R3 := "_color"
 83 [-]: GETUPVAL  R4 U4        ; R4 := U4
 84 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 85 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 86 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 87 [-]: LOADK     R2 K30       ; R2 := "ContextMenu.EdgeRight"
 88 [-]: LOADK     R3 K25       ; R3 := "_alpha"
 89 [-]: LOADK     R4 K28       ; R4 := 25
 90 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 91 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 92 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 93 [-]: LOADK     R2 K31       ; R2 := "ContextMenu.EdgeBottom"
 94 [-]: LOADK     R3 K22       ; R3 := "_color"
 95 [-]: GETUPVAL  R4 U4        ; R4 := U4
 96 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 97 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 98 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
 99 [-]: LOADK     R2 K31       ; R2 := "ContextMenu.EdgeBottom"
100 [-]: LOADK     R3 K25       ; R3 := "_alpha"
101 [-]: LOADK     R4 K28       ; R4 := 25
102 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
103 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
104 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
105 [-]: LOADK     R2 K32       ; R2 := "ContextMenu"
106 [-]: LOADK     R3 K33       ; R3 := "enabled"
107 [-]: MOVE      R4 R0        ; R4 := R0
108 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
109 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
110 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0["0x1C19D966"]
111 [-]: LOADK     R2 K32       ; R2 := "ContextMenu"
112 [-]: LOADK     R3 K34       ; R3 := "_visible"
113 [-]: MOVE      R4 R0        ; R4 := R0
114 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
115 [-]: RETURN    R0 1         ; return 


; Function #132.1:
;
; Name:            
; Defined at line: 8973
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := _G
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["UIColor_White"]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x97B489B5"]
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R2 1         ; if R2 then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
  9 [-]: MOVE      R6 R4        ; R6 := R4
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R5 R4 K4     ; R5 := R4["Id"]
 14 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["Id"]
 15 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R5 K0        ; R5 := _G
 18 [-]: GETTABLE  R3 R5 K5     ; R3 := R5["UIColor_Yellow"]
 19 [-]: GETGLOBAL R5 K6        ; R5 := mMovie
 20 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x880196A7"]
 21 [-]: GETTABLE  R7 R1 K8     ; R7 := R1["mClipName"]
 22 [-]: LOADK     R8 K9        ; R8 := "Label"
 23 [-]: LOADK     R9 K10       ; R9 := "_color"
 24 [-]: MOVE      R10 R3       ; R10 := R3
 25 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 26 [-]: RETURN    R0 1         ; return 


; Function #132.2:
;
; Name:            
; Defined at line: 8984
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xB6D508F2"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #132.3:
;
; Name:            
; Defined at line: 8988
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xB6D508F2"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #132.4:
;
; Name:            
; Defined at line: 8992
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["PressedCallback"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: LOADNIL   R1 R1        ; R1 := nil
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["callbackParam"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0x9B34CF36"]
 19 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["callbackParam"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: MOVE      R1 R2        ; R1 := R2
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0x9B34CF36"]
 24 [-]: CALL      R2 1 2       ; R2 := R2()
 25 [-]: MOVE      R1 R2        ; R1 := R2
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: TEST      R2 1         ; if R2 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: TEST      R1 0         ; if not R1 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: CALL      R2 1 1       ; R2()
 35 [-]: RETURN    R0 1         ; return 


; Function #132.5:
;
; Name:            
; Defined at line: 9009
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xB6D508F2"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x17028E8F"]
 14 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mClipName"]
 15 [-]: LOADK     R4 K5        ; R4 := ".Label.text"
 16 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 17 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["Name"]
 18 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mFontName"]
 24 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 27 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x880196A7"]
 28 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mClipName"]
 29 [-]: LOADK     R4 K10       ; R4 := "Label"
 30 [-]: LOADK     R5 K11       ; R5 := "fontName"
 31 [-]: GETUPVAL  R6 U1        ; R6 := U1
 32 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mFontName"]
 33 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 34 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 35 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x6B7B470B"]
 36 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mClipName"]
 37 [-]: LOADK     R4 K13       ; R4 := ".Label"
 38 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 39 [-]: LOADK     R4 K14       ; R4 := "textWidth"
 40 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 41 [-]: GETUPVAL  R2 U0        ; R2 := U0
 42 [-]: GETGLOBAL R3 K16       ; R3 := math
 43 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0x8B011038"]
 44 [-]: GETUPVAL  R4 U0        ; R4 := U0
 45 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mLongestElement"]
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 48 [-]: SETTABLE  R2 K15 R3    ; R2["mLongestElement"] := R3
 49 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 9040
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["NEWS"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: LOADK     R3 K1        ; R3 := 1
  6 [-]: LEN       R4 R1        ; R4 := # R1
  7 [-]: LOADK     R5 K1        ; R5 := 1
  8 [-]: FORPREP   R3 25        ; R3 -= R5; PC := 25
  9 [-]: GETUPVAL  R7 U1        ; R7 := U1
 10 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 11 [-]: SETTABLE  R7 R6 R8     ; R7[R6] := R8
 12 [-]: GETUPVAL  R7 U1        ; R7 := U1
 13 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 14 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 15 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mId"]
 16 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0x4CC9B24B"]
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: SETTABLE  R7 K2 R8     ; R7["id"] := R8
 19 [-]: GETUPVAL  R7 U1        ; R7 := U1
 20 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 21 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 22 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mDate"]
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["sec"]
 24 [-]: SETTABLE  R7 K5 R8     ; R7["dateSec"] := R8
 25 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 26 [-]: JMP       52           ; PC := 52
 27 [-]: GETUPVAL  R7 U0        ; R7 := U0
 28 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["PVPAFFECTOR"]
 29 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: LOADK     R7 K1        ; R7 := 1
 32 [-]: LEN       R8 R1        ; R8 := # R1
 33 [-]: LOADK     R9 K1        ; R9 := 1
 34 [-]: FORPREP   R7 40        ; R7 -= R9; PC := 40
 35 [-]: GETTABLE  R11 R1 R10   ; R11 := R1[R10]
 36 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["mId"]
 37 [-]: SELF      R11 R11 K9   ; R12 := R11; R11 := R11["0xB976CD9B"]
 38 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 39 [-]: SETTABLE  R0 R10 R11   ; R0[R10] := R11
 40 [-]: FORLOOP   R7 35        ; R7 += R9; if R7 <= R8 then begin PC := 35; R10 := R7 end
 41 [-]: JMP       52           ; PC := 52
 42 [-]: LOADK     R11 K1       ; R11 := 1
 43 [-]: LEN       R12 R1       ; R12 := # R1
 44 [-]: LOADK     R13 K1       ; R13 := 1
 45 [-]: FORPREP   R11 51       ; R11 -= R13; PC := 51
 46 [-]: GETTABLE  R15 R1 R14   ; R15 := R1[R14]
 47 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["mId"]
 48 [-]: SELF      R15 R15 K4   ; R16 := R15; R15 := R15["0x4CC9B24B"]
 49 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 50 [-]: SETTABLE  R0 R14 R15   ; R0[R14] := R15
 51 [-]: FORLOOP   R11 46       ; R11 += R13; if R11 <= R12 then begin PC := 46; R14 := R11 end
 52 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 9058
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xBB3AACF2"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0xDF213CE1"]
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mMissionInfo"]
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["location"]
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0xE6DC43B0
  9 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["locTag"]
 10 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x5EC7A3D2"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: GETGLOBAL R4 K4        ; R4 := 0xE6DC43B0
 15 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1["0x5B0E7439"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETTABLE  R6 R2 K8     ; R6 := R2["region"]
 18 [-]: ADD       R6 R6 K9     ; R6 := R6 + 1
 19 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 20 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["name"]
 21 [-]: LOADNIL   R6 R6        ; R6 := nil
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xF030C338"]
 25 [-]: GETGLOBAL R6 K12       ; R6 := mMovie
 26 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mMissionInfo"]
 27 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["missionReward"]
 28 [-]: LOADNIL   R8 R8        ; R8 := nil
 29 [-]: MOVE      R9 R1        ; R9 := R1
 30 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 31 [-]: GETGLOBAL R6 K14       ; R6 := Engine
 32 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xD09D7910"]
 33 [-]: GETTABLE  R7 R0 K16    ; R7 := R0["mExpiry"]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: GETGLOBAL R7 K4        ; R7 := 0xE6DC43B0
 36 [-]: LOADK     R8 K17       ; R8 := "/Lotus/Language/Menu/Notification_Expiry"
 37 [-]: LOADNIL   R9 R9        ; R9 := nil
 38 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 39 [-]: GETGLOBAL R8 K18       ; R8 := string
 40 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["0x4B1F4F58"]
 41 [-]: MOVE      R9 R7        ; R9 := R7
 42 [-]: GETUPVAL  R10 U0       ; R10 := U0
 43 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["0xE5892312"]
 44 [-]: MOVE      R11 R6       ; R11 := R6
 45 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 46 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 47 [-]: MOVE      R7 R8        ; R7 := R8
 48 [-]: GETGLOBAL R8 K4        ; R8 := 0xE6DC43B0
 49 [-]: LOADK     R9 K21       ; R9 := "/Lotus/Language/Menu/Notification_Alert"
 50 [-]: LOADNIL   R10 R10      ; R10 := nil
 51 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 52 [-]: MOVE      R9 R8        ; R9 := R8
 53 [-]: LOADK     R10 K22      ; R10 := ": "
 54 [-]: MOVE      R11 R3       ; R11 := R3
 55 [-]: LOADK     R12 K23      ; R12 := " ("
 56 [-]: MOVE      R13 R4       ; R13 := R4
 57 [-]: LOADK     R14 K24      ; R14 := ") - "
 58 [-]: MOVE      R15 R5       ; R15 := R5
 59 [-]: LOADK     R16 K25      ; R16 := ", "
 60 [-]: MOVE      R17 R7       ; R17 := R7
 61 [-]: CONCAT    R8 R9 R17    ; R8 := R9 .. R10 .. R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17
 62 [-]: RETURN    R8 2         ; return R8
 63 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 9072
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mMsg"]
  2 [-]: EQ        1 R1 K1      ; if R1 == "" then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0xE6DC43B0
  5 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Language/Menu/Notification_News"
  6 [-]: LOADNIL   R3 R3        ; R3 := nil
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: LOADK     R2 K4        ; R2 := ": "
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mMsg"]
 10 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 9081
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xF81722A2"]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/Notification_NewBuildSubjectReminder"
  5 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/Notification_NewBuildSubject"
  6 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xE6DC43B0
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: LOADNIL   R3 R3        ; R3 := nil
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: LOADK     R2 K4        ; R2 := ": "
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0xE6DC43B0
 13 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableInGame"
 14 [-]: LOADNIL   R5 R5        ; R5 := nil
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: MOVE      R2 R1        ; R2 := R1
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 9089
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xE6DC43B0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mDesc"]
  3 [-]: LOADNIL   R3 R3        ; R3 := nil
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: LOADK     R2 K2        ; R2 := ""
  6 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mTypes"]
  7 [-]: LEN       R3 R3        ; R3 := # R3
  8 [-]: LT        1 K4 R3      ; if 0 < R3 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R3 K5        ; R3 := 0x400E7765
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mItemType"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 37
 14 [-]: JMP       37           ; PC := 37
 15 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mBounty"]
 16 [-]: TEST      R3 1         ; if R3 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mMaxConclave"]
 19 [-]: LT        0 K4 R3      ; if 0 >= R3 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xF81722A2"]
 23 [-]: GETGLOBAL R4 K10       ; R4 := string
 24 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xDE44F664"]
 25 [-]: GETGLOBAL R5 K12       ; R5 := 0x9FAED6BC
 26 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mNode"]
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: LOADK     R6 K14       ; R6 := "Pvp"
 29 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 30 [-]: LOADK     R5 K15       ; R5 := "/Lotus/Language/Menu/Notification_Conclave"
 31 [-]: LOADK     R6 K16       ; R6 := "/Lotus/Language/Menu/Notification_Bounty"
 32 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 33 [-]: MOVE      R2 R3        ; R2 := R3
 34 [-]: MOVE      R3 R2        ; R3 := R2
 35 [-]: LOADK     R4 K17       ; R4 := ": "
 36 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: LOADNIL   R5 R5        ; R5 := nil
 40 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 41 [-]: MOVE      R4 R1        ; R4 := R1
 42 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 43 [-]: RETURN    R3 2         ; return R3
 44 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 9103
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xE6DC43B0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mLocTag"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x5EC7A3D2"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: LOADNIL   R3 R3        ; R3 := nil
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xBB3AACF2"]
  9 [-]: CALL      R2 1 2       ; R2 := R2()
 10 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0xDF213CE1"]
 11 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mNode"]
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
 14 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["locTag"]
 15 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x5EC7A3D2"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: LOADNIL   R6 R6        ; R6 := nil
 18 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["0xF030C338"]
 21 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 22 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["mAttackerReward"]
 23 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0xF030C338"]
 26 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
 27 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mDefenderReward"]
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: GETGLOBAL R7 K0        ; R7 := 0xE6DC43B0
 30 [-]: SELF      R8 R2 K11    ; R9 := R2; R8 := R2["0x5B0E7439"]
 31 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 32 [-]: GETTABLE  R9 R3 K12    ; R9 := R3["region"]
 33 [-]: ADD       R9 R9 K13    ; R9 := R9 + 1
 34 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 35 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["name"]
 36 [-]: LOADNIL   R9 R9        ; R9 := nil
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: GETGLOBAL R8 K0        ; R8 := 0xE6DC43B0
 39 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
 40 [-]: LOADNIL   R10 R10      ; R10 := nil
 41 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 42 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["mFaction"]
 43 [-]: GETGLOBAL R10 K17      ; R10 := Lotus_Game
 44 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["FC_INFESTATION"]
 45 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: LOADK     R5 K19       ; R5 := ""
 48 [-]: JMP       54           ; PC := 54
 49 [-]: MOVE      R9 R5        ; R9 := R5
 50 [-]: LOADK     R10 K20      ; R10 := " "
 51 [-]: MOVE      R11 R8       ; R11 := R8
 52 [-]: LOADK     R12 K20      ; R12 := " "
 53 [-]: CONCAT    R5 R9 R12    ; R5 := R9 .. R10 .. R11 .. R12
 54 [-]: MOVE      R9 R1        ; R9 := R1
 55 [-]: LOADK     R10 K21      ; R10 := ": "
 56 [-]: MOVE      R11 R4       ; R11 := R4
 57 [-]: LOADK     R12 K22      ; R12 := " ("
 58 [-]: MOVE      R13 R7       ; R13 := R7
 59 [-]: LOADK     R14 K23      ; R14 := ") - "
 60 [-]: MOVE      R15 R5       ; R15 := R5
 61 [-]: MOVE      R16 R6       ; R16 := R6
 62 [-]: CONCAT    R9 R9 R16    ; R9 := R9 .. R10 .. R11 .. R12 .. R13 .. R14 .. R15 .. R16
 63 [-]: RETURN    R9 2         ; return R9
 64 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 9124
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7C282057
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mChallengeTypeRefID"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xD09D7910"]
  6 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mEndDate"]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: GETGLOBAL R3 K5        ; R3 := 0xE6DC43B0
  9 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Language/Menu/Notification_Expiry"
 10 [-]: LOADNIL   R5 R5        ; R5 := nil
 11 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 12 [-]: GETGLOBAL R4 K7        ; R4 := string
 13 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0x4B1F4F58"]
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: GETUPVAL  R6 U0        ; R6 := U0
 16 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0xE5892312"]
 17 [-]: MOVE      R7 R2        ; R7 := R2
 18 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 19 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 20 [-]: MOVE      R3 R4        ; R3 := R4
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0xE6DC43B0
 22 [-]: GETGLOBAL R5 K10       ; R5 := 0x9FAED6BC
 23 [-]: GETTABLE  R6 R1 K11    ; R6 := R1["mLocName"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: LOADNIL   R6 R6        ; R6 := nil
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: MOVE      R5 R4        ; R5 := R4
 28 [-]: LOADK     R6 K12       ; R6 := ": "
 29 [-]: MOVE      R7 R3        ; R7 := R3
 30 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 31 [-]: RETURN    R4 2         ; return R4
 32 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 9135
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x716FDD3E"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: LT        0 K2 R0      ; if 0 >= R0 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R1 K3        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["gLastHighPriorityMessageCount"]
 13 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K3        ; R1 := _T
 16 [-]: SETTABLE  R1 K5 K6     ; R1["gQueueMailbox"] := "0x1"
 17 [-]: GETGLOBAL R1 K3        ; R1 := _T
 18 [-]: SETTABLE  R1 K4 R0     ; R1["gLastHighPriorityMessageCount"] := R0
 19 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 9145
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: MOVE      R2 R0        ; R2 := R0
  2 [-]: TEST      R2 0         ; if not R2 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xE707B98B"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: GETGLOBAL R2 K1        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["ShowNotification"]
 11 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R2 K1        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x761CAD7D"]
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 9154
; #Upvalues:       11
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  44

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["BUILD"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 68
  4 [-]: JMP       68           ; PC := 68
  5 [-]: LEN       R3 R0        ; R3 := # R0
  6 [-]: LOADK     R4 K1        ; R4 := 1
  7 [-]: LOADK     R5 K2        ; R5 := -1
  8 [-]: FORPREP   R3 67        ; R3 -= R5; PC := 67
  9 [-]: GETGLOBAL R7 K3        ; R7 := 0x1BF588C6
 10 [-]: LOADK     R8 K4        ; R8 := 0
 11 [-]: CALL      R7 2 1       ; R7(R8)
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: GETUPVAL  R8 U0        ; R8 := U0
 14 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["NEWS"]
 15 [-]: EQ        0 R2 R8      ; if R2 ~= R8 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: LOADK     R8 K1        ; R8 := 1
 18 [-]: LEN       R9 R1        ; R9 := # R1
 19 [-]: LOADK     R10 K1       ; R10 := 1
 20 [-]: FORPREP   R8 32        ; R8 -= R10; PC := 32
 21 [-]: GETUPVAL  R12 U1       ; R12 := U1
 22 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
 23 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["id"]
 24 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 25 [-]: GETTABLE  R13 R13 K7   ; R13 := R13["mId"]
 26 [-]: SELF      R13 R13 K8   ; R14 := R13; R13 := R13["0x4CC9B24B"]
 27 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 28 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R7 R0        ; R7 := R0
 31 [-]: JMP       60           ; PC := 60
 32 [-]: FORLOOP   R8 21        ; R8 += R10; if R8 <= R9 then begin PC := 21; R11 := R8 end
 33 [-]: JMP       60           ; PC := 60
 34 [-]: LOADK     R12 K1       ; R12 := 1
 35 [-]: LEN       R13 R1       ; R13 := # R1
 36 [-]: LOADK     R14 K1       ; R14 := 1
 37 [-]: FORPREP   R12 59       ; R12 -= R14; PC := 59
 38 [-]: LOADNIL   R16 R16      ; R16 := nil
 39 [-]: GETUPVAL  R17 U0       ; R17 := U0
 40 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["PVPAFFECTOR"]
 41 [-]: EQ        0 R2 R17     ; if R2 ~= R17 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETTABLE  R17 R1 R15   ; R17 := R1[R15]
 44 [-]: GETTABLE  R17 R17 K7   ; R17 := R17["mId"]
 45 [-]: SELF      R17 R17 K10  ; R18 := R17; R17 := R17["0xB976CD9B"]
 46 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 47 [-]: MOVE      R16 R17      ; R16 := R17
 48 [-]: JMP       54           ; PC := 54
 49 [-]: GETTABLE  R17 R1 R15   ; R17 := R1[R15]
 50 [-]: GETTABLE  R17 R17 K7   ; R17 := R17["mId"]
 51 [-]: SELF      R17 R17 K8   ; R18 := R17; R17 := R17["0x4CC9B24B"]
 52 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 53 [-]: MOVE      R16 R17      ; R16 := R17
 54 [-]: GETTABLE  R17 R0 R6    ; R17 := R0[R6]
 55 [-]: EQ        0 R17 R16    ; if R17 ~= R16 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: MOVE      R7 R0        ; R7 := R0
 58 [-]: JMP       60           ; PC := 60
 59 [-]: FORLOOP   R12 38       ; R12 += R14; if R12 <= R13 then begin PC := 38; R15 := R12 end
 60 [-]: TEST      R7 0         ; if not R7 then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R17 K11      ; R17 := table
 63 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["0xCDB1FD5E"]
 64 [-]: MOVE      R18 R0       ; R18 := R0
 65 [-]: MOVE      R19 R6       ; R19 := R6
 66 [-]: CALL      R17 3 1      ; R17(R18,R19)
 67 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 68 [-]: LEN       R17 R0       ; R17 := # R0
 69 [-]: LOADK     R18 K1       ; R18 := 1
 70 [-]: LEN       R19 R1       ; R19 := # R1
 71 [-]: LOADK     R20 K1       ; R20 := 1
 72 [-]: FORPREP   R18 295      ; R18 -= R20; PC := 295
 73 [-]: GETGLOBAL R22 K3       ; R22 := 0x1BF588C6
 74 [-]: LOADK     R23 K4       ; R23 := 0
 75 [-]: CALL      R22 2 1      ; R22(R23)
 76 [-]: MOVE      R22 R1       ; R22 := R1
 77 [-]: LOADNIL   R23 R23      ; R23 := nil
 78 [-]: GETUPVAL  R24 U0       ; R24 := U0
 79 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["PVPAFFECTOR"]
 80 [-]: EQ        0 R2 R24     ; if R2 ~= R24 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETTABLE  R24 R1 R21   ; R24 := R1[R21]
 83 [-]: GETTABLE  R24 R24 K7   ; R24 := R24["mId"]
 84 [-]: SELF      R24 R24 K10  ; R25 := R24; R24 := R24["0xB976CD9B"]
 85 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 86 [-]: MOVE      R23 R24      ; R23 := R24
 87 [-]: JMP       93           ; PC := 93
 88 [-]: GETTABLE  R24 R1 R21   ; R24 := R1[R21]
 89 [-]: GETTABLE  R24 R24 K7   ; R24 := R24["mId"]
 90 [-]: SELF      R24 R24 K8   ; R25 := R24; R24 := R24["0x4CC9B24B"]
 91 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 92 [-]: MOVE      R23 R24      ; R23 := R24
 93 [-]: GETUPVAL  R24 U0       ; R24 := U0
 94 [-]: GETTABLE  R24 R24 K5   ; R24 := R24["NEWS"]
 95 [-]: EQ        0 R2 R24     ; if R2 ~= R24 then PC := 118
 96 [-]: JMP       118          ; PC := 118
 97 [-]: GETTABLE  R24 R1 R21   ; R24 := R1[R21]
 98 [-]: GETTABLE  R24 R24 K13  ; R24 := R24["mDate"]
 99 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["sec"]
100 [-]: LOADK     R25 K1       ; R25 := 1
101 [-]: MOVE      R26 R17      ; R26 := R17
102 [-]: LOADK     R27 K1       ; R27 := 1
103 [-]: FORPREP   R25 116      ; R25 -= R27; PC := 116
104 [-]: GETUPVAL  R29 U1       ; R29 := U1
105 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
106 [-]: GETTABLE  R29 R29 K6   ; R29 := R29["id"]
107 [-]: EQ        0 R23 R29    ; if R23 ~= R29 then PC := 116
108 [-]: JMP       116          ; PC := 116
109 [-]: GETUPVAL  R29 U1       ; R29 := U1
110 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
111 [-]: GETTABLE  R29 R29 K15  ; R29 := R29["dateSec"]
112 [-]: EQ        0 R24 R29    ; if R24 ~= R29 then PC := 116
113 [-]: JMP       116          ; PC := 116
114 [-]: MOVE      R22 R0       ; R22 := R0
115 [-]: JMP       134          ; PC := 134
116 [-]: FORLOOP   R25 104      ; R25 += R27; if R25 <= R26 then begin PC := 104; R28 := R25 end
117 [-]: JMP       134          ; PC := 134
118 [-]: GETUPVAL  R29 U0       ; R29 := U0
119 [-]: GETTABLE  R29 R29 K0   ; R29 := R29["BUILD"]
120 [-]: EQ        0 R2 R29     ; if R2 ~= R29 then PC := 124
121 [-]: JMP       124          ; PC := 124
122 [-]: MOVE      R22 R1       ; R22 := R1
123 [-]: JMP       134          ; PC := 134
124 [-]: LOADK     R29 K1       ; R29 := 1
125 [-]: MOVE      R30 R17      ; R30 := R17
126 [-]: LOADK     R31 K1       ; R31 := 1
127 [-]: FORPREP   R29 133      ; R29 -= R31; PC := 133
128 [-]: GETTABLE  R33 R0 R32   ; R33 := R0[R32]
129 [-]: EQ        0 R23 R33    ; if R23 ~= R33 then PC := 133
130 [-]: JMP       133          ; PC := 133
131 [-]: MOVE      R22 R0       ; R22 := R0
132 [-]: JMP       134          ; PC := 134
133 [-]: FORLOOP   R29 128      ; R29 += R31; if R29 <= R30 then begin PC := 128; R32 := R29 end
134 [-]: TEST      R22 0        ; if not R22 then PC := 295
135 [-]: JMP       295          ; PC := 295
136 [-]: GETGLOBAL R33 K16      ; R33 := 0x400E7765
137 [-]: GETUPVAL  R34 U2       ; R34 := U2
138 [-]: CALL      R33 2 2      ; R33 := R33(R34)
139 [-]: TEST      R33 1        ; if R33 then PC := 295
140 [-]: JMP       295          ; PC := 295
141 [-]: LOADK     R33 K4       ; R33 := 0
142 [-]: LOADNIL   R34 R35      ; R34 := R35 := nil
143 [-]: GETUPVAL  R36 U0       ; R36 := U0
144 [-]: GETTABLE  R36 R36 K5   ; R36 := R36["NEWS"]
145 [-]: EQ        0 R2 R36     ; if R2 ~= R36 then PC := 162
146 [-]: JMP       162          ; PC := 162
147 [-]: LEN       R36 R0       ; R36 := # R0
148 [-]: ADD       R36 R36 K1   ; R36 := R36 + 1
149 [-]: GETUPVAL  R37 U1       ; R37 := U1
150 [-]: NEWTABLE  R38 0 0      ; R38 := {}
151 [-]: SETTABLE  R37 R36 R38  ; R37[R36] := R38
152 [-]: GETUPVAL  R37 U1       ; R37 := U1
153 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
154 [-]: SETTABLE  R37 K6 R23   ; R37["id"] := R23
155 [-]: GETUPVAL  R37 U1       ; R37 := U1
156 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
157 [-]: GETTABLE  R38 R1 R21   ; R38 := R1[R21]
158 [-]: GETTABLE  R38 R38 K13  ; R38 := R38["mDate"]
159 [-]: GETTABLE  R38 R38 K14  ; R38 := R38["sec"]
160 [-]: SETTABLE  R37 K15 R38  ; R37["dateSec"] := R38
161 [-]: JMP       170          ; PC := 170
162 [-]: GETUPVAL  R37 U0       ; R37 := U0
163 [-]: GETTABLE  R37 R37 K0   ; R37 := R37["BUILD"]
164 [-]: EQ        0 R2 R37     ; if R2 ~= R37 then PC := 167
165 [-]: JMP       167          ; PC := 167
166 [-]: JMP       170          ; PC := 170
167 [-]: LEN       R37 R0       ; R37 := # R0
168 [-]: ADD       R37 R37 K1   ; R37 := R37 + 1
169 [-]: SETTABLE  R0 R37 R23   ; R0[R37] := R23
170 [-]: MOVE      R37 R0       ; R37 := R0
171 [-]: GETUPVAL  R38 U0       ; R38 := U0
172 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["ALERT"]
173 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 187
174 [-]: JMP       187          ; PC := 187
175 [-]: GETUPVAL  R38 U3       ; R38 := U3
176 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
177 [-]: CALL      R38 2 2      ; R38 := R38(R39)
178 [-]: MOVE      R34 R38      ; R34 := R38
179 [-]: GETGLOBAL R38 K18      ; R38 := Engine
180 [-]: GETTABLE  R38 R38 K19  ; R38 := R38["0xD09D7910"]
181 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
182 [-]: GETTABLE  R39 R39 K20  ; R39 := R39["mActivation"]
183 [-]: CALL      R38 2 2      ; R38 := R38(R39)
184 [-]: MOVE      R33 R38      ; R33 := R38
185 [-]: LOADK     R35 K21      ; R35 := "Alert"
186 [-]: JMP       271          ; PC := 271
187 [-]: GETUPVAL  R38 U0       ; R38 := U0
188 [-]: GETTABLE  R38 R38 K5   ; R38 := R38["NEWS"]
189 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 196
190 [-]: JMP       196          ; PC := 196
191 [-]: GETUPVAL  R38 U4       ; R38 := U4
192 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
193 [-]: CALL      R38 2 2      ; R38 := R38(R39)
194 [-]: MOVE      R34 R38      ; R34 := R38
195 [-]: JMP       271          ; PC := 271
196 [-]: GETUPVAL  R38 U0       ; R38 := U0
197 [-]: GETTABLE  R38 R38 K22  ; R38 := R38["GOAL"]
198 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 211
199 [-]: JMP       211          ; PC := 211
200 [-]: GETUPVAL  R38 U5       ; R38 := U5
201 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
202 [-]: CALL      R38 2 2      ; R38 := R38(R39)
203 [-]: MOVE      R34 R38      ; R34 := R38
204 [-]: GETGLOBAL R38 K18      ; R38 := Engine
205 [-]: GETTABLE  R38 R38 K19  ; R38 := R38["0xD09D7910"]
206 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
207 [-]: GETTABLE  R39 R39 K20  ; R39 := R39["mActivation"]
208 [-]: CALL      R38 2 2      ; R38 := R38(R39)
209 [-]: MOVE      R33 R38      ; R33 := R38
210 [-]: JMP       271          ; PC := 271
211 [-]: GETUPVAL  R38 U0       ; R38 := U0
212 [-]: GETTABLE  R38 R38 K23  ; R38 := R38["INVASION"]
213 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 227
214 [-]: JMP       227          ; PC := 227
215 [-]: GETUPVAL  R38 U6       ; R38 := U6
216 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
217 [-]: CALL      R38 2 2      ; R38 := R38(R39)
218 [-]: MOVE      R34 R38      ; R34 := R38
219 [-]: GETGLOBAL R38 K18      ; R38 := Engine
220 [-]: GETTABLE  R38 R38 K19  ; R38 := R38["0xD09D7910"]
221 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
222 [-]: GETTABLE  R39 R39 K20  ; R39 := R39["mActivation"]
223 [-]: CALL      R38 2 2      ; R38 := R38(R39)
224 [-]: MOVE      R33 R38      ; R33 := R38
225 [-]: LOADK     R35 K24      ; R35 := "Invasion"
226 [-]: JMP       271          ; PC := 271
227 [-]: GETUPVAL  R38 U0       ; R38 := U0
228 [-]: GETTABLE  R38 R38 K0   ; R38 := R38["BUILD"]
229 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 237
230 [-]: JMP       237          ; PC := 237
231 [-]: GETUPVAL  R38 U7       ; R38 := U7
232 [-]: CALL      R38 1 2      ; R38 := R38()
233 [-]: MOVE      R34 R38      ; R34 := R38
234 [-]: LOADK     R33 K4       ; R33 := 0
235 [-]: LOADK     R35 K25      ; R35 := "NewBuild"
236 [-]: JMP       271          ; PC := 271
237 [-]: GETUPVAL  R38 U0       ; R38 := U0
238 [-]: GETTABLE  R38 R38 K9   ; R38 := R38["PVPAFFECTOR"]
239 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 271
240 [-]: JMP       271          ; PC := 271
241 [-]: GETTABLE  R38 R1 R21   ; R38 := R1[R21]
242 [-]: GETTABLE  R39 R38 K26  ; R39 := R38["mCategory"]
243 [-]: GETGLOBAL R40 K27      ; R40 := Lotus_Game
244 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["PVPChallengeTypeCategory_MODEAFFECTOR"]
245 [-]: EQ        0 R39 R40    ; if R39 ~= R40 then PC := 271
246 [-]: JMP       271          ; PC := 271
247 [-]: GETUPVAL  R39 U8       ; R39 := U8
248 [-]: MOVE      R40 R38      ; R40 := R38
249 [-]: CALL      R39 2 2      ; R39 := R39(R40)
250 [-]: MOVE      R34 R39      ; R34 := R39
251 [-]: GETGLOBAL R39 K18      ; R39 := Engine
252 [-]: GETTABLE  R39 R39 K19  ; R39 := R39["0xD09D7910"]
253 [-]: GETTABLE  R40 R38 K29  ; R40 := R38["mStartDate"]
254 [-]: CALL      R39 2 2      ; R39 := R39(R40)
255 [-]: MOVE      R33 R39      ; R33 := R39
256 [-]: GETGLOBAL R39 K18      ; R39 := Engine
257 [-]: GETTABLE  R39 R39 K19  ; R39 := R39["0xD09D7910"]
258 [-]: GETTABLE  R40 R38 K30  ; R40 := R38["mEndDate"]
259 [-]: CALL      R39 2 2      ; R39 := R39(R40)
260 [-]: LT        0 R33 K4     ; if R33 >= 0 then PC := 263
261 [-]: JMP       263          ; PC := 263
262 [-]: LOADK     R33 K1       ; R33 := 1
263 [-]: LT        0 R39 K4     ; if R39 >= 0 then PC := 266
264 [-]: JMP       266          ; PC := 266
265 [-]: LOADK     R33 K4       ; R33 := 0
266 [-]: GETGLOBAL R40 K27      ; R40 := Lotus_Game
267 [-]: GETTABLE  R40 R40 K31  ; R40 := R40["0x104B2219"]
268 [-]: GETTABLE  R41 R38 K32  ; R41 := R38["mPVPMode"]
269 [-]: CALL      R40 2 2      ; R40 := R40(R41)
270 [-]: MOVE      R35 R40      ; R35 := R40
271 [-]: TEST      R34 0        ; if not R34 then PC := 288
272 [-]: JMP       288          ; PC := 288
273 [-]: LT        0 K4 R33     ; if 0 >= R33 then PC := 284
274 [-]: JMP       284          ; PC := 284
275 [-]: GETUPVAL  R40 U9       ; R40 := U9
276 [-]: SELF      R40 R40 K33  ; R41 := R40; R40 := R40["0x61494587"]
277 [-]: MOVE      R42 R33      ; R42 := R33
278 [-]: CLOSURE   R43 0        ; R43 := closure(Function #142.1)
279 [-]: GETUPVAL  R0 U10       ; R0 := U10
280 [-]: MOVE      R0 R34       ; R0 := R34
281 [-]: MOVE      R0 R35       ; R0 := R35
282 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
283 [-]: JMP       288          ; PC := 288
284 [-]: GETUPVAL  R40 U10      ; R40 := U10
285 [-]: MOVE      R41 R34      ; R41 := R34
286 [-]: MOVE      R42 R35      ; R42 := R35
287 [-]: CALL      R40 3 1      ; R40(R41,R42)
288 [-]: TEST      R37 0        ; if not R37 then PC := 294
289 [-]: JMP       294          ; PC := 294
290 [-]: GETUPVAL  R40 U2       ; R40 := U2
291 [-]: SELF      R40 R40 K34  ; R41 := R40; R40 := R40["0xF18B0A38"]
292 [-]: LOADK     R42 K35      ; R42 := "OnSyncInbox"
293 [-]: CALL      R40 3 1      ; R40(R41,R42)
294 [-]: CLOSE     R33          ; SAVE R33,...
295 [-]: FORLOOP   R18 73       ; R18 += R20; if R18 <= R19 then begin PC := 73; R21 := R18 end
296 [-]: RETURN    R0 1         ; return 


; Function #142.1:
;
; Name:            
; Defined at line: 9285
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETUPVAL  R2 U2        ; R2 := U2
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 9300
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x7C138DEF"]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: LT        0 K3 R0      ; if 0 >= R0 then PC := 44
 17 [-]: JMP       44           ; PC := 44
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
 21 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 23 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableCountdown"
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 26 [-]: SETTABLE  R5 K7 R0     ; R5["MINUTES"] := R0
 27 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 28 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 29 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x5DB0BD4"]
 30 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 33 [-]: LOADK     R3 K9        ; R3 := "\r\n\r\n"
 34 [-]: MOVE      R4 R1        ; R4 := R1
 35 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 36 [-]: GETUPVAL  R3 U3        ; R3 := U3
 37 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xB11F032"]
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 1       ; R3(R4)
 40 [-]: GETUPVAL  R3 U1        ; R3 := U1
 41 [-]: SUB       R3 R3 K11    ; R3 := R3 - 1
 42 [-]: MOVE      R3 R1        ; R3 := R1
 43 [-]: JMP       67           ; PC := 67
 44 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 45 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 46 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
 47 [-]: MOVE      R6 R0        ; R6 := R0
 48 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 49 [-]: LOADK     R4 K9        ; R4 := "\r\n\r\n"
 50 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 51 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 52 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableKicked"
 53 [-]: MOVE      R8 R0        ; R8 := R0
 54 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 55 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 56 [-]: GETUPVAL  R4 U3        ; R4 := U3
 57 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["0xB11F032"]
 58 [-]: MOVE      R5 R3        ; R5 := R3
 59 [-]: CALL      R4 2 1       ; R4(R5)
 60 [-]: GETUPVAL  R4 U4        ; R4 := U4
 61 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x61494587"]
 62 [-]: LOADK     R6 K14       ; R6 := 2
 63 [-]: CLOSURE   R7 0         ; R7 := closure(Function #143.1)
 64 [-]: MOVE      R8 R0        ; R8 := R0
 65 [-]: LOADNIL   R9 R9        ; R9 := nil
 66 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 67 [-]: RETURN    R0 1         ; return 


; Function #143.1:
;
; Name:            
; Defined at line: 9319
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xDB37C67"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  6 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x8701E8D2"]
  7 [-]: CALL      R0 2 1       ; R0(R1)
  8 [-]: GETGLOBAL R0 K4        ; R0 := Engine
  9 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0xC53FF352"]
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 9328
; #Upvalues:       12
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 17
  2 [-]: JMP       17           ; PC := 17
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  9 [-]: GETGLOBAL R3 K1        ; R3 := gGameRules
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R2 K2        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["DisableChatWorldStateNotifications"]
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: CALL      R2 1 1       ; R2()
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x2D0B8A86"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETUPVAL  R3 U2        ; R3 := U2
 24 [-]: TEST      R3 1         ; if R3 then PC := 56
 25 [-]: JMP       56           ; PC := 56
 26 [-]: GETUPVAL  R3 U3        ; R3 := U3
 27 [-]: TEST      R3 0         ; if not R3 then PC := 53
 28 [-]: JMP       53           ; PC := 53
 29 [-]: GETUPVAL  R3 U4        ; R3 := U4
 30 [-]: GETUPVAL  R4 U5        ; R4 := U5
 31 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["mAlerts"]
 32 [-]: GETUPVAL  R6 U6        ; R6 := U6
 33 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["ALERT"]
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: GETUPVAL  R3 U4        ; R3 := U4
 36 [-]: GETUPVAL  R4 U7        ; R4 := U7
 37 [-]: GETTABLE  R5 R2 K7     ; R5 := R2["mEvents"]
 38 [-]: GETUPVAL  R6 U6        ; R6 := U6
 39 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["NEWS"]
 40 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 41 [-]: GETUPVAL  R3 U4        ; R3 := U4
 42 [-]: GETUPVAL  R4 U8        ; R4 := U8
 43 [-]: GETTABLE  R5 R2 K9     ; R5 := R2["mGoals"]
 44 [-]: GETUPVAL  R6 U6        ; R6 := U6
 45 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["GOAL"]
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: GETUPVAL  R3 U4        ; R3 := U4
 48 [-]: GETUPVAL  R4 U9        ; R4 := U9
 49 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["mInvasions"]
 50 [-]: GETUPVAL  R6 U6        ; R6 := U6
 51 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["INVASION"]
 52 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 53 [-]: MOVE      R3 R1        ; R3 := R1
 54 [-]: MOVE      R3 R2        ; R3 := R2
 55 [-]: JMP       110          ; PC := 110
 56 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 57 [-]: MOVE      R4 R2        ; R4 := R2
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: TEST      R3 1         ; if R3 then PC := 110
 60 [-]: JMP       110          ; PC := 110
 61 [-]: GETUPVAL  R3 U3        ; R3 := U3
 62 [-]: TEST      R3 0         ; if not R3 then PC := 88
 63 [-]: JMP       88           ; PC := 88
 64 [-]: GETUPVAL  R3 U10       ; R3 := U10
 65 [-]: GETUPVAL  R4 U5        ; R4 := U5
 66 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["mAlerts"]
 67 [-]: GETUPVAL  R6 U6        ; R6 := U6
 68 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["ALERT"]
 69 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 70 [-]: GETUPVAL  R3 U10       ; R3 := U10
 71 [-]: GETUPVAL  R4 U7        ; R4 := U7
 72 [-]: GETTABLE  R5 R2 K7     ; R5 := R2["mEvents"]
 73 [-]: GETUPVAL  R6 U6        ; R6 := U6
 74 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["NEWS"]
 75 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 76 [-]: GETUPVAL  R3 U10       ; R3 := U10
 77 [-]: GETUPVAL  R4 U8        ; R4 := U8
 78 [-]: GETTABLE  R5 R2 K9     ; R5 := R2["mGoals"]
 79 [-]: GETUPVAL  R6 U6        ; R6 := U6
 80 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["GOAL"]
 81 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 82 [-]: GETUPVAL  R3 U10       ; R3 := U10
 83 [-]: GETUPVAL  R4 U9        ; R4 := U9
 84 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["mInvasions"]
 85 [-]: GETUPVAL  R6 U6        ; R6 := U6
 86 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["INVASION"]
 87 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 88 [-]: GETGLOBAL R3 K13       ; R3 := gGameConfig
 89 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x89E53943"]
 90 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 91 [-]: TEST      R3 0         ; if not R3 then PC := 110
 92 [-]: JMP       110          ; PC := 110
 93 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 94 [-]: GETGLOBAL R4 K15       ; R4 := table
 95 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["0xE6450C9D"]
 96 [-]: MOVE      R5 R3        ; R5 := R3
 97 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 98 [-]: GETGLOBAL R7 K18       ; R7 := 0x3DD9379B
 99 [-]: CALL      R7 1 2       ; R7 := R7()
100 [-]: SETTABLE  R6 K17 R7    ; R6["mId"] := R7
101 [-]: CALL      R4 3 1       ; R4(R5,R6)
102 [-]: GETUPVAL  R4 U10       ; R4 := U10
103 [-]: NEWTABLE  R5 0 0       ; R5 := {}
104 [-]: MOVE      R6 R3        ; R6 := R3
105 [-]: GETUPVAL  R7 U6        ; R7 := U6
106 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["BUILD"]
107 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
108 [-]: GETUPVAL  R4 U11       ; R4 := U11
109 [-]: CALL      R4 1 1       ; R4()
110 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 9367
; #Upvalues:       20
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: MOVE      R1 R0        ; R1 := R0
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: CALL      R2 1 1       ; R2()
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: MOVE      R2 R3        ; R2 := R3
 17 [-]: GETGLOBAL R2 K1        ; R2 := gFlashMgr
 18 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x3CBE9BDB"]
 19 [-]: LOADK     R4 K3        ; R4 := "TOGGLE_CHAT_WINDOW"
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: MOVE      R6 R0        ; R6 := R0
 22 [-]: MOVE      R7 R0        ; R7 := R0
 23 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 24 [-]: GETGLOBAL R3 K4        ; R3 := 0x63B09107
 25 [-]: MOVE      R4 R2        ; R4 := R2
 26 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R8 K5        ; R8 := string
 29 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["0xDE44F664"]
 30 [-]: MOVE      R9 R7        ; R9 := R7
 31 [-]: LOADK     R10 K7       ; R10 := "KEY_RETURN"
 32 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 33 [-]: TEST      R8 0         ; if not R8 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: MOVE      R8 R3        ; R8 := R3
 37 [-]: JMP       40           ; PC := 40
 38 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 28; R5 := R6 end
 39 [-]: JMP       28           ; PC := 28
 40 [-]: GETUPVAL  R8 U1        ; R8 := U1
 41 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8["0x6B770860"]
 42 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 43 [-]: GETUPVAL  R9 U1        ; R9 := U1
 44 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0xFDBE4E51"]
 45 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 46 [-]: TEST      R1 1         ; if R1 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETUPVAL  R10 U4       ; R10 := U4
 49 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["Enabled"]
 50 [-]: EQ        0 R10 R8     ; if R10 ~= R8 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETUPVAL  R10 U4       ; R10 := U4
 53 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["EmoticonConversion"]
 54 [-]: EQ        0 R10 R9     ; if R10 ~= R9 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: MOVE      R1 R0        ; R1 := R0
 57 [-]: MOVE      R1 R1        ; R1 := R1
 58 [-]: GETUPVAL  R10 U4       ; R10 := U4
 59 [-]: SETTABLE  R10 K10 R8   ; R10["Enabled"] := R8
 60 [-]: GETUPVAL  R10 U4       ; R10 := U4
 61 [-]: SETTABLE  R10 K11 R9   ; R10["EmoticonConversion"] := R9
 62 [-]: GETUPVAL  R10 U4       ; R10 := U4
 63 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["Enabled"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 82
 65 [-]: JMP       82           ; PC := 82
 66 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
 67 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x1C19D966"]
 68 [-]: LOADK     R12 K14      ; R12 := "Window.SendMessageBar.MessageBox"
 69 [-]: LOADK     R13 K15      ; R13 := "textSuggestPrefixes"
 70 [-]: LOADK     R14 K16      ; R14 := ":@[{"
 71 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 72 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
 73 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0x880196A7"]
 74 [-]: GETUPVAL  R12 U0       ; R12 := U0
 75 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["mInputPanel"]
 76 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["mClipPath"]
 77 [-]: LOADK     R13 K20      ; R13 := "MessageBox"
 78 [-]: LOADK     R14 K21      ; R14 := "textSuggestActive"
 79 [-]: MOVE      R15 R0       ; R15 := R0
 80 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 81 [-]: JMP       97           ; PC := 97
 82 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
 83 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x1C19D966"]
 84 [-]: LOADK     R12 K14      ; R12 := "Window.SendMessageBar.MessageBox"
 85 [-]: LOADK     R13 K15      ; R13 := "textSuggestPrefixes"
 86 [-]: LOADK     R14 K22      ; R14 := "@[{"
 87 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 88 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
 89 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0x880196A7"]
 90 [-]: GETUPVAL  R12 U0       ; R12 := U0
 91 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["mInputPanel"]
 92 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["mClipPath"]
 93 [-]: LOADK     R13 K20      ; R13 := "MessageBox"
 94 [-]: LOADK     R14 K21      ; R14 := "textSuggestActive"
 95 [-]: MOVE      R15 R0       ; R15 := R0
 96 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 97 [-]: GETUPVAL  R10 U1       ; R10 := U1
 98 [-]: SELF      R10 R10 K23  ; R11 := R10; R10 := R10["0x1F405784"]
 99 [-]: CALL      R10 2 2      ; R10 := R10(R11)
100 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
101 [-]: GETGLOBAL R12 K24      ; R12 := _G
102 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["UIMaterial_EmojiColors"]
103 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: TEST      R11 1        ; if R11 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETGLOBAL R11 K12      ; R11 := mMovie
108 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11["0xFD29439A"]
109 [-]: GETGLOBAL R13 K24      ; R13 := _G
110 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["UIMaterial_EmojiColors"]
111 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
112 [-]: CALL      R11 3 1      ; R11(R12,R13)
113 [-]: GETUPVAL  R11 U1       ; R11 := U1
114 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11["0x9F88C18F"]
115 [-]: CALL      R11 2 2      ; R11 := R11(R12)
116 [-]: MOVE      R11 R5       ; R11 := R5
117 [-]: GETUPVAL  R11 U1       ; R11 := U1
118 [-]: SELF      R11 R11 K28  ; R12 := R11; R11 := R11["0xB11183ED"]
119 [-]: CALL      R11 2 2      ; R11 := R11(R12)
120 [-]: TEST      R11 0        ; if not R11 then PC := 125
121 [-]: JMP       125          ; PC := 125
122 [-]: GETGLOBAL R11 K24      ; R11 := _G
123 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["StalkerMode"]
124 [-]: MOVE      R11 R11      ; R11 := R11
125 [-]: MOVE      R11 R6       ; R11 := R6
126 [-]: GETUPVAL  R11 U1       ; R11 := U1
127 [-]: SELF      R11 R11 K30  ; R12 := R11; R11 := R11["0xC083AB11"]
128 [-]: CALL      R11 2 2      ; R11 := R11(R12)
129 [-]: TEST      R11 0        ; if not R11 then PC := 134
130 [-]: JMP       134          ; PC := 134
131 [-]: GETGLOBAL R11 K24      ; R11 := _G
132 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["StalkerMode"]
133 [-]: MOVE      R11 R11      ; R11 := R11
134 [-]: MOVE      R11 R7       ; R11 := R7
135 [-]: GETUPVAL  R11 U1       ; R11 := U1
136 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11["0xA8ECC766"]
137 [-]: CALL      R11 2 2      ; R11 := R11(R12)
138 [-]: TEST      R11 0        ; if not R11 then PC := 143
139 [-]: JMP       143          ; PC := 143
140 [-]: GETGLOBAL R11 K24      ; R11 := _G
141 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["StalkerMode"]
142 [-]: MOVE      R11 R11      ; R11 := R11
143 [-]: MOVE      R11 R8       ; R11 := R8
144 [-]: GETUPVAL  R11 U1       ; R11 := U1
145 [-]: SELF      R11 R11 K32  ; R12 := R11; R11 := R11["0x6C80518C"]
146 [-]: CALL      R11 2 2      ; R11 := R11(R12)
147 [-]: MOVE      R11 R9       ; R11 := R9
148 [-]: GETGLOBAL R11 K33      ; R11 := Engine
149 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["0x1398DAFB"]
150 [-]: CALL      R11 1 2      ; R11 := R11()
151 [-]: TEST      R11 1        ; if R11 then PC := 157
152 [-]: JMP       157          ; PC := 157
153 [-]: GETUPVAL  R11 U1       ; R11 := U1
154 [-]: SELF      R11 R11 K35  ; R12 := R11; R11 := R11["0x6A9D8DDA"]
155 [-]: CALL      R11 2 2      ; R11 := R11(R12)
156 [-]: MOVE      R11 R10      ; R11 := R10
157 [-]: GETUPVAL  R11 U1       ; R11 := U1
158 [-]: SELF      R11 R11 K36  ; R12 := R11; R11 := R11["0x131AE173"]
159 [-]: CALL      R11 2 2      ; R11 := R11(R12)
160 [-]: MOVE      R11 R11      ; R11 := R11
161 [-]: GETUPVAL  R11 U1       ; R11 := U1
162 [-]: SELF      R11 R11 K37  ; R12 := R11; R11 := R11["0x158C84F1"]
163 [-]: CALL      R11 2 2      ; R11 := R11(R12)
164 [-]: TEST      R1 1         ; if R1 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETUPVAL  R12 U0       ; R12 := U0
167 [-]: GETTABLE  R12 R12 K38  ; R12 := R12["mShowTimeStamps"]
168 [-]: EQ        1 R12 K39    ; if R12 == nil then PC := 175
169 [-]: JMP       175          ; PC := 175
170 [-]: GETUPVAL  R12 U0       ; R12 := U0
171 [-]: GETTABLE  R12 R12 K38  ; R12 := R12["mShowTimeStamps"]
172 [-]: EQ        0 R12 R11    ; if R12 ~= R11 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: MOVE      R1 R0        ; R1 := R0
175 [-]: MOVE      R1 R1        ; R1 := R1
176 [-]: TEST      R1 0         ; if not R1 then PC := 223
177 [-]: JMP       223          ; PC := 223
178 [-]: GETUPVAL  R12 U0       ; R12 := U0
179 [-]: SETTABLE  R12 K38 R11  ; R12["mShowTimeStamps"] := R11
180 [-]: GETGLOBAL R12 K40      ; R12 := 0xECFDD17
181 [-]: GETUPVAL  R13 U0       ; R13 := U0
182 [-]: GETTABLE  R13 R13 K41  ; R13 := R13["mPanelList"]
183 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
184 [-]: JMP       198          ; PC := 198
185 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
186 [-]: MOVE      R18 R16      ; R18 := R16
187 [-]: CALL      R17 2 2      ; R17 := R17(R18)
188 [-]: TEST      R17 1        ; if R17 then PC := 198
189 [-]: JMP       198          ; PC := 198
190 [-]: GETUPVAL  R17 U0       ; R17 := U0
191 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mActivePanelName"]
192 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 198
193 [-]: JMP       198          ; PC := 198
194 [-]: SELF      R17 R16 K43  ; R18 := R16; R17 := R16["0x3037CE7E"]
195 [-]: CALL      R17 2 1      ; R17(R18)
196 [-]: SELF      R17 R16 K44  ; R18 := R16; R17 := R16["0xEEFE2F88"]
197 [-]: CALL      R17 2 1      ; R17(R18)
198 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 185; R14 := R15 end
199 [-]: JMP       185          ; PC := 185
200 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
201 [-]: GETUPVAL  R18 U0       ; R18 := U0
202 [-]: GETTABLE  R18 R18 K41  ; R18 := R18["mPanelList"]
203 [-]: GETUPVAL  R19 U0       ; R19 := U0
204 [-]: GETTABLE  R19 R19 K42  ; R19 := R19["mActivePanelName"]
205 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
206 [-]: CALL      R17 2 2      ; R17 := R17(R18)
207 [-]: TEST      R17 1        ; if R17 then PC := 223
208 [-]: JMP       223          ; PC := 223
209 [-]: GETUPVAL  R17 U0       ; R17 := U0
210 [-]: GETTABLE  R17 R17 K41  ; R17 := R17["mPanelList"]
211 [-]: GETUPVAL  R18 U0       ; R18 := U0
212 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mActivePanelName"]
213 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
214 [-]: SELF      R17 R17 K43  ; R18 := R17; R17 := R17["0x3037CE7E"]
215 [-]: CALL      R17 2 1      ; R17(R18)
216 [-]: GETUPVAL  R17 U0       ; R17 := U0
217 [-]: GETTABLE  R17 R17 K41  ; R17 := R17["mPanelList"]
218 [-]: GETUPVAL  R18 U0       ; R18 := U0
219 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mActivePanelName"]
220 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
221 [-]: SELF      R17 R17 K44  ; R18 := R17; R17 := R17["0xEEFE2F88"]
222 [-]: CALL      R17 2 1      ; R17(R18)
223 [-]: GETUPVAL  R17 U1       ; R17 := U1
224 [-]: SELF      R17 R17 K45  ; R18 := R17; R17 := R17["0x2C10FB71"]
225 [-]: CALL      R17 2 2      ; R17 := R17(R18)
226 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
227 [-]: MOVE      R19 R17      ; R19 := R17
228 [-]: CALL      R18 2 2      ; R18 := R18(R19)
229 [-]: TEST      R18 1        ; if R18 then PC := 249
230 [-]: JMP       249          ; PC := 249
231 [-]: GETTABLE  R18 R17 K46  ; R18 := R17["regionId"]
232 [-]: GETGLOBAL R19 K33      ; R19 := Engine
233 [-]: GETTABLE  R19 R19 K47  ; R19 := R19["EUROPE"]
234 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 247
235 [-]: JMP       247          ; PC := 247
236 [-]: GETUPVAL  R18 U13      ; R18 := U13
237 [-]: MOVE      R18 R12      ; R18 := R12
238 [-]: GETGLOBAL R18 K24      ; R18 := _G
239 [-]: GETTABLE  R18 R18 K48  ; R18 := R18["LAST_BREAK_MSG"]
240 [-]: EQ        0 R18 K39    ; if R18 ~= nil then PC := 249
241 [-]: JMP       249          ; PC := 249
242 [-]: GETGLOBAL R18 K24      ; R18 := _G
243 [-]: GETGLOBAL R19 K49      ; R19 := 0xD51B2786
244 [-]: CALL      R19 1 2      ; R19 := R19()
245 [-]: SETTABLE  R18 K48 R19  ; R18["LAST_BREAK_MSG"] := R19
246 [-]: JMP       249          ; PC := 249
247 [-]: LOADNIL   R18 R18      ; R18 := nil
248 [-]: MOVE      R18 R12      ; R18 := R12
249 [-]: GETUPVAL  R18 U1       ; R18 := U1
250 [-]: SELF      R18 R18 K50  ; R19 := R18; R18 := R18["0x88DEBFB8"]
251 [-]: CALL      R18 2 2      ; R18 := R18(R19)
252 [-]: MOVE      R18 R14      ; R18 := R14
253 [-]: GETUPVAL  R18 U1       ; R18 := U1
254 [-]: SELF      R18 R18 K51  ; R19 := R18; R18 := R18["0x1FF80B60"]
255 [-]: CALL      R18 2 2      ; R18 := R18(R19)
256 [-]: GETUPVAL  R19 U15      ; R19 := U15
257 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 261
258 [-]: JMP       261          ; PC := 261
259 [-]: TEST      R0 0         ; if not R0 then PC := 266
260 [-]: JMP       266          ; PC := 266
261 [-]: MOVE      R18 R15      ; R18 := R15
262 [-]: GETUPVAL  R19 U0       ; R19 := U0
263 [-]: SELF      R19 R19 K52  ; R20 := R19; R19 := R19["0x40AAAEBB"]
264 [-]: GETUPVAL  R21 U15      ; R21 := U15
265 [-]: CALL      R19 3 1      ; R19(R20,R21)
266 [-]: GETGLOBAL R19 K12      ; R19 := mMovie
267 [-]: SELF      R19 R19 K53  ; R20 := R19; R19 := R19["0x7D28CD9E"]
268 [-]: EQ        1 R18 K54    ; if R18 == 1 then PC := 271
269 [-]: JMP       271          ; PC := 271
270 [-]: MOVE      R21 R0       ; R21 := R0
271 [-]: MOVE      R21 R1       ; R21 := R1
272 [-]: CALL      R19 3 1      ; R19(R20,R21)
273 [-]: TEST      R0 1         ; if R0 then PC := 311
274 [-]: JMP       311          ; PC := 311
275 [-]: GETUPVAL  R19 U0       ; R19 := U0
276 [-]: GETUPVAL  R20 U16      ; R20 := U16
277 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["0xF81722A2"]
278 [-]: GETUPVAL  R21 U5       ; R21 := U5
279 [-]: LOADNIL   R22 R22      ; R22 := nil
280 [-]: GETUPVAL  R23 U0       ; R23 := U0
281 [-]: GETTABLE  R23 R23 K55  ; R23 := R23["mRegionChatEnabled"]
282 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
283 [-]: SETTABLE  R19 K55 R20  ; R19["mRegionChatEnabled"] := R20
284 [-]: GETUPVAL  R19 U0       ; R19 := U0
285 [-]: GETUPVAL  R20 U16      ; R20 := U16
286 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["0xF81722A2"]
287 [-]: GETUPVAL  R21 U6       ; R21 := U6
288 [-]: LOADNIL   R22 R22      ; R22 := nil
289 [-]: GETUPVAL  R23 U0       ; R23 := U0
290 [-]: GETTABLE  R23 R23 K57  ; R23 := R23["mRecruitingChatEnabled"]
291 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
292 [-]: SETTABLE  R19 K57 R20  ; R19["mRecruitingChatEnabled"] := R20
293 [-]: GETUPVAL  R19 U0       ; R19 := U0
294 [-]: GETUPVAL  R20 U16      ; R20 := U16
295 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["0xF81722A2"]
296 [-]: GETUPVAL  R21 U7       ; R21 := U7
297 [-]: LOADNIL   R22 R22      ; R22 := nil
298 [-]: GETUPVAL  R23 U0       ; R23 := U0
299 [-]: GETTABLE  R23 R23 K58  ; R23 := R23["mTradeChatEnabled"]
300 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
301 [-]: SETTABLE  R19 K58 R20  ; R19["mTradeChatEnabled"] := R20
302 [-]: GETUPVAL  R19 U0       ; R19 := U0
303 [-]: GETUPVAL  R20 U16      ; R20 := U16
304 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["0xF81722A2"]
305 [-]: GETUPVAL  R21 U8       ; R21 := U8
306 [-]: LOADNIL   R22 R22      ; R22 := nil
307 [-]: GETUPVAL  R23 U0       ; R23 := U0
308 [-]: GETTABLE  R23 R23 K59  ; R23 := R23["mQAChatEnabled"]
309 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
310 [-]: SETTABLE  R19 K59 R20  ; R19["mQAChatEnabled"] := R20
311 [-]: GETUPVAL  R19 U1       ; R19 := U1
312 [-]: SELF      R19 R19 K60  ; R20 := R19; R19 := R19["0xBAEA41C4"]
313 [-]: CALL      R19 2 2      ; R19 := R19(R20)
314 [-]: MOVE      R19 R17      ; R19 := R17
315 [-]: GETUPVAL  R19 U1       ; R19 := U1
316 [-]: SELF      R19 R19 K61  ; R20 := R19; R19 := R19["0xAAD146AE"]
317 [-]: CALL      R19 2 2      ; R19 := R19(R20)
318 [-]: MOVE      R19 R18      ; R19 := R18
319 [-]: GETUPVAL  R19 U1       ; R19 := U1
320 [-]: SELF      R19 R19 K62  ; R20 := R19; R19 := R19["0x6AA1D46A"]
321 [-]: CALL      R19 2 2      ; R19 := R19(R20)
322 [-]: MOVE      R19 R19      ; R19 := R19
323 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 9470
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF595D5E1"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xEE069D65"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 9477
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 9480
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  3 [-]: SETTABLE  R0 K0 R1     ; R0["Tags"] := R1
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  6 [-]: SETTABLE  R0 K1 R1     ; R0["Indexer"] := R1
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0xECFDD17
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETUPVAL  R5 U1        ; R5 := U1
 12 [-]: SETTABLE  R5 R3 K3     ; R5[R3] := nil
 13 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 11; R2 := R3 end
 14 [-]: JMP       11           ; PC := 11
 15 [-]: GETUPVAL  R5 U2        ; R5 := U2
 16 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0x6E9EB0BA"]
 17 [-]: CALL      R5 1 2       ; R5 := R5()
 18 [-]: LEN       R6 R5        ; R6 := # R5
 19 [-]: LT        0 K5 R6      ; if 0 >= R6 then PC := 63
 20 [-]: JMP       63           ; PC := 63
 21 [-]: GETGLOBAL R6 K6        ; R6 := 0x63B09107
 22 [-]: MOVE      R7 R5        ; R7 := R5
 23 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 24 [-]: JMP       61           ; PC := 61
 25 [-]: GETTABLE  R11 R10 K7   ; R11 := R10["Card"]
 26 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["mUpgrade"]
 27 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["mUpgradeFingerprint"]
 28 [-]: GETGLOBAL R12 K10      ; R12 := 0x7C282057
 29 [-]: GETTABLE  R13 R10 K7   ; R13 := R10["Card"]
 30 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["mUpgradeItemType"]
 31 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 32 [-]: GETGLOBAL R13 K12      ; R13 := 0x400E7765
 33 [-]: MOVE      R14 R12      ; R14 := R12
 34 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 35 [-]: TEST      R13 1        ; if R13 then PC := 59
 36 [-]: JMP       59           ; PC := 59
 37 [-]: SELF      R13 R12 K13  ; R14 := R12; R13 := R12["0x14BF6A8B"]
 38 [-]: MOVE      R15 R11      ; R15 := R11
 39 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 40 [-]: TEST      R13 0        ; if not R13 then PC := 59
 41 [-]: JMP       59           ; PC := 59
 42 [-]: GETGLOBAL R13 K14      ; R13 := string
 43 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["0xBDD0D625"]
 44 [-]: SELF      R14 R12 K16  ; R15 := R12; R14 := R12["0x9631703E"]
 45 [-]: MOVE      R16 R11      ; R16 := R11
 46 [-]: CALL      R14 3 0      ; R14,... := R14(R15,R16)
 47 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 48 [-]: GETUPVAL  R14 U1       ; R14 := U1
 49 [-]: SETTABLE  R14 R13 K17  ; R14[R13] := "0x1"
 50 [-]: GETGLOBAL R14 K18      ; R14 := table
 51 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["0xE6450C9D"]
 52 [-]: GETUPVAL  R15 U0       ; R15 := U0
 53 [-]: GETTABLE  R15 R15 K0   ; R15 := R15["Tags"]
 54 [-]: LOADK     R16 K20      ; R16 := "["
 55 [-]: MOVE      R17 R13      ; R17 := R13
 56 [-]: LOADK     R18 K21      ; R18 := "]"
 57 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
 58 [-]: CALL      R14 3 1      ; R14(R15,R16)
 59 [-]: GETGLOBAL R14 K22      ; R14 := 0x1BF588C6
 60 [-]: CALL      R14 1 1      ; R14()
 61 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 25; R8 := R9 end
 62 [-]: JMP       25           ; PC := 25
 63 [-]: GETGLOBAL R14 K18      ; R14 := table
 64 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xA5C58010"]
 65 [-]: GETUPVAL  R15 U0       ; R15 := U0
 66 [-]: GETTABLE  R15 R15 K0   ; R15 := R15["Tags"]
 67 [-]: CALL      R14 2 1      ; R14(R15)
 68 [-]: LOADNIL   R14 R14      ; R14 := nil
 69 [-]: LOADK     R15 K24      ; R15 := 1
 70 [-]: GETUPVAL  R16 U0       ; R16 := U0
 71 [-]: GETTABLE  R16 R16 K0   ; R16 := R16["Tags"]
 72 [-]: LEN       R16 R16      ; R16 := # R16
 73 [-]: LOADK     R17 K24      ; R17 := 1
 74 [-]: FORPREP   R15 91       ; R15 -= R17; PC := 91
 75 [-]: GETGLOBAL R19 K14      ; R19 := string
 76 [-]: GETTABLE  R19 R19 K25  ; R19 := R19["0x7B782033"]
 77 [-]: GETUPVAL  R20 U0       ; R20 := U0
 78 [-]: GETTABLE  R20 R20 K0   ; R20 := R20["Tags"]
 79 [-]: GETTABLE  R20 R20 R18  ; R20 := R20[R18]
 80 [-]: LOADK     R21 K26      ; R21 := 2
 81 [-]: LOADK     R22 K26      ; R22 := 2
 82 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 83 [-]: EQ        1 R19 R14    ; if R19 == R14 then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: MOVE      R14 R19      ; R14 := R19
 86 [-]: GETUPVAL  R20 U0       ; R20 := U0
 87 [-]: GETTABLE  R20 R20 K1   ; R20 := R20["Indexer"]
 88 [-]: SETTABLE  R20 R19 R18  ; R20[R19] := R18
 89 [-]: GETGLOBAL R20 K22      ; R20 := 0x1BF588C6
 90 [-]: CALL      R20 1 1      ; R20()
 91 [-]: FORLOOP   R15 75       ; R15 += R17; if R15 <= R16 then begin PC := 75; R18 := R15 end
 92 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 9515
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 9519
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["MWC_AMP"]
  5 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETUPVAL  R2 U3        ; R2 := U3
  9 [-]: JMP       34           ; PC := 34
 10 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["MWC_MOA_PET"]
 12 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: GETUPVAL  R2 U5        ; R2 := U5
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
 18 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MWC_HOVERBOARD"]
 19 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R1 U6        ; R1 := U6
 22 [-]: GETUPVAL  R2 U7        ; R2 := U7
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
 25 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["MWC_PRIMARY"]
 26 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
 29 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["MWC_SECONDARY"]
 30 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: GETUPVAL  R1 U8        ; R1 := U8
 33 [-]: GETUPVAL  R2 U9        ; R2 := U9
 34 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 35 [-]: SETTABLE  R1 K6 R3     ; R1["Tags"] := R3
 36 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 37 [-]: SETTABLE  R1 K7 R3     ; R1["Indexer"] := R3
 38 [-]: GETGLOBAL R3 K8        ; R3 := 0xECFDD17
 39 [-]: MOVE      R4 R2        ; R4 := R2
 40 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 41 [-]: JMP       43           ; PC := 43
 42 [-]: SETTABLE  R2 R6 K9     ; R2[R6] := nil
 43 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 42; R5 := R6 end
 44 [-]: JMP       42           ; PC := 42
 45 [-]: GETUPVAL  R8 U10       ; R8 := U10
 46 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["0xEC150538"]
 47 [-]: MOVE      R9 R0        ; R9 := R0
 48 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 49 [-]: LEN       R9 R8        ; R9 := # R8
 50 [-]: LT        0 K11 R9     ; if 0 >= R9 then PC := 76
 51 [-]: JMP       76           ; PC := 76
 52 [-]: GETGLOBAL R9 K12       ; R9 := 0x63B09107
 53 [-]: MOVE      R10 R8       ; R10 := R8
 54 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 55 [-]: JMP       74           ; PC := 74
 56 [-]: GETTABLE  R14 R13 K13  ; R14 := R13["Name"]
 57 [-]: EQ        1 R14 K9     ; if R14 == nil then PC := 72
 58 [-]: JMP       72           ; PC := 72
 59 [-]: GETGLOBAL R14 K14      ; R14 := string
 60 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["0xBDD0D625"]
 61 [-]: GETTABLE  R15 R13 K13  ; R15 := R13["Name"]
 62 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 63 [-]: SETTABLE  R2 R14 K16   ; R2[R14] := "0x1"
 64 [-]: GETGLOBAL R15 K17      ; R15 := table
 65 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0xE6450C9D"]
 66 [-]: GETTABLE  R16 R1 K6    ; R16 := R1["Tags"]
 67 [-]: LOADK     R17 K19      ; R17 := "["
 68 [-]: MOVE      R18 R14      ; R18 := R14
 69 [-]: LOADK     R19 K20      ; R19 := "]"
 70 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
 71 [-]: CALL      R15 3 1      ; R15(R16,R17)
 72 [-]: GETGLOBAL R15 K21      ; R15 := 0x1BF588C6
 73 [-]: CALL      R15 1 1      ; R15()
 74 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 56; R11 := R12 end
 75 [-]: JMP       56           ; PC := 56
 76 [-]: GETGLOBAL R15 K17      ; R15 := table
 77 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["0xA5C58010"]
 78 [-]: GETTABLE  R16 R1 K6    ; R16 := R1["Tags"]
 79 [-]: CALL      R15 2 1      ; R15(R16)
 80 [-]: LOADNIL   R15 R15      ; R15 := nil
 81 [-]: LOADK     R16 K23      ; R16 := 1
 82 [-]: GETTABLE  R17 R1 K6    ; R17 := R1["Tags"]
 83 [-]: LEN       R17 R17      ; R17 := # R17
 84 [-]: LOADK     R18 K23      ; R18 := 1
 85 [-]: FORPREP   R16 100      ; R16 -= R18; PC := 100
 86 [-]: GETGLOBAL R20 K14      ; R20 := string
 87 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["0x7B782033"]
 88 [-]: GETTABLE  R21 R1 K6    ; R21 := R1["Tags"]
 89 [-]: GETTABLE  R21 R21 R19  ; R21 := R21[R19]
 90 [-]: LOADK     R22 K25      ; R22 := 2
 91 [-]: LOADK     R23 K25      ; R23 := 2
 92 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
 93 [-]: EQ        1 R20 R15    ; if R20 == R15 then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: MOVE      R15 R20      ; R15 := R20
 96 [-]: GETTABLE  R21 R1 K7    ; R21 := R1["Indexer"]
 97 [-]: SETTABLE  R21 R20 R19  ; R21[R20] := R19
 98 [-]: GETGLOBAL R21 K21      ; R21 := 0x1BF588C6
 99 [-]: CALL      R21 1 1      ; R21()
100 [-]: FORLOOP   R16 86       ; R16 += R18; if R16 <= R17 then begin PC := 86; R19 := R16 end
101 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 9570
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 9574
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x917774C"]
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: MOVE      R0 R3        ; R0 := R3
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0x84DCC428"]
 20 [-]: CALL      R0 1 2       ; R0 := R0()
 21 [-]: MOVE      R0 R4        ; R0 := R4
 22 [-]: GETUPVAL  R0 U4        ; R0 := U4
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["UI_MODE_IN_DOJO"]
 25 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 44
 26 [-]: JMP       44           ; PC := 44
 27 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x232D0973"]
 34 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 35 [-]: TEST      R0 0         ; if not R0 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x5DFBCA3F"]
 39 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 40 [-]: GETGLOBAL R1 K7        ; R1 := Lotus_Game
 41 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["PVP_MATCH_STARTED"]
 42 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R0 R0        ; R0 := R0
 45 [-]: MOVE      R0 R1        ; R0 := R1
 46 [-]: MOVE      R0 R5        ; R0 := R5
 47 [-]: GETUPVAL  R0 U4        ; R0 := U4
 48 [-]: GETUPVAL  R1 U2        ; R1 := U2
 49 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["UI_MODE_IN_DOJO"]
 50 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R0 R0        ; R0 := R0
 53 [-]: MOVE      R0 R1        ; R0 := R1
 54 [-]: MOVE      R0 R6        ; R0 := R6
 55 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 9583
; #Upvalues:       32
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  60

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xF017C404"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  6 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x7D28CD9E"]
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: GETGLOBAL R0 K4        ; R0 := _G
 10 [-]: SETTABLE  R0 K5 K6     ; R0["mDoNotDisturb"] := "0x0"
 11 [-]: GETGLOBAL R0 K7        ; R0 := Engine
 12 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["0xE35E176B"]
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: MOVE      R0 R0        ; R0 := R0
 15 [-]: GETGLOBAL R0 K9        ; R0 := 0x329BDC44
 16 [-]: LOADK     R1 K10       ; R1 := "Lotus.Interface.Libs.TimerMgr"
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["0xC2A7FAC0"]
 19 [-]: CALL      R1 1 2       ; R1 := R1()
 20 [-]: MOVE      R1 R1        ; R1 := R1
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: CALL      R1 1 1       ; R1()
 23 [-]: GETUPVAL  R1 U4        ; R1 := U4
 24 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x38F05760"]
 25 [-]: CALL      R1 1 2       ; R1 := R1()
 26 [-]: MOVE      R1 R3        ; R1 := R3
 27 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 28 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1["0x1C19D966"]
 29 [-]: LOADK     R3 K14       ; R3 := "Window.SendMessageBar.MessageBox"
 30 [-]: LOADK     R4 K15       ; R4 := "ignoreUpDown"
 31 [-]: MOVE      R5 R1        ; R5 := R1
 32 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 33 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 34 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1["0x1C19D966"]
 35 [-]: LOADK     R3 K16       ; R3 := "Window.MouseCatcherBtn"
 36 [-]: LOADK     R4 K17       ; R4 := "noMenuSelection"
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 39 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 40 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1["0x1C19D966"]
 41 [-]: LOADK     R3 K18       ; R3 := "Window.TabMenu.WindowTitle.Fill"
 42 [-]: LOADK     R4 K17       ; R4 := "noMenuSelection"
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 45 [-]: GETGLOBAL R1 K9        ; R1 := 0x329BDC44
 46 [-]: LOADK     R2 K19       ; R2 := "Lotus.Interface.Components.PresenceHelper"
 47 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 48 [-]: GETTABLE  R2 R1 K20    ; R2 := R1["0x46FF1A3C"]
 49 [-]: CALL      R2 1 2       ; R2 := R2()
 50 [-]: MOVE      R2 R5        ; R2 := R5
 51 [-]: GETGLOBAL R2 K21       ; R2 := table
 52 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["0xE6450C9D"]
 53 [-]: GETUPVAL  R3 U5        ; R3 := U5
 54 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["mMoviesToSync"]
 55 [-]: GETGLOBAL R4 K24       ; R4 := clanMovie
 56 [-]: CALL      R2 3 1       ; R2(R3,R4)
 57 [-]: GETGLOBAL R2 K21       ; R2 := table
 58 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["0xE6450C9D"]
 59 [-]: GETUPVAL  R3 U5        ; R3 := U5
 60 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["mMoviesToSync"]
 61 [-]: GETGLOBAL R4 K25       ; R4 := friendsMovie
 62 [-]: CALL      R2 3 1       ; R2(R3,R4)
 63 [-]: GETGLOBAL R2 K21       ; R2 := table
 64 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["0xE6450C9D"]
 65 [-]: GETUPVAL  R3 U5        ; R3 := U5
 66 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["mMoviesToSync"]
 67 [-]: GETUPVAL  R4 U6        ; R4 := U6
 68 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["0xBCEEAD81"]
 69 [-]: CALL      R4 1 0       ; R4,... := R4()
 70 [-]: CALL      R2 0 1       ; R2(R3,...)
 71 [-]: GETGLOBAL R2 K27       ; R2 := gFlashMgr
 72 [-]: SELF      R2 R2 K28    ; R3 := R2; R2 := R2["0x696CE878"]
 73 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 74 [-]: GETGLOBAL R3 K29       ; R3 := 0xD1E7609B
 75 [-]: LOADK     R4 K30       ; R4 := ","
 76 [-]: MOVE      R5 R2        ; R5 := R2
 77 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 78 [-]: MOVE      R3 R7        ; R3 := R7
 79 [-]: GETGLOBAL R3 K31       ; R3 := 0x63B09107
 80 [-]: GETUPVAL  R4 U7        ; R4 := U7
 81 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 82 [-]: JMP       93           ; PC := 93
 83 [-]: GETUPVAL  R8 U7        ; R8 := U7
 84 [-]: LOADK     R9 K32       ; R9 := ":"
 85 [-]: GETUPVAL  R10 U8       ; R10 := U8
 86 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["0xCECDECDE"]
 87 [-]: GETUPVAL  R11 U7       ; R11 := U7
 88 [-]: GETTABLE  R11 R11 R6   ; R11 := R11[R6]
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: LOADK     R11 K32      ; R11 := ":"
 91 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 92 [-]: SETTABLE  R8 R6 R9     ; R8[R6] := R9
 93 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 83; R5 := R6 end
 94 [-]: JMP       83           ; PC := 83
 95 [-]: GETGLOBAL R8 K21       ; R8 := table
 96 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["0xA5C58010"]
 97 [-]: GETUPVAL  R9 U7        ; R9 := U7
 98 [-]: CLOSURE   R10 0        ; R10 := closure(Function #153.1)
 99 [-]: CALL      R8 3 1       ; R8(R9,R10)
100 [-]: GETGLOBAL R8 K7        ; R8 := Engine
101 [-]: GETTABLE  R8 R8 K35    ; R8 := R8["0x1398DAFB"]
102 [-]: CALL      R8 1 2       ; R8 := R8()
103 [-]: TEST      R8 1         ; if R8 then PC := 125
104 [-]: JMP       125          ; PC := 125
105 [-]: GETGLOBAL R8 K27       ; R8 := gFlashMgr
106 [-]: SELF      R8 R8 K36    ; R9 := R8; R8 := R8["0x616DD092"]
107 [-]: GETGLOBAL R10 K37      ; R10 := IMEOverlayMovie
108 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
109 [-]: MOVE      R8 R9        ; R8 := R9
110 [-]: GETGLOBAL R8 K38       ; R8 := 0x400E7765
111 [-]: GETUPVAL  R9 U9        ; R9 := U9
112 [-]: CALL      R8 2 2       ; R8 := R8(R9)
113 [-]: TEST      R8 0         ; if not R8 then PC := 125
114 [-]: JMP       125          ; PC := 125
115 [-]: GETGLOBAL R8 K38       ; R8 := 0x400E7765
116 [-]: GETGLOBAL R9 K37       ; R9 := IMEOverlayMovie
117 [-]: CALL      R8 2 2       ; R8 := R8(R9)
118 [-]: TEST      R8 1         ; if R8 then PC := 125
119 [-]: JMP       125          ; PC := 125
120 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
121 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x5FF274BB"]
122 [-]: GETGLOBAL R10 K37      ; R10 := IMEOverlayMovie
123 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
124 [-]: MOVE      R8 R9        ; R8 := R9
125 [-]: LOADNIL   R8 R8        ; R8 := nil
126 [-]: MOVE      R8 R10       ; R8 := R10
127 [-]: GETGLOBAL R8 K40       ; R8 := gPlayerProfileMgr
128 [-]: SELF      R8 R8 K41    ; R9 := R8; R8 := R8["0x21EF7B1A"]
129 [-]: LOADK     R10 K2       ; R10 := 0
130 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
131 [-]: GETGLOBAL R9 K38       ; R9 := 0x400E7765
132 [-]: MOVE      R10 R8       ; R10 := R8
133 [-]: CALL      R9 2 2       ; R9 := R9(R10)
134 [-]: TEST      R9 1         ; if R9 then PC := 142
135 [-]: JMP       142          ; PC := 142
136 [-]: SELF      R9 R8 K42    ; R10 := R8; R9 := R8["0x654F1092"]
137 [-]: CALL      R9 2 2       ; R9 := R9(R10)
138 [-]: MOVE      R9 R10       ; R9 := R10
139 [-]: SELF      R9 R8 K43    ; R10 := R8; R9 := R8["0x3EEB612E"]
140 [-]: CALL      R9 2 2       ; R9 := R9(R10)
141 [-]: MOVE      R9 R11       ; R9 := R11
142 [-]: NEWTABLE  R9 0 0       ; R9 := {}
143 [-]: CLOSURE   R10 1        ; R10 := closure(Function #153.2)
144 [-]: GETUPVAL  R0 U4        ; R0 := U4
145 [-]: MOVE      R0 R9        ; R0 := R9
146 [-]: GETUPVAL  R11 U10      ; R11 := U10
147 [-]: SELF      R11 R11 K44  ; R12 := R11; R11 := R11["0x6F2E05FD"]
148 [-]: CALL      R11 2 2      ; R11 := R11(R12)
149 [-]: MOVE      R12 R10      ; R12 := R10
150 [-]: SELF      R13 R11 K45  ; R14 := R11; R13 := R11["0x1D216770"]
151 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
152 [-]: CALL      R12 0 1      ; R12(R13,...)
153 [-]: MOVE      R12 R10      ; R12 := R10
154 [-]: SELF      R13 R11 K46  ; R14 := R11; R13 := R11["0xB5D66AE"]
155 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
156 [-]: CALL      R12 0 1      ; R12(R13,...)
157 [-]: MOVE      R12 R10      ; R12 := R10
158 [-]: SELF      R13 R11 K47  ; R14 := R11; R13 := R11["0xD3A6CE65"]
159 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
160 [-]: CALL      R12 0 1      ; R12(R13,...)
161 [-]: MOVE      R12 R10      ; R12 := R10
162 [-]: SELF      R13 R11 K48  ; R14 := R11; R13 := R11["0xA82A3D30"]
163 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
164 [-]: CALL      R12 0 1      ; R12(R13,...)
165 [-]: MOVE      R12 R10      ; R12 := R10
166 [-]: SELF      R13 R11 K49  ; R14 := R11; R13 := R11["0xC119AB7B"]
167 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
168 [-]: CALL      R12 0 1      ; R12(R13,...)
169 [-]: MOVE      R12 R10      ; R12 := R10
170 [-]: SELF      R13 R11 K50  ; R14 := R11; R13 := R11["0x3534C3F3"]
171 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
172 [-]: CALL      R12 0 1      ; R12(R13,...)
173 [-]: MOVE      R12 R10      ; R12 := R10
174 [-]: SELF      R13 R11 K51  ; R14 := R11; R13 := R11["0x2485CEF6"]
175 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
176 [-]: CALL      R12 0 1      ; R12(R13,...)
177 [-]: MOVE      R12 R10      ; R12 := R10
178 [-]: SELF      R13 R11 K52  ; R14 := R11; R13 := R11["0x4ADC73C2"]
179 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
180 [-]: CALL      R12 0 1      ; R12(R13,...)
181 [-]: MOVE      R12 R10      ; R12 := R10
182 [-]: SELF      R13 R11 K53  ; R14 := R11; R13 := R11["0x213E1D36"]
183 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
184 [-]: CALL      R12 0 1      ; R12(R13,...)
185 [-]: MOVE      R12 R10      ; R12 := R10
186 [-]: SELF      R13 R11 K54  ; R14 := R11; R13 := R11["0xA5FC09FD"]
187 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
188 [-]: CALL      R12 0 1      ; R12(R13,...)
189 [-]: MOVE      R12 R10      ; R12 := R10
190 [-]: SELF      R13 R11 K55  ; R14 := R11; R13 := R11["0xEA75EFF7"]
191 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
192 [-]: CALL      R12 0 1      ; R12(R13,...)
193 [-]: MOVE      R12 R10      ; R12 := R10
194 [-]: SELF      R13 R11 K56  ; R14 := R11; R13 := R11["0x85D4CA1C"]
195 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
196 [-]: CALL      R12 0 1      ; R12(R13,...)
197 [-]: MOVE      R12 R10      ; R12 := R10
198 [-]: SELF      R13 R11 K57  ; R14 := R11; R13 := R11["0x640AA7E"]
199 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
200 [-]: CALL      R12 0 1      ; R12(R13,...)
201 [-]: MOVE      R12 R10      ; R12 := R10
202 [-]: SELF      R13 R11 K58  ; R14 := R11; R13 := R11["0x775F4F2F"]
203 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
204 [-]: CALL      R12 0 1      ; R12(R13,...)
205 [-]: MOVE      R12 R10      ; R12 := R10
206 [-]: SELF      R13 R11 K59  ; R14 := R11; R13 := R11["0x63A03B31"]
207 [-]: CALL      R13 2 2      ; R13 := R13(R14)
208 [-]: MOVE      R14 R1       ; R14 := R1
209 [-]: CALL      R12 3 1      ; R12(R13,R14)
210 [-]: MOVE      R12 R10      ; R12 := R10
211 [-]: SELF      R13 R11 K60  ; R14 := R11; R13 := R11["0x4FA1109B"]
212 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
213 [-]: CALL      R12 0 1      ; R12(R13,...)
214 [-]: MOVE      R12 R10      ; R12 := R10
215 [-]: SELF      R13 R11 K61  ; R14 := R11; R13 := R11["0x3329FBFF"]
216 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
217 [-]: CALL      R12 0 1      ; R12(R13,...)
218 [-]: MOVE      R12 R10      ; R12 := R10
219 [-]: SELF      R13 R11 K62  ; R14 := R11; R13 := R11["0x6E1FFCCD"]
220 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
221 [-]: CALL      R12 0 1      ; R12(R13,...)
222 [-]: MOVE      R12 R10      ; R12 := R10
223 [-]: SELF      R13 R11 K63  ; R14 := R11; R13 := R11["0xAB4E6F2A"]
224 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
225 [-]: CALL      R12 0 1      ; R12(R13,...)
226 [-]: MOVE      R12 R10      ; R12 := R10
227 [-]: SELF      R13 R11 K64  ; R14 := R11; R13 := R11["0x44384E3E"]
228 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
229 [-]: CALL      R12 0 1      ; R12(R13,...)
230 [-]: MOVE      R12 R10      ; R12 := R10
231 [-]: SELF      R13 R11 K65  ; R14 := R11; R13 := R11["0x70666039"]
232 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
233 [-]: CALL      R12 0 1      ; R12(R13,...)
234 [-]: MOVE      R12 R10      ; R12 := R10
235 [-]: SELF      R13 R11 K66  ; R14 := R11; R13 := R11["0xC7873095"]
236 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
237 [-]: CALL      R12 0 1      ; R12(R13,...)
238 [-]: MOVE      R12 R10      ; R12 := R10
239 [-]: SELF      R13 R11 K67  ; R14 := R11; R13 := R11["0xC814E302"]
240 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
241 [-]: CALL      R12 0 1      ; R12(R13,...)
242 [-]: MOVE      R12 R10      ; R12 := R10
243 [-]: SELF      R13 R11 K68  ; R14 := R11; R13 := R11["0xEE30A1BB"]
244 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
245 [-]: CALL      R12 0 1      ; R12(R13,...)
246 [-]: MOVE      R12 R10      ; R12 := R10
247 [-]: SELF      R13 R11 K69  ; R14 := R11; R13 := R11["0xC4F6B9B9"]
248 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
249 [-]: CALL      R12 0 1      ; R12(R13,...)
250 [-]: MOVE      R12 R10      ; R12 := R10
251 [-]: SELF      R13 R11 K70  ; R14 := R11; R13 := R11["0x613232C3"]
252 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
253 [-]: CALL      R12 0 1      ; R12(R13,...)
254 [-]: MOVE      R12 R10      ; R12 := R10
255 [-]: SELF      R13 R11 K71  ; R14 := R11; R13 := R11["0x48FD9992"]
256 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
257 [-]: CALL      R12 0 1      ; R12(R13,...)
258 [-]: GETGLOBAL R12 K72      ; R12 := codexStorePairManifest
259 [-]: SELF      R12 R12 K73  ; R13 := R12; R12 := R12["0x55669304"]
260 [-]: CALL      R12 2 2      ; R12 := R12(R13)
261 [-]: GETGLOBAL R13 K74      ; R13 := codexSecretStorePairManifest
262 [-]: SELF      R13 R13 K73  ; R14 := R13; R13 := R13["0x55669304"]
263 [-]: CALL      R13 2 2      ; R13 := R13(R14)
264 [-]: NEWTABLE  R14 0 0      ; R14 := {}
265 [-]: LOADK     R15 K75      ; R15 := 1
266 [-]: LEN       R16 R13      ; R16 := # R13
267 [-]: LOADK     R17 K75      ; R17 := 1
268 [-]: FORPREP   R15 298      ; R15 -= R17; PC := 298
269 [-]: GETGLOBAL R19 K38      ; R19 := 0x400E7765
270 [-]: GETTABLE  R20 R13 R18  ; R20 := R13[R18]
271 [-]: GETTABLE  R20 R20 K76  ; R20 := R20["storeItem"]
272 [-]: CALL      R19 2 2      ; R19 := R19(R20)
273 [-]: TEST      R19 1        ; if R19 then PC := 293
274 [-]: JMP       293          ; PC := 293
275 [-]: GETGLOBAL R19 K77      ; R19 := string
276 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["0x633C4246"]
277 [-]: GETTABLE  R20 R13 R18  ; R20 := R13[R18]
278 [-]: GETTABLE  R20 R20 K76  ; R20 := R20["storeItem"]
279 [-]: SELF      R20 R20 K79  ; R21 := R20; R20 := R20["0x1B252E3C"]
280 [-]: CALL      R20 2 2      ; R20 := R20(R21)
281 [-]: LOADK     R21 K80      ; R21 := "/StoreItems"
282 [-]: LOADK     R22 K81      ; R22 := ""
283 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
284 [-]: GETTABLE  R19 R9 R19   ; R19 := R9[R19]
285 [-]: TEST      R19 0        ; if not R19 then PC := 293
286 [-]: JMP       293          ; PC := 293
287 [-]: GETGLOBAL R19 K21      ; R19 := table
288 [-]: GETTABLE  R19 R19 K22  ; R19 := R19["0xE6450C9D"]
289 [-]: MOVE      R20 R12      ; R20 := R12
290 [-]: GETTABLE  R21 R13 R18  ; R21 := R13[R18]
291 [-]: CALL      R19 3 1      ; R19(R20,R21)
292 [-]: JMP       298          ; PC := 298
293 [-]: GETGLOBAL R19 K21      ; R19 := table
294 [-]: GETTABLE  R19 R19 K22  ; R19 := R19["0xE6450C9D"]
295 [-]: MOVE      R20 R14      ; R20 := R14
296 [-]: GETTABLE  R21 R13 R18  ; R21 := R13[R18]
297 [-]: CALL      R19 3 1      ; R19(R20,R21)
298 [-]: FORLOOP   R15 269      ; R15 += R17; if R15 <= R16 then begin PC := 269; R18 := R15 end
299 [-]: NEWTABLE  R19 0 0      ; R19 := {}
300 [-]: LOADNIL   R20 R20      ; R20 := nil
301 [-]: CLOSURE   R21 2        ; R21 := closure(Function #153.3)
302 [-]: MOVE      R0 R20       ; R0 := R20
303 [-]: GETUPVAL  R0 U8        ; R0 := U8
304 [-]: LOADK     R22 K75      ; R22 := 1
305 [-]: LEN       R23 R12      ; R23 := # R12
306 [-]: LOADK     R24 K75      ; R24 := 1
307 [-]: FORPREP   R22 316      ; R22 -= R24; PC := 316
308 [-]: GETGLOBAL R26 K82      ; R26 := 0x1BF588C6
309 [-]: LOADK     R27 K2       ; R27 := 0
310 [-]: CALL      R26 2 1      ; R26(R27)
311 [-]: MOVE      R26 R21      ; R26 := R21
312 [-]: GETTABLE  R27 R12 R25  ; R27 := R12[R25]
313 [-]: GETUPVAL  R28 U12      ; R28 := U12
314 [-]: MOVE      R29 R19      ; R29 := R19
315 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
316 [-]: FORLOOP   R22 308      ; R22 += R24; if R22 <= R23 then begin PC := 308; R25 := R22 end
317 [-]: LOADK     R26 K75      ; R26 := 1
318 [-]: LEN       R27 R14      ; R27 := # R14
319 [-]: LOADK     R28 K75      ; R28 := 1
320 [-]: FORPREP   R26 328      ; R26 -= R28; PC := 328
321 [-]: GETGLOBAL R30 K82      ; R30 := 0x1BF588C6
322 [-]: LOADK     R31 K2       ; R31 := 0
323 [-]: CALL      R30 2 1      ; R30(R31)
324 [-]: MOVE      R30 R21      ; R30 := R21
325 [-]: GETTABLE  R31 R14 R29  ; R31 := R14[R29]
326 [-]: GETUPVAL  R32 U12      ; R32 := U12
327 [-]: CALL      R30 3 1      ; R30(R31,R32)
328 [-]: FORLOOP   R26 321      ; R26 += R28; if R26 <= R27 then begin PC := 321; R29 := R26 end
329 [-]: GETGLOBAL R30 K21      ; R30 := table
330 [-]: GETTABLE  R30 R30 K34  ; R30 := R30["0xA5C58010"]
331 [-]: MOVE      R31 R19      ; R31 := R19
332 [-]: CLOSURE   R32 3        ; R32 := closure(Function #153.4)
333 [-]: CALL      R30 3 1      ; R30(R31,R32)
334 [-]: GETUPVAL  R30 U13      ; R30 := U13
335 [-]: GETUPVAL  R31 U8       ; R31 := U8
336 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
337 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
338 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
339 [-]: GETUPVAL  R34 U13      ; R34 := U13
340 [-]: GETTABLE  R34 R34 K85  ; R34 := R34["OMEGA_STRING_LOC"]
341 [-]: MOVE      R35 R0       ; R35 := R0
342 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
343 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
344 [-]: SETTABLE  R30 K83 R31  ; R30["OmegaString"] := R31
345 [-]: GETUPVAL  R30 U13      ; R30 := U13
346 [-]: GETUPVAL  R31 U8       ; R31 := U8
347 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
348 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
349 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
350 [-]: GETUPVAL  R34 U13      ; R34 := U13
351 [-]: GETTABLE  R34 R34 K87  ; R34 := R34["STEP_SEQUENCER_STRING_LOC"]
352 [-]: MOVE      R35 R0       ; R35 := R0
353 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
354 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
355 [-]: SETTABLE  R30 K86 R31  ; R30["StepSequencerString"] := R31
356 [-]: GETUPVAL  R30 U13      ; R30 := U13
357 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
358 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
359 [-]: GETUPVAL  R33 U13      ; R33 := U13
360 [-]: GETTABLE  R33 R33 K89  ; R33 := R33["STEP_SEQUENCER_STRING_PREFIX"]
361 [-]: MOVE      R34 R0       ; R34 := R0
362 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
363 [-]: SETTABLE  R30 K88 R31  ; R30["StepSequencerPrefixString"] := R31
364 [-]: GETUPVAL  R30 U13      ; R30 := U13
365 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
366 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
367 [-]: GETUPVAL  R33 U13      ; R33 := U13
368 [-]: GETTABLE  R33 R33 K91  ; R33 := R33["ZAW_STRING_PREFIX"]
369 [-]: MOVE      R34 R0       ; R34 := R0
370 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
371 [-]: SETTABLE  R30 K90 R31  ; R30["ZawPrefixString"] := R31
372 [-]: GETUPVAL  R30 U13      ; R30 := U13
373 [-]: GETUPVAL  R31 U8       ; R31 := U8
374 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
375 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
376 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
377 [-]: GETUPVAL  R34 U13      ; R34 := U13
378 [-]: GETTABLE  R34 R34 K93  ; R34 := R34["ZAW_STRING_LOC"]
379 [-]: MOVE      R35 R0       ; R35 := R0
380 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
381 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
382 [-]: SETTABLE  R30 K92 R31  ; R30["ZawString"] := R31
383 [-]: GETUPVAL  R30 U13      ; R30 := U13
384 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
385 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
386 [-]: GETUPVAL  R33 U13      ; R33 := U13
387 [-]: GETTABLE  R33 R33 K95  ; R33 := R33["AMP_STRING_PREFIX"]
388 [-]: MOVE      R34 R0       ; R34 := R0
389 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
390 [-]: SETTABLE  R30 K94 R31  ; R30["AmpPrefixString"] := R31
391 [-]: GETUPVAL  R30 U13      ; R30 := U13
392 [-]: GETUPVAL  R31 U8       ; R31 := U8
393 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
394 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
395 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
396 [-]: GETUPVAL  R34 U13      ; R34 := U13
397 [-]: GETTABLE  R34 R34 K97  ; R34 := R34["AMP_STRING_LOC"]
398 [-]: MOVE      R35 R0       ; R35 := R0
399 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
400 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
401 [-]: SETTABLE  R30 K96 R31  ; R30["AmpString"] := R31
402 [-]: GETUPVAL  R30 U13      ; R30 := U13
403 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
404 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
405 [-]: GETUPVAL  R33 U13      ; R33 := U13
406 [-]: GETTABLE  R33 R33 K99  ; R33 := R33["MOA_PET_STRING_PREFIX"]
407 [-]: MOVE      R34 R0       ; R34 := R0
408 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
409 [-]: SETTABLE  R30 K98 R31  ; R30["MoaPetPrefixString"] := R31
410 [-]: GETUPVAL  R30 U13      ; R30 := U13
411 [-]: GETUPVAL  R31 U8       ; R31 := U8
412 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
413 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
414 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
415 [-]: GETUPVAL  R34 U13      ; R34 := U13
416 [-]: GETTABLE  R34 R34 K101 ; R34 := R34["MOA_PET_STRING_LOC"]
417 [-]: MOVE      R35 R0       ; R35 := R0
418 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
419 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
420 [-]: SETTABLE  R30 K100 R31 ; R30["MoaPetString"] := R31
421 [-]: GETUPVAL  R30 U13      ; R30 := U13
422 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
423 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
424 [-]: GETUPVAL  R33 U13      ; R33 := U13
425 [-]: GETTABLE  R33 R33 K103 ; R33 := R33["KDRIVE_STRING_PREFIX"]
426 [-]: MOVE      R34 R0       ; R34 := R0
427 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
428 [-]: SETTABLE  R30 K102 R31 ; R30["KDrivePrefixString"] := R31
429 [-]: GETUPVAL  R30 U13      ; R30 := U13
430 [-]: GETUPVAL  R31 U8       ; R31 := U8
431 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
432 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
433 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
434 [-]: GETUPVAL  R34 U13      ; R34 := U13
435 [-]: GETTABLE  R34 R34 K105 ; R34 := R34["KDRIVE_STRING_LOC"]
436 [-]: MOVE      R35 R0       ; R35 := R0
437 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
438 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
439 [-]: SETTABLE  R30 K104 R31 ; R30["KDriveString"] := R31
440 [-]: GETUPVAL  R30 U13      ; R30 := U13
441 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
442 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
443 [-]: GETUPVAL  R33 U13      ; R33 := U13
444 [-]: GETTABLE  R33 R33 K107 ; R33 := R33["KITGUN_STRING_PREFIX"]
445 [-]: MOVE      R34 R0       ; R34 := R0
446 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
447 [-]: SETTABLE  R30 K106 R31 ; R30["KitgunPrefixString"] := R31
448 [-]: GETUPVAL  R30 U13      ; R30 := U13
449 [-]: GETUPVAL  R31 U8       ; R31 := U8
450 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
451 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
452 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
453 [-]: GETUPVAL  R34 U13      ; R34 := U13
454 [-]: GETTABLE  R34 R34 K109 ; R34 := R34["KITGUN_STRING_LOC"]
455 [-]: MOVE      R35 R0       ; R35 := R0
456 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
457 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
458 [-]: SETTABLE  R30 K108 R31 ; R30["KitgunString"] := R31
459 [-]: GETUPVAL  R30 U13      ; R30 := U13
460 [-]: GETUPVAL  R31 U8       ; R31 := U8
461 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
462 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
463 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
464 [-]: GETUPVAL  R34 U13      ; R34 := U13
465 [-]: GETTABLE  R34 R34 K111 ; R34 := R34["APPEARANCE_STRING_LOC"]
466 [-]: MOVE      R35 R0       ; R35 := R0
467 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
468 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
469 [-]: SETTABLE  R30 K110 R31 ; R30["AppearanceString"] := R31
470 [-]: GETUPVAL  R30 U13      ; R30 := U13
471 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
472 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
473 [-]: GETUPVAL  R33 U13      ; R33 := U13
474 [-]: GETTABLE  R33 R33 K113 ; R33 := R33["APPEARANCE_STRING_PREFIX"]
475 [-]: MOVE      R34 R0       ; R34 := R0
476 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
477 [-]: SETTABLE  R30 K112 R31 ; R30["AppearancePrefixString"] := R31
478 [-]: GETUPVAL  R30 U13      ; R30 := U13
479 [-]: GETUPVAL  R31 U8       ; R31 := U8
480 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
481 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
482 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
483 [-]: GETUPVAL  R34 U13      ; R34 := U13
484 [-]: GETTABLE  R34 R34 K115 ; R34 := R34["MOD_CONFIG_STRING_LOC"]
485 [-]: MOVE      R35 R0       ; R35 := R0
486 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
487 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
488 [-]: SETTABLE  R30 K114 R31 ; R30["ModConfigString"] := R31
489 [-]: GETUPVAL  R30 U13      ; R30 := U13
490 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
491 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
492 [-]: GETUPVAL  R33 U13      ; R33 := U13
493 [-]: GETTABLE  R33 R33 K117 ; R33 := R33["MOD_CONFIG_STRING_PREFIX"]
494 [-]: MOVE      R34 R0       ; R34 := R0
495 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
496 [-]: SETTABLE  R30 K116 R31 ; R30["ModConfigPrefixString"] := R31
497 [-]: GETUPVAL  R30 U13      ; R30 := U13
498 [-]: GETUPVAL  R31 U8       ; R31 := U8
499 [-]: GETTABLE  R31 R31 K33  ; R31 := R31["0xCECDECDE"]
500 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
501 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x5DB0BD4"]
502 [-]: GETUPVAL  R34 U13      ; R34 := U13
503 [-]: GETTABLE  R34 R34 K119 ; R34 := R34["SHAWZIN_STRING_LOC"]
504 [-]: MOVE      R35 R0       ; R35 := R0
505 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
506 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
507 [-]: SETTABLE  R30 K118 R31 ; R30["ShawzinString"] := R31
508 [-]: GETUPVAL  R30 U13      ; R30 := U13
509 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
510 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x5DB0BD4"]
511 [-]: GETUPVAL  R33 U13      ; R33 := U13
512 [-]: GETTABLE  R33 R33 K121 ; R33 := R33["SHAWZIN_STRING_PREFIX"]
513 [-]: MOVE      R34 R0       ; R34 := R0
514 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
515 [-]: SETTABLE  R30 K120 R31 ; R30["ShawzinPrefixString"] := R31
516 [-]: MOVE      R30 R0       ; R30 := R0
517 [-]: MOVE      R31 R0       ; R31 := R0
518 [-]: MOVE      R32 R0       ; R32 := R0
519 [-]: MOVE      R33 R0       ; R33 := R0
520 [-]: MOVE      R34 R0       ; R34 := R0
521 [-]: MOVE      R35 R0       ; R35 := R0
522 [-]: MOVE      R36 R0       ; R36 := R0
523 [-]: MOVE      R37 R0       ; R37 := R0
524 [-]: MOVE      R38 R0       ; R38 := R0
525 [-]: GETGLOBAL R39 K38      ; R39 := 0x400E7765
526 [-]: GETUPVAL  R40 U10      ; R40 := U10
527 [-]: CALL      R39 2 2      ; R39 := R39(R40)
528 [-]: TEST      R39 1        ; if R39 then PC := 539
529 [-]: JMP       539          ; PC := 539
530 [-]: GETUPVAL  R39 U10      ; R39 := U10
531 [-]: SELF      R39 R39 K122 ; R40 := R39; R39 := R39["0x968DA9B9"]
532 [-]: CALL      R39 2 2      ; R39 := R39(R40)
533 [-]: GETGLOBAL R40 K123     ; R40 := Lotus_Game
534 [-]: GETTABLE  R40 R40 K124 ; R40 := R40["OT_COMBAT"]
535 [-]: LT        1 R39 R40    ; if R39 < R40 then PC := 538
536 [-]: JMP       538          ; PC := 538
537 [-]: MOVE      R32 R0       ; R32 := R0
538 [-]: MOVE      R32 R1       ; R32 := R1
539 [-]: GETUPVAL  R39 U14      ; R39 := U14
540 [-]: NEWTABLE  R40 0 0      ; R40 := {}
541 [-]: SETTABLE  R39 K125 R40 ; R39["Tags"] := R40
542 [-]: GETUPVAL  R39 U14      ; R39 := U14
543 [-]: NEWTABLE  R40 0 0      ; R40 := {}
544 [-]: SETTABLE  R39 K126 R40 ; R39["Indexer"] := R40
545 [-]: NEWTABLE  R39 0 0      ; R39 := {}
546 [-]: MOVE      R39 R15      ; R39 := R15
547 [-]: LOADNIL   R39 R39      ; R39 := nil
548 [-]: CLOSURE   R40 4        ; R40 := closure(Function #153.5)
549 [-]: GETUPVAL  R0 U14       ; R0 := U14
550 [-]: MOVE      R0 R39       ; R0 := R39
551 [-]: LOADK     R41 K75      ; R41 := 1
552 [-]: LEN       R42 R19      ; R42 := # R19
553 [-]: LOADK     R43 K75      ; R43 := 1
554 [-]: FORPREP   R41 673      ; R41 -= R43; PC := 673
555 [-]: GETTABLE  R45 R19 R44  ; R45 := R19[R44]
556 [-]: GETUPVAL  R46 U15      ; R46 := U15
557 [-]: GETTABLE  R47 R45 K127 ; R47 := R45["LowerName"]
558 [-]: GETTABLE  R48 R45 K128 ; R48 := R45["Name"]
559 [-]: SETTABLE  R46 R47 R48  ; R46[R47] := R48
560 [-]: TEST      R30 1        ; if R30 then PC := 572
561 [-]: JMP       572          ; PC := 572
562 [-]: GETUPVAL  R46 U13      ; R46 := U13
563 [-]: GETTABLE  R46 R46 K83  ; R46 := R46["OmegaString"]
564 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
565 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 572
566 [-]: JMP       572          ; PC := 572
567 [-]: MOVE      R30 R1       ; R30 := R1
568 [-]: MOVE      R46 R40      ; R46 := R40
569 [-]: GETUPVAL  R47 U13      ; R47 := U13
570 [-]: GETTABLE  R47 R47 K83  ; R47 := R47["OmegaString"]
571 [-]: CALL      R46 2 1      ; R46(R47)
572 [-]: TEST      R31 1        ; if R31 then PC := 584
573 [-]: JMP       584          ; PC := 584
574 [-]: GETUPVAL  R46 U13      ; R46 := U13
575 [-]: GETTABLE  R46 R46 K86  ; R46 := R46["StepSequencerString"]
576 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
577 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 584
578 [-]: JMP       584          ; PC := 584
579 [-]: MOVE      R31 R1       ; R31 := R1
580 [-]: MOVE      R46 R40      ; R46 := R40
581 [-]: GETUPVAL  R47 U13      ; R47 := U13
582 [-]: GETTABLE  R47 R47 K86  ; R47 := R47["StepSequencerString"]
583 [-]: CALL      R46 2 1      ; R46(R47)
584 [-]: TEST      R32 1        ; if R32 then PC := 596
585 [-]: JMP       596          ; PC := 596
586 [-]: GETUPVAL  R46 U13      ; R46 := U13
587 [-]: GETTABLE  R46 R46 K96  ; R46 := R46["AmpString"]
588 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
589 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 596
590 [-]: JMP       596          ; PC := 596
591 [-]: MOVE      R32 R1       ; R32 := R1
592 [-]: MOVE      R46 R40      ; R46 := R40
593 [-]: GETUPVAL  R47 U13      ; R47 := U13
594 [-]: GETTABLE  R47 R47 K96  ; R47 := R47["AmpString"]
595 [-]: CALL      R46 2 1      ; R46(R47)
596 [-]: TEST      R33 1        ; if R33 then PC := 608
597 [-]: JMP       608          ; PC := 608
598 [-]: GETUPVAL  R46 U13      ; R46 := U13
599 [-]: GETTABLE  R46 R46 K92  ; R46 := R46["ZawString"]
600 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
601 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 608
602 [-]: JMP       608          ; PC := 608
603 [-]: MOVE      R33 R1       ; R33 := R1
604 [-]: MOVE      R46 R40      ; R46 := R40
605 [-]: GETUPVAL  R47 U13      ; R47 := U13
606 [-]: GETTABLE  R47 R47 K92  ; R47 := R47["ZawString"]
607 [-]: CALL      R46 2 1      ; R46(R47)
608 [-]: TEST      R34 1        ; if R34 then PC := 620
609 [-]: JMP       620          ; PC := 620
610 [-]: GETUPVAL  R46 U13      ; R46 := U13
611 [-]: GETTABLE  R46 R46 K100 ; R46 := R46["MoaPetString"]
612 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
613 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 620
614 [-]: JMP       620          ; PC := 620
615 [-]: MOVE      R34 R1       ; R34 := R1
616 [-]: MOVE      R46 R40      ; R46 := R40
617 [-]: GETUPVAL  R47 U13      ; R47 := U13
618 [-]: GETTABLE  R47 R47 K100 ; R47 := R47["MoaPetString"]
619 [-]: CALL      R46 2 1      ; R46(R47)
620 [-]: TEST      R35 1        ; if R35 then PC := 632
621 [-]: JMP       632          ; PC := 632
622 [-]: GETUPVAL  R46 U13      ; R46 := U13
623 [-]: GETTABLE  R46 R46 K104 ; R46 := R46["KDriveString"]
624 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
625 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 632
626 [-]: JMP       632          ; PC := 632
627 [-]: MOVE      R35 R1       ; R35 := R1
628 [-]: MOVE      R46 R40      ; R46 := R40
629 [-]: GETUPVAL  R47 U13      ; R47 := U13
630 [-]: GETTABLE  R47 R47 K104 ; R47 := R47["KDriveString"]
631 [-]: CALL      R46 2 1      ; R46(R47)
632 [-]: TEST      R36 1        ; if R36 then PC := 644
633 [-]: JMP       644          ; PC := 644
634 [-]: GETUPVAL  R46 U13      ; R46 := U13
635 [-]: GETTABLE  R46 R46 K108 ; R46 := R46["KitgunString"]
636 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
637 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 644
638 [-]: JMP       644          ; PC := 644
639 [-]: MOVE      R36 R1       ; R36 := R1
640 [-]: MOVE      R46 R40      ; R46 := R40
641 [-]: GETUPVAL  R47 U13      ; R47 := U13
642 [-]: GETTABLE  R47 R47 K108 ; R47 := R47["KitgunString"]
643 [-]: CALL      R46 2 1      ; R46(R47)
644 [-]: TEST      R37 1        ; if R37 then PC := 656
645 [-]: JMP       656          ; PC := 656
646 [-]: GETUPVAL  R46 U13      ; R46 := U13
647 [-]: GETTABLE  R46 R46 K110 ; R46 := R46["AppearanceString"]
648 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
649 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 656
650 [-]: JMP       656          ; PC := 656
651 [-]: MOVE      R37 R1       ; R37 := R1
652 [-]: MOVE      R46 R40      ; R46 := R40
653 [-]: GETUPVAL  R47 U13      ; R47 := U13
654 [-]: GETTABLE  R47 R47 K110 ; R47 := R47["AppearanceString"]
655 [-]: CALL      R46 2 1      ; R46(R47)
656 [-]: TEST      R38 1        ; if R38 then PC := 668
657 [-]: JMP       668          ; PC := 668
658 [-]: GETUPVAL  R46 U13      ; R46 := U13
659 [-]: GETTABLE  R46 R46 K114 ; R46 := R46["ModConfigString"]
660 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
661 [-]: LT        0 R46 R47    ; if R46 >= R47 then PC := 668
662 [-]: JMP       668          ; PC := 668
663 [-]: MOVE      R38 R1       ; R38 := R1
664 [-]: MOVE      R46 R40      ; R46 := R40
665 [-]: GETUPVAL  R47 U13      ; R47 := U13
666 [-]: GETTABLE  R47 R47 K114 ; R47 := R47["ModConfigString"]
667 [-]: CALL      R46 2 1      ; R46(R47)
668 [-]: MOVE      R46 R40      ; R46 := R40
669 [-]: GETTABLE  R47 R45 K128 ; R47 := R45["Name"]
670 [-]: CALL      R46 2 1      ; R46(R47)
671 [-]: GETGLOBAL R46 K82      ; R46 := 0x1BF588C6
672 [-]: CALL      R46 1 1      ; R46()
673 [-]: FORLOOP   R41 555      ; R41 += R43; if R41 <= R42 then begin PC := 555; R44 := R41 end
674 [-]: NEWTABLE  R46 0 0      ; R46 := {}
675 [-]: MOVE      R46 R16      ; R46 := R16
676 [-]: LOADK     R46 K75      ; R46 := 1
677 [-]: GETUPVAL  R47 U12      ; R47 := U12
678 [-]: LEN       R47 R47      ; R47 := # R47
679 [-]: LOADK     R48 K75      ; R48 := 1
680 [-]: FORPREP   R46 691      ; R46 -= R48; PC := 691
681 [-]: GETUPVAL  R50 U16      ; R50 := U16
682 [-]: GETUPVAL  R51 U12      ; R51 := U12
683 [-]: GETTABLE  R51 R51 R49  ; R51 := R51[R49]
684 [-]: GETTABLE  R51 R51 K127 ; R51 := R51["LowerName"]
685 [-]: GETUPVAL  R52 U12      ; R52 := U12
686 [-]: GETTABLE  R52 R52 R49  ; R52 := R52[R49]
687 [-]: GETTABLE  R52 R52 K129 ; R52 := R52["LocTag"]
688 [-]: SETTABLE  R50 R51 R52  ; R50[R51] := R52
689 [-]: GETGLOBAL R50 K82      ; R50 := 0x1BF588C6
690 [-]: CALL      R50 1 1      ; R50()
691 [-]: FORLOOP   R46 681      ; R46 += R48; if R46 <= R47 then begin PC := 681; R49 := R46 end
692 [-]: GETUPVAL  R50 U17      ; R50 := U17
693 [-]: CALL      R50 1 1      ; R50()
694 [-]: GETUPVAL  R50 U18      ; R50 := U18
695 [-]: GETGLOBAL R51 K123     ; R51 := Lotus_Game
696 [-]: GETTABLE  R51 R51 K130 ; R51 := R51["MWC_MELEE"]
697 [-]: CALL      R50 2 1      ; R50(R51)
698 [-]: GETUPVAL  R50 U18      ; R50 := U18
699 [-]: GETGLOBAL R51 K123     ; R51 := Lotus_Game
700 [-]: GETTABLE  R51 R51 K131 ; R51 := R51["MWC_AMP"]
701 [-]: CALL      R50 2 1      ; R50(R51)
702 [-]: GETUPVAL  R50 U18      ; R50 := U18
703 [-]: GETGLOBAL R51 K123     ; R51 := Lotus_Game
704 [-]: GETTABLE  R51 R51 K132 ; R51 := R51["MWC_MOA_PET"]
705 [-]: CALL      R50 2 1      ; R50(R51)
706 [-]: GETUPVAL  R50 U18      ; R50 := U18
707 [-]: GETGLOBAL R51 K123     ; R51 := Lotus_Game
708 [-]: GETTABLE  R51 R51 K133 ; R51 := R51["MWC_HOVERBOARD"]
709 [-]: CALL      R50 2 1      ; R50(R51)
710 [-]: GETUPVAL  R50 U18      ; R50 := U18
711 [-]: GETGLOBAL R51 K123     ; R51 := Lotus_Game
712 [-]: GETTABLE  R51 R51 K134 ; R51 := R51["MWC_PRIMARY"]
713 [-]: CALL      R50 2 1      ; R50(R51)
714 [-]: GETUPVAL  R50 U19      ; R50 := U19
715 [-]: SETTABLE  R50 K135 K136; R50[":angry:"] := ">:%("
716 [-]: GETUPVAL  R50 U19      ; R50 := U19
717 [-]: SETTABLE  R50 K137 K138; R50[":awe:"] := ":o,:O"
718 [-]: GETUPVAL  R50 U19      ; R50 := U19
719 [-]: SETTABLE  R50 K139 K140; R50[":awkward:"] := ":|"
720 [-]: GETUPVAL  R50 U19      ; R50 := U19
721 [-]: SETTABLE  R50 K141 K142; R50[":cool:"] := "8%)"
722 [-]: GETUPVAL  R50 U19      ; R50 := U19
723 [-]: SETTABLE  R50 K143 K144; R50[":heart:"] := "<3"
724 [-]: GETUPVAL  R50 U19      ; R50 := U19
725 [-]: SETTABLE  R50 K145 K146; R50[":heartbroken:"] := "</3"
726 [-]: GETUPVAL  R50 U19      ; R50 := U19
727 [-]: SETTABLE  R50 K147 K148; R50[":kiss:"] := ":%*"
728 [-]: GETUPVAL  R50 U19      ; R50 := U19
729 [-]: SETTABLE  R50 K149 K150; R50[":laugh:"] := ":D"
730 [-]: GETUPVAL  R50 U19      ; R50 := U19
731 [-]: SETTABLE  R50 K151 K152; R50[":nerd:"] := "8|"
732 [-]: GETUPVAL  R50 U19      ; R50 := U19
733 [-]: SETTABLE  R50 K153 K154; R50[":sad:"] := ":%("
734 [-]: GETUPVAL  R50 U19      ; R50 := U19
735 [-]: SETTABLE  R50 K155 K156; R50[":sadcry:"] := ":'%("
736 [-]: GETUPVAL  R50 U19      ; R50 := U19
737 [-]: SETTABLE  R50 K157 K158; R50[":shock:"] := "o.O,O.o"
738 [-]: GETUPVAL  R50 U19      ; R50 := U19
739 [-]: SETTABLE  R50 K159 K160; R50[":smile:"] := ":%)"
740 [-]: GETUPVAL  R50 U19      ; R50 := U19
741 [-]: SETTABLE  R50 K161 K162; R50[":suspicion:"] := ":\\,:/"
742 [-]: GETUPVAL  R50 U19      ; R50 := U19
743 [-]: SETTABLE  R50 K163 K164; R50[":tongue:"] := ":P"
744 [-]: GETUPVAL  R50 U19      ; R50 := U19
745 [-]: SETTABLE  R50 K165 K166; R50[":wink:"] := ";%)"
746 [-]: GETUPVAL  R50 U20      ; R50 := U20
747 [-]: CALL      R50 1 1      ; R50()
748 [-]: GETGLOBAL R50 K7       ; R50 := Engine
749 [-]: GETTABLE  R50 R50 K167 ; R50 := R50["0x9490FE70"]
750 [-]: CALL      R50 1 2      ; R50 := R50()
751 [-]: TEST      R50 1        ; if R50 then PC := 762
752 [-]: JMP       762          ; PC := 762
753 [-]: GETGLOBAL R50 K38      ; R50 := 0x400E7765
754 [-]: GETUPVAL  R51 U11      ; R51 := U11
755 [-]: CALL      R50 2 2      ; R50 := R50(R51)
756 [-]: TEST      R50 1        ; if R50 then PC := 762
757 [-]: JMP       762          ; PC := 762
758 [-]: GETUPVAL  R50 U11      ; R50 := U11
759 [-]: SELF      R50 R50 K168 ; R51 := R50; R50 := R50["0x6A9D8DDA"]
760 [-]: CALL      R50 2 2      ; R50 := R50(R51)
761 [-]: MOVE      R50 R21      ; R50 := R21
762 [-]: GETUPVAL  R50 U22      ; R50 := U22
763 [-]: GETGLOBAL R51 K0       ; R51 := mMovie
764 [-]: SELF      R51 R51 K169 ; R52 := R51; R51 := R51["0xF595D5E1"]
765 [-]: CALL      R51 2 2      ; R51 := R51(R52)
766 [-]: GETGLOBAL R52 K0       ; R52 := mMovie
767 [-]: SELF      R52 R52 K170 ; R53 := R52; R52 := R52["0xEE069D65"]
768 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
769 [-]: CALL      R50 0 1      ; R50(R51,...)
770 [-]: GETUPVAL  R50 U1       ; R50 := U1
771 [-]: SELF      R50 R50 K171 ; R51 := R50; R50 := R50["0x61494587"]
772 [-]: LOADK     R52 K172     ; R52 := 2
773 [-]: CLOSURE   R53 5        ; R53 := closure(Function #153.6)
774 [-]: GETUPVAL  R0 U23       ; R0 := U23
775 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
776 [-]: LOADK     R50 K173     ; R50 := 10
777 [-]: LOADK     R51 K174     ; R51 := 400
778 [-]: LOADK     R52 K175     ; R52 := 460
779 [-]: LOADK     R53 K176     ; R53 := 240
780 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
781 [-]: SELF      R54 R54 K177 ; R55 := R54; R54 := R54["0xD6A79FE9"]
782 [-]: LOADK     R56 K178     ; R56 := "Window.TabbedChatPanel.ChatEntryLine1.Message1"
783 [-]: LOADK     R57 K179     ; R57 := "text"
784 [-]: LOADK     R58 K81      ; R58 := ""
785 [-]: CALL      R54 5 1      ; R54(R55,R56,R57,R58)
786 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
787 [-]: SELF      R54 R54 K177 ; R55 := R54; R54 := R54["0xD6A79FE9"]
788 [-]: LOADK     R56 K180     ; R56 := "Window.TabbedChatPanel.ChatEntryLine1.Message2"
789 [-]: LOADK     R57 K179     ; R57 := "text"
790 [-]: LOADK     R58 K81      ; R58 := ""
791 [-]: CALL      R54 5 1      ; R54(R55,R56,R57,R58)
792 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
793 [-]: SELF      R54 R54 K13  ; R55 := R54; R54 := R54["0x1C19D966"]
794 [-]: LOADK     R56 K181     ; R56 := "Window.TabbedChatPanel.ChatEntryLine1.Btn"
795 [-]: LOADK     R57 K182     ; R57 := "_visible"
796 [-]: MOVE      R58 R0       ; R58 := R0
797 [-]: CALL      R54 5 1      ; R54(R55,R56,R57,R58)
798 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
799 [-]: SELF      R54 R54 K183 ; R55 := R54; R54 := R54["0x6B4C9862"]
800 [-]: MOVE      R56 R1       ; R56 := R1
801 [-]: CALL      R54 3 1      ; R54(R55,R56)
802 [-]: GETUPVAL  R54 U25      ; R54 := U25
803 [-]: LOADK     R55 K184     ; R55 := "Window"
804 [-]: CALL      R54 2 2      ; R54 := R54(R55)
805 [-]: MOVE      R54 R24      ; R54 := R24
806 [-]: GETUPVAL  R54 U24      ; R54 := U24
807 [-]: GETUPVAL  R55 U6       ; R55 := U6
808 [-]: GETTABLE  R55 R55 K186 ; R55 := R55["0xF81722A2"]
809 [-]: GETGLOBAL R56 K38      ; R56 := 0x400E7765
810 [-]: GETGLOBAL R57 K187     ; R57 := _T
811 [-]: GETTABLE  R57 R57 K188 ; R57 := R57["UIInputEnabled"]
812 [-]: CALL      R56 2 2      ; R56 := R56(R57)
813 [-]: TEST      R56 1        ; if R56 then PC := 818
814 [-]: JMP       818          ; PC := 818
815 [-]: GETGLOBAL R56 K187     ; R56 := _T
816 [-]: GETTABLE  R56 R56 K188 ; R56 := R56["UIInputEnabled"]
817 [-]: JMP       820          ; PC := 820
818 [-]: MOVE      R56 R0       ; R56 := R0
819 [-]: MOVE      R56 R1       ; R56 := R1
820 [-]: GETUPVAL  R57 U24      ; R57 := U24
821 [-]: GETTABLE  R57 R57 K189 ; R57 := R57["VISUAL_MODE_MENU_SIMPLE"]
822 [-]: GETUPVAL  R58 U24      ; R58 := U24
823 [-]: GETTABLE  R58 R58 K190 ; R58 := R58["VISUAL_MODE_GAMEPLAY_SIMPLE"]
824 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
825 [-]: SETTABLE  R54 K185 R55 ; R54["mVisualMode"] := R55
826 [-]: GETGLOBAL R54 K27      ; R54 := gFlashMgr
827 [-]: SELF      R54 R54 K191 ; R55 := R54; R54 := R54["0x1089D053"]
828 [-]: LOADK     R56 K192     ; R56 := "Lotus.EnableTraceLogging"
829 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
830 [-]: TEST      R54 0        ; if not R54 then PC := 838
831 [-]: JMP       838          ; PC := 838
832 [-]: GETGLOBAL R54 K193     ; R54 := 0x93B1256B
833 [-]: LOADK     R55 K194     ; R55 := "InitChatVisualMode: "
834 [-]: GETUPVAL  R56 U24      ; R56 := U24
835 [-]: GETTABLE  R56 R56 K185 ; R56 := R56["mVisualMode"]
836 [-]: CONCAT    R55 R55 R56  ; R55 := R55 .. R56
837 [-]: CALL      R54 2 1      ; R54(R55)
838 [-]: GETUPVAL  R54 U24      ; R54 := U24
839 [-]: SELF      R54 R54 K195 ; R55 := R54; R54 := R54["0x62648036"]
840 [-]: MOVE      R56 R50      ; R56 := R50
841 [-]: MOVE      R57 R51      ; R57 := R51
842 [-]: MOVE      R58 R52      ; R58 := R52
843 [-]: MOVE      R59 R53      ; R59 := R53
844 [-]: CALL      R54 6 1      ; R54(R55,R56,R57,R58,R59)
845 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
846 [-]: SELF      R54 R54 K177 ; R55 := R54; R54 := R54["0xD6A79FE9"]
847 [-]: LOADK     R56 K14      ; R56 := "Window.SendMessageBar.MessageBox"
848 [-]: LOADK     R57 K179     ; R57 := "text"
849 [-]: LOADK     R58 K81      ; R58 := ""
850 [-]: CALL      R54 5 1      ; R54(R55,R56,R57,R58)
851 [-]: GETUPVAL  R54 U26      ; R54 := U26
852 [-]: CALL      R54 1 1      ; R54()
853 [-]: GETUPVAL  R54 U4       ; R54 := U4
854 [-]: GETTABLE  R54 R54 K196 ; R54 := R54["0x41CFD523"]
855 [-]: GETGLOBAL R55 K0       ; R55 := mMovie
856 [-]: CALL      R54 2 1      ; R54(R55)
857 [-]: GETGLOBAL R54 K7       ; R54 := Engine
858 [-]: GETTABLE  R54 R54 K167 ; R54 := R54["0x9490FE70"]
859 [-]: CALL      R54 1 2      ; R54 := R54()
860 [-]: TEST      R54 1        ; if R54 then PC := 866
861 [-]: JMP       866          ; PC := 866
862 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
863 [-]: SELF      R54 R54 K197 ; R55 := R54; R54 := R54["0x71E8736F"]
864 [-]: MOVE      R56 R1       ; R56 := R1
865 [-]: CALL      R54 3 1      ; R54(R55,R56)
866 [-]: MOVE      R54 R1       ; R54 := R1
867 [-]: MOVE      R54 R27      ; R54 := R27
868 [-]: MOVE      R54 R0       ; R54 := R0
869 [-]: MOVE      R54 R28      ; R54 := R28
870 [-]: GETUPVAL  R54 U29      ; R54 := U29
871 [-]: MOVE      R55 R1       ; R55 := R1
872 [-]: CALL      R54 2 1      ; R54(R55)
873 [-]: GETGLOBAL R54 K0       ; R54 := mMovie
874 [-]: SELF      R54 R54 K198 ; R55 := R54; R54 := R54["0x17CDFEEA"]
875 [-]: MOVE      R56 R1       ; R56 := R1
876 [-]: CALL      R54 3 1      ; R54(R55,R56)
877 [-]: GETGLOBAL R54 K40      ; R54 := gPlayerProfileMgr
878 [-]: SELF      R54 R54 K41  ; R55 := R54; R54 := R54["0x21EF7B1A"]
879 [-]: LOADK     R56 K2       ; R56 := 0
880 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
881 [-]: GETGLOBAL R55 K38      ; R55 := 0x400E7765
882 [-]: MOVE      R56 R54      ; R56 := R54
883 [-]: CALL      R55 2 2      ; R55 := R55(R56)
884 [-]: TEST      R55 1        ; if R55 then PC := 891
885 [-]: JMP       891          ; PC := 891
886 [-]: GETGLOBAL R55 K199     ; R55 := 0x94BCBD40
887 [-]: SELF      R56 R54 K42  ; R57 := R54; R56 := R54["0x654F1092"]
888 [-]: CALL      R56 2 2      ; R56 := R56(R57)
889 [-]: LOADK     R57 K200     ; R57 := "OnProfileSaved"
890 [-]: CALL      R55 3 1      ; R55(R56,R57)
891 [-]: GETGLOBAL R55 K38      ; R55 := 0x400E7765
892 [-]: GETUPVAL  R56 U10      ; R56 := U10
893 [-]: CALL      R55 2 2      ; R55 := R55(R56)
894 [-]: TEST      R55 1        ; if R55 then PC := 902
895 [-]: JMP       902          ; PC := 902
896 [-]: GETUPVAL  R55 U10      ; R55 := U10
897 [-]: SELF      R55 R55 K201 ; R56 := R55; R55 := R55["0x34ED3F8F"]
898 [-]: LOADK     R57 K202     ; R57 := "OnSyncWorldState"
899 [-]: GETUPVAL  R58 U30      ; R58 := U30
900 [-]: MOVE      R59 R0       ; R59 := R0
901 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
902 [-]: GETGLOBAL R55 K187     ; R55 := _T
903 [-]: GETUPVAL  R56 U31      ; R56 := U31
904 [-]: SETTABLE  R55 K203 R56 ; R55["ChatOnSubScreenChanged"] := R56
905 [-]: GETGLOBAL R55 K187     ; R55 := _T
906 [-]: SETTABLE  R55 K204 K6  ; R55["ChatReinit"] := "0x0"
907 [-]: RETURN    R0 1         ; return 


; Function #153.1:
;
; Name:            
; Defined at line: 9611
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #153.2:
;
; Name:            
; Defined at line: 9630
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := 1
  2 [-]: LEN       R3 R0        ; R3 := # R0
  3 [-]: LOADK     R4 K0        ; R4 := 1
  4 [-]: FORPREP   R2 20        ; R2 -= R4; PC := 20
  5 [-]: TEST      R1 0         ; if not R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["0xE9518D65"]
  9 [-]: GETTABLE  R7 R0 R5     ; R7 := R0[R5]
 10 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mItemType"]
 11 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 12 [-]: TEST      R6 1         ; if R6 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETUPVAL  R6 U1        ; R6 := U1
 15 [-]: GETTABLE  R7 R0 R5     ; R7 := R0[R5]
 16 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mItemType"]
 17 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0x1B252E3C"]
 18 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 19 [-]: SETTABLE  R6 R7 K4     ; R6[R7] := "0x1"
 20 [-]: FORLOOP   R2 5         ; R2 += R4; if R2 <= R3 then begin PC := 5; R5 := R2 end
 21 [-]: RETURN    R0 1         ; return 


; Function #153.3:
;
; Name:            
; Defined at line: 9681
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0["0xE6DC43B0"]
  2 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xF0BA3C48"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 77
  8 [-]: JMP       77           ; PC := 77
  9 [-]: GETGLOBAL R4 K2        ; R4 := string
 10 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0xDE44F664"]
 11 [-]: GETUPVAL  R5 U0        ; R5 := U0
 12 [-]: LOADK     R6 K4        ; R6 := "[%[%]]"
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: TEST      R4 1         ; if R4 then PC := 77
 15 [-]: JMP       77           ; PC := 77
 16 [-]: GETGLOBAL R4 K2        ; R4 := string
 17 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0x633C4246"]
 18 [-]: GETUPVAL  R5 U0        ; R5 := U0
 19 [-]: LOADK     R6 K6        ; R6 := "<ARCHWING%> "
 20 [-]: LOADK     R7 K7        ; R7 := ""
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: GETGLOBAL R4 K2        ; R4 := string
 24 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0x633C4246"]
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: LOADK     R6 K8        ; R6 := "<NIGHTMARE_RAID%> "
 27 [-]: LOADK     R7 K7        ; R7 := ""
 28 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 29 [-]: MOVE      R4 R0        ; R4 := R0
 30 [-]: GETGLOBAL R4 K2        ; R4 := string
 31 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0x633C4246"]
 32 [-]: GETUPVAL  R5 U0        ; R5 := U0
 33 [-]: LOADK     R6 K9        ; R6 := "<RAID%> "
 34 [-]: LOADK     R7 K7        ; R7 := ""
 35 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: GETGLOBAL R4 K2        ; R4 := string
 38 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0x633C4246"]
 39 [-]: GETUPVAL  R5 U0        ; R5 := U0
 40 [-]: LOADK     R6 K10       ; R6 := "<UGC%> "
 41 [-]: LOADK     R7 K7        ; R7 := ""
 42 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 43 [-]: MOVE      R4 R0        ; R4 := R0
 44 [-]: GETGLOBAL R4 K2        ; R4 := string
 45 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xBDD0D625"]
 46 [-]: GETUPVAL  R5 U0        ; R5 := U0
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: MOVE      R4 R0        ; R4 := R0
 49 [-]: GETUPVAL  R4 U1        ; R4 := U1
 50 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0xCECDECDE"]
 51 [-]: GETUPVAL  R5 U0        ; R5 := U0
 52 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 53 [-]: GETGLOBAL R5 K13       ; R5 := table
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["0xE6450C9D"]
 55 [-]: MOVE      R6 R1        ; R6 := R1
 56 [-]: NEWTABLE  R7 0 4       ; R7 := {}
 57 [-]: GETUPVAL  R8 U0        ; R8 := U0
 58 [-]: SETTABLE  R7 K15 R8    ; R7["Name"] := R8
 59 [-]: SETTABLE  R7 K16 R4    ; R7["LowerName"] := R4
 60 [-]: SETTABLE  R7 K17 R3    ; R7["LocTag"] := R3
 61 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["storeItem"]
 62 [-]: SETTABLE  R7 K18 R8    ; R7["StoreItem"] := R8
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 77
 65 [-]: JMP       77           ; PC := 77
 66 [-]: GETGLOBAL R5 K13       ; R5 := table
 67 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["0xE6450C9D"]
 68 [-]: MOVE      R6 R2        ; R6 := R2
 69 [-]: NEWTABLE  R7 0 4       ; R7 := {}
 70 [-]: GETUPVAL  R8 U0        ; R8 := U0
 71 [-]: SETTABLE  R7 K15 R8    ; R7["Name"] := R8
 72 [-]: SETTABLE  R7 K16 R4    ; R7["LowerName"] := R4
 73 [-]: SETTABLE  R7 K17 R3    ; R7["LocTag"] := R3
 74 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["storeItem"]
 75 [-]: SETTABLE  R7 K18 R8    ; R7["StoreItem"] := R8
 76 [-]: CALL      R5 3 1       ; R5(R6,R7)
 77 [-]: RETURN    R0 1         ; return 


; Function #153.4:
;
; Name:            
; Defined at line: 9707
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["LowerName"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["LowerName"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #153.5:
;
; Name:            
; Defined at line: 9758
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R1 K0        ; R1 := "["
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R3 K1        ; R3 := "]"
  4 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Tags"]
  7 [-]: LEN       R2 R2        ; R2 := # R2
  8 [-]: EQ        1 R2 K3      ; if R2 == 0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Tags"]
 12 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 13 [-]: EQ        1 R3 R1      ; if R3 == R1 then PC := 37
 14 [-]: JMP       37           ; PC := 37
 15 [-]: GETGLOBAL R3 K4        ; R3 := table
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0xE6450C9D"]
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Tags"]
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R3 3 1       ; R3(R4,R5)
 21 [-]: GETGLOBAL R3 K6        ; R3 := string
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x7B782033"]
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: LOADK     R5 K8        ; R5 := 1
 25 [-]: LOADK     R6 K8        ; R6 := 1
 26 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 37
 29 [-]: JMP       37           ; PC := 37
 30 [-]: MOVE      R3 R1        ; R3 := R1
 31 [-]: GETUPVAL  R4 U0        ; R4 := U0
 32 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Indexer"]
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Tags"]
 35 [-]: LEN       R5 R5        ; R5 := # R5
 36 [-]: SETTABLE  R4 R3 R5     ; R4[R3] := R5
 37 [-]: RETURN    R0 1         ; return 


; Function #153.6:
;
; Name:            
; Defined at line: 9885
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 9937
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 9941
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 9944
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "undefined" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R1 K1        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ContextMenu"]
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mListItems"]
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0xF595ADDE
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0x9B34CF36"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0x400E7765
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: TEST      R2 0         ; if not R2 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETGLOBAL R3 K1        ; R3 := _T
 27 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["ContextMenu"]
 28 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x79EA5337"]
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 9964
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB1FCFF49"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["User"]
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 9971
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R1 R2 K1     ; R1 := R2["User"]
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 1         ; if R2 then PC := 39
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETGLOBAL R2 K2        ; R2 := gMatchingService
 20 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xF0C493C"]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: TEST      R3 1         ; if R3 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x535FF489"]
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: LOADK     R6 K5        ; R6 := "PrivateConvoPlayerIDResultOutgoing"
 30 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mVisualMode"]
 33 [-]: GETUPVAL  R4 U1        ; R4 := U1
 34 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
 35 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETUPVAL  R3 U2        ; R3 := U2
 38 [-]: CALL      R3 1 1       ; R3()
 39 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 9988
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADNIL   R3 R3        ; R3 := nil
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 1       ; R2(R3)
 14 [-]: JMP       27           ; PC := 27
 15 [-]: GETUPVAL  R2 U2        ; R2 := U2
 16 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xE2A2E3AC"]
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mVisualMode"]
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["VISUAL_MODE_MENU_SIMPLE"]
 23 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETUPVAL  R2 U3        ; R2 := U3
 26 [-]: CALL      R2 1 1       ; R2()
 27 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 10002
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF4808ADF"]
  3 [-]: LOADNIL   R2 R2        ; R2 := nil
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xAE78D1F"]
 10 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 11 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 12 [-]: MOVE      R6 R1        ; R6 := R1
 13 [-]: MOVE      R7 R0        ; R7 := R0
 14 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 15 [-]: CALL      R2 0 1       ; R2(R3,...)
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K5        ; R3 := gMatchingService
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xD5E03646"]
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 22 [-]: TEST      R2 0         ; if not R2 then PC := 41
 23 [-]: JMP       41           ; PC := 41
 24 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 25 [-]: GETGLOBAL R3 K7        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["SquadOverlay"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETGLOBAL R2 K7        ; R2 := _T
 31 [-]: CLOSURE   R3 0         ; R3 := closure(Function #160.1)
 32 [-]: MOVE      R0 R0        ; R0 := R0
 33 [-]: SETTABLE  R2 K9 R3     ; R2["OnLobbyReady"] := R3
 34 [-]: GETGLOBAL R2 K7        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 36 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x458F27A9"]
 37 [-]: LOADK     R4 K11       ; R4 := "HostLobby"
 38 [-]: LOADK     R5 K9        ; R5 := "OnLobbyReady"
 39 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 40 [-]: RETURN    R0 1         ; return 
 41 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 42 [-]: GETUPVAL  R3 U2        ; R3 := U2
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 1         ; if R2 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETUPVAL  R2 U2        ; R2 := U2
 47 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x60CE2BDB"]
 48 [-]: MOVE      R4 R0        ; R4 := R0
 49 [-]: LOADK     R5 K13       ; R5 := "GameInvitePlayerIDResults"
 50 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 51 [-]: RETURN    R0 1         ; return 


; Function #160.1:
;
; Name:            
; Defined at line: 10013
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["OnLobbyReady"] := nil
  3 [-]: TEST      R0 0         ; if not R0 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x458F27A9"]
  7 [-]: LOADK     R3 K5        ; R3 := "InviteUser"
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 10032
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 10036
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["User"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 10045
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R1 0         ; if not R1 then PC := 24
  2 [-]: JMP       24           ; PC := 24
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mVisualMode"]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["VISUAL_MODE_MENU_SIMPLE"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: JMP       24           ; PC := 24
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mVisualMode"]
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xC4A34CB3"]
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["VISUAL_MODE_GAMEPLAY_FULL"]
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 68
 25 [-]: JMP       68           ; PC := 68
 26 [-]: EQ        1 R0 K6      ; if R0 == "" then PC := 68
 27 [-]: JMP       68           ; PC := 68
 28 [-]: GETGLOBAL R2 K7        ; R2 := 0xD1E7609B
 29 [-]: LOADK     R3 K8        ; R3 := "!"
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 32 [-]: GETGLOBAL R3 K9        ; R3 := 0x400E7765
 33 [-]: GETTABLE  R4 R2 K10    ; R4 := R2[2]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 0         ; if not R3 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETTABLE  R3 R2 K11    ; R3 := R2[1]
 38 [-]: SETTABLE  R2 K10 R3    ; R2[2] := R3
 39 [-]: LEN       R3 R2        ; R3 := # R2
 40 [-]: EQ        0 R3 K10     ; if R3 ~= 2 then PC := 68
 41 [-]: JMP       68           ; PC := 68
 42 [-]: GETGLOBAL R3 K9        ; R3 := 0x400E7765
 43 [-]: GETTABLE  R4 R2 K11    ; R4 := R2[1]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 68
 46 [-]: JMP       68           ; PC := 68
 47 [-]: GETGLOBAL R3 K9        ; R3 := 0x400E7765
 48 [-]: GETTABLE  R4 R2 K10    ; R4 := R2[2]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: TEST      R3 1         ; if R3 then PC := 68
 51 [-]: JMP       68           ; PC := 68
 52 [-]: GETUPVAL  R3 U2        ; R3 := U2
 53 [-]: GETTABLE  R4 R2 K11    ; R4 := R2[1]
 54 [-]: GETTABLE  R5 R2 K10    ; R5 := R2[2]
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: GETGLOBAL R4 K9        ; R4 := 0x400E7765
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: TEST      R4 1         ; if R4 then PC := 68
 60 [-]: JMP       68           ; PC := 68
 61 [-]: GETTABLE  R4 R3 K12    ; R4 := R3["mIsActive"]
 62 [-]: TEST      R4 1         ; if R4 then PC := 68
 63 [-]: JMP       68           ; PC := 68
 64 [-]: GETUPVAL  R4 U0        ; R4 := U0
 65 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0xE2A2E3AC"]
 66 [-]: MOVE      R6 R3        ; R6 := R3
 67 [-]: CALL      R4 3 1       ; R4(R5,R6)
 68 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 10069
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 10073
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 10078
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xC4A34CB3"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 10084
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        0 R0 K0      ; if R0 ~= 1 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC4A34CB3"]
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 10090
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 22
  3 [-]: JMP       22           ; PC := 22
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 22
  9 [-]: JMP       22           ; PC := 22
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xC4A34CB3"]
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 10096
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
 13 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 19 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xC4A34CB3"]
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["VISUAL_MODE_GAMEPLAY_FULL"]
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xC4A34CB3"]
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 32 [-]: MOVE      R4 R0        ; R4 := R0
 33 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 34 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 10109
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 10114
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 1         ; if R3 then PC := 26
  6 [-]: JMP       26           ; PC := 26
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0xDBE013EB"]
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["CHANNEL_EXIT"]
 11 [-]: LOADK     R6 K4        ; R6 := "#"
 12 [-]: MOVE      R7 R0        ; R7 := R0
 13 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 14 [-]: LOADK     R7 K0        ; R7 := ""
 15 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
 16 [-]: MOVE      R10 R1       ; R10 := R1
 17 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 18 [-]: GETGLOBAL R3 K5        ; R3 := string
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0x7B782033"]
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: LOADK     R5 K7        ; R5 := 2
 22 [-]: LOADK     R6 K8        ; R6 := -1
 23 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 24 [-]: MOVE      R2 R3        ; R2 := R3
 25 [-]: JMP       52           ; PC := 52
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x18AAE1E3"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 30 [-]: MOVE      R5 R3        ; R5 := R3
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: TEST      R4 1         ; if R4 then PC := 52
 33 [-]: JMP       52           ; PC := 52
 34 [-]: GETGLOBAL R4 K5        ; R4 := string
 35 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x7B782033"]
 36 [-]: GETTABLE  R5 R3 K10    ; R5 := R3["mChannelName"]
 37 [-]: LOADK     R6 K7        ; R6 := 2
 38 [-]: LOADK     R7 K8        ; R7 := -1
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: MOVE      R2 R4        ; R2 := R4
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0xDBE013EB"]
 43 [-]: GETUPVAL  R6 U0        ; R6 := U0
 44 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["CHANNEL_EXIT"]
 45 [-]: LOADK     R7 K4        ; R7 := "#"
 46 [-]: GETTABLE  R8 R3 K10    ; R8 := R3["mChannelName"]
 47 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 48 [-]: LOADK     R8 K0        ; R8 := ""
 49 [-]: LOADNIL   R9 R10       ; R9 := R10 := nil
 50 [-]: MOVE      R11 R1       ; R11 := R1
 51 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 52 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 53 [-]: GETUPVAL  R5 U1        ; R5 := U1
 54 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 55 [-]: TEST      R4 1         ; if R4 then PC := 61
 56 [-]: JMP       61           ; PC := 61
 57 [-]: GETUPVAL  R4 U1        ; R4 := U1
 58 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x93F34283"]
 59 [-]: MOVE      R6 R2        ; R6 := R2
 60 [-]: CALL      R4 3 1       ; R4(R5,R6)
 61 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 10134
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xECFDD17
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mPanelList"]
  4 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R5 K2        ; R5 := string
  7 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["0x7B782033"]
  8 [-]: GETTABLE  R6 R4 K4     ; R6 := R4["mChannelName"]
  9 [-]: LOADK     R7 K5        ; R7 := 1
 10 [-]: LOADK     R8 K5        ; R8 := 1
 11 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 12 [-]: GETUPVAL  R6 U0        ; R6 := U0
 13 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xDB118937"]
 14 [-]: CALL      R6 1 2       ; R6 := R6()
 15 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETTABLE  R6 R4 K4     ; R6 := R4["mChannelName"]
 19 [-]: MOVE      R7 R1        ; R7 := R1
 20 [-]: CALL      R5 3 1       ; R5(R6,R7)
 21 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 6; R2 := R3 end
 22 [-]: JMP       6            ; PC := 6
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTabMenu"]
 25 [-]: SETTABLE  R5 K8 K9     ; R5["mInitialX"] := 0
 26 [-]: GETUPVAL  R5 U0        ; R5 := U0
 27 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTabMenu"]
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x6470BAF4"]
 29 [-]: LOADNIL   R7 R7        ; R7 := nil
 30 [-]: MOVE      R8 R1        ; R8 := R1
 31 [-]: MOVE      R9 R1        ; R9 := R1
 32 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 33 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 10148
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 10154
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: TEST      R0 1         ; if R0 then PC := 27
  8 [-]: JMP       27           ; PC := 27
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x9A034AB8"]
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K2        ; R3 := 0x93B1256B
 14 [-]: LOADK     R4 K3        ; R4 := "FAILURE: "
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xAE78D1F"]
 20 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 21 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 22 [-]: MOVE      R7 R2        ; R7 := R2
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 25 [-]: CALL      R3 0 1       ; R3(R4,...)
 26 [-]: JMP       41           ; PC := 41
 27 [-]: GETUPVAL  R3 U3        ; R3 := U3
 28 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xAE78D1F"]
 32 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 33 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 34 [-]: LOADK     R7 K8        ; R7 := "/Lotus/Language/Menu/OrderInvite_Success"
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 37 [-]: GETUPVAL  R10 U3       ; R10 := U3
 38 [-]: SETTABLE  R9 K9 R10    ; R9["PLAYER_NAME"] := R10
 39 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 40 [-]: CALL      R3 0 1       ; R3(R4,...)
 41 [-]: LOADNIL   R3 R3        ; R3 := nil
 42 [-]: MOVE      R3 R3        ; R3 := R3
 43 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 10171
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x9648D3A4"]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: LOADK     R4 K2        ; R4 := "OnGuildChanges"
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
 20 [-]: GETUPVAL  R2 U2        ; R2 := U2
 21 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 22 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETUPVAL  R1 U2        ; R1 := U2
 25 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xC4A34CB3"]
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VISUAL_MODE_MENU_FULL"]
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 10184
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["User"]
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 10190
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := gMatchingService
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3E49F77"]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 10198
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["User"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 34
 11 [-]: JMP       34           ; PC := 34
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETGLOBAL R0 K2        ; R0 := Engine
 18 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0x695D4229"]
 19 [-]: CALL      R0 1 2       ; R0 := R0()
 20 [-]: TEST      R0 0         ; if not R0 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xDD467D6D"]
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["User"]
 26 [-]: LOADK     R3 K5        ; R3 := "ViewXBLiveAccountIdResult"
 27 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R0 K6        ; R0 := gMatchingService
 30 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x3E49F77"]
 31 [-]: GETUPVAL  R2 U0        ; R2 := U0
 32 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["User"]
 33 [-]: CALL      R0 3 1       ; R0(R1,R2)
 34 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 10208
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 32
  2 [-]: JMP       32           ; PC := 32
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x18AAE1E3"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 31
 20 [-]: JMP       31           ; PC := 31
 21 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0xAE78D1F"]
 22 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 23 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 24 [-]: GETUPVAL  R7 U1        ; R7 := U1
 25 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0xF2E044CB"]
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 28 [-]: MOVE      R8 R0        ; R8 := R0
 29 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 30 [-]: CALL      R3 0 1       ; R3(R4,...)
 31 [-]: RETURN    R0 1         ; return 
 32 [-]: GETGLOBAL R3 K8        ; R3 := 0xD1E7609B
 33 [-]: LOADK     R4 K9        ; R4 := ","
 34 [-]: MOVE      R5 R1        ; R5 := R1
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: LEN       R4 R3        ; R4 := # R3
 37 [-]: EQ        0 R4 K10     ; if R4 ~= 2 then PC := 63
 38 [-]: JMP       63           ; PC := 63
 39 [-]: GETTABLE  R4 R3 K11    ; R4 := R3[1]
 40 [-]: EQ        1 R4 K12     ; if R4 == "" then PC := 63
 41 [-]: JMP       63           ; PC := 63
 42 [-]: GETTABLE  R4 R3 K10    ; R4 := R3[2]
 43 [-]: EQ        1 R4 K12     ; if R4 == "" then PC := 63
 44 [-]: JMP       63           ; PC := 63
 45 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 46 [-]: GETGLOBAL R5 K13       ; R5 := _T
 47 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["OpenScreen"]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: TEST      R4 1         ; if R4 then PC := 63
 50 [-]: JMP       63           ; PC := 63
 51 [-]: GETGLOBAL R4 K13       ; R4 := _T
 52 [-]: GETTABLE  R5 R3 K11    ; R5 := R3[1]
 53 [-]: SETTABLE  R4 K15 R5    ; R4["SelectedProfileId"] := R5
 54 [-]: GETGLOBAL R4 K13       ; R4 := _T
 55 [-]: GETTABLE  R5 R3 K10    ; R5 := R3[2]
 56 [-]: SETTABLE  R4 K16 R5    ; R4["SelectedProfileName"] := R5
 57 [-]: GETGLOBAL R4 K13       ; R4 := _T
 58 [-]: SETTABLE  R4 K17 K18   ; R4["SelectedProfileImage"] := nil
 59 [-]: GETGLOBAL R4 K13       ; R4 := _T
 60 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["0x10F7E690"]
 61 [-]: LOADK     R5 K20       ; R5 := "Profile"
 62 [-]: CALL      R4 2 1       ; R4(R5)
 63 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 10229
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 29
 11 [-]: JMP       29           ; PC := 29
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["User"]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 1         ; if R0 then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R0 U2        ; R0 := U2
 24 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x60CE2BDB"]
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["User"]
 27 [-]: LOADK     R3 K4        ; R3 := "ViewWarframeProfileAccountIdResult"
 28 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 10239
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 50
 16 [-]: JMP       50           ; PC := 50
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["User"]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 50
 22 [-]: JMP       50           ; PC := 50
 23 [-]: GETUPVAL  R0 U2        ; R0 := U2
 24 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["User"]
 25 [-]: LOADK     R1 K3        ; R1 := ""
 26 [-]: GETUPVAL  R2 U3        ; R2 := U3
 27 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x18AAE1E3"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 30 [-]: MOVE      R4 R2        ; R4 := R2
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: TEST      R3 1         ; if R3 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["mChannelName"]
 35 [-]: CLOSURE   R3 0         ; R3 := closure(Function #181.1)
 36 [-]: GETUPVAL  R0 U4        ; R0 := U4
 37 [-]: GETUPVAL  R0 U5        ; R0 := U5
 38 [-]: MOVE      R0 R1        ; R0 := R1
 39 [-]: MOVE      R0 R0        ; R0 := R0
 40 [-]: GETUPVAL  R4 U6        ; R4 := U6
 41 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x87F83DE1"]
 42 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 43 [-]: MOVE      R6 R0        ; R6 := R0
 44 [-]: MOVE      R7 R3        ; R7 := R3
 45 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 46 [-]: GETUPVAL  R4 U4        ; R4 := U4
 47 [-]: MOVE      R5 R1        ; R5 := R1
 48 [-]: CALL      R4 2 1       ; R4(R5)
 49 [-]: CLOSE     R0           ; SAVE R0,...
 50 [-]: RETURN    R0 1         ; return 


; Function #181.1:
;
; Name:            
; Defined at line: 10254
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K0        ; R1 := gMatchingService
  5 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF0C493C"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 37
  8 [-]: JMP       37           ; PC := 37
  9 [-]: EQ        0 R0 K3      ; if R0 ~= "OffensiveName" then PC := 37
 10 [-]: JMP       37           ; PC := 37
 11 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 37
 15 [-]: JMP       37           ; PC := 37
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETUPVAL  R3 U2        ; R3 := U2
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 0         ; if not R2 then PC := 37
 20 [-]: JMP       37           ; PC := 37
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0xBBE297EA"]
 22 [-]: LOADK     R4 K6        ; R4 := "#"
 23 [-]: GETUPVAL  R5 U2        ; R5 := U2
 24 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: TEST      R2 0         ; if not R2 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x4C72629"]
 29 [-]: GETUPVAL  R4 U3        ; R4 := U3
 30 [-]: LOADK     R5 K8        ; R5 := ""
 31 [-]: LOADK     R6 K9        ; R6 := "1m"
 32 [-]: GETGLOBAL R7 K10       ; R7 := Engine
 33 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["IrcMgr_BM_ID"]
 34 [-]: MOVE      R8 R0        ; R8 := R0
 35 [-]: LOADK     R9 K8        ; R9 := ""
 36 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 37 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 10269
; #Upvalues:       22
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["0xF81722A2"]
  3 [-]: EQ        0 R3 K1      ; if R3 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: MOVE      R6 R3        ; R6 := R3
  8 [-]: GETUPVAL  R7 U1        ; R7 := U1
  9 [-]: SELF      R7 R7 K2     ; R8 := R7; R7 := R7["0x18AAE1E3"]
 10 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 11 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 12 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 31
 13 [-]: JMP       31           ; PC := 31
 14 [-]: GETGLOBAL R5 K3        ; R5 := string
 15 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0x7B782033"]
 16 [-]: GETTABLE  R6 R4 K5     ; R6 := R4["mChannelName"]
 17 [-]: LOADK     R7 K6        ; R7 := 2
 18 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 19 [-]: NEWTABLE  R6 0 4       ; R6 := {}
 20 [-]: SETTABLE  R6 K7 K8     ; R6["Id"] := 1
 21 [-]: SETTABLE  R6 K9 R5     ; R6["User"] := R5
 22 [-]: GETGLOBAL R7 K3        ; R7 := string
 23 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xBDD0D625"]
 24 [-]: MOVE      R8 R5        ; R8 := R5
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: SETTABLE  R6 K10 R7    ; R6["UserLower"] := R7
 27 [-]: GETTABLE  R7 R4 K5     ; R7 := R4["mChannelName"]
 28 [-]: SETTABLE  R6 K12 R7    ; R6["Channel"] := R7
 29 [-]: MOVE      R6 R2        ; R6 := R2
 30 [-]: JMP       80           ; PC := 80
 31 [-]: GETGLOBAL R6 K13       ; R6 := 0x6A235628
 32 [-]: MOVE      R7 R0        ; R7 := R0
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: EQ        0 R6 K3      ; if R6 ~= "string" then PC := 71
 35 [-]: JMP       71           ; PC := 71
 36 [-]: GETGLOBAL R6 K14       ; R6 := 0xD1E7609B
 37 [-]: LOADK     R7 K15       ; R7 := "|"
 38 [-]: MOVE      R8 R0        ; R8 := R0
 39 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 40 [-]: LOADK     R7 K16       ; R7 := ""
 41 [-]: LEN       R8 R6        ; R8 := # R6
 42 [-]: LT        0 K8 R8      ; if 1 >= R8 then PC := 59
 43 [-]: JMP       59           ; PC := 59
 44 [-]: GETGLOBAL R8 K17       ; R8 := 0x400E7765
 45 [-]: MOVE      R9 R4        ; R9 := R4
 46 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 47 [-]: TEST      R8 1         ; if R8 then PC := 59
 48 [-]: JMP       59           ; PC := 59
 49 [-]: GETTABLE  R8 R4 K18    ; R8 := R4["mChatHistory"]
 50 [-]: GETGLOBAL R9 K19       ; R9 := 0xF595ADDE
 51 [-]: GETTABLE  R10 R6 K6    ; R10 := R6[2]
 52 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 53 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 54 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: LOADK     R9 K20       ; R9 := "#"
 57 [-]: GETTABLE  R10 R4 K5    ; R10 := R4["mChannelName"]
 58 [-]: CONCAT    R7 R9 R10    ; R7 := R9 .. R10
 59 [-]: NEWTABLE  R9 0 4       ; R9 := {}
 60 [-]: SETTABLE  R9 K7 K8     ; R9["Id"] := 1
 61 [-]: GETTABLE  R10 R6 K8    ; R10 := R6[1]
 62 [-]: SETTABLE  R9 K9 R10    ; R9["User"] := R10
 63 [-]: GETGLOBAL R10 K3       ; R10 := string
 64 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xBDD0D625"]
 65 [-]: GETTABLE  R11 R6 K8    ; R11 := R6[1]
 66 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 67 [-]: SETTABLE  R9 K10 R10   ; R9["UserLower"] := R10
 68 [-]: SETTABLE  R9 K21 R7    ; R9["Reason"] := R7
 69 [-]: MOVE      R9 R2        ; R9 := R2
 70 [-]: JMP       80           ; PC := 80
 71 [-]: GETUPVAL  R9 U1        ; R9 := U1
 72 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["mUserPanel"]
 73 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["mListControl"]
 74 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9["0xF61F409A"]
 75 [-]: GETGLOBAL R11 K19      ; R11 := 0xF595ADDE
 76 [-]: MOVE      R12 R0       ; R12 := R0
 77 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 78 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 79 [-]: MOVE      R9 R2        ; R9 := R2
 80 [-]: GETGLOBAL R9 K17       ; R9 := 0x400E7765
 81 [-]: MOVE      R10 R4       ; R10 := R4
 82 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 83 [-]: TEST      R9 1         ; if R9 then PC := 88
 84 [-]: JMP       88           ; PC := 88
 85 [-]: GETUPVAL  R9 U2        ; R9 := U2
 86 [-]: EQ        0 R9 K1      ; if R9 ~= nil then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: RETURN    R0 1         ; return 
 89 [-]: GETUPVAL  R9 U2        ; R9 := U2
 90 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["User"]
 91 [-]: GETUPVAL  R10 U1       ; R10 := U1
 92 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mUser"]
 93 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R9 R0        ; R9 := R0
 96 [-]: MOVE      R9 R1        ; R9 := R1
 97 [-]: TEST      R9 0         ; if not R9 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: RETURN    R0 1         ; return 
100 [-]: GETGLOBAL R10 K17      ; R10 := 0x400E7765
101 [-]: GETGLOBAL R11 K26      ; R11 := gGameData
102 [-]: CALL      R10 2 2      ; R10 := R10(R11)
103 [-]: TEST      R10 1        ; if R10 then PC := 111
104 [-]: JMP       111          ; PC := 111
105 [-]: GETGLOBAL R11 K26      ; R11 := gGameData
106 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11["0xF443FDE0"]
107 [-]: GETUPVAL  R13 U2       ; R13 := U2
108 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["User"]
109 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
110 [-]: JMP       113          ; PC := 113
111 [-]: MOVE      R11 R0       ; R11 := R0
112 [-]: MOVE      R11 R1       ; R11 := R1
113 [-]: TEST      R10 1        ; if R10 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: GETGLOBAL R12 K26      ; R12 := gGameData
116 [-]: SELF      R12 R12 K28  ; R13 := R12; R12 := R12["0x15793965"]
117 [-]: CALL      R12 2 2      ; R12 := R12(R13)
118 [-]: EQ        0 R12 K16    ; if R12 ~= "" then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: MOVE      R12 R0       ; R12 := R0
121 [-]: MOVE      R12 R1       ; R12 := R1
122 [-]: TEST      R10 1        ; if R10 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETGLOBAL R13 K26      ; R13 := gGameData
125 [-]: SELF      R13 R13 K29  ; R14 := R13; R13 := R13["0x4B6A2982"]
126 [-]: GETUPVAL  R15 U2       ; R15 := U2
127 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["User"]
128 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
129 [-]: JMP       132          ; PC := 132
130 [-]: MOVE      R13 R0       ; R13 := R0
131 [-]: MOVE      R13 R1       ; R13 := R1
132 [-]: GETUPVAL  R14 U3       ; R14 := U3
133 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14["0x7CF71D03"]
134 [-]: MOVE      R16 R1       ; R16 := R1
135 [-]: MOVE      R17 R1       ; R17 := R1
136 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
137 [-]: TEST      R9 1         ; if R9 then PC := 196
138 [-]: JMP       196          ; PC := 196
139 [-]: GETGLOBAL R14 K31      ; R14 := Engine
140 [-]: GETTABLE  R14 R14 K32  ; R14 := R14["0x1398DAFB"]
141 [-]: CALL      R14 1 2      ; R14 := R14()
142 [-]: TEST      R14 0        ; if not R14 then PC := 148
143 [-]: JMP       148          ; PC := 148
144 [-]: GETUPVAL  R14 U4       ; R14 := U4
145 [-]: CALL      R14 1 2      ; R14 := R14()
146 [-]: TEST      R14 1        ; if R14 then PC := 196
147 [-]: JMP       196          ; PC := 196
148 [-]: GETGLOBAL R14 K3       ; R14 := string
149 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["0x7B782033"]
150 [-]: GETTABLE  R15 R4 K5    ; R15 := R4["mChannelName"]
151 [-]: LOADK     R16 K8       ; R16 := 1
152 [-]: LOADK     R17 K8       ; R17 := 1
153 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
154 [-]: GETUPVAL  R15 U1       ; R15 := U1
155 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["0xDB118937"]
156 [-]: CALL      R15 1 2      ; R15 := R15()
157 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 168
158 [-]: JMP       168          ; PC := 168
159 [-]: GETUPVAL  R14 U3       ; R14 := U3
160 [-]: SELF      R14 R14 K34  ; R15 := R14; R14 := R14["0xA77DA8EE"]
161 [-]: NEWTABLE  R16 0 2      ; R16 := {}
162 [-]: SETTABLE  R16 K35 K36  ; R16["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Talk"
163 [-]: GETUPVAL  R17 U5       ; R17 := U5
164 [-]: SETTABLE  R16 K37 R17  ; R16["PressedCallback"] := R17
165 [-]: MOVE      R17 R1       ; R17 := R1
166 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
167 [-]: JMP       196          ; PC := 196
168 [-]: GETGLOBAL R14 K17      ; R14 := 0x400E7765
169 [-]: MOVE      R15 R3       ; R15 := R3
170 [-]: CALL      R14 2 2      ; R14 := R14(R15)
171 [-]: TEST      R14 0        ; if not R14 then PC := 178
172 [-]: JMP       178          ; PC := 178
173 [-]: GETGLOBAL R14 K31      ; R14 := Engine
174 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["0x9490FE70"]
175 [-]: CALL      R14 1 2      ; R14 := R14()
176 [-]: TEST      R14 0        ; if not R14 then PC := 196
177 [-]: JMP       196          ; PC := 196
178 [-]: GETUPVAL  R14 U3       ; R14 := U3
179 [-]: SELF      R14 R14 K34  ; R15 := R14; R14 := R14["0xA77DA8EE"]
180 [-]: NEWTABLE  R16 0 3      ; R16 := {}
181 [-]: SETTABLE  R16 K35 K39  ; R16["Name"] := "/Lotus/Language/Menu/SocialOverlay_CloseFriendsTabBtn"
182 [-]: GETUPVAL  R17 U6       ; R17 := U6
183 [-]: SETTABLE  R16 K37 R17  ; R16["PressedCallback"] := R17
184 [-]: GETTABLE  R17 R4 K5    ; R17 := R4["mChannelName"]
185 [-]: SETTABLE  R16 K40 R17  ; R16["callbackParam"] := R17
186 [-]: MOVE      R17 R1       ; R17 := R1
187 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
188 [-]: GETUPVAL  R14 U3       ; R14 := U3
189 [-]: SELF      R14 R14 K34  ; R15 := R14; R14 := R14["0xA77DA8EE"]
190 [-]: NEWTABLE  R16 0 2      ; R16 := {}
191 [-]: SETTABLE  R16 K35 K41  ; R16["Name"] := "/Lotus/Language/Menu/SocialOverlay_CloseAllFriendTabsBtn"
192 [-]: GETUPVAL  R17 U7       ; R17 := U7
193 [-]: SETTABLE  R16 K37 R17  ; R16["PressedCallback"] := R17
194 [-]: MOVE      R17 R1       ; R17 := R1
195 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
196 [-]: GETTABLE  R14 R4 K42   ; R14 := R4["mHasAccount"]
197 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 202
198 [-]: JMP       202          ; PC := 202
199 [-]: GETTABLE  R14 R4 K42   ; R14 := R4["mHasAccount"]
200 [-]: TEST      R14 0        ; if not R14 then PC := 409
201 [-]: JMP       409          ; PC := 409
202 [-]: GETGLOBAL R14 K43      ; R14 := gMatchingService
203 [-]: SELF      R14 R14 K44  ; R15 := R14; R14 := R14["0xD5E03646"]
204 [-]: CALL      R14 2 2      ; R14 := R14(R15)
205 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
206 [-]: MOVE      R16 R14      ; R16 := R14
207 [-]: CALL      R15 2 2      ; R15 := R15(R16)
208 [-]: TEST      R15 1        ; if R15 then PC := 215
209 [-]: JMP       215          ; PC := 215
210 [-]: GETUPVAL  R15 U8       ; R15 := U8
211 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["0xF5E26774"]
212 [-]: CALL      R15 1 2      ; R15 := R15()
213 [-]: TEST      R15 0        ; if not R15 then PC := 223
214 [-]: JMP       223          ; PC := 223
215 [-]: GETUPVAL  R15 U3       ; R15 := U3
216 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xA77DA8EE"]
217 [-]: NEWTABLE  R17 0 2      ; R17 := {}
218 [-]: SETTABLE  R17 K35 K46  ; R17["Name"] := "/Lotus/Language/Menu/SocialOverlay_ContextInvite"
219 [-]: GETUPVAL  R18 U9       ; R18 := U9
220 [-]: SETTABLE  R17 K37 R18  ; R17["PressedCallback"] := R18
221 [-]: MOVE      R18 R1       ; R18 := R1
222 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
223 [-]: GETGLOBAL R15 K31      ; R15 := Engine
224 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["0x1398DAFB"]
225 [-]: CALL      R15 1 2      ; R15 := R15()
226 [-]: TEST      R15 0        ; if not R15 then PC := 242
227 [-]: JMP       242          ; PC := 242
228 [-]: GETGLOBAL R15 K31      ; R15 := Engine
229 [-]: GETTABLE  R15 R15 K47  ; R15 := R15["0x47916128"]
230 [-]: CALL      R15 1 2      ; R15 := R15()
231 [-]: TEST      R15 1        ; if R15 then PC := 242
232 [-]: JMP       242          ; PC := 242
233 [-]: GETUPVAL  R15 U3       ; R15 := U3
234 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xA77DA8EE"]
235 [-]: NEWTABLE  R17 0 2      ; R17 := {}
236 [-]: SETTABLE  R17 K35 K48  ; R17["Name"] := "/Lotus/Language/Menu/ShowGamerCard_LowerCase_Windows"
237 [-]: GETUPVAL  R18 U10      ; R18 := U10
238 [-]: SETTABLE  R17 K37 R18  ; R17["PressedCallback"] := R18
239 [-]: MOVE      R18 R1       ; R18 := R1
240 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
241 [-]: JMP       250          ; PC := 250
242 [-]: GETUPVAL  R15 U3       ; R15 := U3
243 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xA77DA8EE"]
244 [-]: NEWTABLE  R17 0 2      ; R17 := {}
245 [-]: SETTABLE  R17 K35 K49  ; R17["Name"] := "/Lotus/Language/Menu/SocialOverlay_ViewProfile"
246 [-]: GETUPVAL  R18 U11      ; R18 := U11
247 [-]: SETTABLE  R17 K37 R18  ; R17["PressedCallback"] := R18
248 [-]: MOVE      R18 R1       ; R18 := R1
249 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
250 [-]: TEST      R11 1        ; if R11 then PC := 262
251 [-]: JMP       262          ; PC := 262
252 [-]: GETUPVAL  R15 U3       ; R15 := U3
253 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xA77DA8EE"]
254 [-]: NEWTABLE  R17 0 2      ; R17 := {}
255 [-]: SETTABLE  R17 K35 K50  ; R17["Name"] := "/Lotus/Language/Menu/SocialOverlay_AddFriend"
256 [-]: CLOSURE   R18 0        ; R18 := closure(Function #182.1)
257 [-]: GETUPVAL  R0 U12       ; R0 := U12
258 [-]: GETUPVAL  R0 U2        ; R0 := U2
259 [-]: SETTABLE  R17 K37 R18  ; R17["PressedCallback"] := R18
260 [-]: MOVE      R18 R1       ; R18 := R1
261 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
262 [-]: TEST      R12 0        ; if not R12 then PC := 283
263 [-]: JMP       283          ; PC := 283
264 [-]: TEST      R13 1        ; if R13 then PC := 283
265 [-]: JMP       283          ; PC := 283
266 [-]: TEST      R10 1        ; if R10 then PC := 283
267 [-]: JMP       283          ; PC := 283
268 [-]: GETGLOBAL R15 K26      ; R15 := gGameData
269 [-]: SELF      R15 R15 K51  ; R16 := R15; R15 := R15["0x8E3B3DA2"]
270 [-]: GETGLOBAL R17 K52      ; R17 := Lotus_Game
271 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["RECRUITER"]
272 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
273 [-]: TEST      R15 0        ; if not R15 then PC := 283
274 [-]: JMP       283          ; PC := 283
275 [-]: GETUPVAL  R15 U3       ; R15 := U3
276 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xA77DA8EE"]
277 [-]: NEWTABLE  R17 0 2      ; R17 := {}
278 [-]: SETTABLE  R17 K35 K54  ; R17["Name"] := "/Lotus/Language/Menu/SocialOverlay_OrderInvite"
279 [-]: GETUPVAL  R18 U13      ; R18 := U13
280 [-]: SETTABLE  R17 K37 R18  ; R17["PressedCallback"] := R18
281 [-]: MOVE      R18 R1       ; R18 := R1
282 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
283 [-]: LOADK     R15 K16      ; R15 := ""
284 [-]: TEST      R10 1        ; if R10 then PC := 295
285 [-]: JMP       295          ; PC := 295
286 [-]: GETGLOBAL R16 K26      ; R16 := gGameData
287 [-]: SELF      R16 R16 K55  ; R17 := R16; R16 := R16["0xF075C8EC"]
288 [-]: GETUPVAL  R18 U2       ; R18 := U2
289 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["User"]
290 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
291 [-]: TEST      R16 0        ; if not R16 then PC := 295
292 [-]: JMP       295          ; PC := 295
293 [-]: LOADK     R15 K56      ; R15 := "/Lotus/Language/Menu/Chat_ContextMenu_Listen"
294 [-]: JMP       296          ; PC := 296
295 [-]: LOADK     R15 K57      ; R15 := "/Lotus/Language/Menu/Chat_ContextMenu_Ignore"
296 [-]: GETUPVAL  R16 U3       ; R16 := U3
297 [-]: SELF      R16 R16 K34  ; R17 := R16; R16 := R16["0xA77DA8EE"]
298 [-]: NEWTABLE  R18 0 2      ; R18 := {}
299 [-]: SETTABLE  R18 K35 R15  ; R18["Name"] := R15
300 [-]: GETUPVAL  R19 U14      ; R19 := U14
301 [-]: SETTABLE  R18 K37 R19  ; R18["PressedCallback"] := R19
302 [-]: MOVE      R19 R1       ; R19 := R1
303 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
304 [-]: GETGLOBAL R16 K43      ; R16 := gMatchingService
305 [-]: SELF      R16 R16 K58  ; R17 := R16; R16 := R16["0xF0C493C"]
306 [-]: CALL      R16 2 2      ; R16 := R16(R17)
307 [-]: LOADK     R17 K20      ; R17 := "#"
308 [-]: GETTABLE  R18 R4 K5    ; R18 := R4["mChannelName"]
309 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
310 [-]: GETTABLE  R18 R4 K59   ; R18 := R4["mUserList"]
311 [-]: GETUPVAL  R19 U2       ; R19 := U2
312 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["User"]
313 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
314 [-]: EQ        0 R18 K1     ; if R18 ~= nil then PC := 317
315 [-]: JMP       317          ; PC := 317
316 [-]: MOVE      R18 R0       ; R18 := R0
317 [-]: MOVE      R18 R1       ; R18 := R1
318 [-]: TEST      R18 0        ; if not R18 then PC := 400
319 [-]: JMP       400          ; PC := 400
320 [-]: GETGLOBAL R19 K17      ; R19 := 0x400E7765
321 [-]: MOVE      R20 R16      ; R20 := R16
322 [-]: CALL      R19 2 2      ; R19 := R19(R20)
323 [-]: TEST      R19 1        ; if R19 then PC := 400
324 [-]: JMP       400          ; PC := 400
325 [-]: SELF      R19 R16 K60  ; R20 := R16; R19 := R16["0xBBE297EA"]
326 [-]: MOVE      R21 R17      ; R21 := R17
327 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
328 [-]: TEST      R19 0        ; if not R19 then PC := 400
329 [-]: JMP       400          ; PC := 400
330 [-]: SELF      R19 R16 K61  ; R20 := R16; R19 := R16["0x3EBB17CE"]
331 [-]: MOVE      R21 R17      ; R21 := R17
332 [-]: GETUPVAL  R22 U2       ; R22 := U2
333 [-]: GETTABLE  R22 R22 K9   ; R22 := R22["User"]
334 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
335 [-]: GETGLOBAL R20 K31      ; R20 := Engine
336 [-]: GETTABLE  R20 R20 K62  ; R20 := R20["UT_NORMAL"]
337 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 400
338 [-]: JMP       400          ; PC := 400
339 [-]: GETUPVAL  R19 U15      ; R19 := U15
340 [-]: GETTABLE  R20 R4 K5    ; R20 := R4["mChannelName"]
341 [-]: CALL      R19 2 2      ; R19 := R19(R20)
342 [-]: TEST      R19 0        ; if not R19 then PC := 373
343 [-]: JMP       373          ; PC := 373
344 [-]: GETUPVAL  R19 U3       ; R19 := U3
345 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
346 [-]: NEWTABLE  R21 0 2      ; R21 := {}
347 [-]: SETTABLE  R21 K35 K63  ; R21["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Flush"
348 [-]: CLOSURE   R22 1        ; R22 := closure(Function #182.2)
349 [-]: GETUPVAL  R0 U16       ; R0 := U16
350 [-]: MOVE      R0 R4        ; R0 := R4
351 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
352 [-]: MOVE      R22 R1       ; R22 := R1
353 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
354 [-]: GETUPVAL  R19 U3       ; R19 := U3
355 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
356 [-]: NEWTABLE  R21 0 2      ; R21 := {}
357 [-]: SETTABLE  R21 K35 K64  ; R21["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Kick"
358 [-]: CLOSURE   R22 2        ; R22 := closure(Function #182.3)
359 [-]: GETUPVAL  R0 U17       ; R0 := U17
360 [-]: MOVE      R0 R4        ; R0 := R4
361 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
362 [-]: MOVE      R22 R1       ; R22 := R1
363 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
364 [-]: GETUPVAL  R19 U3       ; R19 := U3
365 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
366 [-]: NEWTABLE  R21 0 2      ; R21 := {}
367 [-]: SETTABLE  R21 K35 K65  ; R21["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Ban"
368 [-]: GETUPVAL  R22 U18      ; R22 := U18
369 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
370 [-]: MOVE      R22 R1       ; R22 := R1
371 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
372 [-]: JMP       400          ; PC := 400
373 [-]: GETUPVAL  R19 U3       ; R19 := U3
374 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
375 [-]: NEWTABLE  R21 0 2      ; R21 := {}
376 [-]: SETTABLE  R21 K35 K66  ; R21["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_SimpleKick"
377 [-]: CLOSURE   R22 3        ; R22 := closure(Function #182.4)
378 [-]: GETUPVAL  R0 U19       ; R0 := U19
379 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
380 [-]: MOVE      R22 R1       ; R22 := R1
381 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
382 [-]: GETUPVAL  R19 U3       ; R19 := U3
383 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
384 [-]: NEWTABLE  R21 0 2      ; R21 := {}
385 [-]: SETTABLE  R21 K35 K67  ; R21["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Ban1H"
386 [-]: CLOSURE   R22 4        ; R22 := closure(Function #182.5)
387 [-]: GETUPVAL  R0 U19       ; R0 := U19
388 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
389 [-]: MOVE      R22 R1       ; R22 := R1
390 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
391 [-]: GETUPVAL  R19 U3       ; R19 := U3
392 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
393 [-]: NEWTABLE  R21 0 2      ; R21 := {}
394 [-]: SETTABLE  R21 K35 K68  ; R21["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Ban1D"
395 [-]: CLOSURE   R22 5        ; R22 := closure(Function #182.6)
396 [-]: GETUPVAL  R0 U19       ; R0 := U19
397 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
398 [-]: MOVE      R22 R1       ; R22 := R1
399 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
400 [-]: GETUPVAL  R19 U3       ; R19 := U3
401 [-]: SELF      R19 R19 K34  ; R20 := R19; R19 := R19["0xA77DA8EE"]
402 [-]: NEWTABLE  R21 0 2      ; R21 := {}
403 [-]: SETTABLE  R21 K35 K69  ; R21["Name"] := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
404 [-]: CLOSURE   R22 6        ; R22 := closure(Function #182.7)
405 [-]: GETUPVAL  R0 U20       ; R0 := U20
406 [-]: SETTABLE  R21 K37 R22  ; R21["PressedCallback"] := R22
407 [-]: MOVE      R22 R1       ; R22 := R1
408 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
409 [-]: GETUPVAL  R19 U21      ; R19 := U21
410 [-]: MOVE      R20 R1       ; R20 := R1
411 [-]: MOVE      R21 R2       ; R21 := R2
412 [-]: CALL      R19 3 1      ; R19(R20,R21)
413 [-]: RETURN    R0 1         ; return 


; Function #182.1:
;
; Name:            
; Defined at line: 10335
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x5FBAC3D"]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["User"]
  5 [-]: LOADK     R2 K2        ; R2 := "OnAddFriendResultToDialog"
  6 [-]: CALL      R0 3 1       ; R0(R1,R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #182.2:
;
; Name:            
; Defined at line: 10362
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mChannelName"]
  5 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
  6 [-]: RETURN    R1 0         ; return R1,...
  7 [-]: RETURN    R0 1         ; return 


; Function #182.3:
;
; Name:            
; Defined at line: 10363
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mChannelName"]
  5 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
  6 [-]: RETURN    R1 0         ; return R1,...
  7 [-]: RETURN    R0 1         ; return 


; Function #182.4:
;
; Name:            
; Defined at line: 10366
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K0        ; R4 := "5m"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #182.5:
;
; Name:            
; Defined at line: 10367
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K0        ; R4 := "1h"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #182.6:
;
; Name:            
; Defined at line: 10368
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K0        ; R4 := "1d"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #182.7:
;
; Name:            
; Defined at line: 10372
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 10379
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 10383
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 10389
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K2        ; R0 := 0x6306558E
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0xD51B2786
 13 [-]: CALL      R1 1 2       ; R1 := R1()
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: CALL      R2 1 1       ; R2()
 25 [-]: GETUPVAL  R2 U3        ; R2 := U3
 26 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8C7099E9"]
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: CALL      R2 3 1       ; R2(R3,R4)
 29 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 30 [-]: GETGLOBAL R3 K6        ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["ChatReinit"]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 0         ; if not R2 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0x566C891E
 36 [-]: CALL      R2 1 1       ; R2()
 37 [-]: GETUPVAL  R2 U4        ; R2 := U4
 38 [-]: CALL      R2 1 1       ; R2()
 39 [-]: GETGLOBAL R2 K6        ; R2 := _T
 40 [-]: SETTABLE  R2 K7 K9     ; R2["ChatReinit"] := "0x0"
 41 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 42 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x80D6B1A"]
 43 [-]: MOVE      R4 R0        ; R4 := R0
 44 [-]: CALL      R2 3 1       ; R2(R3,R4)
 45 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 46 [-]: GETUPVAL  R3 U5        ; R3 := U5
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETUPVAL  R2 U5        ; R2 := U5
 51 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8C7099E9"]
 52 [-]: MOVE      R4 R0        ; R4 := R0
 53 [-]: CALL      R2 3 1       ; R2(R3,R4)
 54 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 55 [-]: GETUPVAL  R3 U6        ; R3 := U6
 56 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 57 [-]: TEST      R2 1         ; if R2 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETUPVAL  R2 U6        ; R2 := U6
 60 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8C7099E9"]
 61 [-]: MOVE      R4 R1        ; R4 := R1
 62 [-]: CALL      R2 3 1       ; R2(R3,R4)
 63 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 64 [-]: GETUPVAL  R3 U7        ; R3 := U7
 65 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 66 [-]: TEST      R2 1         ; if R2 then PC := 78
 67 [-]: JMP       78           ; PC := 78
 68 [-]: GETUPVAL  R2 U8        ; R2 := U8
 69 [-]: TEST      R2 0         ; if not R2 then PC := 78
 70 [-]: JMP       78           ; PC := 78
 71 [-]: MOVE      R2 R0        ; R2 := R0
 72 [-]: MOVE      R2 R8        ; R2 := R8
 73 [-]: GETUPVAL  R2 U7        ; R2 := U7
 74 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x3BF37BF6"]
 75 [-]: LOADK     R4 K12       ; R4 := "OnLitePresenceUpdated"
 76 [-]: MOVE      R5 R0        ; R5 := R0
 77 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 78 [-]: GETUPVAL  R2 U9        ; R2 := U9
 79 [-]: EQ        1 R2 K13     ; if R2 == nil then PC := 97
 80 [-]: JMP       97           ; PC := 97
 81 [-]: GETGLOBAL R2 K14       ; R2 := _G
 82 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["LAST_BREAK_MSG"]
 83 [-]: SUB       R2 R1 R2     ; R2 := R1 - R2
 84 [-]: GETUPVAL  R3 U9        ; R3 := U9
 85 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 97
 86 [-]: JMP       97           ; PC := 97
 87 [-]: GETUPVAL  R2 U3        ; R2 := U3
 88 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0xAE78D1F"]
 89 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 90 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 91 [-]: LOADK     R6 K18       ; R6 := "/Lotus/Language/Menu/BreakAdvice"
 92 [-]: MOVE      R7 R0        ; R7 := R0
 93 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 94 [-]: CALL      R2 3 1       ; R2(R3,R4)
 95 [-]: GETGLOBAL R2 K14       ; R2 := _G
 96 [-]: SETTABLE  R2 K15 R1    ; R2["LAST_BREAK_MSG"] := R1
 97 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 98 [-]: GETGLOBAL R3 K6        ; R3 := _T
 99 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["ContextMenu"]
100 [-]: CALL      R2 2 2       ; R2 := R2(R3)
101 [-]: TEST      R2 0         ; if not R2 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: GETUPVAL  R2 U10       ; R2 := U10
104 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["0x41CFD523"]
105 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
106 [-]: CALL      R2 2 1       ; R2(R3)
107 [-]: GETUPVAL  R2 U11       ; R2 := U11
108 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["0x59CDC52E"]
109 [-]: GETUPVAL  R3 U12       ; R3 := U12
110 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["StepSequencerLoader"]
111 [-]: CALL      R2 2 1       ; R2(R3)
112 [-]: GETUPVAL  R2 U13       ; R2 := U13
113 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8C7099E9"]
114 [-]: GETUPVAL  R3 U14       ; R3 := U14
115 [-]: CALL      R2 2 1       ; R2(R3)
116 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 10445
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 10451
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x1398DAFB"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["IsButtonBarInputBlocked"]
  8 [-]: TEST      R0 0         ; if not R0 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R0 K2        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0x38FB41C7"]
 12 [-]: CALL      R0 1 2       ; R0 := R0()
 13 [-]: TEST      R0 0         ; if not R0 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R0 K2        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["SpectatorHudOpen"]
 17 [-]: TEST      R0 1         ; if R0 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R0 K2        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["TRADING_POST_OPEN"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: MOVE      R0 R1        ; R0 := R1
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 32 [-]: GETUPVAL  R1 U2        ; R1 := U2
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 84
 35 [-]: JMP       84           ; PC := 84
 36 [-]: GETUPVAL  R0 U2        ; R0 := U2
 37 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["mVisualMode"]
 38 [-]: GETUPVAL  R1 U2        ; R1 := U2
 39 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 40 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 48
 41 [-]: JMP       48           ; PC := 48
 42 [-]: GETUPVAL  R0 U2        ; R0 := U2
 43 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xC4A34CB3"]
 44 [-]: GETUPVAL  R2 U2        ; R2 := U2
 45 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 46 [-]: CALL      R0 3 1       ; R0(R1,R2)
 47 [-]: JMP       84           ; PC := 84
 48 [-]: GETUPVAL  R0 U2        ; R0 := U2
 49 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["mVisualMode"]
 50 [-]: GETUPVAL  R1 U2        ; R1 := U2
 51 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["VISUAL_MODE_MENU_SIMPLE"]
 52 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETUPVAL  R0 U3        ; R0 := U3
 55 [-]: CALL      R0 1 1       ; R0()
 56 [-]: JMP       84           ; PC := 84
 57 [-]: GETGLOBAL R0 K0        ; R0 := Engine
 58 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["0x9490FE70"]
 59 [-]: CALL      R0 1 2       ; R0 := R0()
 60 [-]: TEST      R0 0         ; if not R0 then PC := 84
 61 [-]: JMP       84           ; PC := 84
 62 [-]: GETUPVAL  R0 U2        ; R0 := U2
 63 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["mVisualMode"]
 64 [-]: GETUPVAL  R1 U2        ; R1 := U2
 65 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 66 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 76
 67 [-]: JMP       76           ; PC := 76
 68 [-]: GETUPVAL  R0 U4        ; R0 := U4
 69 [-]: CALL      R0 1 1       ; R0()
 70 [-]: GETUPVAL  R0 U2        ; R0 := U2
 71 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xC4A34CB3"]
 72 [-]: GETUPVAL  R2 U2        ; R2 := U2
 73 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 74 [-]: CALL      R0 3 1       ; R0(R1,R2)
 75 [-]: JMP       84           ; PC := 84
 76 [-]: GETUPVAL  R0 U2        ; R0 := U2
 77 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["mVisualMode"]
 78 [-]: GETUPVAL  R1 U2        ; R1 := U2
 79 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 80 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: GETUPVAL  R0 U5        ; R0 := U5
 83 [-]: CALL      R0 1 1       ; R0()
 84 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 10479
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTabMenu"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mElements"]
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: LE        0 R1 K3      ; if R1 > 1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xFAFBBCBD"]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: LOADK     R1 K5        ; R1 := "Window.TabMenu.LeftBumper"
 21 [-]: LOADK     R2 K6        ; R2 := "Window.TabMenu.RightBumper"
 22 [-]: GETGLOBAL R3 K7        ; R3 := Engine
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x9490FE70"]
 24 [-]: CALL      R3 1 2       ; R3 := R3()
 25 [-]: TEST      R3 1         ; if R3 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: LOADK     R1 K9        ; R1 := "Window.TabMenu.LeftArrow"
 28 [-]: LOADK     R2 K10       ; R2 := "Window.TabMenu.RightArrow"
 29 [-]: GETUPVAL  R3 U2        ; R3 := U2
 30 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["DECREMENT"]
 31 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 43
 32 [-]: JMP       43           ; PC := 43
 33 [-]: GETUPVAL  R3 U2        ; R3 := U2
 34 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xD1BD9D6"]
 35 [-]: GETGLOBAL R4 K13       ; R4 := mMovie
 36 [-]: MOVE      R5 R1        ; R5 := R1
 37 [-]: GETGLOBAL R6 K14       ; R6 := _G
 38 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["UIFx_LeftBumperPress"]
 39 [-]: LOADK     R7 K16       ; R7 := 0
 40 [-]: LOADK     R8 K16       ; R8 := 0
 41 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 42 [-]: JMP       52           ; PC := 52
 43 [-]: GETUPVAL  R3 U2        ; R3 := U2
 44 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xD1BD9D6"]
 45 [-]: GETGLOBAL R4 K13       ; R4 := mMovie
 46 [-]: MOVE      R5 R2        ; R5 := R2
 47 [-]: GETGLOBAL R6 K14       ; R6 := _G
 48 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["UIFx_RightBumperPress"]
 49 [-]: LOADK     R7 K16       ; R7 := 0
 50 [-]: LOADK     R8 K16       ; R8 := 0
 51 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 52 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 10502
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mLeftArrowFocused"] := "0x1"
  3 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
  4 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x1C19D966"]
  5 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.LeftArrow"
  6 [-]: LOADK     R3 K5        ; R3 := "_alpha"
  7 [-]: LOADK     R4 K6        ; R4 := 100
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 10507
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mLeftArrowFocused"] := "0x0"
  3 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
  4 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x1C19D966"]
  5 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.LeftArrow"
  6 [-]: LOADK     R3 K5        ; R3 := "_alpha"
  7 [-]: LOADK     R4 K6        ; R4 := 50
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 10512
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["DECREMENT"]
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 10516
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mRightArrowFocused"] := "0x1"
  3 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
  4 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x1C19D966"]
  5 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.RightArrow"
  6 [-]: LOADK     R3 K5        ; R3 := "_alpha"
  7 [-]: LOADK     R4 K6        ; R4 := 100
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 10521
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mRightArrowFocused"] := "0x0"
  3 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
  4 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x1C19D966"]
  5 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.RightArrow"
  6 [-]: LOADK     R3 K5        ; R3 := "_alpha"
  7 [-]: LOADK     R4 K6        ; R4 := 50
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 10526
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["INCREMENT"]
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 10530
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabMenu.MinMaxBtn.Icon"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 100
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0x25992394"]
  9 [-]: GETGLOBAL R1 K6        ; R1 := _G
 10 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UISound_Focus"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 10535
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabMenu.MinMaxBtn.Icon"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 50
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 10539
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: TEST      R0 0         ; if not R0 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 1       ; R0()
 14 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 10549
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R0 R1        ; R0 := R1
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 10555
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R0 R1        ; R0 := R1
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 10561
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1AA40FBC"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: EQ        0 R0 K3      ; if R0 ~= "MessageBox" then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R1 R1        ; R1 := R1
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 10570
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 2       ; R0 := R0()
  8 [-]: TEST      R0 1         ; if R0 then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETGLOBAL R0 K0        ; R0 := Engine
 11 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
 12 [-]: CALL      R0 1 2       ; R0 := R0()
 13 [-]: TEST      R0 0         ; if not R0 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 19 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 25 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 10577
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 33
 11 [-]: JMP       33           ; PC := 33
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 33
 17 [-]: JMP       33           ; PC := 33
 18 [-]: GETGLOBAL R0 K0        ; R0 := Engine
 19 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
 20 [-]: CALL      R0 1 2       ; R0 := R0()
 21 [-]: TEST      R0 1         ; if R0 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 27 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETUPVAL  R0 U1        ; R0 := U1
 30 [-]: CALL      R0 1 2       ; R0 := R0()
 31 [-]: TEST      R0 0         ; if not R0 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: RETURN    R0 2         ; return R0
 35 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 10584
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: GETGLOBAL R1 K2        ; R1 := gFlashMgr
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x35FF770F"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 51
 17 [-]: JMP       51           ; PC := 51
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 51
 22 [-]: JMP       51           ; PC := 51
 23 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 24 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 51
 25 [-]: JMP       51           ; PC := 51
 26 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x75ED572E"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 29 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x75ED572E"]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETUPVAL  R2 U1        ; R2 := U1
 34 [-]: CALL      R2 1 2       ; R2 := R2()
 35 [-]: TEST      R2 1         ; if R2 then PC := 51
 36 [-]: JMP       51           ; PC := 51
 37 [-]: GETUPVAL  R2 U2        ; R2 := U2
 38 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mVisualMode"]
 39 [-]: GETUPVAL  R3 U2        ; R3 := U2
 40 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["VISUAL_MODE_GAMEPLAY_FULL"]
 41 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: GETUPVAL  R2 U2        ; R2 := U2
 44 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mVisualMode"]
 45 [-]: GETUPVAL  R3 U2        ; R3 := U2
 46 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 47 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 51
 48 [-]: JMP       51           ; PC := 51
 49 [-]: GETUPVAL  R2 U3        ; R2 := U3
 50 [-]: CALL      R2 1 1       ; R2()
 51 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 10597
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6B7B470B"]
  3 [-]: LOADK     R2 K2        ; R2 := "ContextMenu"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: EQ        0 R0 K4      ; if R0 ~= "true" then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: CALL      R0 1 1       ; R0()
 10 [-]: JMP       30           ; PC := 30
 11 [-]: GETUPVAL  R0 U1        ; R0 := U1
 12 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mVisualMode"]
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 15 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 28
 16 [-]: JMP       28           ; PC := 28
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xC4A34CB3"]
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 21 [-]: CALL      R0 3 1       ; R0(R1,R2)
 22 [-]: GETUPVAL  R0 U2        ; R0 := U2
 23 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["0x25992394"]
 24 [-]: GETGLOBAL R1 K10       ; R1 := _G
 25 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["UISound_WindowClose"]
 26 [-]: CALL      R0 2 1       ; R0(R1)
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETUPVAL  R0 U3        ; R0 := U3
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 10609
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 10615
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mVisualMode"]
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: TEST      R0 1         ; if R0 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: GETUPVAL  R0 U2        ; R0 := U2
 17 [-]: CALL      R0 1 1       ; R0()
 18 [-]: MOVE      R0 R1        ; R0 := R1
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 10624
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xE1889BF6"]
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 10630
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K2        ; R4 := Engine
 10 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["CI_SELECT"]
 11 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xE1889BF6"]
 15 [-]: MOVE      R5 R0        ; R5 := R0
 16 [-]: CALL      R3 3 1       ; R3(R4,R5)
 17 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 10636
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x3F74D42B"]
  8 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  9 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Language/Menu/SocialOverlay_Btn"
 10 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x6B7B470B"]
 12 [-]: LOADK     R5 K6        ; R5 := "Window.SendMessageBar.MessageBox.text"
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: LOADK     R4 K7        ; R4 := 0
 15 [-]: LOADK     R5 K8        ; R5 := "SendMessageCallback"
 16 [-]: LOADK     R6 K9        ; R6 := "OSKSendMessageCallback"
 17 [-]: MOVE      R7 R0        ; R7 := R0
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: MOVE      R9 R1        ; R9 := R1
 20 [-]: CALL      R0 10 1      ; R0(R1,R2,R3,R4,R5,R6,R7,R8,R9)
 21 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 10642
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 43
  5 [-]: JMP       43           ; PC := 43
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 43
 17 [-]: JMP       43           ; PC := 43
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: TEST      R0 1         ; if R0 then PC := 41
 20 [-]: JMP       41           ; PC := 41
 21 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mInputPanel"]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: TEST      R0 1         ; if R0 then PC := 41
 26 [-]: JMP       41           ; PC := 41
 27 [-]: GETGLOBAL R0 K7        ; R0 := mMovie
 28 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x6B7B470B"]
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mInputPanel"]
 31 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mClipPath"]
 32 [-]: LOADK     R3 K10       ; R3 := "_visible"
 33 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 34 [-]: EQ        0 R0 K11     ; if R0 ~= "true" then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R0 K7        ; R0 := mMovie
 37 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x458F27A9"]
 38 [-]: LOADK     R2 K13       ; R2 := "SendMessageWithOSK"
 39 [-]: LOADK     R3 K14       ; R3 := ""
 40 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 41 [-]: MOVE      R0 R1        ; R0 := R1
 42 [-]: RETURN    R0 2         ; return R0
 43 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 10652
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 10660
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: TEST      R0 1         ; if R0 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R0 K5        ; R0 := mMovie
 22 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x458F27A9"]
 23 [-]: LOADK     R2 K7        ; R2 := "FilterBtnPressed"
 24 [-]: LOADK     R3 K8        ; R3 := ""
 25 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 26 [-]: MOVE      R0 R1        ; R0 := R1
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 10667
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 10676
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 10684
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 101
  5 [-]: JMP       101          ; PC := 101
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
  7 [-]: GETGLOBAL R1 K3        ; R1 := hyperlinkSelectionMovie
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 101
 10 [-]: JMP       101          ; PC := 101
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mVisualMode"]
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mVisualMode"]
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 21 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 101
 22 [-]: JMP       101          ; PC := 101
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: TEST      R0 1         ; if R0 then PC := 101
 25 [-]: JMP       101          ; PC := 101
 26 [-]: GETUPVAL  R0 U2        ; R0 := U2
 27 [-]: LOADK     R1 K7        ; R1 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: RETURN    R0 1         ; return 
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x18AAE1E3"]
 34 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 35 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 1         ; if R1 then PC := 101
 39 [-]: JMP       101          ; PC := 101
 40 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 41 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["mLineLog"]
 42 [-]: LEN       R2 R2        ; R2 := # R2
 43 [-]: LOADK     R3 K10       ; R3 := 1
 44 [-]: LOADK     R4 K11       ; R4 := -1
 45 [-]: FORPREP   R2 69        ; R2 -= R4; PC := 69
 46 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mLineLog"]
 47 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 48 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["hyperLinks"]
 49 [-]: LEN       R6 R6        ; R6 := # R6
 50 [-]: LT        0 K13 R6     ; if 0 >= R6 then PC := 69
 51 [-]: JMP       69           ; PC := 69
 52 [-]: GETGLOBAL R6 K14       ; R6 := table
 53 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xE6450C9D"]
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 56 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mLineLog"]
 57 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 58 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["text"]
 59 [-]: SETTABLE  R8 K16 R9    ; R8["Text"] := R9
 60 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mLineLog"]
 61 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 62 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["hyperLinks"]
 63 [-]: SETTABLE  R8 K18 R9    ; R8["Hyperlinks"] := R9
 64 [-]: CALL      R6 3 1       ; R6(R7,R8)
 65 [-]: LEN       R6 R1        ; R6 := # R1
 66 [-]: EQ        0 R6 K19     ; if R6 ~= 10 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: JMP       70           ; PC := 70
 69 [-]: FORLOOP   R2 46        ; R2 += R4; if R2 <= R3 then begin PC := 46; R5 := R2 end
 70 [-]: LEN       R6 R1        ; R6 := # R1
 71 [-]: LT        0 K13 R6     ; if 0 >= R6 then PC := 100
 72 [-]: JMP       100          ; PC := 100
 73 [-]: GETGLOBAL R6 K20       ; R6 := mMovie
 74 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6["0x5FF274BB"]
 75 [-]: GETGLOBAL R8 K3        ; R8 := hyperlinkSelectionMovie
 76 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 77 [-]: MOVE      R6 R3        ; R6 := R3
 78 [-]: GETGLOBAL R6 K22       ; R6 := _T
 79 [-]: CLOSURE   R7 0         ; R7 := closure(Function #215.1)
 80 [-]: MOVE      R0 R1        ; R0 := R1
 81 [-]: SETTABLE  R6 K23 R7    ; R6["GetMessagesWithHyperlinks"] := R7
 82 [-]: GETUPVAL  R6 U3        ; R6 := U3
 83 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0x458F27A9"]
 84 [-]: LOADK     R8 K25       ; R8 := "SetElementsFunction"
 85 [-]: LOADK     R9 K23       ; R9 := "GetMessagesWithHyperlinks"
 86 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 87 [-]: GETGLOBAL R6 K22       ; R6 := _T
 88 [-]: CLOSURE   R7 1         ; R7 := closure(Function #215.2)
 89 [-]: GETUPVAL  R0 U4        ; R0 := U4
 90 [-]: GETUPVAL  R0 U5        ; R0 := U5
 91 [-]: SETTABLE  R6 K26 R7    ; R6["OnHyperlinkSelectionClosed"] := R7
 92 [-]: GETUPVAL  R6 U3        ; R6 := U3
 93 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0x458F27A9"]
 94 [-]: LOADK     R8 K27       ; R8 := "SetOnCloseFunction"
 95 [-]: LOADK     R9 K26       ; R9 := "OnHyperlinkSelectionClosed"
 96 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 97 [-]: GETUPVAL  R6 U5        ; R6 := U5
 98 [-]: MOVE      R7 R1        ; R7 := R1
 99 [-]: CALL      R6 2 1       ; R6(R7)
100 [-]: CLOSE     R1           ; SAVE R1,...
101 [-]: RETURN    R0 1         ; return 


; Function #215.1:
;
; Name:            
; Defined at line: 10713
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #215.2:
;
; Name:            
; Defined at line: 10718
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["GetMessagesWithHyperlinks"] := nil
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K2     ; R0["OnHyperlinkSelectionClosed"] := nil
  5 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 0         ; if not R0 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: MOVE      R1 R0        ; R1 := R0
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 10735
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 10743
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 47
  5 [-]: JMP       47           ; PC := 47
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 47
 17 [-]: JMP       47           ; PC := 47
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: TEST      R0 1         ; if R0 then PC := 47
 20 [-]: JMP       47           ; PC := 47
 21 [-]: GETGLOBAL R0 K5        ; R0 := mMovie
 22 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x6B7B470B"]
 23 [-]: LOADK     R2 K7        ; R2 := "ContextMenu"
 24 [-]: LOADK     R3 K8        ; R3 := "enabled"
 25 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 26 [-]: EQ        1 R0 K9      ; if R0 == "true" then PC := 47
 27 [-]: JMP       47           ; PC := 47
 28 [-]: GETGLOBAL R0 K10       ; R0 := 0x400E7765
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mUserPanel"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 1         ; if R0 then PC := 47
 33 [-]: JMP       47           ; PC := 47
 34 [-]: GETUPVAL  R0 U0        ; R0 := U0
 35 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mUserPanel"]
 36 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["mIsExpanded"]
 37 [-]: TEST      R0 0         ; if not R0 then PC := 47
 38 [-]: JMP       47           ; PC := 47
 39 [-]: GETUPVAL  R0 U0        ; R0 := U0
 40 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mUserPanel"]
 41 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["mListControl"]
 42 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["mIsVisible"]
 43 [-]: TEST      R0 0         ; if not R0 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: GETUPVAL  R0 U2        ; R0 := U2
 46 [-]: CALL      R0 1 1       ; R0()
 47 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 10752
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 27
 17 [-]: JMP       27           ; PC := 27
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: TEST      R0 1         ; if R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U2        ; R0 := U2
 22 [-]: GETUPVAL  R1 U3        ; R1 := U3
 23 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["DECREMENT"]
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: MOVE      R0 R1        ; R0 := R1
 26 [-]: RETURN    R0 2         ; return R0
 27 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 10761
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 27
 17 [-]: JMP       27           ; PC := 27
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: TEST      R0 1         ; if R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U2        ; R0 := U2
 22 [-]: GETUPVAL  R1 U3        ; R1 := U3
 23 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["INCREMENT"]
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: MOVE      R0 R1        ; R0 := R1
 26 [-]: RETURN    R0 2         ; return R0
 27 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 10770
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 10778
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 66
  5 [-]: JMP       66           ; PC := 66
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 66
 17 [-]: JMP       66           ; PC := 66
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: TEST      R0 1         ; if R0 then PC := 66
 20 [-]: JMP       66           ; PC := 66
 21 [-]: GETGLOBAL R0 K5        ; R0 := mMovie
 22 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x6B7B470B"]
 23 [-]: LOADK     R2 K7        ; R2 := "ContextMenu"
 24 [-]: LOADK     R3 K8        ; R3 := "enabled"
 25 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 26 [-]: EQ        1 R0 K9      ; if R0 == "true" then PC := 66
 27 [-]: JMP       66           ; PC := 66
 28 [-]: GETUPVAL  R0 U0        ; R0 := U0
 29 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 30 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mEmoteGrid"]
 31 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["mIsVisible"]
 32 [-]: TEST      R0 0         ; if not R0 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETUPVAL  R0 U0        ; R0 := U0
 35 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 36 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0x26978121"]
 37 [-]: MOVE      R2 R1        ; R2 := R1
 38 [-]: CALL      R0 3 1       ; R0(R1,R2)
 39 [-]: JMP       57           ; PC := 57
 40 [-]: GETUPVAL  R0 U0        ; R0 := U0
 41 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 42 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["mListControl"]
 43 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["mIsVisible"]
 44 [-]: TEST      R0 0         ; if not R0 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETUPVAL  R0 U0        ; R0 := U0
 47 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 48 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0x26978121"]
 49 [-]: MOVE      R2 R1        ; R2 := R1
 50 [-]: CALL      R0 3 1       ; R0(R1,R2)
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETUPVAL  R0 U0        ; R0 := U0
 53 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 54 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0x26978121"]
 55 [-]: MOVE      R2 R0        ; R2 := R0
 56 [-]: CALL      R0 3 1       ; R0(R1,R2)
 57 [-]: GETUPVAL  R0 U2        ; R0 := U2
 58 [-]: GETTABLE  R0 R0 K15    ; R0 := R0["0xD1BD9D6"]
 59 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 60 [-]: LOADK     R2 K16       ; R2 := "Window.SendMessageBar.EmojiBtn.Callout"
 61 [-]: GETGLOBAL R3 K17       ; R3 := _G
 62 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["UIFx_ConsolePress"]
 63 [-]: LOADK     R4 K19       ; R4 := 0
 64 [-]: LOADK     R5 K19       ; R5 := 0
 65 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 66 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 10795
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 105
  5 [-]: JMP       105          ; PC := 105
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 105
 11 [-]: JMP       105          ; PC := 105
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
 14 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mIsExpanded"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 105
 16 [-]: JMP       105          ; PC := 105
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 21 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 27 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 105
 28 [-]: JMP       105          ; PC := 105
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["mWindow"]
 31 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["x"]
 32 [-]: GETGLOBAL R1 K8        ; R1 := 0xF595ADDE
 33 [-]: GETGLOBAL R2 K9        ; R2 := mMovie
 34 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x6B7B470B"]
 35 [-]: LOADK     R4 K11       ; R4 := "Window.UserPanel"
 36 [-]: LOADK     R5 K12       ; R5 := "_x"
 37 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 38 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 39 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 40 [-]: GETGLOBAL R1 K8        ; R1 := 0xF595ADDE
 41 [-]: GETGLOBAL R2 K9        ; R2 := mMovie
 42 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x6B7B470B"]
 43 [-]: LOADK     R4 K13       ; R4 := "Window.UserPanel.Panel"
 44 [-]: LOADK     R5 K12       ; R5 := "_x"
 45 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 46 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 47 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 48 [-]: GETUPVAL  R1 U0        ; R1 := U0
 49 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mWindow"]
 50 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["y"]
 51 [-]: GETGLOBAL R2 K8        ; R2 := 0xF595ADDE
 52 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 53 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x6B7B470B"]
 54 [-]: LOADK     R5 K11       ; R5 := "Window.UserPanel"
 55 [-]: LOADK     R6 K15       ; R6 := "_y"
 56 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 57 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 58 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 59 [-]: GETGLOBAL R2 K8        ; R2 := 0xF595ADDE
 60 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 61 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x6B7B470B"]
 62 [-]: LOADK     R5 K13       ; R5 := "Window.UserPanel.Panel"
 63 [-]: LOADK     R6 K15       ; R6 := "_y"
 64 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 65 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 66 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 67 [-]: GETGLOBAL R2 K8        ; R2 := 0xF595ADDE
 68 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 69 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x6B7B470B"]
 70 [-]: LOADK     R5 K13       ; R5 := "Window.UserPanel.Panel"
 71 [-]: LOADK     R6 K16       ; R6 := "_width"
 72 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 73 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 74 [-]: GETGLOBAL R3 K8        ; R3 := 0xF595ADDE
 75 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 76 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x6B7B470B"]
 77 [-]: LOADK     R6 K13       ; R6 := "Window.UserPanel.Panel"
 78 [-]: LOADK     R7 K17       ; R7 := "_height"
 79 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 80 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 81 [-]: GETGLOBAL R4 K8        ; R4 := 0xF595ADDE
 82 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 83 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x6B7B470B"]
 84 [-]: LOADK     R7 K18       ; R7 := "_xmouse"
 85 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 86 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 87 [-]: GETGLOBAL R5 K8        ; R5 := 0xF595ADDE
 88 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 89 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x6B7B470B"]
 90 [-]: LOADK     R8 K19       ; R8 := "_ymouse"
 91 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 92 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 93 [-]: LE        0 R0 R4      ; if R0 > R4 then PC := 105
 94 [-]: JMP       105          ; PC := 105
 95 [-]: ADD       R6 R0 R2     ; R6 := R0 + R2
 96 [-]: LE        0 R4 R6      ; if R4 > R6 then PC := 105
 97 [-]: JMP       105          ; PC := 105
 98 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 105
 99 [-]: JMP       105          ; PC := 105
100 [-]: ADD       R6 R1 R3     ; R6 := R1 + R3
101 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: MOVE      R6 R1        ; R6 := R1
104 [-]: RETURN    R6 2         ; return R6
105 [-]: MOVE      R6 R0        ; R6 := R0
106 [-]: RETURN    R6 2         ; return R6
107 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 10815
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 132
  5 [-]: JMP       132          ; PC := 132
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 132
 10 [-]: JMP       132          ; PC := 132
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 132
 15 [-]: JMP       132          ; PC := 132
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mWindow"]
 18 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["x"]
 19 [-]: GETGLOBAL R2 K4        ; R2 := 0xF595ADDE
 20 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 21 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x6B7B470B"]
 22 [-]: LOADK     R5 K7        ; R5 := "Window.UserPanel"
 23 [-]: LOADK     R6 K8        ; R6 := "_x"
 24 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 25 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 26 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 27 [-]: GETGLOBAL R2 K4        ; R2 := 0xF595ADDE
 28 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 29 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x6B7B470B"]
 30 [-]: LOADK     R5 K9        ; R5 := "Window.UserPanel.Panel"
 31 [-]: LOADK     R6 K8        ; R6 := "_x"
 32 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 33 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 34 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 35 [-]: GETGLOBAL R2 K4        ; R2 := 0xF595ADDE
 36 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 37 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x6B7B470B"]
 38 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 39 [-]: LOADK     R6 K8        ; R6 := "_x"
 40 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 41 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 42 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 43 [-]: GETGLOBAL R2 K4        ; R2 := 0xF595ADDE
 44 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 45 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x6B7B470B"]
 46 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 47 [-]: LOADK     R6 K10       ; R6 := ".Btn"
 48 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 49 [-]: LOADK     R6 K8        ; R6 := "_x"
 50 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 51 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 52 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 53 [-]: GETUPVAL  R2 U0        ; R2 := U0
 54 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mWindow"]
 55 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["y"]
 56 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 57 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 58 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6B7B470B"]
 59 [-]: LOADK     R6 K7        ; R6 := "Window.UserPanel"
 60 [-]: LOADK     R7 K12       ; R7 := "_y"
 61 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 62 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 63 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 64 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 65 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 66 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6B7B470B"]
 67 [-]: LOADK     R6 K9        ; R6 := "Window.UserPanel.Panel"
 68 [-]: LOADK     R7 K12       ; R7 := "_y"
 69 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 70 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 71 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 72 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 73 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 74 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6B7B470B"]
 75 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mClipName"]
 76 [-]: LOADK     R7 K12       ; R7 := "_y"
 77 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 78 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 79 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 80 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 81 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 82 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6B7B470B"]
 83 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mClipName"]
 84 [-]: LOADK     R7 K10       ; R7 := ".Btn"
 85 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 86 [-]: LOADK     R7 K12       ; R7 := "_y"
 87 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 88 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 89 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 90 [-]: GETGLOBAL R3 K4        ; R3 := 0xF595ADDE
 91 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 92 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6B7B470B"]
 93 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mClipName"]
 94 [-]: LOADK     R7 K10       ; R7 := ".Btn"
 95 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 96 [-]: LOADK     R7 K13       ; R7 := "_width"
 97 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 98 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 99 [-]: GETGLOBAL R4 K4        ; R4 := 0xF595ADDE
100 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
101 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x6B7B470B"]
102 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mClipName"]
103 [-]: LOADK     R8 K10       ; R8 := ".Btn"
104 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
105 [-]: LOADK     R8 K14       ; R8 := "_height"
106 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
107 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
108 [-]: GETGLOBAL R5 K4        ; R5 := 0xF595ADDE
109 [-]: GETGLOBAL R6 K5        ; R6 := mMovie
110 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x6B7B470B"]
111 [-]: LOADK     R8 K15       ; R8 := "_xmouse"
112 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
113 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
114 [-]: GETGLOBAL R6 K4        ; R6 := 0xF595ADDE
115 [-]: GETGLOBAL R7 K5        ; R7 := mMovie
116 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7["0x6B7B470B"]
117 [-]: LOADK     R9 K16       ; R9 := "_ymouse"
118 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
119 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
120 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 132
121 [-]: JMP       132          ; PC := 132
122 [-]: ADD       R7 R1 R3     ; R7 := R1 + R3
123 [-]: LE        0 R5 R7      ; if R5 > R7 then PC := 132
124 [-]: JMP       132          ; PC := 132
125 [-]: LE        0 R2 R6      ; if R2 > R6 then PC := 132
126 [-]: JMP       132          ; PC := 132
127 [-]: ADD       R7 R2 R4     ; R7 := R2 + R4
128 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 132
129 [-]: JMP       132          ; PC := 132
130 [-]: MOVE      R7 R1        ; R7 := R1
131 [-]: RETURN    R7 2         ; return R7
132 [-]: MOVE      R7 R0        ; R7 := R0
133 [-]: RETURN    R7 2         ; return R7
134 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 10835
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 122
  6 [-]: JMP       122          ; PC := 122
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVisualMode"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
 11 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVisualMode"]
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 17 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 122
 18 [-]: JMP       122          ; PC := 122
 19 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserPanel"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 122
 24 [-]: JMP       122          ; PC := 122
 25 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserPanel"]
 28 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mUserLocator"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: TEST      R1 1         ; if R1 then PC := 122
 31 [-]: JMP       122          ; PC := 122
 32 [-]: GETUPVAL  R1 U0        ; R1 := U0
 33 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserPanel"]
 34 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mUserLocator"]
 35 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mIsExpanded"]
 36 [-]: TEST      R1 0         ; if not R1 then PC := 122
 37 [-]: JMP       122          ; PC := 122
 38 [-]: GETUPVAL  R1 U0        ; R1 := U0
 39 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mWindow"]
 40 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["x"]
 41 [-]: GETGLOBAL R2 K9        ; R2 := 0xF595ADDE
 42 [-]: GETGLOBAL R3 K10       ; R3 := mMovie
 43 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x6B7B470B"]
 44 [-]: LOADK     R5 K12       ; R5 := "Window.UserPanel"
 45 [-]: LOADK     R6 K13       ; R6 := "_x"
 46 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 47 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 48 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 49 [-]: GETGLOBAL R2 K9        ; R2 := 0xF595ADDE
 50 [-]: GETGLOBAL R3 K10       ; R3 := mMovie
 51 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x6B7B470B"]
 52 [-]: LOADK     R5 K14       ; R5 := "Window.UserPanel.AlphabetIndex"
 53 [-]: LOADK     R6 K13       ; R6 := "_x"
 54 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 55 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 56 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 57 [-]: GETGLOBAL R2 K9        ; R2 := 0xF595ADDE
 58 [-]: GETGLOBAL R3 K10       ; R3 := mMovie
 59 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x6B7B470B"]
 60 [-]: LOADK     R5 K15       ; R5 := "Window.UserPanel.AlphabetIndex.Grid"
 61 [-]: LOADK     R6 K13       ; R6 := "_x"
 62 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 63 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 64 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 65 [-]: GETUPVAL  R2 U0        ; R2 := U0
 66 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mWindow"]
 67 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["y"]
 68 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 69 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 70 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6B7B470B"]
 71 [-]: LOADK     R6 K12       ; R6 := "Window.UserPanel"
 72 [-]: LOADK     R7 K17       ; R7 := "_y"
 73 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 74 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 75 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 76 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 77 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 78 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6B7B470B"]
 79 [-]: LOADK     R6 K14       ; R6 := "Window.UserPanel.AlphabetIndex"
 80 [-]: LOADK     R7 K17       ; R7 := "_y"
 81 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 82 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 83 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 84 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 85 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 86 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6B7B470B"]
 87 [-]: LOADK     R6 K14       ; R6 := "Window.UserPanel.AlphabetIndex"
 88 [-]: LOADK     R7 K18       ; R7 := "_width"
 89 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 90 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 91 [-]: GETGLOBAL R4 K9        ; R4 := 0xF595ADDE
 92 [-]: GETGLOBAL R5 K10       ; R5 := mMovie
 93 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x6B7B470B"]
 94 [-]: LOADK     R7 K14       ; R7 := "Window.UserPanel.AlphabetIndex"
 95 [-]: LOADK     R8 K19       ; R8 := "_height"
 96 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 97 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 98 [-]: GETGLOBAL R5 K9        ; R5 := 0xF595ADDE
 99 [-]: GETGLOBAL R6 K10       ; R6 := mMovie
100 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0x6B7B470B"]
101 [-]: LOADK     R8 K20       ; R8 := "_xmouse"
102 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
103 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
104 [-]: GETGLOBAL R6 K9        ; R6 := 0xF595ADDE
105 [-]: GETGLOBAL R7 K10       ; R7 := mMovie
106 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7["0x6B7B470B"]
107 [-]: LOADK     R9 K21       ; R9 := "_ymouse"
108 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
109 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
110 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 122
111 [-]: JMP       122          ; PC := 122
112 [-]: ADD       R7 R1 R3     ; R7 := R1 + R3
113 [-]: LE        0 R5 R7      ; if R5 > R7 then PC := 122
114 [-]: JMP       122          ; PC := 122
115 [-]: LE        0 R2 R6      ; if R2 > R6 then PC := 122
116 [-]: JMP       122          ; PC := 122
117 [-]: ADD       R7 R2 R4     ; R7 := R2 + R4
118 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 122
119 [-]: JMP       122          ; PC := 122
120 [-]: MOVE      R7 R1        ; R7 := R1
121 [-]: RETURN    R7 2         ; return R7
122 [-]: RETURN    R0 2         ; return R0
123 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 10859
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 79
  5 [-]: JMP       79           ; PC := 79
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC51A5C9D"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: LT        0 K2 R0      ; if 0 >= R0 then PC := 79
 10 [-]: JMP       79           ; PC := 79
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0xF595ADDE
 12 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x6B7B470B"]
 14 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
 15 [-]: LOADK     R4 K7        ; R4 := "_x"
 16 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 17 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 18 [-]: GETGLOBAL R1 K3        ; R1 := 0xF595ADDE
 19 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x6B7B470B"]
 21 [-]: LOADK     R4 K8        ; R4 := "ContextMenu.Bg"
 22 [-]: LOADK     R5 K7        ; R5 := "_x"
 23 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 24 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 25 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 26 [-]: GETGLOBAL R1 K3        ; R1 := 0xF595ADDE
 27 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 28 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x6B7B470B"]
 29 [-]: LOADK     R4 K6        ; R4 := "ContextMenu"
 30 [-]: LOADK     R5 K9        ; R5 := "_y"
 31 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 32 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 33 [-]: GETGLOBAL R2 K3        ; R2 := 0xF595ADDE
 34 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 35 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x6B7B470B"]
 36 [-]: LOADK     R5 K8        ; R5 := "ContextMenu.Bg"
 37 [-]: LOADK     R6 K9        ; R6 := "_y"
 38 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 39 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 40 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 41 [-]: GETGLOBAL R2 K3        ; R2 := 0xF595ADDE
 42 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 43 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x6B7B470B"]
 44 [-]: LOADK     R5 K8        ; R5 := "ContextMenu.Bg"
 45 [-]: LOADK     R6 K10       ; R6 := "_width"
 46 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 47 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 48 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 49 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 50 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x6B7B470B"]
 51 [-]: LOADK     R6 K8        ; R6 := "ContextMenu.Bg"
 52 [-]: LOADK     R7 K11       ; R7 := "_height"
 53 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 54 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 55 [-]: GETGLOBAL R4 K3        ; R4 := 0xF595ADDE
 56 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 57 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x6B7B470B"]
 58 [-]: LOADK     R7 K12       ; R7 := "_xmouse"
 59 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 60 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 61 [-]: GETGLOBAL R5 K3        ; R5 := 0xF595ADDE
 62 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
 63 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0x6B7B470B"]
 64 [-]: LOADK     R8 K13       ; R8 := "_ymouse"
 65 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 66 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 67 [-]: LE        0 R0 R4      ; if R0 > R4 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: ADD       R6 R0 R2     ; R6 := R0 + R2
 70 [-]: LE        0 R4 R6      ; if R4 > R6 then PC := 79
 71 [-]: JMP       79           ; PC := 79
 72 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: ADD       R6 R1 R3     ; R6 := R1 + R3
 75 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: MOVE      R6 R1        ; R6 := R1
 78 [-]: RETURN    R6 2         ; return R6
 79 [-]: MOVE      R6 R0        ; R6 := R0
 80 [-]: RETURN    R6 2         ; return R6
 81 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 10879
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xF595ADDE
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  4 [-]: LOADK     R3 K3        ; R3 := "_xmouse"
  5 [-]: CALL      R1 3 0       ; R1,... := R1(R2,R3)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  8 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
 10 [-]: LOADK     R4 K4        ; R4 := "_ymouse"
 11 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mVisualMode"]
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
 18 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 90
 19 [-]: JMP       90           ; PC := 90
 20 [-]: GETGLOBAL R3 K7        ; R3 := 0x9FAED6BC
 21 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 22 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
 23 [-]: LOADK     R6 K8        ; R6 := "Window.TabMenu"
 24 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 25 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 26 [-]: EQ        0 R3 K9      ; if R3 ~= "undefined" then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
 31 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 32 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
 33 [-]: LOADK     R6 K8        ; R6 := "Window.TabMenu"
 34 [-]: LOADK     R7 K10       ; R7 := "_x"
 35 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 36 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 37 [-]: ADD       R3 R3 K11    ; R3 := R3 + 23
 38 [-]: GETGLOBAL R4 K0        ; R4 := 0xF595ADDE
 39 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 40 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 41 [-]: LOADK     R7 K8        ; R7 := "Window.TabMenu"
 42 [-]: LOADK     R8 K12       ; R8 := "_y"
 43 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 44 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 45 [-]: ADD       R4 R4 K13    ; R4 := R4 + 3
 46 [-]: GETGLOBAL R5 K0        ; R5 := 0xF595ADDE
 47 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 48 [-]: SELF      R6 R6 K2     ; R7 := R6; R6 := R6["0x6B7B470B"]
 49 [-]: LOADK     R8 K14       ; R8 := "Window.TabMenu.WindowTitle.Fill"
 50 [-]: LOADK     R9 K15       ; R9 := "_width"
 51 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 52 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 53 [-]: GETGLOBAL R6 K0        ; R6 := 0xF595ADDE
 54 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 55 [-]: SELF      R7 R7 K2     ; R8 := R7; R7 := R7["0x6B7B470B"]
 56 [-]: LOADK     R9 K14       ; R9 := "Window.TabMenu.WindowTitle.Fill"
 57 [-]: LOADK     R10 K16      ; R10 := "_height"
 58 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 59 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 60 [-]: SUB       R6 R6 K17    ; R6 := R6 - 5
 61 [-]: GETUPVAL  R7 U0        ; R7 := U0
 62 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
 63 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["x"]
 64 [-]: ADD       R7 R7 R3     ; R7 := R7 + R3
 65 [-]: LE        0 R7 R0      ; if R7 > R0 then PC := 87
 66 [-]: JMP       87           ; PC := 87
 67 [-]: GETUPVAL  R7 U0        ; R7 := U0
 68 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
 69 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["x"]
 70 [-]: ADD       R7 R7 R3     ; R7 := R7 + R3
 71 [-]: ADD       R7 R7 R5     ; R7 := R7 + R5
 72 [-]: LE        0 R0 R7      ; if R0 > R7 then PC := 87
 73 [-]: JMP       87           ; PC := 87
 74 [-]: GETUPVAL  R7 U0        ; R7 := U0
 75 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
 76 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["y"]
 77 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 78 [-]: LE        0 R7 R1      ; if R7 > R1 then PC := 87
 79 [-]: JMP       87           ; PC := 87
 80 [-]: GETUPVAL  R7 U0        ; R7 := U0
 81 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
 82 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["y"]
 83 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 84 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 85 [-]: LE        1 R1 R7      ; if R1 <= R7 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R2 R0        ; R2 := R0
 88 [-]: MOVE      R2 R1        ; R2 := R1
 89 [-]: JMP       150          ; PC := 150
 90 [-]: GETUPVAL  R7 U0        ; R7 := U0
 91 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
 92 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["x"]
 93 [-]: LE        0 R7 R0      ; if R7 > R0 then PC := 131
 94 [-]: JMP       131          ; PC := 131
 95 [-]: GETUPVAL  R7 U0        ; R7 := U0
 96 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
 97 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["x"]
 98 [-]: GETUPVAL  R8 U0        ; R8 := U0
 99 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mWindow"]
100 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["width"]
101 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
102 [-]: GETUPVAL  R8 U1        ; R8 := U1
103 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["0xF81722A2"]
104 [-]: GETUPVAL  R9 U0        ; R9 := U0
105 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["mUserPanel"]
106 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["mIsExpanded"]
107 [-]: GETUPVAL  R10 U0       ; R10 := U0
108 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["mUserPanel"]
109 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["mWindow"]
110 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["width"]
111 [-]: LOADK     R11 K25      ; R11 := 0
112 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
113 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
114 [-]: LE        0 R0 R7      ; if R0 > R7 then PC := 131
115 [-]: JMP       131          ; PC := 131
116 [-]: GETUPVAL  R7 U0        ; R7 := U0
117 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
118 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["y"]
119 [-]: LE        0 R7 R1      ; if R7 > R1 then PC := 131
120 [-]: JMP       131          ; PC := 131
121 [-]: GETUPVAL  R7 U0        ; R7 := U0
122 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mWindow"]
123 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["y"]
124 [-]: GETUPVAL  R8 U0        ; R8 := U0
125 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mWindow"]
126 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["height"]
127 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
128 [-]: ADD       R7 R7 K27    ; R7 := R7 + 35
129 [-]: LE        1 R1 R7      ; if R1 <= R7 then PC := 132
130 [-]: JMP       132          ; PC := 132
131 [-]: MOVE      R2 R0        ; R2 := R0
132 [-]: MOVE      R2 R1        ; R2 := R1
133 [-]: TEST      R2 1         ; if R2 then PC := 138
134 [-]: JMP       138          ; PC := 138
135 [-]: GETUPVAL  R7 U2        ; R7 := U2
136 [-]: CALL      R7 1 2       ; R7 := R7()
137 [-]: MOVE      R2 R7        ; R2 := R7
138 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
139 [-]: SELF      R7 R7 K2     ; R8 := R7; R7 := R7["0x6B7B470B"]
140 [-]: LOADK     R9 K28       ; R9 := "ContextMenu"
141 [-]: LOADK     R10 K29      ; R10 := "enabled"
142 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
143 [-]: EQ        0 R7 K30     ; if R7 ~= "true" then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: TEST      R2 1         ; if R2 then PC := 150
146 [-]: JMP       150          ; PC := 150
147 [-]: GETUPVAL  R7 U3        ; R7 := U3
148 [-]: CALL      R7 1 2       ; R7 := R7()
149 [-]: MOVE      R2 R7        ; R2 := R7
150 [-]: RETURN    R2 2         ; return R2
151 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 10909
; #Upvalues:       21
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: MOVE      R3 R0        ; R3 := R0
  2 [-]: LOADK     R4 K0        ; R4 := "EN_GAMEPAD_BUTTON_BOTTOM"
  3 [-]: GETGLOBAL R5 K1        ; R5 := Engine
  4 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0x47916128"]
  5 [-]: CALL      R5 1 2       ; R5 := R5()
  6 [-]: TEST      R5 0         ; if not R5 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADK     R4 K3        ; R4 := "EN_GAMEPAD_BUTTON_RIGHT"
  9 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R1 K4        ; R1 := "EN_MOUSE_B0"
 12 [-]: EQ        0 R1 K4      ; if R1 ~= "EN_MOUSE_B0" then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: EQ        1 R2 K5      ; if R2 == "1" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: EQ        1 R1 K6      ; if R1 == "EN_LSHIFT" then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: EQ        0 R1 K7      ; if R1 ~= "EN_RSHIFT" then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: EQ        1 R2 K5      ; if R2 == "1" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: MOVE      R5 R1        ; R5 := R1
 28 [-]: EQ        1 R1 K8      ; if R1 == "EN_LALT" then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: EQ        0 R1 K9      ; if R1 ~= "EN_RALT" then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: EQ        1 R2 K5      ; if R2 == "1" then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R3 R0        ; R3 := R0
 35 [-]: MOVE      R3 R1        ; R3 := R1
 36 [-]: TEST      R3 1         ; if R3 then PC := 77
 37 [-]: JMP       77           ; PC := 77
 38 [-]: GETGLOBAL R5 K10       ; R5 := string
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xDE44F664"]
 40 [-]: MOVE      R6 R1        ; R6 := R1
 41 [-]: LOADK     R7 K12       ; R7 := "_TAB"
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 77
 44 [-]: JMP       77           ; PC := 77
 45 [-]: EQ        0 R2 K13     ; if R2 ~= "0" then PC := 77
 46 [-]: JMP       77           ; PC := 77
 47 [-]: GETUPVAL  R5 U2        ; R5 := U2
 48 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mVisualMode"]
 49 [-]: GETUPVAL  R6 U2        ; R6 := U2
 50 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["VISUAL_MODE_MENU_FULL"]
 51 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 59
 52 [-]: JMP       59           ; PC := 59
 53 [-]: GETUPVAL  R5 U2        ; R5 := U2
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mVisualMode"]
 55 [-]: GETUPVAL  R6 U2        ; R6 := U2
 56 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["VISUAL_MODE_GAMEPLAY_FULL"]
 57 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 77
 58 [-]: JMP       77           ; PC := 77
 59 [-]: GETUPVAL  R5 U3        ; R5 := U3
 60 [-]: TEST      R5 1         ; if R5 then PC := 77
 61 [-]: JMP       77           ; PC := 77
 62 [-]: GETUPVAL  R5 U4        ; R5 := U4
 63 [-]: CALL      R5 1 1       ; R5()
 64 [-]: GETUPVAL  R5 U1        ; R5 := U1
 65 [-]: TEST      R5 0         ; if not R5 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: LOADK     R5 K17       ; R5 := 1
 68 [-]: MOVE      R5 R5        ; R5 := R5
 69 [-]: GETUPVAL  R5 U7        ; R5 := U7
 70 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["DECREMENT"]
 71 [-]: MOVE      R5 R6        ; R5 := R6
 72 [-]: JMP       425          ; PC := 425
 73 [-]: GETUPVAL  R5 U7        ; R5 := U7
 74 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["INCREMENT"]
 75 [-]: MOVE      R5 R6        ; R5 := R6
 76 [-]: JMP       425          ; PC := 425
 77 [-]: EQ        0 R2 K13     ; if R2 ~= "0" then PC := 144
 78 [-]: JMP       144          ; PC := 144
 79 [-]: GETUPVAL  R5 U8        ; R5 := U8
 80 [-]: TEST      R5 0         ; if not R5 then PC := 144
 81 [-]: JMP       144          ; PC := 144
 82 [-]: GETUPVAL  R5 U9        ; R5 := U9
 83 [-]: TEST      R5 0         ; if not R5 then PC := 144
 84 [-]: JMP       144          ; PC := 144
 85 [-]: GETUPVAL  R5 U3        ; R5 := U3
 86 [-]: TEST      R5 1         ; if R5 then PC := 144
 87 [-]: JMP       144          ; PC := 144
 88 [-]: GETGLOBAL R5 K10       ; R5 := string
 89 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xDE44F664"]
 90 [-]: MOVE      R6 R1        ; R6 := R1
 91 [-]: LOADK     R7 K20       ; R7 := "_ENTER"
 92 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 93 [-]: TEST      R5 0         ; if not R5 then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETUPVAL  R5 U10       ; R5 := U10
 96 [-]: CALL      R5 1 1       ; R5()
 97 [-]: JMP       425          ; PC := 425
 98 [-]: GETGLOBAL R5 K10       ; R5 := string
 99 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xDE44F664"]
100 [-]: MOVE      R6 R1        ; R6 := R1
101 [-]: LOADK     R7 K21       ; R7 := "EN_LEFT"
102 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
103 [-]: TEST      R5 0         ; if not R5 then PC := 119
104 [-]: JMP       119          ; PC := 119
105 [-]: GETGLOBAL R5 K22       ; R5 := 0xF595ADDE
106 [-]: GETUPVAL  R6 U11       ; R6 := U11
107 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["0x83151703"]
108 [-]: GETUPVAL  R7 U12       ; R7 := U12
109 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
110 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
111 [-]: EQ        1 R5 K17     ; if R5 == 1 then PC := 425
112 [-]: JMP       425          ; PC := 425
113 [-]: GETUPVAL  R6 U11       ; R6 := U11
114 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["0xE7E1F009"]
115 [-]: SUB       R7 R5 K17    ; R7 := R5 - 1
116 [-]: GETUPVAL  R8 U12       ; R8 := U12
117 [-]: CALL      R6 3 1       ; R6(R7,R8)
118 [-]: JMP       425          ; PC := 425
119 [-]: GETGLOBAL R6 K10       ; R6 := string
120 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0xDE44F664"]
121 [-]: MOVE      R7 R1        ; R7 := R1
122 [-]: LOADK     R8 K25       ; R8 := "EN_RIGHT"
123 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
124 [-]: TEST      R6 0         ; if not R6 then PC := 425
125 [-]: JMP       425          ; PC := 425
126 [-]: GETGLOBAL R6 K22       ; R6 := 0xF595ADDE
127 [-]: GETUPVAL  R7 U11       ; R7 := U11
128 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["0x83151703"]
129 [-]: GETUPVAL  R8 U12       ; R8 := U12
130 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
131 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
132 [-]: GETUPVAL  R7 U11       ; R7 := U11
133 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["0x797DE76E"]
134 [-]: GETUPVAL  R8 U12       ; R8 := U12
135 [-]: CALL      R7 2 2       ; R7 := R7(R8)
136 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 425
137 [-]: JMP       425          ; PC := 425
138 [-]: GETUPVAL  R7 U11       ; R7 := U11
139 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["0xE7E1F009"]
140 [-]: ADD       R8 R6 K17    ; R8 := R6 + 1
141 [-]: GETUPVAL  R9 U12       ; R9 := U12
142 [-]: CALL      R7 3 1       ; R7(R8,R9)
143 [-]: JMP       425          ; PC := 425
144 [-]: EQ        0 R2 K13     ; if R2 ~= "0" then PC := 425
145 [-]: JMP       425          ; PC := 425
146 [-]: GETUPVAL  R7 U3        ; R7 := U3
147 [-]: TEST      R7 1         ; if R7 then PC := 425
148 [-]: JMP       425          ; PC := 425
149 [-]: GETGLOBAL R7 K10       ; R7 := string
150 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
151 [-]: MOVE      R8 R1        ; R8 := R1
152 [-]: LOADK     R9 K20       ; R9 := "_ENTER"
153 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
154 [-]: EQ        1 R7 K27     ; if R7 == nil then PC := 215
155 [-]: JMP       215          ; PC := 215
156 [-]: GETGLOBAL R7 K28       ; R7 := 0x400E7765
157 [-]: GETUPVAL  R8 U2        ; R8 := U2
158 [-]: CALL      R7 2 2       ; R7 := R7(R8)
159 [-]: TEST      R7 1         ; if R7 then PC := 425
160 [-]: JMP       425          ; PC := 425
161 [-]: GETGLOBAL R7 K1        ; R7 := Engine
162 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["0x9490FE70"]
163 [-]: CALL      R7 1 2       ; R7 := R7()
164 [-]: TEST      R7 1         ; if R7 then PC := 425
165 [-]: JMP       425          ; PC := 425
166 [-]: GETUPVAL  R7 U13       ; R7 := U13
167 [-]: TEST      R7 0         ; if not R7 then PC := 175
168 [-]: JMP       175          ; PC := 175
169 [-]: GETUPVAL  R7 U14       ; R7 := U14
170 [-]: TEST      R7 0         ; if not R7 then PC := 175
171 [-]: JMP       175          ; PC := 175
172 [-]: MOVE      R7 R0        ; R7 := R0
173 [-]: MOVE      R7 R14       ; R7 := R14
174 [-]: JMP       425          ; PC := 425
175 [-]: GETGLOBAL R7 K28       ; R7 := 0x400E7765
176 [-]: GETUPVAL  R8 U2        ; R8 := U2
177 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["mInputPanel"]
178 [-]: CALL      R7 2 2       ; R7 := R7(R8)
179 [-]: TEST      R7 1         ; if R7 then PC := 425
180 [-]: JMP       425          ; PC := 425
181 [-]: GETUPVAL  R7 U2        ; R7 := U2
182 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mVisualMode"]
183 [-]: GETUPVAL  R8 U2        ; R8 := U2
184 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["VISUAL_MODE_GAMEPLAY_FULL"]
185 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 193
186 [-]: JMP       193          ; PC := 193
187 [-]: GETUPVAL  R7 U2        ; R7 := U2
188 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mVisualMode"]
189 [-]: GETUPVAL  R8 U2        ; R8 := U2
190 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["VISUAL_MODE_MENU_FULL"]
191 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 425
192 [-]: JMP       425          ; PC := 425
193 [-]: GETUPVAL  R7 U2        ; R7 := U2
194 [-]: SELF      R7 R7 K31    ; R8 := R7; R7 := R7["0xE1889BF6"]
195 [-]: CALL      R7 2 1       ; R7(R8)
196 [-]: GETUPVAL  R7 U15       ; R7 := U15
197 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["0x84DCC428"]
198 [-]: CALL      R7 1 2       ; R7 := R7()
199 [-]: GETUPVAL  R8 U15       ; R8 := U15
200 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["UI_MODE_IN_SPACE_SHIP"]
201 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 425
202 [-]: JMP       425          ; PC := 425
203 [-]: GETUPVAL  R7 U2        ; R7 := U2
204 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mVisualMode"]
205 [-]: GETUPVAL  R8 U2        ; R8 := U2
206 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["VISUAL_MODE_GAMEPLAY_FULL"]
207 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 425
208 [-]: JMP       425          ; PC := 425
209 [-]: GETUPVAL  R7 U2        ; R7 := U2
210 [-]: SELF      R7 R7 K34    ; R8 := R7; R7 := R7["0xC4A34CB3"]
211 [-]: GETUPVAL  R9 U2        ; R9 := U2
212 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["VISUAL_MODE_GAMEPLAY_SIMPLE"]
213 [-]: CALL      R7 3 1       ; R7(R8,R9)
214 [-]: JMP       425          ; PC := 425
215 [-]: GETGLOBAL R7 K10       ; R7 := string
216 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
217 [-]: MOVE      R8 R1        ; R8 := R1
218 [-]: LOADK     R9 K4        ; R9 := "EN_MOUSE_B0"
219 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
220 [-]: EQ        0 R7 K27     ; if R7 ~= nil then PC := 229
221 [-]: JMP       229          ; PC := 229
222 [-]: GETGLOBAL R7 K10       ; R7 := string
223 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xDE44F664"]
224 [-]: MOVE      R8 R1        ; R8 := R1
225 [-]: LOADK     R9 K36       ; R9 := "EN_MOUSE_B1"
226 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
227 [-]: TEST      R7 0         ; if not R7 then PC := 399
228 [-]: JMP       399          ; PC := 399
229 [-]: GETUPVAL  R7 U2        ; R7 := U2
230 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mVisualMode"]
231 [-]: GETUPVAL  R8 U2        ; R8 := U2
232 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["VISUAL_MODE_GAMEPLAY_FULL"]
233 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 241
234 [-]: JMP       241          ; PC := 241
235 [-]: GETUPVAL  R7 U2        ; R7 := U2
236 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mVisualMode"]
237 [-]: GETUPVAL  R8 U2        ; R8 := U2
238 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["VISUAL_MODE_MENU_FULL"]
239 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 254
240 [-]: JMP       254          ; PC := 254
241 [-]: GETGLOBAL R7 K37       ; R7 := mMovie
242 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7["0x6B7B470B"]
243 [-]: LOADK     R9 K39       ; R9 := "ContextMenu"
244 [-]: LOADK     R10 K40      ; R10 := "enabled"
245 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
246 [-]: EQ        0 R7 K41     ; if R7 ~= "true" then PC := 254
247 [-]: JMP       254          ; PC := 254
248 [-]: GETUPVAL  R7 U16       ; R7 := U16
249 [-]: CALL      R7 1 2       ; R7 := R7()
250 [-]: TEST      R7 1         ; if R7 then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: GETUPVAL  R7 U4        ; R7 := U4
253 [-]: CALL      R7 1 1       ; R7()
254 [-]: GETGLOBAL R7 K28       ; R7 := 0x400E7765
255 [-]: GETUPVAL  R8 U2        ; R8 := U2
256 [-]: CALL      R7 2 2       ; R7 := R7(R8)
257 [-]: TEST      R7 1         ; if R7 then PC := 290
258 [-]: JMP       290          ; PC := 290
259 [-]: GETUPVAL  R7 U2        ; R7 := U2
260 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mVisualMode"]
261 [-]: GETUPVAL  R8 U2        ; R8 := U2
262 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["VISUAL_MODE_GAMEPLAY_FULL"]
263 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 290
264 [-]: JMP       290          ; PC := 290
265 [-]: GETUPVAL  R7 U17       ; R7 := U17
266 [-]: CALL      R7 1 2       ; R7 := R7()
267 [-]: TEST      R7 1         ; if R7 then PC := 290
268 [-]: JMP       290          ; PC := 290
269 [-]: GETUPVAL  R7 U2        ; R7 := U2
270 [-]: GETTABLE  R7 R7 K42    ; R7 := R7["mWindowTitle"]
271 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["isDragging"]
272 [-]: TEST      R7 1         ; if R7 then PC := 425
273 [-]: JMP       425          ; PC := 425
274 [-]: GETUPVAL  R7 U2        ; R7 := U2
275 [-]: GETTABLE  R7 R7 K44    ; R7 := R7["mWindowStatus"]
276 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["isDragging"]
277 [-]: TEST      R7 1         ; if R7 then PC := 425
278 [-]: JMP       425          ; PC := 425
279 [-]: GETGLOBAL R7 K37       ; R7 := mMovie
280 [-]: SELF      R7 R7 K45    ; R8 := R7; R7 := R7["0x1AA40FBC"]
281 [-]: CALL      R7 2 2       ; R7 := R7(R8)
282 [-]: EQ        0 R7 K27     ; if R7 ~= nil then PC := 425
283 [-]: JMP       425          ; PC := 425
284 [-]: GETUPVAL  R8 U2        ; R8 := U2
285 [-]: SELF      R8 R8 K34    ; R9 := R8; R8 := R8["0xC4A34CB3"]
286 [-]: GETUPVAL  R10 U2       ; R10 := U2
287 [-]: GETTABLE  R10 R10 K35  ; R10 := R10["VISUAL_MODE_GAMEPLAY_SIMPLE"]
288 [-]: CALL      R8 3 1       ; R8(R9,R10)
289 [-]: JMP       425          ; PC := 425
290 [-]: GETGLOBAL R8 K28       ; R8 := 0x400E7765
291 [-]: GETUPVAL  R9 U2        ; R9 := U2
292 [-]: CALL      R8 2 2       ; R8 := R8(R9)
293 [-]: TEST      R8 1         ; if R8 then PC := 425
294 [-]: JMP       425          ; PC := 425
295 [-]: GETGLOBAL R8 K28       ; R8 := 0x400E7765
296 [-]: GETUPVAL  R9 U2        ; R9 := U2
297 [-]: GETTABLE  R9 R9 K46    ; R9 := R9["mUserPanel"]
298 [-]: CALL      R8 2 2       ; R8 := R8(R9)
299 [-]: TEST      R8 1         ; if R8 then PC := 425
300 [-]: JMP       425          ; PC := 425
301 [-]: GETGLOBAL R8 K28       ; R8 := 0x400E7765
302 [-]: GETUPVAL  R9 U2        ; R9 := U2
303 [-]: GETTABLE  R9 R9 K47    ; R9 := R9["mTabMenu"]
304 [-]: CALL      R8 2 2       ; R8 := R8(R9)
305 [-]: TEST      R8 1         ; if R8 then PC := 425
306 [-]: JMP       425          ; PC := 425
307 [-]: GETUPVAL  R8 U2        ; R8 := U2
308 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mVisualMode"]
309 [-]: GETUPVAL  R9 U2        ; R9 := U2
310 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["VISUAL_MODE_GAMEPLAY_FULL"]
311 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 319
312 [-]: JMP       319          ; PC := 319
313 [-]: GETUPVAL  R8 U2        ; R8 := U2
314 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mVisualMode"]
315 [-]: GETUPVAL  R9 U2        ; R9 := U2
316 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["VISUAL_MODE_MENU_FULL"]
317 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 425
318 [-]: JMP       425          ; PC := 425
319 [-]: GETUPVAL  R8 U2        ; R8 := U2
320 [-]: GETTABLE  R8 R8 K46    ; R8 := R8["mUserPanel"]
321 [-]: GETTABLE  R8 R8 K48    ; R8 := R8["mListControl"]
322 [-]: SELF      R8 R8 K49    ; R9 := R8; R8 := R8["0x97B489B5"]
323 [-]: CALL      R8 2 2       ; R8 := R8(R9)
324 [-]: GETUPVAL  R9 U2        ; R9 := U2
325 [-]: GETTABLE  R9 R9 K47    ; R9 := R9["mTabMenu"]
326 [-]: SELF      R9 R9 K49    ; R10 := R9; R9 := R9["0x97B489B5"]
327 [-]: CALL      R9 2 2       ; R9 := R9(R10)
328 [-]: GETGLOBAL R10 K28      ; R10 := 0x400E7765
329 [-]: MOVE      R11 R8       ; R11 := R8
330 [-]: CALL      R10 2 2      ; R10 := R10(R11)
331 [-]: TEST      R10 1        ; if R10 then PC := 365
332 [-]: JMP       365          ; PC := 365
333 [-]: GETUPVAL  R10 U18      ; R10 := U18
334 [-]: MOVE      R11 R8       ; R11 := R8
335 [-]: CALL      R10 2 2      ; R10 := R10(R11)
336 [-]: TEST      R10 0        ; if not R10 then PC := 365
337 [-]: JMP       365          ; PC := 365
338 [-]: GETGLOBAL R10 K10      ; R10 := string
339 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xDE44F664"]
340 [-]: MOVE      R11 R1       ; R11 := R1
341 [-]: LOADK     R12 K36      ; R12 := "EN_MOUSE_B1"
342 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
343 [-]: EQ        0 R10 K27    ; if R10 ~= nil then PC := 359
344 [-]: JMP       359          ; PC := 359
345 [-]: GETGLOBAL R10 K10      ; R10 := string
346 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xDE44F664"]
347 [-]: MOVE      R11 R1       ; R11 := R1
348 [-]: LOADK     R12 K4       ; R12 := "EN_MOUSE_B0"
349 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
350 [-]: EQ        1 R10 K27    ; if R10 == nil then PC := 365
351 [-]: JMP       365          ; PC := 365
352 [-]: GETGLOBAL R10 K37      ; R10 := mMovie
353 [-]: SELF      R10 R10 K38  ; R11 := R10; R10 := R10["0x6B7B470B"]
354 [-]: LOADK     R12 K39      ; R12 := "ContextMenu"
355 [-]: LOADK     R13 K40      ; R13 := "enabled"
356 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
357 [-]: EQ        1 R10 K41    ; if R10 == "true" then PC := 365
358 [-]: JMP       365          ; PC := 365
359 [-]: GETUPVAL  R10 U19      ; R10 := U19
360 [-]: GETGLOBAL R11 K22      ; R11 := 0xF595ADDE
361 [-]: GETTABLE  R12 R8 K50   ; R12 := R8["Id"]
362 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
363 [-]: CALL      R10 0 1      ; R10(R11,...)
364 [-]: JMP       425          ; PC := 425
365 [-]: GETGLOBAL R10 K10      ; R10 := string
366 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xDE44F664"]
367 [-]: MOVE      R11 R1       ; R11 := R1
368 [-]: LOADK     R12 K36      ; R12 := "EN_MOUSE_B1"
369 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
370 [-]: TEST      R10 0        ; if not R10 then PC := 425
371 [-]: JMP       425          ; PC := 425
372 [-]: GETGLOBAL R10 K28      ; R10 := 0x400E7765
373 [-]: MOVE      R11 R9       ; R11 := R9
374 [-]: CALL      R10 2 2      ; R10 := R10(R11)
375 [-]: TEST      R10 1        ; if R10 then PC := 425
376 [-]: JMP       425          ; PC := 425
377 [-]: GETGLOBAL R10 K10      ; R10 := string
378 [-]: GETTABLE  R10 R10 K51  ; R10 := R10["0x7B782033"]
379 [-]: GETTABLE  R11 R9 K52   ; R11 := R9["ChannelName"]
380 [-]: LOADK     R12 K17      ; R12 := 1
381 [-]: LOADK     R13 K17      ; R13 := 1
382 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
383 [-]: GETUPVAL  R11 U2       ; R11 := U2
384 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["0xDB118937"]
385 [-]: CALL      R11 1 2      ; R11 := R11()
386 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 425
387 [-]: JMP       425          ; PC := 425
388 [-]: GETUPVAL  R10 U2       ; R10 := U2
389 [-]: GETTABLE  R10 R10 K54  ; R10 := R10["mPanelList"]
390 [-]: GETTABLE  R11 R9 K52   ; R11 := R9["ChannelName"]
391 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
392 [-]: EQ        1 R10 K27    ; if R10 == nil then PC := 425
393 [-]: JMP       425          ; PC := 425
394 [-]: GETUPVAL  R11 U19      ; R11 := U19
395 [-]: LOADNIL   R12 R14      ; R12 := R13 := R14 := nil
396 [-]: MOVE      R15 R10      ; R15 := R10
397 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
398 [-]: JMP       425          ; PC := 425
399 [-]: GETGLOBAL R11 K10      ; R11 := string
400 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["0xDE44F664"]
401 [-]: MOVE      R12 R1       ; R12 := R1
402 [-]: LOADK     R13 K55      ; R13 := "EN_UP"
403 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
404 [-]: EQ        0 R11 K27    ; if R11 ~= nil then PC := 413
405 [-]: JMP       413          ; PC := 413
406 [-]: GETGLOBAL R11 K10      ; R11 := string
407 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["0xDE44F664"]
408 [-]: MOVE      R12 R1       ; R12 := R1
409 [-]: LOADK     R13 K56      ; R13 := "EN_DOWN"
410 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
411 [-]: EQ        1 R11 K27    ; if R11 == nil then PC := 425
412 [-]: JMP       425          ; PC := 425
413 [-]: GETUPVAL  R11 U7       ; R11 := U7
414 [-]: GETTABLE  R11 R11 K57  ; R11 := R11["0xF81722A2"]
415 [-]: EQ        1 R1 K55     ; if R1 == "EN_UP" then PC := 418
416 [-]: JMP       418          ; PC := 418
417 [-]: MOVE      R12 R0       ; R12 := R0
418 [-]: MOVE      R12 R1       ; R12 := R1
419 [-]: LOADK     R13 K58      ; R13 := -1
420 [-]: LOADK     R14 K17      ; R14 := 1
421 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
422 [-]: GETUPVAL  R12 U20      ; R12 := U20
423 [-]: MOVE      R13 R11      ; R13 := R11
424 [-]: CALL      R12 2 1      ; R12(R13)
425 [-]: LOADK     R12 K17      ; R12 := 1
426 [-]: RETURN    R12 2        ; return R12
427 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 11000
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: TEST      R2 1         ; if R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 10 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x6B7B470B"]
 11 [-]: LOADK     R4 K2        ; R4 := "ContextMenu"
 12 [-]: LOADK     R5 K3        ; R5 := "enabled"
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: EQ        0 R2 K4      ; if R2 ~= "true" then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0xF595ADDE
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: MOVE      R1 R2        ; R1 := R2
 22 [-]: LOADNIL   R2 R2        ; R2 := nil
 23 [-]: GETUPVAL  R3 U2        ; R3 := U2
 24 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x18AAE1E3"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K7        ; R4 := 0x400E7765
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: GETTABLE  R2 R3 K8     ; R2 := R3["mTextScroll"]
 32 [-]: GETUPVAL  R4 U3        ; R4 := U3
 33 [-]: CALL      R4 1 2       ; R4 := R4()
 34 [-]: TEST      R4 0         ; if not R4 then PC := 52
 35 [-]: JMP       52           ; PC := 52
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 38 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mListControl"]
 39 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mIsVisible"]
 40 [-]: TEST      R4 0         ; if not R4 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETUPVAL  R4 U2        ; R4 := U2
 43 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 44 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mListControl"]
 45 [-]: GETTABLE  R2 R4 K12    ; R2 := R4["mScrollBar"]
 46 [-]: JMP       60           ; PC := 60
 47 [-]: GETUPVAL  R4 U2        ; R4 := U2
 48 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 49 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mEmoteGrid"]
 50 [-]: GETTABLE  R2 R4 K12    ; R2 := R4["mScrollBar"]
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETUPVAL  R4 U4        ; R4 := U4
 53 [-]: CALL      R4 1 2       ; R4 := R4()
 54 [-]: TEST      R4 0         ; if not R4 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 58 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mUserLocator"]
 59 [-]: GETTABLE  R2 R4 K12    ; R2 := R4["mScrollBar"]
 60 [-]: GETGLOBAL R4 K7        ; R4 := 0x400E7765
 61 [-]: MOVE      R5 R2        ; R5 := R2
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 1         ; if R4 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: SELF      R4 R2 K15    ; R5 := R2; R4 := R2["0xBF993023"]
 66 [-]: GETTABLE  R6 R2 K16    ; R6 := R2["mScrollStep"]
 67 [-]: MUL       R6 R1 R6     ; R6 := R1 * R6
 68 [-]: CALL      R4 3 1       ; R4(R5,R6)
 69 [-]: MOVE      R4 R1        ; R4 := R1
 70 [-]: RETURN    R4 2         ; return R4
 71 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 11032
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := gFlashMgr
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x616DD092"]
  6 [-]: GETGLOBAL R4 K2        ; R4 := friendsMovie
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  9 [-]: MOVE      R4 R2        ; R4 := R2
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 14 [-]: LOADK     R5 K5        ; R5 := "RefreshFriendsWindow"
 15 [-]: LOADK     R6 K6        ; R6 := ""
 16 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 17 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 11043
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "true" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xF7DA9CD2"]
  5 [-]: LOADK     R4 K2        ; R4 := "OnGetFriendsResult"
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xAE78D1F"]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: MOVE      R2 R1        ; R2 := R1
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 11051
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "true" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xF7DA9CD2"]
  5 [-]: LOADK     R4 K2        ; R4 := "OnGetFriendsResult"
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 11057
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 1         ; if R0 then PC := 20
  2 [-]: JMP       20           ; PC := 20
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xAE78D1F"]
 10 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 11 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 12 [-]: GETUPVAL  R6 U1        ; R6 := U1
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["0xF2E044CB"]
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xAE78D1F"]
 22 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 23 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 24 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/SocialOverlay_FriendRemoveConfirm"
 25 [-]: MOVE      R7 R0        ; R7 := R0
 26 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 27 [-]: CALL      R2 0 1       ; R2(R3,...)
 28 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 11067
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xAE78D1F"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 11071
; #Upvalues:       7
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: TEST      R0 1         ; if R0 then PC := 62
  2 [-]: JMP       62           ; PC := 62
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x93B1256B
  4 [-]: LOADK     R4 K1        ; R4 := "FAILURE: "
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  7 [-]: CALL      R3 2 1       ; R3(R4)
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x18AAE1E3"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 57
 15 [-]: JMP       57           ; PC := 57
 16 [-]: LOADNIL   R4 R4        ; R4 := nil
 17 [-]: LOADK     R5 K4        ; R5 := "NOSUCHNICK "
 18 [-]: TEST      R2 1         ; if R2 then PC := 45
 19 [-]: JMP       45           ; PC := 45
 20 [-]: GETGLOBAL R6 K5        ; R6 := string
 21 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xDE44F664"]
 22 [-]: MOVE      R7 R1        ; R7 := R1
 23 [-]: MOVE      R8 R5        ; R8 := R5
 24 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 25 [-]: EQ        0 R6 K7      ; if R6 ~= 1 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R6 K5        ; R6 := string
 28 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0x7B782033"]
 29 [-]: MOVE      R7 R1        ; R7 := R1
 30 [-]: GETGLOBAL R8 K5        ; R8 := string
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0xC6772A8A"]
 32 [-]: MOVE      R9 R5        ; R9 := R5
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: ADD       R8 R8 K7     ; R8 := R8 + 1
 35 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 36 [-]: GETGLOBAL R7 K10       ; R7 := mMovie
 37 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 38 [-]: LOADK     R9 K12       ; R9 := "/Lotus/Language/Menu/Chat_FriendOffline"
 39 [-]: MOVE      R10 R0       ; R10 := R0
 40 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 41 [-]: SETTABLE  R11 K13 R6   ; R11["FRIEND"] := R6
 42 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 43 [-]: MOVE      R4 R7        ; R4 := R7
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETGLOBAL R7 K10       ; R7 := mMovie
 46 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 47 [-]: GETUPVAL  R9 U1        ; R9 := U1
 48 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["0xF2E044CB"]
 49 [-]: MOVE      R10 R1       ; R10 := R1
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: MOVE      R10 R0       ; R10 := R0
 52 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 53 [-]: MOVE      R4 R7        ; R4 := R7
 54 [-]: SELF      R7 R3 K15    ; R8 := R3; R7 := R3["0xAE78D1F"]
 55 [-]: MOVE      R9 R4        ; R9 := R4
 56 [-]: CALL      R7 3 1       ; R7(R8,R9)
 57 [-]: TEST      R2 1         ; if R2 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: GETUPVAL  R7 U2        ; R7 := U2
 60 [-]: CALL      R7 1 1       ; R7()
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: GETGLOBAL R7 K16       ; R7 := 0xD1E7609B
 63 [-]: LOADK     R8 K17       ; R8 := ","
 64 [-]: MOVE      R9 R1        ; R9 := R1
 65 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 66 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
 67 [-]: GETTABLE  R9 R7 K7     ; R9 := R7[1]
 68 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 69 [-]: TEST      R8 0         ; if not R8 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETTABLE  R8 R7 K18    ; R8 := R7[2]
 72 [-]: SETTABLE  R7 K7 R8     ; R7[1] := R8
 73 [-]: LEN       R8 R7        ; R8 := # R7
 74 [-]: EQ        0 R8 K18     ; if R8 ~= 2 then PC := 143
 75 [-]: JMP       143          ; PC := 143
 76 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
 77 [-]: GETTABLE  R9 R7 K7     ; R9 := R7[1]
 78 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 79 [-]: TEST      R8 1         ; if R8 then PC := 143
 80 [-]: JMP       143          ; PC := 143
 81 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
 82 [-]: GETTABLE  R9 R7 K18    ; R9 := R7[2]
 83 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 84 [-]: TEST      R8 1         ; if R8 then PC := 143
 85 [-]: JMP       143          ; PC := 143
 86 [-]: TEST      R2 1         ; if R2 then PC := 121
 87 [-]: JMP       121          ; PC := 121
 88 [-]: GETUPVAL  R8 U3        ; R8 := U3
 89 [-]: GETTABLE  R9 R7 K18    ; R9 := R7[2]
 90 [-]: GETTABLE  R10 R7 K7    ; R10 := R7[1]
 91 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 92 [-]: TEST      R8 0         ; if not R8 then PC := 143
 93 [-]: JMP       143          ; PC := 143
 94 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
 95 [-]: GETUPVAL  R9 U4        ; R9 := U4
 96 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 97 [-]: TEST      R8 1         ; if R8 then PC := 143
 98 [-]: JMP       143          ; PC := 143
 99 [-]: GETGLOBAL R8 K19       ; R8 := gMatchingService
100 [-]: SELF      R8 R8 K20    ; R9 := R8; R8 := R8["0xF0C493C"]
101 [-]: CALL      R8 2 2       ; R8 := R8(R9)
102 [-]: GETGLOBAL R9 K3        ; R9 := 0x400E7765
103 [-]: MOVE      R10 R8       ; R10 := R8
104 [-]: CALL      R9 2 2       ; R9 := R9(R10)
105 [-]: TEST      R9 1         ; if R9 then PC := 143
106 [-]: JMP       143          ; PC := 143
107 [-]: GETUPVAL  R9 U5        ; R9 := U5
108 [-]: GETUPVAL  R10 U4       ; R10 := U4
109 [-]: GETTABLE  R11 R7 K18   ; R11 := R7[2]
110 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
111 [-]: TEST      R9 1         ; if R9 then PC := 143
112 [-]: JMP       143          ; PC := 143
113 [-]: SELF      R9 R8 K21    ; R10 := R8; R9 := R8["0x610E964D"]
114 [-]: GETUPVAL  R11 U4       ; R11 := U4
115 [-]: GETTABLE  R12 R7 K18   ; R12 := R7[2]
116 [-]: MOVE      R13 R1       ; R13 := R1
117 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
118 [-]: GETUPVAL  R9 U2        ; R9 := U2
119 [-]: CALL      R9 1 1       ; R9()
120 [-]: JMP       143          ; PC := 143
121 [-]: GETUPVAL  R9 U6        ; R9 := U6
122 [-]: GETTABLE  R10 R7 K18   ; R10 := R7[2]
123 [-]: GETTABLE  R11 R7 K7    ; R11 := R7[1]
124 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
125 [-]: GETTABLE  R10 R9 K22   ; R10 := R9["mIsActive"]
126 [-]: TEST      R10 1        ; if R10 then PC := 143
127 [-]: JMP       143          ; PC := 143
128 [-]: GETGLOBAL R10 K3       ; R10 := 0x400E7765
129 [-]: GETTABLE  R11 R9 K23   ; R11 := R9["mTabElement"]
130 [-]: CALL      R10 2 2      ; R10 := R10(R11)
131 [-]: TEST      R10 1        ; if R10 then PC := 143
132 [-]: JMP       143          ; PC := 143
133 [-]: GETGLOBAL R10 K3       ; R10 := 0x400E7765
134 [-]: GETUPVAL  R11 U0       ; R11 := U0
135 [-]: CALL      R10 2 2      ; R10 := R10(R11)
136 [-]: TEST      R10 1        ; if R10 then PC := 143
137 [-]: JMP       143          ; PC := 143
138 [-]: GETUPVAL  R10 U0       ; R10 := U0
139 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mTabMenu"]
140 [-]: SELF      R10 R10 K25  ; R11 := R10; R10 := R10["0x8D05C017"]
141 [-]: GETTABLE  R12 R9 K23   ; R12 := R9["mTabElement"]
142 [-]: CALL      R10 3 1      ; R10(R11,R12)
143 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 11119
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 11123
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 11127
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 1         ; if R0 then PC := 20
  2 [-]: JMP       20           ; PC := 20
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xAE78D1F"]
 10 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 11 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 12 [-]: GETUPVAL  R6 U1        ; R6 := U1
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["0xF2E044CB"]
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K6        ; R2 := 0xD1E7609B
 21 [-]: LOADK     R3 K7        ; R3 := ","
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: LEN       R3 R2        ; R3 := # R2
 25 [-]: LE        0 K8 R3      ; if 1 > R3 then PC := 64
 26 [-]: JMP       64           ; PC := 64
 27 [-]: GETGLOBAL R3 K9        ; R3 := 0x400E7765
 28 [-]: GETTABLE  R4 R2 K8     ; R4 := R2[1]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 1         ; if R3 then PC := 64
 31 [-]: JMP       64           ; PC := 64
 32 [-]: GETGLOBAL R3 K10       ; R3 := gPlayerProfileMgr
 33 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x21EF7B1A"]
 34 [-]: LOADK     R5 K12       ; R5 := 0
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: GETGLOBAL R4 K9        ; R4 := 0x400E7765
 37 [-]: MOVE      R5 R3        ; R5 := R3
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: TEST      R4 1         ; if R4 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3["0x8E22BD56"]
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: GETTABLE  R5 R2 K8     ; R5 := R2[1]
 44 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 55
 45 [-]: JMP       55           ; PC := 55
 46 [-]: GETUPVAL  R4 U0        ; R4 := U0
 47 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0xAE78D1F"]
 48 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 49 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 50 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/SocialOverlay_PlayerAlreadyInGame"
 51 [-]: MOVE      R9 R0        ; R9 := R0
 52 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 53 [-]: CALL      R4 0 1       ; R4(R5,...)
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R4 K15       ; R4 := gMatchingService
 56 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4["0x1A050D17"]
 57 [-]: GETTABLE  R6 R2 K8     ; R6 := R2[1]
 58 [-]: GETTABLE  R7 R2 K17    ; R7 := R2[2]
 59 [-]: GETUPVAL  R8 U2        ; R8 := U2
 60 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["0xB3637D5"]
 61 [-]: CALL      R8 1 2       ; R8 := R8()
 62 [-]: LOADK     R9 K19       ; R9 := "SendGameInviteCallback"
 63 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 64 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 11149
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 11153
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabMenu.LeftBumper.Tf.text"
  4 [-]: LOADK     R3 K3        ; R3 := "<MENU_LTRIGGER2>"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
  8 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.RightBumper.Tf.text"
  9 [-]: LOADK     R3 K5        ; R3 := "<MENU_RTRIGGER2>"
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: GETGLOBAL R0 K6        ; R0 := Engine
 12 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["0x9490FE70"]
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0xF81722A2"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: LOADK     R3 K9        ; R3 := "<TOGGLE_CHAT_WINDOW_ALT>"
 18 [-]: LOADK     R4 K10       ; R4 := "<TOGGLE_CHAT_WINDOW>"
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 21 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 25 [-]: EQ        0 R2 R1      ; if R2 ~= R1 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADK     R2 K12       ; R2 := ""
 28 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 29 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
 30 [-]: LOADK     R5 K13       ; R5 := "Window.Hint.Callout.text"
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 34 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
 35 [-]: LOADK     R5 K14       ; R5 := "Window.TabMenu.ExpandCallout.Tf.text"
 36 [-]: MOVE      R6 R2        ; R6 := R2
 37 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 38 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 39 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
 40 [-]: LOADK     R5 K15       ; R5 := "Window.TabbedChatPanel.FilterCallout.Tf.text"
 41 [-]: LOADK     R6 K16       ; R6 := "<MENU_GENERIC2>"
 42 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 43 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 44 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
 45 [-]: LOADK     R5 K17       ; R5 := "Window.SendMessageBar.EmojiBtn.Callout.Tf.text"
 46 [-]: LOADK     R6 K18       ; R6 := "<MENU_RTRIGGER1>"
 47 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 48 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 49 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
 50 [-]: LOADK     R5 K19       ; R5 := "Window.SendMessageBar.HyperlinkBtn.Callout.Tf.text"
 51 [-]: LOADK     R6 K20       ; R6 := "<MENU_LTHUMB>"
 52 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 53 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 54 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
 55 [-]: LOADK     R5 K21       ; R5 := "Window.UserPanel.Panel.LocatorBtn.Callout.Tf.text"
 56 [-]: LOADK     R6 K22       ; R6 := "<MENU_RTHUMB>"
 57 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 58 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 11172
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.Hint.Callout.text"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
  8 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.ExpandCallout.Tf.text"
  9 [-]: LOADK     R3 K3        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 12 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
 13 [-]: LOADK     R2 K5        ; R2 := "Window.TabMenu.LeftBumper.Tf.text"
 14 [-]: LOADK     R3 K3        ; R3 := ""
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 17 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
 18 [-]: LOADK     R2 K6        ; R2 := "Window.TabMenu.RightBumper.Tf.text"
 19 [-]: LOADK     R3 K3        ; R3 := ""
 20 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: CALL      R0 1 1       ; R0()
 23 [-]: GETGLOBAL R0 K7        ; R0 := Engine
 24 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["0x9490FE70"]
 25 [-]: CALL      R0 1 2       ; R0 := R0()
 26 [-]: TEST      R0 0         ; if not R0 then PC := 79
 27 [-]: JMP       79           ; PC := 79
 28 [-]: GETGLOBAL R0 K9        ; R0 := 0x400E7765
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: TEST      R0 1         ; if R0 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 35 [-]: SETTABLE  R0 K10 R1    ; R0["mTimers"] := R1
 36 [-]: GETGLOBAL R0 K9        ; R0 := 0x400E7765
 37 [-]: GETUPVAL  R1 U2        ; R1 := U2
 38 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 39 [-]: TEST      R0 1         ; if R0 then PC := 79
 40 [-]: JMP       79           ; PC := 79
 41 [-]: GETGLOBAL R0 K9        ; R0 := 0x400E7765
 42 [-]: GETUPVAL  R1 U2        ; R1 := U2
 43 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mInputPanel"]
 44 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 45 [-]: TEST      R0 1         ; if R0 then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 48 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x17028E8F"]
 49 [-]: GETUPVAL  R2 U2        ; R2 := U2
 50 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mInputPanel"]
 51 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mClipPath"]
 52 [-]: LOADK     R3 K13       ; R3 := ".Callout.Tf.text"
 53 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 54 [-]: LOADK     R3 K14       ; R3 := "<MENU_GENERIC1>"
 55 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 56 [-]: GETGLOBAL R0 K9        ; R0 := 0x400E7765
 57 [-]: GETUPVAL  R1 U2        ; R1 := U2
 58 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["mPanelList"]
 59 [-]: GETUPVAL  R2 U2        ; R2 := U2
 60 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mActivePanelName"]
 61 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 62 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 63 [-]: TEST      R0 1         ; if R0 then PC := 73
 64 [-]: JMP       73           ; PC := 73
 65 [-]: GETUPVAL  R0 U2        ; R0 := U2
 66 [-]: GETTABLE  R0 R0 K15    ; R0 := R0["mPanelList"]
 67 [-]: GETUPVAL  R1 U2        ; R1 := U2
 68 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["mActivePanelName"]
 69 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 70 [-]: SELF      R1 R0 K17    ; R2 := R0; R1 := R0["0xEEFE2F88"]
 71 [-]: MOVE      R3 R1        ; R3 := R1
 72 [-]: CALL      R1 3 1       ; R1(R2,R3)
 73 [-]: GETUPVAL  R1 U2        ; R1 := U2
 74 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mUserPanel"]
 75 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["mListControl"]
 76 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1["0x9D2060CB"]
 77 [-]: CLOSURE   R3 0         ; R3 := closure(Function #240.1)
 78 [-]: CALL      R1 3 1       ; R1(R2,R3)
 79 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 80 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x1C19D966"]
 81 [-]: LOADK     R3 K22       ; R3 := "Window.SendMessageBar.EmojiBtn.Callout"
 82 [-]: LOADK     R4 K23       ; R4 := "_visible"
 83 [-]: GETGLOBAL R5 K7        ; R5 := Engine
 84 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0x9490FE70"]
 85 [-]: CALL      R5 1 0       ; R5,... := R5()
 86 [-]: CALL      R1 0 1       ; R1(R2,...)
 87 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 88 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x1C19D966"]
 89 [-]: LOADK     R3 K24       ; R3 := "Window.UserPanel.Panel.LocatorBtn.Callout"
 90 [-]: LOADK     R4 K23       ; R4 := "_visible"
 91 [-]: GETGLOBAL R5 K7        ; R5 := Engine
 92 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0x9490FE70"]
 93 [-]: CALL      R5 1 0       ; R5,... := R5()
 94 [-]: CALL      R1 0 1       ; R1(R2,...)
 95 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 96 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x1C19D966"]
 97 [-]: LOADK     R3 K25       ; R3 := "Window.TabbedChatPanel.FilterCallout"
 98 [-]: LOADK     R4 K23       ; R4 := "_visible"
 99 [-]: GETGLOBAL R5 K7        ; R5 := Engine
100 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0x9490FE70"]
101 [-]: CALL      R5 1 0       ; R5,... := R5()
102 [-]: CALL      R1 0 1       ; R1(R2,...)
103 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
104 [-]: GETUPVAL  R2 U2        ; R2 := U2
105 [-]: CALL      R1 2 2       ; R1 := R1(R2)
106 [-]: TEST      R1 1         ; if R1 then PC := 170
107 [-]: JMP       170          ; PC := 170
108 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
109 [-]: GETUPVAL  R2 U2        ; R2 := U2
110 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mInputPanel"]
111 [-]: CALL      R1 2 2       ; R1 := R1(R2)
112 [-]: TEST      R1 1         ; if R1 then PC := 170
113 [-]: JMP       170          ; PC := 170
114 [-]: GETUPVAL  R1 U2        ; R1 := U2
115 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mInputPanel"]
116 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
117 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0x5DB0BD4"]
118 [-]: LOADK     R4 K28       ; R4 := "<WARNING>"
119 [-]: MOVE      R5 R1        ; R5 := R1
120 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
121 [-]: SETTABLE  R1 K26 R2    ; R1["CharLimitWarning"] := R2
122 [-]: GETUPVAL  R1 U2        ; R1 := U2
123 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mInputPanel"]
124 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
125 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0x5DB0BD4"]
126 [-]: LOADK     R4 K30       ; R4 := "<PROBLEM>"
127 [-]: MOVE      R5 R1        ; R5 := R1
128 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
129 [-]: SETTABLE  R1 K29 R2    ; R1["CharLimitError"] := R2
130 [-]: GETUPVAL  R1 U2        ; R1 := U2
131 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mInputPanel"]
132 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
133 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0x5DB0BD4"]
134 [-]: LOADK     R4 K32       ; R4 := "<TIMER>"
135 [-]: MOVE      R5 R1        ; R5 := R1
136 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
137 [-]: SETTABLE  R1 K31 R2    ; R1["TimerIcon"] := R2
138 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
139 [-]: SELF      R1 R1 K33    ; R2 := R1; R1 := R1["0x880196A7"]
140 [-]: GETUPVAL  R3 U2        ; R3 := U2
141 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mInputPanel"]
142 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mClipPath"]
143 [-]: LOADK     R4 K34       ; R4 := "Prompt"
144 [-]: LOADK     R5 K35       ; R5 := "_x"
145 [-]: GETUPVAL  R6 U3        ; R6 := U3
146 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xF81722A2"]
147 [-]: GETGLOBAL R7 K7        ; R7 := Engine
148 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x9490FE70"]
149 [-]: CALL      R7 1 2       ; R7 := R7()
150 [-]: GETUPVAL  R8 U2        ; R8 := U2
151 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["mInputPanel"]
152 [-]: GETTABLE  R8 R8 K37    ; R8 := R8["mInitPromptXPos"]
153 [-]: ADD       R8 R8 K38    ; R8 := R8 + 25
154 [-]: GETUPVAL  R9 U2        ; R9 := U2
155 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["mInputPanel"]
156 [-]: GETTABLE  R9 R9 K37    ; R9 := R9["mInitPromptXPos"]
157 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
158 [-]: CALL      R1 0 1       ; R1(R2,...)
159 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
160 [-]: SELF      R1 R1 K33    ; R2 := R1; R1 := R1["0x880196A7"]
161 [-]: GETUPVAL  R3 U2        ; R3 := U2
162 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mInputPanel"]
163 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mClipPath"]
164 [-]: LOADK     R4 K39       ; R4 := "Callout"
165 [-]: LOADK     R5 K23       ; R5 := "_visible"
166 [-]: GETGLOBAL R6 K7        ; R6 := Engine
167 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0x9490FE70"]
168 [-]: CALL      R6 1 0       ; R6,... := R6()
169 [-]: CALL      R1 0 1       ; R1(R2,...)
170 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
171 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x1C19D966"]
172 [-]: LOADK     R3 K40       ; R3 := "Window.TabMenu.ExpandCallout"
173 [-]: LOADK     R4 K23       ; R4 := "_visible"
174 [-]: GETUPVAL  R5 U2        ; R5 := U2
175 [-]: GETTABLE  R5 R5 K41    ; R5 := R5["mVisualMode"]
176 [-]: GETUPVAL  R6 U2        ; R6 := U2
177 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["VISUAL_MODE_MENU_SIMPLE"]
178 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 181
179 [-]: JMP       181          ; PC := 181
180 [-]: MOVE      R5 R0        ; R5 := R0
181 [-]: MOVE      R5 R1        ; R5 := R1
182 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
183 [-]: GETUPVAL  R1 U2        ; R1 := U2
184 [-]: GETTABLE  R1 R1 K41    ; R1 := R1["mVisualMode"]
185 [-]: GETUPVAL  R2 U2        ; R2 := U2
186 [-]: GETTABLE  R2 R2 K43    ; R2 := R2["VISUAL_MODE_MENU_FULL"]
187 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 195
188 [-]: JMP       195          ; PC := 195
189 [-]: GETUPVAL  R1 U2        ; R1 := U2
190 [-]: GETTABLE  R1 R1 K41    ; R1 := R1["mVisualMode"]
191 [-]: GETUPVAL  R2 U2        ; R2 := U2
192 [-]: GETTABLE  R2 R2 K44    ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
193 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 199
194 [-]: JMP       199          ; PC := 199
195 [-]: GETUPVAL  R1 U2        ; R1 := U2
196 [-]: SELF      R1 R1 K45    ; R2 := R1; R1 := R1["0x8D82A3A2"]
197 [-]: MOVE      R3 R1        ; R3 := R1
198 [-]: CALL      R1 3 1       ; R1(R2,R3)
199 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
200 [-]: GETUPVAL  R2 U2        ; R2 := U2
201 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["mUserPanel"]
202 [-]: CALL      R1 2 2       ; R1 := R1(R2)
203 [-]: TEST      R1 1         ; if R1 then PC := 242
204 [-]: JMP       242          ; PC := 242
205 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
206 [-]: GETUPVAL  R2 U2        ; R2 := U2
207 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["mUserPanel"]
208 [-]: GETTABLE  R2 R2 K46    ; R2 := R2["mEmoteGrid"]
209 [-]: CALL      R1 2 2       ; R1 := R1(R2)
210 [-]: TEST      R1 1         ; if R1 then PC := 242
211 [-]: JMP       242          ; PC := 242
212 [-]: GETUPVAL  R1 U2        ; R1 := U2
213 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mUserPanel"]
214 [-]: GETTABLE  R1 R1 K46    ; R1 := R1["mEmoteGrid"]
215 [-]: SELF      R1 R1 K47    ; R2 := R1; R1 := R1["0x7CF71D03"]
216 [-]: MOVE      R3 R1        ; R3 := R1
217 [-]: MOVE      R4 R1        ; R4 := R1
218 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
219 [-]: LOADK     R1 K48       ; R1 := 1
220 [-]: GETUPVAL  R2 U4        ; R2 := U4
221 [-]: LEN       R2 R2        ; R2 := # R2
222 [-]: LOADK     R3 K48       ; R3 := 1
223 [-]: FORPREP   R1 234       ; R1 -= R3; PC := 234
224 [-]: GETUPVAL  R5 U2        ; R5 := U2
225 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mUserPanel"]
226 [-]: GETTABLE  R5 R5 K46    ; R5 := R5["mEmoteGrid"]
227 [-]: SELF      R5 R5 K49    ; R6 := R5; R5 := R5["0xA77DA8EE"]
228 [-]: NEWTABLE  R7 0 1       ; R7 := {}
229 [-]: GETUPVAL  R8 U4        ; R8 := U4
230 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
231 [-]: SETTABLE  R7 K50 R8    ; R7["mTag"] := R8
232 [-]: MOVE      R8 R1        ; R8 := R1
233 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
234 [-]: FORLOOP   R1 224       ; R1 += R3; if R1 <= R2 then begin PC := 224; R4 := R1 end
235 [-]: GETUPVAL  R5 U2        ; R5 := U2
236 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mUserPanel"]
237 [-]: GETTABLE  R5 R5 K46    ; R5 := R5["mEmoteGrid"]
238 [-]: SELF      R5 R5 K51    ; R6 := R5; R5 := R5["0x51396186"]
239 [-]: CLOSURE   R7 1         ; R7 := closure(Function #240.2)
240 [-]: GETUPVAL  R0 U2        ; R0 := U2
241 [-]: CALL      R5 3 1       ; R5(R6,R7)
242 [-]: GETUPVAL  R5 U2        ; R5 := U2
243 [-]: SELF      R5 R5 K52    ; R6 := R5; R5 := R5["0xD1D449ED"]
244 [-]: GETUPVAL  R7 U2        ; R7 := U2
245 [-]: GETTABLE  R7 R7 K53    ; R7 := R7["mWindow"]
246 [-]: GETTABLE  R7 R7 K54    ; R7 := R7["width"]
247 [-]: GETUPVAL  R8 U2        ; R8 := U2
248 [-]: GETTABLE  R8 R8 K53    ; R8 := R8["mWindow"]
249 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["height"]
250 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
251 [-]: RETURN    R0 1         ; return 


; Function #240.1:
;
; Name:            
; Defined at line: 11196
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x17028E8F"]
  6 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  7 [-]: LOADK     R4 K4        ; R4 := ".Callout.Tf.text"
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: LOADK     R4 K5        ; R4 := "<MENU_SELECT>"
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #240.2:
;
; Name:            
; Defined at line: 11232
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mEmoteGrid"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA372F64A"]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 11240
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 81
  5 [-]: JMP       81           ; PC := 81
  6 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
  8 [-]: LOADK     R3 K3        ; R3 := "Window.TabbedChatPanel.FilterBtn"
  9 [-]: LOADK     R4 K4        ; R4 := "_x"
 10 [-]: GETGLOBAL R5 K5        ; R5 := 0xF595ADDE
 11 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 12 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x6B7B470B"]
 13 [-]: LOADK     R8 K3        ; R8 := "Window.TabbedChatPanel.FilterBtn"
 14 [-]: LOADK     R9 K4        ; R9 := "_x"
 15 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 16 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 17 [-]: GETUPVAL  R6 U1        ; R6 := U1
 18 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0xF81722A2"]
 19 [-]: EQ        1 R0 K8      ; if R0 == "true" then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R7 R0        ; R7 := R0
 22 [-]: MOVE      R7 R1        ; R7 := R1
 23 [-]: GETUPVAL  R8 U0        ; R8 := U0
 24 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mFilterBtnOffset"]
 25 [-]: GETUPVAL  R9 U0        ; R9 := U0
 26 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mFilterBtnOffset"]
 27 [-]: UNM       R9 R9        ; R9 := - R9
 28 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 29 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 32 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
 33 [-]: LOADK     R3 K10       ; R3 := "Window.TabbedChatPanel.FilterList"
 34 [-]: LOADK     R4 K4        ; R4 := "_x"
 35 [-]: GETGLOBAL R5 K5        ; R5 := 0xF595ADDE
 36 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 37 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x6B7B470B"]
 38 [-]: LOADK     R8 K10       ; R8 := "Window.TabbedChatPanel.FilterList"
 39 [-]: LOADK     R9 K4        ; R9 := "_x"
 40 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 41 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 42 [-]: GETUPVAL  R6 U1        ; R6 := U1
 43 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0xF81722A2"]
 44 [-]: EQ        1 R0 K8      ; if R0 == "true" then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: MOVE      R7 R0        ; R7 := R0
 47 [-]: MOVE      R7 R1        ; R7 := R1
 48 [-]: GETUPVAL  R8 U0        ; R8 := U0
 49 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mFilterBtnOffset"]
 50 [-]: GETUPVAL  R9 U0        ; R9 := U0
 51 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mFilterBtnOffset"]
 52 [-]: UNM       R9 R9        ; R9 := - R9
 53 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 54 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 55 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 56 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 57 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
 58 [-]: LOADK     R3 K11       ; R3 := "Window.TabbedChatPanel.FilterListMask"
 59 [-]: LOADK     R4 K4        ; R4 := "_x"
 60 [-]: GETGLOBAL R5 K5        ; R5 := 0xF595ADDE
 61 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 62 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x6B7B470B"]
 63 [-]: LOADK     R8 K11       ; R8 := "Window.TabbedChatPanel.FilterListMask"
 64 [-]: LOADK     R9 K4        ; R9 := "_x"
 65 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 66 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 67 [-]: GETUPVAL  R6 U1        ; R6 := U1
 68 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0xF81722A2"]
 69 [-]: EQ        1 R0 K8      ; if R0 == "true" then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R7 R0        ; R7 := R0
 72 [-]: MOVE      R7 R1        ; R7 := R1
 73 [-]: GETUPVAL  R8 U0        ; R8 := U0
 74 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mFilterBtnOffset"]
 75 [-]: GETUPVAL  R9 U0        ; R9 := U0
 76 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mFilterBtnOffset"]
 77 [-]: UNM       R9 R9        ; R9 := - R9
 78 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 79 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 80 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 81 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 11248
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x212137BC"]
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: TEST      R0 1         ; if R0 then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mInputPanel"]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mInputPanel"]
 24 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xFEE41852"]
 25 [-]: CALL      R0 2 1       ; R0(R1)
 26 [-]: RETURN    R0 1         ; return 


; Function #243:
;
; Name:            
; Defined at line: 11255
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC3FB73FF"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: LOADK     R1 K2        ; R1 := 1
 16 [-]: LEN       R2 R0        ; R2 := # R0
 17 [-]: LOADK     R3 K2        ; R3 := 1
 18 [-]: FORPREP   R1 91        ; R1 -= R3; PC := 91
 19 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 20 [-]: GETUPVAL  R6 U0        ; R6 := U0
 21 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["0xDB118937"]
 22 [-]: CALL      R6 1 2       ; R6 := R6()
 23 [-]: GETTABLE  R7 R5 K4     ; R7 := R5["mDisplayName"]
 24 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 25 [-]: GETUPVAL  R7 U0        ; R7 := U0
 26 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mPanelList"]
 27 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 28 [-]: EQ        1 R7 K6      ; if R7 == nil then PC := 91
 29 [-]: JMP       91           ; PC := 91
 30 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["mHasAccount"]
 31 [-]: TEST      R8 0         ; if not R8 then PC := 91
 32 [-]: JMP       91           ; PC := 91
 33 [-]: GETTABLE  R8 R7 K8     ; R8 := R7["mPreviousPresState"]
 34 [-]: EQ        1 R8 K6      ; if R8 == nil then PC := 88
 35 [-]: JMP       88           ; PC := 88
 36 [-]: GETTABLE  R8 R7 K8     ; R8 := R7["mPreviousPresState"]
 37 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["mPresence"]
 38 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["state"]
 39 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 88
 40 [-]: JMP       88           ; PC := 88
 41 [-]: LOADNIL   R8 R8        ; R8 := nil
 42 [-]: GETTABLE  R9 R7 K8     ; R9 := R7["mPreviousPresState"]
 43 [-]: GETGLOBAL R10 K11      ; R10 := Engine
 44 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["PlayerProfile_PS_OFFLINE"]
 45 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 63
 46 [-]: JMP       63           ; PC := 63
 47 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["mPresence"]
 48 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["state"]
 49 [-]: GETGLOBAL R10 K11      ; R10 := Engine
 50 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["PlayerProfile_PS_OFFLINE"]
 51 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 63
 52 [-]: JMP       63           ; PC := 63
 53 [-]: GETGLOBAL R9 K13       ; R9 := mMovie
 54 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 55 [-]: LOADK     R11 K15      ; R11 := "/Lotus/Language/Menu/Chat_PrivateConvoOnline"
 56 [-]: MOVE      R12 R0       ; R12 := R0
 57 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 58 [-]: GETTABLE  R14 R5 K4    ; R14 := R5["mDisplayName"]
 59 [-]: SETTABLE  R13 K16 R14  ; R13["PARTNER"] := R14
 60 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 61 [-]: MOVE      R8 R9        ; R8 := R9
 62 [-]: JMP       83           ; PC := 83
 63 [-]: GETTABLE  R9 R7 K8     ; R9 := R7["mPreviousPresState"]
 64 [-]: GETGLOBAL R10 K11      ; R10 := Engine
 65 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["PlayerProfile_PS_OFFLINE"]
 66 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 83
 67 [-]: JMP       83           ; PC := 83
 68 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["mPresence"]
 69 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["state"]
 70 [-]: GETGLOBAL R10 K11      ; R10 := Engine
 71 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["PlayerProfile_PS_OFFLINE"]
 72 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 83
 73 [-]: JMP       83           ; PC := 83
 74 [-]: GETGLOBAL R9 K13       ; R9 := mMovie
 75 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 76 [-]: LOADK     R11 K17      ; R11 := "/Lotus/Language/Menu/Chat_PrivateConvoOffline"
 77 [-]: MOVE      R12 R0       ; R12 := R0
 78 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 79 [-]: GETTABLE  R14 R5 K4    ; R14 := R5["mDisplayName"]
 80 [-]: SETTABLE  R13 K16 R14  ; R13["PARTNER"] := R14
 81 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 82 [-]: MOVE      R8 R9        ; R8 := R9
 83 [-]: EQ        1 R8 K6      ; if R8 == nil then PC := 88
 84 [-]: JMP       88           ; PC := 88
 85 [-]: SELF      R9 R7 K18    ; R10 := R7; R9 := R7["0xAE78D1F"]
 86 [-]: MOVE      R11 R8       ; R11 := R8
 87 [-]: CALL      R9 3 1       ; R9(R10,R11)
 88 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["mPresence"]
 89 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["state"]
 90 [-]: SETTABLE  R7 K8 R9     ; R7["mPreviousPresState"] := R9
 91 [-]: FORLOOP   R1 19        ; R1 += R3; if R1 <= R2 then begin PC := 19; R4 := R1 end
 92 [-]: RETURN    R0 1         ; return 


; Function #244:
;
; Name:            
; Defined at line: 11285
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["NextRichPresenceResync"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0xD51B2786
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["RICH_PRESENCE_RESYNC_INTERVAL"]
 10 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 11 [-]: SETTABLE  R0 K1 R1     ; R0["NextRichPresenceResync"] := R1
 12 [-]: RETURN    R0 1         ; return 


; Function #245:
;
; Name:            
; Defined at line: 11292
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["NextLitePresenceResync"]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R1 K0        ; R1 := _T
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0xD51B2786
 11 [-]: CALL      R2 1 2       ; R2 := R2()
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["LITE_PRESENCE_RESYNC_INTERVAL"]
 14 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 15 [-]: SETTABLE  R1 K1 R2     ; R1["NextLitePresenceResync"] := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #246:
;
; Name:            
; Defined at line: 11303
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #247:
;
; Name:            
; Defined at line: 11307
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC3FB73FF"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: LEN       R1 R0        ; R1 := # R0
 12 [-]: LT        0 K3 R1      ; if 0 >= R1 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: MOVE      R1 R0        ; R1 := R0
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #248:
;
; Name:            
; Defined at line: 11319
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["BackgroundMovie"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
  4 [-]: LOADK     R3 K3        ; R3 := "RefreshLoadout"
  5 [-]: LOADK     R4 K4        ; R4 := ""
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K0        ; R1 := _T
  8 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  9 [-]: SETTABLE  R2 K6 K7     ; R2["ITEM"] := nil
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: SETTABLE  R2 K8 R3     ; R2["CALLBACK"] := R3
 12 [-]: SETTABLE  R1 K5 R2     ; R1["marketDetailedViewParms"] := R2
 13 [-]: RETURN    R0 1         ; return 


; Function #249:
;
; Name:            
; Defined at line: 11324
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x458F27A9"]
 11 [-]: LOADK     R3 K2        ; R3 := "HideScreen"
 12 [-]: LOADK     R4 K3        ; R4 := "false"
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: LOADNIL   R1 R1        ; R1 := nil
 15 [-]: MOVE      R1 R2        ; R1 := R2
 16 [-]: JMP       39           ; PC := 39
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 18 [-]: GETGLOBAL R2 K4        ; R2 := _T
 19 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["GetScreenRes"]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETGLOBAL R1 K6        ; R1 := gFlashMgr
 24 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x616DD092"]
 25 [-]: GETGLOBAL R3 K4        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x4AFC37AA"]
 27 [-]: LOADK     R4 K9        ; R4 := "Store"
 28 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 29 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 30 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x458F27A9"]
 36 [-]: LOADK     R4 K10       ; R4 := "RefreshVisibilityMaterials"
 37 [-]: LOADK     R5 K11       ; R5 := ""
 38 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 39 [-]: GETGLOBAL R2 K12       ; R2 := Engine
 40 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0x9490FE70"]
 41 [-]: CALL      R2 1 2       ; R2 := R2()
 42 [-]: TEST      R2 1         ; if R2 then PC := 53
 43 [-]: JMP       53           ; PC := 53
 44 [-]: GETGLOBAL R2 K12       ; R2 := Engine
 45 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x212137BC"]
 46 [-]: CALL      R2 1 2       ; R2 := R2()
 47 [-]: TEST      R2 1         ; if R2 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETUPVAL  R2 U3        ; R2 := U3
 50 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mInputPanel"]
 51 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0xFEE41852"]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETUPVAL  R2 U4        ; R2 := U4
 54 [-]: MOVE      R3 R0        ; R3 := R0
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 57 [-]: GETGLOBAL R3 K4        ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["BackgroundMovie"]
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: TEST      R2 1         ; if R2 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETGLOBAL R2 K4        ; R2 := _T
 63 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["BackgroundMovie"]
 64 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x458F27A9"]
 65 [-]: LOADK     R4 K18       ; R4 := "RefreshLoadout"
 66 [-]: LOADK     R5 K11       ; R5 := ""
 67 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 68 [-]: RETURN    R0 1         ; return 


; Function #250:
;
; Name:            
; Defined at line: 11350
; #Upvalues:       21
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  46

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADK     R2 K0        ; R2 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R1 K1        ; R1 := _G
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["StalkerMode"]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R1 K3        ; R1 := string
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0x7B782033"]
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: LOADK     R3 K5        ; R3 := 1
 15 [-]: LOADK     R4 K5        ; R4 := 1
 16 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 17 [-]: EQ        0 R1 K6      ; if R1 ~= "@" then PC := 47
 18 [-]: JMP       47           ; PC := 47
 19 [-]: LOADNIL   R1 R1        ; R1 := nil
 20 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0xAF449107"]
 21 [-]: LOADK     R4 K8        ; R4 := "^@%[[0-9][0-9]:[0-9][0-9]%] "
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: GETGLOBAL R2 K3        ; R2 := string
 26 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x7B782033"]
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: GETGLOBAL R4 K3        ; R4 := string
 29 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["0xDE44F664"]
 30 [-]: MOVE      R5 R0        ; R5 := R0
 31 [-]: LOADK     R6 K11       ; R6 := " "
 32 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 33 [-]: ADD       R4 R4 K5     ; R4 := R4 + 1
 34 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 35 [-]: MOVE      R1 R2        ; R1 := R2
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R2 K3        ; R2 := string
 38 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x7B782033"]
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: LOADK     R4 K12       ; R4 := 2
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: MOVE      R1 R2        ; R1 := R2
 43 [-]: GETUPVAL  R2 U1        ; R2 := U1
 44 [-]: MOVE      R3 R1        ; R3 := R1
 45 [-]: CALL      R2 2 1       ; R2(R3)
 46 [-]: JMP       980          ; PC := 980
 47 [-]: GETGLOBAL R2 K3        ; R2 := string
 48 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x7B782033"]
 49 [-]: MOVE      R3 R0        ; R3 := R0
 50 [-]: LOADK     R4 K5        ; R4 := 1
 51 [-]: LOADK     R5 K13       ; R5 := 6
 52 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 53 [-]: EQ        0 R2 K14     ; if R2 ~= "GUILD=" then PC := 82
 54 [-]: JMP       82           ; PC := 82
 55 [-]: GETGLOBAL R2 K3        ; R2 := string
 56 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0xDE44F664"]
 57 [-]: MOVE      R3 R0        ; R3 := R0
 58 [-]: LOADK     R4 K15       ; R4 := ":"
 59 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 60 [-]: GETGLOBAL R3 K3        ; R3 := string
 61 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 62 [-]: MOVE      R4 R0        ; R4 := R0
 63 [-]: LOADK     R5 K16       ; R5 := 7
 64 [-]: SUB       R6 R2 K5     ; R6 := R2 - 1
 65 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 66 [-]: GETGLOBAL R4 K3        ; R4 := string
 67 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0x7B782033"]
 68 [-]: MOVE      R5 R0        ; R5 := R0
 69 [-]: ADD       R6 R2 K5     ; R6 := R2 + 1
 70 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 71 [-]: GETGLOBAL R5 K17       ; R5 := _T
 72 [-]: SETTABLE  R5 K18 K19   ; R5["SelectedIsGuild"] := "0x1"
 73 [-]: GETGLOBAL R5 K17       ; R5 := _T
 74 [-]: SETTABLE  R5 K20 R4    ; R5["SelectedProfileName"] := R4
 75 [-]: GETGLOBAL R5 K17       ; R5 := _T
 76 [-]: SETTABLE  R5 K21 R3    ; R5["SelectedProfileId"] := R3
 77 [-]: GETGLOBAL R5 K17       ; R5 := _T
 78 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["0x10F7E690"]
 79 [-]: LOADK     R6 K23       ; R6 := "Profile"
 80 [-]: CALL      R5 2 1       ; R5(R6)
 81 [-]: JMP       980          ; PC := 980
 82 [-]: GETGLOBAL R5 K24       ; R5 := 0x400E7765
 83 [-]: GETUPVAL  R6 U2        ; R6 := U2
 84 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 85 [-]: TEST      R5 1         ; if R5 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: RETURN    R0 1         ; return 
 88 [-]: LOADNIL   R5 R8        ; R5 := R6 := R7 := R8 := nil
 89 [-]: LOADK     R9 K25       ; R9 := ""
 90 [-]: GETGLOBAL R10 K3       ; R10 := string
 91 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["0xBDD0D625"]
 92 [-]: GETGLOBAL R11 K3       ; R11 := string
 93 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["0x7B782033"]
 94 [-]: MOVE      R12 R0       ; R12 := R0
 95 [-]: LOADK     R13 K5       ; R13 := 1
 96 [-]: LOADK     R14 K27      ; R14 := 4
 97 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 98 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 99 [-]: EQ        0 R10 K28    ; if R10 ~= "omg-" then PC := 143
100 [-]: JMP       143          ; PC := 143
101 [-]: GETGLOBAL R10 K3       ; R10 := string
102 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["0xDE44F664"]
103 [-]: MOVE      R11 R0       ; R11 := R0
104 [-]: LOADK     R12 K15      ; R12 := ":"
105 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
106 [-]: GETGLOBAL R11 K29      ; R11 := 0x7C282057
107 [-]: GETUPVAL  R12 U3       ; R12 := U3
108 [-]: GETTABLE  R12 R12 K30  ; R12 := R12["OMEGA_TYPE_PREFIX"]
109 [-]: GETGLOBAL R13 K3       ; R13 := string
110 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["0x7B782033"]
111 [-]: MOVE      R14 R0       ; R14 := R0
112 [-]: LOADK     R15 K31      ; R15 := 5
113 [-]: SUB       R16 R10 K5   ; R16 := R10 - 1
114 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
115 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
116 [-]: CALL      R11 2 2      ; R11 := R11(R12)
117 [-]: GETGLOBAL R12 K24      ; R12 := 0x400E7765
118 [-]: MOVE      R13 R11      ; R13 := R11
119 [-]: CALL      R12 2 2      ; R12 := R12(R13)
120 [-]: TEST      R12 1        ; if R12 then PC := 868
121 [-]: JMP       868          ; PC := 868
122 [-]: SELF      R12 R11 K32  ; R13 := R11; R12 := R11["0x66D820BD"]
123 [-]: GETGLOBAL R14 K3       ; R14 := string
124 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["0x7B782033"]
125 [-]: MOVE      R15 R0       ; R15 := R0
126 [-]: ADD       R16 R10 K5   ; R16 := R10 + 1
127 [-]: CALL      R14 3 0      ; R14,... := R14(R15,R16)
128 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
129 [-]: MOVE      R6 R12       ; R6 := R12
130 [-]: GETGLOBAL R12 K29      ; R12 := 0x7C282057
131 [-]: GETUPVAL  R13 U3       ; R13 := U3
132 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["OMEGA_STOREITEM_PREFIX"]
133 [-]: GETGLOBAL R14 K3       ; R14 := string
134 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["0x7B782033"]
135 [-]: MOVE      R15 R0       ; R15 := R0
136 [-]: LOADK     R16 K31      ; R16 := 5
137 [-]: SUB       R17 R10 K5   ; R17 := R10 - 1
138 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
139 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
140 [-]: CALL      R12 2 2      ; R12 := R12(R13)
141 [-]: MOVE      R5 R12       ; R5 := R12
142 [-]: JMP       868          ; PC := 868
143 [-]: GETGLOBAL R12 K3       ; R12 := string
144 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["0xBDD0D625"]
145 [-]: GETGLOBAL R13 K3       ; R13 := string
146 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["0x7B782033"]
147 [-]: MOVE      R14 R0       ; R14 := R0
148 [-]: LOADK     R15 K5       ; R15 := 1
149 [-]: LOADK     R16 K31      ; R16 := 5
150 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
151 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
152 [-]: EQ        0 R12 K34    ; if R12 ~= "song-" then PC := 246
153 [-]: JMP       246          ; PC := 246
154 [-]: GETGLOBAL R12 K3       ; R12 := string
155 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0xDE44F664"]
156 [-]: MOVE      R13 R0       ; R13 := R0
157 [-]: LOADK     R14 K15      ; R14 := ":"
158 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
159 [-]: ADD       R12 R12 K5   ; R12 := R12 + 1
160 [-]: GETGLOBAL R13 K3       ; R13 := string
161 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["0xDE44F664"]
162 [-]: MOVE      R14 R0       ; R14 := R0
163 [-]: LOADK     R15 K15      ; R15 := ":"
164 [-]: MOVE      R16 R12      ; R16 := R12
165 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
166 [-]: GETGLOBAL R14 K3       ; R14 := string
167 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["0x7B782033"]
168 [-]: MOVE      R15 R0       ; R15 := R0
169 [-]: MOVE      R16 R12      ; R16 := R12
170 [-]: SUB       R17 R13 K5   ; R17 := R13 - 1
171 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
172 [-]: NEWTABLE  R15 0 0      ; R15 := {}
173 [-]: LOADK     R16 K35      ; R16 := 0
174 [-]: GETGLOBAL R17 K36      ; R17 := Lotus_Game
175 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["MAX_NoteType"]
176 [-]: SUB       R17 R17 K5   ; R17 := R17 - 1
177 [-]: LOADK     R18 K5       ; R18 := 1
178 [-]: FORPREP   R16 216      ; R16 -= R18; PC := 216
179 [-]: GETGLOBAL R20 K3       ; R20 := string
180 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["0xDE44F664"]
181 [-]: MOVE      R21 R0       ; R21 := R0
182 [-]: LOADK     R22 K15      ; R22 := ":"
183 [-]: ADD       R23 R13 K5   ; R23 := R13 + 1
184 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
185 [-]: EQ        0 R20 K9     ; if R20 ~= nil then PC := 192
186 [-]: JMP       192          ; PC := 192
187 [-]: GETGLOBAL R21 K3       ; R21 := string
188 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["0xC6772A8A"]
189 [-]: MOVE      R22 R0       ; R22 := R0
190 [-]: CALL      R21 2 2      ; R21 := R21(R22)
191 [-]: ADD       R20 R21 K5   ; R20 := R21 + 1
192 [-]: GETGLOBAL R21 K39      ; R21 := 0x2C00D429
193 [-]: GETUPVAL  R22 U3       ; R22 := U3
194 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["STEP_SEQUENCER_NOTEPACK_PREFIX"]
195 [-]: GETGLOBAL R23 K3       ; R23 := string
196 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["0x7B782033"]
197 [-]: MOVE      R24 R0       ; R24 := R0
198 [-]: ADD       R25 R13 K5   ; R25 := R13 + 1
199 [-]: SUB       R26 R20 K5   ; R26 := R20 - 1
200 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
201 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
202 [-]: CALL      R21 2 2      ; R21 := R21(R22)
203 [-]: GETGLOBAL R22 K24      ; R22 := 0x400E7765
204 [-]: MOVE      R23 R21      ; R23 := R21
205 [-]: CALL      R22 2 2      ; R22 := R22(R23)
206 [-]: TEST      R22 1        ; if R22 then PC := 215
207 [-]: JMP       215          ; PC := 215
208 [-]: GETGLOBAL R22 K41      ; R22 := table
209 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["0xE6450C9D"]
210 [-]: MOVE      R23 R15      ; R23 := R15
211 [-]: NEWTABLE  R24 0 2      ; R24 := {}
212 [-]: SETTABLE  R24 K43 R19  ; R24["NoteType"] := R19
213 [-]: SETTABLE  R24 K44 R21  ; R24["NotePack"] := R21
214 [-]: CALL      R22 3 1      ; R22(R23,R24)
215 [-]: MOVE      R13 R20      ; R13 := R20
216 [-]: FORLOOP   R16 179      ; R16 += R18; if R16 <= R17 then begin PC := 179; R19 := R16 end
217 [-]: GETGLOBAL R22 K17      ; R22 := _T
218 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["ComposeToolOpen"]
219 [-]: EQ        1 R22 K9     ; if R22 == nil then PC := 232
220 [-]: JMP       232          ; PC := 232
221 [-]: GETUPVAL  R22 U3       ; R22 := U3
222 [-]: NEWTABLE  R23 0 2      ; R23 := {}
223 [-]: SETTABLE  R23 K47 R15  ; R23["NotePackInfo"] := R15
224 [-]: SETTABLE  R23 K48 R14  ; R23["FingerPrint"] := R14
225 [-]: SETTABLE  R22 K46 R23  ; R22["StepSequencerPendingRequest"] := R23
226 [-]: GETUPVAL  R22 U4       ; R22 := U4
227 [-]: GETTABLE  R22 R22 K49  ; R22 := R22["0x1C988750"]
228 [-]: LOADK     R23 K50      ; R23 := "/Lotus/Language/Menu/Composition_ConfirmLoad"
229 [-]: LOADK     R24 K51      ; R24 := "ConfirmLoadSong"
230 [-]: CALL      R22 3 1      ; R22(R23,R24)
231 [-]: JMP       868          ; PC := 868
232 [-]: GETGLOBAL R22 K1       ; R22 := _G
233 [-]: GETTABLE  R22 R22 K52  ; R22 := R22["UIMovie_DetailedPurchaseDialog"]
234 [-]: EQ        1 R22 K9     ; if R22 == nil then PC := 868
235 [-]: JMP       868          ; PC := 868
236 [-]: GETGLOBAL R22 K29      ; R22 := 0x7C282057
237 [-]: GETUPVAL  R23 U3       ; R23 := U3
238 [-]: GETTABLE  R23 R23 K53  ; R23 := R23["STEP_SEQUENCER_PREVIEW"]
239 [-]: CALL      R22 2 2      ; R22 := R22(R23)
240 [-]: MOVE      R5 R22       ; R5 := R22
241 [-]: NEWTABLE  R22 0 2      ; R22 := {}
242 [-]: SETTABLE  R22 K47 R15  ; R22["NotePackInfo"] := R15
243 [-]: SETTABLE  R22 K48 R14  ; R22["FingerPrint"] := R14
244 [-]: MOVE      R7 R22       ; R7 := R22
245 [-]: JMP       868          ; PC := 868
246 [-]: GETGLOBAL R22 K3       ; R22 := string
247 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["0xBDD0D625"]
248 [-]: GETGLOBAL R23 K3       ; R23 := string
249 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["0x7B782033"]
250 [-]: MOVE      R24 R0       ; R24 := R0
251 [-]: LOADK     R25 K5       ; R25 := 1
252 [-]: LOADK     R26 K27      ; R26 := 4
253 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
254 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
255 [-]: EQ        1 R22 K54    ; if R22 == "zaw-" then PC := 301
256 [-]: JMP       301          ; PC := 301
257 [-]: GETGLOBAL R22 K3       ; R22 := string
258 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["0xBDD0D625"]
259 [-]: GETGLOBAL R23 K3       ; R23 := string
260 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["0x7B782033"]
261 [-]: MOVE      R24 R0       ; R24 := R0
262 [-]: LOADK     R25 K5       ; R25 := 1
263 [-]: LOADK     R26 K27      ; R26 := 4
264 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
265 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
266 [-]: EQ        1 R22 K55    ; if R22 == "amp-" then PC := 301
267 [-]: JMP       301          ; PC := 301
268 [-]: GETGLOBAL R22 K3       ; R22 := string
269 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["0xBDD0D625"]
270 [-]: GETGLOBAL R23 K3       ; R23 := string
271 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["0x7B782033"]
272 [-]: MOVE      R24 R0       ; R24 := R0
273 [-]: LOADK     R25 K5       ; R25 := 1
274 [-]: LOADK     R26 K27      ; R26 := 4
275 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
276 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
277 [-]: EQ        1 R22 K56    ; if R22 == "moa-" then PC := 301
278 [-]: JMP       301          ; PC := 301
279 [-]: GETGLOBAL R22 K3       ; R22 := string
280 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["0xBDD0D625"]
281 [-]: GETGLOBAL R23 K3       ; R23 := string
282 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["0x7B782033"]
283 [-]: MOVE      R24 R0       ; R24 := R0
284 [-]: LOADK     R25 K5       ; R25 := 1
285 [-]: LOADK     R26 K27      ; R26 := 4
286 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
287 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
288 [-]: EQ        1 R22 K57    ; if R22 == "kdr-" then PC := 301
289 [-]: JMP       301          ; PC := 301
290 [-]: GETGLOBAL R22 K3       ; R22 := string
291 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["0xBDD0D625"]
292 [-]: GETGLOBAL R23 K3       ; R23 := string
293 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["0x7B782033"]
294 [-]: MOVE      R24 R0       ; R24 := R0
295 [-]: LOADK     R25 K5       ; R25 := 1
296 [-]: LOADK     R26 K27      ; R26 := 4
297 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
298 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
299 [-]: EQ        0 R22 K58    ; if R22 ~= "kit-" then PC := 689
300 [-]: JMP       689          ; PC := 689
301 [-]: GETUPVAL  R22 U5       ; R22 := U5
302 [-]: GETTABLE  R5 R22 K59   ; R5 := R22["zawStoreItem"]
303 [-]: GETGLOBAL R22 K3       ; R22 := string
304 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["0x7B782033"]
305 [-]: GETGLOBAL R23 K3       ; R23 := string
306 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["0xBDD0D625"]
307 [-]: MOVE      R24 R0       ; R24 := R0
308 [-]: CALL      R23 2 2      ; R23 := R23(R24)
309 [-]: LOADK     R24 K5       ; R24 := 1
310 [-]: LOADK     R25 K27      ; R25 := 4
311 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
312 [-]: EQ        0 R22 K55    ; if R22 ~= "amp-" then PC := 317
313 [-]: JMP       317          ; PC := 317
314 [-]: GETUPVAL  R22 U5       ; R22 := U5
315 [-]: GETTABLE  R5 R22 K60   ; R5 := R22["ampStoreItem"]
316 [-]: JMP       357          ; PC := 357
317 [-]: GETGLOBAL R22 K3       ; R22 := string
318 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["0x7B782033"]
319 [-]: GETGLOBAL R23 K3       ; R23 := string
320 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["0xBDD0D625"]
321 [-]: MOVE      R24 R0       ; R24 := R0
322 [-]: CALL      R23 2 2      ; R23 := R23(R24)
323 [-]: LOADK     R24 K5       ; R24 := 1
324 [-]: LOADK     R25 K27      ; R25 := 4
325 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
326 [-]: EQ        0 R22 K56    ; if R22 ~= "moa-" then PC := 331
327 [-]: JMP       331          ; PC := 331
328 [-]: GETUPVAL  R22 U5       ; R22 := U5
329 [-]: GETTABLE  R5 R22 K61   ; R5 := R22["moaPetStoreItem"]
330 [-]: JMP       357          ; PC := 357
331 [-]: GETGLOBAL R22 K3       ; R22 := string
332 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["0x7B782033"]
333 [-]: GETGLOBAL R23 K3       ; R23 := string
334 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["0xBDD0D625"]
335 [-]: MOVE      R24 R0       ; R24 := R0
336 [-]: CALL      R23 2 2      ; R23 := R23(R24)
337 [-]: LOADK     R24 K5       ; R24 := 1
338 [-]: LOADK     R25 K27      ; R25 := 4
339 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
340 [-]: EQ        0 R22 K57    ; if R22 ~= "kdr-" then PC := 345
341 [-]: JMP       345          ; PC := 345
342 [-]: GETUPVAL  R22 U5       ; R22 := U5
343 [-]: GETTABLE  R5 R22 K62   ; R5 := R22["kdriveStoreItem"]
344 [-]: JMP       357          ; PC := 357
345 [-]: GETGLOBAL R22 K3       ; R22 := string
346 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["0x7B782033"]
347 [-]: GETGLOBAL R23 K3       ; R23 := string
348 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["0xBDD0D625"]
349 [-]: MOVE      R24 R0       ; R24 := R0
350 [-]: CALL      R23 2 2      ; R23 := R23(R24)
351 [-]: LOADK     R24 K5       ; R24 := 1
352 [-]: LOADK     R25 K27      ; R25 := 4
353 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
354 [-]: EQ        0 R22 K58    ; if R22 ~= "kit-" then PC := 357
355 [-]: JMP       357          ; PC := 357
356 [-]: LOADNIL   R5 R5        ; R5 := nil
357 [-]: GETGLOBAL R22 K3       ; R22 := string
358 [-]: GETTABLE  R22 R22 K10  ; R22 := R22["0xDE44F664"]
359 [-]: MOVE      R23 R0       ; R23 := R0
360 [-]: LOADK     R24 K15      ; R24 := ":"
361 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
362 [-]: ADD       R22 R22 K5   ; R22 := R22 + 1
363 [-]: LOADNIL   R23 R23      ; R23 := nil
364 [-]: GETGLOBAL R24 K3       ; R24 := string
365 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["0x7B782033"]
366 [-]: GETGLOBAL R25 K3       ; R25 := string
367 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["0xBDD0D625"]
368 [-]: MOVE      R26 R0       ; R26 := R0
369 [-]: CALL      R25 2 2      ; R25 := R25(R26)
370 [-]: LOADK     R26 K5       ; R26 := 1
371 [-]: LOADK     R27 K27      ; R27 := 4
372 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
373 [-]: EQ        0 R24 K56    ; if R24 ~= "moa-" then PC := 401
374 [-]: JMP       401          ; PC := 401
375 [-]: GETGLOBAL R24 K63      ; R24 := 0x86F0FCA
376 [-]: GETGLOBAL R25 K3       ; R25 := string
377 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["0x7B782033"]
378 [-]: MOVE      R26 R0       ; R26 := R0
379 [-]: MOVE      R27 R22      ; R27 := R22
380 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
381 [-]: GETGLOBAL R26 K64      ; R26 := modularMoaPetLegs
382 [-]: LEN       R26 R26      ; R26 := # R26
383 [-]: GETGLOBAL R27 K65      ; R27 := modularMoaPetHeads
384 [-]: LEN       R27 R27      ; R27 := # R27
385 [-]: GETGLOBAL R28 K66      ; R28 := modularMoaPetEngines
386 [-]: LEN       R28 R28      ; R28 := # R28
387 [-]: GETGLOBAL R29 K67      ; R29 := modularMoaPetPayloads
388 [-]: LEN       R29 R29      ; R29 := # R29
389 [-]: CALL      R24 6 2      ; R24 := R24(R25,R26,R27,R28,R29)
390 [-]: MOVE      R23 R24      ; R23 := R24
391 [-]: GETUPVAL  R24 U6       ; R24 := U6
392 [-]: GETGLOBAL R25 K68      ; R25 := 0xD1E7609B
393 [-]: LOADK     R26 K69      ; R26 := ","
394 [-]: MOVE      R27 R23      ; R27 := R23
395 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
396 [-]: GETGLOBAL R26 K36      ; R26 := Lotus_Game
397 [-]: GETTABLE  R26 R26 K70  ; R26 := R26["MWC_MOA_PET"]
398 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
399 [-]: MOVE      R8 R24       ; R8 := R24
400 [-]: JMP       529          ; PC := 529
401 [-]: GETGLOBAL R24 K3       ; R24 := string
402 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["0x7B782033"]
403 [-]: GETGLOBAL R25 K3       ; R25 := string
404 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["0xBDD0D625"]
405 [-]: MOVE      R26 R0       ; R26 := R0
406 [-]: CALL      R25 2 2      ; R25 := R25(R26)
407 [-]: LOADK     R26 K5       ; R26 := 1
408 [-]: LOADK     R27 K27      ; R27 := 4
409 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
410 [-]: EQ        0 R24 K57    ; if R24 ~= "kdr-" then PC := 438
411 [-]: JMP       438          ; PC := 438
412 [-]: GETGLOBAL R24 K63      ; R24 := 0x86F0FCA
413 [-]: GETGLOBAL R25 K3       ; R25 := string
414 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["0x7B782033"]
415 [-]: MOVE      R26 R0       ; R26 := R0
416 [-]: MOVE      R27 R22      ; R27 := R22
417 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
418 [-]: GETGLOBAL R26 K71      ; R26 := modularKDriveDecks
419 [-]: LEN       R26 R26      ; R26 := # R26
420 [-]: GETGLOBAL R27 K72      ; R27 := modularKDriveEngines
421 [-]: LEN       R27 R27      ; R27 := # R27
422 [-]: GETGLOBAL R28 K73      ; R28 := modularKDriveFronts
423 [-]: LEN       R28 R28      ; R28 := # R28
424 [-]: GETGLOBAL R29 K74      ; R29 := modularKDriveJets
425 [-]: LEN       R29 R29      ; R29 := # R29
426 [-]: CALL      R24 6 2      ; R24 := R24(R25,R26,R27,R28,R29)
427 [-]: MOVE      R23 R24      ; R23 := R24
428 [-]: GETUPVAL  R24 U6       ; R24 := U6
429 [-]: GETGLOBAL R25 K68      ; R25 := 0xD1E7609B
430 [-]: LOADK     R26 K69      ; R26 := ","
431 [-]: MOVE      R27 R23      ; R27 := R23
432 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
433 [-]: GETGLOBAL R26 K36      ; R26 := Lotus_Game
434 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["MWC_HOVERBOARD"]
435 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
436 [-]: MOVE      R8 R24       ; R8 := R24
437 [-]: JMP       529          ; PC := 529
438 [-]: GETGLOBAL R24 K3       ; R24 := string
439 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["0x7B782033"]
440 [-]: GETGLOBAL R25 K3       ; R25 := string
441 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["0xBDD0D625"]
442 [-]: MOVE      R26 R0       ; R26 := R0
443 [-]: CALL      R25 2 2      ; R25 := R25(R26)
444 [-]: LOADK     R26 K5       ; R26 := 1
445 [-]: LOADK     R27 K27      ; R27 := 4
446 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
447 [-]: EQ        0 R24 K55    ; if R24 ~= "amp-" then PC := 473
448 [-]: JMP       473          ; PC := 473
449 [-]: GETGLOBAL R24 K63      ; R24 := 0x86F0FCA
450 [-]: GETGLOBAL R25 K3       ; R25 := string
451 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["0x7B782033"]
452 [-]: MOVE      R26 R0       ; R26 := R0
453 [-]: MOVE      R27 R22      ; R27 := R22
454 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
455 [-]: GETGLOBAL R26 K76      ; R26 := ampBarrels
456 [-]: LEN       R26 R26      ; R26 := # R26
457 [-]: GETGLOBAL R27 K77      ; R27 := ampChasis
458 [-]: LEN       R27 R27      ; R27 := # R27
459 [-]: GETGLOBAL R28 K78      ; R28 := ampGrips
460 [-]: LEN       R28 R28      ; R28 := # R28
461 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
462 [-]: MOVE      R23 R24      ; R23 := R24
463 [-]: GETUPVAL  R24 U6       ; R24 := U6
464 [-]: GETGLOBAL R25 K68      ; R25 := 0xD1E7609B
465 [-]: LOADK     R26 K69      ; R26 := ","
466 [-]: MOVE      R27 R23      ; R27 := R23
467 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
468 [-]: GETGLOBAL R26 K36      ; R26 := Lotus_Game
469 [-]: GETTABLE  R26 R26 K79  ; R26 := R26["MWC_AMP"]
470 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
471 [-]: MOVE      R8 R24       ; R8 := R24
472 [-]: JMP       529          ; PC := 529
473 [-]: GETGLOBAL R24 K3       ; R24 := string
474 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["0x7B782033"]
475 [-]: GETGLOBAL R25 K3       ; R25 := string
476 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["0xBDD0D625"]
477 [-]: MOVE      R26 R0       ; R26 := R0
478 [-]: CALL      R25 2 2      ; R25 := R25(R26)
479 [-]: LOADK     R26 K5       ; R26 := 1
480 [-]: LOADK     R27 K27      ; R27 := 4
481 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
482 [-]: EQ        0 R24 K58    ; if R24 ~= "kit-" then PC := 508
483 [-]: JMP       508          ; PC := 508
484 [-]: GETGLOBAL R24 K63      ; R24 := 0x86F0FCA
485 [-]: GETGLOBAL R25 K3       ; R25 := string
486 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["0x7B782033"]
487 [-]: MOVE      R26 R0       ; R26 := R0
488 [-]: MOVE      R27 R22      ; R27 := R22
489 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
490 [-]: GETGLOBAL R26 K80      ; R26 := modularGunHandles
491 [-]: LEN       R26 R26      ; R26 := # R26
492 [-]: GETGLOBAL R27 K81      ; R27 := modularGunBarrels
493 [-]: LEN       R27 R27      ; R27 := # R27
494 [-]: GETGLOBAL R28 K82      ; R28 := modularGunClips
495 [-]: LEN       R28 R28      ; R28 := # R28
496 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
497 [-]: MOVE      R23 R24      ; R23 := R24
498 [-]: GETUPVAL  R24 U6       ; R24 := U6
499 [-]: GETGLOBAL R25 K68      ; R25 := 0xD1E7609B
500 [-]: LOADK     R26 K69      ; R26 := ","
501 [-]: MOVE      R27 R23      ; R27 := R23
502 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
503 [-]: GETGLOBAL R26 K36      ; R26 := Lotus_Game
504 [-]: GETTABLE  R26 R26 K83  ; R26 := R26["MWC_PRIMARY"]
505 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
506 [-]: MOVE      R8 R24       ; R8 := R24
507 [-]: JMP       529          ; PC := 529
508 [-]: GETGLOBAL R24 K63      ; R24 := 0x86F0FCA
509 [-]: GETGLOBAL R25 K3       ; R25 := string
510 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["0x7B782033"]
511 [-]: MOVE      R26 R0       ; R26 := R0
512 [-]: MOVE      R27 R22      ; R27 := R22
513 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
514 [-]: GETGLOBAL R26 K84      ; R26 := modularStrikes
515 [-]: LEN       R26 R26      ; R26 := # R26
516 [-]: GETGLOBAL R27 K85      ; R27 := modularGrips
517 [-]: LEN       R27 R27      ; R27 := # R27
518 [-]: GETGLOBAL R28 K86      ; R28 := modularLinks
519 [-]: LEN       R28 R28      ; R28 := # R28
520 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
521 [-]: MOVE      R23 R24      ; R23 := R24
522 [-]: GETUPVAL  R24 U6       ; R24 := U6
523 [-]: GETGLOBAL R25 K68      ; R25 := 0xD1E7609B
524 [-]: LOADK     R26 K69      ; R26 := ","
525 [-]: MOVE      R27 R23      ; R27 := R23
526 [-]: CALL      R25 3 0      ; R25,... := R25(R26,R27)
527 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
528 [-]: MOVE      R8 R24       ; R8 := R24
529 [-]: EQ        1 R23 K25    ; if R23 == "" then PC := 868
530 [-]: JMP       868          ; PC := 868
531 [-]: EQ        1 R8 K9      ; if R8 == nil then PC := 868
532 [-]: JMP       868          ; PC := 868
533 [-]: GETGLOBAL R24 K3       ; R24 := string
534 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["0x7B782033"]
535 [-]: MOVE      R25 R0       ; R25 := R0
536 [-]: LOADK     R26 K31      ; R26 := 5
537 [-]: SUB       R27 R22 K12  ; R27 := R22 - 2
538 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
539 [-]: SETTABLE  R8 K87 R24   ; R8["Name"] := R24
540 [-]: EQ        0 R5 K9      ; if R5 ~= nil then PC := 868
541 [-]: JMP       868          ; PC := 868
542 [-]: GETGLOBAL R24 K36      ; R24 := Lotus_Game
543 [-]: GETTABLE  R24 R24 K88  ; R24 := R24["MWC_INVALID"]
544 [-]: LOADK     R25 K5       ; R25 := 1
545 [-]: GETTABLE  R26 R8 K89   ; R26 := R8["Parts"]
546 [-]: LEN       R26 R26      ; R26 := # R26
547 [-]: LOADK     R27 K5       ; R27 := 1
548 [-]: FORPREP   R25 569      ; R25 -= R27; PC := 569
549 [-]: GETTABLE  R29 R8 K89   ; R29 := R8["Parts"]
550 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
551 [-]: SELF      R29 R29 K90  ; R30 := R29; R29 := R29["0x8B598ED4"]
552 [-]: GETGLOBAL R31 K91      ; R31 := gLotusGunHandleType
553 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
554 [-]: TEST      R29 0        ; if not R29 then PC := 569
555 [-]: JMP       569          ; PC := 569
556 [-]: GETTABLE  R29 R8 K89   ; R29 := R8["Parts"]
557 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
558 [-]: SELF      R29 R29 K90  ; R30 := R29; R29 := R29["0x8B598ED4"]
559 [-]: GETGLOBAL R31 K92      ; R31 := gLotusGunPrimaryHandleType
560 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
561 [-]: TEST      R29 0        ; if not R29 then PC := 566
562 [-]: JMP       566          ; PC := 566
563 [-]: GETGLOBAL R29 K36      ; R29 := Lotus_Game
564 [-]: GETTABLE  R24 R29 K83  ; R24 := R29["MWC_PRIMARY"]
565 [-]: JMP       570          ; PC := 570
566 [-]: GETGLOBAL R29 K36      ; R29 := Lotus_Game
567 [-]: GETTABLE  R24 R29 K93  ; R24 := R29["MWC_SECONDARY"]
568 [-]: JMP       570          ; PC := 570
569 [-]: FORLOOP   R25 549      ; R25 += R27; if R25 <= R26 then begin PC := 549; R28 := R25 end
570 [-]: GETGLOBAL R29 K36      ; R29 := Lotus_Game
571 [-]: GETTABLE  R29 R29 K88  ; R29 := R29["MWC_INVALID"]
572 [-]: EQ        1 R24 R29    ; if R24 == R29 then PC := 868
573 [-]: JMP       868          ; PC := 868
574 [-]: LOADK     R29 K5       ; R29 := 1
575 [-]: GETTABLE  R30 R8 K89   ; R30 := R8["Parts"]
576 [-]: LEN       R30 R30      ; R30 := # R30
577 [-]: LOADK     R31 K5       ; R31 := 1
578 [-]: FORPREP   R29 687      ; R29 -= R31; PC := 687
579 [-]: GETTABLE  R33 R8 K89   ; R33 := R8["Parts"]
580 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
581 [-]: SELF      R33 R33 K90  ; R34 := R33; R33 := R33["0x8B598ED4"]
582 [-]: GETGLOBAL R35 K94      ; R35 := gLotusGunBarrelType
583 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
584 [-]: TEST      R33 0        ; if not R33 then PC := 687
585 [-]: JMP       687          ; PC := 687
586 [-]: GETGLOBAL R33 K29      ; R33 := 0x7C282057
587 [-]: GETTABLE  R34 R8 K89   ; R34 := R8["Parts"]
588 [-]: GETTABLE  R34 R34 R32  ; R34 := R34[R32]
589 [-]: CALL      R33 2 2      ; R33 := R33(R34)
590 [-]: SELF      R34 R33 K95  ; R35 := R33; R34 := R33["0x428F2C5D"]
591 [-]: CALL      R34 2 2      ; R34 := R34(R35)
592 [-]: GETGLOBAL R35 K36      ; R35 := Lotus_Game
593 [-]: GETTABLE  R35 R35 K96  ; R35 := R35["LotusWeaponPart_GT_RIFLE"]
594 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 611
595 [-]: JMP       611          ; PC := 611
596 [-]: GETUPVAL  R35 U4       ; R35 := U4
597 [-]: GETTABLE  R35 R35 K97  ; R35 := R35["0xF81722A2"]
598 [-]: GETGLOBAL R36 K36      ; R36 := Lotus_Game
599 [-]: GETTABLE  R36 R36 K83  ; R36 := R36["MWC_PRIMARY"]
600 [-]: EQ        1 R24 R36    ; if R24 == R36 then PC := 603
601 [-]: JMP       603          ; PC := 603
602 [-]: MOVE      R36 R0       ; R36 := R0
603 [-]: MOVE      R36 R1       ; R36 := R1
604 [-]: GETUPVAL  R37 U5       ; R37 := U5
605 [-]: GETTABLE  R37 R37 K98  ; R37 := R37["primaryRifleType"]
606 [-]: GETUPVAL  R38 U5       ; R38 := U5
607 [-]: GETTABLE  R38 R38 K99  ; R38 := R38["secondaryRifleType"]
608 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
609 [-]: MOVE      R5 R35       ; R5 := R35
610 [-]: JMP       868          ; PC := 868
611 [-]: GETGLOBAL R35 K36      ; R35 := Lotus_Game
612 [-]: GETTABLE  R35 R35 K100 ; R35 := R35["LotusWeaponPart_GT_SHOTGUN"]
613 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 630
614 [-]: JMP       630          ; PC := 630
615 [-]: GETUPVAL  R35 U4       ; R35 := U4
616 [-]: GETTABLE  R35 R35 K97  ; R35 := R35["0xF81722A2"]
617 [-]: GETGLOBAL R36 K36      ; R36 := Lotus_Game
618 [-]: GETTABLE  R36 R36 K83  ; R36 := R36["MWC_PRIMARY"]
619 [-]: EQ        1 R24 R36    ; if R24 == R36 then PC := 622
620 [-]: JMP       622          ; PC := 622
621 [-]: MOVE      R36 R0       ; R36 := R0
622 [-]: MOVE      R36 R1       ; R36 := R1
623 [-]: GETUPVAL  R37 U5       ; R37 := U5
624 [-]: GETTABLE  R37 R37 K101 ; R37 := R37["primaryShotgunType"]
625 [-]: GETUPVAL  R38 U5       ; R38 := U5
626 [-]: GETTABLE  R38 R38 K102 ; R38 := R38["secondaryShotgunType"]
627 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
628 [-]: MOVE      R5 R35       ; R5 := R35
629 [-]: JMP       868          ; PC := 868
630 [-]: GETGLOBAL R35 K36      ; R35 := Lotus_Game
631 [-]: GETTABLE  R35 R35 K103 ; R35 := R35["LotusWeaponPart_GT_SNIPER"]
632 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 649
633 [-]: JMP       649          ; PC := 649
634 [-]: GETUPVAL  R35 U4       ; R35 := U4
635 [-]: GETTABLE  R35 R35 K97  ; R35 := R35["0xF81722A2"]
636 [-]: GETGLOBAL R36 K36      ; R36 := Lotus_Game
637 [-]: GETTABLE  R36 R36 K83  ; R36 := R36["MWC_PRIMARY"]
638 [-]: EQ        1 R24 R36    ; if R24 == R36 then PC := 641
639 [-]: JMP       641          ; PC := 641
640 [-]: MOVE      R36 R0       ; R36 := R0
641 [-]: MOVE      R36 R1       ; R36 := R1
642 [-]: GETUPVAL  R37 U5       ; R37 := U5
643 [-]: GETTABLE  R37 R37 K104 ; R37 := R37["primarySniperType"]
644 [-]: GETUPVAL  R38 U5       ; R38 := U5
645 [-]: GETTABLE  R38 R38 K105 ; R38 := R38["secondarySniperType"]
646 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
647 [-]: MOVE      R5 R35       ; R5 := R35
648 [-]: JMP       868          ; PC := 868
649 [-]: GETGLOBAL R35 K36      ; R35 := Lotus_Game
650 [-]: GETTABLE  R35 R35 K106 ; R35 := R35["LotusWeaponPart_GT_LAUNCHER"]
651 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 668
652 [-]: JMP       668          ; PC := 668
653 [-]: GETUPVAL  R35 U4       ; R35 := U4
654 [-]: GETTABLE  R35 R35 K97  ; R35 := R35["0xF81722A2"]
655 [-]: GETGLOBAL R36 K36      ; R36 := Lotus_Game
656 [-]: GETTABLE  R36 R36 K83  ; R36 := R36["MWC_PRIMARY"]
657 [-]: EQ        1 R24 R36    ; if R24 == R36 then PC := 660
658 [-]: JMP       660          ; PC := 660
659 [-]: MOVE      R36 R0       ; R36 := R0
660 [-]: MOVE      R36 R1       ; R36 := R1
661 [-]: GETUPVAL  R37 U5       ; R37 := U5
662 [-]: GETTABLE  R37 R37 K107 ; R37 := R37["primaryLauncherType"]
663 [-]: GETUPVAL  R38 U5       ; R38 := U5
664 [-]: GETTABLE  R38 R38 K108 ; R38 := R38["secondaryLauncherType"]
665 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
666 [-]: MOVE      R5 R35       ; R5 := R35
667 [-]: JMP       868          ; PC := 868
668 [-]: GETGLOBAL R35 K36      ; R35 := Lotus_Game
669 [-]: GETTABLE  R35 R35 K109 ; R35 := R35["LotusWeaponPart_GT_BEAM"]
670 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 868
671 [-]: JMP       868          ; PC := 868
672 [-]: GETUPVAL  R35 U4       ; R35 := U4
673 [-]: GETTABLE  R35 R35 K97  ; R35 := R35["0xF81722A2"]
674 [-]: GETGLOBAL R36 K36      ; R36 := Lotus_Game
675 [-]: GETTABLE  R36 R36 K83  ; R36 := R36["MWC_PRIMARY"]
676 [-]: EQ        1 R24 R36    ; if R24 == R36 then PC := 679
677 [-]: JMP       679          ; PC := 679
678 [-]: MOVE      R36 R0       ; R36 := R0
679 [-]: MOVE      R36 R1       ; R36 := R1
680 [-]: GETUPVAL  R37 U5       ; R37 := U5
681 [-]: GETTABLE  R37 R37 K110 ; R37 := R37["primaryBeamType"]
682 [-]: GETUPVAL  R38 U5       ; R38 := U5
683 [-]: GETTABLE  R38 R38 K111 ; R38 := R38["secondaryBeamType"]
684 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
685 [-]: MOVE      R5 R35       ; R5 := R35
686 [-]: JMP       868          ; PC := 868
687 [-]: FORLOOP   R29 579      ; R29 += R31; if R29 <= R30 then begin PC := 579; R32 := R29 end
688 [-]: JMP       868          ; PC := 868
689 [-]: GETGLOBAL R35 K3       ; R35 := string
690 [-]: GETTABLE  R35 R35 K26  ; R35 := R35["0xBDD0D625"]
691 [-]: GETGLOBAL R36 K3       ; R36 := string
692 [-]: GETTABLE  R36 R36 K4   ; R36 := R36["0x7B782033"]
693 [-]: MOVE      R37 R0       ; R37 := R0
694 [-]: LOADK     R38 K5       ; R38 := 1
695 [-]: LOADK     R39 K31      ; R39 := 5
696 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
697 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
698 [-]: EQ        0 R35 K112   ; if R35 ~= "shzn-" then PC := 753
699 [-]: JMP       753          ; PC := 753
700 [-]: GETGLOBAL R35 K24      ; R35 := 0x400E7765
701 [-]: GETGLOBAL R36 K17      ; R36 := _T
702 [-]: GETTABLE  R36 R36 K113 ; R36 := R36["ShawzinMovie"]
703 [-]: CALL      R35 2 2      ; R35 := R35(R36)
704 [-]: TEST      R35 0        ; if not R35 then PC := 716
705 [-]: JMP       716          ; PC := 716
706 [-]: GETUPVAL  R35 U7       ; R35 := U7
707 [-]: GETGLOBAL R36 K114     ; R36 := mMovie
708 [-]: SELF      R36 R36 K115 ; R37 := R36; R36 := R36["0x5DB0BD4"]
709 [-]: LOADK     R38 K116     ; R38 := "/Lotus/Language/Menu/MustUseShawzin"
710 [-]: MOVE      R39 R0       ; R39 := R0
711 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
712 [-]: LOADK     R37 K25      ; R37 := ""
713 [-]: LOADK     R38 K5       ; R38 := 1
714 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
715 [-]: JMP       868          ; PC := 868
716 [-]: GETUPVAL  R35 U8       ; R35 := U8
717 [-]: CALL      R35 1 2      ; R35 := R35()
718 [-]: TEST      R35 1        ; if R35 then PC := 722
719 [-]: JMP       722          ; PC := 722
720 [-]: GETUPVAL  R35 U9       ; R35 := U9
721 [-]: CALL      R35 1 1      ; R35()
722 [-]: GETGLOBAL R35 K117     ; R35 := Engine
723 [-]: GETTABLE  R35 R35 K118 ; R35 := R35["0x1398DAFB"]
724 [-]: CALL      R35 1 2      ; R35 := R35()
725 [-]: TEST      R35 0        ; if not R35 then PC := 742
726 [-]: JMP       742          ; PC := 742
727 [-]: GETGLOBAL R35 K17      ; R35 := _T
728 [-]: GETTABLE  R35 R35 K113 ; R35 := R35["ShawzinMovie"]
729 [-]: SELF      R35 R35 K119 ; R36 := R35; R35 := R35["0x458F27A9"]
730 [-]: LOADK     R37 K120     ; R37 := "SetLoadedSong"
731 [-]: GETGLOBAL R38 K3       ; R38 := string
732 [-]: GETTABLE  R38 R38 K4   ; R38 := R38["0x7B782033"]
733 [-]: MOVE      R39 R0       ; R39 := R0
734 [-]: LOADK     R40 K13      ; R40 := 6
735 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
736 [-]: LOADK     R39 K121     ; R39 := ",nil,"
737 [-]: GETGLOBAL R40 K117     ; R40 := Engine
738 [-]: GETTABLE  R40 R40 K122 ; R40 := R40["CI_SELECT"]
739 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
740 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
741 [-]: JMP       868          ; PC := 868
742 [-]: GETGLOBAL R35 K17      ; R35 := _T
743 [-]: GETTABLE  R35 R35 K113 ; R35 := R35["ShawzinMovie"]
744 [-]: SELF      R35 R35 K119 ; R36 := R35; R35 := R35["0x458F27A9"]
745 [-]: LOADK     R37 K123     ; R37 := "LoadSongToMemory"
746 [-]: GETGLOBAL R38 K3       ; R38 := string
747 [-]: GETTABLE  R38 R38 K4   ; R38 := R38["0x7B782033"]
748 [-]: MOVE      R39 R0       ; R39 := R0
749 [-]: LOADK     R40 K13      ; R40 := 6
750 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
751 [-]: CALL      R35 0 1      ; R35(R36,...)
752 [-]: JMP       868          ; PC := 868
753 [-]: GETGLOBAL R35 K124     ; R35 := appearancePreviewMovie
754 [-]: LOADK     R36 K125     ; R36 := "AppearancePreviewDone"
755 [-]: GETUPVAL  R37 U10      ; R37 := U10
756 [-]: GETTABLE  R37 R37 K126 ; R37 := R37["0xA3A5E12"]
757 [-]: MOVE      R38 R0       ; R38 := R0
758 [-]: MOVE      R39 R1       ; R39 := R1
759 [-]: CALL      R37 3 3      ; R37,R38 := R37(R38,R39)
760 [-]: TEST      R37 1        ; if R37 then PC := 773
761 [-]: JMP       773          ; PC := 773
762 [-]: TEST      R38 1        ; if R38 then PC := 773
763 [-]: JMP       773          ; PC := 773
764 [-]: GETGLOBAL R35 K127     ; R35 := modPreviewMovie
765 [-]: LOADK     R36 K128     ; R36 := "ModPreviewDone"
766 [-]: GETUPVAL  R39 U10      ; R39 := U10
767 [-]: GETTABLE  R39 R39 K129 ; R39 := R39["0xE0BE627C"]
768 [-]: MOVE      R40 R0       ; R40 := R0
769 [-]: MOVE      R41 R1       ; R41 := R1
770 [-]: CALL      R39 3 3      ; R39,R40 := R39(R40,R41)
771 [-]: MOVE      R38 R40      ; R38 := R40
772 [-]: MOVE      R37 R39      ; R37 := R39
773 [-]: TEST      R37 0        ; if not R37 then PC := 837
774 [-]: JMP       837          ; PC := 837
775 [-]: GETUPVAL  R39 U11      ; R39 := U11
776 [-]: GETTABLE  R39 R39 K130 ; R39 := R39["0xC9297D51"]
777 [-]: CALL      R39 1 2      ; R39 := R39()
778 [-]: TEST      R39 0        ; if not R39 then PC := 827
779 [-]: JMP       827          ; PC := 827
780 [-]: GETGLOBAL R39 K131     ; R39 := gFlashMgr
781 [-]: SELF      R39 R39 K132 ; R40 := R39; R39 := R39["0x616DD092"]
782 [-]: GETGLOBAL R41 K39      ; R41 := 0x2C00D429
783 [-]: LOADK     R42 K133     ; R42 := "/Lotus/Interface/ColorPicker.swf"
784 [-]: CALL      R41 2 0      ; R41,... := R41(R42)
785 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
786 [-]: GETGLOBAL R40 K24      ; R40 := 0x400E7765
787 [-]: MOVE      R41 R39      ; R41 := R39
788 [-]: CALL      R40 2 2      ; R40 := R40(R41)
789 [-]: TEST      R40 1        ; if R40 then PC := 795
790 [-]: JMP       795          ; PC := 795
791 [-]: SELF      R40 R39 K119 ; R41 := R39; R40 := R39["0x458F27A9"]
792 [-]: LOADK     R42 K134     ; R42 := "Close"
793 [-]: LOADK     R43 K135     ; R43 := "true"
794 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
795 [-]: GETGLOBAL R40 K114     ; R40 := mMovie
796 [-]: SELF      R40 R40 K136 ; R41 := R40; R40 := R40["0x5FF274BB"]
797 [-]: MOVE      R42 R35      ; R42 := R35
798 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
799 [-]: MOVE      R40 R12      ; R40 := R12
800 [-]: GETGLOBAL R40 K24      ; R40 := 0x400E7765
801 [-]: GETUPVAL  R41 U12      ; R41 := U12
802 [-]: CALL      R40 2 2      ; R40 := R40(R41)
803 [-]: TEST      R40 1        ; if R40 then PC := 867
804 [-]: JMP       867          ; PC := 867
805 [-]: MOVE      R40 R1       ; R40 := R1
806 [-]: MOVE      R40 R13      ; R40 := R13
807 [-]: GETUPVAL  R40 U14      ; R40 := U14
808 [-]: MOVE      R41 R1       ; R41 := R1
809 [-]: CALL      R40 2 1      ; R40(R41)
810 [-]: GETGLOBAL R40 K17      ; R40 := _T
811 [-]: CLOSURE   R41 0        ; R41 := closure(Function #250.1)
812 [-]: MOVE      R0 R36       ; R0 := R36
813 [-]: GETUPVAL  R0 U13       ; R0 := U13
814 [-]: GETUPVAL  R0 U14       ; R0 := U14
815 [-]: SETTABLE  R40 R36 R41  ; R40[R36] := R41
816 [-]: GETUPVAL  R40 U12      ; R40 := U12
817 [-]: SELF      R40 R40 K119 ; R41 := R40; R40 := R40["0x458F27A9"]
818 [-]: LOADK     R42 K137     ; R42 := "SetOnCloseCallback"
819 [-]: MOVE      R43 R36      ; R43 := R36
820 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
821 [-]: GETUPVAL  R40 U12      ; R40 := U12
822 [-]: SELF      R40 R40 K119 ; R41 := R40; R40 := R40["0x458F27A9"]
823 [-]: LOADK     R42 K138     ; R42 := "SetLink"
824 [-]: MOVE      R43 R0       ; R43 := R0
825 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
826 [-]: JMP       867          ; PC := 867
827 [-]: GETUPVAL  R40 U7       ; R40 := U7
828 [-]: GETGLOBAL R41 K114     ; R41 := mMovie
829 [-]: SELF      R41 R41 K115 ; R42 := R41; R41 := R41["0x5DB0BD4"]
830 [-]: LOADK     R43 K139     ; R43 := "/Lotus/Language/Menu/NotAllowedInMission"
831 [-]: MOVE      R44 R0       ; R44 := R0
832 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
833 [-]: LOADK     R42 K25      ; R42 := ""
834 [-]: LOADK     R43 K5       ; R43 := 1
835 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
836 [-]: JMP       867          ; PC := 867
837 [-]: TEST      R38 0        ; if not R38 then PC := 849
838 [-]: JMP       849          ; PC := 849
839 [-]: GETUPVAL  R40 U7       ; R40 := U7
840 [-]: GETGLOBAL R41 K114     ; R41 := mMovie
841 [-]: SELF      R41 R41 K115 ; R42 := R41; R41 := R41["0x5DB0BD4"]
842 [-]: MOVE      R43 R38      ; R43 := R38
843 [-]: MOVE      R44 R0       ; R44 := R0
844 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
845 [-]: LOADK     R42 K25      ; R42 := ""
846 [-]: LOADK     R43 K5       ; R43 := 1
847 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
848 [-]: JMP       867          ; PC := 867
849 [-]: LOADK     R40 K5       ; R40 := 1
850 [-]: GETUPVAL  R41 U15      ; R41 := U15
851 [-]: LEN       R41 R41      ; R41 := # R41
852 [-]: LOADK     R42 K5       ; R42 := 1
853 [-]: FORPREP   R40 866      ; R40 -= R42; PC := 866
854 [-]: GETUPVAL  R44 U15      ; R44 := U15
855 [-]: GETTABLE  R44 R44 R43  ; R44 := R44[R43]
856 [-]: GETTABLE  R44 R44 K140 ; R44 := R44["LocTag"]
857 [-]: EQ        0 R44 R0     ; if R44 ~= R0 then PC := 866
858 [-]: JMP       866          ; PC := 866
859 [-]: GETGLOBAL R44 K29      ; R44 := 0x7C282057
860 [-]: GETUPVAL  R45 U15      ; R45 := U15
861 [-]: GETTABLE  R45 R45 R43  ; R45 := R45[R43]
862 [-]: GETTABLE  R45 R45 K141 ; R45 := R45["StoreItem"]
863 [-]: CALL      R44 2 2      ; R44 := R44(R45)
864 [-]: MOVE      R5 R44       ; R5 := R44
865 [-]: JMP       867          ; PC := 867
866 [-]: FORLOOP   R40 854      ; R40 += R42; if R40 <= R41 then begin PC := 854; R43 := R40 end
867 [-]: CLOSE     R35          ; SAVE R35,...
868 [-]: GETGLOBAL R35 K24      ; R35 := 0x400E7765
869 [-]: MOVE      R36 R5       ; R36 := R5
870 [-]: CALL      R35 2 2      ; R35 := R35(R36)
871 [-]: TEST      R35 1        ; if R35 then PC := 980
872 [-]: JMP       980          ; PC := 980
873 [-]: GETGLOBAL R35 K142     ; R35 := 0xCAA43ABB
874 [-]: SELF      R36 R5 K143  ; R37 := R5; R36 := R5["0x1B252E3C"]
875 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
876 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
877 [-]: GETGLOBAL R36 K131     ; R36 := gFlashMgr
878 [-]: SELF      R36 R36 K132 ; R37 := R36; R36 := R36["0x616DD092"]
879 [-]: GETGLOBAL R38 K1       ; R38 := _G
880 [-]: GETTABLE  R38 R38 K52  ; R38 := R38["UIMovie_DetailedPurchaseDialog"]
881 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
882 [-]: MOVE      R36 R16      ; R36 := R16
883 [-]: GETGLOBAL R36 K24      ; R36 := 0x400E7765
884 [-]: GETUPVAL  R37 U16      ; R37 := U16
885 [-]: CALL      R36 2 2      ; R36 := R36(R37)
886 [-]: TEST      R36 1        ; if R36 then PC := 893
887 [-]: JMP       893          ; PC := 893
888 [-]: GETUPVAL  R36 U16      ; R36 := U16
889 [-]: SELF      R36 R36 K119 ; R37 := R36; R36 := R36["0x458F27A9"]
890 [-]: LOADK     R38 K144     ; R38 := "HideScreen"
891 [-]: LOADK     R39 K135     ; R39 := "true"
892 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
893 [-]: GETGLOBAL R36 K114     ; R36 := mMovie
894 [-]: SELF      R36 R36 K136 ; R37 := R36; R36 := R36["0x5FF274BB"]
895 [-]: GETGLOBAL R38 K1       ; R38 := _G
896 [-]: GETTABLE  R38 R38 K52  ; R38 := R38["UIMovie_DetailedPurchaseDialog"]
897 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
898 [-]: MOVE      R36 R2       ; R36 := R2
899 [-]: EQ        1 R8 K9      ; if R8 == nil then PC := 919
900 [-]: JMP       919          ; PC := 919
901 [-]: GETGLOBAL R36 K145     ; R36 := gGameRules
902 [-]: SELF      R36 R36 K146 ; R37 := R36; R36 := R36["0xC17093D6"]
903 [-]: CALL      R36 2 2      ; R36 := R36(R37)
904 [-]: GETGLOBAL R37 K24      ; R37 := 0x400E7765
905 [-]: MOVE      R38 R36      ; R38 := R36
906 [-]: CALL      R37 2 2      ; R37 := R37(R38)
907 [-]: TEST      R37 1        ; if R37 then PC := 919
908 [-]: JMP       919          ; PC := 919
909 [-]: LOADK     R37 K147     ; R37 := "<br>"
910 [-]: GETUPVAL  R38 U17      ; R38 := U17
911 [-]: GETTABLE  R38 R38 K148 ; R38 := R38["0xC1F4383F"]
912 [-]: GETUPVAL  R39 U2       ; R39 := U2
913 [-]: GETTABLE  R40 R8 K89   ; R40 := R8["Parts"]
914 [-]: MOVE      R41 R36      ; R41 := R36
915 [-]: MOVE      R42 R1       ; R42 := R1
916 [-]: MOVE      R43 R1       ; R43 := R1
917 [-]: CALL      R38 6 2      ; R38 := R38(R39,R40,R41,R42,R43)
918 [-]: CONCAT    R9 R37 R38   ; R9 := R37 .. R38
919 [-]: SELF      R37 R5 K149  ; R38 := R5; R37 := R5["0x7D5774ED"]
920 [-]: CALL      R37 2 2      ; R37 := R37(R38)
921 [-]: TEST      R37 0        ; if not R37 then PC := 936
922 [-]: JMP       936          ; PC := 936
923 [-]: GETUPVAL  R37 U18      ; R37 := U18
924 [-]: GETTABLE  R37 R37 K150 ; R37 := R37["0x84DCC428"]
925 [-]: CALL      R37 1 2      ; R37 := R37()
926 [-]: GETUPVAL  R38 U18      ; R38 := U18
927 [-]: GETTABLE  R38 R38 K151 ; R38 := R38["UI_MODE_IN_GAME"]
928 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 936
929 [-]: JMP       936          ; PC := 936
930 [-]: GETUPVAL  R37 U18      ; R37 := U18
931 [-]: GETTABLE  R37 R37 K152 ; R37 := R37["0x9611A506"]
932 [-]: MOVE      R38 R5       ; R38 := R5
933 [-]: CALL      R37 2 2      ; R37 := R37(R38)
934 [-]: EQ        0 R37 K153   ; if R37 ~= "UNAVAILABLE" then PC := 950
935 [-]: JMP       950          ; PC := 950
936 [-]: GETGLOBAL R37 K17      ; R37 := _T
937 [-]: NEWTABLE  R38 0 1      ; R38 := {}
938 [-]: NEWTABLE  R39 0 8      ; R39 := {}
939 [-]: SETTABLE  R39 K141 R5  ; R39["StoreItem"] := R5
940 [-]: SETTABLE  R39 K156 R9  ; R39["AdditionalDesc"] := R9
941 [-]: SETTABLE  R39 K157 R8  ; R39["ModularInfo"] := R8
942 [-]: SETTABLE  R39 K158 K159; R39["CanGiftOverride"] := "0x0"
943 [-]: SETTABLE  R39 K160 K159; R39["CanPurchaseOverride"] := "0x0"
944 [-]: SETTABLE  R39 K161 R6  ; R39["UpgradeFingerprint"] := R6
945 [-]: SETTABLE  R39 K162 R7  ; R39["Song"] := R7
946 [-]: SETTABLE  R39 K163 R35 ; R39["Anchor"] := R35
947 [-]: SETTABLE  R38 K155 R39 ; R38["ITEM"] := R39
948 [-]: SETTABLE  R37 K154 R38 ; R37["marketDetailedViewParms"] := R38
949 [-]: JMP       967          ; PC := 967
950 [-]: GETGLOBAL R37 K17      ; R37 := _T
951 [-]: NEWTABLE  R38 0 3      ; R38 := {}
952 [-]: NEWTABLE  R39 0 5      ; R39 := {}
953 [-]: SETTABLE  R39 K141 R5  ; R39["StoreItem"] := R5
954 [-]: SETTABLE  R39 K156 R9  ; R39["AdditionalDesc"] := R9
955 [-]: SETTABLE  R39 K157 R8  ; R39["ModularInfo"] := R8
956 [-]: SETTABLE  R39 K161 R6  ; R39["UpgradeFingerprint"] := R6
957 [-]: GETUPVAL  R40 U18      ; R40 := U18
958 [-]: GETTABLE  R40 R40 K165 ; R40 := R40["0xF6769A9"]
959 [-]: MOVE      R41 R5       ; R41 := R5
960 [-]: CALL      R40 2 2      ; R40 := R40(R41)
961 [-]: SETTABLE  R39 K164 R40 ; R39["Sale"] := R40
962 [-]: SETTABLE  R38 K155 R39 ; R38["ITEM"] := R39
963 [-]: GETUPVAL  R39 U19      ; R39 := U19
964 [-]: SETTABLE  R38 K166 R39 ; R38["CALLBACK"] := R39
965 [-]: SETTABLE  R38 K163 R35 ; R38["Anchor"] := R35
966 [-]: SETTABLE  R37 K154 R38 ; R37["marketDetailedViewParms"] := R38
967 [-]: GETUPVAL  R37 U2       ; R37 := U2
968 [-]: SELF      R37 R37 K119 ; R38 := R37; R37 := R37["0x458F27A9"]
969 [-]: LOADK     R39 K167     ; R39 := "SetIgnoreTopMenu"
970 [-]: LOADK     R40 K135     ; R40 := "true"
971 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
972 [-]: GETUPVAL  R37 U2       ; R37 := U2
973 [-]: SELF      R37 R37 K119 ; R38 := R37; R37 := R37["0x458F27A9"]
974 [-]: LOADK     R39 K168     ; R39 := "SetExitCallback"
975 [-]: LOADK     R40 K169     ; R40 := "OnDetailedViewComplete"
976 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
977 [-]: GETUPVAL  R37 U14      ; R37 := U14
978 [-]: MOVE      R38 R1       ; R38 := R1
979 [-]: CALL      R37 2 1      ; R37(R38)
980 [-]: GETUPVAL  R37 U20      ; R37 := U20
981 [-]: GETTABLE  R37 R37 K170 ; R37 := R37["0xA28B5FDC"]
982 [-]: GETGLOBAL R38 K114     ; R38 := mMovie
983 [-]: CALL      R37 2 1      ; R37(R38)
984 [-]: RETURN    R0 1         ; return 


; Function #250.1:
;
; Name:            
; Defined at line: 11527
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: SETTABLE  R0 R1 K1     ; R0[R1] := nil
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #251:
;
; Name:            
; Defined at line: 11589
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := _G
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UISound_Focus"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: RETURN    R0 1         ; return 


; Function #252:
;
; Name:            
; Defined at line: 11593
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.UserListBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 100
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #253:
;
; Name:            
; Defined at line: 11597
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.UserListBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 50
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #254:
;
; Name:            
; Defined at line: 11601
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U2        ; R0 := U2
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
 21 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x26978121"]
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: CALL      R0 3 1       ; R0(R1,R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #255:
;
; Name:            
; Defined at line: 11611
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #256:
;
; Name:            
; Defined at line: 11615
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.EmojiBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 100
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #257:
;
; Name:            
; Defined at line: 11619
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.EmojiBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 40
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #258:
;
; Name:            
; Defined at line: 11623
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U2        ; R0 := U2
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
 21 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x26978121"]
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: CALL      R0 3 1       ; R0(R1,R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #259:
;
; Name:            
; Defined at line: 11633
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #260:
;
; Name:            
; Defined at line: 11637
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabbedChatPanel.FilterBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_color"
  5 [-]: GETGLOBAL R4 K4        ; R4 := _G
  6 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UIColor_Yellow"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #261:
;
; Name:            
; Defined at line: 11641
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabbedChatPanel.FilterBtn"
  4 [-]: LOADK     R3 K3        ; R3 := "_color"
  5 [-]: GETGLOBAL R4 K4        ; R4 := _G
  6 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UIColor_White"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #262:
;
; Name:            
; Defined at line: 11645
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x18AAE1E3"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: LOADK     R2 K2        ; R2 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 0         ; if not R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mFriendlyName"]
 23 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 24 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x5FF274BB"]
 25 [-]: GETGLOBAL R4 K6        ; R4 := chatFilterMgrMovie
 26 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 27 [-]: MOVE      R2 R2        ; R2 := R2
 28 [-]: GETGLOBAL R2 K7        ; R2 := _T
 29 [-]: CLOSURE   R3 0         ; R3 := closure(Function #262.1)
 30 [-]: MOVE      R0 R0        ; R0 := R0
 31 [-]: GETUPVAL  R0 U3        ; R0 := U3
 32 [-]: SETTABLE  R2 K8 R3     ; R2["OnChatFilterMgrClosed"] := R3
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x458F27A9"]
 35 [-]: LOADK     R4 K10       ; R4 := "SetOnCloseFunction"
 36 [-]: LOADK     R5 K8        ; R5 := "OnChatFilterMgrClosed"
 37 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 38 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mChannelType"]
 39 [-]: GETUPVAL  R3 U0        ; R3 := U0
 40 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["CHANNEL_PRIVATE_CHAT"]
 41 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 44 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 45 [-]: LOADK     R4 K14       ; R4 := "/Lotus/Language/Menu/Chat_PrivateTitle"
 46 [-]: MOVE      R5 R0        ; R5 := R0
 47 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 48 [-]: MOVE      R1 R2        ; R1 := R2
 49 [-]: GETUPVAL  R2 U2        ; R2 := U2
 50 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x458F27A9"]
 51 [-]: LOADK     R4 K15       ; R4 := "SetChannelName"
 52 [-]: MOVE      R5 R1        ; R5 := R1
 53 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 54 [-]: GETUPVAL  R2 U2        ; R2 := U2
 55 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x458F27A9"]
 56 [-]: LOADK     R4 K16       ; R4 := "SetChannel"
 57 [-]: GETGLOBAL R5 K17       ; R5 := string
 58 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["0x7B782033"]
 59 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["mChannelName"]
 60 [-]: LOADK     R7 K20       ; R7 := 1
 61 [-]: LOADK     R8 K20       ; R8 := 1
 62 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 63 [-]: CALL      R2 0 1       ; R2(R3,...)
 64 [-]: GETUPVAL  R2 U3        ; R2 := U3
 65 [-]: MOVE      R3 R1        ; R3 := R1
 66 [-]: CALL      R2 2 1       ; R2(R3)
 67 [-]: RETURN    R0 1         ; return 


; Function #262.1:
;
; Name:            
; Defined at line: 11663
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["OnChatFilterMgrClosed"] := nil
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
  4 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xC663748B"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #263:
;
; Name:            
; Defined at line: 11685
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 22
  3 [-]: JMP       22           ; PC := 22
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mFilterList"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFilterList"]
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BC31182"]
 18 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 1       ; R1(R2,...)
 22 [-]: RETURN    R0 1         ; return 


; Function #264:
;
; Name:            
; Defined at line: 11691
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mFilterList"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFilterList"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #265:
;
; Name:            
; Defined at line: 11697
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mFilterList"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFilterList"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #266:
;
; Name:            
; Defined at line: 11703
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 32
  5 [-]: JMP       32           ; PC := 32
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mInputPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 32
 11 [-]: JMP       32           ; PC := 32
 12 [-]: GETGLOBAL R0 K2        ; R0 := gFlashMgr
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x2E4559B1"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x40C7B339"]
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mInputPanel"]
 24 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xF91423B4"]
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U1        ; R1 := U1
 28 [-]: TEST      R1 0         ; if not R1 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R1 K6        ; R1 := ""
 31 [-]: MOVE      R1 R2        ; R1 := R2
 32 [-]: RETURN    R0 1         ; return 


; Function #267:
;
; Name:            
; Defined at line: 11722
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 35
  5 [-]: JMP       35           ; PC := 35
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mInputPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 35
 11 [-]: JMP       35           ; PC := 35
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mInputPanel"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xF91423B4"]
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R0 3 1       ; R0(R1,R2)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: TEST      R0 0         ; if not R0 then PC := 35
 19 [-]: JMP       35           ; PC := 35
 20 [-]: GETUPVAL  R0 U2        ; R0 := U2
 21 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xA18F392B"]
 22 [-]: GETUPVAL  R1 U3        ; R1 := U3
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: GETGLOBAL R0 K4        ; R0 := mMovie
 25 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x880196A7"]
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mInputPanel"]
 28 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mClipPath"]
 29 [-]: LOADK     R3 K7        ; R3 := "MessageBox"
 30 [-]: LOADK     R4 K8        ; R4 := "textSuggestActive"
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 33 [-]: MOVE      R0 R0        ; R0 := R0
 34 [-]: MOVE      R0 R4        ; R0 := R4
 35 [-]: RETURN    R0 1         ; return 


; Function #268:
;
; Name:            
; Defined at line: 11733
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x93B1256B
  2 [-]: LOADK     R2 K1        ; R2 := "Just pasted"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #269:
;
; Name:            
; Defined at line: 11737
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["StepSequencerPendingRequest"]
 10 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETGLOBAL R1 K5        ; R1 := _T
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["StepSequencerPendingRequest"]
 15 [-]: SETTABLE  R1 K6 R2     ; R1["ComposeToolRequest"] := R2
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SETTABLE  R1 K3 K4     ; R1["StepSequencerPendingRequest"] := nil
 18 [-]: RETURN    R0 1         ; return 


; Function #270:
;
; Name:            
; Defined at line: 11744
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 84
  5 [-]: JMP       84           ; PC := 84
  6 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: GETGLOBAL R3 K2        ; R3 := _G
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["StalkerMode"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xF81722A2"]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: LOADK     R5 K5        ; R5 := "Acquiring target..."
 16 [-]: LOADK     R6 K6        ; R6 := "Target not in mission..."
 17 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 18 [-]: MOVE      R0 R3        ; R0 := R3
 19 [-]: TEST      R2 0         ; if not R2 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETTABLE  R3 R2 K7     ; R3 := R2["customDialogFunction"]
 22 [-]: TEST      R3 0         ; if not R3 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["0x56FA6BED"]
 25 [-]: CALL      R3 1 1       ; R3()
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0xAE78D1F"]
 29 [-]: GETGLOBAL R5 K10       ; R5 := mMovie
 30 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 31 [-]: MOVE      R7 R0        ; R7 := R0
 32 [-]: MOVE      R8 R0        ; R8 := R0
 33 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 34 [-]: CALL      R3 0 1       ; R3(R4,...)
 35 [-]: GETUPVAL  R3 U2        ; R3 := U2
 36 [-]: SETTABLE  R3 K12 K13   ; R3["InProgress"] := "0x0"
 37 [-]: GETUPVAL  R3 U2        ; R3 := U2
 38 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["TempAddToChatPartners"]
 39 [-]: TEST      R3 0         ; if not R3 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 42 [-]: GETUPVAL  R4 U3        ; R4 := U3
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETUPVAL  R3 U3        ; R3 := U3
 47 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x93F34283"]
 48 [-]: GETUPVAL  R5 U2        ; R5 := U2
 49 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["PlayerName"]
 50 [-]: CALL      R3 3 1       ; R3(R4,R5)
 51 [-]: GETGLOBAL R3 K2        ; R3 := _G
 52 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["StalkerMode"]
 53 [-]: TEST      R3 0         ; if not R3 then PC := 59
 54 [-]: JMP       59           ; PC := 59
 55 [-]: TEST      R1 0         ; if not R1 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: GETUPVAL  R3 U4        ; R3 := U4
 58 [-]: CALL      R3 1 1       ; R3()
 59 [-]: GETUPVAL  R3 U5        ; R3 := U5
 60 [-]: TEST      R3 0         ; if not R3 then PC := 84
 61 [-]: JMP       84           ; PC := 84
 62 [-]: MOVE      R3 R0        ; R3 := R0
 63 [-]: MOVE      R3 R5        ; R3 := R5
 64 [-]: GETGLOBAL R3 K17       ; R3 := gMatchingService
 65 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0xA99F3BEF"]
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: TEST      R3 0         ; if not R3 then PC := 84
 68 [-]: JMP       84           ; PC := 84
 69 [-]: GETGLOBAL R3 K19       ; R3 := _T
 70 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["ScenarioSquadMembersChanged"]
 71 [-]: TEST      R3 0         ; if not R3 then PC := 84
 72 [-]: JMP       84           ; PC := 84
 73 [-]: GETGLOBAL R3 K19       ; R3 := _T
 74 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["0xC11673EA"]
 75 [-]: GETGLOBAL R4 K22       ; R4 := gPlayerProfileMgr
 76 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0x21EF7B1A"]
 77 [-]: LOADK     R6 K24       ; R6 := 0
 78 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 79 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4["0x144A28F9"]
 80 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 81 [-]: MOVE      R5 R0        ; R5 := R0
 82 [-]: MOVE      R6 R1        ; R6 := R1
 83 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 84 [-]: MOVE      R3 R0        ; R3 := R0
 85 [-]: MOVE      R3 R5        ; R3 := R5
 86 [-]: RETURN    R0 1         ; return 


; Function #271:
;
; Name:            
; Defined at line: 11777
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 13
  2 [-]: JMP       13           ; PC := 13
  3 [-]: GETGLOBAL R1 K0        ; R1 := gMatchingService
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x928F1C57"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: EQ        0 R1 K2      ; if R1 ~= "" then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/SocialOverlay_SessionJoinFail"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 16 [-]: LOADK     R5 K6        ; R5 := "/Lotus/Language/Menu/Chat_JoinSuccess"
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 19 [-]: GETUPVAL  R8 U1        ; R8 := U1
 20 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["PlayerName"]
 21 [-]: SETTABLE  R7 K7 R8     ; R7["PLAYER_NAME"] := R8
 22 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #272:
;
; Name:            
; Defined at line: 11793
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xA0FB763C"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Presence"]
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["session"]
  8 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["teamId"]
  9 [-]: LOADNIL   R5 R5        ; R5 := nil
 10 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
 11 [-]: LOADK     R7 K5        ; R7 := "OnFindSessionComplete"
 12 [-]: CALL      R1 7 3       ; R1,R2 := R1(R2,R3,R4,R5,R6,R7)
 13 [-]: GETGLOBAL R3 K6        ; R3 := 0x6A235628
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: EQ        0 R3 K7      ; if R3 ~= "string" then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xB45BBFE"]
 26 [-]: GETUPVAL  R4 U1        ; R4 := U1
 27 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Presence"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 40
 30 [-]: JMP       40           ; PC := 40
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 34 [-]: LOADK     R6 K10       ; R6 := "/Lotus/Language/Menu/Session_LeaveMission"
 35 [-]: MOVE      R7 R0        ; R7 := R0
 36 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 37 [-]: MOVE      R5 R0        ; R5 := R0
 38 [-]: CALL      R3 3 1       ; R3(R4,R5)
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: GETGLOBAL R3 K11       ; R3 := gMatchingService
 41 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xA99F3BEF"]
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: TEST      R3 0         ; if not R3 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETGLOBAL R3 K11       ; R3 := gMatchingService
 46 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1FEAD306"]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: MOVE      R3 R3        ; R3 := R3
 49 [-]: GETGLOBAL R3 K11       ; R3 := gMatchingService
 50 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x38BFBF10"]
 51 [-]: GETGLOBAL R5 K15       ; R5 := gPlayerProfileMgr
 52 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x21EF7B1A"]
 53 [-]: LOADK     R7 K17       ; R7 := 0
 54 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 55 [-]: MOVE      R6 R1        ; R6 := R1
 56 [-]: MOVE      R7 R0        ; R7 := R0
 57 [-]: GETUPVAL  R8 U1        ; R8 := U1
 58 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Presence"]
 59 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["session"]
 60 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["teamId"]
 61 [-]: LOADK     R9 K18       ; R9 := "OnJoinLobbyComplete"
 62 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 63 [-]: RETURN    R0 1         ; return 


; Function #273:
;
; Name:            
; Defined at line: 11811
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TEST      R0 1         ; if R0 then PC := 15
  2 [-]: JMP       15           ; PC := 15
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  6 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/Chat_GetPresenceFail"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: NEWTABLE  R6 0 1       ; R6 := {}
  9 [-]: GETUPVAL  R7 U1        ; R7 := U1
 10 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["PlayerName"]
 11 [-]: SETTABLE  R6 K3 R7     ; R6["PLAYER_NAME"] := R7
 12 [-]: CALL      R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 76
 19 [-]: JMP       76           ; PC := 76
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xC3FB73FF"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: LOADNIL   R2 R2        ; R2 := nil
 24 [-]: LOADK     R3 K7        ; R3 := 1
 25 [-]: LEN       R4 R1        ; R4 := # R1
 26 [-]: LOADK     R5 K7        ; R5 := 1
 27 [-]: FORPREP   R3 37        ; R3 -= R5; PC := 37
 28 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 29 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["mId"]
 30 [-]: GETUPVAL  R8 U1        ; R8 := U1
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["PlayerId"]
 32 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 35 [-]: GETTABLE  R2 R7 K10    ; R2 := R7["mPresence"]
 36 [-]: JMP       38           ; PC := 38
 37 [-]: FORLOOP   R3 28        ; R3 += R5; if R3 <= R4 then begin PC := 28; R6 := R3 end
 38 [-]: GETUPVAL  R7 U3        ; R7 := U3
 39 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xFA17D287"]
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: GETTABLE  R8 R2 K12    ; R8 := R2["session"]
 45 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["regionId"]
 46 [-]: GETGLOBAL R9 K14       ; R9 := Engine
 47 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PRIVATE"]
 48 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 58
 49 [-]: JMP       58           ; PC := 58
 50 [-]: GETUPVAL  R8 U2        ; R8 := U2
 51 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8["0x6B86A2B"]
 52 [-]: GETUPVAL  R10 U1       ; R10 := U1
 53 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["PlayerId"]
 54 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 55 [-]: TEST      R8 1         ; if R8 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: LOADK     R7 K17       ; R7 := "/Lotus/Language/Menu/SocialOverlay_SessionRequiresInvite"
 58 [-]: TEST      R7 0         ; if not R7 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: MOVE      R9 R7        ; R9 := R7
 62 [-]: CALL      R8 2 1       ; R8(R9)
 63 [-]: RETURN    R0 1         ; return 
 64 [-]: GETUPVAL  R8 U1        ; R8 := U1
 65 [-]: SELF      R9 R2 K19    ; R10 := R2; R9 := R2["0xA4269DBC"]
 66 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 67 [-]: SETTABLE  R8 K18 R9    ; R8["Presence"] := R9
 68 [-]: GETUPVAL  R8 U3        ; R8 := U3
 69 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["0xD2A5180F"]
 70 [-]: GETTABLE  R9 R2 K12    ; R9 := R2["session"]
 71 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["id"]
 72 [-]: LOADK     R10 K22      ; R10 := "OnFindSessionComplete"
 73 [-]: MOVE      R11 R0       ; R11 := R0
 74 [-]: MOVE      R12 R1       ; R12 := R1
 75 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 76 [-]: RETURN    R0 1         ; return 


; Function #274:
;
; Name:            
; Defined at line: 11850
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0xF2E044CB"]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  8 [-]: CALL      R2 0 1       ; R2(R3,...)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0xD1E7609B
 11 [-]: LOADK     R3 K2        ; R3 := ","
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 15 [-]: GETUPVAL  R4 U2        ; R4 := U2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 49
 18 [-]: JMP       49           ; PC := 49
 19 [-]: LEN       R3 R2        ; R3 := # R2
 20 [-]: EQ        0 R3 K4      ; if R3 ~= 2 then PC := 49
 21 [-]: JMP       49           ; PC := 49
 22 [-]: GETTABLE  R3 R2 K5     ; R3 := R2[1]
 23 [-]: EQ        1 R3 K6      ; if R3 == "" then PC := 49
 24 [-]: JMP       49           ; PC := 49
 25 [-]: GETTABLE  R3 R2 K4     ; R3 := R2[2]
 26 [-]: EQ        1 R3 K6      ; if R3 == "" then PC := 49
 27 [-]: JMP       49           ; PC := 49
 28 [-]: GETUPVAL  R3 U3        ; R3 := U3
 29 [-]: GETTABLE  R4 R2 K5     ; R4 := R2[1]
 30 [-]: SETTABLE  R3 K7 R4     ; R3["PlayerId"] := R4
 31 [-]: GETUPVAL  R3 U3        ; R3 := U3
 32 [-]: GETTABLE  R4 R2 K4     ; R4 := R2[2]
 33 [-]: SETTABLE  R3 K8 R4     ; R3["PlayerName"] := R4
 34 [-]: GETUPVAL  R3 U3        ; R3 := U3
 35 [-]: SETTABLE  R3 K9 K10    ; R3["TempAddToChatPartners"] := "0x1"
 36 [-]: GETUPVAL  R3 U2        ; R3 := U2
 37 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0xB821FEFD"]
 38 [-]: GETTABLE  R5 R2 K4     ; R5 := R2[2]
 39 [-]: GETTABLE  R6 R2 K5     ; R6 := R2[1]
 40 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 41 [-]: GETUPVAL  R3 U2        ; R3 := U2
 42 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xCF9CF66D"]
 43 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 44 [-]: GETUPVAL  R6 U3        ; R6 := U3
 45 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["PlayerId"]
 46 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 47 [-]: LOADK     R6 K13       ; R6 := "OnGetPresenceForJoin"
 48 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 49 [-]: RETURN    R0 1         ; return 


; Function #275:
;
; Name:            
; Defined at line: 11869
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R1 1 1       ; R1()
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 328
 11 [-]: JMP       328          ; PC := 328
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 22 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R1 R0        ; R1 := R0
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: TEST      R0 0         ; if not R0 then PC := 41
 27 [-]: JMP       41           ; PC := 41
 28 [-]: TEST      R1 0         ; if not R1 then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mInputPanel"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETUPVAL  R2 U1        ; R2 := U1
 37 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mInputPanel"]
 38 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xFEE41852"]
 39 [-]: CALL      R2 2 1       ; R2(R3)
 40 [-]: JMP       46           ; PC := 46
 41 [-]: TEST      R0 1         ; if R0 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: GETGLOBAL R2 K7        ; R2 := mMovie
 44 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x40C7B339"]
 45 [-]: CALL      R2 2 1       ; R2(R3)
 46 [-]: GETUPVAL  R2 U1        ; R2 := U1
 47 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x9717BA00"]
 48 [-]: MOVE      R4 R1        ; R4 := R1
 49 [-]: CALL      R2 3 1       ; R2(R3,R4)
 50 [-]: GETUPVAL  R2 U1        ; R2 := U1
 51 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0xDD0B0B9E"]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 54 [-]: GETUPVAL  R3 U1        ; R3 := U1
 55 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mTabMenu"]
 56 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 57 [-]: TEST      R2 1         ; if R2 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETUPVAL  R2 U1        ; R2 := U1
 60 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mTabMenu"]
 61 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0xCBF66E00"]
 62 [-]: CALL      R2 2 1       ; R2(R3)
 63 [-]: GETUPVAL  R2 U1        ; R2 := U1
 64 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x62F6283F"]
 65 [-]: CALL      R2 2 1       ; R2(R3)
 66 [-]: GETUPVAL  R2 U2        ; R2 := U2
 67 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0xF81722A2"]
 68 [-]: GETUPVAL  R3 U3        ; R3 := U3
 69 [-]: TEST      R3 1         ; if R3 then PC := 83
 70 [-]: JMP       83           ; PC := 83
 71 [-]: TEST      R0 1         ; if R0 then PC := 83
 72 [-]: JMP       83           ; PC := 83
 73 [-]: GETGLOBAL R3 K15       ; R3 := _T
 74 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["TopMenuOpen"]
 75 [-]: TEST      R3 0         ; if not R3 then PC := 85
 76 [-]: JMP       85           ; PC := 85
 77 [-]: GETUPVAL  R3 U1        ; R3 := U1
 78 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mVisualMode"]
 79 [-]: GETUPVAL  R4 U1        ; R4 := U1
 80 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["VISUAL_MODE_MENU_FULL"]
 81 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: MOVE      R3 R0        ; R3 := R0
 84 [-]: MOVE      R3 R1        ; R3 := R1
 85 [-]: LOADK     R4 K17       ; R4 := 0.60000002384186
 86 [-]: LOADK     R5 K18       ; R5 := 0
 87 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 88 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 89 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0xE7F490E3"]
 90 [-]: MOVE      R5 R2        ; R5 := R2
 91 [-]: CALL      R3 3 1       ; R3(R4,R5)
 92 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 93 [-]: GETUPVAL  R4 U4        ; R4 := U4
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: TEST      R3 0         ; if not R3 then PC := 113
 96 [-]: JMP       113          ; PC := 113
 97 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 98 [-]: GETUPVAL  R4 U5        ; R4 := U5
 99 [-]: CALL      R3 2 2       ; R3 := R3(R4)
100 [-]: TEST      R3 0         ; if not R3 then PC := 113
101 [-]: JMP       113          ; PC := 113
102 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
103 [-]: GETUPVAL  R4 U6        ; R4 := U6
104 [-]: CALL      R3 2 2       ; R3 := R3(R4)
105 [-]: TEST      R3 0         ; if not R3 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
108 [-]: GETUPVAL  R4 U7        ; R4 := U7
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: MOVE      R3 R3        ; R3 := R3
111 [-]: JMP       114          ; PC := 114
112 [-]: MOVE      R3 R0        ; R3 := R0
113 [-]: MOVE      R3 R1        ; R3 := R1
114 [-]: TESTSET   R4 R0 1      ; if R0 then PC := 132 else R4 := R0
115 [-]: JMP       132          ; PC := 132
116 [-]: GETUPVAL  R4 U1        ; R4 := U1
117 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mVisualMode"]
118 [-]: GETUPVAL  R5 U1        ; R5 := U1
119 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["VISUAL_MODE_GAMEPLAY_SIMPLE"]
120 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 131
121 [-]: JMP       131          ; PC := 131
122 [-]: GETUPVAL  R4 U1        ; R4 := U1
123 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mVisualMode"]
124 [-]: GETUPVAL  R5 U1        ; R5 := U1
125 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["VISUAL_MODE_MENU_SIMPLE"]
126 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 131
127 [-]: JMP       131          ; PC := 131
128 [-]: MOVE      R4 R3        ; R4 := R3
129 [-]: JMP       132          ; PC := 132
130 [-]: MOVE      R4 R0        ; R4 := R0
131 [-]: MOVE      R4 R1        ; R4 := R1
132 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
133 [-]: GETGLOBAL R6 K15       ; R6 := _T
134 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["SetButtonBarEnabled"]
135 [-]: CALL      R5 2 2       ; R5 := R5(R6)
136 [-]: TEST      R5 1         ; if R5 then PC := 142
137 [-]: JMP       142          ; PC := 142
138 [-]: GETGLOBAL R5 K15       ; R5 := _T
139 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["0xD7B51EC3"]
140 [-]: MOVE      R6 R4        ; R6 := R4
141 [-]: CALL      R5 2 1       ; R5(R6)
142 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
143 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x1C19D966"]
144 [-]: LOADK     R7 K25       ; R7 := "Window.TabbedChatPanel.FilterCallout"
145 [-]: LOADK     R8 K26       ; R8 := "_visible"
146 [-]: TEST      R0 1         ; if R0 then PC := 150
147 [-]: JMP       150          ; PC := 150
148 [-]: MOVE      R9 R1        ; R9 := R1
149 [-]: JMP       152          ; PC := 152
150 [-]: MOVE      R9 R0        ; R9 := R0
151 [-]: MOVE      R9 R1        ; R9 := R1
152 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
153 [-]: GETUPVAL  R5 U1        ; R5 := U1
154 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0xF771919A"]
155 [-]: CALL      R5 2 1       ; R5(R6)
156 [-]: GETUPVAL  R5 U1        ; R5 := U1
157 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mInputPanel"]
158 [-]: SELF      R5 R5 K28    ; R6 := R5; R5 := R5["0xD1D449ED"]
159 [-]: CALL      R5 2 1       ; R5(R6)
160 [-]: GETUPVAL  R5 U1        ; R5 := U1
161 [-]: SELF      R5 R5 K29    ; R6 := R5; R5 := R5["0x5528ED75"]
162 [-]: GETUPVAL  R7 U1        ; R7 := U1
163 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mInputPanel"]
164 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["mWindow"]
165 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
166 [-]: GETUPVAL  R6 U1        ; R6 := U1
167 [-]: SELF      R6 R6 K31    ; R7 := R6; R6 := R6["0x18AAE1E3"]
168 [-]: CALL      R6 2 2       ; R6 := R6(R7)
169 [-]: LOADK     R7 K32       ; R7 := 100
170 [-]: TEST      R0 1         ; if R0 then PC := 187
171 [-]: JMP       187          ; PC := 187
172 [-]: GETUPVAL  R8 U2        ; R8 := U2
173 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xF81722A2"]
174 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
175 [-]: MOVE      R10 R6       ; R10 := R6
176 [-]: CALL      R9 2 2       ; R9 := R9(R10)
177 [-]: TEST      R9 1         ; if R9 then PC := 181
178 [-]: JMP       181          ; PC := 181
179 [-]: GETTABLE  R9 R6 K33    ; R9 := R6["mHasHyperlink"]
180 [-]: JMP       183          ; PC := 183
181 [-]: MOVE      R9 R0        ; R9 := R0
182 [-]: MOVE      R9 R1        ; R9 := R1
183 [-]: LOADK     R10 K34      ; R10 := 230
184 [-]: LOADK     R11 K35      ; R11 := 175
185 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
186 [-]: MOVE      R7 R8        ; R7 := R8
187 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
188 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
189 [-]: LOADK     R10 K36      ; R10 := "Window.SendMessageBar.HideWindowBtn"
190 [-]: LOADK     R11 K26      ; R11 := "_visible"
191 [-]: MOVE      R12 R0       ; R12 := R0
192 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
193 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
194 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
195 [-]: LOADK     R10 K37      ; R10 := "Window.SendMessageBar.EmojiBtn.Callout"
196 [-]: LOADK     R11 K26      ; R11 := "_visible"
197 [-]: MOVE      R12 R0       ; R12 := R0
198 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
199 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
200 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
201 [-]: LOADK     R10 K38      ; R10 := "Window.SendMessageBar.Prompt"
202 [-]: LOADK     R11 K39      ; R11 := "_x"
203 [-]: GETUPVAL  R12 U1       ; R12 := U1
204 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["mInputPanel"]
205 [-]: GETTABLE  R12 R12 K40  ; R12 := R12["mInitPromptXPos"]
206 [-]: GETUPVAL  R13 U2       ; R13 := U2
207 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["0xF81722A2"]
208 [-]: MOVE      R14 R0       ; R14 := R0
209 [-]: LOADK     R15 K18      ; R15 := 0
210 [-]: LOADK     R16 K41      ; R16 := 25
211 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
212 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
213 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
214 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
215 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
216 [-]: LOADK     R10 K42      ; R10 := "Window.SendMessageBar.MessageBox"
217 [-]: LOADK     R11 K39      ; R11 := "_x"
218 [-]: GETUPVAL  R12 U1       ; R12 := U1
219 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["mInputPanel"]
220 [-]: GETTABLE  R12 R12 K40  ; R12 := R12["mInitPromptXPos"]
221 [-]: GETUPVAL  R13 U2       ; R13 := U2
222 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["0xF81722A2"]
223 [-]: MOVE      R14 R0       ; R14 := R0
224 [-]: LOADK     R15 K18      ; R15 := 0
225 [-]: LOADK     R16 K41      ; R16 := 25
226 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
227 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
228 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
229 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
230 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
231 [-]: LOADK     R10 K42      ; R10 := "Window.SendMessageBar.MessageBox"
232 [-]: LOADK     R11 K43      ; R11 := "_width"
233 [-]: GETTABLE  R12 R5 K44   ; R12 := R5["width"]
234 [-]: SUB       R12 R12 R7   ; R12 := R12 - R7
235 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
236 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
237 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
238 [-]: LOADK     R10 K45      ; R10 := "Window.SendMessageBar.Callout"
239 [-]: LOADK     R11 K26      ; R11 := "_visible"
240 [-]: MOVE      R12 R0       ; R12 := R0
241 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
242 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
243 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
244 [-]: LOADK     R10 K42      ; R10 := "Window.SendMessageBar.MessageBox"
245 [-]: LOADK     R11 K46      ; R11 := "enabled"
246 [-]: MOVE      R12 R0       ; R12 := R0
247 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
248 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
249 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
250 [-]: LOADK     R10 K47      ; R10 := "Window.UserPanel.Panel.LocatorBtn.Callout"
251 [-]: LOADK     R11 K26      ; R11 := "_visible"
252 [-]: MOVE      R12 R0       ; R12 := R0
253 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
254 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
255 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
256 [-]: LOADK     R10 K48      ; R10 := "Window.UserPanel.Panel.LocatorBtn"
257 [-]: LOADK     R11 K49      ; R11 := "_alpha"
258 [-]: GETUPVAL  R12 U2       ; R12 := U2
259 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["0xF81722A2"]
260 [-]: MOVE      R13 R0       ; R13 := R0
261 [-]: LOADK     R14 K50      ; R14 := 50
262 [-]: LOADK     R15 K32      ; R15 := 100
263 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
264 [-]: CALL      R8 0 1       ; R8(R9,...)
265 [-]: GETGLOBAL R8 K1        ; R8 := 0x400E7765
266 [-]: MOVE      R9 R6        ; R9 := R6
267 [-]: CALL      R8 2 2       ; R8 := R8(R9)
268 [-]: TEST      R8 1         ; if R8 then PC := 281
269 [-]: JMP       281          ; PC := 281
270 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
271 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x1C19D966"]
272 [-]: LOADK     R10 K51      ; R10 := "Window.SendMessageBar.HyperlinkBtn"
273 [-]: LOADK     R11 K26      ; R11 := "_visible"
274 [-]: TEST      R0 1         ; if R0 then PC := 278
275 [-]: JMP       278          ; PC := 278
276 [-]: GETTABLE  R12 R6 K33   ; R12 := R6["mHasHyperlink"]
277 [-]: JMP       280          ; PC := 280
278 [-]: MOVE      R12 R0       ; R12 := R0
279 [-]: MOVE      R12 R1       ; R12 := R1
280 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
281 [-]: GETGLOBAL R8 K1        ; R8 := 0x400E7765
282 [-]: GETUPVAL  R9 U1        ; R9 := U1
283 [-]: GETTABLE  R9 R9 K52    ; R9 := R9["mUserPanel"]
284 [-]: CALL      R8 2 2       ; R8 := R8(R9)
285 [-]: TEST      R8 1         ; if R8 then PC := 328
286 [-]: JMP       328          ; PC := 328
287 [-]: CLOSURE   R8 0         ; R8 := closure(Function #275.1)
288 [-]: MOVE      R0 R0        ; R0 := R0
289 [-]: GETUPVAL  R0 U2        ; R0 := U2
290 [-]: MOVE      R9 R8        ; R9 := R8
291 [-]: LOADK     R10 K53      ; R10 := "HideWindowBtn"
292 [-]: GETUPVAL  R11 U1       ; R11 := U1
293 [-]: GETTABLE  R11 R11 K52  ; R11 := R11["mUserPanel"]
294 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["mEmoteGrid"]
295 [-]: GETTABLE  R11 R11 K55  ; R11 := R11["mIsVisible"]
296 [-]: TEST      R11 1        ; if R11 then PC := 304
297 [-]: JMP       304          ; PC := 304
298 [-]: GETUPVAL  R11 U1       ; R11 := U1
299 [-]: GETTABLE  R11 R11 K52  ; R11 := R11["mUserPanel"]
300 [-]: GETTABLE  R11 R11 K56  ; R11 := R11["mListControl"]
301 [-]: GETTABLE  R11 R11 K55  ; R11 := R11["mIsVisible"]
302 [-]: MOVE      R11 R11      ; R11 := R11
303 [-]: JMP       306          ; PC := 306
304 [-]: MOVE      R11 R0       ; R11 := R0
305 [-]: MOVE      R11 R1       ; R11 := R1
306 [-]: CALL      R9 3 1       ; R9(R10,R11)
307 [-]: MOVE      R9 R8        ; R9 := R8
308 [-]: LOADK     R10 K57      ; R10 := "UserListBtn"
309 [-]: GETUPVAL  R11 U1       ; R11 := U1
310 [-]: GETTABLE  R11 R11 K52  ; R11 := R11["mUserPanel"]
311 [-]: GETTABLE  R11 R11 K56  ; R11 := R11["mListControl"]
312 [-]: GETTABLE  R11 R11 K55  ; R11 := R11["mIsVisible"]
313 [-]: CALL      R9 3 1       ; R9(R10,R11)
314 [-]: MOVE      R9 R8        ; R9 := R8
315 [-]: LOADK     R10 K58      ; R10 := "EmojiBtn"
316 [-]: GETUPVAL  R11 U1       ; R11 := U1
317 [-]: GETTABLE  R11 R11 K52  ; R11 := R11["mUserPanel"]
318 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["mEmoteGrid"]
319 [-]: GETTABLE  R11 R11 K55  ; R11 := R11["mIsVisible"]
320 [-]: CALL      R9 3 1       ; R9(R10,R11)
321 [-]: GETUPVAL  R9 U1        ; R9 := U1
322 [-]: GETTABLE  R9 R9 K52    ; R9 := R9["mUserPanel"]
323 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["mListControl"]
324 [-]: SELF      R9 R9 K59    ; R10 := R9; R9 := R9["0x51396186"]
325 [-]: CLOSURE   R11 1        ; R11 := closure(Function #275.2)
326 [-]: GETUPVAL  R0 U1        ; R0 := U1
327 [-]: CALL      R9 3 1       ; R9(R10,R11)
328 [-]: RETURN    R0 1         ; return 


; Function #275.1:
;
; Name:            
; Defined at line: 11925
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := "Window.SendMessageBar."
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  4 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  5 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x880196A7"]
  6 [-]: MOVE      R5 R2        ; R5 := R2
  7 [-]: LOADK     R6 K3        ; R6 := "Arrow"
  8 [-]: LOADK     R7 K4        ; R7 := "_visible"
  9 [-]: GETUPVAL  R8 U0        ; R8 := U0
 10 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 11 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 12 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x880196A7"]
 13 [-]: MOVE      R5 R2        ; R5 := R2
 14 [-]: LOADK     R6 K5        ; R6 := "Highlight"
 15 [-]: LOADK     R7 K4        ; R7 := "_visible"
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: TEST      R8 1         ; if R8 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: JMP       23           ; PC := 23
 21 [-]: MOVE      R8 R0        ; R8 := R0
 22 [-]: MOVE      R8 R1        ; R8 := R1
 23 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 24 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 25 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x1C19D966"]
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: LOADK     R6 K7        ; R6 := "_alpha"
 28 [-]: GETUPVAL  R7 U1        ; R7 := U1
 29 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0xF81722A2"]
 30 [-]: GETUPVAL  R8 U0        ; R8 := U0
 31 [-]: TEST      R8 1         ; if R8 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: MOVE      R8 R1        ; R8 := R1
 34 [-]: JMP       37           ; PC := 37
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: MOVE      R8 R1        ; R8 := R1
 37 [-]: LOADK     R9 K9        ; R9 := 100
 38 [-]: LOADK     R10 K10      ; R10 := 50
 39 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 40 [-]: CALL      R3 0 1       ; R3(R4,...)
 41 [-]: RETURN    R0 1         ; return 


; Function #275.2:
;
; Name:            
; Defined at line: 11937
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mListControl"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA372F64A"]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #276:
;
; Name:            
; Defined at line: 11945
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x35FF770F"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 30
  8 [-]: JMP       30           ; PC := 30
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 10 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 30
 13 [-]: JMP       30           ; PC := 30
 14 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x75ED572E"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x75ED572E"]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LE        0 R2 R1      ; if R2 > R1 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: CALL      R1 1 2       ; R1 := R1()
 26 [-]: TEST      R1 0         ; if not R1 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R1 R1        ; R1 := R1
 29 [-]: RETURN    R1 2         ; return R1
 30 [-]: RETURN    R0 1         ; return 


; Function #277:
;
; Name:            
; Defined at line: 11954
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x40AAAEBB"]
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: LOADK     R2 K2        ; R2 := 3
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #278:
;
; Name:            
; Defined at line: 11960
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCachedGuildId"]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 22
  9 [-]: JMP       22           ; PC := 22
 10 [-]: LOADK     R1 K3        ; R1 := "#C"
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCachedGuildId"]
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xA7D41027"]
 16 [-]: LOADK     R4 K5        ; R4 := ","
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: LOADK     R6 K6        ; R6 := ",,,"
 19 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #279:
;
; Name:            
; Defined at line: 11967
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xE8A299B5"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA7D41027"]
 11 [-]: LOADK     R4 K3        ; R4 := ","
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: LOADK     R6 K4        ; R6 := ",,,"
 14 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 15 [-]: MOVE      R5 R0        ; R5 := R0
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K5        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0x761CAD7D"]
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 


; Function #280:
;
; Name:            
; Defined at line: 11975
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ShowNotification"]
  3 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x761CAD7D"]
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: LOADK     R3 K4        ; R3 := "EventReminder"
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: LOADK     R5 K5        ; R5 := 8
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: RETURN    R0 1         ; return 


; Function #281:
;
; Name:            
; Defined at line: 11981
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x93A77459"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KR_NONE"]
  6 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETGLOBAL R2 K3        ; R2 := string
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x9763B71"]
 11 [-]: LOADK     R3 K5        ; R3 := 8
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: SELF      R3 R3 K0     ; R4 := R3; R3 := R3["0x93A77459"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #282:
;
; Name:            
; Defined at line: 11989
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: GETGLOBAL R4 K1        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x9763B71"]
  7 [-]: LOADK     R5 K4        ; R5 := 8
  8 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  9 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 41
 11 [-]: JMP       41           ; PC := 41
 12 [-]: GETGLOBAL R2 K5        ; R2 := 0xD1E7609B
 13 [-]: GETGLOBAL R3 K1        ; R3 := string
 14 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0x9763B71"]
 15 [-]: LOADK     R4 K4        ; R4 := 8
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: GETTABLE  R0 R2 K6     ; R0 := R2[1]
 20 [-]: GETGLOBAL R3 K7        ; R3 := 0xF595ADDE
 21 [-]: GETTABLE  R4 R2 K8     ; R4 := R2[2]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K9        ; R4 := Lotus_Game
 24 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["KR_RANK1"]
 25 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADK     R1 K11       ; R1 := "<ACCOLADE_RANK_1> "
 28 [-]: GETGLOBAL R4 K9        ; R4 := Lotus_Game
 29 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["KR_RANK2"]
 30 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: LOADK     R1 K13       ; R1 := "<ACCOLADE_RANK_2> "
 33 [-]: GETGLOBAL R4 K9        ; R4 := Lotus_Game
 34 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["KR_RANK3"]
 35 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: LOADK     R1 K15       ; R1 := "<ACCOLADE_RANK_3> "
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: GETTABLE  R5 R2 K6     ; R5 := R2[1]
 40 [-]: RETURN    R4 3         ; return R4,R5
 41 [-]: MOVE      R4 R1        ; R4 := R1
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: RETURN    R4 3         ; return R4,R5
 44 [-]: RETURN    R0 1         ; return 


