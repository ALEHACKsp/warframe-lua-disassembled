code size: 1578
code size: 124
code size: 13
code size: 35
code size: 123
code size: 13
code size: 17
code size: 20
code size: 30
code size: 142
code size: 13
code size: 114
code size: 39
code size: 27
code size: 22
code size: 12
code size: 3
code size: 60
code size: 15
code size: 37
code size: 89
code size: 58
code size: 23
code size: 255
code size: 18
code size: 28
code size: 140
code size: 226
code size: 17
code size: 416
code size: 78
code size: 6
code size: 12
code size: 4
code size: 57
code size: 140
code size: 13
code size: 61
code size: 3
code size: 3
code size: 155
code size: 3
code size: 8
code size: 50
code size: 7
code size: 18
code size: 179
code size: 131
code size: 67
code size: 252
code size: 354
code size: 46
code size: 351
code size: 6
code size: 3
code size: 27
code size: 40
code size: 24
code size: 335
code size: 38
code size: 4
code size: 16
code size: 10
code size: 16
code size: 27
code size: 39
code size: 281
code size: 726
code size: 349
code size: 216
code size: 78
code size: 26
code size: 35
code size: 42
code size: 73
code size: 64
code size: 620
code size: 22
code size: 29
code size: 66
code size: 105
code size: 198
code size: 113
code size: 149
code size: 58
code size: 17
code size: 382
code size: 30
code size: 36
code size: 41
code size: 24
code size: 111
code size: 1
code size: 39
code size: 1
code size: 7
code size: 2
code size: 19
code size: 21
code size: 66
code size: 54
code size: 18
code size: 6
code size: 15
code size: 1
code size: 3
code size: 21
code size: 274
code size: 38
code size: 26
code size: 83
code size: 42
code size: 1
code size: 32
code size: 39
code size: 1
code size: 55
code size: 63
code size: 93
code size: 25
code size: 213
code size: 88
code size: 26
code size: 133
code size: 19
code size: 44
code size: 23
code size: 111
code size: 198
code size: 718
code size: 36
code size: 926
code size: 5
code size: 8
code size: 165
code size: 3
code size: 20
code size: 34
code size: 332
code size: 35
code size: 36
code size: 19
code size: 39
code size: 1086
code size: 55
code size: 169
code size: 50
code size: 15
code size: 1280
code size: 33
code size: 49
code size: 40
code size: 51
code size: 48
code size: 33
code size: 1249
code size: 35
code size: 3
code size: 62
code size: 5
code size: 51
code size: 5
code size: 42
code size: 76
code size: 226
code size: 15
code size: 19
code size: 17
code size: 103
code size: 4
code size: 5
code size: 50
code size: 14
code size: 161
code size: 126
code size: 68
code size: 8
code size: 1573
code size: 30
code size: 36
code size: 927
code size: 27
code size: 131
code size: 27
code size: 681
code size: 62
code size: 4
code size: 17
code size: 12
code size: 11
code size: 113
code size: 6
code size: 6
code size: 145
code size: 373
code size: 6
code size: 6
code size: 17
code size: 16
code size: 9
code size: 6
code size: 7
code size: 3
code size: 3
code size: 5
code size: 3
code size: 65
code size: 215
code size: 10
code size: 3
code size: 49
code size: 5
code size: 3
code size: 4
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\lua\Lotus\Interface\MapRedux.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  244

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
  3 [-]: NEWTABLE  R8 0 0       ; R8 := {}
  4 [-]: GETGLOBAL R9 K0        ; R9 := 0x7C282057
  5 [-]: LOADK     R10 K1       ; R10 := "/Lotus/Types/Lore/PrimaryCodexManifest"
  6 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x2C00D429
  8 [-]: LOADK     R11 K3       ; R11 := "/Lotus/Types/Keys/VeyHekKey"
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: GETGLOBAL R11 K2       ; R11 := 0x2C00D429
 11 [-]: LOADK     R12 K4       ; R12 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
 12 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 13 [-]: GETGLOBAL R12 K2       ; R12 := 0x2C00D429
 14 [-]: LOADK     R13 K5       ; R13 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
 15 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 16 [-]: NEWTABLE  R13 0 8      ; R13 := {}
 17 [-]: SETTABLE  R13 K6 K7    ; R13["forceUpdate3dElements"] := "0x0"
 18 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 19 [-]: SETTABLE  R13 K8 R14   ; R13["sky"] := R14
 20 [-]: SETTABLE  R13 K9 K10   ; R13["cameraSpot"] := nil
 21 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 22 [-]: CALL      R14 1 2      ; R14 := R14()
 23 [-]: SETTABLE  R13 K11 R14  ; R13["pos"] := R14
 24 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 25 [-]: CALL      R14 1 2      ; R14 := R14()
 26 [-]: SETTABLE  R13 K13 R14  ; R13["originPos"] := R14
 27 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 28 [-]: CALL      R14 1 2      ; R14 := R14()
 29 [-]: SETTABLE  R13 K14 R14  ; R13["origFacing"] := R14
 30 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 31 [-]: CALL      R14 1 2      ; R14 := R14()
 32 [-]: SETTABLE  R13 K15 R14  ; R13["skyOrigin"] := R14
 33 [-]: SETTABLE  R13 K16 K17  ; R13["zoomLevel"] := 0
 34 [-]: LOADNIL   R14 R14      ; R14 := nil
 35 [-]: NEWTABLE  R15 0 3      ; R15 := {}
 36 [-]: SETTABLE  R15 K18 K10  ; R15["Movie"] := nil
 37 [-]: SETTABLE  R15 K19 K7   ; R15["Open"] := "0x0"
 38 [-]: SETTABLE  R15 K20 K7   ; R15["DioOpen"] := "0x0"
 39 [-]: LOADNIL   R16 R18      ; R16 := R17 := R18 := nil
 40 [-]: MOVE      R19 R0       ; R19 := R0
 41 [-]: LOADK     R20 K21      ; R20 := -1
 42 [-]: NEWTABLE  R21 0 0      ; R21 := {}
 43 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 44 [-]: NEWTABLE  R23 0 0      ; R23 := {}
 45 [-]: NEWTABLE  R24 0 0      ; R24 := {}
 46 [-]: NEWTABLE  R25 0 0      ; R25 := {}
 47 [-]: NEWTABLE  R26 0 0      ; R26 := {}
 48 [-]: NEWTABLE  R27 0 0      ; R27 := {}
 49 [-]: NEWTABLE  R28 0 4      ; R28 := {}
 50 [-]: SETTABLE  R28 K22 K23  ; R28["STARTING_ZOOM"] := -8
 51 [-]: SETTABLE  R28 K24 K25  ; R28["MAX_ZOOM"] := 4.5
 52 [-]: SETTABLE  R28 K26 K27  ; R28["MIN_ZOOM"] := -15
 53 [-]: SETTABLE  R28 K28 K23  ; R28["ZOOM_OUT_THRESHOLD"] := -8
 54 [-]: MOVE      R29 R0       ; R29 := R0
 55 [-]: LOADNIL   R30 R32      ; R30 := R31 := R32 := nil
 56 [-]: GETGLOBAL R33 K29      ; R33 := 0x70D42C02
 57 [-]: LOADK     R34 K30      ; R34 := 0.5
 58 [-]: LOADK     R35 K31      ; R35 := 0.15000000596046
 59 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
 60 [-]: GETGLOBAL R34 K29      ; R34 := 0x70D42C02
 61 [-]: LOADK     R35 K30      ; R35 := 0.5
 62 [-]: LOADK     R36 K31      ; R36 := 0.15000000596046
 63 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
 64 [-]: GETGLOBAL R35 K29      ; R35 := 0x70D42C02
 65 [-]: GETTABLE  R36 R28 K22  ; R36 := R28["STARTING_ZOOM"]
 66 [-]: LOADK     R37 K31      ; R37 := 0.15000000596046
 67 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
 68 [-]: LOADNIL   R36 R37      ; R36 := R37 := nil
 69 [-]: NEWTABLE  R38 0 0      ; R38 := {}
 70 [-]: NEWTABLE  R39 0 2      ; R39 := {}
 71 [-]: SETTABLE  R39 K32 K33  ; R39["Alpha"] := 1
 72 [-]: SETTABLE  R39 K34 K10  ; R39["Node"] := nil
 73 [-]: NEWTABLE  R40 0 2      ; R40 := {}
 74 [-]: SETTABLE  R40 K32 K33  ; R40["Alpha"] := 1
 75 [-]: SETTABLE  R40 K35 K10  ; R40["Region"] := nil
 76 [-]: LOADNIL   R41 R42      ; R41 := R42 := nil
 77 [-]: NEWTABLE  R43 0 7      ; R43 := {}
 78 [-]: SETTABLE  R43 K36 K7   ; R43["InSelectClick"] := "0x0"
 79 [-]: SETTABLE  R43 K35 K10  ; R43["Region"] := nil
 80 [-]: SETTABLE  R43 K37 K10  ; R43["RegionLabel"] := nil
 81 [-]: SETTABLE  R43 K34 K10  ; R43["Node"] := nil
 82 [-]: SETTABLE  R43 K38 K10  ; R43["UpdateTimer"] := nil
 83 [-]: SETTABLE  R43 K39 K10  ; R43["NodeTime"] := nil
 84 [-]: SETTABLE  R43 K40 K10  ; R43["mPrevHoverNode"] := nil
 85 [-]: LOADNIL   R44 R44      ; R44 := nil
 86 [-]: LOADK     R45 K41      ; R45 := 12
 87 [-]: LOADK     R46 K17      ; R46 := 0
 88 [-]: LOADK     R47 K42      ; R47 := 50
 89 [-]: LOADNIL   R48 R52      ; R48 := R49 := R50 := R51 := R52 := nil
 90 [-]: NEWTABLE  R53 0 2      ; R53 := {}
 91 [-]: SETTABLE  R53 K34 K10  ; R53["Node"] := nil
 92 [-]: SETTABLE  R53 K43 K10  ; R53["SectorName"] := nil
 93 [-]: LOADNIL   R54 R55      ; R54 := R55 := nil
 94 [-]: NEWTABLE  R56 0 4      ; R56 := {}
 95 [-]: SETTABLE  R56 K44 K10  ; R56["CountdownFx"] := nil
 96 [-]: NEWTABLE  R57 0 0      ; R57 := {}
 97 [-]: SETTABLE  R56 K45 R57  ; R56["PendingFx"] := R57
 98 [-]: NEWTABLE  R57 0 0      ; R57 := {}
 99 [-]: SETTABLE  R56 K46 R57  ; R56["QuestFx"] := R57
100 [-]: NEWTABLE  R57 0 0      ; R57 := {}
101 [-]: SETTABLE  R56 K47 R57  ; R56["SentientFx"] := R57
102 [-]: NEWTABLE  R57 0 2      ; R57 := {}
103 [-]: SETTABLE  R57 K43 K48  ; R57["SectorName"] := ""
104 [-]: SETTABLE  R57 K49 K48  ; R57["MissionTier"] := ""
105 [-]: NEWTABLE  R58 0 3      ; R58 := {}
106 [-]: SETTABLE  R58 K43 K48  ; R58["SectorName"] := ""
107 [-]: SETTABLE  R58 K50 K17  ; R58["Difficulty"] := 0
108 [-]: SETTABLE  R58 K51 K10  ; R58["MovieInst"] := nil
109 [-]: LOADNIL   R59 R59      ; R59 := nil
110 [-]: NEWTABLE  R60 0 4      ; R60 := {}
111 [-]: SETTABLE  R60 K52 K17  ; R60["BgWidth"] := 0
112 [-]: SETTABLE  R60 K53 K17  ; R60["BgHeight"] := 0
113 [-]: SETTABLE  R60 K54 K17  ; R60["InitLocationPicHeight"] := 0
114 [-]: SETTABLE  R60 K55 K17  ; R60["InitLocationPicYPos"] := 0
115 [-]: NEWTABLE  R61 0 0      ; R61 := {}
116 [-]: NEWTABLE  R62 0 0      ; R62 := {}
117 [-]: NEWTABLE  R63 0 0      ; R63 := {}
118 [-]: NEWTABLE  R64 0 0      ; R64 := {}
119 [-]: MOVE      R65 R0       ; R65 := R0
120 [-]: MOVE      R66 R0       ; R66 := R0
121 [-]: NEWTABLE  R67 0 1      ; R67 := {}
122 [-]: SETTABLE  R67 K56 K7   ; R67["Playing"] := "0x0"
123 [-]: LOADNIL   R68 R68      ; R68 := nil
124 [-]: MOVE      R69 R0       ; R69 := R0
125 [-]: NEWTABLE  R70 0 4      ; R70 := {}
126 [-]: SETTABLE  R70 K57 K48  ; R70["sectorName"] := ""
127 [-]: SETTABLE  R70 K58 K48  ; R70["sectorLoc"] := ""
128 [-]: SETTABLE  R70 K59 K60  ; R70["mBusyPlayerLoad"] := 0.69999998807907
129 [-]: SETTABLE  R70 K61 K62  ; R70["mAutoJoinIfNotBusy"] := "0x1"
130 [-]: MOVE      R71 R1       ; R71 := R1
131 [-]: NEWTABLE  R72 0 0      ; R72 := {}
132 [-]: NEWTABLE  R73 0 2      ; R73 := {}
133 [-]: SETTABLE  R73 K34 K10  ; R73["Node"] := nil
134 [-]: SETTABLE  R73 K63 K21  ; R73["Timer"] := -1
135 [-]: NEWTABLE  R74 0 3      ; R74 := {}
136 [-]: SETTABLE  R74 K64 K10  ; R74["Previous"] := nil
137 [-]: SETTABLE  R74 K65 K10  ; R74["Target"] := nil
138 [-]: GETGLOBAL R75 K29      ; R75 := 0x70D42C02
139 [-]: LOADK     R76 K33      ; R76 := 1
140 [-]: LOADK     R77 K67      ; R77 := 0.20000000298023
141 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
142 [-]: SETTABLE  R74 K66 R75  ; R74["Prop"] := R75
143 [-]: NEWTABLE  R75 0 0      ; R75 := {}
144 [-]: GETGLOBAL R76 K29      ; R76 := 0x70D42C02
145 [-]: LOADK     R77 K33      ; R77 := 1
146 [-]: LOADK     R78 K68      ; R78 := 0.17499999701977
147 [-]: CALL      R76 3 2      ; R76 := R76(R77,R78)
148 [-]: GETGLOBAL R77 K29      ; R77 := 0x70D42C02
149 [-]: LOADK     R78 K17      ; R78 := 0
150 [-]: LOADK     R79 K68      ; R79 := 0.17499999701977
151 [-]: CALL      R77 3 2      ; R77 := R77(R78,R79)
152 [-]: NEWTABLE  R78 0 0      ; R78 := {}
153 [-]: NEWTABLE  R79 0 0      ; R79 := {}
154 [-]: LOADK     R80 K69      ; R80 := 10
155 [-]: LOADNIL   R81 R81      ; R81 := nil
156 [-]: LOADK     R82 K48      ; R82 := ""
157 [-]: MOVE      R83 R0       ; R83 := R0
158 [-]: LOADNIL   R84 R85      ; R84 := R85 := nil
159 [-]: NEWTABLE  R86 0 4      ; R86 := {}
160 [-]: SETTABLE  R86 K70 K7   ; R86["Active"] := "0x0"
161 [-]: SETTABLE  R86 K71 K10  ; R86["SelectionNode"] := nil
162 [-]: SETTABLE  R86 K72 K10  ; R86["Button"] := nil
163 [-]: NEWTABLE  R87 0 0      ; R87 := {}
164 [-]: SETTABLE  R86 K73 R87  ; R86["Regions"] := R87
165 [-]: NEWTABLE  R87 0 19     ; R87 := {}
166 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
167 [-]: CALL      R88 1 2      ; R88 := R88()
168 [-]: SETTABLE  R87 K74 R88  ; R87["EMPTY"] := R88
169 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
170 [-]: LOADK     R89 K77      ; R89 := "AlphaAtten"
171 [-]: CALL      R88 2 2      ; R88 := R88(R89)
172 [-]: SETTABLE  R87 K76 R88  ; R87["ALPHA_ATTEN"] := R88
173 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
174 [-]: LOADK     R89 K79      ; R89 := "DESTROYED"
175 [-]: CALL      R88 2 2      ; R88 := R88(R89)
176 [-]: SETTABLE  R87 K78 R88  ; R87["DESTROYED_NODE_TAG"] := R88
177 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
178 [-]: LOADK     R89 K81      ; R89 := "RECONSTRUCTION"
179 [-]: CALL      R88 2 2      ; R88 := R88(R89)
180 [-]: SETTABLE  R87 K80 R88  ; R87["RECONSTRUCTION_NODE_TAG"] := R88
181 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
182 [-]: LOADK     R89 K83      ; R89 := "UnderConstruction"
183 [-]: CALL      R88 2 2      ; R88 := R88(R89)
184 [-]: SETTABLE  R87 K82 R88  ; R87["UNDER_CONSTRUCTION_NODE_TAG"] := R88
185 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
186 [-]: LOADK     R89 K85      ; R89 := "EarthToMoonShortcut"
187 [-]: CALL      R88 2 2      ; R88 := R88(R89)
188 [-]: SETTABLE  R87 K84 R88  ; R87["MOON_SHORTCUT_TAG"] := R88
189 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
190 [-]: LOADK     R89 K87      ; R89 := "UnlitAtten"
191 [-]: CALL      R88 2 2      ; R88 := R88(R89)
192 [-]: SETTABLE  R87 K86 R88  ; R87["UNLIT_ATTEN"] := R88
193 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
194 [-]: LOADK     R89 K89      ; R89 := "StarChartRoot"
195 [-]: CALL      R88 2 2      ; R88 := R88(R89)
196 [-]: SETTABLE  R87 K88 R88  ; R87["STAR_CHART_ROOT"] := R88
197 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
198 [-]: LOADK     R89 K91      ; R89 := "Player"
199 [-]: CALL      R88 2 2      ; R88 := R88(R89)
200 [-]: SETTABLE  R87 K90 R88  ; R87["PLAYER"] := R88
201 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
202 [-]: LOADK     R89 K93      ; R89 := "PlayerOperator"
203 [-]: CALL      R88 2 2      ; R88 := R88(R89)
204 [-]: SETTABLE  R87 K92 R88  ; R87["PLAYER_OPERATOR"] := R88
205 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
206 [-]: LOADK     R89 K95      ; R89 := "PlayerLight"
207 [-]: CALL      R88 2 2      ; R88 := R88(R89)
208 [-]: SETTABLE  R87 K94 R88  ; R87["PLAYER_LIGHT"] := R88
209 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
210 [-]: LOADK     R89 K97      ; R89 := "SkyCube"
211 [-]: CALL      R88 2 2      ; R88 := R88(R89)
212 [-]: SETTABLE  R87 K96 R88  ; R87["SKY_CUBE"] := R88
213 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
214 [-]: LOADK     R89 K99      ; R89 := "VoidT2"
215 [-]: CALL      R88 2 2      ; R88 := R88(R89)
216 [-]: SETTABLE  R87 K98 R88  ; R87["VOIDT2"] := R88
217 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
218 [-]: LOADK     R89 K101     ; R89 := "VoidT3"
219 [-]: CALL      R88 2 2      ; R88 := R88(R89)
220 [-]: SETTABLE  R87 K100 R88 ; R87["VOIDT3"] := R88
221 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
222 [-]: LOADK     R89 K103     ; R89 := "VoidT4"
223 [-]: CALL      R88 2 2      ; R88 := R88(R89)
224 [-]: SETTABLE  R87 K102 R88 ; R87["VOIDT4"] := R88
225 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
226 [-]: LOADK     R89 K105     ; R89 := "VoidT5"
227 [-]: CALL      R88 2 2      ; R88 := R88(R89)
228 [-]: SETTABLE  R87 K104 R88 ; R87["VOIDT5"] := R88
229 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
230 [-]: LOADK     R89 K106     ; R89 := "GAME_C1_HEAD1"
231 [-]: CALL      R88 2 2      ; R88 := R88(R89)
232 [-]: SETTABLE  R87 K106 R88 ; R87["GAME_C1_HEAD1"] := R88
233 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
234 [-]: LOADK     R89 K108     ; R89 := "MacheteMayhem"
235 [-]: CALL      R88 2 2      ; R88 := R88(R89)
236 [-]: SETTABLE  R87 K107 R88 ; R87["MACHETE_MAYHEM"] := R88
237 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
238 [-]: LOADK     R89 K110     ; R89 := "TennoConRelay"
239 [-]: CALL      R88 2 2      ; R88 := R88(R89)
240 [-]: SETTABLE  R87 K109 R88 ; R87["TENNOCON_RELAY"] := R88
241 [-]: NEWTABLE  R88 0 0      ; R88 := {}
242 [-]: SETTABLE  R87 K111 R88 ; R87["INFLUENCE_MAP"] := R88
243 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
244 [-]: LOADK     R89 K113     ; R89 := "SolNode973"
245 [-]: CALL      R88 2 2      ; R88 := R88(R89)
246 [-]: SETTABLE  R87 K112 R88 ; R87["FIGHT_NODE_TAG"] := R88
247 [-]: GETGLOBAL R88 K75      ; R88 := 0xEC274B1A
248 [-]: LOADK     R89 K115     ; R89 := "SquadLinkEvent"
249 [-]: CALL      R88 2 2      ; R88 := R88(R89)
250 [-]: SETTABLE  R87 K114 R88 ; R87["SQUAD_LINK_EVENT"] := R88
251 [-]: NEWTABLE  R88 0 14     ; R88 := {}
252 [-]: GETGLOBAL R89 K117     ; R89 := 0x994A1A7
253 [-]: LOADK     R90 K17      ; R90 := 0
254 [-]: LOADK     R91 K118     ; R91 := 8
255 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
256 [-]: SETTABLE  R88 K116 R89 ; R88["LINE_CULL_DISTANCE"] := R89
257 [-]: GETGLOBAL R89 K117     ; R89 := 0x994A1A7
258 [-]: LOADK     R90 K17      ; R90 := 0
259 [-]: LOADK     R91 K120     ; R91 := 17
260 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
261 [-]: SETTABLE  R88 K119 R89 ; R88["SHORTCUT_CULL_DISTANCE"] := R89
262 [-]: SETTABLE  R88 K121 K122; R88["PLANET_UNIT_MULTIPLIER"] := 0.14259999990463
263 [-]: SETTABLE  R88 K123 K124; R88["INACTIVE_NODE_ALPHA"] := 100
264 [-]: SETTABLE  R88 K125 K124; R88["LABEL_ALPHA"] := 100
265 [-]: SETTABLE  R88 K126 K127; R88["DECO_SCALE_MULTIPLIER"] := 2
266 [-]: GETGLOBAL R89 K117     ; R89 := 0x994A1A7
267 [-]: LOADK     R90 K129     ; R90 := -2
268 [-]: LOADK     R91 K17      ; R91 := 0
269 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
270 [-]: SETTABLE  R88 K128 R89 ; R88["LAYER_1_RANGE"] := R89
271 [-]: GETGLOBAL R89 K117     ; R89 := 0x994A1A7
272 [-]: LOADK     R90 K129     ; R90 := -2
273 [-]: LOADK     R91 K127     ; R91 := 2
274 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
275 [-]: SETTABLE  R88 K130 R89 ; R88["LAYER_2_RANGE"] := R89
276 [-]: GETGLOBAL R89 K117     ; R89 := 0x994A1A7
277 [-]: LOADK     R90 K132     ; R90 := -12
278 [-]: LOADK     R91 K17      ; R91 := 0
279 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
280 [-]: SETTABLE  R88 K131 R89 ; R88["SHORTCUT_RANGE"] := R89
281 [-]: GETGLOBAL R89 K117     ; R89 := 0x994A1A7
282 [-]: LOADK     R90 K134     ; R90 := -20
283 [-]: LOADK     R91 K17      ; R91 := 0
284 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
285 [-]: SETTABLE  R88 K133 R89 ; R88["PLANET_VIS_RANGE"] := R89
286 [-]: GETGLOBAL R89 K12      ; R89 := 0x221C9700
287 [-]: LOADK     R90 K17      ; R90 := 0
288 [-]: LOADK     R91 K30      ; R91 := 0.5
289 [-]: LOADK     R92 K17      ; R92 := 0
290 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
291 [-]: SETTABLE  R88 K135 R89 ; R88["CAMERA_OFFSET"] := R89
292 [-]: GETGLOBAL R89 K12      ; R89 := 0x221C9700
293 [-]: LOADK     R90 K17      ; R90 := 0
294 [-]: LOADK     R91 K17      ; R91 := 0
295 [-]: LOADK     R92 K33      ; R92 := 1
296 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
297 [-]: SETTABLE  R88 K136 R89 ; R88["CAMERA_FOCUS_DIR"] := R89
298 [-]: GETGLOBAL R89 K138     ; R89 := 0x1E4F6281
299 [-]: LOADK     R90 K17      ; R90 := 0
300 [-]: LOADK     R91 K139     ; R91 := 90
301 [-]: LOADK     R92 K17      ; R92 := 0
302 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
303 [-]: SETTABLE  R88 K137 R89 ; R88["RING_ROTATION"] := R89
304 [-]: SETTABLE  R88 K140 K141; R88["MAX_SHADER_INFLUENCES"] := 32
305 [-]: NEWTABLE  R89 5 0      ; R89 := {}
306 [-]: LOADK     R90 K142     ; R90 := "/Lotus/Language/Clan/Clan_Tier1"
307 [-]: LOADK     R91 K143     ; R91 := "/Lotus/Language/Clan/Clan_Tier2"
308 [-]: LOADK     R92 K144     ; R92 := "/Lotus/Language/Clan/Clan_Tier3"
309 [-]: LOADK     R93 K145     ; R93 := "/Lotus/Language/Clan/Clan_Tier4"
310 [-]: LOADK     R94 K146     ; R94 := "/Lotus/Language/Clan/Clan_Tier5"
311 [-]: SETLIST   R89 5 1      ; R89[(1-1)*FPF+i] := R(89+i), 1 <= i <= 5
312 [-]: LOADNIL   R90 R91      ; R90 := R91 := nil
313 [-]: NEWTABLE  R92 0 3      ; R92 := {}
314 [-]: SETTABLE  R92 K147 K7  ; R92["mShiftDown"] := "0x0"
315 [-]: SETTABLE  R92 K148 K7  ; R92["mControlDown"] := "0x0"
316 [-]: SETTABLE  R92 K149 K7  ; R92["mAltDown"] := "0x0"
317 [-]: MOVE      R93 R0       ; R93 := R0
318 [-]: NEWTABLE  R94 0 8      ; R94 := {}
319 [-]: SETTABLE  R94 K150 K33 ; R94["READ_ONLY"] := 1
320 [-]: SETTABLE  R94 K151 K127; R94["EDIT_NODES"] := 2
321 [-]: SETTABLE  R94 K152 K153; R94["EDIT_EDGES"] := 3
322 [-]: SETTABLE  R94 K154 K155; R94["EDIT_NODE_DECOS"] := 4
323 [-]: SETTABLE  R94 K156 K157; R94["EDIT_REGIONS"] := 5
324 [-]: SETTABLE  R94 K158 K159; R94["EDIT_REGION_FRAMING"] := 6
325 [-]: SETTABLE  R94 K160 K161; R94["EDIT_SHORTCUT_CONTROL_POINTS"] := 7
326 [-]: SETTABLE  R94 K162 K118; R94["MAX_VALUE"] := 8
327 [-]: GETTABLE  R95 R94 K150 ; R95 := R94["READ_ONLY"]
328 [-]: LOADNIL   R96 R97      ; R96 := R97 := nil
329 [-]: GETGLOBAL R98 K163     ; R98 := 0x329BDC44
330 [-]: LOADK     R99 K164     ; R99 := "EE.Interface.Utilities"
331 [-]: CALL      R98 2 2      ; R98 := R98(R99)
332 [-]: GETGLOBAL R99 K163     ; R99 := 0x329BDC44
333 [-]: LOADK     R100 K165    ; R100 := "Lotus.Interface.LotusUtilities"
334 [-]: CALL      R99 2 2      ; R99 := R99(R100)
335 [-]: GETGLOBAL R100 K163    ; R100 := 0x329BDC44
336 [-]: LOADK     R101 K166    ; R101 := "Lotus.Interface.FortressUtilities"
337 [-]: CALL      R100 2 2     ; R100 := R100(R101)
338 [-]: GETGLOBAL R101 K163    ; R101 := 0x329BDC44
339 [-]: LOADK     R102 K167    ; R102 := "Lotus.Interface.Libs.DioramaLoader"
340 [-]: CALL      R101 2 2     ; R101 := R101(R102)
341 [-]: GETGLOBAL R102 K163    ; R102 := 0x329BDC44
342 [-]: LOADK     R103 K168    ; R103 := "Lotus.Interface.LotusNetworkUtilities"
343 [-]: CALL      R102 2 2     ; R102 := R102(R103)
344 [-]: GETGLOBAL R103 K163    ; R103 := 0x329BDC44
345 [-]: LOADK     R104 K169    ; R104 := "Lotus.Interface.MissionRequirementUtilities"
346 [-]: CALL      R103 2 2     ; R103 := R103(R104)
347 [-]: GETGLOBAL R104 K163    ; R104 := 0x329BDC44
348 [-]: LOADK     R105 K170    ; R105 := "Lotus.Scripts.Nemesis.NemesisGenerator"
349 [-]: CALL      R104 2 2     ; R104 := R104(R105)
350 [-]: GETGLOBAL R105 K163    ; R105 := 0x329BDC44
351 [-]: LOADK     R106 K171    ; R106 := "Lotus.Interface.WorldStateUtilities"
352 [-]: CALL      R105 2 2     ; R105 := R105(R106)
353 [-]: LOADNIL   R106 R108    ; R106 := R107 := R108 := nil
354 [-]: GETGLOBAL R109 K29     ; R109 := 0x70D42C02
355 [-]: LOADK     R110 K17     ; R110 := 0
356 [-]: LOADK     R111 K31     ; R111 := 0.15000000596046
357 [-]: CALL      R109 3 2     ; R109 := R109(R110,R111)
358 [-]: GETGLOBAL R110 K29     ; R110 := 0x70D42C02
359 [-]: LOADK     R111 K17     ; R111 := 0
360 [-]: LOADK     R112 K31     ; R112 := 0.15000000596046
361 [-]: CALL      R110 3 2     ; R110 := R110(R111,R112)
362 [-]: LOADNIL   R111 R111    ; R111 := nil
363 [-]: NEWTABLE  R112 2 0     ; R112 := {}
364 [-]: GETGLOBAL R113 K29     ; R113 := 0x70D42C02
365 [-]: LOADK     R114 K17     ; R114 := 0
366 [-]: LOADK     R115 K33     ; R115 := 1
367 [-]: CALL      R113 3 2     ; R113 := R113(R114,R115)
368 [-]: GETGLOBAL R114 K29     ; R114 := 0x70D42C02
369 [-]: LOADK     R115 K17     ; R115 := 0
370 [-]: LOADK     R116 K33     ; R116 := 1
371 [-]: CALL      R114 3 2     ; R114 := R114(R115,R116)
372 [-]: GETGLOBAL R115 K29     ; R115 := 0x70D42C02
373 [-]: LOADK     R116 K17     ; R116 := 0
374 [-]: LOADK     R117 K33     ; R117 := 1
375 [-]: CALL      R115 3 0     ; R115,... := R115(R116,R117)
376 [-]: SETLIST   R112 0 1     ; R112[(1-1)*FPF+i] := R(112+i), 1 <= i <= 0
377 [-]: GETGLOBAL R113 K172    ; R113 := 0xB5A59043
378 [-]: CALL      R113 1 2     ; R113 := R113()
379 [-]: LOADNIL   R114 R115    ; R114 := R115 := nil
380 [-]: LOADK     R116 K17     ; R116 := 0
381 [-]: MOVE      R117 R0      ; R117 := R0
382 [-]: LOADNIL   R118 R122    ; R118 := R119 := R120 := R121 := R122 := nil
383 [-]: NEWTABLE  R123 0 9     ; R123 := {}
384 [-]: SETTABLE  R123 K173 K7 ; R123["IsVisible"] := "0x0"
385 [-]: SETTABLE  R123 K174 K17; R123["X"] := 0
386 [-]: SETTABLE  R123 K175 K17; R123["Y"] := 0
387 [-]: SETTABLE  R123 K176 K33; R123["SpeedMultiplier"] := 1
388 [-]: SETTABLE  R123 K177 K17; R123["MinX"] := 0
389 [-]: SETTABLE  R123 K178 K17; R123["MinY"] := 0
390 [-]: SETTABLE  R123 K179 K17; R123["MaxX"] := 0
391 [-]: SETTABLE  R123 K180 K17; R123["MaxY"] := 0
392 [-]: SETTABLE  R123 K181 K17; R123["MouseMoves"] := 0
393 [-]: LOADNIL   R124 R125    ; R124 := R125 := nil
394 [-]: NEWTABLE  R126 0 5     ; R126 := {}
395 [-]: SETTABLE  R126 K182 K183; R126["SpaceMultiplier"] := 0.36000001430511
396 [-]: SETTABLE  R126 K184 K185; R126["ZoomedMultiplier"] := 0.28000000119209
397 [-]: SETTABLE  R126 K186 K31; R126["SpaceHoveringMultiplier"] := 0.15000000596046
398 [-]: SETTABLE  R126 K187 K188; R126["ZoomedHoveringMultiplier"] := 0.10000000149012
399 [-]: SETTABLE  R126 K189 K33; R126["AspectRatio"] := 1
400 [-]: NEWTABLE  R127 0 10    ; R127 := {}
401 [-]: SETTABLE  R127 K190 K17; R127["Velocity"] := 0
402 [-]: SETTABLE  R127 K191 K192; R127["LoopTime"] := 192800
403 [-]: SETTABLE  R127 K193 K194; R127["Tag"] := "/Lotus/Language/Locations/Fortress"
404 [-]: SETTABLE  R127 K35 K10 ; R127["Region"] := nil
405 [-]: SETTABLE  R127 K195 K7 ; R127["ShowPath"] := "0x0"
406 [-]: NEWTABLE  R128 0 0     ; R128 := {}
407 [-]: SETTABLE  R127 K196 R128; R127["Splines"] := R128
408 [-]: NEWTABLE  R128 0 0     ; R128 := {}
409 [-]: SETTABLE  R127 K197 R128; R127["Sectors"] := R128
410 [-]: NEWTABLE  R128 0 0     ; R128 := {}
411 [-]: SETTABLE  R127 K198 R128; R127["Nodes"] := R128
412 [-]: SETTABLE  R127 K199 K10; R127["SubLabelIndex"] := nil
413 [-]: SETTABLE  R127 K200 K10; R127["SplinePoints"] := nil
414 [-]: MOVE      R128 R0      ; R128 := R0
415 [-]: NEWTABLE  R129 0 0     ; R129 := {}
416 [-]: CLOSURE   R130 0       ; R130 := closure(Function #1)
417 [-]: MOVE      R0 R43       ; R0 := R43
418 [-]: MOVE      R0 R98       ; R0 := R98
419 [-]: MOVE      R0 R41       ; R0 := R41
420 [-]: MOVE      R0 R126      ; R0 := R126
421 [-]: MOVE      R0 R123      ; R0 := R123
422 [-]: CLOSURE   R131 1       ; R131 := closure(Function #2)
423 [-]: CLOSURE   R132 2       ; R132 := closure(Function #3)
424 [-]: MOVE      R0 R98       ; R0 := R98
425 [-]: MOVE      R0 R60       ; R0 := R60
426 [-]: CLOSURE   R133 3       ; R133 := closure(Function #4)
427 [-]: MOVE      R0 R132      ; R0 := R132
428 [-]: MOVE      R0 R123      ; R0 := R123
429 [-]: MOVE      R0 R98       ; R0 := R98
430 [-]: MOVE      R0 R131      ; R0 := R131
431 [-]: MOVE      R0 R0        ; R0 := R0
432 [-]: MOVE      R0 R126      ; R0 := R126
433 [-]: CLOSURE   R134 4       ; R134 := closure(Function #5)
434 [-]: CLOSURE   R135 5       ; R135 := closure(Function #6)
435 [-]: MOVE      R0 R98       ; R0 := R98
436 [-]: CLOSURE   R136 6       ; R136 := closure(Function #7)
437 [-]: CLOSURE   R137 7       ; R137 := closure(Function #8)
438 [-]: CLOSURE   R138 8       ; R138 := closure(Function #9)
439 [-]: MOVE      R0 R95       ; R0 := R95
440 [-]: MOVE      R0 R94       ; R0 := R94
441 [-]: MOVE      R0 R96       ; R0 := R96
442 [-]: MOVE      R0 R92       ; R0 := R92
443 [-]: MOVE      R0 R82       ; R0 := R82
444 [-]: CLOSURE   R139 9       ; R139 := closure(Function #10)
445 [-]: MOVE      R0 R22       ; R0 := R22
446 [-]: MOVE      R0 R138      ; R0 := R138
447 [-]: LOADK     R140 K48     ; R140 := ""
448 [-]: CLOSURE   R141 10      ; R141 := closure(Function #11)
449 [-]: MOVE      R0 R67       ; R0 := R67
450 [-]: MOVE      R0 R140      ; R0 := R140
451 [-]: CLOSURE   R142 11      ; R142 := closure(Function #12)
452 [-]: MOVE      R0 R140      ; R0 := R140
453 [-]: MOVE      R0 R67       ; R0 := R67
454 [-]: CLOSURE   R143 12      ; R143 := closure(Function #13)
455 [-]: MOVE      R0 R98       ; R0 := R98
456 [-]: MOVE      R0 R67       ; R0 := R67
457 [-]: MOVE      R0 R99       ; R0 := R99
458 [-]: CLOSURE   R144 13      ; R144 := closure(Function #14)
459 [-]: MOVE      R0 R142      ; R0 := R142
460 [-]: SETGLOBAL R144 K201    ; OnTransmissionDone := R144
461 [-]: SETGLOBAL R144 K202    ; 0x72BF0075 := R144
462 [-]: CLOSURE   R144 14      ; R144 := closure(Function #15)
463 [-]: MOVE      R0 R68       ; R0 := R68
464 [-]: MOVE      R0 R106      ; R0 := R106
465 [-]: MOVE      R0 R43       ; R0 := R43
466 [-]: MOVE      R0 R144      ; R0 := R144
467 [-]: MOVE      R0 R14       ; R0 := R14
468 [-]: MOVE      R0 R98       ; R0 := R98
469 [-]: MOVE      R0 R141      ; R0 := R141
470 [-]: CLOSURE   R145 15      ; R145 := closure(Function #16)
471 [-]: MOVE      R0 R96       ; R0 := R96
472 [-]: CLOSURE   R146 16      ; R146 := closure(Function #17)
473 [-]: MOVE      R0 R88       ; R0 := R88
474 [-]: MOVE      R0 R95       ; R0 := R95
475 [-]: MOVE      R0 R94       ; R0 := R94
476 [-]: MOVE      R0 R2        ; R0 := R2
477 [-]: MOVE      R0 R96       ; R0 := R96
478 [-]: MOVE      R0 R145      ; R0 := R145
479 [-]: CLOSURE   R147 17      ; R147 := closure(Function #18)
480 [-]: MOVE      R0 R63       ; R0 := R63
481 [-]: MOVE      R0 R88       ; R0 := R88
482 [-]: CLOSURE   R148 18      ; R148 := closure(Function #19)
483 [-]: MOVE      R0 R95       ; R0 := R95
484 [-]: MOVE      R0 R94       ; R0 := R94
485 [-]: MOVE      R0 R147      ; R0 := R147
486 [-]: MOVE      R0 R146      ; R0 := R146
487 [-]: MOVE      R0 R139      ; R0 := R139
488 [-]: CLOSURE   R149 19      ; R149 := closure(Function #20)
489 [-]: MOVE      R0 R26       ; R0 := R26
490 [-]: MOVE      R0 R27       ; R0 := R27
491 [-]: MOVE      R0 R83       ; R0 := R83
492 [-]: MOVE      R0 R1        ; R0 := R1
493 [-]: MOVE      R0 R99       ; R0 := R99
494 [-]: MOVE      R0 R5        ; R0 := R5
495 [-]: MOVE      R0 R93       ; R0 := R93
496 [-]: MOVE      R0 R23       ; R0 := R23
497 [-]: MOVE      R0 R4        ; R0 := R4
498 [-]: MOVE      R0 R2        ; R0 := R2
499 [-]: CLOSURE   R150 20      ; R150 := closure(Function #21)
500 [-]: MOVE      R0 R20       ; R0 := R20
501 [-]: NEWTABLE  R151 0 0     ; R151 := {}
502 [-]: CLOSURE   R152 21      ; R152 := closure(Function #22)
503 [-]: MOVE      R0 R87       ; R0 := R87
504 [-]: MOVE      R0 R88       ; R0 := R88
505 [-]: MOVE      R0 R151      ; R0 := R151
506 [-]: MOVE      R0 R23       ; R0 := R23
507 [-]: MOVE      R0 R98       ; R0 := R98
508 [-]: MOVE      R0 R2        ; R0 := R2
509 [-]: MOVE      R0 R4        ; R0 := R4
510 [-]: CLOSURE   R153 22      ; R153 := closure(Function #23)
511 [-]: MOVE      R0 R98       ; R0 := R98
512 [-]: MOVE      R0 R28       ; R0 := R28
513 [-]: MOVE      R0 R35       ; R0 := R35
514 [-]: MOVE      R0 R151      ; R0 := R151
515 [-]: MOVE      R0 R88       ; R0 := R88
516 [-]: MOVE      R0 R87       ; R0 := R87
517 [-]: CLOSURE   R154 23      ; R154 := closure(Function #24)
518 [-]: CLOSURE   R155 24      ; R155 := closure(Function #25)
519 [-]: MOVE      R0 R86       ; R0 := R86
520 [-]: MOVE      R0 R154      ; R0 := R154
521 [-]: MOVE      R0 R85       ; R0 := R85
522 [-]: MOVE      R0 R98       ; R0 := R98
523 [-]: MOVE      R0 R121      ; R0 := R121
524 [-]: MOVE      R0 R99       ; R0 := R99
525 [-]: MOVE      R0 R65       ; R0 := R65
526 [-]: MOVE      R0 R93       ; R0 := R93
527 [-]: MOVE      R0 R127      ; R0 := R127
528 [-]: MOVE      R0 R100      ; R0 := R100
529 [-]: MOVE      R0 R25       ; R0 := R25
530 [-]: MOVE      R0 R106      ; R0 := R106
531 [-]: MOVE      R0 R0        ; R0 := R0
532 [-]: MOVE      R0 R133      ; R0 := R133
533 [-]: MOVE      R0 R149      ; R0 := R149
534 [-]: MOVE      R0 R82       ; R0 := R82
535 [-]: MOVE      R0 R14       ; R0 := R14
536 [-]: MOVE      R0 R60       ; R0 := R60
537 [-]: MOVE      R0 R29       ; R0 := R29
538 [-]: MOVE      R0 R148      ; R0 := R148
539 [-]: MOVE      R0 R94       ; R0 := R94
540 [-]: MOVE      R0 R150      ; R0 := R150
541 [-]: MOVE      R0 R124      ; R0 := R124
542 [-]: CLOSURE   R156 25      ; R156 := closure(Function #26)
543 [-]: MOVE      R0 R155      ; R0 := R155
544 [-]: SETGLOBAL R156 K203    ; Initialize := R156
545 [-]: SETGLOBAL R156 K204    ; 0x62648036 := R156
546 [-]: CLOSURE   R156 26      ; R156 := closure(Function #27)
547 [-]: MOVE      R0 R99       ; R0 := R99
548 [-]: CLOSURE   R157 27      ; R157 := closure(Function #28)
549 [-]: MOVE      R0 R15       ; R0 := R15
550 [-]: MOVE      R0 R73       ; R0 := R73
551 [-]: MOVE      R0 R156      ; R0 := R156
552 [-]: MOVE      R0 R17       ; R0 := R17
553 [-]: MOVE      R0 R18       ; R0 := R18
554 [-]: MOVE      R0 R16       ; R0 := R16
555 [-]: MOVE      R0 R58       ; R0 := R58
556 [-]: MOVE      R0 R98       ; R0 := R98
557 [-]: MOVE      R0 R99       ; R0 := R99
558 [-]: CLOSURE   R158 28      ; R158 := closure(Function #29)
559 [-]: MOVE      R0 R154      ; R0 := R154
560 [-]: CLOSURE   R85 29       ; R85 := closure(Function #30)
561 [-]: MOVE      R0 R29       ; R0 := R29
562 [-]: MOVE      R0 R86       ; R0 := R86
563 [-]: MOVE      R0 R121      ; R0 := R121
564 [-]: MOVE      R0 R157      ; R0 := R157
565 [-]: MOVE      R0 R98       ; R0 := R98
566 [-]: MOVE      R0 R158      ; R0 := R158
567 [-]: MOVE      R0 R155      ; R0 := R155
568 [-]: CLOSURE   R159 30      ; R159 := closure(Function #31)
569 [-]: MOVE      R0 R85       ; R0 := R85
570 [-]: SETGLOBAL R159 K205    ; ToggleRailJack := R159
571 [-]: SETGLOBAL R159 K206    ; 0xB7E5FD73 := R159
572 [-]: CLOSURE   R159 31      ; R159 := closure(Function #32)
573 [-]: MOVE      R0 R17       ; R0 := R17
574 [-]: MOVE      R0 R86       ; R0 := R86
575 [-]: MOVE      R0 R99       ; R0 := R99
576 [-]: MOVE      R0 R122      ; R0 := R122
577 [-]: MOVE      R0 R15       ; R0 := R15
578 [-]: MOVE      R0 R66       ; R0 := R66
579 [-]: MOVE      R0 R98       ; R0 := R98
580 [-]: MOVE      R0 R135      ; R0 := R135
581 [-]: MOVE      R0 R134      ; R0 := R134
582 [-]: MOVE      R0 R35       ; R0 := R35
583 [-]: MOVE      R0 R28       ; R0 := R28
584 [-]: MOVE      R0 R121      ; R0 := R121
585 [-]: MOVE      R0 R93       ; R0 := R93
586 [-]: CLOSURE   R160 32      ; R160 := closure(Function #33)
587 [-]: MOVE      R0 R159      ; R0 := R159
588 [-]: SETGLOBAL R160 K207    ; UpdateButtons := R160
589 [-]: SETGLOBAL R160 K208    ; 0xB97434A0 := R160
590 [-]: CLOSURE   R122 33      ; R122 := closure(Function #34)
591 [-]: MOVE      R0 R159      ; R0 := R159
592 [-]: CLOSURE   R160 34      ; R160 := closure(Function #35)
593 [-]: CLOSURE   R161 35      ; R161 := closure(Function #36)
594 [-]: CLOSURE   R162 36      ; R162 := closure(Function #37)
595 [-]: MOVE      R0 R84       ; R0 := R84
596 [-]: MOVE      R0 R88       ; R0 := R88
597 [-]: CLOSURE   R163 37      ; R163 := closure(Function #38)
598 [-]: MOVE      R0 R160      ; R0 := R160
599 [-]: MOVE      R0 R21       ; R0 := R21
600 [-]: MOVE      R0 R86       ; R0 := R86
601 [-]: MOVE      R0 R127      ; R0 := R127
602 [-]: MOVE      R0 R88       ; R0 := R88
603 [-]: CLOSURE   R164 38      ; R164 := closure(Function #39)
604 [-]: MOVE      R0 R65       ; R0 := R65
605 [-]: MOVE      R0 R86       ; R0 := R86
606 [-]: MOVE      R0 R87       ; R0 := R87
607 [-]: MOVE      R0 R93       ; R0 := R93
608 [-]: CLOSURE   R165 39      ; R165 := closure(Function #40)
609 [-]: MOVE      R0 R65       ; R0 := R65
610 [-]: MOVE      R0 R99       ; R0 := R99
611 [-]: MOVE      R0 R1        ; R0 := R1
612 [-]: CLOSURE   R166 40      ; R166 := closure(Function #41)
613 [-]: MOVE      R0 R98       ; R0 := R98
614 [-]: MOVE      R0 R99       ; R0 := R99
615 [-]: CLOSURE   R167 41      ; R167 := closure(Function #42)
616 [-]: MOVE      R0 R7        ; R0 := R7
617 [-]: MOVE      R0 R136      ; R0 := R136
618 [-]: MOVE      R0 R8        ; R0 := R8
619 [-]: MOVE      R0 R107      ; R0 := R107
620 [-]: MOVE      R0 R87       ; R0 := R87
621 [-]: MOVE      R0 R108      ; R0 := R108
622 [-]: MOVE      R0 R101      ; R0 := R101
623 [-]: MOVE      R0 R115      ; R0 := R115
624 [-]: MOVE      R0 R86       ; R0 := R86
625 [-]: MOVE      R0 R111      ; R0 := R111
626 [-]: MOVE      R0 R113      ; R0 := R113
627 [-]: MOVE      R0 R114      ; R0 := R114
628 [-]: MOVE      R0 R74       ; R0 := R74
629 [-]: MOVE      R0 R88       ; R0 := R88
630 [-]: CLOSURE   R168 42      ; R168 := closure(Function #43)
631 [-]: CLOSURE   R169 43      ; R169 := closure(Function #44)
632 [-]: MOVE      R0 R4        ; R0 := R4
633 [-]: MOVE      R0 R161      ; R0 := R161
634 [-]: MOVE      R0 R3        ; R0 := R3
635 [-]: MOVE      R0 R21       ; R0 := R21
636 [-]: MOVE      R0 R2        ; R0 := R2
637 [-]: MOVE      R0 R127      ; R0 := R127
638 [-]: MOVE      R0 R168      ; R0 := R168
639 [-]: MOVE      R0 R1        ; R0 := R1
640 [-]: MOVE      R0 R28       ; R0 := R28
641 [-]: MOVE      R0 R136      ; R0 := R136
642 [-]: MOVE      R0 R25       ; R0 := R25
643 [-]: MOVE      R0 R86       ; R0 := R86
644 [-]: MOVE      R0 R88       ; R0 := R88
645 [-]: MOVE      R0 R98       ; R0 := R98
646 [-]: MOVE      R0 R163      ; R0 := R163
647 [-]: CLOSURE   R170 44      ; R170 := closure(Function #45)
648 [-]: MOVE      R0 R43       ; R0 := R43
649 [-]: SETGLOBAL R170 K209    ; RollOverRegionLabel := R170
650 [-]: SETGLOBAL R170 K210    ; 0xE570BFF2 := R170
651 [-]: CLOSURE   R170 45      ; R170 := closure(Function #46)
652 [-]: MOVE      R0 R43       ; R0 := R43
653 [-]: SETGLOBAL R170 K211    ; RollOutRegionLabel := R170
654 [-]: SETGLOBAL R170 K212    ; 0xEFF9053C := R170
655 [-]: CLOSURE   R170 46      ; R170 := closure(Function #47)
656 [-]: MOVE      R0 R167      ; R0 := R167
657 [-]: MOVE      R0 R169      ; R0 := R169
658 [-]: MOVE      R0 R61       ; R0 := R61
659 [-]: MOVE      R0 R2        ; R0 := R2
660 [-]: MOVE      R0 R88       ; R0 := R88
661 [-]: CLOSURE   R171 47      ; R171 := closure(Function #48)
662 [-]: MOVE      R0 R7        ; R0 := R7
663 [-]: MOVE      R0 R8        ; R0 := R8
664 [-]: CLOSURE   R172 48      ; R172 := closure(Function #49)
665 [-]: MOVE      R0 R28       ; R0 := R28
666 [-]: MOVE      R0 R35       ; R0 := R35
667 [-]: MOVE      R0 R32       ; R0 := R32
668 [-]: CLOSURE   R173 49      ; R173 := closure(Function #50)
669 [-]: MOVE      R0 R2        ; R0 := R2
670 [-]: MOVE      R0 R86       ; R0 := R86
671 [-]: MOVE      R0 R72       ; R0 := R72
672 [-]: MOVE      R0 R108      ; R0 := R108
673 [-]: MOVE      R0 R114      ; R0 := R114
674 [-]: MOVE      R0 R74       ; R0 := R74
675 [-]: MOVE      R0 R80       ; R0 := R80
676 [-]: MOVE      R0 R98       ; R0 := R98
677 [-]: MOVE      R0 R84       ; R0 := R84
678 [-]: MOVE      R0 R32       ; R0 := R32
679 [-]: MOVE      R0 R28       ; R0 := R28
680 [-]: MOVE      R0 R35       ; R0 := R35
681 [-]: MOVE      R0 R63       ; R0 := R63
682 [-]: MOVE      R0 R120      ; R0 := R120
683 [-]: MOVE      R0 R106      ; R0 := R106
684 [-]: MOVE      R0 R119      ; R0 := R119
685 [-]: MOVE      R0 R118      ; R0 := R118
686 [-]: MOVE      R0 R29       ; R0 := R29
687 [-]: MOVE      R0 R159      ; R0 := R159
688 [-]: MOVE      R0 R172      ; R0 := R172
689 [-]: MOVE      R0 R21       ; R0 := R21
690 [-]: CLOSURE   R174 50      ; R174 := closure(Function #51)
691 [-]: MOVE      R0 R2        ; R0 := R2
692 [-]: MOVE      R0 R61       ; R0 := R61
693 [-]: CLOSURE   R175 51      ; R175 := closure(Function #52)
694 [-]: MOVE      R0 R86       ; R0 := R86
695 [-]: MOVE      R0 R99       ; R0 := R99
696 [-]: MOVE      R0 R87       ; R0 := R87
697 [-]: MOVE      R0 R93       ; R0 := R93
698 [-]: MOVE      R0 R25       ; R0 := R25
699 [-]: MOVE      R0 R103      ; R0 := R103
700 [-]: CLOSURE   R176 52      ; R176 := closure(Function #53)
701 [-]: MOVE      R0 R175      ; R0 := R175
702 [-]: MOVE      R0 R65       ; R0 := R65
703 [-]: MOVE      R0 R99       ; R0 := R99
704 [-]: MOVE      R0 R12       ; R0 := R12
705 [-]: MOVE      R0 R87       ; R0 := R87
706 [-]: MOVE      R0 R81       ; R0 := R81
707 [-]: MOVE      R0 R1        ; R0 := R1
708 [-]: MOVE      R0 R160      ; R0 := R160
709 [-]: MOVE      R0 R22       ; R0 := R22
710 [-]: MOVE      R0 R88       ; R0 := R88
711 [-]: MOVE      R0 R23       ; R0 := R23
712 [-]: MOVE      R0 R174      ; R0 := R174
713 [-]: MOVE      R0 R162      ; R0 := R162
714 [-]: MOVE      R0 R27       ; R0 := R27
715 [-]: CLOSURE   R177 53      ; R177 := closure(Function #54)
716 [-]: MOVE      R0 R165      ; R0 := R165
717 [-]: MOVE      R0 R164      ; R0 := R164
718 [-]: MOVE      R0 R166      ; R0 := R166
719 [-]: MOVE      R0 R23       ; R0 := R23
720 [-]: MOVE      R0 R98       ; R0 := R98
721 [-]: MOVE      R0 R78       ; R0 := R78
722 [-]: MOVE      R0 R79       ; R0 := R79
723 [-]: MOVE      R0 R84       ; R0 := R84
724 [-]: MOVE      R0 R86       ; R0 := R86
725 [-]: MOVE      R0 R138      ; R0 := R138
726 [-]: CLOSURE   R178 54      ; R178 := closure(Function #55)
727 [-]: MOVE      R0 R99       ; R0 := R99
728 [-]: MOVE      R0 R23       ; R0 := R23
729 [-]: MOVE      R0 R24       ; R0 := R24
730 [-]: MOVE      R0 R1        ; R0 := R1
731 [-]: CLOSURE   R179 55      ; R179 := closure(Function #56)
732 [-]: MOVE      R0 R79       ; R0 := R79
733 [-]: MOVE      R0 R78       ; R0 := R78
734 [-]: MOVE      R0 R178      ; R0 := R178
735 [-]: MOVE      R0 R22       ; R0 := R22
736 [-]: MOVE      R0 R177      ; R0 := R177
737 [-]: MOVE      R0 R149      ; R0 := R149
738 [-]: CLOSURE   R180 56      ; R180 := closure(Function #57)
739 [-]: MOVE      R0 R98       ; R0 := R98
740 [-]: CLOSURE   R181 57      ; R181 := closure(Function #58)
741 [-]: MOVE      R0 R22       ; R0 := R22
742 [-]: MOVE      R0 R2        ; R0 := R2
743 [-]: MOVE      R0 R180      ; R0 := R180
744 [-]: CLOSURE   R182 58      ; R182 := closure(Function #59)
745 [-]: MOVE      R0 R22       ; R0 := R22
746 [-]: MOVE      R0 R2        ; R0 := R2
747 [-]: MOVE      R0 R99       ; R0 := R99
748 [-]: MOVE      R0 R177      ; R0 := R177
749 [-]: MOVE      R0 R87       ; R0 := R87
750 [-]: CLOSURE   R183 59      ; R183 := closure(Function #60)
751 [-]: MOVE      R0 R22       ; R0 := R22
752 [-]: CLOSURE   R184 60      ; R184 := closure(Function #61)
753 [-]: MOVE      R0 R22       ; R0 := R22
754 [-]: MOVE      R0 R23       ; R0 := R23
755 [-]: MOVE      R0 R161      ; R0 := R161
756 [-]: MOVE      R0 R99       ; R0 := R99
757 [-]: MOVE      R0 R11       ; R0 := R11
758 [-]: MOVE      R0 R84       ; R0 := R84
759 [-]: MOVE      R0 R5        ; R0 := R5
760 [-]: MOVE      R0 R127      ; R0 := R127
761 [-]: MOVE      R0 R176      ; R0 := R176
762 [-]: MOVE      R0 R86       ; R0 := R86
763 [-]: MOVE      R0 R2        ; R0 := R2
764 [-]: MOVE      R0 R1        ; R0 := R1
765 [-]: MOVE      R0 R10       ; R0 := R10
766 [-]: MOVE      R0 R25       ; R0 := R25
767 [-]: MOVE      R0 R98       ; R0 := R98
768 [-]: MOVE      R0 R139      ; R0 := R139
769 [-]: CLOSURE   R185 61      ; R185 := closure(Function #62)
770 [-]: CLOSURE   R186 62      ; R186 := closure(Function #63)
771 [-]: CLOSURE   R187 63      ; R187 := closure(Function #64)
772 [-]: MOVE      R0 R23       ; R0 := R23
773 [-]: CLOSURE   R188 64      ; R188 := closure(Function #65)
774 [-]: MOVE      R0 R3        ; R0 := R3
775 [-]: MOVE      R0 R61       ; R0 := R61
776 [-]: MOVE      R0 R2        ; R0 := R2
777 [-]: MOVE      R0 R185      ; R0 := R185
778 [-]: MOVE      R0 R187      ; R0 := R187
779 [-]: MOVE      R0 R186      ; R0 := R186
780 [-]: CLOSURE   R189 65      ; R189 := closure(Function #66)
781 [-]: MOVE      R0 R6        ; R0 := R6
782 [-]: MOVE      R0 R1        ; R0 := R1
783 [-]: MOVE      R0 R63       ; R0 := R63
784 [-]: MOVE      R0 R64       ; R0 := R64
785 [-]: MOVE      R0 R23       ; R0 := R23
786 [-]: MOVE      R0 R127      ; R0 := R127
787 [-]: CLOSURE   R190 66      ; R190 := closure(Function #67)
788 [-]: MOVE      R0 R86       ; R0 := R86
789 [-]: MOVE      R0 R63       ; R0 := R63
790 [-]: MOVE      R0 R98       ; R0 := R98
791 [-]: MOVE      R0 R88       ; R0 := R88
792 [-]: MOVE      R0 R188      ; R0 := R188
793 [-]: CLOSURE   R191 67      ; R191 := closure(Function #68)
794 [-]: MOVE      R0 R75       ; R0 := R75
795 [-]: MOVE      R0 R63       ; R0 := R63
796 [-]: MOVE      R0 R98       ; R0 := R98
797 [-]: CLOSURE   R192 68      ; R192 := closure(Function #69)
798 [-]: MOVE      R0 R98       ; R0 := R98
799 [-]: MOVE      R0 R86       ; R0 := R86
800 [-]: MOVE      R0 R22       ; R0 := R22
801 [-]: CLOSURE   R193 69      ; R193 := closure(Function #70)
802 [-]: MOVE      R0 R81       ; R0 := R81
803 [-]: CLOSURE   R194 70      ; R194 := closure(Function #71)
804 [-]: MOVE      R0 R98       ; R0 := R98
805 [-]: MOVE      R0 R13       ; R0 := R13
806 [-]: MOVE      R0 R86       ; R0 := R86
807 [-]: MOVE      R0 R87       ; R0 := R87
808 [-]: MOVE      R0 R127      ; R0 := R127
809 [-]: MOVE      R0 R193      ; R0 := R193
810 [-]: MOVE      R0 R170      ; R0 := R170
811 [-]: MOVE      R0 R184      ; R0 := R184
812 [-]: MOVE      R0 R189      ; R0 := R189
813 [-]: MOVE      R0 R192      ; R0 := R192
814 [-]: MOVE      R0 R152      ; R0 := R152
815 [-]: MOVE      R0 R23       ; R0 := R23
816 [-]: MOVE      R0 R179      ; R0 := R179
817 [-]: MOVE      R0 R181      ; R0 := R181
818 [-]: MOVE      R0 R182      ; R0 := R182
819 [-]: MOVE      R0 R190      ; R0 := R190
820 [-]: MOVE      R0 R191      ; R0 := R191
821 [-]: MOVE      R0 R173      ; R0 := R173
822 [-]: MOVE      R0 R156      ; R0 := R156
823 [-]: CLOSURE   R195 71      ; R195 := closure(Function #72)
824 [-]: MOVE      R0 R30       ; R0 := R30
825 [-]: MOVE      R0 R31       ; R0 := R31
826 [-]: MOVE      R0 R194      ; R0 := R194
827 [-]: CLOSURE   R196 72      ; R196 := closure(Function #73)
828 [-]: MOVE      R0 R30       ; R0 := R30
829 [-]: MOVE      R0 R101      ; R0 := R101
830 [-]: MOVE      R0 R86       ; R0 := R86
831 [-]: CLOSURE   R197 73      ; R197 := closure(Function #74)
832 [-]: CLOSURE   R198 74      ; R198 := closure(Function #75)
833 [-]: MOVE      R0 R98       ; R0 := R98
834 [-]: CLOSURE   R199 75      ; R199 := closure(Function #76)
835 [-]: MOVE      R0 R7        ; R0 := R7
836 [-]: MOVE      R0 R198      ; R0 := R198
837 [-]: MOVE      R0 R2        ; R0 := R2
838 [-]: MOVE      R0 R86       ; R0 := R86
839 [-]: MOVE      R0 R197      ; R0 := R197
840 [-]: MOVE      R0 R5        ; R0 := R5
841 [-]: MOVE      R0 R175      ; R0 := R175
842 [-]: MOVE      R0 R31       ; R0 := R31
843 [-]: CLOSURE   R200 76      ; R200 := closure(Function #77)
844 [-]: CLOSURE   R201 77      ; R201 := closure(Function #78)
845 [-]: MOVE      R0 R32       ; R0 := R32
846 [-]: MOVE      R0 R55       ; R0 := R55
847 [-]: CLOSURE   R202 78      ; R202 := closure(Function #79)
848 [-]: MOVE      R0 R96       ; R0 := R96
849 [-]: CLOSURE   R203 79      ; R203 := closure(Function #80)
850 [-]: MOVE      R0 R92       ; R0 := R92
851 [-]: MOVE      R0 R96       ; R0 := R96
852 [-]: CLOSURE   R204 80      ; R204 := closure(Function #81)
853 [-]: MOVE      R0 R99       ; R0 := R99
854 [-]: CLOSURE   R205 81      ; R205 := closure(Function #82)
855 [-]: MOVE      R0 R99       ; R0 := R99
856 [-]: CLOSURE   R206 82      ; R206 := closure(Function #83)
857 [-]: MOVE      R0 R205      ; R0 := R205
858 [-]: SETGLOBAL R206 K213    ; AbortConfirm := R206
859 [-]: SETGLOBAL R206 K214    ; 0x575A9B5 := R206
860 [-]: CLOSURE   R206 83      ; R206 := closure(Function #84)
861 [-]: MOVE      R0 R98       ; R0 := R98
862 [-]: SETGLOBAL R206 K215    ; ShowQuestConfirm := R206
863 [-]: SETGLOBAL R206 K216    ; 0x3CC13774 := R206
864 [-]: CLOSURE   R206 84      ; R206 := closure(Function #85)
865 [-]: SETGLOBAL R206 K217    ; CanOpenRailJackMissionInCrewship := R206
866 [-]: SETGLOBAL R206 K218    ; 0xA5B49CBE := R206
867 [-]: CLOSURE   R206 85      ; R206 := closure(Function #86)
868 [-]: CLOSURE   R207 86      ; R207 := closure(Function #87)
869 [-]: MOVE      R0 R206      ; R0 := R206
870 [-]: SETGLOBAL R207 K219    ; OnUpdateSessionSettings := R207
871 [-]: SETGLOBAL R207 K220    ; 0xF1D13E45 := R207
872 [-]: CLOSURE   R207 87      ; R207 := closure(Function #88)
873 [-]: MOVE      R0 R86       ; R0 := R86
874 [-]: MOVE      R0 R154      ; R0 := R154
875 [-]: CLOSURE   R208 88      ; R208 := closure(Function #89)
876 [-]: MOVE      R0 R103      ; R0 := R103
877 [-]: MOVE      R0 R99       ; R0 := R99
878 [-]: MOVE      R0 R98       ; R0 := R98
879 [-]: MOVE      R0 R207      ; R0 := R207
880 [-]: MOVE      R0 R2        ; R0 := R2
881 [-]: MOVE      R0 R102      ; R0 := R102
882 [-]: MOVE      R0 R206      ; R0 := R206
883 [-]: MOVE      R0 R121      ; R0 := R121
884 [-]: MOVE      R0 R86       ; R0 := R86
885 [-]: MOVE      R0 R205      ; R0 := R205
886 [-]: CLOSURE   R209 89      ; R209 := closure(Function #90)
887 [-]: MOVE      R0 R49       ; R0 := R49
888 [-]: MOVE      R0 R29       ; R0 := R29
889 [-]: CLOSURE   R210 90      ; R210 := closure(Function #91)
890 [-]: MOVE      R0 R49       ; R0 := R49
891 [-]: MOVE      R0 R29       ; R0 := R29
892 [-]: MOVE      R0 R208      ; R0 := R208
893 [-]: SETGLOBAL R210 K221    ; ConfirmInvasionFaction := R210
894 [-]: SETGLOBAL R210 K222    ; 0xFBA5AB02 := R210
895 [-]: CLOSURE   R210 91      ; R210 := closure(Function #92)
896 [-]: MOVE      R0 R50       ; R0 := R50
897 [-]: MOVE      R0 R99       ; R0 := R99
898 [-]: MOVE      R0 R57       ; R0 := R57
899 [-]: MOVE      R0 R15       ; R0 := R15
900 [-]: MOVE      R0 R29       ; R0 := R29
901 [-]: CLOSURE   R211 92      ; R211 := closure(Function #93)
902 [-]: MOVE      R0 R50       ; R0 := R50
903 [-]: MOVE      R0 R29       ; R0 := R29
904 [-]: MOVE      R0 R15       ; R0 := R15
905 [-]: MOVE      R0 R208      ; R0 := R208
906 [-]: MOVE      R0 R57       ; R0 := R57
907 [-]: MOVE      R0 R99       ; R0 := R99
908 [-]: SETGLOBAL R211 K223    ; OnVoidProjectionChosen := R211
909 [-]: SETGLOBAL R211 K224    ; 0x771EFB2E := R211
910 [-]: CLOSURE   R211 93      ; R211 := closure(Function #94)
911 [-]: SETGLOBAL R211 K225    ; ConfirmIncompatibleOnlineMode := R211
912 [-]: SETGLOBAL R211 K226    ; 0x2CA9D97 := R211
913 [-]: CLOSURE   R211 94      ; R211 := closure(Function #95)
914 [-]: MOVE      R0 R51       ; R0 := R51
915 [-]: MOVE      R0 R98       ; R0 := R98
916 [-]: MOVE      R0 R29       ; R0 := R29
917 [-]: CLOSURE   R212 95      ; R212 := closure(Function #96)
918 [-]: MOVE      R0 R51       ; R0 := R51
919 [-]: MOVE      R0 R29       ; R0 := R29
920 [-]: MOVE      R0 R99       ; R0 := R99
921 [-]: MOVE      R0 R208      ; R0 := R208
922 [-]: SETGLOBAL R212 K227    ; ConfirmNightmare := R212
923 [-]: SETGLOBAL R212 K228    ; 0xEEB0C7FF := R212
924 [-]: CLOSURE   R212 96      ; R212 := closure(Function #97)
925 [-]: SETGLOBAL R212 K229    ; ConfirmRaidSelection := R212
926 [-]: SETGLOBAL R212 K230    ; 0x1E9A77E0 := R212
927 [-]: CLOSURE   R212 97      ; R212 := closure(Function #98)
928 [-]: MOVE      R0 R58       ; R0 := R58
929 [-]: MOVE      R0 R15       ; R0 := R15
930 [-]: MOVE      R0 R29       ; R0 := R29
931 [-]: CLOSURE   R213 98      ; R213 := closure(Function #99)
932 [-]: MOVE      R0 R58       ; R0 := R58
933 [-]: MOVE      R0 R29       ; R0 := R29
934 [-]: MOVE      R0 R15       ; R0 := R15
935 [-]: MOVE      R0 R208      ; R0 := R208
936 [-]: SETGLOBAL R213 K231    ; ConfirmWagerSelection := R213
937 [-]: SETGLOBAL R213 K232    ; 0xAB823E52 := R213
938 [-]: CLOSURE   R213 99      ; R213 := closure(Function #100)
939 [-]: MOVE      R0 R29       ; R0 := R29
940 [-]: MOVE      R0 R53       ; R0 := R53
941 [-]: MOVE      R0 R99       ; R0 := R99
942 [-]: MOVE      R0 R102      ; R0 := R102
943 [-]: MOVE      R0 R98       ; R0 := R98
944 [-]: SETGLOBAL R213 K233    ; OpenSoloMission := R213
945 [-]: SETGLOBAL R213 K234    ; 0xE6723C78 := R213
946 [-]: CLOSURE   R213 100     ; R213 := closure(Function #101)
947 [-]: MOVE      R0 R52       ; R0 := R52
948 [-]: MOVE      R0 R29       ; R0 := R29
949 [-]: MOVE      R0 R53       ; R0 := R53
950 [-]: SETGLOBAL R213 K235    ; ConfirmSoloMission := R213
951 [-]: SETGLOBAL R213 K236    ; 0xCDF468C2 := R213
952 [-]: CLOSURE   R213 101     ; R213 := closure(Function #102)
953 [-]: MOVE      R0 R29       ; R0 := R29
954 [-]: MOVE      R0 R1        ; R0 := R1
955 [-]: MOVE      R0 R70       ; R0 := R70
956 [-]: MOVE      R0 R99       ; R0 := R99
957 [-]: MOVE      R0 R54       ; R0 := R54
958 [-]: MOVE      R0 R98       ; R0 := R98
959 [-]: MOVE      R0 R208      ; R0 := R208
960 [-]: SETGLOBAL R213 K237    ; GotHubInstances := R213
961 [-]: SETGLOBAL R213 K238    ; 0x924FB8E9 := R213
962 [-]: CLOSURE   R213 102     ; R213 := closure(Function #103)
963 [-]: MOVE      R0 R70       ; R0 := R70
964 [-]: MOVE      R0 R1        ; R0 := R1
965 [-]: MOVE      R0 R29       ; R0 := R29
966 [-]: CLOSURE   R214 103     ; R214 := closure(Function #104)
967 [-]: MOVE      R0 R99       ; R0 := R99
968 [-]: CLOSURE   R215 104     ; R215 := closure(Function #105)
969 [-]: MOVE      R0 R99       ; R0 := R99
970 [-]: MOVE      R0 R29       ; R0 := R29
971 [-]: MOVE      R0 R54       ; R0 := R54
972 [-]: MOVE      R0 R209      ; R0 := R209
973 [-]: MOVE      R0 R210      ; R0 := R210
974 [-]: MOVE      R0 R23       ; R0 := R23
975 [-]: MOVE      R0 R1        ; R0 := R1
976 [-]: MOVE      R0 R103      ; R0 := R103
977 [-]: MOVE      R0 R52       ; R0 := R52
978 [-]: MOVE      R0 R53       ; R0 := R53
979 [-]: MOVE      R0 R69       ; R0 := R69
980 [-]: MOVE      R0 R208      ; R0 := R208
981 [-]: MOVE      R0 R204      ; R0 := R204
982 [-]: MOVE      R0 R214      ; R0 := R214
983 [-]: MOVE      R0 R98       ; R0 := R98
984 [-]: MOVE      R0 R87       ; R0 := R87
985 [-]: CLOSURE   R216 105     ; R216 := closure(Function #106)
986 [-]: MOVE      R0 R99       ; R0 := R99
987 [-]: MOVE      R0 R98       ; R0 := R98
988 [-]: CLOSURE   R217 106     ; R217 := closure(Function #107)
989 [-]: MOVE      R0 R43       ; R0 := R43
990 [-]: MOVE      R0 R86       ; R0 := R86
991 [-]: MOVE      R0 R99       ; R0 := R99
992 [-]: MOVE      R0 R98       ; R0 := R98
993 [-]: MOVE      R0 R207      ; R0 := R207
994 [-]: MOVE      R0 R216      ; R0 := R216
995 [-]: MOVE      R0 R208      ; R0 := R208
996 [-]: MOVE      R0 R11       ; R0 := R11
997 [-]: MOVE      R0 R164      ; R0 := R164
998 [-]: MOVE      R0 R210      ; R0 := R210
999 [-]: MOVE      R0 R209      ; R0 := R209
1000 [-]: MOVE      R0 R212      ; R0 := R212
1001 [-]: MOVE      R0 R215      ; R0 := R215
1002 [-]: MOVE      R0 R211      ; R0 := R211
1003 [-]: MOVE      R0 R213      ; R0 := R213
1004 [-]: MOVE      R0 R103      ; R0 := R103
1005 [-]: MOVE      R0 R52       ; R0 := R52
1006 [-]: MOVE      R0 R53       ; R0 := R53
1007 [-]: CLOSURE   R218 107     ; R218 := closure(Function #108)
1008 [-]: MOVE      R0 R158      ; R0 := R158
1009 [-]: SETGLOBAL R218 K239    ; InitializeRailJackMap := R218
1010 [-]: SETGLOBAL R218 K240    ; 0x6A247BFE := R218
1011 [-]: CLOSURE   R218 108     ; R218 := closure(Function #109)
1012 [-]: MOVE      R0 R98       ; R0 := R98
1013 [-]: SETGLOBAL R218 K241    ; InitialFade := R218
1014 [-]: SETGLOBAL R218 K242    ; 0x44C4C57C := R218
1015 [-]: CLOSURE   R218 109     ; R218 := closure(Function #110)
1016 [-]: MOVE      R0 R15       ; R0 := R15
1017 [-]: MOVE      R0 R99       ; R0 := R99
1018 [-]: MOVE      R0 R86       ; R0 := R86
1019 [-]: MOVE      R0 R17       ; R0 := R17
1020 [-]: MOVE      R0 R18       ; R0 := R18
1021 [-]: MOVE      R0 R1        ; R0 := R1
1022 [-]: MOVE      R0 R7        ; R0 := R7
1023 [-]: MOVE      R0 R2        ; R0 := R2
1024 [-]: MOVE      R0 R5        ; R0 := R5
1025 [-]: MOVE      R0 R196      ; R0 := R196
1026 [-]: MOVE      R0 R199      ; R0 := R199
1027 [-]: MOVE      R0 R137      ; R0 := R137
1028 [-]: MOVE      R0 R200      ; R0 := R200
1029 [-]: MOVE      R0 R201      ; R0 := R201
1030 [-]: MOVE      R0 R202      ; R0 := R202
1031 [-]: MOVE      R0 R159      ; R0 := R159
1032 [-]: SETGLOBAL R218 K243    ; InitializeMore := R218
1033 [-]: SETGLOBAL R218 K244    ; 0x3479F2F3 := R218
1034 [-]: CLOSURE   R218 110     ; R218 := closure(Function #111)
1035 [-]: MOVE      R0 R157      ; R0 := R157
1036 [-]: SETGLOBAL R218 K245    ; Shutdown := R218
1037 [-]: SETGLOBAL R218 K246    ; 0x3C577FA3 := R218
1038 [-]: CLOSURE   R218 111     ; R218 := closure(Function #112)
1039 [-]: MOVE      R0 R13       ; R0 := R13
1040 [-]: CLOSURE   R219 112     ; R219 := closure(Function #113)
1041 [-]: MOVE      R0 R98       ; R0 := R98
1042 [-]: CLOSURE   R220 113     ; R220 := closure(Function #114)
1043 [-]: MOVE      R0 R43       ; R0 := R43
1044 [-]: MOVE      R0 R2        ; R0 := R2
1045 [-]: MOVE      R0 R3        ; R0 := R3
1046 [-]: MOVE      R0 R86       ; R0 := R86
1047 [-]: MOVE      R0 R61       ; R0 := R61
1048 [-]: MOVE      R0 R123      ; R0 := R123
1049 [-]: MOVE      R0 R25       ; R0 := R25
1050 [-]: MOVE      R0 R35       ; R0 := R35
1051 [-]: MOVE      R0 R28       ; R0 := R28
1052 [-]: MOVE      R0 R88       ; R0 := R88
1053 [-]: MOVE      R0 R41       ; R0 := R41
1054 [-]: MOVE      R0 R29       ; R0 := R29
1055 [-]: MOVE      R0 R98       ; R0 := R98
1056 [-]: MOVE      R0 R62       ; R0 := R62
1057 [-]: MOVE      R0 R21       ; R0 := R21
1058 [-]: CLOSURE   R221 114     ; R221 := closure(Function #115)
1059 [-]: MOVE      R0 R86       ; R0 := R86
1060 [-]: MOVE      R0 R108      ; R0 := R108
1061 [-]: MOVE      R0 R74       ; R0 := R74
1062 [-]: MOVE      R0 R41       ; R0 := R41
1063 [-]: MOVE      R0 R35       ; R0 := R35
1064 [-]: MOVE      R0 R116      ; R0 := R116
1065 [-]: CLOSURE   R222 115     ; R222 := closure(Function #116)
1066 [-]: MOVE      R0 R95       ; R0 := R95
1067 [-]: MOVE      R0 R94       ; R0 := R94
1068 [-]: MOVE      R0 R96       ; R0 := R96
1069 [-]: MOVE      R0 R219      ; R0 := R219
1070 [-]: MOVE      R0 R1        ; R0 := R1
1071 [-]: MOVE      R0 R22       ; R0 := R22
1072 [-]: MOVE      R0 R174      ; R0 := R174
1073 [-]: MOVE      R0 R63       ; R0 := R63
1074 [-]: MOVE      R0 R188      ; R0 := R188
1075 [-]: MOVE      R0 R220      ; R0 := R220
1076 [-]: MOVE      R0 R92       ; R0 := R92
1077 [-]: MOVE      R0 R98       ; R0 := R98
1078 [-]: MOVE      R0 R138      ; R0 := R138
1079 [-]: MOVE      R0 R185      ; R0 := R185
1080 [-]: MOVE      R0 R88       ; R0 := R88
1081 [-]: MOVE      R0 R32       ; R0 := R32
1082 [-]: MOVE      R0 R86       ; R0 := R86
1083 [-]: MOVE      R0 R33       ; R0 := R33
1084 [-]: MOVE      R0 R34       ; R0 := R34
1085 [-]: MOVE      R0 R35       ; R0 := R35
1086 [-]: MOVE      R0 R36       ; R0 := R36
1087 [-]: MOVE      R0 R172      ; R0 := R172
1088 [-]: MOVE      R0 R45       ; R0 := R45
1089 [-]: MOVE      R0 R13       ; R0 := R13
1090 [-]: MOVE      R0 R74       ; R0 := R74
1091 [-]: MOVE      R0 R41       ; R0 := R41
1092 [-]: MOVE      R0 R108      ; R0 := R108
1093 [-]: MOVE      R0 R114      ; R0 := R114
1094 [-]: MOVE      R0 R115      ; R0 := R115
1095 [-]: MOVE      R0 R116      ; R0 := R116
1096 [-]: MOVE      R0 R221      ; R0 := R221
1097 [-]: MOVE      R0 R2        ; R0 := R2
1098 [-]: MOVE      R0 R76       ; R0 := R76
1099 [-]: MOVE      R0 R43       ; R0 := R43
1100 [-]: MOVE      R0 R39       ; R0 := R39
1101 [-]: MOVE      R0 R87       ; R0 := R87
1102 [-]: MOVE      R0 R77       ; R0 := R77
1103 [-]: MOVE      R0 R40       ; R0 := R40
1104 [-]: MOVE      R0 R117      ; R0 := R117
1105 [-]: CLOSURE   R223 116     ; R223 := closure(Function #117)
1106 [-]: MOVE      R0 R72       ; R0 := R72
1107 [-]: MOVE      R0 R61       ; R0 := R61
1108 [-]: MOVE      R0 R98       ; R0 := R98
1109 [-]: CLOSURE   R224 117     ; R224 := closure(Function #118)
1110 [-]: MOVE      R0 R127      ; R0 := R127
1111 [-]: MOVE      R0 R1        ; R0 := R1
1112 [-]: MOVE      R0 R28       ; R0 := R28
1113 [-]: MOVE      R0 R41       ; R0 := R41
1114 [-]: MOVE      R0 R120      ; R0 := R120
1115 [-]: MOVE      R0 R32       ; R0 := R32
1116 [-]: MOVE      R0 R136      ; R0 := R136
1117 [-]: MOVE      R0 R21       ; R0 := R21
1118 [-]: MOVE      R0 R88       ; R0 := R88
1119 [-]: MOVE      R0 R64       ; R0 := R64
1120 [-]: MOVE      R0 R188      ; R0 := R188
1121 [-]: MOVE      R0 R63       ; R0 := R63
1122 [-]: CLOSURE   R225 118     ; R225 := closure(Function #119)
1123 [-]: MOVE      R0 R18       ; R0 := R18
1124 [-]: MOVE      R0 R35       ; R0 := R35
1125 [-]: MOVE      R0 R150      ; R0 := R150
1126 [-]: MOVE      R0 R2        ; R0 := R2
1127 [-]: MOVE      R0 R41       ; R0 := R41
1128 [-]: CLOSURE   R226 119     ; R226 := closure(Function #120)
1129 [-]: MOVE      R0 R98       ; R0 := R98
1130 [-]: CLOSURE   R227 120     ; R227 := closure(Function #121)
1131 [-]: MOVE      R0 R13       ; R0 := R13
1132 [-]: MOVE      R0 R35       ; R0 := R35
1133 [-]: MOVE      R0 R37       ; R0 := R37
1134 [-]: MOVE      R0 R38       ; R0 := R38
1135 [-]: MOVE      R0 R33       ; R0 := R33
1136 [-]: MOVE      R0 R34       ; R0 := R34
1137 [-]: MOVE      R0 R43       ; R0 := R43
1138 [-]: MOVE      R0 R39       ; R0 := R39
1139 [-]: MOVE      R0 R76       ; R0 := R76
1140 [-]: MOVE      R0 R40       ; R0 := R40
1141 [-]: MOVE      R0 R2        ; R0 := R2
1142 [-]: MOVE      R0 R77       ; R0 := R77
1143 [-]: MOVE      R0 R95       ; R0 := R95
1144 [-]: MOVE      R0 R94       ; R0 := R94
1145 [-]: MOVE      R0 R88       ; R0 := R88
1146 [-]: MOVE      R0 R21       ; R0 := R21
1147 [-]: MOVE      R0 R46       ; R0 := R46
1148 [-]: MOVE      R0 R47       ; R0 := R47
1149 [-]: MOVE      R0 R125      ; R0 := R125
1150 [-]: MOVE      R0 R22       ; R0 := R22
1151 [-]: MOVE      R0 R117      ; R0 := R117
1152 [-]: MOVE      R0 R3        ; R0 := R3
1153 [-]: MOVE      R0 R63       ; R0 := R63
1154 [-]: MOVE      R0 R226      ; R0 := R226
1155 [-]: MOVE      R0 R87       ; R0 := R87
1156 [-]: MOVE      R0 R8        ; R0 := R8
1157 [-]: MOVE      R0 R75       ; R0 := R75
1158 [-]: MOVE      R0 R153      ; R0 := R153
1159 [-]: MOVE      R0 R225      ; R0 := R225
1160 [-]: MOVE      R0 R127      ; R0 := R127
1161 [-]: MOVE      R0 R98       ; R0 := R98
1162 [-]: MOVE      R0 R132      ; R0 := R132
1163 [-]: MOVE      R0 R67       ; R0 := R67
1164 [-]: MOVE      R0 R143      ; R0 := R143
1165 [-]: MOVE      R0 R223      ; R0 := R223
1166 [-]: MOVE      R0 R25       ; R0 := R25
1167 [-]: MOVE      R0 R224      ; R0 := R224
1168 [-]: MOVE      R0 R74       ; R0 := R74
1169 [-]: MOVE      R0 R108      ; R0 := R108
1170 [-]: MOVE      R0 R73       ; R0 := R73
1171 [-]: GETGLOBAL R228 K12     ; R228 := 0x221C9700
1172 [-]: CALL      R228 1 2     ; R228 := R228()
1173 [-]: CLOSURE   R229 121     ; R229 := closure(Function #122)
1174 [-]: MOVE      R0 R90       ; R0 := R90
1175 [-]: MOVE      R0 R92       ; R0 := R92
1176 [-]: MOVE      R0 R8        ; R0 := R8
1177 [-]: MOVE      R0 R219      ; R0 := R219
1178 [-]: MOVE      R0 R228      ; R0 := R228
1179 [-]: CLOSURE   R124 122     ; R124 := closure(Function #123)
1180 [-]: MOVE      R0 R123      ; R0 := R123
1181 [-]: MOVE      R0 R22       ; R0 := R22
1182 [-]: MOVE      R0 R98       ; R0 := R98
1183 [-]: CLOSURE   R230 123     ; R230 := closure(Function #124)
1184 [-]: MOVE      R0 R16       ; R0 := R16
1185 [-]: MOVE      R0 R41       ; R0 := R41
1186 [-]: MOVE      R0 R98       ; R0 := R98
1187 [-]: CLOSURE   R231 124     ; R231 := closure(Function #125)
1188 [-]: MOVE      R0 R58       ; R0 := R58
1189 [-]: MOVE      R0 R22       ; R0 := R22
1190 [-]: CLOSURE   R232 125     ; R232 := closure(Function #126)
1191 [-]: MOVE      R0 R98       ; R0 := R98
1192 [-]: MOVE      R0 R86       ; R0 := R86
1193 [-]: SETTABLE  R86 K247 R232; R86["IntersectVoidPlane"] := R232
1194 [-]: CLOSURE   R232 126     ; R232 := closure(Function #127)
1195 [-]: MOVE      R0 R86       ; R0 := R86
1196 [-]: SETTABLE  R86 K248 R232; R86["SetDistortions"] := R232
1197 [-]: CLOSURE   R232 127     ; R232 := closure(Function #128)
1198 [-]: MOVE      R0 R106      ; R0 := R106
1199 [-]: MOVE      R0 R13       ; R0 := R13
1200 [-]: MOVE      R0 R86       ; R0 := R86
1201 [-]: MOVE      R0 R28       ; R0 := R28
1202 [-]: MOVE      R0 R35       ; R0 := R35
1203 [-]: MOVE      R0 R41       ; R0 := R41
1204 [-]: MOVE      R0 R2        ; R0 := R2
1205 [-]: MOVE      R0 R3        ; R0 := R3
1206 [-]: MOVE      R0 R22       ; R0 := R22
1207 [-]: MOVE      R0 R105      ; R0 := R105
1208 [-]: MOVE      R0 R56       ; R0 := R56
1209 [-]: MOVE      R0 R98       ; R0 := R98
1210 [-]: MOVE      R0 R111      ; R0 := R111
1211 [-]: MOVE      R0 R112      ; R0 := R112
1212 [-]: MOVE      R0 R44       ; R0 := R44
1213 [-]: MOVE      R0 R18       ; R0 := R18
1214 [-]: MOVE      R0 R19       ; R0 := R19
1215 [-]: MOVE      R0 R15       ; R0 := R15
1216 [-]: MOVE      R0 R130      ; R0 := R130
1217 [-]: MOVE      R0 R29       ; R0 := R29
1218 [-]: MOVE      R0 R23       ; R0 := R23
1219 [-]: MOVE      R0 R43       ; R0 := R43
1220 [-]: MOVE      R0 R230      ; R0 := R230
1221 [-]: MOVE      R0 R217      ; R0 := R217
1222 [-]: MOVE      R0 R73       ; R0 := R73
1223 [-]: MOVE      R0 R25       ; R0 := R25
1224 [-]: MOVE      R0 R118      ; R0 := R118
1225 [-]: MOVE      R0 R119      ; R0 := R119
1226 [-]: MOVE      R0 R103      ; R0 := R103
1227 [-]: MOVE      R0 R195      ; R0 := R195
1228 [-]: MOVE      R0 R222      ; R0 := R222
1229 [-]: MOVE      R0 R218      ; R0 := R218
1230 [-]: MOVE      R0 R227      ; R0 := R227
1231 [-]: MOVE      R0 R229      ; R0 := R229
1232 [-]: MOVE      R0 R146      ; R0 := R146
1233 [-]: MOVE      R0 R69       ; R0 := R69
1234 [-]: MOVE      R0 R52       ; R0 := R52
1235 [-]: MOVE      R0 R108      ; R0 := R108
1236 [-]: MOVE      R0 R88       ; R0 := R88
1237 [-]: MOVE      R0 R87       ; R0 := R87
1238 [-]: MOVE      R0 R183      ; R0 := R183
1239 [-]: MOVE      R0 R109      ; R0 := R109
1240 [-]: MOVE      R0 R110      ; R0 := R110
1241 [-]: MOVE      R0 R74       ; R0 := R74
1242 [-]: MOVE      R0 R79       ; R0 := R79
1243 [-]: MOVE      R0 R78       ; R0 := R78
1244 [-]: MOVE      R0 R46       ; R0 := R46
1245 [-]: MOVE      R0 R80       ; R0 := R80
1246 [-]: MOVE      R0 R84       ; R0 := R84
1247 [-]: MOVE      R0 R99       ; R0 := R99
1248 [-]: MOVE      R0 R48       ; R0 := R48
1249 [-]: MOVE      R0 R128      ; R0 := R128
1250 [-]: MOVE      R0 R231      ; R0 := R231
1251 [-]: MOVE      R0 R66       ; R0 := R66
1252 [-]: MOVE      R0 R159      ; R0 := R159
1253 [-]: SETGLOBAL R232 K249    ; Update := R232
1254 [-]: SETGLOBAL R232 K250    ; 0x8C7099E9 := R232
1255 [-]: CLOSURE   R232 128     ; R232 := closure(Function #129)
1256 [-]: MOVE      R0 R86       ; R0 := R86
1257 [-]: MOVE      R0 R102      ; R0 := R102
1258 [-]: CLOSURE   R233 129     ; R233 := closure(Function #130)
1259 [-]: MOVE      R0 R232      ; R0 := R232
1260 [-]: MOVE      R0 R98       ; R0 := R98
1261 [-]: CLOSURE   R121 130     ; R121 := closure(Function #131)
1262 [-]: MOVE      R0 R29       ; R0 := R29
1263 [-]: MOVE      R0 R15       ; R0 := R15
1264 [-]: MOVE      R0 R18       ; R0 := R18
1265 [-]: MOVE      R0 R95       ; R0 := R95
1266 [-]: MOVE      R0 R94       ; R0 := R94
1267 [-]: MOVE      R0 R148      ; R0 := R148
1268 [-]: MOVE      R0 R35       ; R0 := R35
1269 [-]: MOVE      R0 R28       ; R0 := R28
1270 [-]: MOVE      R0 R98       ; R0 := R98
1271 [-]: MOVE      R0 R232      ; R0 := R232
1272 [-]: MOVE      R0 R32       ; R0 := R32
1273 [-]: MOVE      R0 R108      ; R0 := R108
1274 [-]: MOVE      R0 R74       ; R0 := R74
1275 [-]: MOVE      R0 R114      ; R0 := R114
1276 [-]: MOVE      R0 R233      ; R0 := R233
1277 [-]: CLOSURE   R234 131     ; R234 := closure(Function #132)
1278 [-]: MOVE      R0 R121      ; R0 := R121
1279 [-]: SETGLOBAL R234 K251    ; TransitionOut := R234
1280 [-]: SETGLOBAL R234 K252    ; 0x7097B1B4 := R234
1281 [-]: CLOSURE   R234 132     ; R234 := closure(Function #133)
1282 [-]: CLOSURE   R235 133     ; R235 := closure(Function #134)
1283 [-]: MOVE      R0 R29       ; R0 := R29
1284 [-]: MOVE      R0 R98       ; R0 := R98
1285 [-]: MOVE      R0 R55       ; R0 := R55
1286 [-]: MOVE      R0 R90       ; R0 := R90
1287 [-]: MOVE      R0 R32       ; R0 := R32
1288 [-]: MOVE      R0 R95       ; R0 := R95
1289 [-]: MOVE      R0 R94       ; R0 := R94
1290 [-]: MOVE      R0 R96       ; R0 := R96
1291 [-]: CLOSURE   R236 134     ; R236 := closure(Function #135)
1292 [-]: MOVE      R0 R235      ; R0 := R235
1293 [-]: SETGLOBAL R236 K253    ; onKeyUp_MENU_CLICK := R236
1294 [-]: SETGLOBAL R236 K254    ; 0x367BCD7E := R236
1295 [-]: CLOSURE   R120 135     ; R120 := closure(Function #136)
1296 [-]: CLOSURE   R236 136     ; R236 := closure(Function #137)
1297 [-]: MOVE      R0 R2        ; R0 := R2
1298 [-]: MOVE      R0 R45       ; R0 := R45
1299 [-]: CLOSURE   R237 137     ; R237 := closure(Function #138)
1300 [-]: MOVE      R0 R41       ; R0 := R41
1301 [-]: MOVE      R0 R171      ; R0 := R171
1302 [-]: MOVE      R0 R42       ; R0 := R42
1303 [-]: CLOSURE   R119 138     ; R119 := closure(Function #139)
1304 [-]: MOVE      R0 R41       ; R0 := R41
1305 [-]: MOVE      R0 R237      ; R0 := R237
1306 [-]: MOVE      R0 R120      ; R0 := R120
1307 [-]: MOVE      R0 R32       ; R0 := R32
1308 [-]: MOVE      R0 R35       ; R0 := R35
1309 [-]: MOVE      R0 R36       ; R0 := R36
1310 [-]: MOVE      R0 R80       ; R0 := R80
1311 [-]: MOVE      R0 R98       ; R0 := R98
1312 [-]: MOVE      R0 R84       ; R0 := R84
1313 [-]: MOVE      R0 R159      ; R0 := R159
1314 [-]: MOVE      R0 R112      ; R0 := R112
1315 [-]: MOVE      R0 R86       ; R0 := R86
1316 [-]: MOVE      R0 R1        ; R0 := R1
1317 [-]: MOVE      R0 R104      ; R0 := R104
1318 [-]: CLOSURE   R118 139     ; R118 := closure(Function #140)
1319 [-]: MOVE      R0 R41       ; R0 := R41
1320 [-]: MOVE      R0 R237      ; R0 := R237
1321 [-]: MOVE      R0 R80       ; R0 := R80
1322 [-]: MOVE      R0 R98       ; R0 := R98
1323 [-]: MOVE      R0 R84       ; R0 := R84
1324 [-]: MOVE      R0 R120      ; R0 := R120
1325 [-]: MOVE      R0 R32       ; R0 := R32
1326 [-]: MOVE      R0 R35       ; R0 := R35
1327 [-]: MOVE      R0 R33       ; R0 := R33
1328 [-]: MOVE      R0 R34       ; R0 := R34
1329 [-]: MOVE      R0 R29       ; R0 := R29
1330 [-]: MOVE      R0 R112      ; R0 := R112
1331 [-]: CLOSURE   R238 140     ; R238 := closure(Function #141)
1332 [-]: MOVE      R0 R48       ; R0 := R48
1333 [-]: MOVE      R0 R99       ; R0 := R99
1334 [-]: MOVE      R0 R9        ; R0 := R9
1335 [-]: MOVE      R0 R98       ; R0 := R98
1336 [-]: MOVE      R0 R27       ; R0 := R27
1337 [-]: MOVE      R0 R43       ; R0 := R43
1338 [-]: MOVE      R0 R89       ; R0 := R89
1339 [-]: MOVE      R0 R86       ; R0 := R86
1340 [-]: MOVE      R0 R87       ; R0 := R87
1341 [-]: CLOSURE   R239 141     ; R239 := closure(Function #142)
1342 [-]: MOVE      R0 R129      ; R0 := R129
1343 [-]: MOVE      R0 R43       ; R0 := R43
1344 [-]: SETGLOBAL R239 K255    ; OnEmblemReady := R239
1345 [-]: SETGLOBAL R239 K256    ; 0x855C37AA := R239
1346 [-]: CLOSURE   R239 142     ; R239 := closure(Function #143)
1347 [-]: MOVE      R0 R46       ; R0 := R46
1348 [-]: MOVE      R0 R47       ; R0 := R47
1349 [-]: MOVE      R0 R43       ; R0 := R43
1350 [-]: MOVE      R0 R162      ; R0 := R162
1351 [-]: MOVE      R0 R22       ; R0 := R22
1352 [-]: MOVE      R0 R44       ; R0 := R44
1353 [-]: MOVE      R0 R95       ; R0 := R95
1354 [-]: MOVE      R0 R94       ; R0 := R94
1355 [-]: MOVE      R0 R144      ; R0 := R144
1356 [-]: MOVE      R0 R98       ; R0 := R98
1357 [-]: MOVE      R0 R230      ; R0 := R230
1358 [-]: MOVE      R0 R81       ; R0 := R81
1359 [-]: MOVE      R0 R71       ; R0 := R71
1360 [-]: MOVE      R0 R1        ; R0 := R1
1361 [-]: MOVE      R0 R99       ; R0 := R99
1362 [-]: MOVE      R0 R23       ; R0 := R23
1363 [-]: MOVE      R0 R86       ; R0 := R86
1364 [-]: MOVE      R0 R238      ; R0 := R238
1365 [-]: MOVE      R0 R60       ; R0 := R60
1366 [-]: MOVE      R0 R129      ; R0 := R129
1367 [-]: MOVE      R0 R14       ; R0 := R14
1368 [-]: MOVE      R0 R9        ; R0 := R9
1369 [-]: MOVE      R0 R67       ; R0 := R67
1370 [-]: MOVE      R0 R88       ; R0 := R88
1371 [-]: CLOSURE   R125 143     ; R125 := closure(Function #144)
1372 [-]: MOVE      R0 R46       ; R0 := R46
1373 [-]: MOVE      R0 R47       ; R0 := R47
1374 [-]: MOVE      R0 R43       ; R0 := R43
1375 [-]: MOVE      R0 R44       ; R0 := R44
1376 [-]: MOVE      R0 R22       ; R0 := R22
1377 [-]: MOVE      R0 R67       ; R0 := R67
1378 [-]: MOVE      R0 R162      ; R0 := R162
1379 [-]: MOVE      R0 R88       ; R0 := R88
1380 [-]: MOVE      R0 R16       ; R0 := R16
1381 [-]: CLOSURE   R240 144     ; R240 := closure(Function #145)
1382 [-]: MOVE      R0 R29       ; R0 := R29
1383 [-]: MOVE      R0 R15       ; R0 := R15
1384 [-]: MOVE      R0 R86       ; R0 := R86
1385 [-]: MOVE      R0 R43       ; R0 := R43
1386 [-]: MOVE      R0 R2        ; R0 := R2
1387 [-]: MOVE      R0 R87       ; R0 := R87
1388 [-]: MOVE      R0 R98       ; R0 := R98
1389 [-]: MOVE      R0 R95       ; R0 := R95
1390 [-]: MOVE      R0 R94       ; R0 := R94
1391 [-]: MOVE      R0 R96       ; R0 := R96
1392 [-]: MOVE      R0 R219      ; R0 := R219
1393 [-]: MOVE      R0 R22       ; R0 := R22
1394 [-]: MOVE      R0 R92       ; R0 := R92
1395 [-]: MOVE      R0 R145      ; R0 := R145
1396 [-]: MOVE      R0 R32       ; R0 := R32
1397 [-]: MOVE      R0 R90       ; R0 := R90
1398 [-]: MOVE      R0 R8        ; R0 := R8
1399 [-]: MOVE      R0 R91       ; R0 := R91
1400 [-]: MOVE      R0 R234      ; R0 := R234
1401 [-]: MOVE      R0 R59       ; R0 := R59
1402 [-]: MOVE      R0 R55       ; R0 := R55
1403 [-]: MOVE      R0 R93       ; R0 := R93
1404 [-]: MOVE      R0 R118      ; R0 := R118
1405 [-]: MOVE      R0 R97       ; R0 := R97
1406 [-]: MOVE      R0 R217      ; R0 := R217
1407 [-]: MOVE      R0 R73       ; R0 := R73
1408 [-]: MOVE      R0 R119      ; R0 := R119
1409 [-]: MOVE      R0 R123      ; R0 := R123
1410 [-]: CLOSURE   R241 145     ; R241 := closure(Function #146)
1411 [-]: MOVE      R0 R240      ; R0 := R240
1412 [-]: SETGLOBAL R241 K257    ; onKeyDown_MENU_CLICK := R241
1413 [-]: SETGLOBAL R241 K258    ; 0xE40A2FCA := R241
1414 [-]: CLOSURE   R241 146     ; R241 := closure(Function #147)
1415 [-]: MOVE      R0 R43       ; R0 := R43
1416 [-]: MOVE      R0 R240      ; R0 := R240
1417 [-]: SETGLOBAL R241 K259    ; onKeyDown_MENU_SELECT := R241
1418 [-]: SETGLOBAL R241 K260    ; 0xEEDD1ACF := R241
1419 [-]: CLOSURE   R241 147     ; R241 := closure(Function #148)
1420 [-]: MOVE      R0 R43       ; R0 := R43
1421 [-]: MOVE      R0 R235      ; R0 := R235
1422 [-]: SETGLOBAL R241 K261    ; onKeyUp_MENU_SELECT := R241
1423 [-]: SETGLOBAL R241 K262    ; 0x4874089C := R241
1424 [-]: CLOSURE   R241 148     ; R241 := closure(Function #149)
1425 [-]: MOVE      R0 R29       ; R0 := R29
1426 [-]: MOVE      R0 R90       ; R0 := R90
1427 [-]: MOVE      R0 R32       ; R0 := R32
1428 [-]: SETGLOBAL R241 K263    ; onKeyUp_MENU_RIGHT_CLICK := R241
1429 [-]: SETGLOBAL R241 K264    ; 0x3A763170 := R241
1430 [-]: CLOSURE   R241 149     ; R241 := closure(Function #150)
1431 [-]: MOVE      R0 R29       ; R0 := R29
1432 [-]: MOVE      R0 R15       ; R0 := R15
1433 [-]: MOVE      R0 R90       ; R0 := R90
1434 [-]: MOVE      R0 R32       ; R0 := R32
1435 [-]: MOVE      R0 R35       ; R0 := R35
1436 [-]: MOVE      R0 R28       ; R0 := R28
1437 [-]: MOVE      R0 R80       ; R0 := R80
1438 [-]: MOVE      R0 R98       ; R0 := R98
1439 [-]: MOVE      R0 R84       ; R0 := R84
1440 [-]: MOVE      R0 R41       ; R0 := R41
1441 [-]: MOVE      R0 R42       ; R0 := R42
1442 [-]: MOVE      R0 R125      ; R0 := R125
1443 [-]: MOVE      R0 R112      ; R0 := R112
1444 [-]: MOVE      R0 R113      ; R0 := R113
1445 [-]: MOVE      R0 R159      ; R0 := R159
1446 [-]: SETGLOBAL R241 K265    ; onKeyDown_MENU_RIGHT_CLICK := R241
1447 [-]: SETGLOBAL R241 K266    ; 0xA930FBF := R241
1448 [-]: CLOSURE   R241 150     ; R241 := closure(Function #151)
1449 [-]: SETGLOBAL R241 K267    ; onKeyUp_NEXT_MENU := R241
1450 [-]: SETGLOBAL R241 K268    ; 0x9D432BFE := R241
1451 [-]: CLOSURE   R241 151     ; R241 := closure(Function #152)
1452 [-]: SETGLOBAL R241 K269    ; onKeyDown_NEXT_MENU := R241
1453 [-]: SETGLOBAL R241 K270    ; 0xE25DD8CF := R241
1454 [-]: CLOSURE   R241 152     ; R241 := closure(Function #153)
1455 [-]: MOVE      R0 R29       ; R0 := R29
1456 [-]: MOVE      R0 R28       ; R0 := R28
1457 [-]: MOVE      R0 R35       ; R0 := R35
1458 [-]: MOVE      R0 R95       ; R0 := R95
1459 [-]: MOVE      R0 R94       ; R0 := R94
1460 [-]: MOVE      R0 R43       ; R0 := R43
1461 [-]: MOVE      R0 R41       ; R0 := R41
1462 [-]: MOVE      R0 R131      ; R0 := R131
1463 [-]: MOVE      R0 R98       ; R0 := R98
1464 [-]: MOVE      R0 R119      ; R0 := R119
1465 [-]: MOVE      R0 R121      ; R0 := R121
1466 [-]: SETGLOBAL R241 K271    ; onKeyDown_MENU_MOUSE_Z := R241
1467 [-]: SETGLOBAL R241 K272    ; 0x56EAD3A9 := R241
1468 [-]: CLOSURE   R241 153     ; R241 := closure(Function #154)
1469 [-]: MOVE      R0 R93       ; R0 := R93
1470 [-]: MOVE      R0 R98       ; R0 := R98
1471 [-]: MOVE      R0 R92       ; R0 := R92
1472 [-]: MOVE      R0 R95       ; R0 := R95
1473 [-]: MOVE      R0 R94       ; R0 := R94
1474 [-]: MOVE      R0 R203      ; R0 := R203
1475 [-]: MOVE      R0 R139      ; R0 := R139
1476 [-]: MOVE      R0 R148      ; R0 := R148
1477 [-]: MOVE      R0 R1        ; R0 := R1
1478 [-]: MOVE      R0 R96       ; R0 := R96
1479 [-]: MOVE      R0 R63       ; R0 := R63
1480 [-]: MOVE      R0 R6        ; R0 := R6
1481 [-]: MOVE      R0 R145      ; R0 := R145
1482 [-]: MOVE      R0 R190      ; R0 := R190
1483 [-]: MOVE      R0 R2        ; R0 := R2
1484 [-]: MOVE      R0 R119      ; R0 := R119
1485 [-]: MOVE      R0 R146      ; R0 := R146
1486 [-]: MOVE      R0 R71       ; R0 := R71
1487 [-]: MOVE      R0 R15       ; R0 := R15
1488 [-]: SETGLOBAL R241 K273    ; onRawInputEvent := R241
1489 [-]: SETGLOBAL R241 K274    ; 0x11563913 := R241
1490 [-]: CLOSURE   R241 154     ; R241 := closure(Function #155)
1491 [-]: MOVE      R0 R239      ; R0 := R239
1492 [-]: SETGLOBAL R241 K275    ; NodeRollOver := R241
1493 [-]: SETGLOBAL R241 K276    ; 0xFA36E361 := R241
1494 [-]: CLOSURE   R241 155     ; R241 := closure(Function #156)
1495 [-]: MOVE      R0 R125      ; R0 := R125
1496 [-]: SETGLOBAL R241 K277    ; NodeRollOut := R241
1497 [-]: SETGLOBAL R241 K278    ; 0xA4A3822 := R241
1498 [-]: CLOSURE   R241 156     ; R241 := closure(Function #157)
1499 [-]: MOVE      R0 R46       ; R0 := R46
1500 [-]: MOVE      R0 R47       ; R0 := R47
1501 [-]: MOVE      R0 R22       ; R0 := R22
1502 [-]: SETGLOBAL R241 K279    ; NodeSelect := R241
1503 [-]: SETGLOBAL R241 K280    ; 0x6FB07481 := R241
1504 [-]: CLOSURE   R241 157     ; R241 := closure(Function #158)
1505 [-]: MOVE      R0 R15       ; R0 := R15
1506 [-]: SETGLOBAL R241 K281    ; WorldStateWindowVisChanged := R241
1507 [-]: SETGLOBAL R241 K282    ; 0x6E3DB508 := R241
1508 [-]: CLOSURE   R241 158     ; R241 := closure(Function #159)
1509 [-]: MOVE      R0 R15       ; R0 := R15
1510 [-]: MOVE      R0 R159      ; R0 := R159
1511 [-]: SETGLOBAL R241 K283    ; WSWDioramaChanged := R241
1512 [-]: SETGLOBAL R241 K284    ; 0xE705EF6F := R241
1513 [-]: CLOSURE   R241 159     ; R241 := closure(Function #160)
1514 [-]: MOVE      R0 R133      ; R0 := R133
1515 [-]: MOVE      R0 R227      ; R0 := R227
1516 [-]: SETGLOBAL R241 K285    ; onViewportSizeChanged := R241
1517 [-]: SETGLOBAL R241 K286    ; 0x3A900427 := R241
1518 [-]: CLOSURE   R241 160     ; R241 := closure(Function #161)
1519 [-]: MOVE      R0 R106      ; R0 := R106
1520 [-]: MOVE      R0 R13       ; R0 := R13
1521 [-]: SETGLOBAL R241 K287    ; ForceUpdate3DElements := R241
1522 [-]: SETGLOBAL R241 K288    ; 0xE9112D25 := R241
1523 [-]: CLOSURE   R241 161     ; R241 := closure(Function #162)
1524 [-]: MOVE      R0 R29       ; R0 := R29
1525 [-]: SETGLOBAL R241 K289    ; IsInputBlocked := R241
1526 [-]: SETGLOBAL R241 K290    ; 0x6FE7E740 := R241
1527 [-]: CLOSURE   R241 162     ; R241 := closure(Function #163)
1528 [-]: SETGLOBAL R241 K291    ; SetTrigger := R241
1529 [-]: SETGLOBAL R241 K292    ; 0x3F956A34 := R241
1530 [-]: CLOSURE   R241 163     ; R241 := closure(Function #164)
1531 [-]: MOVE      R0 R179      ; R0 := R179
1532 [-]: SETGLOBAL R241 K293    ; OnQuestsChanged := R241
1533 [-]: SETGLOBAL R241 K294    ; 0x406548E4 := R241
1534 [-]: CLOSURE   R241 164     ; R241 := closure(Function #165)
1535 [-]: MOVE      R0 R79       ; R0 := R79
1536 [-]: MOVE      R0 R78       ; R0 := R78
1537 [-]: MOVE      R0 R23       ; R0 := R23
1538 [-]: MOVE      R0 R177      ; R0 := R177
1539 [-]: SETGLOBAL R241 K295    ; OnWorldStateChanged := R241
1540 [-]: SETGLOBAL R241 K296    ; 0xECDF5016 := R241
1541 [-]: GETGLOBAL R241 K297    ; R241 := _T
1542 [-]: LOADK     R242 K298    ; R242 := "RadialSolarMapFade"
1543 [-]: CLOSURE   R243 165     ; R243 := closure(Function #166)
1544 [-]: MOVE      R0 R73       ; R0 := R73
1545 [-]: MOVE      R0 R29       ; R0 := R29
1546 [-]: MOVE      R0 R236      ; R0 := R236
1547 [-]: MOVE      R0 R32       ; R0 := R32
1548 [-]: MOVE      R0 R35       ; R0 := R35
1549 [-]: MOVE      R0 R13       ; R0 := R13
1550 [-]: MOVE      R0 R74       ; R0 := R74
1551 [-]: MOVE      R0 R108      ; R0 := R108
1552 [-]: SETTABLE  R241 R242 R243; R241[R242] := R243
1553 [-]: CLOSURE   R241 166     ; R241 := closure(Function #167)
1554 [-]: MOVE      R0 R159      ; R0 := R159
1555 [-]: SETGLOBAL R241 K299    ; PlayersChanged := R241
1556 [-]: SETGLOBAL R241 K300    ; 0x2C9E65B5 := R241
1557 [-]: CLOSURE   R241 167     ; R241 := closure(Function #168)
1558 [-]: MOVE      R0 R128      ; R0 := R128
1559 [-]: SETGLOBAL R241 K301    ; OnSquadMissionChanged := R241
1560 [-]: SETGLOBAL R241 K302    ; 0xB5CFAF92 := R241
1561 [-]: CLOSURE   R241 168     ; R241 := closure(Function #169)
1562 [-]: MOVE      R0 R30       ; R0 := R30
1563 [-]: MOVE      R0 R98       ; R0 := R98
1564 [-]: SETGLOBAL R241 K303    ; OnLoadoutChanged := R241
1565 [-]: SETGLOBAL R241 K304    ; 0xB7028B7 := R241
1566 [-]: CLOSURE   R241 169     ; R241 := closure(Function #170)
1567 [-]: MOVE      R0 R159      ; R0 := R159
1568 [-]: MOVE      R0 R192      ; R0 := R192
1569 [-]: SETGLOBAL R241 K305    ; OnGamepadTransition := R241
1570 [-]: SETGLOBAL R241 K306    ; 0x98E4F633 := R241
1571 [-]: CLOSURE   R241 170     ; R241 := closure(Function #171)
1572 [-]: SETGLOBAL R241 K307    ; SupportsThemes := R241
1573 [-]: SETGLOBAL R241 K308    ; 0xDBE73B9E := R241
1574 [-]: CLOSURE   R241 171     ; R241 := closure(Function #172)
1575 [-]: MOVE      R0 R86       ; R0 := R86
1576 [-]: SETGLOBAL R241 K309    ; OnMatchMakingModeChanged := R241
1577 [-]: SETGLOBAL R241 K310    ; 0x30A832FF := R241
1578 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 314
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Region"]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0x221C9700
 12 [-]: CALL      R1 1 2       ; R1 := R1()
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 15 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x69B983D"]
 19 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 22 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["clipName"]
 23 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x4F6BF2C8"]
 26 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 27 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 28 [-]: SETTABLE  R6 K8 R2     ; R6["x"] := R2
 29 [-]: SETTABLE  R6 K9 R3     ; R6["y"] := R3
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: MOVE      R1 R4        ; R1 := R4
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 34 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 62
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
 37 [-]: GETUPVAL  R5 U0        ; R5 := U0
 38 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Region"]
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["instance"]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 62
 42 [-]: JMP       62           ; PC := 62
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 45 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["instance"]
 46 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x6DA72501"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 49 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0xAF296C52"]
 50 [-]: MOVE      R7 R4        ; R7 := R4
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: GETUPVAL  R6 U1        ; R6 := U1
 53 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0x4F6BF2C8"]
 54 [-]: GETGLOBAL R7 K5        ; R7 := mMovie
 55 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 56 [-]: GETTABLE  R9 R5 K8     ; R9 := R5["x"]
 57 [-]: SETTABLE  R8 K8 R9     ; R8["x"] := R9
 58 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["y"]
 59 [-]: SETTABLE  R8 K9 R9     ; R8["y"] := R9
 60 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 61 [-]: MOVE      R1 R6        ; R1 := R6
 62 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 63 [-]: SETTABLE  R6 K14 K15   ; R6["outer"] := 0.059999998658895
 64 [-]: SETTABLE  R6 K16 K17   ; R6["inner"] := 0.019999999552965
 65 [-]: LOADK     R7 K18       ; R7 := 0
 66 [-]: GETUPVAL  R8 U1        ; R8 := U1
 67 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["0xF81722A2"]
 68 [-]: GETUPVAL  R9 U2        ; R9 := U2
 69 [-]: GETUPVAL  R10 U3       ; R10 := U3
 70 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["ZoomedMultiplier"]
 71 [-]: GETUPVAL  R11 U3       ; R11 := U3
 72 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["SpaceMultiplier"]
 73 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 74 [-]: GETUPVAL  R9 U4        ; R9 := U4
 75 [-]: SETTABLE  R9 K22 R8    ; R9["SpeedMultiplier"] := R8
 76 [-]: TEST      R0 0         ; if not R0 then PC := 124
 77 [-]: JMP       124          ; PC := 124
 78 [-]: GETUPVAL  R9 U1        ; R9 := U1
 79 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["0xF81722A2"]
 80 [-]: GETUPVAL  R10 U2       ; R10 := U2
 81 [-]: GETUPVAL  R11 U3       ; R11 := U3
 82 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["ZoomedHoveringMultiplier"]
 83 [-]: GETUPVAL  R12 U3       ; R12 := U3
 84 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["SpaceHoveringMultiplier"]
 85 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 86 [-]: GETUPVAL  R10 U1       ; R10 := U1
 87 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["0x5328C56B"]
 88 [-]: GETGLOBAL R11 K5       ; R11 := mMovie
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: GETUPVAL  R11 U1       ; R11 := U1
 91 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x4F6BF2C8"]
 92 [-]: GETGLOBAL R12 K5       ; R12 := mMovie
 93 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 94 [-]: GETTABLE  R14 R10 K8   ; R14 := R10["x"]
 95 [-]: SETTABLE  R13 K8 R14   ; R13["x"] := R14
 96 [-]: GETTABLE  R14 R10 K9   ; R14 := R10["y"]
 97 [-]: SETTABLE  R13 K9 R14   ; R13["y"] := R14
 98 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 99 [-]: GETGLOBAL R12 K26      ; R12 := math
100 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["0x8B011038"]
101 [-]: GETGLOBAL R13 K28      ; R13 := 0xB09F286F
102 [-]: MOVE      R14 R11      ; R14 := R11
103 [-]: MOVE      R15 R1       ; R15 := R1
104 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
105 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
106 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
107 [-]: MOVE      R7 R12       ; R7 := R12
108 [-]: GETTABLE  R12 R6 K14   ; R12 := R6["outer"]
109 [-]: LE        0 R7 R12     ; if R7 > R12 then PC := 124
110 [-]: JMP       124          ; PC := 124
111 [-]: GETTABLE  R12 R6 K16   ; R12 := R6["inner"]
112 [-]: SUB       R12 R7 R12   ; R12 := R7 - R12
113 [-]: GETTABLE  R13 R6 K14   ; R13 := R6["outer"]
114 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
115 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
116 [-]: DIV       R12 R12 R13  ; R12 := R12 / R13
117 [-]: GETUPVAL  R13 U4       ; R13 := U4
118 [-]: GETGLOBAL R14 K29      ; R14 := 0x93034B55
119 [-]: MOVE      R15 R8       ; R15 := R8
120 [-]: MOVE      R16 R9       ; R16 := R9
121 [-]: SUB       R17 K30 R12  ; R17 := 1 - R12
122 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
123 [-]: SETTABLE  R13 K22 R14  ; R13["SpeedMultiplier"] := R14
124 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 348
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x372CB914"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x2EA5AFA"]
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: GETGLOBAL R2 K3        ; R2 := gFlashMgr
  9 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xE8178C52"]
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 353
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x69B983D"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := "InfoTip"
  5 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["InitLocationPicYPos"]
  8 [-]: ADD       R2 R1 R2     ; R2 := R1 + R2
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x65939576"]
 11 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 12 [-]: GETUPVAL  R5 U1        ; R5 := U1
 13 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["InitLocationPicHeight"]
 14 [-]: DIV       R5 R5 K6     ; R5 := R5 / 2
 15 [-]: SUB       R5 R2 R5     ; R5 := R2 - R5
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x9884F87F"]
 19 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 20 [-]: GETUPVAL  R6 U1        ; R6 := U1
 21 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["InitLocationPicHeight"]
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: GETGLOBAL R5 K8        ; R5 := locationPicMaterial
 24 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x94FB2E1A"]
 25 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 26 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["VISIBILITY_CENTER"]
 27 [-]: MOVE      R8 R3        ; R8 := R3
 28 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 29 [-]: GETGLOBAL R5 K8        ; R5 := locationPicMaterial
 30 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x94FB2E1A"]
 31 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 32 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["VISIBILITY_SIZE"]
 33 [-]: MOVE      R8 R4        ; R8 := R4
 34 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 35 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 364
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF3E132E0"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x68998E7D"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: GETGLOBAL R1 K5        ; R1 := math
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 16 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["MaxX"]
 21 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 22 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: GETGLOBAL R1 K5        ; R1 := math
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 26 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0xEE069D65"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MaxY"]
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: GETUPVAL  R1 U2        ; R1 := U2
 35 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 36 [-]: GETUPVAL  R2 U1        ; R2 := U1
 37 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["MaxX"]
 38 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 39 [-]: GETUPVAL  R4 U1        ; R4 := U1
 40 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["MinX"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 43 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 44 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 45 [-]: SETTABLE  R0 K9 R1     ; R0["X"] := R1
 46 [-]: GETUPVAL  R0 U1        ; R0 := U1
 47 [-]: GETUPVAL  R1 U2        ; R1 := U2
 48 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
 51 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 52 [-]: GETUPVAL  R4 U1        ; R4 := U1
 53 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["MinY"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 56 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: SETTABLE  R0 K14 R1    ; R0["Y"] := R1
 59 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 60 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 61 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 62 [-]: LOADK     R3 K18       ; R3 := "_x"
 63 [-]: GETUPVAL  R4 U1        ; R4 := U1
 64 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["X"]
 65 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 66 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 67 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 68 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 69 [-]: LOADK     R3 K19       ; R3 := "_y"
 70 [-]: GETUPVAL  R4 U1        ; R4 := U1
 71 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["Y"]
 72 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 73 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 74 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 75 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 76 [-]: LOADK     R3 K20       ; R3 := "_visible"
 77 [-]: GETUPVAL  R4 U1        ; R4 := U1
 78 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["IsVisible"]
 79 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 80 [-]: GETUPVAL  R0 U3        ; R0 := U3
 81 [-]: GETUPVAL  R1 U1        ; R1 := U1
 82 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["X"]
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Y"]
 85 [-]: CALL      R0 3 1       ; R0(R1,R2)
 86 [-]: GETGLOBAL R0 K22       ; R0 := 0x400E7765
 87 [-]: GETUPVAL  R1 U4        ; R1 := U4
 88 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 89 [-]: TEST      R0 1         ; if R0 then PC := 100
 90 [-]: JMP       100          ; PC := 100
 91 [-]: GETUPVAL  R0 U4        ; R0 := U4
 92 [-]: SELF      R0 R0 K23    ; R1 := R0; R0 := R0["0x8C7099E9"]
 93 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 94 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 95 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 96 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 97 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEE069D65"]
 98 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 99 [-]: CALL      R0 0 1       ; R0(R1,...)
100 [-]: GETUPVAL  R0 U5        ; R0 := U5
101 [-]: GETUPVAL  R1 U1        ; R1 := U1
102 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["MaxX"]
103 [-]: GETUPVAL  R2 U1        ; R2 := U1
104 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
105 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
106 [-]: SETTABLE  R0 K24 R1    ; R0["AspectRatio"] := R1
107 [-]: GETUPVAL  R0 U2        ; R0 := U2
108 [-]: GETTABLE  R0 R0 K25    ; R0 := R0["0xEA569929"]
109 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
110 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
111 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
112 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
113 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
114 [-]: LOADK     R5 K27       ; R5 := "_width"
115 [-]: MOVE      R6 R0        ; R6 := R0
116 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
117 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
118 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
119 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
120 [-]: LOADK     R5 K28       ; R5 := "_height"
121 [-]: MOVE      R6 R1        ; R6 := R1
122 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
123 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 392
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["SquadOverlay"]
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K4        ; R2 := "OpenInvite"
 11 [-]: LOADK     R3 K5        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 398
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x930EC5CF"]
  8 [-]: LOADK     R1 K3        ; R1 := "SwitchLoadout"
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0xDA085F65"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 418
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x221C9700
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["x"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["y"]
  4 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["z"]
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: LOADK     R2 K4        ; R2 := 1
  7 [-]: LOADK     R3 K4        ; R3 := 1
  8 [-]: LOADK     R4 K4        ; R4 := 1
  9 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["x"]
 10 [-]: MUL       R5 R5 R4     ; R5 := R5 * R4
 11 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 12 [-]: SETTABLE  R1 K1 R5     ; R1["x"] := R5
 13 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["y"]
 14 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 15 [-]: SETTABLE  R1 K2 R5     ; R1["y"] := R5
 16 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["z"]
 17 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 18 [-]: SETTABLE  R1 K3 R5     ; R1["z"] := R5
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 433
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mapFogTexture
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADK     R0 K2        ; R0 := 0
  8 [-]: LOADK     R1 K3        ; R1 := 63
  9 [-]: LOADK     R2 K4        ; R2 := 1
 10 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 11 [-]: LOADK     R4 K2        ; R4 := 0
 12 [-]: LOADK     R5 K3        ; R5 := 63
 13 [-]: LOADK     R6 K4        ; R6 := 1
 14 [-]: FORPREP   R4 24        ; R4 -= R6; PC := 24
 15 [-]: LOADK     R8 K5        ; R8 := 255
 16 [-]: GETGLOBAL R9 K1        ; R9 := mapFogTexture
 17 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x9EC00F7F"]
 18 [-]: MOVE      R11 R8       ; R11 := R8
 19 [-]: MOVE      R12 R3       ; R12 := R3
 20 [-]: MOVE      R13 R7       ; R13 := R7
 21 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 22 [-]: GETGLOBAL R9 K7        ; R9 := 0x1BF588C6
 23 [-]: CALL      R9 1 1       ; R9()
 24 [-]: FORLOOP   R4 15        ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
 25 [-]: FORLOOP   R0 11        ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
 26 [-]: GETGLOBAL R9 K8        ; R9 := gFlashMgr
 27 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x2E4D89AB"]
 28 [-]: GETGLOBAL R11 K1       ; R11 := mapFogTexture
 29 [-]: CALL      R9 3 1       ; R9(R10,R11)
 30 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 450
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["guildId"]
  3 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 116
  4 [-]: JMP       116          ; PC := 116
  5 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["locName"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["EDIT_NODES"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 50
 15 [-]: JMP       50           ; PC := 50
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: LOADK     R3 K6        ; R3 := "\r["
 18 [-]: GETGLOBAL R4 K7        ; R4 := 0x9FAED6BC
 19 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["name"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: LOADK     R5 K9        ; R5 := "]"
 22 [-]: CONCAT    R1 R2 R5     ; R1 := R2 .. R3 .. R4 .. R5
 23 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 24 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["radialSector"]
 25 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mission"]
 26 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["levelOverride"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 107
 29 [-]: JMP       107          ; PC := 107
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 107
 34 [-]: JMP       107          ; PC := 107
 35 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["radialSector"]
 36 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mission"]
 37 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["levelOverride"]
 38 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x1B252E3C"]
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: GETGLOBAL R3 K15       ; R3 := string
 41 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0xAF449107"]
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: LOADK     R5 K17       ; R5 := ".*/(.*)"
 44 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 45 [-]: MOVE      R4 R1        ; R4 := R1
 46 [-]: LOADK     R5 K18       ; R5 := "\r"
 47 [-]: MOVE      R6 R3        ; R6 := R3
 48 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 49 [-]: JMP       107          ; PC := 107
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: GETUPVAL  R5 U1        ; R5 := U1
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["EDIT_NODE_DECOS"]
 53 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 107
 54 [-]: JMP       107          ; PC := 107
 55 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["deco"]
 56 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 107
 57 [-]: JMP       107          ; PC := 107
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["mEditingRotation"]
 60 [-]: TEST      R4 1         ; if R4 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["mShiftDown"]
 64 [-]: TEST      R4 1         ; if R4 then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R4 U3        ; R4 := U3
 67 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["mControlDown"]
 68 [-]: TEST      R4 0         ; if not R4 then PC := 84
 69 [-]: JMP       84           ; PC := 84
 70 [-]: MOVE      R4 R1        ; R4 := R1
 71 [-]: LOADK     R5 K18       ; R5 := "\r"
 72 [-]: GETUPVAL  R6 U2        ; R6 := U2
 73 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["mRotationAxis"]
 74 [-]: LOADK     R7 K25       ; R7 := "="
 75 [-]: GETGLOBAL R8 K7        ; R8 := 0x9FAED6BC
 76 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["deco"]
 77 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["mRotation"]
 78 [-]: GETUPVAL  R10 U2       ; R10 := U2
 79 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mRotationAxis"]
 80 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 81 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 82 [-]: CONCAT    R1 R4 R8     ; R1 := R4 .. R5 .. R6 .. R7 .. R8
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETUPVAL  R4 U2        ; R4 := U2
 85 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["mEditingScale"]
 86 [-]: TEST      R4 1         ; if R4 then PC := 92
 87 [-]: JMP       92           ; PC := 92
 88 [-]: GETUPVAL  R4 U3        ; R4 := U3
 89 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["mAltDown"]
 90 [-]: TEST      R4 0         ; if not R4 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: MOVE      R4 R1        ; R4 := R1
 93 [-]: LOADK     R5 K29       ; R5 := "\rScale="
 94 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
 95 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
 96 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["mScale"]
 97 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 98 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 99 [-]: JMP       107          ; PC := 107
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: LOADK     R5 K18       ; R5 := "\r"
102 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
103 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
104 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["mOffset"]
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
107 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["locked"]
108 [-]: TEST      R4 0         ; if not R4 then PC := 116
109 [-]: JMP       116          ; PC := 116
110 [-]: GETTABLE  R4 R0 K33    ; R4 := R0["locationEnabled"]
111 [-]: TEST      R4 0         ; if not R4 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: GETUPVAL  R4 U4        ; R4 := U4
114 [-]: MOVE      R5 R1        ; R5 := R1
115 [-]: CONCAT    R1 R4 R5     ; R1 := R4 .. R5
116 [-]: GETGLOBAL R4 K34       ; R4 := mMovie
117 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4["0xD6A79FE9"]
118 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["clipName"]
119 [-]: LOADK     R7 K37       ; R7 := ".Name.Label"
120 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
121 [-]: LOADK     R7 K38       ; R7 := "text"
122 [-]: MOVE      R8 R1        ; R8 := R1
123 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
124 [-]: GETGLOBAL R4 K39       ; R4 := 0xF595ADDE
125 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
126 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x6B7B470B"]
127 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
128 [-]: LOADK     R8 K37       ; R8 := ".Name.Label"
129 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
130 [-]: LOADK     R8 K41       ; R8 := "textWidth"
131 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
132 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
133 [-]: TEST      R4 0         ; if not R4 then PC := 142
134 [-]: JMP       142          ; PC := 142
135 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
136 [-]: SELF      R5 R5 K42    ; R6 := R5; R5 := R5["0x880196A7"]
137 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
138 [-]: LOADK     R8 K43       ; R8 := "Name.Bg"
139 [-]: LOADK     R9 K44       ; R9 := "_width"
140 [-]: ADD       R10 R4 K45   ; R10 := R4 + 7
141 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
142 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 485
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 12        ; R0 -= R2; PC := 12
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x1BF588C6
  7 [-]: CALL      R4 1 1       ; R4()
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 11 [-]: CALL      R4 2 1       ; R4(R5)
 12 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 13 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 494
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Playing"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: LOADK     R2 K2        ; R2 := "InfoTip.NodeTransmission"
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SETTABLE  R2 K1 K3     ; R2["Playing"] := "0x1"
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SETTABLE  R2 K4 R0     ; R2["Node"] := R0
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SETTABLE  R2 K5 R1     ; R2["Transmission"] := R1
 19 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x616DD092"]
 21 [-]: GETGLOBAL R4 K8        ; R4 := _G
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UIMovie_TransmissionMovie"]
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 25 [-]: MOVE      R4 R2        ; R4 := R2
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: TEST      R3 1         ; if R3 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R3 K10       ; R3 := _T
 30 [-]: SETTABLE  R3 K11 K12   ; R3["curTransmission"] := nil
 31 [-]: GETGLOBAL R3 K10       ; R3 := _T
 32 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 33 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 34 [-]: SELF      R3 R2 K14    ; R4 := R2; R3 := R2["0x458F27A9"]
 35 [-]: LOADK     R5 K15       ; R5 := "PreviewClose"
 36 [-]: LOADK     R6 K16       ; R6 := "true"
 37 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 38 [-]: GETGLOBAL R3 K10       ; R3 := _T
 39 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["QueuedTransmissions"]
 40 [-]: EQ        0 R3 K12     ; if R3 ~= nil then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETGLOBAL R3 K10       ; R3 := _T
 43 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 44 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 45 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 46 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 47 [-]: GETUPVAL  R5 U1        ; R5 := U1
 48 [-]: LOADK     R6 K19       ; R6 := "_visible"
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 51 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 52 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 53 [-]: LOADK     R5 K20       ; R5 := "InfoTip.EnemyIcon"
 54 [-]: LOADK     R6 K19       ; R6 := "_visible"
 55 [-]: MOVE      R7 R0        ; R7 := R0
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K10       ; R3 := _T
 58 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 59 [-]: SETTABLE  R3 K21 R4    ; R3["TransmissionOverrideMovie"] := R4
 60 [-]: GETGLOBAL R3 K10       ; R3 := _T
 61 [-]: GETUPVAL  R4 U1        ; R4 := U1
 62 [-]: LOADK     R5 K23       ; R5 := ".Container"
 63 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 64 [-]: SETTABLE  R3 K22 R4    ; R3["TransmissionOverrideMainClipName"] := R4
 65 [-]: GETGLOBAL R3 K10       ; R3 := _T
 66 [-]: SETTABLE  R3 K24 K12   ; R3["TransmissionOverrideY"] := nil
 67 [-]: GETGLOBAL R3 K10       ; R3 := _T
 68 [-]: SETTABLE  R3 K25 K12   ; R3["TransmissionOverrideX"] := nil
 69 [-]: GETGLOBAL R3 K26       ; R3 := table
 70 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["0xE6450C9D"]
 71 [-]: GETGLOBAL R4 K10       ; R4 := _T
 72 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["QueuedTransmissions"]
 73 [-]: MOVE      R5 R1        ; R5 := R1
 74 [-]: CALL      R3 3 1       ; R3(R4,R5)
 75 [-]: GETGLOBAL R3 K6        ; R3 := gFlashMgr
 76 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3["0x24FF386"]
 77 [-]: GETGLOBAL R5 K8        ; R5 := _G
 78 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["UIMovie_TransmissionMovie"]
 79 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 80 [-]: MOVE      R2 R3        ; R2 := R3
 81 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 82 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 83 [-]: GETUPVAL  R5 U1        ; R5 := U1
 84 [-]: LOADK     R6 K30       ; R6 := ".Container.ImageOuter.Image"
 85 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 86 [-]: GETGLOBAL R6 K31       ; R6 := infoTransmissionMaterial
 87 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 88 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 89 [-]: GETUPVAL  R4 U0        ; R4 := U0
 90 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["Projector"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 0         ; if not R3 then PC := 94
 93 [-]: JMP       94           ; PC := 94
 94 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 95 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 96 [-]: GETUPVAL  R5 U1        ; R5 := U1
 97 [-]: LOADK     R6 K33       ; R6 := "_alpha"
 98 [-]: LOADK     R7 K34       ; R7 := 0
 99 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
100 [-]: GETGLOBAL R3 K35       ; R3 := 0x52E17A90
101 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
102 [-]: GETUPVAL  R5 U1        ; R5 := U1
103 [-]: GETGLOBAL R6 K36       ; R6 := UISys
104 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["FlashInstance_EASE_OUT_ELASTIC"]
105 [-]: NEWTABLE  R7 1 0       ; R7 := {}
106 [-]: LOADK     R8 K33       ; R8 := "_alpha"
107 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
108 [-]: NEWTABLE  R8 1 0       ; R8 := {}
109 [-]: LOADK     R9 K38       ; R9 := 75
110 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
111 [-]: LOADK     R9 K39       ; R9 := 1.3500000238419
112 [-]: LOADK     R10 K34      ; R10 := 0
113 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
114 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 553
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6B7B470B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_alpha"
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
  8 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
  9 [-]: LOADK     R4 K5        ; R4 := "_visible"
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
 15 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 16 [-]: LOADK     R5 K6        ; R5 := 0
 17 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 18 [-]: CLOSURE   R1 0         ; R1 := closure(Function #12.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: MOVE      R0 R0        ; R0 := R0
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETGLOBAL R2 K7        ; R2 := 0x52E17A90
 23 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETGLOBAL R5 K8        ; R5 := UISys
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["FlashInstance_LINEAR"]
 27 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 28 [-]: MOVE      R7 R1        ; R7 := R1
 29 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 30 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 31 [-]: LOADK     R8 K10       ; R8 := 1
 32 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 33 [-]: LOADK     R8 K11       ; R8 := 0.25
 34 [-]: LOADK     R9 K6        ; R9 := 0
 35 [-]: CLOSURE   R10 1        ; R10 := closure(Function #12.2)
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 39 [-]: RETURN    R0 1         ; return 


; Function #12.1:
;
; Name:            
; Defined at line: 560
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LOADK     R4 K2        ; R4 := "_alpha"
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
  6 [-]: LOADK     R6 K4        ; R6 := 0
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: MOVE      R8 R0        ; R8 := R0
  9 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: LOADK     R3 K5        ; R3 := "InfoTip.EnemyIcon"
 14 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 15 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
 16 [-]: LOADK     R6 K4        ; R6 := 0
 17 [-]: LOADK     R7 K6        ; R7 := 100
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Projector"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 27
 26 [-]: JMP       27           ; PC := 27
 27 [-]: RETURN    R0 1         ; return 


; Function #12.2:
;
; Name:            
; Defined at line: 571
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Projector"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R0 K5        ; R0 := gBackgroundRegion
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x9B0A3887"]
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Projector"]
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: SETTABLE  R0 K7 K8     ; R0["Playing"] := "0x0"
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SETTABLE  R0 K9 K10    ; R0["Node"] := nil
 22 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 583
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := transmissionInterruptedSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: SETTABLE  R0 K2 K3     ; R0["Playing"] := "0x0"
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0xD66C1755"]
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Transmission"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 589
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 593
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gFlashMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x616DD092"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := _G
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x61494587"]
 13 [-]: LOADK     R4 K6        ; R4 := 2
 14 [-]: CLOSURE   R5 0         ; R5 := closure(Function #15.1)
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x9FAED6BC
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["name"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETGLOBAL R3 K9        ; R3 := _T
 25 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 26 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R3 K9        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 31 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mDefenderMissionInfo"]
 33 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["uniqueName"]
 34 [-]: EQ        0 R3 K13     ; if R3 ~= "/Lotus/Language/Bosses/BossPhorid" then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADK     R2 K14       ; R2 := "/Lotus/Types/Keys/SortieBossKeyPhorid"
 37 [-]: GETGLOBAL R3 K15       ; R3 := 0x63B09107
 38 [-]: GETUPVAL  R4 U4        ; R4 := U4
 39 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 40 [-]: JMP       58           ; PC := 58
 41 [-]: GETTABLE  R8 R7 K16    ; R8 := R7["BossNode"]
 42 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: GETUPVAL  R8 U5        ; R8 := U5
 45 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["0xF81722A2"]
 46 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 47 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["BossNodeTransmission"]
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: MOVE      R9 R9        ; R9 := R9
 50 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["BossNodeTransmission"]
 51 [-]: GETTABLE  R11 R7 K19   ; R11 := R7["Transmission"]
 52 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 53 [-]: GETUPVAL  R9 U6        ; R9 := U6
 54 [-]: MOVE      R10 R0       ; R10 := R0
 55 [-]: MOVE      R11 R8       ; R11 := R8
 56 [-]: CALL      R9 3 1       ; R9(R10,R11)
 57 [-]: JMP       60           ; PC := 60
 58 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 41; R5 := R6 end
 59 [-]: JMP       41           ; PC := 41
 60 [-]: RETURN    R0 1         ; return 


; Function #15.1:
;
; Name:            
; Defined at line: 597
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["nodeIndex"]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["nodeIndex"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 620
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mEdgeNode1"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 32
  7 [-]: JMP       32           ; PC := 32
  8 [-]: LOADK     R1 K3        ; R1 := ": "
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mEdgeNode1"]
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["radialSector"]
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["name"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: CONCAT    R0 R1 R2     ; R0 := R1 .. R2
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mEdgeNode2"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 32
 21 [-]: JMP       32           ; PC := 32
 22 [-]: MOVE      R1 R0        ; R1 := R0
 23 [-]: LOADK     R2 K8        ; R2 := " TO "
 24 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mEdgeNode2"]
 27 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["radialSector"]
 28 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["name"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: LOADK     R4 K9        ; R4 := " (A)dd or (D)elete?"
 31 [-]: CONCAT    R0 R1 R4     ; R0 := R1 .. R2 .. R3 .. R4
 32 [-]: LOADK     R1 K10       ; R1 := "EDITING EDGES"
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: LOADK     R3 K11       ; R3 := "\r >CTRL=Multi-select"
 35 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 36 [-]: RETURN    R1 2         ; return R1
 37 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 632
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: SETTABLE  R1 K1 K2     ; R1["INACTIVE_NODE_ALPHA"] := 0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["EDIT_REGIONS"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R0 K4        ; R0 := "EDITING REGIONS"
 10 [-]: JMP       83           ; PC := 83
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["EDIT_REGION_FRAMING"]
 14 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 37
 15 [-]: JMP       37           ; PC := 37
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: GETUPVAL  R2 U4        ; R2 := U4
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mFramingRegion"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: LOADK     R2 K7        ; R2 := "NONE"
 21 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R3 K9        ; R3 := string
 24 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x639C642A"]
 25 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 26 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 27 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["name"]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: MOVE      R2 R3        ; R2 := R3
 32 [-]: LOADK     R3 K14       ; R3 := "EDITING REGION FRAMING ["
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: LOADK     R5 K15       ; R5 := "]\r >R=Toggle"
 35 [-]: CONCAT    R0 R3 R5     ; R0 := R3 .. R4 .. R5
 36 [-]: JMP       83           ; PC := 83
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETUPVAL  R4 U2        ; R4 := U2
 39 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["EDIT_NODES"]
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: LOADK     R0 K17       ; R0 := "EDITING NODES\r >SHIFT=Z Depth"
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 45 [-]: JMP       83           ; PC := 83
 46 [-]: GETUPVAL  R3 U1        ; R3 := U1
 47 [-]: GETUPVAL  R4 U2        ; R4 := U2
 48 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["EDIT_EDGES"]
 49 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETUPVAL  R3 U5        ; R3 := U5
 52 [-]: CALL      R3 1 2       ; R3 := R3()
 53 [-]: MOVE      R0 R3        ; R0 := R3
 54 [-]: GETUPVAL  R3 U0        ; R3 := U0
 55 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 56 [-]: JMP       83           ; PC := 83
 57 [-]: GETUPVAL  R3 U1        ; R3 := U1
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["EDIT_NODE_DECOS"]
 60 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADK     R0 K21       ; R0 := "EDITING NODE DECOS \r >ALT=Scale\r >SHIFT=Heading\r >CTRL=Pitch\r >SHIFT+CTRL=Bank"
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETUPVAL  R3 U1        ; R3 := U1
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["EDIT_SHORTCUT_CONTROL_POINTS"]
 67 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADK     R0 K23       ; R0 := "EDITING EDGE CONTROL POINTS \r >SHIFT=Z Depth"
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETGLOBAL R3 K24       ; R3 := _T
 72 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 73 [-]: TEST      R3 0         ; if not R3 then PC := 83
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETGLOBAL R3 K24       ; R3 := _T
 76 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 77 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["StarChartLabel"]
 78 [-]: TEST      R3 0         ; if not R3 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R3 K24       ; R3 := _T
 81 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 82 [-]: GETTABLE  R0 R3 K26    ; R0 := R3["StarChartLabel"]
 83 [-]: GETGLOBAL R3 K11       ; R3 := mMovie
 84 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0x1C19D966"]
 85 [-]: LOADK     R5 K28       ; R5 := "ScreenModeLabel"
 86 [-]: LOADK     R6 K29       ; R6 := "text"
 87 [-]: MOVE      R7 R0        ; R7 := R0
 88 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 89 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 661
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 K0        ; R3 := 1
  5 [-]: FORPREP   R1 57        ; R1 -= R3; PC := 57
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["IsShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 57
 10 [-]: JMP       57           ; PC := 57
 11 [-]: GETGLOBAL R5 K2        ; R5 := 0x63B09107
 12 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 15 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["controlPointA"]
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 18 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["controlPointB"]
 19 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 20 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 21 [-]: JMP       55           ; PC := 55
 22 [-]: TEST      R0 0         ; if not R0 then PC := 51
 23 [-]: JMP       51           ; PC := 51
 24 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 25 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0xBDD34CC6"]
 26 [-]: GETGLOBAL R12 K8       ; R12 := hoverRing
 27 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["position"]
 28 [-]: GETUPVAL  R14 U1       ; R14 := U1
 29 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["RING_ROTATION"]
 30 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 31 [-]: SETTABLE  R9 K5 R10    ; R9["ringInstance"] := R10
 32 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 33 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xA20F64C0"]
 34 [-]: GETGLOBAL R12 K12      ; R12 := 0xB5A59043
 35 [-]: LOADK     R13 K13      ; R13 := 0
 36 [-]: LOADK     R14 K14      ; R14 := 255
 37 [-]: LOADK     R15 K13      ; R15 := 0
 38 [-]: LOADK     R16 K14      ; R16 := 255
 39 [-]: CALL      R12 5 0      ; R12,... := R12(R13,R14,R15,R16)
 40 [-]: CALL      R10 0 1      ; R10(R11,...)
 41 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 42 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x9F133E77"]
 43 [-]: LOADK     R12 K16      ; R12 := 0.025000000372529
 44 [-]: LOADK     R13 K16      ; R13 := 0.025000000372529
 45 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 46 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 47 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0x66A7D2"]
 48 [-]: LOADK     R12 K18      ; R12 := 0.20000000298023
 49 [-]: CALL      R10 3 1      ; R10(R11,R12)
 50 [-]: JMP       55           ; PC := 55
 51 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 52 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10["0x9B0A3887"]
 53 [-]: GETTABLE  R12 R9 K5    ; R12 := R9["ringInstance"]
 54 [-]: CALL      R10 3 1      ; R10(R11,R12)
 55 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 22; R7 := R8 end
 56 [-]: JMP       22           ; PC := 22
 57 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 58 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 678
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["EDIT_SHORTCUT_CONTROL_POINTS"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: GETUPVAL  R2 U3        ; R2 := U3
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: GETUPVAL  R2 U4        ; R2 := U4
 22 [-]: CALL      R2 1 1       ; R2()
 23 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 694
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: NEWTABLE  R0 13 0      ; R0 := {}
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ALERT_FLAG"]
 16 [-]: GETUPVAL  R2 U4        ; R2 := U4
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["EVENT_FLAG"]
 18 [-]: GETUPVAL  R3 U4        ; R3 := U4
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["PVP_FLAG"]
 20 [-]: GETUPVAL  R4 U4        ; R4 := U4
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NIGHTMARE_FLAG"]
 22 [-]: GETUPVAL  R5 U4        ; R5 := U4
 23 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["INVASION_ATTACKER_FLAG"]
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["INVASION_DEFENDER_FLAG"]
 26 [-]: GETUPVAL  R7 U4        ; R7 := U4
 27 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["BADLAND_ATTACKER_FLAG"]
 28 [-]: GETUPVAL  R8 U4        ; R8 := U4
 29 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["BADLAND_DEFENDER_FLAG"]
 30 [-]: GETUPVAL  R9 U4        ; R9 := U4
 31 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["BADLAND_MISSION_FLAG"]
 32 [-]: GETUPVAL  R10 U4       ; R10 := U4
 33 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SORTIE_MISSION_FLAG"]
 34 [-]: GETUPVAL  R11 U4       ; R11 := U4
 35 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["SYNDICATE_MISSION_FLAG"]
 36 [-]: GETUPVAL  R12 U4       ; R12 := U4
 37 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["ACTIVE_MISSION_FLAG"]
 38 [-]: GETUPVAL  R13 U4       ; R13 := U4
 39 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["KUVA_TOWER_MISSION_FLAG"]
 40 [-]: SETLIST   R0 13 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 13
 41 [-]: CLOSURE   R1 0         ; R1 := closure(Function #20.1)
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: GETGLOBAL R2 K14       ; R2 := gMatchingService
 44 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x40DFB818"]
 45 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 46 [-]: MOVE      R3 R0        ; R3 := R0
 47 [-]: TEST      R3 0         ; if not R3 then PC := 65
 48 [-]: JMP       65           ; PC := 65
 49 [-]: GETGLOBAL R3 K16       ; R3 := 0x93B1256B
 50 [-]: LOADK     R4 K17       ; R4 := "Aggregation Results:"
 51 [-]: CALL      R3 2 1       ; R3(R4)
 52 [-]: GETGLOBAL R3 K18       ; R3 := 0xECFDD17
 53 [-]: MOVE      R4 R2        ; R4 := R2
 54 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 55 [-]: JMP       63           ; PC := 63
 56 [-]: GETGLOBAL R8 K16       ; R8 := 0x93B1256B
 57 [-]: LOADK     R9 K19       ; R9 := "gameModeId="
 58 [-]: GETTABLE  R10 R7 K20   ; R10 := R7["gameModeId"]
 59 [-]: LOADK     R11 K21      ; R11 := ", count="
 60 [-]: GETTABLE  R12 R7 K22   ; R12 := R7["count"]
 61 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 62 [-]: CALL      R8 2 1       ; R8(R9)
 63 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 56; R5 := R6 end
 64 [-]: JMP       56           ; PC := 56
 65 [-]: LOADNIL   R8 R10       ; R8 := R9 := R10 := nil
 66 [-]: GETGLOBAL R11 K18      ; R11 := 0xECFDD17
 67 [-]: GETUPVAL  R12 U5       ; R12 := U5
 68 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 69 [-]: JMP       253          ; PC := 253
 70 [-]: GETGLOBAL R16 K23      ; R16 := 0x1BF588C6
 71 [-]: LOADK     R17 K24      ; R17 := 0
 72 [-]: CALL      R16 2 1      ; R16(R17)
 73 [-]: GETTABLE  R16 R15 K25  ; R16 := R15["nodeType"]
 74 [-]: GETGLOBAL R17 K26      ; R17 := Lotus_Game
 75 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["NT_EMPTY"]
 76 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 253
 77 [-]: JMP       253          ; PC := 253
 78 [-]: GETTABLE  R16 R15 K28  ; R16 := R15["region"]
 79 [-]: ADD       R8 R16 K29   ; R8 := R16 + 1
 80 [-]: GETGLOBAL R16 K30      ; R16 := 0x9FAED6BC
 81 [-]: GETTABLE  R17 R15 K31  ; R17 := R15["name"]
 82 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 83 [-]: MOVE      R9 R16       ; R9 := R16
 84 [-]: GETUPVAL  R16 U4       ; R16 := U4
 85 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["0xE4E5932F"]
 86 [-]: MOVE      R17 R9       ; R17 := R9
 87 [-]: GETUPVAL  R18 U3       ; R18 := U3
 88 [-]: MOVE      R19 R15      ; R19 := R15
 89 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 90 [-]: MOVE      R10 R16      ; R10 := R16
 91 [-]: GETUPVAL  R16 U1       ; R16 := U1
 92 [-]: SETTABLE  R16 R10 K24  ; R16[R10] := 0
 93 [-]: GETGLOBAL R16 K18      ; R16 := 0xECFDD17
 94 [-]: MOVE      R17 R2       ; R17 := R2
 95 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
 96 [-]: JMP       143          ; PC := 143
 97 [-]: GETGLOBAL R21 K33      ; R21 := _G
 98 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["StalkerMode"]
 99 [-]: TEST      R21 0        ; if not R21 then PC := 131
100 [-]: JMP       131          ; PC := 131
101 [-]: GETTABLE  R21 R20 K20  ; R21 := R20["gameModeId"]
102 [-]: EQ        1 R21 R10    ; if R21 == R10 then PC := 110
103 [-]: JMP       110          ; PC := 110
104 [-]: GETTABLE  R21 R20 K20  ; R21 := R20["gameModeId"]
105 [-]: GETUPVAL  R22 U4       ; R22 := U4
106 [-]: GETTABLE  R22 R22 K9   ; R22 := R22["BADLAND_MISSION_FLAG"]
107 [-]: ADD       R22 R10 R22  ; R22 := R10 + R22
108 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 143
109 [-]: JMP       143          ; PC := 143
110 [-]: GETTABLE  R21 R15 K25  ; R21 := R15["nodeType"]
111 [-]: GETGLOBAL R22 K26      ; R22 := Lotus_Game
112 [-]: GETTABLE  R22 R22 K35  ; R22 := R22["NT_MISSION"]
113 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: GETTABLE  R21 R15 K25  ; R21 := R15["nodeType"]
116 [-]: GETGLOBAL R22 K26      ; R22 := Lotus_Game
117 [-]: GETTABLE  R22 R22 K36  ; R22 := R22["NT_CLAN"]
118 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 143
119 [-]: JMP       143          ; PC := 143
120 [-]: GETTABLE  R21 R15 K37  ; R21 := R15["mission"]
121 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["archwingRequired"]
122 [-]: TEST      R21 1        ; if R21 then PC := 143
123 [-]: JMP       143          ; PC := 143
124 [-]: GETUPVAL  R21 U1       ; R21 := U1
125 [-]: GETUPVAL  R22 U1       ; R22 := U1
126 [-]: GETTABLE  R22 R22 R10  ; R22 := R22[R10]
127 [-]: GETTABLE  R23 R20 K22  ; R23 := R20["count"]
128 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
129 [-]: SETTABLE  R21 R10 R22  ; R21[R10] := R22
130 [-]: JMP       143          ; PC := 143
131 [-]: MOVE      R21 R1       ; R21 := R1
132 [-]: GETTABLE  R22 R20 K20  ; R22 := R20["gameModeId"]
133 [-]: MOVE      R23 R10      ; R23 := R10
134 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
135 [-]: TEST      R21 0        ; if not R21 then PC := 143
136 [-]: JMP       143          ; PC := 143
137 [-]: GETUPVAL  R21 U1       ; R21 := U1
138 [-]: GETUPVAL  R22 U1       ; R22 := U1
139 [-]: GETTABLE  R22 R22 R10  ; R22 := R22[R10]
140 [-]: GETTABLE  R23 R20 K22  ; R23 := R20["count"]
141 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
142 [-]: SETTABLE  R21 R10 R22  ; R21[R10] := R22
143 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 97; R18 := R19 end
144 [-]: JMP       97           ; PC := 97
145 [-]: GETUPVAL  R21 U0       ; R21 := U0
146 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
147 [-]: EQ        0 R21 K39    ; if R21 ~= nil then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: GETUPVAL  R21 U0       ; R21 := U0
150 [-]: SETTABLE  R21 R8 K24   ; R21[R8] := 0
151 [-]: GETUPVAL  R21 U1       ; R21 := U1
152 [-]: GETTABLE  R21 R21 R10  ; R21 := R21[R10]
153 [-]: EQ        1 R21 K39    ; if R21 == nil then PC := 162
154 [-]: JMP       162          ; PC := 162
155 [-]: GETUPVAL  R21 U0       ; R21 := U0
156 [-]: GETUPVAL  R22 U0       ; R22 := U0
157 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
158 [-]: GETUPVAL  R23 U1       ; R23 := U1
159 [-]: GETTABLE  R23 R23 R10  ; R23 := R23[R10]
160 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
161 [-]: SETTABLE  R21 R8 R22   ; R21[R8] := R22
162 [-]: GETGLOBAL R21 K33      ; R21 := _G
163 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["StalkerMode"]
164 [-]: TEST      R21 0        ; if not R21 then PC := 253
165 [-]: JMP       253          ; PC := 253
166 [-]: GETUPVAL  R21 U6       ; R21 := U6
167 [-]: TEST      R21 0        ; if not R21 then PC := 201
168 [-]: JMP       201          ; PC := 201
169 [-]: EQ        0 R14 K29    ; if R14 ~= 1 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R21 K16      ; R21 := 0x93B1256B
172 [-]: LOADK     R22 K40      ; R22 := "Total nodes with open squads: "
173 [-]: LEN       R23 R2       ; R23 := # R2
174 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
175 [-]: CALL      R21 2 1      ; R21(R22)
176 [-]: GETUPVAL  R21 U1       ; R21 := U1
177 [-]: GETTABLE  R21 R21 R10  ; R21 := R21[R10]
178 [-]: LT        0 K24 R21    ; if 0 >= R21 then PC := 201
179 [-]: JMP       201          ; PC := 201
180 [-]: GETGLOBAL R21 K16      ; R21 := 0x93B1256B
181 [-]: GETGLOBAL R22 K30      ; R22 := 0x9FAED6BC
182 [-]: GETTABLE  R23 R15 K31  ; R23 := R15["name"]
183 [-]: CALL      R22 2 2      ; R22 := R22(R23)
184 [-]: LOADK     R23 K41      ; R23 := " ("
185 [-]: GETGLOBAL R24 K42      ; R24 := 0xE6DC43B0
186 [-]: GETGLOBAL R25 K30      ; R25 := 0x9FAED6BC
187 [-]: GETTABLE  R26 R15 K43  ; R26 := R15["locTag"]
188 [-]: CALL      R25 2 2      ; R25 := R25(R26)
189 [-]: MOVE      R26 R0       ; R26 := R0
190 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
191 [-]: LOADK     R25 K44      ; R25 := ")"
192 [-]: LOADK     R26 K45      ; R26 := ", matchmakingName="
193 [-]: MOVE      R27 R9       ; R27 := R9
194 [-]: LOADK     R28 K46      ; R28 := ", matchMakingId="
195 [-]: MOVE      R29 R10      ; R29 := R10
196 [-]: LOADK     R30 K47      ; R30 := ", sessionsFound="
197 [-]: GETUPVAL  R31 U1       ; R31 := U1
198 [-]: GETTABLE  R31 R31 R10  ; R31 := R31[R10]
199 [-]: CONCAT    R22 R22 R31  ; R22 := R22 .. R23 .. R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
200 [-]: CALL      R21 2 1      ; R21(R22)
201 [-]: GETGLOBAL R21 K0       ; R21 := 0x400E7765
202 [-]: GETGLOBAL R22 K48      ; R22 := mMovie
203 [-]: CALL      R21 2 2      ; R21 := R21(R22)
204 [-]: TEST      R21 1        ; if R21 then PC := 253
205 [-]: JMP       253          ; PC := 253
206 [-]: GETUPVAL  R21 U7       ; R21 := U7
207 [-]: TEST      R21 0        ; if not R21 then PC := 253
208 [-]: JMP       253          ; PC := 253
209 [-]: GETUPVAL  R21 U7       ; R21 := U7
210 [-]: GETTABLE  R21 R21 R9   ; R21 := R21[R9]
211 [-]: TEST      R21 0        ; if not R21 then PC := 253
212 [-]: JMP       253          ; PC := 253
213 [-]: GETGLOBAL R21 K48      ; R21 := mMovie
214 [-]: SELF      R21 R21 K49  ; R22 := R21; R21 := R21["0x1C19D966"]
215 [-]: GETUPVAL  R23 U7       ; R23 := U7
216 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
217 [-]: GETTABLE  R23 R23 K50  ; R23 := R23["clipName"]
218 [-]: LOADK     R24 K51      ; R24 := "_visible"
219 [-]: GETUPVAL  R25 U1       ; R25 := U1
220 [-]: TEST      R25 0        ; if not R25 then PC := 232
221 [-]: JMP       232          ; PC := 232
222 [-]: GETUPVAL  R25 U1       ; R25 := U1
223 [-]: GETTABLE  R25 R25 R10  ; R25 := R25[R10]
224 [-]: TEST      R25 0        ; if not R25 then PC := 232
225 [-]: JMP       232          ; PC := 232
226 [-]: GETUPVAL  R25 U1       ; R25 := U1
227 [-]: GETTABLE  R25 R25 R10  ; R25 := R25[R10]
228 [-]: LT        1 K24 R25    ; if 0 < R25 then PC := 231
229 [-]: JMP       231          ; PC := 231
230 [-]: MOVE      R25 R0       ; R25 := R0
231 [-]: MOVE      R25 R1       ; R25 := R1
232 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
233 [-]: GETGLOBAL R21 K48      ; R21 := mMovie
234 [-]: SELF      R21 R21 K52  ; R22 := R21; R21 := R21["0xD6A79FE9"]
235 [-]: GETUPVAL  R23 U8       ; R23 := U8
236 [-]: GETTABLE  R23 R23 R8   ; R23 := R23[R8]
237 [-]: LOADK     R24 K53      ; R24 := ".Name"
238 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
239 [-]: LOADK     R24 K54      ; R24 := "text"
240 [-]: GETGLOBAL R25 K42      ; R25 := 0xE6DC43B0
241 [-]: GETGLOBAL R26 K30      ; R26 := 0x9FAED6BC
242 [-]: GETUPVAL  R27 U9       ; R27 := U9
243 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
244 [-]: GETTABLE  R27 R27 K31  ; R27 := R27["name"]
245 [-]: CALL      R26 2 2      ; R26 := R26(R27)
246 [-]: MOVE      R27 R0       ; R27 := R0
247 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
248 [-]: LOADK     R26 K55      ; R26 := " "
249 [-]: GETUPVAL  R27 U0       ; R27 := U0
250 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
251 [-]: CONCAT    R25 R25 R27  ; R25 := R25 .. R26 .. R27
252 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
253 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 70; R13 := R14 end
254 [-]: JMP       70           ; PC := 70
255 [-]: RETURN    R0 1         ; return 


; Function #20.1:
;
; Name:            
; Defined at line: 706
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xECFDD17
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  8 [-]: JMP       14           ; PC := 14
  9 [-]: ADD       R7 R1 R6     ; R7 := R1 + R6
 10 [-]: EQ        0 R0 R7      ; if R0 ~= R7 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: RETURN    R7 2         ; return R7
 14 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 9; R4 := R5 end
 15 [-]: JMP       9            ; PC := 9
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: RETURN    R7 2         ; return R7
 18 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 783
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == "0x1" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R1 K1        ; R1 := -1
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 10 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 11 [-]: LOADK     R4 K5        ; R4 := "_alpha"
 12 [-]: LOADK     R5 K6        ; R5 := 0
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x52E17A90
 16 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 17 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 18 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 19 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 20 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 21 [-]: LOADK     R6 K5        ; R6 := "_alpha"
 22 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 23 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 24 [-]: LOADK     R7 K6        ; R7 := 0
 25 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 26 [-]: LOADK     R7 K10       ; R7 := 0.20000000298023
 27 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 28 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 799
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x7E1F26D7"]
  3 [-]: LOADK     R2 K2        ; R2 := "InfluenceMap"
  4 [-]: GETGLOBAL R3 K3        ; R3 := influenceMapMaterial
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  8 [-]: SETTABLE  R0 K4 R1     ; R0["INFLUENCE_MAP"] := R1
  9 [-]: LOADK     R0 K5        ; R0 := 0
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MAX_SHADER_INFLUENCES"]
 12 [-]: SUB       R1 R1 K7     ; R1 := R1 - 1
 13 [-]: LOADK     R2 K7        ; R2 := 1
 14 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 15 [-]: GETGLOBAL R4 K8        ; R4 := table
 16 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xE6450C9D"]
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["INFLUENCE_MAP"]
 19 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
 20 [-]: LOADK     R7 K11       ; R7 := "Influence"
 21 [-]: MOVE      R8 R3        ; R8 := R3
 22 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 23 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 24 [-]: CALL      R4 0 1       ; R4(R5,...)
 25 [-]: FORLOOP   R0 15        ; R0 += R2; if R0 <= R1 then begin PC := 15; R3 := R0 end
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: GETGLOBAL R4 K12       ; R4 := gGameData
 29 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x17358D95"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4["0xB3F0027"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 58
 34 [-]: JMP       58           ; PC := 58
 35 [-]: GETTABLE  R5 R4 K15    ; R5 := R4["mInfluenceNodes"]
 36 [-]: LOADK     R6 K7        ; R6 := 1
 37 [-]: LEN       R7 R5        ; R7 := # R5
 38 [-]: LOADK     R8 K7        ; R8 := 1
 39 [-]: FORPREP   R6 57        ; R6 -= R8; PC := 57
 40 [-]: GETGLOBAL R10 K16      ; R10 := 0x93034B55
 41 [-]: LOADK     R11 K17      ; R11 := 0.5
 42 [-]: LOADK     R12 K18      ; R12 := 1.2000000476837
 43 [-]: GETTABLE  R13 R5 R9    ; R13 := R5[R9]
 44 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mInfluence"]
 45 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 46 [-]: GETGLOBAL R11 K8       ; R11 := table
 47 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["0xE6450C9D"]
 48 [-]: GETUPVAL  R12 U2       ; R12 := U2
 49 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 50 [-]: GETTABLE  R14 R5 R9    ; R14 := R5[R9]
 51 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mNode"]
 52 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5EC7A3D2"]
 53 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 54 [-]: SETTABLE  R13 K20 R14  ; R13["Node"] := R14
 55 [-]: SETTABLE  R13 K11 R10  ; R13["Influence"] := R10
 56 [-]: CALL      R11 3 1      ; R11(R12,R13)
 57 [-]: FORLOOP   R6 40        ; R6 += R8; if R6 <= R7 then begin PC := 40; R9 := R6 end
 58 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 59 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
 60 [-]: SELF      R12 R12 K23  ; R13 := R12; R12 := R12["0x5DB0BD4"]
 61 [-]: LOADK     R14 K24      ; R14 := "<KUVA_LICH>"
 62 [-]: MOVE      R15 R1       ; R15 := R1
 63 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 64 [-]: LOADK     R13 K7       ; R13 := 1
 65 [-]: GETUPVAL  R14 U2       ; R14 := U2
 66 [-]: LEN       R14 R14      ; R14 := # R14
 67 [-]: LOADK     R15 K7       ; R15 := 1
 68 [-]: FORPREP   R13 123      ; R13 -= R15; PC := 123
 69 [-]: GETUPVAL  R17 U3       ; R17 := U3
 70 [-]: GETUPVAL  R18 U2       ; R18 := U2
 71 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 72 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["Node"]
 73 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
 74 [-]: GETGLOBAL R18 K25      ; R18 := 0x400E7765
 75 [-]: MOVE      R19 R17      ; R19 := R17
 76 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 77 [-]: TEST      R18 1        ; if R18 then PC := 123
 78 [-]: JMP       123          ; PC := 123
 79 [-]: GETUPVAL  R18 U2       ; R18 := U2
 80 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 81 [-]: SETTABLE  R18 K26 R17  ; R18["NodeData"] := R17
 82 [-]: MOVE      R18 R12      ; R18 := R12
 83 [-]: GETTABLE  R19 R17 K27  ; R19 := R17["locName"]
 84 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 85 [-]: SETTABLE  R17 K27 R18  ; R17["locName"] := R18
 86 [-]: GETTABLE  R18 R17 K28  ; R18 := R17["radialSector"]
 87 [-]: GETTABLE  R19 R18 K29  ; R19 := R18["region"]
 88 [-]: ADD       R19 R19 K7   ; R19 := R19 + 1
 89 [-]: GETUPVAL  R20 U4       ; R20 := U4
 90 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["0xBFFBFE5E"]
 91 [-]: MOVE      R21 R11      ; R21 := R11
 92 [-]: MOVE      R22 R19      ; R22 := R19
 93 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 94 [-]: TEST      R20 1        ; if R20 then PC := 123
 95 [-]: JMP       123          ; PC := 123
 96 [-]: GETGLOBAL R20 K8       ; R20 := table
 97 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["0xE6450C9D"]
 98 [-]: MOVE      R21 R11      ; R21 := R11
 99 [-]: MOVE      R22 R19      ; R22 := R19
100 [-]: CALL      R20 3 1      ; R20(R21,R22)
101 [-]: MOVE      R20 R12      ; R20 := R12
102 [-]: GETGLOBAL R21 K31      ; R21 := string
103 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["0x639C642A"]
104 [-]: GETGLOBAL R22 K33      ; R22 := 0xE6DC43B0
105 [-]: GETGLOBAL R23 K34      ; R23 := 0x9FAED6BC
106 [-]: GETUPVAL  R24 U5       ; R24 := U5
107 [-]: GETTABLE  R24 R24 R19  ; R24 := R24[R19]
108 [-]: GETTABLE  R24 R24 K35  ; R24 := R24["name"]
109 [-]: CALL      R23 2 2      ; R23 := R23(R24)
110 [-]: MOVE      R24 R0       ; R24 := R0
111 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
112 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
113 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
114 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
115 [-]: SELF      R21 R21 K36  ; R22 := R21; R21 := R21["0xD6A79FE9"]
116 [-]: GETUPVAL  R23 U6       ; R23 := U6
117 [-]: GETTABLE  R23 R23 R19  ; R23 := R23[R19]
118 [-]: LOADK     R24 K37      ; R24 := ".Name"
119 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
120 [-]: LOADK     R24 K38      ; R24 := "text"
121 [-]: MOVE      R25 R20      ; R25 := R20
122 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
123 [-]: FORLOOP   R13 69       ; R13 += R15; if R13 <= R14 then begin PC := 69; R16 := R13 end
124 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
125 [-]: SELF      R21 R21 K39  ; R22 := R21; R21 := R21["0x1C19D966"]
126 [-]: LOADK     R23 K2       ; R23 := "InfluenceMap"
127 [-]: LOADK     R24 K40      ; R24 := "_alpha"
128 [-]: GETUPVAL  R25 U4       ; R25 := U4
129 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["0xF81722A2"]
130 [-]: GETUPVAL  R26 U2       ; R26 := U2
131 [-]: LEN       R26 R26      ; R26 := # R26
132 [-]: LT        1 K5 R26     ; if 0 < R26 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: MOVE      R26 R0       ; R26 := R0
135 [-]: MOVE      R26 R1       ; R26 := R1
136 [-]: LOADK     R27 K42      ; R27 := 100
137 [-]: LOADK     R28 K5       ; R28 := 0
138 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
139 [-]: CALL      R21 0 1      ; R21(R22,...)
140 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 839
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xEA569929"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  5 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xF3E132E0"]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SUB       R2 R0 R2     ; R2 := R0 - R2
  9 [-]: MUL       R2 R2 K3     ; R2 := R2 * 0.5
 10 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x68998E7D"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: SUB       R3 R1 R3     ; R3 := R1 - R3
 14 [-]: MUL       R3 R3 K3     ; R3 := R3 * 0.5
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x994A1A7
 16 [-]: GETUPVAL  R5 U1        ; R5 := U1
 17 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["MIN_ZOOM"]
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["MAX_ZOOM"]
 20 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0x6374FD98
 22 [-]: GETUPVAL  R6 U2        ; R6 := U2
 23 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mCurVal"]
 24 [-]: GETTABLE  R7 R4 K10    ; R7 := R4["minValue"]
 25 [-]: GETTABLE  R8 R4 K11    ; R8 := R4["maxValue"]
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: SELF      R6 R4 K12    ; R7 := R4; R6 := R4["0x3B43F25"]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: MOVE      R5 R6        ; R5 := R6
 31 [-]: MUL       R5 R5 R5     ; R5 := R5 * R5
 32 [-]: LOADK     R6 K13       ; R6 := 0.40000000596046
 33 [-]: LOADK     R7 K14       ; R7 := 0.93999999761581
 34 [-]: MOVE      R8 R5        ; R8 := R5
 35 [-]: LE        0 R8 R6      ; if R8 > R6 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R8 R6        ; R8 := R6
 38 [-]: JMP       50           ; PC := 50
 39 [-]: LE        0 R7 R8      ; if R7 > R8 then PC := 43
 40 [-]: JMP       43           ; PC := 43
 41 [-]: MOVE      R8 R7        ; R8 := R7
 42 [-]: JMP       50           ; PC := 50
 43 [-]: SUB       R9 R8 R6     ; R9 := R8 - R6
 44 [-]: SUB       R10 R7 R6    ; R10 := R7 - R6
 45 [-]: DIV       R8 R9 R10    ; R8 := R9 / R10
 46 [-]: MUL       R9 R8 R8     ; R9 := R8 * R8
 47 [-]: MUL       R10 K15 R8   ; R10 := 2 * R8
 48 [-]: SUB       R10 K16 R10  ; R10 := 3 - R10
 49 [-]: MUL       R8 R9 R10    ; R8 := R9 * R10
 50 [-]: MUL       R9 K17 R8    ; R9 := 0.20000000298023 * R8
 51 [-]: ADD       R9 K3 R9     ; R9 := 0.5 + R9
 52 [-]: LOADNIL   R10 R12      ; R10 := R11 := R12 := nil
 53 [-]: LOADK     R13 K18      ; R13 := 1
 54 [-]: LOADK     R14 K19      ; R14 := 0
 55 [-]: LOADK     R15 K18      ; R15 := 1
 56 [-]: LOADK     R16 K19      ; R16 := 0
 57 [-]: DIV       R17 R1 R0    ; R17 := R1 / R0
 58 [-]: NEWTABLE  R18 0 0      ; R18 := {}
 59 [-]: LOADK     R19 K18      ; R19 := 1
 60 [-]: GETUPVAL  R20 U3       ; R20 := U3
 61 [-]: LEN       R20 R20      ; R20 := # R20
 62 [-]: LOADK     R21 K18      ; R21 := 1
 63 [-]: FORPREP   R19 149      ; R19 -= R21; PC := 149
 64 [-]: LOADK     R10 K19      ; R10 := 0
 65 [-]: LOADK     R11 K19      ; R11 := 0
 66 [-]: LOADK     R12 K19      ; R12 := 0
 67 [-]: GETUPVAL  R23 U3       ; R23 := U3
 68 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 69 [-]: EQ        1 R23 K20    ; if R23 == nil then PC := 149
 70 [-]: JMP       149          ; PC := 149
 71 [-]: GETGLOBAL R23 K21      ; R23 := 0x400E7765
 72 [-]: GETUPVAL  R24 U3       ; R24 := U3
 73 [-]: GETTABLE  R24 R24 R22  ; R24 := R24[R22]
 74 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["NodeData"]
 75 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 76 [-]: TEST      R23 1        ; if R23 then PC := 149
 77 [-]: JMP       149          ; PC := 149
 78 [-]: GETUPVAL  R23 U3       ; R23 := U3
 79 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 80 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["Influence"]
 81 [-]: MUL       R12 R23 R5   ; R12 := R23 * R5
 82 [-]: GETUPVAL  R23 U0       ; R23 := U0
 83 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["0x69B983D"]
 84 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
 85 [-]: GETUPVAL  R25 U3       ; R25 := U3
 86 [-]: GETTABLE  R25 R25 R22  ; R25 := R25[R22]
 87 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["NodeData"]
 88 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["clipName"]
 89 [-]: CALL      R23 3 3      ; R23,R24 := R23(R24,R25)
 90 [-]: MOVE      R11 R24      ; R11 := R24
 91 [-]: MOVE      R10 R23      ; R10 := R23
 92 [-]: ADD       R23 R10 R2   ; R23 := R10 + R2
 93 [-]: DIV       R10 R23 R0   ; R10 := R23 / R0
 94 [-]: ADD       R23 R11 R3   ; R23 := R11 + R3
 95 [-]: DIV       R11 R23 R1   ; R11 := R23 / R1
 96 [-]: GETGLOBAL R23 K26      ; R23 := math
 97 [-]: GETTABLE  R23 R23 K27  ; R23 := R23["0x8B011038"]
 98 [-]: LOADK     R24 K28      ; R24 := 0.0099999997764826
 99 [-]: MUL       R25 R12 K29  ; R25 := R12 * 0.10000000149012
100 [-]: MUL       R25 R25 R9   ; R25 := R25 * R9
101 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
102 [-]: UNM       R24 R23      ; R24 := - R23
103 [-]: LE        0 R24 R10    ; if R24 > R10 then PC := 149
104 [-]: JMP       149          ; PC := 149
105 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
106 [-]: LE        0 R10 R24    ; if R10 > R24 then PC := 149
107 [-]: JMP       149          ; PC := 149
108 [-]: UNM       R24 R23      ; R24 := - R23
109 [-]: LE        0 R24 R11    ; if R24 > R11 then PC := 149
110 [-]: JMP       149          ; PC := 149
111 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
112 [-]: LE        0 R11 R24    ; if R11 > R24 then PC := 149
113 [-]: JMP       149          ; PC := 149
114 [-]: GETGLOBAL R24 K30      ; R24 := table
115 [-]: GETTABLE  R24 R24 K31  ; R24 := R24["0xE6450C9D"]
116 [-]: MOVE      R25 R18      ; R25 := R18
117 [-]: GETGLOBAL R26 K32      ; R26 := 0x221C9700
118 [-]: MOVE      R27 R10      ; R27 := R10
119 [-]: MOVE      R28 R11      ; R28 := R11
120 [-]: MOVE      R29 R23      ; R29 := R23
121 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
122 [-]: CALL      R24 0 1      ; R24(R25,...)
123 [-]: GETGLOBAL R24 K26      ; R24 := math
124 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
125 [-]: MOVE      R25 R13      ; R25 := R13
126 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
127 [-]: SUB       R26 R10 R26  ; R26 := R10 - R26
128 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
129 [-]: MOVE      R13 R24      ; R13 := R24
130 [-]: GETGLOBAL R24 K26      ; R24 := math
131 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
132 [-]: MOVE      R25 R14      ; R25 := R14
133 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
134 [-]: ADD       R26 R10 R26  ; R26 := R10 + R26
135 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
136 [-]: MOVE      R14 R24      ; R14 := R24
137 [-]: GETGLOBAL R24 K26      ; R24 := math
138 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
139 [-]: MOVE      R25 R15      ; R25 := R15
140 [-]: SUB       R26 R11 R23  ; R26 := R11 - R23
141 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
142 [-]: MOVE      R15 R24      ; R15 := R24
143 [-]: GETGLOBAL R24 K26      ; R24 := math
144 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
145 [-]: MOVE      R25 R16      ; R25 := R16
146 [-]: ADD       R26 R11 R23  ; R26 := R11 + R23
147 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
148 [-]: MOVE      R16 R24      ; R16 := R24
149 [-]: FORLOOP   R19 64       ; R19 += R21; if R19 <= R20 then begin PC := 64; R22 := R19 end
150 [-]: LEN       R24 R18      ; R24 := # R18
151 [-]: GETUPVAL  R25 U4       ; R25 := U4
152 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["MAX_SHADER_INFLUENCES"]
153 [-]: LT        0 R25 R24    ; if R25 >= R24 then PC := 161
154 [-]: JMP       161          ; PC := 161
155 [-]: GETGLOBAL R24 K35      ; R24 := 0xC1209670
156 [-]: MOVE      R25 R18      ; R25 := R18
157 [-]: GETUPVAL  R26 U4       ; R26 := U4
158 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
159 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
160 [-]: MOVE      R18 R24      ; R18 := R24
161 [-]: LOADK     R24 K18      ; R24 := 1
162 [-]: GETGLOBAL R25 K26      ; R25 := math
163 [-]: GETTABLE  R25 R25 K33  ; R25 := R25["0x65F9712A"]
164 [-]: GETUPVAL  R26 U4       ; R26 := U4
165 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
166 [-]: LEN       R27 R18      ; R27 := # R18
167 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
168 [-]: LOADK     R26 K18      ; R26 := 1
169 [-]: FORPREP   R24 183      ; R24 -= R26; PC := 183
170 [-]: GETGLOBAL R28 K36      ; R28 := influenceMapMaterial
171 [-]: SELF      R28 R28 K37  ; R29 := R28; R28 := R28["0x94FB2E1A"]
172 [-]: GETUPVAL  R30 U5       ; R30 := U5
173 [-]: GETTABLE  R30 R30 K38  ; R30 := R30["INFLUENCE_MAP"]
174 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
175 [-]: GETTABLE  R31 R18 R27  ; R31 := R18[R27]
176 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["x"]
177 [-]: GETTABLE  R32 R18 R27  ; R32 := R18[R27]
178 [-]: GETTABLE  R32 R32 K40  ; R32 := R32["y"]
179 [-]: LOADK     R33 K19      ; R33 := 0
180 [-]: GETTABLE  R34 R18 R27  ; R34 := R18[R27]
181 [-]: GETTABLE  R34 R34 K41  ; R34 := R34["z"]
182 [-]: CALL      R28 7 1      ; R28(R29,R30,R31,R32,R33,R34)
183 [-]: FORLOOP   R24 170      ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
184 [-]: LEN       R28 R18      ; R28 := # R18
185 [-]: ADD       R28 R28 K18  ; R28 := R28 + 1
186 [-]: GETUPVAL  R29 U4       ; R29 := U4
187 [-]: GETTABLE  R29 R29 K34  ; R29 := R29["MAX_SHADER_INFLUENCES"]
188 [-]: LOADK     R30 K18      ; R30 := 1
189 [-]: FORPREP   R28 205      ; R28 -= R30; PC := 205
190 [-]: GETUPVAL  R32 U5       ; R32 := U5
191 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["INFLUENCE_MAP"]
192 [-]: GETTABLE  R32 R32 R31  ; R32 := R32[R31]
193 [-]: TEST      R32 0        ; if not R32 then PC := 205
194 [-]: JMP       205          ; PC := 205
195 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
196 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
197 [-]: GETUPVAL  R34 U5       ; R34 := U5
198 [-]: GETTABLE  R34 R34 K38  ; R34 := R34["INFLUENCE_MAP"]
199 [-]: GETTABLE  R34 R34 R31  ; R34 := R34[R31]
200 [-]: LOADK     R35 K19      ; R35 := 0
201 [-]: LOADK     R36 K19      ; R36 := 0
202 [-]: LOADK     R37 K19      ; R37 := 0
203 [-]: LOADK     R38 K19      ; R38 := 0
204 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
205 [-]: FORLOOP   R28 190      ; R28 += R30; if R28 <= R29 then begin PC := 190; R31 := R28 end
206 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
207 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
208 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
209 [-]: LOADK     R35 K43      ; R35 := "ZoomValue_NumNodes"
210 [-]: CALL      R34 2 2      ; R34 := R34(R35)
211 [-]: MOVE      R35 R5       ; R35 := R5
212 [-]: LOADK     R36 K19      ; R36 := 0
213 [-]: LOADK     R37 K19      ; R37 := 0
214 [-]: LOADK     R38 K19      ; R38 := 0
215 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
216 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
217 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
218 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
219 [-]: LOADK     R35 K44      ; R35 := "Bounds"
220 [-]: CALL      R34 2 2      ; R34 := R34(R35)
221 [-]: SUB       R35 R13 K45  ; R35 := R13 - 0.019999999552965
222 [-]: ADD       R36 R14 K45  ; R36 := R14 + 0.019999999552965
223 [-]: SUB       R37 R15 K45  ; R37 := R15 - 0.019999999552965
224 [-]: ADD       R38 R16 K45  ; R38 := R16 + 0.019999999552965
225 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
226 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 915
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8DB5D01F"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x7AEE2957"]
 10 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: MOVE      R1 R1        ; R1 := R1
 13 [-]: JMP       16           ; PC := 16
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 919
; #Upvalues:       23
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "VoidTrader"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K4        ; R3 := "Nodes.Node"
 10 [-]: LOADK     R4 K3        ; R4 := "_visible"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "NodeNotification"
 16 [-]: LOADK     R4 K3        ; R4 := "_visible"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 20 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 21 [-]: LOADK     R3 K6        ; R3 := "SubLabel"
 22 [-]: LOADK     R4 K3        ; R4 := "_visible"
 23 [-]: MOVE      R5 R0        ; R5 := R0
 24 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 25 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 27 [-]: LOADK     R3 K7        ; R3 := "NodeTransmission"
 28 [-]: LOADK     R4 K3        ; R4 := "_visible"
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 32 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 33 [-]: LOADK     R3 K8        ; R3 := "InfoTip.NodeTransmission"
 34 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 35 [-]: LOADK     R5 K10       ; R5 := 0
 36 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 37 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 38 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 39 [-]: LOADK     R3 K11       ; R3 := "InfoTip"
 40 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 41 [-]: LOADK     R5 K10       ; R5 := 0
 42 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 43 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 44 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 45 [-]: LOADK     R3 K12       ; R3 := "InfluenceMap"
 46 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 47 [-]: LOADK     R5 K10       ; R5 := 0
 48 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: GETGLOBAL R2 K14       ; R2 := 0x400E7765
 51 [-]: GETGLOBAL R3 K15       ; R3 := _T
 52 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["InRailJackMode"]
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: TEST      R2 1         ; if R2 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETGLOBAL R2 K15       ; R2 := _T
 57 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["InRailJackMode"]
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R2 R0        ; R2 := R0
 60 [-]: MOVE      R2 R1        ; R2 := R1
 61 [-]: SETTABLE  R1 K13 R2    ; R1["Active"] := R2
 62 [-]: GETUPVAL  R1 U0        ; R1 := U0
 63 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["Button"]
 64 [-]: EQ        0 R1 K18     ; if R1 ~= nil then PC := 80
 65 [-]: JMP       80           ; PC := 80
 66 [-]: GETGLOBAL R1 K19       ; R1 := 0x329BDC44
 67 [-]: LOADK     R2 K20       ; R2 := "Lotus.Interface.Components.RailjackModeButton"
 68 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 69 [-]: GETUPVAL  R2 U0        ; R2 := U0
 70 [-]: GETTABLE  R3 R1 K21    ; R3 := R1["0x46FF1A3C"]
 71 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 72 [-]: LOADK     R5 K22       ; R5 := "RailjackBtn"
 73 [-]: GETUPVAL  R6 U1        ; R6 := U1
 74 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 75 [-]: SETTABLE  R2 K17 R3    ; R2["Button"] := R3
 76 [-]: GETUPVAL  R2 U0        ; R2 := U0
 77 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Button"]
 78 [-]: GETUPVAL  R3 U2        ; R3 := U2
 79 [-]: SETTABLE  R2 K23 R3    ; R2["mOnPressedCallback"] := R3
 80 [-]: GETUPVAL  R2 U0        ; R2 := U0
 81 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Button"]
 82 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0xE2A2E3AC"]
 83 [-]: GETUPVAL  R4 U0        ; R4 := U0
 84 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Active"]
 85 [-]: MOVE      R5 R0        ; R5 := R0
 86 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 87 [-]: GETGLOBAL R2 K15       ; R2 := _T
 88 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["gActiveMatchMakingMode"]
 89 [-]: GETGLOBAL R3 K15       ; R3 := _T
 90 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["MATCHMAKING_OFFLINE_GAMEMODE"]
 91 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 101
 92 [-]: JMP       101          ; PC := 101
 93 [-]: GETUPVAL  R2 U0        ; R2 := U0
 94 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["Active"]
 95 [-]: TEST      R2 1         ; if R2 then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETGLOBAL R2 K27       ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["StalkerMode"]
 99 [-]: TEST      R2 0         ; if not R2 then PC := 105
100 [-]: JMP       105          ; PC := 105
101 [-]: GETGLOBAL R2 K29       ; R2 := gMatchingService
102 [-]: SELF      R2 R2 K30    ; R3 := R2; R2 := R2["0xA99F3BEF"]
103 [-]: CALL      R2 2 2       ; R2 := R2(R3)
104 [-]: MOVE      R2 R2        ; R2 := R2
105 [-]: GETUPVAL  R3 U0        ; R3 := U0
106 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Button"]
107 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0x625791A8"]
108 [-]: MOVE      R5 R2        ; R5 := R2
109 [-]: CALL      R3 3 1       ; R3(R4,R5)
110 [-]: GETUPVAL  R3 U0        ; R3 := U0
111 [-]: CLOSURE   R4 0         ; R4 := closure(Function #25.1)
112 [-]: GETUPVAL  R0 U0        ; R0 := U0
113 [-]: SETTABLE  R3 K32 R4    ; R3["UpdateButtonVisibility"] := R4
114 [-]: GETUPVAL  R3 U0        ; R3 := U0
115 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["0x42C0C1F"]
116 [-]: CALL      R3 1 1       ; R3()
117 [-]: GETGLOBAL R3 K34       ; R3 := gGameConfig
118 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0x89E53943"]
119 [-]: CALL      R3 2 2       ; R3 := R3(R4)
120 [-]: TEST      R3 0         ; if not R3 then PC := 137
121 [-]: JMP       137          ; PC := 137
122 [-]: GETUPVAL  R3 U0        ; R3 := U0
123 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["Active"]
124 [-]: TEST      R3 1         ; if R3 then PC := 137
125 [-]: JMP       137          ; PC := 137
126 [-]: GETUPVAL  R3 U3        ; R3 := U3
127 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["0xB11F032"]
128 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
129 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4["0x5DB0BD4"]
130 [-]: LOADK     R6 K38       ; R6 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
131 [-]: MOVE      R7 R0        ; R7 := R0
132 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
133 [-]: CALL      R3 0 1       ; R3(R4,...)
134 [-]: GETUPVAL  R3 U4        ; R3 := U4
135 [-]: CALL      R3 1 1       ; R3()
136 [-]: RETURN    R0 1         ; return 
137 [-]: GETGLOBAL R3 K15       ; R3 := _T
138 [-]: SETTABLE  R3 K39 K40   ; R3["RadialSolarMapOpen"] := "0x1"
139 [-]: GETUPVAL  R3 U5        ; R3 := U5
140 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["0xB4BBB185"]
141 [-]: MOVE      R4 R1        ; R4 := R1
142 [-]: CALL      R3 2 1       ; R3(R4)
143 [-]: GETGLOBAL R3 K15       ; R3 := _T
144 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["WareframeChallenge"]
145 [-]: EQ        0 R3 K18     ; if R3 ~= nil then PC := 148
146 [-]: JMP       148          ; PC := 148
147 [-]: MOVE      R3 R0        ; R3 := R0
148 [-]: MOVE      R3 R1        ; R3 := R1
149 [-]: MOVE      R3 R6        ; R3 := R6
150 [-]: MOVE      R3 R0        ; R3 := R0
151 [-]: MOVE      R3 R7        ; R3 := R7
152 [-]: GETUPVAL  R3 U8        ; R3 := U8
153 [-]: GETUPVAL  R4 U9        ; R4 := U9
154 [-]: GETTABLE  R4 R4 K44    ; R4 := R4["0xB6EF57A6"]
155 [-]: CALL      R4 1 2       ; R4 := R4()
156 [-]: SETTABLE  R3 K43 R4    ; R3["SplinePoints"] := R4
157 [-]: GETUPVAL  R3 U6        ; R3 := U6
158 [-]: TEST      R3 1         ; if R3 then PC := 187
159 [-]: JMP       187          ; PC := 187
160 [-]: GETGLOBAL R3 K14       ; R3 := 0x400E7765
161 [-]: GETGLOBAL R4 K45       ; R4 := gGameData
162 [-]: CALL      R3 2 2       ; R3 := R3(R4)
163 [-]: TEST      R3 1         ; if R3 then PC := 187
164 [-]: JMP       187          ; PC := 187
165 [-]: GETGLOBAL R3 K45       ; R3 := gGameData
166 [-]: SELF      R3 R3 K46    ; R4 := R3; R3 := R3["0x66024816"]
167 [-]: CALL      R3 2 2       ; R3 := R3(R4)
168 [-]: TEST      R3 1         ; if R3 then PC := 174
169 [-]: JMP       174          ; PC := 174
170 [-]: GETUPVAL  R3 U10       ; R3 := U10
171 [-]: GETGLOBAL R4 K15       ; R4 := _T
172 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["REGION_ID_MOON"]
173 [-]: SETTABLE  R3 R4 K40    ; R3[R4] := "0x1"
174 [-]: GETGLOBAL R3 K45       ; R3 := gGameData
175 [-]: SELF      R3 R3 K48    ; R4 := R3; R3 := R3["0xD172216E"]
176 [-]: CALL      R3 2 2       ; R3 := R3(R4)
177 [-]: TEST      R3 1         ; if R3 then PC := 183
178 [-]: JMP       183          ; PC := 183
179 [-]: GETUPVAL  R3 U10       ; R3 := U10
180 [-]: GETGLOBAL R4 K15       ; R4 := _T
181 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["REGION_ID_FORTRESS"]
182 [-]: SETTABLE  R3 R4 K40    ; R3[R4] := "0x1"
183 [-]: GETUPVAL  R3 U10       ; R3 := U10
184 [-]: GETGLOBAL R4 K15       ; R4 := _T
185 [-]: GETTABLE  R4 R4 K50    ; R4 := R4["REGION_ID_DARK_SECTOR"]
186 [-]: SETTABLE  R3 R4 K40    ; R3[R4] := "0x1"
187 [-]: GETUPVAL  R3 U10       ; R3 := U10
188 [-]: GETGLOBAL R4 K15       ; R4 := _T
189 [-]: GETTABLE  R4 R4 K51    ; R4 := R4["REGION_ID_DEEP_SPACE"]
190 [-]: GETUPVAL  R5 U0        ; R5 := U0
191 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["Active"]
192 [-]: MOVE      R5 R5        ; R5 := R5
193 [-]: SETTABLE  R3 R4 R5     ; R3[R4] := R5
194 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
195 [-]: SELF      R3 R3 K52    ; R4 := R3; R3 := R3["0xF017C404"]
196 [-]: LOADK     R5 K10       ; R5 := 0
197 [-]: CALL      R3 3 1       ; R3(R4,R5)
198 [-]: GETGLOBAL R3 K19       ; R3 := 0x329BDC44
199 [-]: LOADK     R4 K53       ; R4 := "Lotus.Interface.Libs.TimerMgr"
200 [-]: CALL      R3 2 2       ; R3 := R3(R4)
201 [-]: GETTABLE  R4 R3 K54    ; R4 := R3["0xC2A7FAC0"]
202 [-]: CALL      R4 1 2       ; R4 := R4()
203 [-]: MOVE      R4 R11       ; R4 := R11
204 [-]: GETUPVAL  R4 U12       ; R4 := U12
205 [-]: EQ        0 R4 K18     ; if R4 ~= nil then PC := 236
206 [-]: JMP       236          ; PC := 236
207 [-]: GETGLOBAL R4 K19       ; R4 := 0x329BDC44
208 [-]: LOADK     R5 K55       ; R5 := "EE.Interface.AnchorMgr"
209 [-]: CALL      R4 2 2       ; R4 := R4(R5)
210 [-]: GETTABLE  R5 R4 K21    ; R5 := R4["0x46FF1A3C"]
211 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
212 [-]: CALL      R5 2 2       ; R5 := R5(R6)
213 [-]: MOVE      R5 R12       ; R5 := R12
214 [-]: GETUPVAL  R5 U12       ; R5 := U12
215 [-]: SELF      R5 R5 K56    ; R6 := R5; R5 := R5["0x99AA2516"]
216 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
217 [-]: LOADK     R8 K57       ; R8 := "RegionInfo"
218 [-]: NEWTABLE  R9 2 0       ; R9 := {}
219 [-]: GETUPVAL  R10 U12      ; R10 := U12
220 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["ANCHOR_H_RIGHT"]
221 [-]: GETUPVAL  R11 U12      ; R11 := U12
222 [-]: GETTABLE  R11 R11 K59  ; R11 := R11["ANCHOR_V_TOP"]
223 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
224 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
225 [-]: GETUPVAL  R5 U12       ; R5 := U12
226 [-]: SELF      R5 R5 K56    ; R6 := R5; R5 := R5["0x99AA2516"]
227 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
228 [-]: LOADK     R8 K60       ; R8 := "RailJackBtn"
229 [-]: NEWTABLE  R9 2 0       ; R9 := {}
230 [-]: GETUPVAL  R10 U12      ; R10 := U12
231 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["ANCHOR_H_RIGHT"]
232 [-]: GETUPVAL  R11 U12      ; R11 := U12
233 [-]: GETTABLE  R11 R11 K59  ; R11 := R11["ANCHOR_V_TOP"]
234 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
235 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
236 [-]: TEST      R0 0         ; if not R0 then PC := 258
237 [-]: JMP       258          ; PC := 258
238 [-]: GETUPVAL  R5 U13       ; R5 := U13
239 [-]: CALL      R5 1 1       ; R5()
240 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
241 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x1C19D966"]
242 [-]: LOADK     R7 K61       ; R7 := "Reticle"
243 [-]: LOADK     R8 K62       ; R8 := "_x"
244 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
245 [-]: SELF      R9 R9 K63    ; R10 := R9; R9 := R9["0xF3E132E0"]
246 [-]: CALL      R9 2 2       ; R9 := R9(R10)
247 [-]: MUL       R9 R9 K64    ; R9 := R9 * 0.5
248 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
249 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
250 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x1C19D966"]
251 [-]: LOADK     R7 K61       ; R7 := "Reticle"
252 [-]: LOADK     R8 K65       ; R8 := "_y"
253 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
254 [-]: SELF      R9 R9 K66    ; R10 := R9; R9 := R9["0x68998E7D"]
255 [-]: CALL      R9 2 2       ; R9 := R9(R10)
256 [-]: MUL       R9 R9 K64    ; R9 := R9 * 0.5
257 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
258 [-]: GETGLOBAL R5 K15       ; R5 := _T
259 [-]: GETUPVAL  R6 U14       ; R6 := U14
260 [-]: SETTABLE  R5 K67 R6    ; R5["RadialSolarMap_OnAggregateResults"] := R6
261 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
262 [-]: SELF      R5 R5 K37    ; R6 := R5; R5 := R5["0x5DB0BD4"]
263 [-]: LOADK     R7 K68       ; R7 := "<LOCKED>"
264 [-]: MOVE      R8 R1        ; R8 := R1
265 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
266 [-]: MOVE      R5 R15       ; R5 := R15
267 [-]: GETGLOBAL R5 K19       ; R5 := 0x329BDC44
268 [-]: LOADK     R6 K69       ; R6 := "Lotus.Interface.Libs.SortieGenerator"
269 [-]: CALL      R5 2 2       ; R5 := R5(R6)
270 [-]: GETTABLE  R6 R5 K70    ; R6 := R5["0xF6BFCC97"]
271 [-]: CALL      R6 1 2       ; R6 := R6()
272 [-]: MOVE      R6 R16       ; R6 := R16
273 [-]: TEST      R0 0         ; if not R0 then PC := 279
274 [-]: JMP       279          ; PC := 279
275 [-]: GETUPVAL  R6 U3        ; R6 := U3
276 [-]: GETTABLE  R6 R6 K71    ; R6 := R6["0x25992394"]
277 [-]: GETGLOBAL R7 K72       ; R7 := openSound
278 [-]: CALL      R6 2 1       ; R6(R7)
279 [-]: GETUPVAL  R6 U17       ; R6 := U17
280 [-]: GETGLOBAL R7 K74       ; R7 := 0xF595ADDE
281 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
282 [-]: SELF      R8 R8 K75    ; R9 := R8; R8 := R8["0x6B7B470B"]
283 [-]: LOADK     R10 K76      ; R10 := "InfoTip.LocationPic"
284 [-]: LOADK     R11 K77      ; R11 := "_height"
285 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
286 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
287 [-]: SETTABLE  R6 K73 R7    ; R6["InitLocationPicHeight"] := R7
288 [-]: GETUPVAL  R6 U17       ; R6 := U17
289 [-]: GETGLOBAL R7 K74       ; R7 := 0xF595ADDE
290 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
291 [-]: SELF      R8 R8 K75    ; R9 := R8; R8 := R8["0x6B7B470B"]
292 [-]: LOADK     R10 K76      ; R10 := "InfoTip.LocationPic"
293 [-]: LOADK     R11 K65      ; R11 := "_y"
294 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
295 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
296 [-]: SETTABLE  R6 K78 R7    ; R6["InitLocationPicYPos"] := R7
297 [-]: MOVE      R6 R1        ; R6 := R1
298 [-]: MOVE      R6 R18       ; R6 := R18
299 [-]: GETGLOBAL R6 K79       ; R6 := gGameRules
300 [-]: SELF      R6 R6 K80    ; R7 := R6; R6 := R6["0x8709CE86"]
301 [-]: CALL      R6 2 2       ; R6 := R6(R7)
302 [-]: GETGLOBAL R7 K14       ; R7 := 0x400E7765
303 [-]: MOVE      R8 R6        ; R8 := R6
304 [-]: CALL      R7 2 2       ; R7 := R7(R8)
305 [-]: TEST      R7 1         ; if R7 then PC := 310
306 [-]: JMP       310          ; PC := 310
307 [-]: SELF      R7 R6 K31    ; R8 := R6; R7 := R6["0x625791A8"]
308 [-]: MOVE      R9 R0        ; R9 := R0
309 [-]: CALL      R7 3 1       ; R7(R8,R9)
310 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
311 [-]: SELF      R7 R7 K81    ; R8 := R7; R7 := R7["0x6B4C9862"]
312 [-]: MOVE      R9 R1        ; R9 := R1
313 [-]: CALL      R7 3 1       ; R7(R8,R9)
314 [-]: GETUPVAL  R7 U19       ; R7 := U19
315 [-]: GETUPVAL  R8 U20       ; R8 := U20
316 [-]: GETTABLE  R8 R8 K82    ; R8 := R8["READ_ONLY"]
317 [-]: CALL      R7 2 1       ; R7(R8)
318 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
319 [-]: SELF      R7 R7 K83    ; R8 := R7; R7 := R7["0x7E1F26D7"]
320 [-]: LOADK     R9 K84       ; R9 := "InfoTip.Bg"
321 [-]: GETGLOBAL R10 K27      ; R10 := _G
322 [-]: GETTABLE  R10 R10 K85  ; R10 := R10["UIMaterial_SmoothEdgeNoDepthTest"]
323 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
324 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
325 [-]: SELF      R7 R7 K83    ; R8 := R7; R7 := R7["0x7E1F26D7"]
326 [-]: LOADK     R9 K86       ; R9 := "InfoTip.Bg2"
327 [-]: GETGLOBAL R10 K27      ; R10 := _G
328 [-]: GETTABLE  R10 R10 K85  ; R10 := R10["UIMaterial_SmoothEdgeNoDepthTest"]
329 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
330 [-]: GETGLOBAL R7 K87       ; R7 := 0x8C64AFA9
331 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
332 [-]: LOADK     R9 K88       ; R9 := "Reticle.swapDepths"
333 [-]: LOADK     R10 K89      ; R10 := 605
334 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
335 [-]: GETGLOBAL R7 K87       ; R7 := 0x8C64AFA9
336 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
337 [-]: LOADK     R9 K90       ; R9 := "InfoTip.swapDepths"
338 [-]: LOADK     R10 K91      ; R10 := 500
339 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
340 [-]: GETGLOBAL R7 K87       ; R7 := 0x8C64AFA9
341 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
342 [-]: LOADK     R9 K92       ; R9 := "NodeTransmission.swapDepths"
343 [-]: LOADK     R10 K93      ; R10 := 480
344 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
345 [-]: GETUPVAL  R7 U21       ; R7 := U21
346 [-]: MOVE      R8 R1        ; R8 := R1
347 [-]: CALL      R7 2 1       ; R7(R8)
348 [-]: GETGLOBAL R7 K15       ; R7 := _T
349 [-]: GETTABLE  R7 R7 K94    ; R7 := R7["MAP_HideExtraUI"]
350 [-]: TEST      R7 1         ; if R7 then PC := 356
351 [-]: JMP       356          ; PC := 356
352 [-]: GETGLOBAL R7 K15       ; R7 := _T
353 [-]: GETTABLE  R7 R7 K95    ; R7 := R7["0x8ED0D55D"]
354 [-]: MOVE      R8 R1        ; R8 := R1
355 [-]: CALL      R7 2 1       ; R7(R8)
356 [-]: GETGLOBAL R7 K96       ; R7 := gFlashMgr
357 [-]: SELF      R7 R7 K97    ; R8 := R7; R7 := R7["0x616DD092"]
358 [-]: GETUPVAL  R9 U3        ; R9 := U3
359 [-]: GETTABLE  R9 R9 K98    ; R9 := R9["0xBCEEAD81"]
360 [-]: CALL      R9 1 0       ; R9,... := R9()
361 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
362 [-]: GETGLOBAL R8 K14       ; R8 := 0x400E7765
363 [-]: MOVE      R9 R7        ; R9 := R7
364 [-]: CALL      R8 2 2       ; R8 := R8(R9)
365 [-]: TEST      R8 1         ; if R8 then PC := 370
366 [-]: JMP       370          ; PC := 370
367 [-]: SELF      R8 R7 K99    ; R9 := R7; R8 := R7["0xD692CA7B"]
368 [-]: MOVE      R10 R1       ; R10 := R1
369 [-]: CALL      R8 3 1       ; R8(R9,R10)
370 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
371 [-]: SELF      R8 R8 K81    ; R9 := R8; R8 := R8["0x6B4C9862"]
372 [-]: MOVE      R10 R1       ; R10 := R1
373 [-]: CALL      R8 3 1       ; R8(R9,R10)
374 [-]: GETGLOBAL R8 K100      ; R8 := gRegion
375 [-]: SELF      R8 R8 K101   ; R9 := R8; R8 := R8["0x3E2F6BF"]
376 [-]: CALL      R8 2 2       ; R8 := R8(R9)
377 [-]: TEST      R0 0         ; if not R0 then PC := 393
378 [-]: JMP       393          ; PC := 393
379 [-]: GETUPVAL  R9 U0        ; R9 := U0
380 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["Active"]
381 [-]: TEST      R9 1         ; if R9 then PC := 393
382 [-]: JMP       393          ; PC := 393
383 [-]: GETGLOBAL R9 K14       ; R9 := 0x400E7765
384 [-]: MOVE      R10 R8       ; R10 := R8
385 [-]: CALL      R9 2 2       ; R9 := R9(R10)
386 [-]: TEST      R9 1         ; if R9 then PC := 393
387 [-]: JMP       393          ; PC := 393
388 [-]: SELF      R9 R8 K102   ; R10 := R8; R9 := R8["0x28609C89"]
389 [-]: GETGLOBAL R11 K103     ; R11 := 0xEC274B1A
390 [-]: LOADK     R12 K104     ; R12 := "InstantKneel"
391 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
392 [-]: CALL      R9 0 1       ; R9(R10,...)
393 [-]: GETUPVAL  R9 U11       ; R9 := U11
394 [-]: SELF      R9 R9 K105   ; R10 := R9; R9 := R9["0x61494587"]
395 [-]: LOADK     R11 K106     ; R11 := 0.30000001192093
396 [-]: CLOSURE   R12 1        ; R12 := closure(Function #25.2)
397 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
398 [-]: GETUPVAL  R9 U11       ; R9 := U11
399 [-]: SELF      R9 R9 K105   ; R10 := R9; R9 := R9["0x61494587"]
400 [-]: LOADK     R11 K107     ; R11 := 0.60000002384186
401 [-]: CLOSURE   R12 2        ; R12 := closure(Function #25.3)
402 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
403 [-]: GETGLOBAL R9 K108      ; R9 := gGameStatsMgr
404 [-]: EQ        1 R9 K18     ; if R9 == nil then PC := 413
405 [-]: JMP       413          ; PC := 413
406 [-]: GETGLOBAL R9 K108      ; R9 := gGameStatsMgr
407 [-]: SELF      R9 R9 K109   ; R10 := R9; R9 := R9["0xCFF953A5"]
408 [-]: GETGLOBAL R11 K103     ; R11 := 0xEC274B1A
409 [-]: LOADK     R12 K110     ; R12 := "IN_SHIP_VIEW_TIME"
410 [-]: CALL      R11 2 2      ; R11 := R11(R12)
411 [-]: LOADK     R12 K111     ; R12 := "STARCHART"
412 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
413 [-]: GETUPVAL  R9 U22       ; R9 := U22
414 [-]: MOVE      R10 R0       ; R10 := R0
415 [-]: CALL      R9 2 1       ; R9(R10)
416 [-]: RETURN    R0 1         ; return 


; Function #25.1:
;
; Name:            
; Defined at line: 943
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Button"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 78
  4 [-]: JMP       78           ; PC := 78
  5 [-]: GETGLOBAL R0 K1        ; R0 := gPlayerProfileMgr
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  7 [-]: LOADK     R2 K3        ; R2 := 0
  8 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  9 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x654F1092"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x30BDE7F"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0x6200B095"]
 14 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 15 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["LOT_ARCHWING"]
 16 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 17 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["SUIT_SLOT"]
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: SELF      R3 R1 K6     ; R4 := R1; R3 := R1["0x6200B095"]
 20 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 21 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LOT_ARCHWING"]
 22 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 23 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LONG_GUN_SLOT"]
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: SELF      R4 R1 K6     ; R5 := R1; R4 := R1["0x6200B095"]
 26 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 27 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["LOT_ARCHWING"]
 28 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
 29 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["MELEE_SLOT"]
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 32 [-]: GETTABLE  R6 R2 K13    ; R6 := R2["mItemType"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 37 [-]: GETTABLE  R6 R3 K13    ; R6 := R3["mItemType"]
 38 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 39 [-]: TEST      R5 1         ; if R5 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 42 [-]: GETTABLE  R6 R4 K13    ; R6 := R4["mItemType"]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: MOVE      R5 R5        ; R5 := R5
 45 [-]: JMP       48           ; PC := 48
 46 [-]: MOVE      R5 R0        ; R5 := R0
 47 [-]: MOVE      R5 R1        ; R5 := R1
 48 [-]: SELF      R6 R0 K14    ; R7 := R0; R6 := R0["0x95FCF4A0"]
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: GETGLOBAL R7 K15       ; R7 := gMatchingService
 51 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0xA99F3BEF"]
 52 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 53 [-]: GETUPVAL  R8 U0        ; R8 := U0
 54 [-]: GETTABLE  R8 R8 K0     ; R8 := R8["Button"]
 55 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x625791A8"]
 56 [-]: TEST      R7 1         ; if R7 then PC := 75
 57 [-]: JMP       75           ; PC := 75
 58 [-]: GETGLOBAL R10 K18      ; R10 := _G
 59 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["StalkerMode"]
 60 [-]: TEST      R10 1        ; if R10 then PC := 77
 61 [-]: JMP       77           ; PC := 77
 62 [-]: TESTSET   R10 R5 0     ; if not R5 then PC := 77 else R10 := R5
 63 [-]: JMP       77           ; PC := 77
 64 [-]: TESTSET   R10 R6 0     ; if not R6 then PC := 77 else R10 := R6
 65 [-]: JMP       77           ; PC := 77
 66 [-]: GETGLOBAL R10 K20      ; R10 := _T
 67 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["gActiveMatchMakingMode"]
 68 [-]: GETGLOBAL R11 K20      ; R11 := _T
 69 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["MATCHMAKING_OFFLINE_GAMEMODE"]
 70 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 76
 71 [-]: JMP       76           ; PC := 76
 72 [-]: GETUPVAL  R10 U0       ; R10 := U0
 73 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["Active"]
 74 [-]: JMP       77           ; PC := 77
 75 [-]: MOVE      R10 R0       ; R10 := R0
 76 [-]: MOVE      R10 R1       ; R10 := R1
 77 [-]: CALL      R8 3 1       ; R8(R9,R10)
 78 [-]: RETURN    R0 1         ; return 


; Function #25.2:
;
; Name:            
; Defined at line: 1052
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "InitialFade"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #25.3:
;
; Name:            
; Defined at line: 1057
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x458F27A9"]
  9 [-]: LOADK     R2 K5        ; R2 := "InitializeMore"
 10 [-]: LOADK     R3 K6        ; R3 := ""
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 1070
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 1074
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 10 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 15 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETGLOBAL R0 K5        ; R0 := _G
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["QuestNodeNames"]
 21 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 55
 22 [-]: JMP       55           ; PC := 55
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x9FAED6BC
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gPendingMission"]
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 27 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 28 [-]: GETGLOBAL R1 K9        ; R1 := string
 29 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xDE44F664"]
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["HUB_TAG"]
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETGLOBAL R1 K7        ; R1 := 0x9FAED6BC
 37 [-]: GETGLOBAL R2 K0        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gPendingMission"]
 39 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["baseNodeName"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: LOADK     R2 K13       ; R2 := 1
 42 [-]: GETGLOBAL R3 K5        ; R3 := _G
 43 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["QuestNodeNames"]
 44 [-]: LEN       R3 R3        ; R3 := # R3
 45 [-]: LOADK     R4 K13       ; R4 := 1
 46 [-]: FORPREP   R2 54        ; R2 -= R4; PC := 54
 47 [-]: GETGLOBAL R6 K5        ; R6 := _G
 48 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["QuestNodeNames"]
 49 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 50 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R6 R1        ; R6 := R1
 53 [-]: RETURN    R6 2         ; return R6
 54 [-]: FORLOOP   R2 47        ; R2 += R4; if R2 <= R3 then begin PC := 47; R5 := R2 end
 55 [-]: MOVE      R6 R0        ; R6 := R0
 56 [-]: RETURN    R6 2         ; return R6
 57 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1098
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["RadialSolarMap_OnAggregateResults"] := nil
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Movie"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Movie"]
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xA58BB96C"]
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["TransitioningOut"]
 15 [-]: TEST      R1 0         ; if not R1 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: JMP       22           ; PC := 22
 20 [-]: MOVE      R1 R0        ; R1 := R0
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: TEST      R0 1         ; if R0 then PC := 39
 23 [-]: JMP       39           ; PC := 39
 24 [-]: TEST      R1 0         ; if not R1 then PC := 39
 25 [-]: JMP       39           ; PC := 39
 26 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 27 [-]: GETGLOBAL R3 K7        ; R3 := _G
 28 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["MapSoundInst"]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETGLOBAL R2 K7        ; R2 := _G
 33 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["MapSoundInst"]
 34 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x2842784A"]
 35 [-]: MOVE      R4 R0        ; R4 := R0
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETGLOBAL R2 K7        ; R2 := _G
 38 [-]: SETTABLE  R2 K8 K2     ; R2["MapSoundInst"] := nil
 39 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 40 [-]: GETUPVAL  R3 U3        ; R3 := U3
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: TEST      R2 1         ; if R2 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: GETUPVAL  R2 U3        ; R2 := U3
 45 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xA58BB96C"]
 46 [-]: CALL      R2 2 1       ; R2(R3)
 47 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 48 [-]: GETUPVAL  R3 U4        ; R3 := U4
 49 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 50 [-]: TEST      R2 1         ; if R2 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: GETUPVAL  R2 U4        ; R2 := U4
 53 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xA58BB96C"]
 54 [-]: CALL      R2 2 1       ; R2(R3)
 55 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 56 [-]: GETUPVAL  R3 U5        ; R3 := U5
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETUPVAL  R2 U5        ; R2 := U5
 61 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xA58BB96C"]
 62 [-]: CALL      R2 2 1       ; R2(R3)
 63 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 64 [-]: GETUPVAL  R3 U6        ; R3 := U6
 65 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MovieInst"]
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: TEST      R2 1         ; if R2 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETUPVAL  R2 U6        ; R2 := U6
 70 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MovieInst"]
 71 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xA58BB96C"]
 72 [-]: CALL      R2 2 1       ; R2(R3)
 73 [-]: GETGLOBAL R2 K11       ; R2 := gFlashMgr
 74 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x616DD092"]
 75 [-]: GETUPVAL  R4 U7        ; R4 := U7
 76 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["0xBCEEAD81"]
 77 [-]: CALL      R4 1 0       ; R4,... := R4()
 78 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 79 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 80 [-]: MOVE      R4 R2        ; R4 := R2
 81 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 82 [-]: TEST      R3 1         ; if R3 then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: SELF      R3 R2 K14    ; R4 := R2; R3 := R2["0xD692CA7B"]
 85 [-]: MOVE      R5 R0        ; R5 := R0
 86 [-]: CALL      R3 3 1       ; R3(R4,R5)
 87 [-]: GETGLOBAL R3 K0        ; R3 := _T
 88 [-]: SETTABLE  R3 K15 K16   ; R3["RadialSolarMapOpen"] := "0x0"
 89 [-]: GETUPVAL  R3 U8        ; R3 := U8
 90 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0xB4BBB185"]
 91 [-]: MOVE      R4 R0        ; R4 := R0
 92 [-]: CALL      R3 2 1       ; R3(R4)
 93 [-]: GETGLOBAL R3 K18       ; R3 := gGameStatsMgr
 94 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 103
 95 [-]: JMP       103          ; PC := 103
 96 [-]: GETGLOBAL R3 K18       ; R3 := gGameStatsMgr
 97 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x47B87262"]
 98 [-]: GETGLOBAL R5 K20       ; R5 := 0xEC274B1A
 99 [-]: LOADK     R6 K21       ; R6 := "IN_SHIP_VIEW_TIME"
100 [-]: CALL      R5 2 2       ; R5 := R5(R6)
101 [-]: LOADK     R6 K22       ; R6 := "STARCHART"
102 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
103 [-]: GETGLOBAL R3 K23       ; R3 := gPlayerProfileMgr
104 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x21EF7B1A"]
105 [-]: LOADK     R5 K25       ; R5 := 0
106 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
107 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
108 [-]: MOVE      R5 R3        ; R5 := R3
109 [-]: CALL      R4 2 2       ; R4 := R4(R5)
110 [-]: TEST      R4 1         ; if R4 then PC := 119
111 [-]: JMP       119          ; PC := 119
112 [-]: SELF      R4 R3 K26    ; R5 := R3; R4 := R3["0x3EEB612E"]
113 [-]: CALL      R4 2 2       ; R4 := R4(R5)
114 [-]: SELF      R5 R4 K27    ; R6 := R4; R5 := R4["0xF7E57216"]
115 [-]: GETGLOBAL R7 K0        ; R7 := _T
116 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["ResourceDroneVisible"]
117 [-]: MOVE      R7 R7        ; R7 := R7
118 [-]: CALL      R5 3 1       ; R5(R6,R7)
119 [-]: TEST      R0 1         ; if R0 then PC := 134
120 [-]: JMP       134          ; PC := 134
121 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
122 [-]: GETGLOBAL R6 K0        ; R6 := _T
123 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["mTrigger"]
124 [-]: CALL      R5 2 2       ; R5 := R5(R6)
125 [-]: TEST      R5 1         ; if R5 then PC := 134
126 [-]: JMP       134          ; PC := 134
127 [-]: GETGLOBAL R5 K0        ; R5 := _T
128 [-]: GETTABLE  R5 R5 K29    ; R5 := R5["mTrigger"]
129 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5["0x8D5886B7"]
130 [-]: LOADK     R7 K31       ; R7 := "Close"
131 [-]: CALL      R5 3 1       ; R5(R6,R7)
132 [-]: GETGLOBAL R5 K0        ; R5 := _T
133 [-]: SETTABLE  R5 K29 K2    ; R5["mTrigger"] := nil
134 [-]: GETGLOBAL R5 K0        ; R5 := _T
135 [-]: SETTABLE  R5 K32 K16   ; R5["InStarChart"] := "0x0"
136 [-]: GETGLOBAL R5 K0        ; R5 := _T
137 [-]: SETTABLE  R5 K33 K2    ; R5["InRailJackMode"] := nil
138 [-]: GETGLOBAL R5 K0        ; R5 := _T
139 [-]: SETTABLE  R5 K28 K2    ; R5["ResourceDroneVisible"] := nil
140 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1159
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gRegion
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3E2F6BF"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R1 K2        ; R1 := 1
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: LOADK     R1 K3        ; R1 := 2
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1167
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: SETTABLE  R0 K0 R1     ; R0["Active"] := R1
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: SETTABLE  R0 K1 K2     ; R0["Transitioned"] := "0x1"
 14 [-]: GETUPVAL  R0 U2        ; R0 := U2
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 19 [-]: GETUPVAL  R0 U3        ; R0 := U3
 20 [-]: MOVE      R1 R1        ; R1 := R1
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: GETUPVAL  R0 U4        ; R0 := U4
 23 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xDB33ECB2"]
 24 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 25 [-]: LOADK     R2 K5        ; R2 := 1
 26 [-]: LOADK     R3 K6        ; R3 := 0.20000000298023
 27 [-]: LOADK     R4 K7        ; R4 := 0
 28 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 29 [-]: GETGLOBAL R0 K8        ; R0 := 0x201191EA
 30 [-]: LOADK     R1 K7        ; R1 := 0
 31 [-]: CALL      R0 2 1       ; R0(R1)
 32 [-]: GETUPVAL  R0 U1        ; R0 := U1
 33 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
 34 [-]: TEST      R0 0         ; if not R0 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R0 K9        ; R0 := _T
 37 [-]: GETUPVAL  R1 U5        ; R1 := U5
 38 [-]: CALL      R1 1 2       ; R1 := R1()
 39 [-]: SETTABLE  R0 K10 R1    ; R0["InRailJackMode"] := R1
 40 [-]: JMP       43           ; PC := 43
 41 [-]: GETGLOBAL R0 K9        ; R0 := _T
 42 [-]: SETTABLE  R0 K10 K11   ; R0["InRailJackMode"] := nil
 43 [-]: GETUPVAL  R0 U6        ; R0 := U6
 44 [-]: CALL      R0 1 1       ; R0()
 45 [-]: GETGLOBAL R0 K12       ; R0 := 0x52E17A90
 46 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 47 [-]: LOADK     R2 K13       ; R2 := "_root"
 48 [-]: GETGLOBAL R3 K14       ; R3 := UISys
 49 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["FlashInstance_LINEAR"]
 50 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 51 [-]: LOADK     R5 K16       ; R5 := "_alpha"
 52 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 53 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 54 [-]: LOADK     R6 K17       ; R6 := 100
 55 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 56 [-]: LOADK     R6 K18       ; R6 := 0.30000001192093
 57 [-]: LOADK     R7 K7        ; R7 := 0
 58 [-]: CLOSURE   R8 0         ; R8 := closure(Function #30.1)
 59 [-]: GETUPVAL  R0 U0        ; R0 := U0
 60 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 61 [-]: RETURN    R0 1         ; return 


; Function #30.1:
;
; Name:            
; Defined at line: 1189
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1194
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1198
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["WareframeChallenge"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 38
 11 [-]: JMP       38           ; PC := 38
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Active"]
 14 [-]: TEST      R1 1         ; if R1 then PC := 38
 15 [-]: JMP       38           ; PC := 38
 16 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/EpisodeStatus"
 17 [-]: GETGLOBAL R2 K0        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["ResourceDroneVisible"]
 19 [-]: TEST      R2 1         ; if R2 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADK     R1 K6        ; R1 := "/Lotus/Language/Menu/ResourceDrones"
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0x5B8EB241"]
 25 [-]: CALL      R2 1 2       ; R2 := R2()
 26 [-]: TEST      R2 1         ; if R2 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: LOADK     R1 K8        ; R1 := "/Lotus/Language/Menu/NemesisStatus"
 29 [-]: GETGLOBAL R2 K9        ; R2 := table
 30 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0xE6450C9D"]
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 33 [-]: SETTABLE  R4 K11 R1    ; R4["Label"] := R1
 34 [-]: GETUPVAL  R5 U3        ; R5 := U3
 35 [-]: SETTABLE  R4 K12 R5    ; R4["CallBack"] := R5
 36 [-]: SETTABLE  R4 K13 K14   ; R4["CallOut"] := "MENU_LTHUMB"
 37 [-]: CALL      R2 3 1       ; R2(R3,R4)
 38 [-]: GETUPVAL  R2 U4        ; R2 := U4
 39 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["DioOpen"]
 40 [-]: TEST      R2 1         ; if R2 then PC := 110
 41 [-]: JMP       110          ; PC := 110
 42 [-]: GETUPVAL  R2 U5        ; R2 := U5
 43 [-]: TEST      R2 1         ; if R2 then PC := 110
 44 [-]: JMP       110          ; PC := 110
 45 [-]: MOVE      R2 R1        ; R2 := R1
 46 [-]: GETGLOBAL R3 K16       ; R3 := Engine
 47 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0x9490FE70"]
 48 [-]: CALL      R3 1 2       ; R3 := R3()
 49 [-]: TEST      R3 0         ; if not R3 then PC := 64
 50 [-]: JMP       64           ; PC := 64
 51 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 52 [-]: GETGLOBAL R4 K0        ; R4 := _T
 53 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["SquadOverlay"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: TEST      R3 1         ; if R3 then PC := 64
 56 [-]: JMP       64           ; PC := 64
 57 [-]: GETGLOBAL R3 K0        ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["SquadOverlay"]
 59 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x458F27A9"]
 60 [-]: LOADK     R5 K20       ; R5 := "IsAcceptBtnVisible"
 61 [-]: LOADK     R6 K21       ; R6 := ""
 62 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 63 [-]: MOVE      R2 R3        ; R2 := R3
 64 [-]: TEST      R2 0         ; if not R2 then PC := 82
 65 [-]: JMP       82           ; PC := 82
 66 [-]: GETGLOBAL R3 K9        ; R3 := table
 67 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xE6450C9D"]
 68 [-]: MOVE      R4 R0        ; R4 := R0
 69 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 70 [-]: GETUPVAL  R6 U6        ; R6 := U6
 71 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["0xF81722A2"]
 72 [-]: GETGLOBAL R7 K23       ; R7 := _G
 73 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["StalkerMode"]
 74 [-]: LOADK     R8 K25       ; R8 := "LOCATE TENNO"
 75 [-]: LOADK     R9 K26       ; R9 := "/Lotus/Language/Menu/Loadout_Change"
 76 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 77 [-]: SETTABLE  R5 K11 R6    ; R5["Label"] := R6
 78 [-]: GETUPVAL  R6 U7        ; R6 := U7
 79 [-]: SETTABLE  R5 K12 R6    ; R5["CallBack"] := R6
 80 [-]: SETTABLE  R5 K13 K27   ; R5["CallOut"] := "MENU_GENERIC1"
 81 [-]: CALL      R3 3 1       ; R3(R4,R5)
 82 [-]: GETGLOBAL R3 K16       ; R3 := Engine
 83 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0x9490FE70"]
 84 [-]: CALL      R3 1 2       ; R3 := R3()
 85 [-]: TEST      R3 0         ; if not R3 then PC := 110
 86 [-]: JMP       110          ; PC := 110
 87 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 88 [-]: GETGLOBAL R4 K0        ; R4 := _T
 89 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["SquadOverlay"]
 90 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 91 [-]: TEST      R3 1         ; if R3 then PC := 110
 92 [-]: JMP       110          ; PC := 110
 93 [-]: GETGLOBAL R3 K0        ; R3 := _T
 94 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["SquadOverlay"]
 95 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x458F27A9"]
 96 [-]: LOADK     R5 K28       ; R5 := "CanInvite"
 97 [-]: LOADK     R6 K21       ; R6 := ""
 98 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 99 [-]: TEST      R3 0         ; if not R3 then PC := 110
100 [-]: JMP       110          ; PC := 110
101 [-]: GETGLOBAL R3 K9        ; R3 := table
102 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xE6450C9D"]
103 [-]: MOVE      R4 R0        ; R4 := R0
104 [-]: NEWTABLE  R5 0 3       ; R5 := {}
105 [-]: SETTABLE  R5 K11 K29   ; R5["Label"] := "/Lotus/Language/Menu/SocialOverlay_Invite"
106 [-]: GETUPVAL  R6 U8        ; R6 := U8
107 [-]: SETTABLE  R5 K12 R6    ; R5["CallBack"] := R6
108 [-]: SETTABLE  R5 K13 K30   ; R5["CallOut"] := "MENU_RTRIGGER1"
109 [-]: CALL      R3 3 1       ; R3(R4,R5)
110 [-]: LOADK     R3 K21       ; R3 := ""
111 [-]: GETUPVAL  R4 U4        ; R4 := U4
112 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["DioOpen"]
113 [-]: TEST      R4 0         ; if not R4 then PC := 117
114 [-]: JMP       117          ; PC := 117
115 [-]: LOADK     R3 K31       ; R3 := "/Lotus/Language/Menu/Global_Back"
116 [-]: JMP       131          ; PC := 131
117 [-]: GETUPVAL  R4 U6        ; R4 := U6
118 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["0xF81722A2"]
119 [-]: GETUPVAL  R5 U9        ; R5 := U9
120 [-]: GETTABLE  R5 R5 K32    ; R5 := R5["mTargetVal"]
121 [-]: GETUPVAL  R6 U10       ; R6 := U10
122 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["STARTING_ZOOM"]
123 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 126
124 [-]: JMP       126          ; PC := 126
125 [-]: MOVE      R5 R0        ; R5 := R0
126 [-]: MOVE      R5 R1        ; R5 := R1
127 [-]: LOADK     R6 K34       ; R6 := "/Lotus/Language/Menu/Lobby_ZoomOut"
128 [-]: LOADK     R7 K35       ; R7 := "/Lotus/Language/Menu/Exit"
129 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
130 [-]: MOVE      R3 R4        ; R3 := R4
131 [-]: GETGLOBAL R4 K9        ; R4 := table
132 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["0xE6450C9D"]
133 [-]: MOVE      R5 R0        ; R5 := R0
134 [-]: NEWTABLE  R6 0 3       ; R6 := {}
135 [-]: SETTABLE  R6 K11 R3    ; R6["Label"] := R3
136 [-]: GETUPVAL  R7 U11       ; R7 := U11
137 [-]: SETTABLE  R6 K12 R7    ; R6["CallBack"] := R7
138 [-]: SETTABLE  R6 K13 K36   ; R6["CallOut"] := "MENU_CANCEL"
139 [-]: CALL      R4 3 1       ; R4(R5,R6)
140 [-]: GETUPVAL  R4 U12       ; R4 := U12
141 [-]: TEST      R4 0         ; if not R4 then PC := 143
142 [-]: JMP       143          ; PC := 143
143 [-]: GETGLOBAL R4 K0        ; R4 := _T
144 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["SetButtons"]
145 [-]: TEST      R4 0         ; if not R4 then PC := 155
146 [-]: JMP       155          ; PC := 155
147 [-]: GETGLOBAL R4 K0        ; R4 := _T
148 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["0xEFDFBF7E"]
149 [-]: GETGLOBAL R5 K39       ; R5 := mMovie
150 [-]: MOVE      R6 R0        ; R6 := R0
151 [-]: GETGLOBAL R7 K40       ; R7 := 0x6B695579
152 [-]: LOADK     R8 K41       ; R8 := 1
153 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
154 [-]: CALL      R4 0 1       ; R4(R5,...)
155 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1256
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1260
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETGLOBAL R1 K0        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ResourceDroneVisible"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["ResourceDroneVisible"] := R1
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1265
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: MOVE      R5 R1        ; R5 := R1
  2 [-]: MOVE      R6 R2        ; R6 := R2
  3 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  4 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
  5 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x6B7B470B"]
  6 [-]: MOVE      R8 R5        ; R8 := R5
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
  9 [-]: MOVE      R8 R6        ; R8 := R6
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: TEST      R7 1         ; if R7 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R7 K3        ; R7 := 0x9FAED6BC
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: EQ        0 R7 K4      ; if R7 ~= "undefined" then PC := 37
 17 [-]: JMP       37           ; PC := 37
 18 [-]: TEST      R4 0         ; if not R4 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 21 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: LOADK     R10 K6       ; R10 := ".createEmptyMovieClip"
 24 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 25 [-]: MOVE      R10 R5       ; R10 := R5
 26 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 27 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 30 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 31 [-]: MOVE      R9 R0        ; R9 := R0
 32 [-]: LOADK     R10 K7       ; R10 := ".duplicateMovieClip"
 33 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 34 [-]: MOVE      R10 R5       ; R10 := R5
 35 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 36 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 37 [-]: GETGLOBAL R7 K8        ; R7 := string
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xAF449107"]
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: LOADK     R9 K10       ; R9 := "(.*%.).+$"
 41 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 42 [-]: EQ        0 R7 K11     ; if R7 ~= nil then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: MOVE      R7 R5        ; R7 := R5
 45 [-]: JMP       49           ; PC := 49
 46 [-]: MOVE      R8 R7        ; R8 := R7
 47 [-]: MOVE      R9 R5        ; R9 := R5
 48 [-]: CONCAT    R7 R8 R9     ; R7 := R8 .. R9
 49 [-]: RETURN    R7 2         ; return R7
 50 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1284
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x8C64AFA9
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := ".removeMovieClip"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1288
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: TEST      R0 0         ; if not R0 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionsCompleted"]
 11 [-]: EQ        0 R1 K2      ; if R1 ~= 0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K3        ; R1 := 25
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["LABEL_ALPHA"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1296
; #Upvalues:       5
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: LOADK     R8 K0        ; R8 := "SubLabel"
  3 [-]: LOADK     R9 K0        ; R9 := "SubLabel"
  4 [-]: GETUPVAL  R10 U1       ; R10 := U1
  5 [-]: LEN       R10 R10      ; R10 := # R10
  6 [-]: ADD       R10 R10 K1   ; R10 := R10 + 1
  7 [-]: LOADK     R11 K2       ; R11 := 200
  8 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
  9 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
 10 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0xA7FE5515"]
 11 [-]: MOVE      R10 R7       ; R10 := R7
 12 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 13 [-]: GETUPVAL  R9 U2        ; R9 := U2
 14 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["Active"]
 15 [-]: TEST      R9 0         ; if not R9 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: MOVE      R9 R0        ; R9 := R0
 18 [-]: LOADK     R10 K6       ; R10 := "_SPACE"
 19 [-]: CONCAT    R0 R9 R10    ; R0 := R9 .. R10
 20 [-]: GETGLOBAL R9 K7        ; R9 := string
 21 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x639C642A"]
 22 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 23 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x5DB0BD4"]
 24 [-]: MOVE      R12 R0       ; R12 := R0
 25 [-]: MOVE      R13 R0       ; R13 := R0
 26 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 27 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 28 [-]: GETUPVAL  R10 U3       ; R10 := U3
 29 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["Tag"]
 30 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 45
 31 [-]: JMP       45           ; PC := 45
 32 [-]: GETGLOBAL R10 K7       ; R10 := string
 33 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0x633C4246"]
 34 [-]: MOVE      R11 R9       ; R11 := R9
 35 [-]: LOADK     R12 K12      ; R12 := " "
 36 [-]: LOADK     R13 K13      ; R13 := "\r\n\r\n"
 37 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 38 [-]: MOVE      R9 R10       ; R9 := R10
 39 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 40 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 41 [-]: MOVE      R12 R7       ; R12 := R7
 42 [-]: LOADK     R13 K15      ; R13 := "verticalAlignment"
 43 [-]: LOADK     R14 K16      ; R14 := "bottom"
 44 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 45 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 46 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0xD6A79FE9"]
 47 [-]: MOVE      R12 R7       ; R12 := R7
 48 [-]: LOADK     R13 K18      ; R13 := ".Name"
 49 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 50 [-]: LOADK     R13 K19      ; R13 := "text"
 51 [-]: MOVE      R14 R9       ; R14 := R9
 52 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 53 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 54 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10["0x880196A7"]
 55 [-]: MOVE      R12 R7       ; R12 := R7
 56 [-]: LOADK     R13 K21      ; R13 := "Name"
 57 [-]: LOADK     R14 K22      ; R14 := "multiline"
 58 [-]: MOVE      R15 R0       ; R15 := R0
 59 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 60 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 61 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 62 [-]: MOVE      R12 R7       ; R12 := R7
 63 [-]: LOADK     R13 K23      ; R13 := "_alpha"
 64 [-]: GETUPVAL  R14 U4       ; R14 := U4
 65 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["LABEL_ALPHA"]
 66 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 67 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 68 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 69 [-]: MOVE      R12 R7       ; R12 := R7
 70 [-]: LOADK     R13 K25      ; R13 := "_visible"
 71 [-]: MOVE      R14 R4       ; R14 := R4
 72 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 73 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 74 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 75 [-]: MOVE      R12 R7       ; R12 := R7
 76 [-]: LOADK     R13 K18      ; R13 := ".Name"
 77 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 78 [-]: LOADK     R13 K26      ; R13 := "_color"
 79 [-]: LOADK     R14 K27      ; R14 := 16777215
 80 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 81 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 82 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 83 [-]: MOVE      R12 R7       ; R12 := R7
 84 [-]: LOADK     R13 K18      ; R13 := ".Name"
 85 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 86 [-]: LOADK     R13 K23      ; R13 := "_alpha"
 87 [-]: LOADK     R14 K28      ; R14 := 190
 88 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 89 [-]: TEST      R2 0         ; if not R2 then PC := 98
 90 [-]: JMP       98           ; PC := 98
 91 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 92 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10["0x880196A7"]
 93 [-]: MOVE      R12 R7       ; R12 := R7
 94 [-]: LOADK     R13 K21      ; R13 := "Name"
 95 [-]: LOADK     R14 K29      ; R14 := "textAlign"
 96 [-]: LOADK     R15 K30      ; R15 := "left"
 97 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 98 [-]: GETTABLE  R10 R1 K31   ; R10 := R1["z"]
 99 [-]: SUB       R10 R10 K32  ; R10 := R10 - -2
100 [-]: DIV       R10 K1 R10   ; R10 := 1 / R10
101 [-]: MUL       R10 R10 K33  ; R10 := R10 * 4
102 [-]: GETGLOBAL R11 K34      ; R11 := 0x6374FD98
103 [-]: MOVE      R12 R10      ; R12 := R10
104 [-]: LOADK     R13 K35      ; R13 := 0.75
105 [-]: LOADK     R14 K36      ; R14 := 1.25
106 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
107 [-]: MOVE      R10 R11      ; R10 := R11
108 [-]: MUL       R10 R10 K37  ; R10 := R10 * 80
109 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
110 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
111 [-]: MOVE      R13 R7       ; R13 := R7
112 [-]: LOADK     R14 K38      ; R14 := "_xscale"
113 [-]: MOVE      R15 R10      ; R15 := R10
114 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
115 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
116 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
117 [-]: MOVE      R13 R7       ; R13 := R7
118 [-]: LOADK     R14 K39      ; R14 := "_yscale"
119 [-]: MOVE      R15 R10      ; R15 := R10
120 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
121 [-]: GETGLOBAL R11 K40      ; R11 := table
122 [-]: GETTABLE  R11 R11 K41  ; R11 := R11["0xE6450C9D"]
123 [-]: GETUPVAL  R12 U1       ; R12 := U1
124 [-]: NEWTABLE  R13 0 4      ; R13 := {}
125 [-]: SETTABLE  R13 K42 R8   ; R13["memberIndex"] := R8
126 [-]: SETTABLE  R13 K43 R7   ; R13["clipName"] := R7
127 [-]: SETTABLE  R13 K44 R1   ; R13["pos"] := R1
128 [-]: SETTABLE  R13 K45 R3   ; R13["layer"] := R3
129 [-]: CALL      R11 3 1      ; R11(R12,R13)
130 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
131 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
132 [-]: MOVE      R13 R7       ; R13 := R7
133 [-]: LOADK     R14 K46      ; R14 := "enabled"
134 [-]: EQ        0 R5 K47     ; if R5 ~= nil then PC := 137
135 [-]: JMP       137          ; PC := 137
136 [-]: MOVE      R15 R0       ; R15 := R0
137 [-]: MOVE      R15 R1       ; R15 := R1
138 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
139 [-]: EQ        1 R5 K47     ; if R5 == nil then PC := 178
140 [-]: JMP       178          ; PC := 178
141 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
142 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
143 [-]: MOVE      R13 R7       ; R13 := R7
144 [-]: LOADK     R14 K48      ; R14 := "Id"
145 [-]: MOVE      R15 R6       ; R15 := R6
146 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
147 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
148 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
149 [-]: MOVE      R13 R7       ; R13 := R7
150 [-]: LOADK     R14 K49      ; R14 := "RollOverCallback"
151 [-]: GETTABLE  R15 R5 K50   ; R15 := R5["RollOver"]
152 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
153 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
154 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
155 [-]: MOVE      R13 R7       ; R13 := R7
156 [-]: LOADK     R14 K51      ; R14 := "RollOutCallback"
157 [-]: GETTABLE  R15 R5 K52   ; R15 := R5["RollOut"]
158 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
159 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
160 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
161 [-]: MOVE      R13 R7       ; R13 := R7
162 [-]: LOADK     R14 K53      ; R14 := "SelectCallback"
163 [-]: GETTABLE  R15 R5 K54   ; R15 := R5["Select"]
164 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
165 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
166 [-]: SELF      R11 R11 K20  ; R12 := R11; R11 := R11["0x880196A7"]
167 [-]: MOVE      R13 R7       ; R13 := R7
168 [-]: LOADK     R14 K55      ; R14 := "Btn"
169 [-]: LOADK     R15 K56      ; R15 := "_width"
170 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
171 [-]: SELF      R16 R16 K57  ; R17 := R16; R16 := R16["0x6B7B470B"]
172 [-]: MOVE      R18 R7       ; R18 := R7
173 [-]: LOADK     R19 K18      ; R19 := ".Name"
174 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
175 [-]: LOADK     R19 K58      ; R19 := "textWidth"
176 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
177 [-]: CALL      R11 0 1      ; R11(R12,...)
178 [-]: RETURN    R7 2         ; return R7
179 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1344
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["locationEnabled"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["edgesLocked"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["radialSector"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
 11 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["name"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K5        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 15 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 16 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R4 K5        ; R4 := _T
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 20 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 21 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mShowInStarChart"]
 22 [-]: JMP       25           ; PC := 25
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: GETGLOBAL R5 K5        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 27 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 28 [-]: EQ        1 R5 K7      ; if R5 == nil then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R5 K5        ; R5 := _T
 31 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 32 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mUnlocked"]
 34 [-]: TEST      R5 1         ; if R5 then PC := 54
 35 [-]: JMP       54           ; PC := 54
 36 [-]: GETGLOBAL R5 K11       ; R5 := _G
 37 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["CachedGoalInfo"]
 38 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 39 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: TESTSET   R5 R4 1      ; if R4 then PC := 54 else R5 := R4
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETGLOBAL R5 K5        ; R5 := _T
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R5 K5        ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 49 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 50 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: MOVE      R5 R1        ; R5 := R1
 54 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["forceUnlock"]
 55 [-]: TEST      R6 1         ; if R6 then PC := 94
 56 [-]: JMP       94           ; PC := 94
 57 [-]: GETTABLE  R6 R2 K15    ; R6 := R2["nodeType"]
 58 [-]: GETGLOBAL R7 K16       ; R7 := Lotus_Game
 59 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["NT_PVP"]
 60 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 93
 61 [-]: JMP       93           ; PC := 93
 62 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETGLOBAL R6 K18       ; R6 := 0x400E7765
 65 [-]: GETTABLE  R7 R2 K19    ; R7 := R2["keyChain"]
 66 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 67 [-]: TEST      R6 0         ; if not R6 then PC := 93
 68 [-]: JMP       93           ; PC := 93
 69 [-]: TEST      R4 1         ; if R4 then PC := 74
 70 [-]: JMP       74           ; PC := 74
 71 [-]: GETTABLE  R6 R2 K20    ; R6 := R2["unlocked"]
 72 [-]: TEST      R6 1         ; if R6 then PC := 94
 73 [-]: JMP       94           ; PC := 94
 74 [-]: TEST      R5 0         ; if not R5 then PC := 80
 75 [-]: JMP       80           ; PC := 80
 76 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
 77 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["unlocked"]
 78 [-]: TEST      R6 1         ; if R6 then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: GETTABLE  R6 R2 K21    ; R6 := R2["region"]
 81 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
 82 [-]: GETGLOBAL R7 K5        ; R7 := _T
 83 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["REGION_ID_DARK_SECTOR"]
 84 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 93
 85 [-]: JMP       93           ; PC := 93
 86 [-]: GETGLOBAL R6 K11       ; R6 := _G
 87 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["StalkerMode"]
 88 [-]: TEST      R6 1         ; if R6 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: JMP       94           ; PC := 94
 92 [-]: MOVE      R6 R0        ; R6 := R0
 93 [-]: MOVE      R6 R1        ; R6 := R1
 94 [-]: GETGLOBAL R7 K25       ; R7 := gGameRules
 95 [-]: GETGLOBAL R8 K3        ; R8 := 0x9FAED6BC
 96 [-]: GETTABLE  R9 R2 K4     ; R9 := R2["name"]
 97 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 98 [-]: SELF      R9 R7 K26    ; R10 := R7; R9 := R7["0x8B598ED4"]
 99 [-]: GETGLOBAL R11 K27      ; R11 := gLotusHubGameRulesType
100 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
101 [-]: TEST      R9 0         ; if not R9 then PC := 112
102 [-]: JMP       112          ; PC := 112
103 [-]: GETGLOBAL R9 K3        ; R9 := 0x9FAED6BC
104 [-]: GETGLOBAL R10 K25      ; R10 := gGameRules
105 [-]: SELF      R10 R10 K28  ; R11 := R10; R10 := R10["0xB8637349"]
106 [-]: CALL      R10 2 2      ; R10 := R10(R11)
107 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["location"]
108 [-]: CALL      R9 2 2       ; R9 := R9(R10)
109 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 112
110 [-]: JMP       112          ; PC := 112
111 [-]: MOVE      R6 R0        ; R6 := R0
112 [-]: GETUPVAL  R9 U1        ; R9 := U1
113 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["Active"]
114 [-]: TEST      R9 0         ; if not R9 then PC := 130
115 [-]: JMP       130          ; PC := 130
116 [-]: GETTABLE  R9 R2 K31    ; R9 := R2["missionTag"]
117 [-]: GETUPVAL  R10 U2       ; R10 := U2
118 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["SQUAD_LINK_EVENT"]
119 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 130
120 [-]: JMP       130          ; PC := 130
121 [-]: GETGLOBAL R9 K11       ; R9 := _G
122 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["CachedGoalInfo"]
123 [-]: GETTABLE  R9 R9 R3     ; R9 := R9[R3]
124 [-]: TEST      R9 1         ; if R9 then PC := 129
125 [-]: JMP       129          ; PC := 129
126 [-]: GETUPVAL  R9 U3        ; R9 := U3
127 [-]: TEST      R9 0         ; if not R9 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: MOVE      R6 R1        ; R6 := R1
130 [-]: RETURN    R6 2         ; return R6
131 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1385
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["missionsCompleted"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADK     R1 K1        ; R1 := 0
  5 [-]: LT        1 K1 R1      ; if 0 < R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: TEST      R2 1         ; if R2 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 12 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NT_PVP"]
 14 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: TEST      R2 1         ; if R2 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 21 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["NT_HUB"]
 23 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: MOVE      R2 R1        ; R2 := R1
 27 [-]: TEST      R2 1         ; if R2 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 30 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 31 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["NT_BONUS_MISSION"]
 32 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: MOVE      R2 R1        ; R2 := R1
 36 [-]: TEST      R2 1         ; if R2 then PC := 43
 37 [-]: JMP       43           ; PC := 43
 38 [-]: GETGLOBAL R3 K7        ; R3 := 0x400E7765
 39 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mission"]
 40 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["levelOverride"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: TEST      R2 1         ; if R2 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: TESTSET   R2 R3 1      ; if R3 then PC := 50 else R2 := R3
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R3 K10       ; R3 := _G
 49 [-]: GETTABLE  R2 R3 K11    ; R2 := R3["StalkerMode"]
 50 [-]: TEST      R2 0         ; if not R2 then PC := 66
 51 [-]: JMP       66           ; PC := 66
 52 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["name"]
 53 [-]: GETUPVAL  R4 U1        ; R4 := U1
 54 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["CETUS_NODE_TAG"]
 55 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETUPVAL  R3 U2        ; R3 := U2
 58 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0xDF213CE1"]
 59 [-]: GETUPVAL  R5 U1        ; R5 := U1
 60 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["PLAINS_NODE_TAG"]
 61 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 62 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["missionsCompleted"]
 63 [-]: EQ        0 R3 K1      ; if R3 ~= 0 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: MOVE      R2 R0        ; R2 := R0
 66 [-]: RETURN    R2 2         ; return R2
 67 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1403
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["locked"]
  5 [-]: TEST      R2 1         ; if R2 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["completed"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["isShortcut"]
 11 [-]: TEST      R2 0         ; if not R2 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: JMP       250          ; PC := 250
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["IsQuest"]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R2 K6        ; R2 := _G
 20 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: JMP       250          ; PC := 250
 23 [-]: EQ        0 R1 K8      ; if R1 ~= "Story" then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R2 K6        ; R2 := _G
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       250          ; PC := 250
 29 [-]: GETGLOBAL R2 K9        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 31 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 32 [-]: TEST      R2 0         ; if not R2 then PC := 59
 33 [-]: JMP       59           ; PC := 59
 34 [-]: GETGLOBAL R2 K9        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 36 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 37 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 59
 39 [-]: JMP       59           ; PC := 59
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xF81722A2"]
 42 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
 43 [-]: GETGLOBAL R4 K9        ; R4 := _T
 44 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["CachedAlerts"]
 45 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 46 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mAlertInfo"]
 47 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: GETGLOBAL R4 K6        ; R4 := _G
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["UITexture_Alert"]
 51 [-]: GETGLOBAL R5 K9        ; R5 := _T
 52 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["CachedAlerts"]
 53 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mAlertInfo"]
 55 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mIcon"]
 56 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
 57 [-]: RETURN    R2 0         ; return R2,...
 58 [-]: JMP       250          ; PC := 250
 59 [-]: GETGLOBAL R2 K6        ; R2 := _G
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["CachedGoalInfo"]
 61 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 70
 63 [-]: JMP       70           ; PC := 70
 64 [-]: GETUPVAL  R2 U1        ; R2 := U1
 65 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0xC192E91A"]
 66 [-]: MOVE      R3 R1        ; R3 := R1
 67 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 68 [-]: RETURN    R2 0         ; return R2,...
 69 [-]: JMP       250          ; PC := 250
 70 [-]: GETGLOBAL R2 K9        ; R2 := _T
 71 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 72 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 73 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 101
 74 [-]: JMP       101          ; PC := 101
 75 [-]: GETGLOBAL R2 K9        ; R2 := _T
 76 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 77 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 78 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["mUnlocked"]
 79 [-]: TEST      R2 0         ; if not R2 then PC := 101
 80 [-]: JMP       101          ; PC := 101
 81 [-]: GETGLOBAL R2 K9        ; R2 := _T
 82 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 83 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 84 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 101
 86 [-]: JMP       101          ; PC := 101
 87 [-]: GETGLOBAL R2 K9        ; R2 := _T
 88 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 89 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 90 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["mMissionInfo"]
 91 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["minEnemyLevel"]
 92 [-]: LE        0 K25 R2     ; if 80 > R2 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R2 K6        ; R2 := _G
 95 [-]: GETTABLE  R2 R2 K26    ; R2 := R2["UITextures_GhostTowerVariant"]
 96 [-]: RETURN    R2 2         ; return R2
 97 [-]: GETGLOBAL R2 K6        ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K27    ; R2 := R2["UITextures_GhostTower"]
 99 [-]: RETURN    R2 2         ; return R2
100 [-]: JMP       250          ; PC := 250
101 [-]: GETGLOBAL R2 K9        ; R2 := _T
102 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["CachedSkullNodes"]
103 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
104 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 110
105 [-]: JMP       110          ; PC := 110
106 [-]: GETGLOBAL R2 K6        ; R2 := _G
107 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["UITexture_Skull"]
108 [-]: RETURN    R2 2         ; return R2
109 [-]: JMP       250          ; PC := 250
110 [-]: GETGLOBAL R2 K9        ; R2 := _T
111 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
112 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
113 [-]: TEST      R2 0         ; if not R2 then PC := 135
114 [-]: JMP       135          ; PC := 135
115 [-]: GETGLOBAL R2 K9        ; R2 := _T
116 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
117 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
118 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
119 [-]: TEST      R2 0         ; if not R2 then PC := 135
120 [-]: JMP       135          ; PC := 135
121 [-]: GETGLOBAL R2 K13       ; R2 := 0x400E7765
122 [-]: GETGLOBAL R3 K9        ; R3 := _T
123 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["CachedSortieMissions"]
124 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
125 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
126 [-]: CALL      R2 2 2       ; R2 := R2(R3)
127 [-]: TEST      R2 1         ; if R2 then PC := 135
128 [-]: JMP       135          ; PC := 135
129 [-]: GETGLOBAL R2 K9        ; R2 := _T
130 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
131 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
132 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mIcon"]
133 [-]: RETURN    R2 2         ; return R2
134 [-]: JMP       250          ; PC := 250
135 [-]: GETGLOBAL R2 K9        ; R2 := _T
136 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
137 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
138 [-]: TEST      R2 0         ; if not R2 then PC := 152
139 [-]: JMP       152          ; PC := 152
140 [-]: GETGLOBAL R2 K9        ; R2 := _T
141 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
142 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
143 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
144 [-]: TEST      R2 0         ; if not R2 then PC := 152
145 [-]: JMP       152          ; PC := 152
146 [-]: GETGLOBAL R2 K9        ; R2 := _T
147 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
148 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
149 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["mMapIcon"]
150 [-]: RETURN    R2 2         ; return R2
151 [-]: JMP       250          ; PC := 250
152 [-]: GETGLOBAL R2 K9        ; R2 := _T
153 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["CachedInvasionInfo"]
154 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
155 [-]: TEST      R2 0         ; if not R2 then PC := 176
156 [-]: JMP       176          ; PC := 176
157 [-]: GETUPVAL  R2 U1        ; R2 := U1
158 [-]: GETTABLE  R2 R2 K34    ; R2 := R2["0x18FE37C1"]
159 [-]: LOADNIL   R3 R3        ; R3 := nil
160 [-]: CALL      R2 2 2       ; R2 := R2(R3)
161 [-]: TEST      R2 0         ; if not R2 then PC := 172
162 [-]: JMP       172          ; PC := 172
163 [-]: GETTABLE  R3 R2 K35    ; R3 := R2["mDefenderMissionInfo"]
164 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
165 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
166 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
167 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: GETGLOBAL R3 K6        ; R3 := _G
170 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
171 [-]: RETURN    R3 2         ; return R3
172 [-]: GETGLOBAL R3 K6        ; R3 := _G
173 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["UITexture_Invasion"]
174 [-]: RETURN    R3 2         ; return R3
175 [-]: JMP       250          ; PC := 250
176 [-]: GETGLOBAL R3 K9        ; R3 := _T
177 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
178 [-]: TEST      R3 0         ; if not R3 then PC := 199
179 [-]: JMP       199          ; PC := 199
180 [-]: GETGLOBAL R3 K9        ; R3 := _T
181 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
182 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
183 [-]: TEST      R3 0         ; if not R3 then PC := 199
184 [-]: JMP       199          ; PC := 199
185 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
186 [-]: GETGLOBAL R4 K9        ; R4 := _T
187 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["CachedActiveMissions"]
188 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
189 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
190 [-]: CALL      R3 2 2       ; R3 := R3(R4)
191 [-]: TEST      R3 1         ; if R3 then PC := 199
192 [-]: JMP       199          ; PC := 199
193 [-]: GETGLOBAL R3 K9        ; R3 := _T
194 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
195 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
196 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
197 [-]: RETURN    R3 2         ; return R3
198 [-]: JMP       250          ; PC := 250
199 [-]: GETGLOBAL R3 K9        ; R3 := _T
200 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
201 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
202 [-]: EQ        1 R3 K20     ; if R3 == nil then PC := 220
203 [-]: JMP       220          ; PC := 220
204 [-]: GETGLOBAL R3 K9        ; R3 := _T
205 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
206 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
207 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["mUnlocked"]
208 [-]: TEST      R3 0         ; if not R3 then PC := 220
209 [-]: JMP       220          ; PC := 220
210 [-]: GETGLOBAL R3 K9        ; R3 := _T
211 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
212 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
213 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mShowInStarChart"]
214 [-]: TEST      R3 0         ; if not R3 then PC := 220
215 [-]: JMP       220          ; PC := 220
216 [-]: GETGLOBAL R3 K6        ; R3 := _G
217 [-]: GETTABLE  R3 R3 K43    ; R3 := R3["UITexture_EliteAlert"]
218 [-]: RETURN    R3 2         ; return R3
219 [-]: JMP       250          ; PC := 250
220 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
221 [-]: GETTABLE  R3 R3 K45    ; R3 := R3["mission"]
222 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
223 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
224 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
225 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: GETGLOBAL R3 K6        ; R3 := _G
228 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
229 [-]: RETURN    R3 2         ; return R3
230 [-]: JMP       250          ; PC := 250
231 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
232 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
233 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
234 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["NT_PVP"]
235 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETGLOBAL R3 K6        ; R3 := _G
238 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["UITexture_Pvp"]
239 [-]: RETURN    R3 2         ; return R3
240 [-]: JMP       250          ; PC := 250
241 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
242 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
243 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
244 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["NT_CLAN"]
245 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 250
246 [-]: JMP       250          ; PC := 250
247 [-]: GETGLOBAL R3 K6        ; R3 := _G
248 [-]: GETTABLE  R3 R3 K50    ; R3 := R3["UITexture_DefaultClan"]
249 [-]: RETURN    R3 2         ; return R3
250 [-]: LOADNIL   R3 R3        ; R3 := nil
251 [-]: RETURN    R3 2         ; return R3
252 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1447
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  52

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
  9 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["instance"]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R5 K4        ; R5 := gBackgroundRegion
 14 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x9B0A3887"]
 15 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["instance"]
 16 [-]: CALL      R5 3 1       ; R5(R6,R7)
 17 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: LOADK     R5 K6        ; R5 := 1
 20 [-]: GETUPVAL  R6 U0        ; R6 := U0
 21 [-]: LEN       R6 R6        ; R6 := # R6
 22 [-]: LOADK     R7 K6        ; R7 := 1
 23 [-]: FORPREP   R5 61        ; R5 -= R7; PC := 61
 24 [-]: GETUPVAL  R9 U0        ; R9 := U0
 25 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 26 [-]: GETGLOBAL R10 K7       ; R10 := 0xCAA43ABB
 27 [-]: GETTABLE  R11 R9 K8    ; R11 := R9["deco"]
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: GETGLOBAL R11 K9       ; R11 := 0x221C9700
 30 [-]: GETTABLE  R12 R9 K10   ; R12 := R9["pos"]
 31 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["x"]
 32 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["pos"]
 33 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["y"]
 34 [-]: GETTABLE  R14 R9 K10   ; R14 := R9["pos"]
 35 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["z"]
 36 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 37 [-]: GETUPVAL  R12 U1       ; R12 := U1
 38 [-]: MOVE      R13 R11      ; R13 := R11
 39 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 40 [-]: MOVE      R11 R12      ; R11 := R12
 41 [-]: SETTABLE  R9 K10 R11   ; R9["pos"] := R11
 42 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 43 [-]: MOVE      R13 R10      ; R13 := R10
 44 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 45 [-]: TEST      R12 1        ; if R12 then PC := 58
 46 [-]: JMP       58           ; PC := 58
 47 [-]: GETGLOBAL R12 K4       ; R12 := gBackgroundRegion
 48 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12["0xBDD34CC6"]
 49 [-]: MOVE      R14 R10      ; R14 := R10
 50 [-]: MOVE      R15 R11      ; R15 := R11
 51 [-]: GETGLOBAL R16 K15      ; R16 := ZERO_ROTATION
 52 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 53 [-]: SETTABLE  R9 K3 R12    ; R9["instance"] := R12
 54 [-]: GETTABLE  R12 R9 K3    ; R12 := R9["instance"]
 55 [-]: SELF      R12 R12 K16  ; R13 := R12; R12 := R12["0x6A7E5F92"]
 56 [-]: GETTABLE  R14 R9 K17   ; R14 := R9["scale"]
 57 [-]: CALL      R12 3 1      ; R12(R13,R14)
 58 [-]: LOADNIL   R12 R12      ; R12 := nil
 59 [-]: GETUPVAL  R13 U2       ; R13 := U2
 60 [-]: SETTABLE  R13 R8 R12   ; R13[R8] := R12
 61 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
 62 [-]: GETGLOBAL R13 K4       ; R13 := gBackgroundRegion
 63 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13["0x90391273"]
 64 [-]: GETUPVAL  R15 U4       ; R15 := U4
 65 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["STAR_CHART_ROOT"]
 66 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 67 [-]: MOVE      R13 R3       ; R13 := R3
 68 [-]: GETUPVAL  R13 U3       ; R13 := U3
 69 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x5097FD8C"]
 70 [-]: GETGLOBAL R15 K21      ; R15 := 0x1E4F6281
 71 [-]: LOADK     R16 K22      ; R16 := 0
 72 [-]: LOADK     R17 K23      ; R17 := 60
 73 [-]: LOADK     R18 K22      ; R18 := 0
 74 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
 75 [-]: CALL      R13 0 1      ; R13(R14,...)
 76 [-]: GETGLOBAL R13 K4       ; R13 := gBackgroundRegion
 77 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13["0x90391273"]
 78 [-]: GETUPVAL  R15 U4       ; R15 := U4
 79 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["PLAYER"]
 80 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 81 [-]: GETGLOBAL R14 K4       ; R14 := gBackgroundRegion
 82 [-]: SELF      R14 R14 K18  ; R15 := R14; R14 := R14["0x90391273"]
 83 [-]: GETUPVAL  R16 U4       ; R16 := U4
 84 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["PLAYER_OPERATOR"]
 85 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 86 [-]: GETGLOBAL R15 K26      ; R15 := gRegion
 87 [-]: SELF      R15 R15 K27  ; R16 := R15; R15 := R15["0x3E2F6BF"]
 88 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 89 [-]: GETGLOBAL R16 K28      ; R16 := 0x2C00D429
 90 [-]: LOADK     R17 K29      ; R17 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
 91 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 92 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
 93 [-]: MOVE      R18 R15      ; R18 := R15
 94 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 95 [-]: TEST      R17 1        ; if R17 then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: SELF      R17 R15 K30  ; R18 := R15; R17 := R15["0x8B598ED4"]
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
100 [-]: JMP       103          ; PC := 103
101 [-]: MOVE      R17 R0       ; R17 := R0
102 [-]: MOVE      R17 R1       ; R17 := R1
103 [-]: TEST      R17 0        ; if not R17 then PC := 125
104 [-]: JMP       125          ; PC := 125
105 [-]: MOVE      R14 R5       ; R14 := R5
106 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
107 [-]: MOVE      R19 R13      ; R19 := R13
108 [-]: CALL      R18 2 2      ; R18 := R18(R19)
109 [-]: TEST      R18 1        ; if R18 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: SELF      R18 R13 K31  ; R19 := R13; R18 := R13["0x7DBDDA0B"]
112 [-]: MOVE      R20 R0       ; R20 := R0
113 [-]: CALL      R18 3 1      ; R18(R19,R20)
114 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
115 [-]: MOVE      R19 R14      ; R19 := R14
116 [-]: CALL      R18 2 2      ; R18 := R18(R19)
117 [-]: TEST      R18 1        ; if R18 then PC := 134
118 [-]: JMP       134          ; PC := 134
119 [-]: GETUPVAL  R18 U6       ; R18 := U6
120 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["0x52F80741"]
121 [-]: MOVE      R19 R14      ; R19 := R14
122 [-]: MOVE      R20 R15      ; R20 := R15
123 [-]: CALL      R18 3 1      ; R18(R19,R20)
124 [-]: JMP       134          ; PC := 134
125 [-]: MOVE      R13 R5       ; R13 := R5
126 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
127 [-]: MOVE      R19 R14      ; R19 := R14
128 [-]: CALL      R18 2 2      ; R18 := R18(R19)
129 [-]: TEST      R18 1        ; if R18 then PC := 134
130 [-]: JMP       134          ; PC := 134
131 [-]: SELF      R18 R14 K31  ; R19 := R14; R18 := R14["0x7DBDDA0B"]
132 [-]: MOVE      R20 R0       ; R20 := R0
133 [-]: CALL      R18 3 1      ; R18(R19,R20)
134 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
135 [-]: MOVE      R19 R15      ; R19 := R15
136 [-]: CALL      R18 2 2      ; R18 := R18(R19)
137 [-]: TEST      R18 1        ; if R18 then PC := 179
138 [-]: JMP       179          ; PC := 179
139 [-]: SELF      R18 R15 K33  ; R19 := R15; R18 := R15["0x8DB5D01F"]
140 [-]: CALL      R18 2 2      ; R18 := R18(R19)
141 [-]: SELF      R18 R18 K34  ; R19 := R18; R18 := R18["0x6978AC59"]
142 [-]: CALL      R18 2 2      ; R18 := R18(R19)
143 [-]: GETGLOBAL R19 K2       ; R19 := 0x400E7765
144 [-]: MOVE      R20 R18      ; R20 := R18
145 [-]: CALL      R19 2 2      ; R19 := R19(R20)
146 [-]: TEST      R19 1        ; if R19 then PC := 179
147 [-]: JMP       179          ; PC := 179
148 [-]: GETGLOBAL R19 K1       ; R19 := 0x63B09107
149 [-]: GETGLOBAL R20 K35      ; R20 := heavyFrames
150 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
151 [-]: JMP       160          ; PC := 160
152 [-]: SELF      R24 R18 K30  ; R25 := R18; R24 := R18["0x8B598ED4"]
153 [-]: MOVE      R26 R23      ; R26 := R23
154 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
155 [-]: TEST      R24 0        ; if not R24 then PC := 160
156 [-]: JMP       160          ; PC := 160
157 [-]: GETGLOBAL R24 K36      ; R24 := kneelHeavyLoopAnim
158 [-]: MOVE      R24 R7       ; R24 := R7
159 [-]: JMP       162          ; PC := 162
160 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 152; R21 := R22 end
161 [-]: JMP       152          ; PC := 152
162 [-]: GETUPVAL  R24 U7       ; R24 := U7
163 [-]: TEST      R24 1        ; if R24 then PC := 179
164 [-]: JMP       179          ; PC := 179
165 [-]: GETGLOBAL R24 K1       ; R24 := 0x63B09107
166 [-]: GETGLOBAL R25 K37      ; R25 := veryHeavyFrames
167 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
168 [-]: JMP       177          ; PC := 177
169 [-]: SELF      R29 R18 K30  ; R30 := R18; R29 := R18["0x8B598ED4"]
170 [-]: MOVE      R31 R28      ; R31 := R28
171 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
172 [-]: TEST      R29 0        ; if not R29 then PC := 177
173 [-]: JMP       177          ; PC := 177
174 [-]: GETGLOBAL R29 K38      ; R29 := kneelVeryHeavyLoopAnim
175 [-]: MOVE      R29 R7       ; R29 := R7
176 [-]: JMP       179          ; PC := 179
177 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 169; R26 := R27 end
178 [-]: JMP       169          ; PC := 169
179 [-]: GETUPVAL  R29 U7       ; R29 := U7
180 [-]: TEST      R29 1        ; if R29 then PC := 184
181 [-]: JMP       184          ; PC := 184
182 [-]: GETGLOBAL R29 K39      ; R29 := kneelLoopAnim
183 [-]: MOVE      R29 R7       ; R29 := R7
184 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
185 [-]: GETUPVAL  R30 U5       ; R30 := U5
186 [-]: CALL      R29 2 2      ; R29 := R29(R30)
187 [-]: TEST      R29 1        ; if R29 then PC := 200
188 [-]: JMP       200          ; PC := 200
189 [-]: GETUPVAL  R29 U5       ; R29 := U5
190 [-]: SELF      R29 R29 K40  ; R30 := R29; R29 := R29["0x7DEB8965"]
191 [-]: MOVE      R31 R1       ; R31 := R1
192 [-]: CALL      R29 3 1      ; R29(R30,R31)
193 [-]: GETUPVAL  R29 U5       ; R29 := U5
194 [-]: SELF      R29 R29 K31  ; R30 := R29; R29 := R29["0x7DBDDA0B"]
195 [-]: GETUPVAL  R31 U8       ; R31 := U8
196 [-]: GETTABLE  R31 R31 K41  ; R31 := R31["Active"]
197 [-]: MOVE      R31 R31      ; R31 := R31
198 [-]: MOVE      R32 R1       ; R32 := R1
199 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
200 [-]: GETGLOBAL R29 K4       ; R29 := gBackgroundRegion
201 [-]: SELF      R29 R29 K18  ; R30 := R29; R29 := R29["0x90391273"]
202 [-]: GETUPVAL  R31 U4       ; R31 := U4
203 [-]: GETTABLE  R31 R31 K42  ; R31 := R31["PLAYER_LIGHT"]
204 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
205 [-]: MOVE      R29 R9       ; R29 := R9
206 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
207 [-]: GETUPVAL  R30 U9       ; R30 := U9
208 [-]: CALL      R29 2 2      ; R29 := R29(R30)
209 [-]: TEST      R29 1        ; if R29 then PC := 215
210 [-]: JMP       215          ; PC := 215
211 [-]: GETUPVAL  R29 U9       ; R29 := U9
212 [-]: SELF      R29 R29 K43  ; R30 := R29; R29 := R29["0xDDA3917C"]
213 [-]: CALL      R29 2 2      ; R29 := R29(R30)
214 [-]: MOVE      R29 R10      ; R29 := R10
215 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
216 [-]: GETUPVAL  R30 U5       ; R30 := U5
217 [-]: CALL      R29 2 2      ; R29 := R29(R30)
218 [-]: TEST      R29 1        ; if R29 then PC := 234
219 [-]: JMP       234          ; PC := 234
220 [-]: GETUPVAL  R29 U5       ; R29 := U5
221 [-]: SELF      R29 R29 K44  ; R30 := R29; R29 := R29["0x6DA72501"]
222 [-]: CALL      R29 2 2      ; R29 := R29(R30)
223 [-]: MOVE      R29 R11      ; R29 := R11
224 [-]: GETUPVAL  R29 U12      ; R29 := U12
225 [-]: GETUPVAL  R30 U5       ; R30 := U5
226 [-]: SELF      R30 R30 K44  ; R31 := R30; R30 := R30["0x6DA72501"]
227 [-]: CALL      R30 2 2      ; R30 := R30(R31)
228 [-]: SETTABLE  R29 K45 R30  ; R29["Previous"] := R30
229 [-]: GETUPVAL  R29 U12      ; R29 := U12
230 [-]: GETUPVAL  R30 U5       ; R30 := U5
231 [-]: SELF      R30 R30 K44  ; R31 := R30; R30 := R30["0x6DA72501"]
232 [-]: CALL      R30 2 2      ; R30 := R30(R31)
233 [-]: SETTABLE  R29 K46 R30  ; R29["Target"] := R30
234 [-]: GETUPVAL  R29 U12      ; R29 := U12
235 [-]: TEST      R29 0        ; if not R29 then PC := 256
236 [-]: JMP       256          ; PC := 256
237 [-]: GETUPVAL  R29 U12      ; R29 := U12
238 [-]: GETTABLE  R29 R29 K45  ; R29 := R29["Previous"]
239 [-]: TEST      R29 0        ; if not R29 then PC := 256
240 [-]: JMP       256          ; PC := 256
241 [-]: GETUPVAL  R29 U9       ; R29 := U9
242 [-]: SELF      R29 R29 K47  ; R30 := R29; R29 := R29["0xFCAE2926"]
243 [-]: LOADK     R31 K48      ; R31 := 2
244 [-]: CALL      R29 3 1      ; R29(R30,R31)
245 [-]: GETUPVAL  R29 U9       ; R29 := U9
246 [-]: SELF      R29 R29 K49  ; R30 := R29; R29 := R29["0xEC183DDC"]
247 [-]: GETUPVAL  R31 U12      ; R31 := U12
248 [-]: GETTABLE  R31 R31 K45  ; R31 := R31["Previous"]
249 [-]: GETGLOBAL R32 K9       ; R32 := 0x221C9700
250 [-]: LOADK     R33 K22      ; R33 := 0
251 [-]: LOADK     R34 K50      ; R34 := 0.5
252 [-]: LOADK     R35 K51      ; R35 := -0.5
253 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
254 [-]: ADD       R31 R31 R32  ; R31 := R31 + R32
255 [-]: CALL      R29 3 1      ; R29(R30,R31)
256 [-]: LOADK     R29 K6       ; R29 := 1
257 [-]: LOADK     R30 K52      ; R30 := 9
258 [-]: LOADK     R31 K6       ; R31 := 1
259 [-]: FORPREP   R29 283      ; R29 -= R31; PC := 283
260 [-]: GETUPVAL  R33 U3       ; R33 := U3
261 [-]: SELF      R33 R33 K53  ; R34 := R33; R33 := R33["0xAB436EF2"]
262 [-]: GETGLOBAL R35 K54      ; R35 := solarRing
263 [-]: GETGLOBAL R36 K55      ; R36 := EMPTY_SYMBOL
264 [-]: GETGLOBAL R37 K56      ; R37 := ZERO_VECTOR
265 [-]: GETUPVAL  R38 U13      ; R38 := U13
266 [-]: GETTABLE  R38 R38 K57  ; R38 := R38["RING_ROTATION"]
267 [-]: CALL      R33 6 2      ; R33 := R33(R34,R35,R36,R37,R38)
268 [-]: GETGLOBAL R34 K2       ; R34 := 0x400E7765
269 [-]: MOVE      R35 R33      ; R35 := R33
270 [-]: CALL      R34 2 2      ; R34 := R34(R35)
271 [-]: TEST      R34 1        ; if R34 then PC := 283
272 [-]: JMP       283          ; PC := 283
273 [-]: GETGLOBAL R34 K58      ; R34 := math
274 [-]: GETTABLE  R34 R34 K59  ; R34 := R34["0xD6F2D811"]
275 [-]: MOVE      R35 R32      ; R35 := R32
276 [-]: LOADK     R36 K60      ; R36 := 1.5
277 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
278 [-]: MUL       R34 R34 K61  ; R34 := R34 * 0.20000000298023
279 [-]: SELF      R35 R33 K62  ; R36 := R33; R35 := R33["0x9F133E77"]
280 [-]: MOVE      R37 R34      ; R37 := R34
281 [-]: MOVE      R38 R34      ; R38 := R34
282 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
283 [-]: FORLOOP   R29 260      ; R29 += R31; if R29 <= R30 then begin PC := 260; R32 := R29 end
284 [-]: LOADK     R35 K63      ; R35 := 8
285 [-]: LOADK     R36 K6       ; R36 := 1
286 [-]: MOVE      R37 R35      ; R37 := R35
287 [-]: LOADK     R38 K6       ; R38 := 1
288 [-]: FORPREP   R36 335      ; R36 -= R38; PC := 335
289 [-]: GETGLOBAL R40 K4       ; R40 := gBackgroundRegion
290 [-]: SELF      R40 R40 K14  ; R41 := R40; R40 := R40["0xBDD34CC6"]
291 [-]: GETGLOBAL R42 K64      ; R42 := edgeLineTypeB
292 [-]: GETGLOBAL R43 K56      ; R43 := ZERO_VECTOR
293 [-]: GETGLOBAL R44 K15      ; R44 := ZERO_ROTATION
294 [-]: CALL      R40 5 2      ; R40 := R40(R41,R42,R43,R44)
295 [-]: DIV       R41 R39 R35  ; R41 := R39 / R35
296 [-]: DIV       R41 R41 K48  ; R41 := R41 / 2
297 [-]: LOADK     R42 K65      ; R42 := 7
298 [-]: GETGLOBAL R43 K58      ; R43 := math
299 [-]: GETTABLE  R43 R43 K66  ; R43 := R43["0x96330A01"]
300 [-]: GETGLOBAL R44 K58      ; R44 := math
301 [-]: GETTABLE  R44 R44 K67  ; R44 := R44["pi"]
302 [-]: MUL       R44 R44 K48  ; R44 := R44 * 2
303 [-]: GETGLOBAL R45 K68      ; R45 := 0xA1FD035F
304 [-]: MOVE      R46 R41      ; R46 := R41
305 [-]: CALL      R45 2 2      ; R45 := R45(R46)
306 [-]: MUL       R44 R44 R45  ; R44 := R44 * R45
307 [-]: CALL      R43 2 2      ; R43 := R43(R44)
308 [-]: MUL       R43 R43 R42  ; R43 := R43 * R42
309 [-]: GETGLOBAL R44 K58      ; R44 := math
310 [-]: GETTABLE  R44 R44 K69  ; R44 := R44["0xBB3F1476"]
311 [-]: GETGLOBAL R45 K58      ; R45 := math
312 [-]: GETTABLE  R45 R45 K67  ; R45 := R45["pi"]
313 [-]: MUL       R45 R45 K48  ; R45 := R45 * 2
314 [-]: GETGLOBAL R46 K68      ; R46 := 0xA1FD035F
315 [-]: MOVE      R47 R41      ; R47 := R41
316 [-]: CALL      R46 2 2      ; R46 := R46(R47)
317 [-]: MUL       R45 R45 R46  ; R45 := R45 * R46
318 [-]: CALL      R44 2 2      ; R44 := R44(R45)
319 [-]: MUL       R44 R44 R42  ; R44 := R44 * R42
320 [-]: NEWTABLE  R45 1 0      ; R45 := {}
321 [-]: GETGLOBAL R46 K9       ; R46 := 0x221C9700
322 [-]: UNM       R47 R43      ; R47 := - R43
323 [-]: UNM       R48 R44      ; R48 := - R44
324 [-]: LOADK     R49 K22      ; R49 := 0
325 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
326 [-]: GETGLOBAL R47 K9       ; R47 := 0x221C9700
327 [-]: MOVE      R48 R43      ; R48 := R43
328 [-]: MOVE      R49 R44      ; R49 := R44
329 [-]: LOADK     R50 K22      ; R50 := 0
330 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
331 [-]: SETLIST   R45 0 1      ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 0
332 [-]: SELF      R46 R40 K70  ; R47 := R40; R46 := R40["0x5BD03F6B"]
333 [-]: MOVE      R48 R45      ; R48 := R45
334 [-]: CALL      R46 3 1      ; R46(R47,R48)
335 [-]: FORLOOP   R36 289      ; R36 += R38; if R36 <= R37 then begin PC := 289; R39 := R36 end
336 [-]: GETUPVAL  R46 U8       ; R46 := U8
337 [-]: GETTABLE  R46 R46 K41  ; R46 := R46["Active"]
338 [-]: TEST      R46 0        ; if not R46 then PC := 354
339 [-]: JMP       354          ; PC := 354
340 [-]: GETGLOBAL R46 K2       ; R46 := 0x400E7765
341 [-]: GETUPVAL  R47 U3       ; R47 := U3
342 [-]: CALL      R46 2 2      ; R46 := R46(R47)
343 [-]: TEST      R46 1        ; if R46 then PC := 354
344 [-]: JMP       354          ; PC := 354
345 [-]: GETUPVAL  R46 U3       ; R46 := U3
346 [-]: SELF      R47 R46 K71  ; R48 := R46; R47 := R46["0x15D4DAEE"]
347 [-]: GETGLOBAL R49 K72      ; R49 := gEntityType
348 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
349 [-]: LOADK     R48 K6       ; R48 := 1
350 [-]: LEN       R49 R47      ; R49 := # R47
351 [-]: LOADK     R50 K6       ; R50 := 1
352 [-]: FORPREP   R48 353      ; R48 -= R50; PC := 353
353 [-]: FORLOOP   R48 353      ; R48 += R50; if R48 <= R49 then begin PC := 353; R51 := R48 end
354 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1593
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameRules
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 46
  5 [-]: JMP       46           ; PC := 46
  6 [-]: GETGLOBAL R1 K2        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Initialized"]
  9 [-]: EQ        0 R1 K5      ; if R1 ~= "0x0" then PC := 46
 10 [-]: JMP       46           ; PC := 46
 11 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x31B2814"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K2        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 16 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Velocity"]
 17 [-]: DIV       R2 K8 R2     ; R2 := 1 / R2
 18 [-]: GETGLOBAL R3 K2        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FortressLocation"]
 20 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["MaxSplines"]
 21 [-]: MUL       R3 R2 R3     ; R3 := R2 * R3
 22 [-]: MOD       R3 R1 R3     ; R3 := R1 % R3
 23 [-]: GETGLOBAL R4 K10       ; R4 := math
 24 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xF7005A7B"]
 25 [-]: DIV       R5 R3 R2     ; R5 := R3 / R2
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: ADD       R4 K8 R4     ; R4 := 1 + R4
 28 [-]: GETGLOBAL R5 K2        ; R5 := _T
 29 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 30 [-]: GETGLOBAL R6 K13       ; R6 := 0x6374FD98
 31 [-]: MOVE      R7 R4        ; R7 := R4
 32 [-]: LOADK     R8 K8        ; R8 := 1
 33 [-]: GETGLOBAL R9 K2        ; R9 := _T
 34 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["FortressLocation"]
 35 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["MaxSplines"]
 36 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 37 [-]: SETTABLE  R5 K12 R6    ; R5["SplineIndex"] := R6
 38 [-]: GETGLOBAL R5 K2        ; R5 := _T
 39 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 40 [-]: MOD       R6 R3 R2     ; R6 := R3 % R2
 41 [-]: DIV       R6 R6 R2     ; R6 := R6 / R2
 42 [-]: SETTABLE  R5 K14 R6    ; R5["Progress"] := R6
 43 [-]: GETGLOBAL R5 K2        ; R5 := _T
 44 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 45 [-]: SETTABLE  R5 K4 R0     ; R5["Initialized"] := R0
 46 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1605
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  55

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R5 U1        ; R5 := U1
  9 [-]: MOVE      R6 R4        ; R6 := R4
 10 [-]: CALL      R5 2 1       ; R5(R6)
 11 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
 12 [-]: JMP       8            ; PC := 8
 13 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: LOADK     R5 K2        ; R5 := 1
 20 [-]: GETUPVAL  R6 U4        ; R6 := U4
 21 [-]: LEN       R6 R6        ; R6 := # R6
 22 [-]: LOADK     R7 K2        ; R7 := 1
 23 [-]: FORPREP   R5 350       ; R5 -= R7; PC := 350
 24 [-]: GETUPVAL  R9 U4        ; R9 := U4
 25 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 26 [-]: GETGLOBAL R10 K3       ; R10 := 0xCAA43ABB
 27 [-]: GETTABLE  R11 R9 K4    ; R11 := R9["decoRedux"]
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: MOVE      R11 R0       ; R11 := R0
 30 [-]: GETGLOBAL R12 K5       ; R12 := 0x400E7765
 31 [-]: GETUPVAL  R13 U5       ; R13 := U5
 32 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["Region"]
 33 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 34 [-]: TEST      R12 0        ; if not R12 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETTABLE  R12 R9 K7    ; R12 := R9["name"]
 37 [-]: GETUPVAL  R13 U5       ; R13 := U5
 38 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["Tag"]
 39 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETUPVAL  R12 U5       ; R12 := U5
 42 [-]: SETTABLE  R12 K6 R9    ; R12["Region"] := R9
 43 [-]: MOVE      R11 R1       ; R11 := R1
 44 [-]: GETGLOBAL R12 K5       ; R12 := 0x400E7765
 45 [-]: MOVE      R13 R10      ; R13 := R10
 46 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 47 [-]: TEST      R12 0        ; if not R12 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETGLOBAL R12 K3       ; R12 := 0xCAA43ABB
 50 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["deco"]
 51 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 52 [-]: MOVE      R10 R12      ; R10 := R12
 53 [-]: TEST      R11 0        ; if not R11 then PC := 214
 54 [-]: JMP       214          ; PC := 214
 55 [-]: GETUPVAL  R12 U5       ; R12 := U5
 56 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["SplinePoints"]
 57 [-]: LOADNIL   R13 R13      ; R13 := nil
 58 [-]: LOADK     R14 K2       ; R14 := 1
 59 [-]: LEN       R15 R12      ; R15 := # R12
 60 [-]: SUB       R15 R15 K11  ; R15 := R15 - 3
 61 [-]: LOADK     R16 K2       ; R16 := 1
 62 [-]: FORPREP   R14 116      ; R14 -= R16; PC := 116
 63 [-]: GETGLOBAL R18 K5       ; R18 := 0x400E7765
 64 [-]: GETUPVAL  R19 U5       ; R19 := U5
 65 [-]: GETTABLE  R19 R19 K12  ; R19 := R19["Splines"]
 66 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
 67 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 68 [-]: TEST      R18 1        ; if R18 then PC := 76
 69 [-]: JMP       76           ; PC := 76
 70 [-]: GETGLOBAL R18 K13      ; R18 := gBackgroundRegion
 71 [-]: SELF      R18 R18 K14  ; R19 := R18; R18 := R18["0x9B0A3887"]
 72 [-]: GETUPVAL  R20 U5       ; R20 := U5
 73 [-]: GETTABLE  R20 R20 K12  ; R20 := R20["Splines"]
 74 [-]: GETTABLE  R20 R20 R17  ; R20 := R20[R17]
 75 [-]: CALL      R18 3 1      ; R18(R19,R20)
 76 [-]: GETGLOBAL R18 K13      ; R18 := gBackgroundRegion
 77 [-]: SELF      R18 R18 K15  ; R19 := R18; R18 := R18["0xBDD34CC6"]
 78 [-]: GETGLOBAL R20 K16      ; R20 := splineConnectionType
 79 [-]: GETGLOBAL R21 K17      ; R21 := ZERO_VECTOR
 80 [-]: GETGLOBAL R22 K18      ; R22 := ZERO_ROTATION
 81 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
 82 [-]: MOVE      R13 R18      ; R13 := R18
 83 [-]: GETUPVAL  R18 U5       ; R18 := U5
 84 [-]: GETTABLE  R18 R18 K12  ; R18 := R18["Splines"]
 85 [-]: SETTABLE  R18 R17 R13  ; R18[R17] := R13
 86 [-]: NEWTABLE  R18 4 0      ; R18 := {}
 87 [-]: GETTABLE  R19 R12 R17  ; R19 := R12[R17]
 88 [-]: ADD       R20 R17 K2   ; R20 := R17 + 1
 89 [-]: GETTABLE  R20 R12 R20  ; R20 := R12[R20]
 90 [-]: ADD       R21 R17 K19  ; R21 := R17 + 2
 91 [-]: GETTABLE  R21 R12 R21  ; R21 := R12[R21]
 92 [-]: ADD       R22 R17 K11  ; R22 := R17 + 3
 93 [-]: GETTABLE  R22 R12 R22  ; R22 := R12[R22]
 94 [-]: SETLIST   R18 4 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
 95 [-]: SELF      R19 R13 K20  ; R20 := R13; R19 := R13["0x5BD03F6B"]
 96 [-]: MOVE      R21 R18      ; R21 := R18
 97 [-]: CALL      R19 3 1      ; R19(R20,R21)
 98 [-]: SELF      R19 R13 K21  ; R20 := R13; R19 := R13["0xA20F64C0"]
 99 [-]: GETGLOBAL R21 K22      ; R21 := 0xB5A59043
100 [-]: LOADK     R22 K23      ; R22 := 0
101 [-]: LOADK     R23 K24      ; R23 := 255
102 [-]: LOADK     R24 K23      ; R24 := 0
103 [-]: LOADK     R25 K24      ; R25 := 255
104 [-]: CALL      R21 5 0      ; R21,... := R21(R22,R23,R24,R25)
105 [-]: CALL      R19 0 1      ; R19(R20,...)
106 [-]: SELF      R19 R13 K25  ; R20 := R13; R19 := R13["0xD63FF2C2"]
107 [-]: GETGLOBAL R21 K26      ; R21 := 0x994A1A7
108 [-]: LOADK     R22 K23      ; R22 := 0
109 [-]: LOADK     R23 K27      ; R23 := 30
110 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
111 [-]: CALL      R19 0 1      ; R19(R20,...)
112 [-]: SELF      R19 R13 K28  ; R20 := R13; R19 := R13["0x7DBDDA0B"]
113 [-]: MOVE      R21 R0       ; R21 := R0
114 [-]: MOVE      R22 R1       ; R22 := R1
115 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
116 [-]: FORLOOP   R14 63       ; R14 += R16; if R14 <= R15 then begin PC := 63; R17 := R14 end
117 [-]: GETGLOBAL R19 K29      ; R19 := _T
118 [-]: GETTABLE  R19 R19 K30  ; R19 := R19["FortressLocation"]
119 [-]: GETUPVAL  R20 U5       ; R20 := U5
120 [-]: GETTABLE  R20 R20 K12  ; R20 := R20["Splines"]
121 [-]: LEN       R20 R20      ; R20 := # R20
122 [-]: SETTABLE  R19 K31 R20  ; R19["MaxSplines"] := R20
123 [-]: GETUPVAL  R19 U5       ; R19 := U5
124 [-]: GETGLOBAL R20 K29      ; R20 := _T
125 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["FortressLocation"]
126 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["MaxSplines"]
127 [-]: GETUPVAL  R21 U5       ; R21 := U5
128 [-]: GETTABLE  R21 R21 K33  ; R21 := R21["LoopTime"]
129 [-]: DIV       R20 R20 R21  ; R20 := R20 / R21
130 [-]: SETTABLE  R19 K32 R20  ; R19["Velocity"] := R20
131 [-]: GETGLOBAL R19 K29      ; R19 := _T
132 [-]: GETTABLE  R19 R19 K30  ; R19 := R19["FortressLocation"]
133 [-]: GETUPVAL  R20 U5       ; R20 := U5
134 [-]: GETTABLE  R20 R20 K32  ; R20 := R20["Velocity"]
135 [-]: SETTABLE  R19 K32 R20  ; R19["Velocity"] := R20
136 [-]: GETGLOBAL R19 K5       ; R19 := 0x400E7765
137 [-]: GETGLOBAL R20 K34      ; R20 := gGameData
138 [-]: CALL      R19 2 2      ; R19 := R19(R20)
139 [-]: TEST      R19 1        ; if R19 then PC := 144
140 [-]: JMP       144          ; PC := 144
141 [-]: GETUPVAL  R19 U6       ; R19 := U6
142 [-]: MOVE      R20 R1       ; R20 := R1
143 [-]: CALL      R19 2 1      ; R19(R20)
144 [-]: GETUPVAL  R19 U5       ; R19 := U5
145 [-]: GETTABLE  R19 R19 K12  ; R19 := R19["Splines"]
146 [-]: GETGLOBAL R20 K29      ; R20 := _T
147 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["FortressLocation"]
148 [-]: GETTABLE  R20 R20 K35  ; R20 := R20["SplineIndex"]
149 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
150 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19["0xAC71FD5A"]
151 [-]: GETGLOBAL R21 K29      ; R21 := _T
152 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["FortressLocation"]
153 [-]: GETTABLE  R21 R21 K37  ; R21 := R21["Progress"]
154 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
155 [-]: GETUPVAL  R20 U7       ; R20 := U7
156 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20["0x2721E25D"]
157 [-]: GETUPVAL  R22 U5       ; R22 := U5
158 [-]: GETTABLE  R22 R22 K6   ; R22 := R22["Region"]
159 [-]: GETGLOBAL R23 K39      ; R23 := 0x221C9700
160 [-]: GETTABLE  R24 R19 K40  ; R24 := R19["x"]
161 [-]: MUL       R24 R24 K41  ; R24 := R24 * 0.041000001132488
162 [-]: ADD       R24 K42 R24  ; R24 := 0.5 + R24
163 [-]: GETTABLE  R25 R19 K43  ; R25 := R19["y"]
164 [-]: ADD       R25 R25 K44  ; R25 := R25 + 0.029999999329448
165 [-]: MUL       R25 R25 K45  ; R25 := R25 * 0.043000001460314
166 [-]: SUB       R25 K42 R25  ; R25 := 0.5 - R25
167 [-]: GETUPVAL  R26 U8       ; R26 := U8
168 [-]: GETTABLE  R26 R26 K46  ; R26 := R26["MAX_ZOOM"]
169 [-]: SUB       R26 R26 K47  ; R26 := R26 - 0.30000001192093
170 [-]: GETTABLE  R27 R19 K48  ; R27 := R19["z"]
171 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
172 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
173 [-]: CALL      R20 0 1      ; R20(R21,...)
174 [-]: SETTABLE  R9 K49 R19   ; R9["pos"] := R19
175 [-]: LOADK     R20 K2       ; R20 := 1
176 [-]: GETUPVAL  R21 U5       ; R21 := U5
177 [-]: GETTABLE  R21 R21 K6   ; R21 := R21["Region"]
178 [-]: GETTABLE  R21 R21 K50  ; R21 := R21["tiers"]
179 [-]: LEN       R21 R21      ; R21 := # R21
180 [-]: LOADK     R22 K2       ; R22 := 1
181 [-]: FORPREP   R20 213      ; R20 -= R22; PC := 213
182 [-]: GETUPVAL  R24 U5       ; R24 := U5
183 [-]: GETTABLE  R24 R24 K6   ; R24 := R24["Region"]
184 [-]: GETTABLE  R24 R24 K50  ; R24 := R24["tiers"]
185 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
186 [-]: GETTABLE  R24 R24 K51  ; R24 := R24["sectors"]
187 [-]: LOADK     R25 K2       ; R25 := 1
188 [-]: LEN       R26 R24      ; R26 := # R24
189 [-]: LOADK     R27 K2       ; R27 := 1
190 [-]: FORPREP   R25 212      ; R25 -= R27; PC := 212
191 [-]: GETTABLE  R29 R24 R28  ; R29 := R24[R28]
192 [-]: GETTABLE  R30 R29 K52  ; R30 := R29["decoOffset"]
193 [-]: ADD       R30 R19 R30  ; R30 := R19 + R30
194 [-]: SETTABLE  R29 K49 R30  ; R29["pos"] := R30
195 [-]: GETGLOBAL R30 K53      ; R30 := 0x9FAED6BC
196 [-]: GETTABLE  R31 R29 K7   ; R31 := R29["name"]
197 [-]: CALL      R30 2 2      ; R30 := R30(R31)
198 [-]: GETUPVAL  R31 U5       ; R31 := U5
199 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["Sectors"]
200 [-]: GETTABLE  R31 R31 R30  ; R31 := R31[R30]
201 [-]: EQ        1 R31 K0     ; if R31 == nil then PC := 209
202 [-]: JMP       209          ; PC := 209
203 [-]: GETGLOBAL R31 K55      ; R31 := 0x93B1256B
204 [-]: LOADK     R32 K56      ; R32 := "Ignoring duplicate fortress sector"
205 [-]: GETTABLE  R33 R29 K7   ; R33 := R29["name"]
206 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
207 [-]: CALL      R31 2 1      ; R31(R32)
208 [-]: JMP       212          ; PC := 212
209 [-]: GETUPVAL  R31 U5       ; R31 := U5
210 [-]: GETTABLE  R31 R31 K54  ; R31 := R31["Sectors"]
211 [-]: SETTABLE  R31 R30 R29  ; R31[R30] := R29
212 [-]: FORLOOP   R25 191      ; R25 += R27; if R25 <= R26 then begin PC := 191; R28 := R25 end
213 [-]: FORLOOP   R20 182      ; R20 += R22; if R20 <= R21 then begin PC := 182; R23 := R20 end
214 [-]: GETGLOBAL R31 K39      ; R31 := 0x221C9700
215 [-]: GETTABLE  R32 R9 K49   ; R32 := R9["pos"]
216 [-]: GETTABLE  R32 R32 K40  ; R32 := R32["x"]
217 [-]: GETTABLE  R33 R9 K49   ; R33 := R9["pos"]
218 [-]: GETTABLE  R33 R33 K43  ; R33 := R33["y"]
219 [-]: GETTABLE  R34 R9 K49   ; R34 := R9["pos"]
220 [-]: GETTABLE  R34 R34 K48  ; R34 := R34["z"]
221 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
222 [-]: GETUPVAL  R32 U9       ; R32 := U9
223 [-]: MOVE      R33 R31      ; R33 := R31
224 [-]: CALL      R32 2 2      ; R32 := R32(R33)
225 [-]: MOVE      R31 R32      ; R31 := R32
226 [-]: SETTABLE  R9 K49 R31   ; R9["pos"] := R31
227 [-]: GETGLOBAL R32 K13      ; R32 := gBackgroundRegion
228 [-]: SELF      R32 R32 K15  ; R33 := R32; R32 := R32["0xBDD34CC6"]
229 [-]: MOVE      R34 R10      ; R34 := R10
230 [-]: MOVE      R35 R31      ; R35 := R31
231 [-]: GETGLOBAL R36 K57      ; R36 := 0x1E4F6281
232 [-]: LOADK     R37 K23      ; R37 := 0
233 [-]: LOADK     R38 K58      ; R38 := -15
234 [-]: LOADK     R39 K23      ; R39 := 0
235 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
236 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
237 [-]: SETTABLE  R9 K59 R32   ; R9["instance"] := R32
238 [-]: GETGLOBAL R33 K5       ; R33 := 0x400E7765
239 [-]: GETUPVAL  R34 U2       ; R34 := U2
240 [-]: GETTABLE  R34 R34 R8   ; R34 := R34[R8]
241 [-]: CALL      R33 2 2      ; R33 := R33(R34)
242 [-]: TEST      R33 1        ; if R33 then PC := 249
243 [-]: JMP       249          ; PC := 249
244 [-]: GETGLOBAL R33 K13      ; R33 := gBackgroundRegion
245 [-]: SELF      R33 R33 K14  ; R34 := R33; R33 := R33["0x9B0A3887"]
246 [-]: GETUPVAL  R35 U2       ; R35 := U2
247 [-]: GETTABLE  R35 R35 R8   ; R35 := R35[R8]
248 [-]: CALL      R33 3 1      ; R33(R34,R35)
249 [-]: GETUPVAL  R33 U2       ; R33 := U2
250 [-]: SETTABLE  R33 R8 R32   ; R33[R8] := R32
251 [-]: SELF      R33 R32 K60  ; R34 := R32; R33 := R32["0x6A7E5F92"]
252 [-]: GETTABLE  R35 R9 K61   ; R35 := R9["scale"]
253 [-]: CALL      R33 3 1      ; R33(R34,R35)
254 [-]: GETUPVAL  R33 U10      ; R33 := U10
255 [-]: GETTABLE  R33 R33 R8   ; R33 := R33[R8]
256 [-]: EQ        1 R33 K62    ; if R33 == "0x1" then PC := 268
257 [-]: JMP       268          ; PC := 268
258 [-]: GETUPVAL  R33 U11      ; R33 := U11
259 [-]: GETTABLE  R33 R33 K63  ; R33 := R33["Active"]
260 [-]: TEST      R33 0        ; if not R33 then PC := 269
261 [-]: JMP       269          ; PC := 269
262 [-]: GETUPVAL  R33 U11      ; R33 := U11
263 [-]: GETTABLE  R33 R33 K64  ; R33 := R33["Regions"]
264 [-]: GETTABLE  R33 R33 R8   ; R33 := R33[R8]
265 [-]: MOVE      R33 R33      ; R33 := R33
266 [-]: JMP       269          ; PC := 269
267 [-]: MOVE      R33 R0       ; R33 := R0
268 [-]: MOVE      R33 R1       ; R33 := R1
269 [-]: TEST      R33 0        ; if not R33 then PC := 288
270 [-]: JMP       288          ; PC := 288
271 [-]: SELF      R34 R32 K28  ; R35 := R32; R34 := R32["0x7DBDDA0B"]
272 [-]: MOVE      R36 R0       ; R36 := R0
273 [-]: MOVE      R37 R1       ; R37 := R1
274 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
275 [-]: SELF      R34 R32 K65  ; R35 := R32; R34 := R32["0x15D4DAEE"]
276 [-]: GETGLOBAL R36 K66      ; R36 := gEntityType
277 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
278 [-]: LOADK     R35 K2       ; R35 := 1
279 [-]: LEN       R36 R34      ; R36 := # R34
280 [-]: LOADK     R37 K2       ; R37 := 1
281 [-]: FORPREP   R35 287      ; R35 -= R37; PC := 287
282 [-]: GETTABLE  R39 R34 R38  ; R39 := R34[R38]
283 [-]: SELF      R39 R39 K28  ; R40 := R39; R39 := R39["0x7DBDDA0B"]
284 [-]: MOVE      R41 R0       ; R41 := R0
285 [-]: MOVE      R42 R1       ; R42 := R1
286 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
287 [-]: FORLOOP   R35 282      ; R35 += R37; if R35 <= R36 then begin PC := 282; R38 := R35 end
288 [-]: GETUPVAL  R39 U11      ; R39 := U11
289 [-]: GETTABLE  R39 R39 K64  ; R39 := R39["Regions"]
290 [-]: GETTABLE  R39 R39 R8   ; R39 := R39[R8]
291 [-]: TEST      R39 0        ; if not R39 then PC := 306
292 [-]: JMP       306          ; PC := 306
293 [-]: SELF      R39 R32 K65  ; R40 := R32; R39 := R32["0x15D4DAEE"]
294 [-]: GETGLOBAL R41 K67      ; R41 := gLightType
295 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
296 [-]: LOADK     R40 K2       ; R40 := 1
297 [-]: LEN       R41 R39      ; R41 := # R39
298 [-]: LOADK     R42 K2       ; R42 := 1
299 [-]: FORPREP   R40 305      ; R40 -= R42; PC := 305
300 [-]: GETTABLE  R44 R39 R43  ; R44 := R39[R43]
301 [-]: SELF      R44 R44 K28  ; R45 := R44; R44 := R44["0x7DBDDA0B"]
302 [-]: MOVE      R46 R0       ; R46 := R0
303 [-]: MOVE      R47 R1       ; R47 := R1
304 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
305 [-]: FORLOOP   R40 300      ; R40 += R42; if R40 <= R41 then begin PC := 300; R43 := R40 end
306 [-]: GETGLOBAL R44 K39      ; R44 := 0x221C9700
307 [-]: LOADK     R45 K23      ; R45 := 0
308 [-]: GETTABLE  R46 R9 K61   ; R46 := R9["scale"]
309 [-]: MUL       R46 R46 K68  ; R46 := R46 * 1.0499999523163
310 [-]: GETUPVAL  R47 U12      ; R47 := U12
311 [-]: GETTABLE  R47 R47 K69  ; R47 := R47["PLANET_UNIT_MULTIPLIER"]
312 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
313 [-]: LOADK     R47 K70      ; R47 := 9.9999997473788e-05
314 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
315 [-]: ADD       R44 R31 R44  ; R44 := R31 + R44
316 [-]: GETUPVAL  R45 U13      ; R45 := U13
317 [-]: GETTABLE  R45 R45 K71  ; R45 := R45["0xF81722A2"]
318 [-]: GETUPVAL  R46 U11      ; R46 := U11
319 [-]: GETTABLE  R46 R46 K63  ; R46 := R46["Active"]
320 [-]: TEST      R46 0        ; if not R46 then PC := 327
321 [-]: JMP       327          ; PC := 327
322 [-]: GETUPVAL  R46 U11      ; R46 := U11
323 [-]: GETTABLE  R46 R46 K64  ; R46 := R46["Regions"]
324 [-]: GETTABLE  R46 R46 R8   ; R46 := R46[R8]
325 [-]: JMP       328          ; PC := 328
326 [-]: MOVE      R46 R0       ; R46 := R0
327 [-]: MOVE      R46 R1       ; R46 := R1
328 [-]: GETTABLE  R47 R9 K7    ; R47 := R9["name"]
329 [-]: LOADK     R48 K72      ; R48 := ""
330 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
331 [-]: GETUPVAL  R46 U0       ; R46 := U0
332 [-]: GETUPVAL  R47 U14      ; R47 := U14
333 [-]: MOVE      R48 R45      ; R48 := R45
334 [-]: MOVE      R49 R44      ; R49 := R44
335 [-]: MOVE      R50 R0       ; R50 := R0
336 [-]: LOADK     R51 K19      ; R51 := 2
337 [-]: MOVE      R52 R33      ; R52 := R33
338 [-]: NEWTABLE  R53 0 2      ; R53 := {}
339 [-]: SETTABLE  R53 K73 K74  ; R53["RollOver"] := "RollOverRegionLabel"
340 [-]: SETTABLE  R53 K75 K76  ; R53["RollOut"] := "RollOutRegionLabel"
341 [-]: MOVE      R54 R8       ; R54 := R8
342 [-]: CALL      R47 8 2      ; R47 := R47(R48,R49,R50,R51,R52,R53,R54)
343 [-]: SETTABLE  R46 R8 R47   ; R46[R8] := R47
344 [-]: TEST      R11 0        ; if not R11 then PC := 350
345 [-]: JMP       350          ; PC := 350
346 [-]: GETUPVAL  R46 U5       ; R46 := U5
347 [-]: GETUPVAL  R47 U3       ; R47 := U3
348 [-]: LEN       R47 R47      ; R47 := # R47
349 [-]: SETTABLE  R46 K77 R47  ; R46["SubLabelIndex"] := R47
350 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
351 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1720
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SETTABLE  R1 K0 R2     ; R1["RegionLabel"] := R2
  6 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1724
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["RegionLabel"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1728
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: LOADNIL   R0 R0        ; R0 := nil
  8 [-]: LOADK     R1 K0        ; R1 := 1
  9 [-]: GETUPVAL  R2 U3        ; R2 := U3
 10 [-]: LEN       R2 R2        ; R2 := # R2
 11 [-]: LOADK     R3 K0        ; R3 := 1
 12 [-]: FORPREP   R1 26        ; R1 -= R3; PC := 26
 13 [-]: GETUPVAL  R5 U3        ; R5 := U3
 14 [-]: GETTABLE  R0 R5 R4     ; R0 := R5[R4]
 15 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 16 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["instance"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: TEST      R5 1         ; if R5 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R5 U2        ; R5 := U2
 21 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["scale"]
 22 [-]: GETUPVAL  R7 U4        ; R7 := U4
 23 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["PLANET_UNIT_MULTIPLIER"]
 24 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 25 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 26 [-]: FORLOOP   R1 13        ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
 27 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1742
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  2 [-]: LOADK     R2 K1        ; R2 := 1
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LEN       R3 R3        ; R3 := # R3
  5 [-]: LOADK     R4 K1        ; R4 := 1
  6 [-]: FORPREP   R2 37        ; R2 -= R4; PC := 37
  7 [-]: LOADK     R6 K1        ; R6 := 1
  8 [-]: GETUPVAL  R7 U0        ; R7 := U0
  9 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 10 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["regionLinks"]
 11 [-]: LEN       R7 R7        ; R7 := # R7
 12 [-]: LOADK     R8 K1        ; R8 := 1
 13 [-]: FORPREP   R6 36        ; R6 -= R8; PC := 36
 14 [-]: GETUPVAL  R10 U0       ; R10 := U0
 15 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 16 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["regionLinks"]
 17 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 18 [-]: EQ        0 R10 R1     ; if R10 ~= R1 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: LOADK     R10 K1       ; R10 := 1
 21 [-]: GETUPVAL  R11 U1       ; R11 := U1
 22 [-]: LEN       R11 R11      ; R11 := # R11
 23 [-]: LOADK     R12 K1       ; R12 := 1
 24 [-]: FORPREP   R10 35       ; R10 -= R12; PC := 35
 25 [-]: GETUPVAL  R14 U0       ; R14 := U0
 26 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
 27 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["instance"]
 28 [-]: GETUPVAL  R15 U1       ; R15 := U1
 29 [-]: GETTABLE  R15 R15 R13  ; R15 := R15[R13]
 30 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETUPVAL  R14 U1       ; R14 := U1
 33 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
 34 [-]: RETURN    R14 2        ; return R14
 35 [-]: FORLOOP   R10 25       ; R10 += R12; if R10 <= R11 then begin PC := 25; R13 := R10 end
 36 [-]: FORLOOP   R6 14        ; R6 += R8; if R6 <= R7 then begin PC := 14; R9 := R6 end
 37 [-]: FORLOOP   R2 7         ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
 38 [-]: LOADNIL   R14 R14      ; R14 := nil
 39 [-]: RETURN    R14 2        ; return R14
 40 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1759
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x994A1A7
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MIN_ZOOM"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MAX_ZOOM"]
  6 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x6374FD98
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCurVal"]
 10 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["minValue"]
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["maxValue"]
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0x3B43F25"]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: MOVE      R1 R2        ; R1 := R2
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETGLOBAL R3 K9        ; R3 := 0x93034B55
 19 [-]: LOADK     R4 K10       ; R4 := 1
 20 [-]: LOADK     R5 K11       ; R5 := 0.10000000149012
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 23 [-]: SETTABLE  R2 K8 R3     ; R2["mDragMultiplier"] := R3
 24 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1766
; #Upvalues:       21
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R5 K4        ; R5 := _G
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["StalkerMode"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 34
 14 [-]: JMP       34           ; PC := 34
 15 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x654F1092"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R5        ; R7 := R5
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5["0x722B1CB7"]
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x5EC7A3D2"]
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: MOVE      R2 R6        ; R2 := R6
 27 [-]: SELF      R6 R5 K9     ; R7 := R5; R6 := R5["0x30BDE7F"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: GETGLOBAL R7 K10       ; R7 := 0xCAA43ABB
 30 [-]: GETTABLE  R8 R6 K11    ; R8 := R6["mShip"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: MOVE      R3 R7        ; R3 := R7
 33 [-]: GETTABLE  R4 R6 K12    ; R4 := R6["mShipExterior"]
 34 [-]: LOADK     R7 K13       ; R7 := "Earth"
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: LOADK     R9 K14       ; R9 := 1
 37 [-]: GETUPVAL  R10 U0       ; R10 := U0
 38 [-]: LEN       R10 R10      ; R10 := # R10
 39 [-]: LOADK     R11 K14      ; R11 := 1
 40 [-]: FORPREP   R9 83        ; R9 -= R11; PC := 83
 41 [-]: GETUPVAL  R13 U0       ; R13 := U0
 42 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 43 [-]: GETGLOBAL R14 K3       ; R14 := 0x400E7765
 44 [-]: MOVE      R15 R13      ; R15 := R13
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: TEST      R14 1        ; if R14 then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: SELF      R14 R13 K15  ; R15 := R13; R14 := R13["0x80A80EEB"]
 49 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 50 [-]: GETGLOBAL R15 K16      ; R15 := Lotus_Game
 51 [-]: GETTABLE  R15 R15 K17  ; R15 := R15["RadialRegion_RCS_LOCKED"]
 52 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 83
 53 [-]: JMP       83           ; PC := 83
 54 [-]: GETUPVAL  R14 U1       ; R14 := U1
 55 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["Active"]
 56 [-]: TEST      R14 0        ; if not R14 then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R14 U1       ; R14 := U1
 59 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["Regions"]
 60 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 61 [-]: TEST      R14 0        ; if not R14 then PC := 83
 62 [-]: JMP       83           ; PC := 83
 63 [-]: GETGLOBAL R14 K20      ; R14 := 0xD1E7609B
 64 [-]: LOADK     R15 K21      ; R15 := "/"
 65 [-]: GETTABLE  R16 R13 K22  ; R16 := R13["name"]
 66 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 67 [-]: LEN       R15 R14      ; R15 := # R14
 68 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 69 [-]: EQ        1 R14 R2     ; if R14 == R2 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R8 R0        ; R8 := R0
 72 [-]: MOVE      R8 R1        ; R8 := R1
 73 [-]: TEST      R8 1         ; if R8 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: MOVE      R1 R13       ; R1 := R13
 78 [-]: GETUPVAL  R15 U2       ; R15 := U2
 79 [-]: SETTABLE  R15 K23 R12  ; R15["RegionIndex"] := R12
 80 [-]: TEST      R8 0         ; if not R8 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: JMP       84           ; PC := 84
 83 [-]: FORLOOP   R9 41        ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
 84 [-]: TEST      R8 1         ; if R8 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: MOVE      R2 R7        ; R2 := R7
 87 [-]: EQ        1 R1 K24     ; if R1 == nil then PC := 137
 88 [-]: JMP       137          ; PC := 137
 89 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 90 [-]: MOVE      R16 R3       ; R16 := R3
 91 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 92 [-]: TEST      R15 1        ; if R15 then PC := 137
 93 [-]: JMP       137          ; PC := 137
 94 [-]: GETUPVAL  R15 U1       ; R15 := U1
 95 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["Active"]
 96 [-]: TEST      R15 1        ; if R15 then PC := 137
 97 [-]: JMP       137          ; PC := 137
 98 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 99 [-]: GETUPVAL  R16 U2       ; R16 := U2
100 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["Deco"]
101 [-]: CALL      R15 2 2      ; R15 := R15(R16)
102 [-]: TEST      R15 0        ; if not R15 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R15 U2       ; R15 := U2
105 [-]: GETGLOBAL R16 K26      ; R16 := gBackgroundRegion
106 [-]: SELF      R16 R16 K27  ; R17 := R16; R16 := R16["0xBDD34CC6"]
107 [-]: GETGLOBAL R18 K28      ; R18 := lisetDecorationType
108 [-]: GETTABLE  R19 R1 K29   ; R19 := R1["instance"]
109 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0x6DA72501"]
110 [-]: CALL      R19 2 2      ; R19 := R19(R20)
111 [-]: GETGLOBAL R20 K31      ; R20 := ZERO_ROTATION
112 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
113 [-]: SETTABLE  R15 K25 R16  ; R15["Deco"] := R16
114 [-]: GETUPVAL  R15 U2       ; R15 := U2
115 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
116 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15["0x6A7E5F92"]
117 [-]: LOADK     R17 K33      ; R17 := 0.00069999997504056
118 [-]: CALL      R15 3 1      ; R15(R16,R17)
119 [-]: GETUPVAL  R15 U2       ; R15 := U2
120 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
121 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xE031E3AB"]
122 [-]: GETGLOBAL R17 K35      ; R17 := 0x7C282057
123 [-]: MOVE      R18 R3       ; R18 := R3
124 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
125 [-]: CALL      R15 0 1      ; R15(R16,...)
126 [-]: GETUPVAL  R15 U2       ; R15 := U2
127 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
128 [-]: SELF      R15 R15 K36  ; R16 := R15; R15 := R15["0xC2123CF5"]
129 [-]: GETTABLE  R17 R4 K37   ; R17 := R4["mSkinFlavourItem"]
130 [-]: GETTABLE  R18 R4 K38   ; R18 := R4["mColors"]
131 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
132 [-]: GETUPVAL  R15 U2       ; R15 := U2
133 [-]: GETTABLE  R16 R1 K29   ; R16 := R1["instance"]
134 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16["0x6DA72501"]
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: SETTABLE  R15 K39 R16  ; R15["AnchorPosition"] := R16
137 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
138 [-]: GETUPVAL  R16 U3       ; R16 := U3
139 [-]: CALL      R15 2 2      ; R15 := R15(R16)
140 [-]: TEST      R15 1        ; if R15 then PC := 173
141 [-]: JMP       173          ; PC := 173
142 [-]: GETUPVAL  R15 U3       ; R15 := U3
143 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15["0xEC183DDC"]
144 [-]: GETUPVAL  R17 U4       ; R17 := U4
145 [-]: GETGLOBAL R18 K41      ; R18 := 0x221C9700
146 [-]: LOADK     R19 K2       ; R19 := 0
147 [-]: LOADK     R20 K2       ; R20 := 0
148 [-]: LOADK     R21 K42      ; R21 := 20
149 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
150 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
151 [-]: CALL      R15 3 1      ; R15(R16,R17)
152 [-]: GETUPVAL  R15 U5       ; R15 := U5
153 [-]: GETUPVAL  R16 U4       ; R16 := U4
154 [-]: GETGLOBAL R17 K41      ; R17 := 0x221C9700
155 [-]: LOADK     R18 K2       ; R18 := 0
156 [-]: LOADK     R19 K2       ; R19 := 0
157 [-]: LOADK     R20 K44      ; R20 := 4
158 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
159 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
160 [-]: SETTABLE  R15 K43 R16  ; R15["Target"] := R16
161 [-]: GETUPVAL  R15 U5       ; R15 := U5
162 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["Prop"]
163 [-]: SELF      R15 R15 K46  ; R16 := R15; R15 := R15["0x5A7A6B1"]
164 [-]: LOADK     R17 K2       ; R17 := 0
165 [-]: CALL      R15 3 1      ; R15(R16,R17)
166 [-]: GETUPVAL  R15 U5       ; R15 := U5
167 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["Prop"]
168 [-]: SELF      R15 R15 K47  ; R16 := R15; R15 := R15["0xDB349344"]
169 [-]: LOADK     R17 K14      ; R17 := 1
170 [-]: CALL      R15 3 1      ; R15(R16,R17)
171 [-]: GETUPVAL  R15 U5       ; R15 := U5
172 [-]: SETTABLE  R15 K48 K49  ; R15["Region"] := -1
173 [-]: GETUPVAL  R15 U7       ; R15 := U7
174 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["0xF81722A2"]
175 [-]: GETUPVAL  R16 U8       ; R16 := U8
176 [-]: LOADK     R17 K14      ; R17 := 1
177 [-]: LOADK     R18 K51      ; R18 := 1.5
178 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
179 [-]: MOVE      R15 R6       ; R15 := R6
180 [-]: GETUPVAL  R15 U9       ; R15 := U9
181 [-]: GETTABLE  R15 R15 K52  ; R15 := R15["mCurrentScroll"]
182 [-]: GETTABLE  R15 R15 K53  ; R15 := R15["x"]
183 [-]: GETUPVAL  R16 U9       ; R16 := U9
184 [-]: GETTABLE  R16 R16 K52  ; R16 := R16["mCurrentScroll"]
185 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["y"]
186 [-]: GETUPVAL  R17 U10      ; R17 := U10
187 [-]: GETTABLE  R17 R17 K55  ; R17 := R17["STARTING_ZOOM"]
188 [-]: SUB       R17 R17 K56  ; R17 := R17 - 80
189 [-]: GETUPVAL  R18 U11      ; R18 := U11
190 [-]: SELF      R18 R18 K46  ; R19 := R18; R18 := R18["0x5A7A6B1"]
191 [-]: MOVE      R20 R17      ; R20 := R17
192 [-]: CALL      R18 3 1      ; R18(R19,R20)
193 [-]: LOADNIL   R18 R18      ; R18 := nil
194 [-]: GETGLOBAL R19 K3       ; R19 := 0x400E7765
195 [-]: GETGLOBAL R20 K4       ; R20 := _G
196 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["JunctionComplete"]
197 [-]: CALL      R19 2 2      ; R19 := R19(R20)
198 [-]: TEST      R19 1        ; if R19 then PC := 264
199 [-]: JMP       264          ; PC := 264
200 [-]: LOADNIL   R19 R19      ; R19 := nil
201 [-]: GETGLOBAL R20 K58      ; R20 := 0x63B09107
202 [-]: GETUPVAL  R21 U12      ; R21 := U12
203 [-]: CALL      R20 2 4      ; R20,R21,R22 := R20(R21)
204 [-]: JMP       225          ; PC := 225
205 [-]: GETTABLE  R25 R24 K59  ; R25 := R24["IsJunction"]
206 [-]: TEST      R25 0        ; if not R25 then PC := 225
207 [-]: JMP       225          ; PC := 225
208 [-]: GETTABLE  R25 R24 K60  ; R25 := R24["NodeA"]
209 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["name"]
210 [-]: GETGLOBAL R26 K4       ; R26 := _G
211 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["JunctionComplete"]
212 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["location"]
213 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 217
214 [-]: JMP       217          ; PC := 217
215 [-]: GETTABLE  R19 R24 K62  ; R19 := R24["NodeB"]
216 [-]: JMP       225          ; PC := 225
217 [-]: GETTABLE  R25 R24 K62  ; R25 := R24["NodeB"]
218 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["name"]
219 [-]: GETGLOBAL R26 K4       ; R26 := _G
220 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["JunctionComplete"]
221 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["location"]
222 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 225
223 [-]: JMP       225          ; PC := 225
224 [-]: GETTABLE  R19 R24 K60  ; R19 := R24["NodeA"]
225 [-]: TFORLOOP  R20 2        ; R23,R24 :=  R20(R21,R22); if R23 ~= nil then begin PC = 205; R22 := R23 end
226 [-]: JMP       205          ; PC := 205
227 [-]: GETGLOBAL R25 K3       ; R25 := 0x400E7765
228 [-]: MOVE      R26 R19      ; R26 := R19
229 [-]: CALL      R25 2 2      ; R25 := R25(R26)
230 [-]: TEST      R25 1        ; if R25 then PC := 262
231 [-]: JMP       262          ; PC := 262
232 [-]: GETGLOBAL R25 K58      ; R25 := 0x63B09107
233 [-]: GETUPVAL  R26 U12      ; R26 := U12
234 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
235 [-]: JMP       260          ; PC := 260
236 [-]: GETTABLE  R30 R29 K63  ; R30 := R29["IsShortcut"]
237 [-]: TEST      R30 0        ; if not R30 then PC := 260
238 [-]: JMP       260          ; PC := 260
239 [-]: GETTABLE  R30 R29 K60  ; R30 := R29["NodeA"]
240 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 250
241 [-]: JMP       250          ; PC := 250
242 [-]: GETUPVAL  R30 U0       ; R30 := U0
243 [-]: GETTABLE  R31 R29 K62  ; R31 := R29["NodeB"]
244 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["radialSector"]
245 [-]: GETTABLE  R31 R31 K65  ; R31 := R31["region"]
246 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
247 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
248 [-]: JMP       262          ; PC := 262
249 [-]: JMP       260          ; PC := 260
250 [-]: GETTABLE  R30 R29 K62  ; R30 := R29["NodeB"]
251 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 260
252 [-]: JMP       260          ; PC := 260
253 [-]: GETUPVAL  R30 U0       ; R30 := U0
254 [-]: GETTABLE  R31 R29 K60  ; R31 := R29["NodeA"]
255 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["radialSector"]
256 [-]: GETTABLE  R31 R31 K65  ; R31 := R31["region"]
257 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
258 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
259 [-]: JMP       262          ; PC := 262
260 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 236; R27 := R28 end
261 [-]: JMP       236          ; PC := 236
262 [-]: GETGLOBAL R30 K4       ; R30 := _G
263 [-]: SETTABLE  R30 K57 K24  ; R30["JunctionComplete"] := nil
264 [-]: EQ        1 R1 K24     ; if R1 == nil then PC := 312
265 [-]: JMP       312          ; PC := 312
266 [-]: GETGLOBAL R30 K66      ; R30 := _T
267 [-]: GETTABLE  R30 R30 K67  ; R30 := R30["WareframeChallenge"]
268 [-]: TEST      R30 1        ; if R30 then PC := 312
269 [-]: JMP       312          ; PC := 312
270 [-]: GETUPVAL  R30 U13      ; R30 := U13
271 [-]: MOVE      R31 R1       ; R31 := R1
272 [-]: GETTABLE  R32 R1 K68   ; R32 := R1["zoomedFraming"]
273 [-]: CALL      R30 3 4      ; R30,R31,R32 := R30(R31,R32)
274 [-]: CLOSURE   R33 0        ; R33 := closure(Function #50.1)
275 [-]: GETUPVAL  R0 U11       ; R0 := U11
276 [-]: MOVE      R0 R17       ; R0 := R17
277 [-]: MOVE      R0 R32       ; R0 := R32
278 [-]: GETUPVAL  R0 U9        ; R0 := U9
279 [-]: MOVE      R0 R15       ; R0 := R15
280 [-]: MOVE      R0 R30       ; R0 := R30
281 [-]: MOVE      R0 R16       ; R0 := R16
282 [-]: MOVE      R0 R31       ; R0 := R31
283 [-]: GETUPVAL  R34 U14      ; R34 := U14
284 [-]: SELF      R34 R34 K69  ; R35 := R34; R34 := R34["0x61494587"]
285 [-]: LOADK     R36 K70      ; R36 := 0.55000001192093
286 [-]: CLOSURE   R37 1        ; R37 := closure(Function #50.2)
287 [-]: GETUPVAL  R0 U15       ; R0 := U15
288 [-]: MOVE      R0 R1        ; R0 := R1
289 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
290 [-]: GETGLOBAL R34 K71      ; R34 := 0x52E17A90
291 [-]: GETGLOBAL R35 K72      ; R35 := mMovie
292 [-]: LOADK     R36 K73      ; R36 := "_root"
293 [-]: GETGLOBAL R37 K74      ; R37 := UISys
294 [-]: GETTABLE  R37 R37 K75  ; R37 := R37["FlashInstance_LINEAR"]
295 [-]: NEWTABLE  R38 1 0      ; R38 := {}
296 [-]: MOVE      R39 R33      ; R39 := R33
297 [-]: SETLIST   R38 1 1      ; R38[(1-1)*FPF+i] := R(38+i), 1 <= i <= 1
298 [-]: NEWTABLE  R39 1 0      ; R39 := {}
299 [-]: LOADK     R40 K14      ; R40 := 1
300 [-]: SETLIST   R39 1 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
301 [-]: LOADK     R40 K76      ; R40 := 0.75
302 [-]: LOADK     R41 K77      ; R41 := 0.10000000149012
303 [-]: CLOSURE   R42 2        ; R42 := closure(Function #50.3)
304 [-]: MOVE      R0 R18       ; R0 := R18
305 [-]: GETUPVAL  R0 U16       ; R0 := U16
306 [-]: GETUPVAL  R0 U17       ; R0 := U17
307 [-]: GETUPVAL  R0 U18       ; R0 := U18
308 [-]: GETUPVAL  R0 U19       ; R0 := U19
309 [-]: CALL      R34 9 1      ; R34(R35,R36,R37,R38,R39,R40,R41,R42)
310 [-]: CLOSE     R30          ; SAVE R30,...
311 [-]: JMP       335          ; PC := 335
312 [-]: GETGLOBAL R30 K71      ; R30 := 0x52E17A90
313 [-]: GETGLOBAL R31 K72      ; R31 := mMovie
314 [-]: LOADK     R32 K73      ; R32 := "_root"
315 [-]: GETGLOBAL R33 K74      ; R33 := UISys
316 [-]: GETTABLE  R33 R33 K75  ; R33 := R33["FlashInstance_LINEAR"]
317 [-]: NEWTABLE  R34 1 0      ; R34 := {}
318 [-]: CLOSURE   R35 3        ; R35 := closure(Function #50.4)
319 [-]: GETUPVAL  R0 U11       ; R0 := U11
320 [-]: MOVE      R0 R17       ; R0 := R17
321 [-]: GETUPVAL  R0 U10       ; R0 := U10
322 [-]: SETLIST   R34 1 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
323 [-]: NEWTABLE  R35 1 0      ; R35 := {}
324 [-]: LOADK     R36 K14      ; R36 := 1
325 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
326 [-]: LOADK     R36 K78      ; R36 := 0.64999997615814
327 [-]: LOADK     R37 K2       ; R37 := 0
328 [-]: CLOSURE   R38 4        ; R38 := closure(Function #50.5)
329 [-]: GETUPVAL  R0 U17       ; R0 := U17
330 [-]: GETUPVAL  R0 U18       ; R0 := U18
331 [-]: GETUPVAL  R0 U19       ; R0 := U19
332 [-]: GETUPVAL  R0 U14       ; R0 := U14
333 [-]: GETUPVAL  R0 U20       ; R0 := U20
334 [-]: CALL      R30 9 1      ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
335 [-]: RETURN    R0 1         ; return 


; Function #50.1:
;
; Name:            
; Defined at line: 1861
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  8 [-]: CALL      R1 0 1       ; R1(R2,...)
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x9E1B8940
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x9E1B8940
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x9E1B8940
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x9E1B8940
 13 [-]: GETGLOBAL R5 K2        ; R5 := 0x9E1B8940
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 16 [-]: CALL      R4 0 0       ; R4,... := R4(R5,...)
 17 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 18 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
 19 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 22 [-]: LOADK     R4 K4        ; R4 := "x"
 23 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETUPVAL  R7 U5        ; R7 := U5
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 28 [-]: CALL      R2 0 1       ; R2(R3,...)
 29 [-]: GETUPVAL  R2 U3        ; R2 := U3
 30 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 31 [-]: LOADK     R4 K5        ; R4 := "y"
 32 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 33 [-]: GETUPVAL  R6 U6        ; R6 := U6
 34 [-]: GETUPVAL  R7 U7        ; R7 := U7
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 37 [-]: CALL      R2 0 1       ; R2(R3,...)
 38 [-]: RETURN    R0 1         ; return 


; Function #50.2:
;
; Name:            
; Defined at line: 1868
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #50.3:
;
; Name:            
; Defined at line: 1870
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R2        ; R0 := R2
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 1       ; R0()
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: CALL      R0 1 1       ; R0()
 16 [-]: RETURN    R0 1         ; return 


; Function #50.4:
;
; Name:            
; Defined at line: 1880
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["STARTING_ZOOM"]
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  9 [-]: CALL      R1 0 1       ; R1(R2,...)
 10 [-]: RETURN    R0 1         ; return 


; Function #50.5:
;
; Name:            
; Defined at line: 1881
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: GETUPVAL  R1 U3        ; R1 := U3
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x61494587"]
 11 [-]: LOADK     R3 K2        ; R3 := 0.050000000745058
 12 [-]: CLOSURE   R4 0         ; R4 := closure(Function #50.5.1)
 13 [-]: GETUPVAL  R0 U4        ; R0 := U4
 14 [-]: MOVE      R0 R0        ; R0 := R0
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #50.5.1:
;
; Name:            
; Defined at line: 1888
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 26        ; R0 -= R2; PC := 26
  6 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x3688C0F4"]
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["pos"]
 12 [-]: MOVE      R8 R1        ; R8 := R1
 13 [-]: MOVE      R9 R0        ; R9 := R0
 14 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 15 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x4717530F"]
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 19 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["memberIndex"]
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["x"]
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["y"]
 24 [-]: SUB       R8 R8 K8     ; R8 := R8 - 10
 25 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 26 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 27 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1898
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["radialSector"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["region"]
  3 [-]: ADD       R1 R1 K2     ; R1 := R1 + 1
  4 [-]: EQ        1 R1 K3      ; if R1 == 17 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: MOVE      R2 R1        ; R2 := R1
  8 [-]: EQ        1 R1 K4      ; if R1 == 15 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: EQ        1 R1 K5      ; if R1 == 14 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: TEST      R2 1         ; if R2 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: TEST      R3 1         ; if R3 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: TEST      R4 0         ; if not R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 26 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["instance"]
 27 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xAC8F6523"]
 28 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["position"]
 29 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 30 [-]: LOADK     R6 K9        ; R6 := 0.0049999998882413
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 R1     ; R7 := R7[R1]
 33 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 34 [-]: LT        1 R5 R7      ; if R5 < R7 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R7 R0        ; R7 := R0
 37 [-]: MOVE      R7 R1        ; R7 := R1
 38 [-]: RETURN    R7 2         ; return R7
 39 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1911
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["nodeType"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["NT_PVP"]
  4 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["locTag"]
  9 [-]: GETGLOBAL R2 K4        ; R2 := EMPTY_SYMBOL
 10 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R1 R0        ; R1 := R0
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x9FAED6BC
 15 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["name"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K7        ; R2 := string
 18 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xDE44F664"]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K9        ; R4 := "Dojo"
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: EQ        0 R2 K10     ; if R2 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: MOVE      R2 R1        ; R2 := R1
 26 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["missionTag"]
 27 [-]: LOADNIL   R4 R4        ; R4 := nil
 28 [-]: GETUPVAL  R5 U0        ; R5 := U0
 29 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Active"]
 30 [-]: TEST      R5 0         ; if not R5 then PC := 90
 31 [-]: JMP       90           ; PC := 90
 32 [-]: GETGLOBAL R5 K13       ; R5 := gMatchingService
 33 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5["0xA99F3BEF"]
 34 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 35 [-]: TEST      R5 1         ; if R5 then PC := 72
 36 [-]: JMP       72           ; PC := 72
 37 [-]: GETGLOBAL R5 K15       ; R5 := 0x400E7765
 38 [-]: GETGLOBAL R6 K13       ; R6 := gMatchingService
 39 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6["0xD5E03646"]
 40 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 41 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 42 [-]: TEST      R5 0         ; if not R5 then PC := 72
 43 [-]: JMP       72           ; PC := 72
 44 [-]: GETGLOBAL R5 K17       ; R5 := gGameRules
 45 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x8B598ED4"]
 46 [-]: GETGLOBAL R7 K19       ; R7 := gLotusGameRulesType
 47 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 48 [-]: TEST      R5 0         ; if not R5 then PC := 72
 49 [-]: JMP       72           ; PC := 72
 50 [-]: GETGLOBAL R5 K15       ; R5 := 0x400E7765
 51 [-]: GETGLOBAL R6 K17       ; R6 := gGameRules
 52 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0xB8637349"]
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["levelKeyName"]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: TEST      R5 1         ; if R5 then PC := 70
 57 [-]: JMP       70           ; PC := 70
 58 [-]: GETGLOBAL R5 K22       ; R5 := 0xEC274B1A
 59 [-]: GETGLOBAL R6 K17       ; R6 := gGameRules
 60 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0xB8637349"]
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["levelKeyName"]
 63 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6["0x1B252E3C"]
 64 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 65 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 66 [-]: GETUPVAL  R6 U1        ; R6 := U1
 67 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["SCENARIO_EVENT_SPACE_TAG"]
 68 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: MOVE      R5 R0        ; R5 := R0
 71 [-]: MOVE      R5 R1        ; R5 := R1
 72 [-]: TEST      R5 0         ; if not R5 then PC := 90
 73 [-]: JMP       90           ; PC := 90
 74 [-]: GETUPVAL  R6 U2        ; R6 := U2
 75 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["SQUAD_LINK_EVENT"]
 76 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 88
 77 [-]: JMP       88           ; PC := 88
 78 [-]: GETGLOBAL R6 K26       ; R6 := _G
 79 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
 80 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
 81 [-]: TEST      R6 1         ; if R6 then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: GETUPVAL  R6 U3        ; R6 := U3
 84 [-]: TEST      R6 0         ; if not R6 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: MOVE      R4 R1        ; R4 := R1
 87 [-]: JMP       90           ; PC := 90
 88 [-]: MOVE      R6 R0        ; R6 := R0
 89 [-]: RETURN    R6 2         ; return R6
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Active"]
 92 [-]: TEST      R6 1         ; if R6 then PC := 116
 93 [-]: JMP       116          ; PC := 116
 94 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mission"]
 95 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["missionType"]
 96 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 97 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["MT_RAILJACK"]
 98 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 116
 99 [-]: JMP       116          ; PC := 116
100 [-]: GETUPVAL  R6 U2        ; R6 := U2
101 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["SQUAD_LINK_EVENT"]
102 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETGLOBAL R6 K26       ; R6 := _G
105 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
106 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
107 [-]: TEST      R6 1         ; if R6 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETUPVAL  R6 U3        ; R6 := U3
110 [-]: TEST      R6 0         ; if not R6 then PC := 114
111 [-]: JMP       114          ; PC := 114
112 [-]: MOVE      R4 R1        ; R4 := R1
113 [-]: JMP       116          ; PC := 116
114 [-]: MOVE      R6 R0        ; R6 := R0
115 [-]: RETURN    R6 2         ; return R6
116 [-]: GETUPVAL  R6 U0        ; R6 := U0
117 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Active"]
118 [-]: TEST      R6 0         ; if not R6 then PC := 137
119 [-]: JMP       137          ; PC := 137
120 [-]: GETGLOBAL R6 K17       ; R6 := gGameRules
121 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6["0x8B598ED4"]
122 [-]: GETGLOBAL R8 K31       ; R8 := gLotusHubGameRulesType
123 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
124 [-]: TEST      R6 0         ; if not R6 then PC := 137
125 [-]: JMP       137          ; PC := 137
126 [-]: GETGLOBAL R6 K7        ; R6 := string
127 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0xDE44F664"]
128 [-]: GETGLOBAL R7 K5        ; R7 := 0x9FAED6BC
129 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["name"]
130 [-]: CALL      R7 2 2       ; R7 := R7(R8)
131 [-]: LOADK     R8 K9        ; R8 := "Dojo"
132 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
133 [-]: EQ        1 R6 K10     ; if R6 == nil then PC := 137
134 [-]: JMP       137          ; PC := 137
135 [-]: MOVE      R6 R0        ; R6 := R0
136 [-]: RETURN    R6 2         ; return R6
137 [-]: GETUPVAL  R6 U0        ; R6 := U0
138 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Active"]
139 [-]: TEST      R6 0         ; if not R6 then PC := 167
140 [-]: JMP       167          ; PC := 167
141 [-]: TEST      R2 1         ; if R2 then PC := 167
142 [-]: JMP       167          ; PC := 167
143 [-]: TEST      R4 1         ; if R4 then PC := 167
144 [-]: JMP       167          ; PC := 167
145 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mission"]
146 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["missionType"]
147 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
148 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["MT_RAILJACK"]
149 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 165
150 [-]: JMP       165          ; PC := 165
151 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["nodeType"]
152 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
153 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["NT_SHORTCUT"]
154 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 165
155 [-]: JMP       165          ; PC := 165
156 [-]: GETUPVAL  R6 U3        ; R6 := U3
157 [-]: TEST      R6 1         ; if R6 then PC := 167
158 [-]: JMP       167          ; PC := 167
159 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mission"]
160 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["faction"]
161 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
162 [-]: GETTABLE  R7 R7 K34    ; R7 := R7["FC_CORPUS"]
163 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: MOVE      R6 R0        ; R6 := R0
166 [-]: RETURN    R6 2         ; return R6
167 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["nodeType"]
168 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
169 [-]: GETTABLE  R7 R7 K35    ; R7 := R7["NT_EVENT"]
170 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 191
171 [-]: JMP       191          ; PC := 191
172 [-]: GETGLOBAL R6 K26       ; R6 := _G
173 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
174 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
175 [-]: TEST      R6 1         ; if R6 then PC := 191
176 [-]: JMP       191          ; PC := 191
177 [-]: GETGLOBAL R6 K36       ; R6 := _T
178 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["WorldStateDerelictNodes"]
179 [-]: TEST      R6 0         ; if not R6 then PC := 189
180 [-]: JMP       189          ; PC := 189
181 [-]: GETGLOBAL R6 K36       ; R6 := _T
182 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["WorldStateDerelictNodes"]
183 [-]: GETGLOBAL R7 K5        ; R7 := 0x9FAED6BC
184 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["name"]
185 [-]: CALL      R7 2 2       ; R7 := R7(R8)
186 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
187 [-]: TEST      R6 1         ; if R6 then PC := 191
188 [-]: JMP       191          ; PC := 191
189 [-]: MOVE      R6 R0        ; R6 := R0
190 [-]: RETURN    R6 2         ; return R6
191 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["region"]
192 [-]: ADD       R6 R6 K39    ; R6 := R6 + 1
193 [-]: GETGLOBAL R7 K36       ; R7 := _T
194 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["REGION_ID_MOON"]
195 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 207
196 [-]: JMP       207          ; PC := 207
197 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["nodeType"]
198 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
199 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["NT_SHORTCUT"]
200 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 215
201 [-]: JMP       215          ; PC := 215
202 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["name"]
203 [-]: GETUPVAL  R7 U2        ; R7 := U2
204 [-]: GETTABLE  R7 R7 K41    ; R7 := R7["MOON_SHORTCUT_TAG"]
205 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETUPVAL  R6 U4        ; R6 := U4
208 [-]: GETGLOBAL R7 K36       ; R7 := _T
209 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["REGION_ID_MOON"]
210 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
211 [-]: EQ        0 R6 K42     ; if R6 ~= "0x1" then PC := 215
212 [-]: JMP       215          ; PC := 215
213 [-]: MOVE      R6 R0        ; R6 := R0
214 [-]: RETURN    R6 2         ; return R6
215 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["region"]
216 [-]: ADD       R6 R6 K39    ; R6 := R6 + 1
217 [-]: GETGLOBAL R7 K36       ; R7 := _T
218 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["REGION_ID_FORTRESS"]
219 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 229
220 [-]: JMP       229          ; PC := 229
221 [-]: GETUPVAL  R6 U4        ; R6 := U4
222 [-]: GETGLOBAL R7 K36       ; R7 := _T
223 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["REGION_ID_FORTRESS"]
224 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
225 [-]: EQ        0 R6 K42     ; if R6 ~= "0x1" then PC := 229
226 [-]: JMP       229          ; PC := 229
227 [-]: MOVE      R6 R0        ; R6 := R0
228 [-]: RETURN    R6 2         ; return R6
229 [-]: GETGLOBAL R6 K26       ; R6 := _G
230 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["StarChartHiddenEventNode"]
231 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 235
232 [-]: JMP       235          ; PC := 235
233 [-]: MOVE      R6 R0        ; R6 := R0
234 [-]: RETURN    R6 2         ; return R6
235 [-]: GETUPVAL  R6 U2        ; R6 := U2
236 [-]: GETTABLE  R6 R6 K45    ; R6 := R6["TENNOCON_RELAY"]
237 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 257
238 [-]: JMP       257          ; PC := 257
239 [-]: GETGLOBAL R6 K26       ; R6 := _G
240 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
241 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
242 [-]: TEST      R6 0         ; if not R6 then PC := 255
243 [-]: JMP       255          ; PC := 255
244 [-]: GETGLOBAL R6 K15       ; R6 := 0x400E7765
245 [-]: GETGLOBAL R7 K46       ; R7 := gGameData
246 [-]: CALL      R6 2 2       ; R6 := R6(R7)
247 [-]: TEST      R6 1         ; if R6 then PC := 257
248 [-]: JMP       257          ; PC := 257
249 [-]: GETUPVAL  R6 U5        ; R6 := U5
250 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["0x8D79D162"]
251 [-]: GETGLOBAL R7 K46       ; R7 := gGameData
252 [-]: CALL      R6 2 2       ; R6 := R6(R7)
253 [-]: TEST      R6 1         ; if R6 then PC := 257
254 [-]: JMP       257          ; PC := 257
255 [-]: MOVE      R6 R0        ; R6 := R0
256 [-]: RETURN    R6 2         ; return R6
257 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["region"]
258 [-]: ADD       R6 R6 K39    ; R6 := R6 + 1
259 [-]: GETGLOBAL R7 K36       ; R7 := _T
260 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["REGION_ID_DARK_SECTOR"]
261 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 265
262 [-]: JMP       265          ; PC := 265
263 [-]: MOVE      R6 R0        ; R6 := R0
264 [-]: RETURN    R6 2         ; return R6
265 [-]: GETUPVAL  R6 U3        ; R6 := U3
266 [-]: TEST      R6 1         ; if R6 then PC := 279
267 [-]: JMP       279          ; PC := 279
268 [-]: GETUPVAL  R6 U2        ; R6 := U2
269 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["SQUAD_LINK_EVENT"]
270 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 279
271 [-]: JMP       279          ; PC := 279
272 [-]: GETGLOBAL R6 K26       ; R6 := _G
273 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
274 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
275 [-]: TEST      R6 1         ; if R6 then PC := 279
276 [-]: JMP       279          ; PC := 279
277 [-]: MOVE      R6 R0        ; R6 := R0
278 [-]: RETURN    R6 2         ; return R6
279 [-]: MOVE      R6 R1        ; R6 := R1
280 [-]: RETURN    R6 2         ; return R6
281 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1990
; #Upvalues:       14
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  4 [-]: MOVE      R1 R2        ; R1 := R2
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 13 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 14 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 108
 17 [-]: JMP       108          ; PC := 108
 18 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 19 [-]: GETGLOBAL R4 K4        ; R4 := gGameData
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 108
 22 [-]: JMP       108          ; PC := 108
 23 [-]: GETGLOBAL R3 K4        ; R3 := gGameData
 24 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x52C8784B"]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 29 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 30 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 108
 31 [-]: JMP       108          ; PC := 108
 32 [-]: GETUPVAL  R3 U1        ; R3 := U1
 33 [-]: TEST      R3 1         ; if R3 then PC := 108
 34 [-]: JMP       108          ; PC := 108
 35 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["CETUS_NODE_TAG"]
 38 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETUPVAL  R3 U2        ; R3 := U2
 41 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
 42 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 43 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: MOVE      R2 R3        ; R2 := R3
 46 [-]: JMP       108          ; PC := 108
 47 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 48 [-]: GETUPVAL  R4 U2        ; R4 := U2
 49 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["PLAINS_NODE_TAG"]
 50 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 51 [-]: JMP       64           ; PC := 64
 52 [-]: GETGLOBAL R3 K11       ; R3 := gPlayerProfileMgr
 53 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0x21EF7B1A"]
 54 [-]: LOADK     R5 K13       ; R5 := 0
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x654F1092"]
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x8572D26E"]
 59 [-]: GETUPVAL  R5 U2        ; R5 := U2
 60 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["PLAINS_NODE_TAG"]
 61 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 62 [-]: MOVE      R2 R3        ; R2 := R3
 63 [-]: JMP       108          ; PC := 108
 64 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["ORB_VALLIS_NODE_TAG"]
 67 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 75
 68 [-]: JMP       75           ; PC := 75
 69 [-]: GETUPVAL  R3 U2        ; R3 := U2
 70 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
 71 [-]: GETUPVAL  R4 U3        ; R4 := U3
 72 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 73 [-]: MOVE      R2 R3        ; R2 := R3
 74 [-]: JMP       108          ; PC := 108
 75 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mission"]
 76 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["missionType"]
 77 [-]: GETGLOBAL R4 K18       ; R4 := Lotus_Game
 78 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["MT_ARTIFACT"]
 79 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mission"]
 82 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["missionType"]
 83 [-]: GETGLOBAL R4 K18       ; R4 := Lotus_Game
 84 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["MT_ASSASSINATION"]
 85 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 100
 86 [-]: JMP       100          ; PC := 100
 87 [-]: GETUPVAL  R3 U2        ; R3 := U2
 88 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
 89 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 90 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 1         ; if R3 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETTABLE  R3 R0 K21    ; R3 := R0["unlocked"]
 95 [-]: MOVE      R2 R3        ; R2 := R3
 96 [-]: JMP       108          ; PC := 108
 97 [-]: MOVE      R2 R0        ; R2 := R0
 98 [-]: MOVE      R2 R1        ; R2 := R1
 99 [-]: JMP       108          ; PC := 108
100 [-]: GETUPVAL  R3 U2        ; R3 := U2
101 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
102 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
103 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
104 [-]: CALL      R3 2 2       ; R3 := R3(R4)
105 [-]: TEST      R3 1         ; if R3 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: RETURN    R0 1         ; return 
108 [-]: MOVE      R3 R1        ; R3 := R1
109 [-]: GETTABLE  R4 R0 K22    ; R4 := R0["missionTag"]
110 [-]: GETUPVAL  R5 U4        ; R5 := U4
111 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["DESTROYED_NODE_TAG"]
112 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: GETGLOBAL R5 K25       ; R5 := destroyedNodeDeco
115 [-]: SETTABLE  R0 K24 R5    ; R0["deco"] := R5
116 [-]: MOVE      R3 R0        ; R3 := R0
117 [-]: LOADNIL   R5 R5        ; R5 := nil
118 [-]: GETUPVAL  R6 U4        ; R6 := U4
119 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["RECONSTRUCTION_NODE_TAG"]
120 [-]: EQ        1 R4 R6      ; if R4 == R6 then PC := 126
121 [-]: JMP       126          ; PC := 126
122 [-]: GETUPVAL  R6 U4        ; R6 := U4
123 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["UNDER_CONSTRUCTION_NODE_TAG"]
124 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 197
125 [-]: JMP       197          ; PC := 197
126 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["name"]
127 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6["0x5EC7A3D2"]
128 [-]: CALL      R6 2 2       ; R6 := R6(R7)
129 [-]: GETGLOBAL R7 K29       ; R7 := string
130 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["0xDE44F664"]
131 [-]: MOVE      R8 R6        ; R8 := R6
132 [-]: LOADK     R9 K31       ; R9 := "Rebuild"
133 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
134 [-]: MOVE      R8 R6        ; R8 := R6
135 [-]: TEST      R7 0         ; if not R7 then PC := 144
136 [-]: JMP       144          ; PC := 144
137 [-]: GETGLOBAL R9 K29       ; R9 := string
138 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0x7B782033"]
139 [-]: MOVE      R10 R6       ; R10 := R6
140 [-]: LOADK     R11 K33      ; R11 := 1
141 [-]: SUB       R12 R7 K33   ; R12 := R7 - 1
142 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
143 [-]: MOVE      R8 R9        ; R8 := R9
144 [-]: GETUPVAL  R9 U5        ; R9 := U5
145 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
146 [-]: MOVE      R10 R0       ; R10 := R0
147 [-]: LOADNIL   R11 R11      ; R11 := nil
148 [-]: TEST      R9 0         ; if not R9 then PC := 166
149 [-]: JMP       166          ; PC := 166
150 [-]: GETTABLE  R11 R9 K34   ; R11 := R9["info"]
151 [-]: TEST      R11 0        ; if not R11 then PC := 166
152 [-]: JMP       166          ; PC := 166
153 [-]: GETTABLE  R12 R11 K35  ; R12 := R11["mActivation"]
154 [-]: SELF      R12 R12 K36  ; R13 := R12; R12 := R12["0x315E860F"]
155 [-]: CALL      R12 2 2      ; R12 := R12(R13)
156 [-]: TEST      R12 0        ; if not R12 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: GETGLOBAL R12 K37      ; R12 := Engine
159 [-]: GETTABLE  R12 R12 K38  ; R12 := R12["0xD09D7910"]
160 [-]: GETTABLE  R13 R9 K34   ; R13 := R9["info"]
161 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["mActivation"]
162 [-]: CALL      R12 2 2      ; R12 := R12(R13)
163 [-]: LE        0 R12 K13    ; if R12 > 0 then PC := 166
164 [-]: JMP       166          ; PC := 166
165 [-]: MOVE      R10 R1       ; R10 := R1
166 [-]: TEST      R10 0        ; if not R10 then PC := 169
167 [-]: JMP       169          ; PC := 169
168 [-]: GETTABLE  R5 R9 K39    ; R5 := R9["progress"]
169 [-]: TEST      R7 0         ; if not R7 then PC := 177
170 [-]: JMP       177          ; PC := 177
171 [-]: TEST      R10 0        ; if not R10 then PC := 175
172 [-]: JMP       175          ; PC := 175
173 [-]: EQ        1 R5 K13     ; if R5 == 0 then PC := 197
174 [-]: JMP       197          ; PC := 197
175 [-]: RETURN    R0 1         ; return 
176 [-]: JMP       197          ; PC := 197
177 [-]: TEST      R10 1        ; if R10 then PC := 187
178 [-]: JMP       187          ; PC := 187
179 [-]: MOVE      R12 R1       ; R12 := R1
180 [-]: TEST      R12 1        ; if R12 then PC := 197
181 [-]: JMP       197          ; PC := 197
182 [-]: MOVE      R3 R0        ; R3 := R0
183 [-]: GETGLOBAL R13 K25      ; R13 := destroyedNodeDeco
184 [-]: SETTABLE  R0 K24 R13   ; R0["deco"] := R13
185 [-]: JMP       197          ; PC := 197
186 [-]: JMP       197          ; PC := 197
187 [-]: EQ        0 R5 K13     ; if R5 ~= 0 then PC := 191
188 [-]: JMP       191          ; PC := 191
189 [-]: RETURN    R0 1         ; return 
190 [-]: JMP       197          ; PC := 197
191 [-]: EQ        0 R5 K33     ; if R5 ~= 1 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETGLOBAL R13 K18      ; R13 := Lotus_Game
194 [-]: GETTABLE  R13 R13 K41  ; R13 := R13["NT_MISSION"]
195 [-]: SETTABLE  R0 K40 R13   ; R0["nodeType"] := R13
196 [-]: JMP       197          ; PC := 197
197 [-]: GETTABLE  R13 R0 K42   ; R13 := R0["pos"]
198 [-]: LOADNIL   R14 R14      ; R14 := nil
199 [-]: GETGLOBAL R15 K43      ; R15 := 0x9FAED6BC
200 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["name"]
201 [-]: CALL      R15 2 2      ; R15 := R15(R16)
202 [-]: GETGLOBAL R16 K44      ; R16 := _G
203 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["CachedGoalInfo"]
204 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
205 [-]: TEST      R16 0        ; if not R16 then PC := 329
206 [-]: JMP       329          ; PC := 329
207 [-]: GETGLOBAL R16 K44      ; R16 := _G
208 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["CachedGoalInfo"]
209 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
210 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["mFomorian"]
211 [-]: TEST      R16 0        ; if not R16 then PC := 272
212 [-]: JMP       272          ; PC := 272
213 [-]: GETUPVAL  R16 U6       ; R16 := U6
214 [-]: SELF      R16 R16 K47  ; R17 := R16; R16 := R16["0xDF213CE1"]
215 [-]: GETGLOBAL R18 K44      ; R18 := _G
216 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["CachedGoalInfo"]
217 [-]: GETTABLE  R18 R18 R15  ; R18 := R18[R15]
218 [-]: GETTABLE  R18 R18 K48  ; R18 := R18["mVictimNode"]
219 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
220 [-]: GETTABLE  R17 R16 K42  ; R17 := R16["pos"]
221 [-]: SUB       R17 R17 R13  ; R17 := R17 - R13
222 [-]: MUL       R18 R17 K49  ; R18 := R17 * 0.80000001192093
223 [-]: GETGLOBAL R19 K44      ; R19 := _G
224 [-]: GETTABLE  R19 R19 K45  ; R19 := R19["CachedGoalInfo"]
225 [-]: GETTABLE  R19 R19 R15  ; R19 := R19[R15]
226 [-]: GETTABLE  R19 R19 K35  ; R19 := R19["mActivation"]
227 [-]: SELF      R19 R19 K50  ; R20 := R19; R19 := R19["0x6F4BAEB9"]
228 [-]: GETGLOBAL R21 K44      ; R21 := _G
229 [-]: GETTABLE  R21 R21 K45  ; R21 := R21["CachedGoalInfo"]
230 [-]: GETTABLE  R21 R21 R15  ; R21 := R21[R15]
231 [-]: GETTABLE  R21 R21 K51  ; R21 := R21["mExpiry"]
232 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
233 [-]: GETGLOBAL R20 K52      ; R20 := 0x6374FD98
234 [-]: GETGLOBAL R21 K37      ; R21 := Engine
235 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["0xD09D7910"]
236 [-]: GETGLOBAL R22 K44      ; R22 := _G
237 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["CachedGoalInfo"]
238 [-]: GETTABLE  R22 R22 R15  ; R22 := R22[R15]
239 [-]: GETTABLE  R22 R22 K51  ; R22 := R22["mExpiry"]
240 [-]: CALL      R21 2 2      ; R21 := R21(R22)
241 [-]: LOADK     R22 K13      ; R22 := 0
242 [-]: MOVE      R23 R19      ; R23 := R19
243 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
244 [-]: DIV       R21 R20 R19  ; R21 := R20 / R19
245 [-]: SUB       R21 K33 R21  ; R21 := 1 - R21
246 [-]: MUL       R22 R18 R21  ; R22 := R18 * R21
247 [-]: ADD       R13 R13 R22  ; R13 := R13 + R22
248 [-]: GETGLOBAL R23 K44      ; R23 := _G
249 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["CachedGoalInfo"]
250 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
251 [-]: GETTABLE  R23 R23 K53  ; R23 := R23["mFaction"]
252 [-]: GETGLOBAL R24 K18      ; R24 := Lotus_Game
253 [-]: GETTABLE  R24 R24 K54  ; R24 := R24["FC_CORPUS"]
254 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 264
255 [-]: JMP       264          ; PC := 264
256 [-]: GETGLOBAL R23 K55      ; R23 := armadaDeco
257 [-]: SETTABLE  R0 K24 R23   ; R0["deco"] := R23
258 [-]: GETGLOBAL R23 K57      ; R23 := 0x1E4F6281
259 [-]: LOADK     R24 K58      ; R24 := 50
260 [-]: LOADK     R25 K13      ; R25 := 0
261 [-]: LOADK     R26 K13      ; R26 := 0
262 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
263 [-]: SETTABLE  R0 K56 R23   ; R0["decoRotation"] := R23
264 [-]: GETGLOBAL R23 K44      ; R23 := _G
265 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["CachedGoalInfo"]
266 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
267 [-]: GETTABLE  R23 R23 K59  ; R23 := R23["mHealthPct"]
268 [-]: LE        0 R23 K13    ; if R23 > 0 then PC := 329
269 [-]: JMP       329          ; PC := 329
270 [-]: MOVE      R3 R0        ; R3 := R0
271 [-]: JMP       329          ; PC := 329
272 [-]: GETGLOBAL R23 K29      ; R23 := string
273 [-]: GETTABLE  R23 R23 K30  ; R23 := R23["0xDE44F664"]
274 [-]: GETGLOBAL R24 K43      ; R24 := 0x9FAED6BC
275 [-]: GETGLOBAL R25 K44      ; R25 := _G
276 [-]: GETTABLE  R25 R25 K45  ; R25 := R25["CachedGoalInfo"]
277 [-]: GETTABLE  R25 R25 R15  ; R25 := R25[R15]
278 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["mTag"]
279 [-]: CALL      R24 2 2      ; R24 := R24(R25)
280 [-]: LOADK     R25 K61      ; R25 := "Halloween"
281 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
282 [-]: EQ        1 R23 K0     ; if R23 == nil then PC := 329
283 [-]: JMP       329          ; PC := 329
284 [-]: GETGLOBAL R23 K62      ; R23 := 0x2C00D429
285 [-]: LOADK     R24 K63      ; R24 := "/Lotus/Upgrades/Skins/Festivities/PumpkinHeadDeco"
286 [-]: CALL      R23 2 2      ; R23 := R23(R24)
287 [-]: SETTABLE  R0 K24 R23   ; R0["deco"] := R23
288 [-]: GETGLOBAL R23 K57      ; R23 := 0x1E4F6281
289 [-]: LOADK     R24 K64      ; R24 := 180
290 [-]: LOADK     R25 K13      ; R25 := 0
291 [-]: LOADK     R26 K13      ; R26 := 0
292 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
293 [-]: SETTABLE  R0 K56 R23   ; R0["decoRotation"] := R23
294 [-]: SETTABLE  R0 K65 K66   ; R0["scale"] := 0.03999999910593
295 [-]: GETGLOBAL R23 K57      ; R23 := 0x1E4F6281
296 [-]: LOADK     R24 K67      ; R24 := -50
297 [-]: LOADK     R25 K13      ; R25 := 0
298 [-]: LOADK     R26 K13      ; R26 := 0
299 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
300 [-]: MOVE      R14 R23      ; R14 := R23
301 [-]: EQ        0 R15 K68    ; if R15 ~= "EventNode24" then PC := 305
302 [-]: JMP       305          ; PC := 305
303 [-]: GETTABLE  R23 R0 K69   ; R23 := R0["decoOffset"]
304 [-]: SETTABLE  R23 K70 K71  ; R23["z"] := -0.10000000149012
305 [-]: GETGLOBAL R23 K72      ; R23 := _T
306 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["CachedGoalKeys"]
307 [-]: TEST      R23 0        ; if not R23 then PC := 329
308 [-]: JMP       329          ; PC := 329
309 [-]: GETGLOBAL R23 K72      ; R23 := _T
310 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["CachedGoalKeys"]
311 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
312 [-]: TEST      R23 0        ; if not R23 then PC := 329
313 [-]: JMP       329          ; PC := 329
314 [-]: GETGLOBAL R23 K72      ; R23 := _T
315 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["CachedGoalKeys"]
316 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
317 [-]: SELF      R23 R23 K74  ; R24 := R23; R23 := R23["0x387DBBEB"]
318 [-]: CALL      R23 2 2      ; R23 := R23(R24)
319 [-]: GETTABLE  R24 R23 K75  ; R24 := R23["x"]
320 [-]: EQ        1 R24 K13    ; if R24 == 0 then PC := 329
321 [-]: JMP       329          ; PC := 329
322 [-]: GETTABLE  R24 R23 K76  ; R24 := R23["y"]
323 [-]: EQ        1 R24 K13    ; if R24 == 0 then PC := 329
324 [-]: JMP       329          ; PC := 329
325 [-]: GETTABLE  R24 R23 K70  ; R24 := R23["z"]
326 [-]: EQ        1 R24 K13    ; if R24 == 0 then PC := 329
327 [-]: JMP       329          ; PC := 329
328 [-]: SETTABLE  R0 K42 R23   ; R0["pos"] := R23
329 [-]: GETUPVAL  R24 U7       ; R24 := U7
330 [-]: LOADK     R25 K77      ; R25 := "Nodes.Node"
331 [-]: LOADK     R26 K78      ; R26 := "Node"
332 [-]: GETUPVAL  R27 U8       ; R27 := U8
333 [-]: LEN       R27 R27      ; R27 := # R27
334 [-]: ADD       R27 R27 K33  ; R27 := R27 + 1
335 [-]: LOADK     R28 K79      ; R28 := -5000
336 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
337 [-]: GETGLOBAL R25 K80      ; R25 := mMovie
338 [-]: SELF      R25 R25 K81  ; R26 := R25; R25 := R25["0xA7FE5515"]
339 [-]: MOVE      R27 R24      ; R27 := R24
340 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
341 [-]: GETGLOBAL R26 K80      ; R26 := mMovie
342 [-]: SELF      R26 R26 K81  ; R27 := R26; R26 := R26["0xA7FE5515"]
343 [-]: MOVE      R28 R24      ; R28 := R24
344 [-]: LOADK     R29 K82      ; R29 := ".Node"
345 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
346 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
347 [-]: GETGLOBAL R27 K80      ; R27 := mMovie
348 [-]: SELF      R27 R27 K83  ; R28 := R27; R27 := R27["0x7E1F26D7"]
349 [-]: MOVE      R29 R24      ; R29 := R24
350 [-]: LOADK     R30 K84      ; R30 := ".Name.Bg"
351 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
352 [-]: GETGLOBAL R30 K44      ; R30 := _G
353 [-]: GETTABLE  R30 R30 K85  ; R30 := R30["UIMaterial_SmoothEdgeNoDepthTest"]
354 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
355 [-]: GETGLOBAL R27 K80      ; R27 := mMovie
356 [-]: SELF      R27 R27 K86  ; R28 := R27; R27 := R27["0x880196A7"]
357 [-]: MOVE      R29 R24      ; R29 := R24
358 [-]: LOADK     R30 K87      ; R30 := "Name.Bg"
359 [-]: LOADK     R31 K88      ; R31 := "noMenuSelection"
360 [-]: MOVE      R32 R1       ; R32 := R1
361 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
362 [-]: LOADNIL   R27 R27      ; R27 := nil
363 [-]: GETGLOBAL R28 K1       ; R28 := 0x400E7765
364 [-]: GETTABLE  R29 R0 K24   ; R29 := R0["deco"]
365 [-]: CALL      R28 2 2      ; R28 := R28(R29)
366 [-]: TEST      R28 1        ; if R28 then PC := 405
367 [-]: JMP       405          ; PC := 405
368 [-]: NEWTABLE  R28 0 3      ; R28 := {}
369 [-]: GETTABLE  R29 R0 K69   ; R29 := R0["decoOffset"]
370 [-]: SETTABLE  R28 K89 R29  ; R28["mOffset"] := R29
371 [-]: GETTABLE  R29 R0 K56   ; R29 := R0["decoRotation"]
372 [-]: SETTABLE  R28 K90 R29  ; R28["mRotation"] := R29
373 [-]: GETTABLE  R29 R0 K65   ; R29 := R0["scale"]
374 [-]: SETTABLE  R28 K91 R29  ; R28["mScale"] := R29
375 [-]: MOVE      R27 R28      ; R27 := R28
376 [-]: GETGLOBAL R28 K93      ; R28 := gBackgroundRegion
377 [-]: SELF      R28 R28 K94  ; R29 := R28; R28 := R28["0xBDD34CC6"]
378 [-]: GETGLOBAL R30 K95      ; R30 := 0xCAA43ABB
379 [-]: GETTABLE  R31 R0 K24   ; R31 := R0["deco"]
380 [-]: CALL      R30 2 2      ; R30 := R30(R31)
381 [-]: GETTABLE  R31 R27 K89  ; R31 := R27["mOffset"]
382 [-]: ADD       R31 R13 R31  ; R31 := R13 + R31
383 [-]: GETTABLE  R32 R27 K90  ; R32 := R27["mRotation"]
384 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
385 [-]: SETTABLE  R27 K92 R28  ; R27["mInstance"] := R28
386 [-]: GETGLOBAL R28 K1       ; R28 := 0x400E7765
387 [-]: GETTABLE  R29 R27 K92  ; R29 := R27["mInstance"]
388 [-]: CALL      R28 2 2      ; R28 := R28(R29)
389 [-]: TEST      R28 1        ; if R28 then PC := 405
390 [-]: JMP       405          ; PC := 405
391 [-]: GETTABLE  R28 R27 K91  ; R28 := R27["mScale"]
392 [-]: GETTABLE  R29 R27 K92  ; R29 := R27["mInstance"]
393 [-]: SELF      R29 R29 K96  ; R30 := R29; R29 := R29["0x6A7E5F92"]
394 [-]: GETUPVAL  R31 U9       ; R31 := U9
395 [-]: GETTABLE  R31 R31 K97  ; R31 := R31["DECO_SCALE_MULTIPLIER"]
396 [-]: MUL       R31 R28 R31  ; R31 := R28 * R31
397 [-]: MOVE      R32 R1       ; R32 := R1
398 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
399 [-]: TEST      R14 0        ; if not R14 then PC := 405
400 [-]: JMP       405          ; PC := 405
401 [-]: GETTABLE  R29 R27 K92  ; R29 := R27["mInstance"]
402 [-]: SELF      R29 R29 K98  ; R30 := R29; R29 := R29["0x8A42F754"]
403 [-]: MOVE      R31 R14      ; R31 := R14
404 [-]: CALL      R29 3 1      ; R29(R30,R31)
405 [-]: GETGLOBAL R29 K72      ; R29 := _T
406 [-]: GETTABLE  R29 R29 K99  ; R29 := R29["CachedActiveMissions"]
407 [-]: TEST      R29 0        ; if not R29 then PC := 420
408 [-]: JMP       420          ; PC := 420
409 [-]: GETGLOBAL R29 K72      ; R29 := _T
410 [-]: GETTABLE  R29 R29 K99  ; R29 := R29["CachedActiveMissions"]
411 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
412 [-]: TEST      R29 0        ; if not R29 then PC := 420
413 [-]: JMP       420          ; PC := 420
414 [-]: GETGLOBAL R29 K72      ; R29 := _T
415 [-]: GETTABLE  R29 R29 K99  ; R29 := R29["CachedActiveMissions"]
416 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
417 [-]: GETTABLE  R29 R29 K100 ; R29 := R29["mVisible"]
418 [-]: TEST      R29 1        ; if R29 then PC := 480
419 [-]: JMP       480          ; PC := 480
420 [-]: GETGLOBAL R29 K44      ; R29 := _G
421 [-]: GETTABLE  R29 R29 K45  ; R29 := R29["CachedGoalInfo"]
422 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
423 [-]: TEST      R29 1        ; if R29 then PC := 480
424 [-]: JMP       480          ; PC := 480
425 [-]: GETGLOBAL R29 K72      ; R29 := _T
426 [-]: GETTABLE  R29 R29 K101 ; R29 := R29["CachedAlerts"]
427 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
428 [-]: TEST      R29 0        ; if not R29 then PC := 436
429 [-]: JMP       436          ; PC := 436
430 [-]: GETGLOBAL R29 K72      ; R29 := _T
431 [-]: GETTABLE  R29 R29 K101 ; R29 := R29["CachedAlerts"]
432 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
433 [-]: GETTABLE  R29 R29 K100 ; R29 := R29["mVisible"]
434 [-]: TEST      R29 1        ; if R29 then PC := 480
435 [-]: JMP       480          ; PC := 480
436 [-]: GETGLOBAL R29 K72      ; R29 := _T
437 [-]: GETTABLE  R29 R29 K102 ; R29 := R29["CachedInvasionInfo"]
438 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
439 [-]: TEST      R29 1        ; if R29 then PC := 480
440 [-]: JMP       480          ; PC := 480
441 [-]: GETGLOBAL R29 K72      ; R29 := _T
442 [-]: GETTABLE  R29 R29 K103 ; R29 := R29["CachedSyndicateMissions"]
443 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
444 [-]: TEST      R29 0        ; if not R29 then PC := 452
445 [-]: JMP       452          ; PC := 452
446 [-]: GETGLOBAL R29 K72      ; R29 := _T
447 [-]: GETTABLE  R29 R29 K103 ; R29 := R29["CachedSyndicateMissions"]
448 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
449 [-]: GETTABLE  R29 R29 K100 ; R29 := R29["mVisible"]
450 [-]: TEST      R29 1        ; if R29 then PC := 480
451 [-]: JMP       480          ; PC := 480
452 [-]: GETTABLE  R29 R0 K40   ; R29 := R0["nodeType"]
453 [-]: GETGLOBAL R30 K18      ; R30 := Lotus_Game
454 [-]: GETTABLE  R30 R30 K104 ; R30 := R30["NT_HUB"]
455 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 479
456 [-]: JMP       479          ; PC := 479
457 [-]: GETGLOBAL R29 K1       ; R29 := 0x400E7765
458 [-]: GETTABLE  R30 R0 K2    ; R30 := R0["mission"]
459 [-]: GETTABLE  R30 R30 K105 ; R30 := R30["levelKeyName"]
460 [-]: CALL      R29 2 2      ; R29 := R29(R30)
461 [-]: TEST      R29 0        ; if not R29 then PC := 479
462 [-]: JMP       479          ; PC := 479
463 [-]: GETGLOBAL R29 K1       ; R29 := 0x400E7765
464 [-]: GETTABLE  R30 R0 K106  ; R30 := R0["keyChain"]
465 [-]: CALL      R29 2 2      ; R29 := R29(R30)
466 [-]: TEST      R29 0        ; if not R29 then PC := 479
467 [-]: JMP       479          ; PC := 479
468 [-]: GETTABLE  R29 R0 K40   ; R29 := R0["nodeType"]
469 [-]: GETGLOBAL R30 K18      ; R30 := Lotus_Game
470 [-]: GETTABLE  R30 R30 K107 ; R30 := R30["NT_SHORTCUT"]
471 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 479
472 [-]: JMP       479          ; PC := 479
473 [-]: GETTABLE  R29 R0 K40   ; R29 := R0["nodeType"]
474 [-]: GETGLOBAL R30 K18      ; R30 := Lotus_Game
475 [-]: GETTABLE  R30 R30 K108 ; R30 := R30["NT_JUNCTION"]
476 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 479
477 [-]: JMP       479          ; PC := 479
478 [-]: MOVE      R29 R0       ; R29 := R0
479 [-]: MOVE      R29 R1       ; R29 := R1
480 [-]: GETGLOBAL R30 K72      ; R30 := _T
481 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["CachedNemesisMissions"]
482 [-]: GETTABLE  R30 R30 R15  ; R30 := R30[R15]
483 [-]: TEST      R30 0        ; if not R30 then PC := 499
484 [-]: JMP       499          ; PC := 499
485 [-]: GETGLOBAL R30 K72      ; R30 := _T
486 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["CachedNemesisMissions"]
487 [-]: GETTABLE  R30 R30 R15  ; R30 := R30[R15]
488 [-]: GETTABLE  R30 R30 K110 ; R30 := R30["attackType"]
489 [-]: TEST      R30 0        ; if not R30 then PC := 499
490 [-]: JMP       499          ; PC := 499
491 [-]: GETGLOBAL R30 K72      ; R30 := _T
492 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["CachedNemesisMissions"]
493 [-]: GETTABLE  R30 R30 R15  ; R30 := R30[R15]
494 [-]: GETTABLE  R30 R30 K110 ; R30 := R30["attackType"]
495 [-]: EQ        1 R30 K111   ; if R30 == "Blockade" then PC := 498
496 [-]: JMP       498          ; PC := 498
497 [-]: MOVE      R30 R0       ; R30 := R0
498 [-]: MOVE      R30 R1       ; R30 := R1
499 [-]: GETGLOBAL R31 K80      ; R31 := mMovie
500 [-]: SELF      R31 R31 K112 ; R32 := R31; R31 := R31["0x5DB0BD4"]
501 [-]: GETTABLE  R33 R0 K113  ; R33 := R0["locTag"]
502 [-]: SELF      R33 R33 K28  ; R34 := R33; R33 := R33["0x5EC7A3D2"]
503 [-]: CALL      R33 2 2      ; R33 := R33(R34)
504 [-]: MOVE      R34 R1       ; R34 := R1
505 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
506 [-]: TEST      R5 0         ; if not R5 then PC := 521
507 [-]: JMP       521          ; PC := 521
508 [-]: LT        0 K13 R5     ; if 0 >= R5 then PC := 521
509 [-]: JMP       521          ; PC := 521
510 [-]: EQ        0 R5 K33     ; if R5 ~= 1 then PC := 541
511 [-]: JMP       541          ; PC := 541
512 [-]: GETGLOBAL R32 K80      ; R32 := mMovie
513 [-]: SELF      R32 R32 K112 ; R33 := R32; R32 := R32["0x5DB0BD4"]
514 [-]: LOADK     R34 K114     ; R34 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
515 [-]: MOVE      R35 R0       ; R35 := R0
516 [-]: NEWTABLE  R36 0 1      ; R36 := {}
517 [-]: SETTABLE  R36 K115 R31 ; R36["LOCATION"] := R31
518 [-]: CALL      R32 5 2      ; R32 := R32(R33,R34,R35,R36)
519 [-]: MOVE      R31 R32      ; R31 := R32
520 [-]: JMP       541          ; PC := 541
521 [-]: GETGLOBAL R32 K44      ; R32 := _G
522 [-]: GETTABLE  R32 R32 K45  ; R32 := R32["CachedGoalInfo"]
523 [-]: GETTABLE  R33 R0 K7    ; R33 := R0["name"]
524 [-]: SELF      R33 R33 K28  ; R34 := R33; R33 := R33["0x5EC7A3D2"]
525 [-]: CALL      R33 2 2      ; R33 := R33(R34)
526 [-]: GETTABLE  R32 R32 R33  ; R32 := R32[R33]
527 [-]: TEST      R32 0        ; if not R32 then PC := 541
528 [-]: JMP       541          ; PC := 541
529 [-]: GETGLOBAL R32 K80      ; R32 := mMovie
530 [-]: SELF      R32 R32 K112 ; R33 := R32; R32 := R32["0x5DB0BD4"]
531 [-]: GETGLOBAL R34 K44      ; R34 := _G
532 [-]: GETTABLE  R34 R34 K45  ; R34 := R34["CachedGoalInfo"]
533 [-]: GETTABLE  R35 R0 K7    ; R35 := R0["name"]
534 [-]: SELF      R35 R35 K28  ; R36 := R35; R35 := R35["0x5EC7A3D2"]
535 [-]: CALL      R35 2 2      ; R35 := R35(R36)
536 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
537 [-]: GETTABLE  R34 R34 K116 ; R34 := R34["mDesc"]
538 [-]: MOVE      R35 R1       ; R35 := R1
539 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
540 [-]: MOVE      R31 R32      ; R31 := R32
541 [-]: TEST      R30 0        ; if not R30 then PC := 556
542 [-]: JMP       556          ; PC := 556
543 [-]: MOVE      R32 R31      ; R32 := R31
544 [-]: LOADK     R33 K117     ; R33 := " ("
545 [-]: GETGLOBAL R34 K80      ; R34 := mMovie
546 [-]: SELF      R34 R34 K112 ; R35 := R34; R34 := R34["0x5DB0BD4"]
547 [-]: GETGLOBAL R36 K72      ; R36 := _T
548 [-]: GETTABLE  R36 R36 K109 ; R36 := R36["CachedNemesisMissions"]
549 [-]: GETTABLE  R36 R36 R15  ; R36 := R36[R15]
550 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["mMissionInfo"]
551 [-]: GETTABLE  R36 R36 K119 ; R36 := R36["uniqueName"]
552 [-]: MOVE      R37 R0       ; R37 := R0
553 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
554 [-]: LOADK     R35 K120     ; R35 := ")"
555 [-]: CONCAT    R31 R32 R35  ; R31 := R32 .. R33 .. R34 .. R35
556 [-]: NEWTABLE  R32 0 19     ; R32 := {}
557 [-]: GETTABLE  R33 R0 K7    ; R33 := R0["name"]
558 [-]: SETTABLE  R32 K7 R33   ; R32["name"] := R33
559 [-]: GETGLOBAL R33 K29      ; R33 := string
560 [-]: GETTABLE  R33 R33 K122 ; R33 := R33["0x639C642A"]
561 [-]: MOVE      R34 R31      ; R34 := R31
562 [-]: CALL      R33 2 2      ; R33 := R33(R34)
563 [-]: SETTABLE  R32 K121 R33 ; R32["locName"] := R33
564 [-]: SETTABLE  R32 K123 R25 ; R32["memberIndex"] := R25
565 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
566 [-]: SELF      R33 R33 K81  ; R34 := R33; R33 := R33["0xA7FE5515"]
567 [-]: MOVE      R35 R24      ; R35 := R24
568 [-]: LOADK     R36 K125     ; R36 := ".Name"
569 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
570 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
571 [-]: SETTABLE  R32 K124 R33 ; R32["labelIndex"] := R33
572 [-]: SETTABLE  R32 K126 R26 ; R32["nodeIndex"] := R26
573 [-]: SETTABLE  R32 K127 R24 ; R32["clipName"] := R24
574 [-]: SETTABLE  R32 K128 R13 ; R32["position"] := R13
575 [-]: SETTABLE  R32 K24 R27  ; R32["deco"] := R27
576 [-]: SETTABLE  R32 K129 R0  ; R32["radialSector"] := R0
577 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
578 [-]: GETGLOBAL R34 K18      ; R34 := Lotus_Game
579 [-]: GETTABLE  R34 R34 K107 ; R34 := R34["NT_SHORTCUT"]
580 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 583
581 [-]: JMP       583          ; PC := 583
582 [-]: MOVE      R33 R0       ; R33 := R0
583 [-]: MOVE      R33 R1       ; R33 := R1
584 [-]: SETTABLE  R32 K130 R33 ; R32["isShortcut"] := R33
585 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
586 [-]: GETGLOBAL R34 K18      ; R34 := Lotus_Game
587 [-]: GETTABLE  R34 R34 K108 ; R34 := R34["NT_JUNCTION"]
588 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 591
589 [-]: JMP       591          ; PC := 591
590 [-]: MOVE      R33 R0       ; R33 := R0
591 [-]: MOVE      R33 R1       ; R33 := R1
592 [-]: SETTABLE  R32 K131 R33 ; R32["isJunction"] := R33
593 [-]: SETTABLE  R32 K132 R5  ; R32["reconstructionProgress"] := R5
594 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
595 [-]: GETGLOBAL R34 K18      ; R34 := Lotus_Game
596 [-]: GETTABLE  R34 R34 K134 ; R34 := R34["NT_EMPTY"]
597 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 600
598 [-]: JMP       600          ; PC := 600
599 [-]: MOVE      R33 R0       ; R33 := R0
600 [-]: MOVE      R33 R1       ; R33 := R1
601 [-]: SETTABLE  R32 K133 R33 ; R32["isEmpty"] := R33
602 [-]: SETTABLE  R32 K135 R29 ; R32["isActiveMission"] := R29
603 [-]: SETTABLE  R32 K136 R30 ; R32["isBlockaded"] := R30
604 [-]: GETTABLE  R33 R0 K137  ; R33 := R0["isCriticalPath"]
605 [-]: SETTABLE  R32 K137 R33 ; R32["isCriticalPath"] := R33
606 [-]: SETTABLE  R32 K138 R3  ; R32["locationEnabled"] := R3
607 [-]: GETTABLE  R33 R0 K139  ; R33 := R0["missionsCompleted"]
608 [-]: SETTABLE  R32 K139 R33 ; R32["missionsCompleted"] := R33
609 [-]: GETTABLE  R33 R1 K140  ; R33 := R1["guildId"]
610 [-]: SETTABLE  R32 K140 R33 ; R32["guildId"] := R33
611 [-]: GETTABLE  R33 R1 K141  ; R33 := R1["clanTier"]
612 [-]: SETTABLE  R32 K141 R33 ; R32["clanTier"] := R33
613 [-]: GETTABLE  R33 R1 K142  ; R33 := R1["overrideIconSize"]
614 [-]: SETTABLE  R32 K142 R33 ; R32["overrideIconSize"] := R33
615 [-]: TEST      R2 0         ; if not R2 then PC := 618
616 [-]: JMP       618          ; PC := 618
617 [-]: SETTABLE  R32 K143 K144; R32["edgesLocked"] := "0x1"
618 [-]: GETTABLE  R33 R32 K7   ; R33 := R32["name"]
619 [-]: GETUPVAL  R34 U2       ; R34 := U2
620 [-]: GETTABLE  R34 R34 K145 ; R34 := R34["SCENARIO_EVENT_HUB_TAG"]
621 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 624
622 [-]: JMP       624          ; PC := 624
623 [-]: SETTABLE  R32 K146 K144; R32["isFlotilla"] := "0x1"
624 [-]: GETGLOBAL R33 K147     ; R33 := table
625 [-]: GETTABLE  R33 R33 K148 ; R33 := R33["0xE6450C9D"]
626 [-]: GETUPVAL  R34 U8       ; R34 := U8
627 [-]: MOVE      R35 R32      ; R35 := R32
628 [-]: CALL      R33 3 1      ; R33(R34,R35)
629 [-]: GETUPVAL  R33 U10      ; R33 := U10
630 [-]: GETGLOBAL R34 K43      ; R34 := 0x9FAED6BC
631 [-]: GETTABLE  R35 R32 K7   ; R35 := R32["name"]
632 [-]: CALL      R34 2 2      ; R34 := R34(R35)
633 [-]: GETUPVAL  R35 U8       ; R35 := U8
634 [-]: GETUPVAL  R36 U8       ; R36 := U8
635 [-]: LEN       R36 R36      ; R36 := # R36
636 [-]: GETTABLE  R35 R35 R36  ; R35 := R35[R36]
637 [-]: SETTABLE  R33 R34 R35  ; R33[R34] := R35
638 [-]: GETUPVAL  R33 U8       ; R33 := U8
639 [-]: LEN       R33 R33      ; R33 := # R33
640 [-]: SETTABLE  R32 K149 R33 ; R32["id"] := R33
641 [-]: GETUPVAL  R33 U11      ; R33 := U11
642 [-]: MOVE      R34 R32      ; R34 := R32
643 [-]: CALL      R33 2 2      ; R33 := R33(R34)
644 [-]: SETTABLE  R32 K150 R33 ; R32["isSurfaceNode"] := R33
645 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
646 [-]: SELF      R33 R33 K151 ; R34 := R33; R33 := R33["0x1C19D966"]
647 [-]: MOVE      R35 R24      ; R35 := R24
648 [-]: LOADK     R36 K152     ; R36 := "Id"
649 [-]: GETTABLE  R37 R32 K149 ; R37 := R32["id"]
650 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
651 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
652 [-]: SELF      R33 R33 K151 ; R34 := R33; R33 := R33["0x1C19D966"]
653 [-]: MOVE      R35 R24      ; R35 := R24
654 [-]: LOADK     R36 K153     ; R36 := "RollOverCallback"
655 [-]: LOADK     R37 K154     ; R37 := "NodeRollOver"
656 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
657 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
658 [-]: SELF      R33 R33 K151 ; R34 := R33; R33 := R33["0x1C19D966"]
659 [-]: MOVE      R35 R24      ; R35 := R24
660 [-]: LOADK     R36 K155     ; R36 := "RollOutCallback"
661 [-]: LOADK     R37 K156     ; R37 := "NodeRollOut"
662 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
663 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
664 [-]: SELF      R33 R33 K151 ; R34 := R33; R33 := R33["0x1C19D966"]
665 [-]: MOVE      R35 R24      ; R35 := R24
666 [-]: LOADK     R36 K157     ; R36 := "SelectCallback"
667 [-]: LOADK     R37 K158     ; R37 := "NodeSelect"
668 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
669 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
670 [-]: SELF      R33 R33 K86  ; R34 := R33; R33 := R33["0x880196A7"]
671 [-]: MOVE      R35 R24      ; R35 := R24
672 [-]: LOADK     R36 K159     ; R36 := "Btn"
673 [-]: LOADK     R37 K160     ; R37 := "_width"
674 [-]: LOADK     R38 K161     ; R38 := 48
675 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
676 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
677 [-]: SELF      R33 R33 K86  ; R34 := R33; R33 := R33["0x880196A7"]
678 [-]: MOVE      R35 R24      ; R35 := R24
679 [-]: LOADK     R36 K159     ; R36 := "Btn"
680 [-]: LOADK     R37 K162     ; R37 := "_height"
681 [-]: LOADK     R38 K163     ; R38 := 32
682 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
683 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
684 [-]: SELF      R33 R33 K164 ; R34 := R33; R33 := R33["0x445651FB"]
685 [-]: GETTABLE  R35 R32 K123 ; R35 := R32["memberIndex"]
686 [-]: LOADK     R36 K165     ; R36 := "_alpha"
687 [-]: LOADK     R37 K13      ; R37 := 0
688 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
689 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
690 [-]: SELF      R33 R33 K164 ; R34 := R33; R33 := R33["0x445651FB"]
691 [-]: GETTABLE  R35 R32 K124 ; R35 := R32["labelIndex"]
692 [-]: LOADK     R36 K165     ; R36 := "_alpha"
693 [-]: GETUPVAL  R37 U12      ; R37 := U12
694 [-]: MOVE      R38 R32      ; R38 := R32
695 [-]: CALL      R37 2 0      ; R37,... := R37(R38)
696 [-]: CALL      R33 0 1      ; R33(R34,...)
697 [-]: GETGLOBAL R33 K44      ; R33 := _G
698 [-]: GETTABLE  R33 R33 K166 ; R33 := R33["StalkerMode"]
699 [-]: TEST      R33 0        ; if not R33 then PC := 725
700 [-]: JMP       725          ; PC := 725
701 [-]: GETUPVAL  R33 U2       ; R33 := U2
702 [-]: GETTABLE  R33 R33 K167 ; R33 := R33["0xE4E5932F"]
703 [-]: MOVE      R34 R15      ; R34 := R15
704 [-]: GETUPVAL  R35 U6       ; R35 := U6
705 [-]: MOVE      R36 R0       ; R36 := R0
706 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
707 [-]: GETGLOBAL R34 K80      ; R34 := mMovie
708 [-]: SELF      R34 R34 K151 ; R35 := R34; R34 := R34["0x1C19D966"]
709 [-]: MOVE      R36 R24      ; R36 := R24
710 [-]: LOADK     R37 K168     ; R37 := "_visible"
711 [-]: GETUPVAL  R38 U13      ; R38 := U13
712 [-]: EQ        1 R38 K0     ; if R38 == nil then PC := 722
713 [-]: JMP       722          ; PC := 722
714 [-]: GETUPVAL  R38 U13      ; R38 := U13
715 [-]: GETTABLE  R38 R38 R33  ; R38 := R38[R33]
716 [-]: TEST      R38 0        ; if not R38 then PC := 724
717 [-]: JMP       724          ; PC := 724
718 [-]: GETUPVAL  R38 U13      ; R38 := U13
719 [-]: GETTABLE  R38 R38 R33  ; R38 := R38[R33]
720 [-]: LT        1 K13 R38    ; if 0 < R38 then PC := 723
721 [-]: JMP       723          ; PC := 723
722 [-]: MOVE      R38 R0       ; R38 := R0
723 [-]: MOVE      R38 R1       ; R38 := R1
724 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
725 [-]: RETURN    R32 2        ; return R32
726 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2240
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["radialSector"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SETTABLE  R0 K0 R1     ; R0["completed"] := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: SETTABLE  R0 K2 R1     ; R0["locked"] := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETTABLE  R0 K3 R1     ; R0["icon"] := R1
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 15 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["completed"]
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["isActiveMission"]
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["notificationClip"]
 28 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: SETTABLE  R0 K6 K9     ; R0["special"] := nil
 31 [-]: GETGLOBAL R1 K10       ; R1 := nodeLockedTexture
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: LOADK     R3 K11       ; R3 := 56
 34 [-]: GETGLOBAL R4 K12       ; R4 := 0x9FAED6BC
 35 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["name"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K14       ; R5 := _T
 38 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["CachedSkullNodes"]
 39 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 40 [-]: TEST      R5 1         ; if R5 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R5 K14       ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 44 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 66
 46 [-]: JMP       66           ; PC := 66
 47 [-]: GETGLOBAL R5 K14       ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 49 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 50 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["mAlertInfo"]
 51 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mMissionInfo"]
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["nightmare"]
 53 [-]: TEST      R5 0         ; if not R5 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETUPVAL  R5 U3        ; R5 := U3
 56 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 57 [-]: TEST      R5 0         ; if not R5 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETUPVAL  R5 U3        ; R5 := U3
 60 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 61 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["IsQuest"]
 62 [-]: MOVE      R5 R5        ; R5 := R5
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: MOVE      R5 R1        ; R5 := R1
 66 [-]: GETGLOBAL R6 K21       ; R6 := _G
 67 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 68 [-]: TEST      R6 0         ; if not R6 then PC := 105
 69 [-]: JMP       105          ; PC := 105
 70 [-]: GETGLOBAL R6 K21       ; R6 := _G
 71 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 72 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 73 [-]: TEST      R6 0         ; if not R6 then PC := 105
 74 [-]: JMP       105          ; PC := 105
 75 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 76 [-]: GETGLOBAL R7 K21       ; R7 := _G
 77 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["CachedGoalInfo"]
 78 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 79 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mIcon"]
 80 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 81 [-]: TEST      R6 1         ; if R6 then PC := 105
 82 [-]: JMP       105          ; PC := 105
 83 [-]: GETGLOBAL R6 K24       ; R6 := string
 84 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["0xDE44F664"]
 85 [-]: GETGLOBAL R7 K12       ; R7 := 0x9FAED6BC
 86 [-]: GETGLOBAL R8 K21       ; R8 := _G
 87 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["CachedGoalInfo"]
 88 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 89 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["mTag"]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: LOADK     R8 K27       ; R8 := "Halloween"
 92 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 93 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
 96 [-]: LOADK     R3 K29       ; R3 := 0
 97 [-]: JMP       191          ; PC := 191
 98 [-]: GETGLOBAL R1 K30       ; R1 := nodeSpecialTexture
 99 [-]: GETGLOBAL R6 K21       ; R6 := _G
100 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
101 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
102 [-]: GETTABLE  R2 R6 K23    ; R2 := R6["mIcon"]
103 [-]: LOADK     R3 K31       ; R3 := 90
104 [-]: JMP       191          ; PC := 191
105 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
106 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["icon"]
107 [-]: CALL      R6 2 2       ; R6 := R6(R7)
108 [-]: TEST      R6 1         ; if R6 then PC := 132
109 [-]: JMP       132          ; PC := 132
110 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
111 [-]: TEST      R6 0         ; if not R6 then PC := 132
112 [-]: JMP       132          ; PC := 132
113 [-]: GETUPVAL  R6 U4        ; R6 := U4
114 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["0xF81722A2"]
115 [-]: MOVE      R7 R5        ; R7 := R5
116 [-]: GETGLOBAL R8 K33       ; R8 := nodeNightmareTexture
117 [-]: GETGLOBAL R9 K30       ; R9 := nodeSpecialTexture
118 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
119 [-]: MOVE      R1 R6        ; R1 := R6
120 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
121 [-]: LOADK     R3 K34       ; R3 := 84
122 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
123 [-]: TEST      R6 0         ; if not R6 then PC := 191
124 [-]: JMP       191          ; PC := 191
125 [-]: GETGLOBAL R6 K35       ; R6 := table
126 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
127 [-]: GETUPVAL  R7 U5        ; R7 := U5
128 [-]: NEWTABLE  R8 0 1       ; R8 := {}
129 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
130 [-]: CALL      R6 3 1       ; R6(R7,R8)
131 [-]: JMP       191          ; PC := 191
132 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["isJunction"]
133 [-]: TEST      R6 0         ; if not R6 then PC := 156
134 [-]: JMP       156          ; PC := 156
135 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
136 [-]: TEST      R6 0         ; if not R6 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETGLOBAL R1 K39       ; R1 := junctionLockedTexture
139 [-]: LOADK     R3 K40       ; R3 := 70
140 [-]: JMP       154          ; PC := 154
141 [-]: LOADK     R3 K31       ; R3 := 90
142 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
143 [-]: TEST      R6 0         ; if not R6 then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: GETGLOBAL R1 K41       ; R1 := junctionUnlockedTexture
146 [-]: JMP       154          ; PC := 154
147 [-]: GETGLOBAL R1 K42       ; R1 := junctionNextMissionTexture
148 [-]: GETGLOBAL R6 K35       ; R6 := table
149 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
150 [-]: GETUPVAL  R7 U6        ; R7 := U6
151 [-]: NEWTABLE  R8 0 1       ; R8 := {}
152 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
153 [-]: CALL      R6 3 1       ; R6(R7,R8)
154 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
155 [-]: JMP       191          ; PC := 191
156 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
157 [-]: TEST      R6 1         ; if R6 then PC := 187
158 [-]: JMP       187          ; PC := 187
159 [-]: GETTABLE  R6 R0 K43    ; R6 := R0["displayMissionOverride"]
160 [-]: TEST      R6 1         ; if R6 then PC := 187
161 [-]: JMP       187          ; PC := 187
162 [-]: GETUPVAL  R6 U7        ; R6 := U7
163 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 168
164 [-]: JMP       168          ; PC := 168
165 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
166 [-]: TEST      R6 0         ; if not R6 then PC := 187
167 [-]: JMP       187          ; PC := 187
168 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
169 [-]: TEST      R6 1         ; if R6 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
172 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
173 [-]: TEST      R6 0         ; if not R6 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: GETGLOBAL R6 K21       ; R6 := _G
176 [-]: GETTABLE  R1 R6 K44    ; R1 := R6["UITexture_Story"]
177 [-]: JMP       180          ; PC := 180
178 [-]: LOADK     R3 K45       ; R3 := 120
179 [-]: GETGLOBAL R1 K46       ; R1 := nodeNextMissionTexture
180 [-]: GETGLOBAL R6 K35       ; R6 := table
181 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
182 [-]: GETUPVAL  R7 U6        ; R7 := U6
183 [-]: NEWTABLE  R8 0 1       ; R8 := {}
184 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
185 [-]: CALL      R6 3 1       ; R6(R7,R8)
186 [-]: JMP       191          ; PC := 191
187 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
188 [-]: TEST      R6 1         ; if R6 then PC := 191
189 [-]: JMP       191          ; PC := 191
190 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
191 [-]: GETTABLE  R6 R0 K47    ; R6 := R0["guildId"]
192 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 217
193 [-]: JMP       217          ; PC := 217
194 [-]: GETTABLE  R6 R0 K48    ; R6 := R0["clanTier"]
195 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 217
196 [-]: JMP       217          ; PC := 217
197 [-]: GETGLOBAL R6 K49       ; R6 := clanTierIcons
198 [-]: GETTABLE  R7 R0 K48    ; R7 := R0["clanTier"]
199 [-]: GETTABLE  R2 R6 R7     ; R2 := R6[R7]
200 [-]: GETGLOBAL R6 K21       ; R6 := _G
201 [-]: GETTABLE  R1 R6 K50    ; R1 := R6["UITexture_CircleGradientBacker"]
202 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
203 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
204 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
205 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
206 [-]: LOADK     R10 K55      ; R10 := "_color"
207 [-]: LOADK     R11 K56      ; R11 := 65518
208 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
209 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
210 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
211 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
212 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
213 [-]: LOADK     R10 K57      ; R10 := "_alpha"
214 [-]: LOADK     R11 K29      ; R11 := 0
215 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
216 [-]: JMP       220          ; PC := 220
217 [-]: EQ        0 R4 K58     ; if R4 ~= "SolNode332" then PC := 220
218 [-]: JMP       220          ; PC := 220
219 [-]: LOADK     R3 K45       ; R3 := 120
220 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["isActiveMission"]
221 [-]: SETTABLE  R0 K59 R6    ; R0["visibleLabel"] := R6
222 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
223 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
224 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
225 [-]: LOADK     R9 K60       ; R9 := "Node.Container.Highlight"
226 [-]: LOADK     R10 K61      ; R10 := "_visible"
227 [-]: GETTABLE  R11 R0 K2    ; R11 := R0["locked"]
228 [-]: TEST      R11 1        ; if R11 then PC := 233
229 [-]: JMP       233          ; PC := 233
230 [-]: GETTABLE  R11 R0 K0    ; R11 := R0["completed"]
231 [-]: MOVE      R11 R11      ; R11 := R11
232 [-]: JMP       235          ; PC := 235
233 [-]: MOVE      R11 R0       ; R11 := R0
234 [-]: MOVE      R11 R1       ; R11 := R1
235 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
236 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
237 [-]: SELF      R6 R6 K62    ; R7 := R6; R6 := R6["0x26581636"]
238 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
239 [-]: LOADK     R9 K63       ; R9 := ".Node.Container.Node"
240 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
241 [-]: MOVE      R9 R1        ; R9 := R1
242 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
243 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
244 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
245 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
246 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
247 [-]: LOADK     R10 K64      ; R10 := "_width"
248 [-]: MOVE      R11 R3       ; R11 := R3
249 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
250 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
251 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
252 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
253 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
254 [-]: LOADK     R10 K65      ; R10 := "_height"
255 [-]: MOVE      R11 R3       ; R11 := R3
256 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
257 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
258 [-]: TEST      R6 0         ; if not R6 then PC := 263
259 [-]: JMP       263          ; PC := 263
260 [-]: GETTABLE  R6 R0 K66    ; R6 := R0["forceHover"]
261 [-]: TEST      R6 0         ; if not R6 then PC := 279
262 [-]: JMP       279          ; PC := 279
263 [-]: GETGLOBAL R6 K14       ; R6 := _T
264 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
265 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 278
266 [-]: JMP       278          ; PC := 278
267 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["radialSector"]
268 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 277
269 [-]: JMP       277          ; PC := 277
270 [-]: GETGLOBAL R6 K14       ; R6 := _T
271 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
272 [-]: GETTABLE  R6 R6 K68    ; R6 := R6["baseNodeName"]
273 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["radialSector"]
274 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["name"]
275 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 278
276 [-]: JMP       278          ; PC := 278
277 [-]: MOVE      R6 R0        ; R6 := R0
278 [-]: MOVE      R6 R1        ; R6 := R1
279 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
280 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
281 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
282 [-]: LOADK     R10 K70      ; R10 := "enabled"
283 [-]: MOVE      R11 R6       ; R11 := R6
284 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
285 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
286 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7["0x26581636"]
287 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
288 [-]: LOADK     R10 K71      ; R10 := ".Node.Container.Icon"
289 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
290 [-]: MOVE      R10 R2       ; R10 := R2
291 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
292 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
293 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
294 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
295 [-]: LOADK     R10 K72      ; R10 := "Node.Container.Icon"
296 [-]: LOADK     R11 K61      ; R11 := "_visible"
297 [-]: GETGLOBAL R12 K4       ; R12 := 0x400E7765
298 [-]: MOVE      R13 R2       ; R13 := R2
299 [-]: CALL      R12 2 2      ; R12 := R12(R13)
300 [-]: MOVE      R12 R12      ; R12 := R12
301 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
302 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["special"]
303 [-]: TEST      R7 0         ; if not R7 then PC := 311
304 [-]: JMP       311          ; PC := 311
305 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
306 [-]: SELF      R7 R7 K73    ; R8 := R7; R7 := R7["0x445651FB"]
307 [-]: GETTABLE  R9 R0 K74    ; R9 := R0["nodeIndex"]
308 [-]: LOADK     R10 K57      ; R10 := "_alpha"
309 [-]: LOADK     R11 K75      ; R11 := 100
310 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
311 [-]: GETTABLE  R7 R0 K76    ; R7 := R0["locationEnabled"]
312 [-]: TEST      R7 1         ; if R7 then PC := 321
313 [-]: JMP       321          ; PC := 321
314 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
315 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
316 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
317 [-]: LOADK     R10 K37      ; R10 := "Node"
318 [-]: LOADK     R11 K61      ; R11 := "_visible"
319 [-]: MOVE      R12 R0       ; R12 := R0
320 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
321 [-]: GETTABLE  R7 R0 K77    ; R7 := R0["isEmpty"]
322 [-]: TEST      R7 1         ; if R7 then PC := 331
323 [-]: JMP       331          ; PC := 331
324 [-]: GETUPVAL  R7 U8        ; R7 := U8
325 [-]: GETTABLE  R7 R7 K78    ; R7 := R7["Active"]
326 [-]: TEST      R7 0         ; if not R7 then PC := 337
327 [-]: JMP       337          ; PC := 337
328 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["locked"]
329 [-]: TEST      R7 0         ; if not R7 then PC := 337
330 [-]: JMP       337          ; PC := 337
331 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
332 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
333 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
334 [-]: LOADK     R10 K61      ; R10 := "_visible"
335 [-]: MOVE      R11 R0       ; R11 := R0
336 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
337 [-]: GETTABLE  R7 R0 K79    ; R7 := R0["isFlotilla"]
338 [-]: TEST      R7 0         ; if not R7 then PC := 346
339 [-]: JMP       346          ; PC := 346
340 [-]: GETGLOBAL R7 K35       ; R7 := table
341 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["0xE6450C9D"]
342 [-]: GETUPVAL  R8 U6        ; R8 := U6
343 [-]: NEWTABLE  R9 0 1       ; R9 := {}
344 [-]: SETTABLE  R9 K37 R0    ; R9["Node"] := R0
345 [-]: CALL      R7 3 1       ; R7(R8,R9)
346 [-]: GETUPVAL  R7 U9        ; R7 := U9
347 [-]: MOVE      R8 R0        ; R8 := R0
348 [-]: CALL      R7 2 1       ; R7(R8)
349 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2346
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x52C8784B"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  4 [-]: CALL      R0 2 5       ; R0,R1,R2,R3 := R0(R1)
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 1         ; if R4 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0xFD6CA2ED"]
 11 [-]: SUB       R6 R1 K4     ; R6 := R1 - 1
 12 [-]: MOVE      R7 R2        ; R7 := R2
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R2 R4        ; R2 := R4
 15 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 16 [-]: CLOSURE   R5 0         ; R5 := closure(Function #55.1)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R2        ; R0 := R2
 20 [-]: GETGLOBAL R6 K2        ; R6 := 0x400E7765
 21 [-]: MOVE      R7 R0        ; R7 := R0
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 1         ; if R6 then PC := 112
 24 [-]: JMP       112          ; PC := 112
 25 [-]: TEST      R3 0         ; if not R3 then PC := 112
 26 [-]: JMP       112          ; PC := 112
 27 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x6C207447"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LEN       R7 R6        ; R7 := # R6
 30 [-]: LE        0 R1 R7      ; if R1 > R7 then PC := 112
 31 [-]: JMP       112          ; PC := 112
 32 [-]: GETTABLE  R7 R6 R1     ; R7 := R6[R1]
 33 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mMainMission"]
 34 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mKey"]
 35 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
 36 [-]: MOVE      R10 R8       ; R10 := R8
 37 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 38 [-]: TEST      R9 1         ; if R9 then PC := 54
 39 [-]: JMP       54           ; PC := 54
 40 [-]: GETGLOBAL R9 K8        ; R9 := 0x9FAED6BC
 41 [-]: SELF      R10 R8 K9    ; R11 := R8; R10 := R8["0x625DA4BB"]
 42 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 43 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 44 [-]: MOVE      R10 R5       ; R10 := R5
 45 [-]: MOVE      R11 R9       ; R11 := R9
 46 [-]: MOVE      R12 R8       ; R12 := R8
 47 [-]: MOVE      R13 R2       ; R13 := R2
 48 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 49 [-]: GETGLOBAL R10 K10      ; R10 := table
 50 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xE6450C9D"]
 51 [-]: MOVE      R11 R4       ; R11 := R4
 52 [-]: MOVE      R12 R9       ; R12 := R9
 53 [-]: CALL      R10 3 1      ; R10(R11,R12)
 54 [-]: GETTABLE  R10 R7 K12   ; R10 := R7["mMarkedNodes"]
 55 [-]: LEN       R10 R10      ; R10 := # R10
 56 [-]: LT        0 K13 R10    ; if 0 >= R10 then PC := 112
 57 [-]: JMP       112          ; PC := 112
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["0xBB3AACF2"]
 60 [-]: CALL      R10 1 2      ; R10 := R10()
 61 [-]: GETTABLE  R11 R7 K15   ; R11 := R7["mShowFirstExistingMarkedNodeOnly"]
 62 [-]: TEST      R11 0        ; if not R11 then PC := 85
 63 [-]: JMP       85           ; PC := 85
 64 [-]: SELF      R11 R10 K16  ; R12 := R10; R11 := R10["0xCFD8148D"]
 65 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 66 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 67 [-]: GETGLOBAL R12 K17      ; R12 := EMPTY_SYMBOL
 68 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 112
 69 [-]: JMP       112          ; PC := 112
 70 [-]: MOVE      R12 R5       ; R12 := R5
 71 [-]: GETGLOBAL R13 K8       ; R13 := 0x9FAED6BC
 72 [-]: MOVE      R14 R11      ; R14 := R11
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: MOVE      R14 R8       ; R14 := R8
 75 [-]: MOVE      R15 R2       ; R15 := R2
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: GETGLOBAL R12 K10      ; R12 := table
 78 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0xE6450C9D"]
 79 [-]: MOVE      R13 R4       ; R13 := R4
 80 [-]: GETGLOBAL R14 K8       ; R14 := 0x9FAED6BC
 81 [-]: MOVE      R15 R11      ; R15 := R11
 82 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 83 [-]: CALL      R12 0 1      ; R12(R13,...)
 84 [-]: JMP       112          ; PC := 112
 85 [-]: GETGLOBAL R12 K18      ; R12 := 0x63B09107
 86 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 87 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 88 [-]: JMP       110          ; PC := 110
 89 [-]: SELF      R17 R10 K19  ; R18 := R10; R17 := R10["0xDF213CE1"]
 90 [-]: MOVE      R19 R16      ; R19 := R16
 91 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 92 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["name"]
 93 [-]: GETGLOBAL R18 K17      ; R18 := EMPTY_SYMBOL
 94 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 110
 95 [-]: JMP       110          ; PC := 110
 96 [-]: MOVE      R17 R5       ; R17 := R5
 97 [-]: GETGLOBAL R18 K8       ; R18 := 0x9FAED6BC
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CALL      R18 2 2      ; R18 := R18(R19)
100 [-]: MOVE      R19 R8       ; R19 := R8
101 [-]: MOVE      R20 R2       ; R20 := R2
102 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
103 [-]: GETGLOBAL R17 K10      ; R17 := table
104 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["0xE6450C9D"]
105 [-]: MOVE      R18 R4       ; R18 := R4
106 [-]: GETGLOBAL R19 K8       ; R19 := 0x9FAED6BC
107 [-]: MOVE      R20 R16      ; R20 := R16
108 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
109 [-]: CALL      R17 0 1      ; R17(R18,...)
110 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 89; R14 := R15 end
111 [-]: JMP       89           ; PC := 89
112 [-]: LOADK     R17 K4       ; R17 := 1
113 [-]: GETUPVAL  R18 U2       ; R18 := U2
114 [-]: LEN       R18 R18      ; R18 := # R18
115 [-]: LOADK     R19 K4       ; R19 := 1
116 [-]: FORPREP   R17 211      ; R17 -= R19; PC := 211
117 [-]: MOVE      R21 R1       ; R21 := R1
118 [-]: LOADK     R22 K4       ; R22 := 1
119 [-]: LEN       R23 R4       ; R23 := # R4
120 [-]: LOADK     R24 K4       ; R24 := 1
121 [-]: FORPREP   R22 129      ; R22 -= R24; PC := 129
122 [-]: GETTABLE  R26 R4 R25   ; R26 := R4[R25]
123 [-]: GETUPVAL  R27 U2       ; R27 := U2
124 [-]: GETTABLE  R27 R27 R20  ; R27 := R27[R20]
125 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 129
126 [-]: JMP       129          ; PC := 129
127 [-]: MOVE      R21 R0       ; R21 := R0
128 [-]: JMP       130          ; PC := 130
129 [-]: FORLOOP   R22 122      ; R22 += R24; if R22 <= R23 then begin PC := 122; R25 := R22 end
130 [-]: TEST      R21 0        ; if not R21 then PC := 211
131 [-]: JMP       211          ; PC := 211
132 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
133 [-]: GETUPVAL  R27 U3       ; R27 := U3
134 [-]: CALL      R26 2 2      ; R26 := R26(R27)
135 [-]: TEST      R26 1        ; if R26 then PC := 211
136 [-]: JMP       211          ; PC := 211
137 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
138 [-]: GETUPVAL  R27 U1       ; R27 := U1
139 [-]: GETUPVAL  R28 U2       ; R28 := U2
140 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
141 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
142 [-]: CALL      R26 2 2      ; R26 := R26(R27)
143 [-]: TEST      R26 1        ; if R26 then PC := 211
144 [-]: JMP       211          ; PC := 211
145 [-]: GETUPVAL  R26 U3       ; R26 := U3
146 [-]: SELF      R26 R26 K19  ; R27 := R26; R26 := R26["0xDF213CE1"]
147 [-]: GETGLOBAL R28 K21      ; R28 := 0xEC274B1A
148 [-]: GETUPVAL  R29 U2       ; R29 := U2
149 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
150 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
151 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
152 [-]: GETGLOBAL R27 K2       ; R27 := 0x400E7765
153 [-]: MOVE      R28 R26      ; R28 := R26
154 [-]: CALL      R27 2 2      ; R27 := R27(R28)
155 [-]: TEST      R27 1        ; if R27 then PC := 211
156 [-]: JMP       211          ; PC := 211
157 [-]: GETUPVAL  R27 U1       ; R27 := U1
158 [-]: GETUPVAL  R28 U2       ; R28 := U2
159 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
160 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
161 [-]: SELF      R28 R26 K23  ; R29 := R26; R28 := R26["0xA4269DBC"]
162 [-]: CALL      R28 2 2      ; R28 := R28(R29)
163 [-]: SETTABLE  R27 K22 R28  ; R27["radialSector"] := R28
164 [-]: GETUPVAL  R27 U1       ; R27 := U1
165 [-]: GETUPVAL  R28 U2       ; R28 := U2
166 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
167 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
168 [-]: GETUPVAL  R28 U1       ; R28 := U1
169 [-]: GETUPVAL  R29 U2       ; R29 := U2
170 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
171 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
172 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
173 [-]: GETTABLE  R28 R28 K20  ; R28 := R28["name"]
174 [-]: SETTABLE  R27 K20 R28  ; R27["name"] := R28
175 [-]: GETUPVAL  R27 U1       ; R27 := U1
176 [-]: GETUPVAL  R28 U2       ; R28 := U2
177 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
178 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
179 [-]: GETUPVAL  R28 U1       ; R28 := U1
180 [-]: GETUPVAL  R29 U2       ; R29 := U2
181 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
182 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
183 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
184 [-]: GETTABLE  R28 R28 K25  ; R28 := R28["pos"]
185 [-]: SETTABLE  R27 K24 R28  ; R27["position"] := R28
186 [-]: GETUPVAL  R27 U1       ; R27 := U1
187 [-]: GETUPVAL  R28 U2       ; R28 := U2
188 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
189 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
190 [-]: GETGLOBAL R28 K27      ; R28 := string
191 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["0x639C642A"]
192 [-]: GETGLOBAL R29 K29      ; R29 := mMovie
193 [-]: SELF      R29 R29 K30  ; R30 := R29; R29 := R29["0x5DB0BD4"]
194 [-]: GETTABLE  R31 R26 K31  ; R31 := R26["locTag"]
195 [-]: SELF      R31 R31 K32  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
196 [-]: CALL      R31 2 2      ; R31 := R31(R32)
197 [-]: MOVE      R32 R1       ; R32 := R1
198 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
199 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
200 [-]: SETTABLE  R27 K26 R28  ; R27["locName"] := R28
201 [-]: GETUPVAL  R27 U1       ; R27 := U1
202 [-]: GETUPVAL  R28 U2       ; R28 := U2
203 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
204 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
205 [-]: SETTABLE  R27 K33 K34  ; R27["IsQuest"] := "0x0"
206 [-]: GETUPVAL  R27 U1       ; R27 := U1
207 [-]: GETUPVAL  R28 U2       ; R28 := U2
208 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
209 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
210 [-]: SETTABLE  R27 K35 K36  ; R27["KeyType"] := nil
211 [-]: FORLOOP   R17 117      ; R17 += R19; if R17 <= R18 then begin PC := 117; R20 := R17 end
212 [-]: MOVE      R4 R2        ; R4 := R2
213 [-]: GETGLOBAL R27 K37      ; R27 := _G
214 [-]: GETUPVAL  R28 U2       ; R28 := U2
215 [-]: SETTABLE  R27 K38 R28  ; R27["QuestNodeNames"] := R28
216 [-]: RETURN    R0 1         ; return 


; Function #55.1:
;
; Name:            
; Defined at line: 2355
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 10 [-]: SETTABLE  R2 K1 K2     ; R2["IsQuest"] := "0x1"
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 13 [-]: SETTABLE  R2 K3 R1     ; R2["KeyType"] := R1
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 78
 20 [-]: JMP       78           ; PC := 78
 21 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 78
 25 [-]: JMP       78           ; PC := 78
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1["0xA26B0FA3"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: MOVE      R3 R3        ; R3 := R3
 31 [-]: SETTABLE  R2 K1 R3     ; R2["IsQuest"] := R3
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 34 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["radialSector"]
 35 [-]: GETUPVAL  R3 U1        ; R3 := U1
 36 [-]: SETTABLE  R2 K6 R3     ; R2["keyChain"] := R3
 37 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0xA26B0FA3"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: TEST      R2 1         ; if R2 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R2 K7        ; R2 := 0xE6DC43B0
 42 [-]: GETGLOBAL R3 K8        ; R3 := 0x9FAED6BC
 43 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x616C74B6"]
 44 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 45 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 50 [-]: GETGLOBAL R4 K11       ; R4 := string
 51 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0x639C642A"]
 52 [-]: MOVE      R5 R2        ; R5 := R2
 53 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 54 [-]: SETTABLE  R3 K10 R4    ; R3["locName"] := R4
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 57 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 58 [-]: SELF      R4 R1 K14    ; R5 := R1; R4 := R1["0xB8637349"]
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0xA4269DBC"]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: SETTABLE  R3 K13 R4    ; R3["mission"] := R4
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 65 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 66 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 67 [-]: GETUPVAL  R4 U2        ; R4 := U2
 68 [-]: SETTABLE  R3 K16 R4    ; R3["difficulty"] := R4
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 71 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 72 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 73 [-]: GETGLOBAL R4 K18       ; R4 := 0x2C00D429
 74 [-]: SELF      R5 R1 K19    ; R6 := R1; R5 := R1["0x1B252E3C"]
 75 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 76 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 77 [-]: SETTABLE  R3 K17 R4    ; R3["levelKeyName"] := R4
 78 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2434
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: LOADK     R0 K0        ; R0 := 1
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 K0        ; R2 := 1
 11 [-]: FORPREP   R0 23        ; R0 -= R2; PC := 23
 12 [-]: GETUPVAL  R4 U3        ; R4 := U3
 13 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 14 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["isShortcut"]
 15 [-]: TEST      R4 1         ; if R4 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R4 U4        ; R4 := U4
 18 [-]: GETUPVAL  R5 U3        ; R5 := U3
 19 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 20 [-]: CALL      R4 2 1       ; R4(R5)
 21 [-]: GETGLOBAL R4 K2        ; R4 := 0x1BF588C6
 22 [-]: CALL      R4 1 1       ; R4()
 23 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 24 [-]: GETUPVAL  R4 U5        ; R4 := U5
 25 [-]: CALL      R4 1 1       ; R4()
 26 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2451
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SETTABLE  R0 K0 K1     ; R0["visibleLabel"] := "0x1"
  2 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x26581636"]
  4 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
  5 [-]: LOADK     R4 K5        ; R4 := ".Node.Container.Node"
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xF81722A2"]
  9 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["locked"]
 10 [-]: GETGLOBAL R6 K8        ; R6 := shortcutLockedTexture
 11 [-]: GETGLOBAL R7 K9        ; R7 := shortcutUnlockedTexture
 12 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 15 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 17 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 18 [-]: LOADK     R5 K12       ; R5 := "_width"
 19 [-]: LOADK     R6 K13       ; R6 := 84
 20 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 21 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 24 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 25 [-]: LOADK     R5 K14       ; R5 := "_height"
 26 [-]: LOADK     R6 K13       ; R6 := 84
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 30 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 31 [-]: LOADK     R4 K15       ; R4 := "Node.Container.Icon"
 32 [-]: LOADK     R5 K16       ; R5 := "_visible"
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2460
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 41        ; R0 -= R2; PC := 41
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 12 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SETTABLE  R4 K2 K4     ; R4["locked"] := "0x1"
 15 [-]: SETTABLE  R4 K5 K6     ; R4["completed"] := "0x0"
 16 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 17 [-]: TEST      R5 0         ; if not R5 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
 20 [-]: GETTABLE  R6 R4 K8     ; R6 := R4["targetRegion"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["targetRegion"]
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: ADD       R7 R5 K0     ; R7 := R5 + 1
 27 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 28 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x80A80EEB"]
 29 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 30 [-]: GETGLOBAL R8 K10       ; R8 := Lotus_Game
 31 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["RadialRegion_RCS_LOCKED"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: SETTABLE  R4 K2 K6     ; R4["locked"] := "0x0"
 35 [-]: SETTABLE  R4 K5 K4     ; R4["completed"] := "0x1"
 36 [-]: GETUPVAL  R7 U2        ; R7 := U2
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R7 2 1       ; R7(R8)
 39 [-]: GETGLOBAL R7 K12       ; R7 := 0x1BF588C6
 40 [-]: CALL      R7 1 1       ; R7()
 41 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 42 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2485
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 72        ; R0 -= R2; PC := 72
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["radialSector"]
  9 [-]: GETUPVAL  R6 U1        ; R6 := U1
 10 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["region"]
 11 [-]: ADD       R7 R7 K0     ; R7 := R7 + 1
 12 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 13 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6["0x80A80EEB"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["RadialRegion_RCS_LOCKED"]
 17 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 72
 18 [-]: JMP       72           ; PC := 72
 19 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 20 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["NT_HUB"]
 22 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 39
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 25 [-]: GETUPVAL  R8 U2        ; R8 := U2
 26 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["CETUS_NODE_TAG"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 30 [-]: GETUPVAL  R8 U2        ; R8 := U2
 31 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["FORTUNA_NODE_TAG"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 35 [-]: GETUPVAL  R7 U3        ; R7 := U3
 36 [-]: MOVE      R8 R4        ; R8 := R4
 37 [-]: CALL      R7 2 1       ; R7(R8)
 38 [-]: JMP       72           ; PC := 72
 39 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 40 [-]: GETUPVAL  R8 U4        ; R8 := U4
 41 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["FIGHT_NODE_TAG"]
 42 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 49
 43 [-]: JMP       49           ; PC := 49
 44 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: MOVE      R8 R4        ; R8 := R4
 47 [-]: CALL      R7 2 1       ; R7(R8)
 48 [-]: JMP       72           ; PC := 72
 49 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 50 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 51 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["NT_JUNCTION"]
 52 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["complete"]
 55 [-]: TEST      R7 1         ; if R7 then PC := 62
 56 [-]: JMP       62           ; PC := 62
 57 [-]: SETTABLE  R4 K16 K12   ; R4["forceHover"] := "0x1"
 58 [-]: GETUPVAL  R7 U3        ; R7 := U3
 59 [-]: MOVE      R8 R4        ; R8 := R4
 60 [-]: CALL      R7 2 1       ; R7(R8)
 61 [-]: JMP       72           ; PC := 72
 62 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["reconstructionProgress"]
 63 [-]: TEST      R7 0         ; if not R7 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["reconstructionProgress"]
 66 [-]: LT        0 R7 K18     ; if R7 >= 2 then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 69 [-]: GETUPVAL  R7 U3        ; R7 := U3
 70 [-]: MOVE      R8 R4        ; R8 := R4
 71 [-]: CALL      R7 2 1       ; R7(R8)
 72 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 73 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2509
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: UNM       R1 R0        ; R1 := - R0
  2 [-]: DIV       R1 K0 R1     ; R1 := 100 / R1
  3 [-]: DIV       R0 R1 K1     ; R0 := R1 / 75
  4 [-]: LOADK     R1 K2        ; R1 := 1
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 63        ; R1 -= R3; PC := 63
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 11 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["overrideIconSize"]
 12 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 63
 13 [-]: JMP       63           ; PC := 63
 14 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["clipName"]
 15 [-]: LOADK     R7 K6        ; R7 := ".Btn"
 16 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 17 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["clipName"]
 18 [-]: LOADK     R8 K7        ; R8 := ".Node.Container.Icon"
 19 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 20 [-]: GETTABLE  R8 R5 K5     ; R8 := R5["clipName"]
 21 [-]: LOADK     R9 K8        ; R9 := ".Node.Container.Node"
 22 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 23 [-]: GETTABLE  R9 R5 K3     ; R9 := R5["overrideIconSize"]
 24 [-]: MUL       R9 R9 R0     ; R9 := R9 * R0
 25 [-]: MUL       R10 R9 K9    ; R10 := R9 * 2
 26 [-]: MUL       R11 R10 K10  ; R11 := R10 * 1.5
 27 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 28 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 29 [-]: MOVE      R14 R6       ; R14 := R6
 30 [-]: LOADK     R15 K13      ; R15 := "_width"
 31 [-]: MOVE      R16 R9       ; R16 := R9
 32 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 33 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 34 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 35 [-]: MOVE      R14 R6       ; R14 := R6
 36 [-]: LOADK     R15 K14      ; R15 := "_height"
 37 [-]: MOVE      R16 R9       ; R16 := R9
 38 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 39 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 40 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 41 [-]: MOVE      R14 R7       ; R14 := R7
 42 [-]: LOADK     R15 K13      ; R15 := "_width"
 43 [-]: MOVE      R16 R10      ; R16 := R10
 44 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 45 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 46 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 47 [-]: MOVE      R14 R7       ; R14 := R7
 48 [-]: LOADK     R15 K14      ; R15 := "_height"
 49 [-]: MOVE      R16 R10      ; R16 := R10
 50 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 51 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 52 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 53 [-]: MOVE      R14 R8       ; R14 := R8
 54 [-]: LOADK     R15 K13      ; R15 := "_width"
 55 [-]: MOVE      R16 R11      ; R16 := R11
 56 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 57 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 58 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 59 [-]: MOVE      R14 R8       ; R14 := R8
 60 [-]: LOADK     R15 K14      ; R15 := "_height"
 61 [-]: MOVE      R16 R11      ; R16 := R11
 62 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 63 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 64 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2533
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  70

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xECFDD17
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: GETTABLE  R6 R4 K2     ; R6 := R4["clipName"]
 12 [-]: CALL      R5 2 1       ; R5(R6)
 13 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["deco"]
 14 [-]: EQ        1 R5 K0      ; if R5 == nil then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 17 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["deco"]
 18 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mInstance"]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R5 K6        ; R5 := gBackgroundRegion
 23 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x9B0A3887"]
 24 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["deco"]
 25 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mInstance"]
 26 [-]: CALL      R5 3 1       ; R5(R6,R7)
 27 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 10; R2 := R3 end
 28 [-]: JMP       10           ; PC := 10
 29 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 32 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 33 [-]: GETUPVAL  R7 U3        ; R7 := U3
 34 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x7B440FBB"]
 35 [-]: MOVE      R8 R5        ; R8 := R5
 36 [-]: LOADNIL   R9 R9        ; R9 := nil
 37 [-]: GETGLOBAL R10 K9       ; R10 := gGameRules
 38 [-]: SELF      R10 R10 K10  ; R11 := R10; R10 := R10["0xC17093D6"]
 39 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 40 [-]: CALL      R7 0 1       ; R7(R8,...)
 41 [-]: LOADK     R7 K11       ; R7 := 1
 42 [-]: LEN       R8 R5        ; R8 := # R5
 43 [-]: LOADK     R9 K11       ; R9 := 1
 44 [-]: FORPREP   R7 53        ; R7 -= R9; PC := 53
 45 [-]: GETGLOBAL R11 K12      ; R11 := table
 46 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xE6450C9D"]
 47 [-]: MOVE      R12 R6       ; R12 := R6
 48 [-]: GETTABLE  R13 R5 R10   ; R13 := R5[R10]
 49 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["Type"]
 50 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13["0x625DA4BB"]
 51 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 52 [-]: CALL      R11 0 1      ; R11(R12,...)
 53 [-]: FORLOOP   R7 45        ; R7 += R9; if R7 <= R8 then begin PC := 45; R10 := R7 end
 54 [-]: GETUPVAL  R11 U3       ; R11 := U3
 55 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0x52C8784B"]
 56 [-]: GETGLOBAL R12 K17      ; R12 := gGameData
 57 [-]: CALL      R11 2 5      ; R11,R12,R13,R14 := R11(R12)
 58 [-]: GETGLOBAL R15 K4       ; R15 := 0x400E7765
 59 [-]: MOVE      R16 R11      ; R16 := R11
 60 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 61 [-]: TEST      R15 1        ; if R15 then PC := 119
 62 [-]: JMP       119          ; PC := 119
 63 [-]: GETUPVAL  R15 U3       ; R15 := U3
 64 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0x68C19111"]
 65 [-]: GETGLOBAL R16 K17      ; R16 := gGameData
 66 [-]: MOVE      R17 R11      ; R17 := R11
 67 [-]: MOVE      R18 R1       ; R18 := R1
 68 [-]: CALL      R15 4 5      ; R15,R16,R17,R18 := R15(R16,R17,R18)
 69 [-]: GETGLOBAL R19 K4       ; R19 := 0x400E7765
 70 [-]: MOVE      R20 R18      ; R20 := R18
 71 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 72 [-]: TEST      R19 1        ; if R19 then PC := 119
 73 [-]: JMP       119          ; PC := 119
 74 [-]: NEWTABLE  R19 0 7      ; R19 := {}
 75 [-]: GETGLOBAL R20 K20      ; R20 := Lotus_Game
 76 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["0xB880C02"]
 77 [-]: MOVE      R21 R18      ; R21 := R18
 78 [-]: LOADK     R22 K11      ; R22 := 1
 79 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 80 [-]: SETTABLE  R19 K19 R20  ; R19["Key"] := R20
 81 [-]: SETTABLE  R19 K22 R11  ; R19["KeyChain"] := R11
 82 [-]: SETTABLE  R19 K14 R18  ; R19["Type"] := R18
 83 [-]: GETGLOBAL R20 K24      ; R20 := 0xCAA43ABB
 84 [-]: MOVE      R21 R18      ; R21 := R18
 85 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 86 [-]: SETTABLE  R19 K23 R20  ; R19["Anchor"] := R20
 87 [-]: GETGLOBAL R20 K26      ; R20 := 0xE6DC43B0
 88 [-]: GETGLOBAL R21 K27      ; R21 := 0x9FAED6BC
 89 [-]: SELF      R22 R18 K28  ; R23 := R18; R22 := R18["0x616C74B6"]
 90 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 91 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 92 [-]: MOVE      R22 R0       ; R22 := R0
 93 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 94 [-]: SETTABLE  R19 K25 R20  ; R19["Name"] := R20
 95 [-]: GETGLOBAL R20 K26      ; R20 := 0xE6DC43B0
 96 [-]: GETGLOBAL R21 K27      ; R21 := 0x9FAED6BC
 97 [-]: SELF      R22 R18 K30  ; R23 := R18; R22 := R18["0x42300EB5"]
 98 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 99 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
100 [-]: MOVE      R22 R0       ; R22 := R0
101 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
102 [-]: SETTABLE  R19 K29 R20  ; R19["Description"] := R20
103 [-]: SELF      R20 R11 K32  ; R21 := R11; R20 := R11["0xFD6CA2ED"]
104 [-]: SUB       R22 R15 K11  ; R22 := R15 - 1
105 [-]: MOVE      R23 R16      ; R23 := R16
106 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
107 [-]: SETTABLE  R19 K31 R20  ; R19["Difficulty"] := R20
108 [-]: GETUPVAL  R20 U4       ; R20 := U4
109 [-]: EQ        0 R11 R20    ; if R11 ~= R20 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: SELF      R20 R18 K15  ; R21 := R18; R20 := R18["0x625DA4BB"]
112 [-]: CALL      R20 2 2      ; R20 := R20(R21)
113 [-]: MOVE      R20 R5       ; R20 := R5
114 [-]: GETGLOBAL R20 K12      ; R20 := table
115 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["0xE6450C9D"]
116 [-]: MOVE      R21 R5       ; R21 := R5
117 [-]: MOVE      R22 R19      ; R22 := R19
118 [-]: CALL      R20 3 1      ; R20(R21,R22)
119 [-]: LOADK     R20 K11      ; R20 := 1
120 [-]: GETUPVAL  R21 U6       ; R21 := U6
121 [-]: LEN       R21 R21      ; R21 := # R21
122 [-]: LOADK     R22 K11      ; R22 := 1
123 [-]: FORPREP   R20 163      ; R20 -= R22; PC := 163
124 [-]: MOVE      R24 R0       ; R24 := R0
125 [-]: GETUPVAL  R25 U6       ; R25 := U6
126 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
127 [-]: GETTABLE  R25 R25 K33  ; R25 := R25["name"]
128 [-]: GETGLOBAL R26 K4       ; R26 := 0x400E7765
129 [-]: GETUPVAL  R27 U6       ; R27 := U6
130 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
131 [-]: GETTABLE  R27 R27 K34  ; R27 := R27["mission"]
132 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["levelKeyName"]
133 [-]: CALL      R26 2 2      ; R26 := R26(R27)
134 [-]: TEST      R26 1        ; if R26 then PC := 146
135 [-]: JMP       146          ; PC := 146
136 [-]: MOVE      R24 R1       ; R24 := R1
137 [-]: LOADK     R26 K11      ; R26 := 1
138 [-]: LEN       R27 R6       ; R27 := # R6
139 [-]: LOADK     R28 K11      ; R28 := 1
140 [-]: FORPREP   R26 145      ; R26 -= R28; PC := 145
141 [-]: GETTABLE  R30 R6 R29   ; R30 := R6[R29]
142 [-]: EQ        0 R30 R25    ; if R30 ~= R25 then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: MOVE      R24 R0       ; R24 := R0
145 [-]: FORLOOP   R26 141      ; R26 += R28; if R26 <= R27 then begin PC := 141; R29 := R26 end
146 [-]: GETGLOBAL R30 K27      ; R30 := 0x9FAED6BC
147 [-]: MOVE      R31 R25      ; R31 := R25
148 [-]: CALL      R30 2 2      ; R30 := R30(R31)
149 [-]: MOVE      R25 R30      ; R25 := R30
150 [-]: GETUPVAL  R30 U7       ; R30 := U7
151 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["Sectors"]
152 [-]: GETTABLE  R30 R30 R25  ; R30 := R30[R25]
153 [-]: EQ        0 R30 K0     ; if R30 ~= nil then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: GETUPVAL  R31 U6       ; R31 := U6
156 [-]: GETTABLE  R30 R31 R23  ; R30 := R31[R23]
157 [-]: TEST      R24 1        ; if R24 then PC := 163
158 [-]: JMP       163          ; PC := 163
159 [-]: GETUPVAL  R31 U8       ; R31 := U8
160 [-]: SELF      R32 R30 K37  ; R33 := R30; R32 := R30["0xA4269DBC"]
161 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
162 [-]: CALL      R31 0 1      ; R31(R32,...)
163 [-]: FORLOOP   R20 124      ; R20 += R22; if R20 <= R21 then begin PC := 124; R23 := R20 end
164 [-]: NEWTABLE  R31 0 0      ; R31 := {}
165 [-]: LOADNIL   R32 R32      ; R32 := nil
166 [-]: LOADK     R33 K11      ; R33 := 1
167 [-]: LEN       R34 R5       ; R34 := # R5
168 [-]: LOADK     R35 K11      ; R35 := 1
169 [-]: FORPREP   R33 538      ; R33 -= R35; PC := 538
170 [-]: GETGLOBAL R37 K38      ; R37 := 0x1BF588C6
171 [-]: LOADK     R38 K39      ; R38 := 0
172 [-]: CALL      R37 2 1      ; R37(R38)
173 [-]: GETTABLE  R37 R5 R36   ; R37 := R5[R36]
174 [-]: GETTABLE  R38 R37 K14  ; R38 := R37["Type"]
175 [-]: SELF      R39 R38 K15  ; R40 := R38; R39 := R38["0x625DA4BB"]
176 [-]: CALL      R39 2 2      ; R39 := R39(R40)
177 [-]: SELF      R40 R38 K40  ; R41 := R38; R40 := R38["0xA26B0FA3"]
178 [-]: CALL      R40 2 2      ; R40 := R40(R41)
179 [-]: GETUPVAL  R41 U1       ; R41 := U1
180 [-]: GETGLOBAL R42 K27      ; R42 := 0x9FAED6BC
181 [-]: MOVE      R43 R39      ; R43 := R39
182 [-]: CALL      R42 2 2      ; R42 := R42(R43)
183 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
184 [-]: LOADNIL   R42 R42      ; R42 := nil
185 [-]: EQ        1 R41 K0     ; if R41 == nil then PC := 189
186 [-]: JMP       189          ; PC := 189
187 [-]: GETTABLE  R42 R41 K41  ; R42 := R41["radialSector"]
188 [-]: JMP       193          ; PC := 193
189 [-]: GETGLOBAL R43 K20      ; R43 := Lotus_Game
190 [-]: GETTABLE  R43 R43 K42  ; R43 := R43["0xAE448D50"]
191 [-]: CALL      R43 1 2      ; R43 := R43()
192 [-]: MOVE      R42 R43      ; R42 := R43
193 [-]: MOVE      R43 R0       ; R43 := R0
194 [-]: SELF      R44 R38 K43  ; R45 := R38; R44 := R38["0x9B16E6AD"]
195 [-]: CALL      R44 2 2      ; R44 := R44(R45)
196 [-]: GETGLOBAL R45 K44      ; R45 := _T
197 [-]: GETTABLE  R45 R45 K45  ; R45 := R45["REGION_ID_DOJO"]
198 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 227
199 [-]: JMP       227          ; PC := 227
200 [-]: GETUPVAL  R44 U9       ; R44 := U9
201 [-]: GETTABLE  R44 R44 K46  ; R44 := R44["Active"]
202 [-]: TEST      R44 0        ; if not R44 then PC := 210
203 [-]: JMP       210          ; PC := 210
204 [-]: GETGLOBAL R44 K48      ; R44 := 0xEC274B1A
205 [-]: LOADK     R45 K49      ; R45 := "/Lotus/Language/Dojo/DryDockMapLabel"
206 [-]: CALL      R44 2 2      ; R44 := R44(R45)
207 [-]: SETTABLE  R42 K47 R44  ; R42["locTag"] := R44
208 [-]: MOVE      R43 R1       ; R43 := R1
209 [-]: JMP       266          ; PC := 266
210 [-]: GETGLOBAL R44 K50      ; R44 := gPlayerProfileMgr
211 [-]: SELF      R44 R44 K51  ; R45 := R44; R44 := R44["0x21EF7B1A"]
212 [-]: LOADK     R46 K39      ; R46 := 0
213 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
214 [-]: GETGLOBAL R45 K4       ; R45 := 0x400E7765
215 [-]: MOVE      R46 R44      ; R46 := R44
216 [-]: CALL      R45 2 2      ; R45 := R45(R46)
217 [-]: TEST      R45 1        ; if R45 then PC := 266
218 [-]: JMP       266          ; PC := 266
219 [-]: GETGLOBAL R45 K48      ; R45 := 0xEC274B1A
220 [-]: SELF      R46 R44 K52  ; R47 := R44; R46 := R44["0x654F1092"]
221 [-]: CALL      R46 2 2      ; R46 := R46(R47)
222 [-]: SELF      R46 R46 K53  ; R47 := R46; R46 := R46["0x6D176768"]
223 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
224 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
225 [-]: SETTABLE  R42 K47 R45  ; R42["locTag"] := R45
226 [-]: JMP       266          ; PC := 266
227 [-]: TEST      R40 1        ; if R40 then PC := 266
228 [-]: JMP       266          ; PC := 266
229 [-]: GETGLOBAL R45 K54      ; R45 := mMovie
230 [-]: SELF      R45 R45 K55  ; R46 := R45; R45 := R45["0x5DB0BD4"]
231 [-]: GETTABLE  R47 R37 K25  ; R47 := R37["Name"]
232 [-]: MOVE      R48 R1       ; R48 := R1
233 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
234 [-]: GETTABLE  R46 R37 K14  ; R46 := R37["Type"]
235 [-]: SELF      R46 R46 K56  ; R47 := R46; R46 := R46["0xB8637349"]
236 [-]: CALL      R46 2 2      ; R46 := R46(R47)
237 [-]: GETTABLE  R46 R46 K57  ; R46 := R46["uniqueName"]
238 [-]: EQ        1 R46 K58    ; if R46 == "" then PC := 246
239 [-]: JMP       246          ; PC := 246
240 [-]: GETGLOBAL R47 K54      ; R47 := mMovie
241 [-]: SELF      R47 R47 K55  ; R48 := R47; R47 := R47["0x5DB0BD4"]
242 [-]: MOVE      R49 R46      ; R49 := R46
243 [-]: MOVE      R50 R0       ; R50 := R0
244 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
245 [-]: MOVE      R45 R47      ; R45 := R47
246 [-]: GETTABLE  R47 R37 K59  ; R47 := R37["Count"]
247 [-]: TEST      R47 0        ; if not R47 then PC := 262
248 [-]: JMP       262          ; PC := 262
249 [-]: GETTABLE  R47 R37 K59  ; R47 := R37["Count"]
250 [-]: LT        0 K11 R47    ; if 1 >= R47 then PC := 262
251 [-]: JMP       262          ; PC := 262
252 [-]: GETTABLE  R47 R37 K14  ; R47 := R37["Type"]
253 [-]: SELF      R47 R47 K60  ; R48 := R47; R47 := R47["0x49F6C90A"]
254 [-]: CALL      R47 2 2      ; R47 := R47(R48)
255 [-]: TEST      R47 0        ; if not R47 then PC := 262
256 [-]: JMP       262          ; PC := 262
257 [-]: MOVE      R47 R45      ; R47 := R45
258 [-]: LOADK     R48 K61      ; R48 := " ["
259 [-]: GETTABLE  R49 R37 K59  ; R49 := R37["Count"]
260 [-]: LOADK     R50 K62      ; R50 := "]"
261 [-]: CONCAT    R45 R47 R50  ; R45 := R47 .. R48 .. R49 .. R50
262 [-]: GETGLOBAL R47 K48      ; R47 := 0xEC274B1A
263 [-]: MOVE      R48 R45      ; R48 := R45
264 [-]: CALL      R47 2 2      ; R47 := R47(R48)
265 [-]: SETTABLE  R42 K47 R47  ; R42["locTag"] := R47
266 [-]: LOADNIL   R47 R47      ; R47 := nil
267 [-]: TEST      R40 0        ; if not R40 then PC := 273
268 [-]: JMP       273          ; PC := 273
269 [-]: GETTABLE  R48 R42 K34  ; R48 := R42["mission"]
270 [-]: SELF      R48 R48 K37  ; R49 := R48; R48 := R48["0xA4269DBC"]
271 [-]: CALL      R48 2 2      ; R48 := R48(R49)
272 [-]: MOVE      R47 R48      ; R47 := R48
273 [-]: GETTABLE  R48 R37 K14  ; R48 := R37["Type"]
274 [-]: SELF      R48 R48 K63  ; R49 := R48; R48 := R48["0x1B252E3C"]
275 [-]: CALL      R48 2 2      ; R48 := R48(R49)
276 [-]: GETGLOBAL R49 K64      ; R49 := string
277 [-]: GETTABLE  R49 R49 K65  ; R49 := R49["0xDE44F664"]
278 [-]: MOVE      R50 R48      ; R50 := R48
279 [-]: LOADK     R51 K66      ; R51 := "Hub"
280 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
281 [-]: TEST      R49 0        ; if not R49 then PC := 287
282 [-]: JMP       287          ; PC := 287
283 [-]: GETGLOBAL R49 K20      ; R49 := Lotus_Game
284 [-]: GETTABLE  R49 R49 K68  ; R49 := R49["NT_HUB"]
285 [-]: SETTABLE  R42 K67 R49  ; R42["nodeType"] := R49
286 [-]: JMP       290          ; PC := 290
287 [-]: GETGLOBAL R49 K20      ; R49 := Lotus_Game
288 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["NT_MISSION"]
289 [-]: SETTABLE  R42 K67 R49  ; R42["nodeType"] := R49
290 [-]: SETTABLE  R42 K70 K71  ; R42["unlocked"] := "0x1"
291 [-]: GETTABLE  R49 R37 K14  ; R49 := R37["Type"]
292 [-]: SELF      R49 R49 K56  ; R50 := R49; R49 := R49["0xB8637349"]
293 [-]: CALL      R49 2 2      ; R49 := R49(R50)
294 [-]: SELF      R49 R49 K37  ; R50 := R49; R49 := R49["0xA4269DBC"]
295 [-]: CALL      R49 2 2      ; R49 := R49(R50)
296 [-]: SETTABLE  R42 K34 R49  ; R42["mission"] := R49
297 [-]: GETTABLE  R49 R42 K34  ; R49 := R42["mission"]
298 [-]: GETGLOBAL R50 K72      ; R50 := 0x2C00D429
299 [-]: GETTABLE  R51 R37 K14  ; R51 := R37["Type"]
300 [-]: SELF      R51 R51 K63  ; R52 := R51; R51 := R51["0x1B252E3C"]
301 [-]: CALL      R51 2 0      ; R51,... := R51(R52)
302 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
303 [-]: SETTABLE  R49 K35 R50  ; R49["levelKeyName"] := R50
304 [-]: GETTABLE  R49 R37 K31  ; R49 := R37["Difficulty"]
305 [-]: EQ        1 R49 K0     ; if R49 == nil then PC := 310
306 [-]: JMP       310          ; PC := 310
307 [-]: GETTABLE  R49 R42 K34  ; R49 := R42["mission"]
308 [-]: GETTABLE  R50 R37 K31  ; R50 := R37["Difficulty"]
309 [-]: SETTABLE  R49 K73 R50  ; R49["difficulty"] := R50
310 [-]: GETTABLE  R49 R37 K22  ; R49 := R37["KeyChain"]
311 [-]: SETTABLE  R42 K74 R49  ; R42["keyChain"] := R49
312 [-]: LOADNIL   R49 R49      ; R49 := nil
313 [-]: GETTABLE  R50 R37 K75  ; R50 := R37["RegionOverride"]
314 [-]: EQ        1 R50 K0     ; if R50 == nil then PC := 318
315 [-]: JMP       318          ; PC := 318
316 [-]: GETTABLE  R49 R37 K75  ; R49 := R37["RegionOverride"]
317 [-]: JMP       322          ; PC := 322
318 [-]: GETTABLE  R50 R37 K14  ; R50 := R37["Type"]
319 [-]: SELF      R50 R50 K43  ; R51 := R50; R50 := R50["0x9B16E6AD"]
320 [-]: CALL      R50 2 2      ; R50 := R50(R51)
321 [-]: MOVE      R49 R50      ; R49 := R50
322 [-]: GETUPVAL  R50 U10      ; R50 := U10
323 [-]: LEN       R50 R50      ; R50 := # R50
324 [-]: LE        0 R50 R49    ; if R50 > R49 then PC := 340
325 [-]: JMP       340          ; PC := 340
326 [-]: GETGLOBAL R50 K76      ; R50 := 0x93B1256B
327 [-]: LOADK     R51 K77      ; R51 := "invalid region specified for key="
328 [-]: GETGLOBAL R52 K27      ; R52 := 0x9FAED6BC
329 [-]: GETTABLE  R53 R37 K14  ; R53 := R37["Type"]
330 [-]: SELF      R53 R53 K63  ; R54 := R53; R53 := R53["0x1B252E3C"]
331 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
332 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
333 [-]: CONCAT    R51 R51 R52  ; R51 := R51 .. R52
334 [-]: CALL      R50 2 1      ; R50(R51)
335 [-]: GETUPVAL  R50 U11      ; R50 := U11
336 [-]: SELF      R50 R50 K78  ; R51 := R50; R50 := R50["0xDF213CE1"]
337 [-]: MOVE      R52 R39      ; R52 := R39
338 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
339 [-]: GETTABLE  R49 R50 K79  ; R49 := R50["region"]
340 [-]: GETGLOBAL R50 K4       ; R50 := 0x400E7765
341 [-]: MOVE      R51 R41      ; R51 := R41
342 [-]: CALL      R50 2 2      ; R50 := R50(R51)
343 [-]: TEST      R50 0        ; if not R50 then PC := 451
344 [-]: JMP       451          ; PC := 451
345 [-]: GETTABLE  R50 R37 K14  ; R50 := R37["Type"]
346 [-]: SELF      R50 R50 K80  ; R51 := R50; R50 := R50["0x8B598ED4"]
347 [-]: GETUPVAL  R52 U12      ; R52 := U12
348 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
349 [-]: TEST      R50 1        ; if R50 then PC := 451
350 [-]: JMP       451          ; PC := 451
351 [-]: GETGLOBAL R50 K44      ; R50 := _T
352 [-]: GETTABLE  R50 R50 K81  ; R50 := R50["REGION_ID_MOON"]
353 [-]: EQ        0 R49 R50    ; if R49 ~= R50 then PC := 361
354 [-]: JMP       361          ; PC := 361
355 [-]: GETUPVAL  R50 U13      ; R50 := U13
356 [-]: GETGLOBAL R51 K44      ; R51 := _T
357 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["REGION_ID_MOON"]
358 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
359 [-]: EQ        1 R50 K71    ; if R50 == "0x1" then PC := 451
360 [-]: JMP       451          ; PC := 451
361 [-]: TEST      R43 0        ; if not R43 then PC := 368
362 [-]: JMP       368          ; PC := 368
363 [-]: GETGLOBAL R50 K48      ; R50 := 0xEC274B1A
364 [-]: LOADK     R51 K82      ; R51 := "CrewBattleNodeDojo"
365 [-]: CALL      R50 2 2      ; R50 := R50(R51)
366 [-]: SETTABLE  R42 K33 R50  ; R42["name"] := R50
367 [-]: JMP       377          ; PC := 377
368 [-]: GETGLOBAL R50 K48      ; R50 := 0xEC274B1A
369 [-]: GETTABLE  R51 R37 K14  ; R51 := R37["Type"]
370 [-]: SELF      R51 R51 K63  ; R52 := R51; R51 := R51["0x1B252E3C"]
371 [-]: CALL      R51 2 2      ; R51 := R51(R52)
372 [-]: GETUPVAL  R52 U3       ; R52 := U3
373 [-]: GETTABLE  R52 R52 K83  ; R52 := R52["KEY_TAG"]
374 [-]: CONCAT    R51 R51 R52  ; R51 := R51 .. R52
375 [-]: CALL      R50 2 2      ; R50 := R50(R51)
376 [-]: SETTABLE  R42 K33 R50  ; R42["name"] := R50
377 [-]: GETGLOBAL R50 K64      ; R50 := string
378 [-]: GETTABLE  R50 R50 K65  ; R50 := R50["0xDE44F664"]
379 [-]: MOVE      R51 R48      ; R51 := R48
380 [-]: LOADK     R52 K66      ; R52 := "Hub"
381 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
382 [-]: TEST      R50 0        ; if not R50 then PC := 388
383 [-]: JMP       388          ; PC := 388
384 [-]: GETGLOBAL R50 K20      ; R50 := Lotus_Game
385 [-]: GETTABLE  R50 R50 K68  ; R50 := R50["NT_HUB"]
386 [-]: SETTABLE  R42 K67 R50  ; R42["nodeType"] := R50
387 [-]: JMP       391          ; PC := 391
388 [-]: GETGLOBAL R50 K20      ; R50 := Lotus_Game
389 [-]: GETTABLE  R50 R50 K69  ; R50 := R50["NT_MISSION"]
390 [-]: SETTABLE  R42 K67 R50  ; R42["nodeType"] := R50
391 [-]: SETTABLE  R42 K79 R49  ; R42["region"] := R49
392 [-]: GETTABLE  R50 R42 K79  ; R50 := R42["region"]
393 [-]: GETTABLE  R50 R31 R50  ; R50 := R31[R50]
394 [-]: EQ        0 R50 K0     ; if R50 ~= nil then PC := 398
395 [-]: JMP       398          ; PC := 398
396 [-]: GETTABLE  R50 R42 K79  ; R50 := R42["region"]
397 [-]: SETTABLE  R31 R50 K39  ; R31[R50] := 0
398 [-]: GETTABLE  R50 R37 K14  ; R50 := R37["Type"]
399 [-]: SELF      R50 R50 K84  ; R51 := R50; R50 := R50["0x387DBBEB"]
400 [-]: CALL      R50 2 2      ; R50 := R50(R51)
401 [-]: GETTABLE  R51 R50 K85  ; R51 := R50["x"]
402 [-]: EQ        1 R51 K39    ; if R51 == 0 then PC := 412
403 [-]: JMP       412          ; PC := 412
404 [-]: GETTABLE  R51 R50 K86  ; R51 := R50["y"]
405 [-]: EQ        1 R51 K39    ; if R51 == 0 then PC := 412
406 [-]: JMP       412          ; PC := 412
407 [-]: GETTABLE  R51 R50 K87  ; R51 := R50["z"]
408 [-]: EQ        1 R51 K39    ; if R51 == 0 then PC := 412
409 [-]: JMP       412          ; PC := 412
410 [-]: SETTABLE  R42 K88 R50  ; R42["pos"] := R50
411 [-]: JMP       428          ; PC := 428
412 [-]: GETUPVAL  R51 U10      ; R51 := U10
413 [-]: GETTABLE  R52 R42 K79  ; R52 := R42["region"]
414 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
415 [-]: GETTABLE  R51 R51 K88  ; R51 := R51["pos"]
416 [-]: GETGLOBAL R52 K89      ; R52 := 0x221C9700
417 [-]: GETTABLE  R53 R42 K79  ; R53 := R42["region"]
418 [-]: GETTABLE  R53 R31 R53  ; R53 := R31[R53]
419 [-]: MUL       R53 R53 K90  ; R53 := R53 * 0.019999999552965
420 [-]: GETTABLE  R54 R42 K79  ; R54 := R42["region"]
421 [-]: GETTABLE  R54 R31 R54  ; R54 := R31[R54]
422 [-]: UNM       R54 R54      ; R54 := - R54
423 [-]: MUL       R54 R54 K90  ; R54 := R54 * 0.019999999552965
424 [-]: LOADK     R55 K39      ; R55 := 0
425 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
426 [-]: ADD       R51 R51 R52  ; R51 := R51 + R52
427 [-]: SETTABLE  R42 K88 R51  ; R42["pos"] := R51
428 [-]: GETTABLE  R51 R37 K91  ; R51 := R37["DecoOverride"]
429 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 435
430 [-]: JMP       435          ; PC := 435
431 [-]: GETTABLE  R51 R37 K91  ; R51 := R37["DecoOverride"]
432 [-]: SETTABLE  R42 K3 R51   ; R42["deco"] := R51
433 [-]: GETTABLE  R51 R37 K93  ; R51 := R37["DecoScale"]
434 [-]: SETTABLE  R42 K92 R51  ; R42["scale"] := R51
435 [-]: GETTABLE  R51 R37 K94  ; R51 := R37["NodeOffset"]
436 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 442
437 [-]: JMP       442          ; PC := 442
438 [-]: GETTABLE  R51 R42 K88  ; R51 := R42["pos"]
439 [-]: GETTABLE  R52 R37 K94  ; R52 := R37["NodeOffset"]
440 [-]: ADD       R51 R51 R52  ; R51 := R51 + R52
441 [-]: SETTABLE  R42 K88 R51  ; R42["pos"] := R51
442 [-]: GETTABLE  R51 R42 K79  ; R51 := R42["region"]
443 [-]: GETTABLE  R52 R42 K79  ; R52 := R42["region"]
444 [-]: GETTABLE  R52 R31 R52  ; R52 := R31[R52]
445 [-]: ADD       R52 R52 K11  ; R52 := R52 + 1
446 [-]: SETTABLE  R31 R51 R52  ; R31[R51] := R52
447 [-]: GETUPVAL  R51 U8       ; R51 := U8
448 [-]: MOVE      R52 R42      ; R52 := R42
449 [-]: CALL      R51 2 2      ; R51 := R51(R52)
450 [-]: MOVE      R41 R51      ; R41 := R51
451 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
452 [-]: MOVE      R52 R41      ; R52 := R41
453 [-]: CALL      R51 2 2      ; R51 := R51(R52)
454 [-]: TEST      R51 1        ; if R51 then PC := 538
455 [-]: JMP       538          ; PC := 538
456 [-]: TEST      R40 1        ; if R40 then PC := 471
457 [-]: JMP       471          ; PC := 471
458 [-]: GETTABLE  R51 R42 K33  ; R51 := R42["name"]
459 [-]: SETTABLE  R41 K33 R51  ; R41["name"] := R51
460 [-]: GETGLOBAL R51 K64      ; R51 := string
461 [-]: GETTABLE  R51 R51 K96  ; R51 := R51["0x639C642A"]
462 [-]: GETGLOBAL R52 K54      ; R52 := mMovie
463 [-]: SELF      R52 R52 K55  ; R53 := R52; R52 := R52["0x5DB0BD4"]
464 [-]: GETTABLE  R54 R42 K47  ; R54 := R42["locTag"]
465 [-]: SELF      R54 R54 K97  ; R55 := R54; R54 := R54["0x5EC7A3D2"]
466 [-]: CALL      R54 2 2      ; R54 := R54(R55)
467 [-]: MOVE      R55 R0       ; R55 := R0
468 [-]: CALL      R52 4 0      ; R52,... := R52(R53,R54,R55)
469 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
470 [-]: SETTABLE  R41 K95 R51  ; R41["locName"] := R51
471 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
472 [-]: GETTABLE  R52 R37 K22  ; R52 := R37["KeyChain"]
473 [-]: CALL      R51 2 2      ; R51 := R51(R52)
474 [-]: TEST      R51 1        ; if R51 then PC := 478
475 [-]: JMP       478          ; PC := 478
476 [-]: SETTABLE  R41 K98 K99  ; R41["completed"] := "0x0"
477 [-]: JMP       518          ; PC := 518
478 [-]: GETTABLE  R51 R41 K98  ; R51 := R41["completed"]
479 [-]: TEST      R51 1        ; if R51 then PC := 518
480 [-]: JMP       518          ; PC := 518
481 [-]: GETTABLE  R51 R37 K14  ; R51 := R37["Type"]
482 [-]: SELF      R51 R51 K15  ; R52 := R51; R51 := R51["0x625DA4BB"]
483 [-]: CALL      R51 2 2      ; R51 := R51(R52)
484 [-]: SELF      R52 R39 K100 ; R53 := R39; R52 := R39["0x315E860F"]
485 [-]: CALL      R52 2 2      ; R52 := R52(R53)
486 [-]: TEST      R52 0        ; if not R52 then PC := 518
487 [-]: JMP       518          ; PC := 518
488 [-]: EQ        0 R32 K0     ; if R32 ~= nil then PC := 499
489 [-]: JMP       499          ; PC := 499
490 [-]: GETGLOBAL R52 K50      ; R52 := gPlayerProfileMgr
491 [-]: SELF      R52 R52 K51  ; R53 := R52; R52 := R52["0x21EF7B1A"]
492 [-]: LOADK     R54 K39      ; R54 := 0
493 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
494 [-]: SELF      R52 R52 K52  ; R53 := R52; R52 := R52["0x654F1092"]
495 [-]: CALL      R52 2 2      ; R52 := R52(R53)
496 [-]: SELF      R52 R52 K101 ; R53 := R52; R52 := R52["0xC92135A6"]
497 [-]: CALL      R52 2 2      ; R52 := R52(R53)
498 [-]: MOVE      R32 R52      ; R32 := R52
499 [-]: GETGLOBAL R52 K1       ; R52 := 0xECFDD17
500 [-]: MOVE      R53 R32      ; R53 := R32
501 [-]: CALL      R52 2 4      ; R52,R53,R54 := R52(R53)
502 [-]: JMP       516          ; PC := 516
503 [-]: GETTABLE  R57 R56 K102 ; R57 := R56["mTag"]
504 [-]: EQ        0 R57 R51    ; if R57 ~= R51 then PC := 516
505 [-]: JMP       516          ; PC := 516
506 [-]: GETTABLE  R57 R56 K103 ; R57 := R56["mCompletes"]
507 [-]: LT        1 K39 R57    ; if 0 < R57 then PC := 510
508 [-]: JMP       510          ; PC := 510
509 [-]: MOVE      R57 R0       ; R57 := R0
510 [-]: MOVE      R57 R1       ; R57 := R1
511 [-]: SETTABLE  R41 K98 R57  ; R41["completed"] := R57
512 [-]: GETTABLE  R57 R41 K41  ; R57 := R41["radialSector"]
513 [-]: GETTABLE  R58 R56 K103 ; R58 := R56["mCompletes"]
514 [-]: SETTABLE  R57 K104 R58 ; R57["missionsCompleted"] := R58
515 [-]: JMP       518          ; PC := 518
516 [-]: TFORLOOP  R52 2        ; R55,R56 :=  R52(R53,R54); if R55 ~= nil then begin PC = 503; R54 := R55 end
517 [-]: JMP       503          ; PC := 503
518 [-]: SETTABLE  R41 K105 K99 ; R41["locked"] := "0x0"
519 [-]: SETTABLE  R41 K106 K71 ; R41["visibleLabel"] := "0x1"
520 [-]: SETTABLE  R41 K107 K99 ; R41["isEmpty"] := "0x0"
521 [-]: TEST      R40 0        ; if not R40 then PC := 524
522 [-]: JMP       524          ; PC := 524
523 [-]: SETTABLE  R41 K108 R47 ; R41["displayMissionOverride"] := R47
524 [-]: GETTABLE  R57 R37 K31  ; R57 := R37["Difficulty"]
525 [-]: EQ        1 R57 K0     ; if R57 == nil then PC := 538
526 [-]: JMP       538          ; PC := 538
527 [-]: GETTABLE  R57 R41 K41  ; R57 := R41["radialSector"]
528 [-]: GETTABLE  R57 R57 K34  ; R57 := R57["mission"]
529 [-]: GETTABLE  R58 R37 K31  ; R58 := R37["Difficulty"]
530 [-]: SETTABLE  R57 K73 R58  ; R57["difficulty"] := R58
531 [-]: GETUPVAL  R57 U0       ; R57 := U0
532 [-]: GETTABLE  R58 R41 K109 ; R58 := R41["id"]
533 [-]: GETTABLE  R57 R57 R58  ; R57 := R57[R58]
534 [-]: GETTABLE  R57 R57 K41  ; R57 := R57["radialSector"]
535 [-]: GETTABLE  R57 R57 K34  ; R57 := R57["mission"]
536 [-]: GETTABLE  R58 R37 K31  ; R58 := R37["Difficulty"]
537 [-]: SETTABLE  R57 K73 R58  ; R57["difficulty"] := R58
538 [-]: FORLOOP   R33 170      ; R33 += R35; if R33 <= R34 then begin PC := 170; R36 := R33 end
539 [-]: GETUPVAL  R57 U9       ; R57 := U9
540 [-]: GETTABLE  R57 R57 K46  ; R57 := R57["Active"]
541 [-]: TEST      R57 1        ; if R57 then PC := 618
542 [-]: JMP       618          ; PC := 618
543 [-]: GETGLOBAL R57 K50      ; R57 := gPlayerProfileMgr
544 [-]: SELF      R57 R57 K51  ; R58 := R57; R57 := R57["0x21EF7B1A"]
545 [-]: LOADK     R59 K39      ; R59 := 0
546 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
547 [-]: SELF      R57 R57 K52  ; R58 := R57; R57 := R57["0x654F1092"]
548 [-]: CALL      R57 2 2      ; R57 := R57(R58)
549 [-]: SELF      R57 R57 K110 ; R58 := R57; R57 := R57["0x2D0B8A86"]
550 [-]: CALL      R57 2 2      ; R57 := R57(R58)
551 [-]: GETTABLE  R57 R57 K111 ; R57 := R57["mFeaturedGuilds"]
552 [-]: LOADK     R58 K11      ; R58 := 1
553 [-]: LEN       R59 R57      ; R59 := # R57
554 [-]: LOADK     R60 K11      ; R60 := 1
555 [-]: FORPREP   R58 617      ; R58 -= R60; PC := 617
556 [-]: GETGLOBAL R62 K20      ; R62 := Lotus_Game
557 [-]: GETTABLE  R62 R62 K42  ; R62 := R62["0xAE448D50"]
558 [-]: CALL      R62 1 2      ; R62 := R62()
559 [-]: GETUPVAL  R63 U14      ; R63 := U14
560 [-]: GETTABLE  R63 R63 K112 ; R63 := R63["0xF81722A2"]
561 [-]: GETUPVAL  R64 U14      ; R64 := U14
562 [-]: GETTABLE  R64 R64 K113 ; R64 := R64["0x36BA5F48"]
563 [-]: CALL      R64 1 2      ; R64 := R64()
564 [-]: GETGLOBAL R65 K48      ; R65 := 0xEC274B1A
565 [-]: LOADK     R66 K114     ; R66 := "/Lotus/Language/Clan/Clan_DOJO"
566 [-]: CALL      R65 2 2      ; R65 := R65(R66)
567 [-]: GETGLOBAL R66 K48      ; R66 := 0xEC274B1A
568 [-]: GETTABLE  R67 R57 R61  ; R67 := R57[R61]
569 [-]: GETTABLE  R67 R67 K115 ; R67 := R67["mName"]
570 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
571 [-]: CALL      R63 0 2      ; R63 := R63(R64,...)
572 [-]: SETTABLE  R62 K47 R63  ; R62["locTag"] := R63
573 [-]: GETGLOBAL R63 K20      ; R63 := Lotus_Game
574 [-]: GETTABLE  R63 R63 K68  ; R63 := R63["NT_HUB"]
575 [-]: SETTABLE  R62 K67 R63  ; R62["nodeType"] := R63
576 [-]: SETTABLE  R62 K70 K71  ; R62["unlocked"] := "0x1"
577 [-]: GETGLOBAL R63 K48      ; R63 := 0xEC274B1A
578 [-]: LOADK     R64 K116     ; R64 := "FeaturedDojoTier"
579 [-]: MOVE      R65 R61      ; R65 := R61
580 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
581 [-]: CALL      R63 2 2      ; R63 := R63(R64)
582 [-]: SETTABLE  R62 K33 R63  ; R62["name"] := R63
583 [-]: GETUPVAL  R63 U10      ; R63 := U10
584 [-]: GETTABLE  R63 R63 K117 ; R63 := R63[14]
585 [-]: GETTABLE  R63 R63 K88  ; R63 := R63["pos"]
586 [-]: GETGLOBAL R64 K118     ; R64 := 0x4CBE9A09
587 [-]: GETGLOBAL R65 K89      ; R65 := 0x221C9700
588 [-]: LOADK     R66 K39      ; R66 := 0
589 [-]: LOADK     R67 K119     ; R67 := -0.15999999642372
590 [-]: LOADK     R68 K39      ; R68 := 0
591 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
592 [-]: GETGLOBAL R66 K120     ; R66 := 0x1E4F6281
593 [-]: LOADK     R67 K39      ; R67 := 0
594 [-]: LOADK     R68 K39      ; R68 := 0
595 [-]: LEN       R69 R57      ; R69 := # R57
596 [-]: SUB       R69 R69 K11  ; R69 := R69 - 1
597 [-]: DIV       R69 R69 K121 ; R69 := R69 / 2
598 [-]: SUB       R69 R69 R61  ; R69 := R69 - R61
599 [-]: ADD       R69 R69 K11  ; R69 := R69 + 1
600 [-]: MUL       R69 K122 R69 ; R69 := -30 * R69
601 [-]: CALL      R66 4 0      ; R66,... := R66(R67,R68,R69)
602 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
603 [-]: ADD       R63 R63 R64  ; R63 := R63 + R64
604 [-]: SETTABLE  R62 K88 R63  ; R62["pos"] := R63
605 [-]: GETUPVAL  R63 U8       ; R63 := U8
606 [-]: MOVE      R64 R62      ; R64 := R62
607 [-]: NEWTABLE  R65 0 3      ; R65 := {}
608 [-]: GETTABLE  R66 R57 R61  ; R66 := R57[R61]
609 [-]: GETTABLE  R66 R66 K124 ; R66 := R66["mId"]
610 [-]: GETTABLE  R66 R66 K124 ; R66 := R66["mId"]
611 [-]: SETTABLE  R65 K123 R66 ; R65["guildId"] := R66
612 [-]: GETTABLE  R66 R57 R61  ; R66 := R57[R61]
613 [-]: GETTABLE  R66 R66 K126 ; R66 := R66["mTier"]
614 [-]: SETTABLE  R65 K125 R66 ; R65["clanTier"] := R66
615 [-]: SETTABLE  R65 K127 K128; R65["overrideIconSize"] := 120
616 [-]: CALL      R63 3 1      ; R63(R64,R65)
617 [-]: FORLOOP   R58 556      ; R58 += R60; if R58 <= R59 then begin PC := 556; R61 := R58 end
618 [-]: GETUPVAL  R63 U15      ; R63 := U15
619 [-]: CALL      R63 1 1      ; R63()
620 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2781
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["NodeA"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["position"]
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["NodeA"]
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["position"]
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["controlPointA"]
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["position"]
  7 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["controlPointB"]
  8 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["position"]
  9 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["NodeB"]
 10 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["position"]
 11 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeB"]
 12 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["position"]
 13 [-]: NEWTABLE  R7 6 0       ; R7 := {}
 14 [-]: MOVE      R8 R1        ; R8 := R1
 15 [-]: MOVE      R9 R2        ; R9 := R2
 16 [-]: MOVE      R10 R3       ; R10 := R3
 17 [-]: MOVE      R11 R4       ; R11 := R4
 18 [-]: MOVE      R12 R5       ; R12 := R5
 19 [-]: MOVE      R13 R6       ; R13 := R6
 20 [-]: SETLIST   R7 6 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 6
 21 [-]: RETURN    R7 2         ; return R7
 22 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2791
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x221C9700
  2 [-]: CALL      R5 1 2       ; R5 := R5()
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x518098BD
  4 [-]: MOVE      R7 R5        ; R7 := R5
  5 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["position"]
  6 [-]: GETTABLE  R9 R1 K2     ; R9 := R1["position"]
  7 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
  8 [-]: GETGLOBAL R6 K3        ; R6 := 0x96BEA6B
  9 [-]: MOVE      R7 R5        ; R7 := R5
 10 [-]: GETTABLE  R8 R1 K2     ; R8 := R1["position"]
 11 [-]: MUL       R9 R5 R0     ; R9 := R5 * R0
 12 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 13 [-]: GETGLOBAL R6 K4        ; R6 := 0xEDD2EBFF
 14 [-]: MOVE      R7 R3        ; R7 := R3
 15 [-]: MOVE      R8 R5        ; R8 := R5
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: SETTABLE  R5 K5 K6     ; R5["x"] := 0
 18 [-]: SETTABLE  R5 K7 K6     ; R5["y"] := 0
 19 [-]: SETTABLE  R5 K8 R4     ; R5["z"] := R4
 20 [-]: GETGLOBAL R7 K3        ; R7 := 0x96BEA6B
 21 [-]: MOVE      R8 R5        ; R8 := R5
 22 [-]: MOVE      R9 R3        ; R9 := R3
 23 [-]: GETGLOBAL R10 K9       ; R10 := 0x4CBE9A09
 24 [-]: MOVE      R11 R5       ; R11 := R5
 25 [-]: MOVE      R12 R6       ; R12 := R6
 26 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 27 [-]: CALL      R7 0 1       ; R7(R8,...)
 28 [-]: RETURN    R5 2         ; return R5
 29 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2803
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x1BF588C6
  2 [-]: LOADK     R3 K1        ; R3 := 0
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: LOADNIL   R2 R2        ; R2 := nil
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["position"]
  6 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["position"]
  7 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0x458357BC
  9 [-]: MOVE      R5 R3        ; R5 := R3
 10 [-]: CALL      R4 2 1       ; R4(R5)
 11 [-]: LOADK     R4 K4        ; R4 := 10
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: LOADK     R6 K5        ; R6 := 1
 14 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["RelatedNodes"]
 15 [-]: LEN       R7 R7        ; R7 := # R7
 16 [-]: LOADK     R8 K5        ; R8 := 1
 17 [-]: FORPREP   R6 44        ; R6 -= R8; PC := 44
 18 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["RelatedNodes"]
 19 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 20 [-]: GETTABLE  R11 R1 K7    ; R11 := R1["name"]
 21 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 44
 22 [-]: JMP       44           ; PC := 44
 23 [-]: GETUPVAL  R11 U0       ; R11 := U0
 24 [-]: GETGLOBAL R12 K8       ; R12 := 0x9FAED6BC
 25 [-]: MOVE      R13 R10      ; R13 := R10
 26 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 27 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 28 [-]: EQ        1 R11 K9     ; if R11 == nil then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["position"]
 31 [-]: GETTABLE  R13 R11 K2   ; R13 := R11["position"]
 32 [-]: SUB       R5 R12 R13   ; R5 := R12 - R13
 33 [-]: GETGLOBAL R12 K3       ; R12 := 0x458357BC
 34 [-]: MOVE      R13 R5       ; R13 := R5
 35 [-]: CALL      R12 2 1      ; R12(R13)
 36 [-]: GETGLOBAL R12 K10      ; R12 := 0xDBA27FAF
 37 [-]: MOVE      R13 R3       ; R13 := R3
 38 [-]: MOVE      R14 R5       ; R14 := R5
 39 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 40 [-]: LT        0 R12 R4     ; if R12 >= R4 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R4 R12       ; R4 := R12
 43 [-]: MOVE      R2 R11       ; R2 := R11
 44 [-]: FORLOOP   R6 18        ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
 45 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 64
 46 [-]: JMP       64           ; PC := 64
 47 [-]: GETTABLE  R13 R2 K2    ; R13 := R2["position"]
 48 [-]: GETTABLE  R14 R0 K11   ; R14 := R0["isShortcut"]
 49 [-]: TEST      R14 0        ; if not R14 then PC := 62
 50 [-]: JMP       62           ; PC := 62
 51 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["isShortcut"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["position"]
 55 [-]: SUB       R14 R13 R14  ; R14 := R13 - R14
 56 [-]: GETGLOBAL R15 K3       ; R15 := 0x458357BC
 57 [-]: MOVE      R16 R14      ; R16 := R14
 58 [-]: CALL      R15 2 1      ; R15(R16)
 59 [-]: GETTABLE  R15 R0 K2    ; R15 := R0["position"]
 60 [-]: MUL       R16 R14 K12  ; R16 := R14 * 0.050000000745058
 61 [-]: ADD       R13 R15 R16  ; R13 := R15 + R16
 62 [-]: RETURN    R13 2        ; return R13
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADNIL   R15 R15      ; R15 := nil
 65 [-]: RETURN    R15 2        ; return R15
 66 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2840
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Instance"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 105
  5 [-]: JMP       105          ; PC := 105
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x221C9700
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["NodeA"]
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 10 [-]: TEST      R2 0         ; if not R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["NodeB"]
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 14 [-]: SETTABLE  R0 K3 R2     ; R0["IsSurfaceConnection"] := R2
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["NodeA"]
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["radialSector"]
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["region"]
 19 [-]: ADD       R3 R3 K9     ; R3 := R3 + 1
 20 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 23 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["radialSector"]
 24 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["region"]
 25 [-]: ADD       R4 R4 K9     ; R4 := R4 + 1
 26 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 27 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2["0x8EEB099D"]
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: CALL      R4 3 1       ; R4(R5,R6)
 30 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["IsSurfaceConnection"]
 31 [-]: TEST      R4 0         ; if not R4 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 34 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 35 [-]: GETUPVAL  R6 U2        ; R6 := U2
 36 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["NodeA"]
 37 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["radialSector"]
 38 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["region"]
 39 [-]: ADD       R7 R7 K9     ; R7 := R7 + 1
 40 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 41 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["pos"]
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 46 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 47 [-]: GETGLOBAL R6 K13       ; R6 := ZERO_VECTOR
 48 [-]: LOADK     R7 K14       ; R7 := 0
 49 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 50 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 52 [-]: TEST      R4 0         ; if not R4 then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["NodeB"]
 55 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 56 [-]: TEST      R4 0         ; if not R4 then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Instance"]
 62 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x5BD03F6B"]
 63 [-]: MOVE      R7 R4        ; R7 := R4
 64 [-]: CALL      R5 3 1       ; R5(R6,R7)
 65 [-]: JMP       105          ; PC := 105
 66 [-]: GETUPVAL  R5 U4        ; R5 := U4
 67 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 68 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 69 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 70 [-]: EQ        0 R5 K17     ; if R5 ~= nil then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETUPVAL  R6 U5        ; R6 := U5
 73 [-]: LOADK     R7 K18       ; R7 := -1
 74 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["NodeA"]
 75 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 76 [-]: MOVE      R10 R1       ; R10 := R1
 77 [-]: MOVE      R11 R3       ; R11 := R3
 78 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 79 [-]: MOVE      R5 R6        ; R5 := R6
 80 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 81 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["position"]
 82 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 83 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["position"]
 84 [-]: GETUPVAL  R8 U4        ; R8 := U4
 85 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 86 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["NodeA"]
 87 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 88 [-]: EQ        0 R8 K17     ; if R8 ~= nil then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETUPVAL  R9 U5        ; R9 := U5
 91 [-]: LOADK     R10 K20      ; R10 := 2
 92 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["NodeA"]
 93 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["NodeB"]
 94 [-]: MOVE      R13 R1       ; R13 := R1
 95 [-]: MOVE      R14 R3       ; R14 := R3
 96 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
 97 [-]: MOVE      R8 R9        ; R8 := R9
 98 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["Instance"]
 99 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0xE18C28D7"]
100 [-]: MOVE      R11 R5       ; R11 := R5
101 [-]: MOVE      R12 R6       ; R12 := R6
102 [-]: MOVE      R13 R7       ; R13 := R7
103 [-]: MOVE      R14 R8       ; R14 := R8
104 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
105 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2874
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x113DAAED"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R5 K2        ; R5 := gBackgroundRegion
 10 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x9B0A3887"]
 11 [-]: GETTABLE  R7 R4 K4     ; R7 := R4["mInstance"]
 12 [-]: CALL      R5 3 1       ; R5(R6,R7)
 13 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 14 [-]: JMP       9            ; PC := 9
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: LOADK     R5 K5        ; R5 := 0
 20 [-]: LOADK     R6 K5        ; R6 := 0
 21 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 22 [-]: LOADK     R9 K6        ; R9 := 1
 23 [-]: GETUPVAL  R10 U0       ; R10 := U0
 24 [-]: LEN       R10 R10      ; R10 := # R10
 25 [-]: LOADK     R11 K6       ; R11 := 1
 26 [-]: FORPREP   R9 197       ; R9 -= R11; PC := 197
 27 [-]: GETUPVAL  R13 U4       ; R13 := U4
 28 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 29 [-]: GETUPVAL  R15 U0       ; R15 := U0
 30 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 31 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["locationA"]
 32 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 33 [-]: GETTABLE  R7 R13 R14   ; R7 := R13[R14]
 34 [-]: GETUPVAL  R13 U4       ; R13 := U4
 35 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 36 [-]: GETUPVAL  R15 U0       ; R15 := U0
 37 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 38 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["locationB"]
 39 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 40 [-]: GETTABLE  R8 R13 R14   ; R8 := R13[R14]
 41 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 42 [-]: MOVE      R14 R7       ; R14 := R7
 43 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 44 [-]: TEST      R13 1        ; if R13 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 47 [-]: MOVE      R14 R8       ; R14 := R8
 48 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 49 [-]: TEST      R13 1        ; if R13 then PC := 197
 50 [-]: JMP       197          ; PC := 197
 51 [-]: GETTABLE  R14 R7 K11   ; R14 := R7["locationEnabled"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 182
 53 [-]: JMP       182          ; PC := 182
 54 [-]: GETTABLE  R14 R8 K11   ; R14 := R8["locationEnabled"]
 55 [-]: TEST      R14 0        ; if not R14 then PC := 182
 56 [-]: JMP       182          ; PC := 182
 57 [-]: ADD       R5 R5 K6     ; R5 := R5 + 1
 58 [-]: GETUPVAL  R14 U5       ; R14 := U5
 59 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["Sectors"]
 60 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
 61 [-]: GETTABLE  R16 R7 K13   ; R16 := R7["name"]
 62 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 63 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 64 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 74
 65 [-]: JMP       74           ; PC := 74
 66 [-]: GETUPVAL  R14 U5       ; R14 := U5
 67 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["Sectors"]
 68 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
 69 [-]: GETTABLE  R16 R8 K13   ; R16 := R8["name"]
 70 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 71 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 72 [-]: EQ        1 R14 K14    ; if R14 == nil then PC := 77
 73 [-]: JMP       77           ; PC := 77
 74 [-]: ADD       R6 R6 K6     ; R6 := R6 + 1
 75 [-]: GETUPVAL  R14 U3       ; R14 := U3
 76 [-]: SETTABLE  R14 R6 R5    ; R14[R6] := R5
 77 [-]: GETUPVAL  R14 U2       ; R14 := U2
 78 [-]: NEWTABLE  R15 0 4      ; R15 := {}
 79 [-]: SETTABLE  R15 K15 R7   ; R15["NodeA"] := R7
 80 [-]: SETTABLE  R15 K16 R8   ; R15["NodeB"] := R8
 81 [-]: GETTABLE  R16 R7 K18   ; R16 := R7["isShortcut"]
 82 [-]: TEST      R16 0        ; if not R16 then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: GETTABLE  R16 R8 K18   ; R16 := R8["isShortcut"]
 85 [-]: SETTABLE  R15 K17 R16  ; R15["IsShortcut"] := R16
 86 [-]: GETTABLE  R16 R7 K20   ; R16 := R7["isJunction"]
 87 [-]: TEST      R16 0        ; if not R16 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETTABLE  R16 R8 K18   ; R16 := R8["isShortcut"]
 90 [-]: TEST      R16 1        ; if R16 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: GETTABLE  R16 R7 K18   ; R16 := R7["isShortcut"]
 93 [-]: TEST      R16 0        ; if not R16 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: GETTABLE  R16 R8 K20   ; R16 := R8["isJunction"]
 96 [-]: SETTABLE  R15 K19 R16  ; R15["IsJunction"] := R16
 97 [-]: SETTABLE  R14 R5 R15   ; R14[R5] := R15
 98 [-]: GETTABLE  R14 R7 K21   ; R14 := R7["RelatedNodes"]
 99 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: NEWTABLE  R14 0 0      ; R14 := {}
102 [-]: SETTABLE  R7 K21 R14   ; R7["RelatedNodes"] := R14
103 [-]: GETTABLE  R14 R8 K21   ; R14 := R8["RelatedNodes"]
104 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: NEWTABLE  R14 0 0      ; R14 := {}
107 [-]: SETTABLE  R8 K21 R14   ; R8["RelatedNodes"] := R14
108 [-]: GETGLOBAL R14 K22      ; R14 := table
109 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xE6450C9D"]
110 [-]: GETTABLE  R15 R7 K21   ; R15 := R7["RelatedNodes"]
111 [-]: GETTABLE  R16 R8 K13   ; R16 := R8["name"]
112 [-]: CALL      R14 3 1      ; R14(R15,R16)
113 [-]: GETGLOBAL R14 K22      ; R14 := table
114 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xE6450C9D"]
115 [-]: GETTABLE  R15 R8 K21   ; R15 := R8["RelatedNodes"]
116 [-]: GETTABLE  R16 R7 K13   ; R16 := R7["name"]
117 [-]: CALL      R14 3 1      ; R14(R15,R16)
118 [-]: GETUPVAL  R14 U2       ; R14 := U2
119 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
120 [-]: GETTABLE  R14 R14 K17  ; R14 := R14["IsShortcut"]
121 [-]: TEST      R14 0        ; if not R14 then PC := 197
122 [-]: JMP       197          ; PC := 197
123 [-]: GETTABLE  R14 R8 K25   ; R14 := R8["radialSector"]
124 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["region"]
125 [-]: SETTABLE  R7 K24 R14   ; R7["targetRegion"] := R14
126 [-]: GETTABLE  R14 R7 K25   ; R14 := R7["radialSector"]
127 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["region"]
128 [-]: SETTABLE  R8 K24 R14   ; R8["targetRegion"] := R14
129 [-]: GETUPVAL  R14 U2       ; R14 := U2
130 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
131 [-]: NEWTABLE  R15 0 1      ; R15 := {}
132 [-]: GETUPVAL  R16 U0       ; R16 := U0
133 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
134 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["controlPointA"]
135 [-]: SETTABLE  R15 K28 R16  ; R15["position"] := R16
136 [-]: SETTABLE  R14 K27 R15  ; R14["controlPointA"] := R15
137 [-]: GETGLOBAL R14 K29      ; R14 := 0x218C5C62
138 [-]: GETUPVAL  R15 U2       ; R15 := U2
139 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
140 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["controlPointA"]
141 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["position"]
142 [-]: CALL      R14 2 2      ; R14 := R14(R15)
143 [-]: LT        0 R14 K30    ; if R14 >= 0.0099999997764826 then PC := 155
144 [-]: JMP       155          ; PC := 155
145 [-]: GETUPVAL  R14 U2       ; R14 := U2
146 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
147 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["controlPointA"]
148 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["position"]
149 [-]: GETTABLE  R16 R8 K28   ; R16 := R8["position"]
150 [-]: GETTABLE  R17 R7 K28   ; R17 := R7["position"]
151 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
152 [-]: MUL       R16 R16 K31  ; R16 := R16 * 0.30000001192093
153 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
154 [-]: SETTABLE  R14 K28 R15  ; R14["position"] := R15
155 [-]: GETUPVAL  R14 U2       ; R14 := U2
156 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
157 [-]: NEWTABLE  R15 0 1      ; R15 := {}
158 [-]: GETUPVAL  R16 U0       ; R16 := U0
159 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
160 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["controlPointB"]
161 [-]: SETTABLE  R15 K28 R16  ; R15["position"] := R16
162 [-]: SETTABLE  R14 K32 R15  ; R14["controlPointB"] := R15
163 [-]: GETGLOBAL R14 K29      ; R14 := 0x218C5C62
164 [-]: GETUPVAL  R15 U2       ; R15 := U2
165 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
166 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["controlPointB"]
167 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["position"]
168 [-]: CALL      R14 2 2      ; R14 := R14(R15)
169 [-]: LT        0 R14 K30    ; if R14 >= 0.0099999997764826 then PC := 197
170 [-]: JMP       197          ; PC := 197
171 [-]: GETUPVAL  R14 U2       ; R14 := U2
172 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
173 [-]: GETTABLE  R14 R14 K32  ; R14 := R14["controlPointB"]
174 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["position"]
175 [-]: GETTABLE  R16 R8 K28   ; R16 := R8["position"]
176 [-]: GETTABLE  R17 R7 K28   ; R17 := R7["position"]
177 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
178 [-]: MUL       R16 R16 K33  ; R16 := R16 * 0.69999998807907
179 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
180 [-]: SETTABLE  R14 K28 R15  ; R14["position"] := R15
181 [-]: JMP       197          ; PC := 197
182 [-]: GETGLOBAL R14 K34      ; R14 := 0x93B1256B
183 [-]: LOADK     R15 K35      ; R15 := "ERROR: Invalid nodes in edge "
184 [-]: GETGLOBAL R16 K7       ; R16 := 0x9FAED6BC
185 [-]: GETUPVAL  R17 U0       ; R17 := U0
186 [-]: GETTABLE  R17 R17 R12  ; R17 := R17[R12]
187 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["locationA"]
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: LOADK     R17 K36      ; R17 := " to "
190 [-]: GETGLOBAL R18 K7       ; R18 := 0x9FAED6BC
191 [-]: GETUPVAL  R19 U0       ; R19 := U0
192 [-]: GETTABLE  R19 R19 R12  ; R19 := R19[R12]
193 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["locationB"]
194 [-]: CALL      R18 2 2      ; R18 := R18(R19)
195 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
196 [-]: CALL      R14 2 1      ; R14(R15)
197 [-]: FORLOOP   R9 27        ; R9 += R11; if R9 <= R10 then begin PC := 27; R12 := R9 end
198 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2949
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Active"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: LOADNIL   R0 R1        ; R0 := R1 := nil
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: LOADK     R3 K3        ; R3 := 1
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: LEN       R4 R4        ; R4 := # R4
 15 [-]: LOADK     R5 K3        ; R5 := 1
 16 [-]: FORPREP   R3 112       ; R3 -= R5; PC := 112
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x1BF588C6
 18 [-]: LOADK     R8 K5        ; R8 := 0
 19 [-]: CALL      R7 2 1       ; R7(R8)
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R0 R7 R6     ; R0 := R7[R6]
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 24 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["isShortcut"]
 25 [-]: TEST      R7 0         ; if not R7 then PC := 44
 26 [-]: JMP       44           ; PC := 44
 27 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["isShortcut"]
 29 [-]: TEST      R7 0         ; if not R7 then PC := 44
 30 [-]: JMP       44           ; PC := 44
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 33 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 34 [-]: TEST      R7 0         ; if not R7 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 37 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 38 [-]: TEST      R7 0         ; if not R7 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: GETGLOBAL R1 K10       ; R1 := splineShortcutType
 41 [-]: JMP       82           ; PC := 82
 42 [-]: GETGLOBAL R1 K11       ; R1 := splineDisabledShortcutType
 43 [-]: JMP       82           ; PC := 82
 44 [-]: GETGLOBAL R1 K12       ; R1 := splineNextConnectionType
 45 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 46 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["edgesLocked"]
 47 [-]: TEST      R7 1         ; if R7 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 50 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["edgesLocked"]
 51 [-]: TEST      R7 0         ; if not R7 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R1 K14       ; R1 := splineDisabledConnectionType
 54 [-]: JMP       82           ; PC := 82
 55 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 56 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 57 [-]: TEST      R7 0         ; if not R7 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 60 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 61 [-]: TEST      R7 0         ; if not R7 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: GETGLOBAL R1 K15       ; R1 := splineConnectionType
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 66 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["locked"]
 67 [-]: TEST      R7 1         ; if R7 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 70 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 71 [-]: TEST      R7 1         ; if R7 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 74 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["locked"]
 75 [-]: TEST      R7 1         ; if R7 then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 78 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 79 [-]: TEST      R7 1         ; if R7 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: GETGLOBAL R1 K14       ; R1 := splineDisabledConnectionType
 82 [-]: GETGLOBAL R7 K17       ; R7 := 0x400E7765
 83 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["Instance"]
 84 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 85 [-]: TEST      R7 1         ; if R7 then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETGLOBAL R7 K19       ; R7 := gBackgroundRegion
 88 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7["0x9B0A3887"]
 89 [-]: GETTABLE  R9 R0 K18    ; R9 := R0["Instance"]
 90 [-]: CALL      R7 3 1       ; R7(R8,R9)
 91 [-]: GETGLOBAL R7 K19       ; R7 := gBackgroundRegion
 92 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0xBDD34CC6"]
 93 [-]: MOVE      R9 R1        ; R9 := R1
 94 [-]: GETGLOBAL R10 K22      ; R10 := ZERO_VECTOR
 95 [-]: GETGLOBAL R11 K23      ; R11 := ZERO_ROTATION
 96 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 97 [-]: SETTABLE  R0 K18 R7    ; R0["Instance"] := R7
 98 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["Instance"]
 99 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0xD63FF2C2"]
100 [-]: GETUPVAL  R9 U2        ; R9 := U2
101 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["0xF81722A2"]
102 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["IsShortcut"]
103 [-]: GETUPVAL  R11 U3       ; R11 := U3
104 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["SHORTCUT_CULL_DISTANCE"]
105 [-]: GETUPVAL  R12 U3       ; R12 := U3
106 [-]: GETTABLE  R12 R12 K28  ; R12 := R12["LINE_CULL_DISTANCE"]
107 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
108 [-]: CALL      R7 0 1       ; R7(R8,...)
109 [-]: GETUPVAL  R7 U4        ; R7 := U4
110 [-]: MOVE      R8 R0        ; R8 := R0
111 [-]: CALL      R7 2 1       ; R7(R8)
112 [-]: FORLOOP   R3 17        ; R3 += R5; if R3 <= R4 then begin PC := 17; R6 := R3 end
113 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2991
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  8 [-]: LOADK     R2 K4        ; R2 := 0
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 133
 14 [-]: JMP       133          ; PC := 133
 15 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x654F1092"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 133
 21 [-]: JMP       133          ; PC := 133
 22 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x2D0B8A86"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 25 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 133
 26 [-]: JMP       133          ; PC := 133
 27 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 28 [-]: LEN       R3 R3        ; R3 := # R3
 29 [-]: LT        0 K4 R3      ; if 0 >= R3 then PC := 133
 30 [-]: JMP       133          ; PC := 133
 31 [-]: LOADK     R3 K10       ; R3 := 86400
 32 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mVoidTraders"]
 33 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[1]
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: GETGLOBAL R6 K13       ; R6 := Engine
 36 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0xD09D7910"]
 37 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["mActivation"]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: SETTABLE  R5 K12 R6    ; R5["Time"] := R6
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["mExpiry"]
 42 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["sec"]
 43 [-]: SETTABLE  R5 K16 R6    ; R5["Expiry"] := R6
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETGLOBAL R6 K20       ; R6 := 0xEC274B1A
 46 [-]: GETTABLE  R7 R4 K21    ; R7 := R4["mNode"]
 47 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 48 [-]: SETTABLE  R5 K19 R6    ; R5["Location"] := R6
 49 [-]: GETUPVAL  R5 U0        ; R5 := U0
 50 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 51 [-]: LE        0 R5 K4      ; if R5 > 0 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: SETTABLE  R5 K22 K11   ; R5["Progress"] := 1
 55 [-]: GETUPVAL  R5 U0        ; R5 := U0
 56 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 57 [-]: JMP       70           ; PC := 70
 58 [-]: GETUPVAL  R5 U0        ; R5 := U0
 59 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 60 [-]: LE        0 R5 R3      ; if R5 > R3 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R5 U0        ; R5 := U0
 63 [-]: GETUPVAL  R6 U0        ; R6 := U0
 64 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Time"]
 65 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 66 [-]: SUB       R6 K11 R6    ; R6 := 1 - R6
 67 [-]: SETTABLE  R5 K22 R6    ; R5["Progress"] := R6
 68 [-]: GETUPVAL  R5 U0        ; R5 := U0
 69 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 70 [-]: GETUPVAL  R5 U0        ; R5 := U0
 71 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Active"]
 72 [-]: TEST      R5 0         ; if not R5 then PC := 133
 73 [-]: JMP       133          ; PC := 133
 74 [-]: LOADNIL   R5 R5        ; R5 := nil
 75 [-]: MOVE      R6 R0        ; R6 := R0
 76 [-]: LOADK     R7 K11       ; R7 := 1
 77 [-]: GETUPVAL  R8 U1        ; R8 := U1
 78 [-]: LEN       R8 R8        ; R8 := # R8
 79 [-]: LOADK     R9 K11       ; R9 := 1
 80 [-]: FORPREP   R7 110       ; R7 -= R9; PC := 110
 81 [-]: GETUPVAL  R11 U1       ; R11 := U1
 82 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 83 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
 84 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 85 [-]: GETUPVAL  R12 U0       ; R12 := U0
 86 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 87 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 97
 88 [-]: JMP       97           ; PC := 97
 89 [-]: GETUPVAL  R11 U1       ; R11 := U1
 90 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 91 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["NodeB"]
 92 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 93 [-]: GETUPVAL  R12 U0       ; R12 := U0
 94 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 95 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 110
 96 [-]: JMP       110          ; PC := 110
 97 [-]: GETUPVAL  R11 U1       ; R11 := U1
 98 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 99 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
100 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
101 [-]: GETUPVAL  R12 U0       ; R12 := U0
102 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
103 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R6 R0        ; R6 := R0
106 [-]: MOVE      R6 R1        ; R6 := R1
107 [-]: GETUPVAL  R11 U1       ; R11 := U1
108 [-]: GETTABLE  R5 R11 R10   ; R5 := R11[R10]
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R7 81        ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
111 [-]: GETGLOBAL R11 K5       ; R11 := 0x400E7765
112 [-]: MOVE      R12 R5       ; R12 := R5
113 [-]: CALL      R11 2 2      ; R11 := R11(R12)
114 [-]: TEST      R11 1        ; if R11 then PC := 131
115 [-]: JMP       131          ; PC := 131
116 [-]: GETUPVAL  R11 U0       ; R11 := U0
117 [-]: GETTABLE  R12 R5 K29   ; R12 := R5["Instance"]
118 [-]: SELF      R12 R12 K30  ; R13 := R12; R12 := R12["0xAC71FD5A"]
119 [-]: GETUPVAL  R14 U2       ; R14 := U2
120 [-]: GETTABLE  R14 R14 K31  ; R14 := R14["0xF81722A2"]
121 [-]: MOVE      R15 R6       ; R15 := R6
122 [-]: GETUPVAL  R16 U0       ; R16 := U0
123 [-]: GETTABLE  R16 R16 K22  ; R16 := R16["Progress"]
124 [-]: GETUPVAL  R17 U0       ; R17 := U0
125 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["Progress"]
126 [-]: SUB       R17 K11 R17  ; R17 := 1 - R17
127 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
128 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
129 [-]: SETTABLE  R11 K28 R12  ; R11["Position"] := R12
130 [-]: JMP       133          ; PC := 133
131 [-]: GETUPVAL  R11 U0       ; R11 := U0
132 [-]: SETTABLE  R11 K23 K32  ; R11["Active"] := "0x0"
133 [-]: GETGLOBAL R11 K33      ; R11 := mMovie
134 [-]: SELF      R11 R11 K34  ; R12 := R11; R11 := R11["0x1C19D966"]
135 [-]: LOADK     R13 K35      ; R13 := "VoidTrader"
136 [-]: LOADK     R14 K36      ; R14 := "_visible"
137 [-]: GETUPVAL  R15 U0       ; R15 := U0
138 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Active"]
139 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
140 [-]: GETUPVAL  R11 U0       ; R11 := U0
141 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Active"]
142 [-]: TEST      R11 0        ; if not R11 then PC := 149
143 [-]: JMP       149          ; PC := 149
144 [-]: GETGLOBAL R11 K33      ; R11 := mMovie
145 [-]: SELF      R11 R11 K37  ; R12 := R11; R11 := R11["0x26581636"]
146 [-]: LOADK     R13 K38      ; R13 := "VoidTrader.Image"
147 [-]: GETGLOBAL R14 K39      ; R14 := voidTraderIcon
148 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
149 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 3042
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xF81722A2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := Engine
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x9490FE70"]
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: TEST      R1 1         ; if R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Active"]
 10 [-]: LOADK     R2 K4        ; R2 := 48
 11 [-]: LOADK     R3 K5        ; R3 := 18
 12 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
 15 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x9490FE70"]
 17 [-]: CALL      R2 1 2       ; R2 := R2()
 18 [-]: TEST      R2 1         ; if R2 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Active"]
 22 [-]: LOADK     R3 K6        ; R3 := 64
 23 [-]: LOADK     R4 K7        ; R4 := 32
 24 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 25 [-]: LOADK     R2 K8        ; R2 := 1
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: LEN       R3 R3        ; R3 := # R3
 28 [-]: LOADK     R4 K8        ; R4 := 1
 29 [-]: FORPREP   R2 57        ; R2 -= R4; PC := 57
 30 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 31 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 32 [-]: GETUPVAL  R8 U2        ; R8 := U2
 33 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 34 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 35 [-]: LOADK     R9 K12       ; R9 := "Btn"
 36 [-]: LOADK     R10 K13      ; R10 := "_width"
 37 [-]: MOVE      R11 R1       ; R11 := R1
 38 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 39 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 40 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 41 [-]: GETUPVAL  R8 U2        ; R8 := U2
 42 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 43 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 44 [-]: LOADK     R9 K12       ; R9 := "Btn"
 45 [-]: LOADK     R10 K14      ; R10 := "_height"
 46 [-]: MOVE      R11 R1       ; R11 := R1
 47 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 48 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 49 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 50 [-]: GETUPVAL  R8 U2        ; R8 := U2
 51 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 52 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 53 [-]: LOADK     R9 K15       ; R9 := "Name.Bg"
 54 [-]: LOADK     R10 K14      ; R10 := "_height"
 55 [-]: MOVE      R11 R0       ; R11 := R0
 56 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 57 [-]: FORLOOP   R2 30        ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
 58 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 3052
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CachedConstructionProjects"]
  5 [-]: LOADK     R1 K2        ; R1 := 1
  6 [-]: LEN       R2 R0        ; R2 := # R0
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 16        ; R1 -= R3; PC := 16
  9 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 10 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["info"]
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mNode"]
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: SELF      R8 R6 K5     ; R9 := R6; R8 := R6["0x5EC7A3D2"]
 14 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 15 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 16 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 17 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 3062
; #Upvalues:       19
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 0
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K3        ; R4 := 0.20000000298023
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K4        ; R0 := gBackgroundRegion
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x9139A00"]
 10 [-]: GETGLOBAL R2 K6        ; R2 := gCameraSpotType
 11 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R2 R0 K8     ; R2 := R0[1]
 14 [-]: SETTABLE  R1 K7 R2     ; R1["cameraSpot"] := R2
 15 [-]: GETGLOBAL R1 K9        ; R1 := _G
 16 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["StalkerMode"]
 17 [-]: TEST      R1 1         ; if R1 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["Transitioned"]
 21 [-]: TEST      R1 1         ; if R1 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x25992394"]
 25 [-]: GETGLOBAL R2 K13       ; R2 := mapLoadedSound
 26 [-]: CALL      R1 2 1       ; R1(R2)
 27 [-]: GETGLOBAL R1 K14       ; R1 := 0x221C9700
 28 [-]: LOADK     R2 K2        ; R2 := 0
 29 [-]: LOADK     R3 K2        ; R3 := 0
 30 [-]: LOADK     R4 K8        ; R4 := 1
 31 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["cameraSpot"]
 34 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0xEC183DDC"]
 35 [-]: MUL       R4 R1 K16    ; R4 := R1 * -5
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: GETUPVAL  R3 U1        ; R3 := U1
 39 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["cameraSpot"]
 40 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6DA72501"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SETTABLE  R2 K17 R3    ; R2["originPos"] := R3
 43 [-]: GETUPVAL  R2 U1        ; R2 := U1
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["cameraSpot"]
 46 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0xF23A7849"]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: SETTABLE  R2 K19 R3    ; R2["origRotation"] := R3
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: GETGLOBAL R3 K22       ; R3 := 0xA0DB3B89
 51 [-]: GETUPVAL  R4 U1        ; R4 := U1
 52 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["cameraSpot"]
 53 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xF23A7849"]
 54 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 55 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 56 [-]: SETTABLE  R2 K21 R3    ; R2["origFacing"] := R3
 57 [-]: GETUPVAL  R2 U1        ; R2 := U1
 58 [-]: GETGLOBAL R3 K14       ; R3 := 0x221C9700
 59 [-]: GETUPVAL  R4 U1        ; R4 := U1
 60 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["originPos"]
 61 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["x"]
 62 [-]: GETUPVAL  R5 U1        ; R5 := U1
 63 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["originPos"]
 64 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["y"]
 65 [-]: GETUPVAL  R6 U1        ; R6 := U1
 66 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["originPos"]
 67 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["z"]
 68 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 69 [-]: SETTABLE  R2 K23 R3    ; R2["pos"] := R3
 70 [-]: GETUPVAL  R2 U1        ; R2 := U1
 71 [-]: GETGLOBAL R3 K28       ; R3 := 0x1E4F6281
 72 [-]: GETUPVAL  R4 U1        ; R4 := U1
 73 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["origRotation"]
 74 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["heading"]
 75 [-]: GETUPVAL  R5 U1        ; R5 := U1
 76 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["origRotation"]
 77 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["pitch"]
 78 [-]: GETUPVAL  R6 U1        ; R6 := U1
 79 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["origRotation"]
 80 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["bank"]
 81 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 82 [-]: SETTABLE  R2 K27 R3    ; R2["rotation"] := R3
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 85 [-]: SETTABLE  R2 K32 R3    ; R2["sky"] := R3
 86 [-]: GETUPVAL  R2 U1        ; R2 := U1
 87 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["sky"]
 88 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 89 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9139A00"]
 90 [-]: GETGLOBAL R5 K34       ; R5 := gZoneAttribsType
 91 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 92 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[1]
 93 [-]: SETTABLE  R2 K33 R3    ; R2["Zone"] := R3
 94 [-]: GETUPVAL  R2 U1        ; R2 := U1
 95 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["sky"]
 96 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 97 [-]: SELF      R3 R3 K36    ; R4 := R3; R3 := R3["0x90391273"]
 98 [-]: GETUPVAL  R5 U3        ; R5 := U3
 99 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["SKY_CUBE"]
100 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
101 [-]: SETTABLE  R2 K35 R3    ; R2["Cube"] := R3
102 [-]: GETUPVAL  R2 U1        ; R2 := U1
103 [-]: GETUPVAL  R3 U1        ; R3 := U1
104 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["sky"]
105 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["Zone"]
106 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6DA72501"]
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: SETTABLE  R2 K38 R3    ; R2["skyOrigin"] := R3
109 [-]: GETUPVAL  R2 U1        ; R2 := U1
110 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["cameraSpot"]
111 [-]: SELF      R2 R2 K39    ; R3 := R2; R2 := R2["0xAF85565F"]
112 [-]: LOADK     R4 K8        ; R4 := 1
113 [-]: LOADK     R5 K2        ; R5 := 0
114 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
115 [-]: GETGLOBAL R2 K9        ; R2 := _G
116 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["StalkerMode"]
117 [-]: TEST      R2 0         ; if not R2 then PC := 192
118 [-]: JMP       192          ; PC := 192
119 [-]: GETGLOBAL R2 K40       ; R2 := 0xB5A59043
120 [-]: LOADK     R3 K41       ; R3 := 60
121 [-]: LOADK     R4 K2        ; R4 := 0
122 [-]: LOADK     R5 K2        ; R5 := 0
123 [-]: LOADK     R6 K2        ; R6 := 0
124 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
125 [-]: GETGLOBAL R3 K42       ; R3 := 0x400E7765
126 [-]: GETUPVAL  R4 U1        ; R4 := U1
127 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["sky"]
128 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["Cube"]
129 [-]: CALL      R3 2 2       ; R3 := R3(R4)
130 [-]: TEST      R3 1         ; if R3 then PC := 146
131 [-]: JMP       146          ; PC := 146
132 [-]: GETUPVAL  R3 U1        ; R3 := U1
133 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["sky"]
134 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["Cube"]
135 [-]: SELF      R3 R3 K43    ; R4 := R3; R3 := R3["0xD124E361"]
136 [-]: GETGLOBAL R5 K44       ; R5 := Lotus_Game
137 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["TINT_COLOR"]
138 [-]: GETTABLE  R6 R2 K46    ; R6 := R2["red"]
139 [-]: DIV       R6 R6 K47    ; R6 := R6 / 255
140 [-]: GETTABLE  R7 R2 K48    ; R7 := R2["green"]
141 [-]: DIV       R7 R7 K47    ; R7 := R7 / 255
142 [-]: GETTABLE  R8 R2 K49    ; R8 := R2["blue"]
143 [-]: DIV       R8 R8 K47    ; R8 := R8 / 255
144 [-]: LOADK     R9 K8        ; R9 := 1
145 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
146 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
147 [-]: SELF      R3 R3 K50    ; R4 := R3; R3 := R3["0xA76F0612"]
148 [-]: GETGLOBAL R5 K51       ; R5 := 0xEC274B1A
149 [-]: LOADK     R6 K52       ; R6 := "Cloud"
150 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
151 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
152 [-]: GETGLOBAL R4 K53       ; R4 := 0xECFDD17
153 [-]: MOVE      R5 R3        ; R5 := R3
154 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
155 [-]: JMP       167          ; PC := 167
156 [-]: SELF      R9 R8 K43    ; R10 := R8; R9 := R8["0xD124E361"]
157 [-]: GETGLOBAL R11 K44      ; R11 := Lotus_Game
158 [-]: GETTABLE  R11 R11 K45  ; R11 := R11["TINT_COLOR"]
159 [-]: GETTABLE  R12 R2 K46   ; R12 := R2["red"]
160 [-]: DIV       R12 R12 K47  ; R12 := R12 / 255
161 [-]: GETTABLE  R13 R2 K48   ; R13 := R2["green"]
162 [-]: DIV       R13 R13 K47  ; R13 := R13 / 255
163 [-]: GETTABLE  R14 R2 K49   ; R14 := R2["blue"]
164 [-]: DIV       R14 R14 K47  ; R14 := R14 / 255
165 [-]: LOADK     R15 K8       ; R15 := 1
166 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
167 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 156; R6 := R7 end
168 [-]: JMP       156          ; PC := 156
169 [-]: GETGLOBAL R9 K4        ; R9 := gBackgroundRegion
170 [-]: SELF      R9 R9 K50    ; R10 := R9; R9 := R9["0xA76F0612"]
171 [-]: GETGLOBAL R11 K51      ; R11 := 0xEC274B1A
172 [-]: LOADK     R12 K54      ; R12 := "Water"
173 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
174 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
175 [-]: GETGLOBAL R10 K53      ; R10 := 0xECFDD17
176 [-]: MOVE      R11 R9       ; R11 := R9
177 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
178 [-]: JMP       190          ; PC := 190
179 [-]: SELF      R15 R14 K43  ; R16 := R14; R15 := R14["0xD124E361"]
180 [-]: GETGLOBAL R17 K44      ; R17 := Lotus_Game
181 [-]: GETTABLE  R17 R17 K45  ; R17 := R17["TINT_COLOR"]
182 [-]: GETTABLE  R18 R2 K46   ; R18 := R2["red"]
183 [-]: DIV       R18 R18 K47  ; R18 := R18 / 255
184 [-]: GETTABLE  R19 R2 K48   ; R19 := R2["green"]
185 [-]: DIV       R19 R19 K47  ; R19 := R19 / 255
186 [-]: GETTABLE  R20 R2 K49   ; R20 := R2["blue"]
187 [-]: DIV       R20 R20 K47  ; R20 := R20 / 255
188 [-]: LOADK     R21 K8       ; R21 := 1
189 [-]: CALL      R15 7 1      ; R15(R16,R17,R18,R19,R20,R21)
190 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 179; R12 := R13 end
191 [-]: JMP       179          ; PC := 179
192 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
193 [-]: SELF      R15 R15 K55  ; R16 := R15; R15 := R15["0x7669354A"]
194 [-]: GETGLOBAL R17 K4       ; R17 := gBackgroundRegion
195 [-]: SELF      R17 R17 K56  ; R18 := R17; R17 := R17["0xF7C1BE25"]
196 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
197 [-]: CALL      R15 0 1      ; R15(R16,...)
198 [-]: GETGLOBAL R15 K57      ; R15 := _T
199 [-]: GETTABLE  R15 R15 K58  ; R15 := R15["FortressLocation"]
200 [-]: EQ        0 R15 K59    ; if R15 ~= nil then PC := 212
201 [-]: JMP       212          ; PC := 212
202 [-]: GETGLOBAL R15 K57      ; R15 := _T
203 [-]: NEWTABLE  R16 0 5      ; R16 := {}
204 [-]: SETTABLE  R16 K60 K8   ; R16["SplineIndex"] := 1
205 [-]: SETTABLE  R16 K61 K2   ; R16["Progress"] := 0
206 [-]: SETTABLE  R16 K62 K8   ; R16["MaxSplines"] := 1
207 [-]: GETUPVAL  R17 U4       ; R17 := U4
208 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["Velocity"]
209 [-]: SETTABLE  R16 K63 R17  ; R16["Velocity"] := R17
210 [-]: SETTABLE  R16 K64 K65  ; R16["Initialized"] := "0x0"
211 [-]: SETTABLE  R15 K58 R16  ; R15["FortressLocation"] := R16
212 [-]: GETUPVAL  R15 U5       ; R15 := U5
213 [-]: CALL      R15 1 1      ; R15()
214 [-]: GETUPVAL  R15 U6       ; R15 := U6
215 [-]: CALL      R15 1 1      ; R15()
216 [-]: GETUPVAL  R15 U7       ; R15 := U7
217 [-]: CALL      R15 1 1      ; R15()
218 [-]: GETUPVAL  R15 U8       ; R15 := U8
219 [-]: CALL      R15 1 1      ; R15()
220 [-]: GETUPVAL  R15 U9       ; R15 := U9
221 [-]: CALL      R15 1 1      ; R15()
222 [-]: GETUPVAL  R15 U10      ; R15 := U10
223 [-]: CALL      R15 1 1      ; R15()
224 [-]: GETGLOBAL R15 K53      ; R15 := 0xECFDD17
225 [-]: GETUPVAL  R16 U4       ; R16 := U4
226 [-]: GETTABLE  R16 R16 K66  ; R16 := R16["Sectors"]
227 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
228 [-]: JMP       234          ; PC := 234
229 [-]: GETUPVAL  R20 U4       ; R20 := U4
230 [-]: GETTABLE  R20 R20 K67  ; R20 := R20["Nodes"]
231 [-]: GETUPVAL  R21 U11      ; R21 := U11
232 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
233 [-]: SETTABLE  R20 R18 R21  ; R20[R18] := R21
234 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 229; R17 := R18 end
235 [-]: JMP       229          ; PC := 229
236 [-]: GETUPVAL  R20 U12      ; R20 := U12
237 [-]: CALL      R20 1 1      ; R20()
238 [-]: GETUPVAL  R20 U13      ; R20 := U13
239 [-]: CALL      R20 1 1      ; R20()
240 [-]: GETUPVAL  R20 U14      ; R20 := U14
241 [-]: CALL      R20 1 1      ; R20()
242 [-]: GETUPVAL  R20 U15      ; R20 := U15
243 [-]: CALL      R20 1 1      ; R20()
244 [-]: GETUPVAL  R20 U16      ; R20 := U16
245 [-]: CALL      R20 1 1      ; R20()
246 [-]: GETUPVAL  R20 U17      ; R20 := U17
247 [-]: CALL      R20 1 1      ; R20()
248 [-]: GETUPVAL  R20 U18      ; R20 := U18
249 [-]: CALL      R20 1 2      ; R20 := R20()
250 [-]: TEST      R20 1        ; if R20 then PC := 275
251 [-]: JMP       275          ; PC := 275
252 [-]: GETGLOBAL R20 K9       ; R20 := _G
253 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["StalkerMode"]
254 [-]: TEST      R20 1        ; if R20 then PC := 275
255 [-]: JMP       275          ; PC := 275
256 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
257 [-]: GETGLOBAL R21 K68      ; R21 := mapSoundMusic
258 [-]: CALL      R20 2 2      ; R20 := R20(R21)
259 [-]: TEST      R20 1        ; if R20 then PC := 275
260 [-]: JMP       275          ; PC := 275
261 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
262 [-]: GETGLOBAL R21 K9       ; R21 := _G
263 [-]: GETTABLE  R21 R21 K69  ; R21 := R21["MapSoundInst"]
264 [-]: CALL      R20 2 2      ; R20 := R20(R21)
265 [-]: TEST      R20 0        ; if not R20 then PC := 275
266 [-]: JMP       275          ; PC := 275
267 [-]: GETGLOBAL R20 K9       ; R20 := _G
268 [-]: GETGLOBAL R21 K4       ; R21 := gBackgroundRegion
269 [-]: SELF      R21 R21 K12  ; R22 := R21; R21 := R21["0x25992394"]
270 [-]: GETGLOBAL R23 K68      ; R23 := mapSoundMusic
271 [-]: GETGLOBAL R24 K70      ; R24 := ZERO_VECTOR
272 [-]: MOVE      R25 R0       ; R25 := R0
273 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
274 [-]: SETTABLE  R20 K69 R21  ; R20["MapSoundInst"] := R21
275 [-]: GETGLOBAL R20 K57      ; R20 := _T
276 [-]: SETTABLE  R20 K71 K72  ; R20["InStarChart"] := "0x1"
277 [-]: GETUPVAL  R20 U2       ; R20 := U2
278 [-]: GETGLOBAL R21 K4       ; R21 := gBackgroundRegion
279 [-]: SELF      R21 R21 K50  ; R22 := R21; R21 := R21["0xA76F0612"]
280 [-]: GETGLOBAL R23 K51      ; R23 := 0xEC274B1A
281 [-]: LOADK     R24 K74      ; R24 := "Void"
282 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
283 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
284 [-]: SETTABLE  R20 K73 R21  ; R20["voidDecos"] := R21
285 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
286 [-]: GETUPVAL  R21 U2       ; R21 := U2
287 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["voidDecos"]
288 [-]: CALL      R20 2 2      ; R20 := R20(R21)
289 [-]: TEST      R20 1        ; if R20 then PC := 382
290 [-]: JMP       382          ; PC := 382
291 [-]: GETUPVAL  R20 U2       ; R20 := U2
292 [-]: GETTABLE  R20 R20 K73  ; R20 := R20["voidDecos"]
293 [-]: LEN       R20 R20      ; R20 := # R20
294 [-]: LT        0 K2 R20     ; if 0 >= R20 then PC := 382
295 [-]: JMP       382          ; PC := 382
296 [-]: GETUPVAL  R20 U2       ; R20 := U2
297 [-]: NEWTABLE  R21 0 0      ; R21 := {}
298 [-]: SETTABLE  R20 K75 R21  ; R20["voidDecoData"] := R21
299 [-]: LOADK     R20 K8       ; R20 := 1
300 [-]: GETUPVAL  R21 U2       ; R21 := U2
301 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["voidDecos"]
302 [-]: LEN       R21 R21      ; R21 := # R21
303 [-]: LOADK     R22 K8       ; R22 := 1
304 [-]: FORPREP   R20 365      ; R20 -= R22; PC := 365
305 [-]: GETUPVAL  R24 U2       ; R24 := U2
306 [-]: GETTABLE  R24 R24 K73  ; R24 := R24["voidDecos"]
307 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
308 [-]: GETUPVAL  R25 U2       ; R25 := U2
309 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
310 [-]: NEWTABLE  R26 0 0      ; R26 := {}
311 [-]: SETTABLE  R25 R23 R26  ; R25[R23] := R26
312 [-]: GETUPVAL  R25 U2       ; R25 := U2
313 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
314 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
315 [-]: SELF      R26 R24 K18  ; R27 := R24; R26 := R24["0x6DA72501"]
316 [-]: CALL      R26 2 2      ; R26 := R26(R27)
317 [-]: SETTABLE  R25 K23 R26  ; R25["pos"] := R26
318 [-]: GETUPVAL  R25 U2       ; R25 := U2
319 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
320 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
321 [-]: SELF      R26 R24 K77  ; R27 := R24; R26 := R24["0xEFE96608"]
322 [-]: CALL      R26 2 2      ; R26 := R26(R27)
323 [-]: SETTABLE  R25 K76 R26  ; R25["BMin"] := R26
324 [-]: GETUPVAL  R25 U2       ; R25 := U2
325 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
326 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
327 [-]: SELF      R26 R24 K79  ; R27 := R24; R26 := R24["0x3D6ED718"]
328 [-]: CALL      R26 2 2      ; R26 := R26(R27)
329 [-]: SETTABLE  R25 K78 R26  ; R25["BMax"] := R26
330 [-]: GETUPVAL  R25 U2       ; R25 := U2
331 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
332 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
333 [-]: GETUPVAL  R26 U2       ; R26 := U2
334 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
335 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
336 [-]: GETTABLE  R26 R26 K78  ; R26 := R26["BMax"]
337 [-]: GETUPVAL  R27 U2       ; R27 := U2
338 [-]: GETTABLE  R27 R27 K75  ; R27 := R27["voidDecoData"]
339 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
340 [-]: GETTABLE  R27 R27 K76  ; R27 := R27["BMin"]
341 [-]: SUB       R26 R26 R27  ; R26 := R26 - R27
342 [-]: SETTABLE  R25 K80 R26  ; R25["BScale"] := R26
343 [-]: GETUPVAL  R25 U2       ; R25 := U2
344 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
345 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
346 [-]: GETTABLE  R25 R25 K80  ; R25 := R25["BScale"]
347 [-]: GETUPVAL  R26 U2       ; R26 := U2
348 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
349 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
350 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["BScale"]
351 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["x"]
352 [-]: DIV       R26 K8 R26   ; R26 := 1 / R26
353 [-]: SETTABLE  R25 K24 R26  ; R25["x"] := R26
354 [-]: GETUPVAL  R25 U2       ; R25 := U2
355 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
356 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
357 [-]: GETTABLE  R25 R25 K80  ; R25 := R25["BScale"]
358 [-]: GETUPVAL  R26 U2       ; R26 := U2
359 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
360 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
361 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["BScale"]
362 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["y"]
363 [-]: DIV       R26 K8 R26   ; R26 := 1 / R26
364 [-]: SETTABLE  R25 K25 R26  ; R25["y"] := R26
365 [-]: FORLOOP   R20 305      ; R20 += R22; if R20 <= R21 then begin PC := 305; R23 := R20 end
366 [-]: GETUPVAL  R25 U2       ; R25 := U2
367 [-]: NEWTABLE  R26 0 0      ; R26 := {}
368 [-]: SETTABLE  R25 K81 R26  ; R25["uvHoles"] := R26
369 [-]: LOADK     R25 K8       ; R25 := 1
370 [-]: LOADK     R26 K82      ; R26 := 20
371 [-]: LOADK     R27 K8       ; R27 := 1
372 [-]: FORPREP   R25 381      ; R25 -= R27; PC := 381
373 [-]: GETUPVAL  R29 U2       ; R29 := U2
374 [-]: GETTABLE  R29 R29 K81  ; R29 := R29["uvHoles"]
375 [-]: GETGLOBAL R30 K51      ; R30 := 0xEC274B1A
376 [-]: LOADK     R31 K83      ; R31 := "UvHole"
377 [-]: SUB       R32 R28 K8   ; R32 := R28 - 1
378 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
379 [-]: CALL      R30 2 2      ; R30 := R30(R31)
380 [-]: SETTABLE  R29 R28 R30  ; R29[R28] := R30
381 [-]: FORLOOP   R25 373      ; R25 += R27; if R25 <= R26 then begin PC := 373; R28 := R25 end
382 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 3164
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x2C15B55B"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x2B788BAB"]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xAFDDC504"]
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 0         ; if not R0 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x2E31258"]
 27 [-]: CALL      R0 2 1       ; R0(R1)
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 3175
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xC042262A"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K2 K3     ; R0["mSyncAvatars"] := "0x1"
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K3     ; R0["mUseOperatorForLocal"] := "0x1"
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K6     ; R0["mPortrait"] := "0x0"
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["Active"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: GETGLOBAL R0 K8        ; R0 := 0x400E7765
 18 [-]: GETGLOBAL R1 K9        ; R1 := mapDioramaRJ
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 36
 21 [-]: JMP       36           ; PC := 36
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xF0BB6DD"]
 24 [-]: GETGLOBAL R2 K9        ; R2 := mapDioramaRJ
 25 [-]: CALL      R0 3 1       ; R0(R1,R2)
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETGLOBAL R0 K8        ; R0 := 0x400E7765
 28 [-]: GETGLOBAL R1 K11       ; R1 := mapDiorama
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xF0BB6DD"]
 34 [-]: GETGLOBAL R2 K11       ; R2 := mapDiorama
 35 [-]: CALL      R0 3 1       ; R0(R1,R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 3192
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xECFDD17
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["tiers"]
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: JMP       37           ; PC := 37
  5 [-]: GETGLOBAL R6 K0        ; R6 := 0xECFDD17
  6 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["sectors"]
  7 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
  8 [-]: JMP       35           ; PC := 35
  9 [-]: GETTABLE  R11 R10 K3   ; R11 := R10["mission"]
 10 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["missionType"]
 11 [-]: GETGLOBAL R12 K5       ; R12 := Lotus_Game
 12 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["MT_RAILJACK"]
 13 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 35
 14 [-]: JMP       35           ; PC := 35
 15 [-]: GETGLOBAL R11 K7       ; R11 := 0x400E7765
 16 [-]: GETTABLE  R12 R10 K3   ; R12 := R10["mission"]
 17 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["levelOverride"]
 18 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 19 [-]: TEST      R11 1        ; if R11 then PC := 35
 20 [-]: JMP       35           ; PC := 35
 21 [-]: GETTABLE  R11 R10 K3   ; R11 := R10["mission"]
 22 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["faction"]
 23 [-]: GETGLOBAL R12 K5       ; R12 := Lotus_Game
 24 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["FC_GRINEER"]
 25 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 33
 26 [-]: JMP       33           ; PC := 33
 27 [-]: GETTABLE  R11 R10 K3   ; R11 := R10["mission"]
 28 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["faction"]
 29 [-]: GETGLOBAL R12 K5       ; R12 := Lotus_Game
 30 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["FC_CORPUS"]
 31 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: MOVE      R11 R1       ; R11 := R1
 34 [-]: RETURN    R11 2        ; return R11
 35 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 9; R8 := R9 end
 36 [-]: JMP       9            ; PC := 9
 37 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
 38 [-]: JMP       5            ; PC := 5
 39 [-]: MOVE      R11 R0       ; R11 := R0
 40 [-]: RETURN    R11 2        ; return R11
 41 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 3203
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x1B252E3C"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xBFFBFE5E"]
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: MOVE      R5 R2        ; R5 := R2
 14 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 15 [-]: TEST      R3 1         ; if R3 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R3 K3        ; R3 := table
 18 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: MOVE      R5 R2        ; R5 := R2
 21 [-]: CALL      R3 3 1       ; R3(R4,R5)
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: RETURN    R3 2         ; return R3
 24 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3215
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 34
 17 [-]: JMP       34           ; PC := 34
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x30BDE7F"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 21 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mShip"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R4 K7        ; R4 := table
 26 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 29 [-]: GETTABLE  R7 R3 K6     ; R7 := R3["mShip"]
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x1B252E3C"]
 31 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 32 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 33 [-]: CALL      R4 0 1       ; R4(R5,...)
 34 [-]: LOADK     R4 K11       ; R4 := 1
 35 [-]: GETUPVAL  R5 U0        ; R5 := U0
 36 [-]: LEN       R5 R5        ; R5 := # R5
 37 [-]: LOADK     R6 K11       ; R6 := 1
 38 [-]: FORPREP   R4 45        ; R4 -= R6; PC := 45
 39 [-]: GETUPVAL  R8 U0        ; R8 := U0
 40 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: MOVE      R10 R0       ; R10 := R0
 43 [-]: GETTABLE  R11 R8 K12   ; R11 := R8["deco"]
 44 [-]: CALL      R9 3 1       ; R9(R10,R11)
 45 [-]: FORLOOP   R4 39        ; R4 += R6; if R4 <= R5 then begin PC := 39; R7 := R4 end
 46 [-]: LOADK     R9 K11       ; R9 := 1
 47 [-]: GETUPVAL  R10 U2       ; R10 := U2
 48 [-]: LEN       R10 R10      ; R10 := # R10
 49 [-]: LOADK     R11 K11      ; R11 := 1
 50 [-]: FORPREP   R9 84        ; R9 -= R11; PC := 84
 51 [-]: GETUPVAL  R13 U2       ; R13 := U2
 52 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 53 [-]: GETUPVAL  R14 U3       ; R14 := U3
 54 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["Active"]
 55 [-]: TEST      R14 0        ; if not R14 then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETUPVAL  R14 U3       ; R14 := U3
 58 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["Regions"]
 59 [-]: GETGLOBAL R15 K15      ; R15 := _T
 60 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["REGION_ID_DOJO"]
 61 [-]: EQ        1 R12 R15    ; if R12 == R15 then PC := 68
 62 [-]: JMP       68           ; PC := 68
 63 [-]: GETUPVAL  R15 U4       ; R15 := U4
 64 [-]: MOVE      R16 R13      ; R16 := R13
 65 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 66 [-]: JMP       69           ; PC := 69
 67 [-]: MOVE      R15 R0       ; R15 := R0
 68 [-]: MOVE      R15 R1       ; R15 := R1
 69 [-]: SETTABLE  R14 R12 R15  ; R14[R12] := R15
 70 [-]: GETUPVAL  R14 U1       ; R14 := U1
 71 [-]: MOVE      R15 R0       ; R15 := R0
 72 [-]: GETTABLE  R16 R13 K17  ; R16 := R13["zoomedInEffects"]
 73 [-]: CALL      R14 3 1      ; R14(R15,R16)
 74 [-]: GETUPVAL  R14 U1       ; R14 := U1
 75 [-]: MOVE      R15 R0       ; R15 := R0
 76 [-]: GETTABLE  R16 R13 K18  ; R16 := R13["decoRedux"]
 77 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 78 [-]: TEST      R14 1        ; if R14 then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETUPVAL  R14 U1       ; R14 := U1
 81 [-]: MOVE      R15 R0       ; R15 := R0
 82 [-]: GETTABLE  R16 R13 K12  ; R16 := R13["deco"]
 83 [-]: CALL      R14 3 1      ; R14(R15,R16)
 84 [-]: FORLOOP   R9 51        ; R9 += R11; if R9 <= R10 then begin PC := 51; R12 := R9 end
 85 [-]: LOADK     R14 K11      ; R14 := 1
 86 [-]: GETUPVAL  R15 U5       ; R15 := U5
 87 [-]: LEN       R15 R15      ; R15 := # R15
 88 [-]: LOADK     R16 K11      ; R16 := 1
 89 [-]: FORPREP   R14 101      ; R14 -= R16; PC := 101
 90 [-]: GETUPVAL  R18 U5       ; R18 := U5
 91 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
 92 [-]: GETUPVAL  R19 U6       ; R19 := U6
 93 [-]: MOVE      R20 R18      ; R20 := R18
 94 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 95 [-]: TEST      R19 0        ; if not R19 then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETUPVAL  R19 U1       ; R19 := U1
 98 [-]: MOVE      R20 R0       ; R20 := R0
 99 [-]: GETTABLE  R21 R18 K12  ; R21 := R18["deco"]
100 [-]: CALL      R19 3 1      ; R19(R20,R21)
101 [-]: FORLOOP   R14 90       ; R14 += R16; if R14 <= R15 then begin PC := 90; R17 := R14 end
102 [-]: LEN       R19 R0       ; R19 := # R0
103 [-]: LT        0 K2 R19     ; if 0 >= R19 then PC := 111
104 [-]: JMP       111          ; PC := 111
105 [-]: GETGLOBAL R19 K19      ; R19 := UISys
106 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0x449B53E0"]
107 [-]: MOVE      R20 R0       ; R20 := R0
108 [-]: MOVE      R21 R1       ; R21 := R1
109 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
110 [-]: MOVE      R19 R7       ; R19 := R7
111 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3265
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3272
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := 3000
  2 [-]: UNM       R1 R0        ; R1 := - R0
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: UNM       R3 R0        ; R3 := - R0
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: GETGLOBAL R5 K1        ; R5 := 0x329BDC44
  7 [-]: LOADK     R6 K2        ; R6 := "EE.Interface.Components.DragScroll"
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["0x46FF1A3C"]
 10 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
 11 [-]: LOADK     R8 K5        ; R8 := "Board"
 12 [-]: MOVE      R9 R1        ; R9 := R1
 13 [-]: MOVE      R10 R3       ; R10 := R3
 14 [-]: MOVE      R11 R2       ; R11 := R2
 15 [-]: MOVE      R12 R4       ; R12 := R4
 16 [-]: CALL      R6 7 2       ; R6 := R6(R7,R8,R9,R10,R11,R12)
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: CLOSURE   R7 0         ; R7 := closure(Function #78.1)
 20 [-]: SETTABLE  R6 K6 R7     ; R6["OnScroll"] := R7
 21 [-]: GETUPVAL  R6 U0        ; R6 := U0
 22 [-]: CLOSURE   R7 1         ; R7 := closure(Function #78.2)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SETTABLE  R6 K7 R7     ; R6["mOnStopDrag"] := R7
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: CLOSURE   R7 2         ; R7 := closure(Function #78.3)
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: SETTABLE  R6 K8 R7     ; R6["mOnDeselectCallback"] := R7
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 31 [-]: LOADK     R8 K10       ; R8 := "x"
 32 [-]: LOADK     R9 K11       ; R9 := 0.5
 33 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 36 [-]: LOADK     R8 K12       ; R8 := "y"
 37 [-]: LOADK     R9 K11       ; R9 := 0.5
 38 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 39 [-]: RETURN    R0 1         ; return 


; Function #78.1:
;
; Name:            
; Defined at line: 3282
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: RETURN    R0 1         ; return 


; Function #78.2:
;
; Name:            
; Defined at line: 3286
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Deselected"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K0 K1     ; R0["Deselected"] := nil
  7 [-]: RETURN    R0 1         ; return 


; Function #78.3:
;
; Name:            
; Defined at line: 3292
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3299
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K0 K1     ; R0["mMovingRegion"] := nil
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K2 K1     ; R0["mMovingNode"] := nil
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K3 K1     ; R0["mEdgeNode1"] := nil
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K1     ; R0["mEdgeNode2"] := nil
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K1     ; R0["mInitialPosition"] := nil
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SETTABLE  R0 K6 K1     ; R0["mInitialWorldCursor"] := nil
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: SETTABLE  R0 K7 K8     ; R0["mRotationAxis"] := "heading"
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: SETTABLE  R0 K9 K10    ; R0["mFramingRegion"] := 0
 19 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3313
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mShiftDown"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SETTABLE  R0 K2 K3     ; R0["mRotationAxis"] := "bank"
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: SETTABLE  R0 K2 K4     ; R0["mRotationAxis"] := "pitch"
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETUPVAL  R0 U1        ; R0 := U1
 20 [-]: SETTABLE  R0 K2 K5     ; R0["mRotationAxis"] := "heading"
 21 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3323
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K3        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 65
 10 [-]: JMP       65           ; PC := 65
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0x52C8784B"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 18 [-]: MOVE      R8 R3        ; R8 := R3
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: TEST      R7 1         ; if R7 then PC := 65
 21 [-]: JMP       65           ; PC := 65
 22 [-]: TEST      R6 0         ; if not R6 then PC := 65
 23 [-]: JMP       65           ; PC := 65
 24 [-]: SELF      R7 R3 K7     ; R8 := R3; R7 := R3["0x6C207447"]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LEN       R8 R7        ; R8 := # R7
 27 [-]: LE        0 R4 R8      ; if R4 > R8 then PC := 65
 28 [-]: JMP       65           ; PC := 65
 29 [-]: GETTABLE  R8 R7 R4     ; R8 := R7[R4]
 30 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mMainMission"]
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mKey"]
 32 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 33 [-]: MOVE      R10 R8       ; R10 := R8
 34 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 35 [-]: TEST      R9 1         ; if R9 then PC := 51
 36 [-]: JMP       51           ; PC := 51
 37 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0xA26B0FA3"]
 38 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 39 [-]: TEST      R9 1         ; if R9 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 42 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 43 [-]: SELF      R11 R8 K13   ; R12 := R8; R11 := R8["0x616C74B6"]
 44 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 45 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 46 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 47 [-]: MOVE      R12 R0       ; R12 := R0
 48 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 49 [-]: MOVE      R0 R9        ; R0 := R9
 50 [-]: JMP       65           ; PC := 65
 51 [-]: GETTABLE  R9 R7 R4     ; R9 := R7[R4]
 52 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["mLocTag"]
 53 [-]: GETGLOBAL R10 K16      ; R10 := EMPTY_SYMBOL
 54 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 57 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 58 [-]: GETTABLE  R11 R7 R4    ; R11 := R7[R4]
 59 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mLocTag"]
 60 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: MOVE      R12 R0       ; R12 := R0
 63 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 64 [-]: MOVE      R0 R9        ; R0 := R9
 65 [-]: RETURN    R0 2         ; return R0
 66 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3346
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := cjson
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x8DC1075B"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := gMatchingService
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x3016115E"]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: GETGLOBAL R2 K4        ; R2 := gGameRules
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8B598ED4"]
 11 [-]: GETGLOBAL R4 K6        ; R4 := gLotusHubGameRulesType
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 54
 14 [-]: JMP       54           ; PC := 54
 15 [-]: GETGLOBAL R2 K7        ; R2 := gPlayerProfileMgr
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 17 [-]: LOADK     R4 K9        ; R4 := 0
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x654F1092"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K11       ; R3 := string
 22 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xDE44F664"]
 23 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["name"]
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["HUB_TAG"]
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 30 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 31 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["HUB_SPAWN_DEFAULT"]
 32 [-]: CALL      R3 3 1       ; R3(R4,R5)
 33 [-]: JMP       54           ; PC := 54
 34 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 35 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x81645750"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: TEST      R3 0         ; if not R3 then PC := 50
 38 [-]: JMP       50           ; PC := 50
 39 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 40 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x8B598ED4"]
 41 [-]: GETGLOBAL R5 K20       ; R5 := gLotusDojoGameRulesType
 42 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 43 [-]: TEST      R3 1         ; if R3 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 46 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 47 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["HUB_SPAWN_TRADE"]
 48 [-]: CALL      R3 3 1       ; R3(R4,R5)
 49 [-]: JMP       54           ; PC := 54
 50 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 51 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 52 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["HUB_SPAWN_NAVIGATION"]
 53 [-]: CALL      R3 3 1       ; R3(R4,R5)
 54 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3362
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETGLOBAL R1 K3        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["sectorInfo"]
 10 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["sectorInfo"]
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K3        ; R1 := _T
 17 [-]: SETTABLE  R1 K4 K5     ; R1["sectorInfo"] := nil
 18 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3371
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x1C988750"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K1        ; R3 := "AbortConfirm"
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3375
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gGameRules
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1106FFC3"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0xE67B2EA2"]
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 14 [-]: RETURN    R3 0         ; return R3,...
 15 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3383
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3386
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3393
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETGLOBAL R1 K1        ; R1 := gMatchingService
 11 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1FEAD306"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K3        ; R2 := gRegion
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xA559F558"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: MOVE      R1 R1        ; R1 := R1
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3397
; #Upvalues:       10
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["0x8ECD61A2"]
  3 [-]: GETGLOBAL R7 K1        ; R7 := 0xEC274B1A
  4 [-]: MOVE      R8 R0        ; R8 := R0
  5 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  6 [-]: MOVE      R8 R1        ; R8 := R1
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: EQ        1 R6 K2      ; if R6 == nil then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R7 U0        ; R7 := U0
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["0xDABD460F"]
 12 [-]: MOVE      R8 R6        ; R8 := R6
 13 [-]: CALL      R7 2 1       ; R7(R8)
 14 [-]: MOVE      R7 R0        ; R7 := R0
 15 [-]: RETURN    R7 2         ; return R7
 16 [-]: GETUPVAL  R7 U1        ; R7 := U1
 17 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["0xBB3AACF2"]
 18 [-]: CALL      R7 1 2       ; R7 := R7()
 19 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7["0x4B93F65B"]
 20 [-]: GETGLOBAL R10 K1       ; R10 := 0xEC274B1A
 21 [-]: MOVE      R11 R0       ; R11 := R0
 22 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 23 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 24 [-]: TEST      R8 0         ; if not R8 then PC := 99
 25 [-]: JMP       99           ; PC := 99
 26 [-]: GETTABLE  R9 R8 K6     ; R9 := R8["skillReqs"]
 27 [-]: LEN       R9 R9        ; R9 := # R9
 28 [-]: LT        0 K7 R9      ; if 0 >= R9 then PC := 99
 29 [-]: JMP       99           ; PC := 99
 30 [-]: NEWTABLE  R9 6 0       ; R9 := {}
 31 [-]: LOADK     R10 K8       ; R10 := "Intrinsics"
 32 [-]: LOADK     R11 K9       ; R11 := "RailjackIntrinsicPilot"
 33 [-]: LOADK     R12 K10      ; R12 := "RailjackIntrinsicGunner"
 34 [-]: LOADK     R13 K11      ; R13 := "RailjackIntrinsicTactic"
 35 [-]: LOADK     R14 K12      ; R14 := "RailjackIntrinsicEngineer"
 36 [-]: LOADK     R15 K13      ; R15 := "RailjackIntrinsicCommand"
 37 [-]: SETLIST   R9 6 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 6
 38 [-]: GETGLOBAL R10 K14      ; R10 := 0xECFDD17
 39 [-]: GETTABLE  R11 R8 K6    ; R11 := R8["skillReqs"]
 40 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 41 [-]: JMP       97           ; PC := 97
 42 [-]: LOADK     R15 K7       ; R15 := 0
 43 [-]: GETTABLE  R16 R14 K15  ; R16 := R14["skill"]
 44 [-]: GETGLOBAL R17 K16      ; R17 := Lotus_Game
 45 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["LPS_NONE"]
 46 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 65
 47 [-]: JMP       65           ; PC := 65
 48 [-]: GETGLOBAL R16 K16      ; R16 := Lotus_Game
 49 [-]: GETTABLE  R16 R16 K17  ; R16 := R16["LPS_NONE"]
 50 [-]: GETGLOBAL R17 K16      ; R17 := Lotus_Game
 51 [-]: GETTABLE  R17 R17 K18  ; R17 := R17["LPS_COMMAND"]
 52 [-]: LOADK     R18 K19      ; R18 := 1
 53 [-]: FORPREP   R16 63       ; R16 -= R18; PC := 63
 54 [-]: GETGLOBAL R20 K20      ; R20 := math
 55 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["0x8B011038"]
 56 [-]: MOVE      R21 R15      ; R21 := R15
 57 [-]: GETGLOBAL R22 K22      ; R22 := gGameData
 58 [-]: SELF      R22 R22 K23  ; R23 := R22; R22 := R22["0x8B666D8D"]
 59 [-]: MOVE      R24 R19      ; R24 := R19
 60 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
 61 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
 62 [-]: MOVE      R15 R20      ; R15 := R20
 63 [-]: FORLOOP   R16 54       ; R16 += R18; if R16 <= R17 then begin PC := 54; R19 := R16 end
 64 [-]: JMP       70           ; PC := 70
 65 [-]: GETGLOBAL R20 K22      ; R20 := gGameData
 66 [-]: SELF      R20 R20 K23  ; R21 := R20; R20 := R20["0x8B666D8D"]
 67 [-]: GETTABLE  R22 R14 K15  ; R22 := R14["skill"]
 68 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 69 [-]: MOVE      R15 R20      ; R15 := R20
 70 [-]: GETTABLE  R20 R14 K24  ; R20 := R14["req"]
 71 [-]: LT        0 R15 R20    ; if R15 >= R20 then PC := 97
 72 [-]: JMP       97           ; PC := 97
 73 [-]: GETTABLE  R20 R14 K15  ; R20 := R14["skill"]
 74 [-]: ADD       R20 R20 K19  ; R20 := R20 + 1
 75 [-]: GETTABLE  R20 R9 R20   ; R20 := R9[R20]
 76 [-]: GETGLOBAL R21 K25      ; R21 := string
 77 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["0x639C642A"]
 78 [-]: GETGLOBAL R22 K27      ; R22 := 0xE6DC43B0
 79 [-]: LOADK     R23 K28      ; R23 := "/Lotus/Language/Intrinsics/"
 80 [-]: MOVE      R24 R20      ; R24 := R20
 81 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
 82 [-]: LOADNIL   R24 R24      ; R24 := nil
 83 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
 84 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 85 [-]: GETGLOBAL R22 K27      ; R22 := 0xE6DC43B0
 86 [-]: LOADK     R23 K29      ; R23 := "/Lotus/Language/Menu/InsufficientSkill"
 87 [-]: NEWTABLE  R24 0 2      ; R24 := {}
 88 [-]: SETTABLE  R24 K30 R21  ; R24["SKILL"] := R21
 89 [-]: GETTABLE  R25 R14 K24  ; R25 := R14["req"]
 90 [-]: SETTABLE  R24 K31 R25  ; R24["RANK"] := R25
 91 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
 92 [-]: GETUPVAL  R23 U2       ; R23 := U2
 93 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["0xB11F032"]
 94 [-]: MOVE      R24 R22      ; R24 := R22
 95 [-]: CALL      R23 2 1      ; R23(R24)
 96 [-]: RETURN    R0 1         ; return 
 97 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 42; R12 := R13 end
 98 [-]: JMP       42           ; PC := 42
 99 [-]: GETGLOBAL R23 K33      ; R23 := gRegion
100 [-]: SELF      R23 R23 K34  ; R24 := R23; R23 := R23["0x3E2F6BF"]
101 [-]: CALL      R23 2 2      ; R23 := R23(R24)
102 [-]: GETGLOBAL R24 K35      ; R24 := 0x400E7765
103 [-]: MOVE      R25 R23      ; R25 := R23
104 [-]: CALL      R24 2 2      ; R24 := R24(R25)
105 [-]: TEST      R24 1        ; if R24 then PC := 203
106 [-]: JMP       203          ; PC := 203
107 [-]: GETUPVAL  R24 U3       ; R24 := U3
108 [-]: MOVE      R25 R23      ; R25 := R23
109 [-]: CALL      R24 2 2      ; R24 := R24(R25)
110 [-]: TEST      R24 0        ; if not R24 then PC := 203
111 [-]: JMP       203          ; PC := 203
112 [-]: GETGLOBAL R24 K36      ; R24 := gGameRules
113 [-]: SELF      R24 R24 K37  ; R25 := R24; R24 := R24["0x1106FFC3"]
114 [-]: CALL      R24 2 2      ; R24 := R24(R25)
115 [-]: GETGLOBAL R25 K35      ; R25 := 0x400E7765
116 [-]: MOVE      R26 R7       ; R26 := R7
117 [-]: CALL      R25 2 2      ; R25 := R25(R26)
118 [-]: TEST      R25 1        ; if R25 then PC := 135
119 [-]: JMP       135          ; PC := 135
120 [-]: GETGLOBAL R25 K35      ; R25 := 0x400E7765
121 [-]: MOVE      R26 R23      ; R26 := R23
122 [-]: CALL      R25 2 2      ; R25 := R25(R26)
123 [-]: TEST      R25 1        ; if R25 then PC := 135
124 [-]: JMP       135          ; PC := 135
125 [-]: GETGLOBAL R25 K35      ; R25 := 0x400E7765
126 [-]: MOVE      R26 R24      ; R26 := R24
127 [-]: CALL      R25 2 2      ; R25 := R25(R26)
128 [-]: TEST      R25 1        ; if R25 then PC := 135
129 [-]: JMP       135          ; PC := 135
130 [-]: SELF      R25 R24 K38  ; R26 := R24; R25 := R24["0xE67B2EA2"]
131 [-]: MOVE      R27 R23      ; R27 := R23
132 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
133 [-]: TEST      R25 1        ; if R25 then PC := 136
134 [-]: JMP       136          ; PC := 136
135 [-]: RETURN    R0 1         ; return 
136 [-]: GETGLOBAL R25 K39      ; R25 := 0x93B1256B
137 [-]: LOADK     R26 K40      ; R26 := "RJ GoToMission - "
138 [-]: GETGLOBAL R27 K41      ; R27 := 0x9FAED6BC
139 [-]: MOVE      R28 R0       ; R28 := R0
140 [-]: CALL      R27 2 2      ; R27 := R27(R28)
141 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
142 [-]: CALL      R25 2 1      ; R25(R26)
143 [-]: GETGLOBAL R25 K42      ; R25 := _T
144 [-]: GETGLOBAL R26 K1       ; R26 := 0xEC274B1A
145 [-]: MOVE      R27 R0       ; R27 := R0
146 [-]: CALL      R26 2 2      ; R26 := R26(R27)
147 [-]: SETTABLE  R25 K43 R26  ; R25["RailJackNextMissionNode"] := R26
148 [-]: GETGLOBAL R25 K42      ; R25 := _T
149 [-]: GETGLOBAL R26 K36      ; R26 := gGameRules
150 [-]: SELF      R26 R26 K45  ; R27 := R26; R26 := R26["0x8B598ED4"]
151 [-]: GETGLOBAL R28 K46      ; R28 := gLotusAttractModeGameRulesType
152 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
153 [-]: SETTABLE  R25 K44 R26  ; R25["SeamlessRailJackTransition"] := R26
154 [-]: NEWTABLE  R25 0 2      ; R25 := {}
155 [-]: SETTABLE  R25 K47 R0   ; R25["name"] := R0
156 [-]: SETTABLE  R25 K48 K7   ; R25["difficulty"] := 0
157 [-]: GETGLOBAL R26 K49      ; R26 := cjson
158 [-]: GETTABLE  R26 R26 K50  ; R26 := R26["0x8DC1075B"]
159 [-]: MOVE      R27 R25      ; R27 := R25
160 [-]: CALL      R26 2 2      ; R26 := R26(R27)
161 [-]: GETGLOBAL R27 K51      ; R27 := gMatchingService
162 [-]: SELF      R27 R27 K52  ; R28 := R27; R27 := R27["0x3016115E"]
163 [-]: MOVE      R29 R26      ; R29 := R26
164 [-]: CALL      R27 3 1      ; R27(R28,R29)
165 [-]: SELF      R27 R7 K53   ; R28 := R7; R27 := R7["0xDF213CE1"]
166 [-]: GETGLOBAL R29 K1       ; R29 := 0xEC274B1A
167 [-]: LOADK     R30 K54      ; R30 := "CrewShipGenericTunnel"
168 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
169 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
170 [-]: SELF      R28 R24 K55  ; R29 := R24; R28 := R24["0xD93C7568"]
171 [-]: GETTABLE  R30 R27 K56  ; R30 := R27["mission"]
172 [-]: CALL      R28 3 1      ; R28(R29,R30)
173 [-]: GETUPVAL  R28 U4       ; R28 := U4
174 [-]: SETTABLE  R28 K57 K2   ; R28["mSelectedRegion"] := nil
175 [-]: GETGLOBAL R28 K51      ; R28 := gMatchingService
176 [-]: SELF      R28 R28 K58  ; R29 := R28; R28 := R28["0x1FEAD306"]
177 [-]: CALL      R28 2 2      ; R28 := R28(R29)
178 [-]: TEST      R28 0        ; if not R28 then PC := 195
179 [-]: JMP       195          ; PC := 195
180 [-]: GETGLOBAL R28 K36      ; R28 := gGameRules
181 [-]: SELF      R28 R28 K45  ; R29 := R28; R28 := R28["0x8B598ED4"]
182 [-]: GETGLOBAL R30 K59      ; R30 := gLotusHubGameRulesType
183 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
184 [-]: TEST      R28 1        ; if R28 then PC := 195
185 [-]: JMP       195          ; PC := 195
186 [-]: MOVE      R28 R1       ; R28 := R1
187 [-]: MOVE      R29 R0       ; R29 := R0
188 [-]: GETUPVAL  R30 U5       ; R30 := U5
189 [-]: GETTABLE  R30 R30 K60  ; R30 := R30["0xAD27E97A"]
190 [-]: MOVE      R31 R0       ; R31 := R0
191 [-]: MOVE      R32 R28      ; R32 := R28
192 [-]: MOVE      R33 R29      ; R33 := R29
193 [-]: GETUPVAL  R34 U6       ; R34 := U6
194 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
195 [-]: MOVE      R30 R1       ; R30 := R1
196 [-]: GETUPVAL  R31 U7       ; R31 := U7
197 [-]: MOVE      R32 R30      ; R32 := R30
198 [-]: CALL      R31 2 1      ; R31(R32)
199 [-]: GETUPVAL  R31 U8       ; R31 := U8
200 [-]: SETTABLE  R31 K61 K2   ; R31["SelectionNode"] := nil
201 [-]: MOVE      R31 R1       ; R31 := R1
202 [-]: RETURN    R31 2        ; return R31
203 [-]: NEWTABLE  R31 0 4      ; R31 := {}
204 [-]: SETTABLE  R31 K47 R0   ; R31["name"] := R0
205 [-]: SETTABLE  R31 K62 R1   ; R31["quest"] := R1
206 [-]: SETTABLE  R31 K48 R3   ; R31["difficulty"] := R3
207 [-]: SETTABLE  R31 K63 R5   ; R31["wager"] := R5
208 [-]: TEST      R2 0         ; if not R2 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: EQ        1 R2 K64     ; if R2 == "" then PC := 213
211 [-]: JMP       213          ; PC := 213
212 [-]: SETTABLE  R31 K65 R2   ; R31["raid"] := R2
213 [-]: TEST      R4 0         ; if not R4 then PC := 218
214 [-]: JMP       218          ; PC := 218
215 [-]: EQ        1 R4 K64     ; if R4 == "" then PC := 218
216 [-]: JMP       218          ; PC := 218
217 [-]: SETTABLE  R31 K66 R4   ; R31["voidTier"] := R4
218 [-]: GETGLOBAL R32 K35      ; R32 := 0x400E7765
219 [-]: MOVE      R33 R1       ; R33 := R1
220 [-]: CALL      R32 2 2      ; R32 := R32(R33)
221 [-]: TEST      R32 1        ; if R32 then PC := 269
222 [-]: JMP       269          ; PC := 269
223 [-]: GETGLOBAL R32 K25      ; R32 := string
224 [-]: GETTABLE  R32 R32 K67  ; R32 := R32["0xDE44F664"]
225 [-]: MOVE      R33 R0       ; R33 := R0
226 [-]: GETUPVAL  R34 U1       ; R34 := U1
227 [-]: GETTABLE  R34 R34 K68  ; R34 := R34["KEY_TAG"]
228 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
229 [-]: TEST      R32 0        ; if not R32 then PC := 269
230 [-]: JMP       269          ; PC := 269
231 [-]: GETGLOBAL R32 K25      ; R32 := string
232 [-]: GETTABLE  R32 R32 K67  ; R32 := R32["0xDE44F664"]
233 [-]: MOVE      R33 R0       ; R33 := R0
234 [-]: GETUPVAL  R34 U1       ; R34 := U1
235 [-]: GETTABLE  R34 R34 K68  ; R34 := R34["KEY_TAG"]
236 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
237 [-]: EQ        1 R32 K2     ; if R32 == nil then PC := 269
238 [-]: JMP       269          ; PC := 269
239 [-]: GETGLOBAL R33 K25      ; R33 := string
240 [-]: GETTABLE  R33 R33 K69  ; R33 := R33["0x7B782033"]
241 [-]: MOVE      R34 R0       ; R34 := R0
242 [-]: LOADK     R35 K19      ; R35 := 1
243 [-]: SUB       R36 R32 K19  ; R36 := R32 - 1
244 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
245 [-]: GETGLOBAL R34 K70      ; R34 := 0x7C282057
246 [-]: MOVE      R35 R33      ; R35 := R33
247 [-]: CALL      R34 2 2      ; R34 := R34(R35)
248 [-]: GETGLOBAL R35 K35      ; R35 := 0x400E7765
249 [-]: MOVE      R36 R34      ; R36 := R34
250 [-]: CALL      R35 2 2      ; R35 := R35(R36)
251 [-]: TEST      R35 1        ; if R35 then PC := 269
252 [-]: JMP       269          ; PC := 269
253 [-]: SELF      R35 R34 K71  ; R36 := R34; R35 := R34["0x9BC3049C"]
254 [-]: CALL      R35 2 2      ; R35 := R35(R36)
255 [-]: TEST      R35 0        ; if not R35 then PC := 269
256 [-]: JMP       269          ; PC := 269
257 [-]: GETGLOBAL R35 K42      ; R35 := _T
258 [-]: SETTABLE  R35 K72 R31  ; R35["sectorInfo"] := R31
259 [-]: GETGLOBAL R35 K73      ; R35 := mMovie
260 [-]: SELF      R35 R35 K74  ; R36 := R35; R35 := R35["0x458F27A9"]
261 [-]: LOADK     R37 K75      ; R37 := "ShowQuestConfirm"
262 [-]: GETGLOBAL R38 K41      ; R38 := 0x9FAED6BC
263 [-]: SELF      R39 R34 K76  ; R40 := R34; R39 := R34["0x5F68C582"]
264 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
265 [-]: CALL      R38 0 0      ; R38,... := R38(R39,...)
266 [-]: CALL      R35 0 1      ; R35(R36,...)
267 [-]: MOVE      R35 R1       ; R35 := R1
268 [-]: RETURN    R35 2        ; return R35
269 [-]: GETUPVAL  R35 U9       ; R35 := U9
270 [-]: MOVE      R36 R31      ; R36 := R31
271 [-]: CALL      R35 2 1      ; R35(R36)
272 [-]: MOVE      R35 R1       ; R35 := R1
273 [-]: RETURN    R35 2        ; return R35
274 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3517
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedInvasionInfo"]
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: GETGLOBAL R2 K0        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CachedInvasionInfo"]
 13 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 14 [-]: SETTABLE  R1 K2 R2     ; R1["gInvasionInfo"] := R2
 15 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5FF274BB"]
 17 [-]: GETGLOBAL R3 K5        ; R3 := invasionMovie
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: MOVE      R1 R0        ; R1 := R0
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xD692CA7B"]
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R1 3 1       ; R1(R2,R3)
 24 [-]: MOVE      R1 R1        ; R1 := R1
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 27 [-]: GETGLOBAL R2 K0        ; R2 := _T
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: TEST      R1 1         ; if R1 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R1 K0        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["SquadOverlay"]
 34 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x458F27A9"]
 35 [-]: LOADK     R3 K10       ; R3 := "OnRadialSolarMapOpenChildMovie"
 36 [-]: LOADK     R4 K11       ; R4 := ""
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3532
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETGLOBAL R2 K1        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SquadOverlay"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K4        ; R3 := "OnRadialSolarMapCloseChildMovie"
 14 [-]: LOADK     R4 K5        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: EQ        1 R0 K5      ; if R0 == "" then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: LOADK     R3 K5        ; R3 := ""
 23 [-]: LOADK     R4 K5        ; R4 := ""
 24 [-]: LOADK     R5 K5        ; R5 := ""
 25 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3545
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K1        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CachedActiveMissions"]
  8 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  9 [-]: TEST      R1 1         ; if R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5FF274BB"]
 14 [-]: GETGLOBAL R3 K5        ; R3 := projectionMovie
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: MOVE      R1 R0        ; R1 := R0
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 71
 21 [-]: JMP       71           ; PC := 71
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VOID_PROJECTION_ITEMS"]
 24 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["VoidT1"]
 25 [-]: GETGLOBAL R2 K1        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedActiveMissions"]
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mMissionInfo"]
 29 [-]: GETUPVAL  R3 U2        ; R3 := U2
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0x9FAED6BC
 31 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["activeMissionTag"]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SETTABLE  R3 K9 R4     ; R3["MissionTier"] := R4
 34 [-]: GETUPVAL  R3 U1        ; R3 := U1
 35 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["MissionTier"]
 38 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 39 [-]: TEST      R3 0         ; if not R3 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETUPVAL  R3 U1        ; R3 := U1
 42 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 43 [-]: GETUPVAL  R4 U2        ; R4 := U2
 44 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["MissionTier"]
 45 [-]: GETTABLE  R1 R3 R4     ; R1 := R3[R4]
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: SETTABLE  R3 K12 R0    ; R3["SectorName"] := R0
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xB9C96BA0"]
 50 [-]: LOADK     R5 K14       ; R5 := "SetExclusiveTier"
 51 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 52 [-]: SELF      R7 R1 K15    ; R8 := R1; R7 := R1["0x1B252E3C"]
 53 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 54 [-]: LOADK     R8 K16       ; R8 := "OnVoidProjectionChosen"
 55 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 56 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 57 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["Movie"]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: TEST      R3 1         ; if R3 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: GETUPVAL  R3 U3        ; R3 := U3
 64 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Movie"]
 65 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x458F27A9"]
 66 [-]: LOADK     R5 K19       ; R5 := "ItemBrowsing"
 67 [-]: LOADK     R6 K20       ; R6 := "true"
 68 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 69 [-]: MOVE      R3 R1        ; R3 := R1
 70 [-]: MOVE      R3 R4        ; R3 := R4
 71 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 72 [-]: GETGLOBAL R4 K1        ; R4 := _T
 73 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["SquadOverlay"]
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: TEST      R3 1         ; if R3 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: GETGLOBAL R3 K1        ; R3 := _T
 78 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["SquadOverlay"]
 79 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x458F27A9"]
 80 [-]: LOADK     R5 K22       ; R5 := "OnRadialSolarMapOpenChildMovie"
 81 [-]: LOADK     R6 K23       ; R6 := ""
 82 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 83 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3575
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Movie"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Movie"]
 12 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K3        ; R3 := "ItemBrowsing"
 14 [-]: LOADK     R4 K4        ; R4 := "false"
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 17 [-]: GETGLOBAL R2 K5        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SquadOverlay"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K5        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["SquadOverlay"]
 24 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
 25 [-]: LOADK     R3 K7        ; R3 := "OnRadialSolarMapCloseChildMovie"
 26 [-]: LOADK     R4 K8        ; R4 := ""
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: EQ        0 R0 K9      ; if R0 ~= "true" then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETUPVAL  R1 U3        ; R1 := U3
 31 [-]: GETUPVAL  R2 U4        ; R2 := U4
 32 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SectorName"]
 33 [-]: GETUPVAL  R3 U5        ; R3 := U5
 34 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["ACTIVE_MISSION_TAG"]
 35 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 36 [-]: LOADK     R3 K8        ; R3 := ""
 37 [-]: LOADK     R4 K8        ; R4 := ""
 38 [-]: LOADK     R5 K8        ; R5 := ""
 39 [-]: GETUPVAL  R6 U4        ; R6 := U4
 40 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["MissionTier"]
 41 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 42 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3592
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3595
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSkullNodes"]
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: SETTABLE  R1 K3 R0     ; R1["gNightmareNodeName"] := R0
 12 [-]: GETGLOBAL R1 K4        ; R1 := Engine
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xF271473D"]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: GETGLOBAL R2 K4        ; R2 := Engine
 16 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["ThreeOptions"]
 17 [-]: SETTABLE  R1 K6 R2     ; R1["dialogType"] := R2
 18 [-]: SETTABLE  R1 K8 K9     ; R1["locString"] := "/Lotus/Language/Menu/ConfirmNightmare"
 19 [-]: SETTABLE  R1 K10 K11   ; R1["firstString"] := "/Lotus/Language/Menu/ConfirmNightmareYes"
 20 [-]: SETTABLE  R1 K12 K13   ; R1["secondString"] := "/Lotus/Language/Menu/ConfirmNightmareNo"
 21 [-]: SETTABLE  R1 K14 K15   ; R1["thirdString"] := "/Menu/Confirm_Item_Cancel"
 22 [-]: SELF      R2 R1 K16    ; R3 := R1; R2 := R1["0x69A4A158"]
 23 [-]: LOADK     R4 K17       ; R4 := "ConfirmNightmare"
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x82F0B112"]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: MOVE      R2 R1        ; R2 := R1
 31 [-]: MOVE      R2 R2        ; R2 := R2
 32 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3614
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CI_CANCEL"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["gNightmareNodeName"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["CI_GENERIC_1"]
 13 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K5        ; R2 := _G
 16 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["CachedGoalInfo"]
 17 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 18 [-]: TEST      R2 0         ; if not R2 then PC := 33
 19 [-]: JMP       33           ; PC := 33
 20 [-]: MOVE      R2 R1        ; R2 := R1
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["EVENT_TAG"]
 23 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 26 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["CI_SELECT"]
 27 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: MOVE      R2 R1        ; R2 := R1
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["NIGHTMARE_TAG"]
 32 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: LOADK     R4 K10       ; R4 := ""
 36 [-]: LOADK     R5 K10       ; R5 := ""
 37 [-]: LOADK     R6 K10       ; R6 := ""
 38 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 39 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3635
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3638
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["MovieInst"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 1         ; if R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Movie"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETUPVAL  R4 U1        ; R4 := U1
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Movie"]
 16 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 17 [-]: LOADK     R6 K4        ; R6 := "ItemBrowsing"
 18 [-]: LOADK     R7 K5        ; R7 := "true"
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: SETTABLE  R4 K6 R0     ; R4["SectorName"] := R0
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: SETTABLE  R4 K7 R2     ; R4["Quest"] := R2
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: SETTABLE  R4 K8 R3     ; R4["Difficulty"] := R3
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5FF274BB"]
 29 [-]: GETGLOBAL R7 K11       ; R7 := wagerMovie
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: SETTABLE  R4 K1 R5     ; R4["MovieInst"] := R5
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["MovieInst"]
 36 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0xB9C96BA0"]
 37 [-]: LOADK     R6 K13       ; R6 := "SetSectorNameAndCloseCallback"
 38 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 39 [-]: MOVE      R8 R1        ; R8 := R1
 40 [-]: LOADK     R9 K14       ; R9 := "ConfirmWagerSelection"
 41 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 42 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 43 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 44 [-]: GETGLOBAL R5 K15       ; R5 := _T
 45 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["SquadOverlay"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R4 K15       ; R4 := _T
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["SquadOverlay"]
 51 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 52 [-]: LOADK     R6 K17       ; R6 := "OnRadialSolarMapOpenChildMovie"
 53 [-]: LOADK     R7 K18       ; R7 := ""
 54 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 55 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3661
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 K1     ; R2["MovieInst"] := nil
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETUPVAL  R3 U2        ; R3 := U2
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Movie"]
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 14 [-]: LOADK     R4 K5        ; R4 := "ItemBrowsing"
 15 [-]: LOADK     R5 K6        ; R5 := "false"
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K7        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["SquadOverlay"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R2 K7        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 25 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 26 [-]: LOADK     R4 K9        ; R4 := "OnRadialSolarMapCloseChildMovie"
 27 [-]: LOADK     R5 K10       ; R5 := ""
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 55
 30 [-]: JMP       55           ; PC := 55
 31 [-]: EQ        1 R0 K6      ; if R0 == "false" then PC := 55
 32 [-]: JMP       55           ; PC := 55
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Quest"]
 36 [-]: TEST      R3 0         ; if not R3 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SectorName"]
 40 [-]: TEST      R3 1         ; if R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["Quest"]
 45 [-]: LOADNIL   R5 R5        ; R5 := nil
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Difficulty"]
 48 [-]: LOADNIL   R7 R7        ; R7 := nil
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 51 [-]: TEST      R2 1         ; if R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: RETURN    R0 1         ; return 
 54 [-]: JMP       57           ; PC := 57
 55 [-]: GETGLOBAL R2 K7        ; R2 := _T
 56 [-]: SETTABLE  R2 K14 K15   ; R2["MadeWagerChoice"] := "0x0"
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: SETTABLE  R2 K12 K10   ; R2["SectorName"] := ""
 59 [-]: GETUPVAL  R2 U0        ; R2 := U0
 60 [-]: SETTABLE  R2 K11 K1    ; R2["Quest"] := nil
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: SETTABLE  R2 K13 K16   ; R2["Difficulty"] := 0
 63 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 3686
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  5 [-]: TEST      R0 1         ; if R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x48FBE19F"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LOADK     R1 K3        ; R1 := 1
 12 [-]: LEN       R2 R0        ; R2 := # R0
 13 [-]: LOADK     R3 K3        ; R3 := 1
 14 [-]: FORPREP   R1 25        ; R1 -= R3; PC := 25
 15 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 16 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8F6EA7B6"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: TEST      R5 1         ; if R5 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R5 K5        ; R5 := gMatchingService
 21 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xFE13353B"]
 22 [-]: GETTABLE  R7 R0 R4     ; R7 := R0[R4]
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 25 [-]: FORLOOP   R1 15        ; R1 += R3; if R1 <= R2 then begin PC := 15; R4 := R1 end
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["Node"]
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["radialSector"]
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mission"]
 30 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["SectorName"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K11       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["0xDE44F664"]
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: GETUPVAL  R9 U2        ; R9 := U2
 38 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["KEY_TAG"]
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: EQ        1 R7 K14     ; if R7 == nil then PC := 71
 41 [-]: JMP       71           ; PC := 71
 42 [-]: GETGLOBAL R8 K11       ; R8 := string
 43 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["0x7B782033"]
 44 [-]: MOVE      R9 R6        ; R9 := R6
 45 [-]: LOADK     R10 K3       ; R10 := 1
 46 [-]: SUB       R11 R7 K3    ; R11 := R7 - 1
 47 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 48 [-]: GETGLOBAL R9 K16       ; R9 := 0x7C282057
 49 [-]: MOVE      R10 R8       ; R10 := R8
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: GETGLOBAL R10 K17      ; R10 := 0x400E7765
 52 [-]: MOVE      R11 R9       ; R11 := R9
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: TEST      R10 1        ; if R10 then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETGLOBAL R10 K19      ; R10 := 0x2C00D429
 57 [-]: MOVE      R11 R8       ; R11 := R8
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: SETTABLE  R5 K18 R10   ; R5["levelKeyName"] := R10
 60 [-]: GETUPVAL  R10 U1       ; R10 := U1
 61 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 62 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 63 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 68 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 69 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 70 [-]: SETTABLE  R5 K21 R10   ; R5["keyChainName"] := R10
 71 [-]: GETUPVAL  R10 U1       ; R10 := U1
 72 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 73 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 74 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["name"]
 75 [-]: GETUPVAL  R11 U1       ; R11 := U1
 76 [-]: SETTABLE  R11 K0 K14   ; R11["Node"] := nil
 77 [-]: GETGLOBAL R11 K23      ; R11 := _T
 78 [-]: SETTABLE  R11 K24 K25  ; R11["StartingSoloMission"] := "0x1"
 79 [-]: GETUPVAL  R11 U3       ; R11 := U3
 80 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["0xCFE73DF8"]
 81 [-]: MOVE      R12 R10      ; R12 := R10
 82 [-]: MOVE      R13 R5       ; R13 := R5
 83 [-]: GETUPVAL  R14 U4       ; R14 := U4
 84 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["0xF81722A2"]
 85 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
 86 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 87 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 88 [-]: MOVE      R15 R15      ; R15 := R15
 89 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 90 [-]: LOADNIL   R17 R17      ; R17 := nil
 91 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 92 [-]: CALL      R11 0 1      ; R11(R12,...)
 93 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 3722
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CI_CANCEL"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: SETTABLE  R1 K2 K3     ; R1["Node"] := nil
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: MOVE      R1 R1        ; R1 := R1
 17 [-]: MOVE      R1 R1        ; R1 := R1
 18 [-]: GETGLOBAL R1 K4        ; R1 := 0x93B1256B
 19 [-]: LOADK     R2 K5        ; R2 := "ConfirmSoloMission"
 20 [-]: CALL      R1 2 1       ; R1(R2)
 21 [-]: GETGLOBAL R1 K6        ; R1 := gMatchingService
 22 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1E13A326"]
 23 [-]: LOADK     R3 K8        ; R3 := "OpenSoloMission"
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 3740
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["BackgroundMovie"]
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
  6 [-]: LOADK     R3 K3        ; R3 := "ShowBlockingMessage"
  7 [-]: LOADK     R4 K4        ; R4 := "0"
  8 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xB7E9C2EF"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETUPVAL  R2 U2        ; R2 := U2
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["sectorName"]
 20 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["playerCount"]
 21 [-]: GETTABLE  R4 R1 K9     ; R4 := R1["scenarioProgress"]
 22 [-]: LOADK     R5 K10       ; R5 := 0
 23 [-]: LOADK     R6 K10       ; R6 := 0
 24 [-]: LOADK     R7 K11       ; R7 := 100
 25 [-]: LOADNIL   R8 R10       ; R8 := R9 := R10 := nil
 26 [-]: TEST      R2 0         ; if not R2 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: EQ        0 R2 K12     ; if R2 ~= "ScenarioEventHub5" then PC := 37
 29 [-]: JMP       37           ; PC := 37
 30 [-]: GETGLOBAL R11 K13      ; R11 := _G
 31 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["CachedGoalInfo"]
 32 [-]: TEST      R11 0        ; if not R11 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETGLOBAL R11 K13      ; R11 := _G
 35 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["CachedGoalInfo"]
 36 [-]: GETTABLE  R10 R11 R2   ; R10 := R11[R2]
 37 [-]: TEST      R10 0        ; if not R10 then PC := 88
 38 [-]: JMP       88           ; PC := 88
 39 [-]: GETTABLE  R11 R10 K15  ; R11 := R10["mMetadata"]
 40 [-]: TEST      R11 0        ; if not R11 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: EQ        1 R11 K16    ; if R11 == "" then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R12 K17      ; R12 := cjson
 45 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["0x8A2E8315"]
 46 [-]: MOVE      R13 R11      ; R13 := R11
 47 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 48 [-]: TEST      R12 0        ; if not R12 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: GETTABLE  R7 R12 K19   ; R7 := R12["progressReq"]
 51 [-]: GETGLOBAL R13 K20      ; R13 := Engine
 52 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["0xD09D7910"]
 53 [-]: GETTABLE  R14 R10 K22  ; R14 := R10["mAltExpiry"]
 54 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 55 [-]: MOVE      R6 R13       ; R6 := R13
 56 [-]: LT        0 R6 K10     ; if R6 >= 0 then PC := 76
 57 [-]: JMP       76           ; PC := 76
 58 [-]: GETGLOBAL R13 K20      ; R13 := Engine
 59 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["0xD09D7910"]
 60 [-]: GETTABLE  R14 R10 K23  ; R14 := R10["mNextAltActivation"]
 61 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 62 [-]: MOVE      R5 R13       ; R5 := R13
 63 [-]: GETGLOBAL R13 K24      ; R13 := 0xE6DC43B0
 64 [-]: LOADK     R14 K25      ; R14 := "/Lotus/Language/Events/FragmentArrivalTime"
 65 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 66 [-]: GETUPVAL  R16 U3       ; R16 := U3
 67 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["0xC65D09DD"]
 68 [-]: GETGLOBAL R17 K28      ; R17 := mMovie
 69 [-]: MOVE      R18 R5       ; R18 := R5
 70 [-]: LOADK     R19 K29      ; R19 := "Compact"
 71 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 72 [-]: SETTABLE  R15 K26 R16  ; R15["VALUE"] := R16
 73 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 74 [-]: MOVE      R9 R13       ; R9 := R13
 75 [-]: JMP       88           ; PC := 88
 76 [-]: GETGLOBAL R13 K24      ; R13 := 0xE6DC43B0
 77 [-]: LOADK     R14 K30      ; R14 := "/Lotus/Language/Events/FlotillaTimeRemainingInstanceSelector"
 78 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 79 [-]: GETUPVAL  R16 U3       ; R16 := U3
 80 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["0xC65D09DD"]
 81 [-]: GETGLOBAL R17 K28      ; R17 := mMovie
 82 [-]: MOVE      R18 R6       ; R18 := R6
 83 [-]: LOADK     R19 K29      ; R19 := "Compact"
 84 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 85 [-]: SETTABLE  R15 K26 R16  ; R15["VALUE"] := R16
 86 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 87 [-]: MOVE      R8 R13       ; R8 := R13
 88 [-]: GETGLOBAL R13 K0       ; R13 := _T
 89 [-]: CLOSURE   R14 0        ; R14 := closure(Function #102.1)
 90 [-]: GETUPVAL  R0 U4        ; R0 := U4
 91 [-]: GETUPVAL  R0 U5        ; R0 := U5
 92 [-]: GETUPVAL  R0 U6        ; R0 := U6
 93 [-]: GETUPVAL  R0 U2        ; R0 := U2
 94 [-]: GETUPVAL  R0 U3        ; R0 := U3
 95 [-]: SETTABLE  R13 K31 R14  ; R13["MenuSelectionDone"] := R14
 96 [-]: TEST      R0 0         ; if not R0 then PC := 153
 97 [-]: JMP       153          ; PC := 153
 98 [-]: GETUPVAL  R13 U2       ; R13 := U2
 99 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mAutoJoinIfNotBusy"]
100 [-]: TEST      R13 0        ; if not R13 then PC := 153
101 [-]: JMP       153          ; PC := 153
102 [-]: GETUPVAL  R13 U2       ; R13 := U2
103 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["mBusyPlayerLoad"]
104 [-]: LT        0 K10 R13    ; if 0 >= R13 then PC := 153
105 [-]: JMP       153          ; PC := 153
106 [-]: MOVE      R13 R1       ; R13 := R1
107 [-]: LEN       R14 R4       ; R14 := # R4
108 [-]: LT        0 K10 R14    ; if 0 >= R14 then PC := 114
109 [-]: JMP       114          ; PC := 114
110 [-]: GETTABLE  R14 R4 K34   ; R14 := R4[1]
111 [-]: LE        0 R7 R14     ; if R7 > R14 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: MOVE      R13 R0       ; R13 := R0
114 [-]: TEST      R13 0        ; if not R13 then PC := 153
115 [-]: JMP       153          ; PC := 153
116 [-]: MOVE      R14 R1       ; R14 := R1
117 [-]: LOADK     R15 K35      ; R15 := 2
118 [-]: LEN       R16 R3       ; R16 := # R3
119 [-]: LOADK     R17 K34      ; R17 := 1
120 [-]: FORPREP   R15 126      ; R15 -= R17; PC := 126
121 [-]: GETTABLE  R19 R3 R18   ; R19 := R3[R18]
122 [-]: LT        0 K10 R19    ; if 0 >= R19 then PC := 126
123 [-]: JMP       126          ; PC := 126
124 [-]: MOVE      R14 R0       ; R14 := R0
125 [-]: JMP       127          ; PC := 127
126 [-]: FORLOOP   R15 121      ; R15 += R17; if R15 <= R16 then begin PC := 121; R18 := R15 end
127 [-]: TEST      R14 0        ; if not R14 then PC := 153
128 [-]: JMP       153          ; PC := 153
129 [-]: GETTABLE  R19 R3 K34   ; R19 := R3[1]
130 [-]: GETTABLE  R20 R1 K36   ; R20 := R1["hubCapacity"]
131 [-]: DIV       R19 R19 R20  ; R19 := R19 / R20
132 [-]: GETUPVAL  R20 U2       ; R20 := U2
133 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["mBusyPlayerLoad"]
134 [-]: LE        0 R19 R20    ; if R19 > R20 then PC := 153
135 [-]: JMP       153          ; PC := 153
136 [-]: GETGLOBAL R20 K5       ; R20 := 0x400E7765
137 [-]: GETUPVAL  R21 U4       ; R21 := U4
138 [-]: CALL      R20 2 2      ; R20 := R20(R21)
139 [-]: TEST      R20 1        ; if R20 then PC := 144
140 [-]: JMP       144          ; PC := 144
141 [-]: GETUPVAL  R20 U4       ; R20 := U4
142 [-]: SELF      R20 R20 K37  ; R21 := R20; R20 := R20["0xA58BB96C"]
143 [-]: CALL      R20 2 1      ; R20(R21)
144 [-]: GETGLOBAL R20 K0       ; R20 := _T
145 [-]: GETTABLE  R20 R20 K38  ; R20 := R20["0x968C0654"]
146 [-]: NEWTABLE  R21 1 0      ; R21 := {}
147 [-]: NEWTABLE  R22 0 2      ; R22 := {}
148 [-]: SETTABLE  R22 K39 K10  ; R22["Instance"] := 0
149 [-]: SETTABLE  R22 K40 K41  ; R22["IsFull"] := "0x0"
150 [-]: SETLIST   R21 1 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
151 [-]: CALL      R20 2 1      ; R20(R21)
152 [-]: RETURN    R0 1         ; return 
153 [-]: CLOSURE   R20 1        ; R20 := closure(Function #102.2)
154 [-]: GETUPVAL  R0 U2        ; R0 := U2
155 [-]: LOADK     R21 K42      ; R21 := "/Lotus/Language/Menu/ConfirmMultiHubInstance"
156 [-]: TEST      R9 1         ; if R9 then PC := 160
157 [-]: JMP       160          ; PC := 160
158 [-]: TEST      R8 0         ; if not R8 then PC := 176
159 [-]: JMP       176          ; PC := 176
160 [-]: GETGLOBAL R22 K24      ; R22 := 0xE6DC43B0
161 [-]: MOVE      R23 R21      ; R23 := R21
162 [-]: MOVE      R24 R1       ; R24 := R1
163 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
164 [-]: MOVE      R21 R22      ; R21 := R22
165 [-]: TEST      R9 0         ; if not R9 then PC := 172
166 [-]: JMP       172          ; PC := 172
167 [-]: MOVE      R22 R21      ; R22 := R21
168 [-]: LOADK     R23 K43      ; R23 := " | "
169 [-]: MOVE      R24 R9       ; R24 := R9
170 [-]: CONCAT    R21 R22 R24  ; R21 := R22 .. R23 .. R24
171 [-]: JMP       176          ; PC := 176
172 [-]: MOVE      R22 R21      ; R22 := R21
173 [-]: LOADK     R23 K43      ; R23 := " | "
174 [-]: MOVE      R24 R8       ; R24 := R8
175 [-]: CONCAT    R21 R22 R24  ; R21 := R22 .. R23 .. R24
176 [-]: GETGLOBAL R22 K28      ; R22 := mMovie
177 [-]: SELF      R22 R22 K44  ; R23 := R22; R22 := R22["0x5FF274BB"]
178 [-]: GETGLOBAL R24 K45      ; R24 := genericMenuMovie
179 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
180 [-]: MOVE      R22 R4       ; R22 := R4
181 [-]: GETUPVAL  R22 U4       ; R22 := U4
182 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x458F27A9"]
183 [-]: LOADK     R24 K46      ; R24 := "SetTitle"
184 [-]: MOVE      R25 R21      ; R25 := R21
185 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
186 [-]: GETUPVAL  R22 U4       ; R22 := U4
187 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x458F27A9"]
188 [-]: LOADK     R24 K47      ; R24 := "SetCallBack"
189 [-]: LOADK     R25 K31      ; R25 := "MenuSelectionDone"
190 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
191 [-]: TEST      R0 0         ; if not R0 then PC := 204
192 [-]: JMP       204          ; PC := 204
193 [-]: GETGLOBAL R22 K0       ; R22 := _T
194 [-]: CLOSURE   R23 2        ; R23 := closure(Function #102.3)
195 [-]: MOVE      R0 R3        ; R0 := R3
196 [-]: MOVE      R0 R4        ; R0 := R4
197 [-]: MOVE      R0 R1        ; R0 := R1
198 [-]: MOVE      R0 R7        ; R0 := R7
199 [-]: MOVE      R0 R20       ; R0 := R20
200 [-]: GETUPVAL  R0 U2        ; R0 := U2
201 [-]: MOVE      R0 R6        ; R0 := R6
202 [-]: SETTABLE  R22 K48 R23  ; R22["GetMenuEntries"] := R23
203 [-]: JMP       208          ; PC := 208
204 [-]: GETGLOBAL R22 K0       ; R22 := _T
205 [-]: CLOSURE   R23 3        ; R23 := closure(Function #102.4)
206 [-]: GETUPVAL  R0 U2        ; R0 := U2
207 [-]: SETTABLE  R22 K48 R23  ; R22["GetMenuEntries"] := R23
208 [-]: GETUPVAL  R22 U4       ; R22 := U4
209 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x458F27A9"]
210 [-]: LOADK     R24 K49      ; R24 := "SetElementsFunction"
211 [-]: LOADK     R25 K48      ; R25 := "GetMenuEntries"
212 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
213 [-]: RETURN    R0 1         ; return 


; Function #102.1:
;
; Name:            
; Defined at line: 3800
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 88
  9 [-]: JMP       88           ; PC := 88
 10 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["Instance"]
 11 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 88
 12 [-]: JMP       88           ; PC := 88
 13 [-]: LOADK     R2 K6        ; R2 := "Selected hub index "
 14 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["Instance"]
 15 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 16 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["Players"]
 17 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: MOVE      R3 R2        ; R3 := R2
 20 [-]: LOADK     R4 K8        ; R4 := " with "
 21 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["Players"]
 22 [-]: LOADK     R6 K9        ; R6 := " players"
 23 [-]: CONCAT    R2 R3 R6     ; R2 := R3 .. R4 .. R5 .. R6
 24 [-]: GETTABLE  R3 R1 K10    ; R3 := R1["Progress"]
 25 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: MOVE      R3 R2        ; R3 := R2
 28 [-]: LOADK     R4 K11       ; R4 := " (Progress: "
 29 [-]: GETTABLE  R5 R1 K10    ; R5 := R1["Progress"]
 30 [-]: LOADK     R6 K12       ; R6 := ")"
 31 [-]: CONCAT    R2 R3 R6     ; R2 := R3 .. R4 .. R5 .. R6
 32 [-]: GETGLOBAL R3 K13       ; R3 := 0x93B1256B
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: CALL      R3 2 1       ; R3(R4)
 35 [-]: GETTABLE  R3 R1 K14    ; R3 := R1["IsFull"]
 36 [-]: EQ        0 R3 K15     ; if R3 ~= "0x1" then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: GETGLOBAL R3 K16       ; R3 := mMovie
 39 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 40 [-]: LOADK     R5 K18       ; R5 := "/Lotus/Language/Menu/MissionInstanceIsFull"
 41 [-]: MOVE      R6 R0        ; R6 := R0
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: GETUPVAL  R4 U1        ; R4 := U1
 44 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["0xB11F032"]
 45 [-]: MOVE      R5 R3        ; R5 := R3
 46 [-]: CALL      R4 2 1       ; R4(R5)
 47 [-]: RETURN    R0 1         ; return 
 48 [-]: GETGLOBAL R4 K20       ; R4 := gMatchingService
 49 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x35DDC67D"]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: LT        0 K4 R4      ; if 1 >= R4 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETUPVAL  R4 U2        ; R4 := U2
 54 [-]: GETUPVAL  R5 U3        ; R5 := U3
 55 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["sectorName"]
 56 [-]: GETUPVAL  R6 U4        ; R6 := U4
 57 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["HUB_TAG"]
 58 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 59 [-]: LOADNIL   R6 R7        ; R6 := R7 := nil
 60 [-]: LOADK     R8 K24       ; R8 := 0.5
 61 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 62 [-]: TEST      R4 1         ; if R4 then PC := 84
 63 [-]: JMP       84           ; PC := 84
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: JMP       84           ; PC := 84
 66 [-]: GETUPVAL  R4 U2        ; R4 := U2
 67 [-]: GETUPVAL  R5 U3        ; R5 := U3
 68 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["sectorName"]
 69 [-]: GETUPVAL  R6 U4        ; R6 := U4
 70 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["HUB_TAG"]
 71 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 72 [-]: LOADNIL   R6 R7        ; R6 := R7 := nil
 73 [-]: LOADK     R8 K24       ; R8 := 0.5
 74 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 75 [-]: TEST      R4 1         ; if R4 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: RETURN    R0 1         ; return 
 78 [-]: GETGLOBAL R4 K0        ; R4 := _T
 79 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["SquadOverlay"]
 80 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4["0x458F27A9"]
 81 [-]: LOADK     R6 K27       ; R6 := "NotifyForceLoadSoloMission"
 82 [-]: LOADK     R7 K28       ; R7 := "dontLockSession"
 83 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 84 [-]: GETGLOBAL R4 K20       ; R4 := gMatchingService
 85 [-]: SELF      R4 R4 K29    ; R5 := R4; R4 := R4["0xEDAA4B70"]
 86 [-]: GETTABLE  R6 R1 K5     ; R6 := R1["Instance"]
 87 [-]: CALL      R4 3 1       ; R4(R5,R6)
 88 [-]: RETURN    R0 1         ; return 


; Function #102.2:
;
; Name:            
; Defined at line: 3880
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: DIV       R2 R0 R1     ; R2 := R0 / R1
  2 [-]: LOADNIL   R3 R3        ; R3 := nil
  3 [-]: EQ        0 R2 K0      ; if R2 ~= 0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADK     R3 K1        ; R3 := "HubInstanceEmpty"
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mBusyPlayerLoad"]
  9 [-]: LT        0 R2 R4      ; if R2 >= R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R3 K3        ; R3 := "HubInstanceCalm"
 12 [-]: JMP       18           ; PC := 18
 13 [-]: LT        0 R2 K4      ; if R2 >= 1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADK     R3 K5        ; R3 := "HubInstanceBusy"
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R3 K6        ; R3 := "HubInstanceFull"
 18 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 20 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/"
 21 [-]: MOVE      R7 R3        ; R7 := R3
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: RETURN    R4 2         ; return R4
 26 [-]: RETURN    R0 1         ; return 


; Function #102.3:
;
; Name:            
; Defined at line: 3913
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: LOADK     R2 K0        ; R2 := 1
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LOADK     R4 K0        ; R4 := 1
  7 [-]: FORPREP   R2 98        ; R2 -= R4; PC := 98
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 10 [-]: GETUPVAL  R7 U0        ; R7 := U0
 11 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 12 [-]: GETUPVAL  R8 U2        ; R8 := U2
 13 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["hubCapacity"]
 14 [-]: LE        1 R8 R7      ; if R8 <= R7 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: MOVE      R7 R1        ; R7 := R1
 18 [-]: TEST      R7 1         ; if R7 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: TESTSET   R7 R6 0      ; if not R6 then PC := 27 else R7 := R6
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R8 U3        ; R8 := U3
 23 [-]: LE        1 R8 R6      ; if R8 <= R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R7 R0        ; R7 := R0
 26 [-]: MOVE      R7 R1        ; R7 := R1
 27 [-]: GETUPVAL  R8 U4        ; R8 := U4
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 30 [-]: GETUPVAL  R10 U2       ; R10 := U2
 31 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["hubCapacity"]
 32 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 33 [-]: GETUPVAL  R9 U0        ; R9 := U0
 34 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 35 [-]: GETUPVAL  R10 U2       ; R10 := U2
 36 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["hubCapacity"]
 37 [-]: DIV       R9 R9 R10    ; R9 := R9 / R10
 38 [-]: GETUPVAL  R10 U5       ; R10 := U5
 39 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["mBusyPlayerLoad"]
 40 [-]: LE        1 R10 R9     ; if R10 <= R9 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R9 R0        ; R9 := R0
 43 [-]: MOVE      R9 R1        ; R9 := R1
 44 [-]: TEST      R7 1         ; if R7 then PC := 95
 45 [-]: JMP       95           ; PC := 95
 46 [-]: GETUPVAL  R10 U0       ; R10 := U0
 47 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 48 [-]: LT        1 K3 R10     ; if 0 < R10 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: LEN       R10 R0       ; R10 := # R0
 51 [-]: EQ        0 R10 K3     ; if R10 ~= 0 then PC := 95
 52 [-]: JMP       95           ; PC := 95
 53 [-]: GETUPVAL  R10 U5       ; R10 := U5
 54 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["sectorLoc"]
 55 [-]: LOADK     R11 K5       ; R11 := " "
 56 [-]: MOVE      R12 R5       ; R12 := R5
 57 [-]: LOADK     R13 K6       ; R13 := ": "
 58 [-]: MOVE      R14 R8       ; R14 := R8
 59 [-]: CONCAT    R10 R10 R14  ; R10 := R10 .. R11 .. R12 .. R13 .. R14
 60 [-]: TEST      R6 0         ; if not R6 then PC := 78
 61 [-]: JMP       78           ; PC := 78
 62 [-]: LT        0 K3 R6      ; if 0 >= R6 then PC := 78
 63 [-]: JMP       78           ; PC := 78
 64 [-]: GETUPVAL  R11 U6       ; R11 := U6
 65 [-]: LT        0 K3 R11     ; if 0 >= R11 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: GETGLOBAL R11 K7       ; R11 := 0xE6DC43B0
 68 [-]: LOADK     R12 K8       ; R12 := "/Lotus/Language/Events/FlotillaProgressInstanceSelector"
 69 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 70 [-]: SETTABLE  R13 K9 R6    ; R13["PROGRESS"] := R6
 71 [-]: GETUPVAL  R14 U3       ; R14 := U3
 72 [-]: SETTABLE  R13 K10 R14  ; R13["REQ"] := R14
 73 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 74 [-]: MOVE      R12 R10      ; R12 := R10
 75 [-]: LOADK     R13 K11      ; R13 := " - "
 76 [-]: MOVE      R14 R11      ; R14 := R11
 77 [-]: CONCAT    R10 R12 R14  ; R10 := R12 .. R13 .. R14
 78 [-]: GETGLOBAL R12 K12      ; R12 := table
 79 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["0xE6450C9D"]
 80 [-]: MOVE      R13 R0       ; R13 := R0
 81 [-]: NEWTABLE  R14 0 5      ; R14 := {}
 82 [-]: GETGLOBAL R15 K15      ; R15 := string
 83 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["0x639C642A"]
 84 [-]: MOVE      R16 R10      ; R16 := R10
 85 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 86 [-]: SETTABLE  R14 K14 R15  ; R14["mName"] := R15
 87 [-]: SUB       R15 R5 K0    ; R15 := R5 - 1
 88 [-]: SETTABLE  R14 K17 R15  ; R14["Instance"] := R15
 89 [-]: SETTABLE  R14 K18 R7   ; R14["IsFull"] := R7
 90 [-]: GETUPVAL  R15 U0       ; R15 := U0
 91 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
 92 [-]: SETTABLE  R14 K19 R15  ; R14["Players"] := R15
 93 [-]: SETTABLE  R14 K20 R6   ; R14["Progress"] := R6
 94 [-]: CALL      R12 3 1      ; R12(R13,R14)
 95 [-]: TEST      R9 1         ; if R9 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R1 R0        ; R1 := R0
 98 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 99 [-]: TEST      R1 1         ; if R1 then PC := 104
100 [-]: JMP       104          ; PC := 104
101 [-]: LEN       R12 R0       ; R12 := # R0
102 [-]: EQ        0 R12 K3     ; if R12 ~= 0 then PC := 132
103 [-]: JMP       132          ; PC := 132
104 [-]: GETUPVAL  R12 U0       ; R12 := U0
105 [-]: LEN       R12 R12      ; R12 := # R12
106 [-]: ADD       R12 R12 K0   ; R12 := R12 + 1
107 [-]: GETUPVAL  R13 U4       ; R13 := U4
108 [-]: LOADK     R14 K3       ; R14 := 0
109 [-]: GETUPVAL  R15 U2       ; R15 := U2
110 [-]: GETTABLE  R15 R15 K1   ; R15 := R15["hubCapacity"]
111 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
112 [-]: GETGLOBAL R14 K12      ; R14 := table
113 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["0xE6450C9D"]
114 [-]: MOVE      R15 R0       ; R15 := R0
115 [-]: NEWTABLE  R16 0 4      ; R16 := {}
116 [-]: GETGLOBAL R17 K15      ; R17 := string
117 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["0x639C642A"]
118 [-]: GETUPVAL  R18 U5       ; R18 := U5
119 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["sectorLoc"]
120 [-]: LOADK     R19 K5       ; R19 := " "
121 [-]: MOVE      R20 R12      ; R20 := R12
122 [-]: LOADK     R21 K6       ; R21 := ": "
123 [-]: MOVE      R22 R13      ; R22 := R13
124 [-]: CONCAT    R18 R18 R22  ; R18 := R18 .. R19 .. R20 .. R21 .. R22
125 [-]: CALL      R17 2 2      ; R17 := R17(R18)
126 [-]: SETTABLE  R16 K14 R17  ; R16["mName"] := R17
127 [-]: SUB       R17 R12 K0   ; R17 := R12 - 1
128 [-]: SETTABLE  R16 K17 R17  ; R16["Instance"] := R17
129 [-]: SETTABLE  R16 K18 K21  ; R16["IsFull"] := "0x0"
130 [-]: SETTABLE  R16 K19 K3   ; R16["Players"] := 0
131 [-]: CALL      R14 3 1      ; R14(R15,R16)
132 [-]: RETURN    R0 2         ; return R0
133 [-]: RETURN    R0 1         ; return 


; Function #102.4:
;
; Name:            
; Defined at line: 3951
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := string
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x639C642A"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["sectorLoc"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K3        ; R2 := table
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: LOADK     R6 K6        ; R6 := " 1"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: SETTABLE  R4 K5 R5     ; R4["mName"] := R5
 15 [-]: SETTABLE  R4 K7 K8     ; R4["Instance"] := 0
 16 [-]: SETTABLE  R4 K9 K10    ; R4["IsFull"] := "0x0"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 3963
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: SETTABLE  R2 K2 R1     ; R2["sectorName"] := R1
  6 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x9FAED6BC
  9 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["locTag"]
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: GETGLOBAL R3 K6        ; R3 := string
 14 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x633C4246"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K8        ; R5 := "Relay"
 17 [-]: LOADK     R6 K9        ; R6 := ""
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: MOVE      R2 R3        ; R2 := R3
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: SETTABLE  R3 K10 R2    ; R3["sectorLoc"] := R2
 22 [-]: GETGLOBAL R3 K11       ; R3 := 0x400E7765
 23 [-]: GETUPVAL  R4 U1        ; R4 := U1
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: TEST      R3 0         ; if not R3 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: MOVE      R3 R2        ; R3 := R2
 30 [-]: GETGLOBAL R3 K12       ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["BackgroundMovie"]
 32 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x458F27A9"]
 33 [-]: LOADK     R5 K15       ; R5 := "ShowBlockingMessage"
 34 [-]: LOADK     R6 K16       ; R6 := "2"
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0xF2773BCF"]
 38 [-]: LOADK     R5 K18       ; R5 := "GotHubInstances"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: GETUPVAL  R3 U1        ; R3 := U1
 41 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x1F59D76E"]
 42 [-]: MOVE      R5 R1        ; R5 := R1
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 3984
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x87B2D555"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FactionNames"]
  7 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["faction"]
  8 [-]: ADD       R3 R3 K3     ; R3 := R3 + 1
  9 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xE6DC43B0
 11 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Game/MissionName_"
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: LOADK     R4 K6        ; R4 := " - "
 17 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 18 [-]: MOVE      R6 R2        ; R6 := R2
 19 [-]: MOVE      R7 R0        ; R7 := R0
 20 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 21 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 22 [-]: RETURN    R3 2         ; return R3
 23 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 3990
; #Upvalues:       16
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x9FAED6BC
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["name"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["difficulty"]
  6 [-]: MOVE      R5 R3        ; R5 := R3
  7 [-]: LOADK     R6 K4        ; R6 := "QUEST"
  8 [-]: LOADK     R7 K5        ; R7 := "RAID"
  9 [-]: GETGLOBAL R8 K6        ; R8 := string
 10 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xDE44F664"]
 11 [-]: MOVE      R9 R5        ; R9 := R5
 12 [-]: GETUPVAL  R10 U0       ; R10 := U0
 13 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["KEY_TAG"]
 14 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 15 [-]: TEST      R8 0         ; if not R8 then PC := 50
 16 [-]: JMP       50           ; PC := 50
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: GETGLOBAL R9 K6        ; R9 := string
 19 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xDE44F664"]
 20 [-]: MOVE      R10 R5       ; R10 := R5
 21 [-]: GETUPVAL  R11 U0       ; R11 := U0
 22 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["KEY_TAG"]
 23 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 24 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 50
 25 [-]: JMP       50           ; PC := 50
 26 [-]: GETGLOBAL R10 K6       ; R10 := string
 27 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["0x7B782033"]
 28 [-]: MOVE      R11 R5       ; R11 := R5
 29 [-]: LOADK     R12 K11      ; R12 := 1
 30 [-]: SUB       R13 R9 K11   ; R13 := R9 - 1
 31 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 32 [-]: GETGLOBAL R11 K12      ; R11 := 0x7C282057
 33 [-]: MOVE      R12 R10      ; R12 := R10
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: MOVE      R8 R11       ; R8 := R11
 36 [-]: GETGLOBAL R11 K13      ; R11 := 0x400E7765
 37 [-]: MOVE      R12 R8       ; R12 := R8
 38 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 39 [-]: TEST      R11 1        ; if R11 then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: SELF      R11 R8 K14   ; R12 := R8; R11 := R8["0x625DA4BB"]
 42 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 43 [-]: GETGLOBAL R12 K15      ; R12 := EMPTY_SYMBOL
 44 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: GETGLOBAL R12 K0       ; R12 := 0x9FAED6BC
 47 [-]: MOVE      R13 R11      ; R13 := R11
 48 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 49 [-]: MOVE      R5 R12       ; R5 := R12
 50 [-]: MOVE      R12 R1       ; R12 := R1
 51 [-]: MOVE      R12 R1       ; R12 := R1
 52 [-]: GETGLOBAL R12 K16      ; R12 := mMovie
 53 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x5FF274BB"]
 54 [-]: GETGLOBAL R14 K18      ; R14 := genericMenuMovie
 55 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 56 [-]: MOVE      R12 R2       ; R12 := R2
 57 [-]: GETUPVAL  R12 U2       ; R12 := U2
 58 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
 59 [-]: LOADK     R14 K20      ; R14 := "SetTitle"
 60 [-]: LOADK     R15 K21      ; R15 := "/Lotus/Language/Menu/ConfirmMultiMission"
 61 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 62 [-]: GETGLOBAL R12 K22      ; R12 := _T
 63 [-]: CLOSURE   R13 0        ; R13 := closure(Function #105.1)
 64 [-]: GETUPVAL  R0 U1        ; R0 := U1
 65 [-]: GETUPVAL  R0 U2        ; R0 := U2
 66 [-]: MOVE      R0 R0        ; R0 := R0
 67 [-]: GETUPVAL  R0 U0        ; R0 := U0
 68 [-]: GETUPVAL  R0 U3        ; R0 := U3
 69 [-]: MOVE      R0 R5        ; R0 := R5
 70 [-]: GETUPVAL  R0 U4        ; R0 := U4
 71 [-]: MOVE      R0 R1        ; R0 := R1
 72 [-]: MOVE      R0 R2        ; R0 := R2
 73 [-]: MOVE      R0 R3        ; R0 := R3
 74 [-]: MOVE      R0 R6        ; R0 := R6
 75 [-]: GETUPVAL  R0 U5        ; R0 := U5
 76 [-]: MOVE      R0 R7        ; R0 := R7
 77 [-]: MOVE      R0 R4        ; R0 := R4
 78 [-]: GETUPVAL  R0 U6        ; R0 := U6
 79 [-]: GETUPVAL  R0 U7        ; R0 := U7
 80 [-]: GETUPVAL  R0 U8        ; R0 := U8
 81 [-]: GETUPVAL  R0 U9        ; R0 := U9
 82 [-]: GETUPVAL  R0 U10       ; R0 := U10
 83 [-]: GETUPVAL  R0 U11       ; R0 := U11
 84 [-]: SETTABLE  R12 K23 R13  ; R12["MenuSelectionDone"] := R13
 85 [-]: GETUPVAL  R12 U2       ; R12 := U2
 86 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
 87 [-]: LOADK     R14 K24      ; R14 := "SetCallBack"
 88 [-]: LOADK     R15 K23      ; R15 := "MenuSelectionDone"
 89 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 90 [-]: GETGLOBAL R12 K22      ; R12 := _T
 91 [-]: CLOSURE   R13 1        ; R13 := closure(Function #105.2)
 92 [-]: MOVE      R0 R0        ; R0 := R0
 93 [-]: GETUPVAL  R0 U12       ; R0 := U12
 94 [-]: MOVE      R0 R6        ; R0 := R6
 95 [-]: MOVE      R0 R5        ; R0 := R5
 96 [-]: GETUPVAL  R0 U13       ; R0 := U13
 97 [-]: GETUPVAL  R0 U0        ; R0 := U0
 98 [-]: GETUPVAL  R0 U14       ; R0 := U14
 99 [-]: GETUPVAL  R0 U6        ; R0 := U6
100 [-]: GETUPVAL  R0 U15       ; R0 := U15
101 [-]: SETTABLE  R12 K25 R13  ; R12["GetMenuEntries"] := R13
102 [-]: GETUPVAL  R12 U2       ; R12 := U2
103 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
104 [-]: LOADK     R14 K26      ; R14 := "SetElementsFunction"
105 [-]: LOADK     R15 K25      ; R15 := "GetMenuEntries"
106 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
107 [-]: GETUPVAL  R12 U2       ; R12 := U2
108 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12["0xD692CA7B"]
109 [-]: MOVE      R14 R1       ; R14 := R1
110 [-]: CALL      R12 3 1      ; R12(R13,R14)
111 [-]: RETURN    R0 1         ; return 


; Function #105.1:
;
; Name:            
; Defined at line: 4019
; #Upvalues:       20
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mission"]
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xA4269DBC"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 14 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 198
 15 [-]: JMP       198          ; PC := 198
 16 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 18 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 198
 19 [-]: JMP       198          ; PC := 198
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 22 [-]: GETUPVAL  R3 U3        ; R3 := U3
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["INVASION_ATTACKER_TAG"]
 24 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETUPVAL  R2 U4        ; R2 := U4
 27 [-]: GETUPVAL  R3 U5        ; R3 := U5
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: JMP       198          ; PC := 198
 30 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 31 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 32 [-]: GETUPVAL  R3 U3        ; R3 := U3
 33 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["ACTIVE_MISSION_TAG"]
 34 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 57
 35 [-]: JMP       57           ; PC := 57
 36 [-]: GETGLOBAL R2 K0        ; R2 := _T
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 57
 39 [-]: JMP       57           ; PC := 57
 40 [-]: GETGLOBAL R2 K0        ; R2 := _T
 41 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 42 [-]: GETUPVAL  R3 U5        ; R3 := U5
 43 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 44 [-]: TEST      R2 0         ; if not R2 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: GETGLOBAL R2 K0        ; R2 := _T
 47 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 48 [-]: GETUPVAL  R3 U5        ; R3 := U5
 49 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 50 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 51 [-]: TEST      R2 0         ; if not R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETUPVAL  R2 U6        ; R2 := U6
 54 [-]: GETUPVAL  R3 U5        ; R3 := U5
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: JMP       198          ; PC := 198
 57 [-]: GETGLOBAL R2 K12       ; R2 := 0x400E7765
 58 [-]: GETUPVAL  R3 U7        ; R3 := U7
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: TEST      R2 0         ; if not R2 then PC := 73
 61 [-]: JMP       73           ; PC := 73
 62 [-]: GETGLOBAL R2 K12       ; R2 := 0x400E7765
 63 [-]: GETUPVAL  R3 U8        ; R3 := U8
 64 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 65 [-]: TEST      R2 0         ; if not R2 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETUPVAL  R2 U5        ; R2 := U5
 68 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1]
 69 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MissionTypeTag"]
 70 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 71 [-]: MOVE      R2 R9        ; R2 := R9
 72 [-]: JMP       138          ; PC := 138
 73 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 74 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 75 [-]: GETUPVAL  R3 U10       ; R3 := U10
 76 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 108
 77 [-]: JMP       108          ; PC := 108
 78 [-]: GETUPVAL  R2 U7        ; R2 := U7
 79 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x1B252E3C"]
 80 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 81 [-]: MOVE      R2 R7        ; R2 := R7
 82 [-]: GETUPVAL  R2 U11       ; R2 := U11
 83 [-]: GETUPVAL  R3 U9        ; R3 := U9
 84 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 105
 86 [-]: JMP       105          ; PC := 105
 87 [-]: GETUPVAL  R2 U11       ; R2 := U11
 88 [-]: GETUPVAL  R3 U9        ; R3 := U9
 89 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 90 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["KeyType"]
 91 [-]: TEST      R2 0         ; if not R2 then PC := 105
 92 [-]: JMP       105          ; PC := 105
 93 [-]: GETGLOBAL R2 K15       ; R2 := 0x9FAED6BC
 94 [-]: GETUPVAL  R3 U11       ; R3 := U11
 95 [-]: GETUPVAL  R4 U9        ; R4 := U9
 96 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 97 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["KeyType"]
 98 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1B252E3C"]
 99 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
100 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
101 [-]: GETUPVAL  R3 U3        ; R3 := U3
102 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["KEY_TAG"]
103 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
104 [-]: MOVE      R2 R9        ; R2 := R9
105 [-]: LOADNIL   R2 R2        ; R2 := nil
106 [-]: MOVE      R2 R8        ; R2 := R8
107 [-]: JMP       138          ; PC := 138
108 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
109 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
110 [-]: GETUPVAL  R3 U12       ; R3 := U12
111 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 120
112 [-]: JMP       120          ; PC := 120
113 [-]: GETUPVAL  R2 U8        ; R2 := U8
114 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x1B252E3C"]
115 [-]: CALL      R2 2 2       ; R2 := R2(R3)
116 [-]: MOVE      R2 R8        ; R2 := R8
117 [-]: LOADNIL   R2 R2        ; R2 := nil
118 [-]: MOVE      R2 R7        ; R2 := R7
119 [-]: JMP       138          ; PC := 138
120 [-]: GETUPVAL  R2 U5        ; R2 := U5
121 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1]
122 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MissionTypeTag"]
123 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
124 [-]: MOVE      R2 R9        ; R2 := R9
125 [-]: LOADNIL   R2 R2        ; R2 := nil
126 [-]: MOVE      R2 R7        ; R2 := R7
127 [-]: LOADNIL   R2 R2        ; R2 := nil
128 [-]: MOVE      R2 R8        ; R2 := R8
129 [-]: LOADNIL   R2 R2        ; R2 := nil
130 [-]: MOVE      R2 R13       ; R2 := R13
131 [-]: GETUPVAL  R2 U14       ; R2 := U14
132 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x4B93F65B"]
133 [-]: GETGLOBAL R4 K18       ; R4 := 0xEC274B1A
134 [-]: GETUPVAL  R5 U5        ; R5 := U5
135 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
136 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
137 [-]: MOVE      R1 R2        ; R1 := R2
138 [-]: GETTABLE  R2 R1 K19    ; R2 := R1["soloMode"]
139 [-]: TEST      R2 0         ; if not R2 then PC := 192
140 [-]: JMP       192          ; PC := 192
141 [-]: GETGLOBAL R2 K20       ; R2 := gMatchingService
142 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x35DDC67D"]
143 [-]: CALL      R2 2 2       ; R2 := R2(R3)
144 [-]: LT        0 K6 R2      ; if 1 >= R2 then PC := 177
145 [-]: JMP       177          ; PC := 177
146 [-]: GETUPVAL  R2 U15       ; R2 := U15
147 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["0x8ECD61A2"]
148 [-]: GETGLOBAL R3 K18       ; R3 := 0xEC274B1A
149 [-]: GETUPVAL  R4 U9        ; R4 := U9
150 [-]: CALL      R3 2 2       ; R3 := R3(R4)
151 [-]: MOVE      R4 R1        ; R4 := R1
152 [-]: MOVE      R5 R1        ; R5 := R1
153 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
154 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 161
155 [-]: JMP       161          ; PC := 161
156 [-]: GETUPVAL  R3 U15       ; R3 := U15
157 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["0xDABD460F"]
158 [-]: MOVE      R4 R2        ; R4 := R2
159 [-]: CALL      R3 2 1       ; R3(R4)
160 [-]: JMP       198          ; PC := 198
161 [-]: GETGLOBAL R3 K12       ; R3 := 0x400E7765
162 [-]: GETUPVAL  R4 U16       ; R4 := U16
163 [-]: CALL      R3 2 2       ; R3 := R3(R4)
164 [-]: TEST      R3 0         ; if not R3 then PC := 198
165 [-]: JMP       198          ; PC := 198
166 [-]: GETUPVAL  R3 U17       ; R3 := U17
167 [-]: GETUPVAL  R4 U11       ; R4 := U11
168 [-]: GETUPVAL  R5 U5        ; R5 := U5
169 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
170 [-]: SETTABLE  R3 K24 R4    ; R3["Node"] := R4
171 [-]: GETUPVAL  R3 U17       ; R3 := U17
172 [-]: GETUPVAL  R4 U9        ; R4 := U9
173 [-]: SETTABLE  R3 K25 R4    ; R3["SectorName"] := R4
174 [-]: MOVE      R3 R1        ; R3 := R1
175 [-]: MOVE      R3 R18       ; R3 := R18
176 [-]: JMP       198          ; PC := 198
177 [-]: GETUPVAL  R3 U19       ; R3 := U19
178 [-]: GETUPVAL  R4 U9        ; R4 := U9
179 [-]: GETUPVAL  R5 U7        ; R5 := U7
180 [-]: GETUPVAL  R6 U8        ; R6 := U8
181 [-]: GETUPVAL  R7 U13       ; R7 := U13
182 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
183 [-]: TEST      R3 0         ; if not R3 then PC := 198
184 [-]: JMP       198          ; PC := 198
185 [-]: GETGLOBAL R3 K0        ; R3 := _T
186 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["SquadOverlay"]
187 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0x458F27A9"]
188 [-]: LOADK     R5 K28       ; R5 := "NotifyForceLoadSoloMission"
189 [-]: LOADK     R6 K29       ; R6 := ""
190 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
191 [-]: JMP       198          ; PC := 198
192 [-]: GETUPVAL  R3 U19       ; R3 := U19
193 [-]: GETUPVAL  R4 U9        ; R4 := U9
194 [-]: GETUPVAL  R5 U7        ; R5 := U7
195 [-]: GETUPVAL  R6 U8        ; R6 := U8
196 [-]: GETUPVAL  R7 U13       ; R7 := U13
197 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
198 [-]: RETURN    R0 1         ; return 


; Function #105.2:
;
; Name:            
; Defined at line: 4082
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["keyChain"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 44
  7 [-]: JMP       44           ; PC := 44
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x7C282057
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["keyChain"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 44
 16 [-]: JMP       44           ; PC := 44
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0xE6DC43B0
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 19 [-]: SELF      R4 R1 K5     ; R5 := R1; R4 := R1["0x616C74B6"]
 20 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 21 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: LOADK     R3 K6        ; R3 := ": "
 25 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 26 [-]: GETGLOBAL R3 K7        ; R3 := table
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xE6450C9D"]
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 30 [-]: GETGLOBAL R6 K10       ; R6 := string
 31 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0x639C642A"]
 32 [-]: MOVE      R7 R2        ; R7 := R2
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K10       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x639C642A"]
 36 [-]: GETUPVAL  R8 U1        ; R8 := U1
 37 [-]: CALL      R8 1 0       ; R8,... := R8()
 38 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 39 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 40 [-]: SETTABLE  R5 K9 R6     ; R5["mName"] := R6
 41 [-]: GETUPVAL  R6 U2        ; R6 := U2
 42 [-]: SETTABLE  R5 K12 R6    ; R5["MissionTypeTag"] := R6
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: GETGLOBAL R3 K13       ; R3 := _T
 45 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CachedAlerts"]
 46 [-]: GETUPVAL  R4 U3        ; R4 := U3
 47 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 48 [-]: TEST      R3 0         ; if not R3 then PC := 123
 49 [-]: JMP       123          ; PC := 123
 50 [-]: GETGLOBAL R3 K13       ; R3 := _T
 51 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CachedAlerts"]
 52 [-]: GETUPVAL  R4 U3        ; R4 := U3
 53 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 54 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mVisible"]
 55 [-]: TEST      R3 0         ; if not R3 then PC := 123
 56 [-]: JMP       123          ; PC := 123
 57 [-]: LOADNIL   R3 R3        ; R3 := nil
 58 [-]: GETGLOBAL R4 K13       ; R4 := _T
 59 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CachedAlerts"]
 60 [-]: GETUPVAL  R5 U3        ; R5 := U3
 61 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 62 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mAlertInfo"]
 63 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mTag"]
 64 [-]: GETGLOBAL R5 K18       ; R5 := EMPTY_SYMBOL
 65 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 94
 66 [-]: JMP       94           ; PC := 94
 67 [-]: GETGLOBAL R4 K13       ; R4 := _T
 68 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CachedAlerts"]
 69 [-]: GETUPVAL  R5 U3        ; R5 := U3
 70 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 71 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mAlertInfo"]
 72 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mMissionInfo"]
 73 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["descText"]
 74 [-]: GETGLOBAL R5 K18       ; R5 := EMPTY_SYMBOL
 75 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETGLOBAL R4 K10       ; R4 := string
 78 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0x639C642A"]
 79 [-]: GETGLOBAL R5 K3        ; R5 := 0xE6DC43B0
 80 [-]: GETGLOBAL R6 K4        ; R6 := 0x9FAED6BC
 81 [-]: GETGLOBAL R7 K13       ; R7 := _T
 82 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CachedAlerts"]
 83 [-]: GETUPVAL  R8 U3        ; R8 := U3
 84 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 85 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mAlertInfo"]
 86 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mMissionInfo"]
 87 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["descText"]
 88 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 89 [-]: MOVE      R7 R0        ; R7 := R0
 90 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 91 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 92 [-]: MOVE      R3 R4        ; R3 := R4
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETGLOBAL R4 K3        ; R4 := 0xE6DC43B0
 95 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Language/Menu/Notification_Alert"
 96 [-]: MOVE      R6 R0        ; R6 := R0
 97 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 98 [-]: MOVE      R3 R4        ; R3 := R4
 99 [-]: MOVE      R4 R3        ; R4 := R3
100 [-]: LOADK     R5 K6        ; R5 := ": "
101 [-]: GETUPVAL  R6 U4        ; R6 := U4
102 [-]: GETGLOBAL R7 K13       ; R7 := _T
103 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CachedAlerts"]
104 [-]: GETUPVAL  R8 U3        ; R8 := U3
105 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
106 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mAlertInfo"]
107 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mMissionInfo"]
108 [-]: CALL      R6 2 2       ; R6 := R6(R7)
109 [-]: CONCAT    R3 R4 R6     ; R3 := R4 .. R5 .. R6
110 [-]: GETGLOBAL R4 K7        ; R4 := table
111 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
112 [-]: MOVE      R5 R0        ; R5 := R0
113 [-]: NEWTABLE  R6 0 2       ; R6 := {}
114 [-]: GETGLOBAL R7 K10       ; R7 := string
115 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x639C642A"]
116 [-]: MOVE      R8 R3        ; R8 := R3
117 [-]: CALL      R7 2 2       ; R7 := R7(R8)
118 [-]: SETTABLE  R6 K9 R7     ; R6["mName"] := R7
119 [-]: GETUPVAL  R7 U5        ; R7 := U5
120 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["ALERT_TAG"]
121 [-]: SETTABLE  R6 K12 R7    ; R6["MissionTypeTag"] := R7
122 [-]: CALL      R4 3 1       ; R4(R5,R6)
123 [-]: GETGLOBAL R4 K23       ; R4 := _G
124 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CachedGoalInfo"]
125 [-]: GETUPVAL  R5 U3        ; R5 := U3
126 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
127 [-]: TEST      R4 1         ; if R4 then PC := 139
128 [-]: JMP       139          ; PC := 139
129 [-]: GETGLOBAL R4 K23       ; R4 := _G
130 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["MergedGoalNodes"]
131 [-]: TEST      R4 0         ; if not R4 then PC := 236
132 [-]: JMP       236          ; PC := 236
133 [-]: GETGLOBAL R4 K23       ; R4 := _G
134 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["MergedGoalNodes"]
135 [-]: GETUPVAL  R5 U3        ; R5 := U3
136 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
137 [-]: TEST      R4 0         ; if not R4 then PC := 236
138 [-]: JMP       236          ; PC := 236
139 [-]: GETGLOBAL R4 K23       ; R4 := _G
140 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CachedGoalInfo"]
141 [-]: GETUPVAL  R5 U3        ; R5 := U3
142 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
143 [-]: LOADK     R5 K26       ; R5 := ""
144 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["mDesc"]
145 [-]: GETTABLE  R7 R4 K28    ; R7 := R4["mTypes"]
146 [-]: LEN       R7 R7        ; R7 := # R7
147 [-]: LT        1 K29 R7     ; if 0 < R7 then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
150 [-]: GETTABLE  R8 R4 K30    ; R8 := R4["mItemType"]
151 [-]: CALL      R7 2 2       ; R7 := R7(R8)
152 [-]: TEST      R7 0         ; if not R7 then PC := 157
153 [-]: JMP       157          ; PC := 157
154 [-]: GETTABLE  R7 R4 K31    ; R7 := R4["mBounty"]
155 [-]: TEST      R7 0         ; if not R7 then PC := 182
156 [-]: JMP       182          ; PC := 182
157 [-]: GETTABLE  R7 R4 K31    ; R7 := R4["mBounty"]
158 [-]: TEST      R7 1         ; if R7 then PC := 163
159 [-]: JMP       163          ; PC := 163
160 [-]: GETTABLE  R7 R4 K32    ; R7 := R4["mMaxConclave"]
161 [-]: LT        0 K29 R7     ; if 0 >= R7 then PC := 177
162 [-]: JMP       177          ; PC := 177
163 [-]: GETUPVAL  R7 U6        ; R7 := U6
164 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["0xF81722A2"]
165 [-]: GETGLOBAL R8 K10       ; R8 := string
166 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["0xDE44F664"]
167 [-]: GETGLOBAL R9 K4        ; R9 := 0x9FAED6BC
168 [-]: GETTABLE  R10 R4 K35   ; R10 := R4["mNode"]
169 [-]: CALL      R9 2 2       ; R9 := R9(R10)
170 [-]: LOADK     R10 K36      ; R10 := "Pvp"
171 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
172 [-]: LOADK     R9 K37       ; R9 := "/Lotus/Language/Menu/Notification_Conclave"
173 [-]: LOADK     R10 K38      ; R10 := "/Lotus/Language/Menu/Notification_Bounty"
174 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
175 [-]: MOVE      R5 R7        ; R5 := R7
176 [-]: JMP       178          ; PC := 178
177 [-]: LOADK     R5 K39       ; R5 := "/Lotus/Language/Menu/Notification_EnemyBounty"
178 [-]: MOVE      R7 R5        ; R7 := R5
179 [-]: LOADK     R8 K6        ; R8 := ": "
180 [-]: CONCAT    R5 R7 R8     ; R5 := R7 .. R8
181 [-]: JMP       214          ; PC := 214
182 [-]: GETTABLE  R7 R4 K40    ; R7 := R4["mFomorian"]
183 [-]: TEST      R7 0         ; if not R7 then PC := 214
184 [-]: JMP       214          ; PC := 214
185 [-]: GETUPVAL  R7 U6        ; R7 := U6
186 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["0xF81722A2"]
187 [-]: GETTABLE  R8 R4 K41    ; R8 := R4["Faction"]
188 [-]: GETGLOBAL R9 K42       ; R9 := Lotus_Game
189 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["FC_GRINEER"]
190 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 193
191 [-]: JMP       193          ; PC := 193
192 [-]: MOVE      R8 R0        ; R8 := R0
193 [-]: MOVE      R8 R1        ; R8 := R1
194 [-]: LOADK     R9 K44       ; R9 := "/Lotus/Language/Menu/Notification_Fomorian"
195 [-]: LOADK     R10 K45      ; R10 := "/Lotus/Language/Menu/CorpusRazorbackProject"
196 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
197 [-]: GETGLOBAL R8 K3        ; R8 := 0xE6DC43B0
198 [-]: MOVE      R9 R7        ; R9 := R7
199 [-]: MOVE      R10 R0       ; R10 := R0
200 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
201 [-]: LOADK     R9 K6        ; R9 := ": "
202 [-]: CONCAT    R5 R8 R9     ; R5 := R8 .. R9
203 [-]: GETUPVAL  R8 U7        ; R8 := U7
204 [-]: SELF      R8 R8 K46    ; R9 := R8; R8 := R8["0xDF213CE1"]
205 [-]: GETTABLE  R10 R4 K47   ; R10 := R4["mVictimNode"]
206 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
207 [-]: GETGLOBAL R9 K3        ; R9 := 0xE6DC43B0
208 [-]: GETGLOBAL R10 K4       ; R10 := 0x9FAED6BC
209 [-]: GETTABLE  R11 R8 K48   ; R11 := R8["locTag"]
210 [-]: CALL      R10 2 2      ; R10 := R10(R11)
211 [-]: MOVE      R11 R0       ; R11 := R0
212 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
213 [-]: MOVE      R6 R9        ; R6 := R9
214 [-]: GETGLOBAL R9 K3        ; R9 := 0xE6DC43B0
215 [-]: MOVE      R10 R5       ; R10 := R5
216 [-]: LOADNIL   R11 R11      ; R11 := nil
217 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
218 [-]: GETGLOBAL R10 K3       ; R10 := 0xE6DC43B0
219 [-]: MOVE      R11 R6       ; R11 := R6
220 [-]: LOADNIL   R12 R12      ; R12 := nil
221 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
222 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
223 [-]: GETGLOBAL R10 K7       ; R10 := table
224 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["0xE6450C9D"]
225 [-]: MOVE      R11 R0       ; R11 := R0
226 [-]: NEWTABLE  R12 0 2      ; R12 := {}
227 [-]: GETGLOBAL R13 K10      ; R13 := string
228 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0x639C642A"]
229 [-]: MOVE      R14 R9       ; R14 := R9
230 [-]: CALL      R13 2 2      ; R13 := R13(R14)
231 [-]: SETTABLE  R12 K9 R13   ; R12["mName"] := R13
232 [-]: GETUPVAL  R13 U5       ; R13 := U5
233 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["EVENT_TAG"]
234 [-]: SETTABLE  R12 K12 R13  ; R12["MissionTypeTag"] := R13
235 [-]: CALL      R10 3 1      ; R10(R11,R12)
236 [-]: GETGLOBAL R10 K13      ; R10 := _T
237 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["CachedSyndicateMissions"]
238 [-]: GETUPVAL  R11 U3       ; R11 := U3
239 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
240 [-]: TEST      R10 0        ; if not R10 then PC := 279
241 [-]: JMP       279          ; PC := 279
242 [-]: GETGLOBAL R10 K13      ; R10 := _T
243 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["CachedSyndicateMissions"]
244 [-]: GETUPVAL  R11 U3       ; R11 := U3
245 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
246 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["mVisible"]
247 [-]: TEST      R10 0        ; if not R10 then PC := 279
248 [-]: JMP       279          ; PC := 279
249 [-]: GETGLOBAL R10 K3       ; R10 := 0xE6DC43B0
250 [-]: GETGLOBAL R11 K13      ; R11 := _T
251 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["CachedSyndicateMissions"]
252 [-]: GETUPVAL  R12 U3       ; R12 := U3
253 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
254 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["mSyndicateName"]
255 [-]: MOVE      R12 R0       ; R12 := R0
256 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
257 [-]: LOADK     R11 K6       ; R11 := ": "
258 [-]: GETUPVAL  R12 U4       ; R12 := U4
259 [-]: GETGLOBAL R13 K13      ; R13 := _T
260 [-]: GETTABLE  R13 R13 K50  ; R13 := R13["CachedSyndicateMissions"]
261 [-]: GETUPVAL  R14 U3       ; R14 := U3
262 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
263 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mMissionInfo"]
264 [-]: CALL      R12 2 2      ; R12 := R12(R13)
265 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
266 [-]: GETGLOBAL R11 K7       ; R11 := table
267 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["0xE6450C9D"]
268 [-]: MOVE      R12 R0       ; R12 := R0
269 [-]: NEWTABLE  R13 0 2      ; R13 := {}
270 [-]: GETGLOBAL R14 K10      ; R14 := string
271 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0x639C642A"]
272 [-]: MOVE      R15 R10      ; R15 := R10
273 [-]: CALL      R14 2 2      ; R14 := R14(R15)
274 [-]: SETTABLE  R13 K9 R14   ; R13["mName"] := R14
275 [-]: GETUPVAL  R14 U5       ; R14 := U5
276 [-]: GETTABLE  R14 R14 K52  ; R14 := R14["SYNDICATE_MISSION_TAG"]
277 [-]: SETTABLE  R13 K12 R14  ; R13["MissionTypeTag"] := R14
278 [-]: CALL      R11 3 1      ; R11(R12,R13)
279 [-]: GETGLOBAL R11 K13      ; R11 := _T
280 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
281 [-]: GETUPVAL  R12 U3       ; R12 := U3
282 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
283 [-]: TEST      R11 0        ; if not R11 then PC := 319
284 [-]: JMP       319          ; PC := 319
285 [-]: GETGLOBAL R11 K13      ; R11 := _T
286 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
287 [-]: GETUPVAL  R12 U3       ; R12 := U3
288 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
289 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["mShowInStarChart"]
290 [-]: TEST      R11 0        ; if not R11 then PC := 319
291 [-]: JMP       319          ; PC := 319
292 [-]: GETGLOBAL R11 K13      ; R11 := _T
293 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
294 [-]: GETUPVAL  R12 U3       ; R12 := U3
295 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
296 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["mMissionInfo"]
297 [-]: GETGLOBAL R12 K3       ; R12 := 0xE6DC43B0
298 [-]: LOADK     R13 K55      ; R13 := "/Lotus/Language/Menu/SortieMissionName"
299 [-]: LOADNIL   R14 R14      ; R14 := nil
300 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
301 [-]: LOADK     R13 K6       ; R13 := ": "
302 [-]: GETUPVAL  R14 U4       ; R14 := U4
303 [-]: MOVE      R15 R11      ; R15 := R11
304 [-]: CALL      R14 2 2      ; R14 := R14(R15)
305 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
306 [-]: GETGLOBAL R13 K7       ; R13 := table
307 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["0xE6450C9D"]
308 [-]: MOVE      R14 R0       ; R14 := R0
309 [-]: NEWTABLE  R15 0 2      ; R15 := {}
310 [-]: GETGLOBAL R16 K10      ; R16 := string
311 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["0x639C642A"]
312 [-]: MOVE      R17 R12      ; R17 := R12
313 [-]: CALL      R16 2 2      ; R16 := R16(R17)
314 [-]: SETTABLE  R15 K9 R16   ; R15["mName"] := R16
315 [-]: GETUPVAL  R16 U5       ; R16 := U5
316 [-]: GETTABLE  R16 R16 K56  ; R16 := R16["SORTIE_MISSION_TAG"]
317 [-]: SETTABLE  R15 K12 R16  ; R15["MissionTypeTag"] := R16
318 [-]: CALL      R13 3 1      ; R13(R14,R15)
319 [-]: GETGLOBAL R13 K13      ; R13 := _T
320 [-]: GETTABLE  R13 R13 K57  ; R13 := R13["CachedInvasionInfo"]
321 [-]: GETUPVAL  R14 U3       ; R14 := U3
322 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
323 [-]: TEST      R13 0        ; if not R13 then PC := 353
324 [-]: JMP       353          ; PC := 353
325 [-]: NEWTABLE  R13 3 0      ; R13 := {}
326 [-]: LOADK     R14 K58      ; R14 := "/Lotus/Language/Menu/GrineerInvasionGeneric"
327 [-]: LOADK     R15 K59      ; R15 := "/Lotus/Language/Menu/CorpusInvasionGeneric"
328 [-]: LOADK     R16 K60      ; R16 := "/Lotus/Language/Menu/InfestedInvasionGeneric"
329 [-]: SETLIST   R13 3 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
330 [-]: GETGLOBAL R14 K3       ; R14 := 0xE6DC43B0
331 [-]: GETGLOBAL R15 K13      ; R15 := _T
332 [-]: GETTABLE  R15 R15 K57  ; R15 := R15["CachedInvasionInfo"]
333 [-]: GETUPVAL  R16 U3       ; R16 := U3
334 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
335 [-]: GETTABLE  R15 R15 K61  ; R15 := R15["mFaction"]
336 [-]: ADD       R15 R15 K62  ; R15 := R15 + 1
337 [-]: GETTABLE  R15 R13 R15  ; R15 := R13[R15]
338 [-]: LOADNIL   R16 R16      ; R16 := nil
339 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
340 [-]: GETGLOBAL R15 K7       ; R15 := table
341 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["0xE6450C9D"]
342 [-]: MOVE      R16 R0       ; R16 := R0
343 [-]: NEWTABLE  R17 0 2      ; R17 := {}
344 [-]: GETGLOBAL R18 K10      ; R18 := string
345 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["0x639C642A"]
346 [-]: MOVE      R19 R14      ; R19 := R14
347 [-]: CALL      R18 2 2      ; R18 := R18(R19)
348 [-]: SETTABLE  R17 K9 R18   ; R17["mName"] := R18
349 [-]: GETUPVAL  R18 U5       ; R18 := U5
350 [-]: GETTABLE  R18 R18 K63  ; R18 := R18["INVASION_ATTACKER_TAG"]
351 [-]: SETTABLE  R17 K12 R18  ; R17["MissionTypeTag"] := R18
352 [-]: CALL      R15 3 1      ; R15(R16,R17)
353 [-]: GETGLOBAL R15 K13      ; R15 := _T
354 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
355 [-]: TEST      R15 0        ; if not R15 then PC := 432
356 [-]: JMP       432          ; PC := 432
357 [-]: GETGLOBAL R15 K13      ; R15 := _T
358 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
359 [-]: GETUPVAL  R16 U3       ; R16 := U3
360 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
361 [-]: TEST      R15 0        ; if not R15 then PC := 432
362 [-]: JMP       432          ; PC := 432
363 [-]: GETGLOBAL R15 K13      ; R15 := _T
364 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
365 [-]: GETUPVAL  R16 U3       ; R16 := U3
366 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
367 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mVisible"]
368 [-]: TEST      R15 0        ; if not R15 then PC := 432
369 [-]: JMP       432          ; PC := 432
370 [-]: GETGLOBAL R15 K13      ; R15 := _T
371 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
372 [-]: GETUPVAL  R16 U3       ; R16 := U3
373 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
374 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["mMissionInfo"]
375 [-]: LOADK     R16 K65      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc1"
376 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
377 [-]: GETUPVAL  R18 U8       ; R18 := U8
378 [-]: GETTABLE  R18 R18 K67  ; R18 := R18["VOIDT2"]
379 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 383
380 [-]: JMP       383          ; PC := 383
381 [-]: LOADK     R16 K68      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc2"
382 [-]: JMP       403          ; PC := 403
383 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
384 [-]: GETUPVAL  R18 U8       ; R18 := U8
385 [-]: GETTABLE  R18 R18 K69  ; R18 := R18["VOIDT3"]
386 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 390
387 [-]: JMP       390          ; PC := 390
388 [-]: LOADK     R16 K70      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc3"
389 [-]: JMP       403          ; PC := 403
390 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
391 [-]: GETUPVAL  R18 U8       ; R18 := U8
392 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["VOIDT4"]
393 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 397
394 [-]: JMP       397          ; PC := 397
395 [-]: LOADK     R16 K72      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc4"
396 [-]: JMP       403          ; PC := 403
397 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
398 [-]: GETUPVAL  R18 U8       ; R18 := U8
399 [-]: GETTABLE  R18 R18 K73  ; R18 := R18["VOIDT5"]
400 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 403
401 [-]: JMP       403          ; PC := 403
402 [-]: LOADK     R16 K74      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc5"
403 [-]: GETGLOBAL R17 K75      ; R17 := mMovie
404 [-]: SELF      R17 R17 K76  ; R18 := R17; R17 := R17["0x5DB0BD4"]
405 [-]: MOVE      R19 R16      ; R19 := R16
406 [-]: MOVE      R20 R0       ; R20 := R0
407 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
408 [-]: MOVE      R16 R17      ; R16 := R17
409 [-]: GETGLOBAL R17 K3       ; R17 := 0xE6DC43B0
410 [-]: LOADK     R18 K77      ; R18 := "/Lotus/Language/Menu/VoidTearMissionName"
411 [-]: NEWTABLE  R19 0 1      ; R19 := {}
412 [-]: SETTABLE  R19 K78 R16  ; R19["TIER"] := R16
413 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
414 [-]: LOADK     R18 K6       ; R18 := ": "
415 [-]: GETUPVAL  R19 U4       ; R19 := U4
416 [-]: MOVE      R20 R15      ; R20 := R15
417 [-]: CALL      R19 2 2      ; R19 := R19(R20)
418 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
419 [-]: GETGLOBAL R18 K7       ; R18 := table
420 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["0xE6450C9D"]
421 [-]: MOVE      R19 R0       ; R19 := R0
422 [-]: NEWTABLE  R20 0 2      ; R20 := {}
423 [-]: GETGLOBAL R21 K10      ; R21 := string
424 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["0x639C642A"]
425 [-]: MOVE      R22 R17      ; R22 := R17
426 [-]: CALL      R21 2 2      ; R21 := R21(R22)
427 [-]: SETTABLE  R20 K9 R21   ; R20["mName"] := R21
428 [-]: GETUPVAL  R21 U5       ; R21 := U5
429 [-]: GETTABLE  R21 R21 K79  ; R21 := R21["ACTIVE_MISSION_TAG"]
430 [-]: SETTABLE  R20 K12 R21  ; R20["MissionTypeTag"] := R21
431 [-]: CALL      R18 3 1      ; R18(R19,R20)
432 [-]: GETUPVAL  R18 U7       ; R18 := U7
433 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18["0x4B93F65B"]
434 [-]: GETGLOBAL R20 K81      ; R20 := 0xEC274B1A
435 [-]: GETUPVAL  R21 U3       ; R21 := U3
436 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
437 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
438 [-]: GETGLOBAL R19 K75      ; R19 := mMovie
439 [-]: SELF      R19 R19 K76  ; R20 := R19; R19 := R19["0x5DB0BD4"]
440 [-]: GETUPVAL  R21 U5       ; R21 := U5
441 [-]: GETTABLE  R21 R21 K82  ; R21 := R21["FactionNames"]
442 [-]: GETTABLE  R22 R18 K83  ; R22 := R18["faction"]
443 [-]: ADD       R22 R22 K62  ; R22 := R22 + 1
444 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
445 [-]: MOVE      R22 R0       ; R22 := R0
446 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
447 [-]: GETTABLE  R20 R18 K84  ; R20 := R18["forceAllyFaction"]
448 [-]: TEST      R20 0        ; if not R20 then PC := 462
449 [-]: JMP       462          ; PC := 462
450 [-]: GETGLOBAL R20 K75      ; R20 := mMovie
451 [-]: SELF      R20 R20 K76  ; R21 := R20; R20 := R20["0x5DB0BD4"]
452 [-]: LOADK     R22 K85      ; R22 := "/Lotus/Language/Game/Faction_GrineerUC"
453 [-]: MOVE      R23 R0       ; R23 := R0
454 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
455 [-]: LOADK     R21 K86      ; R21 := " / "
456 [-]: GETGLOBAL R22 K75      ; R22 := mMovie
457 [-]: SELF      R22 R22 K76  ; R23 := R22; R22 := R22["0x5DB0BD4"]
458 [-]: LOADK     R24 K87      ; R24 := "/Lotus/Language/Game/Faction_CorpusUC"
459 [-]: MOVE      R25 R0       ; R25 := R0
460 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
461 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
462 [-]: GETGLOBAL R20 K10      ; R20 := string
463 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["0x639C642A"]
464 [-]: GETGLOBAL R21 K75      ; R21 := mMovie
465 [-]: SELF      R21 R21 K76  ; R22 := R21; R21 := R21["0x5DB0BD4"]
466 [-]: LOADK     R23 K88      ; R23 := "/Lotus/Language/Game/MissionName_"
467 [-]: GETUPVAL  R24 U5       ; R24 := U5
468 [-]: GETTABLE  R24 R24 K89  ; R24 := R24["0x87B2D555"]
469 [-]: MOVE      R25 R18      ; R25 := R18
470 [-]: CALL      R24 2 2      ; R24 := R24(R25)
471 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
472 [-]: MOVE      R24 R0       ; R24 := R0
473 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
474 [-]: LOADK     R22 K90      ; R22 := " - "
475 [-]: MOVE      R23 R19      ; R23 := R19
476 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
477 [-]: CALL      R20 2 2      ; R20 := R20(R21)
478 [-]: GETGLOBAL R21 K13      ; R21 := _T
479 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
480 [-]: TEST      R21 0        ; if not R21 then PC := 539
481 [-]: JMP       539          ; PC := 539
482 [-]: GETGLOBAL R21 K13      ; R21 := _T
483 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
484 [-]: GETUPVAL  R22 U3       ; R22 := U3
485 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
486 [-]: EQ        1 R21 K92    ; if R21 == nil then PC := 539
487 [-]: JMP       539          ; PC := 539
488 [-]: GETGLOBAL R21 K13      ; R21 := _T
489 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
490 [-]: GETUPVAL  R22 U3       ; R22 := U3
491 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
492 [-]: GETTABLE  R21 R21 K93  ; R21 := R21["mUnlocked"]
493 [-]: TEST      R21 0        ; if not R21 then PC := 539
494 [-]: JMP       539          ; PC := 539
495 [-]: GETGLOBAL R21 K13      ; R21 := _T
496 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
497 [-]: GETUPVAL  R22 U3       ; R22 := U3
498 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
499 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["mShowInStarChart"]
500 [-]: TEST      R21 0        ; if not R21 then PC := 539
501 [-]: JMP       539          ; PC := 539
502 [-]: GETGLOBAL R21 K13      ; R21 := _T
503 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
504 [-]: GETUPVAL  R22 U3       ; R22 := U3
505 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
506 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["mMissionInfo"]
507 [-]: GETUPVAL  R22 U6       ; R22 := U6
508 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["0xF81722A2"]
509 [-]: GETTABLE  R23 R21 K94  ; R23 := R21["minEnemyLevel"]
510 [-]: LE        1 K95 R23    ; if 80 <= R23 then PC := 513
511 [-]: JMP       513          ; PC := 513
512 [-]: MOVE      R23 R0       ; R23 := R0
513 [-]: MOVE      R23 R1       ; R23 := R1
514 [-]: LOADK     R24 K96      ; R24 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
515 [-]: LOADK     R25 K97      ; R25 := "/Lotus/Language/Menu/GhostTowerMissionName"
516 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
517 [-]: GETGLOBAL R23 K3       ; R23 := 0xE6DC43B0
518 [-]: MOVE      R24 R22      ; R24 := R22
519 [-]: MOVE      R25 R0       ; R25 := R0
520 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
521 [-]: LOADK     R24 K6       ; R24 := ": "
522 [-]: GETUPVAL  R25 U4       ; R25 := U4
523 [-]: MOVE      R26 R21      ; R26 := R21
524 [-]: CALL      R25 2 2      ; R25 := R25(R26)
525 [-]: CONCAT    R23 R23 R25  ; R23 := R23 .. R24 .. R25
526 [-]: GETGLOBAL R24 K7       ; R24 := table
527 [-]: GETTABLE  R24 R24 K8   ; R24 := R24["0xE6450C9D"]
528 [-]: MOVE      R25 R0       ; R25 := R0
529 [-]: NEWTABLE  R26 0 2      ; R26 := {}
530 [-]: GETGLOBAL R27 K10      ; R27 := string
531 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["0x639C642A"]
532 [-]: MOVE      R28 R23      ; R28 := R23
533 [-]: CALL      R27 2 2      ; R27 := R27(R28)
534 [-]: SETTABLE  R26 K9 R27   ; R26["mName"] := R27
535 [-]: GETUPVAL  R27 U5       ; R27 := U5
536 [-]: GETTABLE  R27 R27 K98  ; R27 := R27["KUVA_TOWER_MISSION_TAG"]
537 [-]: SETTABLE  R26 K12 R27  ; R26["MissionTypeTag"] := R27
538 [-]: CALL      R24 3 1      ; R24(R25,R26)
539 [-]: GETGLOBAL R24 K13      ; R24 := _T
540 [-]: GETTABLE  R24 R24 K99  ; R24 := R24["CachedSkullNodes"]
541 [-]: TEST      R24 0        ; if not R24 then PC := 618
542 [-]: JMP       618          ; PC := 618
543 [-]: GETGLOBAL R24 K13      ; R24 := _T
544 [-]: GETTABLE  R24 R24 K99  ; R24 := R24["CachedSkullNodes"]
545 [-]: GETUPVAL  R25 U3       ; R25 := U3
546 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
547 [-]: EQ        1 R24 K92    ; if R24 == nil then PC := 618
548 [-]: JMP       618          ; PC := 618
549 [-]: GETGLOBAL R24 K3       ; R24 := 0xE6DC43B0
550 [-]: LOADK     R25 K100     ; R25 := "/Lotus/Language/Menu/NightmareModeName"
551 [-]: LOADNIL   R26 R26      ; R26 := nil
552 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
553 [-]: LOADK     R25 K6       ; R25 := ": "
554 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
555 [-]: MOVE      R25 R24      ; R25 := R24
556 [-]: MOVE      R26 R20      ; R26 := R20
557 [-]: CONCAT    R24 R25 R26  ; R24 := R25 .. R26
558 [-]: MOVE      R25 R24      ; R25 := R24
559 [-]: LOADK     R26 K101     ; R26 := " ("
560 [-]: GETGLOBAL R27 K10      ; R27 := string
561 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["0x639C642A"]
562 [-]: GETGLOBAL R28 K75      ; R28 := mMovie
563 [-]: SELF      R28 R28 K76  ; R29 := R28; R28 := R28["0x5DB0BD4"]
564 [-]: GETGLOBAL R30 K13      ; R30 := _T
565 [-]: GETTABLE  R30 R30 K99  ; R30 := R30["CachedSkullNodes"]
566 [-]: GETUPVAL  R31 U3       ; R31 := U3
567 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
568 [-]: GETTABLE  R30 R30 K62  ; R30 := R30[1]
569 [-]: GETTABLE  R30 R30 K102 ; R30 := R30[2]
570 [-]: MOVE      R31 R0       ; R31 := R0
571 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
572 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
573 [-]: CONCAT    R24 R25 R27  ; R24 := R25 .. R26 .. R27
574 [-]: GETGLOBAL R25 K13      ; R25 := _T
575 [-]: GETTABLE  R25 R25 K99  ; R25 := R25["CachedSkullNodes"]
576 [-]: GETUPVAL  R26 U3       ; R26 := U3
577 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
578 [-]: LEN       R25 R25      ; R25 := # R25
579 [-]: LT        0 K62 R25    ; if 1 >= R25 then PC := 606
580 [-]: JMP       606          ; PC := 606
581 [-]: LOADK     R25 K102     ; R25 := 2
582 [-]: GETGLOBAL R26 K13      ; R26 := _T
583 [-]: GETTABLE  R26 R26 K99  ; R26 := R26["CachedSkullNodes"]
584 [-]: GETUPVAL  R27 U3       ; R27 := U3
585 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
586 [-]: LEN       R26 R26      ; R26 := # R26
587 [-]: LOADK     R27 K62      ; R27 := 1
588 [-]: FORPREP   R25 605      ; R25 -= R27; PC := 605
589 [-]: MOVE      R29 R24      ; R29 := R24
590 [-]: LOADK     R30 K103     ; R30 := ", "
591 [-]: GETGLOBAL R31 K10      ; R31 := string
592 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["0x639C642A"]
593 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
594 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
595 [-]: GETGLOBAL R34 K13      ; R34 := _T
596 [-]: GETTABLE  R34 R34 K99  ; R34 := R34["CachedSkullNodes"]
597 [-]: GETUPVAL  R35 U3       ; R35 := U3
598 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
599 [-]: GETTABLE  R34 R34 R28  ; R34 := R34[R28]
600 [-]: GETTABLE  R34 R34 K102 ; R34 := R34[2]
601 [-]: MOVE      R35 R0       ; R35 := R0
602 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
603 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
604 [-]: CONCAT    R24 R29 R31  ; R24 := R29 .. R30 .. R31
605 [-]: FORLOOP   R25 589      ; R25 += R27; if R25 <= R26 then begin PC := 589; R28 := R25 end
606 [-]: MOVE      R29 R24      ; R29 := R24
607 [-]: LOADK     R30 K104     ; R30 := ")"
608 [-]: CONCAT    R24 R29 R30  ; R24 := R29 .. R30
609 [-]: GETGLOBAL R29 K7       ; R29 := table
610 [-]: GETTABLE  R29 R29 K8   ; R29 := R29["0xE6450C9D"]
611 [-]: MOVE      R30 R0       ; R30 := R0
612 [-]: NEWTABLE  R31 0 2      ; R31 := {}
613 [-]: SETTABLE  R31 K9 R24   ; R31["mName"] := R24
614 [-]: GETUPVAL  R32 U5       ; R32 := U5
615 [-]: GETTABLE  R32 R32 K105 ; R32 := R32["NIGHTMARE_TAG"]
616 [-]: SETTABLE  R31 K12 R32  ; R31["MissionTypeTag"] := R32
617 [-]: CALL      R29 3 1      ; R29(R30,R31)
618 [-]: GETGLOBAL R29 K13      ; R29 := _T
619 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
620 [-]: TEST      R29 0        ; if not R29 then PC := 669
621 [-]: JMP       669          ; PC := 669
622 [-]: GETGLOBAL R29 K13      ; R29 := _T
623 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
624 [-]: GETUPVAL  R30 U3       ; R30 := U3
625 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
626 [-]: TEST      R29 0        ; if not R29 then PC := 669
627 [-]: JMP       669          ; PC := 669
628 [-]: GETGLOBAL R29 K13      ; R29 := _T
629 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
630 [-]: GETUPVAL  R30 U3       ; R30 := U3
631 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
632 [-]: GETGLOBAL R30 K3       ; R30 := 0xE6DC43B0
633 [-]: LOADK     R31 K85      ; R31 := "/Lotus/Language/Game/Faction_GrineerUC"
634 [-]: MOVE      R32 R0       ; R32 := R0
635 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
636 [-]: GETGLOBAL R31 K10      ; R31 := string
637 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["0x639C642A"]
638 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
639 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
640 [-]: LOADK     R34 K88      ; R34 := "/Lotus/Language/Game/MissionName_"
641 [-]: GETUPVAL  R35 U5       ; R35 := U5
642 [-]: GETTABLE  R35 R35 K89  ; R35 := R35["0x87B2D555"]
643 [-]: GETTABLE  R36 R29 K19  ; R36 := R29["mMissionInfo"]
644 [-]: CALL      R35 2 2      ; R35 := R35(R36)
645 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
646 [-]: MOVE      R35 R0       ; R35 := R0
647 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
648 [-]: LOADK     R33 K90      ; R33 := " - "
649 [-]: MOVE      R34 R30      ; R34 := R30
650 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
651 [-]: CALL      R31 2 2      ; R31 := R31(R32)
652 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
653 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
654 [-]: GETTABLE  R34 R29 K107 ; R34 := R29["missionName"]
655 [-]: MOVE      R35 R0       ; R35 := R0
656 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
657 [-]: LOADK     R33 K6       ; R33 := ": "
658 [-]: MOVE      R34 R31      ; R34 := R31
659 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
660 [-]: GETGLOBAL R33 K7       ; R33 := table
661 [-]: GETTABLE  R33 R33 K8   ; R33 := R33["0xE6450C9D"]
662 [-]: MOVE      R34 R0       ; R34 := R0
663 [-]: NEWTABLE  R35 0 2      ; R35 := {}
664 [-]: SETTABLE  R35 K9 R32   ; R35["mName"] := R32
665 [-]: GETUPVAL  R36 U5       ; R36 := U5
666 [-]: GETTABLE  R36 R36 K108 ; R36 := R36["NEMESIS_MISSION_TAG"]
667 [-]: SETTABLE  R35 K12 R36  ; R35["MissionTypeTag"] := R36
668 [-]: CALL      R33 3 1      ; R33(R34,R35)
669 [-]: GETGLOBAL R33 K13      ; R33 := _T
670 [-]: GETTABLE  R33 R33 K109 ; R33 := R33["CachedEliteAlertMissions"]
671 [-]: TEST      R33 0        ; if not R33 then PC := 695
672 [-]: JMP       695          ; PC := 695
673 [-]: GETGLOBAL R33 K13      ; R33 := _T
674 [-]: GETTABLE  R33 R33 K109 ; R33 := R33["CachedEliteAlertMissions"]
675 [-]: GETUPVAL  R34 U3       ; R34 := U3
676 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
677 [-]: EQ        1 R33 K92    ; if R33 == nil then PC := 695
678 [-]: JMP       695          ; PC := 695
679 [-]: GETGLOBAL R33 K3       ; R33 := 0xE6DC43B0
680 [-]: LOADK     R34 K110     ; R34 := "/Lotus/Language/Menu/AlertHardMode"
681 [-]: LOADNIL   R35 R35      ; R35 := nil
682 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
683 [-]: LOADK     R34 K6       ; R34 := ": "
684 [-]: MOVE      R35 R20      ; R35 := R20
685 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
686 [-]: GETGLOBAL R34 K7       ; R34 := table
687 [-]: GETTABLE  R34 R34 K8   ; R34 := R34["0xE6450C9D"]
688 [-]: MOVE      R35 R0       ; R35 := R0
689 [-]: NEWTABLE  R36 0 2      ; R36 := {}
690 [-]: SETTABLE  R36 K9 R33   ; R36["mName"] := R33
691 [-]: GETUPVAL  R37 U5       ; R37 := U5
692 [-]: GETTABLE  R37 R37 K111 ; R37 := R37["ELITE_ALERT_TAG"]
693 [-]: SETTABLE  R36 K12 R37  ; R36["MissionTypeTag"] := R37
694 [-]: CALL      R34 3 1      ; R34(R35,R36)
695 [-]: GETGLOBAL R34 K0       ; R34 := 0x400E7765
696 [-]: GETTABLE  R35 R18 K112 ; R35 := R18["levelOverride"]
697 [-]: CALL      R34 2 2      ; R34 := R34(R35)
698 [-]: TEST      R34 1        ; if R34 then PC := 717
699 [-]: JMP       717          ; PC := 717
700 [-]: GETGLOBAL R34 K7       ; R34 := table
701 [-]: GETTABLE  R34 R34 K8   ; R34 := R34["0xE6450C9D"]
702 [-]: MOVE      R35 R0       ; R35 := R0
703 [-]: NEWTABLE  R36 0 2      ; R36 := {}
704 [-]: GETGLOBAL R37 K10      ; R37 := string
705 [-]: GETTABLE  R37 R37 K11  ; R37 := R37["0x639C642A"]
706 [-]: GETGLOBAL R38 K3       ; R38 := 0xE6DC43B0
707 [-]: LOADK     R39 K113     ; R39 := "/Lotus/Language/Menu/ConfirmNightmareNo"
708 [-]: MOVE      R40 R0       ; R40 := R0
709 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
710 [-]: LOADK     R39 K6       ; R39 := ": "
711 [-]: MOVE      R40 R20      ; R40 := R20
712 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
713 [-]: CALL      R37 2 2      ; R37 := R37(R38)
714 [-]: SETTABLE  R36 K9 R37   ; R36["mName"] := R37
715 [-]: SETTABLE  R36 K12 K26  ; R36["MissionTypeTag"] := ""
716 [-]: CALL      R34 3 1      ; R34(R35,R36)
717 [-]: RETURN    R0 2         ; return R0
718 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4217
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB451D706"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SF_CLAN"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 1         ; if R0 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xB11F032"]
 10 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/SolarMap_NoClanShipFeature"
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 14 [-]: GETGLOBAL R1 K6        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["SquadOverlay"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 1         ; if R0 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R0 K6        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["SquadOverlay"]
 21 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x458F27A9"]
 22 [-]: LOADK     R2 K9        ; R2 := "InitiateDojoVisit"
 23 [-]: LOADK     R3 K10       ; R3 := ""
 24 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 25 [-]: NEWTABLE  R0 0 3       ; R0 := {}
 26 [-]: SETTABLE  R0 K11 K12   ; R0["name"] := "DojoHUB_HUB"
 27 [-]: SETTABLE  R0 K13 K10   ; R0["quest"] := ""
 28 [-]: SETTABLE  R0 K14 K10   ; R0["difficulty"] := ""
 29 [-]: GETGLOBAL R1 K15       ; R1 := gMatchingService
 30 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x3016115E"]
 31 [-]: GETGLOBAL R3 K17       ; R3 := cjson
 32 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["0x8DC1075B"]
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 35 [-]: CALL      R1 0 1       ; R1(R2,...)
 36 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4238
; #Upvalues:       18
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["locked"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["locationEnabled"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R0 K3        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 18 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["radialSector"]
 23 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K3        ; R0 := _T
 26 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 27 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["baseNodeName"]
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 30 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["radialSector"]
 31 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 32 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
 37 [-]: GETGLOBAL R2 K3        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SquadOverlay"]
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: TEST      R0 0         ; if not R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R1 K3        ; R1 := _T
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["SquadOverlay"]
 46 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x458F27A9"]
 47 [-]: LOADK     R3 K12       ; R3 := "Accept"
 48 [-]: LOADK     R4 K13       ; R4 := ""
 49 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R1 K14       ; R1 := 0x9FAED6BC
 52 [-]: GETUPVAL  R2 U0        ; R2 := U0
 53 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 54 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 55 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["name"]
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 59 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 60 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["keyChain"]
 61 [-]: LOADNIL   R3 R3        ; R3 := nil
 62 [-]: GETUPVAL  R4 U0        ; R4 := U0
 63 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 64 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["radialSector"]
 65 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mission"]
 66 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["difficulty"]
 67 [-]: GETUPVAL  R5 U1        ; R5 := U1
 68 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["Active"]
 69 [-]: TEST      R5 1         ; if R5 then PC := 104
 70 [-]: JMP       104          ; PC := 104
 71 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 72 [-]: GETUPVAL  R6 U0        ; R6 := U0
 73 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 74 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 75 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 76 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["levelKeyName"]
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: TEST      R5 1         ; if R5 then PC := 104
 79 [-]: JMP       104          ; PC := 104
 80 [-]: GETGLOBAL R5 K20       ; R5 := string
 81 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0xDE44F664"]
 82 [-]: MOVE      R6 R1        ; R6 := R1
 83 [-]: GETUPVAL  R7 U2        ; R7 := U2
 84 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["KEY_TAG"]
 85 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 86 [-]: TEST      R5 1         ; if R5 then PC := 104
 87 [-]: JMP       104          ; PC := 104
 88 [-]: GETGLOBAL R5 K3        ; R5 := _T
 89 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["DesiredGoToNodeTag"]
 90 [-]: TEST      R5 1         ; if R5 then PC := 104
 91 [-]: JMP       104          ; PC := 104
 92 [-]: GETGLOBAL R5 K14       ; R5 := 0x9FAED6BC
 93 [-]: GETUPVAL  R6 U0        ; R6 := U0
 94 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 95 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 96 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 97 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["levelKeyName"]
 98 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0x1B252E3C"]
 99 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
100 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
101 [-]: GETUPVAL  R6 U2        ; R6 := U2
102 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["KEY_TAG"]
103 [-]: CONCAT    R1 R5 R6     ; R1 := R5 .. R6
104 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
105 [-]: MOVE      R6 R2        ; R6 := R2
106 [-]: CALL      R5 2 2       ; R5 := R5(R6)
107 [-]: TEST      R5 1         ; if R5 then PC := 133
108 [-]: JMP       133          ; PC := 133
109 [-]: LOADNIL   R5 R5        ; R5 := nil
110 [-]: GETGLOBAL R6 K20       ; R6 := string
111 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["0xDE44F664"]
112 [-]: MOVE      R7 R1        ; R7 := R1
113 [-]: GETUPVAL  R8 U2        ; R8 := U2
114 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["KEY_TAG"]
115 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
116 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 128
117 [-]: JMP       128          ; PC := 128
118 [-]: GETGLOBAL R7 K20       ; R7 := string
119 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["0x7B782033"]
120 [-]: MOVE      R8 R1        ; R8 := R1
121 [-]: LOADK     R9 K26       ; R9 := 1
122 [-]: SUB       R10 R6 K26   ; R10 := R6 - 1
123 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
124 [-]: GETGLOBAL R8 K27       ; R8 := 0x7C282057
125 [-]: MOVE      R9 R7        ; R9 := R7
126 [-]: CALL      R8 2 2       ; R8 := R8(R9)
127 [-]: MOVE      R5 R8        ; R5 := R8
128 [-]: GETGLOBAL R8 K28       ; R8 := gGameRules
129 [-]: SELF      R8 R8 K29    ; R9 := R8; R8 := R8["0x8DD31239"]
130 [-]: MOVE      R10 R2       ; R10 := R2
131 [-]: MOVE      R11 R5       ; R11 := R5
132 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
133 [-]: GETGLOBAL R8 K20       ; R8 := string
134 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["0xDE44F664"]
135 [-]: MOVE      R9 R1        ; R9 := R1
136 [-]: LOADK     R10 K30      ; R10 := "FeaturedDojo"
137 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
138 [-]: TEST      R8 0         ; if not R8 then PC := 196
139 [-]: JMP       196          ; PC := 196
140 [-]: GETUPVAL  R8 U3        ; R8 := U3
141 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["0x36BA5F48"]
142 [-]: CALL      R8 1 2       ; R8 := R8()
143 [-]: TEST      R8 1         ; if R8 then PC := 187
144 [-]: JMP       187          ; PC := 187
145 [-]: GETGLOBAL R8 K32       ; R8 := 0xF595ADDE
146 [-]: GETGLOBAL R9 K20       ; R9 := string
147 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["0xAF449107"]
148 [-]: MOVE      R10 R1       ; R10 := R1
149 [-]: LOADK     R11 K34      ; R11 := "%d+"
150 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
151 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
152 [-]: GETGLOBAL R9 K35       ; R9 := gPlayerProfileMgr
153 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x21EF7B1A"]
154 [-]: LOADK     R11 K37      ; R11 := 0
155 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
156 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9["0x654F1092"]
157 [-]: CALL      R9 2 2       ; R9 := R9(R10)
158 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x2D0B8A86"]
159 [-]: CALL      R9 2 2       ; R9 := R9(R10)
160 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["mFeaturedGuilds"]
161 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
162 [-]: GETTABLE  R9 R9 K41    ; R9 := R9["mId"]
163 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
164 [-]: GETGLOBAL R11 K3       ; R11 := _T
165 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["SquadOverlay"]
166 [-]: CALL      R10 2 2      ; R10 := R10(R11)
167 [-]: TEST      R10 1        ; if R10 then PC := 195
168 [-]: JMP       195          ; PC := 195
169 [-]: GETGLOBAL R10 K3       ; R10 := _T
170 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SquadOverlay"]
171 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0x458F27A9"]
172 [-]: LOADK     R12 K42      ; R12 := "InitiateDojoVisit"
173 [-]: GETTABLE  R13 R9 K41   ; R13 := R9["mId"]
174 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
175 [-]: NEWTABLE  R10 0 3      ; R10 := {}
176 [-]: SETTABLE  R10 K8 K43   ; R10["name"] := "DojoHUB_HUB"
177 [-]: SETTABLE  R10 K44 K13  ; R10["quest"] := ""
178 [-]: SETTABLE  R10 K17 K13  ; R10["difficulty"] := ""
179 [-]: GETGLOBAL R11 K45      ; R11 := gMatchingService
180 [-]: SELF      R11 R11 K46  ; R12 := R11; R11 := R11["0x3016115E"]
181 [-]: GETGLOBAL R13 K47      ; R13 := cjson
182 [-]: GETTABLE  R13 R13 K48  ; R13 := R13["0x8DC1075B"]
183 [-]: MOVE      R14 R10      ; R14 := R10
184 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
185 [-]: CALL      R11 0 1      ; R11(R12,...)
186 [-]: JMP       195          ; PC := 195
187 [-]: GETUPVAL  R11 U3       ; R11 := U3
188 [-]: GETTABLE  R11 R11 K49  ; R11 := R11["0xB11F032"]
189 [-]: GETGLOBAL R12 K50      ; R12 := mMovie
190 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12["0x5DB0BD4"]
191 [-]: LOADK     R14 K52      ; R14 := "/Lotus/Language/Clan/RestrictedUGCWarning"
192 [-]: MOVE      R15 R0       ; R15 := R0
193 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
194 [-]: CALL      R11 0 1      ; R11(R12,...)
195 [-]: RETURN    R0 1         ; return 
196 [-]: GETUPVAL  R11 U4       ; R11 := U4
197 [-]: GETGLOBAL R12 K53      ; R12 := gRegion
198 [-]: SELF      R12 R12 K54  ; R13 := R12; R12 := R12["0x3E2F6BF"]
199 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
200 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
201 [-]: TEST      R11 1        ; if R11 then PC := 214
202 [-]: JMP       214          ; PC := 214
203 [-]: GETGLOBAL R11 K20      ; R11 := string
204 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xDE44F664"]
205 [-]: MOVE      R12 R1       ; R12 := R1
206 [-]: LOADK     R13 K55      ; R13 := "Dojo"
207 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
208 [-]: TEST      R11 0        ; if not R11 then PC := 214
209 [-]: JMP       214          ; PC := 214
210 [-]: GETUPVAL  R11 U5       ; R11 := U5
211 [-]: CALL      R11 1 1      ; R11()
212 [-]: RETURN    R0 1         ; return 
213 [-]: JMP       279          ; PC := 279
214 [-]: GETGLOBAL R11 K20      ; R11 := string
215 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xDE44F664"]
216 [-]: MOVE      R12 R1       ; R12 := R1
217 [-]: LOADK     R13 K56      ; R13 := "StalkerHideout"
218 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
219 [-]: TEST      R11 0        ; if not R11 then PC := 279
220 [-]: JMP       279          ; PC := 279
221 [-]: LOADNIL   R11 R11      ; R11 := nil
222 [-]: GETGLOBAL R12 K20      ; R12 := string
223 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["0xDE44F664"]
224 [-]: MOVE      R13 R1       ; R13 := R1
225 [-]: GETUPVAL  R14 U2       ; R14 := U2
226 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["KEY_TAG"]
227 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
228 [-]: EQ        1 R12 K5     ; if R12 == nil then PC := 278
229 [-]: JMP       278          ; PC := 278
230 [-]: GETGLOBAL R13 K20      ; R13 := string
231 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["0x7B782033"]
232 [-]: MOVE      R14 R1       ; R14 := R1
233 [-]: LOADK     R15 K26      ; R15 := 1
234 [-]: SUB       R16 R12 K26  ; R16 := R12 - 1
235 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
236 [-]: GETGLOBAL R14 K27      ; R14 := 0x7C282057
237 [-]: MOVE      R15 R13      ; R15 := R13
238 [-]: CALL      R14 2 2      ; R14 := R14(R15)
239 [-]: MOVE      R11 R14      ; R11 := R14
240 [-]: GETGLOBAL R14 K9       ; R14 := 0x400E7765
241 [-]: MOVE      R15 R11      ; R15 := R11
242 [-]: CALL      R14 2 2      ; R14 := R14(R15)
243 [-]: TEST      R14 1        ; if R14 then PC := 278
244 [-]: JMP       278          ; PC := 278
245 [-]: SELF      R14 R11 K57  ; R15 := R11; R14 := R11["0xB8637349"]
246 [-]: CALL      R14 2 2      ; R14 := R14(R15)
247 [-]: GETGLOBAL R15 K9       ; R15 := 0x400E7765
248 [-]: GETTABLE  R16 R14 K58  ; R16 := R14["levelOverride"]
249 [-]: CALL      R15 2 2      ; R15 := R15(R16)
250 [-]: TEST      R15 1        ; if R15 then PC := 278
251 [-]: JMP       278          ; PC := 278
252 [-]: GETGLOBAL R15 K59      ; R15 := _G
253 [-]: SETTABLE  R15 K60 K61  ; R15["StalkerMode"] := "0x1"
254 [-]: GETGLOBAL R15 K62      ; R15 := gGameConfig
255 [-]: SELF      R15 R15 K63  ; R16 := R15; R15 := R15["0x92CE9D7D"]
256 [-]: GETTABLE  R17 R14 K58  ; R17 := R14["levelOverride"]
257 [-]: CALL      R15 3 1      ; R15(R16,R17)
258 [-]: GETGLOBAL R15 K53      ; R15 := gRegion
259 [-]: SELF      R15 R15 K64  ; R16 := R15; R15 := R15["0xD2075696"]
260 [-]: CALL      R15 2 2      ; R15 := R15(R16)
261 [-]: GETTABLE  R16 R14 K58  ; R16 := R14["levelOverride"]
262 [-]: SETTABLE  R15 K65 R16  ; R15["level"] := R16
263 [-]: GETTABLE  R16 R14 K66  ; R16 := R14["gameRules"]
264 [-]: SETTABLE  R15 K66 R16  ; R15["gameRules"] := R16
265 [-]: GETGLOBAL R16 K67      ; R16 := gGameData
266 [-]: SELF      R16 R16 K68  ; R17 := R16; R16 := R16["0x33ABF5D"]
267 [-]: MOVE      R18 R15      ; R18 := R15
268 [-]: MOVE      R19 R1       ; R19 := R1
269 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
270 [-]: GETGLOBAL R16 K67      ; R16 := gGameData
271 [-]: SELF      R16 R16 K69  ; R17 := R16; R16 := R16["0x19F7DE8"]
272 [-]: MOVE      R18 R1       ; R18 := R1
273 [-]: CALL      R16 3 1      ; R16(R17,R18)
274 [-]: GETGLOBAL R16 K70      ; R16 := Engine
275 [-]: GETTABLE  R16 R16 K71  ; R16 := R16["0xC53FF352"]
276 [-]: MOVE      R17 R0       ; R17 := R0
277 [-]: CALL      R16 2 1      ; R16(R17)
278 [-]: RETURN    R0 1         ; return 
279 [-]: GETGLOBAL R16 K59      ; R16 := _G
280 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["StalkerMode"]
281 [-]: TEST      R16 0        ; if not R16 then PC := 308
282 [-]: JMP       308          ; PC := 308
283 [-]: GETUPVAL  R16 U0       ; R16 := U0
284 [-]: GETTABLE  R16 R16 K0   ; R16 := R16["Node"]
285 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["radialSector"]
286 [-]: GETTABLE  R16 R16 K72  ; R16 := R16["nodeType"]
287 [-]: GETGLOBAL R17 K73      ; R17 := Lotus_Game
288 [-]: GETTABLE  R17 R17 K74  ; R17 := R17["NT_CLAN"]
289 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 301
290 [-]: JMP       301          ; PC := 301
291 [-]: GETUPVAL  R16 U6       ; R16 := U6
292 [-]: MOVE      R17 R1       ; R17 := R1
293 [-]: GETUPVAL  R18 U2       ; R18 := U2
294 [-]: GETTABLE  R18 R18 K75  ; R18 := R18["BADLAND_MISSION_TAG"]
295 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
296 [-]: MOVE      R18 R2       ; R18 := R2
297 [-]: MOVE      R19 R3       ; R19 := R3
298 [-]: MOVE      R20 R4       ; R20 := R4
299 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
300 [-]: JMP       307          ; PC := 307
301 [-]: GETUPVAL  R16 U6       ; R16 := U6
302 [-]: MOVE      R17 R1       ; R17 := R1
303 [-]: MOVE      R18 R2       ; R18 := R2
304 [-]: MOVE      R19 R3       ; R19 := R3
305 [-]: MOVE      R20 R4       ; R20 := R4
306 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
307 [-]: RETURN    R0 1         ; return 
308 [-]: GETGLOBAL R16 K9       ; R16 := 0x400E7765
309 [-]: MOVE      R17 R2       ; R17 := R2
310 [-]: CALL      R16 2 2      ; R16 := R16(R17)
311 [-]: TEST      R16 1        ; if R16 then PC := 316
312 [-]: JMP       316          ; PC := 316
313 [-]: GETUPVAL  R16 U7       ; R16 := U7
314 [-]: EQ        1 R2 R16     ; if R2 == R16 then PC := 317
315 [-]: JMP       317          ; PC := 317
316 [-]: MOVE      R16 R0       ; R16 := R0
317 [-]: MOVE      R16 R1       ; R16 := R1
318 [-]: TEST      R16 1        ; if R16 then PC := 605
319 [-]: JMP       605          ; PC := 605
320 [-]: GETUPVAL  R17 U0       ; R17 := U0
321 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
322 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
323 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["nodeType"]
324 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
325 [-]: GETTABLE  R18 R18 K76  ; R18 := R18["NT_MISSION"]
326 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 346
327 [-]: JMP       346          ; PC := 346
328 [-]: GETUPVAL  R17 U0       ; R17 := U0
329 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
330 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
331 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["nodeType"]
332 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
333 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["NT_CLAN"]
334 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 605
335 [-]: JMP       605          ; PC := 605
336 [-]: GETGLOBAL R17 K3       ; R17 := _T
337 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedEliteAlertMissions"]
338 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
339 [-]: TEST      R17 1        ; if R17 then PC := 346
340 [-]: JMP       346          ; PC := 346
341 [-]: GETGLOBAL R17 K3       ; R17 := _T
342 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedNemesisMissions"]
343 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
344 [-]: TEST      R17 0        ; if not R17 then PC := 605
345 [-]: JMP       605          ; PC := 605
346 [-]: GETUPVAL  R17 U8       ; R17 := U8
347 [-]: GETUPVAL  R18 U0       ; R18 := U0
348 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
349 [-]: MOVE      R19 R1       ; R19 := R1
350 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
351 [-]: TEST      R17 0        ; if not R17 then PC := 605
352 [-]: JMP       605          ; PC := 605
353 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
354 [-]: GETUPVAL  R18 U0       ; R18 := U0
355 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
356 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
357 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
358 [-]: CALL      R17 2 2      ; R17 := R17(R18)
359 [-]: TEST      R17 0        ; if not R17 then PC := 462
360 [-]: JMP       462          ; PC := 462
361 [-]: GETGLOBAL R17 K3       ; R17 := _T
362 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedAlerts"]
363 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
364 [-]: TEST      R17 0        ; if not R17 then PC := 372
365 [-]: JMP       372          ; PC := 372
366 [-]: GETGLOBAL R17 K3       ; R17 := _T
367 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedAlerts"]
368 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
369 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mVisible"]
370 [-]: TEST      R17 1        ; if R17 then PC := 462
371 [-]: JMP       462          ; PC := 462
372 [-]: GETGLOBAL R17 K59      ; R17 := _G
373 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedGoalInfo"]
374 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
375 [-]: TEST      R17 1        ; if R17 then PC := 462
376 [-]: JMP       462          ; PC := 462
377 [-]: GETGLOBAL R17 K59      ; R17 := _G
378 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["MergedGoalNodes"]
379 [-]: TEST      R17 0        ; if not R17 then PC := 386
380 [-]: JMP       386          ; PC := 386
381 [-]: GETGLOBAL R17 K59      ; R17 := _G
382 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["MergedGoalNodes"]
383 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
384 [-]: TEST      R17 1        ; if R17 then PC := 462
385 [-]: JMP       462          ; PC := 462
386 [-]: GETGLOBAL R17 K3       ; R17 := _T
387 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSyndicateMissions"]
388 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
389 [-]: TEST      R17 0        ; if not R17 then PC := 397
390 [-]: JMP       397          ; PC := 397
391 [-]: GETGLOBAL R17 K3       ; R17 := _T
392 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSyndicateMissions"]
393 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
394 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mVisible"]
395 [-]: TEST      R17 1        ; if R17 then PC := 462
396 [-]: JMP       462          ; PC := 462
397 [-]: GETGLOBAL R17 K3       ; R17 := _T
398 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedSortieMissions"]
399 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
400 [-]: TEST      R17 0        ; if not R17 then PC := 408
401 [-]: JMP       408          ; PC := 408
402 [-]: GETGLOBAL R17 K3       ; R17 := _T
403 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedSortieMissions"]
404 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
405 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mShowInStarChart"]
406 [-]: TEST      R17 1        ; if R17 then PC := 462
407 [-]: JMP       462          ; PC := 462
408 [-]: GETGLOBAL R17 K3       ; R17 := _T
409 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedActiveMissions"]
410 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
411 [-]: TEST      R17 0        ; if not R17 then PC := 425
412 [-]: JMP       425          ; PC := 425
413 [-]: GETGLOBAL R17 K3       ; R17 := _T
414 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedActiveMissions"]
415 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
416 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mVisible"]
417 [-]: TEST      R17 0        ; if not R17 then PC := 425
418 [-]: JMP       425          ; PC := 425
419 [-]: GETGLOBAL R17 K3       ; R17 := _T
420 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedActiveMissions"]
421 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
422 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mUnlocked"]
423 [-]: TEST      R17 1        ; if R17 then PC := 462
424 [-]: JMP       462          ; PC := 462
425 [-]: GETGLOBAL R17 K3       ; R17 := _T
426 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedInvasionInfo"]
427 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
428 [-]: TEST      R17 1        ; if R17 then PC := 462
429 [-]: JMP       462          ; PC := 462
430 [-]: GETGLOBAL R17 K3       ; R17 := _T
431 [-]: GETTABLE  R17 R17 K89  ; R17 := R17["CachedSkullNodes"]
432 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
433 [-]: EQ        0 R17 K5     ; if R17 ~= nil then PC := 462
434 [-]: JMP       462          ; PC := 462
435 [-]: GETGLOBAL R17 K3       ; R17 := _T
436 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedGhostTowerMissions"]
437 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
438 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 446
439 [-]: JMP       446          ; PC := 446
440 [-]: GETGLOBAL R17 K3       ; R17 := _T
441 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedGhostTowerMissions"]
442 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
443 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mUnlocked"]
444 [-]: TEST      R17 1        ; if R17 then PC := 462
445 [-]: JMP       462          ; PC := 462
446 [-]: GETGLOBAL R17 K3       ; R17 := _T
447 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedEliteAlertMissions"]
448 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
449 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 457
450 [-]: JMP       457          ; PC := 457
451 [-]: GETGLOBAL R17 K3       ; R17 := _T
452 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedEliteAlertMissions"]
453 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
454 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mUnlocked"]
455 [-]: TEST      R17 1        ; if R17 then PC := 462
456 [-]: JMP       462          ; PC := 462
457 [-]: GETGLOBAL R17 K3       ; R17 := _T
458 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedNemesisMissions"]
459 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
460 [-]: TEST      R17 0        ; if not R17 then PC := 605
461 [-]: JMP       605          ; PC := 605
462 [-]: GETGLOBAL R17 K3       ; R17 := _T
463 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
464 [-]: TEST      R17 0        ; if not R17 then PC := 507
465 [-]: JMP       507          ; PC := 507
466 [-]: GETGLOBAL R17 K3       ; R17 := _T
467 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
468 [-]: GETUPVAL  R18 U2       ; R18 := U2
469 [-]: GETTABLE  R18 R18 K91  ; R18 := R18["ACTIVE_MISSION_TAG"]
470 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 478
471 [-]: JMP       478          ; PC := 478
472 [-]: GETGLOBAL R17 K3       ; R17 := _T
473 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
474 [-]: GETUPVAL  R17 U9       ; R17 := U9
475 [-]: MOVE      R18 R1       ; R18 := R1
476 [-]: CALL      R17 2 1      ; R17(R18)
477 [-]: JMP       505          ; PC := 505
478 [-]: GETGLOBAL R17 K3       ; R17 := _T
479 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
480 [-]: GETUPVAL  R18 U2       ; R18 := U2
481 [-]: GETTABLE  R18 R18 K92  ; R18 := R18["INVASION_ATTACKER_TAG"]
482 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 490
483 [-]: JMP       490          ; PC := 490
484 [-]: GETGLOBAL R17 K3       ; R17 := _T
485 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
486 [-]: GETUPVAL  R17 U10      ; R17 := U10
487 [-]: MOVE      R18 R1       ; R18 := R1
488 [-]: CALL      R17 2 1      ; R17(R18)
489 [-]: JMP       505          ; PC := 505
490 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
491 [-]: GETUPVAL  R18 U0       ; R18 := U0
492 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
493 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
494 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
495 [-]: CALL      R17 2 2      ; R17 := R17(R18)
496 [-]: GETGLOBAL R18 K3       ; R18 := _T
497 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["DesiredGoToNodeTag"]
498 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
499 [-]: GETGLOBAL R17 K3       ; R17 := _T
500 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
501 [-]: GETUPVAL  R17 U6       ; R17 := U6
502 [-]: MOVE      R18 R1       ; R18 := R1
503 [-]: LOADNIL   R19 R21      ; R19 := R20 := R21 := nil
504 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
505 [-]: RETURN    R0 1         ; return 
506 [-]: JMP       605          ; PC := 605
507 [-]: GETUPVAL  R17 U0       ; R17 := U0
508 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
509 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
510 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
511 [-]: GETTABLE  R17 R17 K93  ; R17 := R17["missionType"]
512 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
513 [-]: GETTABLE  R18 R18 K94  ; R18 := R18["MT_ARENA"]
514 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 555
515 [-]: JMP       555          ; PC := 555
516 [-]: GETUPVAL  R17 U0       ; R17 := U0
517 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
518 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
519 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
520 [-]: GETTABLE  R17 R17 K95  ; R17 := R17["faction"]
521 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
522 [-]: GETTABLE  R18 R18 K96  ; R18 := R18["FC_CORPUS"]
523 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 555
524 [-]: JMP       555          ; PC := 555
525 [-]: GETUPVAL  R17 U0       ; R17 := U0
526 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
527 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
528 [-]: TEST      R17 0        ; if not R17 then PC := 555
529 [-]: JMP       555          ; PC := 555
530 [-]: GETGLOBAL R17 K3       ; R17 := _T
531 [-]: GETTABLE  R17 R17 K97  ; R17 := R17["DesiredGoToQuest"]
532 [-]: TEST      R17 0        ; if not R17 then PC := 539
533 [-]: JMP       539          ; PC := 539
534 [-]: GETGLOBAL R17 K3       ; R17 := _T
535 [-]: GETTABLE  R2 R17 K97   ; R2 := R17["DesiredGoToQuest"]
536 [-]: GETGLOBAL R17 K3       ; R17 := _T
537 [-]: SETTABLE  R17 K97 K5   ; R17["DesiredGoToQuest"] := nil
538 [-]: JMP       547          ; PC := 547
539 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
540 [-]: MOVE      R18 R2       ; R18 := R2
541 [-]: CALL      R17 2 2      ; R17 := R17(R18)
542 [-]: TEST      R17 1        ; if R17 then PC := 547
543 [-]: JMP       547          ; PC := 547
544 [-]: SELF      R17 R2 K24   ; R18 := R2; R17 := R2["0x1B252E3C"]
545 [-]: CALL      R17 2 2      ; R17 := R17(R18)
546 [-]: MOVE      R2 R17       ; R2 := R17
547 [-]: GETUPVAL  R17 U11      ; R17 := U11
548 [-]: MOVE      R18 R1       ; R18 := R1
549 [-]: MOVE      R19 R1       ; R19 := R1
550 [-]: MOVE      R20 R2       ; R20 := R2
551 [-]: MOVE      R21 R4       ; R21 := R4
552 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
553 [-]: RETURN    R0 1         ; return 
554 [-]: JMP       605          ; PC := 605
555 [-]: GETGLOBAL R17 K3       ; R17 := _T
556 [-]: GETTABLE  R17 R17 K97  ; R17 := R17["DesiredGoToQuest"]
557 [-]: TEST      R17 0        ; if not R17 then PC := 564
558 [-]: JMP       564          ; PC := 564
559 [-]: GETGLOBAL R17 K3       ; R17 := _T
560 [-]: GETTABLE  R2 R17 K97   ; R2 := R17["DesiredGoToQuest"]
561 [-]: GETGLOBAL R17 K3       ; R17 := _T
562 [-]: SETTABLE  R17 K97 K5   ; R17["DesiredGoToQuest"] := nil
563 [-]: JMP       605          ; PC := 605
564 [-]: GETUPVAL  R17 U0       ; R17 := U0
565 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
566 [-]: GETTABLE  R17 R17 K98  ; R17 := R17["isBlockaded"]
567 [-]: TEST      R17 0        ; if not R17 then PC := 583
568 [-]: JMP       583          ; PC := 583
569 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
570 [-]: GETUPVAL  R18 U0       ; R18 := U0
571 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
572 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
573 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
574 [-]: CALL      R17 2 2      ; R17 := R17(R18)
575 [-]: GETUPVAL  R18 U2       ; R18 := U2
576 [-]: GETTABLE  R18 R18 K99  ; R18 := R18["NEMESIS_MISSION_TAG"]
577 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
578 [-]: GETUPVAL  R17 U6       ; R17 := U6
579 [-]: MOVE      R18 R1       ; R18 := R1
580 [-]: CALL      R17 2 1      ; R17(R18)
581 [-]: RETURN    R0 1         ; return 
582 [-]: JMP       605          ; PC := 605
583 [-]: GETGLOBAL R17 K59      ; R17 := _G
584 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedGoalInfo"]
585 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
586 [-]: TEST      R17 0        ; if not R17 then PC := 597
587 [-]: JMP       597          ; PC := 597
588 [-]: GETGLOBAL R17 K3       ; R17 := _T
589 [-]: GETTABLE  R17 R17 K100 ; R17 := R17["LockedGoalMissionInfo"]
590 [-]: TEST      R17 0        ; if not R17 then PC := 605
591 [-]: JMP       605          ; PC := 605
592 [-]: GETGLOBAL R17 K3       ; R17 := _T
593 [-]: GETTABLE  R17 R17 K100 ; R17 := R17["LockedGoalMissionInfo"]
594 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
595 [-]: TEST      R17 0        ; if not R17 then PC := 605
596 [-]: JMP       605          ; PC := 605
597 [-]: GETUPVAL  R17 U12      ; R17 := U12
598 [-]: GETUPVAL  R18 U0       ; R18 := U0
599 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
600 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
601 [-]: MOVE      R19 R2       ; R19 := R2
602 [-]: MOVE      R20 R3       ; R20 := R3
603 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
604 [-]: RETURN    R0 1         ; return 
605 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
606 [-]: GETUPVAL  R18 U0       ; R18 := U0
607 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
608 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
609 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
610 [-]: CALL      R17 2 2      ; R17 := R17(R18)
611 [-]: TEST      R17 1        ; if R17 then PC := 621
612 [-]: JMP       621          ; PC := 621
613 [-]: GETUPVAL  R17 U0       ; R17 := U0
614 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
615 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
616 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["keyChain"]
617 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17["0x1B252E3C"]
618 [-]: CALL      R17 2 2      ; R17 := R17(R18)
619 [-]: MOVE      R2 R17       ; R2 := R17
620 [-]: JMP       814          ; PC := 814
621 [-]: TEST      R2 1         ; if R2 then PC := 814
622 [-]: JMP       814          ; PC := 814
623 [-]: GETGLOBAL R17 K3       ; R17 := _T
624 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedAlerts"]
625 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
626 [-]: TEST      R17 0        ; if not R17 then PC := 645
627 [-]: JMP       645          ; PC := 645
628 [-]: GETGLOBAL R17 K3       ; R17 := _T
629 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedAlerts"]
630 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
631 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mVisible"]
632 [-]: TEST      R17 0        ; if not R17 then PC := 645
633 [-]: JMP       645          ; PC := 645
634 [-]: GETGLOBAL R17 K3       ; R17 := _T
635 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedAlerts"]
636 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
637 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mUnlocked"]
638 [-]: TEST      R17 0        ; if not R17 then PC := 645
639 [-]: JMP       645          ; PC := 645
640 [-]: MOVE      R17 R1       ; R17 := R1
641 [-]: GETUPVAL  R18 U2       ; R18 := U2
642 [-]: GETTABLE  R18 R18 K101 ; R18 := R18["ALERT_TAG"]
643 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
644 [-]: JMP       814          ; PC := 814
645 [-]: GETGLOBAL R17 K59      ; R17 := _G
646 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedGoalInfo"]
647 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
648 [-]: TEST      R17 0        ; if not R17 then PC := 674
649 [-]: JMP       674          ; PC := 674
650 [-]: GETUPVAL  R17 U0       ; R17 := U0
651 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
652 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
653 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["nodeType"]
654 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
655 [-]: GETTABLE  R18 R18 K102 ; R18 := R18["NT_HUB"]
656 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 674
657 [-]: JMP       674          ; PC := 674
658 [-]: GETGLOBAL R17 K3       ; R17 := _T
659 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedInvasionInfo"]
660 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
661 [-]: TEST      R17 0        ; if not R17 then PC := 669
662 [-]: JMP       669          ; PC := 669
663 [-]: GETGLOBAL R17 K3       ; R17 := _T
664 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
665 [-]: GETUPVAL  R17 U10      ; R17 := U10
666 [-]: MOVE      R18 R1       ; R18 := R1
667 [-]: CALL      R17 2 1      ; R17(R18)
668 [-]: RETURN    R0 1         ; return 
669 [-]: MOVE      R17 R1       ; R17 := R1
670 [-]: GETUPVAL  R18 U2       ; R18 := U2
671 [-]: GETTABLE  R18 R18 K103 ; R18 := R18["EVENT_TAG"]
672 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
673 [-]: JMP       814          ; PC := 814
674 [-]: GETGLOBAL R17 K3       ; R17 := _T
675 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSyndicateMissions"]
676 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
677 [-]: TEST      R17 0        ; if not R17 then PC := 696
678 [-]: JMP       696          ; PC := 696
679 [-]: GETGLOBAL R17 K3       ; R17 := _T
680 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSyndicateMissions"]
681 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
682 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mVisible"]
683 [-]: TEST      R17 0        ; if not R17 then PC := 696
684 [-]: JMP       696          ; PC := 696
685 [-]: GETGLOBAL R17 K3       ; R17 := _T
686 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSyndicateMissions"]
687 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
688 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mUnlocked"]
689 [-]: TEST      R17 0        ; if not R17 then PC := 696
690 [-]: JMP       696          ; PC := 696
691 [-]: MOVE      R17 R1       ; R17 := R1
692 [-]: GETUPVAL  R18 U2       ; R18 := U2
693 [-]: GETTABLE  R18 R18 K104 ; R18 := R18["SYNDICATE_MISSION_TAG"]
694 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
695 [-]: JMP       814          ; PC := 814
696 [-]: GETGLOBAL R17 K3       ; R17 := _T
697 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedSortieMissions"]
698 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
699 [-]: TEST      R17 0        ; if not R17 then PC := 712
700 [-]: JMP       712          ; PC := 712
701 [-]: GETGLOBAL R17 K3       ; R17 := _T
702 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedSortieMissions"]
703 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
704 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mShowInStarChart"]
705 [-]: TEST      R17 0        ; if not R17 then PC := 712
706 [-]: JMP       712          ; PC := 712
707 [-]: MOVE      R17 R1       ; R17 := R1
708 [-]: GETUPVAL  R18 U2       ; R18 := U2
709 [-]: GETTABLE  R18 R18 K105 ; R18 := R18["SORTIE_MISSION_TAG"]
710 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
711 [-]: JMP       814          ; PC := 814
712 [-]: GETGLOBAL R17 K3       ; R17 := _T
713 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedActiveMissions"]
714 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
715 [-]: TEST      R17 0        ; if not R17 then PC := 734
716 [-]: JMP       734          ; PC := 734
717 [-]: GETGLOBAL R17 K3       ; R17 := _T
718 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedActiveMissions"]
719 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
720 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mVisible"]
721 [-]: TEST      R17 0        ; if not R17 then PC := 734
722 [-]: JMP       734          ; PC := 734
723 [-]: GETGLOBAL R17 K3       ; R17 := _T
724 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedActiveMissions"]
725 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
726 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mUnlocked"]
727 [-]: TEST      R17 0        ; if not R17 then PC := 734
728 [-]: JMP       734          ; PC := 734
729 [-]: GETUPVAL  R17 U9       ; R17 := U9
730 [-]: MOVE      R18 R1       ; R18 := R1
731 [-]: CALL      R17 2 1      ; R17(R18)
732 [-]: RETURN    R0 1         ; return 
733 [-]: JMP       814          ; PC := 814
734 [-]: GETGLOBAL R17 K3       ; R17 := _T
735 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedInvasionInfo"]
736 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
737 [-]: TEST      R17 0        ; if not R17 then PC := 744
738 [-]: JMP       744          ; PC := 744
739 [-]: GETUPVAL  R17 U10      ; R17 := U10
740 [-]: MOVE      R18 R1       ; R18 := R1
741 [-]: CALL      R17 2 1      ; R17(R18)
742 [-]: RETURN    R0 1         ; return 
743 [-]: JMP       814          ; PC := 814
744 [-]: GETGLOBAL R17 K3       ; R17 := _T
745 [-]: GETTABLE  R17 R17 K89  ; R17 := R17["CachedSkullNodes"]
746 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
747 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 754
748 [-]: JMP       754          ; PC := 754
749 [-]: GETUPVAL  R17 U13      ; R17 := U13
750 [-]: MOVE      R18 R1       ; R18 := R1
751 [-]: CALL      R17 2 1      ; R17(R18)
752 [-]: RETURN    R0 1         ; return 
753 [-]: JMP       814          ; PC := 814
754 [-]: GETUPVAL  R17 U0       ; R17 := U0
755 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
756 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
757 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["nodeType"]
758 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
759 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["NT_CLAN"]
760 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 773
761 [-]: JMP       773          ; PC := 773
762 [-]: GETUPVAL  R17 U6       ; R17 := U6
763 [-]: MOVE      R18 R1       ; R18 := R1
764 [-]: GETUPVAL  R19 U2       ; R19 := U2
765 [-]: GETTABLE  R19 R19 K75  ; R19 := R19["BADLAND_MISSION_TAG"]
766 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
767 [-]: LOADK     R19 K13      ; R19 := ""
768 [-]: LOADK     R20 K13      ; R20 := ""
769 [-]: LOADK     R21 K13      ; R21 := ""
770 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
771 [-]: RETURN    R0 1         ; return 
772 [-]: JMP       814          ; PC := 814
773 [-]: GETUPVAL  R17 U0       ; R17 := U0
774 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
775 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
776 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["nodeType"]
777 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
778 [-]: GETTABLE  R18 R18 K106 ; R18 := R18["NT_PVP"]
779 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 786
780 [-]: JMP       786          ; PC := 786
781 [-]: MOVE      R17 R1       ; R17 := R1
782 [-]: GETUPVAL  R18 U2       ; R18 := U2
783 [-]: GETTABLE  R18 R18 K107 ; R18 := R18["PVP_TAG"]
784 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
785 [-]: JMP       814          ; PC := 814
786 [-]: GETUPVAL  R17 U0       ; R17 := U0
787 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
788 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
789 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["nodeType"]
790 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
791 [-]: GETTABLE  R18 R18 K102 ; R18 := R18["NT_HUB"]
792 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 814
793 [-]: JMP       814          ; PC := 814
794 [-]: GETGLOBAL R17 K45      ; R17 := gMatchingService
795 [-]: SELF      R17 R17 K108 ; R18 := R17; R17 := R17["0xA99F3BEF"]
796 [-]: CALL      R17 2 2      ; R17 := R17(R18)
797 [-]: TEST      R17 0        ; if not R17 then PC := 808
798 [-]: JMP       808          ; PC := 808
799 [-]: GETUPVAL  R17 U6       ; R17 := U6
800 [-]: MOVE      R18 R1       ; R18 := R1
801 [-]: GETUPVAL  R19 U2       ; R19 := U2
802 [-]: GETTABLE  R19 R19 K109 ; R19 := R19["HUB_TAG"]
803 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
804 [-]: LOADNIL   R19 R20      ; R19 := R20 := nil
805 [-]: LOADK     R21 K110     ; R21 := 0.5
806 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
807 [-]: RETURN    R0 1         ; return 
808 [-]: GETUPVAL  R17 U14      ; R17 := U14
809 [-]: GETUPVAL  R18 U0       ; R18 := U0
810 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
811 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
812 [-]: CALL      R17 2 1      ; R17(R18)
813 [-]: RETURN    R0 1         ; return 
814 [-]: GETUPVAL  R17 U0       ; R17 := U0
815 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
816 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
817 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
818 [-]: GETTABLE  R17 R17 K93  ; R17 := R17["missionType"]
819 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
820 [-]: GETTABLE  R18 R18 K94  ; R18 := R18["MT_ARENA"]
821 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 844
822 [-]: JMP       844          ; PC := 844
823 [-]: GETUPVAL  R17 U0       ; R17 := U0
824 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
825 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
826 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
827 [-]: GETTABLE  R17 R17 K95  ; R17 := R17["faction"]
828 [-]: GETGLOBAL R18 K73      ; R18 := Lotus_Game
829 [-]: GETTABLE  R18 R18 K96  ; R18 := R18["FC_CORPUS"]
830 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 844
831 [-]: JMP       844          ; PC := 844
832 [-]: GETUPVAL  R17 U0       ; R17 := U0
833 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
834 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
835 [-]: TEST      R17 0        ; if not R17 then PC := 844
836 [-]: JMP       844          ; PC := 844
837 [-]: GETUPVAL  R17 U11      ; R17 := U11
838 [-]: MOVE      R18 R1       ; R18 := R1
839 [-]: MOVE      R19 R1       ; R19 := R1
840 [-]: MOVE      R20 R2       ; R20 := R2
841 [-]: MOVE      R21 R4       ; R21 := R4
842 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
843 [-]: RETURN    R0 1         ; return 
844 [-]: GETUPVAL  R17 U0       ; R17 := U0
845 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
846 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
847 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
848 [-]: GETTABLE  R17 R17 K111 ; R17 := R17["soloMode"]
849 [-]: TEST      R17 0        ; if not R17 then PC := 912
850 [-]: JMP       912          ; PC := 912
851 [-]: GETGLOBAL R17 K45      ; R17 := gMatchingService
852 [-]: SELF      R17 R17 K112 ; R18 := R17; R17 := R17["0x35DDC67D"]
853 [-]: CALL      R17 2 2      ; R17 := R17(R18)
854 [-]: LT        0 K26 R17    ; if 1 >= R17 then PC := 888
855 [-]: JMP       888          ; PC := 888
856 [-]: GETUPVAL  R17 U15      ; R17 := U15
857 [-]: GETTABLE  R17 R17 K113 ; R17 := R17["0x8ECD61A2"]
858 [-]: GETGLOBAL R18 K114     ; R18 := 0xEC274B1A
859 [-]: MOVE      R19 R1       ; R19 := R1
860 [-]: CALL      R18 2 2      ; R18 := R18(R19)
861 [-]: MOVE      R19 R1       ; R19 := R1
862 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
863 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 870
864 [-]: JMP       870          ; PC := 870
865 [-]: GETUPVAL  R18 U15      ; R18 := U15
866 [-]: GETTABLE  R18 R18 K115 ; R18 := R18["0xDABD460F"]
867 [-]: MOVE      R19 R17      ; R19 := R17
868 [-]: CALL      R18 2 1      ; R18(R19)
869 [-]: JMP       911          ; PC := 911
870 [-]: GETGLOBAL R18 K9       ; R18 := 0x400E7765
871 [-]: GETUPVAL  R19 U16      ; R19 := U16
872 [-]: CALL      R18 2 2      ; R18 := R18(R19)
873 [-]: TEST      R18 0        ; if not R18 then PC := 911
874 [-]: JMP       911          ; PC := 911
875 [-]: GETUPVAL  R18 U17      ; R18 := U17
876 [-]: GETUPVAL  R19 U0       ; R19 := U0
877 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
878 [-]: SETTABLE  R18 K0 R19   ; R18["Node"] := R19
879 [-]: GETUPVAL  R18 U17      ; R18 := U17
880 [-]: SETTABLE  R18 K116 R1  ; R18["SectorName"] := R1
881 [-]: GETUPVAL  R18 U3       ; R18 := U3
882 [-]: GETTABLE  R18 R18 K117 ; R18 := R18["0x1C988750"]
883 [-]: LOADK     R19 K118     ; R19 := "/Lotus/Language/Menu/SoloModeRequired"
884 [-]: LOADK     R20 K119     ; R20 := "ConfirmSoloMission"
885 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
886 [-]: MOVE      R18 R16      ; R18 := R16
887 [-]: JMP       911          ; PC := 911
888 [-]: GETUPVAL  R18 U0       ; R18 := U0
889 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
890 [-]: TEST      R18 0        ; if not R18 then PC := 911
891 [-]: JMP       911          ; PC := 911
892 [-]: GETUPVAL  R18 U0       ; R18 := U0
893 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
894 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
895 [-]: TEST      R18 0        ; if not R18 then PC := 911
896 [-]: JMP       911          ; PC := 911
897 [-]: GETUPVAL  R18 U6       ; R18 := U6
898 [-]: MOVE      R19 R1       ; R19 := R1
899 [-]: MOVE      R20 R2       ; R20 := R2
900 [-]: MOVE      R21 R3       ; R21 := R3
901 [-]: MOVE      R22 R4       ; R22 := R4
902 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
903 [-]: TEST      R18 0        ; if not R18 then PC := 911
904 [-]: JMP       911          ; PC := 911
905 [-]: GETGLOBAL R18 K3       ; R18 := _T
906 [-]: GETTABLE  R18 R18 K10  ; R18 := R18["SquadOverlay"]
907 [-]: SELF      R18 R18 K11  ; R19 := R18; R18 := R18["0x458F27A9"]
908 [-]: LOADK     R20 K120     ; R20 := "NotifyForceLoadSoloMission"
909 [-]: LOADK     R21 K13      ; R21 := ""
910 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
911 [-]: RETURN    R0 1         ; return 
912 [-]: GETUPVAL  R18 U1       ; R18 := U1
913 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["Active"]
914 [-]: TEST      R18 0        ; if not R18 then PC := 920
915 [-]: JMP       920          ; PC := 920
916 [-]: GETUPVAL  R18 U1       ; R18 := U1
917 [-]: GETUPVAL  R19 U0       ; R19 := U0
918 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
919 [-]: SETTABLE  R18 K121 R19 ; R18["SelectionNode"] := R19
920 [-]: GETUPVAL  R18 U6       ; R18 := U6
921 [-]: MOVE      R19 R1       ; R19 := R1
922 [-]: MOVE      R20 R2       ; R20 := R2
923 [-]: MOVE      R21 R3       ; R21 := R3
924 [-]: MOVE      R22 R4       ; R22 := R4
925 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
926 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4449
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SETTABLE  R0 K1 R1     ; R0["InRailJackMode"] := R1
  5 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4453
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 1
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K4        ; R4 := 0
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4457
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R0 K2        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["WareframeChallenge"]
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
  8 [-]: GETGLOBAL R2 K2        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 46
 12 [-]: JMP       46           ; PC := 46
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 14 [-]: GETGLOBAL R2 K6        ; R2 := gMatchingService
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD5E03646"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 46
 19 [-]: JMP       46           ; PC := 46
 20 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 21 [-]: GETGLOBAL R2 K8        ; R2 := gClient
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 46
 24 [-]: JMP       46           ; PC := 46
 25 [-]: GETGLOBAL R1 K8        ; R1 := gClient
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xC6E8F98F"]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 1         ; if R1 then PC := 46
 29 [-]: JMP       46           ; PC := 46
 30 [-]: TEST      R0 1         ; if R0 then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R1 K6        ; R1 := gMatchingService
 33 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xD01F29AC"]
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: EQ        0 R1 K11     ; if R1 ~= 0 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: GETGLOBAL R1 K12       ; R1 := 0x93B1256B
 38 [-]: LOADK     R2 K13       ; R2 := "Hosting lobby from MapRedux.lua (InitializeMore)"
 39 [-]: CALL      R1 2 1       ; R1(R2)
 40 [-]: GETGLOBAL R1 K2        ; R1 := _T
 41 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SquadOverlay"]
 42 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x458F27A9"]
 43 [-]: LOADK     R3 K15       ; R3 := "HostLobby"
 44 [-]: LOADK     R4 K16       ; R4 := ""
 45 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 46 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 47 [-]: GETGLOBAL R2 K17       ; R2 := worldStateMovie
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 1         ; if R1 then PC := 82
 50 [-]: JMP       82           ; PC := 82
 51 [-]: TEST      R0 1         ; if R0 then PC := 82
 52 [-]: JMP       82           ; PC := 82
 53 [-]: GETUPVAL  R1 U0        ; R1 := U0
 54 [-]: GETGLOBAL R2 K19       ; R2 := gFlashMgr
 55 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x616DD092"]
 56 [-]: GETGLOBAL R4 K17       ; R4 := worldStateMovie
 57 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 58 [-]: SETTABLE  R1 K18 R2    ; R1["Movie"] := R2
 59 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 60 [-]: GETUPVAL  R2 U0        ; R2 := U0
 61 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Movie"]
 62 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 63 [-]: TEST      R1 0         ; if not R1 then PC := 71
 64 [-]: JMP       71           ; PC := 71
 65 [-]: GETUPVAL  R1 U0        ; R1 := U0
 66 [-]: GETGLOBAL R2 K19       ; R2 := gFlashMgr
 67 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x24FF386"]
 68 [-]: GETGLOBAL R4 K17       ; R4 := worldStateMovie
 69 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 70 [-]: SETTABLE  R1 K18 R2    ; R1["Movie"] := R2
 71 [-]: GETGLOBAL R1 K2        ; R1 := _T
 72 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["MAP_HideExtraUI"]
 73 [-]: TEST      R1 0         ; if not R1 then PC := 82
 74 [-]: JMP       82           ; PC := 82
 75 [-]: GETUPVAL  R1 U0        ; R1 := U0
 76 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["Movie"]
 77 [-]: SELF      R1 R1 K23    ; R2 := R1; R1 := R1["0x1C19D966"]
 78 [-]: LOADK     R3 K24       ; R3 := "_root"
 79 [-]: LOADK     R4 K25       ; R4 := "_visible"
 80 [-]: MOVE      R5 R0        ; R5 := R0
 81 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 82 [-]: GETUPVAL  R1 U1        ; R1 := U1
 83 [-]: GETTABLE  R1 R1 K26    ; R1 := R1["0x5B8EB241"]
 84 [-]: CALL      R1 1 2       ; R1 := R1()
 85 [-]: TEST      R1 1         ; if R1 then PC := 100
 86 [-]: JMP       100          ; PC := 100
 87 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 88 [-]: GETGLOBAL R2 K27       ; R2 := gGameData
 89 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 90 [-]: TEST      R1 1         ; if R1 then PC := 98
 91 [-]: JMP       98           ; PC := 98
 92 [-]: GETGLOBAL R1 K27       ; R1 := gGameData
 93 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x17358D95"]
 94 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 95 [-]: SELF      R1 R1 K29    ; R2 := R1; R1 := R1["0xB3F0027"]
 96 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 97 [-]: JMP       100          ; PC := 100
 98 [-]: MOVE      R1 R0        ; R1 := R0
 99 [-]: MOVE      R1 R1        ; R1 := R1
100 [-]: TEST      R1 0         ; if not R1 then PC := 119
101 [-]: JMP       119          ; PC := 119
102 [-]: GETGLOBAL R2 K30       ; R2 := gPlayerProfileMgr
103 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2["0x21EF7B1A"]
104 [-]: LOADK     R4 K11       ; R4 := 0
105 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
106 [-]: SELF      R3 R2 K32    ; R4 := R2; R3 := R2["0x3EEB612E"]
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: SELF      R4 R3 K33    ; R5 := R3; R4 := R3["0xDEFFE28B"]
109 [-]: CALL      R4 2 2       ; R4 := R4(R5)
110 [-]: TESTSET   R1 R4 1      ; if R4 then PC := 114 else R1 := R4
111 [-]: JMP       114          ; PC := 114
112 [-]: GETUPVAL  R4 U2        ; R4 := U2
113 [-]: GETTABLE  R1 R4 K34    ; R1 := R4["Active"]
114 [-]: GETGLOBAL R4 K35       ; R4 := mMovie
115 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x5FF274BB"]
116 [-]: GETGLOBAL R6 K37       ; R6 := episodeStatusMovie
117 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
118 [-]: MOVE      R4 R3        ; R4 := R3
119 [-]: GETGLOBAL R4 K2        ; R4 := _T
120 [-]: MOVE      R5 R1        ; R5 := R1
121 [-]: SETTABLE  R4 K38 R5    ; R4["ResourceDroneVisible"] := R5
122 [-]: GETGLOBAL R4 K35       ; R4 := mMovie
123 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x5FF274BB"]
124 [-]: GETGLOBAL R6 K39       ; R6 := resourceDroneMovie
125 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
126 [-]: MOVE      R4 R4        ; R4 := R4
127 [-]: GETUPVAL  R4 U4        ; R4 := U4
128 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4["0x458F27A9"]
129 [-]: LOADK     R6 K40       ; R6 := "OnRegionZoomOut"
130 [-]: LOADK     R7 K16       ; R7 := ""
131 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
132 [-]: GETUPVAL  R4 U1        ; R4 := U1
133 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["0xBB3AACF2"]
134 [-]: CALL      R4 1 2       ; R4 := R4()
135 [-]: MOVE      R4 R5        ; R4 := R5
136 [-]: GETUPVAL  R4 U5        ; R4 := U5
137 [-]: SELF      R4 R4 K42    ; R5 := R4; R4 := R4["0x871D2E8C"]
138 [-]: CALL      R4 2 2       ; R4 := R4(R5)
139 [-]: MOVE      R4 R6        ; R4 := R6
140 [-]: GETUPVAL  R4 U5        ; R4 := U5
141 [-]: SELF      R4 R4 K43    ; R5 := R4; R4 := R4["0x5B0E7439"]
142 [-]: CALL      R4 2 2       ; R4 := R4(R5)
143 [-]: MOVE      R4 R7        ; R4 := R7
144 [-]: GETUPVAL  R4 U5        ; R4 := U5
145 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4["0x7E6E6726"]
146 [-]: CALL      R4 2 2       ; R4 := R4(R5)
147 [-]: MOVE      R4 R8        ; R4 := R8
148 [-]: GETGLOBAL R4 K19       ; R4 := gFlashMgr
149 [-]: SELF      R4 R4 K45    ; R5 := R4; R4 := R4["0xC4E70543"]
150 [-]: CALL      R4 2 1       ; R4(R5)
151 [-]: GETUPVAL  R4 U9        ; R4 := U9
152 [-]: CALL      R4 1 1       ; R4()
153 [-]: GETUPVAL  R4 U10       ; R4 := U10
154 [-]: CALL      R4 1 1       ; R4()
155 [-]: GETUPVAL  R4 U11       ; R4 := U11
156 [-]: CALL      R4 1 1       ; R4()
157 [-]: GETUPVAL  R4 U12       ; R4 := U12
158 [-]: CALL      R4 1 1       ; R4()
159 [-]: GETUPVAL  R4 U13       ; R4 := U13
160 [-]: CALL      R4 1 1       ; R4()
161 [-]: GETUPVAL  R4 U14       ; R4 := U14
162 [-]: CALL      R4 1 1       ; R4()
163 [-]: GETUPVAL  R4 U15       ; R4 := U15
164 [-]: CALL      R4 1 1       ; R4()
165 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4508
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4512
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["cameraSpot"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["cameraSpot"]
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xEC183DDC"]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["pos"]
 13 [-]: CALL      R0 3 1       ; R0(R1,R2)
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["cameraSpot"]
 16 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x5097FD8C"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["rotation"]
 19 [-]: CALL      R0 3 1       ; R0(R1,R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4526
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
  4 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  5 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x221C9700
  9 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 10 [-]: RETURN    R0 0         ; return R0,...
 11 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x7F595CA7"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x458357BC
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6DA72501"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xCD4B74A5"]
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: GETGLOBAL R5 K3        ; R5 := 0x221C9700
 27 [-]: LOADK     R6 K8        ; R6 := 0
 28 [-]: LOADK     R7 K8        ; R7 := 0
 29 [-]: LOADK     R8 K9        ; R8 := 1
 30 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 31 [-]: LOADK     R6 K8        ; R6 := 0
 32 [-]: TAILCALL  R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 33 [-]: RETURN    R2 0         ; return R2,...
 34 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4536
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7F595CA7"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x458357BC
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Region"]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: SETTABLE  R3 K4 K5     ; R3["Region"] := nil
 13 [-]: LOADK     R3 K6        ; R3 := 500
 14 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 15 [-]: GETGLOBAL R6 K0        ; R6 := 0x221C9700
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: GETGLOBAL R7 K0        ; R7 := 0x221C9700
 18 [-]: CALL      R7 1 2       ; R7 := R7()
 19 [-]: LOADK     R8 K7        ; R8 := 0
 20 [-]: LOADK     R9 K7        ; R9 := 0
 21 [-]: MOVE      R10 R0       ; R10 := R0
 22 [-]: GETGLOBAL R11 K0       ; R11 := 0x221C9700
 23 [-]: CALL      R11 1 2      ; R11 := R11()
 24 [-]: GETGLOBAL R12 K0       ; R12 := 0x221C9700
 25 [-]: CALL      R12 1 2      ; R12 := R12()
 26 [-]: LOADNIL   R13 R13      ; R13 := nil
 27 [-]: MOVE      R14 R0       ; R14 := R0
 28 [-]: LOADK     R15 K6       ; R15 := 500
 29 [-]: GETGLOBAL R16 K0       ; R16 := 0x221C9700
 30 [-]: CALL      R16 1 2      ; R16 := R16()
 31 [-]: GETGLOBAL R17 K8       ; R17 := 0x400E7765
 32 [-]: GETGLOBAL R18 K9       ; R18 := gBackgroundRegion
 33 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 34 [-]: TEST      R17 1        ; if R17 then PC := 168
 35 [-]: JMP       168          ; PC := 168
 36 [-]: GETGLOBAL R17 K10      ; R17 := _T
 37 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["MouseInWorldStateWindow"]
 38 [-]: TEST      R17 1        ; if R17 then PC := 168
 39 [-]: JMP       168          ; PC := 168
 40 [-]: GETGLOBAL R17 K10      ; R17 := _T
 41 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["MouseInChatArea"]
 42 [-]: TEST      R17 1        ; if R17 then PC := 168
 43 [-]: JMP       168          ; PC := 168
 44 [-]: GETGLOBAL R17 K9       ; R17 := gBackgroundRegion
 45 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0xF7C1BE25"]
 46 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 47 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17["0x8EEB099D"]
 48 [-]: MOVE      R19 R11      ; R19 := R11
 49 [-]: CALL      R17 3 1      ; R17(R18,R19)
 50 [-]: LOADK     R17 K15      ; R17 := 1
 51 [-]: GETUPVAL  R18 U1       ; R18 := U1
 52 [-]: LEN       R18 R18      ; R18 := # R18
 53 [-]: LOADK     R19 K15      ; R19 := 1
 54 [-]: FORPREP   R17 167      ; R17 -= R19; PC := 167
 55 [-]: GETUPVAL  R21 U1       ; R21 := U1
 56 [-]: GETTABLE  R5 R21 R20   ; R5 := R21[R20]
 57 [-]: GETUPVAL  R21 U2       ; R21 := U2
 58 [-]: GETTABLE  R13 R21 R20  ; R13 := R21[R20]
 59 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
 60 [-]: MOVE      R22 R13      ; R22 := R13
 61 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 62 [-]: TEST      R21 1        ; if R21 then PC := 167
 63 [-]: JMP       167          ; PC := 167
 64 [-]: GETUPVAL  R21 U3       ; R21 := U3
 65 [-]: GETTABLE  R21 R21 K16  ; R21 := R21["Active"]
 66 [-]: TEST      R21 0        ; if not R21 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: GETUPVAL  R21 U3       ; R21 := U3
 69 [-]: GETTABLE  R21 R21 K17  ; R21 := R21["Regions"]
 70 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
 71 [-]: TEST      R21 0        ; if not R21 then PC := 167
 72 [-]: JMP       167          ; PC := 167
 73 [-]: SELF      R21 R13 K14  ; R22 := R13; R21 := R13["0x8EEB099D"]
 74 [-]: MOVE      R23 R12      ; R23 := R12
 75 [-]: CALL      R21 3 1      ; R21(R22,R23)
 76 [-]: GETGLOBAL R21 K18      ; R21 := 0x518098BD
 77 [-]: MOVE      R22 R6       ; R22 := R6
 78 [-]: MOVE      R23 R12      ; R23 := R12
 79 [-]: MOVE      R24 R11      ; R24 := R11
 80 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
 81 [-]: GETUPVAL  R21 U4       ; R21 := U4
 82 [-]: GETTABLE  R9 R21 R20   ; R9 := R21[R20]
 83 [-]: GETUPVAL  R21 U5       ; R21 := U5
 84 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["IsVisible"]
 85 [-]: TEST      R21 0        ; if not R21 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: ADD       R9 R9 K20    ; R9 := R9 + 0.20000000298023
 88 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
 89 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21["0xECAA969E"]
 90 [-]: MOVE      R23 R7       ; R23 := R7
 91 [-]: MOVE      R24 R0       ; R24 := R0
 92 [-]: MOVE      R25 R1       ; R25 := R1
 93 [-]: MOVE      R26 R6       ; R26 := R6
 94 [-]: MOVE      R27 R9       ; R27 := R9
 95 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
 96 [-]: MOVE      R10 R21      ; R10 := R21
 97 [-]: TEST      R10 0        ; if not R10 then PC := 108
 98 [-]: JMP       108          ; PC := 108
 99 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
100 [-]: MOVE      R22 R7       ; R22 := R7
101 [-]: CALL      R21 2 2      ; R21 := R21(R22)
102 [-]: LT        0 R21 R3     ; if R21 >= R3 then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: GETUPVAL  R21 U6       ; R21 := U6
105 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
106 [-]: TEST      R21 0        ; if not R21 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: GETUPVAL  R21 U0       ; R21 := U0
109 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["RegionLabel"]
110 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 128
111 [-]: JMP       128          ; PC := 128
112 [-]: MOVE      R4 R7        ; R4 := R7
113 [-]: GETUPVAL  R21 U0       ; R21 := U0
114 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["RegionLabel"]
115 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 119
116 [-]: JMP       119          ; PC := 119
117 [-]: LOADK     R3 K7        ; R3 := 0
118 [-]: JMP       123          ; PC := 123
119 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
120 [-]: MOVE      R22 R7       ; R22 := R7
121 [-]: CALL      R21 2 2      ; R21 := R21(R22)
122 [-]: MOVE      R3 R21       ; R3 := R21
123 [-]: GETUPVAL  R21 U0       ; R21 := U0
124 [-]: GETUPVAL  R22 U1       ; R22 := U1
125 [-]: GETTABLE  R22 R22 R20  ; R22 := R22[R20]
126 [-]: SETTABLE  R21 K4 R22   ; R21["Region"] := R22
127 [-]: MOVE      R8 R20       ; R8 := R20
128 [-]: GETUPVAL  R21 U7       ; R21 := U7
129 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mTargetVal"]
130 [-]: GETUPVAL  R22 U8       ; R22 := U8
131 [-]: GETTABLE  R22 R22 K25  ; R22 := R22["ZOOM_OUT_THRESHOLD"]
132 [-]: LT        0 R22 R21    ; if R22 >= R21 then PC := 167
133 [-]: JMP       167          ; PC := 167
134 [-]: GETUPVAL  R21 U5       ; R21 := U5
135 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["IsVisible"]
136 [-]: TEST      R21 1        ; if R21 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: ADD       R9 R9 K20    ; R9 := R9 + 0.20000000298023
139 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
140 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21["0xECAA969E"]
141 [-]: MOVE      R23 R16      ; R23 := R16
142 [-]: MOVE      R24 R0       ; R24 := R0
143 [-]: GETUPVAL  R25 U9       ; R25 := U9
144 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["CAMERA_FOCUS_DIR"]
145 [-]: MOVE      R26 R6       ; R26 := R6
146 [-]: MOVE      R27 R9       ; R27 := R9
147 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
148 [-]: MOVE      R14 R21      ; R14 := R21
149 [-]: TEST      R14 0        ; if not R14 then PC := 167
150 [-]: JMP       167          ; PC := 167
151 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
152 [-]: MOVE      R22 R16      ; R22 := R16
153 [-]: CALL      R21 2 2      ; R21 := R21(R22)
154 [-]: LT        0 R21 R15    ; if R21 >= R15 then PC := 167
155 [-]: JMP       167          ; PC := 167
156 [-]: GETUPVAL  R21 U6       ; R21 := U6
157 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
158 [-]: TEST      R21 1        ; if R21 then PC := 167
159 [-]: JMP       167          ; PC := 167
160 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
161 [-]: MOVE      R22 R16      ; R22 := R16
162 [-]: CALL      R21 2 2      ; R21 := R21(R22)
163 [-]: MOVE      R15 R21      ; R15 := R21
164 [-]: GETUPVAL  R21 U1       ; R21 := U1
165 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
166 [-]: MOVE      R21 R10      ; R21 := R10
167 [-]: FORLOOP   R17 55       ; R17 += R19; if R17 <= R18 then begin PC := 55; R20 := R17 end
168 [-]: GETUPVAL  R21 U7       ; R21 := U7
169 [-]: GETTABLE  R21 R21 K27  ; R21 := R21["mCurVal"]
170 [-]: LT        0 K28 R21    ; if -2 >= R21 then PC := 174
171 [-]: JMP       174          ; PC := 174
172 [-]: GETUPVAL  R21 U0       ; R21 := U0
173 [-]: SETTABLE  R21 K4 K5    ; R21["Region"] := nil
174 [-]: GETUPVAL  R21 U0       ; R21 := U0
175 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
176 [-]: EQ        1 R2 R21     ; if R2 == R21 then PC := 331
177 [-]: JMP       331          ; PC := 331
178 [-]: GETUPVAL  R21 U0       ; R21 := U0
179 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
180 [-]: EQ        1 R21 K5     ; if R21 == nil then PC := 274
181 [-]: JMP       274          ; PC := 274
182 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
183 [-]: GETUPVAL  R22 U0       ; R22 := U0
184 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["Region"]
185 [-]: GETTABLE  R22 R22 K29  ; R22 := R22["instance"]
186 [-]: CALL      R21 2 2      ; R21 := R21(R22)
187 [-]: TEST      R21 1        ; if R21 then PC := 274
188 [-]: JMP       274          ; PC := 274
189 [-]: GETUPVAL  R21 U11      ; R21 := U11
190 [-]: TEST      R21 1        ; if R21 then PC := 196
191 [-]: JMP       196          ; PC := 196
192 [-]: GETUPVAL  R21 U12      ; R21 := U12
193 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["0x25992394"]
194 [-]: GETGLOBAL R22 K31      ; R22 := rollOverRegionSound
195 [-]: CALL      R21 2 1      ; R21(R22)
196 [-]: GETUPVAL  R21 U4       ; R21 := U4
197 [-]: GETTABLE  R9 R21 R8    ; R9 := R21[R8]
198 [-]: GETUPVAL  R21 U13      ; R21 := U13
199 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
200 [-]: EQ        0 R21 K5     ; if R21 ~= nil then PC := 205
201 [-]: JMP       205          ; PC := 205
202 [-]: GETUPVAL  R21 U13      ; R21 := U13
203 [-]: NEWTABLE  R22 0 0      ; R22 := {}
204 [-]: SETTABLE  R21 R8 R22   ; R21[R8] := R22
205 [-]: EQ        1 R9 K5      ; if R9 == nil then PC := 274
206 [-]: JMP       274          ; PC := 274
207 [-]: GETUPVAL  R21 U13      ; R21 := U13
208 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
209 [-]: GETGLOBAL R22 K8       ; R22 := 0x400E7765
210 [-]: GETTABLE  R23 R21 K15  ; R23 := R21[1]
211 [-]: CALL      R22 2 2      ; R22 := R22(R23)
212 [-]: TEST      R22 0        ; if not R22 then PC := 226
213 [-]: JMP       226          ; PC := 226
214 [-]: GETGLOBAL R22 K9       ; R22 := gBackgroundRegion
215 [-]: SELF      R22 R22 K32  ; R23 := R22; R22 := R22["0xBDD34CC6"]
216 [-]: GETGLOBAL R24 K33      ; R24 := hoverRing
217 [-]: GETUPVAL  R25 U0       ; R25 := U0
218 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["Region"]
219 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["instance"]
220 [-]: SELF      R25 R25 K34  ; R26 := R25; R25 := R25["0x6DA72501"]
221 [-]: CALL      R25 2 2      ; R25 := R25(R26)
222 [-]: GETUPVAL  R26 U9       ; R26 := U9
223 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["RING_ROTATION"]
224 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
225 [-]: SETTABLE  R21 K15 R22  ; R21[1] := R22
226 [-]: GETGLOBAL R22 K8       ; R22 := 0x400E7765
227 [-]: GETTABLE  R23 R21 K36  ; R23 := R21[2]
228 [-]: CALL      R22 2 2      ; R22 := R22(R23)
229 [-]: TEST      R22 0        ; if not R22 then PC := 252
230 [-]: JMP       252          ; PC := 252
231 [-]: GETGLOBAL R22 K9       ; R22 := gBackgroundRegion
232 [-]: SELF      R22 R22 K32  ; R23 := R22; R22 := R22["0xBDD34CC6"]
233 [-]: GETGLOBAL R24 K33      ; R24 := hoverRing
234 [-]: GETUPVAL  R25 U0       ; R25 := U0
235 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["Region"]
236 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["instance"]
237 [-]: SELF      R25 R25 K34  ; R26 := R25; R25 := R25["0x6DA72501"]
238 [-]: CALL      R25 2 2      ; R25 := R25(R26)
239 [-]: GETUPVAL  R26 U9       ; R26 := U9
240 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["RING_ROTATION"]
241 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
242 [-]: SETTABLE  R21 K36 R22  ; R21[2] := R22
243 [-]: GETTABLE  R22 R21 K36  ; R22 := R21[2]
244 [-]: SELF      R22 R22 K37  ; R23 := R22; R22 := R22["0xA20F64C0"]
245 [-]: GETGLOBAL R24 K38      ; R24 := 0xB5A59043
246 [-]: LOADK     R25 K39      ; R25 := 255
247 [-]: LOADK     R26 K39      ; R26 := 255
248 [-]: LOADK     R27 K39      ; R27 := 255
249 [-]: LOADK     R28 K40      ; R28 := 150
250 [-]: CALL      R24 5 0      ; R24,... := R24(R25,R26,R27,R28)
251 [-]: CALL      R22 0 1      ; R22(R23,...)
252 [-]: GETTABLE  R22 R21 K15  ; R22 := R21[1]
253 [-]: GETTABLE  R23 R21 K36  ; R23 := R21[2]
254 [-]: CLOSURE   R24 0        ; R24 := closure(Function #114.1)
255 [-]: MOVE      R0 R22       ; R0 := R22
256 [-]: MOVE      R0 R9        ; R0 := R9
257 [-]: MOVE      R0 R23       ; R0 := R23
258 [-]: GETGLOBAL R25 K41      ; R25 := 0x52E17A90
259 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
260 [-]: GETUPVAL  R27 U14      ; R27 := U14
261 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
262 [-]: GETTABLE  R27 R27 K42  ; R27 := R27["clipName"]
263 [-]: GETGLOBAL R28 K43      ; R28 := UISys
264 [-]: GETTABLE  R28 R28 K44  ; R28 := R28["FlashInstance_EASE_OUT"]
265 [-]: NEWTABLE  R29 1 0      ; R29 := {}
266 [-]: MOVE      R30 R24      ; R30 := R24
267 [-]: SETLIST   R29 1 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
268 [-]: NEWTABLE  R30 1 0      ; R30 := {}
269 [-]: LOADK     R31 K15      ; R31 := 1
270 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
271 [-]: LOADK     R31 K45      ; R31 := 0.25
272 [-]: CALL      R25 7 1      ; R25(R26,R27,R28,R29,R30,R31)
273 [-]: CLOSE     R21          ; SAVE R21,...
274 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 331
275 [-]: JMP       331          ; PC := 331
276 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
277 [-]: GETTABLE  R22 R2 K29   ; R22 := R2["instance"]
278 [-]: CALL      R21 2 2      ; R21 := R21(R22)
279 [-]: TEST      R21 1        ; if R21 then PC := 331
280 [-]: JMP       331          ; PC := 331
281 [-]: LOADK     R21 K7       ; R21 := 0
282 [-]: LOADK     R22 K15      ; R22 := 1
283 [-]: GETUPVAL  R23 U1       ; R23 := U1
284 [-]: LEN       R23 R23      ; R23 := # R23
285 [-]: LOADK     R24 K15      ; R24 := 1
286 [-]: FORPREP   R22 293      ; R22 -= R24; PC := 293
287 [-]: GETUPVAL  R26 U1       ; R26 := U1
288 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
289 [-]: EQ        0 R26 R2     ; if R26 ~= R2 then PC := 293
290 [-]: JMP       293          ; PC := 293
291 [-]: MOVE      R21 R25      ; R21 := R25
292 [-]: JMP       294          ; PC := 294
293 [-]: FORLOOP   R22 287      ; R22 += R24; if R22 <= R23 then begin PC := 287; R25 := R22 end
294 [-]: GETUPVAL  R26 U4       ; R26 := U4
295 [-]: GETTABLE  R9 R26 R21   ; R9 := R26[R21]
296 [-]: EQ        1 R9 K5      ; if R9 == nil then PC := 331
297 [-]: JMP       331          ; PC := 331
298 [-]: GETGLOBAL R26 K8       ; R26 := 0x400E7765
299 [-]: GETTABLE  R27 R2 K29   ; R27 := R2["instance"]
300 [-]: CALL      R26 2 2      ; R26 := R26(R27)
301 [-]: TEST      R26 1        ; if R26 then PC := 331
302 [-]: JMP       331          ; PC := 331
303 [-]: GETUPVAL  R26 U13      ; R26 := U13
304 [-]: GETTABLE  R26 R26 R21  ; R26 := R26[R21]
305 [-]: GETTABLE  R27 R26 K15  ; R27 := R26[1]
306 [-]: GETTABLE  R28 R26 K36  ; R28 := R26[2]
307 [-]: CLOSURE   R29 1        ; R29 := closure(Function #114.2)
308 [-]: MOVE      R0 R27       ; R0 := R27
309 [-]: MOVE      R0 R9        ; R0 := R9
310 [-]: MOVE      R0 R28       ; R0 := R28
311 [-]: GETGLOBAL R30 K41      ; R30 := 0x52E17A90
312 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
313 [-]: GETUPVAL  R32 U14      ; R32 := U14
314 [-]: GETTABLE  R32 R32 R21  ; R32 := R32[R21]
315 [-]: GETTABLE  R32 R32 K42  ; R32 := R32["clipName"]
316 [-]: GETGLOBAL R33 K43      ; R33 := UISys
317 [-]: GETTABLE  R33 R33 K46  ; R33 := R33["FlashInstance_EASE_IN"]
318 [-]: NEWTABLE  R34 1 0      ; R34 := {}
319 [-]: MOVE      R35 R29      ; R35 := R29
320 [-]: SETLIST   R34 1 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
321 [-]: NEWTABLE  R35 1 0      ; R35 := {}
322 [-]: LOADK     R36 K15      ; R36 := 1
323 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
324 [-]: LOADK     R36 K47      ; R36 := 0.15000000596046
325 [-]: LOADK     R37 K7       ; R37 := 0
326 [-]: CLOSURE   R38 2        ; R38 := closure(Function #114.3)
327 [-]: MOVE      R0 R27       ; R0 := R27
328 [-]: MOVE      R0 R28       ; R0 := R28
329 [-]: CALL      R30 9 1      ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
330 [-]: CLOSE     R26          ; SAVE R26,...
331 [-]: RETURN    R4 2         ; return R4
332 [-]: RETURN    R0 1         ; return 


; Function #114.1:
;
; Name:            
; Defined at line: 4634
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K1        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x8B011038"]
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: ADD       R2 R2 K3     ; R2 := R2 + 0.15000000596046
 10 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 11 [-]: LOADK     R3 K4        ; R3 := 0.0099999997764826
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x9F133E77"]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETUPVAL  R3 U2        ; R3 := U2
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETGLOBAL R2 K1        ; R2 := math
 24 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x8B011038"]
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: ADD       R3 R3 K6     ; R3 := R3 + 0.34999999403954
 27 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 28 [-]: LOADK     R4 K4        ; R4 := 0.0099999997764826
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9F133E77"]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R2        ; R6 := R2
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #114.2:
;
; Name:            
; Defined at line: 4666
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SUB       R0 K0 R0     ; R0 := 1 - R0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R1 K2        ; R1 := math
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x8B011038"]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: ADD       R2 R2 K4     ; R2 := R2 + 0.15000000596046
 11 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 12 [-]: LOADK     R3 K5        ; R3 := 0.0099999997764826
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9F133E77"]
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: TEST      R2 1         ; if R2 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R2 K2        ; R2 := math
 25 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x8B011038"]
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: ADD       R3 R3 K7     ; R3 := R3 + 0.34999999403954
 28 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 29 [-]: LOADK     R4 K5        ; R4 := 0.0099999997764826
 30 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x9F133E77"]
 33 [-]: MOVE      R5 R2        ; R5 := R2
 34 [-]: MOVE      R6 R2        ; R6 := R2
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: RETURN    R0 1         ; return 


; Function #114.3:
;
; Name:            
; Defined at line: 4679
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: CALL      R0 3 1       ; R0(R1,R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4694
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  4 [-]: TEST      R1 1         ; if R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Locked"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R1 U3        ; R1 := U3
 16 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETUPVAL  R1 U4        ; R1 := U4
 20 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xC4E503B0"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETUPVAL  R2 U5        ; R2 := U5
 23 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: LT        0 K5 R1      ; if -1 >= R1 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETUPVAL  R2 U5        ; R2 := U5
 28 [-]: LE        0 R2 K5      ; if R2 > -1 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: LE        0 R1 K5      ; if R1 > -1 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R2 U5        ; R2 := U5
 34 [-]: LT        0 K5 R2      ; if -1 >= R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: MOVE      R1 R5        ; R1 := R5
 38 [-]: RETURN    R0 2         ; return R0
 39 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4714
; #Upvalues:       39
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  90

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["EDIT_REGIONS"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 83
  5 [-]: JMP       83           ; PC := 83
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mMovingRegion"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 83
 11 [-]: JMP       83           ; PC := 83
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInitialWorldCursor"]
 16 [-]: SUB       R1 R0 R1     ; R1 := R0 - R1
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mInitialPosition"]
 19 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 20 [-]: SETTABLE  R2 K5 K6     ; R2["z"] := 0
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mMovingRegion"]
 23 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["instance"]
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEC183DDC"]
 25 [-]: MOVE      R5 R2        ; R5 := R2
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x2F74E23B"]
 29 [-]: GETUPVAL  R5 U2        ; R5 := U2
 30 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mMovingRegion"]
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: LOADNIL   R3 R3        ; R3 := nil
 34 [-]: GETGLOBAL R4 K10       ; R4 := 0x63B09107
 35 [-]: GETUPVAL  R5 U2        ; R5 := U2
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mChildNodes"]
 37 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 38 [-]: JMP       70           ; PC := 70
 39 [-]: GETUPVAL  R9 U5        ; R9 := U5
 40 [-]: GETTABLE  R10 R8 K12   ; R10 := R8["NodeIndex"]
 41 [-]: GETTABLE  R3 R9 R10    ; R3 := R9[R10]
 42 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["InitialPosition"]
 43 [-]: ADD       R2 R9 R1     ; R2 := R9 + R1
 44 [-]: SETTABLE  R3 K14 R2    ; R3["position"] := R2
 45 [-]: GETUPVAL  R9 U6        ; R9 := U6
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R3 K15 R9    ; R3["isSurfaceNode"] := R9
 49 [-]: GETUPVAL  R9 U4        ; R9 := U4
 50 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0xDD4FB1D0"]
 51 [-]: GETTABLE  R11 R3 K17   ; R11 := R3["radialSector"]
 52 [-]: MOVE      R12 R2       ; R12 := R2
 53 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 54 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 55 [-]: EQ        1 R9 K19     ; if R9 == nil then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 58 [-]: GETTABLE  R10 R3 K18   ; R10 := R3["deco"]
 59 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["mInstance"]
 60 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 61 [-]: TEST      R9 1         ; if R9 then PC := 70
 62 [-]: JMP       70           ; PC := 70
 63 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 64 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mInstance"]
 65 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0xEC183DDC"]
 66 [-]: GETTABLE  R11 R3 K18   ; R11 := R3["deco"]
 67 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["mOffset"]
 68 [-]: ADD       R11 R2 R11   ; R11 := R2 + R11
 69 [-]: CALL      R9 3 1       ; R9(R10,R11)
 70 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 39; R6 := R7 end
 71 [-]: JMP       39           ; PC := 39
 72 [-]: LOADK     R9 K22       ; R9 := 1
 73 [-]: GETUPVAL  R10 U7       ; R10 := U7
 74 [-]: LEN       R10 R10      ; R10 := # R10
 75 [-]: LOADK     R11 K22      ; R11 := 1
 76 [-]: FORPREP   R9 81        ; R9 -= R11; PC := 81
 77 [-]: GETUPVAL  R13 U8       ; R13 := U8
 78 [-]: GETUPVAL  R14 U7       ; R14 := U7
 79 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 80 [-]: CALL      R13 2 1      ; R13(R14)
 81 [-]: FORLOOP   R9 77        ; R9 += R11; if R9 <= R10 then begin PC := 77; R12 := R9 end
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: GETUPVAL  R13 U0       ; R13 := U0
 84 [-]: GETUPVAL  R14 U1       ; R14 := U1
 85 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["EDIT_NODES"]
 86 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 186
 87 [-]: JMP       186          ; PC := 186
 88 [-]: GETGLOBAL R13 K1       ; R13 := 0x400E7765
 89 [-]: GETUPVAL  R14 U2       ; R14 := U2
 90 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mMovingNode"]
 91 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 92 [-]: TEST      R13 1        ; if R13 then PC := 186
 93 [-]: JMP       186          ; PC := 186
 94 [-]: GETUPVAL  R13 U9       ; R13 := U9
 95 [-]: CALL      R13 1 2      ; R13 := R13()
 96 [-]: EQ        1 R13 K19    ; if R13 == nil then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: EQ        0 R13 K25    ; if R13 ~= "0x0" then PC := 131
 99 [-]: JMP       131          ; PC := 131
100 [-]: GETUPVAL  R14 U3       ; R14 := U3
101 [-]: CALL      R14 1 2      ; R14 := R14()
102 [-]: LOADNIL   R15 R15      ; R15 := nil
103 [-]: GETUPVAL  R16 U10      ; R16 := U10
104 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["mShiftDown"]
105 [-]: TEST      R16 0        ; if not R16 then PC := 124
106 [-]: JMP       124          ; PC := 124
107 [-]: GETUPVAL  R16 U11      ; R16 := U11
108 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["0x5328C56B"]
109 [-]: GETGLOBAL R17 K28      ; R17 := mMovie
110 [-]: CALL      R16 2 2      ; R16 := R16(R17)
111 [-]: GETTABLE  R17 R16 K29  ; R17 := R16["y"]
112 [-]: GETUPVAL  R18 U2       ; R18 := U2
113 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["mInitialMousePosition"]
114 [-]: GETTABLE  R18 R18 K29  ; R18 := R18["y"]
115 [-]: SUB       R17 R17 R18  ; R17 := R17 - R18
116 [-]: GETGLOBAL R18 K31      ; R18 := 0x221C9700
117 [-]: LOADK     R19 K6       ; R19 := 0
118 [-]: LOADK     R20 K6       ; R20 := 0
119 [-]: UNM       R21 R17      ; R21 := - R17
120 [-]: DIV       R21 R21 K32  ; R21 := R21 / 500
121 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
122 [-]: MOVE      R15 R18      ; R15 := R18
123 [-]: JMP       127          ; PC := 127
124 [-]: GETUPVAL  R18 U2       ; R18 := U2
125 [-]: GETTABLE  R18 R18 K3   ; R18 := R18["mInitialWorldCursor"]
126 [-]: SUB       R15 R14 R18  ; R15 := R14 - R18
127 [-]: GETUPVAL  R18 U2       ; R18 := U2
128 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mInitialPosition"]
129 [-]: ADD       R13 R18 R15  ; R13 := R18 + R15
130 [-]: JMP       137          ; PC := 137
131 [-]: GETGLOBAL R18 K33      ; R18 := gBackgroundRegion
132 [-]: SELF      R18 R18 K34  ; R19 := R18; R18 := R18["0xF7C1BE25"]
133 [-]: CALL      R18 2 2      ; R18 := R18(R19)
134 [-]: SELF      R18 R18 K35  ; R19 := R18; R18 := R18["0x6DA72501"]
135 [-]: CALL      R18 2 2      ; R18 := R18(R19)
136 [-]: ADD       R13 R13 R18  ; R13 := R13 + R18
137 [-]: GETUPVAL  R19 U2       ; R19 := U2
138 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
139 [-]: SETTABLE  R19 K14 R13  ; R19["position"] := R13
140 [-]: GETUPVAL  R19 U2       ; R19 := U2
141 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
142 [-]: GETUPVAL  R20 U6       ; R20 := U6
143 [-]: GETUPVAL  R21 U2       ; R21 := U2
144 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mMovingNode"]
145 [-]: CALL      R20 2 2      ; R20 := R20(R21)
146 [-]: SETTABLE  R19 K15 R20  ; R19["isSurfaceNode"] := R20
147 [-]: GETUPVAL  R19 U2       ; R19 := U2
148 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
149 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["radialSector"]
150 [-]: GETTABLE  R19 R19 K36  ; R19 := R19["region"]
151 [-]: LOADK     R20 K22      ; R20 := 1
152 [-]: GETUPVAL  R21 U7       ; R21 := U7
153 [-]: LEN       R21 R21      ; R21 := # R21
154 [-]: LOADK     R22 K22      ; R22 := 1
155 [-]: FORPREP   R20 174      ; R20 -= R22; PC := 174
156 [-]: GETUPVAL  R24 U7       ; R24 := U7
157 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
158 [-]: GETTABLE  R24 R24 K37  ; R24 := R24["NodeA"]
159 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
160 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["region"]
161 [-]: EQ        1 R24 R19    ; if R24 == R19 then PC := 170
162 [-]: JMP       170          ; PC := 170
163 [-]: GETUPVAL  R24 U7       ; R24 := U7
164 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
165 [-]: GETTABLE  R24 R24 K38  ; R24 := R24["NodeB"]
166 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
167 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["region"]
168 [-]: EQ        0 R24 R19    ; if R24 ~= R19 then PC := 174
169 [-]: JMP       174          ; PC := 174
170 [-]: GETUPVAL  R24 U8       ; R24 := U8
171 [-]: GETUPVAL  R25 U7       ; R25 := U7
172 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
173 [-]: CALL      R24 2 1      ; R24(R25)
174 [-]: FORLOOP   R20 156      ; R20 += R22; if R20 <= R21 then begin PC := 156; R23 := R20 end
175 [-]: GETUPVAL  R24 U4       ; R24 := U4
176 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0xDD4FB1D0"]
177 [-]: GETUPVAL  R26 U2       ; R26 := U2
178 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["mMovingNode"]
179 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["radialSector"]
180 [-]: MOVE      R27 R13      ; R27 := R13
181 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
182 [-]: GETUPVAL  R24 U12      ; R24 := U12
183 [-]: GETUPVAL  R25 U2       ; R25 := U2
184 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMovingNode"]
185 [-]: CALL      R24 2 1      ; R24(R25)
186 [-]: GETUPVAL  R24 U0       ; R24 := U0
187 [-]: GETUPVAL  R25 U1       ; R25 := U1
188 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["EDIT_SHORTCUT_CONTROL_POINTS"]
189 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 334
190 [-]: JMP       334          ; PC := 334
191 [-]: GETUPVAL  R24 U3       ; R24 := U3
192 [-]: CALL      R24 1 2      ; R24 := R24()
193 [-]: GETUPVAL  R25 U2       ; R25 := U2
194 [-]: GETTABLE  R25 R25 K40  ; R25 := R25["mControlPointHeld"]
195 [-]: TEST      R25 1        ; if R25 then PC := 275
196 [-]: JMP       275          ; PC := 275
197 [-]: GETUPVAL  R25 U2       ; R25 := U2
198 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["mMovingControlPoint"]
199 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
200 [-]: LOADK     R29 K22      ; R29 := 1
201 [-]: GETUPVAL  R30 U7       ; R30 := U7
202 [-]: LEN       R30 R30      ; R30 := # R30
203 [-]: LOADK     R31 K22      ; R31 := 1
204 [-]: FORPREP   R29 240      ; R29 -= R31; PC := 240
205 [-]: GETUPVAL  R33 U7       ; R33 := U7
206 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
207 [-]: GETTABLE  R33 R33 K42  ; R33 := R33["IsShortcut"]
208 [-]: TEST      R33 0        ; if not R33 then PC := 240
209 [-]: JMP       240          ; PC := 240
210 [-]: GETGLOBAL R33 K10      ; R33 := 0x63B09107
211 [-]: NEWTABLE  R34 2 0      ; R34 := {}
212 [-]: GETUPVAL  R35 U7       ; R35 := U7
213 [-]: GETTABLE  R35 R35 R32  ; R35 := R35[R32]
214 [-]: GETTABLE  R35 R35 K43  ; R35 := R35["controlPointA"]
215 [-]: GETUPVAL  R36 U7       ; R36 := U7
216 [-]: GETTABLE  R36 R36 R32  ; R36 := R36[R32]
217 [-]: GETTABLE  R36 R36 K44  ; R36 := R36["controlPointB"]
218 [-]: SETLIST   R34 2 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
219 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
220 [-]: JMP       238          ; PC := 238
221 [-]: GETGLOBAL R38 K31      ; R38 := 0x221C9700
222 [-]: GETTABLE  R39 R37 K14  ; R39 := R37["position"]
223 [-]: GETTABLE  R39 R39 K45  ; R39 := R39["x"]
224 [-]: GETTABLE  R40 R37 K14  ; R40 := R37["position"]
225 [-]: GETTABLE  R40 R40 K29  ; R40 := R40["y"]
226 [-]: LOADK     R41 K6       ; R41 := 0
227 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
228 [-]: MOVE      R26 R38      ; R26 := R38
229 [-]: GETGLOBAL R38 K46      ; R38 := 0x218C5C62
230 [-]: SUB       R39 R26 R24  ; R39 := R26 - R24
231 [-]: CALL      R38 2 2      ; R38 := R38(R39)
232 [-]: LT        0 R38 K47    ; if R38 >= 0.10000000149012 then PC := 238
233 [-]: JMP       238          ; PC := 238
234 [-]: MOVE      R27 R37      ; R27 := R37
235 [-]: GETUPVAL  R38 U7       ; R38 := U7
236 [-]: GETTABLE  R28 R38 R32  ; R28 := R38[R32]
237 [-]: JMP       240          ; PC := 240
238 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 221; R35 := R36 end
239 [-]: JMP       221          ; PC := 221
240 [-]: FORLOOP   R29 205      ; R29 += R31; if R29 <= R30 then begin PC := 205; R32 := R29 end
241 [-]: EQ        1 R25 R27    ; if R25 == R27 then PC := 275
242 [-]: JMP       275          ; PC := 275
243 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
244 [-]: MOVE      R39 R25      ; R39 := R25
245 [-]: CALL      R38 2 2      ; R38 := R38(R39)
246 [-]: TEST      R38 1        ; if R38 then PC := 257
247 [-]: JMP       257          ; PC := 257
248 [-]: GETTABLE  R38 R25 K48  ; R38 := R25["ringInstance"]
249 [-]: SELF      R38 R38 K49  ; R39 := R38; R38 := R38["0xA20F64C0"]
250 [-]: GETGLOBAL R40 K50      ; R40 := 0xB5A59043
251 [-]: LOADK     R41 K6       ; R41 := 0
252 [-]: LOADK     R42 K51      ; R42 := 255
253 [-]: LOADK     R43 K6       ; R43 := 0
254 [-]: LOADK     R44 K51      ; R44 := 255
255 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
256 [-]: CALL      R38 0 1      ; R38(R39,...)
257 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
258 [-]: MOVE      R39 R27      ; R39 := R27
259 [-]: CALL      R38 2 2      ; R38 := R38(R39)
260 [-]: TEST      R38 1        ; if R38 then PC := 271
261 [-]: JMP       271          ; PC := 271
262 [-]: GETTABLE  R38 R27 K48  ; R38 := R27["ringInstance"]
263 [-]: SELF      R38 R38 K49  ; R39 := R38; R38 := R38["0xA20F64C0"]
264 [-]: GETGLOBAL R40 K50      ; R40 := 0xB5A59043
265 [-]: LOADK     R41 K6       ; R41 := 0
266 [-]: LOADK     R42 K6       ; R42 := 0
267 [-]: LOADK     R43 K51      ; R43 := 255
268 [-]: LOADK     R44 K51      ; R44 := 255
269 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
270 [-]: CALL      R38 0 1      ; R38(R39,...)
271 [-]: GETUPVAL  R38 U2       ; R38 := U2
272 [-]: SETTABLE  R38 K41 R27  ; R38["mMovingControlPoint"] := R27
273 [-]: GETUPVAL  R38 U2       ; R38 := U2
274 [-]: SETTABLE  R38 K52 R28  ; R38["mEditingEdge"] := R28
275 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
276 [-]: GETUPVAL  R39 U2       ; R39 := U2
277 [-]: GETTABLE  R39 R39 K41  ; R39 := R39["mMovingControlPoint"]
278 [-]: CALL      R38 2 2      ; R38 := R38(R39)
279 [-]: TEST      R38 1        ; if R38 then PC := 334
280 [-]: JMP       334          ; PC := 334
281 [-]: GETUPVAL  R38 U2       ; R38 := U2
282 [-]: GETTABLE  R38 R38 K40  ; R38 := R38["mControlPointHeld"]
283 [-]: TEST      R38 0        ; if not R38 then PC := 334
284 [-]: JMP       334          ; PC := 334
285 [-]: GETUPVAL  R38 U2       ; R38 := U2
286 [-]: GETTABLE  R38 R38 K41  ; R38 := R38["mMovingControlPoint"]
287 [-]: GETTABLE  R38 R38 K14  ; R38 := R38["position"]
288 [-]: GETTABLE  R38 R38 K5   ; R38 := R38["z"]
289 [-]: GETUPVAL  R39 U2       ; R39 := U2
290 [-]: GETTABLE  R39 R39 K3   ; R39 := R39["mInitialWorldCursor"]
291 [-]: SUB       R39 R24 R39  ; R39 := R24 - R39
292 [-]: GETUPVAL  R40 U2       ; R40 := U2
293 [-]: GETTABLE  R40 R40 K4   ; R40 := R40["mInitialPosition"]
294 [-]: ADD       R40 R40 R39  ; R40 := R40 + R39
295 [-]: SETTABLE  R40 K5 R38   ; R40["z"] := R38
296 [-]: GETUPVAL  R41 U2       ; R41 := U2
297 [-]: GETTABLE  R41 R41 K41  ; R41 := R41["mMovingControlPoint"]
298 [-]: SETTABLE  R41 K14 R40  ; R41["position"] := R40
299 [-]: GETUPVAL  R41 U13      ; R41 := U13
300 [-]: GETUPVAL  R42 U2       ; R42 := U2
301 [-]: GETTABLE  R42 R42 K52  ; R42 := R42["mEditingEdge"]
302 [-]: CALL      R41 2 2      ; R41 := R41(R42)
303 [-]: GETUPVAL  R42 U2       ; R42 := U2
304 [-]: GETTABLE  R42 R42 K52  ; R42 := R42["mEditingEdge"]
305 [-]: GETTABLE  R42 R42 K53  ; R42 := R42["Instance"]
306 [-]: SELF      R42 R42 K54  ; R43 := R42; R42 := R42["0x5BD03F6B"]
307 [-]: MOVE      R44 R41      ; R44 := R41
308 [-]: CALL      R42 3 1      ; R42(R43,R44)
309 [-]: GETUPVAL  R42 U2       ; R42 := U2
310 [-]: GETTABLE  R42 R42 K41  ; R42 := R42["mMovingControlPoint"]
311 [-]: GETTABLE  R42 R42 K48  ; R42 := R42["ringInstance"]
312 [-]: SELF      R42 R42 K8   ; R43 := R42; R42 := R42["0xEC183DDC"]
313 [-]: MOVE      R44 R40      ; R44 := R40
314 [-]: CALL      R42 3 1      ; R42(R43,R44)
315 [-]: GETUPVAL  R42 U4       ; R42 := U4
316 [-]: SELF      R42 R42 K55  ; R43 := R42; R42 := R42["0x3D2B1A67"]
317 [-]: GETUPVAL  R44 U2       ; R44 := U2
318 [-]: GETTABLE  R44 R44 K52  ; R44 := R44["mEditingEdge"]
319 [-]: GETTABLE  R44 R44 K37  ; R44 := R44["NodeA"]
320 [-]: GETTABLE  R44 R44 K17  ; R44 := R44["radialSector"]
321 [-]: GETUPVAL  R45 U2       ; R45 := U2
322 [-]: GETTABLE  R45 R45 K52  ; R45 := R45["mEditingEdge"]
323 [-]: GETTABLE  R45 R45 K38  ; R45 := R45["NodeB"]
324 [-]: GETTABLE  R45 R45 K17  ; R45 := R45["radialSector"]
325 [-]: GETUPVAL  R46 U2       ; R46 := U2
326 [-]: GETTABLE  R46 R46 K52  ; R46 := R46["mEditingEdge"]
327 [-]: GETTABLE  R46 R46 K43  ; R46 := R46["controlPointA"]
328 [-]: GETTABLE  R46 R46 K14  ; R46 := R46["position"]
329 [-]: GETUPVAL  R47 U2       ; R47 := U2
330 [-]: GETTABLE  R47 R47 K52  ; R47 := R47["mEditingEdge"]
331 [-]: GETTABLE  R47 R47 K44  ; R47 := R47["controlPointB"]
332 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
333 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
334 [-]: GETUPVAL  R42 U0       ; R42 := U0
335 [-]: GETUPVAL  R43 U1       ; R43 := U1
336 [-]: GETTABLE  R43 R43 K56  ; R43 := R43["EDIT_NODE_DECOS"]
337 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 548
338 [-]: JMP       548          ; PC := 548
339 [-]: GETGLOBAL R42 K1       ; R42 := 0x400E7765
340 [-]: GETUPVAL  R43 U2       ; R43 := U2
341 [-]: GETTABLE  R43 R43 K24  ; R43 := R43["mMovingNode"]
342 [-]: CALL      R42 2 2      ; R42 := R42(R43)
343 [-]: TEST      R42 1        ; if R42 then PC := 548
344 [-]: JMP       548          ; PC := 548
345 [-]: GETUPVAL  R42 U2       ; R42 := U2
346 [-]: GETTABLE  R42 R42 K57  ; R42 := R42["mEditingOffset"]
347 [-]: TEST      R42 0        ; if not R42 then PC := 379
348 [-]: JMP       379          ; PC := 379
349 [-]: GETUPVAL  R42 U3       ; R42 := U3
350 [-]: CALL      R42 1 2      ; R42 := R42()
351 [-]: GETUPVAL  R43 U2       ; R43 := U2
352 [-]: GETTABLE  R43 R43 K3   ; R43 := R43["mInitialWorldCursor"]
353 [-]: SUB       R43 R42 R43  ; R43 := R42 - R43
354 [-]: GETUPVAL  R44 U2       ; R44 := U2
355 [-]: GETTABLE  R44 R44 K4   ; R44 := R44["mInitialPosition"]
356 [-]: ADD       R44 R44 R43  ; R44 := R44 + R43
357 [-]: GETUPVAL  R45 U2       ; R45 := U2
358 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
359 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
360 [-]: SETTABLE  R45 K21 R44  ; R45["mOffset"] := R44
361 [-]: GETUPVAL  R45 U2       ; R45 := U2
362 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
363 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
364 [-]: GETTABLE  R45 R45 K20  ; R45 := R45["mInstance"]
365 [-]: SELF      R45 R45 K8   ; R46 := R45; R45 := R45["0xEC183DDC"]
366 [-]: GETUPVAL  R47 U2       ; R47 := U2
367 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
368 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
369 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
370 [-]: CALL      R45 3 1      ; R45(R46,R47)
371 [-]: GETUPVAL  R45 U4       ; R45 := U4
372 [-]: SELF      R45 R45 K58  ; R46 := R45; R45 := R45["0xEDBA7E36"]
373 [-]: GETUPVAL  R47 U2       ; R47 := U2
374 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
375 [-]: GETTABLE  R47 R47 K17  ; R47 := R47["radialSector"]
376 [-]: MOVE      R48 R44      ; R48 := R44
377 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
378 [-]: JMP       544          ; PC := 544
379 [-]: GETUPVAL  R45 U2       ; R45 := U2
380 [-]: GETTABLE  R45 R45 K59  ; R45 := R45["mEditingRotation"]
381 [-]: TEST      R45 0        ; if not R45 then PC := 470
382 [-]: JMP       470          ; PC := 470
383 [-]: GETUPVAL  R45 U11      ; R45 := U11
384 [-]: GETTABLE  R45 R45 K27  ; R45 := R45["0x5328C56B"]
385 [-]: GETGLOBAL R46 K28      ; R46 := mMovie
386 [-]: CALL      R45 2 2      ; R45 := R45(R46)
387 [-]: GETTABLE  R46 R45 K45  ; R46 := R45["x"]
388 [-]: GETUPVAL  R47 U2       ; R47 := U2
389 [-]: GETTABLE  R47 R47 K30  ; R47 := R47["mInitialMousePosition"]
390 [-]: GETTABLE  R47 R47 K45  ; R47 := R47["x"]
391 [-]: SUB       R46 R46 R47  ; R46 := R46 - R47
392 [-]: GETTABLE  R47 R45 K29  ; R47 := R45["y"]
393 [-]: GETUPVAL  R48 U2       ; R48 := U2
394 [-]: GETTABLE  R48 R48 K30  ; R48 := R48["mInitialMousePosition"]
395 [-]: GETTABLE  R48 R48 K29  ; R48 := R48["y"]
396 [-]: SUB       R47 R47 R48  ; R47 := R47 - R48
397 [-]: LOADNIL   R48 R48      ; R48 := nil
398 [-]: GETUPVAL  R49 U2       ; R49 := U2
399 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mRotationAxis"]
400 [-]: EQ        0 R49 K61    ; if R49 ~= "heading" then PC := 416
401 [-]: JMP       416          ; PC := 416
402 [-]: GETGLOBAL R49 K62      ; R49 := 0x1E4F6281
403 [-]: GETUPVAL  R50 U2       ; R50 := U2
404 [-]: GETTABLE  R50 R50 K63  ; R50 := R50["mInitialRotation"]
405 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["heading"]
406 [-]: ADD       R50 R50 R46  ; R50 := R50 + R46
407 [-]: GETUPVAL  R51 U2       ; R51 := U2
408 [-]: GETTABLE  R51 R51 K63  ; R51 := R51["mInitialRotation"]
409 [-]: GETTABLE  R51 R51 K64  ; R51 := R51["pitch"]
410 [-]: GETUPVAL  R52 U2       ; R52 := U2
411 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["mInitialRotation"]
412 [-]: GETTABLE  R52 R52 K65  ; R52 := R52["bank"]
413 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
414 [-]: MOVE      R48 R49      ; R48 := R49
415 [-]: JMP       451          ; PC := 451
416 [-]: GETUPVAL  R49 U2       ; R49 := U2
417 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mRotationAxis"]
418 [-]: EQ        0 R49 K64    ; if R49 ~= "pitch" then PC := 434
419 [-]: JMP       434          ; PC := 434
420 [-]: GETGLOBAL R49 K62      ; R49 := 0x1E4F6281
421 [-]: GETUPVAL  R50 U2       ; R50 := U2
422 [-]: GETTABLE  R50 R50 K63  ; R50 := R50["mInitialRotation"]
423 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["heading"]
424 [-]: GETUPVAL  R51 U2       ; R51 := U2
425 [-]: GETTABLE  R51 R51 K63  ; R51 := R51["mInitialRotation"]
426 [-]: GETTABLE  R51 R51 K64  ; R51 := R51["pitch"]
427 [-]: ADD       R51 R51 R47  ; R51 := R51 + R47
428 [-]: GETUPVAL  R52 U2       ; R52 := U2
429 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["mInitialRotation"]
430 [-]: GETTABLE  R52 R52 K65  ; R52 := R52["bank"]
431 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
432 [-]: MOVE      R48 R49      ; R48 := R49
433 [-]: JMP       451          ; PC := 451
434 [-]: GETUPVAL  R49 U2       ; R49 := U2
435 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mRotationAxis"]
436 [-]: EQ        0 R49 K65    ; if R49 ~= "bank" then PC := 451
437 [-]: JMP       451          ; PC := 451
438 [-]: GETGLOBAL R49 K62      ; R49 := 0x1E4F6281
439 [-]: GETUPVAL  R50 U2       ; R50 := U2
440 [-]: GETTABLE  R50 R50 K63  ; R50 := R50["mInitialRotation"]
441 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["heading"]
442 [-]: GETUPVAL  R51 U2       ; R51 := U2
443 [-]: GETTABLE  R51 R51 K63  ; R51 := R51["mInitialRotation"]
444 [-]: GETTABLE  R51 R51 K64  ; R51 := R51["pitch"]
445 [-]: GETUPVAL  R52 U2       ; R52 := U2
446 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["mInitialRotation"]
447 [-]: GETTABLE  R52 R52 K65  ; R52 := R52["bank"]
448 [-]: ADD       R52 R52 R46  ; R52 := R52 + R46
449 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
450 [-]: MOVE      R48 R49      ; R48 := R49
451 [-]: GETUPVAL  R49 U2       ; R49 := U2
452 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
453 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
454 [-]: SETTABLE  R49 K66 R48  ; R49["mRotation"] := R48
455 [-]: GETUPVAL  R49 U2       ; R49 := U2
456 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
457 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
458 [-]: GETTABLE  R49 R49 K20  ; R49 := R49["mInstance"]
459 [-]: SELF      R49 R49 K67  ; R50 := R49; R49 := R49["0x5097FD8C"]
460 [-]: MOVE      R51 R48      ; R51 := R48
461 [-]: CALL      R49 3 1      ; R49(R50,R51)
462 [-]: GETUPVAL  R49 U4       ; R49 := U4
463 [-]: SELF      R49 R49 K68  ; R50 := R49; R49 := R49["0xCDECE0C5"]
464 [-]: GETUPVAL  R51 U2       ; R51 := U2
465 [-]: GETTABLE  R51 R51 K24  ; R51 := R51["mMovingNode"]
466 [-]: GETTABLE  R51 R51 K17  ; R51 := R51["radialSector"]
467 [-]: MOVE      R52 R48      ; R52 := R48
468 [-]: CALL      R49 4 1      ; R49(R50,R51,R52)
469 [-]: JMP       544          ; PC := 544
470 [-]: GETUPVAL  R49 U2       ; R49 := U2
471 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["mEditingScale"]
472 [-]: TEST      R49 0        ; if not R49 then PC := 544
473 [-]: JMP       544          ; PC := 544
474 [-]: GETUPVAL  R49 U11      ; R49 := U11
475 [-]: GETTABLE  R49 R49 K27  ; R49 := R49["0x5328C56B"]
476 [-]: GETGLOBAL R50 K28      ; R50 := mMovie
477 [-]: CALL      R49 2 2      ; R49 := R49(R50)
478 [-]: GETGLOBAL R50 K70      ; R50 := 0xB09F286F
479 [-]: MOVE      R51 R49      ; R51 := R49
480 [-]: GETUPVAL  R52 U2       ; R52 := U2
481 [-]: GETTABLE  R52 R52 K30  ; R52 := R52["mInitialMousePosition"]
482 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
483 [-]: GETTABLE  R51 R49 K29  ; R51 := R49["y"]
484 [-]: GETUPVAL  R52 U2       ; R52 := U2
485 [-]: GETTABLE  R52 R52 K30  ; R52 := R52["mInitialMousePosition"]
486 [-]: GETTABLE  R52 R52 K29  ; R52 := R52["y"]
487 [-]: LT        1 R52 R51    ; if R52 < R51 then PC := 490
488 [-]: JMP       490          ; PC := 490
489 [-]: MOVE      R51 R0       ; R51 := R0
490 [-]: MOVE      R51 R1       ; R51 := R1
491 [-]: DIV       R52 R50 K71  ; R52 := R50 / 200
492 [-]: GETUPVAL  R53 U11      ; R53 := U11
493 [-]: GETTABLE  R53 R53 K72  ; R53 := R53["0xF81722A2"]
494 [-]: MOVE      R54 R51      ; R54 := R51
495 [-]: LOADK     R55 K22      ; R55 := 1
496 [-]: LOADK     R56 K73      ; R56 := -1
497 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
498 [-]: MUL       R52 R52 R53  ; R52 := R52 * R53
499 [-]: GETGLOBAL R53 K74      ; R53 := 0x6374FD98
500 [-]: GETUPVAL  R54 U2       ; R54 := U2
501 [-]: GETTABLE  R54 R54 K75  ; R54 := R54["mInitialScale"]
502 [-]: SUB       R55 K22 R52  ; R55 := 1 - R52
503 [-]: MUL       R54 R54 R55  ; R54 := R54 * R55
504 [-]: LOADK     R55 K76      ; R55 := 9.9999997473788e-06
505 [-]: LOADK     R56 K77      ; R56 := 10
506 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
507 [-]: GETUPVAL  R54 U2       ; R54 := U2
508 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
509 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
510 [-]: SETTABLE  R54 K78 R53  ; R54["mScale"] := R53
511 [-]: GETUPVAL  R54 U2       ; R54 := U2
512 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
513 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
514 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
515 [-]: SELF      R54 R54 K79  ; R55 := R54; R54 := R54["0x6A7E5F92"]
516 [-]: GETUPVAL  R56 U14      ; R56 := U14
517 [-]: GETTABLE  R56 R56 K80  ; R56 := R56["DECO_SCALE_MULTIPLIER"]
518 [-]: MUL       R56 R53 R56  ; R56 := R53 * R56
519 [-]: MOVE      R57 R1       ; R57 := R1
520 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
521 [-]: GETUPVAL  R54 U4       ; R54 := U4
522 [-]: SELF      R54 R54 K81  ; R55 := R54; R54 := R54["0x1F74748A"]
523 [-]: GETUPVAL  R56 U2       ; R56 := U2
524 [-]: GETTABLE  R56 R56 K24  ; R56 := R56["mMovingNode"]
525 [-]: GETTABLE  R56 R56 K17  ; R56 := R56["radialSector"]
526 [-]: MOVE      R57 R53      ; R57 := R53
527 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
528 [-]: GETUPVAL  R54 U2       ; R54 := U2
529 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
530 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
531 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
532 [-]: SELF      R54 R54 K82  ; R55 := R54; R54 := R54["0xB3733382"]
533 [-]: CALL      R54 2 2      ; R54 := R54(R55)
534 [-]: LOADK     R55 K22      ; R55 := 1
535 [-]: LEN       R56 R54      ; R56 := # R54
536 [-]: LOADK     R57 K22      ; R57 := 1
537 [-]: FORPREP   R55 543      ; R55 -= R57; PC := 543
538 [-]: GETTABLE  R59 R54 R58  ; R59 := R54[R58]
539 [-]: SELF      R59 R59 K79  ; R60 := R59; R59 := R59["0x6A7E5F92"]
540 [-]: LOADK     R61 K22      ; R61 := 1
541 [-]: MOVE      R62 R1       ; R62 := R1
542 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
543 [-]: FORLOOP   R55 538      ; R55 += R57; if R55 <= R56 then begin PC := 538; R58 := R55 end
544 [-]: GETUPVAL  R59 U12      ; R59 := U12
545 [-]: GETUPVAL  R60 U2       ; R60 := U2
546 [-]: GETTABLE  R60 R60 K24  ; R60 := R60["mMovingNode"]
547 [-]: CALL      R59 2 1      ; R59(R60)
548 [-]: GETUPVAL  R59 U15      ; R59 := U15
549 [-]: TEST      R59 1        ; if R59 then PC := 552
550 [-]: JMP       552          ; PC := 552
551 [-]: RETURN    R0 1         ; return 
552 [-]: GETGLOBAL R59 K83      ; R59 := _T
553 [-]: GETTABLE  R59 R59 K84  ; R59 := R59["MouseInWorldStateWindow"]
554 [-]: TEST      R59 1        ; if R59 then PC := 560
555 [-]: JMP       560          ; PC := 560
556 [-]: GETGLOBAL R59 K83      ; R59 := _T
557 [-]: GETTABLE  R59 R59 K85  ; R59 := R59["MouseInChatArea"]
558 [-]: TEST      R59 0        ; if not R59 then PC := 567
559 [-]: JMP       567          ; PC := 567
560 [-]: GETUPVAL  R59 U15      ; R59 := U15
561 [-]: GETTABLE  R59 R59 K86  ; R59 := R59["mDragging"]
562 [-]: TEST      R59 0        ; if not R59 then PC := 567
563 [-]: JMP       567          ; PC := 567
564 [-]: GETUPVAL  R59 U15      ; R59 := U15
565 [-]: SELF      R59 R59 K87  ; R60 := R59; R59 := R59["0xD963824A"]
566 [-]: CALL      R59 2 1      ; R59(R60)
567 [-]: GETGLOBAL R59 K88      ; R59 := 0x4CDEF9FF
568 [-]: CALL      R59 1 2      ; R59 := R59()
569 [-]: GETUPVAL  R60 U15      ; R60 := U15
570 [-]: SELF      R60 R60 K89  ; R61 := R60; R60 := R60["0x8C7099E9"]
571 [-]: MOVE      R62 R59      ; R62 := R59
572 [-]: CALL      R60 3 1      ; R60(R61,R62)
573 [-]: GETUPVAL  R60 U15      ; R60 := U15
574 [-]: GETTABLE  R60 R60 K90  ; R60 := R60["mCurrentScroll"]
575 [-]: GETTABLE  R60 R60 K45  ; R60 := R60["x"]
576 [-]: GETUPVAL  R61 U15      ; R61 := U15
577 [-]: GETTABLE  R61 R61 K90  ; R61 := R61["mCurrentScroll"]
578 [-]: GETTABLE  R61 R61 K29  ; R61 := R61["y"]
579 [-]: GETUPVAL  R62 U16      ; R62 := U16
580 [-]: GETTABLE  R62 R62 K91  ; R62 := R62["Active"]
581 [-]: TEST      R62 0        ; if not R62 then PC := 628
582 [-]: JMP       628          ; PC := 628
583 [-]: GETUPVAL  R62 U11      ; R62 := U11
584 [-]: GETTABLE  R62 R62 K92  ; R62 := R62["0xEA569929"]
585 [-]: GETGLOBAL R63 K28      ; R63 := mMovie
586 [-]: CALL      R62 2 3      ; R62,R63 := R62(R63)
587 [-]: GETGLOBAL R64 K74      ; R64 := 0x6374FD98
588 [-]: GETGLOBAL R65 K28      ; R65 := mMovie
589 [-]: SELF      R65 R65 K93  ; R66 := R65; R65 := R65["0xBAE5F929"]
590 [-]: CALL      R65 2 2      ; R65 := R65(R66)
591 [-]: LOADK     R66 K6       ; R66 := 0
592 [-]: MOVE      R67 R62      ; R67 := R62
593 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
594 [-]: DIV       R65 R62 K94  ; R65 := R62 / 2
595 [-]: SUB       R64 R64 R65  ; R64 := R64 - R65
596 [-]: GETGLOBAL R65 K74      ; R65 := 0x6374FD98
597 [-]: GETGLOBAL R66 K28      ; R66 := mMovie
598 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0x6ACD1B87"]
599 [-]: CALL      R66 2 2      ; R66 := R66(R67)
600 [-]: LOADK     R67 K6       ; R67 := 0
601 [-]: MOVE      R68 R63      ; R68 := R63
602 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
603 [-]: DIV       R66 R63 K94  ; R66 := R63 / 2
604 [-]: SUB       R65 R65 R66  ; R65 := R65 - R66
605 [-]: GETGLOBAL R66 K74      ; R66 := 0x6374FD98
606 [-]: DIV       R67 R64 R62  ; R67 := R64 / R62
607 [-]: LOADK     R68 K73      ; R68 := -1
608 [-]: LOADK     R69 K22      ; R69 := 1
609 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
610 [-]: UNM       R64 R66      ; R64 := - R66
611 [-]: GETGLOBAL R66 K74      ; R66 := 0x6374FD98
612 [-]: DIV       R67 R65 R63  ; R67 := R65 / R63
613 [-]: LOADK     R68 K73      ; R68 := -1
614 [-]: LOADK     R69 K22      ; R69 := 1
615 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
616 [-]: UNM       R65 R66      ; R65 := - R66
617 [-]: GETUPVAL  R66 U17      ; R66 := U17
618 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
619 [-]: MUL       R68 R64 K97  ; R68 := R64 * -0.0040000001899898
620 [-]: ADD       R68 R60 R68  ; R68 := R60 + R68
621 [-]: CALL      R66 3 1      ; R66(R67,R68)
622 [-]: GETUPVAL  R66 U18      ; R66 := U18
623 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
624 [-]: MUL       R68 R65 K98  ; R68 := R65 * -0.003000000026077
625 [-]: ADD       R68 R61 R68  ; R68 := R61 + R68
626 [-]: CALL      R66 3 1      ; R66(R67,R68)
627 [-]: JMP       636          ; PC := 636
628 [-]: GETUPVAL  R66 U17      ; R66 := U17
629 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
630 [-]: MOVE      R68 R60      ; R68 := R60
631 [-]: CALL      R66 3 1      ; R66(R67,R68)
632 [-]: GETUPVAL  R66 U18      ; R66 := U18
633 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
634 [-]: MOVE      R68 R61      ; R68 := R61
635 [-]: CALL      R66 3 1      ; R66(R67,R68)
636 [-]: GETUPVAL  R66 U17      ; R66 := U17
637 [-]: GETTABLE  R66 R66 K99  ; R66 := R66["mCurVal"]
638 [-]: GETUPVAL  R67 U18      ; R67 := U18
639 [-]: GETTABLE  R67 R67 K99  ; R67 := R67["mCurVal"]
640 [-]: GETUPVAL  R68 U17      ; R68 := U17
641 [-]: SELF      R68 R68 K89  ; R69 := R68; R68 := R68["0x8C7099E9"]
642 [-]: MOVE      R70 R59      ; R70 := R59
643 [-]: CALL      R68 3 1      ; R68(R69,R70)
644 [-]: GETUPVAL  R68 U18      ; R68 := U18
645 [-]: SELF      R68 R68 K89  ; R69 := R68; R68 := R68["0x8C7099E9"]
646 [-]: MOVE      R70 R59      ; R70 := R59
647 [-]: CALL      R68 3 1      ; R68(R69,R70)
648 [-]: GETGLOBAL R68 K100     ; R68 := math
649 [-]: GETTABLE  R68 R68 K101 ; R68 := R68["0xF93F7CC8"]
650 [-]: GETUPVAL  R69 U17      ; R69 := U17
651 [-]: GETTABLE  R69 R69 K102 ; R69 := R69["mTargetVal"]
652 [-]: SUB       R69 R66 R69  ; R69 := R66 - R69
653 [-]: CALL      R68 2 2      ; R68 := R68(R69)
654 [-]: LT        1 K103 R68   ; if 4.9999998736894e-06 < R68 then PC := 657
655 [-]: JMP       657          ; PC := 657
656 [-]: MOVE      R68 R0       ; R68 := R0
657 [-]: MOVE      R68 R1       ; R68 := R1
658 [-]: TEST      R68 1        ; if R68 then PC := 671
659 [-]: JMP       671          ; PC := 671
660 [-]: GETUPVAL  R69 U17      ; R69 := U17
661 [-]: GETTABLE  R69 R69 K99  ; R69 := R69["mCurVal"]
662 [-]: GETUPVAL  R70 U17      ; R70 := U17
663 [-]: GETTABLE  R70 R70 K102 ; R70 := R70["mTargetVal"]
664 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 671
665 [-]: JMP       671          ; PC := 671
666 [-]: GETUPVAL  R69 U17      ; R69 := U17
667 [-]: SELF      R69 R69 K104 ; R70 := R69; R69 := R69["0x5A7A6B1"]
668 [-]: GETUPVAL  R71 U17      ; R71 := U17
669 [-]: GETTABLE  R71 R71 K102 ; R71 := R71["mTargetVal"]
670 [-]: CALL      R69 3 1      ; R69(R70,R71)
671 [-]: GETGLOBAL R69 K100     ; R69 := math
672 [-]: GETTABLE  R69 R69 K101 ; R69 := R69["0xF93F7CC8"]
673 [-]: GETUPVAL  R70 U18      ; R70 := U18
674 [-]: GETTABLE  R70 R70 K102 ; R70 := R70["mTargetVal"]
675 [-]: SUB       R70 R67 R70  ; R70 := R67 - R70
676 [-]: CALL      R69 2 2      ; R69 := R69(R70)
677 [-]: LT        1 K103 R69   ; if 4.9999998736894e-06 < R69 then PC := 680
678 [-]: JMP       680          ; PC := 680
679 [-]: MOVE      R69 R0       ; R69 := R0
680 [-]: MOVE      R69 R1       ; R69 := R1
681 [-]: TEST      R69 1        ; if R69 then PC := 694
682 [-]: JMP       694          ; PC := 694
683 [-]: GETUPVAL  R70 U18      ; R70 := U18
684 [-]: GETTABLE  R70 R70 K99  ; R70 := R70["mCurVal"]
685 [-]: GETUPVAL  R71 U18      ; R71 := U18
686 [-]: GETTABLE  R71 R71 K102 ; R71 := R71["mTargetVal"]
687 [-]: EQ        1 R70 R71    ; if R70 == R71 then PC := 694
688 [-]: JMP       694          ; PC := 694
689 [-]: GETUPVAL  R70 U18      ; R70 := U18
690 [-]: SELF      R70 R70 K104 ; R71 := R70; R70 := R70["0x5A7A6B1"]
691 [-]: GETUPVAL  R72 U18      ; R72 := U18
692 [-]: GETTABLE  R72 R72 K102 ; R72 := R72["mTargetVal"]
693 [-]: CALL      R70 3 1      ; R70(R71,R72)
694 [-]: GETUPVAL  R70 U19      ; R70 := U19
695 [-]: GETTABLE  R70 R70 K99  ; R70 := R70["mCurVal"]
696 [-]: GETUPVAL  R71 U19      ; R71 := U19
697 [-]: SELF      R71 R71 K89  ; R72 := R71; R71 := R71["0x8C7099E9"]
698 [-]: MOVE      R73 R59      ; R73 := R59
699 [-]: CALL      R71 3 1      ; R71(R72,R73)
700 [-]: GETGLOBAL R71 K100     ; R71 := math
701 [-]: GETTABLE  R71 R71 K101 ; R71 := R71["0xF93F7CC8"]
702 [-]: GETUPVAL  R72 U19      ; R72 := U19
703 [-]: GETTABLE  R72 R72 K102 ; R72 := R72["mTargetVal"]
704 [-]: SUB       R72 R70 R72  ; R72 := R70 - R72
705 [-]: CALL      R71 2 2      ; R71 := R71(R72)
706 [-]: LT        1 K105 R71   ; if 0.0099999997764826 < R71 then PC := 709
707 [-]: JMP       709          ; PC := 709
708 [-]: MOVE      R71 R0       ; R71 := R0
709 [-]: MOVE      R71 R1       ; R71 := R1
710 [-]: TEST      R71 1        ; if R71 then PC := 723
711 [-]: JMP       723          ; PC := 723
712 [-]: GETUPVAL  R72 U15      ; R72 := U15
713 [-]: GETTABLE  R72 R72 K99  ; R72 := R72["mCurVal"]
714 [-]: GETUPVAL  R73 U15      ; R73 := U15
715 [-]: GETTABLE  R73 R73 K102 ; R73 := R73["mTargetVal"]
716 [-]: EQ        1 R72 R73    ; if R72 == R73 then PC := 723
717 [-]: JMP       723          ; PC := 723
718 [-]: GETUPVAL  R72 U15      ; R72 := U15
719 [-]: SELF      R72 R72 K104 ; R73 := R72; R72 := R72["0x5A7A6B1"]
720 [-]: GETUPVAL  R74 U15      ; R74 := U15
721 [-]: GETTABLE  R74 R74 K102 ; R74 := R74["mTargetVal"]
722 [-]: CALL      R72 3 1      ; R72(R73,R74)
723 [-]: GETUPVAL  R72 U20      ; R72 := U20
724 [-]: TEST      R72 0        ; if not R72 then PC := 732
725 [-]: JMP       732          ; PC := 732
726 [-]: TEST      R71 1        ; if R71 then PC := 732
727 [-]: JMP       732          ; PC := 732
728 [-]: GETUPVAL  R72 U20      ; R72 := U20
729 [-]: CALL      R72 1 1      ; R72()
730 [-]: LOADNIL   R72 R72      ; R72 := nil
731 [-]: MOVE      R72 R20      ; R72 := R20
732 [-]: TEST      R71 0        ; if not R71 then PC := 736
733 [-]: JMP       736          ; PC := 736
734 [-]: GETUPVAL  R72 U21      ; R72 := U21
735 [-]: CALL      R72 1 1      ; R72()
736 [-]: GETUPVAL  R72 U17      ; R72 := U17
737 [-]: SELF      R72 R72 K106 ; R73 := R72; R72 := R72["0xC4E503B0"]
738 [-]: CALL      R72 2 2      ; R72 := R72(R73)
739 [-]: MUL       R72 R72 K94  ; R72 := R72 * 2
740 [-]: SUB       R72 R72 K22  ; R72 := R72 - 1
741 [-]: GETUPVAL  R73 U22      ; R73 := U22
742 [-]: MUL       R72 R72 R73  ; R72 := R72 * R73
743 [-]: GETUPVAL  R73 U18      ; R73 := U18
744 [-]: SELF      R73 R73 K106 ; R74 := R73; R73 := R73["0xC4E503B0"]
745 [-]: CALL      R73 2 2      ; R73 := R73(R74)
746 [-]: MUL       R73 R73 K94  ; R73 := R73 * 2
747 [-]: SUB       R73 R73 K22  ; R73 := R73 - 1
748 [-]: GETUPVAL  R74 U22      ; R74 := U22
749 [-]: UNM       R74 R74      ; R74 := - R74
750 [-]: MUL       R73 R73 R74  ; R73 := R73 * R74
751 [-]: GETGLOBAL R74 K31      ; R74 := 0x221C9700
752 [-]: GETUPVAL  R75 U23      ; R75 := U23
753 [-]: GETTABLE  R75 R75 K107 ; R75 := R75["origFacing"]
754 [-]: GETTABLE  R75 R75 K45  ; R75 := R75["x"]
755 [-]: GETUPVAL  R76 U23      ; R76 := U23
756 [-]: GETTABLE  R76 R76 K107 ; R76 := R76["origFacing"]
757 [-]: GETTABLE  R76 R76 K29  ; R76 := R76["y"]
758 [-]: GETUPVAL  R77 U23      ; R77 := U23
759 [-]: GETTABLE  R77 R77 K107 ; R77 := R77["origFacing"]
760 [-]: GETTABLE  R77 R77 K5   ; R77 := R77["z"]
761 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
762 [-]: GETUPVAL  R75 U19      ; R75 := U19
763 [-]: SELF      R75 R75 K106 ; R76 := R75; R75 := R75["0xC4E503B0"]
764 [-]: CALL      R75 2 2      ; R75 := R75(R76)
765 [-]: MUL       R75 R74 R75  ; R75 := R74 * R75
766 [-]: GETTABLE  R76 R75 K45  ; R76 := R75["x"]
767 [-]: ADD       R76 R76 R72  ; R76 := R76 + R72
768 [-]: SETTABLE  R75 K45 R76  ; R75["x"] := R76
769 [-]: GETTABLE  R76 R75 K29  ; R76 := R75["y"]
770 [-]: ADD       R76 R76 R73  ; R76 := R76 + R73
771 [-]: SETTABLE  R75 K29 R76  ; R75["y"] := R76
772 [-]: LOADK     R76 K108     ; R76 := -0.20000000298023
773 [-]: LOADK     R77 K109     ; R77 := 0.40000000596046
774 [-]: LOADK     R78 K110     ; R78 := -0.26499998569489
775 [-]: GETUPVAL  R79 U16      ; R79 := U16
776 [-]: GETTABLE  R79 R79 K91  ; R79 := R79["Active"]
777 [-]: TEST      R79 1        ; if R79 then PC := 897
778 [-]: JMP       897          ; PC := 897
779 [-]: GETUPVAL  R79 U24      ; R79 := U24
780 [-]: GETTABLE  R79 R79 K111 ; R79 := R79["Region"]
781 [-]: GETUPVAL  R80 U25      ; R80 := U25
782 [-]: EQ        1 R79 R80    ; if R79 == R80 then PC := 897
783 [-]: JMP       897          ; PC := 897
784 [-]: GETGLOBAL R79 K1       ; R79 := 0x400E7765
785 [-]: GETUPVAL  R80 U26      ; R80 := U26
786 [-]: CALL      R79 2 2      ; R79 := R79(R80)
787 [-]: TEST      R79 1        ; if R79 then PC := 897
788 [-]: JMP       897          ; PC := 897
789 [-]: GETUPVAL  R79 U24      ; R79 := U24
790 [-]: GETTABLE  R79 R79 K112 ; R79 := R79["Locked"]
791 [-]: TEST      R79 1        ; if R79 then PC := 897
792 [-]: JMP       897          ; PC := 897
793 [-]: GETUPVAL  R79 U24      ; R79 := U24
794 [-]: GETUPVAL  R80 U26      ; R80 := U26
795 [-]: SELF      R80 R80 K35  ; R81 := R80; R80 := R80["0x6DA72501"]
796 [-]: CALL      R80 2 2      ; R80 := R80(R81)
797 [-]: SETTABLE  R79 K113 R80 ; R79["Previous"] := R80
798 [-]: GETUPVAL  R79 U24      ; R79 := U24
799 [-]: GETUPVAL  R80 U25      ; R80 := U25
800 [-]: SETTABLE  R79 K111 R80 ; R79["Region"] := R80
801 [-]: GETGLOBAL R79 K1       ; R79 := 0x400E7765
802 [-]: GETUPVAL  R80 U25      ; R80 := U25
803 [-]: CALL      R79 2 2      ; R79 := R79(R80)
804 [-]: TEST      R79 1        ; if R79 then PC := 829
805 [-]: JMP       829          ; PC := 829
806 [-]: GETUPVAL  R79 U25      ; R79 := U25
807 [-]: GETTABLE  R79 R79 K114 ; R79 := R79["pos"]
808 [-]: GETTABLE  R80 R79 K45  ; R80 := R79["x"]
809 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 818
810 [-]: JMP       818          ; PC := 818
811 [-]: GETGLOBAL R80 K31      ; R80 := 0x221C9700
812 [-]: UNM       R81 R77      ; R81 := - R77
813 [-]: MOVE      R82 R78      ; R82 := R78
814 [-]: MOVE      R83 R76      ; R83 := R76
815 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
816 [-]: MOVE      R79 R80      ; R79 := R80
817 [-]: JMP       824          ; PC := 824
818 [-]: GETGLOBAL R80 K31      ; R80 := 0x221C9700
819 [-]: ADD       R81 R77 K115 ; R81 := R77 + 0.20000000298023
820 [-]: MOVE      R82 R78      ; R82 := R78
821 [-]: MOVE      R83 R76      ; R83 := R76
822 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
823 [-]: MOVE      R79 R80      ; R79 := R80
824 [-]: GETUPVAL  R80 U24      ; R80 := U24
825 [-]: GETUPVAL  R81 U27      ; R81 := U27
826 [-]: ADD       R81 R81 R79  ; R81 := R81 + R79
827 [-]: SETTABLE  R80 K116 R81 ; R80["Target"] := R81
828 [-]: JMP       838          ; PC := 838
829 [-]: GETUPVAL  R80 U24      ; R80 := U24
830 [-]: GETUPVAL  R81 U27      ; R81 := U27
831 [-]: GETGLOBAL R82 K31      ; R82 := 0x221C9700
832 [-]: LOADK     R83 K47      ; R83 := 0.10000000149012
833 [-]: LOADK     R84 K6       ; R84 := 0
834 [-]: LOADK     R85 K117     ; R85 := 4
835 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
836 [-]: ADD       R81 R81 R82  ; R81 := R81 + R82
837 [-]: SETTABLE  R80 K116 R81 ; R80["Target"] := R81
838 [-]: GETUPVAL  R80 U24      ; R80 := U24
839 [-]: GETTABLE  R80 R80 K118 ; R80 := R80["Prop"]
840 [-]: SELF      R80 R80 K104 ; R81 := R80; R80 := R80["0x5A7A6B1"]
841 [-]: LOADK     R82 K6       ; R82 := 0
842 [-]: CALL      R80 3 1      ; R80(R81,R82)
843 [-]: GETUPVAL  R80 U24      ; R80 := U24
844 [-]: GETTABLE  R80 R80 K118 ; R80 := R80["Prop"]
845 [-]: SELF      R80 R80 K96  ; R81 := R80; R80 := R80["0xDB349344"]
846 [-]: LOADK     R82 K22      ; R82 := 1
847 [-]: CALL      R80 3 1      ; R80(R81,R82)
848 [-]: GETUPVAL  R80 U25      ; R80 := U25
849 [-]: EQ        0 R80 K19    ; if R80 ~= nil then PC := 859
850 [-]: JMP       859          ; PC := 859
851 [-]: GETUPVAL  R80 U26      ; R80 := U26
852 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
853 [-]: GETUPVAL  R82 U28      ; R82 := U28
854 [-]: MOVE      R83 R0       ; R83 := R0
855 [-]: MOVE      R84 R1       ; R84 := R1
856 [-]: LOADK     R85 K22      ; R85 := 1
857 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
858 [-]: JMP       892          ; PC := 892
859 [-]: GETUPVAL  R80 U19      ; R80 := U19
860 [-]: SELF      R80 R80 K106 ; R81 := R80; R80 := R80["0xC4E503B0"]
861 [-]: CALL      R80 2 2      ; R80 := R80(R81)
862 [-]: LT        0 R80 K73    ; if R80 >= -1 then PC := 872
863 [-]: JMP       872          ; PC := 872
864 [-]: GETUPVAL  R80 U26      ; R80 := U26
865 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
866 [-]: GETUPVAL  R82 U28      ; R82 := U28
867 [-]: MOVE      R83 R0       ; R83 := R0
868 [-]: MOVE      R84 R1       ; R84 := R1
869 [-]: LOADK     R85 K22      ; R85 := 1
870 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
871 [-]: JMP       892          ; PC := 892
872 [-]: GETUPVAL  R80 U25      ; R80 := U25
873 [-]: GETTABLE  R80 R80 K114 ; R80 := R80["pos"]
874 [-]: GETTABLE  R80 R80 K45  ; R80 := R80["x"]
875 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 885
876 [-]: JMP       885          ; PC := 885
877 [-]: GETUPVAL  R80 U26      ; R80 := U26
878 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
879 [-]: GETGLOBAL R82 K120     ; R82 := leftGraspAnim
880 [-]: MOVE      R83 R0       ; R83 := R0
881 [-]: MOVE      R84 R1       ; R84 := R1
882 [-]: LOADK     R85 K22      ; R85 := 1
883 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
884 [-]: JMP       892          ; PC := 892
885 [-]: GETUPVAL  R80 U26      ; R80 := U26
886 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
887 [-]: GETGLOBAL R82 K121     ; R82 := rightGraspAnim
888 [-]: MOVE      R83 R0       ; R83 := R0
889 [-]: MOVE      R84 R1       ; R84 := R1
890 [-]: LOADK     R85 K22      ; R85 := 1
891 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
892 [-]: GETUPVAL  R80 U19      ; R80 := U19
893 [-]: SELF      R80 R80 K106 ; R81 := R80; R80 := R80["0xC4E503B0"]
894 [-]: CALL      R80 2 2      ; R80 := R80(R81)
895 [-]: MOVE      R80 R29      ; R80 := R29
896 [-]: JMP       934          ; PC := 934
897 [-]: GETUPVAL  R80 U30      ; R80 := U30
898 [-]: CALL      R80 1 2      ; R80 := R80()
899 [-]: TEST      R80 0        ; if not R80 then PC := 934
900 [-]: JMP       934          ; PC := 934
901 [-]: GETUPVAL  R80 U19      ; R80 := U19
902 [-]: SELF      R80 R80 K106 ; R81 := R80; R80 := R80["0xC4E503B0"]
903 [-]: CALL      R80 2 2      ; R80 := R80(R81)
904 [-]: LT        0 R80 K73    ; if R80 >= -1 then PC := 914
905 [-]: JMP       914          ; PC := 914
906 [-]: GETUPVAL  R80 U26      ; R80 := U26
907 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
908 [-]: GETUPVAL  R82 U28      ; R82 := U28
909 [-]: MOVE      R83 R0       ; R83 := R0
910 [-]: MOVE      R84 R1       ; R84 := R1
911 [-]: LOADK     R85 K22      ; R85 := 1
912 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
913 [-]: JMP       934          ; PC := 934
914 [-]: GETUPVAL  R80 U25      ; R80 := U25
915 [-]: GETTABLE  R80 R80 K114 ; R80 := R80["pos"]
916 [-]: GETTABLE  R80 R80 K45  ; R80 := R80["x"]
917 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 927
918 [-]: JMP       927          ; PC := 927
919 [-]: GETUPVAL  R80 U26      ; R80 := U26
920 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
921 [-]: GETGLOBAL R82 K120     ; R82 := leftGraspAnim
922 [-]: MOVE      R83 R0       ; R83 := R0
923 [-]: MOVE      R84 R1       ; R84 := R1
924 [-]: LOADK     R85 K22      ; R85 := 1
925 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
926 [-]: JMP       934          ; PC := 934
927 [-]: GETUPVAL  R80 U26      ; R80 := U26
928 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
929 [-]: GETGLOBAL R82 K121     ; R82 := rightGraspAnim
930 [-]: MOVE      R83 R0       ; R83 := R0
931 [-]: MOVE      R84 R1       ; R84 := R1
932 [-]: LOADK     R85 K22      ; R85 := 1
933 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
934 [-]: GETUPVAL  R80 U23      ; R80 := U23
935 [-]: GETUPVAL  R81 U23      ; R81 := U23
936 [-]: GETTABLE  R81 R81 K122 ; R81 := R81["originPos"]
937 [-]: ADD       R81 R81 R75  ; R81 := R81 + R75
938 [-]: SETTABLE  R80 K114 R81 ; R80["pos"] := R81
939 [-]: GETUPVAL  R80 U0       ; R80 := U0
940 [-]: GETUPVAL  R81 U1       ; R81 := U1
941 [-]: GETTABLE  R81 R81 K123 ; R81 := R81["EDIT_REGION_FRAMING"]
942 [-]: EQ        0 R80 R81    ; if R80 ~= R81 then PC := 976
943 [-]: JMP       976          ; PC := 976
944 [-]: GETUPVAL  R80 U31      ; R80 := U31
945 [-]: GETUPVAL  R81 U2       ; R81 := U2
946 [-]: GETTABLE  R81 R81 K124 ; R81 := R81["mFramingRegion"]
947 [-]: GETTABLE  R80 R80 R81  ; R80 := R80[R81]
948 [-]: TEST      R80 0        ; if not R80 then PC := 976
949 [-]: JMP       976          ; PC := 976
950 [-]: GETTABLE  R81 R80 K125 ; R81 := R80["zoomedFraming"]
951 [-]: GETTABLE  R81 R81 K45  ; R81 := R81["x"]
952 [-]: EQ        0 R81 R60    ; if R81 ~= R60 then PC := 964
953 [-]: JMP       964          ; PC := 964
954 [-]: GETTABLE  R81 R80 K125 ; R81 := R80["zoomedFraming"]
955 [-]: GETTABLE  R81 R81 K29  ; R81 := R81["y"]
956 [-]: EQ        0 R81 R61    ; if R81 ~= R61 then PC := 964
957 [-]: JMP       964          ; PC := 964
958 [-]: GETTABLE  R81 R80 K125 ; R81 := R80["zoomedFraming"]
959 [-]: GETTABLE  R81 R81 K5   ; R81 := R81["z"]
960 [-]: GETUPVAL  R82 U19      ; R82 := U19
961 [-]: GETTABLE  R82 R82 K102 ; R82 := R82["mTargetVal"]
962 [-]: EQ        1 R81 R82    ; if R81 == R82 then PC := 976
963 [-]: JMP       976          ; PC := 976
964 [-]: GETGLOBAL R81 K31      ; R81 := 0x221C9700
965 [-]: MOVE      R82 R60      ; R82 := R60
966 [-]: MOVE      R83 R61      ; R83 := R61
967 [-]: GETUPVAL  R84 U19      ; R84 := U19
968 [-]: GETTABLE  R84 R84 K102 ; R84 := R84["mTargetVal"]
969 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
970 [-]: SETTABLE  R80 K125 R81 ; R80["zoomedFraming"] := R81
971 [-]: GETUPVAL  R81 U4       ; R81 := U4
972 [-]: SELF      R81 R81 K126 ; R82 := R81; R81 := R81["0x2721E25D"]
973 [-]: MOVE      R83 R80      ; R83 := R80
974 [-]: GETTABLE  R84 R80 K125 ; R84 := R80["zoomedFraming"]
975 [-]: CALL      R81 4 1      ; R81(R82,R83,R84)
976 [-]: GETUPVAL  R81 U9       ; R81 := U9
977 [-]: CALL      R81 1 1      ; R81()
978 [-]: GETUPVAL  R81 U32      ; R81 := U32
979 [-]: SELF      R81 R81 K106 ; R82 := R81; R81 := R81["0xC4E503B0"]
980 [-]: CALL      R81 2 2      ; R81 := R81(R82)
981 [-]: LOADK     R82 K22      ; R82 := 1
982 [-]: GETGLOBAL R83 K83      ; R83 := _T
983 [-]: GETTABLE  R83 R83 K127 ; R83 := R83["HideSquadOverlay"]
984 [-]: EQ        1 R83 K19    ; if R83 == nil then PC := 991
985 [-]: JMP       991          ; PC := 991
986 [-]: GETGLOBAL R83 K83      ; R83 := _T
987 [-]: GETTABLE  R83 R83 K127 ; R83 := R83["HideSquadOverlay"]
988 [-]: LE        1 R83 K6     ; if R83 <= 0 then PC := 991
989 [-]: JMP       991          ; PC := 991
990 [-]: MOVE      R83 R0       ; R83 := R0
991 [-]: MOVE      R83 R1       ; R83 := R1
992 [-]: GETGLOBAL R84 K83      ; R84 := _T
993 [-]: GETTABLE  R84 R84 K128 ; R84 := R84["BackgroundVisible"]
994 [-]: TEST      R84 1        ; if R84 then PC := 1006
995 [-]: JMP       1006         ; PC := 1006
996 [-]: GETGLOBAL R84 K83      ; R84 := _T
997 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["HideMapRedux"]
998 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1004
999 [-]: JMP       1004         ; PC := 1004
1000 [-]: GETGLOBAL R84 K83      ; R84 := _T
1001 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["HideMapRedux"]
1002 [-]: LT        1 K6 R84     ; if 0 < R84 then PC := 1006
1003 [-]: JMP       1006         ; PC := 1006
1004 [-]: TEST      R83 1        ; if R83 then PC := 1008
1005 [-]: JMP       1008         ; PC := 1008
1006 [-]: LOADK     R82 K6       ; R82 := 0
1007 [-]: JMP       1023         ; PC := 1023
1008 [-]: GETUPVAL  R84 U33      ; R84 := U33
1009 [-]: GETTABLE  R84 R84 K130 ; R84 := R84["Node"]
1010 [-]: EQ        0 R84 K19    ; if R84 ~= nil then PC := 1016
1011 [-]: JMP       1016         ; PC := 1016
1012 [-]: GETGLOBAL R84 K83      ; R84 := _T
1013 [-]: GETTABLE  R84 R84 K131 ; R84 := R84["gPendingMission"]
1014 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1018
1015 [-]: JMP       1018         ; PC := 1018
1016 [-]: LOADK     R82 K115     ; R82 := 0.20000000298023
1017 [-]: JMP       1023         ; PC := 1023
1018 [-]: GETGLOBAL R84 K83      ; R84 := _T
1019 [-]: GETTABLE  R84 R84 K84  ; R84 := R84["MouseInWorldStateWindow"]
1020 [-]: TEST      R84 0        ; if not R84 then PC := 1023
1021 [-]: JMP       1023         ; PC := 1023
1022 [-]: LOADK     R82 K47      ; R82 := 0.10000000149012
1023 [-]: GETUPVAL  R84 U32      ; R84 := U32
1024 [-]: SELF      R84 R84 K96  ; R85 := R84; R84 := R84["0xDB349344"]
1025 [-]: MOVE      R86 R82      ; R86 := R82
1026 [-]: CALL      R84 3 1      ; R84(R85,R86)
1027 [-]: GETUPVAL  R84 U32      ; R84 := U32
1028 [-]: SELF      R84 R84 K89  ; R85 := R84; R84 := R84["0x8C7099E9"]
1029 [-]: MOVE      R86 R59      ; R86 := R59
1030 [-]: CALL      R84 3 1      ; R84(R85,R86)
1031 [-]: GETUPVAL  R84 U33      ; R84 := U33
1032 [-]: GETTABLE  R84 R84 K130 ; R84 := R84["Node"]
1033 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1039
1034 [-]: JMP       1039         ; PC := 1039
1035 [-]: GETUPVAL  R84 U34      ; R84 := U34
1036 [-]: GETUPVAL  R85 U33      ; R85 := U33
1037 [-]: GETTABLE  R85 R85 K130 ; R85 := R85["Node"]
1038 [-]: SETTABLE  R84 K130 R85 ; R84["Node"] := R85
1039 [-]: GETUPVAL  R84 U32      ; R84 := U32
1040 [-]: SELF      R84 R84 K106 ; R85 := R84; R84 := R84["0xC4E503B0"]
1041 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1042 [-]: EQ        1 R81 R84    ; if R81 == R84 then PC := 1057
1043 [-]: JMP       1057         ; PC := 1057
1044 [-]: GETGLOBAL R84 K1       ; R84 := 0x400E7765
1045 [-]: GETGLOBAL R85 K132     ; R85 := splineMaterial
1046 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1047 [-]: TEST      R84 1        ; if R84 then PC := 1057
1048 [-]: JMP       1057         ; PC := 1057
1049 [-]: GETGLOBAL R84 K132     ; R84 := splineMaterial
1050 [-]: SELF      R84 R84 K133 ; R85 := R84; R84 := R84["0x94FB2E1A"]
1051 [-]: GETUPVAL  R86 U35      ; R86 := U35
1052 [-]: GETTABLE  R86 R86 K134 ; R86 := R86["UNLIT_ATTEN"]
1053 [-]: GETUPVAL  R87 U32      ; R87 := U32
1054 [-]: SELF      R87 R87 K106 ; R88 := R87; R87 := R87["0xC4E503B0"]
1055 [-]: CALL      R87 2 0      ; R87,... := R87(R88)
1056 [-]: CALL      R84 0 1      ; R84(R85,...)
1057 [-]: GETUPVAL  R84 U36      ; R84 := U36
1058 [-]: SELF      R84 R84 K96  ; R85 := R84; R84 := R84["0xDB349344"]
1059 [-]: GETUPVAL  R86 U11      ; R86 := U11
1060 [-]: GETTABLE  R86 R86 K72  ; R86 := R86["0xF81722A2"]
1061 [-]: GETUPVAL  R87 U33      ; R87 := U33
1062 [-]: GETTABLE  R87 R87 K111 ; R87 := R87["Region"]
1063 [-]: EQ        0 R87 K19    ; if R87 ~= nil then PC := 1066
1064 [-]: JMP       1066         ; PC := 1066
1065 [-]: MOVE      R87 R0       ; R87 := R0
1066 [-]: MOVE      R87 R1       ; R87 := R1
1067 [-]: LOADK     R88 K22      ; R88 := 1
1068 [-]: LOADK     R89 K6       ; R89 := 0
1069 [-]: CALL      R86 4 0      ; R86,... := R86(R87,R88,R89)
1070 [-]: CALL      R84 0 1      ; R84(R85,...)
1071 [-]: GETUPVAL  R84 U36      ; R84 := U36
1072 [-]: SELF      R84 R84 K89  ; R85 := R84; R84 := R84["0x8C7099E9"]
1073 [-]: GETGLOBAL R86 K88      ; R86 := 0x4CDEF9FF
1074 [-]: CALL      R86 1 0      ; R86,... := R86()
1075 [-]: CALL      R84 0 1      ; R84(R85,...)
1076 [-]: GETUPVAL  R84 U33      ; R84 := U33
1077 [-]: GETTABLE  R84 R84 K111 ; R84 := R84["Region"]
1078 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1084
1079 [-]: JMP       1084         ; PC := 1084
1080 [-]: GETUPVAL  R84 U37      ; R84 := U37
1081 [-]: GETUPVAL  R85 U33      ; R85 := U33
1082 [-]: GETTABLE  R85 R85 K111 ; R85 := R85["Region"]
1083 [-]: SETTABLE  R84 K111 R85 ; R84["Region"] := R85
1084 [-]: MOVE      R84 R0       ; R84 := R0
1085 [-]: MOVE      R84 R38      ; R84 := R38
1086 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 5044
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Deco"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 55
  6 [-]: JMP       55           ; PC := 55
  7 [-]: LOADK     R0 K2        ; R0 := 120
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x58E5C2DB
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: MOD       R1 R1 R0     ; R1 := R1 % R0
 11 [-]: DIV       R1 R1 R0     ; R1 := R1 / R0
 12 [-]: GETGLOBAL R2 K4        ; R2 := math
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["pi"]
 14 [-]: MUL       R2 R2 K6     ; R2 := R2 * 2
 15 [-]: MUL       R2 R2 R1     ; R2 := R2 * R1
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["RegionIndex"]
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: ADD       R3 R3 K8     ; R3 := R3 + 0.050000000745058
 21 [-]: GETGLOBAL R4 K4        ; R4 := math
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xBB3F1476"]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: MUL       R4 R4 R3     ; R4 := R4 * R3
 26 [-]: GETGLOBAL R5 K4        ; R5 := math
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x96330A01"]
 28 [-]: MOVE      R6 R2        ; R6 := R2
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 33 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0xEC183DDC"]
 34 [-]: GETUPVAL  R8 U0        ; R8 := U0
 35 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["AnchorPosition"]
 36 [-]: GETGLOBAL R9 K13       ; R9 := 0x221C9700
 37 [-]: MOVE      R10 R4       ; R10 := R4
 38 [-]: MOVE      R11 R5       ; R11 := R5
 39 [-]: LOADK     R12 K14      ; R12 := 0
 40 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 41 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 42 [-]: CALL      R6 3 1       ; R6(R7,R8)
 43 [-]: GETUPVAL  R6 U0        ; R6 := U0
 44 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 45 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x5097FD8C"]
 46 [-]: GETGLOBAL R8 K16       ; R8 := 0x1E4F6281
 47 [-]: LOADK     R9 K17       ; R9 := 90
 48 [-]: GETUPVAL  R10 U2       ; R10 := U2
 49 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["0xBFE096C9"]
 50 [-]: MOVE      R11 R2       ; R11 := R2
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: LOADK     R11 K19      ; R11 := -90
 53 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 54 [-]: CALL      R6 0 1       ; R6(R7,...)
 55 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 5058
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Region"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 169
  6 [-]: JMP       169          ; PC := 169
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETGLOBAL R1 K2        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 169
 12 [-]: JMP       169          ; PC := 169
 13 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Splines"]
 16 [-]: GETGLOBAL R2 K2        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SplineIndex"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 169
 22 [-]: JMP       169          ; PC := 169
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Splines"]
 25 [-]: GETGLOBAL R1 K2        ; R1 := _T
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 27 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SplineIndex"]
 28 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 29 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0xAC71FD5A"]
 30 [-]: GETGLOBAL R2 K2        ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 32 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Progress"]
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: GETGLOBAL R1 K8        ; R1 := 0xB09F286F
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 37 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["pos"]
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 40 [-]: LT        0 R1 K10     ; if R1 >= 0.0010000000474975 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x2721E25D"]
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Region"]
 47 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 48 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["x"]
 49 [-]: MUL       R5 R5 K14    ; R5 := R5 * 0.041000001132488
 50 [-]: ADD       R5 K15 R5    ; R5 := 0.5 + R5
 51 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["y"]
 52 [-]: ADD       R6 R6 K17    ; R6 := R6 + 0.029999999329448
 53 [-]: MUL       R6 R6 K18    ; R6 := R6 * 0.043000001460314
 54 [-]: SUB       R6 K15 R6    ; R6 := 0.5 - R6
 55 [-]: GETUPVAL  R7 U2        ; R7 := U2
 56 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["MAX_ZOOM"]
 57 [-]: SUB       R7 R7 K20    ; R7 := R7 - 0.30000001192093
 58 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["z"]
 59 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 60 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 61 [-]: CALL      R1 0 1       ; R1(R2,...)
 62 [-]: GETUPVAL  R1 U3        ; R1 := U3
 63 [-]: GETUPVAL  R2 U0        ; R2 := U0
 64 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 65 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETUPVAL  R1 U4        ; R1 := U4
 68 [-]: GETUPVAL  R2 U3        ; R2 := U3
 69 [-]: GETUPVAL  R3 U3        ; R3 := U3
 70 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["zoomedFraming"]
 71 [-]: CALL      R1 3 4       ; R1,R2,R3 := R1(R2,R3)
 72 [-]: GETUPVAL  R4 U5        ; R4 := U5
 73 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 74 [-]: LOADK     R6 K13       ; R6 := "x"
 75 [-]: MOVE      R7 R1        ; R7 := R1
 76 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 77 [-]: GETUPVAL  R4 U5        ; R4 := U5
 78 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 79 [-]: LOADK     R6 K16       ; R6 := "y"
 80 [-]: MOVE      R7 R2        ; R7 := R2
 81 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 82 [-]: GETUPVAL  R4 U0        ; R4 := U0
 83 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Region"]
 84 [-]: SETTABLE  R4 K9 R0     ; R4["pos"] := R0
 85 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 86 [-]: GETUPVAL  R5 U0        ; R5 := U0
 87 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
 88 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["pos"]
 89 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["x"]
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
 92 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["pos"]
 93 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["y"]
 94 [-]: GETUPVAL  R7 U0        ; R7 := U0
 95 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["Region"]
 96 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["pos"]
 97 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["z"]
 98 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 99 [-]: GETUPVAL  R5 U6        ; R5 := U6
100 [-]: MOVE      R6 R4        ; R6 := R4
101 [-]: CALL      R5 2 2       ; R5 := R5(R6)
102 [-]: MOVE      R4 R5        ; R4 := R5
103 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
104 [-]: GETUPVAL  R6 U0        ; R6 := U0
105 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
106 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["instance"]
107 [-]: CALL      R5 2 2       ; R5 := R5(R6)
108 [-]: TEST      R5 1         ; if R5 then PC := 133
109 [-]: JMP       133          ; PC := 133
110 [-]: GETUPVAL  R5 U0        ; R5 := U0
111 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
112 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["instance"]
113 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0xEC183DDC"]
114 [-]: MOVE      R7 R4        ; R7 := R4
115 [-]: CALL      R5 3 1       ; R5(R6,R7)
116 [-]: GETUPVAL  R5 U7        ; R5 := U7
117 [-]: GETUPVAL  R6 U0        ; R6 := U0
118 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["SubLabelIndex"]
119 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
120 [-]: GETGLOBAL R6 K12       ; R6 := 0x221C9700
121 [-]: LOADK     R7 K27       ; R7 := 0
122 [-]: GETUPVAL  R8 U0        ; R8 := U0
123 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Region"]
124 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["scale"]
125 [-]: MUL       R8 R8 K29    ; R8 := R8 * 1.0499999523163
126 [-]: GETUPVAL  R9 U8        ; R9 := U8
127 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["PLANET_UNIT_MULTIPLIER"]
128 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
129 [-]: LOADK     R9 K31       ; R9 := 9.9999997473788e-05
130 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
131 [-]: ADD       R6 R4 R6     ; R6 := R4 + R6
132 [-]: SETTABLE  R5 K9 R6     ; R5["pos"] := R6
133 [-]: GETGLOBAL R5 K32       ; R5 := 0xECFDD17
134 [-]: GETUPVAL  R6 U0        ; R6 := U0
135 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["Sectors"]
136 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
137 [-]: JMP       155          ; PC := 155
138 [-]: GETUPVAL  R10 U0       ; R10 := U0
139 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
140 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
141 [-]: JMP       155          ; PC := 155
142 [-]: GETUPVAL  R10 U0       ; R10 := U0
143 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
144 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
145 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
146 [-]: JMP       155          ; PC := 155
147 [-]: GETGLOBAL R10 K36      ; R10 := 0x96BEA6B
148 [-]: GETUPVAL  R11 U0       ; R11 := U0
149 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["Nodes"]
150 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
151 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["position"]
152 [-]: MOVE      R12 R0       ; R12 := R0
153 [-]: GETTABLE  R13 R9 K38   ; R13 := R9["decoOffset"]
154 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
155 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 138; R7 := R8 end
156 [-]: JMP       138          ; PC := 138
157 [-]: LOADK     R10 K39      ; R10 := 1
158 [-]: GETUPVAL  R11 U9       ; R11 := U9
159 [-]: LEN       R11 R11      ; R11 := # R11
160 [-]: LOADK     R12 K39      ; R12 := 1
161 [-]: FORPREP   R10 168      ; R10 -= R12; PC := 168
162 [-]: GETUPVAL  R14 U10      ; R14 := U10
163 [-]: GETUPVAL  R15 U11      ; R15 := U11
164 [-]: GETUPVAL  R16 U9       ; R16 := U9
165 [-]: GETTABLE  R16 R16 R13  ; R16 := R16[R13]
166 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
167 [-]: CALL      R14 2 1      ; R14(R15)
168 [-]: FORLOOP   R10 162      ; R10 += R12; if R10 <= R11 then begin PC := 162; R13 := R10 end
169 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 5096
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mCurVal"]
  9 [-]: LT        0 R0 K2      ; if R0 >= -2 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K4        ; R3 := "OnRegionZoomOut"
 14 [-]: LOADK     R4 K5        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: CALL      R1 1 1       ; R1()
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: LOADK     R1 K6        ; R1 := 1
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: LEN       R2 R2        ; R2 := # R2
 22 [-]: LOADK     R3 K6        ; R3 := 1
 23 [-]: FORPREP   R1 42        ; R1 -= R3; PC := 42
 24 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 25 [-]: GETUPVAL  R6 U4        ; R6 := U4
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: TEST      R5 1         ; if R5 then PC := 42
 28 [-]: JMP       42           ; PC := 42
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETUPVAL  R6 U3        ; R6 := U3
 31 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 32 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 42
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x458F27A9"]
 36 [-]: LOADK     R7 K7        ; R7 := "OnRegionZoomIn"
 37 [-]: GETGLOBAL R8 K8        ; R8 := 0x9FAED6BC
 38 [-]: MOVE      R9 R4        ; R9 := R4
 39 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 40 [-]: CALL      R5 0 1       ; R5(R6,...)
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: FORLOOP   R1 24        ; R1 += R3; if R1 <= R2 then begin PC := 24; R4 := R1 end
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x458F27A9"]
 45 [-]: LOADK     R7 K4        ; R7 := "OnRegionZoomOut"
 46 [-]: LOADK     R8 K5        ; R8 := ""
 47 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 48 [-]: GETUPVAL  R5 U2        ; R5 := U2
 49 [-]: CALL      R5 1 1       ; R5()
 50 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5123
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := 0
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xBFE096C9"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xABA21F2F"]
  6 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["x"]
  7 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["y"]
  8 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["x"]
  9 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["y"]
 10 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 11 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 12 [-]: MOVE      R2 R3        ; R2 := R3
 13 [-]: SUB       R2 R2 K5     ; R2 := R2 - 90
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5130
; #Upvalues:       40
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  82

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["forceUpdate3dElements"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SETTABLE  R1 K0 K1     ; R1["forceUpdate3dElements"] := "0x0"
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x221C9700
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCurVal"]
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: EQ        0 R3 R2      ; if R3 ~= R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: MOVE      R2 R2        ; R2 := R2
 18 [-]: GETUPVAL  R4 U3        ; R4 := U3
 19 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["x"]
 20 [-]: GETUPVAL  R5 U4        ; R5 := U4
 21 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0xC4E503B0"]
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: GETUPVAL  R4 U3        ; R4 := U3
 26 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["y"]
 27 [-]: GETUPVAL  R5 U5        ; R5 := U5
 28 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0xC4E503B0"]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 39
 31 [-]: JMP       39           ; PC := 39
 32 [-]: GETUPVAL  R4 U6        ; R4 := U6
 33 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mPrevHoverNode"]
 34 [-]: GETUPVAL  R5 U6        ; R5 := U6
 35 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["Node"]
 36 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R4 R0        ; R4 := R0
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: GETUPVAL  R5 U3        ; R5 := U3
 41 [-]: GETUPVAL  R6 U4        ; R6 := U4
 42 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xC4E503B0"]
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: SETTABLE  R5 K4 R6     ; R5["x"] := R6
 45 [-]: GETUPVAL  R5 U3        ; R5 := U3
 46 [-]: GETUPVAL  R6 U5        ; R6 := U5
 47 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xC4E503B0"]
 48 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 49 [-]: SETTABLE  R5 K6 R6     ; R5["y"] := R6
 50 [-]: GETUPVAL  R5 U6        ; R5 := U6
 51 [-]: GETUPVAL  R6 U6        ; R6 := U6
 52 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Node"]
 53 [-]: SETTABLE  R5 K7 R6     ; R5["mPrevHoverNode"] := R6
 54 [-]: GETUPVAL  R5 U7        ; R5 := U7
 55 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["Alpha"]
 56 [-]: GETUPVAL  R6 U8        ; R6 := U8
 57 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xC4E503B0"]
 58 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 59 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R5 R0        ; R5 := R0
 62 [-]: MOVE      R5 R1        ; R5 := R1
 63 [-]: GETUPVAL  R6 U7        ; R6 := U7
 64 [-]: GETUPVAL  R7 U8        ; R7 := U8
 65 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xC4E503B0"]
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: SETTABLE  R6 K9 R7     ; R6["Alpha"] := R7
 68 [-]: GETUPVAL  R6 U6        ; R6 := U6
 69 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["Region"]
 70 [-]: EQ        0 R6 K11     ; if R6 ~= nil then PC := 82
 71 [-]: JMP       82           ; PC := 82
 72 [-]: GETUPVAL  R7 U9        ; R7 := U9
 73 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["Region"]
 74 [-]: EQ        1 R7 K11     ; if R7 == nil then PC := 82
 75 [-]: JMP       82           ; PC := 82
 76 [-]: GETUPVAL  R7 U9        ; R7 := U9
 77 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["Alpha"]
 78 [-]: LT        0 K12 R7     ; if 0 >= R7 then PC := 82
 79 [-]: JMP       82           ; PC := 82
 80 [-]: GETUPVAL  R7 U9        ; R7 := U9
 81 [-]: GETTABLE  R6 R7 K10    ; R6 := R7["Region"]
 82 [-]: LOADNIL   R7 R7        ; R7 := nil
 83 [-]: EQ        1 R6 K11     ; if R6 == nil then PC := 97
 84 [-]: JMP       97           ; PC := 97
 85 [-]: LOADK     R8 K13       ; R8 := 1
 86 [-]: GETUPVAL  R9 U10       ; R9 := U10
 87 [-]: LEN       R9 R9        ; R9 := # R9
 88 [-]: LOADK     R10 K13      ; R10 := 1
 89 [-]: FORPREP   R8 96        ; R8 -= R10; PC := 96
 90 [-]: GETUPVAL  R12 U10      ; R12 := U10
 91 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 92 [-]: EQ        0 R6 R12     ; if R6 ~= R12 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: SUB       R7 R11 K13   ; R7 := R11 - 1
 95 [-]: JMP       97           ; PC := 97
 96 [-]: FORLOOP   R8 90        ; R8 += R10; if R8 <= R9 then begin PC := 90; R11 := R8 end
 97 [-]: GETUPVAL  R12 U9       ; R12 := U9
 98 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Alpha"]
 99 [-]: GETUPVAL  R13 U11      ; R13 := U11
100 [-]: SELF      R13 R13 K5   ; R14 := R13; R13 := R13["0xC4E503B0"]
101 [-]: CALL      R13 2 2      ; R13 := R13(R14)
102 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R12 R0       ; R12 := R0
105 [-]: MOVE      R12 R1       ; R12 := R1
106 [-]: GETUPVAL  R13 U9       ; R13 := U9
107 [-]: GETUPVAL  R14 U11      ; R14 := U11
108 [-]: SELF      R14 R14 K5   ; R15 := R14; R14 := R14["0xC4E503B0"]
109 [-]: CALL      R14 2 2      ; R14 := R14(R15)
110 [-]: SETTABLE  R13 K9 R14   ; R13["Alpha"] := R14
111 [-]: GETUPVAL  R13 U12      ; R13 := U12
112 [-]: GETUPVAL  R14 U13      ; R14 := U13
113 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["READ_ONLY"]
114 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 118
115 [-]: JMP       118          ; PC := 118
116 [-]: MOVE      R3 R1        ; R3 := R1
117 [-]: MOVE      R4 R1        ; R4 := R1
118 [-]: LOADNIL   R13 R14      ; R13 := R14 := nil
119 [-]: GETGLOBAL R15 K2       ; R15 := 0x221C9700
120 [-]: CALL      R15 1 2      ; R15 := R15()
121 [-]: GETGLOBAL R16 K2       ; R16 := 0x221C9700
122 [-]: CALL      R16 1 2      ; R16 := R16()
123 [-]: GETGLOBAL R17 K15      ; R17 := 0x1E4F6281
124 [-]: CALL      R17 1 2      ; R17 := R17()
125 [-]: GETGLOBAL R18 K2       ; R18 := 0x221C9700
126 [-]: CALL      R18 1 2      ; R18 := R18()
127 [-]: TEST      R4 1         ; if R4 then PC := 137
128 [-]: JMP       137          ; PC := 137
129 [-]: TEST      R3 1         ; if R3 then PC := 137
130 [-]: JMP       137          ; PC := 137
131 [-]: TEST      R5 1         ; if R5 then PC := 137
132 [-]: JMP       137          ; PC := 137
133 [-]: TEST      R12 1        ; if R12 then PC := 137
134 [-]: JMP       137          ; PC := 137
135 [-]: TEST      R0 0         ; if not R0 then PC := 884
136 [-]: JMP       884          ; PC := 884
137 [-]: LOADK     R19 K16      ; R19 := 100
138 [-]: LOADNIL   R20 R22      ; R20 := R21 := R22 := nil
139 [-]: TEST      R3 0         ; if not R3 then PC := 210
140 [-]: JMP       210          ; PC := 210
141 [-]: LOADK     R23 K17      ; R23 := 0.20000000298023
142 [-]: GETGLOBAL R24 K18      ; R24 := 0x6374FD98
143 [-]: MOVE      R25 R2       ; R25 := R2
144 [-]: GETUPVAL  R26 U14      ; R26 := U14
145 [-]: GETTABLE  R26 R26 K19  ; R26 := R26["LAYER_1_RANGE"]
146 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["minValue"]
147 [-]: GETUPVAL  R27 U14      ; R27 := U14
148 [-]: GETTABLE  R27 R27 K19  ; R27 := R27["LAYER_1_RANGE"]
149 [-]: GETTABLE  R27 R27 K21  ; R27 := R27["maxValue"]
150 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
151 [-]: MOVE      R14 R24      ; R14 := R24
152 [-]: GETUPVAL  R24 U14      ; R24 := U14
153 [-]: GETTABLE  R24 R24 K19  ; R24 := R24["LAYER_1_RANGE"]
154 [-]: SELF      R24 R24 K22  ; R25 := R24; R24 := R24["0x3B43F25"]
155 [-]: MOVE      R26 R14      ; R26 := R14
156 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
157 [-]: MOVE      R14 R24      ; R14 := R24
158 [-]: LT        0 R14 R23    ; if R14 >= R23 then PC := 167
159 [-]: JMP       167          ; PC := 167
160 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
161 [-]: LOADK     R25 K12      ; R25 := 0
162 [-]: LOADK     R26 K24      ; R26 := 80
163 [-]: DIV       R27 R14 R23  ; R27 := R14 / R23
164 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
165 [-]: MOVE      R19 R24      ; R19 := R24
166 [-]: JMP       180          ; PC := 180
167 [-]: SUB       R24 K13 R23  ; R24 := 1 - R23
168 [-]: LT        0 R24 R14    ; if R24 >= R14 then PC := 179
169 [-]: JMP       179          ; PC := 179
170 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
171 [-]: LOADK     R25 K24      ; R25 := 80
172 [-]: LOADK     R26 K12      ; R26 := 0
173 [-]: SUB       R27 K13 R23  ; R27 := 1 - R23
174 [-]: SUB       R27 R14 R27  ; R27 := R14 - R27
175 [-]: DIV       R27 R27 R23  ; R27 := R27 / R23
176 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
177 [-]: MOVE      R19 R24      ; R19 := R24
178 [-]: JMP       180          ; PC := 180
179 [-]: LOADK     R19 K24      ; R19 := 80
180 [-]: GETGLOBAL R24 K18      ; R24 := 0x6374FD98
181 [-]: MOVE      R25 R2       ; R25 := R2
182 [-]: GETUPVAL  R26 U14      ; R26 := U14
183 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["PLANET_VIS_RANGE"]
184 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["minValue"]
185 [-]: GETUPVAL  R27 U14      ; R27 := U14
186 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["PLANET_VIS_RANGE"]
187 [-]: GETTABLE  R27 R27 K21  ; R27 := R27["maxValue"]
188 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
189 [-]: MOVE      R14 R24      ; R14 := R24
190 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
191 [-]: LOADK     R25 K12      ; R25 := 0
192 [-]: LOADK     R26 K24      ; R26 := 80
193 [-]: GETUPVAL  R27 U14      ; R27 := U14
194 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["PLANET_VIS_RANGE"]
195 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27["0x3B43F25"]
196 [-]: MOVE      R29 R14      ; R29 := R14
197 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
198 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
199 [-]: MOVE      R20 R24      ; R20 := R24
200 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
201 [-]: LOADK     R25 K26      ; R25 := 50
202 [-]: LOADK     R26 K24      ; R26 := 80
203 [-]: GETUPVAL  R27 U14      ; R27 := U14
204 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["PLANET_VIS_RANGE"]
205 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27["0x3B43F25"]
206 [-]: MOVE      R29 R14      ; R29 := R14
207 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
208 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
209 [-]: MOVE      R21 R24      ; R21 := R24
210 [-]: TEST      R4 1         ; if R4 then PC := 216
211 [-]: JMP       216          ; PC := 216
212 [-]: TEST      R3 1         ; if R3 then PC := 216
213 [-]: JMP       216          ; PC := 216
214 [-]: TEST      R0 0         ; if not R0 then PC := 285
215 [-]: JMP       285          ; PC := 285
216 [-]: LOADK     R24 K13      ; R24 := 1
217 [-]: GETUPVAL  R25 U15      ; R25 := U15
218 [-]: LEN       R25 R25      ; R25 := # R25
219 [-]: LOADK     R26 K13      ; R26 := 1
220 [-]: FORPREP   R24 284      ; R24 -= R26; PC := 284
221 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
222 [-]: SELF      R28 R28 K28  ; R29 := R28; R28 := R28["0x3688C0F4"]
223 [-]: MOVE      R30 R15      ; R30 := R15
224 [-]: GETUPVAL  R31 U15      ; R31 := U15
225 [-]: GETTABLE  R31 R31 R27  ; R31 := R31[R27]
226 [-]: GETTABLE  R31 R31 K29  ; R31 := R31["pos"]
227 [-]: MOVE      R32 R1       ; R32 := R1
228 [-]: MOVE      R33 R0       ; R33 := R0
229 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
230 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
231 [-]: SELF      R28 R28 K30  ; R29 := R28; R28 := R28["0x4717530F"]
232 [-]: GETUPVAL  R30 U15      ; R30 := U15
233 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
234 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
235 [-]: GETTABLE  R31 R15 K4   ; R31 := R15["x"]
236 [-]: GETTABLE  R32 R15 K6   ; R32 := R15["y"]
237 [-]: SUB       R32 R32 K32  ; R32 := R32 - 10
238 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
239 [-]: TEST      R3 0         ; if not R3 then PC := 284
240 [-]: JMP       284          ; PC := 284
241 [-]: GETUPVAL  R28 U15      ; R28 := U15
242 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
243 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["layer"]
244 [-]: TEST      R28 0        ; if not R28 then PC := 284
245 [-]: JMP       284          ; PC := 284
246 [-]: LOADK     R13 K16      ; R13 := 100
247 [-]: GETUPVAL  R28 U15      ; R28 := U15
248 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
249 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["layer"]
250 [-]: EQ        0 R28 K13    ; if R28 ~= 1 then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: MOVE      R13 R19      ; R13 := R19
253 [-]: JMP       276          ; PC := 276
254 [-]: GETUPVAL  R28 U15      ; R28 := U15
255 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
256 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["layer"]
257 [-]: EQ        0 R28 K34    ; if R28 ~= 2 then PC := 276
258 [-]: JMP       276          ; PC := 276
259 [-]: MOVE      R13 R20      ; R13 := R20
260 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
261 [-]: SELF      R28 R28 K35  ; R29 := R28; R28 := R28["0x445651FB"]
262 [-]: GETUPVAL  R30 U15      ; R30 := U15
263 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
264 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
265 [-]: LOADK     R31 K36      ; R31 := "_xscale"
266 [-]: MOVE      R32 R21      ; R32 := R21
267 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
268 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
269 [-]: SELF      R28 R28 K35  ; R29 := R28; R28 := R28["0x445651FB"]
270 [-]: GETUPVAL  R30 U15      ; R30 := U15
271 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
272 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
273 [-]: LOADK     R31 K37      ; R31 := "_yscale"
274 [-]: MOVE      R32 R21      ; R32 := R21
275 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
276 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
277 [-]: SELF      R28 R28 K35  ; R29 := R28; R28 := R28["0x445651FB"]
278 [-]: GETUPVAL  R30 U15      ; R30 := U15
279 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
280 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
281 [-]: LOADK     R31 K38      ; R31 := "_alpha"
282 [-]: MOVE      R32 R13      ; R32 := R13
283 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
284 [-]: FORLOOP   R24 221      ; R24 += R26; if R24 <= R25 then begin PC := 221; R27 := R24 end
285 [-]: GETGLOBAL R28 K18      ; R28 := 0x6374FD98
286 [-]: MOVE      R29 R2       ; R29 := R2
287 [-]: GETUPVAL  R30 U14      ; R30 := U14
288 [-]: GETTABLE  R30 R30 K39  ; R30 := R30["LAYER_2_RANGE"]
289 [-]: GETTABLE  R30 R30 K20  ; R30 := R30["minValue"]
290 [-]: GETUPVAL  R31 U14      ; R31 := U14
291 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["LAYER_2_RANGE"]
292 [-]: GETTABLE  R31 R31 K21  ; R31 := R31["maxValue"]
293 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
294 [-]: MOVE      R14 R28      ; R14 := R28
295 [-]: GETUPVAL  R28 U16      ; R28 := U16
296 [-]: GETGLOBAL R29 K23      ; R29 := 0x93034B55
297 [-]: LOADK     R30 K12      ; R30 := 0
298 [-]: LOADK     R31 K16      ; R31 := 100
299 [-]: GETUPVAL  R32 U14      ; R32 := U14
300 [-]: GETTABLE  R32 R32 K39  ; R32 := R32["LAYER_2_RANGE"]
301 [-]: SELF      R32 R32 K22  ; R33 := R32; R32 := R32["0x3B43F25"]
302 [-]: MOVE      R34 R14      ; R34 := R14
303 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
304 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
305 [-]: GETUPVAL  R30 U17      ; R30 := U17
306 [-]: LT        0 R30 R28    ; if R30 >= R28 then PC := 320
307 [-]: JMP       320          ; PC := 320
308 [-]: GETUPVAL  R30 U17      ; R30 := U17
309 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 320
310 [-]: JMP       320          ; PC := 320
311 [-]: GETUPVAL  R30 U18      ; R30 := U18
312 [-]: CALL      R30 1 1      ; R30()
313 [-]: GETGLOBAL R30 K27      ; R30 := mMovie
314 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
315 [-]: LOADK     R32 K41      ; R32 := "Nodes"
316 [-]: LOADK     R33 K42      ; R33 := "noMenuSelection"
317 [-]: MOVE      R34 R1       ; R34 := R1
318 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
319 [-]: JMP       332          ; PC := 332
320 [-]: GETUPVAL  R30 U17      ; R30 := U17
321 [-]: LE        0 R28 R30    ; if R28 > R30 then PC := 332
322 [-]: JMP       332          ; PC := 332
323 [-]: GETUPVAL  R30 U17      ; R30 := U17
324 [-]: LT        0 R30 R29    ; if R30 >= R29 then PC := 332
325 [-]: JMP       332          ; PC := 332
326 [-]: GETGLOBAL R30 K27      ; R30 := mMovie
327 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
328 [-]: LOADK     R32 K41      ; R32 := "Nodes"
329 [-]: LOADK     R33 K42      ; R33 := "noMenuSelection"
330 [-]: MOVE      R34 R0       ; R34 := R0
331 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
332 [-]: MOVE      R29 R16      ; R29 := R16
333 [-]: GETUPVAL  R30 U14      ; R30 := U14
334 [-]: GETTABLE  R30 R30 K39  ; R30 := R30["LAYER_2_RANGE"]
335 [-]: SELF      R30 R30 K22  ; R31 := R30; R30 := R30["0x3B43F25"]
336 [-]: MOVE      R32 R14      ; R32 := R14
337 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
338 [-]: GETGLOBAL R31 K18      ; R31 := 0x6374FD98
339 [-]: MOVE      R32 R2       ; R32 := R2
340 [-]: GETUPVAL  R33 U14      ; R33 := U14
341 [-]: GETTABLE  R33 R33 K43  ; R33 := R33["SHORTCUT_RANGE"]
342 [-]: GETTABLE  R33 R33 K20  ; R33 := R33["minValue"]
343 [-]: GETUPVAL  R34 U14      ; R34 := U14
344 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["SHORTCUT_RANGE"]
345 [-]: GETTABLE  R34 R34 K21  ; R34 := R34["maxValue"]
346 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
347 [-]: MOVE      R14 R31      ; R14 := R31
348 [-]: GETGLOBAL R31 K23      ; R31 := 0x93034B55
349 [-]: LOADK     R32 K12      ; R32 := 0
350 [-]: LOADK     R33 K16      ; R33 := 100
351 [-]: GETUPVAL  R34 U14      ; R34 := U14
352 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["SHORTCUT_RANGE"]
353 [-]: SELF      R34 R34 K22  ; R35 := R34; R34 := R34["0x3B43F25"]
354 [-]: MOVE      R36 R14      ; R36 := R14
355 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
356 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
357 [-]: MOVE      R22 R31      ; R22 := R31
358 [-]: GETUPVAL  R31 U12      ; R31 := U12
359 [-]: GETUPVAL  R32 U13      ; R32 := U13
360 [-]: GETTABLE  R32 R32 K44  ; R32 := R32["EDIT_NODES"]
361 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 373
362 [-]: JMP       373          ; PC := 373
363 [-]: GETUPVAL  R31 U12      ; R31 := U12
364 [-]: GETUPVAL  R32 U13      ; R32 := U13
365 [-]: GETTABLE  R32 R32 K45  ; R32 := R32["EDIT_EDGES"]
366 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 373
367 [-]: JMP       373          ; PC := 373
368 [-]: GETUPVAL  R31 U12      ; R31 := U12
369 [-]: GETUPVAL  R32 U13      ; R32 := U13
370 [-]: GETTABLE  R32 R32 K46  ; R32 := R32["EDIT_NODE_DECOS"]
371 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 375
372 [-]: JMP       375          ; PC := 375
373 [-]: LOADK     R31 K16      ; R31 := 100
374 [-]: MOVE      R31 R16      ; R31 := R16
375 [-]: LOADNIL   R31 R35      ; R31 := R32 := R33 := R34 := R35 := nil
376 [-]: GETUPVAL  R36 U16      ; R36 := U16
377 [-]: LT        1 K12 R36    ; if 0 < R36 then PC := 390
378 [-]: JMP       390          ; PC := 390
379 [-]: GETUPVAL  R36 U16      ; R36 := U16
380 [-]: LT        1 K12 R36    ; if 0 < R36 then PC := 383
381 [-]: JMP       383          ; PC := 383
382 [-]: MOVE      R36 R0       ; R36 := R0
383 [-]: MOVE      R36 R1       ; R36 := R1
384 [-]: LT        1 K12 R28    ; if 0 < R28 then PC := 387
385 [-]: JMP       387          ; PC := 387
386 [-]: MOVE      R37 R0       ; R37 := R0
387 [-]: MOVE      R37 R1       ; R37 := R1
388 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 390
389 [-]: JMP       390          ; PC := 390
390 [-]: LOADK     R36 K13      ; R36 := 1
391 [-]: GETUPVAL  R37 U19      ; R37 := U19
392 [-]: LEN       R37 R37      ; R37 := # R37
393 [-]: LOADK     R38 K13      ; R38 := 1
394 [-]: FORPREP   R36 680      ; R36 -= R38; PC := 680
395 [-]: GETGLOBAL R40 K47      ; R40 := 0x1BF588C6
396 [-]: CALL      R40 1 1      ; R40()
397 [-]: GETUPVAL  R40 U19      ; R40 := U19
398 [-]: GETTABLE  R40 R40 R39  ; R40 := R40[R39]
399 [-]: GETTABLE  R41 R40 K48  ; R41 := R40["radialSector"]
400 [-]: TEST      R4 1         ; if R4 then PC := 406
401 [-]: JMP       406          ; PC := 406
402 [-]: TEST      R3 1         ; if R3 then PC := 406
403 [-]: JMP       406          ; PC := 406
404 [-]: TEST      R0 0         ; if not R0 then PC := 570
405 [-]: JMP       570          ; PC := 570
406 [-]: GETTABLE  R32 R40 K49  ; R32 := R40["position"]
407 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
408 [-]: SELF      R42 R42 K28  ; R43 := R42; R42 := R42["0x3688C0F4"]
409 [-]: MOVE      R44 R15      ; R44 := R15
410 [-]: MOVE      R45 R32      ; R45 := R32
411 [-]: MOVE      R46 R1       ; R46 := R1
412 [-]: GETUPVAL  R47 U20      ; R47 := U20
413 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
414 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
415 [-]: SELF      R42 R42 K30  ; R43 := R42; R42 := R42["0x4717530F"]
416 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
417 [-]: GETTABLE  R45 R15 K4   ; R45 := R15["x"]
418 [-]: GETTABLE  R46 R15 K6   ; R46 := R15["y"]
419 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
420 [-]: GETGLOBAL R42 K23      ; R42 := 0x93034B55
421 [-]: LOADK     R43 K50      ; R43 := 20
422 [-]: LOADK     R44 K26      ; R44 := 50
423 [-]: MOVE      R45 R30      ; R45 := R30
424 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
425 [-]: MOVE      R31 R42      ; R31 := R42
426 [-]: GETTABLE  R42 R40 K51  ; R42 := R40["isSurfaceNode"]
427 [-]: TEST      R42 0        ; if not R42 then PC := 539
428 [-]: JMP       539          ; PC := 539
429 [-]: LOADK     R33 K16      ; R33 := 100
430 [-]: GETTABLE  R34 R32 K52  ; R34 := R32["z"]
431 [-]: MUL       R34 R34 K32  ; R34 := R34 * 10
432 [-]: LE        0 K12 R34    ; if 0 > R34 then PC := 449
433 [-]: JMP       449          ; PC := 449
434 [-]: GETGLOBAL R42 K23      ; R42 := 0x93034B55
435 [-]: LOADK     R43 K53      ; R43 := 75
436 [-]: LOADK     R44 K26      ; R44 := 50
437 [-]: GETGLOBAL R45 K18      ; R45 := 0x6374FD98
438 [-]: GETGLOBAL R46 K54      ; R46 := math
439 [-]: GETTABLE  R46 R46 K55  ; R46 := R46["0xD6F2D811"]
440 [-]: MOVE      R47 R34      ; R47 := R34
441 [-]: LOADK     R48 K56      ; R48 := 3
442 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
443 [-]: LOADK     R47 K12      ; R47 := 0
444 [-]: LOADK     R48 K13      ; R48 := 1
445 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
446 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
447 [-]: MOVE      R33 R42      ; R33 := R42
448 [-]: JMP       466          ; PC := 466
449 [-]: GETGLOBAL R42 K23      ; R42 := 0x93034B55
450 [-]: LOADK     R43 K53      ; R43 := 75
451 [-]: LOADK     R44 K16      ; R44 := 100
452 [-]: GETGLOBAL R45 K18      ; R45 := 0x6374FD98
453 [-]: GETGLOBAL R46 K54      ; R46 := math
454 [-]: GETTABLE  R46 R46 K55  ; R46 := R46["0xD6F2D811"]
455 [-]: GETGLOBAL R47 K54      ; R47 := math
456 [-]: GETTABLE  R47 R47 K57  ; R47 := R47["0xF93F7CC8"]
457 [-]: MOVE      R48 R34      ; R48 := R34
458 [-]: CALL      R47 2 2      ; R47 := R47(R48)
459 [-]: LOADK     R48 K56      ; R48 := 3
460 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
461 [-]: LOADK     R47 K12      ; R47 := 0
462 [-]: LOADK     R48 K13      ; R48 := 1
463 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
464 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
465 [-]: MOVE      R33 R42      ; R33 := R42
466 [-]: GETUPVAL  R42 U21      ; R42 := U21
467 [-]: GETTABLE  R43 R41 K58  ; R43 := R41["region"]
468 [-]: ADD       R43 R43 K13  ; R43 := R43 + 1
469 [-]: GETTABLE  R35 R42 R43  ; R35 := R42[R43]
470 [-]: GETGLOBAL R42 K59      ; R42 := 0x400E7765
471 [-]: MOVE      R43 R35      ; R43 := R35
472 [-]: CALL      R42 2 2      ; R42 := R42(R43)
473 [-]: TEST      R42 1        ; if R42 then PC := 499
474 [-]: JMP       499          ; PC := 499
475 [-]: SELF      R42 R35 K60  ; R43 := R35; R42 := R35["0x8EEB099D"]
476 [-]: MOVE      R44 R16      ; R44 := R16
477 [-]: CALL      R42 3 1      ; R42(R43,R44)
478 [-]: GETGLOBAL R42 K61      ; R42 := 0x518098BD
479 [-]: MOVE      R43 R18      ; R43 := R18
480 [-]: MOVE      R44 R32      ; R44 := R32
481 [-]: MOVE      R45 R16      ; R45 := R16
482 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
483 [-]: GETGLOBAL R42 K62      ; R42 := 0x20F748B4
484 [-]: MOVE      R43 R17      ; R43 := R17
485 [-]: MOVE      R44 R1       ; R44 := R1
486 [-]: MOVE      R45 R18      ; R45 := R18
487 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
488 [-]: GETTABLE  R42 R17 K63  ; R42 := R17["heading"]
489 [-]: UNM       R42 R42      ; R42 := - R42
490 [-]: SETTABLE  R17 K63 R42  ; R17["heading"] := R42
491 [-]: GETGLOBAL R42 K18      ; R42 := 0x6374FD98
492 [-]: GETTABLE  R43 R17 K64  ; R43 := R17["pitch"]
493 [-]: MUL       R43 R43 K65  ; R43 := R43 * 0.75
494 [-]: LOADK     R44 K66      ; R44 := -75
495 [-]: LOADK     R45 K53      ; R45 := 75
496 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
497 [-]: SETTABLE  R17 K64 R42  ; R17["pitch"] := R42
498 [-]: JMP       503          ; PC := 503
499 [-]: NEWTABLE  R42 0 2      ; R42 := {}
500 [-]: SETTABLE  R42 K63 K12  ; R42["heading"] := 0
501 [-]: SETTABLE  R42 K64 K12  ; R42["pitch"] := 0
502 [-]: MOVE      R17 R42      ; R17 := R42
503 [-]: GETTABLE  R42 R40 K67  ; R42 := R40["visibleLabel"]
504 [-]: TEST      R42 1        ; if R42 then PC := 524
505 [-]: JMP       524          ; PC := 524
506 [-]: GETTABLE  R42 R40 K68  ; R42 := R40["isShortcut"]
507 [-]: TEST      R42 1        ; if R42 then PC := 524
508 [-]: JMP       524          ; PC := 524
509 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
510 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
511 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
512 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
513 [-]: LOADK     R46 K72      ; R46 := "_heading"
514 [-]: GETTABLE  R47 R17 K63  ; R47 := R17["heading"]
515 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
516 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
517 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
518 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
519 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
520 [-]: LOADK     R46 K73      ; R46 := "_pitch"
521 [-]: GETTABLE  R47 R17 K64  ; R47 := R17["pitch"]
522 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
523 [-]: JMP       558          ; PC := 558
524 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
525 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
526 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
527 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
528 [-]: LOADK     R46 K72      ; R46 := "_heading"
529 [-]: GETTABLE  R47 R17 K63  ; R47 := R17["heading"]
530 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
531 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
532 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
533 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
534 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
535 [-]: LOADK     R46 K73      ; R46 := "_pitch"
536 [-]: GETTABLE  R47 R17 K64  ; R47 := R17["pitch"]
537 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
538 [-]: JMP       558          ; PC := 558
539 [-]: GETUPVAL  R42 U12      ; R42 := U12
540 [-]: GETUPVAL  R43 U13      ; R43 := U13
541 [-]: GETTABLE  R43 R43 K14  ; R43 := R43["READ_ONLY"]
542 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 558
543 [-]: JMP       558          ; PC := 558
544 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
545 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
546 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
547 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
548 [-]: LOADK     R46 K72      ; R46 := "_heading"
549 [-]: LOADK     R47 K12      ; R47 := 0
550 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
551 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
552 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
553 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
554 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
555 [-]: LOADK     R46 K73      ; R46 := "_pitch"
556 [-]: LOADK     R47 K12      ; R47 := 0
557 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
558 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
559 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
560 [-]: GETTABLE  R44 R40 K74  ; R44 := R40["nodeIndex"]
561 [-]: LOADK     R45 K36      ; R45 := "_xscale"
562 [-]: MOVE      R46 R31      ; R46 := R31
563 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
564 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
565 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
566 [-]: GETTABLE  R44 R40 K74  ; R44 := R40["nodeIndex"]
567 [-]: LOADK     R45 K37      ; R45 := "_yscale"
568 [-]: MOVE      R46 R31      ; R46 := R31
569 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
570 [-]: GETGLOBAL R42 K75      ; R42 := _T
571 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["MouseInWorldStateWindow"]
572 [-]: TEST      R42 1        ; if R42 then PC := 598
573 [-]: JMP       598          ; PC := 598
574 [-]: GETGLOBAL R42 K75      ; R42 := _T
575 [-]: GETTABLE  R42 R42 K77  ; R42 := R42["gPendingMission"]
576 [-]: EQ        0 R42 K11    ; if R42 ~= nil then PC := 598
577 [-]: JMP       598          ; PC := 598
578 [-]: GETUPVAL  R42 U6       ; R42 := U6
579 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
580 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 588
581 [-]: JMP       588          ; PC := 588
582 [-]: GETUPVAL  R42 U6       ; R42 := U6
583 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
584 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["nodeIndex"]
585 [-]: GETTABLE  R43 R40 K74  ; R43 := R40["nodeIndex"]
586 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 598
587 [-]: JMP       598          ; PC := 598
588 [-]: GETUPVAL  R42 U7       ; R42 := U7
589 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
590 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 598
591 [-]: JMP       598          ; PC := 598
592 [-]: GETUPVAL  R42 U7       ; R42 := U7
593 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
594 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["nodeIndex"]
595 [-]: GETTABLE  R43 R40 K74  ; R43 := R40["nodeIndex"]
596 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 611
597 [-]: JMP       611          ; PC := 611
598 [-]: GETGLOBAL R42 K75      ; R42 := _T
599 [-]: GETTABLE  R42 R42 K77  ; R42 := R42["gPendingMission"]
600 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 618
601 [-]: JMP       618          ; PC := 618
602 [-]: GETTABLE  R42 R40 K48  ; R42 := R40["radialSector"]
603 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 618
604 [-]: JMP       618          ; PC := 618
605 [-]: GETGLOBAL R42 K75      ; R42 := _T
606 [-]: GETTABLE  R42 R42 K77  ; R42 := R42["gPendingMission"]
607 [-]: GETTABLE  R42 R42 K78  ; R42 := R42["baseNodeName"]
608 [-]: GETTABLE  R43 R41 K79  ; R43 := R41["name"]
609 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 618
610 [-]: JMP       618          ; PC := 618
611 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
612 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
613 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
614 [-]: LOADK     R45 K38      ; R45 := "_alpha"
615 [-]: GETUPVAL  R46 U16      ; R46 := U16
616 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
617 [-]: JMP       649          ; PC := 649
618 [-]: EQ        1 R7 K11     ; if R7 == nil then PC := 639
619 [-]: JMP       639          ; PC := 639
620 [-]: GETTABLE  R42 R40 K68  ; R42 := R40["isShortcut"]
621 [-]: TEST      R42 0        ; if not R42 then PC := 639
622 [-]: JMP       639          ; PC := 639
623 [-]: GETTABLE  R42 R41 K58  ; R42 := R41["region"]
624 [-]: EQ        0 R42 R7     ; if R42 ~= R7 then PC := 639
625 [-]: JMP       639          ; PC := 639
626 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
627 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
628 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
629 [-]: LOADK     R45 K38      ; R45 := "_alpha"
630 [-]: GETGLOBAL R46 K23      ; R46 := 0x93034B55
631 [-]: GETUPVAL  R47 U16      ; R47 := U16
632 [-]: MOVE      R48 R22      ; R48 := R22
633 [-]: GETUPVAL  R49 U11      ; R49 := U11
634 [-]: SELF      R49 R49 K5   ; R50 := R49; R49 := R49["0xC4E503B0"]
635 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
636 [-]: CALL      R46 0 0      ; R46,... := R46(R47,...)
637 [-]: CALL      R42 0 1      ; R42(R43,...)
638 [-]: JMP       649          ; PC := 649
639 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
640 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
641 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
642 [-]: LOADK     R45 K38      ; R45 := "_alpha"
643 [-]: GETUPVAL  R46 U8       ; R46 := U8
644 [-]: SELF      R46 R46 K5   ; R47 := R46; R46 := R46["0xC4E503B0"]
645 [-]: CALL      R46 2 2      ; R46 := R46(R47)
646 [-]: GETUPVAL  R47 U16      ; R47 := U16
647 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
648 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
649 [-]: GETTABLE  R42 R40 K68  ; R42 := R40["isShortcut"]
650 [-]: TEST      R42 0        ; if not R42 then PC := 658
651 [-]: JMP       658          ; PC := 658
652 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
653 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
654 [-]: GETTABLE  R44 R40 K80  ; R44 := R40["labelIndex"]
655 [-]: LOADK     R45 K38      ; R45 := "_alpha"
656 [-]: GETUPVAL  R46 U16      ; R46 := U16
657 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
658 [-]: GETUPVAL  R42 U12      ; R42 := U12
659 [-]: GETUPVAL  R43 U13      ; R43 := U13
660 [-]: GETTABLE  R43 R43 K44  ; R43 := R43["EDIT_NODES"]
661 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 680
662 [-]: JMP       680          ; PC := 680
663 [-]: GETTABLE  R42 R40 K81  ; R42 := R40["deco"]
664 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 680
665 [-]: JMP       680          ; PC := 680
666 [-]: GETGLOBAL R42 K59      ; R42 := 0x400E7765
667 [-]: GETTABLE  R43 R40 K81  ; R43 := R40["deco"]
668 [-]: GETTABLE  R43 R43 K82  ; R43 := R43["mInstance"]
669 [-]: CALL      R42 2 2      ; R42 := R42(R43)
670 [-]: TEST      R42 1        ; if R42 then PC := 680
671 [-]: JMP       680          ; PC := 680
672 [-]: GETTABLE  R42 R40 K81  ; R42 := R40["deco"]
673 [-]: GETTABLE  R42 R42 K82  ; R42 := R42["mInstance"]
674 [-]: SELF      R42 R42 K83  ; R43 := R42; R42 := R42["0xEC183DDC"]
675 [-]: GETTABLE  R44 R40 K49  ; R44 := R40["position"]
676 [-]: GETTABLE  R45 R40 K81  ; R45 := R40["deco"]
677 [-]: GETTABLE  R45 R45 K84  ; R45 := R45["mOffset"]
678 [-]: ADD       R44 R44 R45  ; R44 := R44 + R45
679 [-]: CALL      R42 3 1      ; R42(R43,R44)
680 [-]: FORLOOP   R36 395      ; R36 += R38; if R36 <= R37 then begin PC := 395; R39 := R36 end
681 [-]: LOADNIL   R42 R45      ; R42 := R43 := R44 := R45 := nil
682 [-]: LOADK     R46 K13      ; R46 := 1
683 [-]: GETUPVAL  R47 U22      ; R47 := U22
684 [-]: LEN       R47 R47      ; R47 := # R47
685 [-]: LOADK     R48 K13      ; R48 := 1
686 [-]: FORPREP   R46 794      ; R46 -= R48; PC := 794
687 [-]: GETUPVAL  R50 U22      ; R50 := U22
688 [-]: GETTABLE  R42 R50 R49  ; R42 := R50[R49]
689 [-]: GETGLOBAL R50 K59      ; R50 := 0x400E7765
690 [-]: GETTABLE  R51 R42 K85  ; R51 := R42["Instance"]
691 [-]: CALL      R50 2 2      ; R50 := R50(R51)
692 [-]: TEST      R50 1        ; if R50 then PC := 794
693 [-]: JMP       794          ; PC := 794
694 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["IsShortcut"]
695 [-]: TEST      R50 1        ; if R50 then PC := 700
696 [-]: JMP       700          ; PC := 700
697 [-]: GETTABLE  R50 R42 K87  ; R50 := R42["IsJunction"]
698 [-]: TEST      R50 0        ; if not R50 then PC := 752
699 [-]: JMP       752          ; PC := 752
700 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["IsShortcut"]
701 [-]: TEST      R50 0        ; if not R50 then PC := 732
702 [-]: JMP       732          ; PC := 732
703 [-]: GETUPVAL  R50 U23      ; R50 := U23
704 [-]: GETTABLE  R51 R42 K88  ; R51 := R42["NodeA"]
705 [-]: GETTABLE  R51 R51 K49  ; R51 := R51["position"]
706 [-]: GETTABLE  R52 R42 K89  ; R52 := R42["controlPointA"]
707 [-]: GETTABLE  R52 R52 K49  ; R52 := R52["position"]
708 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
709 [-]: MOVE      R43 R50      ; R43 := R50
710 [-]: GETGLOBAL R50 K27      ; R50 := mMovie
711 [-]: SELF      R50 R50 K35  ; R51 := R50; R50 := R50["0x445651FB"]
712 [-]: GETTABLE  R52 R42 K88  ; R52 := R42["NodeA"]
713 [-]: GETTABLE  R52 R52 K74  ; R52 := R52["nodeIndex"]
714 [-]: LOADK     R53 K90      ; R53 := "_rotation"
715 [-]: MOVE      R54 R43      ; R54 := R43
716 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
717 [-]: GETUPVAL  R50 U23      ; R50 := U23
718 [-]: GETTABLE  R51 R42 K91  ; R51 := R42["NodeB"]
719 [-]: GETTABLE  R51 R51 K49  ; R51 := R51["position"]
720 [-]: GETTABLE  R52 R42 K92  ; R52 := R42["controlPointB"]
721 [-]: GETTABLE  R52 R52 K49  ; R52 := R52["position"]
722 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
723 [-]: MOVE      R43 R50      ; R43 := R50
724 [-]: GETGLOBAL R50 K27      ; R50 := mMovie
725 [-]: SELF      R50 R50 K35  ; R51 := R50; R50 := R50["0x445651FB"]
726 [-]: GETTABLE  R52 R42 K91  ; R52 := R42["NodeB"]
727 [-]: GETTABLE  R52 R52 K74  ; R52 := R52["nodeIndex"]
728 [-]: LOADK     R53 K90      ; R53 := "_rotation"
729 [-]: MOVE      R54 R43      ; R54 := R43
730 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
731 [-]: JMP       752          ; PC := 752
732 [-]: GETTABLE  R50 R42 K88  ; R50 := R42["NodeA"]
733 [-]: GETTABLE  R50 R50 K93  ; R50 := R50["isJunction"]
734 [-]: TEST      R50 0        ; if not R50 then PC := 739
735 [-]: JMP       739          ; PC := 739
736 [-]: GETTABLE  R44 R42 K88  ; R44 := R42["NodeA"]
737 [-]: GETTABLE  R45 R42 K91  ; R45 := R42["NodeB"]
738 [-]: JMP       741          ; PC := 741
739 [-]: GETTABLE  R44 R42 K91  ; R44 := R42["NodeB"]
740 [-]: GETTABLE  R45 R42 K88  ; R45 := R42["NodeA"]
741 [-]: GETUPVAL  R50 U23      ; R50 := U23
742 [-]: GETTABLE  R51 R44 K49  ; R51 := R44["position"]
743 [-]: GETTABLE  R52 R45 K49  ; R52 := R45["position"]
744 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
745 [-]: MOVE      R43 R50      ; R43 := R50
746 [-]: GETGLOBAL R50 K27      ; R50 := mMovie
747 [-]: SELF      R50 R50 K35  ; R51 := R50; R50 := R50["0x445651FB"]
748 [-]: GETTABLE  R52 R44 K74  ; R52 := R44["nodeIndex"]
749 [-]: LOADK     R53 K90      ; R53 := "_rotation"
750 [-]: MOVE      R54 R43      ; R54 := R43
751 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
752 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["IsShortcut"]
753 [-]: TEST      R50 0        ; if not R50 then PC := 783
754 [-]: JMP       783          ; PC := 783
755 [-]: GETTABLE  R50 R42 K88  ; R50 := R42["NodeA"]
756 [-]: GETTABLE  R50 R50 K48  ; R50 := R50["radialSector"]
757 [-]: GETTABLE  R50 R50 K58  ; R50 := R50["region"]
758 [-]: EQ        1 R50 R7     ; if R50 == R7 then PC := 765
759 [-]: JMP       765          ; PC := 765
760 [-]: GETTABLE  R50 R42 K91  ; R50 := R42["NodeB"]
761 [-]: GETTABLE  R50 R50 K48  ; R50 := R50["radialSector"]
762 [-]: GETTABLE  R50 R50 K58  ; R50 := R50["region"]
763 [-]: EQ        0 R50 R7     ; if R50 ~= R7 then PC := 783
764 [-]: JMP       783          ; PC := 783
765 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["Instance"]
766 [-]: SELF      R50 R50 K94  ; R51 := R50; R50 := R50["0xD124E361"]
767 [-]: GETUPVAL  R52 U24      ; R52 := U24
768 [-]: GETTABLE  R52 R52 K95  ; R52 := R52["ALPHA_ATTEN"]
769 [-]: GETGLOBAL R53 K23      ; R53 := 0x93034B55
770 [-]: GETUPVAL  R54 U16      ; R54 := U16
771 [-]: MOVE      R55 R22      ; R55 := R22
772 [-]: GETUPVAL  R56 U11      ; R56 := U11
773 [-]: SELF      R56 R56 K5   ; R57 := R56; R56 := R56["0xC4E503B0"]
774 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
775 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
776 [-]: DIV       R53 R53 K16  ; R53 := R53 / 100
777 [-]: GETUPVAL  R54 U8       ; R54 := U8
778 [-]: SELF      R54 R54 K5   ; R55 := R54; R54 := R54["0xC4E503B0"]
779 [-]: CALL      R54 2 2      ; R54 := R54(R55)
780 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
781 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
782 [-]: JMP       794          ; PC := 794
783 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["Instance"]
784 [-]: SELF      R50 R50 K94  ; R51 := R50; R50 := R50["0xD124E361"]
785 [-]: GETUPVAL  R52 U24      ; R52 := U24
786 [-]: GETTABLE  R52 R52 K95  ; R52 := R52["ALPHA_ATTEN"]
787 [-]: GETUPVAL  R53 U16      ; R53 := U16
788 [-]: DIV       R53 R53 K16  ; R53 := R53 / 100
789 [-]: GETUPVAL  R54 U8       ; R54 := U8
790 [-]: SELF      R54 R54 K5   ; R55 := R54; R54 := R54["0xC4E503B0"]
791 [-]: CALL      R54 2 2      ; R54 := R54(R55)
792 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
793 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
794 [-]: FORLOOP   R46 687      ; R46 += R48; if R46 <= R47 then begin PC := 687; R49 := R46 end
795 [-]: MOVE      R14 R2       ; R14 := R2
796 [-]: GETGLOBAL R50 K18      ; R50 := 0x6374FD98
797 [-]: MOVE      R51 R14      ; R51 := R14
798 [-]: GETUPVAL  R52 U14      ; R52 := U14
799 [-]: GETTABLE  R52 R52 K19  ; R52 := R52["LAYER_1_RANGE"]
800 [-]: GETTABLE  R52 R52 K20  ; R52 := R52["minValue"]
801 [-]: GETUPVAL  R53 U14      ; R53 := U14
802 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["LAYER_1_RANGE"]
803 [-]: GETTABLE  R53 R53 K21  ; R53 := R53["maxValue"]
804 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
805 [-]: MOVE      R14 R50      ; R14 := R50
806 [-]: GETGLOBAL R50 K23      ; R50 := 0x93034B55
807 [-]: LOADK     R51 K96      ; R51 := 30
808 [-]: LOADK     R52 K32      ; R52 := 10
809 [-]: GETUPVAL  R53 U14      ; R53 := U14
810 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["LAYER_1_RANGE"]
811 [-]: SELF      R53 R53 K22  ; R54 := R53; R53 := R53["0x3B43F25"]
812 [-]: MOVE      R55 R14      ; R55 := R14
813 [-]: CALL      R53 3 0      ; R53,... := R53(R54,R55)
814 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
815 [-]: LOADK     R51 K13      ; R51 := 1
816 [-]: GETUPVAL  R52 U25      ; R52 := U25
817 [-]: LEN       R52 R52      ; R52 := # R52
818 [-]: LOADK     R53 K13      ; R53 := 1
819 [-]: FORPREP   R51 837      ; R51 -= R53; PC := 837
820 [-]: MOVE      R13 R50      ; R13 := R50
821 [-]: GETGLOBAL R55 K59      ; R55 := 0x400E7765
822 [-]: GETUPVAL  R56 U25      ; R56 := U25
823 [-]: GETTABLE  R56 R56 R54  ; R56 := R56[R54]
824 [-]: CALL      R55 2 2      ; R55 := R55(R56)
825 [-]: TEST      R55 1        ; if R55 then PC := 837
826 [-]: JMP       837          ; PC := 837
827 [-]: GETUPVAL  R55 U25      ; R55 := U25
828 [-]: GETTABLE  R55 R55 R54  ; R55 := R55[R54]
829 [-]: SELF      R55 R55 K94  ; R56 := R55; R55 := R55["0xD124E361"]
830 [-]: GETGLOBAL R57 K97      ; R57 := Lotus_Game
831 [-]: GETTABLE  R57 R57 K98  ; R57 := R57["TINT_COLOR"]
832 [-]: LOADK     R58 K12      ; R58 := 0
833 [-]: LOADK     R59 K12      ; R59 := 0
834 [-]: LOADK     R60 K12      ; R60 := 0
835 [-]: DIV       R61 R13 K16  ; R61 := R13 / 100
836 [-]: CALL      R55 7 1      ; R55(R56,R57,R58,R59,R60,R61)
837 [-]: FORLOOP   R51 820      ; R51 += R53; if R51 <= R52 then begin PC := 820; R54 := R51 end
838 [-]: GETUPVAL  R55 U26      ; R55 := U26
839 [-]: GETTABLE  R55 R55 K99  ; R55 := R55["Active"]
840 [-]: TEST      R55 0        ; if not R55 then PC := 880
841 [-]: JMP       880          ; PC := 880
842 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
843 [-]: SELF      R55 R55 K28  ; R56 := R55; R55 := R55["0x3688C0F4"]
844 [-]: MOVE      R57 R15      ; R57 := R15
845 [-]: GETUPVAL  R58 U26      ; R58 := U26
846 [-]: GETTABLE  R58 R58 K100 ; R58 := R58["Position"]
847 [-]: MOVE      R59 R1       ; R59 := R1
848 [-]: GETUPVAL  R60 U20      ; R60 := U20
849 [-]: CALL      R55 6 1      ; R55(R56,R57,R58,R59,R60)
850 [-]: GETGLOBAL R55 K23      ; R55 := 0x93034B55
851 [-]: LOADK     R56 K101     ; R56 := 60
852 [-]: LOADK     R57 K16      ; R57 := 100
853 [-]: MOVE      R58 R30      ; R58 := R30
854 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
855 [-]: MOVE      R31 R55      ; R31 := R55
856 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
857 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
858 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
859 [-]: LOADK     R58 K103     ; R58 := "_x"
860 [-]: GETTABLE  R59 R15 K4   ; R59 := R15["x"]
861 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
862 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
863 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
864 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
865 [-]: LOADK     R58 K104     ; R58 := "_y"
866 [-]: GETTABLE  R59 R15 K6   ; R59 := R15["y"]
867 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
868 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
869 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
870 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
871 [-]: LOADK     R58 K36      ; R58 := "_xscale"
872 [-]: MOVE      R59 R31      ; R59 := R31
873 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
874 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
875 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
876 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
877 [-]: LOADK     R58 K37      ; R58 := "_yscale"
878 [-]: MOVE      R59 R31      ; R59 := R31
879 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
880 [-]: GETUPVAL  R55 U27      ; R55 := U27
881 [-]: CALL      R55 1 1      ; R55()
882 [-]: GETUPVAL  R55 U28      ; R55 := U28
883 [-]: CALL      R55 1 1      ; R55()
884 [-]: GETUPVAL  R55 U26      ; R55 := U26
885 [-]: GETTABLE  R55 R55 K99  ; R55 := R55["Active"]
886 [-]: TEST      R55 0        ; if not R55 then PC := 908
887 [-]: JMP       908          ; PC := 908
888 [-]: GETGLOBAL R55 K105     ; R55 := 0x41AF6EE8
889 [-]: CALL      R55 1 2      ; R55 := R55()
890 [-]: GETUPVAL  R56 U26      ; R56 := U26
891 [-]: GETTABLE  R56 R56 K107 ; R56 := R56["Expiry"]
892 [-]: SETTABLE  R55 K106 R56 ; R55["sec"] := R56
893 [-]: GETGLOBAL R56 K108     ; R56 := Engine
894 [-]: GETTABLE  R56 R56 K109 ; R56 := R56["0xD09D7910"]
895 [-]: MOVE      R57 R55      ; R57 := R55
896 [-]: CALL      R56 2 2      ; R56 := R56(R57)
897 [-]: LE        0 R56 K12    ; if R56 > 0 then PC := 908
898 [-]: JMP       908          ; PC := 908
899 [-]: GETUPVAL  R57 U26      ; R57 := U26
900 [-]: SETTABLE  R57 K99 K1   ; R57["Active"] := "0x0"
901 [-]: GETGLOBAL R57 K27      ; R57 := mMovie
902 [-]: SELF      R57 R57 K40  ; R58 := R57; R57 := R57["0x1C19D966"]
903 [-]: LOADK     R59 K102     ; R59 := "VoidTrader"
904 [-]: LOADK     R60 K110     ; R60 := "_visible"
905 [-]: GETUPVAL  R61 U26      ; R61 := U26
906 [-]: GETTABLE  R61 R61 K99  ; R61 := R61["Active"]
907 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
908 [-]: GETGLOBAL R57 K59      ; R57 := 0x400E7765
909 [-]: GETUPVAL  R58 U29      ; R58 := U29
910 [-]: GETTABLE  R58 R58 K10  ; R58 := R58["Region"]
911 [-]: CALL      R57 2 2      ; R57 := R57(R58)
912 [-]: TEST      R57 1        ; if R57 then PC := 1123
913 [-]: JMP       1123         ; PC := 1123
914 [-]: GETGLOBAL R57 K18      ; R57 := 0x6374FD98
915 [-]: MOVE      R58 R2       ; R58 := R2
916 [-]: GETUPVAL  R59 U14      ; R59 := U14
917 [-]: GETTABLE  R59 R59 K39  ; R59 := R59["LAYER_2_RANGE"]
918 [-]: GETTABLE  R59 R59 K20  ; R59 := R59["minValue"]
919 [-]: GETUPVAL  R60 U14      ; R60 := U14
920 [-]: GETTABLE  R60 R60 K39  ; R60 := R60["LAYER_2_RANGE"]
921 [-]: GETTABLE  R60 R60 K21  ; R60 := R60["maxValue"]
922 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
923 [-]: MOVE      R2 R57       ; R2 := R57
924 [-]: GETUPVAL  R57 U14      ; R57 := U14
925 [-]: GETTABLE  R57 R57 K39  ; R57 := R57["LAYER_2_RANGE"]
926 [-]: SELF      R57 R57 K22  ; R58 := R57; R57 := R57["0x3B43F25"]
927 [-]: MOVE      R59 R2       ; R59 := R2
928 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
929 [-]: LOADNIL   R58 R59      ; R58 := R59 := nil
930 [-]: GETGLOBAL R60 K111     ; R60 := 0xECFDD17
931 [-]: GETUPVAL  R61 U29      ; R61 := U29
932 [-]: GETTABLE  R61 R61 K41  ; R61 := R61["Nodes"]
933 [-]: CALL      R60 2 4      ; R60,R61,R62 := R60(R61)
934 [-]: JMP       1099         ; PC := 1099
935 [-]: GETTABLE  R65 R64 K48  ; R65 := R64["radialSector"]
936 [-]: GETTABLE  R66 R64 K49  ; R66 := R64["position"]
937 [-]: GETGLOBAL R67 K27      ; R67 := mMovie
938 [-]: SELF      R67 R67 K28  ; R68 := R67; R67 := R67["0x3688C0F4"]
939 [-]: MOVE      R69 R15      ; R69 := R15
940 [-]: MOVE      R70 R66      ; R70 := R66
941 [-]: MOVE      R71 R1       ; R71 := R1
942 [-]: GETUPVAL  R72 U20      ; R72 := U20
943 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
944 [-]: GETGLOBAL R67 K27      ; R67 := mMovie
945 [-]: SELF      R67 R67 K30  ; R68 := R67; R67 := R67["0x4717530F"]
946 [-]: GETTABLE  R69 R64 K31  ; R69 := R64["memberIndex"]
947 [-]: GETTABLE  R70 R15 K4   ; R70 := R15["x"]
948 [-]: GETTABLE  R71 R15 K6   ; R71 := R15["y"]
949 [-]: CALL      R67 5 1      ; R67(R68,R69,R70,R71)
950 [-]: GETGLOBAL R67 K23      ; R67 := 0x93034B55
951 [-]: LOADK     R68 K50      ; R68 := 20
952 [-]: LOADK     R69 K26      ; R69 := 50
953 [-]: MOVE      R70 R57      ; R70 := R57
954 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
955 [-]: GETTABLE  R68 R64 K51  ; R68 := R64["isSurfaceNode"]
956 [-]: TEST      R68 0        ; if not R68 then PC := 1068
957 [-]: JMP       1068         ; PC := 1068
958 [-]: LOADK     R58 K16      ; R58 := 100
959 [-]: GETTABLE  R59 R66 K52  ; R59 := R66["z"]
960 [-]: MUL       R59 R59 K32  ; R59 := R59 * 10
961 [-]: LE        0 K12 R59    ; if 0 > R59 then PC := 978
962 [-]: JMP       978          ; PC := 978
963 [-]: GETGLOBAL R68 K23      ; R68 := 0x93034B55
964 [-]: LOADK     R69 K53      ; R69 := 75
965 [-]: LOADK     R70 K26      ; R70 := 50
966 [-]: GETGLOBAL R71 K18      ; R71 := 0x6374FD98
967 [-]: GETGLOBAL R72 K54      ; R72 := math
968 [-]: GETTABLE  R72 R72 K55  ; R72 := R72["0xD6F2D811"]
969 [-]: MOVE      R73 R59      ; R73 := R59
970 [-]: LOADK     R74 K56      ; R74 := 3
971 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
972 [-]: LOADK     R73 K12      ; R73 := 0
973 [-]: LOADK     R74 K13      ; R74 := 1
974 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
975 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
976 [-]: MOVE      R58 R68      ; R58 := R68
977 [-]: JMP       995          ; PC := 995
978 [-]: GETGLOBAL R68 K23      ; R68 := 0x93034B55
979 [-]: LOADK     R69 K53      ; R69 := 75
980 [-]: LOADK     R70 K16      ; R70 := 100
981 [-]: GETGLOBAL R71 K18      ; R71 := 0x6374FD98
982 [-]: GETGLOBAL R72 K54      ; R72 := math
983 [-]: GETTABLE  R72 R72 K55  ; R72 := R72["0xD6F2D811"]
984 [-]: GETGLOBAL R73 K54      ; R73 := math
985 [-]: GETTABLE  R73 R73 K57  ; R73 := R73["0xF93F7CC8"]
986 [-]: MOVE      R74 R59      ; R74 := R59
987 [-]: CALL      R73 2 2      ; R73 := R73(R74)
988 [-]: LOADK     R74 K56      ; R74 := 3
989 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
990 [-]: LOADK     R73 K12      ; R73 := 0
991 [-]: LOADK     R74 K13      ; R74 := 1
992 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
993 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
994 [-]: MOVE      R58 R68      ; R58 := R68
995 [-]: GETUPVAL  R68 U21      ; R68 := U21
996 [-]: GETTABLE  R69 R65 K58  ; R69 := R65["region"]
997 [-]: ADD       R69 R69 K13  ; R69 := R69 + 1
998 [-]: GETTABLE  R68 R68 R69  ; R68 := R68[R69]
999 [-]: GETGLOBAL R69 K59      ; R69 := 0x400E7765
1000 [-]: MOVE      R70 R68      ; R70 := R68
1001 [-]: CALL      R69 2 2      ; R69 := R69(R70)
1002 [-]: TEST      R69 1        ; if R69 then PC := 1028
1003 [-]: JMP       1028         ; PC := 1028
1004 [-]: SELF      R69 R68 K60  ; R70 := R68; R69 := R68["0x8EEB099D"]
1005 [-]: MOVE      R71 R16      ; R71 := R16
1006 [-]: CALL      R69 3 1      ; R69(R70,R71)
1007 [-]: GETGLOBAL R69 K61      ; R69 := 0x518098BD
1008 [-]: MOVE      R70 R18      ; R70 := R18
1009 [-]: MOVE      R71 R66      ; R71 := R66
1010 [-]: MOVE      R72 R16      ; R72 := R16
1011 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1012 [-]: GETGLOBAL R69 K62      ; R69 := 0x20F748B4
1013 [-]: MOVE      R70 R17      ; R70 := R17
1014 [-]: MOVE      R71 R1       ; R71 := R1
1015 [-]: MOVE      R72 R18      ; R72 := R18
1016 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1017 [-]: GETTABLE  R69 R17 K63  ; R69 := R17["heading"]
1018 [-]: UNM       R69 R69      ; R69 := - R69
1019 [-]: SETTABLE  R17 K63 R69  ; R17["heading"] := R69
1020 [-]: GETGLOBAL R69 K18      ; R69 := 0x6374FD98
1021 [-]: GETTABLE  R70 R17 K64  ; R70 := R17["pitch"]
1022 [-]: MUL       R70 R70 K65  ; R70 := R70 * 0.75
1023 [-]: LOADK     R71 K66      ; R71 := -75
1024 [-]: LOADK     R72 K53      ; R72 := 75
1025 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1026 [-]: SETTABLE  R17 K64 R69  ; R17["pitch"] := R69
1027 [-]: JMP       1032         ; PC := 1032
1028 [-]: NEWTABLE  R69 0 2      ; R69 := {}
1029 [-]: SETTABLE  R69 K63 K12  ; R69["heading"] := 0
1030 [-]: SETTABLE  R69 K64 K12  ; R69["pitch"] := 0
1031 [-]: MOVE      R17 R69      ; R17 := R69
1032 [-]: GETTABLE  R69 R64 K67  ; R69 := R64["visibleLabel"]
1033 [-]: TEST      R69 1        ; if R69 then PC := 1053
1034 [-]: JMP       1053         ; PC := 1053
1035 [-]: GETTABLE  R69 R64 K68  ; R69 := R64["isShortcut"]
1036 [-]: TEST      R69 1        ; if R69 then PC := 1053
1037 [-]: JMP       1053         ; PC := 1053
1038 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1039 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1040 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1041 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1042 [-]: LOADK     R73 K72      ; R73 := "_heading"
1043 [-]: GETTABLE  R74 R17 K63  ; R74 := R17["heading"]
1044 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1045 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1046 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1047 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1048 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1049 [-]: LOADK     R73 K73      ; R73 := "_pitch"
1050 [-]: GETTABLE  R74 R17 K64  ; R74 := R17["pitch"]
1051 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1052 [-]: JMP       1087         ; PC := 1087
1053 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1054 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1055 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1056 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1057 [-]: LOADK     R73 K72      ; R73 := "_heading"
1058 [-]: GETTABLE  R74 R17 K63  ; R74 := R17["heading"]
1059 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1060 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1061 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1062 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1063 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1064 [-]: LOADK     R73 K73      ; R73 := "_pitch"
1065 [-]: GETTABLE  R74 R17 K64  ; R74 := R17["pitch"]
1066 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1067 [-]: JMP       1087         ; PC := 1087
1068 [-]: GETUPVAL  R69 U12      ; R69 := U12
1069 [-]: GETUPVAL  R70 U13      ; R70 := U13
1070 [-]: GETTABLE  R70 R70 K14  ; R70 := R70["READ_ONLY"]
1071 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 1087
1072 [-]: JMP       1087         ; PC := 1087
1073 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1074 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1075 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1076 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1077 [-]: LOADK     R73 K72      ; R73 := "_heading"
1078 [-]: LOADK     R74 K12      ; R74 := 0
1079 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1080 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1081 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1082 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1083 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1084 [-]: LOADK     R73 K73      ; R73 := "_pitch"
1085 [-]: LOADK     R74 K12      ; R74 := 0
1086 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1087 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1088 [-]: SELF      R69 R69 K35  ; R70 := R69; R69 := R69["0x445651FB"]
1089 [-]: GETTABLE  R71 R64 K74  ; R71 := R64["nodeIndex"]
1090 [-]: LOADK     R72 K36      ; R72 := "_xscale"
1091 [-]: MOVE      R73 R67      ; R73 := R67
1092 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1093 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1094 [-]: SELF      R69 R69 K35  ; R70 := R69; R69 := R69["0x445651FB"]
1095 [-]: GETTABLE  R71 R64 K74  ; R71 := R64["nodeIndex"]
1096 [-]: LOADK     R72 K37      ; R72 := "_yscale"
1097 [-]: MOVE      R73 R67      ; R73 := R67
1098 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1099 [-]: TFORLOOP  R60 2        ; R63,R64 :=  R60(R61,R62); if R63 ~= nil then begin PC = 935; R62 := R63 end
1100 [-]: JMP       935          ; PC := 935
1101 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1102 [-]: SELF      R69 R69 K28  ; R70 := R69; R69 := R69["0x3688C0F4"]
1103 [-]: MOVE      R71 R15      ; R71 := R15
1104 [-]: GETUPVAL  R72 U15      ; R72 := U15
1105 [-]: GETUPVAL  R73 U29      ; R73 := U29
1106 [-]: GETTABLE  R73 R73 K112 ; R73 := R73["SubLabelIndex"]
1107 [-]: GETTABLE  R72 R72 R73  ; R72 := R72[R73]
1108 [-]: GETTABLE  R72 R72 K29  ; R72 := R72["pos"]
1109 [-]: MOVE      R73 R1       ; R73 := R1
1110 [-]: MOVE      R74 R0       ; R74 := R0
1111 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1112 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1113 [-]: SELF      R69 R69 K30  ; R70 := R69; R69 := R69["0x4717530F"]
1114 [-]: GETUPVAL  R71 U15      ; R71 := U15
1115 [-]: GETUPVAL  R72 U29      ; R72 := U29
1116 [-]: GETTABLE  R72 R72 K112 ; R72 := R72["SubLabelIndex"]
1117 [-]: GETTABLE  R71 R71 R72  ; R71 := R71[R72]
1118 [-]: GETTABLE  R71 R71 K31  ; R71 := R71["memberIndex"]
1119 [-]: GETTABLE  R72 R15 K4   ; R72 := R15["x"]
1120 [-]: GETTABLE  R73 R15 K6   ; R73 := R15["y"]
1121 [-]: SUB       R73 R73 K32  ; R73 := R73 - 10
1122 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1123 [-]: GETUPVAL  R69 U6       ; R69 := U6
1124 [-]: GETTABLE  R69 R69 K8   ; R69 := R69["Node"]
1125 [-]: EQ        1 R69 K11    ; if R69 == nil then PC := 1215
1126 [-]: JMP       1215         ; PC := 1215
1127 [-]: GETUPVAL  R69 U6       ; R69 := U6
1128 [-]: GETTABLE  R69 R69 K8   ; R69 := R69["Node"]
1129 [-]: GETTABLE  R69 R69 K68  ; R69 := R69["isShortcut"]
1130 [-]: TEST      R69 1        ; if R69 then PC := 1215
1131 [-]: JMP       1215         ; PC := 1215
1132 [-]: GETUPVAL  R69 U6       ; R69 := U6
1133 [-]: GETTABLE  R69 R69 K8   ; R69 := R69["Node"]
1134 [-]: GETTABLE  R69 R69 K93  ; R69 := R69["isJunction"]
1135 [-]: TEST      R69 1        ; if R69 then PC := 1215
1136 [-]: JMP       1215         ; PC := 1215
1137 [-]: GETUPVAL  R69 U30      ; R69 := U30
1138 [-]: GETTABLE  R69 R69 K113 ; R69 := R69["0x69B983D"]
1139 [-]: GETGLOBAL R70 K27      ; R70 := mMovie
1140 [-]: GETUPVAL  R71 U6       ; R71 := U6
1141 [-]: GETTABLE  R71 R71 K8   ; R71 := R71["Node"]
1142 [-]: GETTABLE  R71 R71 K70  ; R71 := R71["clipName"]
1143 [-]: CALL      R69 3 3      ; R69,R70 := R69(R70,R71)
1144 [-]: LOADK     R71 K12      ; R71 := 0
1145 [-]: LOADNIL   R72 R72      ; R72 := nil
1146 [-]: GETGLOBAL R73 K27      ; R73 := mMovie
1147 [-]: SELF      R73 R73 K114 ; R74 := R73; R73 := R73["0xF3E132E0"]
1148 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1149 [-]: DIV       R73 R73 K34  ; R73 := R73 / 2
1150 [-]: LT        0 R73 R69    ; if R73 >= R69 then PC := 1155
1151 [-]: JMP       1155         ; PC := 1155
1152 [-]: SUB       R69 R69 K115 ; R69 := R69 - 380
1153 [-]: LOADK     R71 K116     ; R71 := -20
1154 [-]: JMP       1157         ; PC := 1157
1155 [-]: ADD       R69 R69 K96  ; R69 := R69 + 30
1156 [-]: LOADK     R71 K50      ; R71 := 20
1157 [-]: GETGLOBAL R73 K27      ; R73 := mMovie
1158 [-]: SELF      R73 R73 K117 ; R74 := R73; R73 := R73["0x68998E7D"]
1159 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1160 [-]: DIV       R73 R73 K34  ; R73 := R73 / 2
1161 [-]: LT        0 R73 R70    ; if R73 >= R70 then PC := 1166
1162 [-]: JMP       1166         ; PC := 1166
1163 [-]: SUB       R70 R70 K118 ; R70 := R70 - 300
1164 [-]: LOADK     R72 K116     ; R72 := -20
1165 [-]: JMP       1168         ; PC := 1168
1166 [-]: SUB       R70 R70 K32  ; R70 := R70 - 10
1167 [-]: LOADK     R72 K50      ; R72 := 20
1168 [-]: GETGLOBAL R73 K27      ; R73 := mMovie
1169 [-]: SELF      R73 R73 K40  ; R74 := R73; R73 := R73["0x1C19D966"]
1170 [-]: LOADK     R75 K119     ; R75 := "InfoTip"
1171 [-]: LOADK     R76 K103     ; R76 := "_x"
1172 [-]: MOVE      R77 R69      ; R77 := R69
1173 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1174 [-]: GETGLOBAL R73 K27      ; R73 := mMovie
1175 [-]: SELF      R73 R73 K40  ; R74 := R73; R73 := R73["0x1C19D966"]
1176 [-]: LOADK     R75 K119     ; R75 := "InfoTip"
1177 [-]: LOADK     R76 K104     ; R76 := "_y"
1178 [-]: MOVE      R77 R70      ; R77 := R70
1179 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1180 [-]: GETGLOBAL R73 K27      ; R73 := mMovie
1181 [-]: SELF      R73 R73 K35  ; R74 := R73; R73 := R73["0x445651FB"]
1182 [-]: GETUPVAL  R75 U6       ; R75 := U6
1183 [-]: GETTABLE  R75 R75 K8   ; R75 := R75["Node"]
1184 [-]: GETTABLE  R75 R75 K80  ; R75 := R75["labelIndex"]
1185 [-]: LOADK     R76 K38      ; R76 := "_alpha"
1186 [-]: LOADK     R77 K16      ; R77 := 100
1187 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1188 [-]: GETUPVAL  R73 U31      ; R73 := U31
1189 [-]: CALL      R73 1 1      ; R73()
1190 [-]: GETGLOBAL R73 K59      ; R73 := 0x400E7765
1191 [-]: GETUPVAL  R74 U32      ; R74 := U32
1192 [-]: GETTABLE  R74 R74 K120 ; R74 := R74["Projector"]
1193 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1194 [-]: TEST      R73 0        ; if not R73 then PC := 1215
1195 [-]: JMP       1215         ; PC := 1215
1196 [-]: GETUPVAL  R73 U32      ; R73 := U32
1197 [-]: GETGLOBAL R74 K121     ; R74 := gBackgroundRegion
1198 [-]: SELF      R74 R74 K122 ; R75 := R74; R74 := R74["0xBDD34CC6"]
1199 [-]: GETGLOBAL R76 K123     ; R76 := projectorEffect
1200 [-]: GETUPVAL  R77 U6       ; R77 := U6
1201 [-]: GETTABLE  R77 R77 K8   ; R77 := R77["Node"]
1202 [-]: GETTABLE  R77 R77 K49  ; R77 := R77["position"]
1203 [-]: GETGLOBAL R78 K15      ; R78 := 0x1E4F6281
1204 [-]: MOVE      R79 R71      ; R79 := R71
1205 [-]: MOVE      R80 R72      ; R80 := R72
1206 [-]: LOADK     R81 K12      ; R81 := 0
1207 [-]: CALL      R78 4 0      ; R78,... := R78(R79,R80,R81)
1208 [-]: CALL      R74 0 2      ; R74 := R74(R75,...)
1209 [-]: SETTABLE  R73 K120 R74 ; R73["Projector"] := R74
1210 [-]: GETUPVAL  R73 U32      ; R73 := U32
1211 [-]: GETTABLE  R73 R73 K120 ; R73 := R73["Projector"]
1212 [-]: SELF      R73 R73 K124 ; R74 := R73; R73 := R73["0x6A7E5F92"]
1213 [-]: LOADK     R75 K125     ; R75 := 0.125
1214 [-]: CALL      R73 3 1      ; R73(R74,R75)
1215 [-]: GETUPVAL  R73 U32      ; R73 := U32
1216 [-]: GETTABLE  R73 R73 K126 ; R73 := R73["Playing"]
1217 [-]: TEST      R73 0        ; if not R73 then PC := 1225
1218 [-]: JMP       1225         ; PC := 1225
1219 [-]: GETUPVAL  R73 U6       ; R73 := U6
1220 [-]: GETTABLE  R73 R73 K8   ; R73 := R73["Node"]
1221 [-]: EQ        0 R73 K11    ; if R73 ~= nil then PC := 1225
1222 [-]: JMP       1225         ; PC := 1225
1223 [-]: GETUPVAL  R73 U33      ; R73 := U33
1224 [-]: CALL      R73 1 1      ; R73()
1225 [-]: GETUPVAL  R73 U34      ; R73 := U34
1226 [-]: CALL      R73 1 1      ; R73()
1227 [-]: GETUPVAL  R73 U35      ; R73 := U35
1228 [-]: GETGLOBAL R74 K75      ; R74 := _T
1229 [-]: GETTABLE  R74 R74 K127 ; R74 := R74["REGION_ID_FORTRESS"]
1230 [-]: GETTABLE  R73 R73 R74  ; R73 := R73[R74]
1231 [-]: EQ        1 R73 K128   ; if R73 == "0x1" then PC := 1235
1232 [-]: JMP       1235         ; PC := 1235
1233 [-]: GETUPVAL  R73 U36      ; R73 := U36
1234 [-]: CALL      R73 1 1      ; R73()
1235 [-]: GETUPVAL  R73 U37      ; R73 := U37
1236 [-]: GETTABLE  R73 R73 K129 ; R73 := R73["Prop"]
1237 [-]: SELF      R73 R73 K5   ; R74 := R73; R73 := R73["0xC4E503B0"]
1238 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1239 [-]: GETUPVAL  R74 U37      ; R74 := U37
1240 [-]: GETTABLE  R74 R74 K129 ; R74 := R74["Prop"]
1241 [-]: SELF      R74 R74 K130 ; R75 := R74; R74 := R74["0x8C7099E9"]
1242 [-]: GETGLOBAL R76 K131     ; R76 := 0x4CDEF9FF
1243 [-]: CALL      R76 1 0      ; R76,... := R76()
1244 [-]: CALL      R74 0 1      ; R74(R75,...)
1245 [-]: GETGLOBAL R74 K54      ; R74 := math
1246 [-]: GETTABLE  R74 R74 K57  ; R74 := R74["0xF93F7CC8"]
1247 [-]: GETUPVAL  R75 U37      ; R75 := U37
1248 [-]: GETTABLE  R75 R75 K129 ; R75 := R75["Prop"]
1249 [-]: GETTABLE  R75 R75 K132 ; R75 := R75["mTargetVal"]
1250 [-]: SUB       R75 R73 R75  ; R75 := R73 - R75
1251 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1252 [-]: LT        1 K133 R74   ; if 0.0099999997764826 < R74 then PC := 1255
1253 [-]: JMP       1255         ; PC := 1255
1254 [-]: MOVE      R74 R0       ; R74 := R0
1255 [-]: MOVE      R74 R1       ; R74 := R1
1256 [-]: TEST      R74 0        ; if not R74 then PC := 1280
1257 [-]: JMP       1280         ; PC := 1280
1258 [-]: GETGLOBAL R75 K59      ; R75 := 0x400E7765
1259 [-]: GETUPVAL  R76 U38      ; R76 := U38
1260 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1261 [-]: TEST      R75 1        ; if R75 then PC := 1280
1262 [-]: JMP       1280         ; PC := 1280
1263 [-]: GETUPVAL  R75 U39      ; R75 := U39
1264 [-]: GETTABLE  R75 R75 K134 ; R75 := R75["TransitioningOut"]
1265 [-]: TEST      R75 1        ; if R75 then PC := 1280
1266 [-]: JMP       1280         ; PC := 1280
1267 [-]: GETUPVAL  R75 U38      ; R75 := U38
1268 [-]: SELF      R75 R75 K83  ; R76 := R75; R75 := R75["0xEC183DDC"]
1269 [-]: GETGLOBAL R77 K135     ; R77 := 0xE0C881B4
1270 [-]: GETUPVAL  R78 U37      ; R78 := U37
1271 [-]: GETTABLE  R78 R78 K136 ; R78 := R78["Previous"]
1272 [-]: GETUPVAL  R79 U37      ; R79 := U37
1273 [-]: GETTABLE  R79 R79 K137 ; R79 := R79["Target"]
1274 [-]: GETUPVAL  R80 U37      ; R80 := U37
1275 [-]: GETTABLE  R80 R80 K129 ; R80 := R80["Prop"]
1276 [-]: SELF      R80 R80 K5   ; R81 := R80; R80 := R80["0xC4E503B0"]
1277 [-]: CALL      R80 2 0      ; R80,... := R80(R81)
1278 [-]: CALL      R77 0 0      ; R77,... := R77(R78,...)
1279 [-]: CALL      R75 0 1      ; R75(R76,...)
1280 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5485
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 33
  3 [-]: JMP       33           ; PC := 33
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mControlDown"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 11 [-]: TEST      R0 0         ; if not R0 then PC := 33
 12 [-]: JMP       33           ; PC := 33
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0xB09F286F
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: GETUPVAL  R3 U4        ; R3 := U4
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: LT        0 K2 R1      ; if 0.10000000149012 >= R1 then PC := 33
 20 [-]: JMP       33           ; PC := 33
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 24 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD856231D"]
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1E436B2A"]
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: MOVE      R0 R4        ; R0 := R4
 33 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5497
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["IsVisible"] := R0
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
  5 [-]: LOADK     R3 K3        ; R3 := "Reticle"
  6 [-]: LOADK     R4 K4        ; R4 := "_visible"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xF81722A2"]
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: LOADK     R4 K6        ; R4 := 48
 15 [-]: LOADK     R5 K7        ; R5 := 32
 16 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 17 [-]: LOADK     R3 K8        ; R3 := 1
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: LOADK     R5 K8        ; R5 := 1
 20 [-]: FORPREP   R3 48        ; R3 -= R5; PC := 48
 21 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 22 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 23 [-]: GETUPVAL  R9 U1        ; R9 := U1
 24 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 25 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 26 [-]: LOADK     R10 K11      ; R10 := "Btn"
 27 [-]: LOADK     R11 K12      ; R11 := "_width"
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 30 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 31 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 32 [-]: GETUPVAL  R9 U1        ; R9 := U1
 33 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 34 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 35 [-]: LOADK     R10 K11      ; R10 := "Btn"
 36 [-]: LOADK     R11 K13      ; R11 := "_height"
 37 [-]: MOVE      R12 R2       ; R12 := R2
 38 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 39 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 40 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 43 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 44 [-]: LOADK     R10 K14      ; R10 := "Name"
 45 [-]: LOADK     R11 K15      ; R11 := "enabled"
 46 [-]: MOVE      R12 R0       ; R12 := R0
 47 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 48 [-]: FORLOOP   R3 21        ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
 49 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 5509
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 40
  5 [-]: JMP       40           ; PC := 40
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["pos"]
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["x"]
 12 [-]: LT        1 R2 K4      ; if R2 < 0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: GETGLOBAL R3 K5        ; R3 := _T
 17 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["radialSector"]
 18 [-]: SETTABLE  R3 K6 R4     ; R3["JunctionTasksUIRadialSector"] := R4
 19 [-]: GETGLOBAL R3 K5        ; R3 := _T
 20 [-]: SETTABLE  R3 K8 R1     ; R3["JunctionTasksInstant"] := R1
 21 [-]: GETGLOBAL R3 K9        ; R3 := gFlashMgr
 22 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x24FF386"]
 23 [-]: GETGLOBAL R5 K11       ; R5 := junctionTasksMovie
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0x163B749C"]
 28 [-]: MOVE      R5 R0        ; R5 := R0
 29 [-]: CALL      R3 3 1       ; R3(R4,R5)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x458F27A9"]
 32 [-]: LOADK     R5 K14       ; R5 := "SetRightAligned"
 33 [-]: GETUPVAL  R6 U2        ; R6 := U2
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xF81722A2"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: LOADK     R8 K16       ; R8 := "true"
 37 [-]: LOADK     R9 K17       ; R9 := "false"
 38 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 39 [-]: CALL      R3 0 1       ; R3(R4,...)
 40 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 5521
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MovieInst"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MovieInst"]
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K3        ; R2 := "ForceClose"
 11 [-]: LOADK     R3 K4        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: LOADK     R0 K5        ; R0 := 1
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: LEN       R1 R1        ; R1 := # R1
 16 [-]: LOADK     R2 K5        ; R2 := 1
 17 [-]: FORPREP   R0 50        ; R0 -= R2; PC := 50
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 20 [-]: GETTABLE  R5 R4 K6     ; R5 := R4["locked"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["forceHover"]
 24 [-]: JMP       27           ; PC := 27
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 28 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x1C19D966"]
 29 [-]: GETTABLE  R8 R4 K10    ; R8 := R4["clipName"]
 30 [-]: LOADK     R9 K11       ; R9 := "enabled"
 31 [-]: TESTSET   R10 R5 0     ; if not R5 then PC := 49 else R10 := R5
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETGLOBAL R10 K12      ; R10 := _T
 34 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 35 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: GETTABLE  R10 R4 K15   ; R10 := R4["radialSector"]
 38 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETGLOBAL R10 K12      ; R10 := _T
 41 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 42 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["baseNodeName"]
 43 [-]: GETTABLE  R11 R4 K15   ; R11 := R4["radialSector"]
 44 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["name"]
 45 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: MOVE      R10 R0       ; R10 := R0
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 50 [-]: FORLOOP   R0 18        ; R0 += R2; if R0 <= R1 then begin PC := 18; R3 := R0 end
 51 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 5534
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xCD4B74A5"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: GETGLOBAL R5 K1        ; R5 := 0x221C9700
  6 [-]: LOADK     R6 K2        ; R6 := 0
  7 [-]: LOADK     R7 K2        ; R7 := 0
  8 [-]: LOADK     R8 K3        ; R8 := 1
  9 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 10 [-]: GETUPVAL  R6 U1        ; R6 := U1
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["voidDecoData"]
 12 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[1]
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["pos"]
 14 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["z"]
 15 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 16 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 17 [-]: LOADK     R4 K3        ; R4 := 1
 18 [-]: GETUPVAL  R5 U1        ; R5 := U1
 19 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["voidDecoData"]
 20 [-]: LEN       R5 R5        ; R5 := # R5
 21 [-]: LOADK     R6 K3        ; R6 := 1
 22 [-]: FORPREP   R4 46        ; R4 -= R6; PC := 46
 23 [-]: GETUPVAL  R8 U1        ; R8 := U1
 24 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["voidDecoData"]
 25 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 26 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["BMin"]
 27 [-]: SUB       R8 R2 R8     ; R8 := R2 - R8
 28 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["x"]
 29 [-]: GETUPVAL  R10 U1       ; R10 := U1
 30 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["voidDecoData"]
 31 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 32 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["BScale"]
 33 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["x"]
 34 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 35 [-]: SUB       R9 K3 R9     ; R9 := 1 - R9
 36 [-]: SETTABLE  R8 K8 R9     ; R8["x"] := R9
 37 [-]: GETTABLE  R9 R8 K10    ; R9 := R8["y"]
 38 [-]: GETUPVAL  R10 U1       ; R10 := U1
 39 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["voidDecoData"]
 40 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 41 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["BScale"]
 42 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["y"]
 43 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 44 [-]: SETTABLE  R8 K10 R9    ; R8["y"] := R9
 45 [-]: SETTABLE  R3 R7 R8     ; R3[R7] := R8
 46 [-]: FORLOOP   R4 23        ; R4 += R6; if R4 <= R5 then begin PC := 23; R7 := R4 end
 47 [-]: RETURN    R3 2         ; return R3
 48 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5548
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: LOADK     R5 K0        ; R5 := 1
  2 [-]: LEN       R6 R0        ; R6 := # R0
  3 [-]: LOADK     R7 K0        ; R7 := 1
  4 [-]: FORPREP   R5 32        ; R5 -= R7; PC := 32
  5 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
  6 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["x"]
  7 [-]: GETTABLE  R10 R0 R8    ; R10 := R0[R8]
  8 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["y"]
  9 [-]: EQ        0 R8 K3      ; if R8 ~= 2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: UNM       R9 R9        ; R9 := - R9
 12 [-]: UNM       R10 R10      ; R10 := - R10
 13 [-]: JMP       15           ; PC := 15
 14 [-]: UNM       R9 R9        ; R9 := - R9
 15 [-]: GETUPVAL  R11 U0       ; R11 := U0
 16 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["voidDecos"]
 17 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
 18 [-]: SELF      R11 R11 K5   ; R12 := R11; R11 := R11["0xD124E361"]
 19 [-]: GETUPVAL  R13 U0       ; R13 := U0
 20 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["uvHoles"]
 21 [-]: GETTABLE  R13 R13 R1   ; R13 := R13[R1]
 22 [-]: MOVE      R14 R9       ; R14 := R9
 23 [-]: MOVE      R15 R10      ; R15 := R10
 24 [-]: GETGLOBAL R16 K7       ; R16 := 0x93034B55
 25 [-]: LOADK     R17 K8       ; R17 := 0.012500000186265
 26 [-]: LOADK     R18 K9       ; R18 := 0.050000000745058
 27 [-]: MOVE      R19 R2       ; R19 := R2
 28 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 29 [-]: MUL       R16 R16 R3   ; R16 := R16 * R3
 30 [-]: MOVE      R17 R4       ; R17 := R4
 31 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
 32 [-]: FORLOOP   R5 5         ; R5 += R7; if R5 <= R6 then begin PC := 5; R8 := R5 end
 33 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5564
; #Upvalues:       55
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  77

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6306558E
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  4 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x80D6B1A"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8C7099E9"]
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: CALL      R1 3 1       ; R1(R2,R3)
 22 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["sky"]
 25 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Zone"]
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 29
 28 [-]: JMP       29           ; PC := 29
 29 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["voidDecos"]
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: TEST      R1 1         ; if R1 then PC := 300
 34 [-]: JMP       300          ; PC := 300
 35 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 36 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 0         ; if not R1 then PC := 300
 39 [-]: JMP       300          ; PC := 300
 40 [-]: GETGLOBAL R1 K9        ; R1 := 0x994A1A7
 41 [-]: GETUPVAL  R2 U3        ; R2 := U3
 42 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MIN_ZOOM"]
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MAX_ZOOM"]
 45 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 46 [-]: GETGLOBAL R2 K12       ; R2 := 0x6374FD98
 47 [-]: GETUPVAL  R3 U4        ; R3 := U4
 48 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mCurVal"]
 49 [-]: GETTABLE  R4 R1 K14    ; R4 := R1["minValue"]
 50 [-]: GETTABLE  R5 R1 K15    ; R5 := R1["maxValue"]
 51 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 52 [-]: SELF      R3 R1 K16    ; R4 := R1; R3 := R1["0x3B43F25"]
 53 [-]: MOVE      R5 R2        ; R5 := R2
 54 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 55 [-]: MOVE      R2 R3        ; R2 := R3
 56 [-]: MUL       R2 R2 R2     ; R2 := R2 * R2
 57 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 58 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x7C1F5A97"]
 59 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 60 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x6DA72501"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: GETGLOBAL R4 K18       ; R4 := 0x221C9700
 63 [-]: LOADK     R5 K19       ; R5 := 0
 64 [-]: LOADK     R6 K19       ; R6 := 0
 65 [-]: LOADK     R7 K19       ; R7 := 0
 66 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 67 [-]: SUB       R4 R4 R3     ; R4 := R4 - R3
 68 [-]: GETGLOBAL R5 K20       ; R5 := 0x458357BC
 69 [-]: MOVE      R6 R4        ; R6 := R4
 70 [-]: CALL      R5 2 1       ; R5(R6)
 71 [-]: GETUPVAL  R5 U2        ; R5 := U2
 72 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0xC34F8067"]
 73 [-]: MOVE      R6 R3        ; R6 := R3
 74 [-]: MOVE      R7 R4        ; R7 := R4
 75 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 76 [-]: LOADK     R6 K22       ; R6 := 1
 77 [-]: GETUPVAL  R7 U2        ; R7 := U2
 78 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["0x1A212F7"]
 79 [-]: MOVE      R8 R5        ; R8 := R5
 80 [-]: MOVE      R9 R6        ; R9 := R6
 81 [-]: MOVE      R10 R2       ; R10 := R2
 82 [-]: LOADK     R11 K24      ; R11 := 3
 83 [-]: LOADK     R12 K25      ; R12 := 0.029999999329448
 84 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 85 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
 86 [-]: GETUPVAL  R7 U5        ; R7 := U5
 87 [-]: TEST      R7 1         ; if R7 then PC := 144
 88 [-]: JMP       144          ; PC := 144
 89 [-]: LOADK     R7 K22       ; R7 := 1
 90 [-]: GETUPVAL  R8 U6        ; R8 := U6
 91 [-]: LEN       R8 R8        ; R8 := # R8
 92 [-]: LOADK     R9 K22       ; R9 := 1
 93 [-]: FORPREP   R7 142       ; R7 -= R9; PC := 142
 94 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 95 [-]: GETUPVAL  R12 U7       ; R12 := U7
 96 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 97 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 98 [-]: TEST      R11 1        ; if R11 then PC := 142
 99 [-]: JMP       142          ; PC := 142
100 [-]: GETUPVAL  R11 U7       ; R11 := U7
101 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
102 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11["0x8C1ACCEF"]
103 [-]: CALL      R11 2 2      ; R11 := R11(R12)
104 [-]: TEST      R11 0        ; if not R11 then PC := 142
105 [-]: JMP       142          ; PC := 142
106 [-]: GETGLOBAL R11 K27      ; R11 := string
107 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0xDE44F664"]
108 [-]: GETUPVAL  R12 U6       ; R12 := U6
109 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
110 [-]: GETTABLE  R12 R12 K29  ; R12 := R12["name"]
111 [-]: LOADK     R13 K30      ; R13 := "Space"
112 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
113 [-]: TEST      R11 1        ; if R11 then PC := 142
114 [-]: JMP       142          ; PC := 142
115 [-]: GETUPVAL  R11 U6       ; R11 := U6
116 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
117 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["pos"]
118 [-]: SUB       R4 R11 R3    ; R4 := R11 - R3
119 [-]: GETGLOBAL R11 K20      ; R11 := 0x458357BC
120 [-]: MOVE      R12 R4       ; R12 := R4
121 [-]: CALL      R11 2 1      ; R11(R12)
122 [-]: GETUPVAL  R11 U2       ; R11 := U2
123 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xC34F8067"]
124 [-]: MOVE      R12 R3       ; R12 := R3
125 [-]: MOVE      R13 R4       ; R13 := R4
126 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
127 [-]: MOVE      R5 R11       ; R5 := R11
128 [-]: GETUPVAL  R11 U2       ; R11 := U2
129 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["uvHoles"]
130 [-]: LEN       R11 R11      ; R11 := # R11
131 [-]: LE        0 R6 R11     ; if R6 > R11 then PC := 142
132 [-]: JMP       142          ; PC := 142
133 [-]: GETUPVAL  R11 U2       ; R11 := U2
134 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0x1A212F7"]
135 [-]: MOVE      R12 R5       ; R12 := R5
136 [-]: MOVE      R13 R6       ; R13 := R6
137 [-]: MOVE      R14 R2       ; R14 := R2
138 [-]: LOADK     R15 K33      ; R15 := 1.2999999523163
139 [-]: LOADK     R16 K34      ; R16 := 0.050000000745058
140 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
141 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
142 [-]: FORLOOP   R7 94        ; R7 += R9; if R7 <= R8 then begin PC := 94; R10 := R7 end
143 [-]: JMP       274          ; PC := 274
144 [-]: GETGLOBAL R11 K27      ; R11 := string
145 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0xDE44F664"]
146 [-]: GETUPVAL  R12 U5       ; R12 := U5
147 [-]: GETTABLE  R12 R12 K29  ; R12 := R12["name"]
148 [-]: LOADK     R13 K30      ; R13 := "Space"
149 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
150 [-]: TEST      R11 1        ; if R11 then PC := 178
151 [-]: JMP       178          ; PC := 178
152 [-]: GETUPVAL  R11 U5       ; R11 := U5
153 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["pos"]
154 [-]: SUB       R4 R11 R3    ; R4 := R11 - R3
155 [-]: GETGLOBAL R11 K20      ; R11 := 0x458357BC
156 [-]: MOVE      R12 R4       ; R12 := R4
157 [-]: CALL      R11 2 1      ; R11(R12)
158 [-]: GETUPVAL  R11 U2       ; R11 := U2
159 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xC34F8067"]
160 [-]: MOVE      R12 R3       ; R12 := R3
161 [-]: MOVE      R13 R4       ; R13 := R4
162 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
163 [-]: MOVE      R5 R11       ; R5 := R11
164 [-]: GETUPVAL  R11 U2       ; R11 := U2
165 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["uvHoles"]
166 [-]: LEN       R11 R11      ; R11 := # R11
167 [-]: LE        0 R6 R11     ; if R6 > R11 then PC := 178
168 [-]: JMP       178          ; PC := 178
169 [-]: GETUPVAL  R11 U2       ; R11 := U2
170 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0x1A212F7"]
171 [-]: MOVE      R12 R5       ; R12 := R5
172 [-]: MOVE      R13 R6       ; R13 := R6
173 [-]: MOVE      R14 R2       ; R14 := R2
174 [-]: LOADK     R15 K33      ; R15 := 1.2999999523163
175 [-]: LOADK     R16 K34      ; R16 := 0.050000000745058
176 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
177 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
178 [-]: LOADK     R11 K22      ; R11 := 1
179 [-]: GETUPVAL  R12 U8       ; R12 := U8
180 [-]: LEN       R12 R12      ; R12 := # R12
181 [-]: LOADK     R13 K22      ; R13 := 1
182 [-]: FORPREP   R11 273      ; R11 -= R13; PC := 273
183 [-]: GETUPVAL  R15 U8       ; R15 := U8
184 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
185 [-]: GETUPVAL  R16 U9       ; R16 := U9
186 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["0x96C3A0A7"]
187 [-]: GETTABLE  R17 R15 K36  ; R17 := R15["radialSector"]
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: TEST      R16 0        ; if not R16 then PC := 216
190 [-]: JMP       216          ; PC := 216
191 [-]: GETUPVAL  R16 U10      ; R16 := U10
192 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["SentientFx"]
193 [-]: GETTABLE  R16 R16 K22  ; R16 := R16[1]
194 [-]: EQ        1 R16 K38    ; if R16 == nil then PC := 204
195 [-]: JMP       204          ; PC := 204
196 [-]: GETGLOBAL R16 K1       ; R16 := 0x400E7765
197 [-]: GETUPVAL  R17 U10      ; R17 := U10
198 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["SentientFx"]
199 [-]: GETTABLE  R17 R17 K22  ; R17 := R17[1]
200 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["mInstance"]
201 [-]: CALL      R16 2 2      ; R16 := R16(R17)
202 [-]: TEST      R16 0        ; if not R16 then PC := 216
203 [-]: JMP       216          ; PC := 216
204 [-]: GETUPVAL  R16 U10      ; R16 := U10
205 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["SentientFx"]
206 [-]: GETUPVAL  R17 U11      ; R17 := U11
207 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xAC19E744"]
208 [-]: GETGLOBAL R18 K2       ; R18 := mMovie
209 [-]: GETTABLE  R19 R15 K41  ; R19 := R15["clipName"]
210 [-]: GETGLOBAL R20 K42      ; R20 := sentientNodeEffect
211 [-]: LOADK     R21 K19      ; R21 := 0
212 [-]: LOADK     R22 K19      ; R22 := 0
213 [-]: GETGLOBAL R23 K43      ; R23 := gBackgroundRegion
214 [-]: CALL      R17 7 2      ; R17 := R17(R18,R19,R20,R21,R22,R23)
215 [-]: SETTABLE  R16 K22 R17  ; R16[1] := R17
216 [-]: GETUPVAL  R16 U6       ; R16 := U6
217 [-]: GETTABLE  R17 R15 K36  ; R17 := R15["radialSector"]
218 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["region"]
219 [-]: ADD       R17 R17 K22  ; R17 := R17 + 1
220 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
221 [-]: GETUPVAL  R17 U5       ; R17 := U5
222 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 273
223 [-]: JMP       273          ; PC := 273
224 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
225 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
226 [-]: CALL      R17 2 2      ; R17 := R17(R18)
227 [-]: TEST      R17 1        ; if R17 then PC := 273
228 [-]: JMP       273          ; PC := 273
229 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
230 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
231 [-]: GETTABLE  R18 R18 K39  ; R18 := R18["mInstance"]
232 [-]: CALL      R17 2 2      ; R17 := R17(R18)
233 [-]: TEST      R17 1        ; if R17 then PC := 273
234 [-]: JMP       273          ; PC := 273
235 [-]: GETUPVAL  R17 U2       ; R17 := U2
236 [-]: GETTABLE  R17 R17 K32  ; R17 := R17["uvHoles"]
237 [-]: LEN       R17 R17      ; R17 := # R17
238 [-]: LE        0 R6 R17     ; if R6 > R17 then PC := 273
239 [-]: JMP       273          ; PC := 273
240 [-]: GETTABLE  R17 R15 K45  ; R17 := R15["deco"]
241 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["mInstance"]
242 [-]: SELF      R17 R17 K46  ; R18 := R17; R17 := R17["0xECB5B892"]
243 [-]: CALL      R17 2 2      ; R17 := R17(R18)
244 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
245 [-]: GETTABLE  R18 R18 K47  ; R18 := R18["mScale"]
246 [-]: DIV       R17 R17 R18  ; R17 := R17 / R18
247 [-]: GETTABLE  R18 R15 K48  ; R18 := R15["position"]
248 [-]: SUB       R4 R18 R3    ; R4 := R18 - R3
249 [-]: GETGLOBAL R18 K20      ; R18 := 0x458357BC
250 [-]: MOVE      R19 R4       ; R19 := R4
251 [-]: CALL      R18 2 1      ; R18(R19)
252 [-]: GETUPVAL  R18 U2       ; R18 := U2
253 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["0xC34F8067"]
254 [-]: MOVE      R19 R3       ; R19 := R3
255 [-]: MOVE      R20 R4       ; R20 := R4
256 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
257 [-]: MOVE      R5 R18       ; R5 := R18
258 [-]: LOADK     R18 K22      ; R18 := 1
259 [-]: LEN       R19 R5       ; R19 := # R5
260 [-]: LOADK     R20 K22      ; R20 := 1
261 [-]: FORPREP   R18 271      ; R18 -= R20; PC := 271
262 [-]: GETUPVAL  R22 U2       ; R22 := U2
263 [-]: GETTABLE  R22 R22 K23  ; R22 := R22["0x1A212F7"]
264 [-]: MOVE      R23 R5       ; R23 := R5
265 [-]: MOVE      R24 R6       ; R24 := R6
266 [-]: MOVE      R25 R2       ; R25 := R2
267 [-]: MUL       R26 R17 K34  ; R26 := R17 * 0.050000000745058
268 [-]: ADD       R26 K49 R26  ; R26 := 0.10000000149012 + R26
269 [-]: LOADK     R27 K50      ; R27 := 0.014999999664724
270 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
271 [-]: FORLOOP   R18 262      ; R18 += R20; if R18 <= R19 then begin PC := 262; R21 := R18 end
272 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
273 [-]: FORLOOP   R11 183      ; R11 += R13; if R11 <= R12 then begin PC := 183; R14 := R11 end
274 [-]: MOVE      R22 R6       ; R22 := R6
275 [-]: GETUPVAL  R23 U2       ; R23 := U2
276 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["uvHoles"]
277 [-]: LEN       R23 R23      ; R23 := # R23
278 [-]: LOADK     R24 K22      ; R24 := 1
279 [-]: FORPREP   R22 299      ; R22 -= R24; PC := 299
280 [-]: LOADK     R26 K22      ; R26 := 1
281 [-]: GETUPVAL  R27 U2       ; R27 := U2
282 [-]: GETTABLE  R27 R27 K7   ; R27 := R27["voidDecos"]
283 [-]: LEN       R27 R27      ; R27 := # R27
284 [-]: LOADK     R28 K22      ; R28 := 1
285 [-]: FORPREP   R26 298      ; R26 -= R28; PC := 298
286 [-]: GETUPVAL  R30 U2       ; R30 := U2
287 [-]: GETTABLE  R30 R30 K7   ; R30 := R30["voidDecos"]
288 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
289 [-]: SELF      R30 R30 K51  ; R31 := R30; R30 := R30["0xD124E361"]
290 [-]: GETUPVAL  R32 U2       ; R32 := U2
291 [-]: GETTABLE  R32 R32 K32  ; R32 := R32["uvHoles"]
292 [-]: GETTABLE  R32 R32 R25  ; R32 := R32[R25]
293 [-]: LOADK     R33 K19      ; R33 := 0
294 [-]: LOADK     R34 K19      ; R34 := 0
295 [-]: LOADK     R35 K19      ; R35 := 0
296 [-]: LOADK     R36 K19      ; R36 := 0
297 [-]: CALL      R30 7 1      ; R30(R31,R32,R33,R34,R35,R36)
298 [-]: FORLOOP   R26 286      ; R26 += R28; if R26 <= R27 then begin PC := 286; R29 := R26 end
299 [-]: FORLOOP   R22 280      ; R22 += R24; if R22 <= R23 then begin PC := 280; R25 := R22 end
300 [-]: GETGLOBAL R30 K1       ; R30 := 0x400E7765
301 [-]: GETUPVAL  R31 U12      ; R31 := U12
302 [-]: CALL      R30 2 2      ; R30 := R30(R31)
303 [-]: TEST      R30 1        ; if R30 then PC := 329
304 [-]: JMP       329          ; PC := 329
305 [-]: LOADK     R30 K22      ; R30 := 1
306 [-]: LOADK     R31 K24      ; R31 := 3
307 [-]: LOADK     R32 K22      ; R32 := 1
308 [-]: FORPREP   R30 314      ; R30 -= R32; PC := 314
309 [-]: GETUPVAL  R34 U13      ; R34 := U13
310 [-]: GETTABLE  R34 R34 R33  ; R34 := R34[R33]
311 [-]: SELF      R34 R34 K4   ; R35 := R34; R34 := R34["0x8C7099E9"]
312 [-]: MOVE      R36 R0       ; R36 := R0
313 [-]: CALL      R34 3 1      ; R34(R35,R36)
314 [-]: FORLOOP   R30 309      ; R30 += R32; if R30 <= R31 then begin PC := 309; R33 := R30 end
315 [-]: GETUPVAL  R34 U12      ; R34 := U12
316 [-]: SELF      R34 R34 K52  ; R35 := R34; R34 := R34["0x8FD31352"]
317 [-]: GETGLOBAL R36 K53      ; R36 := 0xB5A59043
318 [-]: GETUPVAL  R37 U13      ; R37 := U13
319 [-]: GETTABLE  R37 R37 K22  ; R37 := R37[1]
320 [-]: GETTABLE  R37 R37 K13  ; R37 := R37["mCurVal"]
321 [-]: GETUPVAL  R38 U13      ; R38 := U13
322 [-]: GETTABLE  R38 R38 K54  ; R38 := R38[2]
323 [-]: GETTABLE  R38 R38 K13  ; R38 := R38["mCurVal"]
324 [-]: GETUPVAL  R39 U13      ; R39 := U13
325 [-]: GETTABLE  R39 R39 K24  ; R39 := R39[3]
326 [-]: GETTABLE  R39 R39 K13  ; R39 := R39["mCurVal"]
327 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
328 [-]: CALL      R34 0 1      ; R34(R35,...)
329 [-]: LOADNIL   R34 R34      ; R34 := nil
330 [-]: MOVE      R34 R14      ; R34 := R14
331 [-]: GETGLOBAL R34 K1       ; R34 := 0x400E7765
332 [-]: GETUPVAL  R35 U15      ; R35 := U15
333 [-]: CALL      R34 2 2      ; R34 := R34(R35)
334 [-]: TEST      R34 1        ; if R34 then PC := 349
335 [-]: JMP       349          ; PC := 349
336 [-]: GETUPVAL  R34 U15      ; R34 := U15
337 [-]: SELF      R34 R34 K55  ; R35 := R34; R34 := R34["0x458F27A9"]
338 [-]: LOADK     R36 K56      ; R36 := "IsBrowsingForDrone"
339 [-]: LOADK     R37 K57      ; R37 := ""
340 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
341 [-]: TEST      R34 1        ; if R34 then PC := 351
342 [-]: JMP       351          ; PC := 351
343 [-]: GETUPVAL  R34 U15      ; R34 := U15
344 [-]: SELF      R34 R34 K55  ; R35 := R34; R34 := R34["0x458F27A9"]
345 [-]: LOADK     R36 K58      ; R36 := "IsViewingExtractAllManifest"
346 [-]: LOADK     R37 K57      ; R37 := ""
347 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
348 [-]: JMP       351          ; PC := 351
349 [-]: MOVE      R34 R0       ; R34 := R0
350 [-]: MOVE      R34 R1       ; R34 := R1
351 [-]: GETUPVAL  R35 U16      ; R35 := U16
352 [-]: EQ        1 R34 R35    ; if R34 == R35 then PC := 368
353 [-]: JMP       368          ; PC := 368
354 [-]: GETGLOBAL R35 K1       ; R35 := 0x400E7765
355 [-]: GETUPVAL  R36 U17      ; R36 := U17
356 [-]: GETTABLE  R36 R36 K59  ; R36 := R36["Movie"]
357 [-]: CALL      R35 2 2      ; R35 := R35(R36)
358 [-]: TEST      R35 1        ; if R35 then PC := 368
359 [-]: JMP       368          ; PC := 368
360 [-]: GETUPVAL  R35 U17      ; R35 := U17
361 [-]: GETTABLE  R35 R35 K59  ; R35 := R35["Movie"]
362 [-]: SELF      R35 R35 K55  ; R36 := R35; R35 := R35["0x458F27A9"]
363 [-]: LOADK     R37 K60      ; R37 := "ItemBrowsing"
364 [-]: GETGLOBAL R38 K61      ; R38 := 0x9FAED6BC
365 [-]: MOVE      R39 R34      ; R39 := R34
366 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
367 [-]: CALL      R35 0 1      ; R35(R36,...)
368 [-]: MOVE      R34 R16      ; R34 := R16
369 [-]: GETGLOBAL R35 K62      ; R35 := _T
370 [-]: GETTABLE  R35 R35 K63  ; R35 := R35["HideSquadOverlay"]
371 [-]: EQ        1 R35 K38    ; if R35 == nil then PC := 378
372 [-]: JMP       378          ; PC := 378
373 [-]: GETGLOBAL R35 K62      ; R35 := _T
374 [-]: GETTABLE  R35 R35 K63  ; R35 := R35["HideSquadOverlay"]
375 [-]: LE        1 R35 K19    ; if R35 <= 0 then PC := 378
376 [-]: JMP       378          ; PC := 378
377 [-]: MOVE      R35 R0       ; R35 := R0
378 [-]: MOVE      R35 R1       ; R35 := R1
379 [-]: GETGLOBAL R36 K2       ; R36 := mMovie
380 [-]: SELF      R36 R36 K64  ; R37 := R36; R36 := R36["0x625791A8"]
381 [-]: GETUPVAL  R38 U16      ; R38 := U16
382 [-]: TEST      R38 1        ; if R38 then PC := 402
383 [-]: JMP       402          ; PC := 402
384 [-]: GETUPVAL  R38 U17      ; R38 := U17
385 [-]: GETTABLE  R38 R38 K65  ; R38 := R38["DioOpen"]
386 [-]: TEST      R38 1        ; if R38 then PC := 402
387 [-]: JMP       402          ; PC := 402
388 [-]: GETGLOBAL R38 K62      ; R38 := _T
389 [-]: GETTABLE  R38 R38 K66  ; R38 := R38["BackgroundVisible"]
390 [-]: TEST      R38 1        ; if R38 then PC := 402
391 [-]: JMP       402          ; PC := 402
392 [-]: GETGLOBAL R38 K62      ; R38 := _T
393 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["HideMapRedux"]
394 [-]: EQ        1 R38 K38    ; if R38 == nil then PC := 400
395 [-]: JMP       400          ; PC := 400
396 [-]: GETGLOBAL R38 K62      ; R38 := _T
397 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["HideMapRedux"]
398 [-]: EQ        0 R38 K19    ; if R38 ~= 0 then PC := 402
399 [-]: JMP       402          ; PC := 402
400 [-]: MOVE      R38 R35      ; R38 := R35
401 [-]: JMP       404          ; PC := 404
402 [-]: MOVE      R38 R0       ; R38 := R0
403 [-]: MOVE      R38 R1       ; R38 := R1
404 [-]: CALL      R36 3 1      ; R36(R37,R38)
405 [-]: GETUPVAL  R36 U18      ; R36 := U18
406 [-]: CALL      R36 1 1      ; R36()
407 [-]: GETUPVAL  R36 U19      ; R36 := U19
408 [-]: TEST      R36 1        ; if R36 then PC := 523
409 [-]: JMP       523          ; PC := 523
410 [-]: GETGLOBAL R36 K62      ; R36 := _T
411 [-]: GETTABLE  R36 R36 K68  ; R36 := R36["DesiredGoToNode"]
412 [-]: TEST      R36 0        ; if not R36 then PC := 501
413 [-]: JMP       501          ; PC := 501
414 [-]: GETGLOBAL R36 K69      ; R36 := 0xEC274B1A
415 [-]: GETGLOBAL R37 K62      ; R37 := _T
416 [-]: GETTABLE  R37 R37 K68  ; R37 := R37["DesiredGoToNode"]
417 [-]: CALL      R36 2 2      ; R36 := R36(R37)
418 [-]: GETUPVAL  R37 U20      ; R37 := U20
419 [-]: GETGLOBAL R38 K61      ; R38 := 0x9FAED6BC
420 [-]: MOVE      R39 R36      ; R39 := R36
421 [-]: CALL      R38 2 2      ; R38 := R38(R39)
422 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
423 [-]: CLOSURE   R38 0        ; R38 := closure(Function #128.1)
424 [-]: GETUPVAL  R0 U21       ; R0 := U21
425 [-]: MOVE      R0 R37       ; R0 := R37
426 [-]: GETUPVAL  R0 U22       ; R0 := U22
427 [-]: GETUPVAL  R0 U23       ; R0 := U23
428 [-]: GETUPVAL  R0 U11       ; R0 := U11
429 [-]: GETUPVAL  R0 U24       ; R0 := U24
430 [-]: GETUPVAL  R0 U0        ; R0 := U0
431 [-]: TEST      R37 0        ; if not R37 then PC := 461
432 [-]: JMP       461          ; PC := 461
433 [-]: GETUPVAL  R39 U6       ; R39 := U6
434 [-]: GETTABLE  R40 R37 K36  ; R40 := R37["radialSector"]
435 [-]: GETTABLE  R40 R40 K44  ; R40 := R40["region"]
436 [-]: ADD       R40 R40 K22  ; R40 := R40 + 1
437 [-]: GETTABLE  R39 R39 R40  ; R39 := R39[R40]
438 [-]: GETUPVAL  R40 U25      ; R40 := U25
439 [-]: GETTABLE  R41 R37 K36  ; R41 := R37["radialSector"]
440 [-]: GETTABLE  R41 R41 K44  ; R41 := R41["region"]
441 [-]: ADD       R41 R41 K22  ; R41 := R41 + 1
442 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
443 [-]: TEST      R40 0        ; if not R40 then PC := 448
444 [-]: JMP       448          ; PC := 448
445 [-]: MOVE      R40 R38      ; R40 := R38
446 [-]: CALL      R40 1 1      ; R40()
447 [-]: JMP       497          ; PC := 497
448 [-]: GETUPVAL  R40 U5       ; R40 := U5
449 [-]: TEST      R40 0        ; if not R40 then PC := 456
450 [-]: JMP       456          ; PC := 456
451 [-]: GETUPVAL  R40 U26      ; R40 := U26
452 [-]: MOVE      R41 R39      ; R41 := R39
453 [-]: MOVE      R42 R38      ; R42 := R38
454 [-]: CALL      R40 3 1      ; R40(R41,R42)
455 [-]: JMP       497          ; PC := 497
456 [-]: GETUPVAL  R40 U27      ; R40 := U27
457 [-]: MOVE      R41 R39      ; R41 := R39
458 [-]: MOVE      R42 R38      ; R42 := R38
459 [-]: CALL      R40 3 1      ; R40(R41,R42)
460 [-]: JMP       497          ; PC := 497
461 [-]: GETUPVAL  R40 U28      ; R40 := U28
462 [-]: GETTABLE  R40 R40 K70  ; R40 := R40["SANCTUARY_ONSLAUGHT_NODE"]
463 [-]: EQ        1 R36 R40    ; if R36 == R40 then PC := 469
464 [-]: JMP       469          ; PC := 469
465 [-]: GETUPVAL  R40 U28      ; R40 := U28
466 [-]: GETTABLE  R40 R40 K71  ; R40 := R40["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
467 [-]: EQ        0 R36 R40    ; if R36 ~= R40 then PC := 479
468 [-]: JMP       479          ; PC := 479
469 [-]: GETUPVAL  R40 U28      ; R40 := U28
470 [-]: GETTABLE  R40 R40 K72  ; R40 := R40["0x2C74584B"]
471 [-]: GETUPVAL  R41 U28      ; R41 := U28
472 [-]: GETTABLE  R41 R41 K71  ; R41 := R41["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
473 [-]: EQ        1 R36 R41    ; if R36 == R41 then PC := 476
474 [-]: JMP       476          ; PC := 476
475 [-]: MOVE      R41 R0       ; R41 := R0
476 [-]: MOVE      R41 R1       ; R41 := R1
477 [-]: CALL      R40 2 1      ; R40(R41)
478 [-]: JMP       497          ; PC := 497
479 [-]: GETGLOBAL R40 K27      ; R40 := string
480 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["0xDE44F664"]
481 [-]: GETGLOBAL R41 K62      ; R41 := _T
482 [-]: GETTABLE  R41 R41 K68  ; R41 := R41["DesiredGoToNode"]
483 [-]: LOADK     R42 K73      ; R42 := "CrewBattle"
484 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
485 [-]: TEST      R40 0        ; if not R40 then PC := 497
486 [-]: JMP       497          ; PC := 497
487 [-]: GETUPVAL  R40 U2       ; R40 := U2
488 [-]: GETTABLE  R40 R40 K74  ; R40 := R40["Active"]
489 [-]: TEST      R40 1        ; if R40 then PC := 497
490 [-]: JMP       497          ; PC := 497
491 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
492 [-]: SELF      R40 R40 K55  ; R41 := R40; R40 := R40["0x458F27A9"]
493 [-]: LOADK     R42 K75      ; R42 := "ToggleRailJack"
494 [-]: LOADK     R43 K57      ; R43 := ""
495 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
496 [-]: RETURN    R0 1         ; return 
497 [-]: GETGLOBAL R40 K62      ; R40 := _T
498 [-]: SETTABLE  R40 K68 K38  ; R40["DesiredGoToNode"] := nil
499 [-]: CLOSE     R36          ; SAVE R36,...
500 [-]: JMP       523          ; PC := 523
501 [-]: GETGLOBAL R36 K62      ; R36 := _T
502 [-]: GETTABLE  R36 R36 K76  ; R36 := R36["DesiredGoToRegion"]
503 [-]: TEST      R36 0        ; if not R36 then PC := 523
504 [-]: JMP       523          ; PC := 523
505 [-]: GETUPVAL  R36 U5       ; R36 := U5
506 [-]: TEST      R36 0        ; if not R36 then PC := 515
507 [-]: JMP       515          ; PC := 515
508 [-]: GETUPVAL  R36 U26      ; R36 := U26
509 [-]: GETUPVAL  R37 U6       ; R37 := U6
510 [-]: GETGLOBAL R38 K62      ; R38 := _T
511 [-]: GETTABLE  R38 R38 K76  ; R38 := R38["DesiredGoToRegion"]
512 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
513 [-]: CALL      R36 2 1      ; R36(R37)
514 [-]: JMP       521          ; PC := 521
515 [-]: GETUPVAL  R36 U27      ; R36 := U27
516 [-]: GETUPVAL  R37 U6       ; R37 := U6
517 [-]: GETGLOBAL R38 K62      ; R38 := _T
518 [-]: GETTABLE  R38 R38 K76  ; R38 := R38["DesiredGoToRegion"]
519 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
520 [-]: CALL      R36 2 1      ; R36(R37)
521 [-]: GETGLOBAL R36 K62      ; R36 := _T
522 [-]: SETTABLE  R36 K76 K38  ; R36["DesiredGoToRegion"] := nil
523 [-]: GETUPVAL  R36 U29      ; R36 := U29
524 [-]: CALL      R36 1 1      ; R36()
525 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
526 [-]: GETGLOBAL R37 K43      ; R37 := gBackgroundRegion
527 [-]: CALL      R36 2 2      ; R36 := R36(R37)
528 [-]: TEST      R36 0        ; if not R36 then PC := 531
529 [-]: JMP       531          ; PC := 531
530 [-]: RETURN    R0 1         ; return 
531 [-]: GETUPVAL  R36 U30      ; R36 := U30
532 [-]: CALL      R36 1 1      ; R36()
533 [-]: GETUPVAL  R36 U31      ; R36 := U31
534 [-]: CALL      R36 1 1      ; R36()
535 [-]: GETUPVAL  R36 U32      ; R36 := U32
536 [-]: CALL      R36 1 1      ; R36()
537 [-]: GETUPVAL  R36 U33      ; R36 := U33
538 [-]: CALL      R36 1 1      ; R36()
539 [-]: GETGLOBAL R36 K62      ; R36 := _T
540 [-]: GETTABLE  R36 R36 K77  ; R36 := R36["WareframeChallenge"]
541 [-]: TEST      R36 0        ; if not R36 then PC := 545
542 [-]: JMP       545          ; PC := 545
543 [-]: GETUPVAL  R36 U34      ; R36 := U34
544 [-]: CALL      R36 1 1      ; R36()
545 [-]: GETUPVAL  R36 U35      ; R36 := U35
546 [-]: TEST      R36 0        ; if not R36 then PC := 556
547 [-]: JMP       556          ; PC := 556
548 [-]: GETUPVAL  R36 U11      ; R36 := U11
549 [-]: GETTABLE  R36 R36 K78  ; R36 := R36["0x1C988750"]
550 [-]: LOADK     R37 K79      ; R37 := "/Lotus/Language/Menu/SoloModeRequired"
551 [-]: LOADK     R38 K80      ; R38 := "ConfirmSoloMission"
552 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
553 [-]: MOVE      R36 R36      ; R36 := R36
554 [-]: MOVE      R36 R0       ; R36 := R0
555 [-]: MOVE      R36 R35      ; R36 := R35
556 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
557 [-]: GETUPVAL  R37 U37      ; R37 := U37
558 [-]: CALL      R36 2 2      ; R36 := R36(R37)
559 [-]: TEST      R36 1        ; if R36 then PC := 712
560 [-]: JMP       712          ; PC := 712
561 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
562 [-]: GETUPVAL  R37 U5       ; R37 := U5
563 [-]: CALL      R36 2 2      ; R36 := R36(R37)
564 [-]: TEST      R36 1        ; if R36 then PC := 712
565 [-]: JMP       712          ; PC := 712
566 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
567 [-]: GETUPVAL  R37 U5       ; R37 := U5
568 [-]: GETTABLE  R37 R37 K81  ; R37 := R37["instance"]
569 [-]: CALL      R36 2 2      ; R36 := R36(R37)
570 [-]: TEST      R36 1        ; if R36 then PC := 712
571 [-]: JMP       712          ; PC := 712
572 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
573 [-]: GETUPVAL  R37 U1       ; R37 := U1
574 [-]: GETTABLE  R37 R37 K82  ; R37 := R37["cameraSpot"]
575 [-]: CALL      R36 2 2      ; R36 := R36(R37)
576 [-]: TEST      R36 1        ; if R36 then PC := 712
577 [-]: JMP       712          ; PC := 712
578 [-]: GETGLOBAL R36 K83      ; R36 := 0x4CDEF9FF
579 [-]: CALL      R36 1 2      ; R36 := R36()
580 [-]: GETUPVAL  R37 U37      ; R37 := U37
581 [-]: SELF      R37 R37 K84  ; R38 := R37; R37 := R37["0xF23A7849"]
582 [-]: CALL      R37 2 2      ; R37 := R37(R38)
583 [-]: GETTABLE  R38 R37 K85  ; R38 := R37["heading"]
584 [-]: UNM       R38 R38      ; R38 := - R38
585 [-]: SETTABLE  R37 K85 R38  ; R37["heading"] := R38
586 [-]: GETTABLE  R38 R37 K86  ; R38 := R37["pitch"]
587 [-]: UNM       R38 R38      ; R38 := - R38
588 [-]: SETTABLE  R37 K86 R38  ; R37["pitch"] := R38
589 [-]: GETUPVAL  R38 U5       ; R38 := U5
590 [-]: GETTABLE  R38 R38 K81  ; R38 := R38["instance"]
591 [-]: SELF      R38 R38 K17  ; R39 := R38; R38 := R38["0x6DA72501"]
592 [-]: CALL      R38 2 2      ; R38 := R38(R39)
593 [-]: GETGLOBAL R39 K87      ; R39 := 0x96BEA6B
594 [-]: MOVE      R40 R38      ; R40 := R38
595 [-]: MOVE      R41 R38      ; R41 := R38
596 [-]: GETUPVAL  R42 U38      ; R42 := U38
597 [-]: GETTABLE  R42 R42 K88  ; R42 := R42["CAMERA_OFFSET"]
598 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
599 [-]: GETGLOBAL R39 K2       ; R39 := mMovie
600 [-]: SELF      R39 R39 K89  ; R40 := R39; R39 := R39["0xBAE5F929"]
601 [-]: CALL      R39 2 2      ; R39 := R39(R40)
602 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
603 [-]: SELF      R40 R40 K90  ; R41 := R40; R40 := R40["0xF595D5E1"]
604 [-]: CALL      R40 2 2      ; R40 := R40(R41)
605 [-]: DIV       R39 R39 R40  ; R39 := R39 / R40
606 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
607 [-]: SELF      R40 R40 K91  ; R41 := R40; R40 := R40["0x6ACD1B87"]
608 [-]: CALL      R40 2 2      ; R40 := R40(R41)
609 [-]: GETGLOBAL R41 K2       ; R41 := mMovie
610 [-]: SELF      R41 R41 K92  ; R42 := R41; R41 := R41["0xEE069D65"]
611 [-]: CALL      R41 2 2      ; R41 := R41(R42)
612 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
613 [-]: GETTABLE  R41 R38 K93  ; R41 := R38["x"]
614 [-]: MUL       R42 R39 K54  ; R42 := R39 * 2
615 [-]: SUB       R42 R42 K22  ; R42 := R42 - 1
616 [-]: GETGLOBAL R43 K94      ; R43 := math
617 [-]: GETTABLE  R43 R43 K95  ; R43 := R43["0xE0F1DBD7"]
618 [-]: GETGLOBAL R44 K94      ; R44 := math
619 [-]: GETTABLE  R44 R44 K96  ; R44 := R44["pi"]
620 [-]: DIV       R44 R44 K97  ; R44 := R44 / 180
621 [-]: MUL       R44 K98 R44  ; R44 := 40 * R44
622 [-]: CALL      R43 2 2      ; R43 := R43(R44)
623 [-]: MUL       R42 R42 R43  ; R42 := R42 * R43
624 [-]: MUL       R42 R42 K99  ; R42 := R42 * 1.5
625 [-]: ADD       R41 R41 R42  ; R41 := R41 + R42
626 [-]: SETTABLE  R38 K93 R41  ; R38["x"] := R41
627 [-]: GETTABLE  R41 R38 K100 ; R41 := R38["y"]
628 [-]: MUL       R42 R40 K54  ; R42 := R40 * 2
629 [-]: SUB       R42 R42 K22  ; R42 := R42 - 1
630 [-]: UNM       R42 R42      ; R42 := - R42
631 [-]: MUL       R42 R42 K101 ; R42 := R42 * 0.75
632 [-]: ADD       R41 R41 R42  ; R41 := R41 + R42
633 [-]: SETTABLE  R38 K100 R41 ; R38["y"] := R41
634 [-]: GETGLOBAL R41 K102     ; R41 := 0x518098BD
635 [-]: MOVE      R42 R38      ; R42 := R38
636 [-]: MOVE      R43 R38      ; R43 := R38
637 [-]: GETUPVAL  R44 U37      ; R44 := U37
638 [-]: SELF      R44 R44 K103 ; R45 := R44; R44 := R44["0xA2B01604"]
639 [-]: GETUPVAL  R46 U39      ; R46 := U39
640 [-]: GETTABLE  R46 R46 K104 ; R46 := R46["GAME_C1_HEAD1"]
641 [-]: CALL      R44 3 0      ; R44,... := R44(R45,R46)
642 [-]: CALL      R41 0 1      ; R41(R42,...)
643 [-]: GETGLOBAL R41 K87      ; R41 := 0x96BEA6B
644 [-]: MOVE      R42 R38      ; R42 := R38
645 [-]: MOVE      R43 R38      ; R43 := R38
646 [-]: GETUPVAL  R44 U1       ; R44 := U1
647 [-]: GETTABLE  R44 R44 K105 ; R44 := R44["skyOrigin"]
648 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
649 [-]: GETUPVAL  R41 U1       ; R41 := U1
650 [-]: GETTABLE  R41 R41 K82  ; R41 := R41["cameraSpot"]
651 [-]: SELF      R41 R41 K17  ; R42 := R41; R41 := R41["0x6DA72501"]
652 [-]: CALL      R41 2 2      ; R41 := R41(R42)
653 [-]: GETUPVAL  R42 U40      ; R42 := U40
654 [-]: GETTABLE  R43 R41 K106 ; R43 := R41["z"]
655 [-]: CALL      R42 2 1      ; R42(R43)
656 [-]: SETTABLE  R41 K106 K107; R41["z"] := -1
657 [-]: GETGLOBAL R42 K102     ; R42 := 0x518098BD
658 [-]: MOVE      R43 R38      ; R43 := R38
659 [-]: MOVE      R44 R38      ; R44 := R38
660 [-]: MOVE      R45 R41      ; R45 := R41
661 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
662 [-]: GETGLOBAL R42 K108     ; R42 := 0x4CBE9A09
663 [-]: MOVE      R43 R38      ; R43 := R38
664 [-]: MOVE      R44 R37      ; R44 := R37
665 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
666 [-]: GETGLOBAL R43 K109     ; R43 := 0xEDD2EBFF
667 [-]: GETGLOBAL R44 K110     ; R44 := ZERO_VECTOR
668 [-]: MOVE      R45 R42      ; R45 := R42
669 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
670 [-]: GETGLOBAL R44 K12      ; R44 := 0x6374FD98
671 [-]: GETTABLE  R45 R43 K85  ; R45 := R43["heading"]
672 [-]: LOADK     R46 K111     ; R46 := -45
673 [-]: LOADK     R47 K112     ; R47 := 45
674 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
675 [-]: SETTABLE  R43 K85 R44  ; R43["heading"] := R44
676 [-]: GETGLOBAL R44 K12      ; R44 := 0x6374FD98
677 [-]: GETTABLE  R45 R43 K86  ; R45 := R43["pitch"]
678 [-]: LOADK     R46 K113     ; R46 := -35
679 [-]: LOADK     R47 K114     ; R47 := 35
680 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
681 [-]: SETTABLE  R43 K86 R44  ; R43["pitch"] := R44
682 [-]: SETTABLE  R43 K115 K19 ; R43["bank"] := 0
683 [-]: GETUPVAL  R44 U41      ; R44 := U41
684 [-]: SELF      R44 R44 K116 ; R45 := R44; R44 := R44["0xDB349344"]
685 [-]: GETTABLE  R46 R43 K85  ; R46 := R43["heading"]
686 [-]: CALL      R44 3 1      ; R44(R45,R46)
687 [-]: GETUPVAL  R44 U42      ; R44 := U42
688 [-]: SELF      R44 R44 K116 ; R45 := R44; R44 := R44["0xDB349344"]
689 [-]: GETTABLE  R46 R43 K86  ; R46 := R43["pitch"]
690 [-]: CALL      R44 3 1      ; R44(R45,R46)
691 [-]: GETUPVAL  R44 U41      ; R44 := U41
692 [-]: SELF      R44 R44 K4   ; R45 := R44; R44 := R44["0x8C7099E9"]
693 [-]: MOVE      R46 R36      ; R46 := R36
694 [-]: CALL      R44 3 1      ; R44(R45,R46)
695 [-]: GETUPVAL  R44 U42      ; R44 := U42
696 [-]: SELF      R44 R44 K4   ; R45 := R44; R44 := R44["0x8C7099E9"]
697 [-]: MOVE      R46 R36      ; R46 := R36
698 [-]: CALL      R44 3 1      ; R44(R45,R46)
699 [-]: GETUPVAL  R44 U41      ; R44 := U41
700 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mCurVal"]
701 [-]: SETTABLE  R43 K85 R44  ; R43["heading"] := R44
702 [-]: GETUPVAL  R44 U42      ; R44 := U42
703 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mCurVal"]
704 [-]: SETTABLE  R43 K86 R44  ; R43["pitch"] := R44
705 [-]: GETUPVAL  R44 U37      ; R44 := U37
706 [-]: SELF      R44 R44 K117 ; R45 := R44; R44 := R44["0x42C8B968"]
707 [-]: GETUPVAL  R46 U39      ; R46 := U39
708 [-]: GETTABLE  R46 R46 K104 ; R46 := R46["GAME_C1_HEAD1"]
709 [-]: MOVE      R47 R43      ; R47 := R43
710 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
711 [-]: JMP       723          ; PC := 723
712 [-]: GETGLOBAL R44 K1       ; R44 := 0x400E7765
713 [-]: GETUPVAL  R45 U37      ; R45 := U37
714 [-]: CALL      R44 2 2      ; R44 := R44(R45)
715 [-]: TEST      R44 1        ; if R44 then PC := 723
716 [-]: JMP       723          ; PC := 723
717 [-]: GETUPVAL  R44 U37      ; R44 := U37
718 [-]: SELF      R44 R44 K117 ; R45 := R44; R44 := R44["0x42C8B968"]
719 [-]: GETUPVAL  R46 U39      ; R46 := U39
720 [-]: GETTABLE  R46 R46 K104 ; R46 := R46["GAME_C1_HEAD1"]
721 [-]: GETGLOBAL R47 K118     ; R47 := ZERO_ROTATION
722 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
723 [-]: GETGLOBAL R44 K62      ; R44 := _T
724 [-]: GETTABLE  R44 R44 K119 ; R44 := R44["SquadCountdownTimer"]
725 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 836
726 [-]: JMP       836          ; PC := 836
727 [-]: GETGLOBAL R44 K62      ; R44 := _T
728 [-]: GETTABLE  R44 R44 K120 ; R44 := R44["gPendingMission"]
729 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 761
730 [-]: JMP       761          ; PC := 761
731 [-]: GETUPVAL  R44 U24      ; R44 := U24
732 [-]: GETTABLE  R44 R44 K121 ; R44 := R44["Node"]
733 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 743
734 [-]: JMP       743          ; PC := 743
735 [-]: GETUPVAL  R44 U24      ; R44 := U24
736 [-]: GETTABLE  R44 R44 K121 ; R44 := R44["Node"]
737 [-]: GETTABLE  R44 R44 K29  ; R44 := R44["name"]
738 [-]: GETGLOBAL R45 K62      ; R45 := _T
739 [-]: GETTABLE  R45 R45 K120 ; R45 := R45["gPendingMission"]
740 [-]: GETTABLE  R45 R45 K122 ; R45 := R45["baseNodeName"]
741 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 761
742 [-]: JMP       761          ; PC := 761
743 [-]: GETUPVAL  R44 U20      ; R44 := U20
744 [-]: GETGLOBAL R45 K61      ; R45 := 0x9FAED6BC
745 [-]: GETGLOBAL R46 K62      ; R46 := _T
746 [-]: GETTABLE  R46 R46 K120 ; R46 := R46["gPendingMission"]
747 [-]: GETTABLE  R46 R46 K122 ; R46 := R46["baseNodeName"]
748 [-]: CALL      R45 2 2      ; R45 := R45(R46)
749 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
750 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 761
751 [-]: JMP       761          ; PC := 761
752 [-]: GETUPVAL  R44 U24      ; R44 := U24
753 [-]: GETUPVAL  R45 U20      ; R45 := U20
754 [-]: GETGLOBAL R46 K61      ; R46 := 0x9FAED6BC
755 [-]: GETGLOBAL R47 K62      ; R47 := _T
756 [-]: GETTABLE  R47 R47 K120 ; R47 := R47["gPendingMission"]
757 [-]: GETTABLE  R47 R47 K122 ; R47 := R47["baseNodeName"]
758 [-]: CALL      R46 2 2      ; R46 := R46(R47)
759 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
760 [-]: SETTABLE  R44 K121 R45 ; R44["Node"] := R45
761 [-]: GETUPVAL  R44 U24      ; R44 := U24
762 [-]: GETTABLE  R44 R44 K121 ; R44 := R44["Node"]
763 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 836
764 [-]: JMP       836          ; PC := 836
765 [-]: GETUPVAL  R44 U24      ; R44 := U24
766 [-]: GETTABLE  R44 R44 K123 ; R44 := R44["Timer"]
767 [-]: GETGLOBAL R45 K62      ; R45 := _T
768 [-]: GETTABLE  R45 R45 K119 ; R45 := R45["SquadCountdownTimer"]
769 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 836
770 [-]: JMP       836          ; PC := 836
771 [-]: LOADK     R44 K107     ; R44 := -1
772 [-]: GETUPVAL  R45 U24      ; R45 := U24
773 [-]: GETTABLE  R45 R45 K123 ; R45 := R45["Timer"]
774 [-]: EQ        1 R45 K38    ; if R45 == nil then PC := 782
775 [-]: JMP       782          ; PC := 782
776 [-]: GETGLOBAL R45 K94      ; R45 := math
777 [-]: GETTABLE  R45 R45 K124 ; R45 := R45["0xBCF846DF"]
778 [-]: GETUPVAL  R46 U24      ; R46 := U24
779 [-]: GETTABLE  R46 R46 K123 ; R46 := R46["Timer"]
780 [-]: CALL      R45 2 2      ; R45 := R45(R46)
781 [-]: MOVE      R44 R45      ; R44 := R45
782 [-]: GETUPVAL  R45 U24      ; R45 := U24
783 [-]: GETGLOBAL R46 K62      ; R46 := _T
784 [-]: GETTABLE  R46 R46 K119 ; R46 := R46["SquadCountdownTimer"]
785 [-]: SETTABLE  R45 K123 R46 ; R45["Timer"] := R46
786 [-]: GETUPVAL  R45 U24      ; R45 := U24
787 [-]: GETTABLE  R45 R45 K123 ; R45 := R45["Timer"]
788 [-]: EQ        0 R45 K107   ; if R45 ~= -1 then PC := 812
789 [-]: JMP       812          ; PC := 812
790 [-]: GETUPVAL  R45 U24      ; R45 := U24
791 [-]: SETTABLE  R45 K121 K38 ; R45["Node"] := nil
792 [-]: GETUPVAL  R45 U24      ; R45 := U24
793 [-]: GETTABLE  R45 R45 K125 ; R45 := R45["TransitioningOut"]
794 [-]: TEST      R45 0        ; if not R45 then PC := 812
795 [-]: JMP       812          ; PC := 812
796 [-]: GETUPVAL  R45 U24      ; R45 := U24
797 [-]: SETTABLE  R45 K125 K126; R45["TransitioningOut"] := "0x0"
798 [-]: GETUPVAL  R45 U24      ; R45 := U24
799 [-]: GETTABLE  R45 R45 K127 ; R45 := R45["InitialFOV"]
800 [-]: EQ        1 R45 K38    ; if R45 == nil then PC := 808
801 [-]: JMP       808          ; PC := 808
802 [-]: GETUPVAL  R45 U1       ; R45 := U1
803 [-]: GETTABLE  R45 R45 K82  ; R45 := R45["cameraSpot"]
804 [-]: SELF      R45 R45 K128 ; R46 := R45; R45 := R45["0x95E6F2AA"]
805 [-]: GETUPVAL  R47 U24      ; R47 := U24
806 [-]: GETTABLE  R47 R47 K127 ; R47 := R47["InitialFOV"]
807 [-]: CALL      R45 3 1      ; R45(R46,R47)
808 [-]: GETUPVAL  R45 U43      ; R45 := U43
809 [-]: SETTABLE  R45 K129 K126; R45["Locked"] := "0x0"
810 [-]: MOVE      R45 R0       ; R45 := R0
811 [-]: MOVE      R45 R19      ; R45 := R19
812 [-]: GETGLOBAL R45 K94      ; R45 := math
813 [-]: GETTABLE  R45 R45 K124 ; R45 := R45["0xBCF846DF"]
814 [-]: GETUPVAL  R46 U24      ; R46 := U24
815 [-]: GETTABLE  R46 R46 K123 ; R46 := R46["Timer"]
816 [-]: CALL      R45 2 2      ; R45 := R45(R46)
817 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 836
818 [-]: JMP       836          ; PC := 836
819 [-]: GETUPVAL  R46 U24      ; R46 := U24
820 [-]: GETTABLE  R46 R46 K121 ; R46 := R46["Node"]
821 [-]: EQ        1 R46 K38    ; if R46 == nil then PC := 836
822 [-]: JMP       836          ; PC := 836
823 [-]: GETUPVAL  R46 U10      ; R46 := U10
824 [-]: GETUPVAL  R47 U11      ; R47 := U11
825 [-]: GETTABLE  R47 R47 K40  ; R47 := R47["0xAC19E744"]
826 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
827 [-]: GETUPVAL  R49 U24      ; R49 := U24
828 [-]: GETTABLE  R49 R49 K121 ; R49 := R49["Node"]
829 [-]: GETTABLE  R49 R49 K41  ; R49 := R49["clipName"]
830 [-]: GETGLOBAL R50 K131     ; R50 := nodeCountdownEffect
831 [-]: LOADK     R51 K19      ; R51 := 0
832 [-]: LOADK     R52 K19      ; R52 := 0
833 [-]: GETGLOBAL R53 K43      ; R53 := gBackgroundRegion
834 [-]: CALL      R47 7 2      ; R47 := R47(R48,R49,R50,R51,R52,R53)
835 [-]: SETTABLE  R46 K130 R47 ; R46["CountdownFx"] := R47
836 [-]: GETGLOBAL R46 K132     ; R46 := gFlashMgr
837 [-]: SELF      R46 R46 K133 ; R47 := R46; R46 := R46["0x35FF770F"]
838 [-]: CALL      R46 2 2      ; R46 := R46(R47)
839 [-]: GETGLOBAL R47 K2       ; R47 := mMovie
840 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 1011
841 [-]: JMP       1011         ; PC := 1011
842 [-]: GETGLOBAL R46 K94      ; R46 := math
843 [-]: GETTABLE  R46 R46 K134 ; R46 := R46["0x8B011038"]
844 [-]: GETGLOBAL R47 K2       ; R47 := mMovie
845 [-]: SELF      R47 R47 K90  ; R48 := R47; R47 := R47["0xF595D5E1"]
846 [-]: CALL      R47 2 2      ; R47 := R47(R48)
847 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
848 [-]: SELF      R48 R48 K135 ; R49 := R48; R48 := R48["0xF3E132E0"]
849 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
850 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
851 [-]: GETUPVAL  R47 U44      ; R47 := U44
852 [-]: LEN       R47 R47      ; R47 := # R47
853 [-]: LT        1 K19 R47    ; if 0 < R47 then PC := 859
854 [-]: JMP       859          ; PC := 859
855 [-]: GETUPVAL  R47 U45      ; R47 := U45
856 [-]: LEN       R47 R47      ; R47 := # R47
857 [-]: LT        0 K19 R47    ; if 0 >= R47 then PC := 1011
858 [-]: JMP       1011         ; PC := 1011
859 [-]: GETUPVAL  R47 U46      ; R47 := U46
860 [-]: LT        0 K19 R47    ; if 0 >= R47 then PC := 1011
861 [-]: JMP       1011         ; PC := 1011
862 [-]: GETUPVAL  R47 U47      ; R47 := U47
863 [-]: GETGLOBAL R48 K83      ; R48 := 0x4CDEF9FF
864 [-]: CALL      R48 1 2      ; R48 := R48()
865 [-]: SUB       R47 R47 R48  ; R47 := R47 - R48
866 [-]: MOVE      R47 R47      ; R47 := R47
867 [-]: GETUPVAL  R47 U47      ; R47 := U47
868 [-]: LE        0 R47 K19    ; if R47 > 0 then PC := 1011
869 [-]: JMP       1011         ; PC := 1011
870 [-]: GETUPVAL  R47 U11      ; R47 := U11
871 [-]: GETTABLE  R47 R47 K136 ; R47 := R47["0xF81722A2"]
872 [-]: GETUPVAL  R48 U48      ; R48 := U48
873 [-]: LOADK     R49 K22      ; R49 := 1
874 [-]: LOADK     R50 K54      ; R50 := 2
875 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
876 [-]: MOVE      R47 R47      ; R47 := R47
877 [-]: MOVE      R47 R0       ; R47 := R0
878 [-]: LOADK     R48 K22      ; R48 := 1
879 [-]: GETUPVAL  R49 U44      ; R49 := U44
880 [-]: LEN       R49 R49      ; R49 := # R49
881 [-]: LOADK     R50 K22      ; R50 := 1
882 [-]: FORPREP   R48 944      ; R48 -= R50; PC := 944
883 [-]: GETGLOBAL R52 K137     ; R52 := 0xF595ADDE
884 [-]: GETGLOBAL R53 K2       ; R53 := mMovie
885 [-]: SELF      R53 R53 K138 ; R54 := R53; R53 := R53["0x294C4B0B"]
886 [-]: GETUPVAL  R55 U44      ; R55 := U44
887 [-]: GETTABLE  R55 R55 R51  ; R55 := R55[R51]
888 [-]: GETTABLE  R55 R55 K121 ; R55 := R55["Node"]
889 [-]: GETTABLE  R55 R55 K139 ; R55 := R55["memberIndex"]
890 [-]: LOADK     R56 K140     ; R56 := "_x"
891 [-]: CALL      R53 4 0      ; R53,... := R53(R54,R55,R56)
892 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
893 [-]: GETGLOBAL R53 K137     ; R53 := 0xF595ADDE
894 [-]: GETGLOBAL R54 K2       ; R54 := mMovie
895 [-]: SELF      R54 R54 K138 ; R55 := R54; R54 := R54["0x294C4B0B"]
896 [-]: GETUPVAL  R56 U44      ; R56 := U44
897 [-]: GETTABLE  R56 R56 R51  ; R56 := R56[R51]
898 [-]: GETTABLE  R56 R56 K121 ; R56 := R56["Node"]
899 [-]: GETTABLE  R56 R56 K139 ; R56 := R56["memberIndex"]
900 [-]: LOADK     R57 K141     ; R57 := "_y"
901 [-]: CALL      R54 4 0      ; R54,... := R54(R55,R56,R57)
902 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
903 [-]: GETUPVAL  R54 U11      ; R54 := U11
904 [-]: GETTABLE  R54 R54 K142 ; R54 := R54["0x4F6BF2C8"]
905 [-]: GETGLOBAL R55 K2       ; R55 := mMovie
906 [-]: NEWTABLE  R56 0 2      ; R56 := {}
907 [-]: SETTABLE  R56 K93 R52  ; R56["x"] := R52
908 [-]: SETTABLE  R56 K100 R53 ; R56["y"] := R53
909 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
910 [-]: GETTABLE  R55 R54 K93  ; R55 := R54["x"]
911 [-]: LT        0 K19 R55    ; if 0 >= R55 then PC := 943
912 [-]: JMP       943          ; PC := 943
913 [-]: GETTABLE  R55 R54 K100 ; R55 := R54["y"]
914 [-]: LT        0 K19 R55    ; if 0 >= R55 then PC := 943
915 [-]: JMP       943          ; PC := 943
916 [-]: GETTABLE  R55 R54 K93  ; R55 := R54["x"]
917 [-]: LT        0 R55 K22    ; if R55 >= 1 then PC := 943
918 [-]: JMP       943          ; PC := 943
919 [-]: GETTABLE  R55 R54 K100 ; R55 := R54["y"]
920 [-]: LT        0 R55 K22    ; if R55 >= 1 then PC := 943
921 [-]: JMP       943          ; PC := 943
922 [-]: GETUPVAL  R55 U0       ; R55 := U0
923 [-]: SELF      R55 R55 K143 ; R56 := R55; R55 := R55["0x61494587"]
924 [-]: DIV       R57 R52 R46  ; R57 := R52 / R46
925 [-]: MUL       R57 R57 K22  ; R57 := R57 * 1
926 [-]: CLOSURE   R58 1        ; R58 := closure(Function #128.2)
927 [-]: GETUPVAL  R0 U44       ; R0 := U44
928 [-]: MOVE      R0 R51       ; R0 := R51
929 [-]: GETUPVAL  R0 U2        ; R0 := U2
930 [-]: GETUPVAL  R0 U10       ; R0 := U10
931 [-]: GETUPVAL  R0 U11       ; R0 := U11
932 [-]: CALL      R55 4 1      ; R55(R56,R57,R58)
933 [-]: TEST      R47 1        ; if R47 then PC := 943
934 [-]: JMP       943          ; PC := 943
935 [-]: MOVE      R47 R1       ; R47 := R1
936 [-]: GETUPVAL  R55 U0       ; R55 := U0
937 [-]: SELF      R55 R55 K143 ; R56 := R55; R55 := R55["0x61494587"]
938 [-]: DIV       R57 R52 R46  ; R57 := R52 / R46
939 [-]: MUL       R57 R57 K22  ; R57 := R57 * 1
940 [-]: CLOSURE   R58 2        ; R58 := closure(Function #128.3)
941 [-]: GETUPVAL  R0 U11       ; R0 := U11
942 [-]: CALL      R55 4 1      ; R55(R56,R57,R58)
943 [-]: CLOSE     R51          ; SAVE R51,...
944 [-]: FORLOOP   R48 883      ; R48 += R50; if R48 <= R49 then begin PC := 883; R51 := R48 end
945 [-]: LOADK     R51 K22      ; R51 := 1
946 [-]: GETUPVAL  R52 U45      ; R52 := U45
947 [-]: LEN       R52 R52      ; R52 := # R52
948 [-]: LOADK     R53 K22      ; R53 := 1
949 [-]: FORPREP   R51 1010     ; R51 -= R53; PC := 1010
950 [-]: GETGLOBAL R55 K137     ; R55 := 0xF595ADDE
951 [-]: GETGLOBAL R56 K2       ; R56 := mMovie
952 [-]: SELF      R56 R56 K138 ; R57 := R56; R56 := R56["0x294C4B0B"]
953 [-]: GETUPVAL  R58 U45      ; R58 := U45
954 [-]: GETTABLE  R58 R58 R54  ; R58 := R58[R54]
955 [-]: GETTABLE  R58 R58 K121 ; R58 := R58["Node"]
956 [-]: GETTABLE  R58 R58 K139 ; R58 := R58["memberIndex"]
957 [-]: LOADK     R59 K140     ; R59 := "_x"
958 [-]: CALL      R56 4 0      ; R56,... := R56(R57,R58,R59)
959 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
960 [-]: GETGLOBAL R56 K137     ; R56 := 0xF595ADDE
961 [-]: GETGLOBAL R57 K2       ; R57 := mMovie
962 [-]: SELF      R57 R57 K138 ; R58 := R57; R57 := R57["0x294C4B0B"]
963 [-]: GETUPVAL  R59 U45      ; R59 := U45
964 [-]: GETTABLE  R59 R59 R54  ; R59 := R59[R54]
965 [-]: GETTABLE  R59 R59 K121 ; R59 := R59["Node"]
966 [-]: GETTABLE  R59 R59 K139 ; R59 := R59["memberIndex"]
967 [-]: LOADK     R60 K141     ; R60 := "_y"
968 [-]: CALL      R57 4 0      ; R57,... := R57(R58,R59,R60)
969 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
970 [-]: GETUPVAL  R57 U11      ; R57 := U11
971 [-]: GETTABLE  R57 R57 K142 ; R57 := R57["0x4F6BF2C8"]
972 [-]: GETGLOBAL R58 K2       ; R58 := mMovie
973 [-]: NEWTABLE  R59 0 2      ; R59 := {}
974 [-]: SETTABLE  R59 K93 R55  ; R59["x"] := R55
975 [-]: SETTABLE  R59 K100 R56 ; R59["y"] := R56
976 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
977 [-]: GETTABLE  R58 R57 K93  ; R58 := R57["x"]
978 [-]: LT        0 K19 R58    ; if 0 >= R58 then PC := 1009
979 [-]: JMP       1009         ; PC := 1009
980 [-]: GETTABLE  R58 R57 K100 ; R58 := R57["y"]
981 [-]: LT        0 K19 R58    ; if 0 >= R58 then PC := 1009
982 [-]: JMP       1009         ; PC := 1009
983 [-]: GETTABLE  R58 R57 K93  ; R58 := R57["x"]
984 [-]: LT        0 R58 K22    ; if R58 >= 1 then PC := 1009
985 [-]: JMP       1009         ; PC := 1009
986 [-]: GETTABLE  R58 R57 K100 ; R58 := R57["y"]
987 [-]: LT        0 R58 K22    ; if R58 >= 1 then PC := 1009
988 [-]: JMP       1009         ; PC := 1009
989 [-]: GETUPVAL  R58 U0       ; R58 := U0
990 [-]: SELF      R58 R58 K143 ; R59 := R58; R58 := R58["0x61494587"]
991 [-]: DIV       R60 R55 R46  ; R60 := R55 / R46
992 [-]: MUL       R60 R60 K22  ; R60 := R60 * 1
993 [-]: CLOSURE   R61 3        ; R61 := closure(Function #128.4)
994 [-]: GETUPVAL  R0 U45       ; R0 := U45
995 [-]: MOVE      R0 R54       ; R0 := R54
996 [-]: GETUPVAL  R0 U10       ; R0 := U10
997 [-]: GETUPVAL  R0 U11       ; R0 := U11
998 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
999 [-]: TEST      R47 1        ; if R47 then PC := 1009
1000 [-]: JMP       1009         ; PC := 1009
1001 [-]: MOVE      R47 R1       ; R47 := R1
1002 [-]: GETUPVAL  R58 U0       ; R58 := U0
1003 [-]: SELF      R58 R58 K143 ; R59 := R58; R58 := R58["0x61494587"]
1004 [-]: DIV       R60 R55 R46  ; R60 := R55 / R46
1005 [-]: MUL       R60 R60 K22  ; R60 := R60 * 1
1006 [-]: CLOSURE   R61 4        ; R61 := closure(Function #128.5)
1007 [-]: GETUPVAL  R0 U11       ; R0 := U11
1008 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
1009 [-]: CLOSE     R54          ; SAVE R54,...
1010 [-]: FORLOOP   R51 950      ; R51 += R53; if R51 <= R52 then begin PC := 950; R54 := R51 end
1011 [-]: GETUPVAL  R54 U21      ; R54 := U21
1012 [-]: GETTABLE  R54 R54 K121 ; R54 := R54["Node"]
1013 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1155
1014 [-]: JMP       1155         ; PC := 1155
1015 [-]: GETUPVAL  R54 U21      ; R54 := U21
1016 [-]: GETTABLE  R54 R54 K144 ; R54 := R54["UpdateTimer"]
1017 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1155
1018 [-]: JMP       1155         ; PC := 1155
1019 [-]: GETUPVAL  R54 U21      ; R54 := U21
1020 [-]: GETTABLE  R54 R54 K145 ; R54 := R54["TimerPre"]
1021 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1155
1022 [-]: JMP       1155         ; PC := 1155
1023 [-]: GETUPVAL  R54 U21      ; R54 := U21
1024 [-]: GETTABLE  R54 R54 K146 ; R54 := R54["TimerPost"]
1025 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1155
1026 [-]: JMP       1155         ; PC := 1155
1027 [-]: GETUPVAL  R54 U21      ; R54 := U21
1028 [-]: GETTABLE  R54 R54 K147 ; R54 := R54["NodeTime"]
1029 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1155
1030 [-]: JMP       1155         ; PC := 1155
1031 [-]: GETUPVAL  R54 U21      ; R54 := U21
1032 [-]: GETUPVAL  R55 U21      ; R55 := U21
1033 [-]: GETTABLE  R55 R55 K144 ; R55 := R55["UpdateTimer"]
1034 [-]: ADD       R55 R55 R0   ; R55 := R55 + R0
1035 [-]: SETTABLE  R54 K144 R55 ; R54["UpdateTimer"] := R55
1036 [-]: GETUPVAL  R54 U21      ; R54 := U21
1037 [-]: GETTABLE  R54 R54 K144 ; R54 := R54["UpdateTimer"]
1038 [-]: LT        0 K22 R54    ; if 1 >= R54 then PC := 1155
1039 [-]: JMP       1155         ; PC := 1155
1040 [-]: GETUPVAL  R54 U21      ; R54 := U21
1041 [-]: GETUPVAL  R55 U21      ; R55 := U21
1042 [-]: GETTABLE  R55 R55 K147 ; R55 := R55["NodeTime"]
1043 [-]: GETUPVAL  R56 U21      ; R56 := U21
1044 [-]: GETTABLE  R56 R56 K144 ; R56 := R56["UpdateTimer"]
1045 [-]: SUB       R55 R55 R56  ; R55 := R55 - R56
1046 [-]: SETTABLE  R54 K147 R55 ; R54["NodeTime"] := R55
1047 [-]: GETUPVAL  R54 U49      ; R54 := U49
1048 [-]: GETTABLE  R54 R54 K148 ; R54 := R54["0x555EFA5"]
1049 [-]: GETUPVAL  R55 U50      ; R55 := U50
1050 [-]: GETTABLE  R55 R55 K149 ; R55 := R55["mMission"]
1051 [-]: GETTABLE  R55 R55 K150 ; R55 := R55["location"]
1052 [-]: CALL      R54 2 2      ; R54 := R54(R55)
1053 [-]: GETUPVAL  R55 U49      ; R55 := U49
1054 [-]: GETTABLE  R55 R55 K151 ; R55 := R55["0x447FCC2F"]
1055 [-]: MOVE      R56 R54      ; R56 := R54
1056 [-]: GETUPVAL  R57 U50      ; R57 := U50
1057 [-]: GETTABLE  R57 R57 K149 ; R57 := R57["mMission"]
1058 [-]: GETTABLE  R57 R57 K150 ; R57 := R57["location"]
1059 [-]: CALL      R55 3 4      ; R55,R56,R57 := R55(R56,R57)
1060 [-]: GETUPVAL  R58 U21      ; R58 := U21
1061 [-]: GETTABLE  R58 R58 K147 ; R58 := R58["NodeTime"]
1062 [-]: LT        0 R58 K19    ; if R58 >= 0 then PC := 1067
1063 [-]: JMP       1067         ; PC := 1067
1064 [-]: GETUPVAL  R58 U21      ; R58 := U21
1065 [-]: SETTABLE  R58 K147 R57 ; R58["NodeTime"] := R57
1066 [-]: JMP       1069         ; PC := 1069
1067 [-]: GETUPVAL  R58 U21      ; R58 := U21
1068 [-]: GETTABLE  R57 R58 K147 ; R57 := R58["NodeTime"]
1069 [-]: GETUPVAL  R58 U21      ; R58 := U21
1070 [-]: GETTABLE  R58 R58 K145 ; R58 := R58["TimerPre"]
1071 [-]: GETUPVAL  R59 U50      ; R59 := U50
1072 [-]: GETTABLE  R59 R59 K149 ; R59 := R59["mMission"]
1073 [-]: GETTABLE  R59 R59 K150 ; R59 := R59["location"]
1074 [-]: GETUPVAL  R60 U49      ; R60 := U49
1075 [-]: GETTABLE  R60 R60 K152 ; R60 := R60["ORB_VALLIS_NODE_TAG"]
1076 [-]: EQ        0 R59 R60    ; if R59 ~= R60 then PC := 1111
1077 [-]: JMP       1111         ; PC := 1111
1078 [-]: MOVE      R59 R58      ; R59 := R58
1079 [-]: LOADK     R60 K153     ; R60 := "<font color=\"#A9A9A9\">"
1080 [-]: GETGLOBAL R61 K27      ; R61 := string
1081 [-]: GETTABLE  R61 R61 K154 ; R61 := R61["0x639C642A"]
1082 [-]: GETGLOBAL R62 K2       ; R62 := mMovie
1083 [-]: SELF      R62 R62 K155 ; R63 := R62; R62 := R62["0x5DB0BD4"]
1084 [-]: LOADK     R64 K156     ; R64 := "/Lotus/Language/SolarisVenus/Temperature"
1085 [-]: MOVE      R65 R1       ; R65 := R1
1086 [-]: CALL      R62 4 0      ; R62,... := R62(R63,R64,R65)
1087 [-]: CALL      R61 0 2      ; R61 := R61(R62,...)
1088 [-]: LOADK     R62 K157     ; R62 := "  </font><font color=\"#CACACA\"><b>"
1089 [-]: GETGLOBAL R63 K2       ; R63 := mMovie
1090 [-]: SELF      R63 R63 K155 ; R64 := R63; R63 := R63["0x5DB0BD4"]
1091 [-]: LOADK     R65 K158     ; R65 := "/Lotus/Language/SystemMessages/TimeUntil"
1092 [-]: MOVE      R66 R0       ; R66 := R0
1093 [-]: NEWTABLE  R67 0 2      ; R67 := {}
1094 [-]: GETGLOBAL R68 K2       ; R68 := mMovie
1095 [-]: SELF      R68 R68 K155 ; R69 := R68; R68 := R68["0x5DB0BD4"]
1096 [-]: MOVE      R70 R56      ; R70 := R56
1097 [-]: MOVE      R71 R0       ; R71 := R0
1098 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
1099 [-]: SETTABLE  R67 K159 R68 ; R67["LABEL"] := R68
1100 [-]: GETUPVAL  R68 U49      ; R68 := U49
1101 [-]: GETTABLE  R68 R68 K161 ; R68 := R68["0xC65D09DD"]
1102 [-]: GETGLOBAL R69 K2       ; R69 := mMovie
1103 [-]: MOVE      R70 R57      ; R70 := R57
1104 [-]: LOADK     R71 K162     ; R71 := "CompactOne"
1105 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
1106 [-]: SETTABLE  R67 K160 R68 ; R67["TIME"] := R68
1107 [-]: CALL      R63 5 2      ; R63 := R63(R64,R65,R66,R67)
1108 [-]: LOADK     R64 K163     ; R64 := "</b><br></font>"
1109 [-]: CONCAT    R58 R59 R64  ; R58 := R59 .. R60 .. R61 .. R62 .. R63 .. R64
1110 [-]: JMP       1143         ; PC := 1143
1111 [-]: MOVE      R59 R58      ; R59 := R58
1112 [-]: LOADK     R60 K153     ; R60 := "<font color=\"#A9A9A9\">"
1113 [-]: GETGLOBAL R61 K27      ; R61 := string
1114 [-]: GETTABLE  R61 R61 K154 ; R61 := R61["0x639C642A"]
1115 [-]: GETGLOBAL R62 K2       ; R62 := mMovie
1116 [-]: SELF      R62 R62 K155 ; R63 := R62; R62 := R62["0x5DB0BD4"]
1117 [-]: LOADK     R64 K164     ; R64 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
1118 [-]: MOVE      R65 R1       ; R65 := R1
1119 [-]: CALL      R62 4 0      ; R62,... := R62(R63,R64,R65)
1120 [-]: CALL      R61 0 2      ; R61 := R61(R62,...)
1121 [-]: LOADK     R62 K157     ; R62 := "  </font><font color=\"#CACACA\"><b>"
1122 [-]: GETGLOBAL R63 K2       ; R63 := mMovie
1123 [-]: SELF      R63 R63 K155 ; R64 := R63; R63 := R63["0x5DB0BD4"]
1124 [-]: LOADK     R65 K158     ; R65 := "/Lotus/Language/SystemMessages/TimeUntil"
1125 [-]: MOVE      R66 R0       ; R66 := R0
1126 [-]: NEWTABLE  R67 0 2      ; R67 := {}
1127 [-]: GETGLOBAL R68 K2       ; R68 := mMovie
1128 [-]: SELF      R68 R68 K155 ; R69 := R68; R68 := R68["0x5DB0BD4"]
1129 [-]: MOVE      R70 R56      ; R70 := R56
1130 [-]: MOVE      R71 R0       ; R71 := R0
1131 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
1132 [-]: SETTABLE  R67 K159 R68 ; R67["LABEL"] := R68
1133 [-]: GETUPVAL  R68 U49      ; R68 := U49
1134 [-]: GETTABLE  R68 R68 K161 ; R68 := R68["0xC65D09DD"]
1135 [-]: GETGLOBAL R69 K2       ; R69 := mMovie
1136 [-]: MOVE      R70 R57      ; R70 := R57
1137 [-]: LOADK     R71 K162     ; R71 := "CompactOne"
1138 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
1139 [-]: SETTABLE  R67 K160 R68 ; R67["TIME"] := R68
1140 [-]: CALL      R63 5 2      ; R63 := R63(R64,R65,R66,R67)
1141 [-]: LOADK     R64 K163     ; R64 := "</b><br></font>"
1142 [-]: CONCAT    R58 R59 R64  ; R58 := R59 .. R60 .. R61 .. R62 .. R63 .. R64
1143 [-]: MOVE      R59 R58      ; R59 := R58
1144 [-]: GETUPVAL  R60 U21      ; R60 := U21
1145 [-]: GETTABLE  R60 R60 K146 ; R60 := R60["TimerPost"]
1146 [-]: CONCAT    R58 R59 R60  ; R58 := R59 .. R60
1147 [-]: GETGLOBAL R59 K2       ; R59 := mMovie
1148 [-]: SELF      R59 R59 K165 ; R60 := R59; R59 := R59["0x1C19D966"]
1149 [-]: LOADK     R61 K166     ; R61 := "InfoTip.Label"
1150 [-]: LOADK     R62 K167     ; R62 := "text"
1151 [-]: MOVE      R63 R58      ; R63 := R58
1152 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
1153 [-]: GETUPVAL  R59 U21      ; R59 := U21
1154 [-]: SETTABLE  R59 K144 K19 ; R59["UpdateTimer"] := 0
1155 [-]: GETGLOBAL R59 K1       ; R59 := 0x400E7765
1156 [-]: GETUPVAL  R60 U10      ; R60 := U10
1157 [-]: GETTABLE  R60 R60 K168 ; R60 := R60["CountDownFx"]
1158 [-]: CALL      R59 2 2      ; R59 := R59(R60)
1159 [-]: TEST      R59 1        ; if R59 then PC := 1173
1160 [-]: JMP       1173         ; PC := 1173
1161 [-]: GETGLOBAL R59 K1       ; R59 := 0x400E7765
1162 [-]: GETUPVAL  R60 U10      ; R60 := U10
1163 [-]: GETTABLE  R60 R60 K168 ; R60 := R60["CountDownFx"]
1164 [-]: GETTABLE  R60 R60 K39  ; R60 := R60["mInstance"]
1165 [-]: CALL      R59 2 2      ; R59 := R59(R60)
1166 [-]: TEST      R59 1        ; if R59 then PC := 1173
1167 [-]: JMP       1173         ; PC := 1173
1168 [-]: GETUPVAL  R59 U10      ; R59 := U10
1169 [-]: GETTABLE  R59 R59 K168 ; R59 := R59["CountDownFx"]
1170 [-]: SELF      R59 R59 K4   ; R60 := R59; R59 := R59["0x8C7099E9"]
1171 [-]: MOVE      R61 R0       ; R61 := R0
1172 [-]: CALL      R59 3 1      ; R59(R60,R61)
1173 [-]: GETGLOBAL R59 K169     ; R59 := 0xECFDD17
1174 [-]: GETUPVAL  R60 U10      ; R60 := U10
1175 [-]: GETTABLE  R60 R60 K170 ; R60 := R60["PendingFx"]
1176 [-]: CALL      R59 2 4      ; R59,R60,R61 := R59(R60)
1177 [-]: JMP       1190         ; PC := 1190
1178 [-]: GETGLOBAL R64 K1       ; R64 := 0x400E7765
1179 [-]: GETTABLE  R65 R63 K39  ; R65 := R63["mInstance"]
1180 [-]: CALL      R64 2 2      ; R64 := R64(R65)
1181 [-]: TEST      R64 1        ; if R64 then PC := 1187
1182 [-]: JMP       1187         ; PC := 1187
1183 [-]: SELF      R64 R63 K4   ; R65 := R63; R64 := R63["0x8C7099E9"]
1184 [-]: MOVE      R66 R0       ; R66 := R0
1185 [-]: CALL      R64 3 1      ; R64(R65,R66)
1186 [-]: JMP       1190         ; PC := 1190
1187 [-]: GETUPVAL  R64 U10      ; R64 := U10
1188 [-]: GETTABLE  R64 R64 K170 ; R64 := R64["PendingFx"]
1189 [-]: SETTABLE  R64 R62 K38  ; R64[R62] := nil
1190 [-]: TFORLOOP  R59 2        ; R62,R63 :=  R59(R60,R61); if R62 ~= nil then begin PC = 1178; R61 := R62 end
1191 [-]: JMP       1178         ; PC := 1178
1192 [-]: GETGLOBAL R64 K169     ; R64 := 0xECFDD17
1193 [-]: GETUPVAL  R65 U10      ; R65 := U10
1194 [-]: GETTABLE  R65 R65 K171 ; R65 := R65["QuestFx"]
1195 [-]: CALL      R64 2 4      ; R64,R65,R66 := R64(R65)
1196 [-]: JMP       1209         ; PC := 1209
1197 [-]: GETGLOBAL R69 K1       ; R69 := 0x400E7765
1198 [-]: GETTABLE  R70 R68 K39  ; R70 := R68["mInstance"]
1199 [-]: CALL      R69 2 2      ; R69 := R69(R70)
1200 [-]: TEST      R69 1        ; if R69 then PC := 1206
1201 [-]: JMP       1206         ; PC := 1206
1202 [-]: SELF      R69 R68 K4   ; R70 := R68; R69 := R68["0x8C7099E9"]
1203 [-]: MOVE      R71 R0       ; R71 := R0
1204 [-]: CALL      R69 3 1      ; R69(R70,R71)
1205 [-]: JMP       1209         ; PC := 1209
1206 [-]: GETUPVAL  R69 U10      ; R69 := U10
1207 [-]: GETTABLE  R69 R69 K171 ; R69 := R69["QuestFx"]
1208 [-]: SETTABLE  R69 R67 K38  ; R69[R67] := nil
1209 [-]: TFORLOOP  R64 2        ; R67,R68 :=  R64(R65,R66); if R67 ~= nil then begin PC = 1197; R66 := R67 end
1210 [-]: JMP       1197         ; PC := 1197
1211 [-]: GETGLOBAL R69 K169     ; R69 := 0xECFDD17
1212 [-]: GETUPVAL  R70 U10      ; R70 := U10
1213 [-]: GETTABLE  R70 R70 K37  ; R70 := R70["SentientFx"]
1214 [-]: CALL      R69 2 4      ; R69,R70,R71 := R69(R70)
1215 [-]: JMP       1228         ; PC := 1228
1216 [-]: GETGLOBAL R74 K1       ; R74 := 0x400E7765
1217 [-]: GETTABLE  R75 R73 K39  ; R75 := R73["mInstance"]
1218 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1219 [-]: TEST      R74 1        ; if R74 then PC := 1225
1220 [-]: JMP       1225         ; PC := 1225
1221 [-]: SELF      R74 R73 K4   ; R75 := R73; R74 := R73["0x8C7099E9"]
1222 [-]: MOVE      R76 R0       ; R76 := R0
1223 [-]: CALL      R74 3 1      ; R74(R75,R76)
1224 [-]: JMP       1228         ; PC := 1228
1225 [-]: GETUPVAL  R74 U10      ; R74 := U10
1226 [-]: GETTABLE  R74 R74 K37  ; R74 := R74["SentientFx"]
1227 [-]: SETTABLE  R74 R72 K38  ; R74[R72] := nil
1228 [-]: TFORLOOP  R69 2        ; R72,R73 :=  R69(R70,R71); if R72 ~= nil then begin PC = 1216; R71 := R72 end
1229 [-]: JMP       1216         ; PC := 1216
1230 [-]: GETUPVAL  R74 U51      ; R74 := U51
1231 [-]: TEST      R74 0        ; if not R74 then PC := 1237
1232 [-]: JMP       1237         ; PC := 1237
1233 [-]: MOVE      R74 R0       ; R74 := R0
1234 [-]: MOVE      R74 R51      ; R74 := R51
1235 [-]: GETUPVAL  R74 U52      ; R74 := U52
1236 [-]: CALL      R74 1 1      ; R74()
1237 [-]: GETGLOBAL R74 K62      ; R74 := _T
1238 [-]: GETTABLE  R74 R74 K172 ; R74 := R74["UserInvitePending"]
1239 [-]: EQ        0 R74 K38    ; if R74 ~= nil then PC := 1242
1240 [-]: JMP       1242         ; PC := 1242
1241 [-]: MOVE      R74 R0       ; R74 := R0
1242 [-]: MOVE      R74 R1       ; R74 := R1
1243 [-]: GETUPVAL  R75 U53      ; R75 := U53
1244 [-]: EQ        1 R75 R74    ; if R75 == R74 then PC := 1249
1245 [-]: JMP       1249         ; PC := 1249
1246 [-]: MOVE      R74 R53      ; R74 := R53
1247 [-]: GETUPVAL  R75 U54      ; R75 := U54
1248 [-]: CALL      R75 1 1      ; R75()
1249 [-]: RETURN    R0 1         ; return 


; Function #128.1:
;
; Name:            
; Defined at line: 5680
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["radialSector"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mission"]
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["missionType"]
  9 [-]: GETGLOBAL R1 K4        ; R1 := Lotus_Game
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MT_JUNCTION"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U3        ; R0 := U3
 20 [-]: CALL      R0 1 1       ; R0()
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x25992394"]
 23 [-]: GETGLOBAL R1 K7        ; R1 := completeHoldSound
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: GETUPVAL  R0 U5        ; R0 := U5
 26 [-]: GETUPVAL  R1 U0        ; R1 := U0
 27 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 28 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 29 [-]: GETUPVAL  R0 U6        ; R0 := U6
 30 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x61494587"]
 31 [-]: LOADK     R2 K9        ; R2 := 0.10000000149012
 32 [-]: CLOSURE   R3 0         ; R3 := closure(Function #128.1.1)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 35 [-]: RETURN    R0 1         ; return 


; Function #128.1.1:
;
; Name:            
; Defined at line: 5692
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["Node"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #128.2:
;
; Name:            
; Defined at line: 5839
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
  5 [-]: JMP       62           ; PC := 62
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
 11 [-]: JMP       62           ; PC := 62
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
 18 [-]: JMP       62           ; PC := 62
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Active"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R1 U1        ; R1 := U1
 25 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 26 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 27 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["locked"]
 28 [-]: TEST      R0 1         ; if R0 then PC := 62
 29 [-]: JMP       62           ; PC := 62
 30 [-]: GETUPVAL  R0 U3        ; R0 := U3
 31 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["PendingFx"]
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 34 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R0 K6        ; R0 := 0x400E7765
 37 [-]: GETUPVAL  R1 U3        ; R1 := U3
 38 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["PendingFx"]
 39 [-]: GETUPVAL  R2 U1        ; R2 := U1
 40 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 41 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mInstance"]
 42 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 43 [-]: TEST      R0 0         ; if not R0 then PC := 62
 44 [-]: JMP       62           ; PC := 62
 45 [-]: GETUPVAL  R0 U3        ; R0 := U3
 46 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["PendingFx"]
 47 [-]: GETUPVAL  R1 U1        ; R1 := U1
 48 [-]: GETUPVAL  R2 U4        ; R2 := U4
 49 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xAC19E744"]
 50 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 51 [-]: GETUPVAL  R4 U0        ; R4 := U0
 52 [-]: GETUPVAL  R5 U1        ; R5 := U1
 53 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 54 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 55 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 56 [-]: GETGLOBAL R5 K10       ; R5 := nextNodeEffect
 57 [-]: LOADK     R6 K11       ; R6 := 0
 58 [-]: LOADK     R7 K11       ; R7 := 0
 59 [-]: GETGLOBAL R8 K12       ; R8 := gBackgroundRegion
 60 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 61 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 62 [-]: RETURN    R0 1         ; return 


; Function #128.3:
;
; Name:            
; Defined at line: 5852
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := nextNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #128.4:
;
; Name:            
; Defined at line: 5866
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 18 [-]: JMP       51           ; PC := 51
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 23 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 26 [-]: GETUPVAL  R1 U2        ; R1 := U2
 27 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["QuestFx"]
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mInstance"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 51
 33 [-]: JMP       51           ; PC := 51
 34 [-]: GETUPVAL  R0 U2        ; R0 := U2
 35 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 36 [-]: GETUPVAL  R1 U1        ; R1 := U1
 37 [-]: GETUPVAL  R2 U3        ; R2 := U3
 38 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xAC19E744"]
 39 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETUPVAL  R5 U1        ; R5 := U1
 42 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 45 [-]: GETGLOBAL R5 K8        ; R5 := questNodeEffect
 46 [-]: LOADK     R6 K9        ; R6 := 0
 47 [-]: LOADK     R7 K9        ; R7 := 0
 48 [-]: GETGLOBAL R8 K10       ; R8 := gBackgroundRegion
 49 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 50 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 51 [-]: RETURN    R0 1         ; return 


; Function #128.5:
;
; Name:            
; Defined at line: 5878
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := questNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5959
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETGLOBAL R1 K1        ; R1 := gMatchingService
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xD5E03646"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0xEB3F45BE"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["gameModeId"]
 16 [-]: EQ        1 R2 K6      ; if R2 == 0 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: LOADK     R2 K7        ; R2 := 30
 21 [-]: TEST      R0 1         ; if R0 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETGLOBAL R3 K1        ; R3 := gMatchingService
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x35DDC67D"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: LE        0 R3 K9      ; if R3 > 1 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETUPVAL  R3 U1        ; R3 := U1
 29 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xEC3342D8"]
 30 [-]: CALL      R3 1 2       ; R3 := R3()
 31 [-]: TEST      R3 0         ; if not R3 then PC := 41
 32 [-]: JMP       41           ; PC := 41
 33 [-]: GETGLOBAL R3 K1        ; R3 := gMatchingService
 34 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x9BCA84D2"]
 35 [-]: MOVE      R5 R2        ; R5 := R2
 36 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 37 [-]: MOVE      R3 R3        ; R3 := R3
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: MOVE      R3 R1        ; R3 := R1
 41 [-]: RETURN    R3 2         ; return R3
 42 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5972
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameRules
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8709CE86"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0x625791A8"]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: CALL      R2 3 1       ; R2(R3,R4)
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 29
 16 [-]: JMP       29           ; PC := 29
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K4        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SquadOverlay"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R2 K4        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 25 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x458F27A9"]
 26 [-]: LOADK     R4 K7        ; R4 := "ForceExitMap"
 27 [-]: LOADK     R5 K8        ; R5 := ""
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: GETGLOBAL R2 K4        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x18468666"]
 31 [-]: LOADK     R3 K10       ; R3 := "Clan"
 32 [-]: CALL      R2 2 1       ; R2(R3)
 33 [-]: GETGLOBAL R2 K4        ; R2 := _T
 34 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x18468666"]
 35 [-]: LOADK     R3 K11       ; R3 := "ClanSearch"
 36 [-]: CALL      R2 2 1       ; R2(R3)
 37 [-]: GETGLOBAL R2 K4        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x18468666"]
 39 [-]: LOADK     R3 K12       ; R3 := "InvasionSelection"
 40 [-]: CALL      R2 2 1       ; R2(R3)
 41 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 42 [-]: GETGLOBAL R3 K4        ; R3 := _T
 43 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mTrigger"]
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: TEST      R2 1         ; if R2 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R2 K4        ; R2 := _T
 48 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mTrigger"]
 49 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x8D5886B7"]
 50 [-]: LOADK     R4 K15       ; R4 := "Close"
 51 [-]: CALL      R2 3 1       ; R2(R3,R4)
 52 [-]: GETGLOBAL R2 K4        ; R2 := _T
 53 [-]: SETTABLE  R2 K13 K16   ; R2["mTrigger"] := nil
 54 [-]: GETGLOBAL R2 K4        ; R2 := _T
 55 [-]: SETTABLE  R2 K17 K16   ; R2["DiegeticPosition"] := nil
 56 [-]: GETUPVAL  R2 U1        ; R2 := U1
 57 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x25992394"]
 58 [-]: GETGLOBAL R3 K19       ; R3 := closeSound
 59 [-]: CALL      R2 2 1       ; R2(R3)
 60 [-]: GETGLOBAL R2 K20       ; R2 := gRegion
 61 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x3E2F6BF"]
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 64 [-]: MOVE      R4 R2        ; R4 := R2
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: SELF      R3 R2 K22    ; R4 := R2; R3 := R2["0x28609C89"]
 69 [-]: GETGLOBAL R5 K23       ; R5 := 0xEC274B1A
 70 [-]: LOADK     R6 K24       ; R6 := "IDLE"
 71 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 72 [-]: CALL      R3 0 1       ; R3(R4,...)
 73 [-]: GETGLOBAL R3 K25       ; R3 := mMovie
 74 [-]: SELF      R3 R3 K26    ; R4 := R3; R3 := R3["0xA58BB96C"]
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 6004
; #Upvalues:       15
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 1         ; if R0 then PC := 91
  2 [-]: JMP       91           ; PC := 91
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Open"]
  9 [-]: TEST      R3 1         ; if R3 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["DioOpen"]
 13 [-]: TEST      R3 0         ; if not R3 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
 23 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 24 [-]: LOADK     R5 K5        ; R5 := "CancelPressed"
 25 [-]: LOADK     R6 K6        ; R6 := ""
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R3 K7        ; R3 := Engine
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x9490FE70"]
 30 [-]: CALL      R3 1 2       ; R3 := R3()
 31 [-]: TEST      R3 0         ; if not R3 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 34 [-]: GETUPVAL  R4 U2        ; R4 := U2
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: TEST      R3 1         ; if R3 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: GETUPVAL  R3 U2        ; R3 := U2
 39 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 40 [-]: LOADK     R5 K9        ; R5 := "IsExpanded"
 41 [-]: LOADK     R6 K6        ; R6 := ""
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: TEST      R3 0         ; if not R3 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETUPVAL  R3 U2        ; R3 := U2
 46 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 47 [-]: LOADK     R5 K10       ; R5 := "DroneInfoUnfocused"
 48 [-]: LOADK     R6 K6        ; R6 := ""
 49 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 52 [-]: GETGLOBAL R4 K11       ; R4 := _T
 53 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["SquadOverlay"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: TEST      R3 1         ; if R3 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R3 K11       ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SquadOverlay"]
 59 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 60 [-]: LOADK     R5 K13       ; R5 := "CancelMatchmakingDropdown"
 61 [-]: LOADK     R6 K6        ; R6 := ""
 62 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 63 [-]: TEST      R3 0         ; if not R3 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETUPVAL  R3 U3        ; R3 := U3
 67 [-]: GETUPVAL  R4 U4        ; R4 := U4
 68 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["READ_ONLY"]
 69 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: GETUPVAL  R3 U5        ; R3 := U5
 72 [-]: GETUPVAL  R4 U4        ; R4 := U4
 73 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["READ_ONLY"]
 74 [-]: CALL      R3 2 1       ; R3(R4)
 75 [-]: RETURN    R0 1         ; return 
 76 [-]: GETUPVAL  R3 U6        ; R3 := U6
 77 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mTargetVal"]
 78 [-]: GETUPVAL  R4 U7        ; R4 := U7
 79 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["STARTING_ZOOM"]
 80 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 83 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 84 [-]: LOADK     R5 K18       ; R5 := "onKeyDown_MENU_RIGHT_CLICK"
 85 [-]: LOADK     R6 K6        ; R6 := ""
 86 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 87 [-]: RETURN    R0 1         ; return 
 88 [-]: EQ        0 R0 K19     ; if R0 ~= "0x0" then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 92 [-]: GETUPVAL  R4 U1        ; R4 := U1
 93 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: TEST      R3 1         ; if R3 then PC := 111
 96 [-]: JMP       111          ; PC := 111
 97 [-]: GETGLOBAL R3 K20       ; R3 := 0x52E17A90
 98 [-]: GETUPVAL  R4 U1        ; R4 := U1
 99 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
100 [-]: LOADK     R5 K21       ; R5 := "_root"
101 [-]: GETGLOBAL R6 K22       ; R6 := UISys
102 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["FlashInstance_LINEAR"]
103 [-]: NEWTABLE  R7 1 0       ; R7 := {}
104 [-]: LOADK     R8 K24       ; R8 := "_alpha"
105 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
106 [-]: NEWTABLE  R8 1 0       ; R8 := {}
107 [-]: LOADK     R9 K25       ; R9 := 0
108 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
109 [-]: LOADK     R9 K26       ; R9 := 0.30000001192093
110 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
111 [-]: TEST      R2 1         ; if R2 then PC := 117
112 [-]: JMP       117          ; PC := 117
113 [-]: GETUPVAL  R3 U8        ; R3 := U8
114 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["0x25992394"]
115 [-]: GETGLOBAL R4 K28       ; R4 := closeSound
116 [-]: CALL      R3 2 1       ; R3(R4)
117 [-]: GETUPVAL  R3 U9        ; R3 := U9
118 [-]: MOVE      R4 R2        ; R4 := R2
119 [-]: CALL      R3 2 2       ; R3 := R3(R4)
120 [-]: TEST      R3 0         ; if not R3 then PC := 134
121 [-]: JMP       134          ; PC := 134
122 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
123 [-]: GETGLOBAL R4 K11       ; R4 := _T
124 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["SquadOverlay"]
125 [-]: CALL      R3 2 2       ; R3 := R3(R4)
126 [-]: TEST      R3 1         ; if R3 then PC := 134
127 [-]: JMP       134          ; PC := 134
128 [-]: GETGLOBAL R3 K11       ; R3 := _T
129 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SquadOverlay"]
130 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
131 [-]: LOADK     R5 K29       ; R5 := "ForceExitMap"
132 [-]: LOADK     R6 K6        ; R6 := ""
133 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
134 [-]: GETGLOBAL R3 K11       ; R3 := _T
135 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["0x45CBC39B"]
136 [-]: CALL      R3 1 1       ; R3()
137 [-]: MOVE      R3 R1        ; R3 := R1
138 [-]: MOVE      R3 R0        ; R3 := R0
139 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
140 [-]: GETUPVAL  R4 U10       ; R4 := U10
141 [-]: CALL      R3 2 2       ; R3 := R3(R4)
142 [-]: TEST      R3 1         ; if R3 then PC := 154
143 [-]: JMP       154          ; PC := 154
144 [-]: GETUPVAL  R3 U10       ; R3 := U10
145 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0xCE468565"]
146 [-]: LOADK     R5 K32       ; R5 := "x"
147 [-]: LOADK     R6 K33       ; R6 := 0.5
148 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
149 [-]: GETUPVAL  R3 U10       ; R3 := U10
150 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0xCE468565"]
151 [-]: LOADK     R5 K34       ; R5 := "y"
152 [-]: LOADK     R6 K33       ; R6 := 0.5
153 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
154 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
155 [-]: GETUPVAL  R4 U11       ; R4 := U11
156 [-]: CALL      R3 2 2       ; R3 := R3(R4)
157 [-]: TEST      R3 1         ; if R3 then PC := 185
158 [-]: JMP       185          ; PC := 185
159 [-]: GETUPVAL  R3 U12       ; R3 := U12
160 [-]: SETTABLE  R3 K35 K36   ; R3["Locked"] := "0x1"
161 [-]: GETUPVAL  R3 U12       ; R3 := U12
162 [-]: GETUPVAL  R4 U11       ; R4 := U11
163 [-]: SELF      R4 R4 K38    ; R5 := R4; R4 := R4["0x6DA72501"]
164 [-]: CALL      R4 2 2       ; R4 := R4(R5)
165 [-]: SETTABLE  R3 K37 R4    ; R3["Previous"] := R4
166 [-]: GETUPVAL  R3 U12       ; R3 := U12
167 [-]: GETUPVAL  R4 U13       ; R4 := U13
168 [-]: GETGLOBAL R5 K40       ; R5 := 0x221C9700
169 [-]: LOADK     R6 K25       ; R6 := 0
170 [-]: LOADK     R7 K25       ; R7 := 0
171 [-]: LOADK     R8 K41       ; R8 := 35
172 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
173 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
174 [-]: SETTABLE  R3 K39 R4    ; R3["Target"] := R4
175 [-]: GETUPVAL  R3 U12       ; R3 := U12
176 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["Prop"]
177 [-]: SELF      R3 R3 K43    ; R4 := R3; R3 := R3["0x5A7A6B1"]
178 [-]: LOADK     R5 K25       ; R5 := 0
179 [-]: CALL      R3 3 1       ; R3(R4,R5)
180 [-]: GETUPVAL  R3 U12       ; R3 := U12
181 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["Prop"]
182 [-]: SELF      R3 R3 K44    ; R4 := R3; R3 := R3["0xDB349344"]
183 [-]: LOADK     R5 K45       ; R5 := 1
184 [-]: CALL      R3 3 1       ; R3(R4,R5)
185 [-]: GETUPVAL  R3 U6        ; R3 := U6
186 [-]: SELF      R3 R3 K44    ; R4 := R3; R3 := R3["0xDB349344"]
187 [-]: LOADK     R5 K46       ; R5 := -100
188 [-]: CALL      R3 3 1       ; R3(R4,R5)
189 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
190 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0xD692CA7B"]
191 [-]: MOVE      R5 R0        ; R5 := R0
192 [-]: CALL      R3 3 1       ; R3(R4,R5)
193 [-]: TEST      R1 0         ; if not R1 then PC := 202
194 [-]: JMP       202          ; PC := 202
195 [-]: GETGLOBAL R3 K48       ; R3 := gFlashMgr
196 [-]: SELF      R3 R3 K49    ; R4 := R3; R3 := R3["0xC4E70543"]
197 [-]: CALL      R3 2 1       ; R3(R4)
198 [-]: GETUPVAL  R3 U14       ; R3 := U14
199 [-]: MOVE      R4 R2        ; R4 := R2
200 [-]: CALL      R3 2 1       ; R3(R4)
201 [-]: JMP       226          ; PC := 226
202 [-]: GETGLOBAL R3 K20       ; R3 := 0x52E17A90
203 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
204 [-]: LOADK     R5 K21       ; R5 := "_root"
205 [-]: GETGLOBAL R6 K22       ; R6 := UISys
206 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["FlashInstance_LINEAR"]
207 [-]: NEWTABLE  R7 1 0       ; R7 := {}
208 [-]: LOADK     R8 K24       ; R8 := "_alpha"
209 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
210 [-]: NEWTABLE  R8 1 0       ; R8 := {}
211 [-]: LOADK     R9 K25       ; R9 := 0
212 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
213 [-]: LOADK     R9 K26       ; R9 := 0.30000001192093
214 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
215 [-]: GETUPVAL  R3 U8        ; R3 := U8
216 [-]: GETTABLE  R3 R3 K50    ; R3 := R3["0xDB33ECB2"]
217 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
218 [-]: LOADK     R5 K45       ; R5 := 1
219 [-]: LOADK     R6 K26       ; R6 := 0.30000001192093
220 [-]: LOADK     R7 K25       ; R7 := 0
221 [-]: CLOSURE   R8 0         ; R8 := closure(Function #131.1)
222 [-]: GETUPVAL  R0 U14       ; R0 := U14
223 [-]: MOVE      R0 R2        ; R0 := R2
224 [-]: GETUPVAL  R0 U8        ; R0 := U8
225 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
226 [-]: RETURN    R0 1         ; return 


; Function #131.1:
;
; Name:            
; Defined at line: 6079
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC4E70543"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R0 2 1       ; R0(R1)
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xDB33ECB2"]
  9 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 10 [-]: LOADK     R2 K4        ; R2 := 0
 11 [-]: LOADK     R3 K5        ; R3 := 0.20000000298023
 12 [-]: LOADK     R4 K4        ; R4 := 0
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 6087
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R3 K1        ; R3 := _T
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["SCREEN_EXIT_REASON_FORCE_CLOSE"]
  6 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R3 K1        ; R3 := _T
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
 10 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: EQ        1 R1 K0      ; if R1 == "true" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 6091
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := 1
  2 [-]: LOADK     R3 K1        ; R3 := 100000
  3 [-]: LOADK     R4 K0        ; R4 := 1
  4 [-]: LEN       R5 R0        ; R5 := # R0
  5 [-]: LOADK     R6 K0        ; R6 := 1
  6 [-]: FORPREP   R4 15        ; R4 -= R6; PC := 15
  7 [-]: GETGLOBAL R8 K2        ; R8 := 0xB09F286F
  8 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
  9 [-]: MOVE      R10 R1       ; R10 := R1
 10 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 11 [-]: LT        0 R8 R3      ; if R8 >= R3 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R3 R8        ; R3 := R8
 14 [-]: MOVE      R2 R7        ; R2 := R7
 15 [-]: FORLOOP   R4 7         ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 6105
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x5328C56B"]
 12 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 15 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 16 [-]: LOADK     R3 K4        ; R3 := "Reticle"
 17 [-]: LOADK     R4 K5        ; R4 := "_x"
 18 [-]: GETUPVAL  R5 U1        ; R5 := U1
 19 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xB57E56DF"]
 20 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["x"]
 21 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 22 [-]: CALL      R1 0 1       ; R1(R2,...)
 23 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 25 [-]: LOADK     R3 K4        ; R3 := "Reticle"
 26 [-]: LOADK     R4 K8        ; R4 := "_y"
 27 [-]: GETUPVAL  R5 U1        ; R5 := U1
 28 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xB57E56DF"]
 29 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["y"]
 30 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 31 [-]: CALL      R1 0 1       ; R1(R2,...)
 32 [-]: GETUPVAL  R1 U2        ; R1 := U2
 33 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETUPVAL  R1 U2        ; R1 := U2
 36 [-]: CALL      R1 1 1       ; R1()
 37 [-]: LOADNIL   R1 R1        ; R1 := nil
 38 [-]: MOVE      R1 R2        ; R1 := R2
 39 [-]: GETUPVAL  R1 U3        ; R1 := U3
 40 [-]: TEST      R1 1         ; if R1 then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETUPVAL  R1 U4        ; R1 := U4
 43 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xD963824A"]
 44 [-]: CALL      R1 2 1       ; R1(R2)
 45 [-]: GETUPVAL  R1 U5        ; R1 := U5
 46 [-]: GETUPVAL  R2 U6        ; R2 := U6
 47 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["EDIT_REGIONS"]
 48 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 60
 49 [-]: JMP       60           ; PC := 60
 50 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 51 [-]: GETUPVAL  R2 U7        ; R2 := U7
 52 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mMovingRegion"]
 53 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 54 [-]: TEST      R1 1         ; if R1 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETUPVAL  R1 U7        ; R1 := U7
 57 [-]: SETTABLE  R1 K13 K10   ; R1["mMovingRegion"] := nil
 58 [-]: GETUPVAL  R1 U7        ; R1 := U7
 59 [-]: SETTABLE  R1 K14 K10   ; R1["mChildNodes"] := nil
 60 [-]: GETUPVAL  R1 U5        ; R1 := U5
 61 [-]: GETUPVAL  R2 U6        ; R2 := U6
 62 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["EDIT_NODES"]
 63 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 73
 64 [-]: JMP       73           ; PC := 73
 65 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 66 [-]: GETUPVAL  R2 U7        ; R2 := U7
 67 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mMovingNode"]
 68 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 69 [-]: TEST      R1 1         ; if R1 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETUPVAL  R1 U7        ; R1 := U7
 72 [-]: SETTABLE  R1 K16 K10   ; R1["mMovingNode"] := nil
 73 [-]: GETUPVAL  R1 U5        ; R1 := U5
 74 [-]: GETUPVAL  R2 U6        ; R2 := U6
 75 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["EDIT_NODE_DECOS"]
 76 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 92
 77 [-]: JMP       92           ; PC := 92
 78 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 79 [-]: GETUPVAL  R2 U7        ; R2 := U7
 80 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mMovingNode"]
 81 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 82 [-]: TEST      R1 1         ; if R1 then PC := 92
 83 [-]: JMP       92           ; PC := 92
 84 [-]: GETUPVAL  R1 U7        ; R1 := U7
 85 [-]: SETTABLE  R1 K16 K10   ; R1["mMovingNode"] := nil
 86 [-]: GETUPVAL  R1 U7        ; R1 := U7
 87 [-]: SETTABLE  R1 K18 K19   ; R1["mEditingOffset"] := "0x0"
 88 [-]: GETUPVAL  R1 U7        ; R1 := U7
 89 [-]: SETTABLE  R1 K20 K19   ; R1["mEditingRotation"] := "0x0"
 90 [-]: GETUPVAL  R1 U7        ; R1 := U7
 91 [-]: SETTABLE  R1 K21 K19   ; R1["mEditingScale"] := "0x0"
 92 [-]: GETUPVAL  R1 U5        ; R1 := U5
 93 [-]: GETUPVAL  R2 U6        ; R2 := U6
 94 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
 95 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETUPVAL  R1 U7        ; R1 := U7
 98 [-]: GETTABLE  R1 R1 K23    ; R1 := R1["mControlPointHeld"]
 99 [-]: TEST      R1 0         ; if not R1 then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: GETUPVAL  R1 U7        ; R1 := U7
102 [-]: SETTABLE  R1 K23 K19   ; R1["mControlPointHeld"] := "0x0"
103 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 6144
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 6148
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["x"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["y"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["z"]
  4 [-]: RETURN    R2 4         ; return R2,R3,R4
  5 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 6170
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["position"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x221C9700
  3 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["x"]
  4 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["y"]
  5 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["z"]
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: LOADNIL   R3 R3        ; R3 := nil
  8 [-]: LOADK     R4 K5        ; R4 := 1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: LEN       R5 R5        ; R5 := # R5
 11 [-]: LOADK     R6 K5        ; R6 := 1
 12 [-]: FORPREP   R4 20        ; R4 -= R6; PC := 20
 13 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["radialSector"]
 14 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["region"]
 15 [-]: SUB       R9 R7 K5     ; R9 := R7 - 1
 16 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R3 R8 R7     ; R3 := R8[R7]
 20 [-]: FORLOOP   R4 13        ; R4 += R6; if R4 <= R5 then begin PC := 13; R7 := R4 end
 21 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 22 [-]: GETUPVAL  R9 U1        ; R9 := U1
 23 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 24 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 25 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 26 [-]: UNM       R8 R8        ; R8 := - R8
 27 [-]: GETUPVAL  R9 U1        ; R9 := U1
 28 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 29 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 30 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETTABLE  R8 R3 K9     ; R8 := R3["zoomedFraming"]
 33 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["z"]
 34 [-]: ADD       R8 R8 K10    ; R8 := R8 + 0.64999997615814
 35 [-]: SETTABLE  R2 K4 R8     ; R2["z"] := R8
 36 [-]: JMP       38           ; PC := 38
 37 [-]: SETTABLE  R2 K4 K11    ; R2["z"] := 8
 38 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 39 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 40 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 41 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 42 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 43 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 44 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 45 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 46 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 47 [-]: GETTABLE  R9 R2 K3     ; R9 := R2["y"]
 48 [-]: GETTABLE  R10 R2 K4    ; R10 := R2["z"]
 49 [-]: RETURN    R8 4         ; return R8,R9,R10
 50 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 6195
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R2        ; R0 := R2
 13 [-]: JMP       14           ; PC := 14
 14 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 6207
; #Upvalues:       14
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: EQ        0 R3 R0      ; if R3 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R3 1 1       ; R3()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: CALL      R3 1 1       ; R3()
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["zoomedFraming"]
 15 [-]: CALL      R3 3 4       ; R3,R4,R5 := R3(R4,R5)
 16 [-]: GETUPVAL  R6 U3        ; R6 := U3
 17 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 18 [-]: LOADK     R8 K2        ; R8 := "x"
 19 [-]: MOVE      R9 R3        ; R9 := R3
 20 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 21 [-]: GETUPVAL  R6 U3        ; R6 := U3
 22 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 23 [-]: LOADK     R8 K3        ; R8 := "y"
 24 [-]: MOVE      R9 R4        ; R9 := R4
 25 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 26 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 27 [-]: MOVE      R7 R2        ; R7 := R2
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: TEST      R6 0         ; if not R6 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R6 U4        ; R6 := U4
 32 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xDB349344"]
 33 [-]: MOVE      R8 R5        ; R8 := R5
 34 [-]: CALL      R6 3 1       ; R6(R7,R8)
 35 [-]: MOVE      R1 R5        ; R1 := R5
 36 [-]: GETUPVAL  R6 U7        ; R6 := U7
 37 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xF81722A2"]
 38 [-]: GETUPVAL  R7 U8        ; R7 := U8
 39 [-]: LOADK     R8 K7        ; R8 := 0.5
 40 [-]: LOADK     R9 K8        ; R9 := 2
 41 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 42 [-]: MOVE      R6 R6        ; R6 := R6
 43 [-]: GETUPVAL  R6 U7        ; R6 := U7
 44 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0x25992394"]
 45 [-]: GETGLOBAL R7 K10       ; R7 := zoomInRegionSound
 46 [-]: CALL      R6 2 1       ; R6(R7)
 47 [-]: GETUPVAL  R6 U9        ; R6 := U9
 48 [-]: CALL      R6 1 1       ; R6()
 49 [-]: GETGLOBAL R6 K11       ; R6 := 0xCAA43ABB
 50 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["zoomedInEffects"]
 51 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 52 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 53 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["instance"]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: TEST      R7 1         ; if R7 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 58 [-]: MOVE      R8 R6        ; R8 := R6
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: TEST      R7 1         ; if R7 then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["instance"]
 63 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7["0xAB436EF2"]
 64 [-]: MOVE      R9 R6        ; R9 := R6
 65 [-]: GETGLOBAL R10 K15      ; R10 := EMPTY_SYMBOL
 66 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 67 [-]: GETUPVAL  R7 U10       ; R7 := U10
 68 [-]: GETTABLE  R7 R7 K16    ; R7 := R7[1]
 69 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 70 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 71 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["red"]
 72 [-]: CALL      R7 3 1       ; R7(R8,R9)
 73 [-]: GETUPVAL  R7 U10       ; R7 := U10
 74 [-]: GETTABLE  R7 R7 K8     ; R7 := R7[2]
 75 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 76 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 77 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["green"]
 78 [-]: CALL      R7 3 1       ; R7(R8,R9)
 79 [-]: GETUPVAL  R7 U10       ; R7 := U10
 80 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[3]
 81 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 82 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 83 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["blue"]
 84 [-]: CALL      R7 3 1       ; R7(R8,R9)
 85 [-]: GETGLOBAL R7 K22       ; R7 := _T
 86 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 87 [-]: TEST      R7 0         ; if not R7 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETGLOBAL R7 K22       ; R7 := _T
 90 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 91 [-]: SETTABLE  R7 K24 R0    ; R7["selectedPlanet"] := R0
 92 [-]: GETGLOBAL R7 K22       ; R7 := _T
 93 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["NemesisRegionTransmissionPlayed"]
 94 [-]: TEST      R7 1         ; if R7 then PC := 159
 95 [-]: JMP       159          ; PC := 159
 96 [-]: GETUPVAL  R7 U11       ; R7 := U11
 97 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["Active"]
 98 [-]: TEST      R7 1         ; if R7 then PC := 159
 99 [-]: JMP       159          ; PC := 159
100 [-]: GETGLOBAL R7 K27       ; R7 := gGameData
101 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7["0x17358D95"]
102 [-]: CALL      R7 2 2       ; R7 := R7(R8)
103 [-]: GETGLOBAL R8 K4        ; R8 := 0x400E7765
104 [-]: MOVE      R9 R7        ; R9 := R7
105 [-]: CALL      R8 2 2       ; R8 := R8(R9)
106 [-]: TEST      R8 1         ; if R8 then PC := 159
107 [-]: JMP       159          ; PC := 159
108 [-]: GETTABLE  R8 R7 K29    ; R8 := R7["mInfluenceNodes"]
109 [-]: LOADK     R9 K16       ; R9 := 1
110 [-]: LEN       R10 R8       ; R10 := # R8
111 [-]: LOADK     R11 K16      ; R11 := 1
112 [-]: FORPREP   R9 158       ; R9 -= R11; PC := 158
113 [-]: GETUPVAL  R13 U12      ; R13 := U12
114 [-]: SELF      R13 R13 K30  ; R14 := R13; R13 := R13["0xF64198FD"]
115 [-]: GETTABLE  R15 R8 R12   ; R15 := R8[R12]
116 [-]: GETTABLE  R15 R15 K31  ; R15 := R15["mNode"]
117 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
118 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["name"]
119 [-]: GETTABLE  R14 R0 K32   ; R14 := R0["name"]
120 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 158
121 [-]: JMP       158          ; PC := 158
122 [-]: GETGLOBAL R13 K33      ; R13 := _G
123 [-]: GETGLOBAL R14 K33      ; R14 := _G
124 [-]: GETTABLE  R14 R14 K34  ; R14 := R14["NemesisTauntCooldowns"]
125 [-]: TEST      R14 1        ; if R14 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: NEWTABLE  R14 0 0      ; R14 := {}
128 [-]: SETTABLE  R13 K34 R14  ; R13["NemesisTauntCooldowns"] := R14
129 [-]: GETGLOBAL R13 K33      ; R13 := _G
130 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["NemesisTauntCooldowns"]
131 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["InfluenceRegion"]
132 [-]: TEST      R13 0        ; if not R13 then PC := 143
133 [-]: JMP       143          ; PC := 143
134 [-]: GETGLOBAL R13 K33      ; R13 := _G
135 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["NemesisTauntCooldowns"]
136 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["InfluenceRegion"]
137 [-]: ADD       R13 R13 K36  ; R13 := R13 + 1200
138 [-]: GETGLOBAL R14 K37      ; R14 := gGameRules
139 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0x7B107ACD"]
140 [-]: CALL      R14 2 2      ; R14 := R14(R15)
141 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 155
142 [-]: JMP       155          ; PC := 155
143 [-]: GETUPVAL  R13 U13      ; R13 := U13
144 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["0x85329A4B"]
145 [-]: GETGLOBAL R14 K40      ; R14 := 0xEC274B1A
146 [-]: LOADK     R15 K35      ; R15 := "InfluenceRegion"
147 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
148 [-]: CALL      R13 0 1      ; R13(R14,...)
149 [-]: GETGLOBAL R13 K33      ; R13 := _G
150 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["NemesisTauntCooldowns"]
151 [-]: GETGLOBAL R14 K37      ; R14 := gGameRules
152 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0x7B107ACD"]
153 [-]: CALL      R14 2 2      ; R14 := R14(R15)
154 [-]: SETTABLE  R13 K35 R14  ; R13["InfluenceRegion"] := R14
155 [-]: GETGLOBAL R13 K22      ; R13 := _T
156 [-]: SETTABLE  R13 K25 K41  ; R13["NemesisRegionTransmissionPlayed"] := "0x1"
157 [-]: JMP       159          ; PC := 159
158 [-]: FORLOOP   R9 113       ; R9 += R11; if R9 <= R10 then begin PC := 113; R12 := R9 end
159 [-]: GETGLOBAL R13 K22      ; R13 := _T
160 [-]: SETTABLE  R13 K42 R0   ; R13["StarChartSelectedRegion"] := R0
161 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 6268
; #Upvalues:       12
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R2 1 1       ; R2()
 12 [-]: GETUPVAL  R2 U3        ; R2 := U3
 13 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
 14 [-]: GETUPVAL  R3 U4        ; R3 := U4
 15 [-]: LOADK     R4 K1        ; R4 := 0.5
 16 [-]: LOADK     R5 K2        ; R5 := 2
 17 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 18 [-]: MOVE      R2 R2        ; R2 := R2
 19 [-]: GETUPVAL  R2 U5        ; R2 := U5
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["zoomedFraming"]
 22 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
 23 [-]: GETUPVAL  R5 U6        ; R5 := U6
 24 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mCurrentScroll"]
 25 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["x"]
 26 [-]: GETUPVAL  R6 U6        ; R6 := U6
 27 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mCurrentScroll"]
 28 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["y"]
 29 [-]: GETUPVAL  R7 U3        ; R7 := U3
 30 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x2D888705"]
 31 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 32 [-]: SETTABLE  R8 K8 R5     ; R8["X"] := R5
 33 [-]: SETTABLE  R8 K9 R6     ; R8["Y"] := R6
 34 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 35 [-]: SETTABLE  R9 K8 R2     ; R9["X"] := R2
 36 [-]: SETTABLE  R9 K9 R3     ; R9["Y"] := R3
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: LOADK     R8 K10       ; R8 := 0
 39 [-]: LOADK     R9 K10       ; R9 := 0
 40 [-]: GETUPVAL  R10 U7       ; R10 := U7
 41 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mCurVal"]
 42 [-]: LT        0 K10 R7     ; if 0 >= R7 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R11 K12      ; R11 := math
 45 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0x8B011038"]
 46 [-]: LOADK     R12 K14      ; R12 := 1.5
 47 [-]: MUL       R13 K15 R7   ; R13 := 4 * R7
 48 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 49 [-]: TEST      R11 1        ; if R11 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: LOADK     R11 K10      ; R11 := 0
 52 [-]: LOADK     R12 K16      ; R12 := -2
 53 [-]: CLOSURE   R13 0        ; R13 := closure(Function #140.1)
 54 [-]: MOVE      R0 R10       ; R0 := R10
 55 [-]: MOVE      R0 R12       ; R0 := R12
 56 [-]: MOVE      R0 R4        ; R0 := R4
 57 [-]: GETUPVAL  R0 U7        ; R0 := U7
 58 [-]: MOVE      R0 R8        ; R0 := R8
 59 [-]: MOVE      R0 R5        ; R0 := R5
 60 [-]: MOVE      R0 R2        ; R0 := R2
 61 [-]: MOVE      R0 R9        ; R0 := R9
 62 [-]: MOVE      R0 R6        ; R0 := R6
 63 [-]: MOVE      R0 R3        ; R0 := R3
 64 [-]: GETUPVAL  R0 U6        ; R0 := U6
 65 [-]: GETUPVAL  R0 U8        ; R0 := U8
 66 [-]: GETUPVAL  R0 U9        ; R0 := U9
 67 [-]: MOVE      R14 R1       ; R14 := R1
 68 [-]: MOVE      R14 R10      ; R14 := R10
 69 [-]: GETGLOBAL R14 K17      ; R14 := 0x52E17A90
 70 [-]: GETGLOBAL R15 K18      ; R15 := mMovie
 71 [-]: LOADK     R16 K19      ; R16 := "_root"
 72 [-]: GETGLOBAL R17 K20      ; R17 := UISys
 73 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["FlashInstance_LINEAR"]
 74 [-]: NEWTABLE  R18 1 0      ; R18 := {}
 75 [-]: MOVE      R19 R13      ; R19 := R13
 76 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 77 [-]: NEWTABLE  R19 1 0      ; R19 := {}
 78 [-]: LOADK     R20 K22      ; R20 := 1
 79 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
 80 [-]: MOVE      R20 R11      ; R20 := R11
 81 [-]: LOADK     R21 K10      ; R21 := 0
 82 [-]: CLOSURE   R22 1        ; R22 := closure(Function #140.2)
 83 [-]: GETUPVAL  R0 U10       ; R0 := U10
 84 [-]: MOVE      R0 R1        ; R0 := R1
 85 [-]: CALL      R14 9 1      ; R14(R15,R16,R17,R18,R19,R20,R21,R22)
 86 [-]: GETUPVAL  R14 U3       ; R14 := U3
 87 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0x25992394"]
 88 [-]: GETGLOBAL R15 K24      ; R15 := jumpToRegionSound
 89 [-]: CALL      R14 2 1      ; R14(R15)
 90 [-]: GETUPVAL  R14 U11      ; R14 := U11
 91 [-]: GETTABLE  R14 R14 K22  ; R14 := R14[1]
 92 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 93 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
 94 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["red"]
 95 [-]: CALL      R14 3 1      ; R14(R15,R16)
 96 [-]: GETUPVAL  R14 U11      ; R14 := U11
 97 [-]: GETTABLE  R14 R14 K2   ; R14 := R14[2]
 98 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 99 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
100 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["green"]
101 [-]: CALL      R14 3 1      ; R14(R15,R16)
102 [-]: GETUPVAL  R14 U11      ; R14 := U11
103 [-]: GETTABLE  R14 R14 K29  ; R14 := R14[3]
104 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
105 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
106 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["blue"]
107 [-]: CALL      R14 3 1      ; R14(R15,R16)
108 [-]: GETGLOBAL R14 K31      ; R14 := 0xCAA43ABB
109 [-]: GETTABLE  R15 R0 K32   ; R15 := R0["zoomedInEffects"]
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
112 [-]: GETTABLE  R16 R0 K34   ; R16 := R0["instance"]
113 [-]: CALL      R15 2 2      ; R15 := R15(R16)
114 [-]: TEST      R15 1        ; if R15 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
117 [-]: MOVE      R16 R14      ; R16 := R14
118 [-]: CALL      R15 2 2      ; R15 := R15(R16)
119 [-]: TEST      R15 1        ; if R15 then PC := 126
120 [-]: JMP       126          ; PC := 126
121 [-]: GETTABLE  R15 R0 K34   ; R15 := R0["instance"]
122 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15["0xAB436EF2"]
123 [-]: MOVE      R17 R14      ; R17 := R14
124 [-]: GETGLOBAL R18 K36      ; R18 := EMPTY_SYMBOL
125 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
126 [-]: RETURN    R0 1         ; return 


; Function #140.1:
;
; Name:            
; Defined at line: 6295
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9E1B8940
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
 10 [-]: GETGLOBAL R4 K1        ; R4 := math
 11 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xD6F2D811"]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: LOADK     R6 K3        ; R6 := 0.89999997615814
 14 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 15 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: LOADK     R3 K4        ; R3 := 0
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: LE        0 R4 K5      ; if R4 > 0.5 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: GETUPVAL  R7 U1        ; R7 := U1
 24 [-]: MOVE      R8 R4        ; R8 := R4
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: MOVE      R3 R5        ; R3 := R5
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETUPVAL  R7 U2        ; R7 := U2
 31 [-]: MOVE      R8 R4        ; R8 := R4
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: MOVE      R3 R5        ; R3 := R5
 34 [-]: GETUPVAL  R5 U3        ; R5 := U3
 35 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 36 [-]: MOVE      R7 R3        ; R7 := R3
 37 [-]: CALL      R5 3 1       ; R5(R6,R7)
 38 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 39 [-]: GETUPVAL  R6 U5        ; R6 := U5
 40 [-]: GETUPVAL  R7 U6        ; R7 := U6
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: MOVE      R5 R4        ; R5 := R4
 44 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 45 [-]: GETUPVAL  R6 U8        ; R6 := U8
 46 [-]: GETUPVAL  R7 U9        ; R7 := U9
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R5 R7        ; R5 := R7
 50 [-]: GETUPVAL  R5 U10       ; R5 := U10
 51 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 52 [-]: LOADK     R7 K9        ; R7 := "x"
 53 [-]: GETUPVAL  R8 U4        ; R8 := U4
 54 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 55 [-]: GETUPVAL  R5 U10       ; R5 := U10
 56 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 57 [-]: LOADK     R7 K10       ; R7 := "y"
 58 [-]: GETUPVAL  R8 U7        ; R8 := U7
 59 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 60 [-]: GETUPVAL  R5 U11       ; R5 := U11
 61 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 62 [-]: GETUPVAL  R7 U4        ; R7 := U4
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: GETUPVAL  R5 U12       ; R5 := U12
 65 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 66 [-]: GETUPVAL  R7 U7        ; R7 := U7
 67 [-]: CALL      R5 3 1       ; R5(R6,R7)
 68 [-]: RETURN    R0 1         ; return 


; Function #140.2:
;
; Name:            
; Defined at line: 6318
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 6336
; #Upvalues:       9
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  108

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x9FAED6BC
  2 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["name"]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
  5 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["name"]
  6 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["radialSector"]
  7 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["nodeType"]
  8 [-]: GETUPVAL  R8 U1        ; R8 := U1
  9 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["0x4A4041CA"]
 10 [-]: MOVE      R9 R0        ; R9 := R0
 11 [-]: MOVE      R10 R2       ; R10 := R2
 12 [-]: GETUPVAL  R11 U2       ; R11 := U2
 13 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 14 [-]: MOVE      R8 R0        ; R8 := R0
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["mName"]
 17 [-]: GETGLOBAL R9 K6        ; R9 := _G
 18 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["CachedGoalInfo"]
 19 [-]: LOADK     R10 K8       ; R10 := ""
 20 [-]: GETGLOBAL R11 K9       ; R11 := string
 21 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["0x639C642A"]
 22 [-]: GETGLOBAL R12 K11      ; R12 := 0xE6DC43B0
 23 [-]: GETGLOBAL R13 K0       ; R13 := 0x9FAED6BC
 24 [-]: GETTABLE  R14 R0 K12   ; R14 := R0["locTag"]
 25 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 26 [-]: MOVE      R14 R0       ; R14 := R0
 27 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
 28 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 29 [-]: GETGLOBAL R12 K13      ; R12 := _T
 30 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["CachedSyndicateMissions"]
 31 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 32 [-]: TEST      R12 0        ; if not R12 then PC := 67
 33 [-]: JMP       67           ; PC := 67
 34 [-]: GETGLOBAL R12 K13      ; R12 := _T
 35 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["CachedSyndicateMissions"]
 36 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 37 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mVisible"]
 38 [-]: TEST      R12 0        ; if not R12 then PC := 67
 39 [-]: JMP       67           ; PC := 67
 40 [-]: GETGLOBAL R12 K13      ; R12 := _T
 41 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["CachedAlerts"]
 42 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 43 [-]: TEST      R12 0        ; if not R12 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R12 K13      ; R12 := _T
 46 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["CachedAlerts"]
 47 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 48 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mVisible"]
 49 [-]: TEST      R12 1        ; if R12 then PC := 67
 50 [-]: JMP       67           ; PC := 67
 51 [-]: GETTABLE  R12 R9 R5    ; R12 := R9[R5]
 52 [-]: TEST      R12 1        ; if R12 then PC := 67
 53 [-]: JMP       67           ; PC := 67
 54 [-]: MOVE      R12 R11      ; R12 := R11
 55 [-]: LOADK     R13 K17      ; R13 := " - "
 56 [-]: GETGLOBAL R14 K9       ; R14 := string
 57 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x639C642A"]
 58 [-]: GETGLOBAL R15 K11      ; R15 := 0xE6DC43B0
 59 [-]: GETGLOBAL R16 K13      ; R16 := _T
 60 [-]: GETTABLE  R16 R16 K14  ; R16 := R16["CachedSyndicateMissions"]
 61 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
 62 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["mSyndicateName"]
 63 [-]: MOVE      R17 R0       ; R17 := R0
 64 [-]: CALL      R15 3 0      ; R15,... := R15(R16,R17)
 65 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 66 [-]: CONCAT    R11 R12 R14  ; R11 := R12 .. R13 .. R14
 67 [-]: GETUPVAL  R12 U3       ; R12 := U3
 68 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["0xF81722A2"]
 69 [-]: GETGLOBAL R13 K9       ; R13 := string
 70 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["0xDE44F664"]
 71 [-]: MOVE      R14 R5       ; R14 := R5
 72 [-]: GETUPVAL  R15 U1       ; R15 := U1
 73 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["KEY_TAG"]
 74 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 75 [-]: EQ        1 R13 K22    ; if R13 == nil then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: MOVE      R13 R0       ; R13 := R0
 78 [-]: MOVE      R13 R1       ; R13 := R1
 79 [-]: GETGLOBAL R14 K23      ; R14 := mMovie
 80 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14["0x5DB0BD4"]
 81 [-]: LOADK     R16 K25      ; R16 := "/Lotus/Language/Game/MissionName_Default"
 82 [-]: MOVE      R17 R0       ; R17 := R0
 83 [-]: NEWTABLE  R18 1 1      ; R18 := {}
 84 [-]: SETTABLE  R18 K26 R11  ; R18["MISSION_NAME"] := R11
 85 [-]: LOADNIL   R19 R19      ; R19 := nil
 86 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 87 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 88 [-]: MOVE      R15 R11      ; R15 := R11
 89 [-]: MOVE      R16 R0       ; R16 := R0
 90 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 91 [-]: GETGLOBAL R13 K27      ; R13 := Lotus_Game
 92 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["NT_HUB"]
 93 [-]: EQ        1 R7 R13     ; if R7 == R13 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R13 R0       ; R13 := R0
 96 [-]: MOVE      R13 R1       ; R13 := R1
 97 [-]: GETGLOBAL R14 K9       ; R14 := string
 98 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["0xDE44F664"]
 99 [-]: MOVE      R15 R5       ; R15 := R5
100 [-]: LOADK     R16 K29      ; R16 := "Dojo"
101 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
102 [-]: EQ        0 R14 K22    ; if R14 ~= nil then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R14 R0       ; R14 := R0
105 [-]: MOVE      R14 R1       ; R14 := R1
106 [-]: LOADNIL   R15 R15      ; R15 := nil
107 [-]: LOADK     R16 K30      ; R16 := 0
108 [-]: MOVE      R17 R0       ; R17 := R0
109 [-]: LOADK     R18 K8       ; R18 := ""
110 [-]: LOADK     R19 K30      ; R19 := 0
111 [-]: LOADK     R20 K31      ; R20 := 3
112 [-]: LOADNIL   R21 R21      ; R21 := nil
113 [-]: LOADK     R22 K8       ; R22 := ""
114 [-]: MOVE      R23 R0       ; R23 := R0
115 [-]: LOADK     R24 K8       ; R24 := ""
116 [-]: GETGLOBAL R25 K13      ; R25 := _T
117 [-]: GETTABLE  R25 R25 K32  ; R25 := R25["gActiveMatchMakingMode"]
118 [-]: GETGLOBAL R26 K13      ; R26 := _T
119 [-]: GETTABLE  R26 R26 K33  ; R26 := R26["MATCHMAKING_QUICKMATCH_GAMEMODE"]
120 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 146
121 [-]: JMP       146          ; PC := 146
122 [-]: GETUPVAL  R25 U1       ; R25 := U1
123 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["0x25E52949"]
124 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["radialSector"]
125 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["region"]
126 [-]: ADD       R26 R26 K36  ; R26 := R26 + 1
127 [-]: CALL      R25 2 2      ; R25 := R25(R26)
128 [-]: TEST      R25 1        ; if R25 then PC := 146
129 [-]: JMP       146          ; PC := 146
130 [-]: GETUPVAL  R25 U1       ; R25 := U1
131 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["0xE4E5932F"]
132 [-]: MOVE      R26 R5       ; R26 := R5
133 [-]: CALL      R25 2 2      ; R25 := R25(R26)
134 [-]: MOVE      R1 R25       ; R1 := R25
135 [-]: GETUPVAL  R25 U4       ; R25 := U4
136 [-]: GETTABLE  R25 R25 R1   ; R25 := R25[R1]
137 [-]: TEST      R25 0        ; if not R25 then PC := 145
138 [-]: JMP       145          ; PC := 145
139 [-]: GETUPVAL  R25 U4       ; R25 := U4
140 [-]: GETTABLE  R25 R25 R1   ; R25 := R25[R1]
141 [-]: LT        0 K30 R25    ; if 0 >= R25 then PC := 145
142 [-]: JMP       145          ; PC := 145
143 [-]: GETUPVAL  R25 U4       ; R25 := U4
144 [-]: GETTABLE  R16 R25 R1   ; R16 := R25[R1]
145 [-]: MOVE      R17 R1       ; R17 := R1
146 [-]: LOADNIL   R25 R27      ; R25 := R26 := R27 := nil
147 [-]: LOADK     R28 K8       ; R28 := ""
148 [-]: CLOSURE   R29 0        ; R29 := closure(Function #141.1)
149 [-]: MOVE      R0 R28       ; R0 := R28
150 [-]: LOADK     R28 K38      ; R28 := "<p>"
151 [-]: TEST      R13 1        ; if R13 then PC := 155
152 [-]: JMP       155          ; PC := 155
153 [-]: TEST      R14 0        ; if not R14 then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: MOVE      R17 R0       ; R17 := R0
156 [-]: JMP       742          ; PC := 742
157 [-]: GETUPVAL  R30 U0       ; R30 := U0
158 [-]: GETTABLE  R30 R30 K39  ; R30 := R30["mAlertInfo"]
159 [-]: EQ        1 R30 K22    ; if R30 == nil then PC := 229
160 [-]: JMP       229          ; PC := 229
161 [-]: LOADK     R30 K40      ; R30 := " ("
162 [-]: GETGLOBAL R31 K11      ; R31 := 0xE6DC43B0
163 [-]: LOADK     R32 K41      ; R32 := "/Lotus/Language/Menu/Notification_Alert"
164 [-]: MOVE      R33 R0       ; R33 := R0
165 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
166 [-]: LOADK     R32 K42      ; R32 := ")"
167 [-]: CONCAT    R10 R30 R32  ; R10 := R30 .. R31 .. R32
168 [-]: GETGLOBAL R30 K43      ; R30 := Engine
169 [-]: GETTABLE  R30 R30 K44  ; R30 := R30["0xD09D7910"]
170 [-]: GETGLOBAL R31 K13      ; R31 := _T
171 [-]: GETTABLE  R31 R31 K16  ; R31 := R31["CachedAlerts"]
172 [-]: GETTABLE  R31 R31 R5   ; R31 := R31[R5]
173 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["mAlertInfo"]
174 [-]: GETTABLE  R31 R31 K45  ; R31 := R31["mExpiry"]
175 [-]: CALL      R30 2 2      ; R30 := R30(R31)
176 [-]: GETUPVAL  R31 U1       ; R31 := U1
177 [-]: GETTABLE  R31 R31 K46  ; R31 := R31["0x9E1A1D26"]
178 [-]: MOVE      R32 R30      ; R32 := R30
179 [-]: CALL      R31 2 2      ; R31 := R31(R32)
180 [-]: MOVE      R25 R31      ; R25 := R31
181 [-]: GETGLOBAL R31 K13      ; R31 := _T
182 [-]: GETTABLE  R31 R31 K16  ; R31 := R31["CachedAlerts"]
183 [-]: GETTABLE  R31 R31 R5   ; R31 := R31[R5]
184 [-]: TEST      R31 0        ; if not R31 then PC := 220
185 [-]: JMP       220          ; PC := 220
186 [-]: GETGLOBAL R31 K13      ; R31 := _T
187 [-]: GETTABLE  R31 R31 K16  ; R31 := R31["CachedAlerts"]
188 [-]: GETTABLE  R31 R31 R5   ; R31 := R31[R5]
189 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["mAlertInfo"]
190 [-]: GETTABLE  R31 R31 K47  ; R31 := R31["mTag"]
191 [-]: GETGLOBAL R32 K48      ; R32 := EMPTY_SYMBOL
192 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 220
193 [-]: JMP       220          ; PC := 220
194 [-]: GETGLOBAL R31 K13      ; R31 := _T
195 [-]: GETTABLE  R31 R31 K16  ; R31 := R31["CachedAlerts"]
196 [-]: GETTABLE  R31 R31 R5   ; R31 := R31[R5]
197 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["mAlertInfo"]
198 [-]: GETTABLE  R31 R31 K49  ; R31 := R31["mMissionInfo"]
199 [-]: GETTABLE  R31 R31 K50  ; R31 := R31["descText"]
200 [-]: GETGLOBAL R32 K48      ; R32 := EMPTY_SYMBOL
201 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 220
202 [-]: JMP       220          ; PC := 220
203 [-]: LOADK     R31 K40      ; R31 := " ("
204 [-]: GETGLOBAL R32 K9       ; R32 := string
205 [-]: GETTABLE  R32 R32 K10  ; R32 := R32["0x639C642A"]
206 [-]: GETGLOBAL R33 K11      ; R33 := 0xE6DC43B0
207 [-]: GETGLOBAL R34 K0       ; R34 := 0x9FAED6BC
208 [-]: GETGLOBAL R35 K13      ; R35 := _T
209 [-]: GETTABLE  R35 R35 K16  ; R35 := R35["CachedAlerts"]
210 [-]: GETTABLE  R35 R35 R5   ; R35 := R35[R5]
211 [-]: GETTABLE  R35 R35 K39  ; R35 := R35["mAlertInfo"]
212 [-]: GETTABLE  R35 R35 K49  ; R35 := R35["mMissionInfo"]
213 [-]: GETTABLE  R35 R35 K50  ; R35 := R35["descText"]
214 [-]: CALL      R34 2 2      ; R34 := R34(R35)
215 [-]: MOVE      R35 R0       ; R35 := R0
216 [-]: CALL      R33 3 0      ; R33,... := R33(R34,R35)
217 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
218 [-]: LOADK     R33 K42      ; R33 := ")"
219 [-]: CONCAT    R10 R31 R33  ; R10 := R31 .. R32 .. R33
220 [-]: GETUPVAL  R31 U1       ; R31 := U1
221 [-]: GETTABLE  R31 R31 K51  ; R31 := R31["0xF030C338"]
222 [-]: GETGLOBAL R32 K23      ; R32 := mMovie
223 [-]: GETUPVAL  R33 U0       ; R33 := U0
224 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
225 [-]: GETTABLE  R33 R33 K52  ; R33 := R33["missionReward"]
226 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
227 [-]: MOVE      R26 R31      ; R26 := R31
228 [-]: JMP       742          ; PC := 742
229 [-]: GETUPVAL  R31 U0       ; R31 := U0
230 [-]: GETTABLE  R31 R31 K53  ; R31 := R31["mGoalInfo"]
231 [-]: TEST      R31 0        ; if not R31 then PC := 296
232 [-]: JMP       296          ; PC := 296
233 [-]: GETGLOBAL R31 K9       ; R31 := string
234 [-]: GETTABLE  R31 R31 K10  ; R31 := R31["0x639C642A"]
235 [-]: GETGLOBAL R32 K11      ; R32 := 0xE6DC43B0
236 [-]: GETUPVAL  R33 U0       ; R33 := U0
237 [-]: GETTABLE  R33 R33 K53  ; R33 := R33["mGoalInfo"]
238 [-]: GETTABLE  R33 R33 K54  ; R33 := R33["mDesc"]
239 [-]: MOVE      R34 R0       ; R34 := R0
240 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
241 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
242 [-]: MOVE      R12 R31      ; R12 := R31
243 [-]: GETGLOBAL R31 K9       ; R31 := string
244 [-]: GETTABLE  R31 R31 K10  ; R31 := R31["0x639C642A"]
245 [-]: GETGLOBAL R32 K23      ; R32 := mMovie
246 [-]: SELF      R32 R32 K24  ; R33 := R32; R32 := R32["0x5DB0BD4"]
247 [-]: LOADK     R34 K55      ; R34 := "/Lotus/Language/Game/MissionName_"
248 [-]: GETUPVAL  R35 U1       ; R35 := U1
249 [-]: GETTABLE  R35 R35 K56  ; R35 := R35["0x87B2D555"]
250 [-]: GETUPVAL  R36 U0       ; R36 := U0
251 [-]: GETTABLE  R36 R36 K57  ; R36 := R36["mMission"]
252 [-]: CALL      R35 2 2      ; R35 := R35(R36)
253 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
254 [-]: MOVE      R35 R0       ; R35 := R0
255 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
256 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
257 [-]: MOVE      R8 R31       ; R8 := R31
258 [-]: GETUPVAL  R31 U0       ; R31 := U0
259 [-]: GETTABLE  R31 R31 K57  ; R31 := R31["mMission"]
260 [-]: GETTABLE  R31 R31 K58  ; R31 := R31["archwingRequired"]
261 [-]: TEST      R31 0        ; if not R31 then PC := 742
262 [-]: JMP       742          ; PC := 742
263 [-]: GETGLOBAL R31 K23      ; R31 := mMovie
264 [-]: SELF      R31 R31 K24  ; R32 := R31; R31 := R31["0x5DB0BD4"]
265 [-]: LOADK     R33 K59      ; R33 := "<ARCHWING>"
266 [-]: MOVE      R34 R1       ; R34 := R1
267 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
268 [-]: LOADK     R32 K60      ; R32 := " "
269 [-]: MOVE      R33 R8       ; R33 := R8
270 [-]: CONCAT    R8 R31 R33   ; R8 := R31 .. R32 .. R33
271 [-]: GETUPVAL  R31 U0       ; R31 := U0
272 [-]: GETTABLE  R31 R31 K57  ; R31 := R31["mMission"]
273 [-]: GETTABLE  R31 R31 K61  ; R31 := R31["isSharkwingMission"]
274 [-]: TEST      R31 0        ; if not R31 then PC := 286
275 [-]: JMP       286          ; PC := 286
276 [-]: MOVE      R31 R8       ; R31 := R8
277 [-]: LOADK     R32 K40      ; R32 := " ("
278 [-]: GETGLOBAL R33 K23      ; R33 := mMovie
279 [-]: SELF      R33 R33 K24  ; R34 := R33; R33 := R33["0x5DB0BD4"]
280 [-]: LOADK     R35 K62      ; R35 := "/Lotus/Language/Menu/Sharkwing"
281 [-]: MOVE      R36 R0       ; R36 := R0
282 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
283 [-]: LOADK     R34 K42      ; R34 := ")"
284 [-]: CONCAT    R8 R31 R34   ; R8 := R31 .. R32 .. R33 .. R34
285 [-]: JMP       742          ; PC := 742
286 [-]: MOVE      R31 R8       ; R31 := R8
287 [-]: LOADK     R32 K40      ; R32 := " ("
288 [-]: GETGLOBAL R33 K23      ; R33 := mMovie
289 [-]: SELF      R33 R33 K24  ; R34 := R33; R33 := R33["0x5DB0BD4"]
290 [-]: LOADK     R35 K63      ; R35 := "/Lotus/Language/Menu/Loadout_Archwing"
291 [-]: MOVE      R36 R0       ; R36 := R0
292 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
293 [-]: LOADK     R34 K42      ; R34 := ")"
294 [-]: CONCAT    R8 R31 R34   ; R8 := R31 .. R32 .. R33 .. R34
295 [-]: JMP       742          ; PC := 742
296 [-]: GETUPVAL  R31 U0       ; R31 := U0
297 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["mGhostTowerMissionInfo"]
298 [-]: EQ        1 R31 K22    ; if R31 == nil then PC := 321
299 [-]: JMP       321          ; PC := 321
300 [-]: GETUPVAL  R31 U3       ; R31 := U3
301 [-]: GETTABLE  R31 R31 K19  ; R31 := R31["0xF81722A2"]
302 [-]: GETUPVAL  R32 U0       ; R32 := U0
303 [-]: GETTABLE  R32 R32 K64  ; R32 := R32["mGhostTowerMissionInfo"]
304 [-]: GETTABLE  R32 R32 K49  ; R32 := R32["mMissionInfo"]
305 [-]: GETTABLE  R32 R32 K65  ; R32 := R32["minEnemyLevel"]
306 [-]: LE        1 K66 R32    ; if 80 <= R32 then PC := 309
307 [-]: JMP       309          ; PC := 309
308 [-]: MOVE      R32 R0       ; R32 := R0
309 [-]: MOVE      R32 R1       ; R32 := R1
310 [-]: LOADK     R33 K67      ; R33 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
311 [-]: LOADK     R34 K68      ; R34 := "/Lotus/Language/Menu/GhostTowerMissionName"
312 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
313 [-]: LOADK     R32 K40      ; R32 := " ("
314 [-]: GETGLOBAL R33 K11      ; R33 := 0xE6DC43B0
315 [-]: MOVE      R34 R31      ; R34 := R31
316 [-]: MOVE      R35 R0       ; R35 := R0
317 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
318 [-]: LOADK     R34 K42      ; R34 := ")"
319 [-]: CONCAT    R10 R32 R34  ; R10 := R32 .. R33 .. R34
320 [-]: JMP       742          ; PC := 742
321 [-]: GETGLOBAL R32 K13      ; R32 := _T
322 [-]: GETTABLE  R32 R32 K69  ; R32 := R32["CachedSkullNodes"]
323 [-]: GETTABLE  R32 R32 R5   ; R32 := R32[R5]
324 [-]: EQ        1 R32 K22    ; if R32 == nil then PC := 363
325 [-]: JMP       363          ; PC := 363
326 [-]: TEST      R3 0         ; if not R3 then PC := 363
327 [-]: JMP       363          ; PC := 363
328 [-]: LOADK     R10 K40      ; R10 := " ("
329 [-]: LOADK     R32 K36      ; R32 := 1
330 [-]: GETGLOBAL R33 K13      ; R33 := _T
331 [-]: GETTABLE  R33 R33 K69  ; R33 := R33["CachedSkullNodes"]
332 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
333 [-]: LEN       R33 R33      ; R33 := # R33
334 [-]: LOADK     R34 K36      ; R34 := 1
335 [-]: FORPREP   R32 358      ; R32 -= R34; PC := 358
336 [-]: EQ        1 R35 K36    ; if R35 == 1 then PC := 344
337 [-]: JMP       344          ; PC := 344
338 [-]: GETGLOBAL R36 K9       ; R36 := string
339 [-]: GETTABLE  R36 R36 K10  ; R36 := R36["0x639C642A"]
340 [-]: MOVE      R37 R10      ; R37 := R10
341 [-]: CALL      R36 2 2      ; R36 := R36(R37)
342 [-]: LOADK     R37 K70      ; R37 := ", "
343 [-]: CONCAT    R10 R36 R37  ; R10 := R36 .. R37
344 [-]: MOVE      R36 R10      ; R36 := R10
345 [-]: GETGLOBAL R37 K9       ; R37 := string
346 [-]: GETTABLE  R37 R37 K10  ; R37 := R37["0x639C642A"]
347 [-]: GETGLOBAL R38 K23      ; R38 := mMovie
348 [-]: SELF      R38 R38 K24  ; R39 := R38; R38 := R38["0x5DB0BD4"]
349 [-]: GETGLOBAL R40 K13      ; R40 := _T
350 [-]: GETTABLE  R40 R40 K69  ; R40 := R40["CachedSkullNodes"]
351 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
352 [-]: GETTABLE  R40 R40 R35  ; R40 := R40[R35]
353 [-]: GETTABLE  R40 R40 K71  ; R40 := R40[2]
354 [-]: MOVE      R41 R0       ; R41 := R0
355 [-]: CALL      R38 4 0      ; R38,... := R38(R39,R40,R41)
356 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
357 [-]: CONCAT    R10 R36 R37  ; R10 := R36 .. R37
358 [-]: FORLOOP   R32 336      ; R32 += R34; if R32 <= R33 then begin PC := 336; R35 := R32 end
359 [-]: MOVE      R36 R10      ; R36 := R10
360 [-]: LOADK     R37 K42      ; R37 := ")"
361 [-]: CONCAT    R10 R36 R37  ; R10 := R36 .. R37
362 [-]: JMP       742          ; PC := 742
363 [-]: GETGLOBAL R36 K13      ; R36 := _T
364 [-]: GETTABLE  R36 R36 K72  ; R36 := R36["CachedSortieMissions"]
365 [-]: GETTABLE  R36 R36 R5   ; R36 := R36[R5]
366 [-]: TEST      R36 0        ; if not R36 then PC := 398
367 [-]: JMP       398          ; PC := 398
368 [-]: GETGLOBAL R36 K13      ; R36 := _T
369 [-]: GETTABLE  R36 R36 K72  ; R36 := R36["CachedSortieMissions"]
370 [-]: GETTABLE  R36 R36 R5   ; R36 := R36[R5]
371 [-]: GETTABLE  R36 R36 K73  ; R36 := R36["mShowInStarChart"]
372 [-]: TEST      R36 0        ; if not R36 then PC := 398
373 [-]: JMP       398          ; PC := 398
374 [-]: LOADK     R36 K40      ; R36 := " ("
375 [-]: GETGLOBAL R37 K11      ; R37 := 0xE6DC43B0
376 [-]: LOADK     R38 K74      ; R38 := "/Lotus/Language/Menu/SortieMissionName"
377 [-]: LOADNIL   R39 R39      ; R39 := nil
378 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
379 [-]: LOADK     R38 K42      ; R38 := ")"
380 [-]: CONCAT    R10 R36 R38  ; R10 := R36 .. R37 .. R38
381 [-]: GETGLOBAL R36 K43      ; R36 := Engine
382 [-]: GETTABLE  R36 R36 K44  ; R36 := R36["0xD09D7910"]
383 [-]: GETGLOBAL R37 K13      ; R37 := _T
384 [-]: GETTABLE  R37 R37 K72  ; R37 := R37["CachedSortieMissions"]
385 [-]: GETTABLE  R37 R37 R5   ; R37 := R37[R5]
386 [-]: GETTABLE  R37 R37 K45  ; R37 := R37["mExpiry"]
387 [-]: CALL      R36 2 2      ; R36 := R36(R37)
388 [-]: GETUPVAL  R37 U1       ; R37 := U1
389 [-]: GETTABLE  R37 R37 K75  ; R37 := R37["0xE233A311"]
390 [-]: MOVE      R38 R36      ; R38 := R36
391 [-]: CALL      R37 2 2      ; R37 := R37(R38)
392 [-]: MOVE      R25 R37      ; R25 := R37
393 [-]: GETGLOBAL R37 K13      ; R37 := _T
394 [-]: GETTABLE  R37 R37 K72  ; R37 := R37["CachedSortieMissions"]
395 [-]: GETTABLE  R37 R37 R5   ; R37 := R37[R5]
396 [-]: GETTABLE  R27 R37 K76  ; R27 := R37["mModifierAuraDesc"]
397 [-]: JMP       742          ; PC := 742
398 [-]: GETGLOBAL R37 K13      ; R37 := _T
399 [-]: GETTABLE  R37 R37 K14  ; R37 := R37["CachedSyndicateMissions"]
400 [-]: GETTABLE  R37 R37 R5   ; R37 := R37[R5]
401 [-]: TEST      R37 0        ; if not R37 then PC := 440
402 [-]: JMP       440          ; PC := 440
403 [-]: GETGLOBAL R37 K13      ; R37 := _T
404 [-]: GETTABLE  R37 R37 K14  ; R37 := R37["CachedSyndicateMissions"]
405 [-]: GETTABLE  R37 R37 R5   ; R37 := R37[R5]
406 [-]: GETTABLE  R37 R37 K15  ; R37 := R37["mVisible"]
407 [-]: TEST      R37 0        ; if not R37 then PC := 440
408 [-]: JMP       440          ; PC := 440
409 [-]: LOADK     R37 K40      ; R37 := " ("
410 [-]: GETGLOBAL R38 K11      ; R38 := 0xE6DC43B0
411 [-]: LOADK     R39 K77      ; R39 := "/Lotus/Language/Menu/SyndicateMissionName"
412 [-]: MOVE      R40 R0       ; R40 := R0
413 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
414 [-]: LOADK     R39 K42      ; R39 := ")"
415 [-]: CONCAT    R10 R37 R39  ; R10 := R37 .. R38 .. R39
416 [-]: GETGLOBAL R37 K43      ; R37 := Engine
417 [-]: GETTABLE  R37 R37 K44  ; R37 := R37["0xD09D7910"]
418 [-]: GETGLOBAL R38 K13      ; R38 := _T
419 [-]: GETTABLE  R38 R38 K14  ; R38 := R38["CachedSyndicateMissions"]
420 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
421 [-]: GETTABLE  R38 R38 K45  ; R38 := R38["mExpiry"]
422 [-]: CALL      R37 2 2      ; R37 := R37(R38)
423 [-]: GETUPVAL  R38 U1       ; R38 := U1
424 [-]: GETTABLE  R38 R38 K46  ; R38 := R38["0x9E1A1D26"]
425 [-]: MOVE      R39 R37      ; R39 := R37
426 [-]: CALL      R38 2 2      ; R38 := R38(R39)
427 [-]: MOVE      R25 R38      ; R25 := R38
428 [-]: GETGLOBAL R38 K23      ; R38 := mMovie
429 [-]: SELF      R38 R38 K24  ; R39 := R38; R38 := R38["0x5DB0BD4"]
430 [-]: LOADK     R40 K78      ; R40 := "/Lotus/Language/Menu/Syndicates_Reputation"
431 [-]: MOVE      R41 R1       ; R41 := R1
432 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
433 [-]: GETGLOBAL R39 K13      ; R39 := _T
434 [-]: GETTABLE  R39 R39 K14  ; R39 := R39["CachedSyndicateMissions"]
435 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
436 [-]: GETTABLE  R39 R39 K49  ; R39 := R39["mMissionInfo"]
437 [-]: GETTABLE  R39 R39 K79  ; R39 := R39["syndicateXP"]
438 [-]: CONCAT    R26 R38 R39  ; R26 := R38 .. R39
439 [-]: JMP       742          ; PC := 742
440 [-]: GETGLOBAL R38 K13      ; R38 := _T
441 [-]: GETTABLE  R38 R38 K80  ; R38 := R38["CachedActiveMissions"]
442 [-]: TEST      R38 0        ; if not R38 then PC := 472
443 [-]: JMP       472          ; PC := 472
444 [-]: GETGLOBAL R38 K13      ; R38 := _T
445 [-]: GETTABLE  R38 R38 K80  ; R38 := R38["CachedActiveMissions"]
446 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
447 [-]: TEST      R38 0        ; if not R38 then PC := 472
448 [-]: JMP       472          ; PC := 472
449 [-]: GETGLOBAL R38 K13      ; R38 := _T
450 [-]: GETTABLE  R38 R38 K80  ; R38 := R38["CachedActiveMissions"]
451 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
452 [-]: GETTABLE  R38 R38 K15  ; R38 := R38["mVisible"]
453 [-]: TEST      R38 0        ; if not R38 then PC := 472
454 [-]: JMP       472          ; PC := 472
455 [-]: GETGLOBAL R38 K43      ; R38 := Engine
456 [-]: GETTABLE  R38 R38 K44  ; R38 := R38["0xD09D7910"]
457 [-]: GETGLOBAL R39 K13      ; R39 := _T
458 [-]: GETTABLE  R39 R39 K80  ; R39 := R39["CachedActiveMissions"]
459 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
460 [-]: GETTABLE  R39 R39 K45  ; R39 := R39["mExpiry"]
461 [-]: CALL      R38 2 2      ; R38 := R38(R39)
462 [-]: GETUPVAL  R39 U1       ; R39 := U1
463 [-]: GETTABLE  R39 R39 K75  ; R39 := R39["0xE233A311"]
464 [-]: MOVE      R40 R38      ; R40 := R38
465 [-]: CALL      R39 2 2      ; R39 := R39(R40)
466 [-]: MOVE      R25 R39      ; R25 := R39
467 [-]: GETGLOBAL R39 K13      ; R39 := _T
468 [-]: GETTABLE  R39 R39 K80  ; R39 := R39["CachedActiveMissions"]
469 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
470 [-]: GETTABLE  R27 R39 K76  ; R27 := R39["mModifierAuraDesc"]
471 [-]: JMP       742          ; PC := 742
472 [-]: GETUPVAL  R39 U0       ; R39 := U0
473 [-]: GETTABLE  R39 R39 K81  ; R39 := R39["mInvasionInfo"]
474 [-]: EQ        1 R39 K22    ; if R39 == nil then PC := 742
475 [-]: JMP       742          ; PC := 742
476 [-]: GETUPVAL  R39 U0       ; R39 := U0
477 [-]: GETTABLE  R39 R39 K81  ; R39 := R39["mInvasionInfo"]
478 [-]: GETTABLE  R39 R39 K82  ; R39 := R39["mFaction"]
479 [-]: GETGLOBAL R40 K27      ; R40 := Lotus_Game
480 [-]: GETTABLE  R40 R40 K83  ; R40 := R40["FC_INFESTATION"]
481 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 484
482 [-]: JMP       484          ; PC := 484
483 [-]: MOVE      R23 R0       ; R23 := R0
484 [-]: MOVE      R23 R1       ; R23 := R1
485 [-]: GETUPVAL  R39 U0       ; R39 := U0
486 [-]: GETTABLE  R39 R39 K81  ; R39 := R39["mInvasionInfo"]
487 [-]: GETTABLE  R39 R39 K84  ; R39 := R39["mEventTag"]
488 [-]: GETGLOBAL R40 K48      ; R40 := EMPTY_SYMBOL
489 [-]: EQ        0 R39 R40    ; if R39 ~= R40 then PC := 526
490 [-]: JMP       526          ; PC := 526
491 [-]: GETUPVAL  R39 U0       ; R39 := U0
492 [-]: GETTABLE  R39 R39 K81  ; R39 := R39["mInvasionInfo"]
493 [-]: GETTABLE  R39 R39 K85  ; R39 := R39["mCount"]
494 [-]: GETUPVAL  R40 U0       ; R40 := U0
495 [-]: GETTABLE  R40 R40 K81  ; R40 := R40["mInvasionInfo"]
496 [-]: GETTABLE  R40 R40 K86  ; R40 := R40["mGoal"]
497 [-]: DIV       R39 R39 R40  ; R39 := R39 / R40
498 [-]: MUL       R39 R39 K87  ; R39 := R39 * 50
499 [-]: ADD       R39 K87 R39  ; R39 := 50 + R39
500 [-]: TEST      R23 0        ; if not R23 then PC := 512
501 [-]: JMP       512          ; PC := 512
502 [-]: GETUPVAL  R40 U0       ; R40 := U0
503 [-]: GETTABLE  R40 R40 K81  ; R40 := R40["mInvasionInfo"]
504 [-]: GETTABLE  R40 R40 K85  ; R40 := R40["mCount"]
505 [-]: GETUPVAL  R41 U0       ; R41 := U0
506 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
507 [-]: GETTABLE  R41 R41 K86  ; R41 := R41["mGoal"]
508 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
509 [-]: MUL       R40 R40 K88  ; R40 := R40 * 100
510 [-]: ADD       R39 K88 R40  ; R39 := 100 + R40
511 [-]: JMP       520          ; PC := 520
512 [-]: GETUPVAL  R40 U0       ; R40 := U0
513 [-]: GETTABLE  R40 R40 K81  ; R40 := R40["mInvasionInfo"]
514 [-]: GETTABLE  R40 R40 K89  ; R40 := R40["mAttackerMissionInfo"]
515 [-]: GETTABLE  R40 R40 K90  ; R40 := R40["faction"]
516 [-]: GETGLOBAL R41 K27      ; R41 := Lotus_Game
517 [-]: GETTABLE  R41 R41 K83  ; R41 := R41["FC_INFESTATION"]
518 [-]: EQ        0 R40 R41    ; if R40 ~= R41 then PC := 520
519 [-]: JMP       520          ; PC := 520
520 [-]: GETUPVAL  R40 U1       ; R40 := U1
521 [-]: GETTABLE  R40 R40 K91  ; R40 := R40["0x90BB414A"]
522 [-]: MOVE      R41 R39      ; R41 := R39
523 [-]: CALL      R40 2 2      ; R40 := R40(R41)
524 [-]: MOVE      R18 R40      ; R18 := R40
525 [-]: JMP       561          ; PC := 561
526 [-]: GETUPVAL  R40 U0       ; R40 := U0
527 [-]: GETTABLE  R40 R40 K81  ; R40 := R40["mInvasionInfo"]
528 [-]: GETTABLE  R40 R40 K85  ; R40 := R40["mCount"]
529 [-]: GETUPVAL  R41 U0       ; R41 := U0
530 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
531 [-]: GETTABLE  R41 R41 K86  ; R41 := R41["mGoal"]
532 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
533 [-]: MUL       R40 R40 K87  ; R40 := R40 * 50
534 [-]: ADD       R40 K87 R40  ; R40 := 50 + R40
535 [-]: GETUPVAL  R41 U0       ; R41 := U0
536 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
537 [-]: GETTABLE  R41 R41 K85  ; R41 := R41["mCount"]
538 [-]: GETUPVAL  R42 U0       ; R42 := U0
539 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
540 [-]: GETTABLE  R42 R42 K86  ; R42 := R42["mGoal"]
541 [-]: DIV       R41 R41 R42  ; R41 := R41 / R42
542 [-]: MUL       R41 R41 K87  ; R41 := R41 * 50
543 [-]: SUB       R41 K87 R41  ; R41 := 50 - R41
544 [-]: GETUPVAL  R42 U1       ; R42 := U1
545 [-]: GETTABLE  R42 R42 K91  ; R42 := R42["0x90BB414A"]
546 [-]: MOVE      R43 R40      ; R43 := R40
547 [-]: CALL      R42 2 2      ; R42 := R42(R43)
548 [-]: GETUPVAL  R43 U1       ; R43 := U1
549 [-]: GETTABLE  R43 R43 K91  ; R43 := R43["0x90BB414A"]
550 [-]: MOVE      R44 R41      ; R44 := R41
551 [-]: CALL      R43 2 2      ; R43 := R43(R44)
552 [-]: GETGLOBAL R44 K11      ; R44 := 0xE6DC43B0
553 [-]: LOADK     R45 K92      ; R45 := "/Lotus/Language/Menu/DilemmaActiveProgress"
554 [-]: NEWTABLE  R46 0 4      ; R46 := {}
555 [-]: SETTABLE  R46 K93 K94  ; R46["OPTION_ONE"] := "Nef Anyo"
556 [-]: SETTABLE  R46 K95 K96  ; R46["OPTION_TWO"] := "Alad V"
557 [-]: SETTABLE  R46 K97 R42  ; R46["VALUE_ONE"] := R42
558 [-]: SETTABLE  R46 K98 R43  ; R46["VALUE_TWO"] := R43
559 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
560 [-]: MOVE      R18 R44      ; R18 := R44
561 [-]: TEST      R23 0        ; if not R23 then PC := 573
562 [-]: JMP       573          ; PC := 573
563 [-]: GETGLOBAL R44 K11      ; R44 := 0xE6DC43B0
564 [-]: LOADK     R45 K99      ; R45 := "/Lotus/Language/Menu/MissionIntro_Invasion"
565 [-]: MOVE      R46 R0       ; R46 := R0
566 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
567 [-]: MOVE      R8 R44       ; R8 := R44
568 [-]: LOADK     R44 K40      ; R44 := " ("
569 [-]: GETUPVAL  R45 U0       ; R45 := U0
570 [-]: GETTABLE  R45 R45 K5   ; R45 := R45["mName"]
571 [-]: LOADK     R46 K42      ; R46 := ")"
572 [-]: CONCAT    R10 R44 R46  ; R10 := R44 .. R45 .. R46
573 [-]: GETGLOBAL R44 K100     ; R44 := 0x400E7765
574 [-]: GETGLOBAL R45 K101     ; R45 := gGameData
575 [-]: CALL      R44 2 2      ; R44 := R44(R45)
576 [-]: TEST      R44 1        ; if R44 then PC := 742
577 [-]: JMP       742          ; PC := 742
578 [-]: GETGLOBAL R44 K101     ; R44 := gGameData
579 [-]: SELF      R44 R44 K102 ; R45 := R44; R44 := R44["0x8EA5238E"]
580 [-]: CALL      R44 2 2      ; R44 := R44(R45)
581 [-]: LOADK     R45 K36      ; R45 := 1
582 [-]: LEN       R46 R44      ; R46 := # R44
583 [-]: LOADK     R47 K36      ; R47 := 1
584 [-]: FORPREP   R45 655      ; R45 -= R47; PC := 655
585 [-]: GETTABLE  R49 R44 R48  ; R49 := R44[R48]
586 [-]: GETTABLE  R49 R49 K103 ; R49 := R49["mId"]
587 [-]: GETTABLE  R49 R49 K103 ; R49 := R49["mId"]
588 [-]: GETUPVAL  R50 U0       ; R50 := U0
589 [-]: GETTABLE  R50 R50 K81  ; R50 := R50["mInvasionInfo"]
590 [-]: GETTABLE  R50 R50 K103 ; R50 := R50["mId"]
591 [-]: GETTABLE  R50 R50 K103 ; R50 := R50["mId"]
592 [-]: EQ        0 R49 R50    ; if R49 ~= R50 then PC := 655
593 [-]: JMP       655          ; PC := 655
594 [-]: GETTABLE  R49 R44 R48  ; R49 := R44[R48]
595 [-]: GETTABLE  R19 R49 K104 ; R19 := R49["mDelta"]
596 [-]: LT        0 K30 R19    ; if 0 >= R19 then PC := 623
597 [-]: JMP       623          ; PC := 623
598 [-]: GETUPVAL  R49 U0       ; R49 := U0
599 [-]: GETTABLE  R49 R49 K81  ; R49 := R49["mInvasionInfo"]
600 [-]: GETTABLE  R21 R49 K82  ; R21 := R49["mFaction"]
601 [-]: GETUPVAL  R49 U3       ; R49 := U3
602 [-]: GETTABLE  R49 R49 K19  ; R49 := R49["0xF81722A2"]
603 [-]: GETUPVAL  R50 U0       ; R50 := U0
604 [-]: GETTABLE  R50 R50 K81  ; R50 := R50["mInvasionInfo"]
605 [-]: GETTABLE  R50 R50 K105 ; R50 := R50["mAttackerName"]
606 [-]: GETGLOBAL R51 K48      ; R51 := EMPTY_SYMBOL
607 [-]: EQ        1 R50 R51    ; if R50 == R51 then PC := 610
608 [-]: JMP       610          ; PC := 610
609 [-]: MOVE      R50 R0       ; R50 := R0
610 [-]: MOVE      R50 R1       ; R50 := R1
611 [-]: GETUPVAL  R51 U1       ; R51 := U1
612 [-]: GETTABLE  R51 R51 K106 ; R51 := R51["FactionNames"]
613 [-]: ADD       R52 R21 K36  ; R52 := R21 + 1
614 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
615 [-]: GETGLOBAL R52 K0       ; R52 := 0x9FAED6BC
616 [-]: GETUPVAL  R53 U0       ; R53 := U0
617 [-]: GETTABLE  R53 R53 K81  ; R53 := R53["mInvasionInfo"]
618 [-]: GETTABLE  R53 R53 K105 ; R53 := R53["mAttackerName"]
619 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
620 [-]: CALL      R49 0 2      ; R49 := R49(R50,...)
621 [-]: MOVE      R22 R49      ; R22 := R49
622 [-]: JMP       655          ; PC := 655
623 [-]: LT        0 R19 K30    ; if R19 >= 0 then PC := 655
624 [-]: JMP       655          ; PC := 655
625 [-]: GETGLOBAL R49 K107     ; R49 := math
626 [-]: GETTABLE  R49 R49 K108 ; R49 := R49["0xF93F7CC8"]
627 [-]: MOVE      R50 R19      ; R50 := R19
628 [-]: CALL      R49 2 2      ; R49 := R49(R50)
629 [-]: MOVE      R19 R49      ; R19 := R49
630 [-]: GETUPVAL  R49 U0       ; R49 := U0
631 [-]: GETTABLE  R49 R49 K81  ; R49 := R49["mInvasionInfo"]
632 [-]: GETTABLE  R49 R49 K89  ; R49 := R49["mAttackerMissionInfo"]
633 [-]: GETTABLE  R21 R49 K90  ; R21 := R49["faction"]
634 [-]: GETUPVAL  R49 U3       ; R49 := U3
635 [-]: GETTABLE  R49 R49 K19  ; R49 := R49["0xF81722A2"]
636 [-]: GETUPVAL  R50 U0       ; R50 := U0
637 [-]: GETTABLE  R50 R50 K81  ; R50 := R50["mInvasionInfo"]
638 [-]: GETTABLE  R50 R50 K109 ; R50 := R50["mDefenderName"]
639 [-]: GETGLOBAL R51 K48      ; R51 := EMPTY_SYMBOL
640 [-]: EQ        1 R50 R51    ; if R50 == R51 then PC := 643
641 [-]: JMP       643          ; PC := 643
642 [-]: MOVE      R50 R0       ; R50 := R0
643 [-]: MOVE      R50 R1       ; R50 := R1
644 [-]: GETUPVAL  R51 U1       ; R51 := U1
645 [-]: GETTABLE  R51 R51 K106 ; R51 := R51["FactionNames"]
646 [-]: ADD       R52 R21 K36  ; R52 := R21 + 1
647 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
648 [-]: GETGLOBAL R52 K0       ; R52 := 0x9FAED6BC
649 [-]: GETUPVAL  R53 U0       ; R53 := U0
650 [-]: GETTABLE  R53 R53 K81  ; R53 := R53["mInvasionInfo"]
651 [-]: GETTABLE  R53 R53 K109 ; R53 := R53["mDefenderName"]
652 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
653 [-]: CALL      R49 0 2      ; R49 := R49(R50,...)
654 [-]: MOVE      R22 R49      ; R22 := R49
655 [-]: FORLOOP   R45 585      ; R45 += R47; if R45 <= R46 then begin PC := 585; R48 := R45 end
656 [-]: GETUPVAL  R49 U1       ; R49 := U1
657 [-]: GETTABLE  R49 R49 K51  ; R49 := R49["0xF030C338"]
658 [-]: GETGLOBAL R50 K23      ; R50 := mMovie
659 [-]: GETUPVAL  R51 U0       ; R51 := U0
660 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["mInvasionInfo"]
661 [-]: GETTABLE  R51 R51 K110 ; R51 := R51["mAttackerReward"]
662 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
663 [-]: GETUPVAL  R50 U1       ; R50 := U1
664 [-]: GETTABLE  R50 R50 K51  ; R50 := R50["0xF030C338"]
665 [-]: GETGLOBAL R51 K23      ; R51 := mMovie
666 [-]: GETUPVAL  R52 U0       ; R52 := U0
667 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
668 [-]: GETTABLE  R52 R52 K111 ; R52 := R52["mDefenderReward"]
669 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
670 [-]: GETUPVAL  R51 U3       ; R51 := U3
671 [-]: GETTABLE  R51 R51 K19  ; R51 := R51["0xF81722A2"]
672 [-]: MOVE      R52 R23      ; R52 := R23
673 [-]: MOVE      R53 R49      ; R53 := R49
674 [-]: LOADK     R54 K60      ; R54 := " "
675 [-]: GETGLOBAL R55 K23      ; R55 := mMovie
676 [-]: SELF      R55 R55 K24  ; R56 := R55; R55 := R55["0x5DB0BD4"]
677 [-]: LOADK     R57 K112     ; R57 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
678 [-]: MOVE      R58 R0       ; R58 := R0
679 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
680 [-]: LOADK     R56 K60      ; R56 := " "
681 [-]: MOVE      R57 R50      ; R57 := R50
682 [-]: CONCAT    R53 R53 R57  ; R53 := R53 .. R54 .. R55 .. R56 .. R57
683 [-]: MOVE      R54 R50      ; R54 := R50
684 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
685 [-]: MOVE      R24 R51      ; R24 := R51
686 [-]: LOADK     R51 K113     ; R51 := "\r\n"
687 [-]: MOVE      R52 R18      ; R52 := R18
688 [-]: LOADK     R53 K113     ; R53 := "\r\n"
689 [-]: MOVE      R54 R19      ; R54 := R19
690 [-]: LOADK     R55 K114     ; R55 := "/"
691 [-]: MOVE      R56 R20      ; R56 := R20
692 [-]: CONCAT    R15 R51 R56  ; R15 := R51 .. R52 .. R53 .. R54 .. R55 .. R56
693 [-]: TEST      R21 0        ; if not R21 then PC := 705
694 [-]: JMP       705          ; PC := 705
695 [-]: TEST      R23 1        ; if R23 then PC := 705
696 [-]: JMP       705          ; PC := 705
697 [-]: MOVE      R51 R15      ; R51 := R15
698 [-]: LOADK     R52 K60      ; R52 := " "
699 [-]: GETGLOBAL R53 K23      ; R53 := mMovie
700 [-]: SELF      R53 R53 K24  ; R54 := R53; R53 := R53["0x5DB0BD4"]
701 [-]: MOVE      R55 R22      ; R55 := R22
702 [-]: MOVE      R56 R0       ; R56 := R0
703 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
704 [-]: CONCAT    R15 R51 R53  ; R15 := R51 .. R52 .. R53
705 [-]: MOVE      R51 R15      ; R51 := R15
706 [-]: LOADK     R52 K113     ; R52 := "\r\n"
707 [-]: MOVE      R53 R24      ; R53 := R24
708 [-]: CONCAT    R15 R51 R53  ; R15 := R51 .. R52 .. R53
709 [-]: GETGLOBAL R51 K43      ; R51 := Engine
710 [-]: GETTABLE  R51 R51 K44  ; R51 := R51["0xD09D7910"]
711 [-]: GETUPVAL  R52 U0       ; R52 := U0
712 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
713 [-]: GETTABLE  R52 R52 K45  ; R52 := R52["mExpiry"]
714 [-]: CALL      R51 2 2      ; R51 := R51(R52)
715 [-]: LE        0 K115 R51   ; if -600 > R51 then PC := 742
716 [-]: JMP       742          ; PC := 742
717 [-]: LE        0 R51 K116   ; if R51 > 43200 then PC := 742
718 [-]: JMP       742          ; PC := 742
719 [-]: GETUPVAL  R52 U1       ; R52 := U1
720 [-]: GETTABLE  R52 R52 K117 ; R52 := R52["0xE5892312"]
721 [-]: MOVE      R53 R51      ; R53 := R51
722 [-]: CALL      R52 2 2      ; R52 := R52(R53)
723 [-]: LT        0 R51 K30    ; if R51 >= 0 then PC := 730
724 [-]: JMP       730          ; PC := 730
725 [-]: GETUPVAL  R53 U1       ; R53 := U1
726 [-]: GETTABLE  R53 R53 K117 ; R53 := R53["0xE5892312"]
727 [-]: LOADK     R54 K30      ; R54 := 0
728 [-]: CALL      R53 2 2      ; R53 := R53(R54)
729 [-]: MOVE      R52 R53      ; R52 := R53
730 [-]: MOVE      R53 R12      ; R53 := R12
731 [-]: LOADK     R54 K17      ; R54 := " - "
732 [-]: GETGLOBAL R55 K9       ; R55 := string
733 [-]: GETTABLE  R55 R55 K10  ; R55 := R55["0x639C642A"]
734 [-]: GETGLOBAL R56 K11      ; R56 := 0xE6DC43B0
735 [-]: LOADK     R57 K118     ; R57 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
736 [-]: LOADNIL   R58 R58      ; R58 := nil
737 [-]: CALL      R56 3 0      ; R56,... := R56(R57,R58)
738 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
739 [-]: LOADK     R56 K60      ; R56 := " "
740 [-]: MOVE      R57 R52      ; R57 := R52
741 [-]: CONCAT    R12 R53 R57  ; R12 := R53 .. R54 .. R55 .. R56 .. R57
742 [-]: GETUPVAL  R53 U0       ; R53 := U0
743 [-]: GETTABLE  R53 R53 K57  ; R53 := R53["mMission"]
744 [-]: GETTABLE  R53 R53 K119 ; R53 := R53["missionType"]
745 [-]: GETGLOBAL R54 K27      ; R54 := Lotus_Game
746 [-]: GETTABLE  R54 R54 K120 ; R54 := R54["MT_RAILJACK"]
747 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 795
748 [-]: JMP       795          ; PC := 795
749 [-]: GETGLOBAL R53 K100     ; R53 := 0x400E7765
750 [-]: GETUPVAL  R54 U0       ; R54 := U0
751 [-]: GETTABLE  R54 R54 K57  ; R54 := R54["mMission"]
752 [-]: SELF      R54 R54 K121 ; R55 := R54; R54 := R54["0x70C51B59"]
753 [-]: CALL      R54 2 0      ; R54,... := R54(R55)
754 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
755 [-]: TEST      R53 0        ; if not R53 then PC := 795
756 [-]: JMP       795          ; PC := 795
757 [-]: GETGLOBAL R53 K23      ; R53 := mMovie
758 [-]: SELF      R53 R53 K24  ; R54 := R53; R53 := R53["0x5DB0BD4"]
759 [-]: LOADK     R55 K122     ; R55 := "<RAILJACK>"
760 [-]: MOVE      R56 R1       ; R56 := R1
761 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
762 [-]: LOADK     R54 K60      ; R54 := " "
763 [-]: GETGLOBAL R55 K9       ; R55 := string
764 [-]: GETTABLE  R55 R55 K10  ; R55 := R55["0x639C642A"]
765 [-]: GETGLOBAL R56 K23      ; R56 := mMovie
766 [-]: SELF      R56 R56 K24  ; R57 := R56; R56 := R56["0x5DB0BD4"]
767 [-]: LOADK     R58 K123     ; R58 := "/Lotus/Language/Railjack/Railjack"
768 [-]: MOVE      R59 R0       ; R59 := R0
769 [-]: CALL      R56 4 0      ; R56,... := R56(R57,R58,R59)
770 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
771 [-]: CONCAT    R8 R53 R55   ; R8 := R53 .. R54 .. R55
772 [-]: MOVE      R53 R29      ; R53 := R29
773 [-]: LOADK     R54 K124     ; R54 := "/Lotus/Language/Menu/Lobby_Mission"
774 [-]: MOVE      R55 R8       ; R55 := R8
775 [-]: CALL      R53 3 1      ; R53(R54,R55)
776 [-]: GETGLOBAL R53 K9       ; R53 := string
777 [-]: GETTABLE  R53 R53 K125 ; R53 := R53["0xC6772A8A"]
778 [-]: MOVE      R54 R28      ; R54 := R28
779 [-]: CALL      R53 2 2      ; R53 := R53(R54)
780 [-]: MOVE      R54 R28      ; R54 := R28
781 [-]: LOADK     R55 K126     ; R55 := "</p>"
782 [-]: CONCAT    R28 R54 R55  ; R28 := R54 .. R55
783 [-]: GETUPVAL  R54 U5       ; R54 := U5
784 [-]: GETTABLE  R54 R54 K127 ; R54 := R54["UpdateTimer"]
785 [-]: EQ        1 R54 K22    ; if R54 == nil then PC := 794
786 [-]: JMP       794          ; PC := 794
787 [-]: GETUPVAL  R54 U5       ; R54 := U5
788 [-]: GETGLOBAL R55 K9       ; R55 := string
789 [-]: GETTABLE  R55 R55 K129 ; R55 := R55["0x7B782033"]
790 [-]: MOVE      R56 R28      ; R56 := R28
791 [-]: ADD       R57 R53 K36  ; R57 := R53 + 1
792 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
793 [-]: SETTABLE  R54 K128 R55 ; R54["TimerPost"] := R55
794 [-]: RETURN    R28 2        ; return R28
795 [-]: GETGLOBAL R54 K27      ; R54 := Lotus_Game
796 [-]: GETTABLE  R54 R54 K28  ; R54 := R54["NT_HUB"]
797 [-]: EQ        1 R7 R54     ; if R7 == R54 then PC := 805
798 [-]: JMP       805          ; PC := 805
799 [-]: MOVE      R54 R29      ; R54 := R29
800 [-]: LOADK     R55 K124     ; R55 := "/Lotus/Language/Menu/Lobby_Mission"
801 [-]: MOVE      R56 R8       ; R56 := R8
802 [-]: MOVE      R57 R10      ; R57 := R10
803 [-]: CONCAT    R56 R56 R57  ; R56 := R56 .. R57
804 [-]: CALL      R54 3 1      ; R54(R55,R56)
805 [-]: GETUPVAL  R54 U0       ; R54 := U0
806 [-]: GETTABLE  R54 R54 K57  ; R54 := R54["mMission"]
807 [-]: GETTABLE  R54 R54 K130 ; R54 := R54["goalTag"]
808 [-]: SELF      R54 R54 K131 ; R55 := R54; R54 := R54["0x5EC7A3D2"]
809 [-]: CALL      R54 2 2      ; R54 := R54(R55)
810 [-]: EQ        0 R54 K132   ; if R54 ~= "NoMods" then PC := 825
811 [-]: JMP       825          ; PC := 825
812 [-]: GETGLOBAL R54 K23      ; R54 := mMovie
813 [-]: SELF      R54 R54 K24  ; R55 := R54; R54 := R54["0x5DB0BD4"]
814 [-]: LOADK     R56 K133     ; R56 := "/Lotus/Language/Sorties/SOModifierNoMods"
815 [-]: MOVE      R57 R0       ; R57 := R0
816 [-]: CALL      R54 4 2      ; R54 := R54(R55,R56,R57)
817 [-]: GETGLOBAL R55 K23      ; R55 := mMovie
818 [-]: SELF      R55 R55 K24  ; R56 := R55; R55 := R55["0x5DB0BD4"]
819 [-]: LOADK     R57 K134     ; R57 := "/Lotus/Language/Sorties/SOModifierCaption"
820 [-]: MOVE      R58 R0       ; R58 := R0
821 [-]: NEWTABLE  R59 0 1      ; R59 := {}
822 [-]: SETTABLE  R59 K135 R54 ; R59["MODIFIER_DESC"] := R54
823 [-]: CALL      R55 5 2      ; R55 := R55(R56,R57,R58,R59)
824 [-]: MOVE      R27 R55      ; R27 := R55
825 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 902
826 [-]: JMP       902          ; PC := 902
827 [-]: TEST      R23 1        ; if R23 then PC := 902
828 [-]: JMP       902          ; PC := 902
829 [-]: GETGLOBAL R55 K11      ; R55 := 0xE6DC43B0
830 [-]: GETGLOBAL R56 K0       ; R56 := 0x9FAED6BC
831 [-]: GETUPVAL  R57 U1       ; R57 := U1
832 [-]: GETTABLE  R57 R57 K106 ; R57 := R57["FactionNames"]
833 [-]: GETUPVAL  R58 U0       ; R58 := U0
834 [-]: GETTABLE  R58 R58 K81  ; R58 := R58["mInvasionInfo"]
835 [-]: GETTABLE  R58 R58 K82  ; R58 := R58["mFaction"]
836 [-]: ADD       R58 R58 K36  ; R58 := R58 + 1
837 [-]: GETTABLE  R57 R57 R58  ; R57 := R57[R58]
838 [-]: CALL      R56 2 2      ; R56 := R56(R57)
839 [-]: MOVE      R57 R0       ; R57 := R0
840 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
841 [-]: LOADK     R56 K40      ; R56 := " ("
842 [-]: GETGLOBAL R57 K9       ; R57 := string
843 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["0x639C642A"]
844 [-]: GETGLOBAL R58 K23      ; R58 := mMovie
845 [-]: SELF      R58 R58 K24  ; R59 := R58; R58 := R58["0x5DB0BD4"]
846 [-]: LOADK     R60 K55      ; R60 := "/Lotus/Language/Game/MissionName_"
847 [-]: GETUPVAL  R61 U1       ; R61 := U1
848 [-]: GETTABLE  R61 R61 K56  ; R61 := R61["0x87B2D555"]
849 [-]: GETUPVAL  R62 U0       ; R62 := U0
850 [-]: GETTABLE  R62 R62 K81  ; R62 := R62["mInvasionInfo"]
851 [-]: GETTABLE  R62 R62 K89  ; R62 := R62["mAttackerMissionInfo"]
852 [-]: CALL      R61 2 2      ; R61 := R61(R62)
853 [-]: CONCAT    R60 R60 R61  ; R60 := R60 .. R61
854 [-]: MOVE      R61 R0       ; R61 := R0
855 [-]: CALL      R58 4 0      ; R58,... := R58(R59,R60,R61)
856 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
857 [-]: LOADK     R58 K42      ; R58 := ")"
858 [-]: CONCAT    R55 R55 R58  ; R55 := R55 .. R56 .. R57 .. R58
859 [-]: GETGLOBAL R56 K11      ; R56 := 0xE6DC43B0
860 [-]: GETGLOBAL R57 K0       ; R57 := 0x9FAED6BC
861 [-]: GETUPVAL  R58 U1       ; R58 := U1
862 [-]: GETTABLE  R58 R58 K106 ; R58 := R58["FactionNames"]
863 [-]: GETUPVAL  R59 U0       ; R59 := U0
864 [-]: GETTABLE  R59 R59 K81  ; R59 := R59["mInvasionInfo"]
865 [-]: GETTABLE  R59 R59 K89  ; R59 := R59["mAttackerMissionInfo"]
866 [-]: GETTABLE  R59 R59 K90  ; R59 := R59["faction"]
867 [-]: ADD       R59 R59 K36  ; R59 := R59 + 1
868 [-]: GETTABLE  R58 R58 R59  ; R58 := R58[R59]
869 [-]: CALL      R57 2 2      ; R57 := R57(R58)
870 [-]: MOVE      R58 R0       ; R58 := R0
871 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
872 [-]: LOADK     R57 K40      ; R57 := " ("
873 [-]: GETGLOBAL R58 K9       ; R58 := string
874 [-]: GETTABLE  R58 R58 K10  ; R58 := R58["0x639C642A"]
875 [-]: GETGLOBAL R59 K23      ; R59 := mMovie
876 [-]: SELF      R59 R59 K24  ; R60 := R59; R59 := R59["0x5DB0BD4"]
877 [-]: LOADK     R61 K55      ; R61 := "/Lotus/Language/Game/MissionName_"
878 [-]: GETUPVAL  R62 U1       ; R62 := U1
879 [-]: GETTABLE  R62 R62 K56  ; R62 := R62["0x87B2D555"]
880 [-]: GETUPVAL  R63 U0       ; R63 := U0
881 [-]: GETTABLE  R63 R63 K81  ; R63 := R63["mInvasionInfo"]
882 [-]: GETTABLE  R63 R63 K136 ; R63 := R63["mDefenderMissionInfo"]
883 [-]: CALL      R62 2 2      ; R62 := R62(R63)
884 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
885 [-]: MOVE      R62 R0       ; R62 := R0
886 [-]: CALL      R59 4 0      ; R59,... := R59(R60,R61,R62)
887 [-]: CALL      R58 0 2      ; R58 := R58(R59,...)
888 [-]: LOADK     R59 K42      ; R59 := ")"
889 [-]: CONCAT    R56 R56 R59  ; R56 := R56 .. R57 .. R58 .. R59
890 [-]: MOVE      R57 R29      ; R57 := R29
891 [-]: LOADNIL   R58 R58      ; R58 := nil
892 [-]: MOVE      R59 R55      ; R59 := R55
893 [-]: LOADK     R60 K60      ; R60 := " "
894 [-]: GETGLOBAL R61 K11      ; R61 := 0xE6DC43B0
895 [-]: LOADK     R62 K112     ; R62 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
896 [-]: LOADNIL   R63 R63      ; R63 := nil
897 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
898 [-]: LOADK     R62 K113     ; R62 := "\r\n"
899 [-]: MOVE      R63 R56      ; R63 := R56
900 [-]: CONCAT    R59 R59 R63  ; R59 := R59 .. R60 .. R61 .. R62 .. R63
901 [-]: CALL      R57 3 1      ; R57(R58,R59)
902 [-]: GETUPVAL  R57 U0       ; R57 := U0
903 [-]: GETTABLE  R57 R57 K57  ; R57 := R57["mMission"]
904 [-]: GETTABLE  R57 R57 K119 ; R57 := R57["missionType"]
905 [-]: GETGLOBAL R58 K27      ; R58 := Lotus_Game
906 [-]: GETTABLE  R58 R58 K137 ; R58 := R58["MT_LANDSCAPE"]
907 [-]: EQ        1 R57 R58    ; if R57 == R58 then PC := 917
908 [-]: JMP       917          ; PC := 917
909 [-]: GETGLOBAL R57 K27      ; R57 := Lotus_Game
910 [-]: GETTABLE  R57 R57 K28  ; R57 := R57["NT_HUB"]
911 [-]: EQ        0 R7 R57     ; if R7 ~= R57 then PC := 989
912 [-]: JMP       989          ; PC := 989
913 [-]: GETUPVAL  R57 U1       ; R57 := U1
914 [-]: GETTABLE  R57 R57 K138 ; R57 := R57["CETUS_NODE_TAG"]
915 [-]: EQ        0 R6 R57     ; if R6 ~= R57 then PC := 989
916 [-]: JMP       989          ; PC := 989
917 [-]: GETUPVAL  R57 U5       ; R57 := U5
918 [-]: SETTABLE  R57 K127 K30 ; R57["UpdateTimer"] := 0
919 [-]: GETUPVAL  R57 U5       ; R57 := U5
920 [-]: SETTABLE  R57 K139 R28 ; R57["TimerPre"] := R28
921 [-]: GETUPVAL  R57 U1       ; R57 := U1
922 [-]: GETTABLE  R57 R57 K140 ; R57 := R57["0x555EFA5"]
923 [-]: GETUPVAL  R58 U0       ; R58 := U0
924 [-]: GETTABLE  R58 R58 K57  ; R58 := R58["mMission"]
925 [-]: GETTABLE  R58 R58 K141 ; R58 := R58["location"]
926 [-]: CALL      R57 2 2      ; R57 := R57(R58)
927 [-]: GETUPVAL  R58 U1       ; R58 := U1
928 [-]: GETTABLE  R58 R58 K142 ; R58 := R58["0x447FCC2F"]
929 [-]: MOVE      R59 R57      ; R59 := R57
930 [-]: GETUPVAL  R60 U0       ; R60 := U0
931 [-]: GETTABLE  R60 R60 K57  ; R60 := R60["mMission"]
932 [-]: GETTABLE  R60 R60 K141 ; R60 := R60["location"]
933 [-]: CALL      R58 3 4      ; R58,R59,R60 := R58(R59,R60)
934 [-]: GETUPVAL  R61 U5       ; R61 := U5
935 [-]: SETTABLE  R61 K143 R60 ; R61["NodeTime"] := R60
936 [-]: GETUPVAL  R61 U0       ; R61 := U0
937 [-]: GETTABLE  R61 R61 K57  ; R61 := R61["mMission"]
938 [-]: GETTABLE  R61 R61 K141 ; R61 := R61["location"]
939 [-]: GETUPVAL  R62 U1       ; R62 := U1
940 [-]: GETTABLE  R62 R62 K144 ; R62 := R62["ORB_VALLIS_NODE_TAG"]
941 [-]: EQ        0 R61 R62    ; if R61 ~= R62 then PC := 966
942 [-]: JMP       966          ; PC := 966
943 [-]: MOVE      R61 R29      ; R61 := R29
944 [-]: LOADK     R62 K145     ; R62 := "/Lotus/Language/SolarisVenus/Temperature"
945 [-]: GETGLOBAL R63 K23      ; R63 := mMovie
946 [-]: SELF      R63 R63 K24  ; R64 := R63; R63 := R63["0x5DB0BD4"]
947 [-]: LOADK     R65 K146     ; R65 := "/Lotus/Language/SystemMessages/TimeUntil"
948 [-]: MOVE      R66 R0       ; R66 := R0
949 [-]: NEWTABLE  R67 0 2      ; R67 := {}
950 [-]: GETGLOBAL R68 K23      ; R68 := mMovie
951 [-]: SELF      R68 R68 K24  ; R69 := R68; R68 := R68["0x5DB0BD4"]
952 [-]: MOVE      R70 R59      ; R70 := R59
953 [-]: MOVE      R71 R0       ; R71 := R0
954 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
955 [-]: SETTABLE  R67 K147 R68 ; R67["LABEL"] := R68
956 [-]: GETUPVAL  R68 U1       ; R68 := U1
957 [-]: GETTABLE  R68 R68 K149 ; R68 := R68["0xC65D09DD"]
958 [-]: GETGLOBAL R69 K23      ; R69 := mMovie
959 [-]: MOVE      R70 R60      ; R70 := R60
960 [-]: LOADK     R71 K150     ; R71 := "CompactOne"
961 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
962 [-]: SETTABLE  R67 K148 R68 ; R67["TIME"] := R68
963 [-]: CALL      R63 5 0      ; R63,... := R63(R64,R65,R66,R67)
964 [-]: CALL      R61 0 1      ; R61(R62,...)
965 [-]: JMP       997          ; PC := 997
966 [-]: MOVE      R61 R29      ; R61 := R29
967 [-]: LOADK     R62 K151     ; R62 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
968 [-]: GETGLOBAL R63 K23      ; R63 := mMovie
969 [-]: SELF      R63 R63 K24  ; R64 := R63; R63 := R63["0x5DB0BD4"]
970 [-]: LOADK     R65 K146     ; R65 := "/Lotus/Language/SystemMessages/TimeUntil"
971 [-]: MOVE      R66 R0       ; R66 := R0
972 [-]: NEWTABLE  R67 0 2      ; R67 := {}
973 [-]: GETGLOBAL R68 K23      ; R68 := mMovie
974 [-]: SELF      R68 R68 K24  ; R69 := R68; R68 := R68["0x5DB0BD4"]
975 [-]: MOVE      R70 R59      ; R70 := R59
976 [-]: MOVE      R71 R0       ; R71 := R0
977 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
978 [-]: SETTABLE  R67 K147 R68 ; R67["LABEL"] := R68
979 [-]: GETUPVAL  R68 U1       ; R68 := U1
980 [-]: GETTABLE  R68 R68 K149 ; R68 := R68["0xC65D09DD"]
981 [-]: GETGLOBAL R69 K23      ; R69 := mMovie
982 [-]: MOVE      R70 R60      ; R70 := R60
983 [-]: LOADK     R71 K150     ; R71 := "CompactOne"
984 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
985 [-]: SETTABLE  R67 K148 R68 ; R67["TIME"] := R68
986 [-]: CALL      R63 5 0      ; R63,... := R63(R64,R65,R66,R67)
987 [-]: CALL      R61 0 1      ; R61(R62,...)
988 [-]: JMP       997          ; PC := 997
989 [-]: GETUPVAL  R61 U5       ; R61 := U5
990 [-]: SETTABLE  R61 K127 K22 ; R61["UpdateTimer"] := nil
991 [-]: GETUPVAL  R61 U5       ; R61 := U5
992 [-]: SETTABLE  R61 K143 K22 ; R61["NodeTime"] := nil
993 [-]: GETUPVAL  R61 U5       ; R61 := U5
994 [-]: SETTABLE  R61 K139 K22 ; R61["TimerPre"] := nil
995 [-]: GETUPVAL  R61 U5       ; R61 := U5
996 [-]: SETTABLE  R61 K128 K22 ; R61["TimerPost"] := nil
997 [-]: GETGLOBAL R61 K9       ; R61 := string
998 [-]: GETTABLE  R61 R61 K125 ; R61 := R61["0xC6772A8A"]
999 [-]: MOVE      R62 R28      ; R62 := R28
1000 [-]: CALL      R61 2 2      ; R61 := R61(R62)
1001 [-]: GETUPVAL  R62 U1       ; R62 := U1
1002 [-]: GETTABLE  R62 R62 K152 ; R62 := R62["OPTIONAL_GOAL_PREFIX"]
1003 [-]: MOVE      R63 R5       ; R63 := R5
1004 [-]: CONCAT    R62 R62 R63  ; R62 := R62 .. R63
1005 [-]: GETTABLE  R63 R9 R62   ; R63 := R9[R62]
1006 [-]: TEST      R63 0        ; if not R63 then PC := 1016
1007 [-]: JMP       1016         ; PC := 1016
1008 [-]: MOVE      R63 R29      ; R63 := R29
1009 [-]: LOADK     R64 K153     ; R64 := "/Lotus/Language/Menu/WorldStatePanel_Event"
1010 [-]: GETGLOBAL R65 K11      ; R65 := 0xE6DC43B0
1011 [-]: GETTABLE  R66 R9 R62   ; R66 := R9[R62]
1012 [-]: GETTABLE  R66 R66 K54  ; R66 := R66["mDesc"]
1013 [-]: LOADNIL   R67 R67      ; R67 := nil
1014 [-]: CALL      R65 3 0      ; R65,... := R65(R66,R67)
1015 [-]: CALL      R63 0 1      ; R63(R64,...)
1016 [-]: GETUPVAL  R63 U0       ; R63 := U0
1017 [-]: GETTABLE  R63 R63 K57  ; R63 := R63["mMission"]
1018 [-]: GETTABLE  R63 R63 K119 ; R63 := R63["missionType"]
1019 [-]: GETGLOBAL R64 K27      ; R64 := Lotus_Game
1020 [-]: GETTABLE  R64 R64 K154 ; R64 := R64["MT_ASSASSINATION"]
1021 [-]: EQ        0 R63 R64    ; if R63 ~= R64 then PC := 1034
1022 [-]: JMP       1034         ; PC := 1034
1023 [-]: TEST      R14 1        ; if R14 then PC := 1034
1024 [-]: JMP       1034         ; PC := 1034
1025 [-]: MOVE      R63 R29      ; R63 := R29
1026 [-]: LOADK     R64 K155     ; R64 := "/Lotus/Language/Menu/MissionIntro_Target"
1027 [-]: GETGLOBAL R65 K9       ; R65 := string
1028 [-]: GETTABLE  R65 R65 K10  ; R65 := R65["0x639C642A"]
1029 [-]: GETUPVAL  R66 U0       ; R66 := U0
1030 [-]: GETTABLE  R66 R66 K54  ; R66 := R66["mDesc"]
1031 [-]: CALL      R65 2 0      ; R65,... := R65(R66)
1032 [-]: CALL      R63 0 1      ; R63(R64,...)
1033 [-]: JMP       1109         ; PC := 1109
1034 [-]: GETTABLE  R63 R0 K156  ; R63 := R0["guildId"]
1035 [-]: EQ        1 R63 K22    ; if R63 == nil then PC := 1060
1036 [-]: JMP       1060         ; PC := 1060
1037 [-]: GETTABLE  R63 R0 K157  ; R63 := R0["clanTier"]
1038 [-]: EQ        1 R63 K22    ; if R63 == nil then PC := 1060
1039 [-]: JMP       1060         ; PC := 1060
1040 [-]: MOVE      R63 R29      ; R63 := R29
1041 [-]: LOADK     R64 K158     ; R64 := "/Lotus/Language/Menu/Profile_Clan"
1042 [-]: GETGLOBAL R65 K9       ; R65 := string
1043 [-]: GETTABLE  R65 R65 K10  ; R65 := R65["0x639C642A"]
1044 [-]: GETTABLE  R66 R0 K159  ; R66 := R0["locName"]
1045 [-]: CALL      R65 2 0      ; R65,... := R65(R66)
1046 [-]: CALL      R63 0 1      ; R63(R64,...)
1047 [-]: MOVE      R63 R29      ; R63 := R29
1048 [-]: LOADK     R64 K160     ; R64 := "/Lotus/Language/Dojo/ClanTier"
1049 [-]: GETGLOBAL R65 K9       ; R65 := string
1050 [-]: GETTABLE  R65 R65 K10  ; R65 := R65["0x639C642A"]
1051 [-]: GETGLOBAL R66 K11      ; R66 := 0xE6DC43B0
1052 [-]: GETUPVAL  R67 U6       ; R67 := U6
1053 [-]: GETTABLE  R68 R0 K157  ; R68 := R0["clanTier"]
1054 [-]: GETTABLE  R67 R67 R68  ; R67 := R67[R68]
1055 [-]: LOADNIL   R68 R68      ; R68 := nil
1056 [-]: CALL      R66 3 0      ; R66,... := R66(R67,R68)
1057 [-]: CALL      R65 0 0      ; R65,... := R65(R66,...)
1058 [-]: CALL      R63 0 1      ; R63(R64,...)
1059 [-]: JMP       1109         ; PC := 1109
1060 [-]: GETGLOBAL R63 K27      ; R63 := Lotus_Game
1061 [-]: GETTABLE  R63 R63 K28  ; R63 := R63["NT_HUB"]
1062 [-]: EQ        0 R7 R63     ; if R7 ~= R63 then PC := 1081
1063 [-]: JMP       1081         ; PC := 1081
1064 [-]: LOADNIL   R63 R63      ; R63 := nil
1065 [-]: EQ        0 R5 K161    ; if R5 ~= "IronwakeHUB3" then PC := 1069
1066 [-]: JMP       1069         ; PC := 1069
1067 [-]: LOADK     R63 K162     ; R63 := "/Lotus/Language/Factions/SteelMeridianName"
1068 [-]: JMP       1070         ; PC := 1070
1069 [-]: LOADK     R63 K163     ; R63 := "/Lotus/Language/Menu/Codex_Tenno"
1070 [-]: MOVE      R64 R29      ; R64 := R29
1071 [-]: LOADK     R65 K164     ; R65 := "/Lotus/Language/Menu/MissionIntro_Faction"
1072 [-]: GETGLOBAL R66 K9       ; R66 := string
1073 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
1074 [-]: GETGLOBAL R67 K11      ; R67 := 0xE6DC43B0
1075 [-]: MOVE      R68 R63      ; R68 := R63
1076 [-]: LOADNIL   R69 R69      ; R69 := nil
1077 [-]: CALL      R67 3 0      ; R67,... := R67(R68,R69)
1078 [-]: CALL      R66 0 0      ; R66,... := R66(R67,...)
1079 [-]: CALL      R64 0 1      ; R64(R65,...)
1080 [-]: JMP       1109         ; PC := 1109
1081 [-]: TEST      R14 0        ; if not R14 then PC := 1087
1082 [-]: JMP       1087         ; PC := 1087
1083 [-]: GETUPVAL  R64 U7       ; R64 := U7
1084 [-]: GETTABLE  R64 R64 K165 ; R64 := R64["Active"]
1085 [-]: TEST      R64 1        ; if R64 then PC := 1109
1086 [-]: JMP       1109         ; PC := 1109
1087 [-]: GETGLOBAL R64 K9       ; R64 := string
1088 [-]: GETTABLE  R64 R64 K10  ; R64 := R64["0x639C642A"]
1089 [-]: GETUPVAL  R65 U0       ; R65 := U0
1090 [-]: GETTABLE  R65 R65 K54  ; R65 := R65["mDesc"]
1091 [-]: CALL      R64 2 2      ; R64 := R64(R65)
1092 [-]: TEST      R4 0         ; if not R4 then PC := 1105
1093 [-]: JMP       1105         ; PC := 1105
1094 [-]: MOVE      R65 R64      ; R65 := R64
1095 [-]: LOADK     R66 K40      ; R66 := " ("
1096 [-]: GETGLOBAL R67 K9       ; R67 := string
1097 [-]: GETTABLE  R67 R67 K10  ; R67 := R67["0x639C642A"]
1098 [-]: GETGLOBAL R68 K11      ; R68 := 0xE6DC43B0
1099 [-]: LOADK     R69 K166     ; R69 := "/Lotus/Language/Menu/OccupyingFaction"
1100 [-]: LOADNIL   R70 R70      ; R70 := nil
1101 [-]: CALL      R68 3 0      ; R68,... := R68(R69,R70)
1102 [-]: CALL      R67 0 2      ; R67 := R67(R68,...)
1103 [-]: LOADK     R68 K42      ; R68 := ")"
1104 [-]: CONCAT    R64 R65 R68  ; R64 := R65 .. R66 .. R67 .. R68
1105 [-]: MOVE      R65 R29      ; R65 := R29
1106 [-]: LOADK     R66 K164     ; R66 := "/Lotus/Language/Menu/MissionIntro_Faction"
1107 [-]: MOVE      R67 R64      ; R67 := R64
1108 [-]: CALL      R65 3 1      ; R65(R66,R67)
1109 [-]: TEST      R13 1        ; if R13 then PC := 1167
1110 [-]: JMP       1167         ; PC := 1167
1111 [-]: TEST      R14 1        ; if R14 then PC := 1167
1112 [-]: JMP       1167         ; PC := 1167
1113 [-]: GETUPVAL  R65 U3       ; R65 := U3
1114 [-]: GETTABLE  R65 R65 K19  ; R65 := R65["0xF81722A2"]
1115 [-]: EQ        1 R3 K167    ; if R3 == "0x1" then PC := 1118
1116 [-]: JMP       1118         ; PC := 1118
1117 [-]: MOVE      R66 R0       ; R66 := R0
1118 [-]: MOVE      R66 R1       ; R66 := R1
1119 [-]: LOADK     R67 K168     ; R67 := 10
1120 [-]: LOADK     R68 K30      ; R68 := 0
1121 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
1122 [-]: GETUPVAL  R66 U0       ; R66 := U0
1123 [-]: GETTABLE  R66 R66 K169 ; R66 := R66["mLevelMin"]
1124 [-]: ADD       R66 R66 R65  ; R66 := R66 + R65
1125 [-]: LOADK     R67 K170     ; R67 := "-"
1126 [-]: GETUPVAL  R68 U0       ; R68 := U0
1127 [-]: GETTABLE  R68 R68 K171 ; R68 := R68["mLevelMax"]
1128 [-]: ADD       R68 R68 R65  ; R68 := R68 + R65
1129 [-]: CONCAT    R66 R66 R68  ; R66 := R66 .. R67 .. R68
1130 [-]: GETUPVAL  R67 U0       ; R67 := U0
1131 [-]: GETTABLE  R67 R67 K172 ; R67 := R67["mConclaveMax"]
1132 [-]: LT        0 K30 R67    ; if 0 >= R67 then PC := 1144
1133 [-]: JMP       1144         ; PC := 1144
1134 [-]: MOVE      R67 R66      ; R67 := R66
1135 [-]: LOADK     R68 K173     ; R68 := "  "
1136 [-]: GETGLOBAL R69 K23      ; R69 := mMovie
1137 [-]: SELF      R69 R69 K24  ; R70 := R69; R69 := R69["0x5DB0BD4"]
1138 [-]: LOADK     R71 K174     ; R71 := "<CONCLAVE>"
1139 [-]: MOVE      R72 R1       ; R72 := R1
1140 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1141 [-]: GETUPVAL  R70 U0       ; R70 := U0
1142 [-]: GETTABLE  R70 R70 K172 ; R70 := R70["mConclaveMax"]
1143 [-]: CONCAT    R66 R67 R70  ; R66 := R67 .. R68 .. R69 .. R70
1144 [-]: MOVE      R67 R29      ; R67 := R29
1145 [-]: LOADK     R68 K175     ; R68 := "/Lotus/Language/Menu/MissionBoard_Level"
1146 [-]: MOVE      R69 R66      ; R69 := R66
1147 [-]: CALL      R67 3 1      ; R67(R68,R69)
1148 [-]: GETUPVAL  R67 U0       ; R67 := U0
1149 [-]: GETTABLE  R67 R67 K57  ; R67 := R67["mMission"]
1150 [-]: GETTABLE  R67 R67 K119 ; R67 := R67["missionType"]
1151 [-]: GETGLOBAL R68 K27      ; R68 := Lotus_Game
1152 [-]: GETTABLE  R68 R68 K120 ; R68 := R68["MT_RAILJACK"]
1153 [-]: EQ        0 R67 R68    ; if R67 ~= R68 then PC := 1167
1154 [-]: JMP       1167         ; PC := 1167
1155 [-]: GETUPVAL  R67 U0       ; R67 := U0
1156 [-]: GETTABLE  R67 R67 K57  ; R67 := R67["mMission"]
1157 [-]: GETTABLE  R67 R67 K176 ; R67 := R67["minSpaceEnemyLevel"]
1158 [-]: LOADK     R68 K170     ; R68 := "-"
1159 [-]: GETUPVAL  R69 U0       ; R69 := U0
1160 [-]: GETTABLE  R69 R69 K57  ; R69 := R69["mMission"]
1161 [-]: GETTABLE  R69 R69 K177 ; R69 := R69["maxSpaceEnemyLevel"]
1162 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
1163 [-]: MOVE      R68 R29      ; R68 := R29
1164 [-]: LOADK     R69 K178     ; R69 := "/Lotus/Language/Menu/MissionBoard_SpaceLevel"
1165 [-]: MOVE      R70 R67      ; R70 := R67
1166 [-]: CALL      R68 3 1      ; R68(R69,R70)
1167 [-]: GETGLOBAL R68 K100     ; R68 := 0x400E7765
1168 [-]: GETUPVAL  R69 U0       ; R69 := U0
1169 [-]: GETTABLE  R69 R69 K57  ; R69 := R69["mMission"]
1170 [-]: GETTABLE  R69 R69 K179 ; R69 := R69["exclusiveWeapon"]
1171 [-]: CALL      R68 2 2      ; R68 := R68(R69)
1172 [-]: TEST      R68 1        ; if R68 then PC := 1216
1173 [-]: JMP       1216         ; PC := 1216
1174 [-]: GETGLOBAL R68 K11      ; R68 := 0xE6DC43B0
1175 [-]: GETGLOBAL R69 K0       ; R69 := 0x9FAED6BC
1176 [-]: GETGLOBAL R70 K180     ; R70 := 0x7C282057
1177 [-]: GETUPVAL  R71 U0       ; R71 := U0
1178 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["mMission"]
1179 [-]: GETTABLE  R71 R71 K179 ; R71 := R71["exclusiveWeapon"]
1180 [-]: CALL      R70 2 2      ; R70 := R70(R71)
1181 [-]: SELF      R70 R70 K181 ; R71 := R70; R70 := R70["0x616C74B6"]
1182 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
1183 [-]: CALL      R69 0 2      ; R69 := R69(R70,...)
1184 [-]: MOVE      R70 R0       ; R70 := R0
1185 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
1186 [-]: GETGLOBAL R69 K11      ; R69 := 0xE6DC43B0
1187 [-]: LOADK     R70 K182     ; R70 := "/Lotus/Language/Menu/Lobby_RestrictionDesc"
1188 [-]: NEWTABLE  R71 0 1      ; R71 := {}
1189 [-]: SETTABLE  R71 K183 R68 ; R71["ITEM"] := R68
1190 [-]: CALL      R69 3 2      ; R69 := R69(R70,R71)
1191 [-]: GETUPVAL  R70 U0       ; R70 := U0
1192 [-]: GETTABLE  R70 R70 K53  ; R70 := R70["mGoalInfo"]
1193 [-]: TEST      R70 0        ; if not R70 then PC := 1211
1194 [-]: JMP       1211         ; PC := 1211
1195 [-]: GETUPVAL  R70 U0       ; R70 := U0
1196 [-]: GETTABLE  R70 R70 K53  ; R70 := R70["mGoalInfo"]
1197 [-]: GETTABLE  R70 R70 K47  ; R70 := R70["mTag"]
1198 [-]: GETUPVAL  R71 U8       ; R71 := U8
1199 [-]: GETTABLE  R71 R71 K184 ; R71 := R71["MACHETE_MAYHEM"]
1200 [-]: EQ        0 R70 R71    ; if R70 ~= R71 then PC := 1211
1201 [-]: JMP       1211         ; PC := 1211
1202 [-]: GETGLOBAL R70 K11      ; R70 := 0xE6DC43B0
1203 [-]: LOADK     R71 K185     ; R71 := "/Lotus/Language/Menu/EnergyRestrictionDesc"
1204 [-]: NEWTABLE  R72 0 1      ; R72 := {}
1205 [-]: SETTABLE  R72 K186 K187; R72["AMOUNT"] := 25
1206 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
1207 [-]: MOVE      R71 R69      ; R71 := R69
1208 [-]: LOADK     R72 K70      ; R72 := ", "
1209 [-]: MOVE      R73 R70      ; R73 := R70
1210 [-]: CONCAT    R69 R71 R73  ; R69 := R71 .. R72 .. R73
1211 [-]: MOVE      R71 R29      ; R71 := R29
1212 [-]: LOADK     R72 K188     ; R72 := "/Lotus/Language/Menu/Lobby_Restriction"
1213 [-]: MOVE      R73 R69      ; R73 := R69
1214 [-]: CALL      R71 3 1      ; R71(R72,R73)
1215 [-]: JMP       1324         ; PC := 1324
1216 [-]: GETGLOBAL R71 K100     ; R71 := 0x400E7765
1217 [-]: GETUPVAL  R72 U0       ; R72 := U0
1218 [-]: GETTABLE  R72 R72 K57  ; R72 := R72["mMission"]
1219 [-]: GETTABLE  R72 R72 K189 ; R72 := R72["miscItemFee"]
1220 [-]: GETTABLE  R72 R72 K190 ; R72 := R72["mItemType"]
1221 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1222 [-]: TEST      R71 1        ; if R71 then PC := 1324
1223 [-]: JMP       1324         ; PC := 1324
1224 [-]: EQ        0 R15 K22    ; if R15 ~= nil then PC := 1324
1225 [-]: JMP       1324         ; PC := 1324
1226 [-]: GETUPVAL  R71 U0       ; R71 := U0
1227 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["mMission"]
1228 [-]: GETTABLE  R71 R71 K189 ; R71 := R71["miscItemFee"]
1229 [-]: GETTABLE  R71 R71 K190 ; R71 := R71["mItemType"]
1230 [-]: GETGLOBAL R72 K0       ; R72 := 0x9FAED6BC
1231 [-]: GETUPVAL  R73 U0       ; R73 := U0
1232 [-]: GETTABLE  R73 R73 K57  ; R73 := R73["mMission"]
1233 [-]: GETTABLE  R73 R73 K189 ; R73 := R73["miscItemFee"]
1234 [-]: GETTABLE  R73 R73 K190 ; R73 := R73["mItemType"]
1235 [-]: SELF      R73 R73 K191 ; R74 := R73; R73 := R73["0x1B252E3C"]
1236 [-]: CALL      R73 2 0      ; R73,... := R73(R74)
1237 [-]: CALL      R72 0 2      ; R72 := R72(R73,...)
1238 [-]: GETGLOBAL R73 K13      ; R73 := _T
1239 [-]: GETTABLE  R73 R73 K192 ; R73 := R73["OwnedFeeItems"]
1240 [-]: TEST      R73 1        ; if R73 then PC := 1245
1241 [-]: JMP       1245         ; PC := 1245
1242 [-]: GETGLOBAL R73 K13      ; R73 := _T
1243 [-]: NEWTABLE  R74 0 0      ; R74 := {}
1244 [-]: SETTABLE  R73 K192 R74 ; R73["OwnedFeeItems"] := R74
1245 [-]: GETGLOBAL R73 K13      ; R73 := _T
1246 [-]: GETTABLE  R73 R73 K192 ; R73 := R73["OwnedFeeItems"]
1247 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
1248 [-]: TEST      R73 1        ; if R73 then PC := 1301
1249 [-]: JMP       1301         ; PC := 1301
1250 [-]: GETGLOBAL R73 K13      ; R73 := _T
1251 [-]: GETTABLE  R73 R73 K192 ; R73 := R73["OwnedFeeItems"]
1252 [-]: NEWTABLE  R74 0 0      ; R74 := {}
1253 [-]: SETTABLE  R73 R72 R74  ; R73[R72] := R74
1254 [-]: GETGLOBAL R73 K13      ; R73 := _T
1255 [-]: GETTABLE  R73 R73 K192 ; R73 := R73["OwnedFeeItems"]
1256 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
1257 [-]: SETTABLE  R73 K193 K30 ; R73["Count"] := 0
1258 [-]: GETGLOBAL R73 K13      ; R73 := _T
1259 [-]: GETTABLE  R73 R73 K192 ; R73 := R73["OwnedFeeItems"]
1260 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
1261 [-]: GETGLOBAL R74 K11      ; R74 := 0xE6DC43B0
1262 [-]: GETGLOBAL R75 K0       ; R75 := 0x9FAED6BC
1263 [-]: GETGLOBAL R76 K180     ; R76 := 0x7C282057
1264 [-]: MOVE      R77 R71      ; R77 := R71
1265 [-]: CALL      R76 2 2      ; R76 := R76(R77)
1266 [-]: SELF      R76 R76 K181 ; R77 := R76; R76 := R76["0x616C74B6"]
1267 [-]: CALL      R76 2 0      ; R76,... := R76(R77)
1268 [-]: CALL      R75 0 2      ; R75 := R75(R76,...)
1269 [-]: MOVE      R76 R0       ; R76 := R0
1270 [-]: CALL      R74 3 2      ; R74 := R74(R75,R76)
1271 [-]: SETTABLE  R73 K194 R74 ; R73["LocText"] := R74
1272 [-]: GETGLOBAL R73 K195     ; R73 := gPlayerProfileMgr
1273 [-]: SELF      R73 R73 K196 ; R74 := R73; R73 := R73["0x21EF7B1A"]
1274 [-]: LOADK     R75 K30      ; R75 := 0
1275 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1276 [-]: SELF      R73 R73 K197 ; R74 := R73; R73 := R73["0x654F1092"]
1277 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1278 [-]: SELF      R73 R73 K198 ; R74 := R73; R73 := R73["0x6F2E05FD"]
1279 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1280 [-]: SELF      R73 R73 K199 ; R74 := R73; R73 := R73["0x3329FBFF"]
1281 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1282 [-]: LOADK     R74 K36      ; R74 := 1
1283 [-]: LEN       R75 R73      ; R75 := # R73
1284 [-]: LOADK     R76 K36      ; R76 := 1
1285 [-]: FORPREP   R74 1300     ; R74 -= R76; PC := 1300
1286 [-]: GETTABLE  R78 R73 R77  ; R78 := R73[R77]
1287 [-]: GETTABLE  R78 R78 K190 ; R78 := R78["mItemType"]
1288 [-]: SELF      R78 R78 K200 ; R79 := R78; R78 := R78["0x8B598ED4"]
1289 [-]: MOVE      R80 R71      ; R80 := R71
1290 [-]: CALL      R78 3 2      ; R78 := R78(R79,R80)
1291 [-]: TEST      R78 0        ; if not R78 then PC := 1300
1292 [-]: JMP       1300         ; PC := 1300
1293 [-]: GETGLOBAL R78 K13      ; R78 := _T
1294 [-]: GETTABLE  R78 R78 K192 ; R78 := R78["OwnedFeeItems"]
1295 [-]: GETTABLE  R78 R78 R72  ; R78 := R78[R72]
1296 [-]: GETTABLE  R79 R73 R77  ; R79 := R73[R77]
1297 [-]: GETTABLE  R79 R79 K201 ; R79 := R79["mItemCount"]
1298 [-]: SETTABLE  R78 K193 R79 ; R78["Count"] := R79
1299 [-]: JMP       1301         ; PC := 1301
1300 [-]: FORLOOP   R74 1286     ; R74 += R76; if R74 <= R75 then begin PC := 1286; R77 := R74 end
1301 [-]: GETGLOBAL R78 K11      ; R78 := 0xE6DC43B0
1302 [-]: LOADK     R79 K202     ; R79 := "/Lotus/Language/Menu/Lobby_CountedItemRestrictionDesc"
1303 [-]: NEWTABLE  R80 0 3      ; R80 := {}
1304 [-]: GETGLOBAL R81 K13      ; R81 := _T
1305 [-]: GETTABLE  R81 R81 K192 ; R81 := R81["OwnedFeeItems"]
1306 [-]: GETTABLE  R81 R81 R72  ; R81 := R81[R72]
1307 [-]: GETTABLE  R81 R81 K194 ; R81 := R81["LocText"]
1308 [-]: SETTABLE  R80 K183 R81 ; R80["ITEM"] := R81
1309 [-]: GETUPVAL  R81 U0       ; R81 := U0
1310 [-]: GETTABLE  R81 R81 K57  ; R81 := R81["mMission"]
1311 [-]: GETTABLE  R81 R81 K189 ; R81 := R81["miscItemFee"]
1312 [-]: GETTABLE  R81 R81 K201 ; R81 := R81["mItemCount"]
1313 [-]: SETTABLE  R80 K203 R81 ; R80["COUNT"] := R81
1314 [-]: GETGLOBAL R81 K13      ; R81 := _T
1315 [-]: GETTABLE  R81 R81 K192 ; R81 := R81["OwnedFeeItems"]
1316 [-]: GETTABLE  R81 R81 R72  ; R81 := R81[R72]
1317 [-]: GETTABLE  R81 R81 K193 ; R81 := R81["Count"]
1318 [-]: SETTABLE  R80 K204 R81 ; R80["OWNED"] := R81
1319 [-]: CALL      R78 3 2      ; R78 := R78(R79,R80)
1320 [-]: MOVE      R79 R29      ; R79 := R29
1321 [-]: LOADK     R80 K8       ; R80 := ""
1322 [-]: MOVE      R81 R78      ; R81 := R78
1323 [-]: CALL      R79 3 1      ; R79(R80,R81)
1324 [-]: GETTABLE  R79 R2 K119  ; R79 := R2["missionType"]
1325 [-]: GETGLOBAL R80 K27      ; R80 := Lotus_Game
1326 [-]: GETTABLE  R80 R80 K205 ; R80 := R80["MT_ARENA"]
1327 [-]: EQ        0 R79 R80    ; if R79 ~= R80 then PC := 1380
1328 [-]: JMP       1380         ; PC := 1380
1329 [-]: GETTABLE  R79 R2 K90   ; R79 := R2["faction"]
1330 [-]: GETGLOBAL R80 K27      ; R80 := Lotus_Game
1331 [-]: GETTABLE  R80 R80 K206 ; R80 := R80["FC_CORPUS"]
1332 [-]: EQ        0 R79 R80    ; if R79 ~= R80 then PC := 1380
1333 [-]: JMP       1380         ; PC := 1380
1334 [-]: SELF      R79 R2 K207  ; R80 := R2; R79 := R2["0x62A99A22"]
1335 [-]: CALL      R79 2 2      ; R79 := R79(R80)
1336 [-]: LEN       R80 R79      ; R80 := # R79
1337 [-]: LT        0 K30 R80    ; if 0 >= R80 then PC := 1380
1338 [-]: JMP       1380         ; PC := 1380
1339 [-]: GETUPVAL  R80 U3       ; R80 := U3
1340 [-]: GETTABLE  R80 R80 K208 ; R80 := R80["0x7E197415"]
1341 [-]: GETTABLE  R81 R79 K36  ; R81 := R79[1]
1342 [-]: GETTABLE  R81 R81 K209 ; R81 := R81["mCreditsFee"]
1343 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1344 [-]: LOADK     R81 K30      ; R81 := 0
1345 [-]: GETGLOBAL R82 K100     ; R82 := 0x400E7765
1346 [-]: GETGLOBAL R83 K101     ; R83 := gGameData
1347 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1348 [-]: TEST      R82 1        ; if R82 then PC := 1357
1349 [-]: JMP       1357         ; PC := 1357
1350 [-]: GETUPVAL  R82 U3       ; R82 := U3
1351 [-]: GETTABLE  R82 R82 K210 ; R82 := R82["0x1C719E76"]
1352 [-]: GETGLOBAL R83 K101     ; R83 := gGameData
1353 [-]: SELF      R83 R83 K211 ; R84 := R83; R83 := R83["0xCD5A25A6"]
1354 [-]: CALL      R83 2 0      ; R83,... := R83(R84)
1355 [-]: CALL      R82 0 2      ; R82 := R82(R83,...)
1356 [-]: MOVE      R81 R82      ; R81 := R82
1357 [-]: GETGLOBAL R82 K23      ; R82 := mMovie
1358 [-]: SELF      R82 R82 K24  ; R83 := R82; R82 := R82["0x5DB0BD4"]
1359 [-]: LOADK     R84 K212     ; R84 := "/Lotus/Language/Menu/CreditsFormatted"
1360 [-]: MOVE      R85 R1       ; R85 := R1
1361 [-]: NEWTABLE  R86 0 1      ; R86 := {}
1362 [-]: SETTABLE  R86 K213 R80 ; R86["CREDITS"] := R80
1363 [-]: CALL      R82 5 2      ; R82 := R82(R83,R84,R85,R86)
1364 [-]: MOVE      R83 R29      ; R83 := R29
1365 [-]: LOADK     R84 K214     ; R84 := "/Lotus/Language/Menu/Lobby_GreedCreditsRequirementDesc"
1366 [-]: MOVE      R85 R82      ; R85 := R82
1367 [-]: CALL      R83 3 1      ; R83(R84,R85)
1368 [-]: GETGLOBAL R83 K23      ; R83 := mMovie
1369 [-]: SELF      R83 R83 K24  ; R84 := R83; R83 := R83["0x5DB0BD4"]
1370 [-]: LOADK     R85 K215     ; R85 := "/Lotus/Language/Menu/CreditsFormattedOwned"
1371 [-]: MOVE      R86 R1       ; R86 := R1
1372 [-]: NEWTABLE  R87 0 1      ; R87 := {}
1373 [-]: SETTABLE  R87 K204 R81 ; R87["OWNED"] := R81
1374 [-]: CALL      R83 5 2      ; R83 := R83(R84,R85,R86,R87)
1375 [-]: MOVE      R82 R83      ; R82 := R83
1376 [-]: MOVE      R83 R29      ; R83 := R29
1377 [-]: LOADK     R84 K216     ; R84 := "/Lotus/Language/Menu/Lobby_GreedCreditsOwnedRequirementDesc"
1378 [-]: MOVE      R85 R82      ; R85 := R82
1379 [-]: CALL      R83 3 1      ; R83(R84,R85)
1380 [-]: GETTABLE  R83 R2 K217  ; R83 := R2["skillReqs"]
1381 [-]: LEN       R83 R83      ; R83 := # R83
1382 [-]: LT        0 K30 R83    ; if 0 >= R83 then PC := 1422
1383 [-]: JMP       1422         ; PC := 1422
1384 [-]: NEWTABLE  R83 6 0      ; R83 := {}
1385 [-]: LOADK     R84 K218     ; R84 := "Intrinsics"
1386 [-]: LOADK     R85 K219     ; R85 := "RailjackIntrinsicPilot"
1387 [-]: LOADK     R86 K220     ; R86 := "RailjackIntrinsicGunner"
1388 [-]: LOADK     R87 K221     ; R87 := "RailjackIntrinsicTactic"
1389 [-]: LOADK     R88 K222     ; R88 := "RailjackIntrinsicEngineer"
1390 [-]: LOADK     R89 K223     ; R89 := "RailjackIntrinsicCommand"
1391 [-]: SETLIST   R83 6 1      ; R83[(1-1)*FPF+i] := R(83+i), 1 <= i <= 6
1392 [-]: LOADK     R84 K8       ; R84 := ""
1393 [-]: GETGLOBAL R85 K224     ; R85 := 0xECFDD17
1394 [-]: GETTABLE  R86 R2 K217  ; R86 := R2["skillReqs"]
1395 [-]: CALL      R85 2 4      ; R85,R86,R87 := R85(R86)
1396 [-]: JMP       1416         ; PC := 1416
1397 [-]: GETTABLE  R90 R89 K225 ; R90 := R89["skill"]
1398 [-]: ADD       R90 R90 K36  ; R90 := R90 + 1
1399 [-]: GETTABLE  R90 R83 R90  ; R90 := R83[R90]
1400 [-]: GETGLOBAL R91 K11      ; R91 := 0xE6DC43B0
1401 [-]: LOADK     R92 K226     ; R92 := "/Lotus/Language/Intrinsics/"
1402 [-]: MOVE      R93 R90      ; R93 := R90
1403 [-]: CONCAT    R92 R92 R93  ; R92 := R92 .. R93
1404 [-]: LOADNIL   R93 R93      ; R93 := nil
1405 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
1406 [-]: GETGLOBAL R92 K9       ; R92 := string
1407 [-]: GETTABLE  R92 R92 K10  ; R92 := R92["0x639C642A"]
1408 [-]: MOVE      R93 R84      ; R93 := R84
1409 [-]: MOVE      R94 R91      ; R94 := R91
1410 [-]: LOADK     R95 K60      ; R95 := " "
1411 [-]: GETTABLE  R96 R89 K227 ; R96 := R89["req"]
1412 [-]: LOADK     R97 K60      ; R97 := " "
1413 [-]: CONCAT    R93 R93 R97  ; R93 := R93 .. R94 .. R95 .. R96 .. R97
1414 [-]: CALL      R92 2 2      ; R92 := R92(R93)
1415 [-]: MOVE      R84 R92      ; R84 := R92
1416 [-]: TFORLOOP  R85 2        ; R88,R89 :=  R85(R86,R87); if R88 ~= nil then begin PC = 1397; R87 := R88 end
1417 [-]: JMP       1397         ; PC := 1397
1418 [-]: MOVE      R92 R29      ; R92 := R29
1419 [-]: LOADK     R93 K228     ; R93 := "/Game/Requires"
1420 [-]: MOVE      R94 R84      ; R94 := R84
1421 [-]: CALL      R92 3 1      ; R92(R93,R94)
1422 [-]: GETGLOBAL R92 K27      ; R92 := Lotus_Game
1423 [-]: GETTABLE  R92 R92 K229 ; R92 := R92["NT_CLAN"]
1424 [-]: EQ        0 R7 R92     ; if R7 ~= R92 then PC := 1459
1425 [-]: JMP       1459         ; PC := 1459
1426 [-]: SELF      R92 R2 K230  ; R93 := R2; R92 := R2["0xC2648A91"]
1427 [-]: CALL      R92 2 2      ; R92 := R92(R93)
1428 [-]: GETGLOBAL R93 K100     ; R93 := 0x400E7765
1429 [-]: MOVE      R94 R92      ; R94 := R92
1430 [-]: CALL      R93 2 2      ; R93 := R93(R94)
1431 [-]: TEST      R93 1        ; if R93 then PC := 1459
1432 [-]: JMP       1459         ; PC := 1459
1433 [-]: LOADK     R93 K8       ; R93 := ""
1434 [-]: LOADK     R94 K36      ; R94 := 1
1435 [-]: LEN       R95 R92      ; R95 := # R92
1436 [-]: LOADK     R96 K36      ; R96 := 1
1437 [-]: FORPREP   R94 1454     ; R94 -= R96; PC := 1454
1438 [-]: MOVE      R98 R93      ; R98 := R93
1439 [-]: GETTABLE  R99 R92 R97  ; R99 := R92[R97]
1440 [-]: SELF      R99 R99 K231 ; R100 := R99; R99 := R99["0x2683916D"]
1441 [-]: MOVE      R101 R1      ; R101 := R1
1442 [-]: CALL      R99 3 2      ; R99 := R99(R100,R101)
1443 [-]: GETUPVAL  R100 U3      ; R100 := U3
1444 [-]: GETTABLE  R100 R100 K19; R100 := R100["0xF81722A2"]
1445 [-]: LEN       R101 R92     ; R101 := # R92
1446 [-]: EQ        1 R97 R101   ; if R97 == R101 then PC := 1449
1447 [-]: JMP       1449         ; PC := 1449
1448 [-]: MOVE      R101 R0      ; R101 := R0
1449 [-]: MOVE      R101 R1      ; R101 := R1
1450 [-]: LOADK     R102 K8      ; R102 := ""
1451 [-]: LOADK     R103 K232    ; R103 := "<br>"
1452 [-]: CALL      R100 4 2     ; R100 := R100(R101,R102,R103)
1453 [-]: CONCAT    R93 R98 R100 ; R93 := R98 .. R99 .. R100
1454 [-]: FORLOOP   R94 1438     ; R94 += R96; if R94 <= R95 then begin PC := 1438; R97 := R94 end
1455 [-]: MOVE      R98 R29      ; R98 := R29
1456 [-]: LOADK     R99 K233     ; R99 := "/Lotus/Language/Menu/BonusBounty"
1457 [-]: MOVE      R100 R93     ; R100 := R93
1458 [-]: CALL      R98 3 1      ; R98(R99,R100)
1459 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 1489
1460 [-]: JMP       1489         ; PC := 1489
1461 [-]: MOVE      R98 R29      ; R98 := R29
1462 [-]: LOADK     R99 K234     ; R99 := "/Lotus/Language/Menu/MissionBoard_InvasionStatus"
1463 [-]: MOVE      R100 R18     ; R100 := R18
1464 [-]: CALL      R98 3 1      ; R98(R99,R100)
1465 [-]: MOVE      R98 R19      ; R98 := R19
1466 [-]: LOADK     R99 K114     ; R99 := "/"
1467 [-]: MOVE      R100 R20     ; R100 := R20
1468 [-]: CONCAT    R98 R98 R100 ; R98 := R98 .. R99 .. R100
1469 [-]: TEST      R21 0        ; if not R21 then PC := 1481
1470 [-]: JMP       1481         ; PC := 1481
1471 [-]: TEST      R23 1        ; if R23 then PC := 1481
1472 [-]: JMP       1481         ; PC := 1481
1473 [-]: MOVE      R99 R98      ; R99 := R98
1474 [-]: LOADK     R100 K60     ; R100 := " "
1475 [-]: GETGLOBAL R101 K23     ; R101 := mMovie
1476 [-]: SELF      R101 R101 K24; R102 := R101; R101 := R101["0x5DB0BD4"]
1477 [-]: MOVE      R103 R22     ; R103 := R22
1478 [-]: MOVE      R104 R0      ; R104 := R0
1479 [-]: CALL      R101 4 2     ; R101 := R101(R102,R103,R104)
1480 [-]: CONCAT    R98 R99 R101 ; R98 := R99 .. R100 .. R101
1481 [-]: MOVE      R99 R29      ; R99 := R29
1482 [-]: LOADK     R100 K235    ; R100 := "/Lotus/Language/Menu/MissionBoard_InvasionCompletions"
1483 [-]: MOVE      R101 R98     ; R101 := R98
1484 [-]: CALL      R99 3 1      ; R99(R100,R101)
1485 [-]: MOVE      R99 R29      ; R99 := R29
1486 [-]: LOADK     R100 K236    ; R100 := "/Lotus/Language/Menu/MissionBoard_InvasionPayment"
1487 [-]: MOVE      R101 R24     ; R101 := R24
1488 [-]: CALL      R99 3 1      ; R99(R100,R101)
1489 [-]: EQ        1 R25 K22    ; if R25 == nil then PC := 1495
1490 [-]: JMP       1495         ; PC := 1495
1491 [-]: MOVE      R99 R29      ; R99 := R29
1492 [-]: LOADK     R100 K118    ; R100 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
1493 [-]: MOVE      R101 R25     ; R101 := R25
1494 [-]: CALL      R99 3 1      ; R99(R100,R101)
1495 [-]: EQ        1 R26 K22    ; if R26 == nil then PC := 1501
1496 [-]: JMP       1501         ; PC := 1501
1497 [-]: MOVE      R99 R29      ; R99 := R29
1498 [-]: LOADK     R100 K237    ; R100 := "/Lotus/Language/Menu/AlertPopup_Rewards"
1499 [-]: MOVE      R101 R26     ; R101 := R26
1500 [-]: CALL      R99 3 1      ; R99(R100,R101)
1501 [-]: EQ        1 R27 K22    ; if R27 == nil then PC := 1510
1502 [-]: JMP       1510         ; PC := 1510
1503 [-]: MOVE      R99 R29      ; R99 := R29
1504 [-]: LOADNIL   R100 R100    ; R100 := nil
1505 [-]: GETGLOBAL R101 K9      ; R101 := string
1506 [-]: GETTABLE  R101 R101 K10; R101 := R101["0x639C642A"]
1507 [-]: MOVE      R102 R27     ; R102 := R27
1508 [-]: CALL      R101 2 0     ; R101,... := R101(R102)
1509 [-]: CALL      R99 0 1      ; R99(R100,...)
1510 [-]: GETGLOBAL R99 K100     ; R99 := 0x400E7765
1511 [-]: GETTABLE  R100 R2 K238 ; R100 := R2["questReq"]
1512 [-]: CALL      R99 2 2      ; R99 := R99(R100)
1513 [-]: TEST      R99 1        ; if R99 then PC := 1542
1514 [-]: JMP       1542         ; PC := 1542
1515 [-]: GETUPVAL  R99 U1       ; R99 := U1
1516 [-]: GETTABLE  R99 R99 K239 ; R99 := R99["0x2AAC7A8C"]
1517 [-]: GETTABLE  R100 R2 K238 ; R100 := R2["questReq"]
1518 [-]: CALL      R99 2 2      ; R99 := R99(R100)
1519 [-]: TEST      R99 1        ; if R99 then PC := 1542
1520 [-]: JMP       1542         ; PC := 1542
1521 [-]: GETGLOBAL R99 K180     ; R99 := 0x7C282057
1522 [-]: GETTABLE  R100 R2 K238 ; R100 := R2["questReq"]
1523 [-]: CALL      R99 2 2      ; R99 := R99(R100)
1524 [-]: GETGLOBAL R100 K23     ; R100 := mMovie
1525 [-]: SELF      R100 R100 K24; R101 := R100; R100 := R100["0x5DB0BD4"]
1526 [-]: GETGLOBAL R102 K0      ; R102 := 0x9FAED6BC
1527 [-]: SELF      R103 R99 K181; R104 := R99; R103 := R99["0x616C74B6"]
1528 [-]: CALL      R103 2 0     ; R103,... := R103(R104)
1529 [-]: CALL      R102 0 2     ; R102 := R102(R103,...)
1530 [-]: MOVE      R103 R0      ; R103 := R0
1531 [-]: CALL      R100 4 2     ; R100 := R100(R101,R102,R103)
1532 [-]: MOVE      R101 R29     ; R101 := R29
1533 [-]: LOADK     R102 K240    ; R102 := "/Lotus/Language/Menu/MissionLocked"
1534 [-]: GETGLOBAL R103 K23     ; R103 := mMovie
1535 [-]: SELF      R103 R103 K24; R104 := R103; R103 := R103["0x5DB0BD4"]
1536 [-]: LOADK     R105 K241    ; R105 := "/Lotus/Language/Game/MissionNodeQuestRequired"
1537 [-]: MOVE      R106 R0      ; R106 := R0
1538 [-]: NEWTABLE  R107 0 1     ; R107 := {}
1539 [-]: SETTABLE  R107 K242 R100; R107["QUESTNAME"] := R100
1540 [-]: CALL      R103 5 0     ; R103,... := R103(R104,R105,R106,R107)
1541 [-]: CALL      R101 0 1     ; R101(R102,...)
1542 [-]: TEST      R17 0        ; if not R17 then PC := 1550
1543 [-]: JMP       1550         ; PC := 1550
1544 [-]: MOVE      R101 R29     ; R101 := R29
1545 [-]: LOADK     R102 K243    ; R102 := "/Lotus/Language/Menu/MissionBoard_Squads"
1546 [-]: GETGLOBAL R103 K0      ; R103 := 0x9FAED6BC
1547 [-]: MOVE      R104 R16     ; R104 := R16
1548 [-]: CALL      R103 2 0     ; R103,... := R103(R104)
1549 [-]: CALL      R101 0 1     ; R101(R102,...)
1550 [-]: MOVE      R101 R29     ; R101 := R29
1551 [-]: LOADNIL   R102 R102    ; R102 := nil
1552 [-]: LOADK     R103 K60     ; R103 := " "
1553 [-]: CALL      R101 3 1     ; R101(R102,R103)
1554 [-]: MOVE      R101 R29     ; R101 := R29
1555 [-]: LOADNIL   R102 R102    ; R102 := nil
1556 [-]: LOADK     R103 K60     ; R103 := " "
1557 [-]: CALL      R101 3 1     ; R101(R102,R103)
1558 [-]: MOVE      R101 R28     ; R101 := R28
1559 [-]: LOADK     R102 K126    ; R102 := "</p>"
1560 [-]: CONCAT    R28 R101 R102; R28 := R101 .. R102
1561 [-]: GETUPVAL  R101 U5      ; R101 := U5
1562 [-]: GETTABLE  R101 R101 K127; R101 := R101["UpdateTimer"]
1563 [-]: EQ        1 R101 K22   ; if R101 == nil then PC := 1572
1564 [-]: JMP       1572         ; PC := 1572
1565 [-]: GETUPVAL  R101 U5      ; R101 := U5
1566 [-]: GETGLOBAL R102 K9      ; R102 := string
1567 [-]: GETTABLE  R102 R102 K129; R102 := R102["0x7B782033"]
1568 [-]: MOVE      R103 R28     ; R103 := R28
1569 [-]: ADD       R104 R61 K36 ; R104 := R61 + 1
1570 [-]: CALL      R102 3 2     ; R102 := R102(R103,R104)
1571 [-]: SETTABLE  R101 K128 R102; R101["TimerPost"] := R102
1572 [-]: RETURN    R28 2        ; return R28
1573 [-]: RETURN    R0 1         ; return 


; Function #141.1:
;
; Name:            
; Defined at line: 6381
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 16
  2 [-]: JMP       16           ; PC := 16
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K1        ; R3 := "<font color=\"#A9A9A9\">"
  5 [-]: GETGLOBAL R4 K2        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x639C642A"]
  7 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
  8 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 12 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 13 [-]: LOADK     R5 K6        ; R5 := "  </font>"
 14 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R2 K2        ; R2 := string
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xC6772A8A"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: LOADK     R3 K9        ; R3 := "<font color=\"#CACACA\"><b>"
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: LOADK     R5 K10       ; R5 := "</b><br></font>"
 28 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 6733
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: LOADK     R3 K1        ; R3 := "OnEmblemReady("
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", "
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: LOADK     R7 K4        ; R7 := ")"
  9 [-]: CONCAT    R3 R3 R7     ; R3 := R3 .. R4 .. R5 .. R6 .. R7
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x7C282057
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x85A7A017"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 22 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: SETTABLE  R3 K8 R2     ; R3["clanIcon"] := R2
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: SETTABLE  R4 R1 K7     ; R4[R1] := nil
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Node"]
 29 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 32 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x26581636"]
 33 [-]: LOADK     R6 K12       ; R6 := "InfoTip.EnemyIcon"
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 36 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 6751
; #Upvalues:       24
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  54

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  9 [-]: LOADK     R4 K3        ; R4 := "_root"
 10 [-]: LOADK     R5 K4        ; R5 := "_xmouse"
 11 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
 14 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
 16 [-]: LOADK     R5 K3        ; R5 := "_root"
 17 [-]: LOADK     R6 K5        ; R6 := "_ymouse"
 18 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: LE        0 R1 K6      ; if R1 > -1000 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: LE        0 R2 K6      ; if R2 > -1000 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R3 U2        ; R3 := U2
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 27 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 81
 28 [-]: JMP       81           ; PC := 81
 29 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x880196A7"]
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["clipName"]
 34 [-]: LOADK     R6 K7        ; R6 := "Node"
 35 [-]: LOADK     R7 K11       ; R7 := "_color"
 36 [-]: GETGLOBAL R8 K12       ; R8 := _G
 37 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["UIColor_White"]
 38 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 39 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 40 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x445651FB"]
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 43 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["labelIndex"]
 44 [-]: LOADK     R6 K16       ; R6 := "_alpha"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: GETUPVAL  R8 U2        ; R8 := U2
 47 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Node"]
 48 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 49 [-]: CALL      R3 0 1       ; R3(R4,...)
 50 [-]: GETUPVAL  R3 U2        ; R3 := U2
 51 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 52 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["guildId"]
 53 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETUPVAL  R3 U2        ; R3 := U2
 56 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 57 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["clanTier"]
 58 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R3 R0        ; R3 := R0
 61 [-]: MOVE      R3 R1        ; R3 := R1
 62 [-]: TEST      R3 0         ; if not R3 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: GETGLOBAL R4 K19       ; R4 := 0x52E17A90
 65 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 66 [-]: GETUPVAL  R6 U2        ; R6 := U2
 67 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
 68 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["clipName"]
 69 [-]: LOADK     R7 K20       ; R7 := ".Node.Container.Node"
 70 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 71 [-]: GETGLOBAL R7 K21       ; R7 := UISys
 72 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["FlashInstance_LINEAR"]
 73 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 74 [-]: LOADK     R9 K16       ; R9 := "_alpha"
 75 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 76 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 77 [-]: LOADK     R10 K23      ; R10 := 0
 78 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 79 [-]: LOADK     R10 K24      ; R10 := 0.25
 80 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 81 [-]: GETUPVAL  R4 U4        ; R4 := U4
 82 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 83 [-]: MOVE      R5 R0        ; R5 := R0
 84 [-]: GETUPVAL  R6 U5        ; R6 := U5
 85 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R5 R1        ; R5 := R1
 88 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
 89 [-]: MOVE      R7 R4        ; R7 := R4
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 927
 92 [-]: JMP       927          ; PC := 927
 93 [-]: GETTABLE  R6 R4 K26    ; R6 := R4["forceHover"]
 94 [-]: TEST      R6 1         ; if R6 then PC := 114
 95 [-]: JMP       114          ; PC := 114
 96 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["locked"]
 97 [-]: TEST      R6 0         ; if not R6 then PC := 114
 98 [-]: JMP       114          ; PC := 114
 99 [-]: GETUPVAL  R6 U6        ; R6 := U6
100 [-]: GETUPVAL  R7 U7        ; R7 := U7
101 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["EDIT_NODES"]
102 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R6 U6        ; R6 := U6
105 [-]: GETUPVAL  R7 U7        ; R7 := U7
106 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["EDIT_EDGES"]
107 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
108 [-]: JMP       114          ; PC := 114
109 [-]: GETUPVAL  R6 U6        ; R6 := U6
110 [-]: GETUPVAL  R7 U7        ; R7 := U7
111 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["EDIT_NODE_DECOS"]
112 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 927
113 [-]: JMP       927          ; PC := 927
114 [-]: GETTABLE  R6 R4 K31    ; R6 := R4["locationEnabled"]
115 [-]: TEST      R6 0         ; if not R6 then PC := 927
116 [-]: JMP       927          ; PC := 927
117 [-]: GETUPVAL  R6 U2        ; R6 := U2
118 [-]: SETTABLE  R6 K7 R4     ; R6["Node"] := R4
119 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
120 [-]: GETUPVAL  R7 U2        ; R7 := U2
121 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
122 [-]: CALL      R6 2 2       ; R6 := R6(R7)
123 [-]: TEST      R6 0         ; if not R6 then PC := 126
124 [-]: JMP       126          ; PC := 126
125 [-]: RETURN    R0 1         ; return 
126 [-]: GETUPVAL  R6 U2        ; R6 := U2
127 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
128 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
129 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["mission"]
130 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["missionType"]
131 [-]: GETGLOBAL R7 K35       ; R7 := Lotus_Game
132 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["MT_ASSASSINATION"]
133 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 139
134 [-]: JMP       139          ; PC := 139
135 [-]: GETUPVAL  R6 U8        ; R6 := U8
136 [-]: GETUPVAL  R7 U2        ; R7 := U2
137 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
138 [-]: CALL      R6 2 1       ; R6(R7)
139 [-]: TEST      R5 1         ; if R5 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R6 U9        ; R6 := U9
142 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["0x25992394"]
143 [-]: GETGLOBAL R7 K12       ; R7 := _G
144 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["UISound_Focus"]
145 [-]: CALL      R6 2 1       ; R6(R7)
146 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["guildId"]
147 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 152
148 [-]: JMP       152          ; PC := 152
149 [-]: GETTABLE  R6 R4 K18    ; R6 := R4["clanTier"]
150 [-]: EQ        0 R6 K8      ; if R6 ~= nil then PC := 153
151 [-]: JMP       153          ; PC := 153
152 [-]: MOVE      R6 R0        ; R6 := R0
153 [-]: MOVE      R6 R1        ; R6 := R1
154 [-]: TEST      R6 0         ; if not R6 then PC := 172
155 [-]: JMP       172          ; PC := 172
156 [-]: GETGLOBAL R7 K19       ; R7 := 0x52E17A90
157 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
158 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
159 [-]: LOADK     R10 K20      ; R10 := ".Node.Container.Node"
160 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
161 [-]: GETGLOBAL R10 K21      ; R10 := UISys
162 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_LINEAR"]
163 [-]: NEWTABLE  R11 1 0      ; R11 := {}
164 [-]: LOADK     R12 K16      ; R12 := "_alpha"
165 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
166 [-]: NEWTABLE  R12 1 0      ; R12 := {}
167 [-]: LOADK     R13 K39      ; R13 := 35
168 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
169 [-]: LOADK     R13 K24      ; R13 := 0.25
170 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
171 [-]: JMP       179          ; PC := 179
172 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
173 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0x1C19D966"]
174 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
175 [-]: LOADK     R10 K11      ; R10 := "_color"
176 [-]: GETGLOBAL R11 K12      ; R11 := _G
177 [-]: GETTABLE  R11 R11 K41  ; R11 := R11["UIColor_Yellow"]
178 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
179 [-]: GETTABLE  R7 R4 K42    ; R7 := R4["isJunction"]
180 [-]: TEST      R7 0         ; if not R7 then PC := 189
181 [-]: JMP       189          ; PC := 189
182 [-]: GETGLOBAL R7 K43       ; R7 := _T
183 [-]: SETTABLE  R7 K44 K8    ; R7["JunctionTasksRelayReconstruction"] := nil
184 [-]: GETUPVAL  R7 U10       ; R7 := U10
185 [-]: MOVE      R8 R4        ; R8 := R4
186 [-]: MOVE      R9 R5        ; R9 := R5
187 [-]: CALL      R7 3 1       ; R7(R8,R9)
188 [-]: JMP       927          ; PC := 927
189 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
190 [-]: TEST      R7 0         ; if not R7 then PC := 220
191 [-]: JMP       220          ; PC := 220
192 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
193 [-]: EQ        0 R7 K23     ; if R7 ~= 0 then PC := 220
194 [-]: JMP       220          ; PC := 220
195 [-]: GETTABLE  R7 R4 K46    ; R7 := R4["name"]
196 [-]: SELF      R7 R7 K47    ; R8 := R7; R7 := R7["0x5EC7A3D2"]
197 [-]: CALL      R7 2 2       ; R7 := R7(R8)
198 [-]: GETGLOBAL R8 K48       ; R8 := string
199 [-]: GETTABLE  R8 R8 K49    ; R8 := R8["0x7B782033"]
200 [-]: MOVE      R9 R7        ; R9 := R7
201 [-]: LOADK     R10 K50      ; R10 := 1
202 [-]: GETGLOBAL R11 K48      ; R11 := string
203 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["0xDE44F664"]
204 [-]: MOVE      R12 R7       ; R12 := R7
205 [-]: LOADK     R13 K52      ; R13 := "Rebuild"
206 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
207 [-]: SUB       R11 R11 K50  ; R11 := R11 - 1
208 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
209 [-]: MOVE      R7 R8        ; R7 := R8
210 [-]: GETGLOBAL R8 K43       ; R8 := _T
211 [-]: GETUPVAL  R9 U11       ; R9 := U11
212 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
213 [-]: GETTABLE  R9 R9 K53    ; R9 := R9["info"]
214 [-]: SETTABLE  R8 K44 R9    ; R8["JunctionTasksRelayReconstruction"] := R9
215 [-]: GETUPVAL  R8 U10       ; R8 := U10
216 [-]: MOVE      R9 R4        ; R9 := R4
217 [-]: MOVE      R10 R5       ; R10 := R5
218 [-]: CALL      R8 3 1       ; R8(R9,R10)
219 [-]: JMP       927          ; PC := 927
220 [-]: GETUPVAL  R8 U6        ; R8 := U6
221 [-]: GETUPVAL  R9 U7        ; R9 := U7
222 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["EDIT_NODE_DECOS"]
223 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 927
224 [-]: JMP       927          ; PC := 927
225 [-]: GETUPVAL  R8 U12       ; R8 := U12
226 [-]: TEST      R8 0         ; if not R8 then PC := 927
227 [-]: JMP       927          ; PC := 927
228 [-]: GETTABLE  R8 R4 K26    ; R8 := R4["forceHover"]
229 [-]: TEST      R8 1         ; if R8 then PC := 234
230 [-]: JMP       234          ; PC := 234
231 [-]: GETTABLE  R8 R4 K27    ; R8 := R4["locked"]
232 [-]: TEST      R8 1         ; if R8 then PC := 927
233 [-]: JMP       927          ; PC := 927
234 [-]: GETTABLE  R8 R4 K54    ; R8 := R4["isShortcut"]
235 [-]: TEST      R8 1         ; if R8 then PC := 927
236 [-]: JMP       927          ; PC := 927
237 [-]: GETUPVAL  R8 U13       ; R8 := U13
238 [-]: SELF      R8 R8 K55    ; R9 := R8; R8 := R8["0xDF213CE1"]
239 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
240 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
241 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
242 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["mission"]
243 [-]: GETTABLE  R8 R8 K56    ; R8 := R8["faction"]
244 [-]: GETGLOBAL R9 K57       ; R9 := 0x9FAED6BC
245 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
246 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
247 [-]: CALL      R9 2 2       ; R9 := R9(R10)
248 [-]: LOADNIL   R10 R10      ; R10 := nil
249 [-]: GETTABLE  R11 R4 K58   ; R11 := R4["displayMissionOverride"]
250 [-]: EQ        1 R11 K8     ; if R11 == nil then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: GETTABLE  R10 R4 K58   ; R10 := R4["displayMissionOverride"]
253 [-]: JMP       272          ; PC := 272
254 [-]: GETGLOBAL R11 K25      ; R11 := 0x400E7765
255 [-]: GETTABLE  R12 R4 K32   ; R12 := R4["radialSector"]
256 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["mission"]
257 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["levelKeyName"]
258 [-]: CALL      R11 2 2      ; R11 := R11(R12)
259 [-]: TEST      R11 1        ; if R11 then PC := 264
260 [-]: JMP       264          ; PC := 264
261 [-]: GETTABLE  R11 R4 K32   ; R11 := R4["radialSector"]
262 [-]: GETTABLE  R10 R11 K33  ; R10 := R11["mission"]
263 [-]: JMP       272          ; PC := 272
264 [-]: GETUPVAL  R11 U14      ; R11 := U14
265 [-]: GETTABLE  R11 R11 K60  ; R11 := R11["0xBB3AACF2"]
266 [-]: CALL      R11 1 2      ; R11 := R11()
267 [-]: SELF      R11 R11 K61  ; R12 := R11; R11 := R11["0x4B93F65B"]
268 [-]: GETTABLE  R13 R4 K32   ; R13 := R4["radialSector"]
269 [-]: GETTABLE  R13 R13 K46  ; R13 := R13["name"]
270 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
271 [-]: MOVE      R10 R11      ; R10 := R11
272 [-]: MOVE      R11 R0       ; R11 := R0
273 [-]: GETGLOBAL R12 K43      ; R12 := _T
274 [-]: GETTABLE  R12 R12 K62  ; R12 := R12["CachedInvasionInfo"]
275 [-]: GETTABLE  R12 R12 R9   ; R12 := R12[R9]
276 [-]: EQ        0 R12 K8     ; if R12 ~= nil then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: MOVE      R12 R0       ; R12 := R0
279 [-]: MOVE      R12 R1       ; R12 := R1
280 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
281 [-]: GETTABLE  R14 R4 K58   ; R14 := R4["displayMissionOverride"]
282 [-]: CALL      R13 2 2      ; R13 := R13(R14)
283 [-]: TEST      R13 0        ; if not R13 then PC := 294
284 [-]: JMP       294          ; PC := 294
285 [-]: GETTABLE  R13 R10 K56  ; R13 := R10["faction"]
286 [-]: EQ        1 R8 R13     ; if R8 == R13 then PC := 292
287 [-]: JMP       292          ; PC := 292
288 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
289 [-]: GETTABLE  R14 R10 K59  ; R14 := R10["levelKeyName"]
290 [-]: CALL      R13 2 2      ; R13 := R13(R14)
291 [-]: JMP       294          ; PC := 294
292 [-]: MOVE      R13 R0       ; R13 := R0
293 [-]: MOVE      R13 R1       ; R13 := R1
294 [-]: GETGLOBAL R14 K43      ; R14 := _T
295 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
296 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
297 [-]: EQ        1 R14 K8     ; if R14 == nil then PC := 320
298 [-]: JMP       320          ; PC := 320
299 [-]: GETGLOBAL R14 K43      ; R14 := _T
300 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
301 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
302 [-]: GETTABLE  R14 R14 K64  ; R14 := R14["mUnlocked"]
303 [-]: TEST      R14 0        ; if not R14 then PC := 322
304 [-]: JMP       322          ; PC := 322
305 [-]: GETTABLE  R14 R4 K65   ; R14 := R4["icon"]
306 [-]: GETGLOBAL R15 K12      ; R15 := _G
307 [-]: GETTABLE  R15 R15 K66  ; R15 := R15["UITextures_GhostTower"]
308 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 315
309 [-]: JMP       315          ; PC := 315
310 [-]: GETTABLE  R14 R4 K65   ; R14 := R4["icon"]
311 [-]: GETGLOBAL R15 K12      ; R15 := _G
312 [-]: GETTABLE  R15 R15 K67  ; R15 := R15["UITextures_GhostTowerVariant"]
313 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 320
314 [-]: JMP       320          ; PC := 320
315 [-]: GETGLOBAL R14 K43      ; R14 := _T
316 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
317 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
318 [-]: GETTABLE  R14 R14 K68  ; R14 := R14["mShowInStarChart"]
319 [-]: JMP       322          ; PC := 322
320 [-]: MOVE      R14 R0       ; R14 := R0
321 [-]: MOVE      R14 R1       ; R14 := R1
322 [-]: TEST      R14 1        ; if R14 then PC := 351
323 [-]: JMP       351          ; PC := 351
324 [-]: GETGLOBAL R15 K43      ; R15 := _T
325 [-]: GETTABLE  R15 R15 K69  ; R15 := R15["CachedSkullNodes"]
326 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
327 [-]: TEST      R15 1        ; if R15 then PC := 342
328 [-]: JMP       342          ; PC := 342
329 [-]: GETGLOBAL R15 K43      ; R15 := _T
330 [-]: GETTABLE  R15 R15 K70  ; R15 := R15["CachedAlerts"]
331 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
332 [-]: TEST      R15 0        ; if not R15 then PC := 353
333 [-]: JMP       353          ; PC := 353
334 [-]: GETGLOBAL R15 K43      ; R15 := _T
335 [-]: GETTABLE  R15 R15 K70  ; R15 := R15["CachedAlerts"]
336 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
337 [-]: GETTABLE  R15 R15 K71  ; R15 := R15["mAlertInfo"]
338 [-]: GETTABLE  R15 R15 K72  ; R15 := R15["mMissionInfo"]
339 [-]: GETTABLE  R15 R15 K73  ; R15 := R15["nightmare"]
340 [-]: TEST      R15 0        ; if not R15 then PC := 353
341 [-]: JMP       353          ; PC := 353
342 [-]: GETUPVAL  R15 U15      ; R15 := U15
343 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
344 [-]: TEST      R15 0        ; if not R15 then PC := 352
345 [-]: JMP       352          ; PC := 352
346 [-]: GETUPVAL  R15 U15      ; R15 := U15
347 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
348 [-]: GETTABLE  R15 R15 K74  ; R15 := R15["IsQuest"]
349 [-]: MOVE      R15 R15      ; R15 := R15
350 [-]: JMP       353          ; PC := 353
351 [-]: MOVE      R15 R0       ; R15 := R0
352 [-]: MOVE      R15 R1       ; R15 := R1
353 [-]: GETGLOBAL R16 K43      ; R16 := _T
354 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
355 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
356 [-]: EQ        1 R16 K8     ; if R16 == nil then PC := 369
357 [-]: JMP       369          ; PC := 369
358 [-]: GETGLOBAL R16 K43      ; R16 := _T
359 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
360 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
361 [-]: GETTABLE  R16 R16 K64  ; R16 := R16["mUnlocked"]
362 [-]: TEST      R16 0        ; if not R16 then PC := 371
363 [-]: JMP       371          ; PC := 371
364 [-]: GETGLOBAL R16 K43      ; R16 := _T
365 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
366 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
367 [-]: GETTABLE  R16 R16 K68  ; R16 := R16["mShowInStarChart"]
368 [-]: JMP       371          ; PC := 371
369 [-]: MOVE      R16 R0       ; R16 := R0
370 [-]: MOVE      R16 R1       ; R16 := R1
371 [-]: GETGLOBAL R17 K43      ; R17 := _T
372 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedNemesisMissions"]
373 [-]: GETTABLE  R17 R17 R9   ; R17 := R17[R9]
374 [-]: EQ        0 R17 K8     ; if R17 ~= nil then PC := 377
375 [-]: JMP       377          ; PC := 377
376 [-]: MOVE      R17 R0       ; R17 := R0
377 [-]: MOVE      R17 R1       ; R17 := R1
378 [-]: GETUPVAL  R18 U16      ; R18 := U16
379 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["Active"]
380 [-]: GETGLOBAL R19 K12      ; R19 := _G
381 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
382 [-]: TEST      R19 0        ; if not R19 then PC := 422
383 [-]: JMP       422          ; PC := 422
384 [-]: GETGLOBAL R19 K12      ; R19 := _G
385 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
386 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
387 [-]: TEST      R19 0        ; if not R19 then PC := 422
388 [-]: JMP       422          ; PC := 422
389 [-]: GETGLOBAL R19 K12      ; R19 := _G
390 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
391 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
392 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["mRelayReconstruction"]
393 [-]: TEST      R19 0        ; if not R19 then PC := 398
394 [-]: JMP       398          ; PC := 398
395 [-]: GETTABLE  R19 R4 K45   ; R19 := R4["reconstructionProgress"]
396 [-]: EQ        0 R19 K50    ; if R19 ~= 1 then PC := 422
397 [-]: JMP       422          ; PC := 422
398 [-]: GETGLOBAL R19 K12      ; R19 := _G
399 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
400 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
401 [-]: GETTABLE  R10 R19 K72  ; R10 := R19["mMissionInfo"]
402 [-]: GETGLOBAL R19 K43      ; R19 := _T
403 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
404 [-]: TEST      R19 0        ; if not R19 then PC := 417
405 [-]: JMP       417          ; PC := 417
406 [-]: GETGLOBAL R19 K43      ; R19 := _T
407 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
408 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
409 [-]: TEST      R19 0        ; if not R19 then PC := 417
410 [-]: JMP       417          ; PC := 417
411 [-]: GETGLOBAL R19 K43      ; R19 := _T
412 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
413 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
414 [-]: SELF      R19 R19 K81  ; R20 := R19; R19 := R19["0xF1A9732E"]
415 [-]: CALL      R19 2 2      ; R19 := R19(R20)
416 [-]: SETTABLE  R10 K65 R19  ; R10["icon"] := R19
417 [-]: GETGLOBAL R19 K25      ; R19 := 0x400E7765
418 [-]: GETTABLE  R20 R10 K65  ; R20 := R10["icon"]
419 [-]: CALL      R19 2 2      ; R19 := R19(R20)
420 [-]: MOVE      R11 R19      ; R11 := R19
421 [-]: JMP       453          ; PC := 453
422 [-]: GETGLOBAL R19 K43      ; R19 := _T
423 [-]: GETTABLE  R19 R19 K82  ; R19 := R19["LockedGoalMissionInfo"]
424 [-]: TEST      R19 0        ; if not R19 then PC := 453
425 [-]: JMP       453          ; PC := 453
426 [-]: GETGLOBAL R19 K43      ; R19 := _T
427 [-]: GETTABLE  R19 R19 K82  ; R19 := R19["LockedGoalMissionInfo"]
428 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
429 [-]: TEST      R19 0        ; if not R19 then PC := 453
430 [-]: JMP       453          ; PC := 453
431 [-]: GETGLOBAL R19 K43      ; R19 := _T
432 [-]: GETTABLE  R19 R19 K82  ; R19 := R19["LockedGoalMissionInfo"]
433 [-]: GETTABLE  R10 R19 R9   ; R10 := R19[R9]
434 [-]: GETGLOBAL R19 K43      ; R19 := _T
435 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
436 [-]: TEST      R19 0        ; if not R19 then PC := 449
437 [-]: JMP       449          ; PC := 449
438 [-]: GETGLOBAL R19 K43      ; R19 := _T
439 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
440 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
441 [-]: TEST      R19 0        ; if not R19 then PC := 449
442 [-]: JMP       449          ; PC := 449
443 [-]: GETGLOBAL R19 K43      ; R19 := _T
444 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
445 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
446 [-]: SELF      R19 R19 K81  ; R20 := R19; R19 := R19["0xF1A9732E"]
447 [-]: CALL      R19 2 2      ; R19 := R19(R20)
448 [-]: SETTABLE  R10 K65 R19  ; R10["icon"] := R19
449 [-]: GETGLOBAL R19 K25      ; R19 := 0x400E7765
450 [-]: GETTABLE  R20 R10 K65  ; R20 := R10["icon"]
451 [-]: CALL      R19 2 2      ; R19 := R19(R20)
452 [-]: MOVE      R11 R19      ; R11 := R19
453 [-]: GETTABLE  R19 R4 K83   ; R19 := R4["locName"]
454 [-]: TEST      R15 0        ; if not R15 then PC := 464
455 [-]: JMP       464          ; PC := 464
456 [-]: GETGLOBAL R20 K84      ; R20 := 0xE6DC43B0
457 [-]: LOADK     R21 K85      ; R21 := "/Lotus/Language/Menu/NightmareModeName"
458 [-]: LOADNIL   R22 R22      ; R22 := nil
459 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
460 [-]: LOADK     R21 K86      ; R21 := ": "
461 [-]: MOVE      R22 R19      ; R22 := R19
462 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
463 [-]: JMP       474          ; PC := 474
464 [-]: TEST      R6 0         ; if not R6 then PC := 474
465 [-]: JMP       474          ; PC := 474
466 [-]: GETGLOBAL R20 K48      ; R20 := string
467 [-]: GETTABLE  R20 R20 K87  ; R20 := R20["0x639C642A"]
468 [-]: GETGLOBAL R21 K84      ; R21 := 0xE6DC43B0
469 [-]: LOADK     R22 K88      ; R22 := "/Lotus/Language/Dojo/FeaturedDojo"
470 [-]: LOADNIL   R23 R23      ; R23 := nil
471 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
472 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
473 [-]: MOVE      R19 R20      ; R19 := R20
474 [-]: GETUPVAL  R20 U17      ; R20 := U17
475 [-]: MOVE      R21 R4       ; R21 := R4
476 [-]: LOADNIL   R22 R22      ; R22 := nil
477 [-]: MOVE      R23 R10      ; R23 := R10
478 [-]: MOVE      R24 R15      ; R24 := R15
479 [-]: MOVE      R25 R13      ; R25 := R13
480 [-]: CALL      R20 6 2      ; R20 := R20(R21,R22,R23,R24,R25)
481 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
482 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0x1C19D966"]
483 [-]: LOADK     R23 K89      ; R23 := "InfoTip.NodeName"
484 [-]: LOADK     R24 K90      ; R24 := "verticalAlignment"
485 [-]: LOADK     R25 K91      ; R25 := "bottom"
486 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
487 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
488 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0x1C19D966"]
489 [-]: LOADK     R23 K89      ; R23 := "InfoTip.NodeName"
490 [-]: LOADK     R24 K92      ; R24 := "text"
491 [-]: MOVE      R25 R19      ; R25 := R19
492 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
493 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
494 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0x1C19D966"]
495 [-]: LOADK     R23 K93      ; R23 := "InfoTip.Label"
496 [-]: LOADK     R24 K92      ; R24 := "text"
497 [-]: MOVE      R25 R20      ; R25 := R20
498 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
499 [-]: GETUPVAL  R21 U18      ; R21 := U18
500 [-]: GETGLOBAL R22 K0       ; R22 := 0xF595ADDE
501 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
502 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x6B7B470B"]
503 [-]: LOADK     R25 K95      ; R25 := "InfoTip.Bg"
504 [-]: LOADK     R26 K96      ; R26 := "_width"
505 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
506 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
507 [-]: SETTABLE  R21 K94 R22  ; R21["BgWidth"] := R22
508 [-]: GETUPVAL  R21 U18      ; R21 := U18
509 [-]: GETGLOBAL R22 K0       ; R22 := 0xF595ADDE
510 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
511 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x6B7B470B"]
512 [-]: LOADK     R25 K93      ; R25 := "InfoTip.Label"
513 [-]: LOADK     R26 K98      ; R26 := "textHeight"
514 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
515 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
516 [-]: SUB       R22 R22 K99  ; R22 := R22 - 10
517 [-]: SETTABLE  R21 K97 R22  ; R21["BgHeight"] := R22
518 [-]: GETGLOBAL R21 K19      ; R21 := 0x52E17A90
519 [-]: GETGLOBAL R22 K1       ; R22 := mMovie
520 [-]: LOADK     R23 K100     ; R23 := "InfoTip"
521 [-]: GETGLOBAL R24 K21      ; R24 := UISys
522 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["FlashInstance_LINEAR"]
523 [-]: NEWTABLE  R25 1 0      ; R25 := {}
524 [-]: LOADK     R26 K16      ; R26 := "_alpha"
525 [-]: SETLIST   R25 1 1      ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 1
526 [-]: NEWTABLE  R26 1 0      ; R26 := {}
527 [-]: LOADK     R27 K101     ; R27 := 100
528 [-]: SETLIST   R26 1 1      ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 1
529 [-]: LOADK     R27 K102     ; R27 := 0.20000000298023
530 [-]: CALL      R21 7 1      ; R21(R22,R23,R24,R25,R26,R27)
531 [-]: GETGLOBAL R21 K103     ; R21 := math
532 [-]: GETTABLE  R21 R21 K104 ; R21 := R21["0x1DD19CC9"]
533 [-]: MUL       R22 R0 K105  ; R22 := R0 * 67443
534 [-]: CALL      R21 2 1      ; R21(R22)
535 [-]: LOADNIL   R21 R21      ; R21 := nil
536 [-]: TEST      R16 0        ; if not R16 then PC := 541
537 [-]: JMP       541          ; PC := 541
538 [-]: GETGLOBAL R22 K12      ; R22 := _G
539 [-]: GETTABLE  R21 R22 K106 ; R21 := R22["UITexture_EliteAlert"]
540 [-]: JMP       698          ; PC := 698
541 [-]: TEST      R15 0        ; if not R15 then PC := 546
542 [-]: JMP       546          ; PC := 546
543 [-]: GETGLOBAL R22 K12      ; R22 := _G
544 [-]: GETTABLE  R21 R22 K107 ; R21 := R22["UITexture_SkullLarge"]
545 [-]: JMP       698          ; PC := 698
546 [-]: TEST      R14 0        ; if not R14 then PC := 550
547 [-]: JMP       550          ; PC := 550
548 [-]: GETTABLE  R21 R4 K65   ; R21 := R4["icon"]
549 [-]: JMP       698          ; PC := 698
550 [-]: TEST      R6 0         ; if not R6 then PC := 582
551 [-]: JMP       582          ; PC := 582
552 [-]: GETTABLE  R22 R4 K108  ; R22 := R4["clanIcon"]
553 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 557
554 [-]: JMP       557          ; PC := 557
555 [-]: GETTABLE  R21 R4 K108  ; R21 := R4["clanIcon"]
556 [-]: JMP       698          ; PC := 698
557 [-]: GETGLOBAL R22 K12      ; R22 := _G
558 [-]: GETTABLE  R21 R22 K109 ; R21 := R22["UITexture_DefaultClan"]
559 [-]: GETUPVAL  R22 U9       ; R22 := U9
560 [-]: GETTABLE  R22 R22 K110 ; R22 := R22["0x36BA5F48"]
561 [-]: CALL      R22 1 2      ; R22 := R22()
562 [-]: TEST      R22 1        ; if R22 then PC := 698
563 [-]: JMP       698          ; PC := 698
564 [-]: GETUPVAL  R22 U14      ; R22 := U14
565 [-]: GETTABLE  R22 R22 K111 ; R22 := R22["0x71ACF9C"]
566 [-]: GETTABLE  R23 R4 K17   ; R23 := R4["guildId"]
567 [-]: CALL      R22 2 2      ; R22 := R22(R23)
568 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 698
569 [-]: JMP       698          ; PC := 698
570 [-]: GETUPVAL  R23 U19      ; R23 := U19
571 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
572 [-]: EQ        0 R23 K8     ; if R23 ~= nil then PC := 698
573 [-]: JMP       698          ; PC := 698
574 [-]: GETUPVAL  R23 U19      ; R23 := U19
575 [-]: SETTABLE  R23 R22 R4   ; R23[R22] := R4
576 [-]: GETGLOBAL R23 K112     ; R23 := gGameRules
577 [-]: SELF      R23 R23 K113 ; R24 := R23; R23 := R23["0x4A57F63D"]
578 [-]: MOVE      R25 R22      ; R25 := R22
579 [-]: LOADK     R26 K114     ; R26 := "OnEmblemReady"
580 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
581 [-]: JMP       698          ; PC := 698
582 [-]: GETGLOBAL R23 K25      ; R23 := 0x400E7765
583 [-]: MOVE      R24 R10      ; R24 := R10
584 [-]: CALL      R23 2 2      ; R23 := R23(R24)
585 [-]: TEST      R23 1        ; if R23 then PC := 698
586 [-]: JMP       698          ; PC := 698
587 [-]: LOADNIL   R23 R23      ; R23 := nil
588 [-]: TEST      R12 0        ; if not R12 then PC := 598
589 [-]: JMP       598          ; PC := 598
590 [-]: GETGLOBAL R24 K43      ; R24 := _T
591 [-]: GETTABLE  R24 R24 K62  ; R24 := R24["CachedInvasionInfo"]
592 [-]: GETTABLE  R24 R24 R9   ; R24 := R24[R9]
593 [-]: GETTABLE  R24 R24 K115 ; R24 := R24["mAttackerMissionInfo"]
594 [-]: SELF      R24 R24 K116 ; R25 := R24; R24 := R24["0x70C51B59"]
595 [-]: CALL      R24 2 2      ; R24 := R24(R25)
596 [-]: MOVE      R23 R24      ; R23 := R24
597 [-]: JMP       668          ; PC := 668
598 [-]: GETGLOBAL R24 K25      ; R24 := 0x400E7765
599 [-]: GETTABLE  R25 R10 K117 ; R25 := R10["vipAgent"]
600 [-]: CALL      R24 2 2      ; R24 := R24(R25)
601 [-]: TEST      R24 1        ; if R24 then PC := 632
602 [-]: JMP       632          ; PC := 632
603 [-]: GETGLOBAL R24 K118     ; R24 := 0x63B09107
604 [-]: GETUPVAL  R25 U20      ; R25 := U20
605 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
606 [-]: JMP       618          ; PC := 618
607 [-]: GETTABLE  R29 R28 K119 ; R29 := R28["StarChartAgent"]
608 [-]: GETTABLE  R30 R10 K117 ; R30 := R10["vipAgent"]
609 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 618
610 [-]: JMP       618          ; PC := 618
611 [-]: GETGLOBAL R29 K25      ; R29 := 0x400E7765
612 [-]: GETTABLE  R30 R28 K120 ; R30 := R28["StarChartImage"]
613 [-]: CALL      R29 2 2      ; R29 := R29(R30)
614 [-]: TEST      R29 1        ; if R29 then PC := 620
615 [-]: JMP       620          ; PC := 620
616 [-]: GETTABLE  R21 R28 K120 ; R21 := R28["StarChartImage"]
617 [-]: JMP       620          ; PC := 620
618 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 607; R26 := R27 end
619 [-]: JMP       607          ; PC := 607
620 [-]: GETGLOBAL R29 K25      ; R29 := 0x400E7765
621 [-]: MOVE      R30 R21      ; R30 := R21
622 [-]: CALL      R29 2 2      ; R29 := R29(R30)
623 [-]: TEST      R29 0        ; if not R29 then PC := 668
624 [-]: JMP       668          ; PC := 668
625 [-]: NEWTABLE  R29 1 0      ; R29 := {}
626 [-]: NEWTABLE  R30 0 1      ; R30 := {}
627 [-]: GETTABLE  R31 R10 K117 ; R31 := R10["vipAgent"]
628 [-]: SETTABLE  R30 K121 R31 ; R30["agent"] := R31
629 [-]: SETLIST   R29 1 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
630 [-]: MOVE      R23 R29      ; R23 := R29
631 [-]: JMP       668          ; PC := 668
632 [-]: GETTABLE  R29 R10 K34  ; R29 := R10["missionType"]
633 [-]: GETGLOBAL R30 K35      ; R30 := Lotus_Game
634 [-]: GETTABLE  R30 R30 K122 ; R30 := R30["MT_RAILJACK"]
635 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 668
636 [-]: JMP       668          ; PC := 668
637 [-]: GETGLOBAL R29 K118     ; R29 := 0x63B09107
638 [-]: SELF      R30 R10 K116 ; R31 := R10; R30 := R10["0x70C51B59"]
639 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
640 [-]: CALL      R29 0 4      ; R29,R30,R31 := R29(R30,...)
641 [-]: JMP       666          ; PC := 666
642 [-]: GETTABLE  R34 R33 K121 ; R34 := R33["agent"]
643 [-]: GETGLOBAL R35 K25      ; R35 := 0x400E7765
644 [-]: MOVE      R36 R34      ; R36 := R34
645 [-]: CALL      R35 2 2      ; R35 := R35(R36)
646 [-]: TEST      R35 1        ; if R35 then PC := 666
647 [-]: JMP       666          ; PC := 666
648 [-]: GETGLOBAL R35 K48      ; R35 := string
649 [-]: GETTABLE  R35 R35 K51  ; R35 := R35["0xDE44F664"]
650 [-]: SELF      R36 R34 K123 ; R37 := R34; R36 := R34["0x1B252E3C"]
651 [-]: CALL      R36 2 2      ; R36 := R36(R37)
652 [-]: LOADK     R37 K124     ; R37 := "Fighters"
653 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
654 [-]: TEST      R35 0        ; if not R35 then PC := 666
655 [-]: JMP       666          ; PC := 666
656 [-]: EQ        0 R23 K8     ; if R23 ~= nil then PC := 660
657 [-]: JMP       660          ; PC := 660
658 [-]: NEWTABLE  R35 0 0      ; R35 := {}
659 [-]: MOVE      R23 R35      ; R23 := R35
660 [-]: GETGLOBAL R35 K125     ; R35 := table
661 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["0xE6450C9D"]
662 [-]: MOVE      R36 R23      ; R36 := R23
663 [-]: NEWTABLE  R37 0 1      ; R37 := {}
664 [-]: SETTABLE  R37 K121 R34 ; R37["agent"] := R34
665 [-]: CALL      R35 3 1      ; R35(R36,R37)
666 [-]: TFORLOOP  R29 2        ; R32,R33 :=  R29(R30,R31); if R32 ~= nil then begin PC = 642; R31 := R32 end
667 [-]: JMP       642          ; PC := 642
668 [-]: GETGLOBAL R35 K25      ; R35 := 0x400E7765
669 [-]: MOVE      R36 R23      ; R36 := R23
670 [-]: CALL      R35 2 2      ; R35 := R35(R36)
671 [-]: TEST      R35 0        ; if not R35 then PC := 676
672 [-]: JMP       676          ; PC := 676
673 [-]: SELF      R35 R10 K116 ; R36 := R10; R35 := R10["0x70C51B59"]
674 [-]: CALL      R35 2 2      ; R35 := R35(R36)
675 [-]: MOVE      R23 R35      ; R23 := R35
676 [-]: LEN       R35 R23      ; R35 := # R23
677 [-]: LT        0 K23 R35    ; if 0 >= R35 then PC := 698
678 [-]: JMP       698          ; PC := 698
679 [-]: GETGLOBAL R35 K103     ; R35 := math
680 [-]: GETTABLE  R35 R35 K127 ; R35 := R35["0xBCF846DF"]
681 [-]: GETGLOBAL R36 K103     ; R36 := math
682 [-]: GETTABLE  R36 R36 K128 ; R36 := R36["0x865961F7"]
683 [-]: LOADK     R37 K50      ; R37 := 1
684 [-]: LEN       R38 R23      ; R38 := # R23
685 [-]: CALL      R36 3 0      ; R36,... := R36(R37,R38)
686 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
687 [-]: GETUPVAL  R36 U21      ; R36 := U21
688 [-]: SELF      R36 R36 K129 ; R37 := R36; R36 := R36["0xF37AEF8E"]
689 [-]: GETTABLE  R38 R23 R35  ; R38 := R23[R35]
690 [-]: GETTABLE  R38 R38 K121 ; R38 := R38["agent"]
691 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
692 [-]: GETGLOBAL R37 K25      ; R37 := 0x400E7765
693 [-]: GETTABLE  R38 R36 K65  ; R38 := R36["icon"]
694 [-]: CALL      R37 2 2      ; R37 := R37(R38)
695 [-]: TEST      R37 1        ; if R37 then PC := 698
696 [-]: JMP       698          ; PC := 698
697 [-]: GETTABLE  R21 R36 K65  ; R21 := R36["icon"]
698 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
699 [-]: SELF      R37 R37 K130 ; R38 := R37; R37 := R37["0x26581636"]
700 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
701 [-]: MOVE      R40 R21      ; R40 := R21
702 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
703 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
704 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
705 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
706 [-]: LOADK     R40 K132     ; R40 := "_visible"
707 [-]: GETGLOBAL R41 K25      ; R41 := 0x400E7765
708 [-]: MOVE      R42 R21      ; R42 := R21
709 [-]: CALL      R41 2 2      ; R41 := R41(R42)
710 [-]: TEST      R41 1        ; if R41 then PC := 718
711 [-]: JMP       718          ; PC := 718
712 [-]: GETUPVAL  R41 U22      ; R41 := U22
713 [-]: GETTABLE  R41 R41 K133 ; R41 := R41["Playing"]
714 [-]: TEST      R41 1        ; if R41 then PC := 718
715 [-]: JMP       718          ; PC := 718
716 [-]: MOVE      R41 R11      ; R41 := R11
717 [-]: JMP       720          ; PC := 720
718 [-]: MOVE      R41 R0       ; R41 := R0
719 [-]: MOVE      R41 R1       ; R41 := R1
720 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
721 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
722 [-]: SELF      R37 R37 K134 ; R38 := R37; R37 := R37["0x7E1F26D7"]
723 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
724 [-]: GETGLOBAL R40 K135     ; R40 := fgEnemyMaterial
725 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
726 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
727 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
728 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
729 [-]: LOADK     R40 K136     ; R40 := "_xscale"
730 [-]: LOADK     R41 K137     ; R41 := 155
731 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
732 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
733 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
734 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
735 [-]: LOADK     R40 K138     ; R40 := "_yscale"
736 [-]: LOADK     R41 K137     ; R41 := 155
737 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
738 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
739 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
740 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
741 [-]: LOADK     R40 K139     ; R40 := "_y"
742 [-]: LOADK     R41 K140     ; R41 := 95
743 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
744 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
745 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
746 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
747 [-]: LOADK     R40 K141     ; R40 := "_x"
748 [-]: LOADK     R41 K142     ; R41 := 64
749 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
750 [-]: GETGLOBAL R37 K143     ; R37 := locationTextures
751 [-]: GETGLOBAL R38 K103     ; R38 := math
752 [-]: GETTABLE  R38 R38 K127 ; R38 := R38["0xBCF846DF"]
753 [-]: GETGLOBAL R39 K103     ; R39 := math
754 [-]: GETTABLE  R39 R39 K128 ; R39 := R39["0x865961F7"]
755 [-]: LOADK     R40 K50      ; R40 := 1
756 [-]: GETGLOBAL R41 K143     ; R41 := locationTextures
757 [-]: LEN       R41 R41      ; R41 := # R41
758 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
759 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
760 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
761 [-]: GETUPVAL  R38 U18      ; R38 := U18
762 [-]: GETTABLE  R38 R38 K144 ; R38 := R38["InitLocationPicHeight"]
763 [-]: GETUPVAL  R39 U18      ; R39 := U18
764 [-]: GETTABLE  R39 R39 K145 ; R39 := R39["InitLocationPicYPos"]
765 [-]: TEST      R11 0        ; if not R11 then PC := 797
766 [-]: JMP       797          ; PC := 797
767 [-]: GETTABLE  R37 R10 K65  ; R37 := R10["icon"]
768 [-]: GETGLOBAL R40 K146     ; R40 := 0x7C282057
769 [-]: MOVE      R41 R37      ; R41 := R37
770 [-]: CALL      R40 2 2      ; R40 := R40(R41)
771 [-]: SELF      R41 R40 K147 ; R42 := R40; R41 := R40["0x11FF52EA"]
772 [-]: CALL      R41 2 2      ; R41 := R41(R42)
773 [-]: GETTABLE  R42 R41 K148 ; R42 := R41["x"]
774 [-]: LT        0 K23 R42    ; if 0 >= R42 then PC := 840
775 [-]: JMP       840          ; PC := 840
776 [-]: GETTABLE  R42 R41 K149 ; R42 := R41["y"]
777 [-]: GETTABLE  R43 R41 K148 ; R43 := R41["x"]
778 [-]: DIV       R42 R42 R43  ; R42 := R42 / R43
779 [-]: GETGLOBAL R43 K0       ; R43 := 0xF595ADDE
780 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
781 [-]: SELF      R44 R44 K2   ; R45 := R44; R44 := R44["0x6B7B470B"]
782 [-]: LOADK     R46 K150     ; R46 := "InfoTip.LocationPic"
783 [-]: LOADK     R47 K96      ; R47 := "_width"
784 [-]: CALL      R44 4 0      ; R44,... := R44(R45,R46,R47)
785 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
786 [-]: MUL       R38 R43 R42  ; R38 := R43 * R42
787 [-]: GETUPVAL  R43 U18      ; R43 := U18
788 [-]: GETTABLE  R43 R43 K144 ; R43 := R43["InitLocationPicHeight"]
789 [-]: LT        0 R43 R38    ; if R43 >= R38 then PC := 840
790 [-]: JMP       840          ; PC := 840
791 [-]: GETUPVAL  R43 U18      ; R43 := U18
792 [-]: GETTABLE  R43 R43 K144 ; R43 := R43["InitLocationPicHeight"]
793 [-]: SUB       R43 R38 R43  ; R43 := R38 - R43
794 [-]: DIV       R43 R43 K151 ; R43 := R43 / 2
795 [-]: ADD       R39 R39 R43  ; R39 := R39 + R43
796 [-]: JMP       840          ; PC := 840
797 [-]: GETGLOBAL R43 K48      ; R43 := string
798 [-]: GETTABLE  R43 R43 K51  ; R43 := R43["0xDE44F664"]
799 [-]: MOVE      R44 R9       ; R44 := R9
800 [-]: LOADK     R45 K152     ; R45 := "Dojo"
801 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
802 [-]: TEST      R43 0        ; if not R43 then PC := 815
803 [-]: JMP       815          ; PC := 815
804 [-]: GETGLOBAL R43 K153     ; R43 := locationIconMap
805 [-]: SELF      R43 R43 K154 ; R44 := R43; R43 := R43["0x7FFA0478"]
806 [-]: LOADK     R45 K155     ; R45 := "dojo"
807 [-]: GETGLOBAL R46 K103     ; R46 := math
808 [-]: GETTABLE  R46 R46 K128 ; R46 := R46["0x865961F7"]
809 [-]: LOADK     R47 K23      ; R47 := 0
810 [-]: LOADK     R48 K101     ; R48 := 100
811 [-]: CALL      R46 3 0      ; R46,... := R46(R47,R48)
812 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
813 [-]: MOVE      R37 R43      ; R37 := R43
814 [-]: JMP       840          ; PC := 840
815 [-]: GETGLOBAL R43 K25      ; R43 := 0x400E7765
816 [-]: GETTABLE  R44 R10 K156 ; R44 := R10["levelOverride"]
817 [-]: CALL      R43 2 2      ; R43 := R43(R44)
818 [-]: TEST      R43 1        ; if R43 then PC := 840
819 [-]: JMP       840          ; PC := 840
820 [-]: GETGLOBAL R43 K25      ; R43 := 0x400E7765
821 [-]: GETGLOBAL R44 K153     ; R44 := locationIconMap
822 [-]: CALL      R43 2 2      ; R43 := R43(R44)
823 [-]: TEST      R43 1        ; if R43 then PC := 840
824 [-]: JMP       840          ; PC := 840
825 [-]: GETGLOBAL R43 K153     ; R43 := locationIconMap
826 [-]: SELF      R43 R43 K154 ; R44 := R43; R43 := R43["0x7FFA0478"]
827 [-]: GETGLOBAL R45 K48      ; R45 := string
828 [-]: GETTABLE  R45 R45 K157 ; R45 := R45["0xBDD0D625"]
829 [-]: GETTABLE  R46 R10 K156 ; R46 := R10["levelOverride"]
830 [-]: SELF      R46 R46 K123 ; R47 := R46; R46 := R46["0x1B252E3C"]
831 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
832 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
833 [-]: GETGLOBAL R46 K103     ; R46 := math
834 [-]: GETTABLE  R46 R46 K128 ; R46 := R46["0x865961F7"]
835 [-]: LOADK     R47 K23      ; R47 := 0
836 [-]: LOADK     R48 K101     ; R48 := 100
837 [-]: CALL      R46 3 0      ; R46,... := R46(R47,R48)
838 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
839 [-]: MOVE      R37 R43      ; R37 := R43
840 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
841 [-]: SELF      R43 R43 K40  ; R44 := R43; R43 := R43["0x1C19D966"]
842 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
843 [-]: LOADK     R46 K158     ; R46 := "_height"
844 [-]: MOVE      R47 R38      ; R47 := R38
845 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
846 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
847 [-]: SELF      R43 R43 K40  ; R44 := R43; R43 := R43["0x1C19D966"]
848 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
849 [-]: LOADK     R46 K139     ; R46 := "_y"
850 [-]: MOVE      R47 R39      ; R47 := R39
851 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
852 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
853 [-]: SELF      R43 R43 K130 ; R44 := R43; R43 := R43["0x26581636"]
854 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
855 [-]: MOVE      R46 R37      ; R46 := R37
856 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
857 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
858 [-]: SELF      R43 R43 K134 ; R44 := R43; R43 := R43["0x7E1F26D7"]
859 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
860 [-]: GETGLOBAL R46 K159     ; R46 := locationPicMaterial
861 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
862 [-]: LOADK     R43 K160     ; R43 := 16777215
863 [-]: TEST      R15 0        ; if not R15 then PC := 867
864 [-]: JMP       867          ; PC := 867
865 [-]: LOADK     R43 K161     ; R43 := 13382451
866 [-]: JMP       870          ; PC := 870
867 [-]: TEST      R17 0        ; if not R17 then PC := 870
868 [-]: JMP       870          ; PC := 870
869 [-]: LOADK     R43 K162     ; R43 := 16746632
870 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
871 [-]: SELF      R44 R44 K9   ; R45 := R44; R44 := R44["0x880196A7"]
872 [-]: LOADK     R46 K100     ; R46 := "InfoTip"
873 [-]: LOADK     R47 K163     ; R47 := "NemesisOverlay"
874 [-]: LOADK     R48 K132     ; R48 := "_visible"
875 [-]: MOVE      R49 R17      ; R49 := R17
876 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
877 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
878 [-]: SELF      R44 R44 K9   ; R45 := R44; R44 := R44["0x880196A7"]
879 [-]: LOADK     R46 K100     ; R46 := "InfoTip"
880 [-]: LOADK     R47 K164     ; R47 := "LocationPic"
881 [-]: LOADK     R48 K11      ; R48 := "_color"
882 [-]: MOVE      R49 R43      ; R49 := R43
883 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
884 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
885 [-]: SELF      R44 R44 K9   ; R45 := R44; R44 := R44["0x880196A7"]
886 [-]: LOADK     R46 K100     ; R46 := "InfoTip"
887 [-]: LOADK     R47 K165     ; R47 := "RailjackOverlay"
888 [-]: LOADK     R48 K132     ; R48 := "_visible"
889 [-]: MOVE      R49 R18      ; R49 := R18
890 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
891 [-]: GETGLOBAL R44 K166     ; R44 := 0x8C64AFA9
892 [-]: GETGLOBAL R45 K1       ; R45 := mMovie
893 [-]: GETTABLE  R46 R4 K10   ; R46 := R4["clipName"]
894 [-]: LOADK     R47 K167     ; R47 := ".swapDepths"
895 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
896 [-]: LOADK     R47 K168     ; R47 := 501
897 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
898 [-]: GETTABLE  R44 R4 K169  ; R44 := R4["deco"]
899 [-]: EQ        1 R44 K8     ; if R44 == nil then PC := 927
900 [-]: JMP       927          ; PC := 927
901 [-]: GETGLOBAL R44 K25      ; R44 := 0x400E7765
902 [-]: GETTABLE  R45 R4 K169  ; R45 := R4["deco"]
903 [-]: GETTABLE  R45 R45 K170 ; R45 := R45["mInstance"]
904 [-]: CALL      R44 2 2      ; R44 := R44(R45)
905 [-]: TEST      R44 1        ; if R44 then PC := 927
906 [-]: JMP       927          ; PC := 927
907 [-]: GETGLOBAL R44 K19      ; R44 := 0x52E17A90
908 [-]: GETGLOBAL R45 K1       ; R45 := mMovie
909 [-]: GETTABLE  R46 R4 K10   ; R46 := R4["clipName"]
910 [-]: GETGLOBAL R47 K21      ; R47 := UISys
911 [-]: GETTABLE  R47 R47 K171 ; R47 := R47["FlashInstance_EASE_OUT"]
912 [-]: NEWTABLE  R48 1 0      ; R48 := {}
913 [-]: CLOSURE   R49 0        ; R49 := closure(Function #143.1)
914 [-]: MOVE      R0 R4        ; R0 := R4
915 [-]: GETUPVAL  R0 U23       ; R0 := U23
916 [-]: SETLIST   R48 1 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 1
917 [-]: NEWTABLE  R49 1 0      ; R49 := {}
918 [-]: LOADK     R50 K50      ; R50 := 1
919 [-]: SETLIST   R49 1 1      ; R49[(1-1)*FPF+i] := R(49+i), 1 <= i <= 1
920 [-]: GETUPVAL  R50 U9       ; R50 := U9
921 [-]: GETTABLE  R50 R50 K172 ; R50 := R50["0xF81722A2"]
922 [-]: MOVE      R51 R5       ; R51 := R5
923 [-]: LOADK     R52 K173     ; R52 := 0.0010000000474975
924 [-]: LOADK     R53 K102     ; R53 := 0.20000000298023
925 [-]: CALL      R50 4 0      ; R50,... := R50(R51,R52,R53)
926 [-]: CALL      R44 0 1      ; R44(R45,...)
927 [-]: RETURN    R0 1         ; return 


; Function #143.1:
;
; Name:            
; Defined at line: 6971
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: ADD       R4 K7 R4     ; R4 := 1 + R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 6982
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        1 R1 R2      ; if R1 <= R2 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 15 [-]: MOVE      R2 R3        ; R2 := R3
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: SETTABLE  R2 K2 K3     ; R2["Node"] := nil
 18 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R2 U4        ; R2 := U4
 21 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 22 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: GETUPVAL  R2 U4        ; R2 := U4
 25 [-]: GETTABLE  R1 R2 R0     ; R1 := R2[R0]
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 27 [-]: GETUPVAL  R3 U5        ; R3 := U5
 28 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Projector"]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETGLOBAL R2 K5        ; R2 := gBackgroundRegion
 33 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9B0A3887"]
 34 [-]: GETUPVAL  R4 U5        ; R4 := U5
 35 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Projector"]
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 38 [-]: MOVE      R3 R1        ; R3 := R1
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: TEST      R2 1         ; if R2 then PC := 131
 41 [-]: JMP       131          ; PC := 131
 42 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 43 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x1C19D966"]
 44 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["clipName"]
 45 [-]: LOADK     R5 K9        ; R5 := "_color"
 46 [-]: GETGLOBAL R6 K10       ; R6 := _G
 47 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["UIColor_White"]
 48 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 49 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 50 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x445651FB"]
 51 [-]: GETTABLE  R4 R1 K13    ; R4 := R1["labelIndex"]
 52 [-]: LOADK     R5 K14       ; R5 := "_alpha"
 53 [-]: GETUPVAL  R6 U6        ; R6 := U6
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 56 [-]: CALL      R2 0 1       ; R2(R3,...)
 57 [-]: GETTABLE  R2 R1 K15    ; R2 := R1["guildId"]
 58 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETTABLE  R2 R1 K16    ; R2 := R1["clanTier"]
 61 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R2 R0        ; R2 := R0
 64 [-]: MOVE      R2 R1        ; R2 := R1
 65 [-]: TEST      R2 0         ; if not R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
 68 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 69 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["clipName"]
 70 [-]: LOADK     R6 K18       ; R6 := ".Node.Container.Node"
 71 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 72 [-]: GETGLOBAL R6 K19       ; R6 := UISys
 73 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["FlashInstance_LINEAR"]
 74 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 75 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 76 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 77 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 78 [-]: LOADK     R9 K21       ; R9 := 0
 79 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 80 [-]: LOADK     R9 K22       ; R9 := 0.25
 81 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 82 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
 83 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 84 [-]: LOADK     R5 K23       ; R5 := "InfoTip"
 85 [-]: GETGLOBAL R6 K19       ; R6 := UISys
 86 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["FlashInstance_LINEAR"]
 87 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 88 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 89 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 90 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 91 [-]: LOADK     R9 K21       ; R9 := 0
 92 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 93 [-]: LOADK     R9 K24       ; R9 := 0.050000000745058
 94 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 95 [-]: GETTABLE  R3 R1 K25    ; R3 := R1["deco"]
 96 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 119
 97 [-]: JMP       119          ; PC := 119
 98 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 99 [-]: GETTABLE  R4 R1 K25    ; R4 := R1["deco"]
100 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["mInstance"]
101 [-]: CALL      R3 2 2       ; R3 := R3(R4)
102 [-]: TEST      R3 1         ; if R3 then PC := 119
103 [-]: JMP       119          ; PC := 119
104 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
105 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
106 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["clipName"]
107 [-]: GETGLOBAL R6 K19       ; R6 := UISys
108 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["FlashInstance_EASE_OUT"]
109 [-]: NEWTABLE  R7 1 0       ; R7 := {}
110 [-]: CLOSURE   R8 0         ; R8 := closure(Function #144.1)
111 [-]: MOVE      R0 R1        ; R0 := R1
112 [-]: GETUPVAL  R0 U7        ; R0 := U7
113 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
114 [-]: NEWTABLE  R8 1 0       ; R8 := {}
115 [-]: LOADK     R9 K28       ; R9 := 1
116 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
117 [-]: LOADK     R9 K29       ; R9 := 0.20000000298023
118 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
119 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
120 [-]: GETUPVAL  R4 U8        ; R4 := U8
121 [-]: CALL      R3 2 2       ; R3 := R3(R4)
122 [-]: TEST      R3 1         ; if R3 then PC := 131
123 [-]: JMP       131          ; PC := 131
124 [-]: GETGLOBAL R3 K30       ; R3 := _T
125 [-]: SETTABLE  R3 K31 K3    ; R3["JunctionTasksUIRadialSector"] := nil
126 [-]: GETUPVAL  R3 U8        ; R3 := U8
127 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3["0xA58BB96C"]
128 [-]: CALL      R3 2 1       ; R3(R4)
129 [-]: LOADNIL   R3 R3        ; R3 := nil
130 [-]: MOVE      R3 R8        ; R3 := R8
131 [-]: RETURN    R0 1         ; return 


; Function #144.1:
;
; Name:            
; Defined at line: 7012
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: SUB       R4 K7 R4     ; R4 := 1.5 - R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 7027
; #Upvalues:       28
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xF595ADDE
 10 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6B7B470B"]
 12 [-]: LOADK     R3 K4        ; R3 := "_root"
 13 [-]: LOADK     R4 K5        ; R4 := "_xmouse"
 14 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 15 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 17 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 18 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
 19 [-]: LOADK     R4 K4        ; R4 := "_root"
 20 [-]: LOADK     R5 K6        ; R5 := "_ymouse"
 21 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 22 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 23 [-]: LE        0 R0 K7      ; if R0 > -1000 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: LE        0 R1 K7      ; if R1 > -1000 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["MouseInWorldStateWindow"]
 30 [-]: TEST      R2 1         ; if R2 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R2 K8        ; R2 := _T
 33 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MouseInChatArea"]
 34 [-]: TEST      R2 0         ; if not R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R2 K8        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 39 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: GETGLOBAL R2 K8        ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 43 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x458F27A9"]
 44 [-]: LOADK     R4 K14       ; R4 := "HasFocus"
 45 [-]: LOADK     R5 K15       ; R5 := ""
 46 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 47 [-]: TEST      R2 0         ; if not R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETGLOBAL R2 K8        ; R2 := _T
 51 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["TopMenuOpen"]
 52 [-]: TEST      R2 0         ; if not R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R2 K17       ; R2 := gGameConfig
 56 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x89E53943"]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 71
 59 [-]: JMP       71           ; PC := 71
 60 [-]: GETUPVAL  R2 U2        ; R2 := U2
 61 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Active"]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 155
 63 [-]: JMP       155          ; PC := 155
 64 [-]: GETGLOBAL R2 K20       ; R2 := gPromotedToHost
 65 [-]: TEST      R2 0         ; if not R2 then PC := 155
 66 [-]: JMP       155          ; PC := 155
 67 [-]: GETUPVAL  R2 U3        ; R2 := U3
 68 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 69 [-]: TEST      R2 0         ; if not R2 then PC := 155
 70 [-]: JMP       155          ; PC := 155
 71 [-]: GETUPVAL  R2 U2        ; R2 := U2
 72 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Active"]
 73 [-]: TEST      R2 0         ; if not R2 then PC := 106
 74 [-]: JMP       106          ; PC := 106
 75 [-]: GETUPVAL  R2 U3        ; R2 := U3
 76 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["Region"]
 77 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 87
 78 [-]: JMP       87           ; PC := 87
 79 [-]: GETUPVAL  R2 U3        ; R2 := U3
 80 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["Region"]
 81 [-]: GETUPVAL  R3 U4        ; R3 := U4
 82 [-]: GETGLOBAL R4 K8        ; R4 := _T
 83 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["REGION_ID_DOJO"]
 84 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 85 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 105
 86 [-]: JMP       105          ; PC := 105
 87 [-]: GETUPVAL  R2 U3        ; R2 := U3
 88 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 89 [-]: TEST      R2 0         ; if not R2 then PC := 106
 90 [-]: JMP       106          ; PC := 106
 91 [-]: GETUPVAL  R2 U3        ; R2 := U3
 92 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 93 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["radialSector"]
 94 [-]: TEST      R2 0         ; if not R2 then PC := 106
 95 [-]: JMP       106          ; PC := 106
 96 [-]: GETUPVAL  R2 U3        ; R2 := U3
 97 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 98 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["radialSector"]
 99 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["region"]
100 [-]: GETGLOBAL R3 K8        ; R3 := _T
101 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["REGION_ID_DOJO"]
102 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R2 R0        ; R2 := R0
105 [-]: MOVE      R2 R1        ; R2 := R1
106 [-]: TEST      R2 1         ; if R2 then PC := 130
107 [-]: JMP       130          ; PC := 130
108 [-]: GETUPVAL  R3 U2        ; R3 := U2
109 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["Active"]
110 [-]: TEST      R3 0         ; if not R3 then PC := 130
111 [-]: JMP       130          ; PC := 130
112 [-]: GETUPVAL  R3 U3        ; R3 := U3
113 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Node"]
114 [-]: TEST      R3 0         ; if not R3 then PC := 129
115 [-]: JMP       129          ; PC := 129
116 [-]: GETUPVAL  R3 U3        ; R3 := U3
117 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Node"]
118 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["radialSector"]
119 [-]: TEST      R3 0         ; if not R3 then PC := 130
120 [-]: JMP       130          ; PC := 130
121 [-]: GETUPVAL  R3 U3        ; R3 := U3
122 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Node"]
123 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["radialSector"]
124 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["missionTag"]
125 [-]: GETUPVAL  R4 U5        ; R4 := U5
126 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["SQUAD_LINK_EVENT"]
127 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: MOVE      R2 R1        ; R2 := R1
130 [-]: TEST      R2 1         ; if R2 then PC := 155
131 [-]: JMP       155          ; PC := 155
132 [-]: LOADNIL   R3 R3        ; R3 := nil
133 [-]: GETUPVAL  R4 U2        ; R4 := U2
134 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Active"]
135 [-]: TEST      R4 0         ; if not R4 then PC := 145
136 [-]: JMP       145          ; PC := 145
137 [-]: GETUPVAL  R4 U6        ; R4 := U6
138 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["0xF81722A2"]
139 [-]: GETGLOBAL R5 K20       ; R5 := gPromotedToHost
140 [-]: LOADK     R6 K29       ; R6 := "/Lotus/Language/Menu/HostMigrationMissionsBlocked"
141 [-]: LOADK     R7 K30       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlockedRailjack"
142 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
143 [-]: MOVE      R3 R4        ; R3 := R4
144 [-]: JMP       146          ; PC := 146
145 [-]: LOADK     R3 K31       ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
146 [-]: GETUPVAL  R4 U6        ; R4 := U6
147 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["0xB11F032"]
148 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
149 [-]: SELF      R5 R5 K33    ; R6 := R5; R5 := R5["0x5DB0BD4"]
150 [-]: MOVE      R7 R3        ; R7 := R3
151 [-]: MOVE      R8 R0        ; R8 := R0
152 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
153 [-]: CALL      R4 0 1       ; R4(R5,...)
154 [-]: RETURN    R0 1         ; return 
155 [-]: GETGLOBAL R4 K34       ; R4 := Engine
156 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["0x9490FE70"]
157 [-]: CALL      R4 1 2       ; R4 := R4()
158 [-]: TEST      R4 0         ; if not R4 then PC := 175
159 [-]: JMP       175          ; PC := 175
160 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
161 [-]: GETGLOBAL R5 K8        ; R5 := _T
162 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["SquadOverlay"]
163 [-]: CALL      R4 2 2       ; R4 := R4(R5)
164 [-]: TEST      R4 1         ; if R4 then PC := 175
165 [-]: JMP       175          ; PC := 175
166 [-]: GETGLOBAL R4 K8        ; R4 := _T
167 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["SquadOverlay"]
168 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x458F27A9"]
169 [-]: LOADK     R6 K38       ; R6 := "MatchmakingFocused"
170 [-]: LOADK     R7 K15       ; R7 := ""
171 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
172 [-]: TEST      R4 0         ; if not R4 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: RETURN    R0 1         ; return 
175 [-]: GETUPVAL  R4 U7        ; R4 := U7
176 [-]: GETUPVAL  R5 U8        ; R5 := U8
177 [-]: GETTABLE  R5 R5 K39    ; R5 := R5["EDIT_REGIONS"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 249
179 [-]: JMP       249          ; PC := 249
180 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
181 [-]: GETUPVAL  R5 U3        ; R5 := U3
182 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Region"]
183 [-]: CALL      R4 2 2       ; R4 := R4(R5)
184 [-]: TEST      R4 1         ; if R4 then PC := 249
185 [-]: JMP       249          ; PC := 249
186 [-]: GETUPVAL  R4 U9        ; R4 := U9
187 [-]: GETUPVAL  R5 U3        ; R5 := U3
188 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Region"]
189 [-]: SETTABLE  R4 K40 R5    ; R4["mMovingRegion"] := R5
190 [-]: GETUPVAL  R4 U9        ; R4 := U9
191 [-]: GETUPVAL  R5 U3        ; R5 := U3
192 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Region"]
193 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["instance"]
194 [-]: SELF      R5 R5 K43    ; R6 := R5; R5 := R5["0x6DA72501"]
195 [-]: CALL      R5 2 2       ; R5 := R5(R6)
196 [-]: SETTABLE  R4 K41 R5    ; R4["mInitialPosition"] := R5
197 [-]: GETUPVAL  R4 U9        ; R4 := U9
198 [-]: GETUPVAL  R5 U10       ; R5 := U10
199 [-]: CALL      R5 1 2       ; R5 := R5()
200 [-]: SETTABLE  R4 K44 R5    ; R4["mInitialWorldCursor"] := R5
201 [-]: LOADNIL   R4 R4        ; R4 := nil
202 [-]: GETGLOBAL R5 K45       ; R5 := 0x63B09107
203 [-]: GETUPVAL  R6 U4        ; R6 := U4
204 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
205 [-]: JMP       212          ; PC := 212
206 [-]: GETUPVAL  R10 U3       ; R10 := U3
207 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["Region"]
208 [-]: EQ        0 R10 R9     ; if R10 ~= R9 then PC := 212
209 [-]: JMP       212          ; PC := 212
210 [-]: SUB       R4 R8 K46    ; R4 := R8 - 1
211 [-]: JMP       214          ; PC := 214
212 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 206; R7 := R8 end
213 [-]: JMP       206          ; PC := 206
214 [-]: GETGLOBAL R10 K36      ; R10 := 0x400E7765
215 [-]: MOVE      R11 R4       ; R11 := R4
216 [-]: CALL      R10 2 2      ; R10 := R10(R11)
217 [-]: TEST      R10 1        ; if R10 then PC := 679
218 [-]: JMP       679          ; PC := 679
219 [-]: GETUPVAL  R10 U9       ; R10 := U9
220 [-]: NEWTABLE  R11 0 0      ; R11 := {}
221 [-]: SETTABLE  R10 K47 R11  ; R10["mChildNodes"] := R11
222 [-]: GETGLOBAL R10 K45      ; R10 := 0x63B09107
223 [-]: GETUPVAL  R11 U11      ; R11 := U11
224 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
225 [-]: JMP       246          ; PC := 246
226 [-]: GETTABLE  R15 R14 K24  ; R15 := R14["radialSector"]
227 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["region"]
228 [-]: EQ        0 R15 R4     ; if R15 ~= R4 then PC := 246
229 [-]: JMP       246          ; PC := 246
230 [-]: GETGLOBAL R15 K48      ; R15 := table
231 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["0xE6450C9D"]
232 [-]: GETUPVAL  R16 U9       ; R16 := U9
233 [-]: GETTABLE  R16 R16 K47  ; R16 := R16["mChildNodes"]
234 [-]: NEWTABLE  R17 0 2      ; R17 := {}
235 [-]: SETTABLE  R17 K50 R13  ; R17["NodeIndex"] := R13
236 [-]: GETGLOBAL R18 K52      ; R18 := 0x221C9700
237 [-]: GETTABLE  R19 R14 K53  ; R19 := R14["position"]
238 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["x"]
239 [-]: GETTABLE  R20 R14 K53  ; R20 := R14["position"]
240 [-]: GETTABLE  R20 R20 K55  ; R20 := R20["y"]
241 [-]: GETTABLE  R21 R14 K53  ; R21 := R14["position"]
242 [-]: GETTABLE  R21 R21 K56  ; R21 := R21["z"]
243 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
244 [-]: SETTABLE  R17 K51 R18  ; R17["InitialPosition"] := R18
245 [-]: CALL      R15 3 1      ; R15(R16,R17)
246 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 226; R12 := R13 end
247 [-]: JMP       226          ; PC := 226
248 [-]: JMP       679          ; PC := 679
249 [-]: GETUPVAL  R15 U7       ; R15 := U7
250 [-]: GETUPVAL  R16 U8       ; R16 := U8
251 [-]: GETTABLE  R16 R16 K57  ; R16 := R16["EDIT_NODES"]
252 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 291
253 [-]: JMP       291          ; PC := 291
254 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
255 [-]: GETUPVAL  R16 U3       ; R16 := U3
256 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
257 [-]: CALL      R15 2 2      ; R15 := R15(R16)
258 [-]: TEST      R15 1        ; if R15 then PC := 291
259 [-]: JMP       291          ; PC := 291
260 [-]: GETUPVAL  R15 U9       ; R15 := U9
261 [-]: GETUPVAL  R16 U3       ; R16 := U3
262 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
263 [-]: SETTABLE  R15 K58 R16  ; R15["mMovingNode"] := R16
264 [-]: GETUPVAL  R15 U9       ; R15 := U9
265 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
266 [-]: GETUPVAL  R17 U3       ; R17 := U3
267 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
268 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["position"]
269 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
270 [-]: GETUPVAL  R18 U3       ; R18 := U3
271 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
272 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["position"]
273 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
274 [-]: GETUPVAL  R19 U3       ; R19 := U3
275 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
276 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["position"]
277 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
278 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
279 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
280 [-]: GETUPVAL  R15 U9       ; R15 := U9
281 [-]: GETUPVAL  R16 U10      ; R16 := U10
282 [-]: CALL      R16 1 2      ; R16 := R16()
283 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
284 [-]: GETUPVAL  R15 U9       ; R15 := U9
285 [-]: GETUPVAL  R16 U6       ; R16 := U6
286 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
287 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
288 [-]: CALL      R16 2 2      ; R16 := R16(R17)
289 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
290 [-]: JMP       679          ; PC := 679
291 [-]: GETUPVAL  R15 U7       ; R15 := U7
292 [-]: GETUPVAL  R16 U8       ; R16 := U8
293 [-]: GETTABLE  R16 R16 K61  ; R16 := R16["EDIT_EDGES"]
294 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 372
295 [-]: JMP       372          ; PC := 372
296 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
297 [-]: GETUPVAL  R16 U3       ; R16 := U3
298 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
299 [-]: CALL      R15 2 2      ; R15 := R15(R16)
300 [-]: TEST      R15 0        ; if not R15 then PC := 307
301 [-]: JMP       307          ; PC := 307
302 [-]: GETUPVAL  R15 U9       ; R15 := U9
303 [-]: SETTABLE  R15 K62 K12  ; R15["mEdgeNode1"] := nil
304 [-]: GETUPVAL  R15 U9       ; R15 := U9
305 [-]: SETTABLE  R15 K63 K12  ; R15["mEdgeNode2"] := nil
306 [-]: JMP       364          ; PC := 364
307 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
308 [-]: GETUPVAL  R16 U9       ; R16 := U9
309 [-]: GETTABLE  R16 R16 K62  ; R16 := R16["mEdgeNode1"]
310 [-]: CALL      R15 2 2      ; R15 := R15(R16)
311 [-]: TEST      R15 1        ; if R15 then PC := 321
312 [-]: JMP       321          ; PC := 321
313 [-]: GETUPVAL  R15 U12      ; R15 := U12
314 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["mControlDown"]
315 [-]: TEST      R15 1        ; if R15 then PC := 326
316 [-]: JMP       326          ; PC := 326
317 [-]: GETUPVAL  R15 U12      ; R15 := U12
318 [-]: GETTABLE  R15 R15 K65  ; R15 := R15["mShiftDown"]
319 [-]: TEST      R15 1        ; if R15 then PC := 326
320 [-]: JMP       326          ; PC := 326
321 [-]: GETUPVAL  R15 U9       ; R15 := U9
322 [-]: GETUPVAL  R16 U3       ; R16 := U3
323 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
324 [-]: SETTABLE  R15 K62 R16  ; R15["mEdgeNode1"] := R16
325 [-]: JMP       338          ; PC := 338
326 [-]: GETUPVAL  R15 U3       ; R15 := U3
327 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["Node"]
328 [-]: GETTABLE  R15 R15 K66  ; R15 := R15["name"]
329 [-]: GETUPVAL  R16 U9       ; R16 := U9
330 [-]: GETTABLE  R16 R16 K62  ; R16 := R16["mEdgeNode1"]
331 [-]: GETTABLE  R16 R16 K66  ; R16 := R16["name"]
332 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 338
333 [-]: JMP       338          ; PC := 338
334 [-]: GETUPVAL  R15 U9       ; R15 := U9
335 [-]: GETUPVAL  R16 U3       ; R16 := U3
336 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
337 [-]: SETTABLE  R15 K63 R16  ; R15["mEdgeNode2"] := R16
338 [-]: GETUPVAL  R15 U9       ; R15 := U9
339 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
340 [-]: GETUPVAL  R17 U3       ; R17 := U3
341 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
342 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["position"]
343 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
344 [-]: GETUPVAL  R18 U3       ; R18 := U3
345 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
346 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["position"]
347 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
348 [-]: GETUPVAL  R19 U3       ; R19 := U3
349 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
350 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["position"]
351 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
352 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
353 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
354 [-]: GETUPVAL  R15 U9       ; R15 := U9
355 [-]: GETUPVAL  R16 U10      ; R16 := U10
356 [-]: CALL      R16 1 2      ; R16 := R16()
357 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
358 [-]: GETUPVAL  R15 U9       ; R15 := U9
359 [-]: GETUPVAL  R16 U6       ; R16 := U6
360 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
361 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
362 [-]: CALL      R16 2 2      ; R16 := R16(R17)
363 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
364 [-]: GETGLOBAL R15 K2       ; R15 := mMovie
365 [-]: SELF      R15 R15 K67  ; R16 := R15; R15 := R15["0x1C19D966"]
366 [-]: LOADK     R17 K68      ; R17 := "ScreenModeLabel"
367 [-]: LOADK     R18 K69      ; R18 := "text"
368 [-]: GETUPVAL  R19 U13      ; R19 := U13
369 [-]: CALL      R19 1 0      ; R19,... := R19()
370 [-]: CALL      R15 0 1      ; R15(R16,...)
371 [-]: JMP       679          ; PC := 679
372 [-]: GETUPVAL  R15 U7       ; R15 := U7
373 [-]: GETUPVAL  R16 U8       ; R16 := U8
374 [-]: GETTABLE  R16 R16 K70  ; R16 := R16["EDIT_NODE_DECOS"]
375 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 488
376 [-]: JMP       488          ; PC := 488
377 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
378 [-]: GETUPVAL  R16 U3       ; R16 := U3
379 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
380 [-]: CALL      R15 2 2      ; R15 := R15(R16)
381 [-]: TEST      R15 1        ; if R15 then PC := 488
382 [-]: JMP       488          ; PC := 488
383 [-]: GETUPVAL  R15 U3       ; R15 := U3
384 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["Node"]
385 [-]: GETTABLE  R15 R15 K71  ; R15 := R15["deco"]
386 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 396
387 [-]: JMP       396          ; PC := 396
388 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
389 [-]: GETUPVAL  R16 U3       ; R16 := U3
390 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
391 [-]: GETTABLE  R16 R16 K71  ; R16 := R16["deco"]
392 [-]: GETTABLE  R16 R16 K72  ; R16 := R16["mInstance"]
393 [-]: CALL      R15 2 2      ; R15 := R15(R16)
394 [-]: TEST      R15 0        ; if not R15 then PC := 397
395 [-]: JMP       397          ; PC := 397
396 [-]: RETURN    R0 1         ; return 
397 [-]: GETUPVAL  R15 U9       ; R15 := U9
398 [-]: GETUPVAL  R16 U3       ; R16 := U3
399 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
400 [-]: SETTABLE  R15 K58 R16  ; R15["mMovingNode"] := R16
401 [-]: GETUPVAL  R15 U9       ; R15 := U9
402 [-]: SETTABLE  R15 K73 K74  ; R15["mEditingOffset"] := "0x0"
403 [-]: GETUPVAL  R15 U9       ; R15 := U9
404 [-]: SETTABLE  R15 K75 K74  ; R15["mEditingRotation"] := "0x0"
405 [-]: GETUPVAL  R15 U9       ; R15 := U9
406 [-]: SETTABLE  R15 K76 K74  ; R15["mEditingScale"] := "0x0"
407 [-]: GETUPVAL  R15 U12      ; R15 := U12
408 [-]: GETTABLE  R15 R15 K77  ; R15 := R15["mAltDown"]
409 [-]: TEST      R15 0        ; if not R15 then PC := 426
410 [-]: JMP       426          ; PC := 426
411 [-]: GETUPVAL  R15 U9       ; R15 := U9
412 [-]: GETUPVAL  R16 U3       ; R16 := U3
413 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
414 [-]: GETTABLE  R16 R16 K71  ; R16 := R16["deco"]
415 [-]: GETTABLE  R16 R16 K79  ; R16 := R16["mScale"]
416 [-]: SETTABLE  R15 K78 R16  ; R15["mInitialScale"] := R16
417 [-]: GETUPVAL  R15 U9       ; R15 := U9
418 [-]: GETUPVAL  R16 U6       ; R16 := U6
419 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
420 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
421 [-]: CALL      R16 2 2      ; R16 := R16(R17)
422 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
423 [-]: GETUPVAL  R15 U9       ; R15 := U9
424 [-]: SETTABLE  R15 K76 K80  ; R15["mEditingScale"] := "0x1"
425 [-]: JMP       483          ; PC := 483
426 [-]: GETUPVAL  R15 U12      ; R15 := U12
427 [-]: GETTABLE  R15 R15 K65  ; R15 := R15["mShiftDown"]
428 [-]: TEST      R15 1        ; if R15 then PC := 434
429 [-]: JMP       434          ; PC := 434
430 [-]: GETUPVAL  R15 U12      ; R15 := U12
431 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["mControlDown"]
432 [-]: TEST      R15 0        ; if not R15 then PC := 462
433 [-]: JMP       462          ; PC := 462
434 [-]: GETUPVAL  R15 U9       ; R15 := U9
435 [-]: GETGLOBAL R16 K82      ; R16 := 0x1E4F6281
436 [-]: GETUPVAL  R17 U3       ; R17 := U3
437 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
438 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["deco"]
439 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["mRotation"]
440 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["heading"]
441 [-]: GETUPVAL  R18 U3       ; R18 := U3
442 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
443 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["deco"]
444 [-]: GETTABLE  R18 R18 K83  ; R18 := R18["mRotation"]
445 [-]: GETTABLE  R18 R18 K85  ; R18 := R18["pitch"]
446 [-]: GETUPVAL  R19 U3       ; R19 := U3
447 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
448 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["deco"]
449 [-]: GETTABLE  R19 R19 K83  ; R19 := R19["mRotation"]
450 [-]: GETTABLE  R19 R19 K86  ; R19 := R19["bank"]
451 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
452 [-]: SETTABLE  R15 K81 R16  ; R15["mInitialRotation"] := R16
453 [-]: GETUPVAL  R15 U9       ; R15 := U9
454 [-]: GETUPVAL  R16 U6       ; R16 := U6
455 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
456 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
457 [-]: CALL      R16 2 2      ; R16 := R16(R17)
458 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
459 [-]: GETUPVAL  R15 U9       ; R15 := U9
460 [-]: SETTABLE  R15 K75 K80  ; R15["mEditingRotation"] := "0x1"
461 [-]: JMP       483          ; PC := 483
462 [-]: GETUPVAL  R15 U9       ; R15 := U9
463 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
464 [-]: GETUPVAL  R17 U3       ; R17 := U3
465 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
466 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["deco"]
467 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mOffset"]
468 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
469 [-]: GETUPVAL  R18 U3       ; R18 := U3
470 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
471 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["deco"]
472 [-]: GETTABLE  R18 R18 K87  ; R18 := R18["mOffset"]
473 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
474 [-]: GETUPVAL  R19 U3       ; R19 := U3
475 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
476 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["deco"]
477 [-]: GETTABLE  R19 R19 K87  ; R19 := R19["mOffset"]
478 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
479 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
480 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
481 [-]: GETUPVAL  R15 U9       ; R15 := U9
482 [-]: SETTABLE  R15 K73 K80  ; R15["mEditingOffset"] := "0x1"
483 [-]: GETUPVAL  R15 U9       ; R15 := U9
484 [-]: GETUPVAL  R16 U10      ; R16 := U10
485 [-]: CALL      R16 1 2      ; R16 := R16()
486 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
487 [-]: JMP       679          ; PC := 679
488 [-]: GETUPVAL  R15 U7       ; R15 := U7
489 [-]: GETUPVAL  R16 U8       ; R16 := U8
490 [-]: GETTABLE  R16 R16 K88  ; R16 := R16["EDIT_REGION_FRAMING"]
491 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 497
492 [-]: JMP       497          ; PC := 497
493 [-]: GETUPVAL  R15 U14      ; R15 := U14
494 [-]: SELF      R15 R15 K89  ; R16 := R15; R15 := R15["0x3AEEE6C2"]
495 [-]: CALL      R15 2 1      ; R15(R16)
496 [-]: JMP       679          ; PC := 679
497 [-]: GETUPVAL  R15 U7       ; R15 := U7
498 [-]: GETUPVAL  R16 U8       ; R16 := U8
499 [-]: GETTABLE  R16 R16 K90  ; R16 := R16["EDIT_SHORTCUT_CONTROL_POINTS"]
500 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 531
501 [-]: JMP       531          ; PC := 531
502 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
503 [-]: GETUPVAL  R16 U9       ; R16 := U9
504 [-]: GETTABLE  R16 R16 K91  ; R16 := R16["mMovingControlPoint"]
505 [-]: CALL      R15 2 2      ; R15 := R15(R16)
506 [-]: TEST      R15 1        ; if R15 then PC := 531
507 [-]: JMP       531          ; PC := 531
508 [-]: GETUPVAL  R15 U9       ; R15 := U9
509 [-]: SETTABLE  R15 K92 K80  ; R15["mControlPointHeld"] := "0x1"
510 [-]: GETUPVAL  R15 U9       ; R15 := U9
511 [-]: GETUPVAL  R16 U10      ; R16 := U10
512 [-]: CALL      R16 1 2      ; R16 := R16()
513 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
514 [-]: GETUPVAL  R15 U9       ; R15 := U9
515 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
516 [-]: GETUPVAL  R17 U9       ; R17 := U9
517 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mMovingControlPoint"]
518 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["position"]
519 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
520 [-]: GETUPVAL  R18 U9       ; R18 := U9
521 [-]: GETTABLE  R18 R18 K91  ; R18 := R18["mMovingControlPoint"]
522 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["position"]
523 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
524 [-]: GETUPVAL  R19 U9       ; R19 := U9
525 [-]: GETTABLE  R19 R19 K91  ; R19 := R19["mMovingControlPoint"]
526 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["position"]
527 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
528 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
529 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
530 [-]: JMP       679          ; PC := 679
531 [-]: GETUPVAL  R15 U15      ; R15 := U15
532 [-]: TEST      R15 0        ; if not R15 then PC := 643
533 [-]: JMP       643          ; PC := 643
534 [-]: GETUPVAL  R15 U16      ; R15 := U16
535 [-]: GETUPVAL  R16 U15      ; R16 := U15
536 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
537 [-]: TEST      R15 0        ; if not R15 then PC := 679
538 [-]: JMP       679          ; PC := 679
539 [-]: GETUPVAL  R15 U12      ; R15 := U12
540 [-]: GETTABLE  R15 R15 K65  ; R15 := R15["mShiftDown"]
541 [-]: TEST      R15 0        ; if not R15 then PC := 610
542 [-]: JMP       610          ; PC := 610
543 [-]: GETUPVAL  R15 U16      ; R15 := U16
544 [-]: GETUPVAL  R16 U17      ; R16 := U17
545 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
546 [-]: TEST      R15 0        ; if not R15 then PC := 679
547 [-]: JMP       679          ; PC := 679
548 [-]: GETUPVAL  R15 U10      ; R15 := U10
549 [-]: CALL      R15 1 2      ; R15 := R15()
550 [-]: GETUPVAL  R16 U16      ; R16 := U16
551 [-]: GETUPVAL  R17 U15      ; R17 := U15
552 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
553 [-]: SELF      R16 R16 K93  ; R17 := R16; R16 := R16["0x27D983EC"]
554 [-]: MOVE      R18 R15      ; R18 := R15
555 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
556 [-]: GETUPVAL  R17 U16      ; R17 := U16
557 [-]: GETUPVAL  R18 U15      ; R18 := U15
558 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
559 [-]: SELF      R17 R17 K94  ; R18 := R17; R17 := R17["0x178C31B9"]
560 [-]: CALL      R17 2 2      ; R17 := R17(R18)
561 [-]: GETUPVAL  R18 U18      ; R18 := U18
562 [-]: MOVE      R19 R17      ; R19 := R17
563 [-]: MOVE      R20 R16      ; R20 := R16
564 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
565 [-]: GETUPVAL  R19 U19      ; R19 := U19
566 [-]: EQ        0 R19 K12    ; if R19 ~= nil then PC := 570
567 [-]: JMP       570          ; PC := 570
568 [-]: MOVE      R18 R19      ; R18 := R19
569 [-]: JMP       679          ; PC := 679
570 [-]: GETUPVAL  R19 U19      ; R19 := U19
571 [-]: MOVE      R20 R18      ; R20 := R18
572 [-]: GETUPVAL  R21 U16      ; R21 := U16
573 [-]: GETUPVAL  R22 U17      ; R22 := U17
574 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
575 [-]: SELF      R21 R21 K94  ; R22 := R21; R21 := R21["0x178C31B9"]
576 [-]: CALL      R21 2 2      ; R21 := R21(R22)
577 [-]: LOADK     R22 K46      ; R22 := 1
578 [-]: LEN       R23 R21      ; R23 := # R21
579 [-]: LOADK     R24 K46      ; R24 := 1
580 [-]: FORPREP   R22 595      ; R22 -= R24; PC := 595
581 [-]: GETUPVAL  R26 U16      ; R26 := U16
582 [-]: GETUPVAL  R27 U17      ; R27 := U17
583 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
584 [-]: SELF      R26 R26 K95  ; R27 := R26; R26 := R26["0x96C67B0"]
585 [-]: GETTABLE  R28 R21 R25  ; R28 := R21[R25]
586 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
587 [-]: SETTABLE  R21 R25 R26  ; R21[R25] := R26
588 [-]: GETUPVAL  R26 U16      ; R26 := U16
589 [-]: GETUPVAL  R27 U15      ; R27 := U15
590 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
591 [-]: SELF      R26 R26 K93  ; R27 := R26; R26 := R26["0x27D983EC"]
592 [-]: GETTABLE  R28 R21 R25  ; R28 := R21[R25]
593 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
594 [-]: SETTABLE  R21 R25 R26  ; R21[R25] := R26
595 [-]: FORLOOP   R22 581      ; R22 += R24; if R22 <= R23 then begin PC := 581; R25 := R22 end
596 [-]: GETUPVAL  R26 U16      ; R26 := U16
597 [-]: GETUPVAL  R27 U15      ; R27 := U15
598 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
599 [-]: SELF      R26 R26 K96  ; R27 := R26; R26 := R26["0x75123FC4"]
600 [-]: MOVE      R28 R19      ; R28 := R19
601 [-]: MOVE      R29 R20      ; R29 := R20
602 [-]: MOVE      R30 R21      ; R30 := R21
603 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
604 [-]: GETUPVAL  R26 U16      ; R26 := U16
605 [-]: GETUPVAL  R27 U15      ; R27 := U15
606 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
607 [-]: SELF      R26 R26 K97  ; R27 := R26; R26 := R26["0x1E436B2A"]
608 [-]: CALL      R26 2 1      ; R26(R27)
609 [-]: JMP       679          ; PC := 679
610 [-]: GETUPVAL  R26 U12      ; R26 := U12
611 [-]: GETTABLE  R26 R26 K77  ; R26 := R26["mAltDown"]
612 [-]: TEST      R26 0        ; if not R26 then PC := 626
613 [-]: JMP       626          ; PC := 626
614 [-]: GETUPVAL  R26 U16      ; R26 := U16
615 [-]: GETUPVAL  R27 U15      ; R27 := U15
616 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
617 [-]: SELF      R26 R26 K98  ; R27 := R26; R26 := R26["0x5BD03F6B"]
618 [-]: NEWTABLE  R28 0 0      ; R28 := {}
619 [-]: CALL      R26 3 1      ; R26(R27,R28)
620 [-]: GETUPVAL  R26 U16      ; R26 := U16
621 [-]: GETUPVAL  R27 U15      ; R27 := U15
622 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
623 [-]: SELF      R26 R26 K97  ; R27 := R26; R26 := R26["0x1E436B2A"]
624 [-]: CALL      R26 2 1      ; R26(R27)
625 [-]: JMP       679          ; PC := 679
626 [-]: GETUPVAL  R26 U12      ; R26 := U12
627 [-]: GETTABLE  R26 R26 K64  ; R26 := R26["mControlDown"]
628 [-]: TEST      R26 1        ; if R26 then PC := 679
629 [-]: JMP       679          ; PC := 679
630 [-]: GETUPVAL  R26 U16      ; R26 := U16
631 [-]: GETUPVAL  R27 U15      ; R27 := U15
632 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
633 [-]: SELF      R26 R26 K99  ; R27 := R26; R26 := R26["0xD856231D"]
634 [-]: GETUPVAL  R28 U10      ; R28 := U10
635 [-]: CALL      R28 1 0      ; R28,... := R28()
636 [-]: CALL      R26 0 1      ; R26(R27,...)
637 [-]: GETUPVAL  R26 U16      ; R26 := U16
638 [-]: GETUPVAL  R27 U15      ; R27 := U15
639 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
640 [-]: SELF      R26 R26 K97  ; R27 := R26; R26 := R26["0x1E436B2A"]
641 [-]: CALL      R26 2 1      ; R26(R27)
642 [-]: JMP       679          ; PC := 679
643 [-]: GETUPVAL  R26 U3       ; R26 := U3
644 [-]: GETTABLE  R26 R26 K21  ; R26 := R26["Node"]
645 [-]: TEST      R26 0        ; if not R26 then PC := 658
646 [-]: JMP       658          ; PC := 658
647 [-]: CLOSURE   R26 0        ; R26 := closure(Function #145.1)
648 [-]: GETUPVAL  R0 U3        ; R0 := U3
649 [-]: GETUPVAL  R0 U21       ; R0 := U21
650 [-]: GETUPVAL  R0 U22       ; R0 := U22
651 [-]: GETUPVAL  R0 U4        ; R0 := U4
652 [-]: GETUPVAL  R0 U23       ; R0 := U23
653 [-]: GETUPVAL  R0 U6        ; R0 := U6
654 [-]: GETUPVAL  R0 U24       ; R0 := U24
655 [-]: GETUPVAL  R0 U25       ; R0 := U25
656 [-]: MOVE      R26 R20      ; R26 := R20
657 [-]: JMP       679          ; PC := 679
658 [-]: GETUPVAL  R26 U3       ; R26 := U3
659 [-]: GETTABLE  R26 R26 K22  ; R26 := R26["Region"]
660 [-]: TEST      R26 0        ; if not R26 then PC := 667
661 [-]: JMP       667          ; PC := 667
662 [-]: GETUPVAL  R26 U26      ; R26 := U26
663 [-]: GETUPVAL  R27 U3       ; R27 := U3
664 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["Region"]
665 [-]: CALL      R26 2 1      ; R26(R27)
666 [-]: JMP       679          ; PC := 679
667 [-]: GETUPVAL  R26 U27      ; R26 := U27
668 [-]: GETTABLE  R26 R26 K100 ; R26 := R26["IsVisible"]
669 [-]: TEST      R26 1        ; if R26 then PC := 679
670 [-]: JMP       679          ; PC := 679
671 [-]: GETGLOBAL R26 K34      ; R26 := Engine
672 [-]: GETTABLE  R26 R26 K101 ; R26 := R26["0xE3029851"]
673 [-]: CALL      R26 1 2      ; R26 := R26()
674 [-]: TEST      R26 1        ; if R26 then PC := 679
675 [-]: JMP       679          ; PC := 679
676 [-]: GETUPVAL  R26 U14      ; R26 := U14
677 [-]: SELF      R26 R26 K89  ; R27 := R26; R26 := R26["0x3AEEE6C2"]
678 [-]: CALL      R26 2 1      ; R26(R27)
679 [-]: MOVE      R26 R0       ; R26 := R0
680 [-]: RETURN    R26 2        ; return R26
681 [-]: RETURN    R0 1         ; return 


; Function #145.1:
;
; Name:            
; Defined at line: 7189
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 62
  4 [-]: JMP       62           ; PC := 62
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["isShortcut"]
  8 [-]: TEST      R0 0         ; if not R0 then PC := 36
  9 [-]: JMP       36           ; PC := 36
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["radialSector"]
 19 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mission"]
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["levelOverride"]
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: TEST      R0 0         ; if not R0 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 31 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["targetRegion"]
 32 [-]: ADD       R2 R2 K9     ; R2 := R2 + 1
 33 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 34 [-]: CALL      R0 2 1       ; R0(R1)
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 38 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 39 [-]: TEST      R0 1         ; if R0 then PC := 62
 40 [-]: JMP       62           ; PC := 62
 41 [-]: GETUPVAL  R0 U5        ; R0 := U5
 42 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 43 [-]: GETGLOBAL R1 K11       ; R1 := clickAndHoldSound
 44 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 45 [-]: MOVE      R0 R4        ; R0 := R4
 46 [-]: GETUPVAL  R0 U6        ; R0 := U6
 47 [-]: CALL      R0 1 1       ; R0()
 48 [-]: GETUPVAL  R0 U5        ; R0 := U5
 49 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 50 [-]: GETGLOBAL R1 K12       ; R1 := _G
 51 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["UISound_Select"]
 52 [-]: CALL      R0 2 1       ; R0(R1)
 53 [-]: GETUPVAL  R0 U5        ; R0 := U5
 54 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 55 [-]: GETGLOBAL R1 K12       ; R1 := _G
 56 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["UISound_ButtonSelect"]
 57 [-]: CALL      R0 2 1       ; R0(R1)
 58 [-]: GETUPVAL  R0 U7        ; R0 := U7
 59 [-]: GETUPVAL  R1 U0        ; R1 := U0
 60 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 61 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 62 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 7214
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 7218
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Region"]
  8 [-]: EQ        0 R0 K3      ; if R0 ~= nil then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SETTABLE  R0 K4 K5     ; R0["InSelectClick"] := "0x1"
 14 [-]: GETUPVAL  R0 U1        ; R0 := U1
 15 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 16 [-]: RETURN    R0 0         ; return R0,...
 17 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 7230
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["InSelectClick"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K0 K1     ; R0["InSelectClick"] := "0x0"
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 11 [-]: RETURN    R0 0         ; return R0,...
 12 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 7239
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xD963824A"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 7249
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["MouseInWorldStateWindow"]
 11 [-]: TEST      R0 1         ; if R0 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R0 K1        ; R0 := _T
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["MouseInChatArea"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: TEST      R0 0         ; if not R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x3AEEE6C2"]
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: JMP       113          ; PC := 113
 25 [-]: GETUPVAL  R0 U4        ; R0 := U4
 26 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mTargetVal"]
 27 [-]: GETUPVAL  R1 U5        ; R1 := U5
 28 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["STARTING_ZOOM"]
 29 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 113
 30 [-]: JMP       113          ; PC := 113
 31 [-]: GETUPVAL  R0 U3        ; R0 := U3
 32 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xCE468565"]
 33 [-]: LOADK     R2 K8        ; R2 := "x"
 34 [-]: LOADK     R3 K9        ; R3 := 0.5
 35 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 36 [-]: GETUPVAL  R0 U3        ; R0 := U3
 37 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xCE468565"]
 38 [-]: LOADK     R2 K10       ; R2 := "y"
 39 [-]: LOADK     R3 K9        ; R3 := 0.5
 40 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 41 [-]: GETUPVAL  R0 U4        ; R0 := U4
 42 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0["0xDB349344"]
 43 [-]: GETUPVAL  R2 U5        ; R2 := U5
 44 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["STARTING_ZOOM"]
 45 [-]: CALL      R0 3 1       ; R0(R1,R2)
 46 [-]: GETUPVAL  R0 U7        ; R0 := U7
 47 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["0xF81722A2"]
 48 [-]: GETUPVAL  R1 U8        ; R1 := U8
 49 [-]: LOADK     R2 K13       ; R2 := 1
 50 [-]: LOADK     R3 K14       ; R3 := 2
 51 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 52 [-]: MOVE      R0 R6        ; R0 := R6
 53 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 54 [-]: GETUPVAL  R1 U9        ; R1 := U9
 55 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 56 [-]: TEST      R0 1         ; if R0 then PC := 83
 57 [-]: JMP       83           ; PC := 83
 58 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 59 [-]: GETUPVAL  R1 U9        ; R1 := U9
 60 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["instance"]
 61 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 62 [-]: TEST      R0 1         ; if R0 then PC := 83
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 65 [-]: GETUPVAL  R1 U9        ; R1 := U9
 66 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["zoomedInEffects"]
 67 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 68 [-]: TEST      R0 1         ; if R0 then PC := 83
 69 [-]: JMP       83           ; PC := 83
 70 [-]: GETUPVAL  R0 U9        ; R0 := U9
 71 [-]: GETTABLE  R0 R0 K16    ; R0 := R0["instance"]
 72 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0["0x9F1DC568"]
 73 [-]: GETUPVAL  R2 U9        ; R2 := U9
 74 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["zoomedInEffects"]
 75 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 76 [-]: GETGLOBAL R1 K15       ; R1 := 0x400E7765
 77 [-]: MOVE      R2 R0        ; R2 := R0
 78 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 79 [-]: TEST      R1 1         ; if R1 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: SELF      R1 R0 K19    ; R2 := R0; R1 := R0["0xD4C2743F"]
 82 [-]: CALL      R1 2 1       ; R1(R2)
 83 [-]: LOADNIL   R1 R1        ; R1 := nil
 84 [-]: MOVE      R1 R9        ; R1 := R9
 85 [-]: LOADNIL   R1 R1        ; R1 := nil
 86 [-]: MOVE      R1 R10       ; R1 := R10
 87 [-]: GETUPVAL  R1 U11       ; R1 := U11
 88 [-]: CALL      R1 1 1       ; R1()
 89 [-]: GETUPVAL  R1 U7        ; R1 := U7
 90 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["0x25992394"]
 91 [-]: GETGLOBAL R2 K21       ; R2 := zoomOutSound
 92 [-]: CALL      R1 2 1       ; R1(R2)
 93 [-]: GETUPVAL  R1 U12       ; R1 := U12
 94 [-]: GETTABLE  R1 R1 K13    ; R1 := R1[1]
 95 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
 96 [-]: GETUPVAL  R3 U13       ; R3 := U13
 97 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["red"]
 98 [-]: CALL      R1 3 1       ; R1(R2,R3)
 99 [-]: GETUPVAL  R1 U12       ; R1 := U12
100 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2]
101 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
102 [-]: GETUPVAL  R3 U13       ; R3 := U13
103 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["green"]
104 [-]: CALL      R1 3 1       ; R1(R2,R3)
105 [-]: GETUPVAL  R1 U12       ; R1 := U12
106 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[3]
107 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
108 [-]: GETUPVAL  R3 U13       ; R3 := U13
109 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["blue"]
110 [-]: CALL      R1 3 1       ; R1(R2,R3)
111 [-]: GETUPVAL  R1 U14       ; R1 := U14
112 [-]: CALL      R1 1 1       ; R1()
113 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 7287
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyUp_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 7291
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 7295
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 145
  3 [-]: JMP       145          ; PC := 145
  4 [-]: GETGLOBAL R2 K0        ; R2 := _T
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MouseInWorldStateWindow"]
  6 [-]: TEST      R2 1         ; if R2 then PC := 145
  7 [-]: JMP       145          ; PC := 145
  8 [-]: GETGLOBAL R2 K0        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MouseInChatArea"]
 10 [-]: TEST      R2 1         ; if R2 then PC := 145
 11 [-]: JMP       145          ; PC := 145
 12 [-]: GETGLOBAL R2 K0        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["JunctionTasksUIRadialSector"]
 14 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 145
 15 [-]: JMP       145          ; PC := 145
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["MIN_ZOOM"]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["MAX_ZOOM"]
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["MAX_ZOOM"]
 22 [-]: GETUPVAL  R5 U2        ; R5 := U2
 23 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTargetVal"]
 24 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 25 [-]: DIV       R4 R4 K8     ; R4 := R4 / 2
 26 [-]: GETGLOBAL R5 K9        ; R5 := Engine
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x9490FE70"]
 28 [-]: CALL      R5 1 2       ; R5 := R5()
 29 [-]: TEST      R5 0         ; if not R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: DIV       R4 R4 K11    ; R4 := R4 / 10
 32 [-]: LT        0 R4 K12     ; if R4 >= 0.050000000745058 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADK     R4 K12       ; R4 := 0.050000000745058
 35 [-]: GETUPVAL  R5 U3        ; R5 := U3
 36 [-]: GETUPVAL  R6 U4        ; R6 := U4
 37 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["EDIT_REGION_FRAMING"]
 38 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADK     R4 K12       ; R4 := 0.050000000745058
 41 [-]: LOADK     R2 K14       ; R2 := -999
 42 [-]: LOADK     R3 K15       ; R3 := 999
 43 [-]: GETGLOBAL R5 K16       ; R5 := 0xF595ADDE
 44 [-]: MOVE      R6 R1        ; R6 := R1
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: LT        0 R5 K17     ; if R5 >= 0 then PC := 116
 47 [-]: JMP       116          ; PC := 116
 48 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
 49 [-]: GETUPVAL  R6 U5        ; R6 := U5
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: TEST      R5 1         ; if R5 then PC := 87
 52 [-]: JMP       87           ; PC := 87
 53 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
 54 [-]: GETUPVAL  R6 U5        ; R6 := U5
 55 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["Region"]
 56 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 57 [-]: TEST      R5 1         ; if R5 then PC := 87
 58 [-]: JMP       87           ; PC := 87
 59 [-]: GETUPVAL  R5 U5        ; R5 := U5
 60 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["Region"]
 61 [-]: GETUPVAL  R6 U6        ; R6 := U6
 62 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 87
 63 [-]: JMP       87           ; PC := 87
 64 [-]: GETUPVAL  R5 U7        ; R5 := U7
 65 [-]: GETUPVAL  R6 U8        ; R6 := U8
 66 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["0xB57E56DF"]
 67 [-]: GETGLOBAL R7 K21       ; R7 := mMovie
 68 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7["0xF595D5E1"]
 69 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 70 [-]: DIV       R7 R7 K8     ; R7 := R7 / 2
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: GETUPVAL  R7 U8        ; R7 := U8
 73 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["0xB57E56DF"]
 74 [-]: GETGLOBAL R8 K21       ; R8 := mMovie
 75 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8["0xEE069D65"]
 76 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 77 [-]: DIV       R8 R8 K8     ; R8 := R8 / 2
 78 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 79 [-]: CALL      R5 0 1       ; R5(R6,...)
 80 [-]: GETUPVAL  R5 U9        ; R5 := U9
 81 [-]: GETUPVAL  R6 U5        ; R6 := U5
 82 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["Region"]
 83 [-]: LOADNIL   R7 R7        ; R7 := nil
 84 [-]: MOVE      R8 R1        ; R8 := R1
 85 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 86 [-]: RETURN    R0 1         ; return 
 87 [-]: MOVE      R5 R3        ; R5 := R3
 88 [-]: GETGLOBAL R6 K18       ; R6 := 0x400E7765
 89 [-]: GETUPVAL  R7 U6        ; R7 := U6
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 101
 92 [-]: JMP       101          ; PC := 101
 93 [-]: GETGLOBAL R6 K24       ; R6 := math
 94 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["0x8B011038"]
 95 [-]: MOVE      R7 R5        ; R7 := R5
 96 [-]: GETUPVAL  R8 U6        ; R8 := U6
 97 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["zoomedFraming"]
 98 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["z"]
 99 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
100 [-]: MOVE      R5 R6        ; R5 := R6
101 [-]: GETUPVAL  R6 U2        ; R6 := U2
102 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mTargetVal"]
103 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 145
104 [-]: JMP       145          ; PC := 145
105 [-]: GETUPVAL  R6 U2        ; R6 := U2
106 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6["0xDB349344"]
107 [-]: GETGLOBAL R8 K29       ; R8 := 0x6374FD98
108 [-]: GETUPVAL  R9 U2        ; R9 := U2
109 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["mTargetVal"]
110 [-]: ADD       R9 R9 R4     ; R9 := R9 + R4
111 [-]: MOVE      R10 R2       ; R10 := R2
112 [-]: MOVE      R11 R5       ; R11 := R5
113 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
114 [-]: CALL      R6 0 1       ; R6(R7,...)
115 [-]: JMP       145          ; PC := 145
116 [-]: GETGLOBAL R6 K16       ; R6 := 0xF595ADDE
117 [-]: MOVE      R7 R1        ; R7 := R1
118 [-]: CALL      R6 2 2       ; R6 := R6(R7)
119 [-]: LT        0 K17 R6     ; if 0 >= R6 then PC := 145
120 [-]: JMP       145          ; PC := 145
121 [-]: GETUPVAL  R6 U2        ; R6 := U2
122 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6["0xDB349344"]
123 [-]: GETGLOBAL R8 K29       ; R8 := 0x6374FD98
124 [-]: GETUPVAL  R9 U2        ; R9 := U2
125 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["mTargetVal"]
126 [-]: SUB       R9 R9 R4     ; R9 := R9 - R4
127 [-]: MOVE      R10 R2       ; R10 := R2
128 [-]: MOVE      R11 R3       ; R11 := R3
129 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
130 [-]: CALL      R6 0 1       ; R6(R7,...)
131 [-]: GETGLOBAL R6 K18       ; R6 := 0x400E7765
132 [-]: GETUPVAL  R7 U6        ; R7 := U6
133 [-]: CALL      R6 2 2       ; R6 := R6(R7)
134 [-]: TEST      R6 1         ; if R6 then PC := 145
135 [-]: JMP       145          ; PC := 145
136 [-]: GETUPVAL  R6 U2        ; R6 := U2
137 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mTargetVal"]
138 [-]: GETUPVAL  R7 U1        ; R7 := U1
139 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["ZOOM_OUT_THRESHOLD"]
140 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 145
141 [-]: JMP       145          ; PC := 145
142 [-]: GETUPVAL  R6 U10       ; R6 := U10
143 [-]: MOVE      R7 R0        ; R7 := R0
144 [-]: CALL      R6 2 1       ; R6(R7)
145 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 7334
; #Upvalues:       19
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: TEST      R3 0         ; if not R3 then PC := 373
  3 [-]: JMP       373          ; PC := 373
  4 [-]: GETGLOBAL R3 K0        ; R3 := gFlashMgr
  5 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x616DD092"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xBCEEAD81"]
  8 [-]: CALL      R5 1 0       ; R5,... := R5()
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x1AA40FBC"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: EQ        0 R4 K5      ; if R4 ~= "MessageBox" then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: EQ        0 R1 K6      ; if R1 ~= "EN_LSHIFT" then PC := 37
 21 [-]: JMP       37           ; PC := 37
 22 [-]: GETUPVAL  R4 U2        ; R4 := U2
 23 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: SETTABLE  R4 K7 R5     ; R4["mShiftDown"] := R5
 28 [-]: GETUPVAL  R4 U3        ; R4 := U3
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 31 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R4 U5        ; R4 := U5
 34 [-]: CALL      R4 1 1       ; R4()
 35 [-]: GETUPVAL  R4 U6        ; R4 := U6
 36 [-]: CALL      R4 1 1       ; R4()
 37 [-]: EQ        0 R1 K10     ; if R1 ~= "EN_LCONTROL" then PC := 54
 38 [-]: JMP       54           ; PC := 54
 39 [-]: GETUPVAL  R4 U2        ; R4 := U2
 40 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: SETTABLE  R4 K11 R5    ; R4["mControlDown"] := R5
 45 [-]: GETUPVAL  R4 U3        ; R4 := U3
 46 [-]: GETUPVAL  R5 U4        ; R5 := U4
 47 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 48 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETUPVAL  R4 U5        ; R4 := U5
 51 [-]: CALL      R4 1 1       ; R4()
 52 [-]: GETUPVAL  R4 U6        ; R4 := U6
 53 [-]: CALL      R4 1 1       ; R4()
 54 [-]: EQ        0 R1 K12     ; if R1 ~= "EN_LALT" then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: MOVE      R5 R1        ; R5 := R1
 61 [-]: SETTABLE  R4 K13 R5    ; R4["mAltDown"] := R5
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETUPVAL  R5 U4        ; R5 := U4
 64 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 65 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: GETUPVAL  R4 U5        ; R4 := U5
 68 [-]: CALL      R4 1 1       ; R4()
 69 [-]: GETUPVAL  R4 U6        ; R4 := U6
 70 [-]: CALL      R4 1 1       ; R4()
 71 [-]: EQ        0 R1 K14     ; if R1 ~= "EN_E" then PC := 88
 72 [-]: JMP       88           ; PC := 88
 73 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETUPVAL  R4 U7        ; R4 := U7
 76 [-]: GETUPVAL  R5 U1        ; R5 := U1
 77 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["0x7C43280B"]
 78 [-]: GETUPVAL  R6 U3        ; R6 := U3
 79 [-]: GETUPVAL  R7 U1        ; R7 := U1
 80 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["INCREMENT"]
 81 [-]: LOADK     R8 K17       ; R8 := 1
 82 [-]: GETUPVAL  R9 U4        ; R9 := U4
 83 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["MAX_VALUE"]
 84 [-]: SUB       R9 R9 K17    ; R9 := R9 - 1
 85 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 86 [-]: CALL      R4 0 1       ; R4(R5,...)
 87 [-]: JMP       103          ; PC := 103
 88 [-]: EQ        0 R1 K19     ; if R1 ~= "EN_S" then PC := 103
 89 [-]: JMP       103          ; PC := 103
 90 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 103
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 93 [-]: GETUPVAL  R5 U8        ; R5 := U8
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: TEST      R4 1         ; if R4 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETUPVAL  R4 U8        ; R4 := U8
 98 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xEF081AD8"]
 99 [-]: CALL      R4 2 1       ; R4(R5)
100 [-]: GETGLOBAL R4 K21       ; R4 := 0xE40A882D
101 [-]: LOADK     R5 K22       ; R5 := "SolarMap Serialized"
102 [-]: CALL      R4 2 1       ; R4(R5)
103 [-]: EQ        0 R1 K23     ; if R1 ~= "EN_A" then PC := 171
104 [-]: JMP       171          ; PC := 171
105 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 171
106 [-]: JMP       171          ; PC := 171
107 [-]: GETUPVAL  R4 U3        ; R4 := U3
108 [-]: GETUPVAL  R5 U4        ; R5 := U4
109 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
110 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 171
111 [-]: JMP       171          ; PC := 171
112 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
113 [-]: GETUPVAL  R5 U9        ; R5 := U9
114 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
115 [-]: CALL      R4 2 2       ; R4 := R4(R5)
116 [-]: TEST      R4 1         ; if R4 then PC := 286
117 [-]: JMP       286          ; PC := 286
118 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
119 [-]: GETUPVAL  R5 U9        ; R5 := U9
120 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
121 [-]: CALL      R4 2 2       ; R4 := R4(R5)
122 [-]: TEST      R4 1         ; if R4 then PC := 286
123 [-]: JMP       286          ; PC := 286
124 [-]: GETUPVAL  R4 U10       ; R4 := U10
125 [-]: GETUPVAL  R5 U10       ; R5 := U10
126 [-]: LEN       R5 R5        ; R5 := # R5
127 [-]: NEWTABLE  R6 0 3       ; R6 := {}
128 [-]: GETUPVAL  R7 U9        ; R7 := U9
129 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
130 [-]: SETTABLE  R6 K27 R7    ; R6["NodeA"] := R7
131 [-]: GETUPVAL  R7 U9        ; R7 := U9
132 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
133 [-]: SETTABLE  R6 K28 R7    ; R6["NodeB"] := R7
134 [-]: GETUPVAL  R7 U9        ; R7 := U9
135 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
136 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
137 [-]: TEST      R7 0         ; if not R7 then PC := 142
138 [-]: JMP       142          ; PC := 142
139 [-]: GETUPVAL  R7 U9        ; R7 := U9
140 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
141 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
142 [-]: SETTABLE  R6 K29 R7    ; R6["IsShortcut"] := R7
143 [-]: SETTABLE  R4 R5 R6     ; R4[R5] := R6
144 [-]: GETUPVAL  R4 U8        ; R4 := U8
145 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x2337A98F"]
146 [-]: GETUPVAL  R6 U9        ; R6 := U9
147 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mEdgeNode1"]
148 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
149 [-]: GETUPVAL  R7 U9        ; R7 := U9
150 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
151 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["radialSector"]
152 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
153 [-]: GETUPVAL  R4 U8        ; R4 := U8
154 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x113DAAED"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: MOVE      R4 R11       ; R4 := R11
157 [-]: GETUPVAL  R4 U9        ; R4 := U9
158 [-]: SETTABLE  R4 K25 K34   ; R4["mEdgeNode1"] := nil
159 [-]: GETUPVAL  R4 U9        ; R4 := U9
160 [-]: SETTABLE  R4 K26 K34   ; R4["mEdgeNode2"] := nil
161 [-]: GETGLOBAL R4 K35       ; R4 := mMovie
162 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x1C19D966"]
163 [-]: LOADK     R6 K37       ; R6 := "ScreenModeLabel"
164 [-]: LOADK     R7 K38       ; R7 := "text"
165 [-]: GETUPVAL  R8 U12       ; R8 := U12
166 [-]: CALL      R8 1 0       ; R8,... := R8()
167 [-]: CALL      R4 0 1       ; R4(R5,...)
168 [-]: GETUPVAL  R4 U13       ; R4 := U13
169 [-]: CALL      R4 1 1       ; R4()
170 [-]: JMP       286          ; PC := 286
171 [-]: EQ        0 R1 K39     ; if R1 ~= "EN_D" then PC := 269
172 [-]: JMP       269          ; PC := 269
173 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 269
174 [-]: JMP       269          ; PC := 269
175 [-]: GETUPVAL  R4 U3        ; R4 := U3
176 [-]: GETUPVAL  R5 U4        ; R5 := U4
177 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 269
179 [-]: JMP       269          ; PC := 269
180 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
181 [-]: GETUPVAL  R5 U9        ; R5 := U9
182 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
183 [-]: CALL      R4 2 2       ; R4 := R4(R5)
184 [-]: TEST      R4 1         ; if R4 then PC := 286
185 [-]: JMP       286          ; PC := 286
186 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
187 [-]: GETUPVAL  R5 U9        ; R5 := U9
188 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
189 [-]: CALL      R4 2 2       ; R4 := R4(R5)
190 [-]: TEST      R4 1         ; if R4 then PC := 286
191 [-]: JMP       286          ; PC := 286
192 [-]: LOADK     R4 K17       ; R4 := 1
193 [-]: GETUPVAL  R5 U10       ; R5 := U10
194 [-]: LEN       R5 R5        ; R5 := # R5
195 [-]: LOADK     R6 K17       ; R6 := 1
196 [-]: FORPREP   R4 241       ; R4 -= R6; PC := 241
197 [-]: GETUPVAL  R8 U10       ; R8 := U10
198 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
199 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
200 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
201 [-]: GETUPVAL  R10 U9       ; R10 := U9
202 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
203 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
204 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
205 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
208 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
209 [-]: GETUPVAL  R10 U9       ; R10 := U9
210 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
211 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
212 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
213 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 231
214 [-]: JMP       231          ; PC := 231
215 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
216 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
217 [-]: GETUPVAL  R10 U9       ; R10 := U9
218 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
219 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
220 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
221 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
222 [-]: JMP       241          ; PC := 241
223 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
224 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
225 [-]: GETUPVAL  R10 U9       ; R10 := U9
226 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
227 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
228 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
229 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
230 [-]: JMP       241          ; PC := 241
231 [-]: GETGLOBAL R9 K41       ; R9 := gBackgroundRegion
232 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9["0x9B0A3887"]
233 [-]: GETTABLE  R11 R8 K43   ; R11 := R8["Instance"]
234 [-]: CALL      R9 3 1       ; R9(R10,R11)
235 [-]: GETGLOBAL R9 K44       ; R9 := table
236 [-]: GETTABLE  R9 R9 K45    ; R9 := R9["0xCDB1FD5E"]
237 [-]: GETUPVAL  R10 U10      ; R10 := U10
238 [-]: MOVE      R11 R7       ; R11 := R7
239 [-]: CALL      R9 3 1       ; R9(R10,R11)
240 [-]: JMP       242          ; PC := 242
241 [-]: FORLOOP   R4 197       ; R4 += R6; if R4 <= R5 then begin PC := 197; R7 := R4 end
242 [-]: GETUPVAL  R9 U8        ; R9 := U8
243 [-]: SELF      R9 R9 K46    ; R10 := R9; R9 := R9["0x1EE7613D"]
244 [-]: GETUPVAL  R11 U9       ; R11 := U9
245 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["mEdgeNode1"]
246 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["radialSector"]
247 [-]: GETUPVAL  R12 U9       ; R12 := U9
248 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["mEdgeNode2"]
249 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["radialSector"]
250 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
251 [-]: GETUPVAL  R9 U8        ; R9 := U8
252 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9["0x113DAAED"]
253 [-]: CALL      R9 2 2       ; R9 := R9(R10)
254 [-]: MOVE      R9 R11       ; R9 := R11
255 [-]: GETUPVAL  R9 U9        ; R9 := U9
256 [-]: SETTABLE  R9 K25 K34   ; R9["mEdgeNode1"] := nil
257 [-]: GETUPVAL  R9 U9        ; R9 := U9
258 [-]: SETTABLE  R9 K26 K34   ; R9["mEdgeNode2"] := nil
259 [-]: GETGLOBAL R9 K35       ; R9 := mMovie
260 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
261 [-]: LOADK     R11 K37      ; R11 := "ScreenModeLabel"
262 [-]: LOADK     R12 K38      ; R12 := "text"
263 [-]: GETUPVAL  R13 U12      ; R13 := U12
264 [-]: CALL      R13 1 0      ; R13,... := R13()
265 [-]: CALL      R9 0 1       ; R9(R10,...)
266 [-]: GETUPVAL  R9 U13       ; R9 := U13
267 [-]: CALL      R9 1 1       ; R9()
268 [-]: JMP       286          ; PC := 286
269 [-]: EQ        0 R1 K47     ; if R1 ~= "EN_C" then PC := 286
270 [-]: JMP       286          ; PC := 286
271 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 286
272 [-]: JMP       286          ; PC := 286
273 [-]: GETUPVAL  R9 U3        ; R9 := U3
274 [-]: GETUPVAL  R10 U4       ; R10 := U4
275 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["EDIT_EDGES"]
276 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 286
277 [-]: JMP       286          ; PC := 286
278 [-]: GETGLOBAL R9 K3        ; R9 := 0x400E7765
279 [-]: GETUPVAL  R10 U9       ; R10 := U9
280 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
281 [-]: CALL      R9 2 2       ; R9 := R9(R10)
282 [-]: TEST      R9 1         ; if R9 then PC := 286
283 [-]: JMP       286          ; PC := 286
284 [-]: GETUPVAL  R9 U13       ; R9 := U13
285 [-]: CALL      R9 1 1       ; R9()
286 [-]: EQ        0 R1 K48     ; if R1 ~= "EN_R" then PC := 315
287 [-]: JMP       315          ; PC := 315
288 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 315
289 [-]: JMP       315          ; PC := 315
290 [-]: GETUPVAL  R9 U3        ; R9 := U3
291 [-]: GETUPVAL  R10 U4       ; R10 := U4
292 [-]: GETTABLE  R10 R10 K49  ; R10 := R10["EDIT_REGION_FRAMING"]
293 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 315
294 [-]: JMP       315          ; PC := 315
295 [-]: GETUPVAL  R9 U9        ; R9 := U9
296 [-]: GETUPVAL  R10 U1       ; R10 := U1
297 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0x7C43280B"]
298 [-]: GETUPVAL  R11 U9       ; R11 := U9
299 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
300 [-]: GETUPVAL  R12 U1       ; R12 := U1
301 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["INCREMENT"]
302 [-]: LOADK     R13 K17      ; R13 := 1
303 [-]: GETUPVAL  R14 U14      ; R14 := U14
304 [-]: LEN       R14 R14      ; R14 := # R14
305 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
306 [-]: SETTABLE  R9 K50 R10   ; R9["mFramingRegion"] := R10
307 [-]: GETUPVAL  R9 U15       ; R9 := U15
308 [-]: GETUPVAL  R10 U14      ; R10 := U14
309 [-]: GETUPVAL  R11 U9       ; R11 := U9
310 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
311 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
312 [-]: CALL      R9 2 1       ; R9(R10)
313 [-]: GETUPVAL  R9 U16       ; R9 := U16
314 [-]: CALL      R9 1 1       ; R9()
315 [-]: EQ        0 R1 K51     ; if R1 ~= "EN_L" then PC := 329
316 [-]: JMP       329          ; PC := 329
317 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 329
318 [-]: JMP       329          ; PC := 329
319 [-]: GETUPVAL  R9 U17       ; R9 := U17
320 [-]: MOVE      R9 R9        ; R9 := R9
321 [-]: MOVE      R9 R17       ; R9 := R17
322 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
323 [-]: LOADK     R10 K52      ; R10 := "Visible Tags:"
324 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
325 [-]: GETUPVAL  R12 U17      ; R12 := U17
326 [-]: CALL      R11 2 2      ; R11 := R11(R12)
327 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
328 [-]: CALL      R9 2 1       ; R9(R10)
329 [-]: EQ        0 R1 K54     ; if R1 ~= "EN_U" then PC := 373
330 [-]: JMP       373          ; PC := 373
331 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 373
332 [-]: JMP       373          ; PC := 373
333 [-]: GETGLOBAL R9 K55       ; R9 := _T
334 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
335 [-]: EQ        0 R9 K34     ; if R9 ~= nil then PC := 339
336 [-]: JMP       339          ; PC := 339
337 [-]: GETGLOBAL R9 K55       ; R9 := _T
338 [-]: SETTABLE  R9 K56 K57   ; R9["MAP_HideExtraUI"] := "0x0"
339 [-]: GETGLOBAL R9 K55       ; R9 := _T
340 [-]: GETGLOBAL R10 K55      ; R10 := _T
341 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["MAP_HideExtraUI"]
342 [-]: MOVE      R10 R10      ; R10 := R10
343 [-]: SETTABLE  R9 K56 R10   ; R9["MAP_HideExtraUI"] := R10
344 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
345 [-]: LOADK     R10 K58      ; R10 := "Visible Extra UI:"
346 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
347 [-]: GETGLOBAL R12 K55      ; R12 := _T
348 [-]: GETTABLE  R12 R12 K56  ; R12 := R12["MAP_HideExtraUI"]
349 [-]: CALL      R11 2 2      ; R11 := R11(R12)
350 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
351 [-]: CALL      R9 2 1       ; R9(R10)
352 [-]: GETGLOBAL R9 K55       ; R9 := _T
353 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
354 [-]: TEST      R9 0         ; if not R9 then PC := 360
355 [-]: JMP       360          ; PC := 360
356 [-]: GETGLOBAL R9 K55       ; R9 := _T
357 [-]: GETTABLE  R9 R9 K59    ; R9 := R9["0x45CBC39B"]
358 [-]: CALL      R9 1 1       ; R9()
359 [-]: JMP       364          ; PC := 364
360 [-]: GETGLOBAL R9 K55       ; R9 := _T
361 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["0x8ED0D55D"]
362 [-]: MOVE      R10 R1       ; R10 := R1
363 [-]: CALL      R9 2 1       ; R9(R10)
364 [-]: GETUPVAL  R9 U18       ; R9 := U18
365 [-]: GETTABLE  R9 R9 K61    ; R9 := R9["Movie"]
366 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
367 [-]: LOADK     R11 K62      ; R11 := "_root"
368 [-]: LOADK     R12 K63      ; R12 := "_visible"
369 [-]: GETGLOBAL R13 K55      ; R13 := _T
370 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["MAP_HideExtraUI"]
371 [-]: MOVE      R13 R13      ; R13 := R13
372 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
373 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 7440
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 7444
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 7448
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 17
 16 [-]: JMP       17           ; PC := 17
 17 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 7459
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "_root"
  4 [-]: LOADK     R4 K3        ; R4 := "noMenuSelection"
  5 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: SETTABLE  R1 K5 R2     ; R1["Open"] := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 7464
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: SETTABLE  R1 K0 R2     ; R1["DioOpen"] := R2
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 7470
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 1       ; R4()
  3 [-]: GETUPVAL  R4 U1        ; R4 := U1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 1       ; R4(R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 7476
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x61494587"]
  3 [-]: LOADK     R2 K1        ; R2 := 0.050000000745058
  4 [-]: CLOSURE   R3 0         ; R3 := closure(Function #161.1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #161.1:
;
; Name:            
; Defined at line: 7478
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["forceUpdate3dElements"] := "0x1"
  3 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 7483
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 7487
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 R0     ; R1["mTrigger"] := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 7492
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 7496
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0xECFDD17
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       63           ; PC := 63
  9 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
 10 [-]: TEST      R5 1         ; if R5 then PC := 63
 11 [-]: JMP       63           ; PC := 63
 12 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["isJunction"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 63
 14 [-]: JMP       63           ; PC := 63
 15 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["special"]
 16 [-]: TEST      R5 1         ; if R5 then PC := 58
 17 [-]: JMP       58           ; PC := 58
 18 [-]: GETGLOBAL R5 K4        ; R5 := _T
 19 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["CachedSortieMissions"]
 20 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 21 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 22 [-]: JMP       58           ; PC := 58
 23 [-]: GETGLOBAL R5 K4        ; R5 := _T
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["CachedActiveMissions"]
 25 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 26 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 27 [-]: JMP       58           ; PC := 58
 28 [-]: GETGLOBAL R5 K4        ; R5 := _T
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["CachedAlerts"]
 30 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 31 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 32 [-]: JMP       58           ; PC := 58
 33 [-]: GETGLOBAL R5 K4        ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedInvasionInfo"]
 35 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 36 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 37 [-]: JMP       58           ; PC := 58
 38 [-]: GETGLOBAL R5 K10       ; R5 := _G
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["CachedGoalInfo"]
 40 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 41 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETGLOBAL R5 K10       ; R5 := _G
 44 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MergedGoalNodes"]
 45 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 46 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R5 K4        ; R5 := _T
 49 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedSyndicateMissions"]
 50 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 51 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETGLOBAL R5 K4        ; R5 := _T
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["CachedSkullNodes"]
 55 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 56 [-]: EQ        1 R5 K6      ; if R5 == nil then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R5 U3        ; R5 := U3
 59 [-]: MOVE      R6 R4        ; R6 := R4
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K15       ; R5 := 0x1BF588C6
 62 [-]: CALL      R5 1 1       ; R5()
 63 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 64 [-]: JMP       9            ; PC := 9
 65 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 7520
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
  9 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 107
 10 [-]: JMP       107          ; PC := 107
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["TransitioningOut"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 107
 14 [-]: JMP       107          ; PC := 107
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Timer"]
 17 [-]: EQ        1 R1 K6      ; if R1 == -1 then PC := 107
 18 [-]: JMP       107          ; PC := 107
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: SETTABLE  R1 K4 K7     ; R1["TransitioningOut"] := "0x1"
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: MOVE      R1 R1        ; R1 := R1
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETUPVAL  R5 U3        ; R5 := U3
 29 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 30 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["x"]
 31 [-]: SETTABLE  R4 K8 R5     ; R4["InitialX"] := R5
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETUPVAL  R5 U3        ; R5 := U3
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 35 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["y"]
 36 [-]: SETTABLE  R4 K11 R5    ; R4["InitialY"] := R5
 37 [-]: GETUPVAL  R4 U0        ; R4 := U0
 38 [-]: GETUPVAL  R5 U4        ; R5 := U4
 39 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mCurVal"]
 40 [-]: SETTABLE  R4 K13 R5    ; R4["InitialZoom"] := R5
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: SETTABLE  R4 K15 R1    ; R4["TargetX"] := R1
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: SETTABLE  R4 K16 R2    ; R4["TargetY"] := R2
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: SETTABLE  R4 K17 R3    ; R4["TargetZoom"] := R3
 47 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 48 [-]: GETUPVAL  R5 U5        ; R5 := U5
 49 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: TEST      R4 1         ; if R4 then PC := 64
 52 [-]: JMP       64           ; PC := 64
 53 [-]: GETUPVAL  R4 U0        ; R4 := U0
 54 [-]: GETUPVAL  R5 U5        ; R5 := U5
 55 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
 56 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5["0xF8AE9518"]
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: SETTABLE  R4 K19 R5    ; R4["InitialFOV"] := R5
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETUPVAL  R5 U0        ; R5 := U0
 61 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["InitialFOV"]
 62 [-]: DIV       R5 R5 K22    ; R5 := R5 / 4
 63 [-]: SETTABLE  R4 K21 R5    ; R4["TargetFOV"] := R5
 64 [-]: GETUPVAL  R4 U6        ; R4 := U6
 65 [-]: SETTABLE  R4 K23 K7    ; R4["Locked"] := "0x1"
 66 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 67 [-]: GETUPVAL  R5 U7        ; R5 := U7
 68 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 69 [-]: TEST      R4 1         ; if R4 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETUPVAL  R4 U6        ; R4 := U6
 72 [-]: GETUPVAL  R5 U7        ; R5 := U7
 73 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0x6DA72501"]
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: SETTABLE  R4 K24 R5    ; R4["Previous"] := R5
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETUPVAL  R4 U6        ; R4 := U6
 78 [-]: GETGLOBAL R5 K26       ; R5 := 0x221C9700
 79 [-]: CALL      R5 1 2       ; R5 := R5()
 80 [-]: SETTABLE  R4 K24 R5    ; R4["Previous"] := R5
 81 [-]: GETUPVAL  R4 U6        ; R4 := U6
 82 [-]: GETUPVAL  R5 U6        ; R5 := U6
 83 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Previous"]
 84 [-]: GETGLOBAL R6 K26       ; R6 := 0x221C9700
 85 [-]: LOADK     R7 K28       ; R7 := 0
 86 [-]: LOADK     R8 K28       ; R8 := 0
 87 [-]: GETUPVAL  R9 U0        ; R9 := U0
 88 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["TargetZoom"]
 89 [-]: GETUPVAL  R10 U0       ; R10 := U0
 90 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["InitialZoom"]
 91 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
 92 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 93 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 94 [-]: SETTABLE  R4 K27 R5    ; R4["Target"] := R5
 95 [-]: GETUPVAL  R4 U6        ; R4 := U6
 96 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["Prop"]
 97 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4["0x5A7A6B1"]
 98 [-]: LOADK     R6 K31       ; R6 := 1
 99 [-]: CALL      R4 3 1       ; R4(R5,R6)
100 [-]: GETUPVAL  R4 U6        ; R4 := U6
101 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["Prop"]
102 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0xDB349344"]
103 [-]: LOADK     R6 K31       ; R6 := 1
104 [-]: CALL      R4 3 1       ; R4(R5,R6)
105 [-]: GETUPVAL  R4 U6        ; R4 := U6
106 [-]: SETTABLE  R4 K33 K6    ; R4["Region"] := -1
107 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
108 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0x1C19D966"]
109 [-]: LOADK     R6 K35       ; R6 := "_root"
110 [-]: LOADK     R7 K36       ; R7 := "_alpha"
111 [-]: MUL       R8 R0 K37    ; R8 := R0 * 100
112 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
113 [-]: SUB       R4 K31 R0    ; R4 := 1 - R0
114 [-]: GETUPVAL  R5 U0        ; R5 := U0
115 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["InitialZoom"]
116 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 122
117 [-]: JMP       122          ; PC := 122
118 [-]: GETUPVAL  R5 U0        ; R5 := U0
119 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["TargetZoom"]
120 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: MOVE      R5 R0        ; R5 := R0
123 [-]: MOVE      R5 R1        ; R5 := R1
124 [-]: GETUPVAL  R6 U0        ; R6 := U0
125 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["InitialFOV"]
126 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 132
127 [-]: JMP       132          ; PC := 132
128 [-]: GETUPVAL  R6 U0        ; R6 := U0
129 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["TargetFOV"]
130 [-]: EQ        0 R6 K3      ; if R6 ~= nil then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: MOVE      R6 R0        ; R6 := R0
133 [-]: MOVE      R6 R1        ; R6 := R1
134 [-]: TEST      R5 1         ; if R5 then PC := 138
135 [-]: JMP       138          ; PC := 138
136 [-]: TEST      R6 0         ; if not R6 then PC := 192
137 [-]: JMP       192          ; PC := 192
138 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
139 [-]: GETUPVAL  R8 U5        ; R8 := U5
140 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["cameraSpot"]
141 [-]: CALL      R7 2 2       ; R7 := R7(R8)
142 [-]: TEST      R7 1         ; if R7 then PC := 158
143 [-]: JMP       158          ; PC := 158
144 [-]: TEST      R6 0         ; if not R6 then PC := 158
145 [-]: JMP       158          ; PC := 158
146 [-]: GETUPVAL  R7 U5        ; R7 := U5
147 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["cameraSpot"]
148 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7["0x95E6F2AA"]
149 [-]: GETGLOBAL R9 K39       ; R9 := 0x93034B55
150 [-]: GETUPVAL  R10 U0       ; R10 := U0
151 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["InitialFOV"]
152 [-]: GETUPVAL  R11 U0       ; R11 := U0
153 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["TargetFOV"]
154 [-]: MOVE      R12 R4       ; R12 := R4
155 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
156 [-]: CALL      R7 0 1       ; R7(R8,...)
157 [-]: JMP       170          ; PC := 170
158 [-]: TEST      R5 0         ; if not R5 then PC := 170
159 [-]: JMP       170          ; PC := 170
160 [-]: GETUPVAL  R7 U4        ; R7 := U4
161 [-]: SELF      R7 R7 K30    ; R8 := R7; R7 := R7["0x5A7A6B1"]
162 [-]: GETGLOBAL R9 K39       ; R9 := 0x93034B55
163 [-]: GETUPVAL  R10 U0       ; R10 := U0
164 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["InitialZoom"]
165 [-]: GETUPVAL  R11 U0       ; R11 := U0
166 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["TargetZoom"]
167 [-]: MOVE      R12 R4       ; R12 := R4
168 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
169 [-]: CALL      R7 0 1       ; R7(R8,...)
170 [-]: GETUPVAL  R7 U3        ; R7 := U3
171 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0xCE468565"]
172 [-]: LOADK     R9 K10       ; R9 := "x"
173 [-]: GETGLOBAL R10 K39      ; R10 := 0x93034B55
174 [-]: GETUPVAL  R11 U0       ; R11 := U0
175 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["InitialX"]
176 [-]: GETUPVAL  R12 U0       ; R12 := U0
177 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["TargetX"]
178 [-]: MOVE      R13 R4       ; R13 := R4
179 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
180 [-]: CALL      R7 0 1       ; R7(R8,...)
181 [-]: GETUPVAL  R7 U3        ; R7 := U3
182 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0xCE468565"]
183 [-]: LOADK     R9 K12       ; R9 := "y"
184 [-]: GETGLOBAL R10 K39      ; R10 := 0x93034B55
185 [-]: GETUPVAL  R11 U0       ; R11 := U0
186 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["InitialY"]
187 [-]: GETUPVAL  R12 U0       ; R12 := U0
188 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["TargetY"]
189 [-]: MOVE      R13 R4       ; R13 := R4
190 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
191 [-]: CALL      R7 0 1       ; R7(R8,...)
192 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
193 [-]: GETUPVAL  R8 U7        ; R8 := U7
194 [-]: CALL      R7 2 2       ; R7 := R7(R8)
195 [-]: TEST      R7 1         ; if R7 then PC := 215
196 [-]: JMP       215          ; PC := 215
197 [-]: GETUPVAL  R7 U6        ; R7 := U6
198 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["Previous"]
199 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 215
200 [-]: JMP       215          ; PC := 215
201 [-]: GETUPVAL  R7 U6        ; R7 := U6
202 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["Target"]
203 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 215
204 [-]: JMP       215          ; PC := 215
205 [-]: GETUPVAL  R7 U7        ; R7 := U7
206 [-]: SELF      R7 R7 K41    ; R8 := R7; R7 := R7["0xEC183DDC"]
207 [-]: GETGLOBAL R9 K42       ; R9 := 0xE0C881B4
208 [-]: GETUPVAL  R10 U6       ; R10 := U6
209 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["Previous"]
210 [-]: GETUPVAL  R11 U6       ; R11 := U6
211 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["Target"]
212 [-]: MOVE      R12 R4       ; R12 := R4
213 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
214 [-]: CALL      R7 0 1       ; R7(R8,...)
215 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 7576
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 7583
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 7587
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 49
  5 [-]: JMP       49           ; PC := 49
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 15 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x80B14403"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x80B14403"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8B598ED4"]
 24 [-]: GETGLOBAL R3 K5        ; R3 := 0x2C00D429
 25 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: TEST      R1 1         ; if R1 then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xB7C97379"]
 32 [-]: GETGLOBAL R3 K8        ; R3 := 0xEC274B1A
 33 [-]: LOADK     R4 K9        ; R4 := "Player"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0x80B14403"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 41 [-]: GETGLOBAL R2 K11       ; R2 := _G
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["UISound_ButtonSelect"]
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETUPVAL  R1 U1        ; R1 := U1
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 46 [-]: GETGLOBAL R2 K11       ; R2 := _G
 47 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UISound_DialogOpen"]
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 7602
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 7607
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 7611
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x42C0C1F"]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


