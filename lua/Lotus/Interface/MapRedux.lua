code size: 1708
code size: 124
code size: 13
code size: 133
code size: 13
code size: 17
code size: 20
code size: 30
code size: 142
code size: 13
code size: 114
code size: 39
code size: 27
code size: 22
code size: 12
code size: 3
code size: 61
code size: 15
code size: 37
code size: 89
code size: 58
code size: 23
code size: 251
code size: 18
code size: 28
code size: 140
code size: 226
code size: 17
code size: 231
code size: 94
code size: 45
code size: 28
code size: 73
code size: 125
code size: 56
code size: 4
code size: 28
code size: 23
code size: 1
code size: 171
code size: 59
code size: 4
code size: 321
code size: 7
code size: 13
code size: 159
code size: 44
code size: 16
code size: 68
code size: 4
code size: 30
code size: 4
code size: 16
code size: 6
code size: 13
code size: 144
code size: 450
code size: 78
code size: 6
code size: 12
code size: 4
code size: 57
code size: 150
code size: 13
code size: 77
code size: 3
code size: 3
code size: 18
code size: 3
code size: 177
code size: 3
code size: 8
code size: 50
code size: 7
code size: 18
code size: 27
code size: 224
code size: 143
code size: 72
code size: 252
code size: 354
code size: 46
code size: 341
code size: 6
code size: 3
code size: 27
code size: 40
code size: 24
code size: 335
code size: 38
code size: 4
code size: 16
code size: 10
code size: 16
code size: 27
code size: 39
code size: 281
code size: 730
code size: 352
code size: 216
code size: 78
code size: 26
code size: 35
code size: 42
code size: 73
code size: 64
code size: 627
code size: 22
code size: 29
code size: 66
code size: 105
code size: 198
code size: 113
code size: 149
code size: 58
code size: 17
code size: 382
code size: 30
code size: 36
code size: 35
code size: 24
code size: 111
code size: 1
code size: 39
code size: 1
code size: 7
code size: 2
code size: 19
code size: 21
code size: 66
code size: 54
code size: 18
code size: 6
code size: 15
code size: 1
code size: 3
code size: 21
code size: 274
code size: 43
code size: 27
code size: 87
code size: 43
code size: 1
code size: 34
code size: 40
code size: 1
code size: 55
code size: 63
code size: 93
code size: 26
code size: 219
code size: 88
code size: 26
code size: 133
code size: 19
code size: 44
code size: 12
code size: 953
code size: 37
code size: 7
code size: 6
code size: 36
code size: 940
code size: 5
code size: 8
code size: 168
code size: 3
code size: 20
code size: 34
code size: 51
code size: 6
code size: 333
code size: 35
code size: 36
code size: 19
code size: 39
code size: 1086
code size: 55
code size: 169
code size: 54
code size: 15
code size: 1332
code size: 33
code size: 49
code size: 44
code size: 51
code size: 48
code size: 33
code size: 1265
code size: 35
code size: 3
code size: 62
code size: 5
code size: 51
code size: 5
code size: 42
code size: 76
code size: 237
code size: 15
code size: 23
code size: 17
code size: 107
code size: 4
code size: 5
code size: 50
code size: 14
code size: 163
code size: 128
code size: 68
code size: 8
code size: 1661
code size: 41
code size: 36
code size: 1111
code size: 27
code size: 140
code size: 6
code size: 27
code size: 681
code size: 62
code size: 4
code size: 17
code size: 12
code size: 11
code size: 118
code size: 6
code size: 6
code size: 149
code size: 373
code size: 6
code size: 6
code size: 21
code size: 16
code size: 9
code size: 6
code size: 7
code size: 3
code size: 3
code size: 5
code size: 3
code size: 65
code size: 215
code size: 10
code size: 3
code size: 49
code size: 5
code size: 3
code size: 4
code size: 14
code size: 14
code size: 14
code size: 14
code size: 14
code size: 14
code size: 14
code size: 4
code size: 14
code size: 4
code size: 13
code size: 13
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\lua\Lotus\Interface\MapRedux.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  249

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
  3 [-]: NEWTABLE  R8 0 0       ; R8 := {}
  4 [-]: GETGLOBAL R9 K0        ; R9 := 0x7C282057
  5 [-]: LOADK     R10 K1       ; R10 := "/Lotus/Types/Lore/PrimaryCodexManifest"
  6 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x2C00D429
  8 [-]: LOADK     R11 K3       ; R11 := "/Lotus/Types/Keys/VeyHekKey"
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: GETGLOBAL R11 K2       ; R11 := 0x2C00D429
 11 [-]: LOADK     R12 K4       ; R12 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
 12 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 13 [-]: GETGLOBAL R12 K2       ; R12 := 0x2C00D429
 14 [-]: LOADK     R13 K5       ; R13 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
 15 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 16 [-]: NEWTABLE  R13 0 8      ; R13 := {}
 17 [-]: SETTABLE  R13 K6 K7    ; R13["forceUpdate3dElements"] := "0x0"
 18 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 19 [-]: SETTABLE  R13 K8 R14   ; R13["sky"] := R14
 20 [-]: SETTABLE  R13 K9 K10   ; R13["cameraSpot"] := nil
 21 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 22 [-]: CALL      R14 1 2      ; R14 := R14()
 23 [-]: SETTABLE  R13 K11 R14  ; R13["pos"] := R14
 24 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 25 [-]: CALL      R14 1 2      ; R14 := R14()
 26 [-]: SETTABLE  R13 K13 R14  ; R13["originPos"] := R14
 27 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 28 [-]: CALL      R14 1 2      ; R14 := R14()
 29 [-]: SETTABLE  R13 K14 R14  ; R13["origFacing"] := R14
 30 [-]: GETGLOBAL R14 K12      ; R14 := 0x221C9700
 31 [-]: CALL      R14 1 2      ; R14 := R14()
 32 [-]: SETTABLE  R13 K15 R14  ; R13["skyOrigin"] := R14
 33 [-]: SETTABLE  R13 K16 K17  ; R13["zoomLevel"] := 0
 34 [-]: NEWTABLE  R14 0 4      ; R14 := {}
 35 [-]: SETTABLE  R14 K18 K10  ; R14["Movie"] := nil
 36 [-]: SETTABLE  R14 K19 K7   ; R14["Open"] := "0x0"
 37 [-]: SETTABLE  R14 K20 K7   ; R14["DioOpen"] := "0x0"
 38 [-]: SETTABLE  R14 K21 K10  ; R14["mBossInfo"] := nil
 39 [-]: NEWTABLE  R15 0 8      ; R15 := {}
 40 [-]: SETTABLE  R15 K22 K10  ; R15["EpisodeStatus"] := nil
 41 [-]: SETTABLE  R15 K23 K10  ; R15["ResourceDrone"] := nil
 42 [-]: SETTABLE  R15 K24 K10  ; R15["Invasion"] := nil
 43 [-]: SETTABLE  R15 K25 K10  ; R15["VoidProjection"] := nil
 44 [-]: SETTABLE  R15 K26 K10  ; R15["Nightmare"] := nil
 45 [-]: SETTABLE  R15 K27 K10  ; R15["SoloMission"] := nil
 46 [-]: SETTABLE  R15 K28 K10  ; R15["JunctionTasks"] := nil
 47 [-]: SETTABLE  R15 K29 K10  ; R15["MultiMissionSelector"] := nil
 48 [-]: MOVE      R16 R0       ; R16 := R0
 49 [-]: LOADK     R17 K30      ; R17 := -1
 50 [-]: NEWTABLE  R18 0 0      ; R18 := {}
 51 [-]: NEWTABLE  R19 0 0      ; R19 := {}
 52 [-]: NEWTABLE  R20 0 0      ; R20 := {}
 53 [-]: NEWTABLE  R21 0 0      ; R21 := {}
 54 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 55 [-]: NEWTABLE  R23 0 0      ; R23 := {}
 56 [-]: NEWTABLE  R24 0 0      ; R24 := {}
 57 [-]: NEWTABLE  R25 0 4      ; R25 := {}
 58 [-]: SETTABLE  R25 K31 K32  ; R25["STARTING_ZOOM"] := -8
 59 [-]: SETTABLE  R25 K33 K34  ; R25["MAX_ZOOM"] := 4.5
 60 [-]: SETTABLE  R25 K35 K36  ; R25["MIN_ZOOM"] := -15
 61 [-]: SETTABLE  R25 K37 K32  ; R25["ZOOM_OUT_THRESHOLD"] := -8
 62 [-]: MOVE      R26 R0       ; R26 := R0
 63 [-]: LOADNIL   R27 R29      ; R27 := R28 := R29 := nil
 64 [-]: GETGLOBAL R30 K38      ; R30 := 0x70D42C02
 65 [-]: LOADK     R31 K39      ; R31 := 0.5
 66 [-]: LOADK     R32 K40      ; R32 := 0.15000000596046
 67 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
 68 [-]: GETGLOBAL R31 K38      ; R31 := 0x70D42C02
 69 [-]: LOADK     R32 K39      ; R32 := 0.5
 70 [-]: LOADK     R33 K40      ; R33 := 0.15000000596046
 71 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
 72 [-]: GETGLOBAL R32 K38      ; R32 := 0x70D42C02
 73 [-]: GETTABLE  R33 R25 K31  ; R33 := R25["STARTING_ZOOM"]
 74 [-]: LOADK     R34 K40      ; R34 := 0.15000000596046
 75 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
 76 [-]: LOADNIL   R33 R34      ; R33 := R34 := nil
 77 [-]: NEWTABLE  R35 0 0      ; R35 := {}
 78 [-]: NEWTABLE  R36 0 2      ; R36 := {}
 79 [-]: SETTABLE  R36 K41 K42  ; R36["Alpha"] := 1
 80 [-]: SETTABLE  R36 K43 K10  ; R36["Node"] := nil
 81 [-]: NEWTABLE  R37 0 2      ; R37 := {}
 82 [-]: SETTABLE  R37 K41 K42  ; R37["Alpha"] := 1
 83 [-]: SETTABLE  R37 K44 K10  ; R37["Region"] := nil
 84 [-]: LOADNIL   R38 R39      ; R38 := R39 := nil
 85 [-]: NEWTABLE  R40 0 7      ; R40 := {}
 86 [-]: SETTABLE  R40 K45 K7   ; R40["InSelectClick"] := "0x0"
 87 [-]: SETTABLE  R40 K44 K10  ; R40["Region"] := nil
 88 [-]: SETTABLE  R40 K46 K10  ; R40["RegionLabel"] := nil
 89 [-]: SETTABLE  R40 K43 K10  ; R40["Node"] := nil
 90 [-]: SETTABLE  R40 K47 K10  ; R40["UpdateTimer"] := nil
 91 [-]: SETTABLE  R40 K48 K10  ; R40["NodeTime"] := nil
 92 [-]: SETTABLE  R40 K49 K10  ; R40["mPrevHoverNode"] := nil
 93 [-]: LOADNIL   R41 R41      ; R41 := nil
 94 [-]: LOADK     R42 K50      ; R42 := 12
 95 [-]: LOADK     R43 K17      ; R43 := 0
 96 [-]: LOADK     R44 K51      ; R44 := 50
 97 [-]: LOADNIL   R45 R45      ; R45 := nil
 98 [-]: NEWTABLE  R46 0 2      ; R46 := {}
 99 [-]: SETTABLE  R46 K43 K10  ; R46["Node"] := nil
100 [-]: SETTABLE  R46 K52 K10  ; R46["SectorName"] := nil
101 [-]: LOADNIL   R47 R47      ; R47 := nil
102 [-]: NEWTABLE  R48 0 4      ; R48 := {}
103 [-]: SETTABLE  R48 K53 K10  ; R48["CountdownFx"] := nil
104 [-]: NEWTABLE  R49 0 0      ; R49 := {}
105 [-]: SETTABLE  R48 K54 R49  ; R48["PendingFx"] := R49
106 [-]: NEWTABLE  R49 0 0      ; R49 := {}
107 [-]: SETTABLE  R48 K55 R49  ; R48["QuestFx"] := R49
108 [-]: NEWTABLE  R49 0 0      ; R49 := {}
109 [-]: SETTABLE  R48 K56 R49  ; R48["SentientFx"] := R49
110 [-]: NEWTABLE  R49 0 2      ; R49 := {}
111 [-]: SETTABLE  R49 K52 K57  ; R49["SectorName"] := ""
112 [-]: SETTABLE  R49 K58 K57  ; R49["MissionTier"] := ""
113 [-]: NEWTABLE  R50 0 3      ; R50 := {}
114 [-]: SETTABLE  R50 K52 K57  ; R50["SectorName"] := ""
115 [-]: SETTABLE  R50 K59 K17  ; R50["Difficulty"] := 0
116 [-]: SETTABLE  R50 K60 K10  ; R50["MovieInst"] := nil
117 [-]: LOADNIL   R51 R51      ; R51 := nil
118 [-]: NEWTABLE  R52 0 6      ; R52 := {}
119 [-]: SETTABLE  R52 K61 K62  ; R52["mBaseHeight"] := 208
120 [-]: SETTABLE  R52 K63 K17  ; R52["BgWidth"] := 0
121 [-]: SETTABLE  R52 K64 K17  ; R52["BgHeight"] := 0
122 [-]: SETTABLE  R52 K65 K17  ; R52["InitLocationPicHeight"] := 0
123 [-]: SETTABLE  R52 K66 K17  ; R52["InitLocationPicYPos"] := 0
124 [-]: GETGLOBAL R53 K38      ; R53 := 0x70D42C02
125 [-]: LOADK     R54 K30      ; R54 := -1
126 [-]: LOADK     R55 K40      ; R55 := 0.15000000596046
127 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
128 [-]: SETTABLE  R52 K67 R53  ; R52["mSmoothY"] := R53
129 [-]: NEWTABLE  R53 0 0      ; R53 := {}
130 [-]: NEWTABLE  R54 0 0      ; R54 := {}
131 [-]: NEWTABLE  R55 0 6      ; R55 := {}
132 [-]: NEWTABLE  R56 0 0      ; R56 := {}
133 [-]: SETTABLE  R55 K68 R56  ; R55["Settings"] := R56
134 [-]: SETTABLE  R55 K69 K42  ; R55["CurrentIndex"] := 1
135 [-]: SETTABLE  R55 K70 K10  ; R55["SelectorList"] := nil
136 [-]: SETTABLE  R55 K71 K17  ; R55["InitY"] := 0
137 [-]: SETTABLE  R55 K72 K10  ; R55["ExpansionTimerId"] := nil
138 [-]: SETTABLE  R55 K73 K7   ; R55["Expanded"] := "0x0"
139 [-]: NEWTABLE  R56 0 0      ; R56 := {}
140 [-]: NEWTABLE  R57 0 0      ; R57 := {}
141 [-]: MOVE      R58 R0       ; R58 := R0
142 [-]: MOVE      R59 R0       ; R59 := R0
143 [-]: NEWTABLE  R60 0 1      ; R60 := {}
144 [-]: SETTABLE  R60 K74 K7   ; R60["Playing"] := "0x0"
145 [-]: LOADNIL   R61 R61      ; R61 := nil
146 [-]: MOVE      R62 R0       ; R62 := R0
147 [-]: NEWTABLE  R63 0 4      ; R63 := {}
148 [-]: SETTABLE  R63 K75 K57  ; R63["sectorName"] := ""
149 [-]: SETTABLE  R63 K76 K57  ; R63["sectorLoc"] := ""
150 [-]: SETTABLE  R63 K77 K78  ; R63["mBusyPlayerLoad"] := 0.69999998807907
151 [-]: SETTABLE  R63 K79 K80  ; R63["mAutoJoinIfNotBusy"] := "0x1"
152 [-]: MOVE      R64 R1       ; R64 := R1
153 [-]: NEWTABLE  R65 0 0      ; R65 := {}
154 [-]: NEWTABLE  R66 0 2      ; R66 := {}
155 [-]: SETTABLE  R66 K43 K10  ; R66["Node"] := nil
156 [-]: SETTABLE  R66 K81 K30  ; R66["Timer"] := -1
157 [-]: NEWTABLE  R67 0 3      ; R67 := {}
158 [-]: SETTABLE  R67 K82 K10  ; R67["Previous"] := nil
159 [-]: SETTABLE  R67 K83 K10  ; R67["Target"] := nil
160 [-]: GETGLOBAL R68 K38      ; R68 := 0x70D42C02
161 [-]: LOADK     R69 K42      ; R69 := 1
162 [-]: LOADK     R70 K85      ; R70 := 0.20000000298023
163 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
164 [-]: SETTABLE  R67 K84 R68  ; R67["Prop"] := R68
165 [-]: NEWTABLE  R68 0 0      ; R68 := {}
166 [-]: GETGLOBAL R69 K38      ; R69 := 0x70D42C02
167 [-]: LOADK     R70 K42      ; R70 := 1
168 [-]: LOADK     R71 K86      ; R71 := 0.17499999701977
169 [-]: CALL      R69 3 2      ; R69 := R69(R70,R71)
170 [-]: GETGLOBAL R70 K38      ; R70 := 0x70D42C02
171 [-]: LOADK     R71 K17      ; R71 := 0
172 [-]: LOADK     R72 K86      ; R72 := 0.17499999701977
173 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
174 [-]: NEWTABLE  R71 0 0      ; R71 := {}
175 [-]: NEWTABLE  R72 0 0      ; R72 := {}
176 [-]: LOADK     R73 K87      ; R73 := 10
177 [-]: LOADNIL   R74 R74      ; R74 := nil
178 [-]: LOADK     R75 K57      ; R75 := ""
179 [-]: MOVE      R76 R0       ; R76 := R0
180 [-]: LOADNIL   R77 R78      ; R77 := R78 := nil
181 [-]: NEWTABLE  R79 0 4      ; R79 := {}
182 [-]: SETTABLE  R79 K88 K7   ; R79["Active"] := "0x0"
183 [-]: SETTABLE  R79 K89 K10  ; R79["SelectionNode"] := nil
184 [-]: SETTABLE  R79 K90 K10  ; R79["Button"] := nil
185 [-]: NEWTABLE  R80 0 0      ; R80 := {}
186 [-]: SETTABLE  R79 K91 R80  ; R79["Regions"] := R80
187 [-]: NEWTABLE  R80 0 0      ; R80 := {}
188 [-]: NEWTABLE  R81 0 19     ; R81 := {}
189 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
190 [-]: CALL      R82 1 2      ; R82 := R82()
191 [-]: SETTABLE  R81 K92 R82  ; R81["EMPTY"] := R82
192 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
193 [-]: LOADK     R83 K95      ; R83 := "AlphaAtten"
194 [-]: CALL      R82 2 2      ; R82 := R82(R83)
195 [-]: SETTABLE  R81 K94 R82  ; R81["ALPHA_ATTEN"] := R82
196 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
197 [-]: LOADK     R83 K97      ; R83 := "DESTROYED"
198 [-]: CALL      R82 2 2      ; R82 := R82(R83)
199 [-]: SETTABLE  R81 K96 R82  ; R81["DESTROYED_NODE_TAG"] := R82
200 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
201 [-]: LOADK     R83 K99      ; R83 := "RECONSTRUCTION"
202 [-]: CALL      R82 2 2      ; R82 := R82(R83)
203 [-]: SETTABLE  R81 K98 R82  ; R81["RECONSTRUCTION_NODE_TAG"] := R82
204 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
205 [-]: LOADK     R83 K101     ; R83 := "UnderConstruction"
206 [-]: CALL      R82 2 2      ; R82 := R82(R83)
207 [-]: SETTABLE  R81 K100 R82 ; R81["UNDER_CONSTRUCTION_NODE_TAG"] := R82
208 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
209 [-]: LOADK     R83 K103     ; R83 := "EarthToMoonShortcut"
210 [-]: CALL      R82 2 2      ; R82 := R82(R83)
211 [-]: SETTABLE  R81 K102 R82 ; R81["MOON_SHORTCUT_TAG"] := R82
212 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
213 [-]: LOADK     R83 K105     ; R83 := "UnlitAtten"
214 [-]: CALL      R82 2 2      ; R82 := R82(R83)
215 [-]: SETTABLE  R81 K104 R82 ; R81["UNLIT_ATTEN"] := R82
216 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
217 [-]: LOADK     R83 K107     ; R83 := "StarChartRoot"
218 [-]: CALL      R82 2 2      ; R82 := R82(R83)
219 [-]: SETTABLE  R81 K106 R82 ; R81["STAR_CHART_ROOT"] := R82
220 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
221 [-]: LOADK     R83 K109     ; R83 := "Player"
222 [-]: CALL      R82 2 2      ; R82 := R82(R83)
223 [-]: SETTABLE  R81 K108 R82 ; R81["PLAYER"] := R82
224 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
225 [-]: LOADK     R83 K111     ; R83 := "PlayerOperator"
226 [-]: CALL      R82 2 2      ; R82 := R82(R83)
227 [-]: SETTABLE  R81 K110 R82 ; R81["PLAYER_OPERATOR"] := R82
228 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
229 [-]: LOADK     R83 K113     ; R83 := "PlayerLight"
230 [-]: CALL      R82 2 2      ; R82 := R82(R83)
231 [-]: SETTABLE  R81 K112 R82 ; R81["PLAYER_LIGHT"] := R82
232 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
233 [-]: LOADK     R83 K115     ; R83 := "SkyCube"
234 [-]: CALL      R82 2 2      ; R82 := R82(R83)
235 [-]: SETTABLE  R81 K114 R82 ; R81["SKY_CUBE"] := R82
236 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
237 [-]: LOADK     R83 K117     ; R83 := "VoidT2"
238 [-]: CALL      R82 2 2      ; R82 := R82(R83)
239 [-]: SETTABLE  R81 K116 R82 ; R81["VOIDT2"] := R82
240 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
241 [-]: LOADK     R83 K119     ; R83 := "VoidT3"
242 [-]: CALL      R82 2 2      ; R82 := R82(R83)
243 [-]: SETTABLE  R81 K118 R82 ; R81["VOIDT3"] := R82
244 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
245 [-]: LOADK     R83 K121     ; R83 := "VoidT4"
246 [-]: CALL      R82 2 2      ; R82 := R82(R83)
247 [-]: SETTABLE  R81 K120 R82 ; R81["VOIDT4"] := R82
248 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
249 [-]: LOADK     R83 K123     ; R83 := "VoidT5"
250 [-]: CALL      R82 2 2      ; R82 := R82(R83)
251 [-]: SETTABLE  R81 K122 R82 ; R81["VOIDT5"] := R82
252 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
253 [-]: LOADK     R83 K124     ; R83 := "GAME_C1_HEAD1"
254 [-]: CALL      R82 2 2      ; R82 := R82(R83)
255 [-]: SETTABLE  R81 K124 R82 ; R81["GAME_C1_HEAD1"] := R82
256 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
257 [-]: LOADK     R83 K126     ; R83 := "MacheteMayhem"
258 [-]: CALL      R82 2 2      ; R82 := R82(R83)
259 [-]: SETTABLE  R81 K125 R82 ; R81["MACHETE_MAYHEM"] := R82
260 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
261 [-]: LOADK     R83 K128     ; R83 := "TennoConRelay"
262 [-]: CALL      R82 2 2      ; R82 := R82(R83)
263 [-]: SETTABLE  R81 K127 R82 ; R81["TENNOCON_RELAY"] := R82
264 [-]: NEWTABLE  R82 0 0      ; R82 := {}
265 [-]: SETTABLE  R81 K129 R82 ; R81["INFLUENCE_MAP"] := R82
266 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
267 [-]: LOADK     R83 K131     ; R83 := "SolNode973"
268 [-]: CALL      R82 2 2      ; R82 := R82(R83)
269 [-]: SETTABLE  R81 K130 R82 ; R81["FIGHT_NODE_TAG"] := R82
270 [-]: GETGLOBAL R82 K93      ; R82 := 0xEC274B1A
271 [-]: LOADK     R83 K133     ; R83 := "SquadLinkEvent"
272 [-]: CALL      R82 2 2      ; R82 := R82(R83)
273 [-]: SETTABLE  R81 K132 R82 ; R81["SQUAD_LINK_EVENT"] := R82
274 [-]: NEWTABLE  R82 0 14     ; R82 := {}
275 [-]: GETGLOBAL R83 K135     ; R83 := 0x994A1A7
276 [-]: LOADK     R84 K17      ; R84 := 0
277 [-]: LOADK     R85 K136     ; R85 := 8
278 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
279 [-]: SETTABLE  R82 K134 R83 ; R82["LINE_CULL_DISTANCE"] := R83
280 [-]: GETGLOBAL R83 K135     ; R83 := 0x994A1A7
281 [-]: LOADK     R84 K17      ; R84 := 0
282 [-]: LOADK     R85 K138     ; R85 := 17
283 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
284 [-]: SETTABLE  R82 K137 R83 ; R82["SHORTCUT_CULL_DISTANCE"] := R83
285 [-]: SETTABLE  R82 K139 K140; R82["PLANET_UNIT_MULTIPLIER"] := 0.14259999990463
286 [-]: SETTABLE  R82 K141 K142; R82["INACTIVE_NODE_ALPHA"] := 100
287 [-]: SETTABLE  R82 K143 K142; R82["LABEL_ALPHA"] := 100
288 [-]: SETTABLE  R82 K144 K145; R82["DECO_SCALE_MULTIPLIER"] := 2
289 [-]: GETGLOBAL R83 K135     ; R83 := 0x994A1A7
290 [-]: LOADK     R84 K147     ; R84 := -2
291 [-]: LOADK     R85 K17      ; R85 := 0
292 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
293 [-]: SETTABLE  R82 K146 R83 ; R82["LAYER_1_RANGE"] := R83
294 [-]: GETGLOBAL R83 K135     ; R83 := 0x994A1A7
295 [-]: LOADK     R84 K147     ; R84 := -2
296 [-]: LOADK     R85 K145     ; R85 := 2
297 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
298 [-]: SETTABLE  R82 K148 R83 ; R82["LAYER_2_RANGE"] := R83
299 [-]: GETGLOBAL R83 K135     ; R83 := 0x994A1A7
300 [-]: LOADK     R84 K150     ; R84 := -12
301 [-]: LOADK     R85 K17      ; R85 := 0
302 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
303 [-]: SETTABLE  R82 K149 R83 ; R82["SHORTCUT_RANGE"] := R83
304 [-]: GETGLOBAL R83 K135     ; R83 := 0x994A1A7
305 [-]: LOADK     R84 K152     ; R84 := -20
306 [-]: LOADK     R85 K17      ; R85 := 0
307 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
308 [-]: SETTABLE  R82 K151 R83 ; R82["PLANET_VIS_RANGE"] := R83
309 [-]: GETGLOBAL R83 K12      ; R83 := 0x221C9700
310 [-]: LOADK     R84 K17      ; R84 := 0
311 [-]: LOADK     R85 K39      ; R85 := 0.5
312 [-]: LOADK     R86 K17      ; R86 := 0
313 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
314 [-]: SETTABLE  R82 K153 R83 ; R82["CAMERA_OFFSET"] := R83
315 [-]: GETGLOBAL R83 K12      ; R83 := 0x221C9700
316 [-]: LOADK     R84 K17      ; R84 := 0
317 [-]: LOADK     R85 K17      ; R85 := 0
318 [-]: LOADK     R86 K42      ; R86 := 1
319 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
320 [-]: SETTABLE  R82 K154 R83 ; R82["CAMERA_FOCUS_DIR"] := R83
321 [-]: GETGLOBAL R83 K156     ; R83 := 0x1E4F6281
322 [-]: LOADK     R84 K17      ; R84 := 0
323 [-]: LOADK     R85 K157     ; R85 := 90
324 [-]: LOADK     R86 K17      ; R86 := 0
325 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
326 [-]: SETTABLE  R82 K155 R83 ; R82["RING_ROTATION"] := R83
327 [-]: SETTABLE  R82 K158 K159; R82["MAX_SHADER_INFLUENCES"] := 32
328 [-]: NEWTABLE  R83 5 0      ; R83 := {}
329 [-]: LOADK     R84 K160     ; R84 := "/Lotus/Language/Clan/Clan_Tier1"
330 [-]: LOADK     R85 K161     ; R85 := "/Lotus/Language/Clan/Clan_Tier2"
331 [-]: LOADK     R86 K162     ; R86 := "/Lotus/Language/Clan/Clan_Tier3"
332 [-]: LOADK     R87 K163     ; R87 := "/Lotus/Language/Clan/Clan_Tier4"
333 [-]: LOADK     R88 K164     ; R88 := "/Lotus/Language/Clan/Clan_Tier5"
334 [-]: SETLIST   R83 5 1      ; R83[(1-1)*FPF+i] := R(83+i), 1 <= i <= 5
335 [-]: LOADNIL   R84 R85      ; R84 := R85 := nil
336 [-]: NEWTABLE  R86 0 3      ; R86 := {}
337 [-]: SETTABLE  R86 K165 K7  ; R86["mShiftDown"] := "0x0"
338 [-]: SETTABLE  R86 K166 K7  ; R86["mControlDown"] := "0x0"
339 [-]: SETTABLE  R86 K167 K7  ; R86["mAltDown"] := "0x0"
340 [-]: MOVE      R87 R0       ; R87 := R0
341 [-]: NEWTABLE  R88 0 8      ; R88 := {}
342 [-]: SETTABLE  R88 K168 K42 ; R88["READ_ONLY"] := 1
343 [-]: SETTABLE  R88 K169 K145; R88["EDIT_NODES"] := 2
344 [-]: SETTABLE  R88 K170 K171; R88["EDIT_EDGES"] := 3
345 [-]: SETTABLE  R88 K172 K173; R88["EDIT_NODE_DECOS"] := 4
346 [-]: SETTABLE  R88 K174 K175; R88["EDIT_REGIONS"] := 5
347 [-]: SETTABLE  R88 K176 K177; R88["EDIT_REGION_FRAMING"] := 6
348 [-]: SETTABLE  R88 K178 K179; R88["EDIT_SHORTCUT_CONTROL_POINTS"] := 7
349 [-]: SETTABLE  R88 K180 K136; R88["MAX_VALUE"] := 8
350 [-]: GETTABLE  R89 R88 K168 ; R89 := R88["READ_ONLY"]
351 [-]: LOADNIL   R90 R91      ; R90 := R91 := nil
352 [-]: GETGLOBAL R92 K181     ; R92 := 0x329BDC44
353 [-]: LOADK     R93 K182     ; R93 := "EE.Interface.Utilities"
354 [-]: CALL      R92 2 2      ; R92 := R92(R93)
355 [-]: GETGLOBAL R93 K181     ; R93 := 0x329BDC44
356 [-]: LOADK     R94 K183     ; R94 := "Lotus.Interface.UIUtilities"
357 [-]: CALL      R93 2 2      ; R93 := R93(R94)
358 [-]: GETGLOBAL R94 K181     ; R94 := 0x329BDC44
359 [-]: LOADK     R95 K184     ; R95 := "Lotus.Interface.LotusUtilities"
360 [-]: CALL      R94 2 2      ; R94 := R94(R95)
361 [-]: GETGLOBAL R95 K181     ; R95 := 0x329BDC44
362 [-]: LOADK     R96 K185     ; R96 := "Lotus.Interface.FortressUtilities"
363 [-]: CALL      R95 2 2      ; R95 := R95(R96)
364 [-]: GETGLOBAL R96 K181     ; R96 := 0x329BDC44
365 [-]: LOADK     R97 K186     ; R97 := "Lotus.Interface.Libs.DioramaLoader"
366 [-]: CALL      R96 2 2      ; R96 := R96(R97)
367 [-]: GETGLOBAL R97 K181     ; R97 := 0x329BDC44
368 [-]: LOADK     R98 K187     ; R98 := "Lotus.Interface.LotusNetworkUtilities"
369 [-]: CALL      R97 2 2      ; R97 := R97(R98)
370 [-]: GETGLOBAL R98 K181     ; R98 := 0x329BDC44
371 [-]: LOADK     R99 K188     ; R99 := "Lotus.Interface.MissionRequirementUtilities"
372 [-]: CALL      R98 2 2      ; R98 := R98(R99)
373 [-]: GETGLOBAL R99 K181     ; R99 := 0x329BDC44
374 [-]: LOADK     R100 K189    ; R100 := "Lotus.Scripts.Nemesis.NemesisGenerator"
375 [-]: CALL      R99 2 2      ; R99 := R99(R100)
376 [-]: GETGLOBAL R100 K181    ; R100 := 0x329BDC44
377 [-]: LOADK     R101 K190    ; R101 := "Lotus.Interface.WorldStateUtilities"
378 [-]: CALL      R100 2 2     ; R100 := R100(R101)
379 [-]: LOADNIL   R101 R103    ; R101 := R102 := R103 := nil
380 [-]: GETGLOBAL R104 K38     ; R104 := 0x70D42C02
381 [-]: LOADK     R105 K17     ; R105 := 0
382 [-]: LOADK     R106 K40     ; R106 := 0.15000000596046
383 [-]: CALL      R104 3 2     ; R104 := R104(R105,R106)
384 [-]: GETGLOBAL R105 K38     ; R105 := 0x70D42C02
385 [-]: LOADK     R106 K17     ; R106 := 0
386 [-]: LOADK     R107 K40     ; R107 := 0.15000000596046
387 [-]: CALL      R105 3 2     ; R105 := R105(R106,R107)
388 [-]: LOADNIL   R106 R106    ; R106 := nil
389 [-]: NEWTABLE  R107 2 0     ; R107 := {}
390 [-]: GETGLOBAL R108 K38     ; R108 := 0x70D42C02
391 [-]: LOADK     R109 K17     ; R109 := 0
392 [-]: LOADK     R110 K42     ; R110 := 1
393 [-]: CALL      R108 3 2     ; R108 := R108(R109,R110)
394 [-]: GETGLOBAL R109 K38     ; R109 := 0x70D42C02
395 [-]: LOADK     R110 K17     ; R110 := 0
396 [-]: LOADK     R111 K42     ; R111 := 1
397 [-]: CALL      R109 3 2     ; R109 := R109(R110,R111)
398 [-]: GETGLOBAL R110 K38     ; R110 := 0x70D42C02
399 [-]: LOADK     R111 K17     ; R111 := 0
400 [-]: LOADK     R112 K42     ; R112 := 1
401 [-]: CALL      R110 3 0     ; R110,... := R110(R111,R112)
402 [-]: SETLIST   R107 0 1     ; R107[(1-1)*FPF+i] := R(107+i), 1 <= i <= 0
403 [-]: GETGLOBAL R108 K191    ; R108 := 0xB5A59043
404 [-]: CALL      R108 1 2     ; R108 := R108()
405 [-]: LOADNIL   R109 R110    ; R109 := R110 := nil
406 [-]: LOADK     R111 K17     ; R111 := 0
407 [-]: MOVE      R112 R0      ; R112 := R0
408 [-]: LOADK     R113 K17     ; R113 := 0
409 [-]: LOADNIL   R114 R122    ; R114 := R115 := R116 := R117 := R118 := R119 := R120 := R121 := R122 := nil
410 [-]: NEWTABLE  R123 0 9     ; R123 := {}
411 [-]: SETTABLE  R123 K192 K7 ; R123["IsVisible"] := "0x0"
412 [-]: SETTABLE  R123 K193 K17; R123["X"] := 0
413 [-]: SETTABLE  R123 K194 K17; R123["Y"] := 0
414 [-]: SETTABLE  R123 K195 K42; R123["SpeedMultiplier"] := 1
415 [-]: SETTABLE  R123 K196 K17; R123["MinX"] := 0
416 [-]: SETTABLE  R123 K197 K17; R123["MinY"] := 0
417 [-]: SETTABLE  R123 K198 K17; R123["MaxX"] := 0
418 [-]: SETTABLE  R123 K199 K17; R123["MaxY"] := 0
419 [-]: SETTABLE  R123 K200 K17; R123["MouseMoves"] := 0
420 [-]: LOADNIL   R124 R125    ; R124 := R125 := nil
421 [-]: NEWTABLE  R126 0 5     ; R126 := {}
422 [-]: SETTABLE  R126 K201 K202; R126["SpaceMultiplier"] := 0.36000001430511
423 [-]: SETTABLE  R126 K203 K204; R126["ZoomedMultiplier"] := 0.28000000119209
424 [-]: SETTABLE  R126 K205 K40; R126["SpaceHoveringMultiplier"] := 0.15000000596046
425 [-]: SETTABLE  R126 K206 K207; R126["ZoomedHoveringMultiplier"] := 0.10000000149012
426 [-]: SETTABLE  R126 K208 K42; R126["AspectRatio"] := 1
427 [-]: NEWTABLE  R127 0 10    ; R127 := {}
428 [-]: SETTABLE  R127 K209 K17; R127["Velocity"] := 0
429 [-]: SETTABLE  R127 K210 K211; R127["LoopTime"] := 192800
430 [-]: SETTABLE  R127 K212 K213; R127["Tag"] := "/Lotus/Language/Locations/Fortress"
431 [-]: SETTABLE  R127 K44 K10 ; R127["Region"] := nil
432 [-]: SETTABLE  R127 K214 K7 ; R127["ShowPath"] := "0x0"
433 [-]: NEWTABLE  R128 0 0     ; R128 := {}
434 [-]: SETTABLE  R127 K215 R128; R127["Splines"] := R128
435 [-]: NEWTABLE  R128 0 0     ; R128 := {}
436 [-]: SETTABLE  R127 K216 R128; R127["Sectors"] := R128
437 [-]: NEWTABLE  R128 0 0     ; R128 := {}
438 [-]: SETTABLE  R127 K217 R128; R127["Nodes"] := R128
439 [-]: SETTABLE  R127 K218 K10; R127["SubLabelIndex"] := nil
440 [-]: SETTABLE  R127 K219 K10; R127["SplinePoints"] := nil
441 [-]: MOVE      R128 R0      ; R128 := R0
442 [-]: NEWTABLE  R129 0 0     ; R129 := {}
443 [-]: MOVE      R130 R0      ; R130 := R0
444 [-]: CLOSURE   R131 0       ; R131 := closure(Function #1)
445 [-]: MOVE      R0 R40       ; R0 := R40
446 [-]: MOVE      R0 R92       ; R0 := R92
447 [-]: MOVE      R0 R38       ; R0 := R38
448 [-]: MOVE      R0 R126      ; R0 := R126
449 [-]: MOVE      R0 R123      ; R0 := R123
450 [-]: CLOSURE   R132 1       ; R132 := closure(Function #2)
451 [-]: CLOSURE   R133 2       ; R133 := closure(Function #3)
452 [-]: MOVE      R0 R123      ; R0 := R123
453 [-]: MOVE      R0 R92       ; R0 := R92
454 [-]: MOVE      R0 R132      ; R0 := R132
455 [-]: MOVE      R0 R0        ; R0 := R0
456 [-]: MOVE      R0 R126      ; R0 := R126
457 [-]: CLOSURE   R134 3       ; R134 := closure(Function #4)
458 [-]: CLOSURE   R135 4       ; R135 := closure(Function #5)
459 [-]: MOVE      R0 R92       ; R0 := R92
460 [-]: CLOSURE   R136 5       ; R136 := closure(Function #6)
461 [-]: CLOSURE   R137 6       ; R137 := closure(Function #7)
462 [-]: CLOSURE   R138 7       ; R138 := closure(Function #8)
463 [-]: MOVE      R0 R89       ; R0 := R89
464 [-]: MOVE      R0 R88       ; R0 := R88
465 [-]: MOVE      R0 R90       ; R0 := R90
466 [-]: MOVE      R0 R86       ; R0 := R86
467 [-]: MOVE      R0 R75       ; R0 := R75
468 [-]: CLOSURE   R139 8       ; R139 := closure(Function #9)
469 [-]: MOVE      R0 R19       ; R0 := R19
470 [-]: MOVE      R0 R138      ; R0 := R138
471 [-]: LOADK     R140 K57     ; R140 := ""
472 [-]: CLOSURE   R141 9       ; R141 := closure(Function #10)
473 [-]: MOVE      R0 R60       ; R0 := R60
474 [-]: MOVE      R0 R140      ; R0 := R140
475 [-]: CLOSURE   R142 10      ; R142 := closure(Function #11)
476 [-]: MOVE      R0 R140      ; R0 := R140
477 [-]: MOVE      R0 R60       ; R0 := R60
478 [-]: CLOSURE   R143 11      ; R143 := closure(Function #12)
479 [-]: MOVE      R0 R92       ; R0 := R92
480 [-]: MOVE      R0 R60       ; R0 := R60
481 [-]: MOVE      R0 R94       ; R0 := R94
482 [-]: CLOSURE   R144 12      ; R144 := closure(Function #13)
483 [-]: MOVE      R0 R142      ; R0 := R142
484 [-]: SETGLOBAL R144 K220    ; OnTransmissionDone := R144
485 [-]: SETGLOBAL R144 K221    ; 0x72BF0075 := R144
486 [-]: CLOSURE   R144 13      ; R144 := closure(Function #14)
487 [-]: MOVE      R0 R61       ; R0 := R61
488 [-]: MOVE      R0 R101      ; R0 := R101
489 [-]: MOVE      R0 R40       ; R0 := R40
490 [-]: MOVE      R0 R144      ; R0 := R144
491 [-]: MOVE      R0 R14       ; R0 := R14
492 [-]: MOVE      R0 R92       ; R0 := R92
493 [-]: MOVE      R0 R141      ; R0 := R141
494 [-]: CLOSURE   R145 14      ; R145 := closure(Function #15)
495 [-]: MOVE      R0 R90       ; R0 := R90
496 [-]: CLOSURE   R146 15      ; R146 := closure(Function #16)
497 [-]: MOVE      R0 R82       ; R0 := R82
498 [-]: MOVE      R0 R89       ; R0 := R89
499 [-]: MOVE      R0 R88       ; R0 := R88
500 [-]: MOVE      R0 R2        ; R0 := R2
501 [-]: MOVE      R0 R90       ; R0 := R90
502 [-]: MOVE      R0 R145      ; R0 := R145
503 [-]: CLOSURE   R147 16      ; R147 := closure(Function #17)
504 [-]: MOVE      R0 R56       ; R0 := R56
505 [-]: MOVE      R0 R82       ; R0 := R82
506 [-]: CLOSURE   R148 17      ; R148 := closure(Function #18)
507 [-]: MOVE      R0 R89       ; R0 := R89
508 [-]: MOVE      R0 R88       ; R0 := R88
509 [-]: MOVE      R0 R147      ; R0 := R147
510 [-]: MOVE      R0 R146      ; R0 := R146
511 [-]: MOVE      R0 R139      ; R0 := R139
512 [-]: CLOSURE   R149 18      ; R149 := closure(Function #19)
513 [-]: MOVE      R0 R23       ; R0 := R23
514 [-]: MOVE      R0 R24       ; R0 := R24
515 [-]: MOVE      R0 R76       ; R0 := R76
516 [-]: MOVE      R0 R1        ; R0 := R1
517 [-]: MOVE      R0 R94       ; R0 := R94
518 [-]: MOVE      R0 R5        ; R0 := R5
519 [-]: MOVE      R0 R87       ; R0 := R87
520 [-]: MOVE      R0 R20       ; R0 := R20
521 [-]: MOVE      R0 R4        ; R0 := R4
522 [-]: MOVE      R0 R2        ; R0 := R2
523 [-]: CLOSURE   R150 19      ; R150 := closure(Function #20)
524 [-]: MOVE      R0 R17       ; R0 := R17
525 [-]: NEWTABLE  R151 0 0     ; R151 := {}
526 [-]: CLOSURE   R152 20      ; R152 := closure(Function #21)
527 [-]: MOVE      R0 R81       ; R0 := R81
528 [-]: MOVE      R0 R82       ; R0 := R82
529 [-]: MOVE      R0 R151      ; R0 := R151
530 [-]: MOVE      R0 R20       ; R0 := R20
531 [-]: MOVE      R0 R92       ; R0 := R92
532 [-]: MOVE      R0 R2        ; R0 := R2
533 [-]: MOVE      R0 R4        ; R0 := R4
534 [-]: CLOSURE   R153 21      ; R153 := closure(Function #22)
535 [-]: MOVE      R0 R92       ; R0 := R92
536 [-]: MOVE      R0 R25       ; R0 := R25
537 [-]: MOVE      R0 R32       ; R0 := R32
538 [-]: MOVE      R0 R151      ; R0 := R151
539 [-]: MOVE      R0 R82       ; R0 := R82
540 [-]: MOVE      R0 R81       ; R0 := R81
541 [-]: CLOSURE   R154 22      ; R154 := closure(Function #23)
542 [-]: CLOSURE   R155 23      ; R155 := closure(Function #24)
543 [-]: MOVE      R0 R80       ; R0 := R80
544 [-]: MOVE      R0 R92       ; R0 := R92
545 [-]: CLOSURE   R156 24      ; R156 := closure(Function #25)
546 [-]: MOVE      R0 R52       ; R0 := R52
547 [-]: MOVE      R0 R80       ; R0 := R80
548 [-]: MOVE      R0 R92       ; R0 := R92
549 [-]: MOVE      R0 R101      ; R0 := R101
550 [-]: MOVE      R0 R94       ; R0 := R94
551 [-]: MOVE      R0 R119      ; R0 := R119
552 [-]: MOVE      R0 R120      ; R0 := R120
553 [-]: MOVE      R0 R20       ; R0 := R20
554 [-]: MOVE      R0 R1        ; R0 := R1
555 [-]: MOVE      R0 R98       ; R0 := R98
556 [-]: MOVE      R0 R15       ; R0 := R15
557 [-]: MOVE      R0 R46       ; R0 := R46
558 [-]: MOVE      R0 R62       ; R0 := R62
559 [-]: MOVE      R0 R121      ; R0 := R121
560 [-]: CLOSURE   R157 25      ; R157 := closure(Function #26)
561 [-]: MOVE      R0 R55       ; R0 := R55
562 [-]: CLOSURE   R158 26      ; R158 := closure(Function #27)
563 [-]: MOVE      R0 R55       ; R0 := R55
564 [-]: MOVE      R0 R94       ; R0 := R94
565 [-]: MOVE      R0 R92       ; R0 := R92
566 [-]: MOVE      R0 R80       ; R0 := R80
567 [-]: MOVE      R0 R101      ; R0 := R101
568 [-]: MOVE      R0 R157      ; R0 := R157
569 [-]: MOVE      R0 R93       ; R0 := R93
570 [-]: CLOSURE   R159 27      ; R159 := closure(Function #28)
571 [-]: MOVE      R0 R79       ; R0 := R79
572 [-]: MOVE      R0 R154      ; R0 := R154
573 [-]: MOVE      R0 R78       ; R0 := R78
574 [-]: MOVE      R0 R92       ; R0 := R92
575 [-]: MOVE      R0 R117      ; R0 := R117
576 [-]: MOVE      R0 R94       ; R0 := R94
577 [-]: MOVE      R0 R58       ; R0 := R58
578 [-]: MOVE      R0 R87       ; R0 := R87
579 [-]: MOVE      R0 R130      ; R0 := R130
580 [-]: MOVE      R0 R127      ; R0 := R127
581 [-]: MOVE      R0 R95       ; R0 := R95
582 [-]: MOVE      R0 R22       ; R0 := R22
583 [-]: MOVE      R0 R101      ; R0 := R101
584 [-]: MOVE      R0 R0        ; R0 := R0
585 [-]: MOVE      R0 R133      ; R0 := R133
586 [-]: MOVE      R0 R149      ; R0 := R149
587 [-]: MOVE      R0 R75       ; R0 := R75
588 [-]: MOVE      R0 R14       ; R0 := R14
589 [-]: MOVE      R0 R155      ; R0 := R155
590 [-]: MOVE      R0 R156      ; R0 := R156
591 [-]: MOVE      R0 R158      ; R0 := R158
592 [-]: MOVE      R0 R26       ; R0 := R26
593 [-]: MOVE      R0 R148      ; R0 := R148
594 [-]: MOVE      R0 R88       ; R0 := R88
595 [-]: MOVE      R0 R150      ; R0 := R150
596 [-]: MOVE      R0 R124      ; R0 := R124
597 [-]: CLOSURE   R160 28      ; R160 := closure(Function #29)
598 [-]: MOVE      R0 R159      ; R0 := R159
599 [-]: SETGLOBAL R160 K222    ; Initialize := R160
600 [-]: SETGLOBAL R160 K223    ; 0x62648036 := R160
601 [-]: CLOSURE   R160 29      ; R160 := closure(Function #30)
602 [-]: MOVE      R0 R94       ; R0 := R94
603 [-]: CLOSURE   R161 30      ; R161 := closure(Function #31)
604 [-]: MOVE      R0 R14       ; R0 := R14
605 [-]: MOVE      R0 R66       ; R0 := R66
606 [-]: MOVE      R0 R160      ; R0 := R160
607 [-]: MOVE      R0 R15       ; R0 := R15
608 [-]: MOVE      R0 R50       ; R0 := R50
609 [-]: MOVE      R0 R92       ; R0 := R92
610 [-]: MOVE      R0 R94       ; R0 := R94
611 [-]: CLOSURE   R162 31      ; R162 := closure(Function #32)
612 [-]: MOVE      R0 R154      ; R0 := R154
613 [-]: CLOSURE   R78 32       ; R78 := closure(Function #33)
614 [-]: MOVE      R0 R26       ; R0 := R26
615 [-]: MOVE      R0 R79       ; R0 := R79
616 [-]: MOVE      R0 R94       ; R0 := R94
617 [-]: MOVE      R0 R162      ; R0 := R162
618 [-]: MOVE      R0 R117      ; R0 := R117
619 [-]: MOVE      R0 R161      ; R0 := R161
620 [-]: MOVE      R0 R92       ; R0 := R92
621 [-]: MOVE      R0 R159      ; R0 := R159
622 [-]: CLOSURE   R163 33      ; R163 := closure(Function #34)
623 [-]: MOVE      R0 R78       ; R0 := R78
624 [-]: SETGLOBAL R163 K224    ; ToggleRailJack := R163
625 [-]: SETGLOBAL R163 K225    ; 0xB7E5FD73 := R163
626 [-]: CLOSURE   R163 34      ; R163 := closure(Function #35)
627 [-]: MOVE      R0 R38       ; R0 := R38
628 [-]: CLOSURE   R164 35      ; R164 := closure(Function #36)
629 [-]: MOVE      R0 R163      ; R0 := R163
630 [-]: SETGLOBAL R164 K226    ; FindAnyRailjackMission := R164
631 [-]: SETGLOBAL R164 K227    ; 0x8BAF827 := R164
632 [-]: CLOSURE   R164 36      ; R164 := closure(Function #37)
633 [-]: MOVE      R0 R87       ; R0 := R87
634 [-]: MOVE      R0 R130      ; R0 := R130
635 [-]: MOVE      R0 R113      ; R0 := R113
636 [-]: MOVE      R0 R122      ; R0 := R122
637 [-]: MOVE      R0 R15       ; R0 := R15
638 [-]: MOVE      R0 R79       ; R0 := R79
639 [-]: MOVE      R0 R94       ; R0 := R94
640 [-]: MOVE      R0 R118      ; R0 := R118
641 [-]: MOVE      R0 R14       ; R0 := R14
642 [-]: MOVE      R0 R59       ; R0 := R59
643 [-]: MOVE      R0 R92       ; R0 := R92
644 [-]: MOVE      R0 R135      ; R0 := R135
645 [-]: MOVE      R0 R134      ; R0 := R134
646 [-]: MOVE      R0 R32       ; R0 := R32
647 [-]: MOVE      R0 R25       ; R0 := R25
648 [-]: MOVE      R0 R117      ; R0 := R117
649 [-]: CLOSURE   R165 37      ; R165 := closure(Function #38)
650 [-]: MOVE      R0 R164      ; R0 := R164
651 [-]: SETGLOBAL R165 K228    ; UpdateButtons := R165
652 [-]: SETGLOBAL R165 K229    ; 0xB97434A0 := R165
653 [-]: CLOSURE   R118 38      ; R118 := closure(Function #39)
654 [-]: MOVE      R0 R164      ; R0 := R164
655 [-]: CLOSURE   R165 39      ; R165 := closure(Function #40)
656 [-]: CLOSURE   R166 40      ; R166 := closure(Function #41)
657 [-]: CLOSURE   R167 41      ; R167 := closure(Function #42)
658 [-]: MOVE      R0 R77       ; R0 := R77
659 [-]: MOVE      R0 R82       ; R0 := R82
660 [-]: CLOSURE   R168 42      ; R168 := closure(Function #43)
661 [-]: MOVE      R0 R79       ; R0 := R79
662 [-]: CLOSURE   R169 43      ; R169 := closure(Function #44)
663 [-]: MOVE      R0 R165      ; R0 := R165
664 [-]: MOVE      R0 R18       ; R0 := R18
665 [-]: MOVE      R0 R168      ; R0 := R168
666 [-]: MOVE      R0 R79       ; R0 := R79
667 [-]: MOVE      R0 R92       ; R0 := R92
668 [-]: MOVE      R0 R127      ; R0 := R127
669 [-]: MOVE      R0 R82       ; R0 := R82
670 [-]: CLOSURE   R170 44      ; R170 := closure(Function #45)
671 [-]: MOVE      R0 R113      ; R0 := R113
672 [-]: MOVE      R0 R58       ; R0 := R58
673 [-]: MOVE      R0 R79       ; R0 := R79
674 [-]: MOVE      R0 R81       ; R0 := R81
675 [-]: MOVE      R0 R87       ; R0 := R87
676 [-]: CLOSURE   R171 45      ; R171 := closure(Function #46)
677 [-]: MOVE      R0 R113      ; R0 := R113
678 [-]: MOVE      R0 R58       ; R0 := R58
679 [-]: MOVE      R0 R94       ; R0 := R94
680 [-]: MOVE      R0 R1        ; R0 := R1
681 [-]: CLOSURE   R172 46      ; R172 := closure(Function #47)
682 [-]: MOVE      R0 R92       ; R0 := R92
683 [-]: MOVE      R0 R94       ; R0 := R94
684 [-]: CLOSURE   R173 47      ; R173 := closure(Function #48)
685 [-]: MOVE      R0 R7        ; R0 := R7
686 [-]: MOVE      R0 R136      ; R0 := R136
687 [-]: MOVE      R0 R8        ; R0 := R8
688 [-]: MOVE      R0 R102      ; R0 := R102
689 [-]: MOVE      R0 R81       ; R0 := R81
690 [-]: MOVE      R0 R103      ; R0 := R103
691 [-]: MOVE      R0 R96       ; R0 := R96
692 [-]: MOVE      R0 R110      ; R0 := R110
693 [-]: MOVE      R0 R79       ; R0 := R79
694 [-]: MOVE      R0 R106      ; R0 := R106
695 [-]: MOVE      R0 R108      ; R0 := R108
696 [-]: MOVE      R0 R109      ; R0 := R109
697 [-]: MOVE      R0 R67       ; R0 := R67
698 [-]: MOVE      R0 R82       ; R0 := R82
699 [-]: CLOSURE   R174 48      ; R174 := closure(Function #49)
700 [-]: CLOSURE   R175 49      ; R175 := closure(Function #50)
701 [-]: MOVE      R0 R4        ; R0 := R4
702 [-]: MOVE      R0 R166      ; R0 := R166
703 [-]: MOVE      R0 R3        ; R0 := R3
704 [-]: MOVE      R0 R18       ; R0 := R18
705 [-]: MOVE      R0 R2        ; R0 := R2
706 [-]: MOVE      R0 R127      ; R0 := R127
707 [-]: MOVE      R0 R174      ; R0 := R174
708 [-]: MOVE      R0 R1        ; R0 := R1
709 [-]: MOVE      R0 R25       ; R0 := R25
710 [-]: MOVE      R0 R136      ; R0 := R136
711 [-]: MOVE      R0 R22       ; R0 := R22
712 [-]: MOVE      R0 R79       ; R0 := R79
713 [-]: MOVE      R0 R82       ; R0 := R82
714 [-]: MOVE      R0 R92       ; R0 := R92
715 [-]: MOVE      R0 R169      ; R0 := R169
716 [-]: CLOSURE   R176 50      ; R176 := closure(Function #51)
717 [-]: MOVE      R0 R40       ; R0 := R40
718 [-]: SETGLOBAL R176 K230    ; RollOverRegionLabel := R176
719 [-]: SETGLOBAL R176 K231    ; 0xE570BFF2 := R176
720 [-]: CLOSURE   R176 51      ; R176 := closure(Function #52)
721 [-]: MOVE      R0 R40       ; R0 := R40
722 [-]: SETGLOBAL R176 K232    ; RollOutRegionLabel := R176
723 [-]: SETGLOBAL R176 K233    ; 0xEFF9053C := R176
724 [-]: CLOSURE   R176 52      ; R176 := closure(Function #53)
725 [-]: MOVE      R0 R173      ; R0 := R173
726 [-]: MOVE      R0 R175      ; R0 := R175
727 [-]: MOVE      R0 R53       ; R0 := R53
728 [-]: MOVE      R0 R2        ; R0 := R2
729 [-]: MOVE      R0 R82       ; R0 := R82
730 [-]: CLOSURE   R177 53      ; R177 := closure(Function #54)
731 [-]: MOVE      R0 R7        ; R0 := R7
732 [-]: MOVE      R0 R8        ; R0 := R8
733 [-]: CLOSURE   R178 54      ; R178 := closure(Function #55)
734 [-]: MOVE      R0 R25       ; R0 := R25
735 [-]: MOVE      R0 R32       ; R0 := R32
736 [-]: MOVE      R0 R29       ; R0 := R29
737 [-]: CLOSURE   R179 55      ; R179 := closure(Function #56)
738 [-]: MOVE      R0 R2        ; R0 := R2
739 [-]: MOVE      R0 R79       ; R0 := R79
740 [-]: MOVE      R0 R65       ; R0 := R65
741 [-]: MOVE      R0 R103      ; R0 := R103
742 [-]: MOVE      R0 R109      ; R0 := R109
743 [-]: MOVE      R0 R67       ; R0 := R67
744 [-]: MOVE      R0 R73       ; R0 := R73
745 [-]: MOVE      R0 R92       ; R0 := R92
746 [-]: MOVE      R0 R77       ; R0 := R77
747 [-]: MOVE      R0 R29       ; R0 := R29
748 [-]: MOVE      R0 R25       ; R0 := R25
749 [-]: MOVE      R0 R32       ; R0 := R32
750 [-]: MOVE      R0 R56       ; R0 := R56
751 [-]: MOVE      R0 R116      ; R0 := R116
752 [-]: MOVE      R0 R101      ; R0 := R101
753 [-]: MOVE      R0 R115      ; R0 := R115
754 [-]: MOVE      R0 R114      ; R0 := R114
755 [-]: MOVE      R0 R26       ; R0 := R26
756 [-]: MOVE      R0 R164      ; R0 := R164
757 [-]: MOVE      R0 R178      ; R0 := R178
758 [-]: MOVE      R0 R18       ; R0 := R18
759 [-]: CLOSURE   R180 56      ; R180 := closure(Function #57)
760 [-]: MOVE      R0 R2        ; R0 := R2
761 [-]: MOVE      R0 R53       ; R0 := R53
762 [-]: CLOSURE   R181 57      ; R181 := closure(Function #58)
763 [-]: MOVE      R0 R79       ; R0 := R79
764 [-]: MOVE      R0 R94       ; R0 := R94
765 [-]: MOVE      R0 R81       ; R0 := R81
766 [-]: MOVE      R0 R87       ; R0 := R87
767 [-]: MOVE      R0 R22       ; R0 := R22
768 [-]: MOVE      R0 R98       ; R0 := R98
769 [-]: CLOSURE   R182 58      ; R182 := closure(Function #59)
770 [-]: MOVE      R0 R181      ; R0 := R181
771 [-]: MOVE      R0 R58       ; R0 := R58
772 [-]: MOVE      R0 R94       ; R0 := R94
773 [-]: MOVE      R0 R12       ; R0 := R12
774 [-]: MOVE      R0 R81       ; R0 := R81
775 [-]: MOVE      R0 R74       ; R0 := R74
776 [-]: MOVE      R0 R1        ; R0 := R1
777 [-]: MOVE      R0 R165      ; R0 := R165
778 [-]: MOVE      R0 R19       ; R0 := R19
779 [-]: MOVE      R0 R82       ; R0 := R82
780 [-]: MOVE      R0 R20       ; R0 := R20
781 [-]: MOVE      R0 R180      ; R0 := R180
782 [-]: MOVE      R0 R167      ; R0 := R167
783 [-]: MOVE      R0 R24       ; R0 := R24
784 [-]: CLOSURE   R183 59      ; R183 := closure(Function #60)
785 [-]: MOVE      R0 R171      ; R0 := R171
786 [-]: MOVE      R0 R170      ; R0 := R170
787 [-]: MOVE      R0 R172      ; R0 := R172
788 [-]: MOVE      R0 R20       ; R0 := R20
789 [-]: MOVE      R0 R92       ; R0 := R92
790 [-]: MOVE      R0 R71       ; R0 := R71
791 [-]: MOVE      R0 R72       ; R0 := R72
792 [-]: MOVE      R0 R77       ; R0 := R77
793 [-]: MOVE      R0 R79       ; R0 := R79
794 [-]: MOVE      R0 R138      ; R0 := R138
795 [-]: CLOSURE   R184 60      ; R184 := closure(Function #61)
796 [-]: MOVE      R0 R94       ; R0 := R94
797 [-]: MOVE      R0 R20       ; R0 := R20
798 [-]: MOVE      R0 R21       ; R0 := R21
799 [-]: MOVE      R0 R1        ; R0 := R1
800 [-]: CLOSURE   R185 61      ; R185 := closure(Function #62)
801 [-]: MOVE      R0 R72       ; R0 := R72
802 [-]: MOVE      R0 R71       ; R0 := R71
803 [-]: MOVE      R0 R184      ; R0 := R184
804 [-]: MOVE      R0 R19       ; R0 := R19
805 [-]: MOVE      R0 R183      ; R0 := R183
806 [-]: MOVE      R0 R149      ; R0 := R149
807 [-]: CLOSURE   R186 62      ; R186 := closure(Function #63)
808 [-]: MOVE      R0 R92       ; R0 := R92
809 [-]: CLOSURE   R187 63      ; R187 := closure(Function #64)
810 [-]: MOVE      R0 R19       ; R0 := R19
811 [-]: MOVE      R0 R2        ; R0 := R2
812 [-]: MOVE      R0 R186      ; R0 := R186
813 [-]: CLOSURE   R188 64      ; R188 := closure(Function #65)
814 [-]: MOVE      R0 R19       ; R0 := R19
815 [-]: MOVE      R0 R2        ; R0 := R2
816 [-]: MOVE      R0 R94       ; R0 := R94
817 [-]: MOVE      R0 R183      ; R0 := R183
818 [-]: MOVE      R0 R81       ; R0 := R81
819 [-]: CLOSURE   R189 65      ; R189 := closure(Function #66)
820 [-]: MOVE      R0 R19       ; R0 := R19
821 [-]: CLOSURE   R190 66      ; R190 := closure(Function #67)
822 [-]: MOVE      R0 R19       ; R0 := R19
823 [-]: MOVE      R0 R20       ; R0 := R20
824 [-]: MOVE      R0 R166      ; R0 := R166
825 [-]: MOVE      R0 R94       ; R0 := R94
826 [-]: MOVE      R0 R11       ; R0 := R11
827 [-]: MOVE      R0 R77       ; R0 := R77
828 [-]: MOVE      R0 R5        ; R0 := R5
829 [-]: MOVE      R0 R127      ; R0 := R127
830 [-]: MOVE      R0 R182      ; R0 := R182
831 [-]: MOVE      R0 R79       ; R0 := R79
832 [-]: MOVE      R0 R2        ; R0 := R2
833 [-]: MOVE      R0 R1        ; R0 := R1
834 [-]: MOVE      R0 R10       ; R0 := R10
835 [-]: MOVE      R0 R22       ; R0 := R22
836 [-]: MOVE      R0 R92       ; R0 := R92
837 [-]: MOVE      R0 R139      ; R0 := R139
838 [-]: CLOSURE   R191 67      ; R191 := closure(Function #68)
839 [-]: CLOSURE   R192 68      ; R192 := closure(Function #69)
840 [-]: CLOSURE   R193 69      ; R193 := closure(Function #70)
841 [-]: MOVE      R0 R20       ; R0 := R20
842 [-]: CLOSURE   R194 70      ; R194 := closure(Function #71)
843 [-]: MOVE      R0 R3        ; R0 := R3
844 [-]: MOVE      R0 R53       ; R0 := R53
845 [-]: MOVE      R0 R2        ; R0 := R2
846 [-]: MOVE      R0 R191      ; R0 := R191
847 [-]: MOVE      R0 R193      ; R0 := R193
848 [-]: MOVE      R0 R192      ; R0 := R192
849 [-]: CLOSURE   R195 71      ; R195 := closure(Function #72)
850 [-]: MOVE      R0 R6        ; R0 := R6
851 [-]: MOVE      R0 R1        ; R0 := R1
852 [-]: MOVE      R0 R56       ; R0 := R56
853 [-]: MOVE      R0 R57       ; R0 := R57
854 [-]: MOVE      R0 R20       ; R0 := R20
855 [-]: MOVE      R0 R127      ; R0 := R127
856 [-]: CLOSURE   R196 72      ; R196 := closure(Function #73)
857 [-]: MOVE      R0 R79       ; R0 := R79
858 [-]: MOVE      R0 R56       ; R0 := R56
859 [-]: MOVE      R0 R92       ; R0 := R92
860 [-]: MOVE      R0 R82       ; R0 := R82
861 [-]: MOVE      R0 R194      ; R0 := R194
862 [-]: CLOSURE   R197 73      ; R197 := closure(Function #74)
863 [-]: MOVE      R0 R68       ; R0 := R68
864 [-]: MOVE      R0 R56       ; R0 := R56
865 [-]: MOVE      R0 R92       ; R0 := R92
866 [-]: CLOSURE   R198 74      ; R198 := closure(Function #75)
867 [-]: MOVE      R0 R92       ; R0 := R92
868 [-]: MOVE      R0 R79       ; R0 := R79
869 [-]: MOVE      R0 R19       ; R0 := R19
870 [-]: CLOSURE   R199 75      ; R199 := closure(Function #76)
871 [-]: MOVE      R0 R74       ; R0 := R74
872 [-]: CLOSURE   R200 76      ; R200 := closure(Function #77)
873 [-]: MOVE      R0 R92       ; R0 := R92
874 [-]: MOVE      R0 R13       ; R0 := R13
875 [-]: MOVE      R0 R79       ; R0 := R79
876 [-]: MOVE      R0 R81       ; R0 := R81
877 [-]: MOVE      R0 R127      ; R0 := R127
878 [-]: MOVE      R0 R199      ; R0 := R199
879 [-]: MOVE      R0 R176      ; R0 := R176
880 [-]: MOVE      R0 R190      ; R0 := R190
881 [-]: MOVE      R0 R195      ; R0 := R195
882 [-]: MOVE      R0 R198      ; R0 := R198
883 [-]: MOVE      R0 R152      ; R0 := R152
884 [-]: MOVE      R0 R20       ; R0 := R20
885 [-]: MOVE      R0 R185      ; R0 := R185
886 [-]: MOVE      R0 R187      ; R0 := R187
887 [-]: MOVE      R0 R188      ; R0 := R188
888 [-]: MOVE      R0 R196      ; R0 := R196
889 [-]: MOVE      R0 R197      ; R0 := R197
890 [-]: MOVE      R0 R179      ; R0 := R179
891 [-]: MOVE      R0 R160      ; R0 := R160
892 [-]: CLOSURE   R201 77      ; R201 := closure(Function #78)
893 [-]: MOVE      R0 R27       ; R0 := R27
894 [-]: MOVE      R0 R28       ; R0 := R28
895 [-]: MOVE      R0 R200      ; R0 := R200
896 [-]: CLOSURE   R202 78      ; R202 := closure(Function #79)
897 [-]: MOVE      R0 R27       ; R0 := R27
898 [-]: MOVE      R0 R96       ; R0 := R96
899 [-]: MOVE      R0 R79       ; R0 := R79
900 [-]: CLOSURE   R203 79      ; R203 := closure(Function #80)
901 [-]: CLOSURE   R204 80      ; R204 := closure(Function #81)
902 [-]: MOVE      R0 R92       ; R0 := R92
903 [-]: CLOSURE   R205 81      ; R205 := closure(Function #82)
904 [-]: MOVE      R0 R7        ; R0 := R7
905 [-]: MOVE      R0 R204      ; R0 := R204
906 [-]: MOVE      R0 R2        ; R0 := R2
907 [-]: MOVE      R0 R79       ; R0 := R79
908 [-]: MOVE      R0 R203      ; R0 := R203
909 [-]: MOVE      R0 R5        ; R0 := R5
910 [-]: MOVE      R0 R181      ; R0 := R181
911 [-]: MOVE      R0 R28       ; R0 := R28
912 [-]: CLOSURE   R206 82      ; R206 := closure(Function #83)
913 [-]: CLOSURE   R207 83      ; R207 := closure(Function #84)
914 [-]: MOVE      R0 R29       ; R0 := R29
915 [-]: MOVE      R0 R47       ; R0 := R47
916 [-]: CLOSURE   R208 84      ; R208 := closure(Function #85)
917 [-]: MOVE      R0 R90       ; R0 := R90
918 [-]: CLOSURE   R209 85      ; R209 := closure(Function #86)
919 [-]: MOVE      R0 R86       ; R0 := R86
920 [-]: MOVE      R0 R90       ; R0 := R90
921 [-]: CLOSURE   R210 86      ; R210 := closure(Function #87)
922 [-]: MOVE      R0 R94       ; R0 := R94
923 [-]: CLOSURE   R211 87      ; R211 := closure(Function #88)
924 [-]: MOVE      R0 R94       ; R0 := R94
925 [-]: CLOSURE   R212 88      ; R212 := closure(Function #89)
926 [-]: MOVE      R0 R211      ; R0 := R211
927 [-]: SETGLOBAL R212 K234    ; AbortConfirm := R212
928 [-]: SETGLOBAL R212 K235    ; 0x575A9B5 := R212
929 [-]: CLOSURE   R212 89      ; R212 := closure(Function #90)
930 [-]: MOVE      R0 R92       ; R0 := R92
931 [-]: SETGLOBAL R212 K236    ; ShowQuestConfirm := R212
932 [-]: SETGLOBAL R212 K237    ; 0x3CC13774 := R212
933 [-]: CLOSURE   R212 90      ; R212 := closure(Function #91)
934 [-]: SETGLOBAL R212 K238    ; CanOpenRailJackMissionInCrewship := R212
935 [-]: SETGLOBAL R212 K239    ; 0xA5B49CBE := R212
936 [-]: CLOSURE   R212 91      ; R212 := closure(Function #92)
937 [-]: CLOSURE   R213 92      ; R213 := closure(Function #93)
938 [-]: MOVE      R0 R212      ; R0 := R212
939 [-]: SETGLOBAL R213 K240    ; OnUpdateSessionSettings := R213
940 [-]: SETGLOBAL R213 K241    ; 0xF1D13E45 := R213
941 [-]: CLOSURE   R213 93      ; R213 := closure(Function #94)
942 [-]: MOVE      R0 R79       ; R0 := R79
943 [-]: MOVE      R0 R154      ; R0 := R154
944 [-]: CLOSURE   R121 94      ; R121 := closure(Function #95)
945 [-]: MOVE      R0 R98       ; R0 := R98
946 [-]: MOVE      R0 R94       ; R0 := R94
947 [-]: MOVE      R0 R92       ; R0 := R92
948 [-]: MOVE      R0 R213      ; R0 := R213
949 [-]: MOVE      R0 R2        ; R0 := R2
950 [-]: MOVE      R0 R97       ; R0 := R97
951 [-]: MOVE      R0 R212      ; R0 := R212
952 [-]: MOVE      R0 R117      ; R0 := R117
953 [-]: MOVE      R0 R79       ; R0 := R79
954 [-]: MOVE      R0 R211      ; R0 := R211
955 [-]: CLOSURE   R119 95      ; R119 := closure(Function #96)
956 [-]: MOVE      R0 R15       ; R0 := R15
957 [-]: MOVE      R0 R26       ; R0 := R26
958 [-]: CLOSURE   R214 96      ; R214 := closure(Function #97)
959 [-]: MOVE      R0 R15       ; R0 := R15
960 [-]: MOVE      R0 R26       ; R0 := R26
961 [-]: MOVE      R0 R121      ; R0 := R121
962 [-]: SETGLOBAL R214 K242    ; ConfirmInvasionFaction := R214
963 [-]: SETGLOBAL R214 K243    ; 0xFBA5AB02 := R214
964 [-]: CLOSURE   R120 97      ; R120 := closure(Function #98)
965 [-]: MOVE      R0 R15       ; R0 := R15
966 [-]: MOVE      R0 R94       ; R0 := R94
967 [-]: MOVE      R0 R49       ; R0 := R49
968 [-]: MOVE      R0 R14       ; R0 := R14
969 [-]: MOVE      R0 R26       ; R0 := R26
970 [-]: CLOSURE   R214 98      ; R214 := closure(Function #99)
971 [-]: MOVE      R0 R15       ; R0 := R15
972 [-]: MOVE      R0 R26       ; R0 := R26
973 [-]: MOVE      R0 R14       ; R0 := R14
974 [-]: MOVE      R0 R121      ; R0 := R121
975 [-]: MOVE      R0 R49       ; R0 := R49
976 [-]: MOVE      R0 R94       ; R0 := R94
977 [-]: SETGLOBAL R214 K244    ; OnVoidProjectionChosen := R214
978 [-]: SETGLOBAL R214 K245    ; 0x771EFB2E := R214
979 [-]: CLOSURE   R214 99      ; R214 := closure(Function #100)
980 [-]: SETGLOBAL R214 K246    ; ConfirmIncompatibleOnlineMode := R214
981 [-]: SETGLOBAL R214 K247    ; 0x2CA9D97 := R214
982 [-]: CLOSURE   R214 100     ; R214 := closure(Function #101)
983 [-]: MOVE      R0 R15       ; R0 := R15
984 [-]: MOVE      R0 R92       ; R0 := R92
985 [-]: MOVE      R0 R26       ; R0 := R26
986 [-]: CLOSURE   R215 101     ; R215 := closure(Function #102)
987 [-]: MOVE      R0 R15       ; R0 := R15
988 [-]: MOVE      R0 R26       ; R0 := R26
989 [-]: MOVE      R0 R94       ; R0 := R94
990 [-]: MOVE      R0 R121      ; R0 := R121
991 [-]: SETGLOBAL R215 K248    ; ConfirmNightmare := R215
992 [-]: SETGLOBAL R215 K249    ; 0xEEB0C7FF := R215
993 [-]: CLOSURE   R215 102     ; R215 := closure(Function #103)
994 [-]: SETGLOBAL R215 K250    ; ConfirmRaidSelection := R215
995 [-]: SETGLOBAL R215 K251    ; 0x1E9A77E0 := R215
996 [-]: CLOSURE   R215 103     ; R215 := closure(Function #104)
997 [-]: MOVE      R0 R50       ; R0 := R50
998 [-]: MOVE      R0 R14       ; R0 := R14
999 [-]: MOVE      R0 R26       ; R0 := R26
1000 [-]: CLOSURE   R216 104     ; R216 := closure(Function #105)
1001 [-]: MOVE      R0 R50       ; R0 := R50
1002 [-]: MOVE      R0 R26       ; R0 := R26
1003 [-]: MOVE      R0 R14       ; R0 := R14
1004 [-]: MOVE      R0 R121      ; R0 := R121
1005 [-]: SETGLOBAL R216 K252    ; ConfirmWagerSelection := R216
1006 [-]: SETGLOBAL R216 K253    ; 0xAB823E52 := R216
1007 [-]: CLOSURE   R216 105     ; R216 := closure(Function #106)
1008 [-]: MOVE      R0 R26       ; R0 := R26
1009 [-]: MOVE      R0 R46       ; R0 := R46
1010 [-]: MOVE      R0 R94       ; R0 := R94
1011 [-]: MOVE      R0 R97       ; R0 := R97
1012 [-]: MOVE      R0 R92       ; R0 := R92
1013 [-]: SETGLOBAL R216 K254    ; OpenSoloMission := R216
1014 [-]: SETGLOBAL R216 K255    ; 0xE6723C78 := R216
1015 [-]: CLOSURE   R216 106     ; R216 := closure(Function #107)
1016 [-]: MOVE      R0 R15       ; R0 := R15
1017 [-]: MOVE      R0 R26       ; R0 := R26
1018 [-]: MOVE      R0 R46       ; R0 := R46
1019 [-]: SETGLOBAL R216 K256    ; ConfirmSoloMission := R216
1020 [-]: SETGLOBAL R216 K257    ; 0xCDF468C2 := R216
1021 [-]: CLOSURE   R216 107     ; R216 := closure(Function #108)
1022 [-]: MOVE      R0 R26       ; R0 := R26
1023 [-]: MOVE      R0 R1        ; R0 := R1
1024 [-]: MOVE      R0 R63       ; R0 := R63
1025 [-]: MOVE      R0 R94       ; R0 := R94
1026 [-]: MOVE      R0 R15       ; R0 := R15
1027 [-]: MOVE      R0 R92       ; R0 := R92
1028 [-]: MOVE      R0 R121      ; R0 := R121
1029 [-]: SETGLOBAL R216 K258    ; GotHubInstances := R216
1030 [-]: SETGLOBAL R216 K259    ; 0x924FB8E9 := R216
1031 [-]: CLOSURE   R216 108     ; R216 := closure(Function #109)
1032 [-]: MOVE      R0 R63       ; R0 := R63
1033 [-]: MOVE      R0 R1        ; R0 := R1
1034 [-]: MOVE      R0 R26       ; R0 := R26
1035 [-]: CLOSURE   R217 109     ; R217 := closure(Function #110)
1036 [-]: MOVE      R0 R94       ; R0 := R94
1037 [-]: CLOSURE   R218 110     ; R218 := closure(Function #111)
1038 [-]: MOVE      R0 R94       ; R0 := R94
1039 [-]: MOVE      R0 R210      ; R0 := R210
1040 [-]: MOVE      R0 R217      ; R0 := R217
1041 [-]: MOVE      R0 R92       ; R0 := R92
1042 [-]: MOVE      R0 R1        ; R0 := R1
1043 [-]: MOVE      R0 R81       ; R0 := R81
1044 [-]: MOVE      R0 R87       ; R0 := R87
1045 [-]: MOVE      R0 R79       ; R0 := R79
1046 [-]: MOVE      R0 R130      ; R0 := R130
1047 [-]: MOVE      R0 R55       ; R0 := R55
1048 [-]: CLOSURE   R219 111     ; R219 := closure(Function #112)
1049 [-]: MOVE      R0 R52       ; R0 := R52
1050 [-]: MOVE      R0 R218      ; R0 := R218
1051 [-]: MOVE      R0 R101      ; R0 := R101
1052 [-]: CLOSURE   R220 112     ; R220 := closure(Function #113)
1053 [-]: MOVE      R0 R94       ; R0 := R94
1054 [-]: MOVE      R0 R92       ; R0 := R92
1055 [-]: CLOSURE   R221 113     ; R221 := closure(Function #114)
1056 [-]: MOVE      R0 R40       ; R0 := R40
1057 [-]: MOVE      R0 R79       ; R0 := R79
1058 [-]: MOVE      R0 R94       ; R0 := R94
1059 [-]: MOVE      R0 R92       ; R0 := R92
1060 [-]: MOVE      R0 R213      ; R0 := R213
1061 [-]: MOVE      R0 R220      ; R0 := R220
1062 [-]: MOVE      R0 R121      ; R0 := R121
1063 [-]: MOVE      R0 R11       ; R0 := R11
1064 [-]: MOVE      R0 R170      ; R0 := R170
1065 [-]: MOVE      R0 R120      ; R0 := R120
1066 [-]: MOVE      R0 R119      ; R0 := R119
1067 [-]: MOVE      R0 R215      ; R0 := R215
1068 [-]: MOVE      R0 R219      ; R0 := R219
1069 [-]: MOVE      R0 R214      ; R0 := R214
1070 [-]: MOVE      R0 R216      ; R0 := R216
1071 [-]: MOVE      R0 R98       ; R0 := R98
1072 [-]: MOVE      R0 R15       ; R0 := R15
1073 [-]: MOVE      R0 R46       ; R0 := R46
1074 [-]: CLOSURE   R222 114     ; R222 := closure(Function #115)
1075 [-]: MOVE      R0 R162      ; R0 := R162
1076 [-]: SETGLOBAL R222 K260    ; InitializeRailJackMap := R222
1077 [-]: SETGLOBAL R222 K261    ; 0x6A247BFE := R222
1078 [-]: CLOSURE   R222 115     ; R222 := closure(Function #116)
1079 [-]: MOVE      R0 R92       ; R0 := R92
1080 [-]: SETGLOBAL R222 K262    ; InitialFade := R222
1081 [-]: SETGLOBAL R222 K263    ; 0x44C4C57C := R222
1082 [-]: CLOSURE   R222 116     ; R222 := closure(Function #117)
1083 [-]: MOVE      R0 R14       ; R0 := R14
1084 [-]: MOVE      R0 R94       ; R0 := R94
1085 [-]: MOVE      R0 R79       ; R0 := R79
1086 [-]: MOVE      R0 R15       ; R0 := R15
1087 [-]: MOVE      R0 R1        ; R0 := R1
1088 [-]: MOVE      R0 R7        ; R0 := R7
1089 [-]: MOVE      R0 R2        ; R0 := R2
1090 [-]: MOVE      R0 R5        ; R0 := R5
1091 [-]: MOVE      R0 R202      ; R0 := R202
1092 [-]: MOVE      R0 R205      ; R0 := R205
1093 [-]: MOVE      R0 R137      ; R0 := R137
1094 [-]: MOVE      R0 R206      ; R0 := R206
1095 [-]: MOVE      R0 R207      ; R0 := R207
1096 [-]: MOVE      R0 R208      ; R0 := R208
1097 [-]: MOVE      R0 R164      ; R0 := R164
1098 [-]: SETGLOBAL R222 K264    ; InitializeMore := R222
1099 [-]: SETGLOBAL R222 K265    ; 0x3479F2F3 := R222
1100 [-]: CLOSURE   R222 117     ; R222 := closure(Function #118)
1101 [-]: MOVE      R0 R161      ; R0 := R161
1102 [-]: SETGLOBAL R222 K266    ; Shutdown := R222
1103 [-]: SETGLOBAL R222 K267    ; 0x3C577FA3 := R222
1104 [-]: CLOSURE   R222 118     ; R222 := closure(Function #119)
1105 [-]: MOVE      R0 R13       ; R0 := R13
1106 [-]: CLOSURE   R223 119     ; R223 := closure(Function #120)
1107 [-]: MOVE      R0 R92       ; R0 := R92
1108 [-]: CLOSURE   R224 120     ; R224 := closure(Function #121)
1109 [-]: MOVE      R0 R38       ; R0 := R38
1110 [-]: MOVE      R0 R79       ; R0 := R79
1111 [-]: MOVE      R0 R92       ; R0 := R92
1112 [-]: MOVE      R0 R18       ; R0 := R18
1113 [-]: CLOSURE   R225 121     ; R225 := closure(Function #122)
1114 [-]: MOVE      R0 R40       ; R0 := R40
1115 [-]: MOVE      R0 R2        ; R0 := R2
1116 [-]: MOVE      R0 R3        ; R0 := R3
1117 [-]: MOVE      R0 R79       ; R0 := R79
1118 [-]: MOVE      R0 R53       ; R0 := R53
1119 [-]: MOVE      R0 R123      ; R0 := R123
1120 [-]: MOVE      R0 R22       ; R0 := R22
1121 [-]: MOVE      R0 R32       ; R0 := R32
1122 [-]: MOVE      R0 R25       ; R0 := R25
1123 [-]: MOVE      R0 R82       ; R0 := R82
1124 [-]: MOVE      R0 R224      ; R0 := R224
1125 [-]: MOVE      R0 R26       ; R0 := R26
1126 [-]: MOVE      R0 R92       ; R0 := R92
1127 [-]: MOVE      R0 R54       ; R0 := R54
1128 [-]: MOVE      R0 R18       ; R0 := R18
1129 [-]: CLOSURE   R226 122     ; R226 := closure(Function #123)
1130 [-]: MOVE      R0 R79       ; R0 := R79
1131 [-]: MOVE      R0 R103      ; R0 := R103
1132 [-]: MOVE      R0 R67       ; R0 := R67
1133 [-]: MOVE      R0 R38       ; R0 := R38
1134 [-]: MOVE      R0 R32       ; R0 := R32
1135 [-]: MOVE      R0 R111      ; R0 := R111
1136 [-]: CLOSURE   R227 123     ; R227 := closure(Function #124)
1137 [-]: MOVE      R0 R89       ; R0 := R89
1138 [-]: MOVE      R0 R88       ; R0 := R88
1139 [-]: MOVE      R0 R90       ; R0 := R90
1140 [-]: MOVE      R0 R223      ; R0 := R223
1141 [-]: MOVE      R0 R1        ; R0 := R1
1142 [-]: MOVE      R0 R19       ; R0 := R19
1143 [-]: MOVE      R0 R180      ; R0 := R180
1144 [-]: MOVE      R0 R56       ; R0 := R56
1145 [-]: MOVE      R0 R194      ; R0 := R194
1146 [-]: MOVE      R0 R225      ; R0 := R225
1147 [-]: MOVE      R0 R86       ; R0 := R86
1148 [-]: MOVE      R0 R92       ; R0 := R92
1149 [-]: MOVE      R0 R138      ; R0 := R138
1150 [-]: MOVE      R0 R191      ; R0 := R191
1151 [-]: MOVE      R0 R82       ; R0 := R82
1152 [-]: MOVE      R0 R29       ; R0 := R29
1153 [-]: MOVE      R0 R79       ; R0 := R79
1154 [-]: MOVE      R0 R30       ; R0 := R30
1155 [-]: MOVE      R0 R31       ; R0 := R31
1156 [-]: MOVE      R0 R32       ; R0 := R32
1157 [-]: MOVE      R0 R33       ; R0 := R33
1158 [-]: MOVE      R0 R178      ; R0 := R178
1159 [-]: MOVE      R0 R42       ; R0 := R42
1160 [-]: MOVE      R0 R13       ; R0 := R13
1161 [-]: MOVE      R0 R67       ; R0 := R67
1162 [-]: MOVE      R0 R38       ; R0 := R38
1163 [-]: MOVE      R0 R103      ; R0 := R103
1164 [-]: MOVE      R0 R109      ; R0 := R109
1165 [-]: MOVE      R0 R110      ; R0 := R110
1166 [-]: MOVE      R0 R111      ; R0 := R111
1167 [-]: MOVE      R0 R226      ; R0 := R226
1168 [-]: MOVE      R0 R2        ; R0 := R2
1169 [-]: MOVE      R0 R69       ; R0 := R69
1170 [-]: MOVE      R0 R40       ; R0 := R40
1171 [-]: MOVE      R0 R36       ; R0 := R36
1172 [-]: MOVE      R0 R81       ; R0 := R81
1173 [-]: MOVE      R0 R70       ; R0 := R70
1174 [-]: MOVE      R0 R37       ; R0 := R37
1175 [-]: MOVE      R0 R112      ; R0 := R112
1176 [-]: CLOSURE   R228 124     ; R228 := closure(Function #125)
1177 [-]: MOVE      R0 R65       ; R0 := R65
1178 [-]: MOVE      R0 R53       ; R0 := R53
1179 [-]: MOVE      R0 R92       ; R0 := R92
1180 [-]: CLOSURE   R229 125     ; R229 := closure(Function #126)
1181 [-]: MOVE      R0 R127      ; R0 := R127
1182 [-]: MOVE      R0 R1        ; R0 := R1
1183 [-]: MOVE      R0 R25       ; R0 := R25
1184 [-]: MOVE      R0 R38       ; R0 := R38
1185 [-]: MOVE      R0 R116      ; R0 := R116
1186 [-]: MOVE      R0 R29       ; R0 := R29
1187 [-]: MOVE      R0 R136      ; R0 := R136
1188 [-]: MOVE      R0 R18       ; R0 := R18
1189 [-]: MOVE      R0 R82       ; R0 := R82
1190 [-]: MOVE      R0 R57       ; R0 := R57
1191 [-]: MOVE      R0 R194      ; R0 := R194
1192 [-]: MOVE      R0 R56       ; R0 := R56
1193 [-]: CLOSURE   R230 126     ; R230 := closure(Function #127)
1194 [-]: MOVE      R0 R15       ; R0 := R15
1195 [-]: MOVE      R0 R32       ; R0 := R32
1196 [-]: MOVE      R0 R150      ; R0 := R150
1197 [-]: MOVE      R0 R2        ; R0 := R2
1198 [-]: MOVE      R0 R38       ; R0 := R38
1199 [-]: CLOSURE   R231 127     ; R231 := closure(Function #128)
1200 [-]: MOVE      R0 R92       ; R0 := R92
1201 [-]: CLOSURE   R232 128     ; R232 := closure(Function #129)
1202 [-]: MOVE      R0 R13       ; R0 := R13
1203 [-]: MOVE      R0 R32       ; R0 := R32
1204 [-]: MOVE      R0 R34       ; R0 := R34
1205 [-]: MOVE      R0 R35       ; R0 := R35
1206 [-]: MOVE      R0 R30       ; R0 := R30
1207 [-]: MOVE      R0 R31       ; R0 := R31
1208 [-]: MOVE      R0 R40       ; R0 := R40
1209 [-]: MOVE      R0 R36       ; R0 := R36
1210 [-]: MOVE      R0 R69       ; R0 := R69
1211 [-]: MOVE      R0 R37       ; R0 := R37
1212 [-]: MOVE      R0 R2        ; R0 := R2
1213 [-]: MOVE      R0 R70       ; R0 := R70
1214 [-]: MOVE      R0 R89       ; R0 := R89
1215 [-]: MOVE      R0 R88       ; R0 := R88
1216 [-]: MOVE      R0 R82       ; R0 := R82
1217 [-]: MOVE      R0 R18       ; R0 := R18
1218 [-]: MOVE      R0 R43       ; R0 := R43
1219 [-]: MOVE      R0 R44       ; R0 := R44
1220 [-]: MOVE      R0 R125      ; R0 := R125
1221 [-]: MOVE      R0 R19       ; R0 := R19
1222 [-]: MOVE      R0 R112      ; R0 := R112
1223 [-]: MOVE      R0 R3        ; R0 := R3
1224 [-]: MOVE      R0 R56       ; R0 := R56
1225 [-]: MOVE      R0 R231      ; R0 := R231
1226 [-]: MOVE      R0 R81       ; R0 := R81
1227 [-]: MOVE      R0 R8        ; R0 := R8
1228 [-]: MOVE      R0 R68       ; R0 := R68
1229 [-]: MOVE      R0 R153      ; R0 := R153
1230 [-]: MOVE      R0 R230      ; R0 := R230
1231 [-]: MOVE      R0 R127      ; R0 := R127
1232 [-]: MOVE      R0 R92       ; R0 := R92
1233 [-]: MOVE      R0 R52       ; R0 := R52
1234 [-]: MOVE      R0 R60       ; R0 := R60
1235 [-]: MOVE      R0 R143      ; R0 := R143
1236 [-]: MOVE      R0 R228      ; R0 := R228
1237 [-]: MOVE      R0 R22       ; R0 := R22
1238 [-]: MOVE      R0 R229      ; R0 := R229
1239 [-]: MOVE      R0 R67       ; R0 := R67
1240 [-]: MOVE      R0 R103      ; R0 := R103
1241 [-]: MOVE      R0 R66       ; R0 := R66
1242 [-]: GETGLOBAL R233 K12     ; R233 := 0x221C9700
1243 [-]: CALL      R233 1 2     ; R233 := R233()
1244 [-]: CLOSURE   R234 129     ; R234 := closure(Function #130)
1245 [-]: MOVE      R0 R84       ; R0 := R84
1246 [-]: MOVE      R0 R86       ; R0 := R86
1247 [-]: MOVE      R0 R8        ; R0 := R8
1248 [-]: MOVE      R0 R223      ; R0 := R223
1249 [-]: MOVE      R0 R233      ; R0 := R233
1250 [-]: CLOSURE   R124 130     ; R124 := closure(Function #131)
1251 [-]: MOVE      R0 R123      ; R0 := R123
1252 [-]: MOVE      R0 R19       ; R0 := R19
1253 [-]: MOVE      R0 R92       ; R0 := R92
1254 [-]: CLOSURE   R235 131     ; R235 := closure(Function #132)
1255 [-]: MOVE      R0 R15       ; R0 := R15
1256 [-]: MOVE      R0 R38       ; R0 := R38
1257 [-]: MOVE      R0 R92       ; R0 := R92
1258 [-]: CLOSURE   R236 132     ; R236 := closure(Function #133)
1259 [-]: MOVE      R0 R50       ; R0 := R50
1260 [-]: MOVE      R0 R19       ; R0 := R19
1261 [-]: LOADK     R237 K268    ; R237 := "IntersectVoidPlane"
1262 [-]: CLOSURE   R238 133     ; R238 := closure(Function #134)
1263 [-]: MOVE      R0 R92       ; R0 := R92
1264 [-]: MOVE      R0 R79       ; R0 := R79
1265 [-]: SETTABLE  R79 R237 R238; R79[R237] := R238
1266 [-]: LOADK     R237 K269    ; R237 := "SetDistortions"
1267 [-]: CLOSURE   R238 134     ; R238 := closure(Function #135)
1268 [-]: MOVE      R0 R79       ; R0 := R79
1269 [-]: SETTABLE  R79 R237 R238; R79[R237] := R238
1270 [-]: CLOSURE   R237 135     ; R237 := closure(Function #136)
1271 [-]: MOVE      R0 R101      ; R0 := R101
1272 [-]: MOVE      R0 R13       ; R0 := R13
1273 [-]: MOVE      R0 R79       ; R0 := R79
1274 [-]: MOVE      R0 R25       ; R0 := R25
1275 [-]: MOVE      R0 R32       ; R0 := R32
1276 [-]: MOVE      R0 R38       ; R0 := R38
1277 [-]: MOVE      R0 R2        ; R0 := R2
1278 [-]: MOVE      R0 R3        ; R0 := R3
1279 [-]: MOVE      R0 R19       ; R0 := R19
1280 [-]: MOVE      R0 R100      ; R0 := R100
1281 [-]: MOVE      R0 R48       ; R0 := R48
1282 [-]: MOVE      R0 R92       ; R0 := R92
1283 [-]: MOVE      R0 R106      ; R0 := R106
1284 [-]: MOVE      R0 R107      ; R0 := R107
1285 [-]: MOVE      R0 R41       ; R0 := R41
1286 [-]: MOVE      R0 R15       ; R0 := R15
1287 [-]: MOVE      R0 R16       ; R0 := R16
1288 [-]: MOVE      R0 R14       ; R0 := R14
1289 [-]: MOVE      R0 R131      ; R0 := R131
1290 [-]: MOVE      R0 R26       ; R0 := R26
1291 [-]: MOVE      R0 R20       ; R0 := R20
1292 [-]: MOVE      R0 R40       ; R0 := R40
1293 [-]: MOVE      R0 R235      ; R0 := R235
1294 [-]: MOVE      R0 R221      ; R0 := R221
1295 [-]: MOVE      R0 R66       ; R0 := R66
1296 [-]: MOVE      R0 R22       ; R0 := R22
1297 [-]: MOVE      R0 R114      ; R0 := R114
1298 [-]: MOVE      R0 R115      ; R0 := R115
1299 [-]: MOVE      R0 R98       ; R0 := R98
1300 [-]: MOVE      R0 R201      ; R0 := R201
1301 [-]: MOVE      R0 R227      ; R0 := R227
1302 [-]: MOVE      R0 R222      ; R0 := R222
1303 [-]: MOVE      R0 R232      ; R0 := R232
1304 [-]: MOVE      R0 R234      ; R0 := R234
1305 [-]: MOVE      R0 R146      ; R0 := R146
1306 [-]: MOVE      R0 R62       ; R0 := R62
1307 [-]: MOVE      R0 R103      ; R0 := R103
1308 [-]: MOVE      R0 R82       ; R0 := R82
1309 [-]: MOVE      R0 R81       ; R0 := R81
1310 [-]: MOVE      R0 R189      ; R0 := R189
1311 [-]: MOVE      R0 R104      ; R0 := R104
1312 [-]: MOVE      R0 R105      ; R0 := R105
1313 [-]: MOVE      R0 R67       ; R0 := R67
1314 [-]: MOVE      R0 R72       ; R0 := R72
1315 [-]: MOVE      R0 R71       ; R0 := R71
1316 [-]: MOVE      R0 R43       ; R0 := R43
1317 [-]: MOVE      R0 R73       ; R0 := R73
1318 [-]: MOVE      R0 R77       ; R0 := R77
1319 [-]: MOVE      R0 R94       ; R0 := R94
1320 [-]: MOVE      R0 R45       ; R0 := R45
1321 [-]: MOVE      R0 R80       ; R0 := R80
1322 [-]: MOVE      R0 R128      ; R0 := R128
1323 [-]: MOVE      R0 R236      ; R0 := R236
1324 [-]: MOVE      R0 R59       ; R0 := R59
1325 [-]: MOVE      R0 R164      ; R0 := R164
1326 [-]: SETGLOBAL R237 K270    ; Update := R237
1327 [-]: SETGLOBAL R237 K271    ; 0x8C7099E9 := R237
1328 [-]: CLOSURE   R237 136     ; R237 := closure(Function #137)
1329 [-]: MOVE      R0 R79       ; R0 := R79
1330 [-]: MOVE      R0 R97       ; R0 := R97
1331 [-]: CLOSURE   R238 137     ; R238 := closure(Function #138)
1332 [-]: MOVE      R0 R237      ; R0 := R237
1333 [-]: MOVE      R0 R92       ; R0 := R92
1334 [-]: CLOSURE   R117 138     ; R117 := closure(Function #139)
1335 [-]: MOVE      R0 R26       ; R0 := R26
1336 [-]: MOVE      R0 R14       ; R0 := R14
1337 [-]: MOVE      R0 R52       ; R0 := R52
1338 [-]: MOVE      R0 R125      ; R0 := R125
1339 [-]: MOVE      R0 R15       ; R0 := R15
1340 [-]: MOVE      R0 R89       ; R0 := R89
1341 [-]: MOVE      R0 R88       ; R0 := R88
1342 [-]: MOVE      R0 R148      ; R0 := R148
1343 [-]: MOVE      R0 R32       ; R0 := R32
1344 [-]: MOVE      R0 R25       ; R0 := R25
1345 [-]: MOVE      R0 R92       ; R0 := R92
1346 [-]: MOVE      R0 R237      ; R0 := R237
1347 [-]: MOVE      R0 R29       ; R0 := R29
1348 [-]: MOVE      R0 R103      ; R0 := R103
1349 [-]: MOVE      R0 R67       ; R0 := R67
1350 [-]: MOVE      R0 R109      ; R0 := R109
1351 [-]: MOVE      R0 R238      ; R0 := R238
1352 [-]: CLOSURE   R239 139     ; R239 := closure(Function #140)
1353 [-]: MOVE      R0 R117      ; R0 := R117
1354 [-]: SETGLOBAL R239 K272    ; TransitionOut := R239
1355 [-]: SETGLOBAL R239 K273    ; 0x7097B1B4 := R239
1356 [-]: CLOSURE   R239 140     ; R239 := closure(Function #141)
1357 [-]: CLOSURE   R240 141     ; R240 := closure(Function #142)
1358 [-]: MOVE      R0 R26       ; R0 := R26
1359 [-]: MOVE      R0 R52       ; R0 := R52
1360 [-]: MOVE      R0 R92       ; R0 := R92
1361 [-]: MOVE      R0 R47       ; R0 := R47
1362 [-]: MOVE      R0 R84       ; R0 := R84
1363 [-]: MOVE      R0 R29       ; R0 := R29
1364 [-]: MOVE      R0 R89       ; R0 := R89
1365 [-]: MOVE      R0 R88       ; R0 := R88
1366 [-]: MOVE      R0 R90       ; R0 := R90
1367 [-]: CLOSURE   R241 142     ; R241 := closure(Function #143)
1368 [-]: MOVE      R0 R240      ; R0 := R240
1369 [-]: SETGLOBAL R241 K274    ; onKeyUp_MENU_CLICK := R241
1370 [-]: SETGLOBAL R241 K275    ; 0x367BCD7E := R241
1371 [-]: CLOSURE   R116 143     ; R116 := closure(Function #144)
1372 [-]: CLOSURE   R241 144     ; R241 := closure(Function #145)
1373 [-]: MOVE      R0 R2        ; R0 := R2
1374 [-]: MOVE      R0 R42       ; R0 := R42
1375 [-]: CLOSURE   R242 145     ; R242 := closure(Function #146)
1376 [-]: MOVE      R0 R38       ; R0 := R38
1377 [-]: MOVE      R0 R177      ; R0 := R177
1378 [-]: MOVE      R0 R39       ; R0 := R39
1379 [-]: CLOSURE   R115 146     ; R115 := closure(Function #147)
1380 [-]: MOVE      R0 R38       ; R0 := R38
1381 [-]: MOVE      R0 R224      ; R0 := R224
1382 [-]: MOVE      R0 R242      ; R0 := R242
1383 [-]: MOVE      R0 R116      ; R0 := R116
1384 [-]: MOVE      R0 R29       ; R0 := R29
1385 [-]: MOVE      R0 R32       ; R0 := R32
1386 [-]: MOVE      R0 R33       ; R0 := R33
1387 [-]: MOVE      R0 R73       ; R0 := R73
1388 [-]: MOVE      R0 R92       ; R0 := R92
1389 [-]: MOVE      R0 R77       ; R0 := R77
1390 [-]: MOVE      R0 R164      ; R0 := R164
1391 [-]: MOVE      R0 R107      ; R0 := R107
1392 [-]: MOVE      R0 R79       ; R0 := R79
1393 [-]: MOVE      R0 R1        ; R0 := R1
1394 [-]: MOVE      R0 R99       ; R0 := R99
1395 [-]: CLOSURE   R114 147     ; R114 := closure(Function #148)
1396 [-]: MOVE      R0 R38       ; R0 := R38
1397 [-]: MOVE      R0 R224      ; R0 := R224
1398 [-]: MOVE      R0 R242      ; R0 := R242
1399 [-]: MOVE      R0 R73       ; R0 := R73
1400 [-]: MOVE      R0 R92       ; R0 := R92
1401 [-]: MOVE      R0 R77       ; R0 := R77
1402 [-]: MOVE      R0 R116      ; R0 := R116
1403 [-]: MOVE      R0 R29       ; R0 := R29
1404 [-]: MOVE      R0 R32       ; R0 := R32
1405 [-]: MOVE      R0 R30       ; R0 := R30
1406 [-]: MOVE      R0 R31       ; R0 := R31
1407 [-]: MOVE      R0 R26       ; R0 := R26
1408 [-]: MOVE      R0 R107      ; R0 := R107
1409 [-]: CLOSURE   R243 148     ; R243 := closure(Function #149)
1410 [-]: MOVE      R0 R45       ; R0 := R45
1411 [-]: MOVE      R0 R94       ; R0 := R94
1412 [-]: MOVE      R0 R9        ; R0 := R9
1413 [-]: MOVE      R0 R92       ; R0 := R92
1414 [-]: MOVE      R0 R24       ; R0 := R24
1415 [-]: MOVE      R0 R80       ; R0 := R80
1416 [-]: MOVE      R0 R40       ; R0 := R40
1417 [-]: MOVE      R0 R83       ; R0 := R83
1418 [-]: MOVE      R0 R79       ; R0 := R79
1419 [-]: MOVE      R0 R81       ; R0 := R81
1420 [-]: CLOSURE   R244 149     ; R244 := closure(Function #150)
1421 [-]: MOVE      R0 R129      ; R0 := R129
1422 [-]: MOVE      R0 R40       ; R0 := R40
1423 [-]: SETGLOBAL R244 K276    ; OnEmblemReady := R244
1424 [-]: SETGLOBAL R244 K277    ; 0x855C37AA := R244
1425 [-]: CLOSURE   R244 150     ; R244 := closure(Function #151)
1426 [-]: MOVE      R0 R43       ; R0 := R43
1427 [-]: MOVE      R0 R44       ; R0 := R44
1428 [-]: MOVE      R0 R40       ; R0 := R40
1429 [-]: MOVE      R0 R167      ; R0 := R167
1430 [-]: MOVE      R0 R19       ; R0 := R19
1431 [-]: MOVE      R0 R41       ; R0 := R41
1432 [-]: MOVE      R0 R89       ; R0 := R89
1433 [-]: MOVE      R0 R88       ; R0 := R88
1434 [-]: MOVE      R0 R144      ; R0 := R144
1435 [-]: MOVE      R0 R92       ; R0 := R92
1436 [-]: MOVE      R0 R235      ; R0 := R235
1437 [-]: MOVE      R0 R74       ; R0 := R74
1438 [-]: MOVE      R0 R64       ; R0 := R64
1439 [-]: MOVE      R0 R1        ; R0 := R1
1440 [-]: MOVE      R0 R94       ; R0 := R94
1441 [-]: MOVE      R0 R52       ; R0 := R52
1442 [-]: MOVE      R0 R218      ; R0 := R218
1443 [-]: MOVE      R0 R20       ; R0 := R20
1444 [-]: MOVE      R0 R79       ; R0 := R79
1445 [-]: MOVE      R0 R243      ; R0 := R243
1446 [-]: MOVE      R0 R129      ; R0 := R129
1447 [-]: MOVE      R0 R9        ; R0 := R9
1448 [-]: MOVE      R0 R60       ; R0 := R60
1449 [-]: MOVE      R0 R87       ; R0 := R87
1450 [-]: MOVE      R0 R82       ; R0 := R82
1451 [-]: CLOSURE   R125 151     ; R125 := closure(Function #152)
1452 [-]: MOVE      R0 R43       ; R0 := R43
1453 [-]: MOVE      R0 R44       ; R0 := R44
1454 [-]: MOVE      R0 R52       ; R0 := R52
1455 [-]: MOVE      R0 R40       ; R0 := R40
1456 [-]: MOVE      R0 R41       ; R0 := R41
1457 [-]: MOVE      R0 R19       ; R0 := R19
1458 [-]: MOVE      R0 R60       ; R0 := R60
1459 [-]: MOVE      R0 R167      ; R0 := R167
1460 [-]: MOVE      R0 R82       ; R0 := R82
1461 [-]: MOVE      R0 R15       ; R0 := R15
1462 [-]: CLOSURE   R245 152     ; R245 := closure(Function #153)
1463 [-]: MOVE      R0 R26       ; R0 := R26
1464 [-]: MOVE      R0 R14       ; R0 := R14
1465 [-]: MOVE      R0 R79       ; R0 := R79
1466 [-]: MOVE      R0 R40       ; R0 := R40
1467 [-]: MOVE      R0 R2        ; R0 := R2
1468 [-]: MOVE      R0 R81       ; R0 := R81
1469 [-]: MOVE      R0 R92       ; R0 := R92
1470 [-]: MOVE      R0 R89       ; R0 := R89
1471 [-]: MOVE      R0 R88       ; R0 := R88
1472 [-]: MOVE      R0 R90       ; R0 := R90
1473 [-]: MOVE      R0 R223      ; R0 := R223
1474 [-]: MOVE      R0 R19       ; R0 := R19
1475 [-]: MOVE      R0 R86       ; R0 := R86
1476 [-]: MOVE      R0 R145      ; R0 := R145
1477 [-]: MOVE      R0 R29       ; R0 := R29
1478 [-]: MOVE      R0 R84       ; R0 := R84
1479 [-]: MOVE      R0 R8        ; R0 := R8
1480 [-]: MOVE      R0 R85       ; R0 := R85
1481 [-]: MOVE      R0 R239      ; R0 := R239
1482 [-]: MOVE      R0 R51       ; R0 := R51
1483 [-]: MOVE      R0 R47       ; R0 := R47
1484 [-]: MOVE      R0 R87       ; R0 := R87
1485 [-]: MOVE      R0 R114      ; R0 := R114
1486 [-]: MOVE      R0 R91       ; R0 := R91
1487 [-]: MOVE      R0 R221      ; R0 := R221
1488 [-]: MOVE      R0 R66       ; R0 := R66
1489 [-]: MOVE      R0 R115      ; R0 := R115
1490 [-]: MOVE      R0 R123      ; R0 := R123
1491 [-]: CLOSURE   R246 153     ; R246 := closure(Function #154)
1492 [-]: MOVE      R0 R245      ; R0 := R245
1493 [-]: SETGLOBAL R246 K278    ; onKeyDown_MENU_CLICK := R246
1494 [-]: SETGLOBAL R246 K279    ; 0xE40A2FCA := R246
1495 [-]: CLOSURE   R246 154     ; R246 := closure(Function #155)
1496 [-]: MOVE      R0 R40       ; R0 := R40
1497 [-]: MOVE      R0 R245      ; R0 := R245
1498 [-]: SETGLOBAL R246 K280    ; onKeyDown_MENU_SELECT := R246
1499 [-]: SETGLOBAL R246 K281    ; 0xEEDD1ACF := R246
1500 [-]: CLOSURE   R246 155     ; R246 := closure(Function #156)
1501 [-]: MOVE      R0 R40       ; R0 := R40
1502 [-]: MOVE      R0 R240      ; R0 := R240
1503 [-]: SETGLOBAL R246 K282    ; onKeyUp_MENU_SELECT := R246
1504 [-]: SETGLOBAL R246 K283    ; 0x4874089C := R246
1505 [-]: CLOSURE   R246 156     ; R246 := closure(Function #157)
1506 [-]: MOVE      R0 R26       ; R0 := R26
1507 [-]: MOVE      R0 R84       ; R0 := R84
1508 [-]: MOVE      R0 R29       ; R0 := R29
1509 [-]: SETGLOBAL R246 K284    ; onKeyUp_MENU_RIGHT_CLICK := R246
1510 [-]: SETGLOBAL R246 K285    ; 0x3A763170 := R246
1511 [-]: CLOSURE   R246 157     ; R246 := closure(Function #158)
1512 [-]: MOVE      R0 R26       ; R0 := R26
1513 [-]: MOVE      R0 R14       ; R0 := R14
1514 [-]: MOVE      R0 R52       ; R0 := R52
1515 [-]: MOVE      R0 R84       ; R0 := R84
1516 [-]: MOVE      R0 R29       ; R0 := R29
1517 [-]: MOVE      R0 R32       ; R0 := R32
1518 [-]: MOVE      R0 R25       ; R0 := R25
1519 [-]: MOVE      R0 R73       ; R0 := R73
1520 [-]: MOVE      R0 R92       ; R0 := R92
1521 [-]: MOVE      R0 R77       ; R0 := R77
1522 [-]: MOVE      R0 R38       ; R0 := R38
1523 [-]: MOVE      R0 R224      ; R0 := R224
1524 [-]: MOVE      R0 R39       ; R0 := R39
1525 [-]: MOVE      R0 R125      ; R0 := R125
1526 [-]: MOVE      R0 R107      ; R0 := R107
1527 [-]: MOVE      R0 R108      ; R0 := R108
1528 [-]: MOVE      R0 R164      ; R0 := R164
1529 [-]: SETGLOBAL R246 K286    ; onKeyDown_MENU_RIGHT_CLICK := R246
1530 [-]: SETGLOBAL R246 K287    ; 0xA930FBF := R246
1531 [-]: CLOSURE   R246 158     ; R246 := closure(Function #159)
1532 [-]: SETGLOBAL R246 K288    ; onKeyUp_NEXT_MENU := R246
1533 [-]: SETGLOBAL R246 K289    ; 0x9D432BFE := R246
1534 [-]: CLOSURE   R246 159     ; R246 := closure(Function #160)
1535 [-]: SETGLOBAL R246 K290    ; onKeyDown_NEXT_MENU := R246
1536 [-]: SETGLOBAL R246 K291    ; 0xE25DD8CF := R246
1537 [-]: CLOSURE   R246 160     ; R246 := closure(Function #161)
1538 [-]: MOVE      R0 R26       ; R0 := R26
1539 [-]: MOVE      R0 R52       ; R0 := R52
1540 [-]: MOVE      R0 R25       ; R0 := R25
1541 [-]: MOVE      R0 R32       ; R0 := R32
1542 [-]: MOVE      R0 R89       ; R0 := R89
1543 [-]: MOVE      R0 R88       ; R0 := R88
1544 [-]: MOVE      R0 R40       ; R0 := R40
1545 [-]: MOVE      R0 R38       ; R0 := R38
1546 [-]: MOVE      R0 R132      ; R0 := R132
1547 [-]: MOVE      R0 R92       ; R0 := R92
1548 [-]: MOVE      R0 R115      ; R0 := R115
1549 [-]: MOVE      R0 R117      ; R0 := R117
1550 [-]: SETGLOBAL R246 K292    ; onKeyDown_MENU_MOUSE_Z := R246
1551 [-]: SETGLOBAL R246 K293    ; 0x56EAD3A9 := R246
1552 [-]: CLOSURE   R246 161     ; R246 := closure(Function #162)
1553 [-]: MOVE      R0 R87       ; R0 := R87
1554 [-]: MOVE      R0 R92       ; R0 := R92
1555 [-]: MOVE      R0 R86       ; R0 := R86
1556 [-]: MOVE      R0 R89       ; R0 := R89
1557 [-]: MOVE      R0 R88       ; R0 := R88
1558 [-]: MOVE      R0 R209      ; R0 := R209
1559 [-]: MOVE      R0 R139      ; R0 := R139
1560 [-]: MOVE      R0 R148      ; R0 := R148
1561 [-]: MOVE      R0 R1        ; R0 := R1
1562 [-]: MOVE      R0 R90       ; R0 := R90
1563 [-]: MOVE      R0 R56       ; R0 := R56
1564 [-]: MOVE      R0 R6        ; R0 := R6
1565 [-]: MOVE      R0 R145      ; R0 := R145
1566 [-]: MOVE      R0 R196      ; R0 := R196
1567 [-]: MOVE      R0 R2        ; R0 := R2
1568 [-]: MOVE      R0 R115      ; R0 := R115
1569 [-]: MOVE      R0 R146      ; R0 := R146
1570 [-]: MOVE      R0 R64       ; R0 := R64
1571 [-]: MOVE      R0 R14       ; R0 := R14
1572 [-]: SETGLOBAL R246 K294    ; onRawInputEvent := R246
1573 [-]: SETGLOBAL R246 K295    ; 0x11563913 := R246
1574 [-]: CLOSURE   R246 162     ; R246 := closure(Function #163)
1575 [-]: MOVE      R0 R244      ; R0 := R244
1576 [-]: SETGLOBAL R246 K296    ; NodeRollOver := R246
1577 [-]: SETGLOBAL R246 K297    ; 0xFA36E361 := R246
1578 [-]: CLOSURE   R246 163     ; R246 := closure(Function #164)
1579 [-]: MOVE      R0 R125      ; R0 := R125
1580 [-]: SETGLOBAL R246 K298    ; NodeRollOut := R246
1581 [-]: SETGLOBAL R246 K299    ; 0xA4A3822 := R246
1582 [-]: CLOSURE   R246 164     ; R246 := closure(Function #165)
1583 [-]: MOVE      R0 R43       ; R0 := R43
1584 [-]: MOVE      R0 R44       ; R0 := R44
1585 [-]: MOVE      R0 R52       ; R0 := R52
1586 [-]: MOVE      R0 R19       ; R0 := R19
1587 [-]: SETGLOBAL R246 K300    ; NodeSelect := R246
1588 [-]: SETGLOBAL R246 K301    ; 0x6FB07481 := R246
1589 [-]: CLOSURE   R246 165     ; R246 := closure(Function #166)
1590 [-]: MOVE      R0 R14       ; R0 := R14
1591 [-]: SETGLOBAL R246 K302    ; WorldStateWindowVisChanged := R246
1592 [-]: SETGLOBAL R246 K303    ; 0x6E3DB508 := R246
1593 [-]: CLOSURE   R246 166     ; R246 := closure(Function #167)
1594 [-]: MOVE      R0 R14       ; R0 := R14
1595 [-]: MOVE      R0 R164      ; R0 := R164
1596 [-]: SETGLOBAL R246 K304    ; WSWDioramaChanged := R246
1597 [-]: SETGLOBAL R246 K305    ; 0xE705EF6F := R246
1598 [-]: CLOSURE   R246 167     ; R246 := closure(Function #168)
1599 [-]: MOVE      R0 R133      ; R0 := R133
1600 [-]: MOVE      R0 R232      ; R0 := R232
1601 [-]: SETGLOBAL R246 K306    ; onViewportSizeChanged := R246
1602 [-]: SETGLOBAL R246 K307    ; 0x3A900427 := R246
1603 [-]: CLOSURE   R246 168     ; R246 := closure(Function #169)
1604 [-]: MOVE      R0 R101      ; R0 := R101
1605 [-]: MOVE      R0 R13       ; R0 := R13
1606 [-]: SETGLOBAL R246 K308    ; ForceUpdate3DElements := R246
1607 [-]: SETGLOBAL R246 K309    ; 0xE9112D25 := R246
1608 [-]: CLOSURE   R246 169     ; R246 := closure(Function #170)
1609 [-]: MOVE      R0 R26       ; R0 := R26
1610 [-]: SETGLOBAL R246 K310    ; IsInputBlocked := R246
1611 [-]: SETGLOBAL R246 K311    ; 0x6FE7E740 := R246
1612 [-]: CLOSURE   R246 170     ; R246 := closure(Function #171)
1613 [-]: SETGLOBAL R246 K312    ; SetTrigger := R246
1614 [-]: SETGLOBAL R246 K313    ; 0x3F956A34 := R246
1615 [-]: CLOSURE   R246 171     ; R246 := closure(Function #172)
1616 [-]: MOVE      R0 R185      ; R0 := R185
1617 [-]: SETGLOBAL R246 K314    ; OnQuestsChanged := R246
1618 [-]: SETGLOBAL R246 K315    ; 0x406548E4 := R246
1619 [-]: CLOSURE   R246 172     ; R246 := closure(Function #173)
1620 [-]: MOVE      R0 R72       ; R0 := R72
1621 [-]: MOVE      R0 R71       ; R0 := R71
1622 [-]: MOVE      R0 R20       ; R0 := R20
1623 [-]: MOVE      R0 R183      ; R0 := R183
1624 [-]: SETGLOBAL R246 K316    ; OnWorldStateChanged := R246
1625 [-]: SETGLOBAL R246 K317    ; 0xECDF5016 := R246
1626 [-]: GETGLOBAL R246 K318    ; R246 := _T
1627 [-]: LOADK     R247 K319    ; R247 := "RadialSolarMapFade"
1628 [-]: CLOSURE   R248 173     ; R248 := closure(Function #174)
1629 [-]: MOVE      R0 R66       ; R0 := R66
1630 [-]: MOVE      R0 R26       ; R0 := R26
1631 [-]: MOVE      R0 R241      ; R0 := R241
1632 [-]: MOVE      R0 R29       ; R0 := R29
1633 [-]: MOVE      R0 R32       ; R0 := R32
1634 [-]: MOVE      R0 R13       ; R0 := R13
1635 [-]: MOVE      R0 R67       ; R0 := R67
1636 [-]: MOVE      R0 R103      ; R0 := R103
1637 [-]: SETTABLE  R246 R247 R248; R246[R247] := R248
1638 [-]: CLOSURE   R246 174     ; R246 := closure(Function #175)
1639 [-]: MOVE      R0 R164      ; R0 := R164
1640 [-]: SETGLOBAL R246 K320    ; PlayersChanged := R246
1641 [-]: SETGLOBAL R246 K321    ; 0x2C9E65B5 := R246
1642 [-]: CLOSURE   R246 175     ; R246 := closure(Function #176)
1643 [-]: MOVE      R0 R128      ; R0 := R128
1644 [-]: SETGLOBAL R246 K322    ; OnSquadMissionChanged := R246
1645 [-]: SETGLOBAL R246 K323    ; 0xB5CFAF92 := R246
1646 [-]: CLOSURE   R246 176     ; R246 := closure(Function #177)
1647 [-]: MOVE      R0 R27       ; R0 := R27
1648 [-]: MOVE      R0 R92       ; R0 := R92
1649 [-]: SETGLOBAL R246 K324    ; OnLoadoutChanged := R246
1650 [-]: SETGLOBAL R246 K325    ; 0xB7028B7 := R246
1651 [-]: CLOSURE   R246 177     ; R246 := closure(Function #178)
1652 [-]: MOVE      R0 R164      ; R0 := R164
1653 [-]: MOVE      R0 R198      ; R0 := R198
1654 [-]: SETGLOBAL R246 K326    ; OnGamepadTransition := R246
1655 [-]: SETGLOBAL R246 K327    ; 0x98E4F633 := R246
1656 [-]: CLOSURE   R246 178     ; R246 := closure(Function #179)
1657 [-]: SETGLOBAL R246 K328    ; SupportsThemes := R246
1658 [-]: SETGLOBAL R246 K329    ; 0xDBE73B9E := R246
1659 [-]: CLOSURE   R246 179     ; R246 := closure(Function #180)
1660 [-]: MOVE      R0 R79       ; R0 := R79
1661 [-]: SETGLOBAL R246 K330    ; OnMatchMakingModeChanged := R246
1662 [-]: SETGLOBAL R246 K331    ; 0x30A832FF := R246
1663 [-]: CLOSURE   R246 180     ; R246 := closure(Function #181)
1664 [-]: MOVE      R0 R52       ; R0 := R52
1665 [-]: SETGLOBAL R246 K332    ; EntryFocused := R246
1666 [-]: SETGLOBAL R246 K333    ; 0x381FBE06 := R246
1667 [-]: CLOSURE   R246 181     ; R246 := closure(Function #182)
1668 [-]: MOVE      R0 R52       ; R0 := R52
1669 [-]: SETGLOBAL R246 K334    ; EntryUnfocused := R246
1670 [-]: SETGLOBAL R246 K335    ; 0x698CC3D4 := R246
1671 [-]: CLOSURE   R246 182     ; R246 := closure(Function #183)
1672 [-]: MOVE      R0 R52       ; R0 := R52
1673 [-]: SETGLOBAL R246 K336    ; EntryPressed := R246
1674 [-]: SETGLOBAL R246 K337    ; 0x5204B69A := R246
1675 [-]: CLOSURE   R246 183     ; R246 := closure(Function #184)
1676 [-]: MOVE      R0 R55       ; R0 := R55
1677 [-]: SETGLOBAL R246 K338    ; DifficultySelectorFocused := R246
1678 [-]: SETGLOBAL R246 K339    ; 0xE840A9ED := R246
1679 [-]: CLOSURE   R246 184     ; R246 := closure(Function #185)
1680 [-]: MOVE      R0 R55       ; R0 := R55
1681 [-]: SETGLOBAL R246 K340    ; DifficultySelectorUnfocused := R246
1682 [-]: SETGLOBAL R246 K341    ; 0xE59FF0AA := R246
1683 [-]: CLOSURE   R246 185     ; R246 := closure(Function #186)
1684 [-]: MOVE      R0 R55       ; R0 := R55
1685 [-]: SETGLOBAL R246 K342    ; DifficultySelectorPressed := R246
1686 [-]: SETGLOBAL R246 K343    ; 0xD492C362 := R246
1687 [-]: CLOSURE   R246 186     ; R246 := closure(Function #187)
1688 [-]: MOVE      R0 R101      ; R0 := R101
1689 [-]: MOVE      R0 R55       ; R0 := R55
1690 [-]: MOVE      R0 R157      ; R0 := R157
1691 [-]: SETGLOBAL R246 K344    ; DifficultySelectorExpand := R246
1692 [-]: SETGLOBAL R246 K345    ; 0x146DBB54 := R246
1693 [-]: CLOSURE   R246 187     ; R246 := closure(Function #188)
1694 [-]: MOVE      R0 R101      ; R0 := R101
1695 [-]: MOVE      R0 R55       ; R0 := R55
1696 [-]: MOVE      R0 R157      ; R0 := R157
1697 [-]: SETGLOBAL R246 K346    ; DifficultySelectorCollapse := R246
1698 [-]: SETGLOBAL R246 K347    ; 0x6D2B55B3 := R246
1699 [-]: CLOSURE   R246 188     ; R246 := closure(Function #189)
1700 [-]: MOVE      R0 R52       ; R0 := R52
1701 [-]: MOVE      R0 R125      ; R0 := R125
1702 [-]: SETGLOBAL R246 K348    ; ClickBlockerClicked := R246
1703 [-]: SETGLOBAL R246 K349    ; 0xDE136702 := R246
1704 [-]: CLOSURE   R122 189     ; R122 := closure(Function #190)
1705 [-]: MOVE      R0 R113      ; R0 := R113
1706 [-]: MOVE      R0 R164      ; R0 := R164
1707 [-]: MOVE      R0 R185      ; R0 := R185
1708 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 329
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Region"]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0x221C9700
 12 [-]: CALL      R1 1 2       ; R1 := R1()
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 15 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x69B983D"]
 19 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 22 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["clipName"]
 23 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x4F6BF2C8"]
 26 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 27 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 28 [-]: SETTABLE  R6 K8 R2     ; R6["x"] := R2
 29 [-]: SETTABLE  R6 K9 R3     ; R6["y"] := R3
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: MOVE      R1 R4        ; R1 := R4
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 34 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 62
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
 37 [-]: GETUPVAL  R5 U0        ; R5 := U0
 38 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Region"]
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["instance"]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 62
 42 [-]: JMP       62           ; PC := 62
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 45 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["instance"]
 46 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x6DA72501"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 49 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0xAF296C52"]
 50 [-]: MOVE      R7 R4        ; R7 := R4
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: GETUPVAL  R6 U1        ; R6 := U1
 53 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0x4F6BF2C8"]
 54 [-]: GETGLOBAL R7 K5        ; R7 := mMovie
 55 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 56 [-]: GETTABLE  R9 R5 K8     ; R9 := R5["x"]
 57 [-]: SETTABLE  R8 K8 R9     ; R8["x"] := R9
 58 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["y"]
 59 [-]: SETTABLE  R8 K9 R9     ; R8["y"] := R9
 60 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 61 [-]: MOVE      R1 R6        ; R1 := R6
 62 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 63 [-]: SETTABLE  R6 K14 K15   ; R6["outer"] := 0.059999998658895
 64 [-]: SETTABLE  R6 K16 K17   ; R6["inner"] := 0.019999999552965
 65 [-]: LOADK     R7 K18       ; R7 := 0
 66 [-]: GETUPVAL  R8 U1        ; R8 := U1
 67 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["0xF81722A2"]
 68 [-]: GETUPVAL  R9 U2        ; R9 := U2
 69 [-]: GETUPVAL  R10 U3       ; R10 := U3
 70 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["ZoomedMultiplier"]
 71 [-]: GETUPVAL  R11 U3       ; R11 := U3
 72 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["SpaceMultiplier"]
 73 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 74 [-]: GETUPVAL  R9 U4        ; R9 := U4
 75 [-]: SETTABLE  R9 K22 R8    ; R9["SpeedMultiplier"] := R8
 76 [-]: TEST      R0 0         ; if not R0 then PC := 124
 77 [-]: JMP       124          ; PC := 124
 78 [-]: GETUPVAL  R9 U1        ; R9 := U1
 79 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["0xF81722A2"]
 80 [-]: GETUPVAL  R10 U2       ; R10 := U2
 81 [-]: GETUPVAL  R11 U3       ; R11 := U3
 82 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["ZoomedHoveringMultiplier"]
 83 [-]: GETUPVAL  R12 U3       ; R12 := U3
 84 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["SpaceHoveringMultiplier"]
 85 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 86 [-]: GETUPVAL  R10 U1       ; R10 := U1
 87 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["0x5328C56B"]
 88 [-]: GETGLOBAL R11 K5       ; R11 := mMovie
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: GETUPVAL  R11 U1       ; R11 := U1
 91 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x4F6BF2C8"]
 92 [-]: GETGLOBAL R12 K5       ; R12 := mMovie
 93 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 94 [-]: GETTABLE  R14 R10 K8   ; R14 := R10["x"]
 95 [-]: SETTABLE  R13 K8 R14   ; R13["x"] := R14
 96 [-]: GETTABLE  R14 R10 K9   ; R14 := R10["y"]
 97 [-]: SETTABLE  R13 K9 R14   ; R13["y"] := R14
 98 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 99 [-]: GETGLOBAL R12 K26      ; R12 := math
100 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["0x8B011038"]
101 [-]: GETGLOBAL R13 K28      ; R13 := 0xB09F286F
102 [-]: MOVE      R14 R11      ; R14 := R11
103 [-]: MOVE      R15 R1       ; R15 := R1
104 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
105 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
106 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
107 [-]: MOVE      R7 R12       ; R7 := R12
108 [-]: GETTABLE  R12 R6 K14   ; R12 := R6["outer"]
109 [-]: LE        0 R7 R12     ; if R7 > R12 then PC := 124
110 [-]: JMP       124          ; PC := 124
111 [-]: GETTABLE  R12 R6 K16   ; R12 := R6["inner"]
112 [-]: SUB       R12 R7 R12   ; R12 := R7 - R12
113 [-]: GETTABLE  R13 R6 K14   ; R13 := R6["outer"]
114 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
115 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
116 [-]: DIV       R12 R12 R13  ; R12 := R12 / R13
117 [-]: GETUPVAL  R13 U4       ; R13 := U4
118 [-]: GETGLOBAL R14 K29      ; R14 := 0x93034B55
119 [-]: MOVE      R15 R8       ; R15 := R8
120 [-]: MOVE      R16 R9       ; R16 := R9
121 [-]: SUB       R17 K30 R12  ; R17 := 1 - R12
122 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
123 [-]: SETTABLE  R13 K22 R14  ; R13["SpeedMultiplier"] := R14
124 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 363
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x372CB914"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x2EA5AFA"]
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: GETGLOBAL R2 K3        ; R2 := gFlashMgr
  9 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xE8178C52"]
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 368
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF3E132E0"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x68998E7D"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: GETGLOBAL R1 K5        ; R1 := math
 13 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 14 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["MaxX"]
 19 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 20 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETGLOBAL R1 K5        ; R1 := math
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 24 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 25 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0xEE069D65"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MaxY"]
 29 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 30 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 31 [-]: GETUPVAL  R0 U0        ; R0 := U0
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 34 [-]: GETUPVAL  R2 U0        ; R2 := U0
 35 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["MaxX"]
 36 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 37 [-]: GETUPVAL  R4 U0        ; R4 := U0
 38 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["MinX"]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 41 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 42 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 43 [-]: SETTABLE  R0 K9 R1     ; R0["X"] := R1
 44 [-]: GETUPVAL  R0 U0        ; R0 := U0
 45 [-]: GETUPVAL  R1 U1        ; R1 := U1
 46 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
 49 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["MinY"]
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 54 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 55 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 56 [-]: SETTABLE  R0 K14 R1    ; R0["Y"] := R1
 57 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 58 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 59 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 60 [-]: LOADK     R3 K18       ; R3 := "_x"
 61 [-]: GETUPVAL  R4 U0        ; R4 := U0
 62 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["X"]
 63 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 64 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 65 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 66 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 67 [-]: LOADK     R3 K19       ; R3 := "_y"
 68 [-]: GETUPVAL  R4 U0        ; R4 := U0
 69 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["Y"]
 70 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 71 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 72 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 73 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 74 [-]: LOADK     R3 K20       ; R3 := "_visible"
 75 [-]: GETUPVAL  R4 U0        ; R4 := U0
 76 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["IsVisible"]
 77 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 78 [-]: GETUPVAL  R0 U2        ; R0 := U2
 79 [-]: GETUPVAL  R1 U0        ; R1 := U0
 80 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["X"]
 81 [-]: GETUPVAL  R2 U0        ; R2 := U0
 82 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Y"]
 83 [-]: CALL      R0 3 1       ; R0(R1,R2)
 84 [-]: GETGLOBAL R0 K22       ; R0 := 0x400E7765
 85 [-]: GETUPVAL  R1 U3        ; R1 := U3
 86 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 87 [-]: TEST      R0 1         ; if R0 then PC := 98
 88 [-]: JMP       98           ; PC := 98
 89 [-]: GETUPVAL  R0 U3        ; R0 := U3
 90 [-]: SELF      R0 R0 K23    ; R1 := R0; R0 := R0["0x8C7099E9"]
 91 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 92 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 93 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 94 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 95 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEE069D65"]
 96 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 97 [-]: CALL      R0 0 1       ; R0(R1,...)
 98 [-]: GETUPVAL  R0 U4        ; R0 := U4
 99 [-]: GETUPVAL  R1 U0        ; R1 := U0
100 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["MaxX"]
101 [-]: GETUPVAL  R2 U0        ; R2 := U0
102 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
103 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
104 [-]: SETTABLE  R0 K24 R1    ; R0["AspectRatio"] := R1
105 [-]: GETUPVAL  R0 U1        ; R0 := U1
106 [-]: GETTABLE  R0 R0 K25    ; R0 := R0["0xEA569929"]
107 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
108 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
109 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
110 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
111 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
112 [-]: LOADK     R5 K27       ; R5 := "_width"
113 [-]: MOVE      R6 R0        ; R6 := R0
114 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
115 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
116 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
117 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
118 [-]: LOADK     R5 K28       ; R5 := "_height"
119 [-]: MOVE      R6 R1        ; R6 := R1
120 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
121 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
122 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
123 [-]: LOADK     R4 K29       ; R4 := "ClickBlocker"
124 [-]: LOADK     R5 K27       ; R5 := "_width"
125 [-]: MOVE      R6 R0        ; R6 := R0
126 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
127 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
128 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
129 [-]: LOADK     R4 K29       ; R4 := "ClickBlocker"
130 [-]: LOADK     R5 K28       ; R5 := "_height"
131 [-]: MOVE      R6 R1        ; R6 := R1
132 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
133 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 397
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["SquadOverlay"]
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K4        ; R2 := "OpenInvite"
 11 [-]: LOADK     R3 K5        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 403
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x930EC5CF"]
  8 [-]: LOADK     R1 K3        ; R1 := "SwitchLoadout"
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0xDA085F65"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 423
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x221C9700
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["x"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["y"]
  4 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["z"]
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: LOADK     R2 K4        ; R2 := 1
  7 [-]: LOADK     R3 K4        ; R3 := 1
  8 [-]: LOADK     R4 K4        ; R4 := 1
  9 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["x"]
 10 [-]: MUL       R5 R5 R4     ; R5 := R5 * R4
 11 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 12 [-]: SETTABLE  R1 K1 R5     ; R1["x"] := R5
 13 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["y"]
 14 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 15 [-]: SETTABLE  R1 K2 R5     ; R1["y"] := R5
 16 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["z"]
 17 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 18 [-]: SETTABLE  R1 K3 R5     ; R1["z"] := R5
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 438
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mapFogTexture
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADK     R0 K2        ; R0 := 0
  8 [-]: LOADK     R1 K3        ; R1 := 63
  9 [-]: LOADK     R2 K4        ; R2 := 1
 10 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 11 [-]: LOADK     R4 K2        ; R4 := 0
 12 [-]: LOADK     R5 K3        ; R5 := 63
 13 [-]: LOADK     R6 K4        ; R6 := 1
 14 [-]: FORPREP   R4 24        ; R4 -= R6; PC := 24
 15 [-]: LOADK     R8 K5        ; R8 := 255
 16 [-]: GETGLOBAL R9 K1        ; R9 := mapFogTexture
 17 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x9EC00F7F"]
 18 [-]: MOVE      R11 R8       ; R11 := R8
 19 [-]: MOVE      R12 R3       ; R12 := R3
 20 [-]: MOVE      R13 R7       ; R13 := R7
 21 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 22 [-]: GETGLOBAL R9 K7        ; R9 := 0x1BF588C6
 23 [-]: CALL      R9 1 1       ; R9()
 24 [-]: FORLOOP   R4 15        ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
 25 [-]: FORLOOP   R0 11        ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
 26 [-]: GETGLOBAL R9 K8        ; R9 := gFlashMgr
 27 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x2E4D89AB"]
 28 [-]: GETGLOBAL R11 K1       ; R11 := mapFogTexture
 29 [-]: CALL      R9 3 1       ; R9(R10,R11)
 30 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 455
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["guildId"]
  3 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 116
  4 [-]: JMP       116          ; PC := 116
  5 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["locName"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["EDIT_NODES"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 50
 15 [-]: JMP       50           ; PC := 50
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: LOADK     R3 K6        ; R3 := "\r["
 18 [-]: GETGLOBAL R4 K7        ; R4 := 0x9FAED6BC
 19 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["name"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: LOADK     R5 K9        ; R5 := "]"
 22 [-]: CONCAT    R1 R2 R5     ; R1 := R2 .. R3 .. R4 .. R5
 23 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 24 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["radialSector"]
 25 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mission"]
 26 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["levelOverride"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 107
 29 [-]: JMP       107          ; PC := 107
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 107
 34 [-]: JMP       107          ; PC := 107
 35 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["radialSector"]
 36 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mission"]
 37 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["levelOverride"]
 38 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x1B252E3C"]
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: GETGLOBAL R3 K15       ; R3 := string
 41 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0xAF449107"]
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: LOADK     R5 K17       ; R5 := ".*/(.*)"
 44 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 45 [-]: MOVE      R4 R1        ; R4 := R1
 46 [-]: LOADK     R5 K18       ; R5 := "\r"
 47 [-]: MOVE      R6 R3        ; R6 := R3
 48 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 49 [-]: JMP       107          ; PC := 107
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: GETUPVAL  R5 U1        ; R5 := U1
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["EDIT_NODE_DECOS"]
 53 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 107
 54 [-]: JMP       107          ; PC := 107
 55 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["deco"]
 56 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 107
 57 [-]: JMP       107          ; PC := 107
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["mEditingRotation"]
 60 [-]: TEST      R4 1         ; if R4 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["mShiftDown"]
 64 [-]: TEST      R4 1         ; if R4 then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R4 U3        ; R4 := U3
 67 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["mControlDown"]
 68 [-]: TEST      R4 0         ; if not R4 then PC := 84
 69 [-]: JMP       84           ; PC := 84
 70 [-]: MOVE      R4 R1        ; R4 := R1
 71 [-]: LOADK     R5 K18       ; R5 := "\r"
 72 [-]: GETUPVAL  R6 U2        ; R6 := U2
 73 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["mRotationAxis"]
 74 [-]: LOADK     R7 K25       ; R7 := "="
 75 [-]: GETGLOBAL R8 K7        ; R8 := 0x9FAED6BC
 76 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["deco"]
 77 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["mRotation"]
 78 [-]: GETUPVAL  R10 U2       ; R10 := U2
 79 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mRotationAxis"]
 80 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 81 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 82 [-]: CONCAT    R1 R4 R8     ; R1 := R4 .. R5 .. R6 .. R7 .. R8
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETUPVAL  R4 U2        ; R4 := U2
 85 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["mEditingScale"]
 86 [-]: TEST      R4 1         ; if R4 then PC := 92
 87 [-]: JMP       92           ; PC := 92
 88 [-]: GETUPVAL  R4 U3        ; R4 := U3
 89 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["mAltDown"]
 90 [-]: TEST      R4 0         ; if not R4 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: MOVE      R4 R1        ; R4 := R1
 93 [-]: LOADK     R5 K29       ; R5 := "\rScale="
 94 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
 95 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
 96 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["mScale"]
 97 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 98 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 99 [-]: JMP       107          ; PC := 107
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: LOADK     R5 K18       ; R5 := "\r"
102 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
103 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
104 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["mOffset"]
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
107 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["locked"]
108 [-]: TEST      R4 0         ; if not R4 then PC := 116
109 [-]: JMP       116          ; PC := 116
110 [-]: GETTABLE  R4 R0 K33    ; R4 := R0["locationEnabled"]
111 [-]: TEST      R4 0         ; if not R4 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: GETUPVAL  R4 U4        ; R4 := U4
114 [-]: MOVE      R5 R1        ; R5 := R1
115 [-]: CONCAT    R1 R4 R5     ; R1 := R4 .. R5
116 [-]: GETGLOBAL R4 K34       ; R4 := mMovie
117 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4["0xD6A79FE9"]
118 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["clipName"]
119 [-]: LOADK     R7 K37       ; R7 := ".Name.Label"
120 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
121 [-]: LOADK     R7 K38       ; R7 := "text"
122 [-]: MOVE      R8 R1        ; R8 := R1
123 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
124 [-]: GETGLOBAL R4 K39       ; R4 := 0xF595ADDE
125 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
126 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x6B7B470B"]
127 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
128 [-]: LOADK     R8 K37       ; R8 := ".Name.Label"
129 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
130 [-]: LOADK     R8 K41       ; R8 := "textWidth"
131 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
132 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
133 [-]: TEST      R4 0         ; if not R4 then PC := 142
134 [-]: JMP       142          ; PC := 142
135 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
136 [-]: SELF      R5 R5 K42    ; R6 := R5; R5 := R5["0x880196A7"]
137 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
138 [-]: LOADK     R8 K43       ; R8 := "Name.Bg"
139 [-]: LOADK     R9 K44       ; R9 := "_width"
140 [-]: ADD       R10 R4 K45   ; R10 := R4 + 7
141 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
142 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 490
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 12        ; R0 -= R2; PC := 12
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x1BF588C6
  7 [-]: CALL      R4 1 1       ; R4()
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 11 [-]: CALL      R4 2 1       ; R4(R5)
 12 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 13 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 499
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Playing"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: LOADK     R2 K2        ; R2 := "InfoTip.NodeTransmission"
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SETTABLE  R2 K1 K3     ; R2["Playing"] := "0x1"
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SETTABLE  R2 K4 R0     ; R2["Node"] := R0
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SETTABLE  R2 K5 R1     ; R2["Transmission"] := R1
 19 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x616DD092"]
 21 [-]: GETGLOBAL R4 K8        ; R4 := _G
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UIMovie_TransmissionMovie"]
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 25 [-]: MOVE      R4 R2        ; R4 := R2
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: TEST      R3 1         ; if R3 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R3 K10       ; R3 := _T
 30 [-]: SETTABLE  R3 K11 K12   ; R3["curTransmission"] := nil
 31 [-]: GETGLOBAL R3 K10       ; R3 := _T
 32 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 33 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 34 [-]: SELF      R3 R2 K14    ; R4 := R2; R3 := R2["0x458F27A9"]
 35 [-]: LOADK     R5 K15       ; R5 := "PreviewClose"
 36 [-]: LOADK     R6 K16       ; R6 := "true"
 37 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 38 [-]: GETGLOBAL R3 K10       ; R3 := _T
 39 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["QueuedTransmissions"]
 40 [-]: EQ        0 R3 K12     ; if R3 ~= nil then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETGLOBAL R3 K10       ; R3 := _T
 43 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 44 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 45 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 46 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 47 [-]: GETUPVAL  R5 U1        ; R5 := U1
 48 [-]: LOADK     R6 K19       ; R6 := "_visible"
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 51 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 52 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 53 [-]: LOADK     R5 K20       ; R5 := "InfoTip.EnemyIcon"
 54 [-]: LOADK     R6 K19       ; R6 := "_visible"
 55 [-]: MOVE      R7 R0        ; R7 := R0
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K10       ; R3 := _T
 58 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 59 [-]: SETTABLE  R3 K21 R4    ; R3["TransmissionOverrideMovie"] := R4
 60 [-]: GETGLOBAL R3 K10       ; R3 := _T
 61 [-]: GETUPVAL  R4 U1        ; R4 := U1
 62 [-]: LOADK     R5 K23       ; R5 := ".Container"
 63 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 64 [-]: SETTABLE  R3 K22 R4    ; R3["TransmissionOverrideMainClipName"] := R4
 65 [-]: GETGLOBAL R3 K10       ; R3 := _T
 66 [-]: SETTABLE  R3 K24 K12   ; R3["TransmissionOverrideY"] := nil
 67 [-]: GETGLOBAL R3 K10       ; R3 := _T
 68 [-]: SETTABLE  R3 K25 K12   ; R3["TransmissionOverrideX"] := nil
 69 [-]: GETGLOBAL R3 K26       ; R3 := table
 70 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["0xE6450C9D"]
 71 [-]: GETGLOBAL R4 K10       ; R4 := _T
 72 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["QueuedTransmissions"]
 73 [-]: MOVE      R5 R1        ; R5 := R1
 74 [-]: CALL      R3 3 1       ; R3(R4,R5)
 75 [-]: GETGLOBAL R3 K6        ; R3 := gFlashMgr
 76 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3["0x24FF386"]
 77 [-]: GETGLOBAL R5 K8        ; R5 := _G
 78 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["UIMovie_TransmissionMovie"]
 79 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 80 [-]: MOVE      R2 R3        ; R2 := R3
 81 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 82 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 83 [-]: GETUPVAL  R5 U1        ; R5 := U1
 84 [-]: LOADK     R6 K30       ; R6 := ".Container.ImageOuter.Image"
 85 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 86 [-]: GETGLOBAL R6 K31       ; R6 := infoTransmissionMaterial
 87 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 88 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 89 [-]: GETUPVAL  R4 U0        ; R4 := U0
 90 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["Projector"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 0         ; if not R3 then PC := 94
 93 [-]: JMP       94           ; PC := 94
 94 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 95 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 96 [-]: GETUPVAL  R5 U1        ; R5 := U1
 97 [-]: LOADK     R6 K33       ; R6 := "_alpha"
 98 [-]: LOADK     R7 K34       ; R7 := 0
 99 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
100 [-]: GETGLOBAL R3 K35       ; R3 := 0x52E17A90
101 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
102 [-]: GETUPVAL  R5 U1        ; R5 := U1
103 [-]: GETGLOBAL R6 K36       ; R6 := UISys
104 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["FlashInstance_EASE_OUT_ELASTIC"]
105 [-]: NEWTABLE  R7 1 0       ; R7 := {}
106 [-]: LOADK     R8 K33       ; R8 := "_alpha"
107 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
108 [-]: NEWTABLE  R8 1 0       ; R8 := {}
109 [-]: LOADK     R9 K38       ; R9 := 75
110 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
111 [-]: LOADK     R9 K39       ; R9 := 1.3500000238419
112 [-]: LOADK     R10 K34      ; R10 := 0
113 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
114 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 558
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6B7B470B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_alpha"
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
  8 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
  9 [-]: LOADK     R4 K5        ; R4 := "_visible"
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
 15 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 16 [-]: LOADK     R5 K6        ; R5 := 0
 17 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 18 [-]: CLOSURE   R1 0         ; R1 := closure(Function #11.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: MOVE      R0 R0        ; R0 := R0
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETGLOBAL R2 K7        ; R2 := 0x52E17A90
 23 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETGLOBAL R5 K8        ; R5 := UISys
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["FlashInstance_LINEAR"]
 27 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 28 [-]: MOVE      R7 R1        ; R7 := R1
 29 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 30 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 31 [-]: LOADK     R8 K10       ; R8 := 1
 32 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 33 [-]: LOADK     R8 K11       ; R8 := 0.25
 34 [-]: LOADK     R9 K6        ; R9 := 0
 35 [-]: CLOSURE   R10 1        ; R10 := closure(Function #11.2)
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 39 [-]: RETURN    R0 1         ; return 


; Function #11.1:
;
; Name:            
; Defined at line: 565
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LOADK     R4 K2        ; R4 := "_alpha"
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
  6 [-]: LOADK     R6 K4        ; R6 := 0
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: MOVE      R8 R0        ; R8 := R0
  9 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: LOADK     R3 K5        ; R3 := "InfoTip.EnemyIcon"
 14 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 15 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
 16 [-]: LOADK     R6 K4        ; R6 := 0
 17 [-]: LOADK     R7 K6        ; R7 := 100
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Projector"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 27
 26 [-]: JMP       27           ; PC := 27
 27 [-]: RETURN    R0 1         ; return 


; Function #11.2:
;
; Name:            
; Defined at line: 576
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Projector"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R0 K5        ; R0 := gBackgroundRegion
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x9B0A3887"]
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Projector"]
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: SETTABLE  R0 K7 K8     ; R0["Playing"] := "0x0"
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SETTABLE  R0 K9 K10    ; R0["Node"] := nil
 22 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 588
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := transmissionInterruptedSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: SETTABLE  R0 K2 K3     ; R0["Playing"] := "0x0"
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0xD66C1755"]
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Transmission"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 594
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 598
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gFlashMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x616DD092"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := _G
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x61494587"]
 13 [-]: LOADK     R4 K6        ; R4 := 2
 14 [-]: CLOSURE   R5 0         ; R5 := closure(Function #14.1)
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x9FAED6BC
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["name"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETGLOBAL R3 K9        ; R3 := _T
 25 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 26 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R3 K9        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 31 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mDefenderMissionInfo"]
 33 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["uniqueName"]
 34 [-]: EQ        0 R3 K13     ; if R3 ~= "/Lotus/Language/Bosses/BossPhorid" then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADK     R2 K14       ; R2 := "/Lotus/Types/Keys/SortieBossKeyPhorid"
 37 [-]: GETGLOBAL R3 K15       ; R3 := 0x63B09107
 38 [-]: GETUPVAL  R4 U4        ; R4 := U4
 39 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mBossInfo"]
 40 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 41 [-]: JMP       59           ; PC := 59
 42 [-]: GETTABLE  R8 R7 K17    ; R8 := R7["BossNode"]
 43 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 59
 44 [-]: JMP       59           ; PC := 59
 45 [-]: GETUPVAL  R8 U5        ; R8 := U5
 46 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["0xF81722A2"]
 47 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 48 [-]: GETTABLE  R10 R7 K19   ; R10 := R7["BossNodeTransmission"]
 49 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 50 [-]: MOVE      R9 R9        ; R9 := R9
 51 [-]: GETTABLE  R10 R7 K19   ; R10 := R7["BossNodeTransmission"]
 52 [-]: GETTABLE  R11 R7 K20   ; R11 := R7["Transmission"]
 53 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 54 [-]: GETUPVAL  R9 U6        ; R9 := U6
 55 [-]: MOVE      R10 R0       ; R10 := R0
 56 [-]: MOVE      R11 R8       ; R11 := R8
 57 [-]: CALL      R9 3 1       ; R9(R10,R11)
 58 [-]: JMP       61           ; PC := 61
 59 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 42; R5 := R6 end
 60 [-]: JMP       42           ; PC := 42
 61 [-]: RETURN    R0 1         ; return 


; Function #14.1:
;
; Name:            
; Defined at line: 602
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["nodeIndex"]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["nodeIndex"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 625
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mEdgeNode1"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 32
  7 [-]: JMP       32           ; PC := 32
  8 [-]: LOADK     R1 K3        ; R1 := ": "
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mEdgeNode1"]
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["radialSector"]
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["name"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: CONCAT    R0 R1 R2     ; R0 := R1 .. R2
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mEdgeNode2"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 32
 21 [-]: JMP       32           ; PC := 32
 22 [-]: MOVE      R1 R0        ; R1 := R0
 23 [-]: LOADK     R2 K8        ; R2 := " TO "
 24 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mEdgeNode2"]
 27 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["radialSector"]
 28 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["name"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: LOADK     R4 K9        ; R4 := " (A)dd or (D)elete?"
 31 [-]: CONCAT    R0 R1 R4     ; R0 := R1 .. R2 .. R3 .. R4
 32 [-]: LOADK     R1 K10       ; R1 := "EDITING EDGES"
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: LOADK     R3 K11       ; R3 := "\r >CTRL=Multi-select"
 35 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 36 [-]: RETURN    R1 2         ; return R1
 37 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 637
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: SETTABLE  R1 K1 K2     ; R1["INACTIVE_NODE_ALPHA"] := 0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["EDIT_REGIONS"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R0 K4        ; R0 := "EDITING REGIONS"
 10 [-]: JMP       83           ; PC := 83
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["EDIT_REGION_FRAMING"]
 14 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 37
 15 [-]: JMP       37           ; PC := 37
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: GETUPVAL  R2 U4        ; R2 := U4
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mFramingRegion"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: LOADK     R2 K7        ; R2 := "NONE"
 21 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R3 K9        ; R3 := string
 24 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x639C642A"]
 25 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 26 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 27 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["name"]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: MOVE      R2 R3        ; R2 := R3
 32 [-]: LOADK     R3 K14       ; R3 := "EDITING REGION FRAMING ["
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: LOADK     R5 K15       ; R5 := "]\r >R=Toggle"
 35 [-]: CONCAT    R0 R3 R5     ; R0 := R3 .. R4 .. R5
 36 [-]: JMP       83           ; PC := 83
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETUPVAL  R4 U2        ; R4 := U2
 39 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["EDIT_NODES"]
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: LOADK     R0 K17       ; R0 := "EDITING NODES\r >SHIFT=Z Depth"
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 45 [-]: JMP       83           ; PC := 83
 46 [-]: GETUPVAL  R3 U1        ; R3 := U1
 47 [-]: GETUPVAL  R4 U2        ; R4 := U2
 48 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["EDIT_EDGES"]
 49 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETUPVAL  R3 U5        ; R3 := U5
 52 [-]: CALL      R3 1 2       ; R3 := R3()
 53 [-]: MOVE      R0 R3        ; R0 := R3
 54 [-]: GETUPVAL  R3 U0        ; R3 := U0
 55 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 56 [-]: JMP       83           ; PC := 83
 57 [-]: GETUPVAL  R3 U1        ; R3 := U1
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["EDIT_NODE_DECOS"]
 60 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADK     R0 K21       ; R0 := "EDITING NODE DECOS \r >ALT=Scale\r >SHIFT=Heading\r >CTRL=Pitch\r >SHIFT+CTRL=Bank"
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETUPVAL  R3 U1        ; R3 := U1
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["EDIT_SHORTCUT_CONTROL_POINTS"]
 67 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADK     R0 K23       ; R0 := "EDITING EDGE CONTROL POINTS \r >SHIFT=Z Depth"
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETGLOBAL R3 K24       ; R3 := _T
 72 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 73 [-]: TEST      R3 0         ; if not R3 then PC := 83
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETGLOBAL R3 K24       ; R3 := _T
 76 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 77 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["StarChartLabel"]
 78 [-]: TEST      R3 0         ; if not R3 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R3 K24       ; R3 := _T
 81 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 82 [-]: GETTABLE  R0 R3 K26    ; R0 := R3["StarChartLabel"]
 83 [-]: GETGLOBAL R3 K11       ; R3 := mMovie
 84 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0x1C19D966"]
 85 [-]: LOADK     R5 K28       ; R5 := "ScreenModeLabel"
 86 [-]: LOADK     R6 K29       ; R6 := "text"
 87 [-]: MOVE      R7 R0        ; R7 := R0
 88 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 89 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 666
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 K0        ; R3 := 1
  5 [-]: FORPREP   R1 57        ; R1 -= R3; PC := 57
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["IsShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 57
 10 [-]: JMP       57           ; PC := 57
 11 [-]: GETGLOBAL R5 K2        ; R5 := 0x63B09107
 12 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 15 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["controlPointA"]
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 18 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["controlPointB"]
 19 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 20 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 21 [-]: JMP       55           ; PC := 55
 22 [-]: TEST      R0 0         ; if not R0 then PC := 51
 23 [-]: JMP       51           ; PC := 51
 24 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 25 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0xBDD34CC6"]
 26 [-]: GETGLOBAL R12 K8       ; R12 := hoverRing
 27 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["position"]
 28 [-]: GETUPVAL  R14 U1       ; R14 := U1
 29 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["RING_ROTATION"]
 30 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 31 [-]: SETTABLE  R9 K5 R10    ; R9["ringInstance"] := R10
 32 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 33 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xA20F64C0"]
 34 [-]: GETGLOBAL R12 K12      ; R12 := 0xB5A59043
 35 [-]: LOADK     R13 K13      ; R13 := 0
 36 [-]: LOADK     R14 K14      ; R14 := 255
 37 [-]: LOADK     R15 K13      ; R15 := 0
 38 [-]: LOADK     R16 K14      ; R16 := 255
 39 [-]: CALL      R12 5 0      ; R12,... := R12(R13,R14,R15,R16)
 40 [-]: CALL      R10 0 1      ; R10(R11,...)
 41 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 42 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x9F133E77"]
 43 [-]: LOADK     R12 K16      ; R12 := 0.025000000372529
 44 [-]: LOADK     R13 K16      ; R13 := 0.025000000372529
 45 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 46 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 47 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0x66A7D2"]
 48 [-]: LOADK     R12 K18      ; R12 := 0.20000000298023
 49 [-]: CALL      R10 3 1      ; R10(R11,R12)
 50 [-]: JMP       55           ; PC := 55
 51 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 52 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10["0x9B0A3887"]
 53 [-]: GETTABLE  R12 R9 K5    ; R12 := R9["ringInstance"]
 54 [-]: CALL      R10 3 1      ; R10(R11,R12)
 55 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 22; R7 := R8 end
 56 [-]: JMP       22           ; PC := 22
 57 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 58 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 683
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["EDIT_SHORTCUT_CONTROL_POINTS"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: GETUPVAL  R2 U3        ; R2 := U3
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: GETUPVAL  R2 U4        ; R2 := U4
 22 [-]: CALL      R2 1 1       ; R2()
 23 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 699
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: NEWTABLE  R0 11 0      ; R0 := {}
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ALERT_FLAG"]
 16 [-]: GETUPVAL  R2 U4        ; R2 := U4
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["EVENT_FLAG"]
 18 [-]: GETUPVAL  R3 U4        ; R3 := U4
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["PVP_FLAG"]
 20 [-]: GETUPVAL  R4 U4        ; R4 := U4
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NIGHTMARE_FLAG"]
 22 [-]: GETUPVAL  R5 U4        ; R5 := U4
 23 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["INVASION_ATTACKER_FLAG"]
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["INVASION_DEFENDER_FLAG"]
 26 [-]: GETUPVAL  R7 U4        ; R7 := U4
 27 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["BADLAND_MISSION_FLAG"]
 28 [-]: GETUPVAL  R8 U4        ; R8 := U4
 29 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["SORTIE_MISSION_FLAG"]
 30 [-]: GETUPVAL  R9 U4        ; R9 := U4
 31 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["SYNDICATE_MISSION_FLAG"]
 32 [-]: GETUPVAL  R10 U4       ; R10 := U4
 33 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["ACTIVE_MISSION_FLAG"]
 34 [-]: GETUPVAL  R11 U4       ; R11 := U4
 35 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["KUVA_TOWER_MISSION_FLAG"]
 36 [-]: SETLIST   R0 11 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 11
 37 [-]: CLOSURE   R1 0         ; R1 := closure(Function #19.1)
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: GETGLOBAL R2 K12       ; R2 := gMatchingService
 40 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x40DFB818"]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: TEST      R3 0         ; if not R3 then PC := 61
 44 [-]: JMP       61           ; PC := 61
 45 [-]: GETGLOBAL R3 K14       ; R3 := 0x93B1256B
 46 [-]: LOADK     R4 K15       ; R4 := "Aggregation Results:"
 47 [-]: CALL      R3 2 1       ; R3(R4)
 48 [-]: GETGLOBAL R3 K16       ; R3 := 0xECFDD17
 49 [-]: MOVE      R4 R2        ; R4 := R2
 50 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 51 [-]: JMP       59           ; PC := 59
 52 [-]: GETGLOBAL R8 K14       ; R8 := 0x93B1256B
 53 [-]: LOADK     R9 K17       ; R9 := "gameModeId="
 54 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["gameModeId"]
 55 [-]: LOADK     R11 K19      ; R11 := ", count="
 56 [-]: GETTABLE  R12 R7 K20   ; R12 := R7["count"]
 57 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 58 [-]: CALL      R8 2 1       ; R8(R9)
 59 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 52; R5 := R6 end
 60 [-]: JMP       52           ; PC := 52
 61 [-]: LOADNIL   R8 R10       ; R8 := R9 := R10 := nil
 62 [-]: GETGLOBAL R11 K16      ; R11 := 0xECFDD17
 63 [-]: GETUPVAL  R12 U5       ; R12 := U5
 64 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 65 [-]: JMP       249          ; PC := 249
 66 [-]: GETGLOBAL R16 K21      ; R16 := 0x1BF588C6
 67 [-]: LOADK     R17 K22      ; R17 := 0
 68 [-]: CALL      R16 2 1      ; R16(R17)
 69 [-]: GETTABLE  R16 R15 K23  ; R16 := R15["nodeType"]
 70 [-]: GETGLOBAL R17 K24      ; R17 := Lotus_Game
 71 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["NT_EMPTY"]
 72 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 249
 73 [-]: JMP       249          ; PC := 249
 74 [-]: GETTABLE  R16 R15 K26  ; R16 := R15["region"]
 75 [-]: ADD       R8 R16 K27   ; R8 := R16 + 1
 76 [-]: GETGLOBAL R16 K28      ; R16 := 0x9FAED6BC
 77 [-]: GETTABLE  R17 R15 K29  ; R17 := R15["name"]
 78 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 79 [-]: MOVE      R9 R16       ; R9 := R16
 80 [-]: GETUPVAL  R16 U4       ; R16 := U4
 81 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["0xE4E5932F"]
 82 [-]: MOVE      R17 R9       ; R17 := R9
 83 [-]: GETUPVAL  R18 U3       ; R18 := U3
 84 [-]: MOVE      R19 R15      ; R19 := R15
 85 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 86 [-]: MOVE      R10 R16      ; R10 := R16
 87 [-]: GETUPVAL  R16 U1       ; R16 := U1
 88 [-]: SETTABLE  R16 R10 K22  ; R16[R10] := 0
 89 [-]: GETGLOBAL R16 K16      ; R16 := 0xECFDD17
 90 [-]: MOVE      R17 R2       ; R17 := R2
 91 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
 92 [-]: JMP       139          ; PC := 139
 93 [-]: GETGLOBAL R21 K31      ; R21 := _G
 94 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["StalkerMode"]
 95 [-]: TEST      R21 0        ; if not R21 then PC := 127
 96 [-]: JMP       127          ; PC := 127
 97 [-]: GETTABLE  R21 R20 K18  ; R21 := R20["gameModeId"]
 98 [-]: EQ        1 R21 R10    ; if R21 == R10 then PC := 106
 99 [-]: JMP       106          ; PC := 106
100 [-]: GETTABLE  R21 R20 K18  ; R21 := R20["gameModeId"]
101 [-]: GETUPVAL  R22 U4       ; R22 := U4
102 [-]: GETTABLE  R22 R22 K7   ; R22 := R22["BADLAND_MISSION_FLAG"]
103 [-]: ADD       R22 R10 R22  ; R22 := R10 + R22
104 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 139
105 [-]: JMP       139          ; PC := 139
106 [-]: GETTABLE  R21 R15 K23  ; R21 := R15["nodeType"]
107 [-]: GETGLOBAL R22 K24      ; R22 := Lotus_Game
108 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["NT_MISSION"]
109 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 116
110 [-]: JMP       116          ; PC := 116
111 [-]: GETTABLE  R21 R15 K23  ; R21 := R15["nodeType"]
112 [-]: GETGLOBAL R22 K24      ; R22 := Lotus_Game
113 [-]: GETTABLE  R22 R22 K34  ; R22 := R22["NT_CLAN"]
114 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 139
115 [-]: JMP       139          ; PC := 139
116 [-]: GETTABLE  R21 R15 K35  ; R21 := R15["mission"]
117 [-]: GETTABLE  R21 R21 K36  ; R21 := R21["archwingRequired"]
118 [-]: TEST      R21 1        ; if R21 then PC := 139
119 [-]: JMP       139          ; PC := 139
120 [-]: GETUPVAL  R21 U1       ; R21 := U1
121 [-]: GETUPVAL  R22 U1       ; R22 := U1
122 [-]: GETTABLE  R22 R22 R10  ; R22 := R22[R10]
123 [-]: GETTABLE  R23 R20 K20  ; R23 := R20["count"]
124 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
125 [-]: SETTABLE  R21 R10 R22  ; R21[R10] := R22
126 [-]: JMP       139          ; PC := 139
127 [-]: MOVE      R21 R1       ; R21 := R1
128 [-]: GETTABLE  R22 R20 K18  ; R22 := R20["gameModeId"]
129 [-]: MOVE      R23 R10      ; R23 := R10
130 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
131 [-]: TEST      R21 0        ; if not R21 then PC := 139
132 [-]: JMP       139          ; PC := 139
133 [-]: GETUPVAL  R21 U1       ; R21 := U1
134 [-]: GETUPVAL  R22 U1       ; R22 := U1
135 [-]: GETTABLE  R22 R22 R10  ; R22 := R22[R10]
136 [-]: GETTABLE  R23 R20 K20  ; R23 := R20["count"]
137 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
138 [-]: SETTABLE  R21 R10 R22  ; R21[R10] := R22
139 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 93; R18 := R19 end
140 [-]: JMP       93           ; PC := 93
141 [-]: GETUPVAL  R21 U0       ; R21 := U0
142 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
143 [-]: EQ        0 R21 K37    ; if R21 ~= nil then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: GETUPVAL  R21 U0       ; R21 := U0
146 [-]: SETTABLE  R21 R8 K22   ; R21[R8] := 0
147 [-]: GETUPVAL  R21 U1       ; R21 := U1
148 [-]: GETTABLE  R21 R21 R10  ; R21 := R21[R10]
149 [-]: EQ        1 R21 K37    ; if R21 == nil then PC := 158
150 [-]: JMP       158          ; PC := 158
151 [-]: GETUPVAL  R21 U0       ; R21 := U0
152 [-]: GETUPVAL  R22 U0       ; R22 := U0
153 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
154 [-]: GETUPVAL  R23 U1       ; R23 := U1
155 [-]: GETTABLE  R23 R23 R10  ; R23 := R23[R10]
156 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
157 [-]: SETTABLE  R21 R8 R22   ; R21[R8] := R22
158 [-]: GETGLOBAL R21 K31      ; R21 := _G
159 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["StalkerMode"]
160 [-]: TEST      R21 0        ; if not R21 then PC := 249
161 [-]: JMP       249          ; PC := 249
162 [-]: GETUPVAL  R21 U6       ; R21 := U6
163 [-]: TEST      R21 0        ; if not R21 then PC := 197
164 [-]: JMP       197          ; PC := 197
165 [-]: EQ        0 R14 K27    ; if R14 ~= 1 then PC := 172
166 [-]: JMP       172          ; PC := 172
167 [-]: GETGLOBAL R21 K14      ; R21 := 0x93B1256B
168 [-]: LOADK     R22 K38      ; R22 := "Total nodes with open squads: "
169 [-]: LEN       R23 R2       ; R23 := # R2
170 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
171 [-]: CALL      R21 2 1      ; R21(R22)
172 [-]: GETUPVAL  R21 U1       ; R21 := U1
173 [-]: GETTABLE  R21 R21 R10  ; R21 := R21[R10]
174 [-]: LT        0 K22 R21    ; if 0 >= R21 then PC := 197
175 [-]: JMP       197          ; PC := 197
176 [-]: GETGLOBAL R21 K14      ; R21 := 0x93B1256B
177 [-]: GETGLOBAL R22 K28      ; R22 := 0x9FAED6BC
178 [-]: GETTABLE  R23 R15 K29  ; R23 := R15["name"]
179 [-]: CALL      R22 2 2      ; R22 := R22(R23)
180 [-]: LOADK     R23 K39      ; R23 := " ("
181 [-]: GETGLOBAL R24 K40      ; R24 := 0xE6DC43B0
182 [-]: GETGLOBAL R25 K28      ; R25 := 0x9FAED6BC
183 [-]: GETTABLE  R26 R15 K41  ; R26 := R15["locTag"]
184 [-]: CALL      R25 2 2      ; R25 := R25(R26)
185 [-]: MOVE      R26 R0       ; R26 := R0
186 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
187 [-]: LOADK     R25 K42      ; R25 := ")"
188 [-]: LOADK     R26 K43      ; R26 := ", matchmakingName="
189 [-]: MOVE      R27 R9       ; R27 := R9
190 [-]: LOADK     R28 K44      ; R28 := ", matchMakingId="
191 [-]: MOVE      R29 R10      ; R29 := R10
192 [-]: LOADK     R30 K45      ; R30 := ", sessionsFound="
193 [-]: GETUPVAL  R31 U1       ; R31 := U1
194 [-]: GETTABLE  R31 R31 R10  ; R31 := R31[R10]
195 [-]: CONCAT    R22 R22 R31  ; R22 := R22 .. R23 .. R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
196 [-]: CALL      R21 2 1      ; R21(R22)
197 [-]: GETGLOBAL R21 K0       ; R21 := 0x400E7765
198 [-]: GETGLOBAL R22 K46      ; R22 := mMovie
199 [-]: CALL      R21 2 2      ; R21 := R21(R22)
200 [-]: TEST      R21 1        ; if R21 then PC := 249
201 [-]: JMP       249          ; PC := 249
202 [-]: GETUPVAL  R21 U7       ; R21 := U7
203 [-]: TEST      R21 0        ; if not R21 then PC := 249
204 [-]: JMP       249          ; PC := 249
205 [-]: GETUPVAL  R21 U7       ; R21 := U7
206 [-]: GETTABLE  R21 R21 R9   ; R21 := R21[R9]
207 [-]: TEST      R21 0        ; if not R21 then PC := 249
208 [-]: JMP       249          ; PC := 249
209 [-]: GETGLOBAL R21 K46      ; R21 := mMovie
210 [-]: SELF      R21 R21 K47  ; R22 := R21; R21 := R21["0x1C19D966"]
211 [-]: GETUPVAL  R23 U7       ; R23 := U7
212 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
213 [-]: GETTABLE  R23 R23 K48  ; R23 := R23["clipName"]
214 [-]: LOADK     R24 K49      ; R24 := "_visible"
215 [-]: GETUPVAL  R25 U1       ; R25 := U1
216 [-]: TEST      R25 0        ; if not R25 then PC := 228
217 [-]: JMP       228          ; PC := 228
218 [-]: GETUPVAL  R25 U1       ; R25 := U1
219 [-]: GETTABLE  R25 R25 R10  ; R25 := R25[R10]
220 [-]: TEST      R25 0        ; if not R25 then PC := 228
221 [-]: JMP       228          ; PC := 228
222 [-]: GETUPVAL  R25 U1       ; R25 := U1
223 [-]: GETTABLE  R25 R25 R10  ; R25 := R25[R10]
224 [-]: LT        1 K22 R25    ; if 0 < R25 then PC := 227
225 [-]: JMP       227          ; PC := 227
226 [-]: MOVE      R25 R0       ; R25 := R0
227 [-]: MOVE      R25 R1       ; R25 := R1
228 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
229 [-]: GETGLOBAL R21 K46      ; R21 := mMovie
230 [-]: SELF      R21 R21 K50  ; R22 := R21; R21 := R21["0xD6A79FE9"]
231 [-]: GETUPVAL  R23 U8       ; R23 := U8
232 [-]: GETTABLE  R23 R23 R8   ; R23 := R23[R8]
233 [-]: LOADK     R24 K51      ; R24 := ".Name"
234 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
235 [-]: LOADK     R24 K52      ; R24 := "text"
236 [-]: GETGLOBAL R25 K40      ; R25 := 0xE6DC43B0
237 [-]: GETGLOBAL R26 K28      ; R26 := 0x9FAED6BC
238 [-]: GETUPVAL  R27 U9       ; R27 := U9
239 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
240 [-]: GETTABLE  R27 R27 K29  ; R27 := R27["name"]
241 [-]: CALL      R26 2 2      ; R26 := R26(R27)
242 [-]: MOVE      R27 R0       ; R27 := R0
243 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
244 [-]: LOADK     R26 K53      ; R26 := " "
245 [-]: GETUPVAL  R27 U0       ; R27 := U0
246 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
247 [-]: CONCAT    R25 R25 R27  ; R25 := R25 .. R26 .. R27
248 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
249 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 66; R13 := R14 end
250 [-]: JMP       66           ; PC := 66
251 [-]: RETURN    R0 1         ; return 


; Function #19.1:
;
; Name:            
; Defined at line: 711
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xECFDD17
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  8 [-]: JMP       14           ; PC := 14
  9 [-]: ADD       R7 R1 R6     ; R7 := R1 + R6
 10 [-]: EQ        0 R0 R7      ; if R0 ~= R7 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: RETURN    R7 2         ; return R7
 14 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 9; R4 := R5 end
 15 [-]: JMP       9            ; PC := 9
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: RETURN    R7 2         ; return R7
 18 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 788
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == "0x1" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R1 K1        ; R1 := -1
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 10 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 11 [-]: LOADK     R4 K5        ; R4 := "_alpha"
 12 [-]: LOADK     R5 K6        ; R5 := 0
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x52E17A90
 16 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 17 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 18 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 19 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 20 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 21 [-]: LOADK     R6 K5        ; R6 := "_alpha"
 22 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 23 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 24 [-]: LOADK     R7 K6        ; R7 := 0
 25 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 26 [-]: LOADK     R7 K10       ; R7 := 0.20000000298023
 27 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 28 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 804
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x7E1F26D7"]
  3 [-]: LOADK     R2 K2        ; R2 := "InfluenceMap"
  4 [-]: GETGLOBAL R3 K3        ; R3 := influenceMapMaterial
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  8 [-]: SETTABLE  R0 K4 R1     ; R0["INFLUENCE_MAP"] := R1
  9 [-]: LOADK     R0 K5        ; R0 := 0
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MAX_SHADER_INFLUENCES"]
 12 [-]: SUB       R1 R1 K7     ; R1 := R1 - 1
 13 [-]: LOADK     R2 K7        ; R2 := 1
 14 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 15 [-]: GETGLOBAL R4 K8        ; R4 := table
 16 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xE6450C9D"]
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["INFLUENCE_MAP"]
 19 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
 20 [-]: LOADK     R7 K11       ; R7 := "Influence"
 21 [-]: MOVE      R8 R3        ; R8 := R3
 22 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 23 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 24 [-]: CALL      R4 0 1       ; R4(R5,...)
 25 [-]: FORLOOP   R0 15        ; R0 += R2; if R0 <= R1 then begin PC := 15; R3 := R0 end
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: GETGLOBAL R4 K12       ; R4 := gGameData
 29 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x17358D95"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4["0xB3F0027"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 58
 34 [-]: JMP       58           ; PC := 58
 35 [-]: GETTABLE  R5 R4 K15    ; R5 := R4["mInfluenceNodes"]
 36 [-]: LOADK     R6 K7        ; R6 := 1
 37 [-]: LEN       R7 R5        ; R7 := # R5
 38 [-]: LOADK     R8 K7        ; R8 := 1
 39 [-]: FORPREP   R6 57        ; R6 -= R8; PC := 57
 40 [-]: GETGLOBAL R10 K16      ; R10 := 0x93034B55
 41 [-]: LOADK     R11 K17      ; R11 := 0.5
 42 [-]: LOADK     R12 K18      ; R12 := 1.2000000476837
 43 [-]: GETTABLE  R13 R5 R9    ; R13 := R5[R9]
 44 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mInfluence"]
 45 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 46 [-]: GETGLOBAL R11 K8       ; R11 := table
 47 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["0xE6450C9D"]
 48 [-]: GETUPVAL  R12 U2       ; R12 := U2
 49 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 50 [-]: GETTABLE  R14 R5 R9    ; R14 := R5[R9]
 51 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mNode"]
 52 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5EC7A3D2"]
 53 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 54 [-]: SETTABLE  R13 K20 R14  ; R13["Node"] := R14
 55 [-]: SETTABLE  R13 K11 R10  ; R13["Influence"] := R10
 56 [-]: CALL      R11 3 1      ; R11(R12,R13)
 57 [-]: FORLOOP   R6 40        ; R6 += R8; if R6 <= R7 then begin PC := 40; R9 := R6 end
 58 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 59 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
 60 [-]: SELF      R12 R12 K23  ; R13 := R12; R12 := R12["0x5DB0BD4"]
 61 [-]: LOADK     R14 K24      ; R14 := "<KUVA_LICH>"
 62 [-]: MOVE      R15 R1       ; R15 := R1
 63 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 64 [-]: LOADK     R13 K7       ; R13 := 1
 65 [-]: GETUPVAL  R14 U2       ; R14 := U2
 66 [-]: LEN       R14 R14      ; R14 := # R14
 67 [-]: LOADK     R15 K7       ; R15 := 1
 68 [-]: FORPREP   R13 123      ; R13 -= R15; PC := 123
 69 [-]: GETUPVAL  R17 U3       ; R17 := U3
 70 [-]: GETUPVAL  R18 U2       ; R18 := U2
 71 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 72 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["Node"]
 73 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
 74 [-]: GETGLOBAL R18 K25      ; R18 := 0x400E7765
 75 [-]: MOVE      R19 R17      ; R19 := R17
 76 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 77 [-]: TEST      R18 1        ; if R18 then PC := 123
 78 [-]: JMP       123          ; PC := 123
 79 [-]: GETUPVAL  R18 U2       ; R18 := U2
 80 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 81 [-]: SETTABLE  R18 K26 R17  ; R18["NodeData"] := R17
 82 [-]: MOVE      R18 R12      ; R18 := R12
 83 [-]: GETTABLE  R19 R17 K27  ; R19 := R17["locName"]
 84 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 85 [-]: SETTABLE  R17 K27 R18  ; R17["locName"] := R18
 86 [-]: GETTABLE  R18 R17 K28  ; R18 := R17["radialSector"]
 87 [-]: GETTABLE  R19 R18 K29  ; R19 := R18["region"]
 88 [-]: ADD       R19 R19 K7   ; R19 := R19 + 1
 89 [-]: GETUPVAL  R20 U4       ; R20 := U4
 90 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["0xBFFBFE5E"]
 91 [-]: MOVE      R21 R11      ; R21 := R11
 92 [-]: MOVE      R22 R19      ; R22 := R19
 93 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 94 [-]: TEST      R20 1        ; if R20 then PC := 123
 95 [-]: JMP       123          ; PC := 123
 96 [-]: GETGLOBAL R20 K8       ; R20 := table
 97 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["0xE6450C9D"]
 98 [-]: MOVE      R21 R11      ; R21 := R11
 99 [-]: MOVE      R22 R19      ; R22 := R19
100 [-]: CALL      R20 3 1      ; R20(R21,R22)
101 [-]: MOVE      R20 R12      ; R20 := R12
102 [-]: GETGLOBAL R21 K31      ; R21 := string
103 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["0x639C642A"]
104 [-]: GETGLOBAL R22 K33      ; R22 := 0xE6DC43B0
105 [-]: GETGLOBAL R23 K34      ; R23 := 0x9FAED6BC
106 [-]: GETUPVAL  R24 U5       ; R24 := U5
107 [-]: GETTABLE  R24 R24 R19  ; R24 := R24[R19]
108 [-]: GETTABLE  R24 R24 K35  ; R24 := R24["name"]
109 [-]: CALL      R23 2 2      ; R23 := R23(R24)
110 [-]: MOVE      R24 R0       ; R24 := R0
111 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
112 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
113 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
114 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
115 [-]: SELF      R21 R21 K36  ; R22 := R21; R21 := R21["0xD6A79FE9"]
116 [-]: GETUPVAL  R23 U6       ; R23 := U6
117 [-]: GETTABLE  R23 R23 R19  ; R23 := R23[R19]
118 [-]: LOADK     R24 K37      ; R24 := ".Name"
119 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
120 [-]: LOADK     R24 K38      ; R24 := "text"
121 [-]: MOVE      R25 R20      ; R25 := R20
122 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
123 [-]: FORLOOP   R13 69       ; R13 += R15; if R13 <= R14 then begin PC := 69; R16 := R13 end
124 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
125 [-]: SELF      R21 R21 K39  ; R22 := R21; R21 := R21["0x1C19D966"]
126 [-]: LOADK     R23 K2       ; R23 := "InfluenceMap"
127 [-]: LOADK     R24 K40      ; R24 := "_alpha"
128 [-]: GETUPVAL  R25 U4       ; R25 := U4
129 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["0xF81722A2"]
130 [-]: GETUPVAL  R26 U2       ; R26 := U2
131 [-]: LEN       R26 R26      ; R26 := # R26
132 [-]: LT        1 K5 R26     ; if 0 < R26 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: MOVE      R26 R0       ; R26 := R0
135 [-]: MOVE      R26 R1       ; R26 := R1
136 [-]: LOADK     R27 K42      ; R27 := 100
137 [-]: LOADK     R28 K5       ; R28 := 0
138 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
139 [-]: CALL      R21 0 1      ; R21(R22,...)
140 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 844
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xEA569929"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  5 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xF3E132E0"]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SUB       R2 R0 R2     ; R2 := R0 - R2
  9 [-]: MUL       R2 R2 K3     ; R2 := R2 * 0.5
 10 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x68998E7D"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: SUB       R3 R1 R3     ; R3 := R1 - R3
 14 [-]: MUL       R3 R3 K3     ; R3 := R3 * 0.5
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x994A1A7
 16 [-]: GETUPVAL  R5 U1        ; R5 := U1
 17 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["MIN_ZOOM"]
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["MAX_ZOOM"]
 20 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0x6374FD98
 22 [-]: GETUPVAL  R6 U2        ; R6 := U2
 23 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mCurVal"]
 24 [-]: GETTABLE  R7 R4 K10    ; R7 := R4["minValue"]
 25 [-]: GETTABLE  R8 R4 K11    ; R8 := R4["maxValue"]
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: SELF      R6 R4 K12    ; R7 := R4; R6 := R4["0x3B43F25"]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: MOVE      R5 R6        ; R5 := R6
 31 [-]: MUL       R5 R5 R5     ; R5 := R5 * R5
 32 [-]: LOADK     R6 K13       ; R6 := 0.40000000596046
 33 [-]: LOADK     R7 K14       ; R7 := 0.93999999761581
 34 [-]: MOVE      R8 R5        ; R8 := R5
 35 [-]: LE        0 R8 R6      ; if R8 > R6 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R8 R6        ; R8 := R6
 38 [-]: JMP       50           ; PC := 50
 39 [-]: LE        0 R7 R8      ; if R7 > R8 then PC := 43
 40 [-]: JMP       43           ; PC := 43
 41 [-]: MOVE      R8 R7        ; R8 := R7
 42 [-]: JMP       50           ; PC := 50
 43 [-]: SUB       R9 R8 R6     ; R9 := R8 - R6
 44 [-]: SUB       R10 R7 R6    ; R10 := R7 - R6
 45 [-]: DIV       R8 R9 R10    ; R8 := R9 / R10
 46 [-]: MUL       R9 R8 R8     ; R9 := R8 * R8
 47 [-]: MUL       R10 K15 R8   ; R10 := 2 * R8
 48 [-]: SUB       R10 K16 R10  ; R10 := 3 - R10
 49 [-]: MUL       R8 R9 R10    ; R8 := R9 * R10
 50 [-]: MUL       R9 K17 R8    ; R9 := 0.20000000298023 * R8
 51 [-]: ADD       R9 K3 R9     ; R9 := 0.5 + R9
 52 [-]: LOADNIL   R10 R12      ; R10 := R11 := R12 := nil
 53 [-]: LOADK     R13 K18      ; R13 := 1
 54 [-]: LOADK     R14 K19      ; R14 := 0
 55 [-]: LOADK     R15 K18      ; R15 := 1
 56 [-]: LOADK     R16 K19      ; R16 := 0
 57 [-]: DIV       R17 R1 R0    ; R17 := R1 / R0
 58 [-]: NEWTABLE  R18 0 0      ; R18 := {}
 59 [-]: LOADK     R19 K18      ; R19 := 1
 60 [-]: GETUPVAL  R20 U3       ; R20 := U3
 61 [-]: LEN       R20 R20      ; R20 := # R20
 62 [-]: LOADK     R21 K18      ; R21 := 1
 63 [-]: FORPREP   R19 149      ; R19 -= R21; PC := 149
 64 [-]: LOADK     R10 K19      ; R10 := 0
 65 [-]: LOADK     R11 K19      ; R11 := 0
 66 [-]: LOADK     R12 K19      ; R12 := 0
 67 [-]: GETUPVAL  R23 U3       ; R23 := U3
 68 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 69 [-]: EQ        1 R23 K20    ; if R23 == nil then PC := 149
 70 [-]: JMP       149          ; PC := 149
 71 [-]: GETGLOBAL R23 K21      ; R23 := 0x400E7765
 72 [-]: GETUPVAL  R24 U3       ; R24 := U3
 73 [-]: GETTABLE  R24 R24 R22  ; R24 := R24[R22]
 74 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["NodeData"]
 75 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 76 [-]: TEST      R23 1        ; if R23 then PC := 149
 77 [-]: JMP       149          ; PC := 149
 78 [-]: GETUPVAL  R23 U3       ; R23 := U3
 79 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 80 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["Influence"]
 81 [-]: MUL       R12 R23 R5   ; R12 := R23 * R5
 82 [-]: GETUPVAL  R23 U0       ; R23 := U0
 83 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["0x69B983D"]
 84 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
 85 [-]: GETUPVAL  R25 U3       ; R25 := U3
 86 [-]: GETTABLE  R25 R25 R22  ; R25 := R25[R22]
 87 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["NodeData"]
 88 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["clipName"]
 89 [-]: CALL      R23 3 3      ; R23,R24 := R23(R24,R25)
 90 [-]: MOVE      R11 R24      ; R11 := R24
 91 [-]: MOVE      R10 R23      ; R10 := R23
 92 [-]: ADD       R23 R10 R2   ; R23 := R10 + R2
 93 [-]: DIV       R10 R23 R0   ; R10 := R23 / R0
 94 [-]: ADD       R23 R11 R3   ; R23 := R11 + R3
 95 [-]: DIV       R11 R23 R1   ; R11 := R23 / R1
 96 [-]: GETGLOBAL R23 K26      ; R23 := math
 97 [-]: GETTABLE  R23 R23 K27  ; R23 := R23["0x8B011038"]
 98 [-]: LOADK     R24 K28      ; R24 := 0.0099999997764826
 99 [-]: MUL       R25 R12 K29  ; R25 := R12 * 0.10000000149012
100 [-]: MUL       R25 R25 R9   ; R25 := R25 * R9
101 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
102 [-]: UNM       R24 R23      ; R24 := - R23
103 [-]: LE        0 R24 R10    ; if R24 > R10 then PC := 149
104 [-]: JMP       149          ; PC := 149
105 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
106 [-]: LE        0 R10 R24    ; if R10 > R24 then PC := 149
107 [-]: JMP       149          ; PC := 149
108 [-]: UNM       R24 R23      ; R24 := - R23
109 [-]: LE        0 R24 R11    ; if R24 > R11 then PC := 149
110 [-]: JMP       149          ; PC := 149
111 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
112 [-]: LE        0 R11 R24    ; if R11 > R24 then PC := 149
113 [-]: JMP       149          ; PC := 149
114 [-]: GETGLOBAL R24 K30      ; R24 := table
115 [-]: GETTABLE  R24 R24 K31  ; R24 := R24["0xE6450C9D"]
116 [-]: MOVE      R25 R18      ; R25 := R18
117 [-]: GETGLOBAL R26 K32      ; R26 := 0x221C9700
118 [-]: MOVE      R27 R10      ; R27 := R10
119 [-]: MOVE      R28 R11      ; R28 := R11
120 [-]: MOVE      R29 R23      ; R29 := R23
121 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
122 [-]: CALL      R24 0 1      ; R24(R25,...)
123 [-]: GETGLOBAL R24 K26      ; R24 := math
124 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
125 [-]: MOVE      R25 R13      ; R25 := R13
126 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
127 [-]: SUB       R26 R10 R26  ; R26 := R10 - R26
128 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
129 [-]: MOVE      R13 R24      ; R13 := R24
130 [-]: GETGLOBAL R24 K26      ; R24 := math
131 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
132 [-]: MOVE      R25 R14      ; R25 := R14
133 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
134 [-]: ADD       R26 R10 R26  ; R26 := R10 + R26
135 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
136 [-]: MOVE      R14 R24      ; R14 := R24
137 [-]: GETGLOBAL R24 K26      ; R24 := math
138 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
139 [-]: MOVE      R25 R15      ; R25 := R15
140 [-]: SUB       R26 R11 R23  ; R26 := R11 - R23
141 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
142 [-]: MOVE      R15 R24      ; R15 := R24
143 [-]: GETGLOBAL R24 K26      ; R24 := math
144 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
145 [-]: MOVE      R25 R16      ; R25 := R16
146 [-]: ADD       R26 R11 R23  ; R26 := R11 + R23
147 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
148 [-]: MOVE      R16 R24      ; R16 := R24
149 [-]: FORLOOP   R19 64       ; R19 += R21; if R19 <= R20 then begin PC := 64; R22 := R19 end
150 [-]: LEN       R24 R18      ; R24 := # R18
151 [-]: GETUPVAL  R25 U4       ; R25 := U4
152 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["MAX_SHADER_INFLUENCES"]
153 [-]: LT        0 R25 R24    ; if R25 >= R24 then PC := 161
154 [-]: JMP       161          ; PC := 161
155 [-]: GETGLOBAL R24 K35      ; R24 := 0xC1209670
156 [-]: MOVE      R25 R18      ; R25 := R18
157 [-]: GETUPVAL  R26 U4       ; R26 := U4
158 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
159 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
160 [-]: MOVE      R18 R24      ; R18 := R24
161 [-]: LOADK     R24 K18      ; R24 := 1
162 [-]: GETGLOBAL R25 K26      ; R25 := math
163 [-]: GETTABLE  R25 R25 K33  ; R25 := R25["0x65F9712A"]
164 [-]: GETUPVAL  R26 U4       ; R26 := U4
165 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
166 [-]: LEN       R27 R18      ; R27 := # R18
167 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
168 [-]: LOADK     R26 K18      ; R26 := 1
169 [-]: FORPREP   R24 183      ; R24 -= R26; PC := 183
170 [-]: GETGLOBAL R28 K36      ; R28 := influenceMapMaterial
171 [-]: SELF      R28 R28 K37  ; R29 := R28; R28 := R28["0x94FB2E1A"]
172 [-]: GETUPVAL  R30 U5       ; R30 := U5
173 [-]: GETTABLE  R30 R30 K38  ; R30 := R30["INFLUENCE_MAP"]
174 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
175 [-]: GETTABLE  R31 R18 R27  ; R31 := R18[R27]
176 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["x"]
177 [-]: GETTABLE  R32 R18 R27  ; R32 := R18[R27]
178 [-]: GETTABLE  R32 R32 K40  ; R32 := R32["y"]
179 [-]: LOADK     R33 K19      ; R33 := 0
180 [-]: GETTABLE  R34 R18 R27  ; R34 := R18[R27]
181 [-]: GETTABLE  R34 R34 K41  ; R34 := R34["z"]
182 [-]: CALL      R28 7 1      ; R28(R29,R30,R31,R32,R33,R34)
183 [-]: FORLOOP   R24 170      ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
184 [-]: LEN       R28 R18      ; R28 := # R18
185 [-]: ADD       R28 R28 K18  ; R28 := R28 + 1
186 [-]: GETUPVAL  R29 U4       ; R29 := U4
187 [-]: GETTABLE  R29 R29 K34  ; R29 := R29["MAX_SHADER_INFLUENCES"]
188 [-]: LOADK     R30 K18      ; R30 := 1
189 [-]: FORPREP   R28 205      ; R28 -= R30; PC := 205
190 [-]: GETUPVAL  R32 U5       ; R32 := U5
191 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["INFLUENCE_MAP"]
192 [-]: GETTABLE  R32 R32 R31  ; R32 := R32[R31]
193 [-]: TEST      R32 0        ; if not R32 then PC := 205
194 [-]: JMP       205          ; PC := 205
195 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
196 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
197 [-]: GETUPVAL  R34 U5       ; R34 := U5
198 [-]: GETTABLE  R34 R34 K38  ; R34 := R34["INFLUENCE_MAP"]
199 [-]: GETTABLE  R34 R34 R31  ; R34 := R34[R31]
200 [-]: LOADK     R35 K19      ; R35 := 0
201 [-]: LOADK     R36 K19      ; R36 := 0
202 [-]: LOADK     R37 K19      ; R37 := 0
203 [-]: LOADK     R38 K19      ; R38 := 0
204 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
205 [-]: FORLOOP   R28 190      ; R28 += R30; if R28 <= R29 then begin PC := 190; R31 := R28 end
206 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
207 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
208 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
209 [-]: LOADK     R35 K43      ; R35 := "ZoomValue_NumNodes"
210 [-]: CALL      R34 2 2      ; R34 := R34(R35)
211 [-]: MOVE      R35 R5       ; R35 := R5
212 [-]: LOADK     R36 K19      ; R36 := 0
213 [-]: LOADK     R37 K19      ; R37 := 0
214 [-]: LOADK     R38 K19      ; R38 := 0
215 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
216 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
217 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
218 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
219 [-]: LOADK     R35 K44      ; R35 := "Bounds"
220 [-]: CALL      R34 2 2      ; R34 := R34(R35)
221 [-]: SUB       R35 R13 K45  ; R35 := R13 - 0.019999999552965
222 [-]: ADD       R36 R14 K45  ; R36 := R14 + 0.019999999552965
223 [-]: SUB       R37 R15 K45  ; R37 := R15 - 0.019999999552965
224 [-]: ADD       R38 R16 K45  ; R38 := R16 + 0.019999999552965
225 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
226 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 920
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8DB5D01F"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x7AEE2957"]
 10 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: MOVE      R1 R1        ; R1 := R1
 13 [-]: JMP       16           ; PC := 16
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 924
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.UIStyleUtilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0xDDA3917C"]
  6 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
  7 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIStyle_FloatingContent"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: SETTABLE  R1 K2 R2     ; R1["FloatingContentObject"] := R2
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["FloatingContentObject"]
 14 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x479E62B4"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: SETTABLE  R1 K6 R2     ; R1["FloatingContent"] := R2
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: LOADK     R2 K9        ; R2 := "#"
 19 [-]: GETGLOBAL R3 K10       ; R3 := string
 20 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x4B1F4F58"]
 21 [-]: LOADK     R4 K12       ; R4 := "%X"
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["FloatingContent"]
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 26 [-]: SETTABLE  R1 K8 R2     ; R1["FloatingContentHtml"] := R2
 27 [-]: GETUPVAL  R1 U0        ; R1 := U0
 28 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0xDDA3917C"]
 29 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 30 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["UIStyle_FloatingContentHighlight"]
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 33 [-]: SETTABLE  R1 K13 R2    ; R1["FloatingContentHighlightObject"] := R2
 34 [-]: GETUPVAL  R1 U0        ; R1 := U0
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["FloatingContentHighlightObject"]
 37 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x479E62B4"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: SETTABLE  R1 K15 R2    ; R1["FloatingContentHighlight"] := R2
 40 [-]: GETUPVAL  R1 U0        ; R1 := U0
 41 [-]: LOADK     R2 K9        ; R2 := "#"
 42 [-]: GETGLOBAL R3 K10       ; R3 := string
 43 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x4B1F4F58"]
 44 [-]: LOADK     R4 K12       ; R4 := "%X"
 45 [-]: GETUPVAL  R5 U0        ; R5 := U0
 46 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["FloatingContentHighlight"]
 47 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 48 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 49 [-]: SETTABLE  R1 K16 R2    ; R1["FloatingContentHighlightHtml"] := R2
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0xDDA3917C"]
 52 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 53 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["UIStyle_Content"]
 54 [-]: MOVE      R4 R1        ; R4 := R1
 55 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 56 [-]: SETTABLE  R1 K17 R2    ; R1["Content"] := R2
 57 [-]: GETUPVAL  R1 U0        ; R1 := U0
 58 [-]: LOADK     R2 K9        ; R2 := "#"
 59 [-]: GETGLOBAL R3 K10       ; R3 := string
 60 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x4B1F4F58"]
 61 [-]: LOADK     R4 K12       ; R4 := "%X"
 62 [-]: GETUPVAL  R5 U0        ; R5 := U0
 63 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Content"]
 64 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 65 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 66 [-]: SETTABLE  R1 K19 R2    ; R1["ContentHtml"] := R2
 67 [-]: GETUPVAL  R1 U0        ; R1 := U0
 68 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0xDDA3917C"]
 69 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 70 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["UIStyle_ContentHighlight"]
 71 [-]: MOVE      R4 R1        ; R4 := R1
 72 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 73 [-]: SETTABLE  R1 K20 R2    ; R1["ContentHighlight"] := R2
 74 [-]: GETUPVAL  R1 U0        ; R1 := U0
 75 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0xDDA3917C"]
 76 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 77 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["UIStyle_Background1"]
 78 [-]: MOVE      R4 R0        ; R4 := R0
 79 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 80 [-]: SETTABLE  R1 K22 R2    ; R1["Background1Object"] := R2
 81 [-]: GETUPVAL  R1 U0        ; R1 := U0
 82 [-]: GETUPVAL  R2 U0        ; R2 := U0
 83 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["Background1Object"]
 84 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x479E62B4"]
 85 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 86 [-]: SETTABLE  R1 K24 R2    ; R1["Background1"] := R2
 87 [-]: GETUPVAL  R1 U0        ; R1 := U0
 88 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["0xDDA3917C"]
 89 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 90 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["UIStyle_BackerHighlight"]
 91 [-]: MOVE      R4 R1        ; R4 := R1
 92 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 93 [-]: SETTABLE  R1 K25 R2    ; R1["BackerHighlight"] := R2
 94 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
 95 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
 96 [-]: LOADK     R3 K29       ; R3 := "ClickBlocker"
 97 [-]: LOADK     R4 K30       ; R4 := "_color"
 98 [-]: GETUPVAL  R5 U0        ; R5 := U0
 99 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Background1"]
100 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
101 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
102 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
103 [-]: LOADK     R3 K31       ; R3 := "InfoTip.NodeName"
104 [-]: LOADK     R4 K32       ; R4 := "textColor"
105 [-]: GETUPVAL  R5 U0        ; R5 := U0
106 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["FloatingContent"]
107 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
108 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
109 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
110 [-]: LOADK     R3 K31       ; R3 := "InfoTip.NodeName"
111 [-]: LOADK     R4 K33       ; R4 := "dropshadow_color"
112 [-]: GETUPVAL  R5 U0        ; R5 := U0
113 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Background1"]
114 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
115 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
116 [-]: SELF      R1 R1 K34    ; R2 := R1; R1 := R1["0x7E1F26D7"]
117 [-]: LOADK     R3 K35       ; R3 := "InfoTip.Darken"
118 [-]: GETGLOBAL R4 K36       ; R4 := _G
119 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["UIMaterial_RectangleNoDepth"]
120 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
121 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
122 [-]: SELF      R1 R1 K38    ; R2 := R1; R1 := R1["0x302AAB2F"]
123 [-]: LOADK     R3 K35       ; R3 := "InfoTip.Darken"
124 [-]: LOADK     R4 K39       ; R4 := "RectInnerColor"
125 [-]: GETUPVAL  R5 U0        ; R5 := U0
126 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Background1Object"]
127 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["red"]
128 [-]: DIV       R5 R5 K41    ; R5 := R5 / 255
129 [-]: GETUPVAL  R6 U0        ; R6 := U0
130 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["Background1Object"]
131 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["green"]
132 [-]: DIV       R6 R6 K41    ; R6 := R6 / 255
133 [-]: GETUPVAL  R7 U0        ; R7 := U0
134 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["Background1Object"]
135 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["blue"]
136 [-]: DIV       R7 R7 K41    ; R7 := R7 / 255
137 [-]: LOADK     R8 K44       ; R8 := 0.80000001192093
138 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
139 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
140 [-]: SELF      R1 R1 K38    ; R2 := R1; R1 := R1["0x302AAB2F"]
141 [-]: LOADK     R3 K35       ; R3 := "InfoTip.Darken"
142 [-]: LOADK     R4 K45       ; R4 := "RectEdgeColor"
143 [-]: GETUPVAL  R5 U0        ; R5 := U0
144 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["FloatingContentObject"]
145 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["red"]
146 [-]: DIV       R5 R5 K41    ; R5 := R5 / 255
147 [-]: GETUPVAL  R6 U0        ; R6 := U0
148 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["FloatingContentObject"]
149 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["green"]
150 [-]: DIV       R6 R6 K41    ; R6 := R6 / 255
151 [-]: GETUPVAL  R7 U0        ; R7 := U0
152 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["FloatingContentObject"]
153 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["blue"]
154 [-]: DIV       R7 R7 K41    ; R7 := R7 / 255
155 [-]: LOADK     R8 K46       ; R8 := 0.15000000596046
156 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
157 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
158 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
159 [-]: LOADK     R3 K47       ; R3 := "InfoTip.Bg"
160 [-]: LOADK     R4 K30       ; R4 := "_color"
161 [-]: GETUPVAL  R5 U0        ; R5 := U0
162 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Background1"]
163 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
164 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
165 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
166 [-]: LOADK     R3 K48       ; R3 := "DifficultySelector.TopCap.Fill"
167 [-]: LOADK     R4 K30       ; R4 := "_color"
168 [-]: GETUPVAL  R5 U0        ; R5 := U0
169 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Background1"]
170 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
171 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
172 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
173 [-]: LOADK     R3 K49       ; R3 := "DifficultySelector.MidSegment.Fill"
174 [-]: LOADK     R4 K30       ; R4 := "_color"
175 [-]: GETUPVAL  R5 U0        ; R5 := U0
176 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Background1"]
177 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
178 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
179 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
180 [-]: LOADK     R3 K50       ; R3 := "DifficultySelector.BottomCap.Fill"
181 [-]: LOADK     R4 K30       ; R4 := "_color"
182 [-]: GETUPVAL  R5 U0        ; R5 := U0
183 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Background1"]
184 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
185 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
186 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
187 [-]: LOADK     R3 K51       ; R3 := "DifficultySelector.TopCap.Outline"
188 [-]: LOADK     R4 K30       ; R4 := "_color"
189 [-]: GETUPVAL  R5 U0        ; R5 := U0
190 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["FloatingContent"]
191 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
192 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
193 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
194 [-]: LOADK     R3 K52       ; R3 := "DifficultySelector.MidSegment.Outline"
195 [-]: LOADK     R4 K30       ; R4 := "_color"
196 [-]: GETUPVAL  R5 U0        ; R5 := U0
197 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["FloatingContent"]
198 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
199 [-]: GETGLOBAL R1 K27       ; R1 := mMovie
200 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x1C19D966"]
201 [-]: LOADK     R3 K53       ; R3 := "DifficultySelector.BottomCap.Outline"
202 [-]: LOADK     R4 K30       ; R4 := "_color"
203 [-]: GETUPVAL  R5 U0        ; R5 := U0
204 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["FloatingContent"]
205 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
206 [-]: LOADK     R1 K54       ; R1 := 1
207 [-]: LOADK     R2 K55       ; R2 := 6
208 [-]: LOADK     R3 K54       ; R3 := 1
209 [-]: FORPREP   R1 230       ; R1 -= R3; PC := 230
210 [-]: LOADK     R5 K56       ; R5 := "InfoTip.MissionPreviews.Mission"
211 [-]: MOVE      R6 R4        ; R6 := R4
212 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
213 [-]: GETGLOBAL R6 K27       ; R6 := mMovie
214 [-]: SELF      R6 R6 K57    ; R7 := R6; R6 := R6["0x880196A7"]
215 [-]: MOVE      R8 R5        ; R8 := R5
216 [-]: LOADK     R9 K58       ; R9 := "Icon"
217 [-]: LOADK     R10 K30      ; R10 := "_color"
218 [-]: GETUPVAL  R11 U1       ; R11 := U1
219 [-]: GETTABLE  R11 R11 K59  ; R11 := R11["0xF81722A2"]
220 [-]: EQ        1 R4 K54     ; if R4 == 1 then PC := 223
221 [-]: JMP       223          ; PC := 223
222 [-]: MOVE      R12 R0       ; R12 := R0
223 [-]: MOVE      R12 R1       ; R12 := R1
224 [-]: GETUPVAL  R13 U0       ; R13 := U0
225 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["FloatingContentHighlight"]
226 [-]: GETUPVAL  R14 U0       ; R14 := U0
227 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["FloatingContent"]
228 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
229 [-]: CALL      R6 0 1       ; R6(R7,...)
230 [-]: FORLOOP   R1 210       ; R1 += R3; if R1 <= R2 then begin PC := 210; R4 := R1 end
231 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 963
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
  3 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  4 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
  5 [-]: LOADK     R4 K4        ; R4 := "InfoTip.Darken"
  6 [-]: LOADK     R5 K5        ; R5 := "_y"
  7 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
  8 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  9 [-]: SETTABLE  R0 K0 R1     ; R0["InitBackerY"] := R1
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 12 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
 14 [-]: LOADK     R4 K7        ; R4 := "InfoTip.LocationPic"
 15 [-]: LOADK     R5 K8        ; R5 := "_height"
 16 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: SETTABLE  R0 K6 R1     ; R0["InitLocationPicHeight"] := R1
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 21 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 22 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
 23 [-]: LOADK     R4 K7        ; R4 := "InfoTip.LocationPic"
 24 [-]: LOADK     R5 K5        ; R5 := "_y"
 25 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 26 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 27 [-]: SETTABLE  R0 K9 R1     ; R0["InitLocationPicYPos"] := R1
 28 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 29 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0x1C19D966"]
 30 [-]: LOADK     R2 K11       ; R2 := "InfoTip"
 31 [-]: LOADK     R3 K12       ; R3 := "enabled"
 32 [-]: MOVE      R4 R0        ; R4 := R0
 33 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 34 [-]: GETGLOBAL R0 K13       ; R0 := 0x329BDC44
 35 [-]: LOADK     R1 K14       ; R1 := "EE.Interface.Components.List"
 36 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 37 [-]: GETTABLE  R1 R0 K15    ; R1 := R0["0xB40DEC3F"]
 38 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 39 [-]: LOADK     R3 K16       ; R3 := "InfoTip.NodeEntry1"
 40 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 41 [-]: SELF      R2 R1 K17    ; R3 := R1; R2 := R1["0xE13A565"]
 42 [-]: LOADK     R4 K18       ; R4 := "EntryPressed"
 43 [-]: LOADK     R5 K19       ; R5 := "EntryFocused"
 44 [-]: LOADK     R6 K20       ; R6 := "EntryUnfocused"
 45 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 46 [-]: SETTABLE  R1 K21 K22   ; R1["mForcedVerticalSeparation"] := 77
 47 [-]: SETTABLE  R1 K23 K24   ; R1["mForcedHorizontalSeparation"] := 0
 48 [-]: SETTABLE  R1 K25 K26   ; R1["mApplyThemes"] := "0x1"
 49 [-]: CLOSURE   R2 0         ; R2 := closure(Function #25.1)
 50 [-]: GETUPVAL  R0 U1        ; R0 := U1
 51 [-]: SETTABLE  R1 K27 R2    ; R1["InitializeColors"] := R2
 52 [-]: CLOSURE   R2 1         ; R2 := closure(Function #25.2)
 53 [-]: GETUPVAL  R0 U2        ; R0 := U2
 54 [-]: GETUPVAL  R0 U1        ; R0 := U1
 55 [-]: SETTABLE  R1 K28 R2    ; R1["GenerateDesc"] := R2
 56 [-]: CLOSURE   R2 2         ; R2 := closure(Function #25.3)
 57 [-]: GETUPVAL  R0 U2        ; R0 := U2
 58 [-]: GETUPVAL  R0 U1        ; R0 := U1
 59 [-]: MOVE      R0 R1        ; R0 := R1
 60 [-]: SETTABLE  R1 K29 R2    ; R1["UpdateColors"] := R2
 61 [-]: CLOSURE   R2 3         ; R2 := closure(Function #25.4)
 62 [-]: GETUPVAL  R0 U0        ; R0 := U0
 63 [-]: GETUPVAL  R0 U2        ; R0 := U2
 64 [-]: GETUPVAL  R0 U3        ; R0 := U3
 65 [-]: SETTABLE  R1 K30 R2    ; R1["SetVisible"] := R2
 66 [-]: CLOSURE   R2 4         ; R2 := closure(Function #25.5)
 67 [-]: GETUPVAL  R0 U2        ; R0 := U2
 68 [-]: MOVE      R0 R1        ; R0 := R1
 69 [-]: SETTABLE  R1 K31 R2    ; R1["mOnFocusedCallback"] := R2
 70 [-]: CLOSURE   R2 5         ; R2 := closure(Function #25.6)
 71 [-]: MOVE      R0 R1        ; R0 := R1
 72 [-]: SETTABLE  R1 K32 R2    ; R1["mOnUnfocusedCallback"] := R2
 73 [-]: CLOSURE   R2 6         ; R2 := closure(Function #25.7)
 74 [-]: SETTABLE  R1 K33 R2    ; R1["mOnPressedCallback"] := R2
 75 [-]: CLOSURE   R2 7         ; R2 := closure(Function #25.8)
 76 [-]: GETUPVAL  R0 U4        ; R0 := U4
 77 [-]: GETUPVAL  R0 U5        ; R0 := U5
 78 [-]: GETUPVAL  R0 U6        ; R0 := U6
 79 [-]: GETUPVAL  R0 U7        ; R0 := U7
 80 [-]: GETUPVAL  R0 U8        ; R0 := U8
 81 [-]: GETUPVAL  R0 U9        ; R0 := U9
 82 [-]: GETUPVAL  R0 U10       ; R0 := U10
 83 [-]: GETUPVAL  R0 U11       ; R0 := U11
 84 [-]: GETUPVAL  R0 U12       ; R0 := U12
 85 [-]: GETUPVAL  R0 U13       ; R0 := U13
 86 [-]: SETTABLE  R1 K34 R2    ; R1["mOnSelectedCallback"] := R2
 87 [-]: CLOSURE   R2 8         ; R2 := closure(Function #25.9)
 88 [-]: MOVE      R0 R1        ; R0 := R1
 89 [-]: SETTABLE  R1 K35 R2    ; R1["mElementDrawCallback"] := R2
 90 [-]: CLOSURE   R2 9         ; R2 := closure(Function #25.10)
 91 [-]: SETTABLE  R1 K36 R2    ; R1["GetInterpolationProperties"] := R2
 92 [-]: GETUPVAL  R2 U0        ; R2 := U0
 93 [-]: SETTABLE  R2 K37 R1    ; R2["NodeMissionList"] := R1
 94 [-]: RETURN    R0 1         ; return 


; Function #25.1:
;
; Name:            
; Defined at line: 977
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "Highlight"
  5 [-]: LOADK     R5 K4        ; R5 := "_color"
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["FloatingContentHighlight"]
  8 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  9 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
 11 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 12 [-]: LOADK     R4 K6        ; R4 := "Decoration"
 13 [-]: LOADK     R5 K4        ; R5 := "_color"
 14 [-]: GETUPVAL  R6 U0        ; R6 := U0
 15 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["FloatingContent"]
 16 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 17 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
 19 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 20 [-]: LOADK     R4 K8        ; R4 := "Icon"
 21 [-]: LOADK     R5 K4        ; R5 := "_color"
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Content"]
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x302AAB2F"]
 27 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 28 [-]: LOADK     R4 K11       ; R4 := ".Btn"
 29 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 30 [-]: LOADK     R4 K12       ; R4 := "RectInnerColor"
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["Background1Object"]
 33 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["red"]
 34 [-]: DIV       R5 R5 K15    ; R5 := R5 / 255
 35 [-]: GETUPVAL  R6 U0        ; R6 := U0
 36 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Background1Object"]
 37 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["green"]
 38 [-]: DIV       R6 R6 K15    ; R6 := R6 / 255
 39 [-]: GETUPVAL  R7 U0        ; R7 := U0
 40 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["Background1Object"]
 41 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["blue"]
 42 [-]: DIV       R7 R7 K15    ; R7 := R7 / 255
 43 [-]: LOADK     R8 K18       ; R8 := 0.80000001192093
 44 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 45 [-]: RETURN    R0 1         ; return 


; Function #25.2:
;
; Name:            
; Defined at line: 985
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := "<p>"
  2 [-]: MOVE      R3 R2        ; R3 := R2
  3 [-]: LOADK     R4 K1        ; R4 := "<font color=\""
  4 [-]: GETUPVAL  R5 U0        ; R5 := U0
  5 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xF81722A2"]
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["FloatingContentHighlightHtml"]
  9 [-]: GETUPVAL  R8 U1        ; R8 := U1
 10 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["FloatingContentHtml"]
 11 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 12 [-]: LOADK     R6 K5        ; R6 := "\"><b>"
 13 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mName"]
 14 [-]: LOADK     R8 K7        ; R8 := "</b></font>"
 15 [-]: CONCAT    R2 R3 R8     ; R2 := R3 .. R4 .. R5 .. R6 .. R7 .. R8
 16 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["EnemyLabelString"]
 17 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: MOVE      R3 R2        ; R3 := R2
 20 [-]: LOADK     R4 K1        ; R4 := "<font color=\""
 21 [-]: GETUPVAL  R5 U1        ; R5 := U1
 22 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["ContentHtml"]
 23 [-]: LOADK     R6 K11       ; R6 := "\"><br>"
 24 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["EnemyLabelString"]
 25 [-]: LOADK     R8 K12       ; R8 := "</font>"
 26 [-]: CONCAT    R2 R3 R8     ; R2 := R3 .. R4 .. R5 .. R6 .. R7 .. R8
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: RETURN    R0 1         ; return 


; Function #25.3:
;
; Name:            
; Defined at line: 994
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["FloatingContentHighlightObject"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["FloatingContentObject"]
  8 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  9 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 10 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x302AAB2F"]
 11 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 12 [-]: LOADK     R6 K6        ; R6 := ".Btn"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: LOADK     R6 K7        ; R6 := "RectEdgeColor"
 15 [-]: GETTABLE  R7 R2 K8     ; R7 := R2["red"]
 16 [-]: DIV       R7 R7 K9     ; R7 := R7 / 255
 17 [-]: GETTABLE  R8 R2 K10    ; R8 := R2["green"]
 18 [-]: DIV       R8 R8 K9     ; R8 := R8 / 255
 19 [-]: GETTABLE  R9 R2 K11    ; R9 := R2["blue"]
 20 [-]: DIV       R9 R9 K9     ; R9 := R9 / 255
 21 [-]: GETUPVAL  R10 U0       ; R10 := U0
 22 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["0xF81722A2"]
 23 [-]: MOVE      R11 R1       ; R11 := R1
 24 [-]: LOADK     R12 K12      ; R12 := 0.85000002384186
 25 [-]: LOADK     R13 K13      ; R13 := 0.035000000149012
 26 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 27 [-]: CALL      R3 0 1       ; R3(R4,...)
 28 [-]: GETGLOBAL R3 K14       ; R3 := 0x52E17A90
 29 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 30 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 31 [-]: LOADK     R6 K15       ; R6 := ".Highlight"
 32 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 33 [-]: GETGLOBAL R6 K16       ; R6 := UISys
 34 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["FlashInstance_LINEAR"]
 35 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 36 [-]: LOADK     R8 K18       ; R8 := "_alpha"
 37 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 38 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 39 [-]: GETUPVAL  R9 U0        ; R9 := U0
 40 [-]: GETTABLE  R9 R9 K0     ; R9 := R9["0xF81722A2"]
 41 [-]: MOVE      R10 R1       ; R10 := R1
 42 [-]: LOADK     R11 K19      ; R11 := 45
 43 [-]: LOADK     R12 K20      ; R12 := 0
 44 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 45 [-]: SETLIST   R8 0 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
 46 [-]: LOADK     R9 K21       ; R9 := 0.15000000596046
 47 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 48 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 49 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x880196A7"]
 50 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 51 [-]: LOADK     R6 K23       ; R6 := "Desc"
 52 [-]: LOADK     R7 K24       ; R7 := "text"
 53 [-]: GETUPVAL  R8 U2        ; R8 := U2
 54 [-]: GETTABLE  R8 R8 K25    ; R8 := R8["0xF522A4A4"]
 55 [-]: MOVE      R9 R0        ; R9 := R0
 56 [-]: MOVE      R10 R1       ; R10 := R1
 57 [-]: CALL      R8 3 0       ; R8,... := R8(R9,R10)
 58 [-]: CALL      R3 0 1       ; R3(R4,...)
 59 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 60 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x880196A7"]
 61 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mClipName"]
 62 [-]: LOADK     R6 K26       ; R6 := "Icon"
 63 [-]: LOADK     R7 K27       ; R7 := "_color"
 64 [-]: GETUPVAL  R8 U0        ; R8 := U0
 65 [-]: GETTABLE  R8 R8 K0     ; R8 := R8["0xF81722A2"]
 66 [-]: MOVE      R9 R1        ; R9 := R1
 67 [-]: GETUPVAL  R10 U1       ; R10 := U1
 68 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["FloatingContentHighlight"]
 69 [-]: GETUPVAL  R11 U1       ; R11 := U1
 70 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["FloatingContent"]
 71 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 72 [-]: CALL      R3 0 1       ; R3(R4,...)
 73 [-]: RETURN    R0 1         ; return 


; Function #25.4:
;
; Name:            
; Defined at line: 1004
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SETTABLE  R0 K0 R1     ; R0["mVisible"] := R1
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: SETTABLE  R3 K1 R1     ; R3["NodeSelectionOpen"] := R1
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mInitialY"]
  5 [-]: SUB       R3 R3 K3     ; R3 := R3 - 15
  6 [-]: LOADK     R4 K4        ; R4 := 0.10000000149012
  7 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x9D2060CB"]
  8 [-]: CLOSURE   R7 0         ; R7 := closure(Function #25.4.1)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: MOVE      R0 R4        ; R0 := R4
 11 [-]: MOVE      R0 R0        ; R0 := R0
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: MOVE      R0 R3        ; R0 := R3
 14 [-]: CALL      R5 3 1       ; R5(R6,R7)
 15 [-]: TEST      R1 1         ; if R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R5 U2        ; R5 := U2
 18 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x61494587"]
 19 [-]: MOVE      R7 R4        ; R7 := R4
 20 [-]: CLOSURE   R8 1         ; R8 := closure(Function #25.4.2)
 21 [-]: MOVE      R0 R0        ; R0 := R0
 22 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 23 [-]: GETGLOBAL R5 K7        ; R5 := 0x52E17A90
 24 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 25 [-]: LOADK     R7 K9        ; R7 := "InfoTip.Label"
 26 [-]: GETGLOBAL R8 K10       ; R8 := UISys
 27 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["FlashInstance_LINEAR"]
 28 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 29 [-]: LOADK     R10 K12      ; R10 := "_alpha"
 30 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 31 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 32 [-]: GETUPVAL  R11 U1       ; R11 := U1
 33 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xF81722A2"]
 34 [-]: MOVE      R12 R1       ; R12 := R1
 35 [-]: LOADK     R13 K14      ; R13 := 0
 36 [-]: LOADK     R14 K15      ; R14 := 100
 37 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 38 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
 39 [-]: LOADK     R11 K16      ; R11 := 0.15000000596046
 40 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 41 [-]: GETGLOBAL R5 K7        ; R5 := 0x52E17A90
 42 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 43 [-]: LOADK     R7 K17       ; R7 := "InfoTip.Darken"
 44 [-]: GETGLOBAL R8 K10       ; R8 := UISys
 45 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["FlashInstance_LINEAR"]
 46 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 47 [-]: LOADK     R10 K12      ; R10 := "_alpha"
 48 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 49 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 50 [-]: GETUPVAL  R11 U1       ; R11 := U1
 51 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xF81722A2"]
 52 [-]: MOVE      R12 R1       ; R12 := R1
 53 [-]: LOADK     R13 K14      ; R13 := 0
 54 [-]: LOADK     R14 K15      ; R14 := 100
 55 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 56 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
 57 [-]: LOADK     R11 K16      ; R11 := 0.15000000596046
 58 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 59 [-]: GETGLOBAL R5 K7        ; R5 := 0x52E17A90
 60 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 61 [-]: LOADK     R7 K18       ; R7 := "InfoTip.Blurer"
 62 [-]: GETGLOBAL R8 K10       ; R8 := UISys
 63 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["FlashInstance_LINEAR"]
 64 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 65 [-]: LOADK     R10 K12      ; R10 := "_alpha"
 66 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 67 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 68 [-]: GETUPVAL  R11 U1       ; R11 := U1
 69 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xF81722A2"]
 70 [-]: MOVE      R12 R1       ; R12 := R1
 71 [-]: LOADK     R13 K14      ; R13 := 0
 72 [-]: LOADK     R14 K15      ; R14 := 100
 73 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 74 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
 75 [-]: LOADK     R11 K16      ; R11 := 0.15000000596046
 76 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 77 [-]: GETGLOBAL R5 K7        ; R5 := 0x52E17A90
 78 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 79 [-]: LOADK     R7 K19       ; R7 := "InfoTip.MissionPreviews"
 80 [-]: GETGLOBAL R8 K10       ; R8 := UISys
 81 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["FlashInstance_LINEAR"]
 82 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 83 [-]: LOADK     R10 K12      ; R10 := "_alpha"
 84 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 85 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 86 [-]: GETUPVAL  R11 U1       ; R11 := U1
 87 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xF81722A2"]
 88 [-]: MOVE      R12 R1       ; R12 := R1
 89 [-]: LOADK     R13 K14      ; R13 := 0
 90 [-]: LOADK     R14 K15      ; R14 := 100
 91 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 92 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
 93 [-]: LOADK     R11 K16      ; R11 := 0.15000000596046
 94 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 95 [-]: GETGLOBAL R5 K7        ; R5 := 0x52E17A90
 96 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 97 [-]: LOADK     R7 K20       ; R7 := "ClickBlocker"
 98 [-]: GETGLOBAL R8 K10       ; R8 := UISys
 99 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["FlashInstance_LINEAR"]
100 [-]: NEWTABLE  R9 1 0       ; R9 := {}
101 [-]: LOADK     R10 K12      ; R10 := "_alpha"
102 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
103 [-]: NEWTABLE  R10 0 0      ; R10 := {}
104 [-]: GETUPVAL  R11 U1       ; R11 := U1
105 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xF81722A2"]
106 [-]: MOVE      R12 R1       ; R12 := R1
107 [-]: LOADK     R13 K21      ; R13 := 5
108 [-]: LOADK     R14 K14      ; R14 := 0
109 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
110 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
111 [-]: LOADK     R11 K16      ; R11 := 0.15000000596046
112 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
113 [-]: GETGLOBAL R5 K8        ; R5 := mMovie
114 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5["0x1C19D966"]
115 [-]: LOADK     R7 K20       ; R7 := "ClickBlocker"
116 [-]: LOADK     R8 K23       ; R8 := "enabled"
117 [-]: MOVE      R9 R1        ; R9 := R1
118 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
119 [-]: GETGLOBAL R5 K8        ; R5 := mMovie
120 [-]: SELF      R5 R5 K22    ; R6 := R5; R5 := R5["0x1C19D966"]
121 [-]: LOADK     R7 K24       ; R7 := "InfoTip"
122 [-]: LOADK     R8 K23       ; R8 := "enabled"
123 [-]: MOVE      R9 R1        ; R9 := R1
124 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
125 [-]: RETURN    R0 1         ; return 


; Function #25.4.1:
;
; Name:            
; Defined at line: 1012
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: ADD       R1 R1 K0     ; R1 := R1 + 0.014999999664724
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF68300E4"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: TEST      R2 1         ; if R2 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 15 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
 16 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 17 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 18 [-]: LOADK     R6 K6        ; R6 := 0
 19 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 20 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 21 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
 22 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 23 [-]: LOADK     R5 K7        ; R5 := "_y"
 24 [-]: GETUPVAL  R6 U3        ; R6 := U3
 25 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0xF81722A2"]
 26 [-]: GETUPVAL  R7 U0        ; R7 := U0
 27 [-]: GETUPVAL  R8 U4        ; R8 := U4
 28 [-]: MOVE      R9 R1        ; R9 := R1
 29 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 30 [-]: CALL      R2 0 1       ; R2(R3,...)
 31 [-]: GETGLOBAL R2 K9        ; R2 := 0x52E17A90
 32 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 33 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 34 [-]: GETGLOBAL R5 K10       ; R5 := UISys
 35 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["FlashInstance_EASE_OUT"]
 36 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 37 [-]: LOADK     R7 K5        ; R7 := "_alpha"
 38 [-]: LOADK     R8 K7        ; R8 := "_y"
 39 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 40 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 41 [-]: GETUPVAL  R8 U3        ; R8 := U3
 42 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["0xF81722A2"]
 43 [-]: GETUPVAL  R9 U0        ; R9 := U0
 44 [-]: LOADK     R10 K12      ; R10 := 100
 45 [-]: LOADK     R11 K6       ; R11 := 0
 46 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 47 [-]: GETUPVAL  R9 U3        ; R9 := U3
 48 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0xF81722A2"]
 49 [-]: GETUPVAL  R10 U0       ; R10 := U0
 50 [-]: MOVE      R11 R1       ; R11 := R1
 51 [-]: GETUPVAL  R12 U4       ; R12 := U4
 52 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 53 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 54 [-]: GETUPVAL  R8 U1        ; R8 := U1
 55 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 56 [-]: RETURN    R0 1         ; return 


; Function #25.4.2:
;
; Name:            
; Defined at line: 1025
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x7CF71D03"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #25.5:
;
; Name:            
; Defined at line: 1039
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x25992394"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UISound_Focus"]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x52E17A90
  7 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
  8 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K6        ; R4 := ".Icon"
 10 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 11 [-]: GETGLOBAL R4 K7        ; R4 := UISys
 12 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["FlashInstance_EASE_OUT"]
 13 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 14 [-]: LOADK     R6 K9        ; R6 := "_xscale"
 15 [-]: LOADK     R7 K10       ; R7 := "_yscale"
 16 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 17 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 18 [-]: LOADK     R7 K11       ; R7 := 120
 19 [-]: LOADK     R8 K11       ; R8 := 120
 20 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 21 [-]: LOADK     R7 K12       ; R7 := 0.20000000298023
 22 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["0x15ED7700"]
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: CALL      R1 3 1       ; R1(R2,R3)
 28 [-]: RETURN    R0 1         ; return 


; Function #25.6:
;
; Name:            
; Defined at line: 1046
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x52E17A90
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".Icon"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: GETGLOBAL R4 K4        ; R4 := UISys
  7 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["FlashInstance_EASE_OUT"]
  8 [-]: NEWTABLE  R5 2 0       ; R5 := {}
  9 [-]: LOADK     R6 K6        ; R6 := "_xscale"
 10 [-]: LOADK     R7 K7        ; R7 := "_yscale"
 11 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 12 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 13 [-]: LOADK     R7 K8        ; R7 := 100
 14 [-]: LOADK     R8 K8        ; R8 := 100
 15 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 16 [-]: LOADK     R7 K9        ; R7 := 0.20000000298023
 17 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x15ED7700"]
 20 [-]: MOVE      R2 R0        ; R2 := R0
 21 [-]: MOVE      R3 R0        ; R3 := R0
 22 [-]: CALL      R1 3 1       ; R1(R2,R3)
 23 [-]: RETURN    R0 1         ; return 


; Function #25.7:
;
; Name:            
; Defined at line: 1051
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #25.8:
;
; Name:            
; Defined at line: 1054
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["MissionTypeTag"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 171
  3 [-]: JMP       171          ; PC := 171
  4 [-]: LOADK     R1 K2        ; R1 := "QUEST"
  5 [-]: LOADK     R2 K3        ; R2 := "RAID"
  6 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["RadialSector"]
  7 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mission"]
  8 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xA4269DBC"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["BaseNodeName"]
 11 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["SectorQuest"]
 12 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["SectorRaid"]
 13 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["SectorDifficulty"]
 14 [-]: GETGLOBAL R8 K11       ; R8 := 0x9FAED6BC
 15 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["RadialSector"]
 16 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["name"]
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["MissionTypeTag"]
 19 [-]: GETUPVAL  R10 U0       ; R10 := U0
 20 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["INVASION_ATTACKER_TAG"]
 21 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R9 U1        ; R9 := U1
 24 [-]: MOVE      R10 R4       ; R10 := R4
 25 [-]: CALL      R9 2 1       ; R9(R10)
 26 [-]: JMP       171          ; PC := 171
 27 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["MissionTypeTag"]
 28 [-]: GETUPVAL  R10 U0       ; R10 := U0
 29 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["ACTIVE_MISSION_TAG"]
 30 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 51
 31 [-]: JMP       51           ; PC := 51
 32 [-]: GETGLOBAL R9 K15       ; R9 := _T
 33 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["CachedActiveMissions"]
 34 [-]: TEST      R9 0         ; if not R9 then PC := 51
 35 [-]: JMP       51           ; PC := 51
 36 [-]: GETGLOBAL R9 K15       ; R9 := _T
 37 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["CachedActiveMissions"]
 38 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
 39 [-]: TEST      R9 0         ; if not R9 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R9 K15       ; R9 := _T
 42 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["CachedActiveMissions"]
 43 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
 44 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mVisible"]
 45 [-]: TEST      R9 0         ; if not R9 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETUPVAL  R9 U2        ; R9 := U2
 48 [-]: MOVE      R10 R4       ; R10 := R4
 49 [-]: CALL      R9 2 1       ; R9(R10)
 50 [-]: JMP       171          ; PC := 171
 51 [-]: GETGLOBAL R9 K18       ; R9 := 0x400E7765
 52 [-]: MOVE      R10 R5       ; R10 := R5
 53 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 54 [-]: TEST      R9 0         ; if not R9 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: GETGLOBAL R9 K18       ; R9 := 0x400E7765
 57 [-]: MOVE      R10 R6       ; R10 := R6
 58 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 59 [-]: TEST      R9 0         ; if not R9 then PC := 65
 60 [-]: JMP       65           ; PC := 65
 61 [-]: MOVE      R9 R4        ; R9 := R4
 62 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["MissionTypeTag"]
 63 [-]: CONCAT    R8 R9 R10    ; R8 := R9 .. R10
 64 [-]: JMP       111          ; PC := 111
 65 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["MissionTypeTag"]
 66 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 92
 67 [-]: JMP       92           ; PC := 92
 68 [-]: SELF      R9 R5 K19    ; R10 := R5; R9 := R5["0x1B252E3C"]
 69 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 70 [-]: MOVE      R5 R9        ; R5 := R9
 71 [-]: GETUPVAL  R9 U3        ; R9 := U3
 72 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 73 [-]: TEST      R9 0         ; if not R9 then PC := 90
 74 [-]: JMP       90           ; PC := 90
 75 [-]: GETUPVAL  R9 U3        ; R9 := U3
 76 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 77 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["KeyType"]
 78 [-]: TEST      R9 0         ; if not R9 then PC := 90
 79 [-]: JMP       90           ; PC := 90
 80 [-]: GETGLOBAL R9 K11       ; R9 := 0x9FAED6BC
 81 [-]: GETUPVAL  R10 U3       ; R10 := U3
 82 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 83 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["KeyType"]
 84 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10["0x1B252E3C"]
 85 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 86 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 87 [-]: GETUPVAL  R10 U0       ; R10 := U0
 88 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["KEY_TAG"]
 89 [-]: CONCAT    R8 R9 R10    ; R8 := R9 .. R10
 90 [-]: LOADNIL   R6 R6        ; R6 := nil
 91 [-]: JMP       111          ; PC := 111
 92 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["MissionTypeTag"]
 93 [-]: EQ        0 R9 R2      ; if R9 ~= R2 then PC := 100
 94 [-]: JMP       100          ; PC := 100
 95 [-]: SELF      R9 R6 K19    ; R10 := R6; R9 := R6["0x1B252E3C"]
 96 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 97 [-]: MOVE      R6 R9        ; R6 := R9
 98 [-]: LOADNIL   R5 R5        ; R5 := nil
 99 [-]: JMP       111          ; PC := 111
100 [-]: MOVE      R9 R4        ; R9 := R4
101 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["MissionTypeTag"]
102 [-]: CONCAT    R8 R9 R10    ; R8 := R9 .. R10
103 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
104 [-]: GETUPVAL  R9 U4        ; R9 := U4
105 [-]: SELF      R9 R9 K22    ; R10 := R9; R9 := R9["0x4B93F65B"]
106 [-]: GETGLOBAL R11 K23      ; R11 := 0xEC274B1A
107 [-]: MOVE      R12 R4       ; R12 := R4
108 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
109 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
110 [-]: MOVE      R3 R9        ; R3 := R9
111 [-]: GETTABLE  R9 R3 K24    ; R9 := R3["soloMode"]
112 [-]: TEST      R9 0         ; if not R9 then PC := 165
113 [-]: JMP       165          ; PC := 165
114 [-]: GETGLOBAL R9 K25       ; R9 := gMatchingService
115 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9["0x35DDC67D"]
116 [-]: CALL      R9 2 2       ; R9 := R9(R10)
117 [-]: LT        0 K27 R9     ; if 1 >= R9 then PC := 150
118 [-]: JMP       150          ; PC := 150
119 [-]: GETUPVAL  R9 U5        ; R9 := U5
120 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["0x8ECD61A2"]
121 [-]: GETGLOBAL R10 K23      ; R10 := 0xEC274B1A
122 [-]: MOVE      R11 R8       ; R11 := R8
123 [-]: CALL      R10 2 2      ; R10 := R10(R11)
124 [-]: MOVE      R11 R1       ; R11 := R1
125 [-]: MOVE      R12 R3       ; R12 := R3
126 [-]: MOVE      R13 R1       ; R13 := R1
127 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
128 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 135
129 [-]: JMP       135          ; PC := 135
130 [-]: GETUPVAL  R10 U5       ; R10 := U5
131 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["0xDABD460F"]
132 [-]: MOVE      R11 R9       ; R11 := R9
133 [-]: CALL      R10 2 1      ; R10(R11)
134 [-]: JMP       171          ; PC := 171
135 [-]: GETGLOBAL R10 K18      ; R10 := 0x400E7765
136 [-]: GETUPVAL  R11 U6       ; R11 := U6
137 [-]: GETTABLE  R11 R11 K30  ; R11 := R11["SoloMission"]
138 [-]: CALL      R10 2 2      ; R10 := R10(R11)
139 [-]: TEST      R10 0        ; if not R10 then PC := 171
140 [-]: JMP       171          ; PC := 171
141 [-]: GETUPVAL  R10 U7       ; R10 := U7
142 [-]: GETUPVAL  R11 U3       ; R11 := U3
143 [-]: GETTABLE  R11 R11 R4   ; R11 := R11[R4]
144 [-]: SETTABLE  R10 K31 R11  ; R10["Node"] := R11
145 [-]: GETUPVAL  R10 U7       ; R10 := U7
146 [-]: SETTABLE  R10 K32 R8   ; R10["SectorName"] := R8
147 [-]: MOVE      R10 R1       ; R10 := R1
148 [-]: MOVE      R10 R8       ; R10 := R8
149 [-]: JMP       171          ; PC := 171
150 [-]: GETUPVAL  R10 U9       ; R10 := U9
151 [-]: MOVE      R11 R8       ; R11 := R8
152 [-]: MOVE      R12 R5       ; R12 := R5
153 [-]: MOVE      R13 R6       ; R13 := R6
154 [-]: MOVE      R14 R7       ; R14 := R7
155 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
156 [-]: TEST      R10 0        ; if not R10 then PC := 171
157 [-]: JMP       171          ; PC := 171
158 [-]: GETGLOBAL R10 K15      ; R10 := _T
159 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["SquadOverlay"]
160 [-]: SELF      R10 R10 K34  ; R11 := R10; R10 := R10["0x458F27A9"]
161 [-]: LOADK     R12 K35      ; R12 := "NotifyForceLoadSoloMission"
162 [-]: LOADK     R13 K36      ; R13 := ""
163 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
164 [-]: JMP       171          ; PC := 171
165 [-]: GETUPVAL  R10 U9       ; R10 := U9
166 [-]: MOVE      R11 R8       ; R11 := R8
167 [-]: MOVE      R12 R5       ; R12 := R5
168 [-]: MOVE      R13 R6       ; R13 := R6
169 [-]: MOVE      R14 R7       ; R14 := R7
170 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
171 [-]: RETURN    R0 1         ; return 


; Function #25.9:
;
; Name:            
; Defined at line: 1115
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x2CA7452E"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  7 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Language/Menu/MissionSelector_FactionEnemyLevel"
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 10 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["FactionName"]
 11 [-]: SETTABLE  R5 K5 R6     ; R5["FACTION"] := R6
 12 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["mMinLevel"]
 13 [-]: SETTABLE  R5 K7 R6     ; R5["MIN_LEVEL"] := R6
 14 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mMaxLevel"]
 15 [-]: SETTABLE  R5 K9 R6     ; R5["MAX_LEVEL"] := R6
 16 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 17 [-]: SETTABLE  R0 K1 R1     ; R0["EnemyLabelString"] := R1
 18 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x880196A7"]
 20 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 21 [-]: LOADK     R4 K13       ; R4 := "Desc"
 22 [-]: LOADK     R5 K14       ; R5 := "verticalAlignment"
 23 [-]: LOADK     R6 K15       ; R6 := "center"
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["0x15ED7700"]
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: CALL      R1 3 1       ; R1(R2,R3)
 30 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 31 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1["0x7E1F26D7"]
 32 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 33 [-]: LOADK     R4 K18       ; R4 := ".Btn"
 34 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 35 [-]: GETGLOBAL R4 K19       ; R4 := _G
 36 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["UIMaterial_RectangleNoDepth"]
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 39 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x26581636"]
 40 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 41 [-]: LOADK     R4 K22       ; R4 := ".Icon"
 42 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 43 [-]: GETTABLE  R4 R0 K23    ; R4 := R0["Icon"]
 44 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 45 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 46 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x880196A7"]
 47 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 48 [-]: LOADK     R4 K24       ; R4 := "Decoration"
 49 [-]: LOADK     R5 K25       ; R5 := "_alpha"
 50 [-]: LOADK     R6 K26       ; R6 := 10
 51 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 52 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 53 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x880196A7"]
 54 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 55 [-]: LOADK     R4 K27       ; R4 := "Highlight"
 56 [-]: LOADK     R5 K25       ; R5 := "_alpha"
 57 [-]: LOADK     R6 K28       ; R6 := 0
 58 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 59 [-]: RETURN    R0 1         ; return 


; Function #25.10:
;
; Name:            
; Defined at line: 1128
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  3 [-]: RETURN    R2 3         ; return R2,R3
  4 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 1135
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: TEST      R2 1         ; if R2 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Expanded"]
  5 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: SETTABLE  R3 K0 R0     ; R3["Expanded"] := R0
 10 [-]: TEST      R0 0         ; if not R0 then PC := 164
 11 [-]: JMP       164          ; PC := 164
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SelectorList"]
 14 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mForcedVerticalSeparation"]
 15 [-]: UNM       R3 R3        ; R3 := - R3
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["CurrentIndex"]
 18 [-]: SUB       R4 R4 K4     ; R4 := R4 - 1
 19 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["SelectorList"]
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mElements"]
 23 [-]: LEN       R4 R4        ; R4 := # R4
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["SelectorList"]
 26 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mForcedVerticalSeparation"]
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["CurrentIndex"]
 29 [-]: SUB       R6 R4 R6     ; R6 := R4 - R6
 30 [-]: MUL       R5 R5 R6     ; R5 := R5 * R6
 31 [-]: ADD       R5 R5 K6     ; R5 := R5 + 16
 32 [-]: TEST      R1 0         ; if not R1 then PC := 85
 33 [-]: JMP       85           ; PC := 85
 34 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 35 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 36 [-]: LOADK     R8 K9        ; R8 := "DifficultySelector.TopCap"
 37 [-]: LOADK     R9 K10       ; R9 := "_y"
 38 [-]: MOVE      R10 R3       ; R10 := R3
 39 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 40 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 41 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 42 [-]: LOADK     R8 K11       ; R8 := "DifficultySelector.MidSegment"
 43 [-]: LOADK     R9 K10       ; R9 := "_y"
 44 [-]: MOVE      R10 R3       ; R10 := R3
 45 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 46 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 47 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 48 [-]: LOADK     R8 K11       ; R8 := "DifficultySelector.MidSegment"
 49 [-]: LOADK     R9 K12       ; R9 := "_height"
 50 [-]: SUB       R10 R5 R3    ; R10 := R5 - R3
 51 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 52 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 53 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 54 [-]: LOADK     R8 K13       ; R8 := "DifficultySelector.BottomCap"
 55 [-]: LOADK     R9 K10       ; R9 := "_y"
 56 [-]: MOVE      R10 R5       ; R10 := R5
 57 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 58 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 59 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 60 [-]: LOADK     R8 K14       ; R8 := "DifficultySelector.Hover"
 61 [-]: LOADK     R9 K10       ; R9 := "_y"
 62 [-]: SUB       R10 R3 K15   ; R10 := R3 - 42
 63 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 64 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 65 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 66 [-]: LOADK     R8 K14       ; R8 := "DifficultySelector.Hover"
 67 [-]: LOADK     R9 K12       ; R9 := "_height"
 68 [-]: SUB       R10 R5 R3    ; R10 := R5 - R3
 69 [-]: ADD       R10 R10 K16  ; R10 := R10 + 82
 70 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 71 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 72 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 73 [-]: LOADK     R8 K17       ; R8 := "DifficultySelector.Mask"
 74 [-]: LOADK     R9 K10       ; R9 := "_y"
 75 [-]: SUB       R10 R3 K18   ; R10 := R3 - 24
 76 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 77 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 78 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x1C19D966"]
 79 [-]: LOADK     R8 K17       ; R8 := "DifficultySelector.Mask"
 80 [-]: LOADK     R9 K12       ; R9 := "_height"
 81 [-]: SUB       R10 R5 R3    ; R10 := R5 - R3
 82 [-]: ADD       R10 R10 K19  ; R10 := R10 + 48
 83 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 84 [-]: JMP       158          ; PC := 158
 85 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
 86 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
 87 [-]: LOADK     R8 K9        ; R8 := "DifficultySelector.TopCap"
 88 [-]: GETGLOBAL R9 K21       ; R9 := UISys
 89 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["FlashInstance_EASE_OUT"]
 90 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 91 [-]: LOADK     R11 K10      ; R11 := "_y"
 92 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 93 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 94 [-]: MOVE      R12 R3       ; R12 := R3
 95 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 96 [-]: LOADK     R12 K23      ; R12 := 0.25
 97 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
 98 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
 99 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
100 [-]: LOADK     R8 K11       ; R8 := "DifficultySelector.MidSegment"
101 [-]: GETGLOBAL R9 K21       ; R9 := UISys
102 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["FlashInstance_EASE_OUT"]
103 [-]: NEWTABLE  R10 2 0      ; R10 := {}
104 [-]: LOADK     R11 K10      ; R11 := "_y"
105 [-]: LOADK     R12 K12      ; R12 := "_height"
106 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
107 [-]: NEWTABLE  R11 2 0      ; R11 := {}
108 [-]: MOVE      R12 R3       ; R12 := R3
109 [-]: SUB       R13 R5 R3    ; R13 := R5 - R3
110 [-]: SETLIST   R11 2 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
111 [-]: LOADK     R12 K23      ; R12 := 0.25
112 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
113 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
114 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
115 [-]: LOADK     R8 K13       ; R8 := "DifficultySelector.BottomCap"
116 [-]: GETGLOBAL R9 K21       ; R9 := UISys
117 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["FlashInstance_EASE_OUT"]
118 [-]: NEWTABLE  R10 1 0      ; R10 := {}
119 [-]: LOADK     R11 K10      ; R11 := "_y"
120 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
121 [-]: NEWTABLE  R11 1 0      ; R11 := {}
122 [-]: MOVE      R12 R5       ; R12 := R5
123 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
124 [-]: LOADK     R12 K23      ; R12 := 0.25
125 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
126 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
127 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
128 [-]: LOADK     R8 K14       ; R8 := "DifficultySelector.Hover"
129 [-]: GETGLOBAL R9 K21       ; R9 := UISys
130 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["FlashInstance_EASE_OUT"]
131 [-]: NEWTABLE  R10 2 0      ; R10 := {}
132 [-]: LOADK     R11 K10      ; R11 := "_y"
133 [-]: LOADK     R12 K12      ; R12 := "_height"
134 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
135 [-]: NEWTABLE  R11 2 0      ; R11 := {}
136 [-]: SUB       R12 R3 K15   ; R12 := R3 - 42
137 [-]: SUB       R13 R5 R3    ; R13 := R5 - R3
138 [-]: ADD       R13 R13 K16  ; R13 := R13 + 82
139 [-]: SETLIST   R11 2 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
140 [-]: LOADK     R12 K23      ; R12 := 0.25
141 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
142 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
143 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
144 [-]: LOADK     R8 K17       ; R8 := "DifficultySelector.Mask"
145 [-]: GETGLOBAL R9 K21       ; R9 := UISys
146 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["FlashInstance_EASE_OUT"]
147 [-]: NEWTABLE  R10 2 0      ; R10 := {}
148 [-]: LOADK     R11 K10      ; R11 := "_y"
149 [-]: LOADK     R12 K12      ; R12 := "_height"
150 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
151 [-]: NEWTABLE  R11 2 0      ; R11 := {}
152 [-]: SUB       R12 R3 K18   ; R12 := R3 - 24
153 [-]: SUB       R13 R5 R3    ; R13 := R5 - R3
154 [-]: ADD       R13 R13 K19  ; R13 := R13 + 48
155 [-]: SETLIST   R11 2 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
156 [-]: LOADK     R12 K23      ; R12 := 0.25
157 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
158 [-]: GETUPVAL  R6 U0        ; R6 := U0
159 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["SelectorList"]
160 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0x51396186"]
161 [-]: CLOSURE   R8 0         ; R8 := closure(Function #26.1)
162 [-]: CALL      R6 3 1       ; R6(R7,R8)
163 [-]: JMP       321          ; PC := 321
164 [-]: GETUPVAL  R6 U0        ; R6 := U0
165 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["InitY"]
166 [-]: GETUPVAL  R7 U0        ; R7 := U0
167 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["SelectorList"]
168 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mForcedVerticalSeparation"]
169 [-]: GETUPVAL  R8 U0        ; R8 := U0
170 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["CurrentIndex"]
171 [-]: SUB       R8 R8 K4     ; R8 := R8 - 1
172 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
173 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
174 [-]: TEST      R1 0         ; if not R1 then PC := 231
175 [-]: JMP       231          ; PC := 231
176 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
177 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
178 [-]: LOADK     R9 K26       ; R9 := "DifficultySelector.OptionContainer"
179 [-]: LOADK     R10 K10      ; R10 := "_y"
180 [-]: MOVE      R11 R6       ; R11 := R6
181 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
182 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
183 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
184 [-]: LOADK     R9 K9        ; R9 := "DifficultySelector.TopCap"
185 [-]: LOADK     R10 K10      ; R10 := "_y"
186 [-]: LOADK     R11 K27      ; R11 := 0
187 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
188 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
189 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
190 [-]: LOADK     R9 K11       ; R9 := "DifficultySelector.MidSegment"
191 [-]: LOADK     R10 K10      ; R10 := "_y"
192 [-]: LOADK     R11 K27      ; R11 := 0
193 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
194 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
195 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
196 [-]: LOADK     R9 K11       ; R9 := "DifficultySelector.MidSegment"
197 [-]: LOADK     R10 K12      ; R10 := "_height"
198 [-]: LOADK     R11 K6       ; R11 := 16
199 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
200 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
201 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
202 [-]: LOADK     R9 K13       ; R9 := "DifficultySelector.BottomCap"
203 [-]: LOADK     R10 K10      ; R10 := "_y"
204 [-]: LOADK     R11 K6       ; R11 := 16
205 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
206 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
207 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
208 [-]: LOADK     R9 K14       ; R9 := "DifficultySelector.Hover"
209 [-]: LOADK     R10 K10      ; R10 := "_y"
210 [-]: LOADK     R11 K28      ; R11 := -42
211 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
212 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
213 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
214 [-]: LOADK     R9 K14       ; R9 := "DifficultySelector.Hover"
215 [-]: LOADK     R10 K12      ; R10 := "_height"
216 [-]: LOADK     R11 K29      ; R11 := 98
217 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
218 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
219 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
220 [-]: LOADK     R9 K17       ; R9 := "DifficultySelector.Mask"
221 [-]: LOADK     R10 K10      ; R10 := "_y"
222 [-]: LOADK     R11 K30      ; R11 := -24
223 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
224 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
225 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1C19D966"]
226 [-]: LOADK     R9 K17       ; R9 := "DifficultySelector.Mask"
227 [-]: LOADK     R10 K12      ; R10 := "_height"
228 [-]: LOADK     R11 K31      ; R11 := 64
229 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
230 [-]: JMP       315          ; PC := 315
231 [-]: GETGLOBAL R7 K20       ; R7 := 0x52E17A90
232 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
233 [-]: LOADK     R9 K26       ; R9 := "DifficultySelector.OptionContainer"
234 [-]: GETGLOBAL R10 K21      ; R10 := UISys
235 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_EASE_OUT"]
236 [-]: NEWTABLE  R11 1 0      ; R11 := {}
237 [-]: LOADK     R12 K10      ; R12 := "_y"
238 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
239 [-]: NEWTABLE  R12 1 0      ; R12 := {}
240 [-]: MOVE      R13 R6       ; R13 := R6
241 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
242 [-]: LOADK     R13 K23      ; R13 := 0.25
243 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
244 [-]: GETGLOBAL R7 K20       ; R7 := 0x52E17A90
245 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
246 [-]: LOADK     R9 K9        ; R9 := "DifficultySelector.TopCap"
247 [-]: GETGLOBAL R10 K21      ; R10 := UISys
248 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_EASE_OUT"]
249 [-]: NEWTABLE  R11 1 0      ; R11 := {}
250 [-]: LOADK     R12 K10      ; R12 := "_y"
251 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
252 [-]: NEWTABLE  R12 1 0      ; R12 := {}
253 [-]: LOADK     R13 K27      ; R13 := 0
254 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
255 [-]: LOADK     R13 K23      ; R13 := 0.25
256 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
257 [-]: GETGLOBAL R7 K20       ; R7 := 0x52E17A90
258 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
259 [-]: LOADK     R9 K11       ; R9 := "DifficultySelector.MidSegment"
260 [-]: GETGLOBAL R10 K21      ; R10 := UISys
261 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_EASE_OUT"]
262 [-]: NEWTABLE  R11 2 0      ; R11 := {}
263 [-]: LOADK     R12 K10      ; R12 := "_y"
264 [-]: LOADK     R13 K12      ; R13 := "_height"
265 [-]: SETLIST   R11 2 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
266 [-]: NEWTABLE  R12 2 0      ; R12 := {}
267 [-]: LOADK     R13 K27      ; R13 := 0
268 [-]: LOADK     R14 K6       ; R14 := 16
269 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
270 [-]: LOADK     R13 K23      ; R13 := 0.25
271 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
272 [-]: GETGLOBAL R7 K20       ; R7 := 0x52E17A90
273 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
274 [-]: LOADK     R9 K13       ; R9 := "DifficultySelector.BottomCap"
275 [-]: GETGLOBAL R10 K21      ; R10 := UISys
276 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_EASE_OUT"]
277 [-]: NEWTABLE  R11 1 0      ; R11 := {}
278 [-]: LOADK     R12 K10      ; R12 := "_y"
279 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
280 [-]: NEWTABLE  R12 1 0      ; R12 := {}
281 [-]: LOADK     R13 K6       ; R13 := 16
282 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
283 [-]: LOADK     R13 K23      ; R13 := 0.25
284 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
285 [-]: GETGLOBAL R7 K20       ; R7 := 0x52E17A90
286 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
287 [-]: LOADK     R9 K14       ; R9 := "DifficultySelector.Hover"
288 [-]: GETGLOBAL R10 K21      ; R10 := UISys
289 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_EASE_OUT"]
290 [-]: NEWTABLE  R11 2 0      ; R11 := {}
291 [-]: LOADK     R12 K10      ; R12 := "_y"
292 [-]: LOADK     R13 K12      ; R13 := "_height"
293 [-]: SETLIST   R11 2 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
294 [-]: NEWTABLE  R12 2 0      ; R12 := {}
295 [-]: LOADK     R13 K28      ; R13 := -42
296 [-]: LOADK     R14 K29      ; R14 := 98
297 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
298 [-]: LOADK     R13 K23      ; R13 := 0.25
299 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
300 [-]: GETGLOBAL R7 K20       ; R7 := 0x52E17A90
301 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
302 [-]: LOADK     R9 K17       ; R9 := "DifficultySelector.Mask"
303 [-]: GETGLOBAL R10 K21      ; R10 := UISys
304 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_EASE_OUT"]
305 [-]: NEWTABLE  R11 2 0      ; R11 := {}
306 [-]: LOADK     R12 K10      ; R12 := "_y"
307 [-]: LOADK     R13 K12      ; R13 := "_height"
308 [-]: SETLIST   R11 2 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
309 [-]: NEWTABLE  R12 2 0      ; R12 := {}
310 [-]: LOADK     R13 K30      ; R13 := -24
311 [-]: LOADK     R14 K31      ; R14 := 64
312 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
313 [-]: LOADK     R13 K23      ; R13 := 0.25
314 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
315 [-]: GETUPVAL  R7 U0        ; R7 := U0
316 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["SelectorList"]
317 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x51396186"]
318 [-]: CLOSURE   R9 1         ; R9 := closure(Function #26.2)
319 [-]: GETUPVAL  R0 U0        ; R0 := U0
320 [-]: CALL      R7 3 1       ; R7(R8,R9)
321 [-]: RETURN    R0 1         ; return 


; Function #26.1:
;
; Name:            
; Defined at line: 1163
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "enabled"
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #26.2:
;
; Name:            
; Defined at line: 1187
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "enabled"
  5 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["DifficultyIndex"]
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["CurrentIndex"]
  8 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 1193
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
  3 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  4 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
  5 [-]: LOADK     R4 K4        ; R4 := "DifficultySelector.OptionContainer"
  6 [-]: LOADK     R5 K5        ; R5 := "_y"
  7 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
  8 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  9 [-]: SETTABLE  R0 K0 R1     ; R0["InitY"] := R1
 10 [-]: NEWTABLE  R0 0 3       ; R0 := {}
 11 [-]: SETTABLE  R0 K6 K7     ; R0["LevelModifier"] := 0
 12 [-]: SETTABLE  R0 K8 K9     ; R0["ResourceMultiplier"] := 1
 13 [-]: SETTABLE  R0 K10 K9    ; R0["ModMultiplier"] := 1
 14 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["HARD_MODE_LEVEL_MODIFIER"]
 17 [-]: SETTABLE  R1 K6 R2     ; R1["LevelModifier"] := R2
 18 [-]: SETTABLE  R1 K8 K12    ; R1["ResourceMultiplier"] := 2
 19 [-]: SETTABLE  R1 K10 K12   ; R1["ModMultiplier"] := 2
 20 [-]: GETGLOBAL R2 K13       ; R2 := table
 21 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0xE6450C9D"]
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["Settings"]
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: GETGLOBAL R2 K13       ; R2 := table
 27 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0xE6450C9D"]
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["Settings"]
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: CALL      R2 3 1       ; R2(R3,R4)
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: SETTABLE  R2 K16 K9    ; R2["CurrentIndex"] := 1
 34 [-]: GETGLOBAL R2 K17       ; R2 := 0x329BDC44
 35 [-]: LOADK     R3 K18       ; R3 := "EE.Interface.Components.List"
 36 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: GETTABLE  R4 R2 K20    ; R4 := R2["0xB40DEC3F"]
 39 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
 40 [-]: LOADK     R6 K21       ; R6 := "DifficultySelector.OptionContainer.Option"
 41 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 42 [-]: SETTABLE  R3 K19 R4    ; R3["SelectorList"] := R4
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 45 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0xE13A565"]
 46 [-]: LOADK     R5 K23       ; R5 := "DifficultySelectorPressed"
 47 [-]: LOADK     R6 K24       ; R6 := "DifficultySelectorFocused"
 48 [-]: LOADK     R7 K25       ; R7 := "DifficultySelectorUnfocused"
 49 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 50 [-]: GETUPVAL  R3 U0        ; R3 := U0
 51 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 52 [-]: SETTABLE  R3 K26 K27   ; R3["mForcedVerticalSeparation"] := 50
 53 [-]: GETUPVAL  R3 U0        ; R3 := U0
 54 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 55 [-]: SETTABLE  R3 K28 K7    ; R3["mForcedHorizontalSeparation"] := 0
 56 [-]: GETUPVAL  R3 U0        ; R3 := U0
 57 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 58 [-]: SETTABLE  R3 K29 K30   ; R3["mApplyThemes"] := "0x1"
 59 [-]: GETUPVAL  R3 U0        ; R3 := U0
 60 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 61 [-]: CLOSURE   R4 0         ; R4 := closure(Function #27.1)
 62 [-]: GETUPVAL  R0 U0        ; R0 := U0
 63 [-]: GETUPVAL  R0 U2        ; R0 := U2
 64 [-]: GETUPVAL  R0 U3        ; R0 := U3
 65 [-]: SETTABLE  R3 K31 R4    ; R3["UpdateColors"] := R4
 66 [-]: GETUPVAL  R3 U0        ; R3 := U0
 67 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 68 [-]: CLOSURE   R4 1         ; R4 := closure(Function #27.2)
 69 [-]: GETUPVAL  R0 U3        ; R0 := U3
 70 [-]: SETTABLE  R3 K32 R4    ; R3["mClipCreatedCallback"] := R4
 71 [-]: GETUPVAL  R3 U0        ; R3 := U0
 72 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 73 [-]: CLOSURE   R4 2         ; R4 := closure(Function #27.3)
 74 [-]: GETUPVAL  R0 U2        ; R0 := U2
 75 [-]: GETUPVAL  R0 U4        ; R0 := U4
 76 [-]: GETUPVAL  R0 U0        ; R0 := U0
 77 [-]: GETUPVAL  R0 U5        ; R0 := U5
 78 [-]: GETUPVAL  R0 U6        ; R0 := U6
 79 [-]: SETTABLE  R3 K33 R4    ; R3["mOnFocusedCallback"] := R4
 80 [-]: GETUPVAL  R3 U0        ; R3 := U0
 81 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 82 [-]: CLOSURE   R4 3         ; R4 := closure(Function #27.4)
 83 [-]: GETUPVAL  R0 U4        ; R0 := U4
 84 [-]: GETUPVAL  R0 U0        ; R0 := U0
 85 [-]: GETUPVAL  R0 U5        ; R0 := U5
 86 [-]: SETTABLE  R3 K34 R4    ; R3["mOnUnfocusedCallback"] := R4
 87 [-]: GETUPVAL  R3 U0        ; R3 := U0
 88 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 89 [-]: CLOSURE   R4 4         ; R4 := closure(Function #27.5)
 90 [-]: GETUPVAL  R0 U0        ; R0 := U0
 91 [-]: SETTABLE  R3 K35 R4    ; R3["mOnSelectedCallback"] := R4
 92 [-]: GETUPVAL  R3 U0        ; R3 := U0
 93 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["SelectorList"]
 94 [-]: CLOSURE   R4 5         ; R4 := closure(Function #27.6)
 95 [-]: GETUPVAL  R0 U0        ; R0 := U0
 96 [-]: SETTABLE  R3 K36 R4    ; R3["mElementDrawCallback"] := R4
 97 [-]: CLOSURE   R3 6         ; R3 := closure(Function #27.7)
 98 [-]: GETUPVAL  R0 U0        ; R0 := U0
 99 [-]: GETUPVAL  R0 U3        ; R0 := U3
100 [-]: GETUPVAL  R0 U2        ; R0 := U2
101 [-]: GETUPVAL  R4 U0        ; R4 := U0
102 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["SelectorList"]
103 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4["0xA77DA8EE"]
104 [-]: NEWTABLE  R6 0 4       ; R6 := {}
105 [-]: GETGLOBAL R7 K2        ; R7 := mMovie
106 [-]: SELF      R7 R7 K39    ; R8 := R7; R7 := R7["0x5DB0BD4"]
107 [-]: LOADK     R9 K40       ; R9 := "/Lotus/Language/Labels/NormalMode"
108 [-]: MOVE      R10 R1       ; R10 := R1
109 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
110 [-]: SETTABLE  R6 K38 R7    ; R6["Name"] := R7
111 [-]: GETGLOBAL R7 K42       ; R7 := difficultyIcons
112 [-]: GETTABLE  R7 R7 K9     ; R7 := R7[1]
113 [-]: SETTABLE  R6 K41 R7    ; R6["Icon"] := R7
114 [-]: SETTABLE  R6 K43 K9    ; R6["DifficultyIndex"] := 1
115 [-]: MOVE      R7 R3        ; R7 := R3
116 [-]: LOADK     R8 K9        ; R8 := 1
117 [-]: CALL      R7 2 2       ; R7 := R7(R8)
118 [-]: SETTABLE  R6 K44 R7    ; R6["Desc"] := R7
119 [-]: MOVE      R7 R1        ; R7 := R1
120 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
121 [-]: GETUPVAL  R4 U0        ; R4 := U0
122 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["SelectorList"]
123 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4["0xA77DA8EE"]
124 [-]: NEWTABLE  R6 0 4       ; R6 := {}
125 [-]: GETGLOBAL R7 K2        ; R7 := mMovie
126 [-]: SELF      R7 R7 K39    ; R8 := R7; R7 := R7["0x5DB0BD4"]
127 [-]: LOADK     R9 K45       ; R9 := "/Lotus/Language/Labels/HardMode"
128 [-]: MOVE      R10 R1       ; R10 := R1
129 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
130 [-]: SETTABLE  R6 K38 R7    ; R6["Name"] := R7
131 [-]: GETGLOBAL R7 K42       ; R7 := difficultyIcons
132 [-]: GETTABLE  R7 R7 K12    ; R7 := R7[2]
133 [-]: SETTABLE  R6 K41 R7    ; R6["Icon"] := R7
134 [-]: SETTABLE  R6 K43 K12   ; R6["DifficultyIndex"] := 2
135 [-]: MOVE      R7 R3        ; R7 := R3
136 [-]: LOADK     R8 K12       ; R8 := 2
137 [-]: CALL      R7 2 2       ; R7 := R7(R8)
138 [-]: SETTABLE  R6 K44 R7    ; R6["Desc"] := R7
139 [-]: MOVE      R7 R1        ; R7 := R1
140 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
141 [-]: GETUPVAL  R4 U0        ; R4 := U0
142 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["SelectorList"]
143 [-]: SELF      R4 R4 K46    ; R5 := R4; R4 := R4["0x6470BAF4"]
144 [-]: LOADNIL   R6 R6        ; R6 := nil
145 [-]: MOVE      R7 R1        ; R7 := R1
146 [-]: MOVE      R8 R1        ; R8 := R1
147 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
148 [-]: GETUPVAL  R4 U5        ; R4 := U5
149 [-]: MOVE      R5 R0        ; R5 := R0
150 [-]: MOVE      R6 R1        ; R6 := R1
151 [-]: MOVE      R7 R1        ; R7 := R1
152 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
153 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
154 [-]: SELF      R4 R4 K47    ; R5 := R4; R4 := R4["0x1C19D966"]
155 [-]: LOADK     R6 K48       ; R6 := "DifficultySelector"
156 [-]: LOADK     R7 K49       ; R7 := "_visible"
157 [-]: MOVE      R8 R1        ; R8 := R1
158 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
159 [-]: RETURN    R0 1         ; return 


; Function #27.1:
;
; Name:            
; Defined at line: 1217
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TESTSET   R2 R1 1      ; if R1 then PC := 10 else R2 := R1
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["DifficultyIndex"]
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrentIndex"]
  6 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: MOVE      R2 R1        ; R2 := R1
 10 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x880196A7"]
 12 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mClipName"]
 13 [-]: LOADK     R6 K5        ; R6 := "Icon"
 14 [-]: LOADK     R7 K6        ; R7 := "_color"
 15 [-]: GETUPVAL  R8 U1        ; R8 := U1
 16 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xF81722A2"]
 17 [-]: MOVE      R9 R2        ; R9 := R2
 18 [-]: GETUPVAL  R10 U2       ; R10 := U2
 19 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["FloatingContentHighlight"]
 20 [-]: GETUPVAL  R11 U2       ; R11 := U2
 21 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["FloatingContent"]
 22 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 23 [-]: CALL      R3 0 1       ; R3(R4,...)
 24 [-]: GETGLOBAL R3 K10       ; R3 := 0x52E17A90
 25 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 26 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mClipName"]
 27 [-]: LOADK     R6 K11       ; R6 := ".Glow"
 28 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 29 [-]: GETGLOBAL R6 K12       ; R6 := UISys
 30 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["FlashInstance_LINEAR"]
 31 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 32 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 33 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 34 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 35 [-]: GETUPVAL  R9 U1        ; R9 := U1
 36 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xF81722A2"]
 37 [-]: MOVE      R10 R2       ; R10 := R2
 38 [-]: LOADK     R11 K15      ; R11 := 45
 39 [-]: LOADK     R12 K16      ; R12 := 0
 40 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 41 [-]: SETLIST   R8 0 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
 42 [-]: LOADK     R9 K17       ; R9 := 0.15000000596046
 43 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 44 [-]: RETURN    R0 1         ; return 


; Function #27.2:
;
; Name:            
; Defined at line: 1223
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := "Glow"
  5 [-]: LOADK     R5 K3        ; R5 := "_color"
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["FloatingContentHighlight"]
  8 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  9 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: LOADK     R4 K2        ; R4 := "Glow"
 13 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 14 [-]: LOADK     R6 K6        ; R6 := 0
 15 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 16 [-]: RETURN    R0 1         ; return 


; Function #27.3:
;
; Name:            
; Defined at line: 1228
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x25992394"]
  9 [-]: GETGLOBAL R2 K3        ; R2 := _G
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UISound_Focus"]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xD5274B5D"]
 14 [-]: GETUPVAL  R3 U2        ; R3 := U2
 15 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["ExpansionTimerId"]
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x61494587"]
 20 [-]: LOADK     R4 K8        ; R4 := 0.10000000149012
 21 [-]: CLOSURE   R5 0         ; R5 := closure(Function #27.3.1)
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 24 [-]: SETTABLE  R1 K6 R2     ; R1["ExpansionTimerId"] := R2
 25 [-]: GETUPVAL  R1 U2        ; R1 := U2
 26 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["SelectorList"]
 27 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x15ED7700"]
 28 [-]: MOVE      R2 R0        ; R2 := R0
 29 [-]: MOVE      R3 R1        ; R3 := R1
 30 [-]: CALL      R1 3 1       ; R1(R2,R3)
 31 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 32 [-]: SETTABLE  R1 K11 K12   ; R1["CustomEntry"] := "0x1"
 33 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["Name"]
 34 [-]: SETTABLE  R1 K13 R2    ; R1["Name"] := R2
 35 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["Desc"]
 36 [-]: SETTABLE  R1 K14 R2    ; R1["Description"] := R2
 37 [-]: GETUPVAL  R2 U4        ; R2 := U4
 38 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["0x4C8FC6DC"]
 39 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 40 [-]: MOVE      R4 R1        ; R4 := R1
 41 [-]: GETGLOBAL R5 K18       ; R5 := 0xF595ADDE
 42 [-]: GETGLOBAL R6 K17       ; R6 := mMovie
 43 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6["0x6B7B470B"]
 44 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 45 [-]: LOADK     R9 K20       ; R9 := ".Btn"
 46 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 47 [-]: LOADK     R9 K21       ; R9 := "_screenX"
 48 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 49 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 50 [-]: GETGLOBAL R6 K18       ; R6 := 0xF595ADDE
 51 [-]: GETGLOBAL R7 K17       ; R7 := mMovie
 52 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7["0x6B7B470B"]
 53 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
 54 [-]: LOADK     R10 K20      ; R10 := ".Btn"
 55 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 56 [-]: LOADK     R10 K22      ; R10 := "_screenY"
 57 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 58 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 59 [-]: LOADK     R7 K23       ; R7 := 64
 60 [-]: LOADK     R8 K24       ; R8 := 32
 61 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 62 [-]: GETGLOBAL R2 K25       ; R2 := _T
 63 [-]: GETUPVAL  R3 U2        ; R3 := U2
 64 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["SelectorList"]
 65 [-]: SETTABLE  R2 K26 R3    ; R2["InfoPopup_Grid"] := R3
 66 [-]: GETGLOBAL R2 K25       ; R2 := _T
 67 [-]: SETTABLE  R2 K27 R1    ; R2["InfoPopup_Data"] := R1
 68 [-]: RETURN    R0 1         ; return 


; Function #27.3.1:
;
; Name:            
; Defined at line: 1236
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #27.4:
;
; Name:            
; Defined at line: 1255
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xD5274B5D"]
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["ExpansionTimerId"]
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x61494587"]
 15 [-]: LOADK     R4 K5        ; R4 := 0.10000000149012
 16 [-]: CLOSURE   R5 0         ; R5 := closure(Function #27.4.1)
 17 [-]: GETUPVAL  R0 U2        ; R0 := U2
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: SETTABLE  R1 K3 R2     ; R1["ExpansionTimerId"] := R2
 20 [-]: GETUPVAL  R1 U1        ; R1 := U1
 21 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["SelectorList"]
 22 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x15ED7700"]
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: CALL      R1 3 1       ; R1(R2,R3)
 26 [-]: GETGLOBAL R1 K8        ; R1 := _T
 27 [-]: SETTABLE  R1 K9 K10    ; R1["InfoPopup_Data"] := nil
 28 [-]: GETGLOBAL R1 K8        ; R1 := _T
 29 [-]: SETTABLE  R1 K11 K10   ; R1["InfoPopup_Grid"] := nil
 30 [-]: RETURN    R0 1         ; return 


; Function #27.4.1:
;
; Name:            
; Defined at line: 1260
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #27.5:
;
; Name:            
; Defined at line: 1266
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["DifficultyIndex"]
  9 [-]: SETTABLE  R1 K2 R2     ; R1["CurrentIndex"] := R2
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["SelectorList"]
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x51396186"]
 13 [-]: CLOSURE   R3 0         ; R3 := closure(Function #27.5.1)
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: RETURN    R0 1         ; return 


; Function #27.5.1:
;
; Name:            
; Defined at line: 1273
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["SelectorList"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x15ED7700"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #27.6:
;
; Name:            
; Defined at line: 1278
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["SelectorList"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x15ED7700"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x26581636"]
  8 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K5        ; R4 := ".Icon"
 10 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["Icon"]
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #27.7:
;
; Name:            
; Defined at line: 1284
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: LOADK     R2 K0        ; R2 := "<p>"
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Settings"]
  5 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  6 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  7 [-]: MOVE      R5 R3        ; R5 := R3
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 1         ; if R4 then PC := 136
 10 [-]: JMP       136          ; PC := 136
 11 [-]: GETTABLE  R4 R3 K3     ; R4 := R3["LevelModifier"]
 12 [-]: EQ        1 R4 K4      ; if R4 == 0 then PC := 54
 13 [-]: JMP       54           ; PC := 54
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K5        ; R5 := "<font color=\""
 17 [-]: GETUPVAL  R6 U1        ; R6 := U1
 18 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["ContentHtml"]
 19 [-]: LOADK     R7 K7        ; R7 := "\">"
 20 [-]: CONCAT    R2 R4 R7     ; R2 := R4 .. R5 .. R6 .. R7
 21 [-]: LOADK     R4 K5        ; R4 := "<font color=\""
 22 [-]: GETUPVAL  R5 U1        ; R5 := U1
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["FloatingContentHighlightHtml"]
 24 [-]: LOADK     R6 K7        ; R6 := "\">"
 25 [-]: GETUPVAL  R7 U2        ; R7 := U2
 26 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xF81722A2"]
 27 [-]: GETTABLE  R8 R3 K3     ; R8 := R3["LevelModifier"]
 28 [-]: LT        1 K4 R8      ; if 0 < R8 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R8 R0        ; R8 := R0
 31 [-]: MOVE      R8 R1        ; R8 := R1
 32 [-]: LOADK     R9 K10       ; R9 := "+"
 33 [-]: LOADK     R10 K11      ; R10 := "-"
 34 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 35 [-]: GETTABLE  R8 R3 K3     ; R8 := R3["LevelModifier"]
 36 [-]: LOADK     R9 K12       ; R9 := "</font>"
 37 [-]: CONCAT    R4 R4 R9     ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9
 38 [-]: MOVE      R5 R2        ; R5 := R2
 39 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
 40 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 41 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Labels/DifficultyModifier"
 42 [-]: MOVE      R9 R1        ; R9 := R1
 43 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 44 [-]: GETGLOBAL R11 K13      ; R11 := mMovie
 45 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 46 [-]: LOADK     R13 K17      ; R13 := "/Lotus/Language/Labels/EnemyLevel"
 47 [-]: MOVE      R14 R1       ; R14 := R1
 48 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 49 [-]: SETTABLE  R10 K16 R11  ; R10["PROPERTY"] := R11
 50 [-]: SETTABLE  R10 K18 R4   ; R10["MODIFIER"] := R4
 51 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 52 [-]: LOADK     R7 K12       ; R7 := "</font>"
 53 [-]: CONCAT    R2 R5 R7     ; R2 := R5 .. R6 .. R7
 54 [-]: GETTABLE  R5 R3 K19    ; R5 := R3["ResourceMultiplier"]
 55 [-]: EQ        1 R5 K20     ; if R5 == 1 then PC := 95
 56 [-]: JMP       95           ; PC := 95
 57 [-]: TEST      R1 0         ; if not R1 then PC := 62
 58 [-]: JMP       62           ; PC := 62
 59 [-]: MOVE      R5 R2        ; R5 := R2
 60 [-]: LOADK     R6 K21       ; R6 := "<br>"
 61 [-]: CONCAT    R2 R5 R6     ; R2 := R5 .. R6
 62 [-]: MOVE      R1 R1        ; R1 := R1
 63 [-]: LOADK     R5 K5        ; R5 := "<font color=\""
 64 [-]: GETUPVAL  R6 U1        ; R6 := U1
 65 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["FloatingContentHighlightHtml"]
 66 [-]: LOADK     R7 K22       ; R7 := "\"> "
 67 [-]: GETUPVAL  R8 U2        ; R8 := U2
 68 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0xF81722A2"]
 69 [-]: GETTABLE  R9 R3 K19    ; R9 := R3["ResourceMultiplier"]
 70 [-]: LT        1 K20 R9     ; if 1 < R9 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: MOVE      R9 R0        ; R9 := R0
 73 [-]: MOVE      R9 R1        ; R9 := R1
 74 [-]: LOADK     R10 K10      ; R10 := "+"
 75 [-]: LOADK     R11 K11      ; R11 := "-"
 76 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 77 [-]: GETTABLE  R9 R3 K19    ; R9 := R3["ResourceMultiplier"]
 78 [-]: SUB       R9 R9 K20    ; R9 := R9 - 1
 79 [-]: MUL       R9 R9 K23    ; R9 := R9 * 100
 80 [-]: LOADK     R10 K24      ; R10 := "%</font>"
 81 [-]: CONCAT    R5 R5 R10    ; R5 := R5 .. R6 .. R7 .. R8 .. R9 .. R10
 82 [-]: MOVE      R6 R2        ; R6 := R2
 83 [-]: LOADK     R7 K5        ; R7 := "<font color=\""
 84 [-]: GETUPVAL  R8 U1        ; R8 := U1
 85 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["ContentHtml"]
 86 [-]: LOADK     R9 K7        ; R9 := "\">"
 87 [-]: GETGLOBAL R10 K13      ; R10 := mMovie
 88 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x5DB0BD4"]
 89 [-]: LOADK     R12 K25      ; R12 := "<RESOURCE_BOOSTER>"
 90 [-]: MOVE      R13 R1       ; R13 := R1
 91 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 92 [-]: LOADK     R11 K12      ; R11 := "</font>"
 93 [-]: MOVE      R12 R5       ; R12 := R5
 94 [-]: CONCAT    R2 R6 R12    ; R2 := R6 .. R7 .. R8 .. R9 .. R10 .. R11 .. R12
 95 [-]: GETTABLE  R6 R3 K26    ; R6 := R3["ModMultiplier"]
 96 [-]: EQ        1 R6 K20     ; if R6 == 1 then PC := 136
 97 [-]: JMP       136          ; PC := 136
 98 [-]: TEST      R1 0         ; if not R1 then PC := 103
 99 [-]: JMP       103          ; PC := 103
100 [-]: MOVE      R6 R2        ; R6 := R2
101 [-]: LOADK     R7 K21       ; R7 := "<br>"
102 [-]: CONCAT    R2 R6 R7     ; R2 := R6 .. R7
103 [-]: MOVE      R1 R1        ; R1 := R1
104 [-]: LOADK     R6 K5        ; R6 := "<font color=\""
105 [-]: GETUPVAL  R7 U1        ; R7 := U1
106 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["FloatingContentHighlightHtml"]
107 [-]: LOADK     R8 K22       ; R8 := "\"> "
108 [-]: GETUPVAL  R9 U2        ; R9 := U2
109 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["0xF81722A2"]
110 [-]: GETTABLE  R10 R3 K26   ; R10 := R3["ModMultiplier"]
111 [-]: LT        1 K20 R10    ; if 1 < R10 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: MOVE      R10 R0       ; R10 := R0
114 [-]: MOVE      R10 R1       ; R10 := R1
115 [-]: LOADK     R11 K10      ; R11 := "+"
116 [-]: LOADK     R12 K11      ; R12 := "-"
117 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
118 [-]: GETTABLE  R10 R3 K26   ; R10 := R3["ModMultiplier"]
119 [-]: SUB       R10 R10 K20  ; R10 := R10 - 1
120 [-]: MUL       R10 R10 K23  ; R10 := R10 * 100
121 [-]: LOADK     R11 K24      ; R11 := "%</font>"
122 [-]: CONCAT    R6 R6 R11    ; R6 := R6 .. R7 .. R8 .. R9 .. R10 .. R11
123 [-]: MOVE      R7 R2        ; R7 := R2
124 [-]: LOADK     R8 K5        ; R8 := "<font color=\""
125 [-]: GETUPVAL  R9 U1        ; R9 := U1
126 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["ContentHtml"]
127 [-]: LOADK     R10 K7       ; R10 := "\">"
128 [-]: GETGLOBAL R11 K13      ; R11 := mMovie
129 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5DB0BD4"]
130 [-]: LOADK     R13 K27      ; R13 := "<MOD_BOOSTER>"
131 [-]: MOVE      R14 R1       ; R14 := R1
132 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
133 [-]: LOADK     R12 K12      ; R12 := "</font>"
134 [-]: MOVE      R13 R6       ; R13 := R6
135 [-]: CONCAT    R2 R7 R13    ; R2 := R7 .. R8 .. R9 .. R10 .. R11 .. R12 .. R13
136 [-]: MOVE      R7 R2        ; R7 := R2
137 [-]: LOADK     R8 K28       ; R8 := "</p>"
138 [-]: CONCAT    R2 R7 R8     ; R2 := R7 .. R8
139 [-]: TEST      R1 1         ; if R1 then PC := 143
140 [-]: JMP       143          ; PC := 143
141 [-]: LOADNIL   R7 R7        ; R7 := nil
142 [-]: RETURN    R7 2         ; return R7
143 [-]: RETURN    R2 2         ; return R2
144 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1333
; #Upvalues:       26
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "VoidTrader"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K4        ; R3 := "Nodes.Node"
 10 [-]: LOADK     R4 K3        ; R4 := "_visible"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "NodeNotification"
 16 [-]: LOADK     R4 K3        ; R4 := "_visible"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 20 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 21 [-]: LOADK     R3 K6        ; R3 := "SubLabel"
 22 [-]: LOADK     R4 K3        ; R4 := "_visible"
 23 [-]: MOVE      R5 R0        ; R5 := R0
 24 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 25 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 27 [-]: LOADK     R3 K7        ; R3 := "NodeTransmission"
 28 [-]: LOADK     R4 K3        ; R4 := "_visible"
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 32 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 33 [-]: LOADK     R3 K8        ; R3 := "InfoTip.NodeTransmission"
 34 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 35 [-]: LOADK     R5 K10       ; R5 := 0
 36 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 37 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 38 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 39 [-]: LOADK     R3 K11       ; R3 := "InfoTip"
 40 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 41 [-]: LOADK     R5 K10       ; R5 := 0
 42 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 43 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 44 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 45 [-]: LOADK     R3 K12       ; R3 := "InfluenceMap"
 46 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 47 [-]: LOADK     R5 K10       ; R5 := 0
 48 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 49 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 50 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 51 [-]: LOADK     R3 K13       ; R3 := "ClickBlocker"
 52 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 53 [-]: LOADK     R5 K10       ; R5 := 0
 54 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 55 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 56 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 57 [-]: LOADK     R3 K13       ; R3 := "ClickBlocker"
 58 [-]: LOADK     R4 K14       ; R4 := "enabled"
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 61 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 62 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 63 [-]: LOADK     R3 K15       ; R3 := "DifficultySelector"
 64 [-]: LOADK     R4 K3        ; R4 := "_visible"
 65 [-]: MOVE      R5 R0        ; R5 := R0
 66 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 67 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 68 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 69 [-]: LOADK     R3 K16       ; R3 := "DifficultySelector.Hover"
 70 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 71 [-]: LOADK     R5 K10       ; R5 := 0
 72 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 73 [-]: GETUPVAL  R1 U0        ; R1 := U0
 74 [-]: GETGLOBAL R2 K18       ; R2 := 0x400E7765
 75 [-]: GETGLOBAL R3 K19       ; R3 := _T
 76 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["InRailJackMode"]
 77 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 78 [-]: TEST      R2 1         ; if R2 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R2 K19       ; R2 := _T
 81 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["InRailJackMode"]
 82 [-]: JMP       85           ; PC := 85
 83 [-]: MOVE      R2 R0        ; R2 := R0
 84 [-]: MOVE      R2 R1        ; R2 := R1
 85 [-]: SETTABLE  R1 K17 R2    ; R1["Active"] := R2
 86 [-]: GETUPVAL  R1 U0        ; R1 := U0
 87 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["Button"]
 88 [-]: EQ        0 R1 K22     ; if R1 ~= nil then PC := 104
 89 [-]: JMP       104          ; PC := 104
 90 [-]: GETGLOBAL R1 K23       ; R1 := 0x329BDC44
 91 [-]: LOADK     R2 K24       ; R2 := "Lotus.Interface.Components.RailjackModeButton"
 92 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 93 [-]: GETUPVAL  R2 U0        ; R2 := U0
 94 [-]: GETTABLE  R3 R1 K25    ; R3 := R1["0x46FF1A3C"]
 95 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 96 [-]: LOADK     R5 K26       ; R5 := "RailjackBtn"
 97 [-]: GETUPVAL  R6 U1        ; R6 := U1
 98 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 99 [-]: SETTABLE  R2 K21 R3    ; R2["Button"] := R3
100 [-]: GETUPVAL  R2 U0        ; R2 := U0
101 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Button"]
102 [-]: GETUPVAL  R3 U2        ; R3 := U2
103 [-]: SETTABLE  R2 K27 R3    ; R2["mOnPressedCallback"] := R3
104 [-]: GETUPVAL  R2 U0        ; R2 := U0
105 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Button"]
106 [-]: SELF      R2 R2 K28    ; R3 := R2; R2 := R2["0xE2A2E3AC"]
107 [-]: GETUPVAL  R4 U0        ; R4 := U0
108 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["Active"]
109 [-]: MOVE      R5 R0        ; R5 := R0
110 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
111 [-]: GETGLOBAL R2 K19       ; R2 := _T
112 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["gActiveMatchMakingMode"]
113 [-]: GETGLOBAL R3 K19       ; R3 := _T
114 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["MATCHMAKING_OFFLINE_GAMEMODE"]
115 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 125
116 [-]: JMP       125          ; PC := 125
117 [-]: GETUPVAL  R2 U0        ; R2 := U0
118 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Active"]
119 [-]: TEST      R2 1         ; if R2 then PC := 125
120 [-]: JMP       125          ; PC := 125
121 [-]: GETGLOBAL R2 K31       ; R2 := _G
122 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["StalkerMode"]
123 [-]: TEST      R2 0         ; if not R2 then PC := 129
124 [-]: JMP       129          ; PC := 129
125 [-]: GETGLOBAL R2 K33       ; R2 := gMatchingService
126 [-]: SELF      R2 R2 K34    ; R3 := R2; R2 := R2["0xA99F3BEF"]
127 [-]: CALL      R2 2 2       ; R2 := R2(R3)
128 [-]: MOVE      R2 R2        ; R2 := R2
129 [-]: GETUPVAL  R3 U0        ; R3 := U0
130 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Button"]
131 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0x625791A8"]
132 [-]: MOVE      R5 R2        ; R5 := R2
133 [-]: CALL      R3 3 1       ; R3(R4,R5)
134 [-]: GETUPVAL  R3 U0        ; R3 := U0
135 [-]: CLOSURE   R4 0         ; R4 := closure(Function #28.1)
136 [-]: GETUPVAL  R0 U0        ; R0 := U0
137 [-]: SETTABLE  R3 K36 R4    ; R3["UpdateButtonVisibility"] := R4
138 [-]: GETUPVAL  R3 U0        ; R3 := U0
139 [-]: GETTABLE  R3 R3 K37    ; R3 := R3["0x42C0C1F"]
140 [-]: CALL      R3 1 1       ; R3()
141 [-]: GETGLOBAL R3 K38       ; R3 := gGameConfig
142 [-]: SELF      R3 R3 K39    ; R4 := R3; R3 := R3["0x89E53943"]
143 [-]: CALL      R3 2 2       ; R3 := R3(R4)
144 [-]: TEST      R3 0         ; if not R3 then PC := 161
145 [-]: JMP       161          ; PC := 161
146 [-]: GETUPVAL  R3 U0        ; R3 := U0
147 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Active"]
148 [-]: TEST      R3 1         ; if R3 then PC := 161
149 [-]: JMP       161          ; PC := 161
150 [-]: GETUPVAL  R3 U3        ; R3 := U3
151 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["0xB11F032"]
152 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
153 [-]: SELF      R4 R4 K41    ; R5 := R4; R4 := R4["0x5DB0BD4"]
154 [-]: LOADK     R6 K42       ; R6 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
155 [-]: MOVE      R7 R0        ; R7 := R0
156 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
157 [-]: CALL      R3 0 1       ; R3(R4,...)
158 [-]: GETUPVAL  R3 U4        ; R3 := U4
159 [-]: CALL      R3 1 1       ; R3()
160 [-]: RETURN    R0 1         ; return 
161 [-]: GETGLOBAL R3 K19       ; R3 := _T
162 [-]: SETTABLE  R3 K43 K44   ; R3["RadialSolarMapOpen"] := "0x1"
163 [-]: GETUPVAL  R3 U5        ; R3 := U5
164 [-]: GETTABLE  R3 R3 K45    ; R3 := R3["0xB4BBB185"]
165 [-]: MOVE      R4 R1        ; R4 := R1
166 [-]: CALL      R3 2 1       ; R3(R4)
167 [-]: GETGLOBAL R3 K19       ; R3 := _T
168 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["WareframeChallenge"]
169 [-]: EQ        0 R3 K22     ; if R3 ~= nil then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: MOVE      R3 R0        ; R3 := R0
172 [-]: MOVE      R3 R1        ; R3 := R1
173 [-]: MOVE      R3 R6        ; R3 := R6
174 [-]: MOVE      R3 R0        ; R3 := R0
175 [-]: MOVE      R3 R7        ; R3 := R7
176 [-]: GETUPVAL  R3 U5        ; R3 := U5
177 [-]: GETTABLE  R3 R3 K47    ; R3 := R3["0xA8C840EC"]
178 [-]: CALL      R3 1 2       ; R3 := R3()
179 [-]: MOVE      R3 R8        ; R3 := R8
180 [-]: GETUPVAL  R3 U9        ; R3 := U9
181 [-]: GETUPVAL  R4 U10       ; R4 := U10
182 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["0xB6EF57A6"]
183 [-]: CALL      R4 1 2       ; R4 := R4()
184 [-]: SETTABLE  R3 K48 R4    ; R3["SplinePoints"] := R4
185 [-]: GETUPVAL  R3 U6        ; R3 := U6
186 [-]: TEST      R3 1         ; if R3 then PC := 215
187 [-]: JMP       215          ; PC := 215
188 [-]: GETGLOBAL R3 K18       ; R3 := 0x400E7765
189 [-]: GETGLOBAL R4 K50       ; R4 := gGameData
190 [-]: CALL      R3 2 2       ; R3 := R3(R4)
191 [-]: TEST      R3 1         ; if R3 then PC := 215
192 [-]: JMP       215          ; PC := 215
193 [-]: GETGLOBAL R3 K50       ; R3 := gGameData
194 [-]: SELF      R3 R3 K51    ; R4 := R3; R3 := R3["0x66024816"]
195 [-]: CALL      R3 2 2       ; R3 := R3(R4)
196 [-]: TEST      R3 1         ; if R3 then PC := 202
197 [-]: JMP       202          ; PC := 202
198 [-]: GETUPVAL  R3 U11       ; R3 := U11
199 [-]: GETGLOBAL R4 K19       ; R4 := _T
200 [-]: GETTABLE  R4 R4 K52    ; R4 := R4["REGION_ID_MOON"]
201 [-]: SETTABLE  R3 R4 K44    ; R3[R4] := "0x1"
202 [-]: GETGLOBAL R3 K50       ; R3 := gGameData
203 [-]: SELF      R3 R3 K53    ; R4 := R3; R3 := R3["0xD172216E"]
204 [-]: CALL      R3 2 2       ; R3 := R3(R4)
205 [-]: TEST      R3 1         ; if R3 then PC := 211
206 [-]: JMP       211          ; PC := 211
207 [-]: GETUPVAL  R3 U11       ; R3 := U11
208 [-]: GETGLOBAL R4 K19       ; R4 := _T
209 [-]: GETTABLE  R4 R4 K54    ; R4 := R4["REGION_ID_FORTRESS"]
210 [-]: SETTABLE  R3 R4 K44    ; R3[R4] := "0x1"
211 [-]: GETUPVAL  R3 U11       ; R3 := U11
212 [-]: GETGLOBAL R4 K19       ; R4 := _T
213 [-]: GETTABLE  R4 R4 K55    ; R4 := R4["REGION_ID_DARK_SECTOR"]
214 [-]: SETTABLE  R3 R4 K44    ; R3[R4] := "0x1"
215 [-]: GETUPVAL  R3 U11       ; R3 := U11
216 [-]: GETGLOBAL R4 K19       ; R4 := _T
217 [-]: GETTABLE  R4 R4 K56    ; R4 := R4["REGION_ID_DEEP_SPACE"]
218 [-]: GETUPVAL  R5 U0        ; R5 := U0
219 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Active"]
220 [-]: MOVE      R5 R5        ; R5 := R5
221 [-]: SETTABLE  R3 R4 R5     ; R3[R4] := R5
222 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
223 [-]: SELF      R3 R3 K57    ; R4 := R3; R3 := R3["0xF017C404"]
224 [-]: LOADK     R5 K10       ; R5 := 0
225 [-]: CALL      R3 3 1       ; R3(R4,R5)
226 [-]: GETGLOBAL R3 K23       ; R3 := 0x329BDC44
227 [-]: LOADK     R4 K58       ; R4 := "Lotus.Interface.Libs.TimerMgr"
228 [-]: CALL      R3 2 2       ; R3 := R3(R4)
229 [-]: GETTABLE  R4 R3 K59    ; R4 := R3["0xC2A7FAC0"]
230 [-]: CALL      R4 1 2       ; R4 := R4()
231 [-]: MOVE      R4 R12       ; R4 := R12
232 [-]: GETUPVAL  R4 U13       ; R4 := U13
233 [-]: EQ        0 R4 K22     ; if R4 ~= nil then PC := 275
234 [-]: JMP       275          ; PC := 275
235 [-]: GETGLOBAL R4 K23       ; R4 := 0x329BDC44
236 [-]: LOADK     R5 K60       ; R5 := "EE.Interface.AnchorMgr"
237 [-]: CALL      R4 2 2       ; R4 := R4(R5)
238 [-]: GETTABLE  R5 R4 K25    ; R5 := R4["0x46FF1A3C"]
239 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
240 [-]: CALL      R5 2 2       ; R5 := R5(R6)
241 [-]: MOVE      R5 R13       ; R5 := R13
242 [-]: GETUPVAL  R5 U13       ; R5 := U13
243 [-]: SELF      R5 R5 K61    ; R6 := R5; R5 := R5["0x99AA2516"]
244 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
245 [-]: LOADK     R8 K62       ; R8 := "RegionInfo"
246 [-]: NEWTABLE  R9 2 0       ; R9 := {}
247 [-]: GETUPVAL  R10 U13      ; R10 := U13
248 [-]: GETTABLE  R10 R10 K63  ; R10 := R10["ANCHOR_H_RIGHT"]
249 [-]: GETUPVAL  R11 U13      ; R11 := U13
250 [-]: GETTABLE  R11 R11 K64  ; R11 := R11["ANCHOR_V_TOP"]
251 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
252 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
253 [-]: GETUPVAL  R5 U13       ; R5 := U13
254 [-]: SELF      R5 R5 K61    ; R6 := R5; R5 := R5["0x99AA2516"]
255 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
256 [-]: LOADK     R8 K65       ; R8 := "RailJackBtn"
257 [-]: NEWTABLE  R9 2 0       ; R9 := {}
258 [-]: GETUPVAL  R10 U13      ; R10 := U13
259 [-]: GETTABLE  R10 R10 K63  ; R10 := R10["ANCHOR_H_RIGHT"]
260 [-]: GETUPVAL  R11 U13      ; R11 := U13
261 [-]: GETTABLE  R11 R11 K64  ; R11 := R11["ANCHOR_V_TOP"]
262 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
263 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
264 [-]: GETUPVAL  R5 U13       ; R5 := U13
265 [-]: SELF      R5 R5 K61    ; R6 := R5; R5 := R5["0x99AA2516"]
266 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
267 [-]: LOADK     R8 K15       ; R8 := "DifficultySelector"
268 [-]: NEWTABLE  R9 2 0       ; R9 := {}
269 [-]: GETUPVAL  R10 U13      ; R10 := U13
270 [-]: GETTABLE  R10 R10 K63  ; R10 := R10["ANCHOR_H_RIGHT"]
271 [-]: GETUPVAL  R11 U13      ; R11 := U13
272 [-]: GETTABLE  R11 R11 K66  ; R11 := R11["ANCHOR_V_CENTRE"]
273 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
274 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
275 [-]: TEST      R0 0         ; if not R0 then PC := 297
276 [-]: JMP       297          ; PC := 297
277 [-]: GETUPVAL  R5 U14       ; R5 := U14
278 [-]: CALL      R5 1 1       ; R5()
279 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
280 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x1C19D966"]
281 [-]: LOADK     R7 K67       ; R7 := "Reticle"
282 [-]: LOADK     R8 K68       ; R8 := "_x"
283 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
284 [-]: SELF      R9 R9 K69    ; R10 := R9; R9 := R9["0xF3E132E0"]
285 [-]: CALL      R9 2 2       ; R9 := R9(R10)
286 [-]: MUL       R9 R9 K70    ; R9 := R9 * 0.5
287 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
288 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
289 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x1C19D966"]
290 [-]: LOADK     R7 K67       ; R7 := "Reticle"
291 [-]: LOADK     R8 K71       ; R8 := "_y"
292 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
293 [-]: SELF      R9 R9 K72    ; R10 := R9; R9 := R9["0x68998E7D"]
294 [-]: CALL      R9 2 2       ; R9 := R9(R10)
295 [-]: MUL       R9 R9 K70    ; R9 := R9 * 0.5
296 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
297 [-]: GETGLOBAL R5 K19       ; R5 := _T
298 [-]: GETUPVAL  R6 U15       ; R6 := U15
299 [-]: SETTABLE  R5 K73 R6    ; R5["RadialSolarMap_OnAggregateResults"] := R6
300 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
301 [-]: SELF      R5 R5 K41    ; R6 := R5; R5 := R5["0x5DB0BD4"]
302 [-]: LOADK     R7 K74       ; R7 := "<LOCKED>"
303 [-]: MOVE      R8 R1        ; R8 := R1
304 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
305 [-]: MOVE      R5 R16       ; R5 := R16
306 [-]: GETGLOBAL R5 K23       ; R5 := 0x329BDC44
307 [-]: LOADK     R6 K75       ; R6 := "Lotus.Interface.Libs.SortieGenerator"
308 [-]: CALL      R5 2 2       ; R5 := R5(R6)
309 [-]: GETUPVAL  R6 U17       ; R6 := U17
310 [-]: GETTABLE  R7 R5 K77    ; R7 := R5["0xF6BFCC97"]
311 [-]: CALL      R7 1 2       ; R7 := R7()
312 [-]: SETTABLE  R6 K76 R7    ; R6["mBossInfo"] := R7
313 [-]: TEST      R0 0         ; if not R0 then PC := 319
314 [-]: JMP       319          ; PC := 319
315 [-]: GETUPVAL  R6 U3        ; R6 := U3
316 [-]: GETTABLE  R6 R6 K78    ; R6 := R6["0x25992394"]
317 [-]: GETGLOBAL R7 K79       ; R7 := openSound
318 [-]: CALL      R6 2 1       ; R6(R7)
319 [-]: GETUPVAL  R6 U18       ; R6 := U18
320 [-]: CALL      R6 1 1       ; R6()
321 [-]: GETUPVAL  R6 U19       ; R6 := U19
322 [-]: CALL      R6 1 1       ; R6()
323 [-]: GETUPVAL  R6 U7        ; R6 := U7
324 [-]: TEST      R6 0         ; if not R6 then PC := 331
325 [-]: JMP       331          ; PC := 331
326 [-]: GETUPVAL  R6 U8        ; R6 := U8
327 [-]: TEST      R6 0         ; if not R6 then PC := 331
328 [-]: JMP       331          ; PC := 331
329 [-]: GETUPVAL  R6 U20       ; R6 := U20
330 [-]: CALL      R6 1 1       ; R6()
331 [-]: MOVE      R6 R1        ; R6 := R1
332 [-]: MOVE      R6 R21       ; R6 := R21
333 [-]: GETGLOBAL R6 K80       ; R6 := gGameRules
334 [-]: SELF      R6 R6 K81    ; R7 := R6; R6 := R6["0x8709CE86"]
335 [-]: CALL      R6 2 2       ; R6 := R6(R7)
336 [-]: GETGLOBAL R7 K18       ; R7 := 0x400E7765
337 [-]: MOVE      R8 R6        ; R8 := R6
338 [-]: CALL      R7 2 2       ; R7 := R7(R8)
339 [-]: TEST      R7 1         ; if R7 then PC := 344
340 [-]: JMP       344          ; PC := 344
341 [-]: SELF      R7 R6 K35    ; R8 := R6; R7 := R6["0x625791A8"]
342 [-]: MOVE      R9 R0        ; R9 := R0
343 [-]: CALL      R7 3 1       ; R7(R8,R9)
344 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
345 [-]: SELF      R7 R7 K82    ; R8 := R7; R7 := R7["0x6B4C9862"]
346 [-]: MOVE      R9 R1        ; R9 := R1
347 [-]: CALL      R7 3 1       ; R7(R8,R9)
348 [-]: GETUPVAL  R7 U22       ; R7 := U22
349 [-]: GETUPVAL  R8 U23       ; R8 := U23
350 [-]: GETTABLE  R8 R8 K83    ; R8 := R8["READ_ONLY"]
351 [-]: CALL      R7 2 1       ; R7(R8)
352 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
353 [-]: SELF      R7 R7 K84    ; R8 := R7; R7 := R7["0x7E1F26D7"]
354 [-]: LOADK     R9 K85       ; R9 := "InfoTip.Bg"
355 [-]: GETGLOBAL R10 K31      ; R10 := _G
356 [-]: GETTABLE  R10 R10 K86  ; R10 := R10["UIMaterial_SmoothEdgeNoDepthTest"]
357 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
358 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
359 [-]: SELF      R7 R7 K84    ; R8 := R7; R7 := R7["0x7E1F26D7"]
360 [-]: LOADK     R9 K87       ; R9 := "InfoTip.Bg2"
361 [-]: GETGLOBAL R10 K31      ; R10 := _G
362 [-]: GETTABLE  R10 R10 K86  ; R10 := R10["UIMaterial_SmoothEdgeNoDepthTest"]
363 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
364 [-]: GETGLOBAL R7 K88       ; R7 := 0x8C64AFA9
365 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
366 [-]: LOADK     R9 K89       ; R9 := "Reticle.swapDepths"
367 [-]: LOADK     R10 K90      ; R10 := 605
368 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
369 [-]: GETGLOBAL R7 K88       ; R7 := 0x8C64AFA9
370 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
371 [-]: LOADK     R9 K91       ; R9 := "InfoTip.swapDepths"
372 [-]: LOADK     R10 K92      ; R10 := 500
373 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
374 [-]: GETGLOBAL R7 K88       ; R7 := 0x8C64AFA9
375 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
376 [-]: LOADK     R9 K93       ; R9 := "NodeTransmission.swapDepths"
377 [-]: LOADK     R10 K94      ; R10 := 480
378 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
379 [-]: GETUPVAL  R7 U24       ; R7 := U24
380 [-]: MOVE      R8 R1        ; R8 := R1
381 [-]: CALL      R7 2 1       ; R7(R8)
382 [-]: GETGLOBAL R7 K19       ; R7 := _T
383 [-]: GETTABLE  R7 R7 K95    ; R7 := R7["MAP_HideExtraUI"]
384 [-]: TEST      R7 1         ; if R7 then PC := 390
385 [-]: JMP       390          ; PC := 390
386 [-]: GETGLOBAL R7 K19       ; R7 := _T
387 [-]: GETTABLE  R7 R7 K96    ; R7 := R7["0x8ED0D55D"]
388 [-]: MOVE      R8 R1        ; R8 := R1
389 [-]: CALL      R7 2 1       ; R7(R8)
390 [-]: GETGLOBAL R7 K97       ; R7 := gFlashMgr
391 [-]: SELF      R7 R7 K98    ; R8 := R7; R7 := R7["0x616DD092"]
392 [-]: GETUPVAL  R9 U3        ; R9 := U3
393 [-]: GETTABLE  R9 R9 K99    ; R9 := R9["0xBCEEAD81"]
394 [-]: CALL      R9 1 0       ; R9,... := R9()
395 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
396 [-]: GETGLOBAL R8 K18       ; R8 := 0x400E7765
397 [-]: MOVE      R9 R7        ; R9 := R7
398 [-]: CALL      R8 2 2       ; R8 := R8(R9)
399 [-]: TEST      R8 1         ; if R8 then PC := 404
400 [-]: JMP       404          ; PC := 404
401 [-]: SELF      R8 R7 K100   ; R9 := R7; R8 := R7["0xD692CA7B"]
402 [-]: MOVE      R10 R1       ; R10 := R1
403 [-]: CALL      R8 3 1       ; R8(R9,R10)
404 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
405 [-]: SELF      R8 R8 K82    ; R9 := R8; R8 := R8["0x6B4C9862"]
406 [-]: MOVE      R10 R1       ; R10 := R1
407 [-]: CALL      R8 3 1       ; R8(R9,R10)
408 [-]: GETGLOBAL R8 K101      ; R8 := gRegion
409 [-]: SELF      R8 R8 K102   ; R9 := R8; R8 := R8["0x3E2F6BF"]
410 [-]: CALL      R8 2 2       ; R8 := R8(R9)
411 [-]: TEST      R0 0         ; if not R0 then PC := 427
412 [-]: JMP       427          ; PC := 427
413 [-]: GETUPVAL  R9 U0        ; R9 := U0
414 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["Active"]
415 [-]: TEST      R9 1         ; if R9 then PC := 427
416 [-]: JMP       427          ; PC := 427
417 [-]: GETGLOBAL R9 K18       ; R9 := 0x400E7765
418 [-]: MOVE      R10 R8       ; R10 := R8
419 [-]: CALL      R9 2 2       ; R9 := R9(R10)
420 [-]: TEST      R9 1         ; if R9 then PC := 427
421 [-]: JMP       427          ; PC := 427
422 [-]: SELF      R9 R8 K103   ; R10 := R8; R9 := R8["0x28609C89"]
423 [-]: GETGLOBAL R11 K104     ; R11 := 0xEC274B1A
424 [-]: LOADK     R12 K105     ; R12 := "InstantKneel"
425 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
426 [-]: CALL      R9 0 1       ; R9(R10,...)
427 [-]: GETUPVAL  R9 U12       ; R9 := U12
428 [-]: SELF      R9 R9 K106   ; R10 := R9; R9 := R9["0x61494587"]
429 [-]: LOADK     R11 K107     ; R11 := 0.30000001192093
430 [-]: CLOSURE   R12 1        ; R12 := closure(Function #28.2)
431 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
432 [-]: GETUPVAL  R9 U12       ; R9 := U12
433 [-]: SELF      R9 R9 K106   ; R10 := R9; R9 := R9["0x61494587"]
434 [-]: LOADK     R11 K108     ; R11 := 0.60000002384186
435 [-]: CLOSURE   R12 2        ; R12 := closure(Function #28.3)
436 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
437 [-]: GETGLOBAL R9 K109      ; R9 := gGameStatsMgr
438 [-]: EQ        1 R9 K22     ; if R9 == nil then PC := 447
439 [-]: JMP       447          ; PC := 447
440 [-]: GETGLOBAL R9 K109      ; R9 := gGameStatsMgr
441 [-]: SELF      R9 R9 K110   ; R10 := R9; R9 := R9["0xCFF953A5"]
442 [-]: GETGLOBAL R11 K104     ; R11 := 0xEC274B1A
443 [-]: LOADK     R12 K111     ; R12 := "IN_SHIP_VIEW_TIME"
444 [-]: CALL      R11 2 2      ; R11 := R11(R12)
445 [-]: LOADK     R12 K112     ; R12 := "STARCHART"
446 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
447 [-]: GETUPVAL  R9 U25       ; R9 := U25
448 [-]: MOVE      R10 R0       ; R10 := R0
449 [-]: CALL      R9 2 1       ; R9(R10)
450 [-]: RETURN    R0 1         ; return 


; Function #28.1:
;
; Name:            
; Defined at line: 1363
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Button"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 78
  4 [-]: JMP       78           ; PC := 78
  5 [-]: GETGLOBAL R0 K1        ; R0 := gPlayerProfileMgr
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  7 [-]: LOADK     R2 K3        ; R2 := 0
  8 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  9 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x654F1092"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x30BDE7F"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0x6200B095"]
 14 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 15 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["LOT_ARCHWING"]
 16 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 17 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["SUIT_SLOT"]
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: SELF      R3 R1 K6     ; R4 := R1; R3 := R1["0x6200B095"]
 20 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 21 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LOT_ARCHWING"]
 22 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 23 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LONG_GUN_SLOT"]
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: SELF      R4 R1 K6     ; R5 := R1; R4 := R1["0x6200B095"]
 26 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 27 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["LOT_ARCHWING"]
 28 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
 29 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["MELEE_SLOT"]
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 32 [-]: GETTABLE  R6 R2 K13    ; R6 := R2["mItemType"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 37 [-]: GETTABLE  R6 R3 K13    ; R6 := R3["mItemType"]
 38 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 39 [-]: TEST      R5 1         ; if R5 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 42 [-]: GETTABLE  R6 R4 K13    ; R6 := R4["mItemType"]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: MOVE      R5 R5        ; R5 := R5
 45 [-]: JMP       48           ; PC := 48
 46 [-]: MOVE      R5 R0        ; R5 := R0
 47 [-]: MOVE      R5 R1        ; R5 := R1
 48 [-]: SELF      R6 R0 K14    ; R7 := R0; R6 := R0["0x95FCF4A0"]
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: GETGLOBAL R7 K15       ; R7 := gMatchingService
 51 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0xA99F3BEF"]
 52 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 53 [-]: GETUPVAL  R8 U0        ; R8 := U0
 54 [-]: GETTABLE  R8 R8 K0     ; R8 := R8["Button"]
 55 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x625791A8"]
 56 [-]: TEST      R7 1         ; if R7 then PC := 75
 57 [-]: JMP       75           ; PC := 75
 58 [-]: GETGLOBAL R10 K18      ; R10 := _G
 59 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["StalkerMode"]
 60 [-]: TEST      R10 1        ; if R10 then PC := 77
 61 [-]: JMP       77           ; PC := 77
 62 [-]: TESTSET   R10 R5 0     ; if not R5 then PC := 77 else R10 := R5
 63 [-]: JMP       77           ; PC := 77
 64 [-]: TESTSET   R10 R6 0     ; if not R6 then PC := 77 else R10 := R6
 65 [-]: JMP       77           ; PC := 77
 66 [-]: GETGLOBAL R10 K20      ; R10 := _T
 67 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["gActiveMatchMakingMode"]
 68 [-]: GETGLOBAL R11 K20      ; R11 := _T
 69 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["MATCHMAKING_OFFLINE_GAMEMODE"]
 70 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 76
 71 [-]: JMP       76           ; PC := 76
 72 [-]: GETUPVAL  R10 U0       ; R10 := U0
 73 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["Active"]
 74 [-]: JMP       77           ; PC := 77
 75 [-]: MOVE      R10 R0       ; R10 := R0
 76 [-]: MOVE      R10 R1       ; R10 := R1
 77 [-]: CALL      R8 3 1       ; R8(R9,R10)
 78 [-]: RETURN    R0 1         ; return 


; Function #28.2:
;
; Name:            
; Defined at line: 1478
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "InitialFade"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #28.3:
;
; Name:            
; Defined at line: 1483
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x458F27A9"]
  9 [-]: LOADK     R2 K5        ; R2 := "InitializeMore"
 10 [-]: LOADK     R3 K6        ; R3 := ""
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1497
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1501
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 10 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 15 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETGLOBAL R0 K5        ; R0 := _G
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["QuestNodeNames"]
 21 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 55
 22 [-]: JMP       55           ; PC := 55
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x9FAED6BC
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gPendingMission"]
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 27 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 28 [-]: GETGLOBAL R1 K9        ; R1 := string
 29 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xDE44F664"]
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["HUB_TAG"]
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETGLOBAL R1 K7        ; R1 := 0x9FAED6BC
 37 [-]: GETGLOBAL R2 K0        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gPendingMission"]
 39 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["baseNodeName"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: LOADK     R2 K13       ; R2 := 1
 42 [-]: GETGLOBAL R3 K5        ; R3 := _G
 43 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["QuestNodeNames"]
 44 [-]: LEN       R3 R3        ; R3 := # R3
 45 [-]: LOADK     R4 K13       ; R4 := 1
 46 [-]: FORPREP   R2 54        ; R2 -= R4; PC := 54
 47 [-]: GETGLOBAL R6 K5        ; R6 := _G
 48 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["QuestNodeNames"]
 49 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 50 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R6 R1        ; R6 := R1
 53 [-]: RETURN    R6 2         ; return R6
 54 [-]: FORLOOP   R2 47        ; R2 += R4; if R2 <= R3 then begin PC := 47; R5 := R2 end
 55 [-]: MOVE      R6 R0        ; R6 := R0
 56 [-]: RETURN    R6 2         ; return R6
 57 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1525
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["RadialSolarMap_OnAggregateResults"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["InfoPopup_Data"] := nil
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: SETTABLE  R1 K4 K2     ; R1["InfoPopup_Grid"] := nil
  7 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Movie"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Movie"]
 15 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xA58BB96C"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["TransitioningOut"]
 19 [-]: TEST      R1 0         ; if not R1 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: CALL      R1 1 2       ; R1 := R1()
 23 [-]: JMP       26           ; PC := 26
 24 [-]: MOVE      R1 R0        ; R1 := R0
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: TEST      R0 1         ; if R0 then PC := 43
 27 [-]: JMP       43           ; PC := 43
 28 [-]: TEST      R1 0         ; if not R1 then PC := 43
 29 [-]: JMP       43           ; PC := 43
 30 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 31 [-]: GETGLOBAL R3 K9        ; R3 := _G
 32 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MapSoundInst"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R2 K9        ; R2 := _G
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MapSoundInst"]
 38 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x2842784A"]
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: CALL      R2 3 1       ; R2(R3,R4)
 41 [-]: GETGLOBAL R2 K9        ; R2 := _G
 42 [-]: SETTABLE  R2 K10 K2    ; R2["MapSoundInst"] := nil
 43 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 44 [-]: GETUPVAL  R3 U3        ; R3 := U3
 45 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["EpisodeStatus"]
 46 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 47 [-]: TEST      R2 1         ; if R2 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETUPVAL  R2 U3        ; R2 := U3
 50 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["EpisodeStatus"]
 51 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xA58BB96C"]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 54 [-]: GETUPVAL  R3 U3        ; R3 := U3
 55 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["ResourceDrone"]
 56 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 57 [-]: TEST      R2 1         ; if R2 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETUPVAL  R2 U3        ; R2 := U3
 60 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["ResourceDrone"]
 61 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xA58BB96C"]
 62 [-]: CALL      R2 2 1       ; R2(R3)
 63 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 64 [-]: GETUPVAL  R3 U3        ; R3 := U3
 65 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["JunctionTasks"]
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: TEST      R2 1         ; if R2 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETUPVAL  R2 U3        ; R2 := U3
 70 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["JunctionTasks"]
 71 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xA58BB96C"]
 72 [-]: CALL      R2 2 1       ; R2(R3)
 73 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 74 [-]: GETUPVAL  R3 U4        ; R3 := U4
 75 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["MovieInst"]
 76 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 77 [-]: TEST      R2 1         ; if R2 then PC := 83
 78 [-]: JMP       83           ; PC := 83
 79 [-]: GETUPVAL  R2 U4        ; R2 := U4
 80 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["MovieInst"]
 81 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xA58BB96C"]
 82 [-]: CALL      R2 2 1       ; R2(R3)
 83 [-]: GETGLOBAL R2 K16       ; R2 := gFlashMgr
 84 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x616DD092"]
 85 [-]: GETUPVAL  R4 U5        ; R4 := U5
 86 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["0xBCEEAD81"]
 87 [-]: CALL      R4 1 0       ; R4,... := R4()
 88 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 89 [-]: GETGLOBAL R3 K5        ; R3 := 0x400E7765
 90 [-]: MOVE      R4 R2        ; R4 := R2
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 1         ; if R3 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: SELF      R3 R2 K19    ; R4 := R2; R3 := R2["0xD692CA7B"]
 95 [-]: MOVE      R5 R0        ; R5 := R0
 96 [-]: CALL      R3 3 1       ; R3(R4,R5)
 97 [-]: GETGLOBAL R3 K0        ; R3 := _T
 98 [-]: SETTABLE  R3 K20 K21   ; R3["RadialSolarMapOpen"] := "0x0"
 99 [-]: GETUPVAL  R3 U6        ; R3 := U6
100 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["0xB4BBB185"]
101 [-]: MOVE      R4 R0        ; R4 := R0
102 [-]: CALL      R3 2 1       ; R3(R4)
103 [-]: GETGLOBAL R3 K23       ; R3 := gGameStatsMgr
104 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 113
105 [-]: JMP       113          ; PC := 113
106 [-]: GETGLOBAL R3 K23       ; R3 := gGameStatsMgr
107 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x47B87262"]
108 [-]: GETGLOBAL R5 K25       ; R5 := 0xEC274B1A
109 [-]: LOADK     R6 K26       ; R6 := "IN_SHIP_VIEW_TIME"
110 [-]: CALL      R5 2 2       ; R5 := R5(R6)
111 [-]: LOADK     R6 K27       ; R6 := "STARCHART"
112 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
113 [-]: GETGLOBAL R3 K28       ; R3 := gPlayerProfileMgr
114 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x21EF7B1A"]
115 [-]: LOADK     R5 K30       ; R5 := 0
116 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
117 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
118 [-]: MOVE      R5 R3        ; R5 := R3
119 [-]: CALL      R4 2 2       ; R4 := R4(R5)
120 [-]: TEST      R4 1         ; if R4 then PC := 129
121 [-]: JMP       129          ; PC := 129
122 [-]: SELF      R4 R3 K31    ; R5 := R3; R4 := R3["0x3EEB612E"]
123 [-]: CALL      R4 2 2       ; R4 := R4(R5)
124 [-]: SELF      R5 R4 K32    ; R6 := R4; R5 := R4["0xF7E57216"]
125 [-]: GETGLOBAL R7 K0        ; R7 := _T
126 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["ResourceDroneVisible"]
127 [-]: MOVE      R7 R7        ; R7 := R7
128 [-]: CALL      R5 3 1       ; R5(R6,R7)
129 [-]: TEST      R0 1         ; if R0 then PC := 144
130 [-]: JMP       144          ; PC := 144
131 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
132 [-]: GETGLOBAL R6 K0        ; R6 := _T
133 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["mTrigger"]
134 [-]: CALL      R5 2 2       ; R5 := R5(R6)
135 [-]: TEST      R5 1         ; if R5 then PC := 144
136 [-]: JMP       144          ; PC := 144
137 [-]: GETGLOBAL R5 K0        ; R5 := _T
138 [-]: GETTABLE  R5 R5 K34    ; R5 := R5["mTrigger"]
139 [-]: SELF      R5 R5 K35    ; R6 := R5; R5 := R5["0x8D5886B7"]
140 [-]: LOADK     R7 K36       ; R7 := "Close"
141 [-]: CALL      R5 3 1       ; R5(R6,R7)
142 [-]: GETGLOBAL R5 K0        ; R5 := _T
143 [-]: SETTABLE  R5 K34 K2    ; R5["mTrigger"] := nil
144 [-]: GETGLOBAL R5 K0        ; R5 := _T
145 [-]: SETTABLE  R5 K37 K21   ; R5["InStarChart"] := "0x0"
146 [-]: GETGLOBAL R5 K0        ; R5 := _T
147 [-]: SETTABLE  R5 K38 K2    ; R5["InRailJackMode"] := nil
148 [-]: GETGLOBAL R5 K0        ; R5 := _T
149 [-]: SETTABLE  R5 K33 K2    ; R5["ResourceDroneVisible"] := nil
150 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1588
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gRegion
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3E2F6BF"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R1 K2        ; R1 := 1
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: LOADK     R1 K3        ; R1 := 2
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1596
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x84DCC428"]
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 14 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: CALL      R0 1 2       ; R0 := R0()
 18 [-]: EQ        0 R0 K3      ; if R0 ~= 1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: MOVE      R0 R1        ; R0 := R1
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: GETUPVAL  R1 U1        ; R1 := U1
 25 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
 26 [-]: MOVE      R1 R1        ; R1 := R1
 27 [-]: SETTABLE  R0 K0 R1     ; R0["Active"] := R1
 28 [-]: GETUPVAL  R0 U1        ; R0 := U1
 29 [-]: SETTABLE  R0 K4 K5     ; R0["Transitioned"] := "0x1"
 30 [-]: GETUPVAL  R0 U4        ; R0 := U4
 31 [-]: MOVE      R1 R1        ; R1 := R1
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: MOVE      R3 R1        ; R3 := R1
 34 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 35 [-]: GETUPVAL  R0 U5        ; R0 := U5
 36 [-]: MOVE      R1 R1        ; R1 := R1
 37 [-]: CALL      R0 2 1       ; R0(R1)
 38 [-]: GETUPVAL  R0 U6        ; R0 := U6
 39 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0xDB33ECB2"]
 40 [-]: GETGLOBAL R1 K7        ; R1 := mMovie
 41 [-]: LOADK     R2 K3        ; R2 := 1
 42 [-]: LOADK     R3 K8        ; R3 := 0.20000000298023
 43 [-]: LOADK     R4 K9        ; R4 := 0
 44 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 45 [-]: GETGLOBAL R0 K10       ; R0 := 0x201191EA
 46 [-]: LOADK     R1 K9        ; R1 := 0
 47 [-]: CALL      R0 2 1       ; R0(R1)
 48 [-]: GETUPVAL  R0 U1        ; R0 := U1
 49 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
 50 [-]: TEST      R0 0         ; if not R0 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETGLOBAL R0 K11       ; R0 := _T
 53 [-]: GETUPVAL  R1 U3        ; R1 := U3
 54 [-]: CALL      R1 1 2       ; R1 := R1()
 55 [-]: SETTABLE  R0 K12 R1    ; R0["InRailJackMode"] := R1
 56 [-]: JMP       59           ; PC := 59
 57 [-]: GETGLOBAL R0 K11       ; R0 := _T
 58 [-]: SETTABLE  R0 K12 K13   ; R0["InRailJackMode"] := nil
 59 [-]: GETUPVAL  R0 U7        ; R0 := U7
 60 [-]: CALL      R0 1 1       ; R0()
 61 [-]: GETGLOBAL R0 K14       ; R0 := 0x52E17A90
 62 [-]: GETGLOBAL R1 K7        ; R1 := mMovie
 63 [-]: LOADK     R2 K15       ; R2 := "_root"
 64 [-]: GETGLOBAL R3 K16       ; R3 := UISys
 65 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["FlashInstance_LINEAR"]
 66 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 67 [-]: LOADK     R5 K18       ; R5 := "_alpha"
 68 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 69 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 70 [-]: LOADK     R6 K19       ; R6 := 100
 71 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 72 [-]: LOADK     R6 K20       ; R6 := 0.30000001192093
 73 [-]: LOADK     R7 K9        ; R7 := 0
 74 [-]: CLOSURE   R8 0         ; R8 := closure(Function #33.1)
 75 [-]: GETUPVAL  R0 U0        ; R0 := U0
 76 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 77 [-]: RETURN    R0 1         ; return 


; Function #33.1:
;
; Name:            
; Defined at line: 1623
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1628
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1632
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETGLOBAL R0 K0        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["SquadOverlay"]
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
  7 [-]: LOADK     R2 K3        ; R2 := "FindAnyRailjackMission"
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["name"]
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["SquadOverlay"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
 15 [-]: LOADK     R2 K3        ; R2 := "FindAnyRailjackMission"
 16 [-]: LOADK     R3 K5        ; R3 := ""
 17 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 18 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1640
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1644
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["WareframeChallenge"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: TEST      R1 0         ; if not R1 then PC := 28
  9 [-]: JMP       28           ; PC := 28
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: TEST      R1 0         ; if not R1 then PC := 28
 12 [-]: JMP       28           ; PC := 28
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: EQ        0 R2 K2      ; if R2 ~= 0 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Labels/HardMode"
 18 [-]: JMP       20           ; PC := 20
 19 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Labels/NormalMode"
 20 [-]: GETGLOBAL R2 K5        ; R2 := table
 21 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xE6450C9D"]
 22 [-]: MOVE      R3 R0        ; R3 := R0
 23 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 24 [-]: SETTABLE  R4 K7 R1     ; R4["Label"] := R1
 25 [-]: GETUPVAL  R5 U3        ; R5 := U3
 26 [-]: SETTABLE  R4 K8 R5     ; R4["CallBack"] := R5
 27 [-]: CALL      R2 3 1       ; R2(R3,R4)
 28 [-]: GETGLOBAL R2 K9        ; R2 := 0x400E7765
 29 [-]: GETUPVAL  R3 U4        ; R3 := U4
 30 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["EpisodeStatus"]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: TEST      R2 1         ; if R2 then PC := 60
 33 [-]: JMP       60           ; PC := 60
 34 [-]: GETUPVAL  R2 U5        ; R2 := U5
 35 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["Active"]
 36 [-]: TEST      R2 1         ; if R2 then PC := 60
 37 [-]: JMP       60           ; PC := 60
 38 [-]: LOADK     R2 K12       ; R2 := "/Lotus/Language/Menu/EpisodeStatus"
 39 [-]: GETGLOBAL R3 K0        ; R3 := _T
 40 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["ResourceDroneVisible"]
 41 [-]: TEST      R3 1         ; if R3 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: LOADK     R2 K14       ; R2 := "/Lotus/Language/Menu/ResourceDrones"
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETUPVAL  R3 U6        ; R3 := U6
 46 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["0x5B8EB241"]
 47 [-]: CALL      R3 1 2       ; R3 := R3()
 48 [-]: TEST      R3 1         ; if R3 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADK     R2 K16       ; R2 := "/Lotus/Language/Menu/NemesisStatus"
 51 [-]: GETGLOBAL R3 K5        ; R3 := table
 52 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0xE6450C9D"]
 53 [-]: MOVE      R4 R0        ; R4 := R0
 54 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 55 [-]: SETTABLE  R5 K7 R2     ; R5["Label"] := R2
 56 [-]: GETUPVAL  R6 U7        ; R6 := U7
 57 [-]: SETTABLE  R5 K8 R6     ; R5["CallBack"] := R6
 58 [-]: SETTABLE  R5 K17 K18   ; R5["CallOut"] := "MENU_LTHUMB"
 59 [-]: CALL      R3 3 1       ; R3(R4,R5)
 60 [-]: GETUPVAL  R3 U8        ; R3 := U8
 61 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["DioOpen"]
 62 [-]: TEST      R3 1         ; if R3 then PC := 132
 63 [-]: JMP       132          ; PC := 132
 64 [-]: GETUPVAL  R3 U9        ; R3 := U9
 65 [-]: TEST      R3 1         ; if R3 then PC := 132
 66 [-]: JMP       132          ; PC := 132
 67 [-]: MOVE      R3 R1        ; R3 := R1
 68 [-]: GETGLOBAL R4 K20       ; R4 := Engine
 69 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["0x9490FE70"]
 70 [-]: CALL      R4 1 2       ; R4 := R4()
 71 [-]: TEST      R4 0         ; if not R4 then PC := 86
 72 [-]: JMP       86           ; PC := 86
 73 [-]: GETGLOBAL R4 K9        ; R4 := 0x400E7765
 74 [-]: GETGLOBAL R5 K0        ; R5 := _T
 75 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["SquadOverlay"]
 76 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 77 [-]: TEST      R4 1         ; if R4 then PC := 86
 78 [-]: JMP       86           ; PC := 86
 79 [-]: GETGLOBAL R4 K0        ; R4 := _T
 80 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["SquadOverlay"]
 81 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0x458F27A9"]
 82 [-]: LOADK     R6 K24       ; R6 := "IsAcceptBtnVisible"
 83 [-]: LOADK     R7 K25       ; R7 := ""
 84 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 85 [-]: MOVE      R3 R4        ; R3 := R4
 86 [-]: TEST      R3 0         ; if not R3 then PC := 104
 87 [-]: JMP       104          ; PC := 104
 88 [-]: GETGLOBAL R4 K5        ; R4 := table
 89 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 90 [-]: MOVE      R5 R0        ; R5 := R0
 91 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 92 [-]: GETUPVAL  R7 U10       ; R7 := U10
 93 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["0xF81722A2"]
 94 [-]: GETGLOBAL R8 K27       ; R8 := _G
 95 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["StalkerMode"]
 96 [-]: LOADK     R9 K29       ; R9 := "LOCATE TENNO"
 97 [-]: LOADK     R10 K30      ; R10 := "/Lotus/Language/Menu/Loadout_Change"
 98 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 99 [-]: SETTABLE  R6 K7 R7     ; R6["Label"] := R7
100 [-]: GETUPVAL  R7 U11       ; R7 := U11
101 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
102 [-]: SETTABLE  R6 K17 K31   ; R6["CallOut"] := "MENU_GENERIC1"
103 [-]: CALL      R4 3 1       ; R4(R5,R6)
104 [-]: GETGLOBAL R4 K20       ; R4 := Engine
105 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["0x9490FE70"]
106 [-]: CALL      R4 1 2       ; R4 := R4()
107 [-]: TEST      R4 0         ; if not R4 then PC := 132
108 [-]: JMP       132          ; PC := 132
109 [-]: GETGLOBAL R4 K9        ; R4 := 0x400E7765
110 [-]: GETGLOBAL R5 K0        ; R5 := _T
111 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["SquadOverlay"]
112 [-]: CALL      R4 2 2       ; R4 := R4(R5)
113 [-]: TEST      R4 1         ; if R4 then PC := 132
114 [-]: JMP       132          ; PC := 132
115 [-]: GETGLOBAL R4 K0        ; R4 := _T
116 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["SquadOverlay"]
117 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0x458F27A9"]
118 [-]: LOADK     R6 K32       ; R6 := "CanInvite"
119 [-]: LOADK     R7 K25       ; R7 := ""
120 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
121 [-]: TEST      R4 0         ; if not R4 then PC := 132
122 [-]: JMP       132          ; PC := 132
123 [-]: GETGLOBAL R4 K5        ; R4 := table
124 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
125 [-]: MOVE      R5 R0        ; R5 := R0
126 [-]: NEWTABLE  R6 0 3       ; R6 := {}
127 [-]: SETTABLE  R6 K7 K33    ; R6["Label"] := "/Lotus/Language/Menu/SocialOverlay_Invite"
128 [-]: GETUPVAL  R7 U12       ; R7 := U12
129 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
130 [-]: SETTABLE  R6 K17 K34   ; R6["CallOut"] := "MENU_RTRIGGER1"
131 [-]: CALL      R4 3 1       ; R4(R5,R6)
132 [-]: LOADK     R4 K25       ; R4 := ""
133 [-]: GETUPVAL  R5 U8        ; R5 := U8
134 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["DioOpen"]
135 [-]: TEST      R5 0         ; if not R5 then PC := 139
136 [-]: JMP       139          ; PC := 139
137 [-]: LOADK     R4 K35       ; R4 := "/Lotus/Language/Menu/Global_Back"
138 [-]: JMP       153          ; PC := 153
139 [-]: GETUPVAL  R5 U10       ; R5 := U10
140 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["0xF81722A2"]
141 [-]: GETUPVAL  R6 U13       ; R6 := U13
142 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["mTargetVal"]
143 [-]: GETUPVAL  R7 U14       ; R7 := U14
144 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["STARTING_ZOOM"]
145 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 148
146 [-]: JMP       148          ; PC := 148
147 [-]: MOVE      R6 R0        ; R6 := R0
148 [-]: MOVE      R6 R1        ; R6 := R1
149 [-]: LOADK     R7 K38       ; R7 := "/Lotus/Language/Menu/Lobby_ZoomOut"
150 [-]: LOADK     R8 K39       ; R8 := "/Lotus/Language/Menu/Exit"
151 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
152 [-]: MOVE      R4 R5        ; R4 := R5
153 [-]: GETGLOBAL R5 K5        ; R5 := table
154 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xE6450C9D"]
155 [-]: MOVE      R6 R0        ; R6 := R0
156 [-]: NEWTABLE  R7 0 3       ; R7 := {}
157 [-]: SETTABLE  R7 K7 R4     ; R7["Label"] := R4
158 [-]: GETUPVAL  R8 U15       ; R8 := U15
159 [-]: SETTABLE  R7 K8 R8     ; R7["CallBack"] := R8
160 [-]: SETTABLE  R7 K17 K40   ; R7["CallOut"] := "MENU_CANCEL"
161 [-]: CALL      R5 3 1       ; R5(R6,R7)
162 [-]: GETUPVAL  R5 U0        ; R5 := U0
163 [-]: TEST      R5 0         ; if not R5 then PC := 165
164 [-]: JMP       165          ; PC := 165
165 [-]: GETGLOBAL R5 K0        ; R5 := _T
166 [-]: GETTABLE  R5 R5 K41    ; R5 := R5["SetButtons"]
167 [-]: TEST      R5 0         ; if not R5 then PC := 177
168 [-]: JMP       177          ; PC := 177
169 [-]: GETGLOBAL R5 K0        ; R5 := _T
170 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["0xEFDFBF7E"]
171 [-]: GETGLOBAL R6 K43       ; R6 := mMovie
172 [-]: MOVE      R7 R0        ; R7 := R0
173 [-]: GETGLOBAL R8 K44       ; R8 := 0x6B695579
174 [-]: LOADK     R9 K45       ; R9 := 1
175 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
176 [-]: CALL      R5 0 1       ; R5(R6,...)
177 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1717
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1721
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETGLOBAL R1 K0        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ResourceDroneVisible"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["ResourceDroneVisible"] := R1
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1726
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: MOVE      R5 R1        ; R5 := R1
  2 [-]: MOVE      R6 R2        ; R6 := R2
  3 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  4 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
  5 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x6B7B470B"]
  6 [-]: MOVE      R8 R5        ; R8 := R5
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
  9 [-]: MOVE      R8 R6        ; R8 := R6
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: TEST      R7 1         ; if R7 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R7 K3        ; R7 := 0x9FAED6BC
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: EQ        0 R7 K4      ; if R7 ~= "undefined" then PC := 37
 17 [-]: JMP       37           ; PC := 37
 18 [-]: TEST      R4 0         ; if not R4 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 21 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: LOADK     R10 K6       ; R10 := ".createEmptyMovieClip"
 24 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 25 [-]: MOVE      R10 R5       ; R10 := R5
 26 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 27 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 30 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 31 [-]: MOVE      R9 R0        ; R9 := R0
 32 [-]: LOADK     R10 K7       ; R10 := ".duplicateMovieClip"
 33 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 34 [-]: MOVE      R10 R5       ; R10 := R5
 35 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 36 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 37 [-]: GETGLOBAL R7 K8        ; R7 := string
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xAF449107"]
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: LOADK     R9 K10       ; R9 := "(.*%.).+$"
 41 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 42 [-]: EQ        0 R7 K11     ; if R7 ~= nil then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: MOVE      R7 R5        ; R7 := R5
 45 [-]: JMP       49           ; PC := 49
 46 [-]: MOVE      R8 R7        ; R8 := R7
 47 [-]: MOVE      R9 R5        ; R9 := R5
 48 [-]: CONCAT    R7 R8 R9     ; R7 := R8 .. R9
 49 [-]: RETURN    R7 2         ; return R7
 50 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1745
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x8C64AFA9
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := ".removeMovieClip"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1749
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: TEST      R0 0         ; if not R0 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionsCompleted"]
 11 [-]: EQ        0 R1 K2      ; if R1 ~= 0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K3        ; R1 := 25
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["LABEL_ALPHA"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1757
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["InRailJackMode"]
  9 [-]: TEST      R1 0         ; if not R1 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R1 K1        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["InRailJackMode"]
 13 [-]: EQ        0 R1 K3      ; if R1 ~= 1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: MOVE      R1 R0        ; R1 := R0
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: GETGLOBAL R1 K4        ; R1 := string
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xDE44F664"]
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: LOADK     R3 K6        ; R3 := "Dojo"
 21 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 22 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R1 R0        ; R1 := R0
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1773
; #Upvalues:       7
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: LOADK     R8 K0        ; R8 := "SubLabel"
  3 [-]: LOADK     R9 K0        ; R9 := "SubLabel"
  4 [-]: GETUPVAL  R10 U1       ; R10 := U1
  5 [-]: LEN       R10 R10      ; R10 := # R10
  6 [-]: ADD       R10 R10 K1   ; R10 := R10 + 1
  7 [-]: LOADK     R11 K2       ; R11 := 200
  8 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
  9 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
 10 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0xA7FE5515"]
 11 [-]: MOVE      R10 R7       ; R10 := R7
 12 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 13 [-]: LOADNIL   R9 R9        ; R9 := nil
 14 [-]: GETUPVAL  R10 U2       ; R10 := U2
 15 [-]: MOVE      R11 R0       ; R11 := R0
 16 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 17 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 18 [-]: SELF      R11 R11 K5   ; R12 := R11; R11 := R11["0x880196A7"]
 19 [-]: MOVE      R13 R7       ; R13 := R7
 20 [-]: LOADK     R14 K6       ; R14 := "JoinBtn"
 21 [-]: LOADK     R15 K7       ; R15 := "_visible"
 22 [-]: MOVE      R16 R10      ; R16 := R10
 23 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 24 [-]: GETUPVAL  R11 U3       ; R11 := U3
 25 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Active"]
 26 [-]: TEST      R11 0        ; if not R11 then PC := 64
 27 [-]: JMP       64           ; PC := 64
 28 [-]: GETGLOBAL R11 K9       ; R11 := 0x93B1256B
 29 [-]: LOADK     R12 K10      ; R12 := "LABEL "
 30 [-]: GETGLOBAL R13 K11      ; R13 := 0x9FAED6BC
 31 [-]: MOVE      R14 R0       ; R14 := R0
 32 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 33 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 34 [-]: CALL      R11 2 1      ; R11(R12)
 35 [-]: MOVE      R11 R0       ; R11 := R0
 36 [-]: LOADK     R12 K12      ; R12 := "_SPACE"
 37 [-]: CONCAT    R0 R11 R12   ; R0 := R11 .. R12
 38 [-]: TEST      R10 0        ; if not R10 then PC := 64
 39 [-]: JMP       64           ; PC := 64
 40 [-]: GETGLOBAL R11 K13      ; R11 := 0x329BDC44
 41 [-]: LOADK     R12 K14      ; R12 := "Lotus.Interface.Components.ThemedButton"
 42 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 43 [-]: GETTABLE  R12 R11 K15  ; R12 := R11["0x46FF1A3C"]
 44 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
 45 [-]: MOVE      R14 R7       ; R14 := R7
 46 [-]: LOADK     R15 K16      ; R15 := ".JoinBtn"
 47 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
 48 [-]: LOADK     R15 K17      ; R15 := "/Lotus/Language/Railjack/SolarMap_JoinAnyCrew"
 49 [-]: LOADK     R16 K18      ; R16 := "FindAnyRailjackMission"
 50 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 51 [-]: MOVE      R9 R12       ; R9 := R12
 52 [-]: GETUPVAL  R12 U4       ; R12 := U4
 53 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["CENTER_ALIGNED"]
 54 [-]: SETTABLE  R9 K19 R12   ; R9["mAnchor"] := R12
 55 [-]: SETTABLE  R9 K21 K22   ; R9["mInactiveAlpha"] := 0
 56 [-]: SELF      R12 R9 K23   ; R13 := R9; R12 := R9["0xA8B400E7"]
 57 [-]: MOVE      R14 R1       ; R14 := R1
 58 [-]: CALL      R12 3 1      ; R12(R13,R14)
 59 [-]: SELF      R12 R9 K24   ; R13 := R9; R12 := R9["0xE2A2E3AC"]
 60 [-]: MOVE      R14 R0       ; R14 := R0
 61 [-]: CALL      R12 3 1      ; R12(R13,R14)
 62 [-]: SELF      R12 R9 K25   ; R13 := R9; R12 := R9["0x6470BAF4"]
 63 [-]: CALL      R12 2 1      ; R12(R13)
 64 [-]: GETGLOBAL R12 K26      ; R12 := string
 65 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["0x639C642A"]
 66 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
 67 [-]: SELF      R13 R13 K28  ; R14 := R13; R13 := R13["0x5DB0BD4"]
 68 [-]: MOVE      R15 R0       ; R15 := R0
 69 [-]: MOVE      R16 R0       ; R16 := R0
 70 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 71 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 72 [-]: GETUPVAL  R13 U5       ; R13 := U5
 73 [-]: GETTABLE  R13 R13 K29  ; R13 := R13["Tag"]
 74 [-]: EQ        0 R0 R13     ; if R0 ~= R13 then PC := 89
 75 [-]: JMP       89           ; PC := 89
 76 [-]: GETGLOBAL R13 K26      ; R13 := string
 77 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["0x633C4246"]
 78 [-]: MOVE      R14 R12      ; R14 := R12
 79 [-]: LOADK     R15 K31      ; R15 := " "
 80 [-]: LOADK     R16 K32      ; R16 := "\r\n\r\n"
 81 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 82 [-]: MOVE      R12 R13      ; R12 := R13
 83 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
 84 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13["0x1C19D966"]
 85 [-]: MOVE      R15 R7       ; R15 := R7
 86 [-]: LOADK     R16 K34      ; R16 := "verticalAlignment"
 87 [-]: LOADK     R17 K35      ; R17 := "bottom"
 88 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 89 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
 90 [-]: SELF      R13 R13 K36  ; R14 := R13; R13 := R13["0xD6A79FE9"]
 91 [-]: MOVE      R15 R7       ; R15 := R7
 92 [-]: LOADK     R16 K37      ; R16 := ".Name"
 93 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 94 [-]: LOADK     R16 K38      ; R16 := "text"
 95 [-]: MOVE      R17 R12      ; R17 := R12
 96 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 97 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
 98 [-]: SELF      R13 R13 K5   ; R14 := R13; R13 := R13["0x880196A7"]
 99 [-]: MOVE      R15 R7       ; R15 := R7
100 [-]: LOADK     R16 K39      ; R16 := "Name"
101 [-]: LOADK     R17 K40      ; R17 := "multiline"
102 [-]: MOVE      R18 R0       ; R18 := R0
103 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
104 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
105 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13["0x1C19D966"]
106 [-]: MOVE      R15 R7       ; R15 := R7
107 [-]: LOADK     R16 K41      ; R16 := "_alpha"
108 [-]: GETUPVAL  R17 U6       ; R17 := U6
109 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["LABEL_ALPHA"]
110 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
111 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
112 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13["0x1C19D966"]
113 [-]: MOVE      R15 R7       ; R15 := R7
114 [-]: LOADK     R16 K7       ; R16 := "_visible"
115 [-]: MOVE      R17 R4       ; R17 := R4
116 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
117 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
118 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13["0x1C19D966"]
119 [-]: MOVE      R15 R7       ; R15 := R7
120 [-]: LOADK     R16 K37      ; R16 := ".Name"
121 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
122 [-]: LOADK     R16 K43      ; R16 := "_color"
123 [-]: LOADK     R17 K44      ; R17 := 16777215
124 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
125 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
126 [-]: SELF      R13 R13 K33  ; R14 := R13; R13 := R13["0x1C19D966"]
127 [-]: MOVE      R15 R7       ; R15 := R7
128 [-]: LOADK     R16 K37      ; R16 := ".Name"
129 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
130 [-]: LOADK     R16 K41      ; R16 := "_alpha"
131 [-]: LOADK     R17 K45      ; R17 := 190
132 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
133 [-]: TEST      R2 0         ; if not R2 then PC := 142
134 [-]: JMP       142          ; PC := 142
135 [-]: GETGLOBAL R13 K3       ; R13 := mMovie
136 [-]: SELF      R13 R13 K5   ; R14 := R13; R13 := R13["0x880196A7"]
137 [-]: MOVE      R15 R7       ; R15 := R7
138 [-]: LOADK     R16 K39      ; R16 := "Name"
139 [-]: LOADK     R17 K46      ; R17 := "textAlign"
140 [-]: LOADK     R18 K47      ; R18 := "left"
141 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
142 [-]: GETTABLE  R13 R1 K48   ; R13 := R1["z"]
143 [-]: SUB       R13 R13 K49  ; R13 := R13 - -2
144 [-]: DIV       R13 K1 R13   ; R13 := 1 / R13
145 [-]: MUL       R13 R13 K50  ; R13 := R13 * 4
146 [-]: GETGLOBAL R14 K51      ; R14 := 0x6374FD98
147 [-]: MOVE      R15 R13      ; R15 := R13
148 [-]: LOADK     R16 K52      ; R16 := 0.75
149 [-]: LOADK     R17 K53      ; R17 := 1.25
150 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
151 [-]: MOVE      R13 R14      ; R13 := R14
152 [-]: MUL       R13 R13 K54  ; R13 := R13 * 80
153 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
154 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
155 [-]: MOVE      R16 R7       ; R16 := R7
156 [-]: LOADK     R17 K55      ; R17 := "_xscale"
157 [-]: MOVE      R18 R13      ; R18 := R13
158 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
159 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
160 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
161 [-]: MOVE      R16 R7       ; R16 := R7
162 [-]: LOADK     R17 K56      ; R17 := "_yscale"
163 [-]: MOVE      R18 R13      ; R18 := R13
164 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
165 [-]: GETGLOBAL R14 K57      ; R14 := table
166 [-]: GETTABLE  R14 R14 K58  ; R14 := R14["0xE6450C9D"]
167 [-]: GETUPVAL  R15 U1       ; R15 := U1
168 [-]: NEWTABLE  R16 0 5      ; R16 := {}
169 [-]: SETTABLE  R16 K59 R8   ; R16["memberIndex"] := R8
170 [-]: SETTABLE  R16 K60 R7   ; R16["clipName"] := R7
171 [-]: SETTABLE  R16 K61 R1   ; R16["pos"] := R1
172 [-]: SETTABLE  R16 K62 R3   ; R16["layer"] := R3
173 [-]: SETTABLE  R16 K63 R9   ; R16["joinBtn"] := R9
174 [-]: CALL      R14 3 1      ; R14(R15,R16)
175 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
176 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
177 [-]: MOVE      R16 R7       ; R16 := R7
178 [-]: LOADK     R17 K64      ; R17 := "enabled"
179 [-]: EQ        0 R5 K65     ; if R5 ~= nil then PC := 182
180 [-]: JMP       182          ; PC := 182
181 [-]: MOVE      R18 R0       ; R18 := R0
182 [-]: MOVE      R18 R1       ; R18 := R1
183 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
184 [-]: EQ        1 R5 K65     ; if R5 == nil then PC := 223
185 [-]: JMP       223          ; PC := 223
186 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
187 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
188 [-]: MOVE      R16 R7       ; R16 := R7
189 [-]: LOADK     R17 K66      ; R17 := "Id"
190 [-]: MOVE      R18 R6       ; R18 := R6
191 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
192 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
193 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
194 [-]: MOVE      R16 R7       ; R16 := R7
195 [-]: LOADK     R17 K67      ; R17 := "RollOverCallback"
196 [-]: GETTABLE  R18 R5 K68   ; R18 := R5["RollOver"]
197 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
198 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
199 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
200 [-]: MOVE      R16 R7       ; R16 := R7
201 [-]: LOADK     R17 K69      ; R17 := "RollOutCallback"
202 [-]: GETTABLE  R18 R5 K70   ; R18 := R5["RollOut"]
203 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
204 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
205 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x1C19D966"]
206 [-]: MOVE      R16 R7       ; R16 := R7
207 [-]: LOADK     R17 K71      ; R17 := "SelectCallback"
208 [-]: GETTABLE  R18 R5 K72   ; R18 := R5["Select"]
209 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
210 [-]: GETGLOBAL R14 K3       ; R14 := mMovie
211 [-]: SELF      R14 R14 K5   ; R15 := R14; R14 := R14["0x880196A7"]
212 [-]: MOVE      R16 R7       ; R16 := R7
213 [-]: LOADK     R17 K73      ; R17 := "Btn"
214 [-]: LOADK     R18 K74      ; R18 := "_width"
215 [-]: GETGLOBAL R19 K3       ; R19 := mMovie
216 [-]: SELF      R19 R19 K75  ; R20 := R19; R19 := R19["0x6B7B470B"]
217 [-]: MOVE      R21 R7       ; R21 := R7
218 [-]: LOADK     R22 K37      ; R22 := ".Name"
219 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
220 [-]: LOADK     R22 K76      ; R22 := "textWidth"
221 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
222 [-]: CALL      R14 0 1      ; R14(R15,...)
223 [-]: RETURN    R7 2         ; return R7
224 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1834
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["locationEnabled"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["edgesLocked"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["radialSector"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
 11 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["name"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K5        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 15 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 16 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R4 K5        ; R4 := _T
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 20 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 21 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mShowInStarChart"]
 22 [-]: JMP       25           ; PC := 25
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: GETGLOBAL R5 K5        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 27 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 28 [-]: EQ        1 R5 K7      ; if R5 == nil then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R5 K5        ; R5 := _T
 31 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 32 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mUnlocked"]
 34 [-]: TEST      R5 1         ; if R5 then PC := 54
 35 [-]: JMP       54           ; PC := 54
 36 [-]: GETGLOBAL R5 K11       ; R5 := _G
 37 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["CachedGoalInfo"]
 38 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 39 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: TESTSET   R5 R4 1      ; if R4 then PC := 54 else R5 := R4
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETGLOBAL R5 K5        ; R5 := _T
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R5 K5        ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 49 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 50 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: MOVE      R5 R1        ; R5 := R1
 54 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["forceUnlock"]
 55 [-]: TEST      R6 1         ; if R6 then PC := 106
 56 [-]: JMP       106          ; PC := 106
 57 [-]: GETTABLE  R6 R2 K15    ; R6 := R2["nodeType"]
 58 [-]: GETGLOBAL R7 K16       ; R7 := Lotus_Game
 59 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["NT_PVP"]
 60 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 105
 61 [-]: JMP       105          ; PC := 105
 62 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETGLOBAL R6 K18       ; R6 := 0x400E7765
 65 [-]: GETTABLE  R7 R2 K19    ; R7 := R2["keyChain"]
 66 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 67 [-]: TEST      R6 0         ; if not R6 then PC := 105
 68 [-]: JMP       105          ; PC := 105
 69 [-]: TEST      R4 1         ; if R4 then PC := 78
 70 [-]: JMP       78           ; PC := 78
 71 [-]: GETTABLE  R6 R2 K20    ; R6 := R2["unlocked"]
 72 [-]: TEST      R6 0         ; if not R6 then PC := 78
 73 [-]: JMP       78           ; PC := 78
 74 [-]: GETTABLE  R6 R2 K21    ; R6 := R2["difficultyUnlocked"]
 75 [-]: GETUPVAL  R7 U0        ; R7 := U0
 76 [-]: LE        1 R7 R6      ; if R7 <= R6 then PC := 105
 77 [-]: JMP       105          ; PC := 105
 78 [-]: TEST      R5 0         ; if not R5 then PC := 88
 79 [-]: JMP       88           ; PC := 88
 80 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
 81 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["unlocked"]
 82 [-]: TEST      R6 0         ; if not R6 then PC := 88
 83 [-]: JMP       88           ; PC := 88
 84 [-]: GETTABLE  R6 R2 K21    ; R6 := R2["difficultyUnlocked"]
 85 [-]: GETUPVAL  R7 U0        ; R7 := U0
 86 [-]: LE        1 R7 R6      ; if R7 <= R6 then PC := 105
 87 [-]: JMP       105          ; PC := 105
 88 [-]: GETTABLE  R6 R2 K22    ; R6 := R2["region"]
 89 [-]: ADD       R6 R6 K23    ; R6 := R6 + 1
 90 [-]: GETGLOBAL R7 K5        ; R7 := _T
 91 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["REGION_ID_DARK_SECTOR"]
 92 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 105
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETGLOBAL R6 K11       ; R6 := _G
 95 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["StalkerMode"]
 96 [-]: TEST      R6 1         ; if R6 then PC := 106
 97 [-]: JMP       106          ; PC := 106
 98 [-]: GETUPVAL  R6 U1        ; R6 := U1
 99 [-]: TEST      R6 0         ; if not R6 then PC := 106
100 [-]: JMP       106          ; PC := 106
101 [-]: GETUPVAL  R6 U0        ; R6 := U0
102 [-]: EQ        1 R6 K26     ; if R6 == 0 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R6 R0        ; R6 := R0
105 [-]: MOVE      R6 R1        ; R6 := R1
106 [-]: GETGLOBAL R7 K27       ; R7 := gGameRules
107 [-]: GETGLOBAL R8 K3        ; R8 := 0x9FAED6BC
108 [-]: GETTABLE  R9 R2 K4     ; R9 := R2["name"]
109 [-]: CALL      R8 2 2       ; R8 := R8(R9)
110 [-]: SELF      R9 R7 K28    ; R10 := R7; R9 := R7["0x8B598ED4"]
111 [-]: GETGLOBAL R11 K29      ; R11 := gLotusHubGameRulesType
112 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
113 [-]: TEST      R9 0         ; if not R9 then PC := 124
114 [-]: JMP       124          ; PC := 124
115 [-]: GETGLOBAL R9 K3        ; R9 := 0x9FAED6BC
116 [-]: GETGLOBAL R10 K27      ; R10 := gGameRules
117 [-]: SELF      R10 R10 K30  ; R11 := R10; R10 := R10["0xB8637349"]
118 [-]: CALL      R10 2 2      ; R10 := R10(R11)
119 [-]: GETTABLE  R10 R10 K31  ; R10 := R10["location"]
120 [-]: CALL      R9 2 2       ; R9 := R9(R10)
121 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 124
122 [-]: JMP       124          ; PC := 124
123 [-]: MOVE      R6 R0        ; R6 := R0
124 [-]: GETUPVAL  R9 U2        ; R9 := U2
125 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["Active"]
126 [-]: TEST      R9 0         ; if not R9 then PC := 142
127 [-]: JMP       142          ; PC := 142
128 [-]: GETTABLE  R9 R2 K33    ; R9 := R2["missionTag"]
129 [-]: GETUPVAL  R10 U3       ; R10 := U3
130 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["SQUAD_LINK_EVENT"]
131 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 142
132 [-]: JMP       142          ; PC := 142
133 [-]: GETGLOBAL R9 K11       ; R9 := _G
134 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["CachedGoalInfo"]
135 [-]: GETTABLE  R9 R9 R3     ; R9 := R9[R3]
136 [-]: TEST      R9 1         ; if R9 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETUPVAL  R9 U4        ; R9 := U4
139 [-]: TEST      R9 0         ; if not R9 then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: MOVE      R6 R1        ; R6 := R1
142 [-]: RETURN    R6 2         ; return R6
143 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1875
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["missionsCompleted"]
  3 [-]: LT        0 K0 R2      ; if 0 >= R2 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["difficultyUnlocked"]
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionsCompleted"]
 10 [-]: LT        1 K0 R1      ; if 0 < R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: MOVE      R2 R1        ; R2 := R1
 14 [-]: TEST      R2 1         ; if R2 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["nodeType"]
 17 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 18 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["NT_PVP"]
 19 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: TEST      R2 1         ; if R2 then PC := 32
 24 [-]: JMP       32           ; PC := 32
 25 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["nodeType"]
 26 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 27 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["NT_HUB"]
 28 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: TEST      R2 1         ; if R2 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["nodeType"]
 35 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 36 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["NT_BONUS_MISSION"]
 37 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: MOVE      R2 R0        ; R2 := R0
 40 [-]: MOVE      R2 R1        ; R2 := R1
 41 [-]: TEST      R2 1         ; if R2 then PC := 48
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETGLOBAL R3 K8        ; R3 := 0x400E7765
 44 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mission"]
 45 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["levelOverride"]
 46 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 47 [-]: MOVE      R2 R3        ; R2 := R3
 48 [-]: TEST      R2 1         ; if R2 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETUPVAL  R3 U1        ; R3 := U1
 51 [-]: TESTSET   R2 R3 1      ; if R3 then PC := 55 else R2 := R3
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R3 K11       ; R3 := _G
 54 [-]: GETTABLE  R2 R3 K12    ; R2 := R3["StalkerMode"]
 55 [-]: TEST      R2 0         ; if not R2 then PC := 71
 56 [-]: JMP       71           ; PC := 71
 57 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["name"]
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CETUS_NODE_TAG"]
 60 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 61 [-]: JMP       71           ; PC := 71
 62 [-]: GETUPVAL  R3 U3        ; R3 := U3
 63 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0xDF213CE1"]
 64 [-]: GETUPVAL  R5 U2        ; R5 := U2
 65 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["PLAINS_NODE_TAG"]
 66 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 67 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["missionsCompleted"]
 68 [-]: EQ        0 R3 K0      ; if R3 ~= 0 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: MOVE      R2 R0        ; R2 := R0
 71 [-]: RETURN    R2 2         ; return R2
 72 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1896
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["locked"]
  5 [-]: TEST      R2 1         ; if R2 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["completed"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["isShortcut"]
 11 [-]: TEST      R2 0         ; if not R2 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: JMP       250          ; PC := 250
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["IsQuest"]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R2 K6        ; R2 := _G
 20 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: JMP       250          ; PC := 250
 23 [-]: EQ        0 R1 K8      ; if R1 ~= "Story" then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R2 K6        ; R2 := _G
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       250          ; PC := 250
 29 [-]: GETGLOBAL R2 K9        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 31 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 32 [-]: TEST      R2 0         ; if not R2 then PC := 59
 33 [-]: JMP       59           ; PC := 59
 34 [-]: GETGLOBAL R2 K9        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 36 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 37 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 59
 39 [-]: JMP       59           ; PC := 59
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xF81722A2"]
 42 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
 43 [-]: GETGLOBAL R4 K9        ; R4 := _T
 44 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["CachedAlerts"]
 45 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 46 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mAlertInfo"]
 47 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: GETGLOBAL R4 K6        ; R4 := _G
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["UITexture_Alert"]
 51 [-]: GETGLOBAL R5 K9        ; R5 := _T
 52 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["CachedAlerts"]
 53 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mAlertInfo"]
 55 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mIcon"]
 56 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
 57 [-]: RETURN    R2 0         ; return R2,...
 58 [-]: JMP       250          ; PC := 250
 59 [-]: GETGLOBAL R2 K6        ; R2 := _G
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["CachedGoalInfo"]
 61 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 70
 63 [-]: JMP       70           ; PC := 70
 64 [-]: GETUPVAL  R2 U1        ; R2 := U1
 65 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0xC192E91A"]
 66 [-]: MOVE      R3 R1        ; R3 := R1
 67 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 68 [-]: RETURN    R2 0         ; return R2,...
 69 [-]: JMP       250          ; PC := 250
 70 [-]: GETGLOBAL R2 K9        ; R2 := _T
 71 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 72 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 73 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 101
 74 [-]: JMP       101          ; PC := 101
 75 [-]: GETGLOBAL R2 K9        ; R2 := _T
 76 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 77 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 78 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["mUnlocked"]
 79 [-]: TEST      R2 0         ; if not R2 then PC := 101
 80 [-]: JMP       101          ; PC := 101
 81 [-]: GETGLOBAL R2 K9        ; R2 := _T
 82 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 83 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 84 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 101
 86 [-]: JMP       101          ; PC := 101
 87 [-]: GETGLOBAL R2 K9        ; R2 := _T
 88 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 89 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 90 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["mMissionInfo"]
 91 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["minEnemyLevel"]
 92 [-]: LE        0 K25 R2     ; if 80 > R2 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R2 K6        ; R2 := _G
 95 [-]: GETTABLE  R2 R2 K26    ; R2 := R2["UITextures_GhostTowerVariant"]
 96 [-]: RETURN    R2 2         ; return R2
 97 [-]: GETGLOBAL R2 K6        ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K27    ; R2 := R2["UITextures_GhostTower"]
 99 [-]: RETURN    R2 2         ; return R2
100 [-]: JMP       250          ; PC := 250
101 [-]: GETGLOBAL R2 K9        ; R2 := _T
102 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["CachedSkullNodes"]
103 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
104 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 110
105 [-]: JMP       110          ; PC := 110
106 [-]: GETGLOBAL R2 K6        ; R2 := _G
107 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["UITexture_Skull"]
108 [-]: RETURN    R2 2         ; return R2
109 [-]: JMP       250          ; PC := 250
110 [-]: GETGLOBAL R2 K9        ; R2 := _T
111 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
112 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
113 [-]: TEST      R2 0         ; if not R2 then PC := 135
114 [-]: JMP       135          ; PC := 135
115 [-]: GETGLOBAL R2 K9        ; R2 := _T
116 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
117 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
118 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
119 [-]: TEST      R2 0         ; if not R2 then PC := 135
120 [-]: JMP       135          ; PC := 135
121 [-]: GETGLOBAL R2 K13       ; R2 := 0x400E7765
122 [-]: GETGLOBAL R3 K9        ; R3 := _T
123 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["CachedSortieMissions"]
124 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
125 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
126 [-]: CALL      R2 2 2       ; R2 := R2(R3)
127 [-]: TEST      R2 1         ; if R2 then PC := 135
128 [-]: JMP       135          ; PC := 135
129 [-]: GETGLOBAL R2 K9        ; R2 := _T
130 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
131 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
132 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mIcon"]
133 [-]: RETURN    R2 2         ; return R2
134 [-]: JMP       250          ; PC := 250
135 [-]: GETGLOBAL R2 K9        ; R2 := _T
136 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
137 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
138 [-]: TEST      R2 0         ; if not R2 then PC := 152
139 [-]: JMP       152          ; PC := 152
140 [-]: GETGLOBAL R2 K9        ; R2 := _T
141 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
142 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
143 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
144 [-]: TEST      R2 0         ; if not R2 then PC := 152
145 [-]: JMP       152          ; PC := 152
146 [-]: GETGLOBAL R2 K9        ; R2 := _T
147 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
148 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
149 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["mMapIcon"]
150 [-]: RETURN    R2 2         ; return R2
151 [-]: JMP       250          ; PC := 250
152 [-]: GETGLOBAL R2 K9        ; R2 := _T
153 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["CachedInvasionInfo"]
154 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
155 [-]: TEST      R2 0         ; if not R2 then PC := 176
156 [-]: JMP       176          ; PC := 176
157 [-]: GETUPVAL  R2 U1        ; R2 := U1
158 [-]: GETTABLE  R2 R2 K34    ; R2 := R2["0x18FE37C1"]
159 [-]: LOADNIL   R3 R3        ; R3 := nil
160 [-]: CALL      R2 2 2       ; R2 := R2(R3)
161 [-]: TEST      R2 0         ; if not R2 then PC := 172
162 [-]: JMP       172          ; PC := 172
163 [-]: GETTABLE  R3 R2 K35    ; R3 := R2["mDefenderMissionInfo"]
164 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
165 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
166 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
167 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: GETGLOBAL R3 K6        ; R3 := _G
170 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
171 [-]: RETURN    R3 2         ; return R3
172 [-]: GETGLOBAL R3 K6        ; R3 := _G
173 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["UITexture_Invasion"]
174 [-]: RETURN    R3 2         ; return R3
175 [-]: JMP       250          ; PC := 250
176 [-]: GETGLOBAL R3 K9        ; R3 := _T
177 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
178 [-]: TEST      R3 0         ; if not R3 then PC := 199
179 [-]: JMP       199          ; PC := 199
180 [-]: GETGLOBAL R3 K9        ; R3 := _T
181 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
182 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
183 [-]: TEST      R3 0         ; if not R3 then PC := 199
184 [-]: JMP       199          ; PC := 199
185 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
186 [-]: GETGLOBAL R4 K9        ; R4 := _T
187 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["CachedActiveMissions"]
188 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
189 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
190 [-]: CALL      R3 2 2       ; R3 := R3(R4)
191 [-]: TEST      R3 1         ; if R3 then PC := 199
192 [-]: JMP       199          ; PC := 199
193 [-]: GETGLOBAL R3 K9        ; R3 := _T
194 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
195 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
196 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
197 [-]: RETURN    R3 2         ; return R3
198 [-]: JMP       250          ; PC := 250
199 [-]: GETGLOBAL R3 K9        ; R3 := _T
200 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
201 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
202 [-]: EQ        1 R3 K20     ; if R3 == nil then PC := 220
203 [-]: JMP       220          ; PC := 220
204 [-]: GETGLOBAL R3 K9        ; R3 := _T
205 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
206 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
207 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["mUnlocked"]
208 [-]: TEST      R3 0         ; if not R3 then PC := 220
209 [-]: JMP       220          ; PC := 220
210 [-]: GETGLOBAL R3 K9        ; R3 := _T
211 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
212 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
213 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mShowInStarChart"]
214 [-]: TEST      R3 0         ; if not R3 then PC := 220
215 [-]: JMP       220          ; PC := 220
216 [-]: GETGLOBAL R3 K6        ; R3 := _G
217 [-]: GETTABLE  R3 R3 K43    ; R3 := R3["UITexture_EliteAlert"]
218 [-]: RETURN    R3 2         ; return R3
219 [-]: JMP       250          ; PC := 250
220 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
221 [-]: GETTABLE  R3 R3 K45    ; R3 := R3["mission"]
222 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
223 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
224 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
225 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: GETGLOBAL R3 K6        ; R3 := _G
228 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
229 [-]: RETURN    R3 2         ; return R3
230 [-]: JMP       250          ; PC := 250
231 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
232 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
233 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
234 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["NT_PVP"]
235 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETGLOBAL R3 K6        ; R3 := _G
238 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["UITexture_Pvp"]
239 [-]: RETURN    R3 2         ; return R3
240 [-]: JMP       250          ; PC := 250
241 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
242 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
243 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
244 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["NT_CLAN"]
245 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 250
246 [-]: JMP       250          ; PC := 250
247 [-]: GETGLOBAL R3 K6        ; R3 := _G
248 [-]: GETTABLE  R3 R3 K50    ; R3 := R3["UITexture_DefaultClan"]
249 [-]: RETURN    R3 2         ; return R3
250 [-]: LOADNIL   R3 R3        ; R3 := nil
251 [-]: RETURN    R3 2         ; return R3
252 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1940
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  52

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
  9 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["instance"]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R5 K4        ; R5 := gBackgroundRegion
 14 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x9B0A3887"]
 15 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["instance"]
 16 [-]: CALL      R5 3 1       ; R5(R6,R7)
 17 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: LOADK     R5 K6        ; R5 := 1
 20 [-]: GETUPVAL  R6 U0        ; R6 := U0
 21 [-]: LEN       R6 R6        ; R6 := # R6
 22 [-]: LOADK     R7 K6        ; R7 := 1
 23 [-]: FORPREP   R5 61        ; R5 -= R7; PC := 61
 24 [-]: GETUPVAL  R9 U0        ; R9 := U0
 25 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 26 [-]: GETGLOBAL R10 K7       ; R10 := 0xCAA43ABB
 27 [-]: GETTABLE  R11 R9 K8    ; R11 := R9["deco"]
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: GETGLOBAL R11 K9       ; R11 := 0x221C9700
 30 [-]: GETTABLE  R12 R9 K10   ; R12 := R9["pos"]
 31 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["x"]
 32 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["pos"]
 33 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["y"]
 34 [-]: GETTABLE  R14 R9 K10   ; R14 := R9["pos"]
 35 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["z"]
 36 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 37 [-]: GETUPVAL  R12 U1       ; R12 := U1
 38 [-]: MOVE      R13 R11      ; R13 := R11
 39 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 40 [-]: MOVE      R11 R12      ; R11 := R12
 41 [-]: SETTABLE  R9 K10 R11   ; R9["pos"] := R11
 42 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 43 [-]: MOVE      R13 R10      ; R13 := R10
 44 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 45 [-]: TEST      R12 1        ; if R12 then PC := 58
 46 [-]: JMP       58           ; PC := 58
 47 [-]: GETGLOBAL R12 K4       ; R12 := gBackgroundRegion
 48 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12["0xBDD34CC6"]
 49 [-]: MOVE      R14 R10      ; R14 := R10
 50 [-]: MOVE      R15 R11      ; R15 := R11
 51 [-]: GETGLOBAL R16 K15      ; R16 := ZERO_ROTATION
 52 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 53 [-]: SETTABLE  R9 K3 R12    ; R9["instance"] := R12
 54 [-]: GETTABLE  R12 R9 K3    ; R12 := R9["instance"]
 55 [-]: SELF      R12 R12 K16  ; R13 := R12; R12 := R12["0x6A7E5F92"]
 56 [-]: GETTABLE  R14 R9 K17   ; R14 := R9["scale"]
 57 [-]: CALL      R12 3 1      ; R12(R13,R14)
 58 [-]: LOADNIL   R12 R12      ; R12 := nil
 59 [-]: GETUPVAL  R13 U2       ; R13 := U2
 60 [-]: SETTABLE  R13 R8 R12   ; R13[R8] := R12
 61 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
 62 [-]: GETGLOBAL R13 K4       ; R13 := gBackgroundRegion
 63 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13["0x90391273"]
 64 [-]: GETUPVAL  R15 U4       ; R15 := U4
 65 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["STAR_CHART_ROOT"]
 66 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 67 [-]: MOVE      R13 R3       ; R13 := R3
 68 [-]: GETUPVAL  R13 U3       ; R13 := U3
 69 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x5097FD8C"]
 70 [-]: GETGLOBAL R15 K21      ; R15 := 0x1E4F6281
 71 [-]: LOADK     R16 K22      ; R16 := 0
 72 [-]: LOADK     R17 K23      ; R17 := 60
 73 [-]: LOADK     R18 K22      ; R18 := 0
 74 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
 75 [-]: CALL      R13 0 1      ; R13(R14,...)
 76 [-]: GETGLOBAL R13 K4       ; R13 := gBackgroundRegion
 77 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13["0x90391273"]
 78 [-]: GETUPVAL  R15 U4       ; R15 := U4
 79 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["PLAYER"]
 80 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 81 [-]: GETGLOBAL R14 K4       ; R14 := gBackgroundRegion
 82 [-]: SELF      R14 R14 K18  ; R15 := R14; R14 := R14["0x90391273"]
 83 [-]: GETUPVAL  R16 U4       ; R16 := U4
 84 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["PLAYER_OPERATOR"]
 85 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 86 [-]: GETGLOBAL R15 K26      ; R15 := gRegion
 87 [-]: SELF      R15 R15 K27  ; R16 := R15; R15 := R15["0x3E2F6BF"]
 88 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 89 [-]: GETGLOBAL R16 K28      ; R16 := 0x2C00D429
 90 [-]: LOADK     R17 K29      ; R17 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
 91 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 92 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
 93 [-]: MOVE      R18 R15      ; R18 := R15
 94 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 95 [-]: TEST      R17 1        ; if R17 then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: SELF      R17 R15 K30  ; R18 := R15; R17 := R15["0x8B598ED4"]
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
100 [-]: JMP       103          ; PC := 103
101 [-]: MOVE      R17 R0       ; R17 := R0
102 [-]: MOVE      R17 R1       ; R17 := R1
103 [-]: TEST      R17 0        ; if not R17 then PC := 125
104 [-]: JMP       125          ; PC := 125
105 [-]: MOVE      R14 R5       ; R14 := R5
106 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
107 [-]: MOVE      R19 R13      ; R19 := R13
108 [-]: CALL      R18 2 2      ; R18 := R18(R19)
109 [-]: TEST      R18 1        ; if R18 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: SELF      R18 R13 K31  ; R19 := R13; R18 := R13["0x7DBDDA0B"]
112 [-]: MOVE      R20 R0       ; R20 := R0
113 [-]: CALL      R18 3 1      ; R18(R19,R20)
114 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
115 [-]: MOVE      R19 R14      ; R19 := R14
116 [-]: CALL      R18 2 2      ; R18 := R18(R19)
117 [-]: TEST      R18 1        ; if R18 then PC := 134
118 [-]: JMP       134          ; PC := 134
119 [-]: GETUPVAL  R18 U6       ; R18 := U6
120 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["0x52F80741"]
121 [-]: MOVE      R19 R14      ; R19 := R14
122 [-]: MOVE      R20 R15      ; R20 := R15
123 [-]: CALL      R18 3 1      ; R18(R19,R20)
124 [-]: JMP       134          ; PC := 134
125 [-]: MOVE      R13 R5       ; R13 := R5
126 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
127 [-]: MOVE      R19 R14      ; R19 := R14
128 [-]: CALL      R18 2 2      ; R18 := R18(R19)
129 [-]: TEST      R18 1        ; if R18 then PC := 134
130 [-]: JMP       134          ; PC := 134
131 [-]: SELF      R18 R14 K31  ; R19 := R14; R18 := R14["0x7DBDDA0B"]
132 [-]: MOVE      R20 R0       ; R20 := R0
133 [-]: CALL      R18 3 1      ; R18(R19,R20)
134 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
135 [-]: MOVE      R19 R15      ; R19 := R15
136 [-]: CALL      R18 2 2      ; R18 := R18(R19)
137 [-]: TEST      R18 1        ; if R18 then PC := 179
138 [-]: JMP       179          ; PC := 179
139 [-]: SELF      R18 R15 K33  ; R19 := R15; R18 := R15["0x8DB5D01F"]
140 [-]: CALL      R18 2 2      ; R18 := R18(R19)
141 [-]: SELF      R18 R18 K34  ; R19 := R18; R18 := R18["0x6978AC59"]
142 [-]: CALL      R18 2 2      ; R18 := R18(R19)
143 [-]: GETGLOBAL R19 K2       ; R19 := 0x400E7765
144 [-]: MOVE      R20 R18      ; R20 := R18
145 [-]: CALL      R19 2 2      ; R19 := R19(R20)
146 [-]: TEST      R19 1        ; if R19 then PC := 179
147 [-]: JMP       179          ; PC := 179
148 [-]: GETGLOBAL R19 K1       ; R19 := 0x63B09107
149 [-]: GETGLOBAL R20 K35      ; R20 := heavyFrames
150 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
151 [-]: JMP       160          ; PC := 160
152 [-]: SELF      R24 R18 K30  ; R25 := R18; R24 := R18["0x8B598ED4"]
153 [-]: MOVE      R26 R23      ; R26 := R23
154 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
155 [-]: TEST      R24 0        ; if not R24 then PC := 160
156 [-]: JMP       160          ; PC := 160
157 [-]: GETGLOBAL R24 K36      ; R24 := kneelHeavyLoopAnim
158 [-]: MOVE      R24 R7       ; R24 := R7
159 [-]: JMP       162          ; PC := 162
160 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 152; R21 := R22 end
161 [-]: JMP       152          ; PC := 152
162 [-]: GETUPVAL  R24 U7       ; R24 := U7
163 [-]: TEST      R24 1        ; if R24 then PC := 179
164 [-]: JMP       179          ; PC := 179
165 [-]: GETGLOBAL R24 K1       ; R24 := 0x63B09107
166 [-]: GETGLOBAL R25 K37      ; R25 := veryHeavyFrames
167 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
168 [-]: JMP       177          ; PC := 177
169 [-]: SELF      R29 R18 K30  ; R30 := R18; R29 := R18["0x8B598ED4"]
170 [-]: MOVE      R31 R28      ; R31 := R28
171 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
172 [-]: TEST      R29 0        ; if not R29 then PC := 177
173 [-]: JMP       177          ; PC := 177
174 [-]: GETGLOBAL R29 K38      ; R29 := kneelVeryHeavyLoopAnim
175 [-]: MOVE      R29 R7       ; R29 := R7
176 [-]: JMP       179          ; PC := 179
177 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 169; R26 := R27 end
178 [-]: JMP       169          ; PC := 169
179 [-]: GETUPVAL  R29 U7       ; R29 := U7
180 [-]: TEST      R29 1        ; if R29 then PC := 184
181 [-]: JMP       184          ; PC := 184
182 [-]: GETGLOBAL R29 K39      ; R29 := kneelLoopAnim
183 [-]: MOVE      R29 R7       ; R29 := R7
184 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
185 [-]: GETUPVAL  R30 U5       ; R30 := U5
186 [-]: CALL      R29 2 2      ; R29 := R29(R30)
187 [-]: TEST      R29 1        ; if R29 then PC := 200
188 [-]: JMP       200          ; PC := 200
189 [-]: GETUPVAL  R29 U5       ; R29 := U5
190 [-]: SELF      R29 R29 K40  ; R30 := R29; R29 := R29["0x7DEB8965"]
191 [-]: MOVE      R31 R1       ; R31 := R1
192 [-]: CALL      R29 3 1      ; R29(R30,R31)
193 [-]: GETUPVAL  R29 U5       ; R29 := U5
194 [-]: SELF      R29 R29 K31  ; R30 := R29; R29 := R29["0x7DBDDA0B"]
195 [-]: GETUPVAL  R31 U8       ; R31 := U8
196 [-]: GETTABLE  R31 R31 K41  ; R31 := R31["Active"]
197 [-]: MOVE      R31 R31      ; R31 := R31
198 [-]: MOVE      R32 R1       ; R32 := R1
199 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
200 [-]: GETGLOBAL R29 K4       ; R29 := gBackgroundRegion
201 [-]: SELF      R29 R29 K18  ; R30 := R29; R29 := R29["0x90391273"]
202 [-]: GETUPVAL  R31 U4       ; R31 := U4
203 [-]: GETTABLE  R31 R31 K42  ; R31 := R31["PLAYER_LIGHT"]
204 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
205 [-]: MOVE      R29 R9       ; R29 := R9
206 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
207 [-]: GETUPVAL  R30 U9       ; R30 := U9
208 [-]: CALL      R29 2 2      ; R29 := R29(R30)
209 [-]: TEST      R29 1        ; if R29 then PC := 215
210 [-]: JMP       215          ; PC := 215
211 [-]: GETUPVAL  R29 U9       ; R29 := U9
212 [-]: SELF      R29 R29 K43  ; R30 := R29; R29 := R29["0xDDA3917C"]
213 [-]: CALL      R29 2 2      ; R29 := R29(R30)
214 [-]: MOVE      R29 R10      ; R29 := R10
215 [-]: GETGLOBAL R29 K2       ; R29 := 0x400E7765
216 [-]: GETUPVAL  R30 U5       ; R30 := U5
217 [-]: CALL      R29 2 2      ; R29 := R29(R30)
218 [-]: TEST      R29 1        ; if R29 then PC := 234
219 [-]: JMP       234          ; PC := 234
220 [-]: GETUPVAL  R29 U5       ; R29 := U5
221 [-]: SELF      R29 R29 K44  ; R30 := R29; R29 := R29["0x6DA72501"]
222 [-]: CALL      R29 2 2      ; R29 := R29(R30)
223 [-]: MOVE      R29 R11      ; R29 := R11
224 [-]: GETUPVAL  R29 U12      ; R29 := U12
225 [-]: GETUPVAL  R30 U5       ; R30 := U5
226 [-]: SELF      R30 R30 K44  ; R31 := R30; R30 := R30["0x6DA72501"]
227 [-]: CALL      R30 2 2      ; R30 := R30(R31)
228 [-]: SETTABLE  R29 K45 R30  ; R29["Previous"] := R30
229 [-]: GETUPVAL  R29 U12      ; R29 := U12
230 [-]: GETUPVAL  R30 U5       ; R30 := U5
231 [-]: SELF      R30 R30 K44  ; R31 := R30; R30 := R30["0x6DA72501"]
232 [-]: CALL      R30 2 2      ; R30 := R30(R31)
233 [-]: SETTABLE  R29 K46 R30  ; R29["Target"] := R30
234 [-]: GETUPVAL  R29 U12      ; R29 := U12
235 [-]: TEST      R29 0        ; if not R29 then PC := 256
236 [-]: JMP       256          ; PC := 256
237 [-]: GETUPVAL  R29 U12      ; R29 := U12
238 [-]: GETTABLE  R29 R29 K45  ; R29 := R29["Previous"]
239 [-]: TEST      R29 0        ; if not R29 then PC := 256
240 [-]: JMP       256          ; PC := 256
241 [-]: GETUPVAL  R29 U9       ; R29 := U9
242 [-]: SELF      R29 R29 K47  ; R30 := R29; R29 := R29["0xFCAE2926"]
243 [-]: LOADK     R31 K48      ; R31 := 2
244 [-]: CALL      R29 3 1      ; R29(R30,R31)
245 [-]: GETUPVAL  R29 U9       ; R29 := U9
246 [-]: SELF      R29 R29 K49  ; R30 := R29; R29 := R29["0xEC183DDC"]
247 [-]: GETUPVAL  R31 U12      ; R31 := U12
248 [-]: GETTABLE  R31 R31 K45  ; R31 := R31["Previous"]
249 [-]: GETGLOBAL R32 K9       ; R32 := 0x221C9700
250 [-]: LOADK     R33 K22      ; R33 := 0
251 [-]: LOADK     R34 K50      ; R34 := 0.5
252 [-]: LOADK     R35 K51      ; R35 := -0.5
253 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
254 [-]: ADD       R31 R31 R32  ; R31 := R31 + R32
255 [-]: CALL      R29 3 1      ; R29(R30,R31)
256 [-]: LOADK     R29 K6       ; R29 := 1
257 [-]: LOADK     R30 K52      ; R30 := 9
258 [-]: LOADK     R31 K6       ; R31 := 1
259 [-]: FORPREP   R29 283      ; R29 -= R31; PC := 283
260 [-]: GETUPVAL  R33 U3       ; R33 := U3
261 [-]: SELF      R33 R33 K53  ; R34 := R33; R33 := R33["0xAB436EF2"]
262 [-]: GETGLOBAL R35 K54      ; R35 := solarRing
263 [-]: GETGLOBAL R36 K55      ; R36 := EMPTY_SYMBOL
264 [-]: GETGLOBAL R37 K56      ; R37 := ZERO_VECTOR
265 [-]: GETUPVAL  R38 U13      ; R38 := U13
266 [-]: GETTABLE  R38 R38 K57  ; R38 := R38["RING_ROTATION"]
267 [-]: CALL      R33 6 2      ; R33 := R33(R34,R35,R36,R37,R38)
268 [-]: GETGLOBAL R34 K2       ; R34 := 0x400E7765
269 [-]: MOVE      R35 R33      ; R35 := R33
270 [-]: CALL      R34 2 2      ; R34 := R34(R35)
271 [-]: TEST      R34 1        ; if R34 then PC := 283
272 [-]: JMP       283          ; PC := 283
273 [-]: GETGLOBAL R34 K58      ; R34 := math
274 [-]: GETTABLE  R34 R34 K59  ; R34 := R34["0xD6F2D811"]
275 [-]: MOVE      R35 R32      ; R35 := R32
276 [-]: LOADK     R36 K60      ; R36 := 1.5
277 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
278 [-]: MUL       R34 R34 K61  ; R34 := R34 * 0.20000000298023
279 [-]: SELF      R35 R33 K62  ; R36 := R33; R35 := R33["0x9F133E77"]
280 [-]: MOVE      R37 R34      ; R37 := R34
281 [-]: MOVE      R38 R34      ; R38 := R34
282 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
283 [-]: FORLOOP   R29 260      ; R29 += R31; if R29 <= R30 then begin PC := 260; R32 := R29 end
284 [-]: LOADK     R35 K63      ; R35 := 8
285 [-]: LOADK     R36 K6       ; R36 := 1
286 [-]: MOVE      R37 R35      ; R37 := R35
287 [-]: LOADK     R38 K6       ; R38 := 1
288 [-]: FORPREP   R36 335      ; R36 -= R38; PC := 335
289 [-]: GETGLOBAL R40 K4       ; R40 := gBackgroundRegion
290 [-]: SELF      R40 R40 K14  ; R41 := R40; R40 := R40["0xBDD34CC6"]
291 [-]: GETGLOBAL R42 K64      ; R42 := edgeLineTypeB
292 [-]: GETGLOBAL R43 K56      ; R43 := ZERO_VECTOR
293 [-]: GETGLOBAL R44 K15      ; R44 := ZERO_ROTATION
294 [-]: CALL      R40 5 2      ; R40 := R40(R41,R42,R43,R44)
295 [-]: DIV       R41 R39 R35  ; R41 := R39 / R35
296 [-]: DIV       R41 R41 K48  ; R41 := R41 / 2
297 [-]: LOADK     R42 K65      ; R42 := 7
298 [-]: GETGLOBAL R43 K58      ; R43 := math
299 [-]: GETTABLE  R43 R43 K66  ; R43 := R43["0x96330A01"]
300 [-]: GETGLOBAL R44 K58      ; R44 := math
301 [-]: GETTABLE  R44 R44 K67  ; R44 := R44["pi"]
302 [-]: MUL       R44 R44 K48  ; R44 := R44 * 2
303 [-]: GETGLOBAL R45 K68      ; R45 := 0xA1FD035F
304 [-]: MOVE      R46 R41      ; R46 := R41
305 [-]: CALL      R45 2 2      ; R45 := R45(R46)
306 [-]: MUL       R44 R44 R45  ; R44 := R44 * R45
307 [-]: CALL      R43 2 2      ; R43 := R43(R44)
308 [-]: MUL       R43 R43 R42  ; R43 := R43 * R42
309 [-]: GETGLOBAL R44 K58      ; R44 := math
310 [-]: GETTABLE  R44 R44 K69  ; R44 := R44["0xBB3F1476"]
311 [-]: GETGLOBAL R45 K58      ; R45 := math
312 [-]: GETTABLE  R45 R45 K67  ; R45 := R45["pi"]
313 [-]: MUL       R45 R45 K48  ; R45 := R45 * 2
314 [-]: GETGLOBAL R46 K68      ; R46 := 0xA1FD035F
315 [-]: MOVE      R47 R41      ; R47 := R41
316 [-]: CALL      R46 2 2      ; R46 := R46(R47)
317 [-]: MUL       R45 R45 R46  ; R45 := R45 * R46
318 [-]: CALL      R44 2 2      ; R44 := R44(R45)
319 [-]: MUL       R44 R44 R42  ; R44 := R44 * R42
320 [-]: NEWTABLE  R45 1 0      ; R45 := {}
321 [-]: GETGLOBAL R46 K9       ; R46 := 0x221C9700
322 [-]: UNM       R47 R43      ; R47 := - R43
323 [-]: UNM       R48 R44      ; R48 := - R44
324 [-]: LOADK     R49 K22      ; R49 := 0
325 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
326 [-]: GETGLOBAL R47 K9       ; R47 := 0x221C9700
327 [-]: MOVE      R48 R43      ; R48 := R43
328 [-]: MOVE      R49 R44      ; R49 := R44
329 [-]: LOADK     R50 K22      ; R50 := 0
330 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
331 [-]: SETLIST   R45 0 1      ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 0
332 [-]: SELF      R46 R40 K70  ; R47 := R40; R46 := R40["0x5BD03F6B"]
333 [-]: MOVE      R48 R45      ; R48 := R45
334 [-]: CALL      R46 3 1      ; R46(R47,R48)
335 [-]: FORLOOP   R36 289      ; R36 += R38; if R36 <= R37 then begin PC := 289; R39 := R36 end
336 [-]: GETUPVAL  R46 U8       ; R46 := U8
337 [-]: GETTABLE  R46 R46 K41  ; R46 := R46["Active"]
338 [-]: TEST      R46 0        ; if not R46 then PC := 354
339 [-]: JMP       354          ; PC := 354
340 [-]: GETGLOBAL R46 K2       ; R46 := 0x400E7765
341 [-]: GETUPVAL  R47 U3       ; R47 := U3
342 [-]: CALL      R46 2 2      ; R46 := R46(R47)
343 [-]: TEST      R46 1        ; if R46 then PC := 354
344 [-]: JMP       354          ; PC := 354
345 [-]: GETUPVAL  R46 U3       ; R46 := U3
346 [-]: SELF      R47 R46 K71  ; R48 := R46; R47 := R46["0x15D4DAEE"]
347 [-]: GETGLOBAL R49 K72      ; R49 := gEntityType
348 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
349 [-]: LOADK     R48 K6       ; R48 := 1
350 [-]: LEN       R49 R47      ; R49 := # R47
351 [-]: LOADK     R50 K6       ; R50 := 1
352 [-]: FORPREP   R48 353      ; R48 -= R50; PC := 353
353 [-]: FORLOOP   R48 353      ; R48 += R50; if R48 <= R49 then begin PC := 353; R51 := R48 end
354 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 2086
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameRules
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 46
  5 [-]: JMP       46           ; PC := 46
  6 [-]: GETGLOBAL R1 K2        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Initialized"]
  9 [-]: EQ        0 R1 K5      ; if R1 ~= "0x0" then PC := 46
 10 [-]: JMP       46           ; PC := 46
 11 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x31B2814"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K2        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 16 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Velocity"]
 17 [-]: DIV       R2 K8 R2     ; R2 := 1 / R2
 18 [-]: GETGLOBAL R3 K2        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FortressLocation"]
 20 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["MaxSplines"]
 21 [-]: MUL       R3 R2 R3     ; R3 := R2 * R3
 22 [-]: MOD       R3 R1 R3     ; R3 := R1 % R3
 23 [-]: GETGLOBAL R4 K10       ; R4 := math
 24 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xF7005A7B"]
 25 [-]: DIV       R5 R3 R2     ; R5 := R3 / R2
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: ADD       R4 K8 R4     ; R4 := 1 + R4
 28 [-]: GETGLOBAL R5 K2        ; R5 := _T
 29 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 30 [-]: GETGLOBAL R6 K13       ; R6 := 0x6374FD98
 31 [-]: MOVE      R7 R4        ; R7 := R4
 32 [-]: LOADK     R8 K8        ; R8 := 1
 33 [-]: GETGLOBAL R9 K2        ; R9 := _T
 34 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["FortressLocation"]
 35 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["MaxSplines"]
 36 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 37 [-]: SETTABLE  R5 K12 R6    ; R5["SplineIndex"] := R6
 38 [-]: GETGLOBAL R5 K2        ; R5 := _T
 39 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 40 [-]: MOD       R6 R3 R2     ; R6 := R3 % R2
 41 [-]: DIV       R6 R6 R2     ; R6 := R6 / R2
 42 [-]: SETTABLE  R5 K14 R6    ; R5["Progress"] := R6
 43 [-]: GETGLOBAL R5 K2        ; R5 := _T
 44 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 45 [-]: SETTABLE  R5 K4 R0     ; R5["Initialized"] := R0
 46 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 2098
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R5 U1        ; R5 := U1
  9 [-]: MOVE      R6 R4        ; R6 := R4
 10 [-]: CALL      R5 2 1       ; R5(R6)
 11 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
 12 [-]: JMP       8            ; PC := 8
 13 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: LOADK     R5 K2        ; R5 := 1
 20 [-]: GETUPVAL  R6 U4        ; R6 := U4
 21 [-]: LEN       R6 R6        ; R6 := # R6
 22 [-]: LOADK     R7 K2        ; R7 := 1
 23 [-]: FORPREP   R5 340       ; R5 -= R7; PC := 340
 24 [-]: GETUPVAL  R9 U4        ; R9 := U4
 25 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 26 [-]: GETGLOBAL R10 K3       ; R10 := 0xCAA43ABB
 27 [-]: GETTABLE  R11 R9 K4    ; R11 := R9["decoRedux"]
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: MOVE      R11 R0       ; R11 := R0
 30 [-]: GETGLOBAL R12 K5       ; R12 := 0x400E7765
 31 [-]: GETUPVAL  R13 U5       ; R13 := U5
 32 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["Region"]
 33 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 34 [-]: TEST      R12 0        ; if not R12 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETTABLE  R12 R9 K7    ; R12 := R9["name"]
 37 [-]: GETUPVAL  R13 U5       ; R13 := U5
 38 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["Tag"]
 39 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETUPVAL  R12 U5       ; R12 := U5
 42 [-]: SETTABLE  R12 K6 R9    ; R12["Region"] := R9
 43 [-]: MOVE      R11 R1       ; R11 := R1
 44 [-]: GETGLOBAL R12 K5       ; R12 := 0x400E7765
 45 [-]: MOVE      R13 R10      ; R13 := R10
 46 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 47 [-]: TEST      R12 0        ; if not R12 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETGLOBAL R12 K3       ; R12 := 0xCAA43ABB
 50 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["deco"]
 51 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 52 [-]: MOVE      R10 R12      ; R10 := R12
 53 [-]: TEST      R11 0        ; if not R11 then PC := 204
 54 [-]: JMP       204          ; PC := 204
 55 [-]: GETUPVAL  R12 U5       ; R12 := U5
 56 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["SplinePoints"]
 57 [-]: LOADNIL   R13 R13      ; R13 := nil
 58 [-]: LOADK     R14 K2       ; R14 := 1
 59 [-]: LEN       R15 R12      ; R15 := # R12
 60 [-]: SUB       R15 R15 K11  ; R15 := R15 - 3
 61 [-]: LOADK     R16 K2       ; R16 := 1
 62 [-]: FORPREP   R14 116      ; R14 -= R16; PC := 116
 63 [-]: GETGLOBAL R18 K5       ; R18 := 0x400E7765
 64 [-]: GETUPVAL  R19 U5       ; R19 := U5
 65 [-]: GETTABLE  R19 R19 K12  ; R19 := R19["Splines"]
 66 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
 67 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 68 [-]: TEST      R18 1        ; if R18 then PC := 76
 69 [-]: JMP       76           ; PC := 76
 70 [-]: GETGLOBAL R18 K13      ; R18 := gBackgroundRegion
 71 [-]: SELF      R18 R18 K14  ; R19 := R18; R18 := R18["0x9B0A3887"]
 72 [-]: GETUPVAL  R20 U5       ; R20 := U5
 73 [-]: GETTABLE  R20 R20 K12  ; R20 := R20["Splines"]
 74 [-]: GETTABLE  R20 R20 R17  ; R20 := R20[R17]
 75 [-]: CALL      R18 3 1      ; R18(R19,R20)
 76 [-]: GETGLOBAL R18 K13      ; R18 := gBackgroundRegion
 77 [-]: SELF      R18 R18 K15  ; R19 := R18; R18 := R18["0xBDD34CC6"]
 78 [-]: GETGLOBAL R20 K16      ; R20 := splineConnectionType
 79 [-]: GETGLOBAL R21 K17      ; R21 := ZERO_VECTOR
 80 [-]: GETGLOBAL R22 K18      ; R22 := ZERO_ROTATION
 81 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
 82 [-]: MOVE      R13 R18      ; R13 := R18
 83 [-]: GETUPVAL  R18 U5       ; R18 := U5
 84 [-]: GETTABLE  R18 R18 K12  ; R18 := R18["Splines"]
 85 [-]: SETTABLE  R18 R17 R13  ; R18[R17] := R13
 86 [-]: NEWTABLE  R18 4 0      ; R18 := {}
 87 [-]: GETTABLE  R19 R12 R17  ; R19 := R12[R17]
 88 [-]: ADD       R20 R17 K2   ; R20 := R17 + 1
 89 [-]: GETTABLE  R20 R12 R20  ; R20 := R12[R20]
 90 [-]: ADD       R21 R17 K19  ; R21 := R17 + 2
 91 [-]: GETTABLE  R21 R12 R21  ; R21 := R12[R21]
 92 [-]: ADD       R22 R17 K11  ; R22 := R17 + 3
 93 [-]: GETTABLE  R22 R12 R22  ; R22 := R12[R22]
 94 [-]: SETLIST   R18 4 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
 95 [-]: SELF      R19 R13 K20  ; R20 := R13; R19 := R13["0x5BD03F6B"]
 96 [-]: MOVE      R21 R18      ; R21 := R18
 97 [-]: CALL      R19 3 1      ; R19(R20,R21)
 98 [-]: SELF      R19 R13 K21  ; R20 := R13; R19 := R13["0xA20F64C0"]
 99 [-]: GETGLOBAL R21 K22      ; R21 := 0xB5A59043
100 [-]: LOADK     R22 K23      ; R22 := 0
101 [-]: LOADK     R23 K24      ; R23 := 255
102 [-]: LOADK     R24 K23      ; R24 := 0
103 [-]: LOADK     R25 K24      ; R25 := 255
104 [-]: CALL      R21 5 0      ; R21,... := R21(R22,R23,R24,R25)
105 [-]: CALL      R19 0 1      ; R19(R20,...)
106 [-]: SELF      R19 R13 K25  ; R20 := R13; R19 := R13["0xD63FF2C2"]
107 [-]: GETGLOBAL R21 K26      ; R21 := 0x994A1A7
108 [-]: LOADK     R22 K23      ; R22 := 0
109 [-]: LOADK     R23 K27      ; R23 := 30
110 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
111 [-]: CALL      R19 0 1      ; R19(R20,...)
112 [-]: SELF      R19 R13 K28  ; R20 := R13; R19 := R13["0x7DBDDA0B"]
113 [-]: MOVE      R21 R0       ; R21 := R0
114 [-]: MOVE      R22 R1       ; R22 := R1
115 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
116 [-]: FORLOOP   R14 63       ; R14 += R16; if R14 <= R15 then begin PC := 63; R17 := R14 end
117 [-]: GETGLOBAL R19 K29      ; R19 := _T
118 [-]: GETTABLE  R19 R19 K30  ; R19 := R19["FortressLocation"]
119 [-]: GETUPVAL  R20 U5       ; R20 := U5
120 [-]: GETTABLE  R20 R20 K12  ; R20 := R20["Splines"]
121 [-]: LEN       R20 R20      ; R20 := # R20
122 [-]: SETTABLE  R19 K31 R20  ; R19["MaxSplines"] := R20
123 [-]: GETUPVAL  R19 U5       ; R19 := U5
124 [-]: GETGLOBAL R20 K29      ; R20 := _T
125 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["FortressLocation"]
126 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["MaxSplines"]
127 [-]: GETUPVAL  R21 U5       ; R21 := U5
128 [-]: GETTABLE  R21 R21 K33  ; R21 := R21["LoopTime"]
129 [-]: DIV       R20 R20 R21  ; R20 := R20 / R21
130 [-]: SETTABLE  R19 K32 R20  ; R19["Velocity"] := R20
131 [-]: GETGLOBAL R19 K29      ; R19 := _T
132 [-]: GETTABLE  R19 R19 K30  ; R19 := R19["FortressLocation"]
133 [-]: GETUPVAL  R20 U5       ; R20 := U5
134 [-]: GETTABLE  R20 R20 K32  ; R20 := R20["Velocity"]
135 [-]: SETTABLE  R19 K32 R20  ; R19["Velocity"] := R20
136 [-]: GETGLOBAL R19 K5       ; R19 := 0x400E7765
137 [-]: GETGLOBAL R20 K34      ; R20 := gGameData
138 [-]: CALL      R19 2 2      ; R19 := R19(R20)
139 [-]: TEST      R19 1        ; if R19 then PC := 144
140 [-]: JMP       144          ; PC := 144
141 [-]: GETUPVAL  R19 U6       ; R19 := U6
142 [-]: MOVE      R20 R1       ; R20 := R1
143 [-]: CALL      R19 2 1      ; R19(R20)
144 [-]: GETUPVAL  R19 U5       ; R19 := U5
145 [-]: GETTABLE  R19 R19 K12  ; R19 := R19["Splines"]
146 [-]: GETGLOBAL R20 K29      ; R20 := _T
147 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["FortressLocation"]
148 [-]: GETTABLE  R20 R20 K35  ; R20 := R20["SplineIndex"]
149 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
150 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19["0xAC71FD5A"]
151 [-]: GETGLOBAL R21 K29      ; R21 := _T
152 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["FortressLocation"]
153 [-]: GETTABLE  R21 R21 K37  ; R21 := R21["Progress"]
154 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
155 [-]: GETUPVAL  R20 U7       ; R20 := U7
156 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20["0x2721E25D"]
157 [-]: GETUPVAL  R22 U5       ; R22 := U5
158 [-]: GETTABLE  R22 R22 K6   ; R22 := R22["Region"]
159 [-]: GETGLOBAL R23 K39      ; R23 := 0x221C9700
160 [-]: GETTABLE  R24 R19 K40  ; R24 := R19["x"]
161 [-]: MUL       R24 R24 K41  ; R24 := R24 * 0.041000001132488
162 [-]: ADD       R24 K42 R24  ; R24 := 0.5 + R24
163 [-]: GETTABLE  R25 R19 K43  ; R25 := R19["y"]
164 [-]: ADD       R25 R25 K44  ; R25 := R25 + 0.029999999329448
165 [-]: MUL       R25 R25 K45  ; R25 := R25 * 0.043000001460314
166 [-]: SUB       R25 K42 R25  ; R25 := 0.5 - R25
167 [-]: GETUPVAL  R26 U8       ; R26 := U8
168 [-]: GETTABLE  R26 R26 K46  ; R26 := R26["MAX_ZOOM"]
169 [-]: SUB       R26 R26 K47  ; R26 := R26 - 0.30000001192093
170 [-]: GETTABLE  R27 R19 K48  ; R27 := R19["z"]
171 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
172 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
173 [-]: CALL      R20 0 1      ; R20(R21,...)
174 [-]: SETTABLE  R9 K49 R19   ; R9["pos"] := R19
175 [-]: GETUPVAL  R20 U5       ; R20 := U5
176 [-]: GETTABLE  R20 R20 K6   ; R20 := R20["Region"]
177 [-]: GETTABLE  R20 R20 K50  ; R20 := R20["sectors"]
178 [-]: LOADK     R21 K2       ; R21 := 1
179 [-]: LEN       R22 R20      ; R22 := # R20
180 [-]: LOADK     R23 K2       ; R23 := 1
181 [-]: FORPREP   R21 203      ; R21 -= R23; PC := 203
182 [-]: GETTABLE  R25 R20 R24  ; R25 := R20[R24]
183 [-]: GETTABLE  R26 R25 K51  ; R26 := R25["decoOffset"]
184 [-]: ADD       R26 R19 R26  ; R26 := R19 + R26
185 [-]: SETTABLE  R25 K49 R26  ; R25["pos"] := R26
186 [-]: GETGLOBAL R26 K52      ; R26 := 0x9FAED6BC
187 [-]: GETTABLE  R27 R25 K7   ; R27 := R25["name"]
188 [-]: CALL      R26 2 2      ; R26 := R26(R27)
189 [-]: GETUPVAL  R27 U5       ; R27 := U5
190 [-]: GETTABLE  R27 R27 K53  ; R27 := R27["Sectors"]
191 [-]: GETTABLE  R27 R27 R26  ; R27 := R27[R26]
192 [-]: EQ        1 R27 K0     ; if R27 == nil then PC := 200
193 [-]: JMP       200          ; PC := 200
194 [-]: GETGLOBAL R27 K54      ; R27 := 0x93B1256B
195 [-]: LOADK     R28 K55      ; R28 := "Ignoring duplicate fortress sector"
196 [-]: GETTABLE  R29 R25 K7   ; R29 := R25["name"]
197 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
198 [-]: CALL      R27 2 1      ; R27(R28)
199 [-]: JMP       203          ; PC := 203
200 [-]: GETUPVAL  R27 U5       ; R27 := U5
201 [-]: GETTABLE  R27 R27 K53  ; R27 := R27["Sectors"]
202 [-]: SETTABLE  R27 R26 R25  ; R27[R26] := R25
203 [-]: FORLOOP   R21 182      ; R21 += R23; if R21 <= R22 then begin PC := 182; R24 := R21 end
204 [-]: GETGLOBAL R27 K39      ; R27 := 0x221C9700
205 [-]: GETTABLE  R28 R9 K49   ; R28 := R9["pos"]
206 [-]: GETTABLE  R28 R28 K40  ; R28 := R28["x"]
207 [-]: GETTABLE  R29 R9 K49   ; R29 := R9["pos"]
208 [-]: GETTABLE  R29 R29 K43  ; R29 := R29["y"]
209 [-]: GETTABLE  R30 R9 K49   ; R30 := R9["pos"]
210 [-]: GETTABLE  R30 R30 K48  ; R30 := R30["z"]
211 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
212 [-]: GETUPVAL  R28 U9       ; R28 := U9
213 [-]: MOVE      R29 R27      ; R29 := R27
214 [-]: CALL      R28 2 2      ; R28 := R28(R29)
215 [-]: MOVE      R27 R28      ; R27 := R28
216 [-]: SETTABLE  R9 K49 R27   ; R9["pos"] := R27
217 [-]: GETGLOBAL R28 K13      ; R28 := gBackgroundRegion
218 [-]: SELF      R28 R28 K15  ; R29 := R28; R28 := R28["0xBDD34CC6"]
219 [-]: MOVE      R30 R10      ; R30 := R10
220 [-]: MOVE      R31 R27      ; R31 := R27
221 [-]: GETGLOBAL R32 K56      ; R32 := 0x1E4F6281
222 [-]: LOADK     R33 K23      ; R33 := 0
223 [-]: LOADK     R34 K57      ; R34 := -15
224 [-]: LOADK     R35 K23      ; R35 := 0
225 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
226 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
227 [-]: SETTABLE  R9 K58 R28   ; R9["instance"] := R28
228 [-]: GETGLOBAL R29 K5       ; R29 := 0x400E7765
229 [-]: GETUPVAL  R30 U2       ; R30 := U2
230 [-]: GETTABLE  R30 R30 R8   ; R30 := R30[R8]
231 [-]: CALL      R29 2 2      ; R29 := R29(R30)
232 [-]: TEST      R29 1        ; if R29 then PC := 239
233 [-]: JMP       239          ; PC := 239
234 [-]: GETGLOBAL R29 K13      ; R29 := gBackgroundRegion
235 [-]: SELF      R29 R29 K14  ; R30 := R29; R29 := R29["0x9B0A3887"]
236 [-]: GETUPVAL  R31 U2       ; R31 := U2
237 [-]: GETTABLE  R31 R31 R8   ; R31 := R31[R8]
238 [-]: CALL      R29 3 1      ; R29(R30,R31)
239 [-]: GETUPVAL  R29 U2       ; R29 := U2
240 [-]: SETTABLE  R29 R8 R28   ; R29[R8] := R28
241 [-]: SELF      R29 R28 K59  ; R30 := R28; R29 := R28["0x6A7E5F92"]
242 [-]: GETTABLE  R31 R9 K60   ; R31 := R9["scale"]
243 [-]: CALL      R29 3 1      ; R29(R30,R31)
244 [-]: GETUPVAL  R29 U10      ; R29 := U10
245 [-]: GETTABLE  R29 R29 R8   ; R29 := R29[R8]
246 [-]: EQ        1 R29 K61    ; if R29 == "0x1" then PC := 258
247 [-]: JMP       258          ; PC := 258
248 [-]: GETUPVAL  R29 U11      ; R29 := U11
249 [-]: GETTABLE  R29 R29 K62  ; R29 := R29["Active"]
250 [-]: TEST      R29 0        ; if not R29 then PC := 259
251 [-]: JMP       259          ; PC := 259
252 [-]: GETUPVAL  R29 U11      ; R29 := U11
253 [-]: GETTABLE  R29 R29 K63  ; R29 := R29["Regions"]
254 [-]: GETTABLE  R29 R29 R8   ; R29 := R29[R8]
255 [-]: MOVE      R29 R29      ; R29 := R29
256 [-]: JMP       259          ; PC := 259
257 [-]: MOVE      R29 R0       ; R29 := R0
258 [-]: MOVE      R29 R1       ; R29 := R1
259 [-]: TEST      R29 0        ; if not R29 then PC := 278
260 [-]: JMP       278          ; PC := 278
261 [-]: SELF      R30 R28 K28  ; R31 := R28; R30 := R28["0x7DBDDA0B"]
262 [-]: MOVE      R32 R0       ; R32 := R0
263 [-]: MOVE      R33 R1       ; R33 := R1
264 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
265 [-]: SELF      R30 R28 K64  ; R31 := R28; R30 := R28["0x15D4DAEE"]
266 [-]: GETGLOBAL R32 K65      ; R32 := gEntityType
267 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
268 [-]: LOADK     R31 K2       ; R31 := 1
269 [-]: LEN       R32 R30      ; R32 := # R30
270 [-]: LOADK     R33 K2       ; R33 := 1
271 [-]: FORPREP   R31 277      ; R31 -= R33; PC := 277
272 [-]: GETTABLE  R35 R30 R34  ; R35 := R30[R34]
273 [-]: SELF      R35 R35 K28  ; R36 := R35; R35 := R35["0x7DBDDA0B"]
274 [-]: MOVE      R37 R0       ; R37 := R0
275 [-]: MOVE      R38 R1       ; R38 := R1
276 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
277 [-]: FORLOOP   R31 272      ; R31 += R33; if R31 <= R32 then begin PC := 272; R34 := R31 end
278 [-]: GETUPVAL  R35 U11      ; R35 := U11
279 [-]: GETTABLE  R35 R35 K63  ; R35 := R35["Regions"]
280 [-]: GETTABLE  R35 R35 R8   ; R35 := R35[R8]
281 [-]: TEST      R35 0        ; if not R35 then PC := 296
282 [-]: JMP       296          ; PC := 296
283 [-]: SELF      R35 R28 K64  ; R36 := R28; R35 := R28["0x15D4DAEE"]
284 [-]: GETGLOBAL R37 K66      ; R37 := gLightType
285 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
286 [-]: LOADK     R36 K2       ; R36 := 1
287 [-]: LEN       R37 R35      ; R37 := # R35
288 [-]: LOADK     R38 K2       ; R38 := 1
289 [-]: FORPREP   R36 295      ; R36 -= R38; PC := 295
290 [-]: GETTABLE  R40 R35 R39  ; R40 := R35[R39]
291 [-]: SELF      R40 R40 K28  ; R41 := R40; R40 := R40["0x7DBDDA0B"]
292 [-]: MOVE      R42 R0       ; R42 := R0
293 [-]: MOVE      R43 R1       ; R43 := R1
294 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
295 [-]: FORLOOP   R36 290      ; R36 += R38; if R36 <= R37 then begin PC := 290; R39 := R36 end
296 [-]: GETGLOBAL R40 K39      ; R40 := 0x221C9700
297 [-]: LOADK     R41 K23      ; R41 := 0
298 [-]: GETTABLE  R42 R9 K60   ; R42 := R9["scale"]
299 [-]: MUL       R42 R42 K67  ; R42 := R42 * 1.0499999523163
300 [-]: GETUPVAL  R43 U12      ; R43 := U12
301 [-]: GETTABLE  R43 R43 K68  ; R43 := R43["PLANET_UNIT_MULTIPLIER"]
302 [-]: MUL       R42 R42 R43  ; R42 := R42 * R43
303 [-]: LOADK     R43 K69      ; R43 := 9.9999997473788e-05
304 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
305 [-]: ADD       R40 R27 R40  ; R40 := R27 + R40
306 [-]: GETUPVAL  R41 U13      ; R41 := U13
307 [-]: GETTABLE  R41 R41 K70  ; R41 := R41["0xF81722A2"]
308 [-]: GETUPVAL  R42 U11      ; R42 := U11
309 [-]: GETTABLE  R42 R42 K62  ; R42 := R42["Active"]
310 [-]: TEST      R42 0        ; if not R42 then PC := 317
311 [-]: JMP       317          ; PC := 317
312 [-]: GETUPVAL  R42 U11      ; R42 := U11
313 [-]: GETTABLE  R42 R42 K63  ; R42 := R42["Regions"]
314 [-]: GETTABLE  R42 R42 R8   ; R42 := R42[R8]
315 [-]: JMP       318          ; PC := 318
316 [-]: MOVE      R42 R0       ; R42 := R0
317 [-]: MOVE      R42 R1       ; R42 := R1
318 [-]: GETTABLE  R43 R9 K7    ; R43 := R9["name"]
319 [-]: LOADK     R44 K71      ; R44 := ""
320 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
321 [-]: GETUPVAL  R42 U0       ; R42 := U0
322 [-]: GETUPVAL  R43 U14      ; R43 := U14
323 [-]: MOVE      R44 R41      ; R44 := R41
324 [-]: MOVE      R45 R40      ; R45 := R40
325 [-]: MOVE      R46 R0       ; R46 := R0
326 [-]: LOADK     R47 K19      ; R47 := 2
327 [-]: MOVE      R48 R29      ; R48 := R29
328 [-]: NEWTABLE  R49 0 2      ; R49 := {}
329 [-]: SETTABLE  R49 K72 K73  ; R49["RollOver"] := "RollOverRegionLabel"
330 [-]: SETTABLE  R49 K74 K75  ; R49["RollOut"] := "RollOutRegionLabel"
331 [-]: MOVE      R50 R8       ; R50 := R8
332 [-]: CALL      R43 8 2      ; R43 := R43(R44,R45,R46,R47,R48,R49,R50)
333 [-]: SETTABLE  R42 R8 R43   ; R42[R8] := R43
334 [-]: TEST      R11 0        ; if not R11 then PC := 340
335 [-]: JMP       340          ; PC := 340
336 [-]: GETUPVAL  R42 U5       ; R42 := U5
337 [-]: GETUPVAL  R43 U3       ; R43 := U3
338 [-]: LEN       R43 R43      ; R43 := # R43
339 [-]: SETTABLE  R42 K76 R43  ; R42["SubLabelIndex"] := R43
340 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
341 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 2211
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SETTABLE  R1 K0 R2     ; R1["RegionLabel"] := R2
  6 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 2215
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["RegionLabel"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 2219
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: LOADNIL   R0 R0        ; R0 := nil
  8 [-]: LOADK     R1 K0        ; R1 := 1
  9 [-]: GETUPVAL  R2 U3        ; R2 := U3
 10 [-]: LEN       R2 R2        ; R2 := # R2
 11 [-]: LOADK     R3 K0        ; R3 := 1
 12 [-]: FORPREP   R1 26        ; R1 -= R3; PC := 26
 13 [-]: GETUPVAL  R5 U3        ; R5 := U3
 14 [-]: GETTABLE  R0 R5 R4     ; R0 := R5[R4]
 15 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 16 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["instance"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: TEST      R5 1         ; if R5 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R5 U2        ; R5 := U2
 21 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["scale"]
 22 [-]: GETUPVAL  R7 U4        ; R7 := U4
 23 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["PLANET_UNIT_MULTIPLIER"]
 24 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 25 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 26 [-]: FORLOOP   R1 13        ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
 27 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2233
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  2 [-]: LOADK     R2 K1        ; R2 := 1
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LEN       R3 R3        ; R3 := # R3
  5 [-]: LOADK     R4 K1        ; R4 := 1
  6 [-]: FORPREP   R2 37        ; R2 -= R4; PC := 37
  7 [-]: LOADK     R6 K1        ; R6 := 1
  8 [-]: GETUPVAL  R7 U0        ; R7 := U0
  9 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 10 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["regionLinks"]
 11 [-]: LEN       R7 R7        ; R7 := # R7
 12 [-]: LOADK     R8 K1        ; R8 := 1
 13 [-]: FORPREP   R6 36        ; R6 -= R8; PC := 36
 14 [-]: GETUPVAL  R10 U0       ; R10 := U0
 15 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 16 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["regionLinks"]
 17 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 18 [-]: EQ        0 R10 R1     ; if R10 ~= R1 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: LOADK     R10 K1       ; R10 := 1
 21 [-]: GETUPVAL  R11 U1       ; R11 := U1
 22 [-]: LEN       R11 R11      ; R11 := # R11
 23 [-]: LOADK     R12 K1       ; R12 := 1
 24 [-]: FORPREP   R10 35       ; R10 -= R12; PC := 35
 25 [-]: GETUPVAL  R14 U0       ; R14 := U0
 26 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
 27 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["instance"]
 28 [-]: GETUPVAL  R15 U1       ; R15 := U1
 29 [-]: GETTABLE  R15 R15 R13  ; R15 := R15[R13]
 30 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETUPVAL  R14 U1       ; R14 := U1
 33 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
 34 [-]: RETURN    R14 2        ; return R14
 35 [-]: FORLOOP   R10 25       ; R10 += R12; if R10 <= R11 then begin PC := 25; R13 := R10 end
 36 [-]: FORLOOP   R6 14        ; R6 += R8; if R6 <= R7 then begin PC := 14; R9 := R6 end
 37 [-]: FORLOOP   R2 7         ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
 38 [-]: LOADNIL   R14 R14      ; R14 := nil
 39 [-]: RETURN    R14 2        ; return R14
 40 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2250
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x994A1A7
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MIN_ZOOM"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MAX_ZOOM"]
  6 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x6374FD98
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCurVal"]
 10 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["minValue"]
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["maxValue"]
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0x3B43F25"]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: MOVE      R1 R2        ; R1 := R2
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETGLOBAL R3 K9        ; R3 := 0x93034B55
 19 [-]: LOADK     R4 K10       ; R4 := 1
 20 [-]: LOADK     R5 K11       ; R5 := 0.10000000149012
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 23 [-]: SETTABLE  R2 K8 R3     ; R2["mDragMultiplier"] := R3
 24 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2257
; #Upvalues:       21
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R5 K4        ; R5 := _G
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["StalkerMode"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 34
 14 [-]: JMP       34           ; PC := 34
 15 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x654F1092"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R5        ; R7 := R5
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5["0x722B1CB7"]
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x5EC7A3D2"]
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: MOVE      R2 R6        ; R2 := R6
 27 [-]: SELF      R6 R5 K9     ; R7 := R5; R6 := R5["0x30BDE7F"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: GETGLOBAL R7 K10       ; R7 := 0xCAA43ABB
 30 [-]: GETTABLE  R8 R6 K11    ; R8 := R6["mShip"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: MOVE      R3 R7        ; R3 := R7
 33 [-]: GETTABLE  R4 R6 K12    ; R4 := R6["mShipExterior"]
 34 [-]: LOADK     R7 K13       ; R7 := "Earth"
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: LOADK     R9 K14       ; R9 := 1
 37 [-]: GETUPVAL  R10 U0       ; R10 := U0
 38 [-]: LEN       R10 R10      ; R10 := # R10
 39 [-]: LOADK     R11 K14      ; R11 := 1
 40 [-]: FORPREP   R9 83        ; R9 -= R11; PC := 83
 41 [-]: GETUPVAL  R13 U0       ; R13 := U0
 42 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 43 [-]: GETGLOBAL R14 K3       ; R14 := 0x400E7765
 44 [-]: MOVE      R15 R13      ; R15 := R13
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: TEST      R14 1        ; if R14 then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: SELF      R14 R13 K15  ; R15 := R13; R14 := R13["0x80A80EEB"]
 49 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 50 [-]: GETGLOBAL R15 K16      ; R15 := Lotus_Game
 51 [-]: GETTABLE  R15 R15 K17  ; R15 := R15["RadialRegion_RCS_LOCKED"]
 52 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 83
 53 [-]: JMP       83           ; PC := 83
 54 [-]: GETUPVAL  R14 U1       ; R14 := U1
 55 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["Active"]
 56 [-]: TEST      R14 0        ; if not R14 then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R14 U1       ; R14 := U1
 59 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["Regions"]
 60 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 61 [-]: TEST      R14 0        ; if not R14 then PC := 83
 62 [-]: JMP       83           ; PC := 83
 63 [-]: GETGLOBAL R14 K20      ; R14 := 0xD1E7609B
 64 [-]: LOADK     R15 K21      ; R15 := "/"
 65 [-]: GETTABLE  R16 R13 K22  ; R16 := R13["name"]
 66 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 67 [-]: LEN       R15 R14      ; R15 := # R14
 68 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 69 [-]: EQ        1 R14 R2     ; if R14 == R2 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R8 R0        ; R8 := R0
 72 [-]: MOVE      R8 R1        ; R8 := R1
 73 [-]: TEST      R8 1         ; if R8 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: MOVE      R1 R13       ; R1 := R13
 78 [-]: GETUPVAL  R15 U2       ; R15 := U2
 79 [-]: SETTABLE  R15 K23 R12  ; R15["RegionIndex"] := R12
 80 [-]: TEST      R8 0         ; if not R8 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: JMP       84           ; PC := 84
 83 [-]: FORLOOP   R9 41        ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
 84 [-]: TEST      R8 1         ; if R8 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: MOVE      R2 R7        ; R2 := R7
 87 [-]: EQ        1 R1 K24     ; if R1 == nil then PC := 137
 88 [-]: JMP       137          ; PC := 137
 89 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 90 [-]: MOVE      R16 R3       ; R16 := R3
 91 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 92 [-]: TEST      R15 1        ; if R15 then PC := 137
 93 [-]: JMP       137          ; PC := 137
 94 [-]: GETUPVAL  R15 U1       ; R15 := U1
 95 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["Active"]
 96 [-]: TEST      R15 1        ; if R15 then PC := 137
 97 [-]: JMP       137          ; PC := 137
 98 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 99 [-]: GETUPVAL  R16 U2       ; R16 := U2
100 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["Deco"]
101 [-]: CALL      R15 2 2      ; R15 := R15(R16)
102 [-]: TEST      R15 0        ; if not R15 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R15 U2       ; R15 := U2
105 [-]: GETGLOBAL R16 K26      ; R16 := gBackgroundRegion
106 [-]: SELF      R16 R16 K27  ; R17 := R16; R16 := R16["0xBDD34CC6"]
107 [-]: GETGLOBAL R18 K28      ; R18 := lisetDecorationType
108 [-]: GETTABLE  R19 R1 K29   ; R19 := R1["instance"]
109 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0x6DA72501"]
110 [-]: CALL      R19 2 2      ; R19 := R19(R20)
111 [-]: GETGLOBAL R20 K31      ; R20 := ZERO_ROTATION
112 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
113 [-]: SETTABLE  R15 K25 R16  ; R15["Deco"] := R16
114 [-]: GETUPVAL  R15 U2       ; R15 := U2
115 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
116 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15["0x6A7E5F92"]
117 [-]: LOADK     R17 K33      ; R17 := 0.00069999997504056
118 [-]: CALL      R15 3 1      ; R15(R16,R17)
119 [-]: GETUPVAL  R15 U2       ; R15 := U2
120 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
121 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xE031E3AB"]
122 [-]: GETGLOBAL R17 K35      ; R17 := 0x7C282057
123 [-]: MOVE      R18 R3       ; R18 := R3
124 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
125 [-]: CALL      R15 0 1      ; R15(R16,...)
126 [-]: GETUPVAL  R15 U2       ; R15 := U2
127 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
128 [-]: SELF      R15 R15 K36  ; R16 := R15; R15 := R15["0xC2123CF5"]
129 [-]: GETTABLE  R17 R4 K37   ; R17 := R4["mSkinFlavourItem"]
130 [-]: GETTABLE  R18 R4 K38   ; R18 := R4["mColors"]
131 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
132 [-]: GETUPVAL  R15 U2       ; R15 := U2
133 [-]: GETTABLE  R16 R1 K29   ; R16 := R1["instance"]
134 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16["0x6DA72501"]
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: SETTABLE  R15 K39 R16  ; R15["AnchorPosition"] := R16
137 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
138 [-]: GETUPVAL  R16 U3       ; R16 := U3
139 [-]: CALL      R15 2 2      ; R15 := R15(R16)
140 [-]: TEST      R15 1        ; if R15 then PC := 173
141 [-]: JMP       173          ; PC := 173
142 [-]: GETUPVAL  R15 U3       ; R15 := U3
143 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15["0xEC183DDC"]
144 [-]: GETUPVAL  R17 U4       ; R17 := U4
145 [-]: GETGLOBAL R18 K41      ; R18 := 0x221C9700
146 [-]: LOADK     R19 K2       ; R19 := 0
147 [-]: LOADK     R20 K2       ; R20 := 0
148 [-]: LOADK     R21 K42      ; R21 := 20
149 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
150 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
151 [-]: CALL      R15 3 1      ; R15(R16,R17)
152 [-]: GETUPVAL  R15 U5       ; R15 := U5
153 [-]: GETUPVAL  R16 U4       ; R16 := U4
154 [-]: GETGLOBAL R17 K41      ; R17 := 0x221C9700
155 [-]: LOADK     R18 K2       ; R18 := 0
156 [-]: LOADK     R19 K2       ; R19 := 0
157 [-]: LOADK     R20 K44      ; R20 := 4
158 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
159 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
160 [-]: SETTABLE  R15 K43 R16  ; R15["Target"] := R16
161 [-]: GETUPVAL  R15 U5       ; R15 := U5
162 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["Prop"]
163 [-]: SELF      R15 R15 K46  ; R16 := R15; R15 := R15["0x5A7A6B1"]
164 [-]: LOADK     R17 K2       ; R17 := 0
165 [-]: CALL      R15 3 1      ; R15(R16,R17)
166 [-]: GETUPVAL  R15 U5       ; R15 := U5
167 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["Prop"]
168 [-]: SELF      R15 R15 K47  ; R16 := R15; R15 := R15["0xDB349344"]
169 [-]: LOADK     R17 K14      ; R17 := 1
170 [-]: CALL      R15 3 1      ; R15(R16,R17)
171 [-]: GETUPVAL  R15 U5       ; R15 := U5
172 [-]: SETTABLE  R15 K48 K49  ; R15["Region"] := -1
173 [-]: GETUPVAL  R15 U7       ; R15 := U7
174 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["0xF81722A2"]
175 [-]: GETUPVAL  R16 U8       ; R16 := U8
176 [-]: LOADK     R17 K14      ; R17 := 1
177 [-]: LOADK     R18 K51      ; R18 := 1.5
178 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
179 [-]: MOVE      R15 R6       ; R15 := R6
180 [-]: GETUPVAL  R15 U9       ; R15 := U9
181 [-]: GETTABLE  R15 R15 K52  ; R15 := R15["mCurrentScroll"]
182 [-]: GETTABLE  R15 R15 K53  ; R15 := R15["x"]
183 [-]: GETUPVAL  R16 U9       ; R16 := U9
184 [-]: GETTABLE  R16 R16 K52  ; R16 := R16["mCurrentScroll"]
185 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["y"]
186 [-]: GETUPVAL  R17 U10      ; R17 := U10
187 [-]: GETTABLE  R17 R17 K55  ; R17 := R17["STARTING_ZOOM"]
188 [-]: SUB       R17 R17 K56  ; R17 := R17 - 80
189 [-]: GETUPVAL  R18 U11      ; R18 := U11
190 [-]: SELF      R18 R18 K46  ; R19 := R18; R18 := R18["0x5A7A6B1"]
191 [-]: MOVE      R20 R17      ; R20 := R17
192 [-]: CALL      R18 3 1      ; R18(R19,R20)
193 [-]: LOADNIL   R18 R18      ; R18 := nil
194 [-]: GETGLOBAL R19 K3       ; R19 := 0x400E7765
195 [-]: GETGLOBAL R20 K4       ; R20 := _G
196 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["JunctionComplete"]
197 [-]: CALL      R19 2 2      ; R19 := R19(R20)
198 [-]: TEST      R19 1        ; if R19 then PC := 264
199 [-]: JMP       264          ; PC := 264
200 [-]: LOADNIL   R19 R19      ; R19 := nil
201 [-]: GETGLOBAL R20 K58      ; R20 := 0x63B09107
202 [-]: GETUPVAL  R21 U12      ; R21 := U12
203 [-]: CALL      R20 2 4      ; R20,R21,R22 := R20(R21)
204 [-]: JMP       225          ; PC := 225
205 [-]: GETTABLE  R25 R24 K59  ; R25 := R24["IsJunction"]
206 [-]: TEST      R25 0        ; if not R25 then PC := 225
207 [-]: JMP       225          ; PC := 225
208 [-]: GETTABLE  R25 R24 K60  ; R25 := R24["NodeA"]
209 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["name"]
210 [-]: GETGLOBAL R26 K4       ; R26 := _G
211 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["JunctionComplete"]
212 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["location"]
213 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 217
214 [-]: JMP       217          ; PC := 217
215 [-]: GETTABLE  R19 R24 K62  ; R19 := R24["NodeB"]
216 [-]: JMP       225          ; PC := 225
217 [-]: GETTABLE  R25 R24 K62  ; R25 := R24["NodeB"]
218 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["name"]
219 [-]: GETGLOBAL R26 K4       ; R26 := _G
220 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["JunctionComplete"]
221 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["location"]
222 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 225
223 [-]: JMP       225          ; PC := 225
224 [-]: GETTABLE  R19 R24 K60  ; R19 := R24["NodeA"]
225 [-]: TFORLOOP  R20 2        ; R23,R24 :=  R20(R21,R22); if R23 ~= nil then begin PC = 205; R22 := R23 end
226 [-]: JMP       205          ; PC := 205
227 [-]: GETGLOBAL R25 K3       ; R25 := 0x400E7765
228 [-]: MOVE      R26 R19      ; R26 := R19
229 [-]: CALL      R25 2 2      ; R25 := R25(R26)
230 [-]: TEST      R25 1        ; if R25 then PC := 262
231 [-]: JMP       262          ; PC := 262
232 [-]: GETGLOBAL R25 K58      ; R25 := 0x63B09107
233 [-]: GETUPVAL  R26 U12      ; R26 := U12
234 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
235 [-]: JMP       260          ; PC := 260
236 [-]: GETTABLE  R30 R29 K63  ; R30 := R29["IsShortcut"]
237 [-]: TEST      R30 0        ; if not R30 then PC := 260
238 [-]: JMP       260          ; PC := 260
239 [-]: GETTABLE  R30 R29 K60  ; R30 := R29["NodeA"]
240 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 250
241 [-]: JMP       250          ; PC := 250
242 [-]: GETUPVAL  R30 U0       ; R30 := U0
243 [-]: GETTABLE  R31 R29 K62  ; R31 := R29["NodeB"]
244 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["radialSector"]
245 [-]: GETTABLE  R31 R31 K65  ; R31 := R31["region"]
246 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
247 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
248 [-]: JMP       262          ; PC := 262
249 [-]: JMP       260          ; PC := 260
250 [-]: GETTABLE  R30 R29 K62  ; R30 := R29["NodeB"]
251 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 260
252 [-]: JMP       260          ; PC := 260
253 [-]: GETUPVAL  R30 U0       ; R30 := U0
254 [-]: GETTABLE  R31 R29 K60  ; R31 := R29["NodeA"]
255 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["radialSector"]
256 [-]: GETTABLE  R31 R31 K65  ; R31 := R31["region"]
257 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
258 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
259 [-]: JMP       262          ; PC := 262
260 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 236; R27 := R28 end
261 [-]: JMP       236          ; PC := 236
262 [-]: GETGLOBAL R30 K4       ; R30 := _G
263 [-]: SETTABLE  R30 K57 K24  ; R30["JunctionComplete"] := nil
264 [-]: EQ        1 R1 K24     ; if R1 == nil then PC := 312
265 [-]: JMP       312          ; PC := 312
266 [-]: GETGLOBAL R30 K66      ; R30 := _T
267 [-]: GETTABLE  R30 R30 K67  ; R30 := R30["WareframeChallenge"]
268 [-]: TEST      R30 1        ; if R30 then PC := 312
269 [-]: JMP       312          ; PC := 312
270 [-]: GETUPVAL  R30 U13      ; R30 := U13
271 [-]: MOVE      R31 R1       ; R31 := R1
272 [-]: GETTABLE  R32 R1 K68   ; R32 := R1["zoomedFraming"]
273 [-]: CALL      R30 3 4      ; R30,R31,R32 := R30(R31,R32)
274 [-]: CLOSURE   R33 0        ; R33 := closure(Function #56.1)
275 [-]: GETUPVAL  R0 U11       ; R0 := U11
276 [-]: MOVE      R0 R17       ; R0 := R17
277 [-]: MOVE      R0 R32       ; R0 := R32
278 [-]: GETUPVAL  R0 U9        ; R0 := U9
279 [-]: MOVE      R0 R15       ; R0 := R15
280 [-]: MOVE      R0 R30       ; R0 := R30
281 [-]: MOVE      R0 R16       ; R0 := R16
282 [-]: MOVE      R0 R31       ; R0 := R31
283 [-]: GETUPVAL  R34 U14      ; R34 := U14
284 [-]: SELF      R34 R34 K69  ; R35 := R34; R34 := R34["0x61494587"]
285 [-]: LOADK     R36 K70      ; R36 := 0.55000001192093
286 [-]: CLOSURE   R37 1        ; R37 := closure(Function #56.2)
287 [-]: GETUPVAL  R0 U15       ; R0 := U15
288 [-]: MOVE      R0 R1        ; R0 := R1
289 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
290 [-]: GETGLOBAL R34 K71      ; R34 := 0x52E17A90
291 [-]: GETGLOBAL R35 K72      ; R35 := mMovie
292 [-]: LOADK     R36 K73      ; R36 := "_root"
293 [-]: GETGLOBAL R37 K74      ; R37 := UISys
294 [-]: GETTABLE  R37 R37 K75  ; R37 := R37["FlashInstance_LINEAR"]
295 [-]: NEWTABLE  R38 1 0      ; R38 := {}
296 [-]: MOVE      R39 R33      ; R39 := R33
297 [-]: SETLIST   R38 1 1      ; R38[(1-1)*FPF+i] := R(38+i), 1 <= i <= 1
298 [-]: NEWTABLE  R39 1 0      ; R39 := {}
299 [-]: LOADK     R40 K14      ; R40 := 1
300 [-]: SETLIST   R39 1 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
301 [-]: LOADK     R40 K76      ; R40 := 0.75
302 [-]: LOADK     R41 K77      ; R41 := 0.10000000149012
303 [-]: CLOSURE   R42 2        ; R42 := closure(Function #56.3)
304 [-]: MOVE      R0 R18       ; R0 := R18
305 [-]: GETUPVAL  R0 U16       ; R0 := U16
306 [-]: GETUPVAL  R0 U17       ; R0 := U17
307 [-]: GETUPVAL  R0 U18       ; R0 := U18
308 [-]: GETUPVAL  R0 U19       ; R0 := U19
309 [-]: CALL      R34 9 1      ; R34(R35,R36,R37,R38,R39,R40,R41,R42)
310 [-]: CLOSE     R30          ; SAVE R30,...
311 [-]: JMP       335          ; PC := 335
312 [-]: GETGLOBAL R30 K71      ; R30 := 0x52E17A90
313 [-]: GETGLOBAL R31 K72      ; R31 := mMovie
314 [-]: LOADK     R32 K73      ; R32 := "_root"
315 [-]: GETGLOBAL R33 K74      ; R33 := UISys
316 [-]: GETTABLE  R33 R33 K75  ; R33 := R33["FlashInstance_LINEAR"]
317 [-]: NEWTABLE  R34 1 0      ; R34 := {}
318 [-]: CLOSURE   R35 3        ; R35 := closure(Function #56.4)
319 [-]: GETUPVAL  R0 U11       ; R0 := U11
320 [-]: MOVE      R0 R17       ; R0 := R17
321 [-]: GETUPVAL  R0 U10       ; R0 := U10
322 [-]: SETLIST   R34 1 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
323 [-]: NEWTABLE  R35 1 0      ; R35 := {}
324 [-]: LOADK     R36 K14      ; R36 := 1
325 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
326 [-]: LOADK     R36 K78      ; R36 := 0.64999997615814
327 [-]: LOADK     R37 K2       ; R37 := 0
328 [-]: CLOSURE   R38 4        ; R38 := closure(Function #56.5)
329 [-]: GETUPVAL  R0 U17       ; R0 := U17
330 [-]: GETUPVAL  R0 U18       ; R0 := U18
331 [-]: GETUPVAL  R0 U19       ; R0 := U19
332 [-]: GETUPVAL  R0 U14       ; R0 := U14
333 [-]: GETUPVAL  R0 U20       ; R0 := U20
334 [-]: CALL      R30 9 1      ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
335 [-]: RETURN    R0 1         ; return 


; Function #56.1:
;
; Name:            
; Defined at line: 2352
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  8 [-]: CALL      R1 0 1       ; R1(R2,...)
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x9E1B8940
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x9E1B8940
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x9E1B8940
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x9E1B8940
 13 [-]: GETGLOBAL R5 K2        ; R5 := 0x9E1B8940
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 16 [-]: CALL      R4 0 0       ; R4,... := R4(R5,...)
 17 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 18 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
 19 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 22 [-]: LOADK     R4 K4        ; R4 := "x"
 23 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETUPVAL  R7 U5        ; R7 := U5
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 28 [-]: CALL      R2 0 1       ; R2(R3,...)
 29 [-]: GETUPVAL  R2 U3        ; R2 := U3
 30 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 31 [-]: LOADK     R4 K5        ; R4 := "y"
 32 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 33 [-]: GETUPVAL  R6 U6        ; R6 := U6
 34 [-]: GETUPVAL  R7 U7        ; R7 := U7
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 37 [-]: CALL      R2 0 1       ; R2(R3,...)
 38 [-]: RETURN    R0 1         ; return 


; Function #56.2:
;
; Name:            
; Defined at line: 2359
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #56.3:
;
; Name:            
; Defined at line: 2361
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R2        ; R0 := R2
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 1       ; R0()
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: CALL      R0 1 1       ; R0()
 16 [-]: RETURN    R0 1         ; return 


; Function #56.4:
;
; Name:            
; Defined at line: 2371
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["STARTING_ZOOM"]
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  9 [-]: CALL      R1 0 1       ; R1(R2,...)
 10 [-]: RETURN    R0 1         ; return 


; Function #56.5:
;
; Name:            
; Defined at line: 2372
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: GETUPVAL  R1 U3        ; R1 := U3
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x61494587"]
 11 [-]: LOADK     R3 K2        ; R3 := 0.050000000745058
 12 [-]: CLOSURE   R4 0         ; R4 := closure(Function #56.5.1)
 13 [-]: GETUPVAL  R0 U4        ; R0 := U4
 14 [-]: MOVE      R0 R0        ; R0 := R0
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #56.5.1:
;
; Name:            
; Defined at line: 2379
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 26        ; R0 -= R2; PC := 26
  6 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x3688C0F4"]
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["pos"]
 12 [-]: MOVE      R8 R1        ; R8 := R1
 13 [-]: MOVE      R9 R0        ; R9 := R0
 14 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 15 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x4717530F"]
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 19 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["memberIndex"]
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["x"]
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["y"]
 24 [-]: SUB       R8 R8 K8     ; R8 := R8 - 10
 25 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 26 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 27 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2389
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["radialSector"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["region"]
  3 [-]: ADD       R1 R1 K2     ; R1 := R1 + 1
  4 [-]: EQ        1 R1 K3      ; if R1 == 17 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: MOVE      R2 R1        ; R2 := R1
  8 [-]: EQ        1 R1 K4      ; if R1 == 15 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: EQ        1 R1 K5      ; if R1 == 14 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: TEST      R2 1         ; if R2 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: TEST      R3 1         ; if R3 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: TEST      R4 0         ; if not R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 26 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["instance"]
 27 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xAC8F6523"]
 28 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["position"]
 29 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 30 [-]: LOADK     R6 K9        ; R6 := 0.0049999998882413
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 R1     ; R7 := R7[R1]
 33 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 34 [-]: LT        1 R5 R7      ; if R5 < R7 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R7 R0        ; R7 := R0
 37 [-]: MOVE      R7 R1        ; R7 := R1
 38 [-]: RETURN    R7 2         ; return R7
 39 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2402
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["nodeType"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["NT_PVP"]
  4 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["locTag"]
  9 [-]: GETGLOBAL R2 K4        ; R2 := EMPTY_SYMBOL
 10 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R1 R0        ; R1 := R0
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x9FAED6BC
 15 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["name"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K7        ; R2 := string
 18 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xDE44F664"]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K9        ; R4 := "Dojo"
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: EQ        0 R2 K10     ; if R2 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: MOVE      R2 R1        ; R2 := R1
 26 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["missionTag"]
 27 [-]: LOADNIL   R4 R4        ; R4 := nil
 28 [-]: GETUPVAL  R5 U0        ; R5 := U0
 29 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Active"]
 30 [-]: TEST      R5 0         ; if not R5 then PC := 90
 31 [-]: JMP       90           ; PC := 90
 32 [-]: GETGLOBAL R5 K13       ; R5 := gMatchingService
 33 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5["0xA99F3BEF"]
 34 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 35 [-]: TEST      R5 1         ; if R5 then PC := 72
 36 [-]: JMP       72           ; PC := 72
 37 [-]: GETGLOBAL R5 K15       ; R5 := 0x400E7765
 38 [-]: GETGLOBAL R6 K13       ; R6 := gMatchingService
 39 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6["0xD5E03646"]
 40 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 41 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 42 [-]: TEST      R5 0         ; if not R5 then PC := 72
 43 [-]: JMP       72           ; PC := 72
 44 [-]: GETGLOBAL R5 K17       ; R5 := gGameRules
 45 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x8B598ED4"]
 46 [-]: GETGLOBAL R7 K19       ; R7 := gLotusGameRulesType
 47 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 48 [-]: TEST      R5 0         ; if not R5 then PC := 72
 49 [-]: JMP       72           ; PC := 72
 50 [-]: GETGLOBAL R5 K15       ; R5 := 0x400E7765
 51 [-]: GETGLOBAL R6 K17       ; R6 := gGameRules
 52 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0xB8637349"]
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["levelKeyName"]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: TEST      R5 1         ; if R5 then PC := 70
 57 [-]: JMP       70           ; PC := 70
 58 [-]: GETGLOBAL R5 K22       ; R5 := 0xEC274B1A
 59 [-]: GETGLOBAL R6 K17       ; R6 := gGameRules
 60 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0xB8637349"]
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["levelKeyName"]
 63 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6["0x1B252E3C"]
 64 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 65 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 66 [-]: GETUPVAL  R6 U1        ; R6 := U1
 67 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["SCENARIO_EVENT_SPACE_TAG"]
 68 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: MOVE      R5 R0        ; R5 := R0
 71 [-]: MOVE      R5 R1        ; R5 := R1
 72 [-]: TEST      R5 0         ; if not R5 then PC := 90
 73 [-]: JMP       90           ; PC := 90
 74 [-]: GETUPVAL  R6 U2        ; R6 := U2
 75 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["SQUAD_LINK_EVENT"]
 76 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 88
 77 [-]: JMP       88           ; PC := 88
 78 [-]: GETGLOBAL R6 K26       ; R6 := _G
 79 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
 80 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
 81 [-]: TEST      R6 1         ; if R6 then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: GETUPVAL  R6 U3        ; R6 := U3
 84 [-]: TEST      R6 0         ; if not R6 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: MOVE      R4 R1        ; R4 := R1
 87 [-]: JMP       90           ; PC := 90
 88 [-]: MOVE      R6 R0        ; R6 := R0
 89 [-]: RETURN    R6 2         ; return R6
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Active"]
 92 [-]: TEST      R6 1         ; if R6 then PC := 116
 93 [-]: JMP       116          ; PC := 116
 94 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mission"]
 95 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["missionType"]
 96 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 97 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["MT_RAILJACK"]
 98 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 116
 99 [-]: JMP       116          ; PC := 116
100 [-]: GETUPVAL  R6 U2        ; R6 := U2
101 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["SQUAD_LINK_EVENT"]
102 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETGLOBAL R6 K26       ; R6 := _G
105 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
106 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
107 [-]: TEST      R6 1         ; if R6 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETUPVAL  R6 U3        ; R6 := U3
110 [-]: TEST      R6 0         ; if not R6 then PC := 114
111 [-]: JMP       114          ; PC := 114
112 [-]: MOVE      R4 R1        ; R4 := R1
113 [-]: JMP       116          ; PC := 116
114 [-]: MOVE      R6 R0        ; R6 := R0
115 [-]: RETURN    R6 2         ; return R6
116 [-]: GETUPVAL  R6 U0        ; R6 := U0
117 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Active"]
118 [-]: TEST      R6 0         ; if not R6 then PC := 137
119 [-]: JMP       137          ; PC := 137
120 [-]: GETGLOBAL R6 K17       ; R6 := gGameRules
121 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6["0x8B598ED4"]
122 [-]: GETGLOBAL R8 K31       ; R8 := gLotusHubGameRulesType
123 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
124 [-]: TEST      R6 0         ; if not R6 then PC := 137
125 [-]: JMP       137          ; PC := 137
126 [-]: GETGLOBAL R6 K7        ; R6 := string
127 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0xDE44F664"]
128 [-]: GETGLOBAL R7 K5        ; R7 := 0x9FAED6BC
129 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["name"]
130 [-]: CALL      R7 2 2       ; R7 := R7(R8)
131 [-]: LOADK     R8 K9        ; R8 := "Dojo"
132 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
133 [-]: EQ        1 R6 K10     ; if R6 == nil then PC := 137
134 [-]: JMP       137          ; PC := 137
135 [-]: MOVE      R6 R0        ; R6 := R0
136 [-]: RETURN    R6 2         ; return R6
137 [-]: GETUPVAL  R6 U0        ; R6 := U0
138 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Active"]
139 [-]: TEST      R6 0         ; if not R6 then PC := 167
140 [-]: JMP       167          ; PC := 167
141 [-]: TEST      R2 1         ; if R2 then PC := 167
142 [-]: JMP       167          ; PC := 167
143 [-]: TEST      R4 1         ; if R4 then PC := 167
144 [-]: JMP       167          ; PC := 167
145 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mission"]
146 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["missionType"]
147 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
148 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["MT_RAILJACK"]
149 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 165
150 [-]: JMP       165          ; PC := 165
151 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["nodeType"]
152 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
153 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["NT_SHORTCUT"]
154 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 165
155 [-]: JMP       165          ; PC := 165
156 [-]: GETUPVAL  R6 U3        ; R6 := U3
157 [-]: TEST      R6 1         ; if R6 then PC := 167
158 [-]: JMP       167          ; PC := 167
159 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mission"]
160 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["faction"]
161 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
162 [-]: GETTABLE  R7 R7 K34    ; R7 := R7["FC_CORPUS"]
163 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: MOVE      R6 R0        ; R6 := R0
166 [-]: RETURN    R6 2         ; return R6
167 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["nodeType"]
168 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
169 [-]: GETTABLE  R7 R7 K35    ; R7 := R7["NT_EVENT"]
170 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 191
171 [-]: JMP       191          ; PC := 191
172 [-]: GETGLOBAL R6 K26       ; R6 := _G
173 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
174 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
175 [-]: TEST      R6 1         ; if R6 then PC := 191
176 [-]: JMP       191          ; PC := 191
177 [-]: GETGLOBAL R6 K36       ; R6 := _T
178 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["WorldStateDerelictNodes"]
179 [-]: TEST      R6 0         ; if not R6 then PC := 189
180 [-]: JMP       189          ; PC := 189
181 [-]: GETGLOBAL R6 K36       ; R6 := _T
182 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["WorldStateDerelictNodes"]
183 [-]: GETGLOBAL R7 K5        ; R7 := 0x9FAED6BC
184 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["name"]
185 [-]: CALL      R7 2 2       ; R7 := R7(R8)
186 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
187 [-]: TEST      R6 1         ; if R6 then PC := 191
188 [-]: JMP       191          ; PC := 191
189 [-]: MOVE      R6 R0        ; R6 := R0
190 [-]: RETURN    R6 2         ; return R6
191 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["region"]
192 [-]: ADD       R6 R6 K39    ; R6 := R6 + 1
193 [-]: GETGLOBAL R7 K36       ; R7 := _T
194 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["REGION_ID_MOON"]
195 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 207
196 [-]: JMP       207          ; PC := 207
197 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["nodeType"]
198 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
199 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["NT_SHORTCUT"]
200 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 215
201 [-]: JMP       215          ; PC := 215
202 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["name"]
203 [-]: GETUPVAL  R7 U2        ; R7 := U2
204 [-]: GETTABLE  R7 R7 K41    ; R7 := R7["MOON_SHORTCUT_TAG"]
205 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETUPVAL  R6 U4        ; R6 := U4
208 [-]: GETGLOBAL R7 K36       ; R7 := _T
209 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["REGION_ID_MOON"]
210 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
211 [-]: EQ        0 R6 K42     ; if R6 ~= "0x1" then PC := 215
212 [-]: JMP       215          ; PC := 215
213 [-]: MOVE      R6 R0        ; R6 := R0
214 [-]: RETURN    R6 2         ; return R6
215 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["region"]
216 [-]: ADD       R6 R6 K39    ; R6 := R6 + 1
217 [-]: GETGLOBAL R7 K36       ; R7 := _T
218 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["REGION_ID_FORTRESS"]
219 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 229
220 [-]: JMP       229          ; PC := 229
221 [-]: GETUPVAL  R6 U4        ; R6 := U4
222 [-]: GETGLOBAL R7 K36       ; R7 := _T
223 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["REGION_ID_FORTRESS"]
224 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
225 [-]: EQ        0 R6 K42     ; if R6 ~= "0x1" then PC := 229
226 [-]: JMP       229          ; PC := 229
227 [-]: MOVE      R6 R0        ; R6 := R0
228 [-]: RETURN    R6 2         ; return R6
229 [-]: GETGLOBAL R6 K26       ; R6 := _G
230 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["StarChartHiddenEventNode"]
231 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 235
232 [-]: JMP       235          ; PC := 235
233 [-]: MOVE      R6 R0        ; R6 := R0
234 [-]: RETURN    R6 2         ; return R6
235 [-]: GETUPVAL  R6 U2        ; R6 := U2
236 [-]: GETTABLE  R6 R6 K45    ; R6 := R6["TENNOCON_RELAY"]
237 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 257
238 [-]: JMP       257          ; PC := 257
239 [-]: GETGLOBAL R6 K26       ; R6 := _G
240 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
241 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
242 [-]: TEST      R6 0         ; if not R6 then PC := 255
243 [-]: JMP       255          ; PC := 255
244 [-]: GETGLOBAL R6 K15       ; R6 := 0x400E7765
245 [-]: GETGLOBAL R7 K46       ; R7 := gGameData
246 [-]: CALL      R6 2 2       ; R6 := R6(R7)
247 [-]: TEST      R6 1         ; if R6 then PC := 257
248 [-]: JMP       257          ; PC := 257
249 [-]: GETUPVAL  R6 U5        ; R6 := U5
250 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["0x8D79D162"]
251 [-]: GETGLOBAL R7 K46       ; R7 := gGameData
252 [-]: CALL      R6 2 2       ; R6 := R6(R7)
253 [-]: TEST      R6 1         ; if R6 then PC := 257
254 [-]: JMP       257          ; PC := 257
255 [-]: MOVE      R6 R0        ; R6 := R0
256 [-]: RETURN    R6 2         ; return R6
257 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["region"]
258 [-]: ADD       R6 R6 K39    ; R6 := R6 + 1
259 [-]: GETGLOBAL R7 K36       ; R7 := _T
260 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["REGION_ID_DARK_SECTOR"]
261 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 265
262 [-]: JMP       265          ; PC := 265
263 [-]: MOVE      R6 R0        ; R6 := R0
264 [-]: RETURN    R6 2         ; return R6
265 [-]: GETUPVAL  R6 U3        ; R6 := U3
266 [-]: TEST      R6 1         ; if R6 then PC := 279
267 [-]: JMP       279          ; PC := 279
268 [-]: GETUPVAL  R6 U2        ; R6 := U2
269 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["SQUAD_LINK_EVENT"]
270 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 279
271 [-]: JMP       279          ; PC := 279
272 [-]: GETGLOBAL R6 K26       ; R6 := _G
273 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["CachedGoalInfo"]
274 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
275 [-]: TEST      R6 1         ; if R6 then PC := 279
276 [-]: JMP       279          ; PC := 279
277 [-]: MOVE      R6 R0        ; R6 := R0
278 [-]: RETURN    R6 2         ; return R6
279 [-]: MOVE      R6 R1        ; R6 := R1
280 [-]: RETURN    R6 2         ; return R6
281 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2481
; #Upvalues:       14
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  4 [-]: MOVE      R1 R2        ; R1 := R2
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 13 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 14 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 108
 17 [-]: JMP       108          ; PC := 108
 18 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 19 [-]: GETGLOBAL R4 K4        ; R4 := gGameData
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 108
 22 [-]: JMP       108          ; PC := 108
 23 [-]: GETGLOBAL R3 K4        ; R3 := gGameData
 24 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x52C8784B"]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 29 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 30 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 108
 31 [-]: JMP       108          ; PC := 108
 32 [-]: GETUPVAL  R3 U1        ; R3 := U1
 33 [-]: TEST      R3 1         ; if R3 then PC := 108
 34 [-]: JMP       108          ; PC := 108
 35 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["CETUS_NODE_TAG"]
 38 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETUPVAL  R3 U2        ; R3 := U2
 41 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
 42 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 43 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: MOVE      R2 R3        ; R2 := R3
 46 [-]: JMP       108          ; PC := 108
 47 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 48 [-]: GETUPVAL  R4 U2        ; R4 := U2
 49 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["PLAINS_NODE_TAG"]
 50 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 51 [-]: JMP       64           ; PC := 64
 52 [-]: GETGLOBAL R3 K11       ; R3 := gPlayerProfileMgr
 53 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0x21EF7B1A"]
 54 [-]: LOADK     R5 K13       ; R5 := 0
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x654F1092"]
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x8572D26E"]
 59 [-]: GETUPVAL  R5 U2        ; R5 := U2
 60 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["PLAINS_NODE_TAG"]
 61 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 62 [-]: MOVE      R2 R3        ; R2 := R3
 63 [-]: JMP       108          ; PC := 108
 64 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["ORB_VALLIS_NODE_TAG"]
 67 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 75
 68 [-]: JMP       75           ; PC := 75
 69 [-]: GETUPVAL  R3 U2        ; R3 := U2
 70 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
 71 [-]: GETUPVAL  R4 U3        ; R4 := U3
 72 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 73 [-]: MOVE      R2 R3        ; R2 := R3
 74 [-]: JMP       108          ; PC := 108
 75 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mission"]
 76 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["missionType"]
 77 [-]: GETGLOBAL R4 K18       ; R4 := Lotus_Game
 78 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["MT_ARTIFACT"]
 79 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mission"]
 82 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["missionType"]
 83 [-]: GETGLOBAL R4 K18       ; R4 := Lotus_Game
 84 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["MT_ASSASSINATION"]
 85 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 100
 86 [-]: JMP       100          ; PC := 100
 87 [-]: GETUPVAL  R3 U2        ; R3 := U2
 88 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
 89 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
 90 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 1         ; if R3 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETTABLE  R3 R0 K21    ; R3 := R0["unlocked"]
 95 [-]: MOVE      R2 R3        ; R2 := R3
 96 [-]: JMP       108          ; PC := 108
 97 [-]: MOVE      R2 R0        ; R2 := R0
 98 [-]: MOVE      R2 R1        ; R2 := R1
 99 [-]: JMP       108          ; PC := 108
100 [-]: GETUPVAL  R3 U2        ; R3 := U2
101 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0x2AAC7A8C"]
102 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
103 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["questReq"]
104 [-]: CALL      R3 2 2       ; R3 := R3(R4)
105 [-]: TEST      R3 1         ; if R3 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: RETURN    R0 1         ; return 
108 [-]: MOVE      R3 R1        ; R3 := R1
109 [-]: GETTABLE  R4 R0 K22    ; R4 := R0["missionTag"]
110 [-]: GETUPVAL  R5 U4        ; R5 := U4
111 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["DESTROYED_NODE_TAG"]
112 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: GETGLOBAL R5 K25       ; R5 := destroyedNodeDeco
115 [-]: SETTABLE  R0 K24 R5    ; R0["deco"] := R5
116 [-]: MOVE      R3 R0        ; R3 := R0
117 [-]: LOADNIL   R5 R5        ; R5 := nil
118 [-]: GETUPVAL  R6 U4        ; R6 := U4
119 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["RECONSTRUCTION_NODE_TAG"]
120 [-]: EQ        1 R4 R6      ; if R4 == R6 then PC := 126
121 [-]: JMP       126          ; PC := 126
122 [-]: GETUPVAL  R6 U4        ; R6 := U4
123 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["UNDER_CONSTRUCTION_NODE_TAG"]
124 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 197
125 [-]: JMP       197          ; PC := 197
126 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["name"]
127 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6["0x5EC7A3D2"]
128 [-]: CALL      R6 2 2       ; R6 := R6(R7)
129 [-]: GETGLOBAL R7 K29       ; R7 := string
130 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["0xDE44F664"]
131 [-]: MOVE      R8 R6        ; R8 := R6
132 [-]: LOADK     R9 K31       ; R9 := "Rebuild"
133 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
134 [-]: MOVE      R8 R6        ; R8 := R6
135 [-]: TEST      R7 0         ; if not R7 then PC := 144
136 [-]: JMP       144          ; PC := 144
137 [-]: GETGLOBAL R9 K29       ; R9 := string
138 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0x7B782033"]
139 [-]: MOVE      R10 R6       ; R10 := R6
140 [-]: LOADK     R11 K33      ; R11 := 1
141 [-]: SUB       R12 R7 K33   ; R12 := R7 - 1
142 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
143 [-]: MOVE      R8 R9        ; R8 := R9
144 [-]: GETUPVAL  R9 U5        ; R9 := U5
145 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
146 [-]: MOVE      R10 R0       ; R10 := R0
147 [-]: LOADNIL   R11 R11      ; R11 := nil
148 [-]: TEST      R9 0         ; if not R9 then PC := 166
149 [-]: JMP       166          ; PC := 166
150 [-]: GETTABLE  R11 R9 K34   ; R11 := R9["info"]
151 [-]: TEST      R11 0        ; if not R11 then PC := 166
152 [-]: JMP       166          ; PC := 166
153 [-]: GETTABLE  R12 R11 K35  ; R12 := R11["mActivation"]
154 [-]: SELF      R12 R12 K36  ; R13 := R12; R12 := R12["0x315E860F"]
155 [-]: CALL      R12 2 2      ; R12 := R12(R13)
156 [-]: TEST      R12 0        ; if not R12 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: GETGLOBAL R12 K37      ; R12 := Engine
159 [-]: GETTABLE  R12 R12 K38  ; R12 := R12["0xD09D7910"]
160 [-]: GETTABLE  R13 R9 K34   ; R13 := R9["info"]
161 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["mActivation"]
162 [-]: CALL      R12 2 2      ; R12 := R12(R13)
163 [-]: LE        0 R12 K13    ; if R12 > 0 then PC := 166
164 [-]: JMP       166          ; PC := 166
165 [-]: MOVE      R10 R1       ; R10 := R1
166 [-]: TEST      R10 0        ; if not R10 then PC := 169
167 [-]: JMP       169          ; PC := 169
168 [-]: GETTABLE  R5 R9 K39    ; R5 := R9["progress"]
169 [-]: TEST      R7 0         ; if not R7 then PC := 177
170 [-]: JMP       177          ; PC := 177
171 [-]: TEST      R10 0        ; if not R10 then PC := 175
172 [-]: JMP       175          ; PC := 175
173 [-]: EQ        1 R5 K13     ; if R5 == 0 then PC := 197
174 [-]: JMP       197          ; PC := 197
175 [-]: RETURN    R0 1         ; return 
176 [-]: JMP       197          ; PC := 197
177 [-]: TEST      R10 1        ; if R10 then PC := 187
178 [-]: JMP       187          ; PC := 187
179 [-]: MOVE      R12 R1       ; R12 := R1
180 [-]: TEST      R12 1        ; if R12 then PC := 197
181 [-]: JMP       197          ; PC := 197
182 [-]: MOVE      R3 R0        ; R3 := R0
183 [-]: GETGLOBAL R13 K25      ; R13 := destroyedNodeDeco
184 [-]: SETTABLE  R0 K24 R13   ; R0["deco"] := R13
185 [-]: JMP       197          ; PC := 197
186 [-]: JMP       197          ; PC := 197
187 [-]: EQ        0 R5 K13     ; if R5 ~= 0 then PC := 191
188 [-]: JMP       191          ; PC := 191
189 [-]: RETURN    R0 1         ; return 
190 [-]: JMP       197          ; PC := 197
191 [-]: EQ        0 R5 K33     ; if R5 ~= 1 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETGLOBAL R13 K18      ; R13 := Lotus_Game
194 [-]: GETTABLE  R13 R13 K41  ; R13 := R13["NT_MISSION"]
195 [-]: SETTABLE  R0 K40 R13   ; R0["nodeType"] := R13
196 [-]: JMP       197          ; PC := 197
197 [-]: GETTABLE  R13 R0 K42   ; R13 := R0["pos"]
198 [-]: LOADNIL   R14 R14      ; R14 := nil
199 [-]: GETGLOBAL R15 K43      ; R15 := 0x9FAED6BC
200 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["name"]
201 [-]: CALL      R15 2 2      ; R15 := R15(R16)
202 [-]: GETGLOBAL R16 K44      ; R16 := _G
203 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["CachedGoalInfo"]
204 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
205 [-]: TEST      R16 0        ; if not R16 then PC := 329
206 [-]: JMP       329          ; PC := 329
207 [-]: GETGLOBAL R16 K44      ; R16 := _G
208 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["CachedGoalInfo"]
209 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
210 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["mFomorian"]
211 [-]: TEST      R16 0        ; if not R16 then PC := 272
212 [-]: JMP       272          ; PC := 272
213 [-]: GETUPVAL  R16 U6       ; R16 := U6
214 [-]: SELF      R16 R16 K47  ; R17 := R16; R16 := R16["0xDF213CE1"]
215 [-]: GETGLOBAL R18 K44      ; R18 := _G
216 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["CachedGoalInfo"]
217 [-]: GETTABLE  R18 R18 R15  ; R18 := R18[R15]
218 [-]: GETTABLE  R18 R18 K48  ; R18 := R18["mVictimNode"]
219 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
220 [-]: GETTABLE  R17 R16 K42  ; R17 := R16["pos"]
221 [-]: SUB       R17 R17 R13  ; R17 := R17 - R13
222 [-]: MUL       R18 R17 K49  ; R18 := R17 * 0.80000001192093
223 [-]: GETGLOBAL R19 K44      ; R19 := _G
224 [-]: GETTABLE  R19 R19 K45  ; R19 := R19["CachedGoalInfo"]
225 [-]: GETTABLE  R19 R19 R15  ; R19 := R19[R15]
226 [-]: GETTABLE  R19 R19 K35  ; R19 := R19["mActivation"]
227 [-]: SELF      R19 R19 K50  ; R20 := R19; R19 := R19["0x6F4BAEB9"]
228 [-]: GETGLOBAL R21 K44      ; R21 := _G
229 [-]: GETTABLE  R21 R21 K45  ; R21 := R21["CachedGoalInfo"]
230 [-]: GETTABLE  R21 R21 R15  ; R21 := R21[R15]
231 [-]: GETTABLE  R21 R21 K51  ; R21 := R21["mExpiry"]
232 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
233 [-]: GETGLOBAL R20 K52      ; R20 := 0x6374FD98
234 [-]: GETGLOBAL R21 K37      ; R21 := Engine
235 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["0xD09D7910"]
236 [-]: GETGLOBAL R22 K44      ; R22 := _G
237 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["CachedGoalInfo"]
238 [-]: GETTABLE  R22 R22 R15  ; R22 := R22[R15]
239 [-]: GETTABLE  R22 R22 K51  ; R22 := R22["mExpiry"]
240 [-]: CALL      R21 2 2      ; R21 := R21(R22)
241 [-]: LOADK     R22 K13      ; R22 := 0
242 [-]: MOVE      R23 R19      ; R23 := R19
243 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
244 [-]: DIV       R21 R20 R19  ; R21 := R20 / R19
245 [-]: SUB       R21 K33 R21  ; R21 := 1 - R21
246 [-]: MUL       R22 R18 R21  ; R22 := R18 * R21
247 [-]: ADD       R13 R13 R22  ; R13 := R13 + R22
248 [-]: GETGLOBAL R23 K44      ; R23 := _G
249 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["CachedGoalInfo"]
250 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
251 [-]: GETTABLE  R23 R23 K53  ; R23 := R23["mFaction"]
252 [-]: GETGLOBAL R24 K18      ; R24 := Lotus_Game
253 [-]: GETTABLE  R24 R24 K54  ; R24 := R24["FC_CORPUS"]
254 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 264
255 [-]: JMP       264          ; PC := 264
256 [-]: GETGLOBAL R23 K55      ; R23 := armadaDeco
257 [-]: SETTABLE  R0 K24 R23   ; R0["deco"] := R23
258 [-]: GETGLOBAL R23 K57      ; R23 := 0x1E4F6281
259 [-]: LOADK     R24 K58      ; R24 := 50
260 [-]: LOADK     R25 K13      ; R25 := 0
261 [-]: LOADK     R26 K13      ; R26 := 0
262 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
263 [-]: SETTABLE  R0 K56 R23   ; R0["decoRotation"] := R23
264 [-]: GETGLOBAL R23 K44      ; R23 := _G
265 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["CachedGoalInfo"]
266 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
267 [-]: GETTABLE  R23 R23 K59  ; R23 := R23["mHealthPct"]
268 [-]: LE        0 R23 K13    ; if R23 > 0 then PC := 329
269 [-]: JMP       329          ; PC := 329
270 [-]: MOVE      R3 R0        ; R3 := R0
271 [-]: JMP       329          ; PC := 329
272 [-]: GETGLOBAL R23 K29      ; R23 := string
273 [-]: GETTABLE  R23 R23 K30  ; R23 := R23["0xDE44F664"]
274 [-]: GETGLOBAL R24 K43      ; R24 := 0x9FAED6BC
275 [-]: GETGLOBAL R25 K44      ; R25 := _G
276 [-]: GETTABLE  R25 R25 K45  ; R25 := R25["CachedGoalInfo"]
277 [-]: GETTABLE  R25 R25 R15  ; R25 := R25[R15]
278 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["mTag"]
279 [-]: CALL      R24 2 2      ; R24 := R24(R25)
280 [-]: LOADK     R25 K61      ; R25 := "Halloween"
281 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
282 [-]: EQ        1 R23 K0     ; if R23 == nil then PC := 329
283 [-]: JMP       329          ; PC := 329
284 [-]: GETGLOBAL R23 K62      ; R23 := 0x2C00D429
285 [-]: LOADK     R24 K63      ; R24 := "/Lotus/Upgrades/Skins/Festivities/PumpkinHeadDeco"
286 [-]: CALL      R23 2 2      ; R23 := R23(R24)
287 [-]: SETTABLE  R0 K24 R23   ; R0["deco"] := R23
288 [-]: GETGLOBAL R23 K57      ; R23 := 0x1E4F6281
289 [-]: LOADK     R24 K64      ; R24 := 180
290 [-]: LOADK     R25 K13      ; R25 := 0
291 [-]: LOADK     R26 K13      ; R26 := 0
292 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
293 [-]: SETTABLE  R0 K56 R23   ; R0["decoRotation"] := R23
294 [-]: SETTABLE  R0 K65 K66   ; R0["scale"] := 0.03999999910593
295 [-]: GETGLOBAL R23 K57      ; R23 := 0x1E4F6281
296 [-]: LOADK     R24 K67      ; R24 := -50
297 [-]: LOADK     R25 K13      ; R25 := 0
298 [-]: LOADK     R26 K13      ; R26 := 0
299 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
300 [-]: MOVE      R14 R23      ; R14 := R23
301 [-]: EQ        0 R15 K68    ; if R15 ~= "EventNode24" then PC := 305
302 [-]: JMP       305          ; PC := 305
303 [-]: GETTABLE  R23 R0 K69   ; R23 := R0["decoOffset"]
304 [-]: SETTABLE  R23 K70 K71  ; R23["z"] := -0.10000000149012
305 [-]: GETGLOBAL R23 K72      ; R23 := _T
306 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["CachedGoalKeys"]
307 [-]: TEST      R23 0        ; if not R23 then PC := 329
308 [-]: JMP       329          ; PC := 329
309 [-]: GETGLOBAL R23 K72      ; R23 := _T
310 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["CachedGoalKeys"]
311 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
312 [-]: TEST      R23 0        ; if not R23 then PC := 329
313 [-]: JMP       329          ; PC := 329
314 [-]: GETGLOBAL R23 K72      ; R23 := _T
315 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["CachedGoalKeys"]
316 [-]: GETTABLE  R23 R23 R15  ; R23 := R23[R15]
317 [-]: SELF      R23 R23 K74  ; R24 := R23; R23 := R23["0x387DBBEB"]
318 [-]: CALL      R23 2 2      ; R23 := R23(R24)
319 [-]: GETTABLE  R24 R23 K75  ; R24 := R23["x"]
320 [-]: EQ        1 R24 K13    ; if R24 == 0 then PC := 329
321 [-]: JMP       329          ; PC := 329
322 [-]: GETTABLE  R24 R23 K76  ; R24 := R23["y"]
323 [-]: EQ        1 R24 K13    ; if R24 == 0 then PC := 329
324 [-]: JMP       329          ; PC := 329
325 [-]: GETTABLE  R24 R23 K70  ; R24 := R23["z"]
326 [-]: EQ        1 R24 K13    ; if R24 == 0 then PC := 329
327 [-]: JMP       329          ; PC := 329
328 [-]: SETTABLE  R0 K42 R23   ; R0["pos"] := R23
329 [-]: GETUPVAL  R24 U7       ; R24 := U7
330 [-]: LOADK     R25 K77      ; R25 := "Nodes.Node"
331 [-]: LOADK     R26 K78      ; R26 := "Node"
332 [-]: GETUPVAL  R27 U8       ; R27 := U8
333 [-]: LEN       R27 R27      ; R27 := # R27
334 [-]: ADD       R27 R27 K33  ; R27 := R27 + 1
335 [-]: LOADK     R28 K79      ; R28 := -5000
336 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
337 [-]: GETGLOBAL R25 K80      ; R25 := mMovie
338 [-]: SELF      R25 R25 K81  ; R26 := R25; R25 := R25["0xA7FE5515"]
339 [-]: MOVE      R27 R24      ; R27 := R24
340 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
341 [-]: GETGLOBAL R26 K80      ; R26 := mMovie
342 [-]: SELF      R26 R26 K81  ; R27 := R26; R26 := R26["0xA7FE5515"]
343 [-]: MOVE      R28 R24      ; R28 := R24
344 [-]: LOADK     R29 K82      ; R29 := ".Node"
345 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
346 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
347 [-]: GETGLOBAL R27 K80      ; R27 := mMovie
348 [-]: SELF      R27 R27 K83  ; R28 := R27; R27 := R27["0x7E1F26D7"]
349 [-]: MOVE      R29 R24      ; R29 := R24
350 [-]: LOADK     R30 K84      ; R30 := ".Name.Bg"
351 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
352 [-]: GETGLOBAL R30 K44      ; R30 := _G
353 [-]: GETTABLE  R30 R30 K85  ; R30 := R30["UIMaterial_SmoothEdgeNoDepthTest"]
354 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
355 [-]: GETGLOBAL R27 K80      ; R27 := mMovie
356 [-]: SELF      R27 R27 K86  ; R28 := R27; R27 := R27["0x880196A7"]
357 [-]: MOVE      R29 R24      ; R29 := R24
358 [-]: LOADK     R30 K87      ; R30 := "Name.Bg"
359 [-]: LOADK     R31 K88      ; R31 := "noMenuSelection"
360 [-]: MOVE      R32 R1       ; R32 := R1
361 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
362 [-]: LOADNIL   R27 R27      ; R27 := nil
363 [-]: GETGLOBAL R28 K1       ; R28 := 0x400E7765
364 [-]: GETTABLE  R29 R0 K24   ; R29 := R0["deco"]
365 [-]: CALL      R28 2 2      ; R28 := R28(R29)
366 [-]: TEST      R28 1        ; if R28 then PC := 405
367 [-]: JMP       405          ; PC := 405
368 [-]: NEWTABLE  R28 0 3      ; R28 := {}
369 [-]: GETTABLE  R29 R0 K69   ; R29 := R0["decoOffset"]
370 [-]: SETTABLE  R28 K89 R29  ; R28["mOffset"] := R29
371 [-]: GETTABLE  R29 R0 K56   ; R29 := R0["decoRotation"]
372 [-]: SETTABLE  R28 K90 R29  ; R28["mRotation"] := R29
373 [-]: GETTABLE  R29 R0 K65   ; R29 := R0["scale"]
374 [-]: SETTABLE  R28 K91 R29  ; R28["mScale"] := R29
375 [-]: MOVE      R27 R28      ; R27 := R28
376 [-]: GETGLOBAL R28 K93      ; R28 := gBackgroundRegion
377 [-]: SELF      R28 R28 K94  ; R29 := R28; R28 := R28["0xBDD34CC6"]
378 [-]: GETGLOBAL R30 K95      ; R30 := 0xCAA43ABB
379 [-]: GETTABLE  R31 R0 K24   ; R31 := R0["deco"]
380 [-]: CALL      R30 2 2      ; R30 := R30(R31)
381 [-]: GETTABLE  R31 R27 K89  ; R31 := R27["mOffset"]
382 [-]: ADD       R31 R13 R31  ; R31 := R13 + R31
383 [-]: GETTABLE  R32 R27 K90  ; R32 := R27["mRotation"]
384 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
385 [-]: SETTABLE  R27 K92 R28  ; R27["mInstance"] := R28
386 [-]: GETGLOBAL R28 K1       ; R28 := 0x400E7765
387 [-]: GETTABLE  R29 R27 K92  ; R29 := R27["mInstance"]
388 [-]: CALL      R28 2 2      ; R28 := R28(R29)
389 [-]: TEST      R28 1        ; if R28 then PC := 405
390 [-]: JMP       405          ; PC := 405
391 [-]: GETTABLE  R28 R27 K91  ; R28 := R27["mScale"]
392 [-]: GETTABLE  R29 R27 K92  ; R29 := R27["mInstance"]
393 [-]: SELF      R29 R29 K96  ; R30 := R29; R29 := R29["0x6A7E5F92"]
394 [-]: GETUPVAL  R31 U9       ; R31 := U9
395 [-]: GETTABLE  R31 R31 K97  ; R31 := R31["DECO_SCALE_MULTIPLIER"]
396 [-]: MUL       R31 R28 R31  ; R31 := R28 * R31
397 [-]: MOVE      R32 R1       ; R32 := R1
398 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
399 [-]: TEST      R14 0        ; if not R14 then PC := 405
400 [-]: JMP       405          ; PC := 405
401 [-]: GETTABLE  R29 R27 K92  ; R29 := R27["mInstance"]
402 [-]: SELF      R29 R29 K98  ; R30 := R29; R29 := R29["0x8A42F754"]
403 [-]: MOVE      R31 R14      ; R31 := R14
404 [-]: CALL      R29 3 1      ; R29(R30,R31)
405 [-]: GETGLOBAL R29 K72      ; R29 := _T
406 [-]: GETTABLE  R29 R29 K99  ; R29 := R29["CachedActiveMissions"]
407 [-]: TEST      R29 0        ; if not R29 then PC := 420
408 [-]: JMP       420          ; PC := 420
409 [-]: GETGLOBAL R29 K72      ; R29 := _T
410 [-]: GETTABLE  R29 R29 K99  ; R29 := R29["CachedActiveMissions"]
411 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
412 [-]: TEST      R29 0        ; if not R29 then PC := 420
413 [-]: JMP       420          ; PC := 420
414 [-]: GETGLOBAL R29 K72      ; R29 := _T
415 [-]: GETTABLE  R29 R29 K99  ; R29 := R29["CachedActiveMissions"]
416 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
417 [-]: GETTABLE  R29 R29 K100 ; R29 := R29["mVisible"]
418 [-]: TEST      R29 1        ; if R29 then PC := 480
419 [-]: JMP       480          ; PC := 480
420 [-]: GETGLOBAL R29 K44      ; R29 := _G
421 [-]: GETTABLE  R29 R29 K45  ; R29 := R29["CachedGoalInfo"]
422 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
423 [-]: TEST      R29 1        ; if R29 then PC := 480
424 [-]: JMP       480          ; PC := 480
425 [-]: GETGLOBAL R29 K72      ; R29 := _T
426 [-]: GETTABLE  R29 R29 K101 ; R29 := R29["CachedAlerts"]
427 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
428 [-]: TEST      R29 0        ; if not R29 then PC := 436
429 [-]: JMP       436          ; PC := 436
430 [-]: GETGLOBAL R29 K72      ; R29 := _T
431 [-]: GETTABLE  R29 R29 K101 ; R29 := R29["CachedAlerts"]
432 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
433 [-]: GETTABLE  R29 R29 K100 ; R29 := R29["mVisible"]
434 [-]: TEST      R29 1        ; if R29 then PC := 480
435 [-]: JMP       480          ; PC := 480
436 [-]: GETGLOBAL R29 K72      ; R29 := _T
437 [-]: GETTABLE  R29 R29 K102 ; R29 := R29["CachedInvasionInfo"]
438 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
439 [-]: TEST      R29 1        ; if R29 then PC := 480
440 [-]: JMP       480          ; PC := 480
441 [-]: GETGLOBAL R29 K72      ; R29 := _T
442 [-]: GETTABLE  R29 R29 K103 ; R29 := R29["CachedSyndicateMissions"]
443 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
444 [-]: TEST      R29 0        ; if not R29 then PC := 452
445 [-]: JMP       452          ; PC := 452
446 [-]: GETGLOBAL R29 K72      ; R29 := _T
447 [-]: GETTABLE  R29 R29 K103 ; R29 := R29["CachedSyndicateMissions"]
448 [-]: GETTABLE  R29 R29 R15  ; R29 := R29[R15]
449 [-]: GETTABLE  R29 R29 K100 ; R29 := R29["mVisible"]
450 [-]: TEST      R29 1        ; if R29 then PC := 480
451 [-]: JMP       480          ; PC := 480
452 [-]: GETTABLE  R29 R0 K40   ; R29 := R0["nodeType"]
453 [-]: GETGLOBAL R30 K18      ; R30 := Lotus_Game
454 [-]: GETTABLE  R30 R30 K104 ; R30 := R30["NT_HUB"]
455 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 479
456 [-]: JMP       479          ; PC := 479
457 [-]: GETGLOBAL R29 K1       ; R29 := 0x400E7765
458 [-]: GETTABLE  R30 R0 K2    ; R30 := R0["mission"]
459 [-]: GETTABLE  R30 R30 K105 ; R30 := R30["levelKeyName"]
460 [-]: CALL      R29 2 2      ; R29 := R29(R30)
461 [-]: TEST      R29 0        ; if not R29 then PC := 479
462 [-]: JMP       479          ; PC := 479
463 [-]: GETGLOBAL R29 K1       ; R29 := 0x400E7765
464 [-]: GETTABLE  R30 R0 K106  ; R30 := R0["keyChain"]
465 [-]: CALL      R29 2 2      ; R29 := R29(R30)
466 [-]: TEST      R29 0        ; if not R29 then PC := 479
467 [-]: JMP       479          ; PC := 479
468 [-]: GETTABLE  R29 R0 K40   ; R29 := R0["nodeType"]
469 [-]: GETGLOBAL R30 K18      ; R30 := Lotus_Game
470 [-]: GETTABLE  R30 R30 K107 ; R30 := R30["NT_SHORTCUT"]
471 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 479
472 [-]: JMP       479          ; PC := 479
473 [-]: GETTABLE  R29 R0 K40   ; R29 := R0["nodeType"]
474 [-]: GETGLOBAL R30 K18      ; R30 := Lotus_Game
475 [-]: GETTABLE  R30 R30 K108 ; R30 := R30["NT_JUNCTION"]
476 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 479
477 [-]: JMP       479          ; PC := 479
478 [-]: MOVE      R29 R0       ; R29 := R0
479 [-]: MOVE      R29 R1       ; R29 := R1
480 [-]: GETGLOBAL R30 K72      ; R30 := _T
481 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["CachedNemesisMissions"]
482 [-]: GETTABLE  R30 R30 R15  ; R30 := R30[R15]
483 [-]: TEST      R30 0        ; if not R30 then PC := 499
484 [-]: JMP       499          ; PC := 499
485 [-]: GETGLOBAL R30 K72      ; R30 := _T
486 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["CachedNemesisMissions"]
487 [-]: GETTABLE  R30 R30 R15  ; R30 := R30[R15]
488 [-]: GETTABLE  R30 R30 K110 ; R30 := R30["attackType"]
489 [-]: TEST      R30 0        ; if not R30 then PC := 499
490 [-]: JMP       499          ; PC := 499
491 [-]: GETGLOBAL R30 K72      ; R30 := _T
492 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["CachedNemesisMissions"]
493 [-]: GETTABLE  R30 R30 R15  ; R30 := R30[R15]
494 [-]: GETTABLE  R30 R30 K110 ; R30 := R30["attackType"]
495 [-]: EQ        1 R30 K111   ; if R30 == "Blockade" then PC := 498
496 [-]: JMP       498          ; PC := 498
497 [-]: MOVE      R30 R0       ; R30 := R0
498 [-]: MOVE      R30 R1       ; R30 := R1
499 [-]: GETGLOBAL R31 K80      ; R31 := mMovie
500 [-]: SELF      R31 R31 K112 ; R32 := R31; R31 := R31["0x5DB0BD4"]
501 [-]: GETTABLE  R33 R0 K113  ; R33 := R0["locTag"]
502 [-]: SELF      R33 R33 K28  ; R34 := R33; R33 := R33["0x5EC7A3D2"]
503 [-]: CALL      R33 2 2      ; R33 := R33(R34)
504 [-]: MOVE      R34 R1       ; R34 := R1
505 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
506 [-]: TEST      R5 0         ; if not R5 then PC := 521
507 [-]: JMP       521          ; PC := 521
508 [-]: LT        0 K13 R5     ; if 0 >= R5 then PC := 521
509 [-]: JMP       521          ; PC := 521
510 [-]: EQ        0 R5 K33     ; if R5 ~= 1 then PC := 541
511 [-]: JMP       541          ; PC := 541
512 [-]: GETGLOBAL R32 K80      ; R32 := mMovie
513 [-]: SELF      R32 R32 K112 ; R33 := R32; R32 := R32["0x5DB0BD4"]
514 [-]: LOADK     R34 K114     ; R34 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
515 [-]: MOVE      R35 R0       ; R35 := R0
516 [-]: NEWTABLE  R36 0 1      ; R36 := {}
517 [-]: SETTABLE  R36 K115 R31 ; R36["LOCATION"] := R31
518 [-]: CALL      R32 5 2      ; R32 := R32(R33,R34,R35,R36)
519 [-]: MOVE      R31 R32      ; R31 := R32
520 [-]: JMP       541          ; PC := 541
521 [-]: GETGLOBAL R32 K44      ; R32 := _G
522 [-]: GETTABLE  R32 R32 K45  ; R32 := R32["CachedGoalInfo"]
523 [-]: GETTABLE  R33 R0 K7    ; R33 := R0["name"]
524 [-]: SELF      R33 R33 K28  ; R34 := R33; R33 := R33["0x5EC7A3D2"]
525 [-]: CALL      R33 2 2      ; R33 := R33(R34)
526 [-]: GETTABLE  R32 R32 R33  ; R32 := R32[R33]
527 [-]: TEST      R32 0        ; if not R32 then PC := 541
528 [-]: JMP       541          ; PC := 541
529 [-]: GETGLOBAL R32 K80      ; R32 := mMovie
530 [-]: SELF      R32 R32 K112 ; R33 := R32; R32 := R32["0x5DB0BD4"]
531 [-]: GETGLOBAL R34 K44      ; R34 := _G
532 [-]: GETTABLE  R34 R34 K45  ; R34 := R34["CachedGoalInfo"]
533 [-]: GETTABLE  R35 R0 K7    ; R35 := R0["name"]
534 [-]: SELF      R35 R35 K28  ; R36 := R35; R35 := R35["0x5EC7A3D2"]
535 [-]: CALL      R35 2 2      ; R35 := R35(R36)
536 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
537 [-]: GETTABLE  R34 R34 K116 ; R34 := R34["mDesc"]
538 [-]: MOVE      R35 R1       ; R35 := R1
539 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
540 [-]: MOVE      R31 R32      ; R31 := R32
541 [-]: TEST      R30 0        ; if not R30 then PC := 556
542 [-]: JMP       556          ; PC := 556
543 [-]: MOVE      R32 R31      ; R32 := R31
544 [-]: LOADK     R33 K117     ; R33 := " ("
545 [-]: GETGLOBAL R34 K80      ; R34 := mMovie
546 [-]: SELF      R34 R34 K112 ; R35 := R34; R34 := R34["0x5DB0BD4"]
547 [-]: GETGLOBAL R36 K72      ; R36 := _T
548 [-]: GETTABLE  R36 R36 K109 ; R36 := R36["CachedNemesisMissions"]
549 [-]: GETTABLE  R36 R36 R15  ; R36 := R36[R15]
550 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["mMissionInfo"]
551 [-]: GETTABLE  R36 R36 K119 ; R36 := R36["uniqueName"]
552 [-]: MOVE      R37 R0       ; R37 := R0
553 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
554 [-]: LOADK     R35 K120     ; R35 := ")"
555 [-]: CONCAT    R31 R32 R35  ; R31 := R32 .. R33 .. R34 .. R35
556 [-]: NEWTABLE  R32 0 20     ; R32 := {}
557 [-]: GETTABLE  R33 R0 K7    ; R33 := R0["name"]
558 [-]: SETTABLE  R32 K7 R33   ; R32["name"] := R33
559 [-]: GETGLOBAL R33 K29      ; R33 := string
560 [-]: GETTABLE  R33 R33 K122 ; R33 := R33["0x639C642A"]
561 [-]: MOVE      R34 R31      ; R34 := R31
562 [-]: CALL      R33 2 2      ; R33 := R33(R34)
563 [-]: SETTABLE  R32 K121 R33 ; R32["locName"] := R33
564 [-]: SETTABLE  R32 K123 R25 ; R32["memberIndex"] := R25
565 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
566 [-]: SELF      R33 R33 K81  ; R34 := R33; R33 := R33["0xA7FE5515"]
567 [-]: MOVE      R35 R24      ; R35 := R24
568 [-]: LOADK     R36 K125     ; R36 := ".Name"
569 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
570 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
571 [-]: SETTABLE  R32 K124 R33 ; R32["labelIndex"] := R33
572 [-]: SETTABLE  R32 K126 R26 ; R32["nodeIndex"] := R26
573 [-]: SETTABLE  R32 K127 R24 ; R32["clipName"] := R24
574 [-]: SETTABLE  R32 K128 R13 ; R32["position"] := R13
575 [-]: SETTABLE  R32 K24 R27  ; R32["deco"] := R27
576 [-]: SETTABLE  R32 K129 R0  ; R32["radialSector"] := R0
577 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
578 [-]: GETGLOBAL R34 K18      ; R34 := Lotus_Game
579 [-]: GETTABLE  R34 R34 K107 ; R34 := R34["NT_SHORTCUT"]
580 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 583
581 [-]: JMP       583          ; PC := 583
582 [-]: MOVE      R33 R0       ; R33 := R0
583 [-]: MOVE      R33 R1       ; R33 := R1
584 [-]: SETTABLE  R32 K130 R33 ; R32["isShortcut"] := R33
585 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
586 [-]: GETGLOBAL R34 K18      ; R34 := Lotus_Game
587 [-]: GETTABLE  R34 R34 K108 ; R34 := R34["NT_JUNCTION"]
588 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 591
589 [-]: JMP       591          ; PC := 591
590 [-]: MOVE      R33 R0       ; R33 := R0
591 [-]: MOVE      R33 R1       ; R33 := R1
592 [-]: SETTABLE  R32 K131 R33 ; R32["isJunction"] := R33
593 [-]: SETTABLE  R32 K132 R5  ; R32["reconstructionProgress"] := R5
594 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
595 [-]: GETGLOBAL R34 K18      ; R34 := Lotus_Game
596 [-]: GETTABLE  R34 R34 K134 ; R34 := R34["NT_EMPTY"]
597 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 600
598 [-]: JMP       600          ; PC := 600
599 [-]: MOVE      R33 R0       ; R33 := R0
600 [-]: MOVE      R33 R1       ; R33 := R1
601 [-]: SETTABLE  R32 K133 R33 ; R32["isEmpty"] := R33
602 [-]: SETTABLE  R32 K135 R29 ; R32["isActiveMission"] := R29
603 [-]: SETTABLE  R32 K136 R30 ; R32["isBlockaded"] := R30
604 [-]: GETTABLE  R33 R0 K137  ; R33 := R0["isCriticalPath"]
605 [-]: SETTABLE  R32 K137 R33 ; R32["isCriticalPath"] := R33
606 [-]: SETTABLE  R32 K138 R3  ; R32["locationEnabled"] := R3
607 [-]: GETTABLE  R33 R0 K139  ; R33 := R0["missionsCompleted"]
608 [-]: SETTABLE  R32 K139 R33 ; R32["missionsCompleted"] := R33
609 [-]: GETTABLE  R33 R0 K140  ; R33 := R0["difficultyUnlocked"]
610 [-]: SETTABLE  R32 K140 R33 ; R32["difficultyUnlocked"] := R33
611 [-]: GETTABLE  R33 R1 K141  ; R33 := R1["guildId"]
612 [-]: SETTABLE  R32 K141 R33 ; R32["guildId"] := R33
613 [-]: GETTABLE  R33 R1 K142  ; R33 := R1["clanTier"]
614 [-]: SETTABLE  R32 K142 R33 ; R32["clanTier"] := R33
615 [-]: GETTABLE  R33 R1 K143  ; R33 := R1["overrideIconSize"]
616 [-]: SETTABLE  R32 K143 R33 ; R32["overrideIconSize"] := R33
617 [-]: GETTABLE  R33 R0 K40   ; R33 := R0["nodeType"]
618 [-]: SETTABLE  R32 K40 R33  ; R32["nodeType"] := R33
619 [-]: TEST      R2 0         ; if not R2 then PC := 622
620 [-]: JMP       622          ; PC := 622
621 [-]: SETTABLE  R32 K144 K145; R32["edgesLocked"] := "0x1"
622 [-]: GETTABLE  R33 R32 K7   ; R33 := R32["name"]
623 [-]: GETUPVAL  R34 U2       ; R34 := U2
624 [-]: GETTABLE  R34 R34 K146 ; R34 := R34["SCENARIO_EVENT_HUB_TAG"]
625 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 628
626 [-]: JMP       628          ; PC := 628
627 [-]: SETTABLE  R32 K147 K145; R32["isFlotilla"] := "0x1"
628 [-]: GETGLOBAL R33 K148     ; R33 := table
629 [-]: GETTABLE  R33 R33 K149 ; R33 := R33["0xE6450C9D"]
630 [-]: GETUPVAL  R34 U8       ; R34 := U8
631 [-]: MOVE      R35 R32      ; R35 := R32
632 [-]: CALL      R33 3 1      ; R33(R34,R35)
633 [-]: GETUPVAL  R33 U10      ; R33 := U10
634 [-]: GETGLOBAL R34 K43      ; R34 := 0x9FAED6BC
635 [-]: GETTABLE  R35 R32 K7   ; R35 := R32["name"]
636 [-]: CALL      R34 2 2      ; R34 := R34(R35)
637 [-]: GETUPVAL  R35 U8       ; R35 := U8
638 [-]: GETUPVAL  R36 U8       ; R36 := U8
639 [-]: LEN       R36 R36      ; R36 := # R36
640 [-]: GETTABLE  R35 R35 R36  ; R35 := R35[R36]
641 [-]: SETTABLE  R33 R34 R35  ; R33[R34] := R35
642 [-]: GETUPVAL  R33 U8       ; R33 := U8
643 [-]: LEN       R33 R33      ; R33 := # R33
644 [-]: SETTABLE  R32 K150 R33 ; R32["id"] := R33
645 [-]: GETUPVAL  R33 U11      ; R33 := U11
646 [-]: MOVE      R34 R32      ; R34 := R32
647 [-]: CALL      R33 2 2      ; R33 := R33(R34)
648 [-]: SETTABLE  R32 K151 R33 ; R32["isSurfaceNode"] := R33
649 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
650 [-]: SELF      R33 R33 K152 ; R34 := R33; R33 := R33["0x1C19D966"]
651 [-]: MOVE      R35 R24      ; R35 := R24
652 [-]: LOADK     R36 K153     ; R36 := "Id"
653 [-]: GETTABLE  R37 R32 K150 ; R37 := R32["id"]
654 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
655 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
656 [-]: SELF      R33 R33 K152 ; R34 := R33; R33 := R33["0x1C19D966"]
657 [-]: MOVE      R35 R24      ; R35 := R24
658 [-]: LOADK     R36 K154     ; R36 := "RollOverCallback"
659 [-]: LOADK     R37 K155     ; R37 := "NodeRollOver"
660 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
661 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
662 [-]: SELF      R33 R33 K152 ; R34 := R33; R33 := R33["0x1C19D966"]
663 [-]: MOVE      R35 R24      ; R35 := R24
664 [-]: LOADK     R36 K156     ; R36 := "RollOutCallback"
665 [-]: LOADK     R37 K157     ; R37 := "NodeRollOut"
666 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
667 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
668 [-]: SELF      R33 R33 K152 ; R34 := R33; R33 := R33["0x1C19D966"]
669 [-]: MOVE      R35 R24      ; R35 := R24
670 [-]: LOADK     R36 K158     ; R36 := "SelectCallback"
671 [-]: LOADK     R37 K159     ; R37 := "NodeSelect"
672 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
673 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
674 [-]: SELF      R33 R33 K86  ; R34 := R33; R33 := R33["0x880196A7"]
675 [-]: MOVE      R35 R24      ; R35 := R24
676 [-]: LOADK     R36 K160     ; R36 := "Btn"
677 [-]: LOADK     R37 K161     ; R37 := "_width"
678 [-]: LOADK     R38 K162     ; R38 := 48
679 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
680 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
681 [-]: SELF      R33 R33 K86  ; R34 := R33; R33 := R33["0x880196A7"]
682 [-]: MOVE      R35 R24      ; R35 := R24
683 [-]: LOADK     R36 K160     ; R36 := "Btn"
684 [-]: LOADK     R37 K163     ; R37 := "_height"
685 [-]: LOADK     R38 K164     ; R38 := 32
686 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
687 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
688 [-]: SELF      R33 R33 K165 ; R34 := R33; R33 := R33["0x445651FB"]
689 [-]: GETTABLE  R35 R32 K123 ; R35 := R32["memberIndex"]
690 [-]: LOADK     R36 K166     ; R36 := "_alpha"
691 [-]: LOADK     R37 K13      ; R37 := 0
692 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
693 [-]: GETGLOBAL R33 K80      ; R33 := mMovie
694 [-]: SELF      R33 R33 K165 ; R34 := R33; R33 := R33["0x445651FB"]
695 [-]: GETTABLE  R35 R32 K124 ; R35 := R32["labelIndex"]
696 [-]: LOADK     R36 K166     ; R36 := "_alpha"
697 [-]: GETUPVAL  R37 U12      ; R37 := U12
698 [-]: MOVE      R38 R32      ; R38 := R32
699 [-]: CALL      R37 2 0      ; R37,... := R37(R38)
700 [-]: CALL      R33 0 1      ; R33(R34,...)
701 [-]: GETGLOBAL R33 K44      ; R33 := _G
702 [-]: GETTABLE  R33 R33 K167 ; R33 := R33["StalkerMode"]
703 [-]: TEST      R33 0        ; if not R33 then PC := 729
704 [-]: JMP       729          ; PC := 729
705 [-]: GETUPVAL  R33 U2       ; R33 := U2
706 [-]: GETTABLE  R33 R33 K168 ; R33 := R33["0xE4E5932F"]
707 [-]: MOVE      R34 R15      ; R34 := R15
708 [-]: GETUPVAL  R35 U6       ; R35 := U6
709 [-]: MOVE      R36 R0       ; R36 := R0
710 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
711 [-]: GETGLOBAL R34 K80      ; R34 := mMovie
712 [-]: SELF      R34 R34 K152 ; R35 := R34; R34 := R34["0x1C19D966"]
713 [-]: MOVE      R36 R24      ; R36 := R24
714 [-]: LOADK     R37 K169     ; R37 := "_visible"
715 [-]: GETUPVAL  R38 U13      ; R38 := U13
716 [-]: EQ        1 R38 K0     ; if R38 == nil then PC := 726
717 [-]: JMP       726          ; PC := 726
718 [-]: GETUPVAL  R38 U13      ; R38 := U13
719 [-]: GETTABLE  R38 R38 R33  ; R38 := R38[R33]
720 [-]: TEST      R38 0        ; if not R38 then PC := 728
721 [-]: JMP       728          ; PC := 728
722 [-]: GETUPVAL  R38 U13      ; R38 := U13
723 [-]: GETTABLE  R38 R38 R33  ; R38 := R38[R33]
724 [-]: LT        1 K13 R38    ; if 0 < R38 then PC := 727
725 [-]: JMP       727          ; PC := 727
726 [-]: MOVE      R38 R0       ; R38 := R0
727 [-]: MOVE      R38 R1       ; R38 := R1
728 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
729 [-]: RETURN    R32 2        ; return R32
730 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2733
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["radialSector"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SETTABLE  R0 K0 R1     ; R0["completed"] := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: SETTABLE  R0 K2 R1     ; R0["locked"] := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETTABLE  R0 K3 R1     ; R0["icon"] := R1
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 15 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["completed"]
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["isActiveMission"]
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["notificationClip"]
 28 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: SETTABLE  R0 K6 K9     ; R0["special"] := nil
 31 [-]: GETGLOBAL R1 K10       ; R1 := nodeLockedTexture
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: LOADK     R3 K11       ; R3 := 56
 34 [-]: GETGLOBAL R4 K12       ; R4 := 0x9FAED6BC
 35 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["name"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K14       ; R5 := _T
 38 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["CachedSkullNodes"]
 39 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 40 [-]: TEST      R5 1         ; if R5 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R5 K14       ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 44 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 66
 46 [-]: JMP       66           ; PC := 66
 47 [-]: GETGLOBAL R5 K14       ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 49 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 50 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["mAlertInfo"]
 51 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mMissionInfo"]
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["nightmare"]
 53 [-]: TEST      R5 0         ; if not R5 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETUPVAL  R5 U3        ; R5 := U3
 56 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 57 [-]: TEST      R5 0         ; if not R5 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETUPVAL  R5 U3        ; R5 := U3
 60 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 61 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["IsQuest"]
 62 [-]: MOVE      R5 R5        ; R5 := R5
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: MOVE      R5 R1        ; R5 := R1
 66 [-]: GETGLOBAL R6 K21       ; R6 := _G
 67 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 68 [-]: TEST      R6 0         ; if not R6 then PC := 105
 69 [-]: JMP       105          ; PC := 105
 70 [-]: GETGLOBAL R6 K21       ; R6 := _G
 71 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 72 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 73 [-]: TEST      R6 0         ; if not R6 then PC := 105
 74 [-]: JMP       105          ; PC := 105
 75 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 76 [-]: GETGLOBAL R7 K21       ; R7 := _G
 77 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["CachedGoalInfo"]
 78 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 79 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mIcon"]
 80 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 81 [-]: TEST      R6 1         ; if R6 then PC := 105
 82 [-]: JMP       105          ; PC := 105
 83 [-]: GETGLOBAL R6 K24       ; R6 := string
 84 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["0xDE44F664"]
 85 [-]: GETGLOBAL R7 K12       ; R7 := 0x9FAED6BC
 86 [-]: GETGLOBAL R8 K21       ; R8 := _G
 87 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["CachedGoalInfo"]
 88 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 89 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["mTag"]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: LOADK     R8 K27       ; R8 := "Halloween"
 92 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 93 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
 96 [-]: LOADK     R3 K29       ; R3 := 0
 97 [-]: JMP       194          ; PC := 194
 98 [-]: GETGLOBAL R1 K30       ; R1 := nodeSpecialTexture
 99 [-]: GETGLOBAL R6 K21       ; R6 := _G
100 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
101 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
102 [-]: GETTABLE  R2 R6 K23    ; R2 := R6["mIcon"]
103 [-]: LOADK     R3 K31       ; R3 := 90
104 [-]: JMP       194          ; PC := 194
105 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
106 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["icon"]
107 [-]: CALL      R6 2 2       ; R6 := R6(R7)
108 [-]: TEST      R6 1         ; if R6 then PC := 132
109 [-]: JMP       132          ; PC := 132
110 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
111 [-]: TEST      R6 0         ; if not R6 then PC := 132
112 [-]: JMP       132          ; PC := 132
113 [-]: GETUPVAL  R6 U4        ; R6 := U4
114 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["0xF81722A2"]
115 [-]: MOVE      R7 R5        ; R7 := R5
116 [-]: GETGLOBAL R8 K33       ; R8 := nodeNightmareTexture
117 [-]: GETGLOBAL R9 K30       ; R9 := nodeSpecialTexture
118 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
119 [-]: MOVE      R1 R6        ; R1 := R6
120 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
121 [-]: LOADK     R3 K34       ; R3 := 84
122 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
123 [-]: TEST      R6 0         ; if not R6 then PC := 194
124 [-]: JMP       194          ; PC := 194
125 [-]: GETGLOBAL R6 K35       ; R6 := table
126 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
127 [-]: GETUPVAL  R7 U5        ; R7 := U5
128 [-]: NEWTABLE  R8 0 1       ; R8 := {}
129 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
130 [-]: CALL      R6 3 1       ; R6(R7,R8)
131 [-]: JMP       194          ; PC := 194
132 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["isJunction"]
133 [-]: TEST      R6 0         ; if not R6 then PC := 156
134 [-]: JMP       156          ; PC := 156
135 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
136 [-]: TEST      R6 0         ; if not R6 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETGLOBAL R1 K39       ; R1 := junctionLockedTexture
139 [-]: LOADK     R3 K40       ; R3 := 70
140 [-]: JMP       154          ; PC := 154
141 [-]: LOADK     R3 K31       ; R3 := 90
142 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
143 [-]: TEST      R6 0         ; if not R6 then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: GETGLOBAL R1 K41       ; R1 := junctionUnlockedTexture
146 [-]: JMP       154          ; PC := 154
147 [-]: GETGLOBAL R1 K42       ; R1 := junctionNextMissionTexture
148 [-]: GETGLOBAL R6 K35       ; R6 := table
149 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
150 [-]: GETUPVAL  R7 U6        ; R7 := U6
151 [-]: NEWTABLE  R8 0 1       ; R8 := {}
152 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
153 [-]: CALL      R6 3 1       ; R6(R7,R8)
154 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
155 [-]: JMP       194          ; PC := 194
156 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
157 [-]: TEST      R6 1         ; if R6 then PC := 190
158 [-]: JMP       190          ; PC := 190
159 [-]: GETTABLE  R6 R0 K43    ; R6 := R0["displayMissionOverride"]
160 [-]: TEST      R6 1         ; if R6 then PC := 190
161 [-]: JMP       190          ; PC := 190
162 [-]: GETUPVAL  R6 U7        ; R6 := U7
163 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 168
164 [-]: JMP       168          ; PC := 168
165 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
166 [-]: TEST      R6 0         ; if not R6 then PC := 190
167 [-]: JMP       190          ; PC := 190
168 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
169 [-]: TEST      R6 1         ; if R6 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
172 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
173 [-]: TEST      R6 0         ; if not R6 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: GETGLOBAL R6 K21       ; R6 := _G
176 [-]: GETTABLE  R1 R6 K44    ; R1 := R6["UITexture_Story"]
177 [-]: JMP       194          ; PC := 194
178 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
179 [-]: TEST      R6 1         ; if R6 then PC := 194
180 [-]: JMP       194          ; PC := 194
181 [-]: LOADK     R3 K45       ; R3 := 120
182 [-]: GETGLOBAL R1 K46       ; R1 := nodeNextMissionTexture
183 [-]: GETGLOBAL R6 K35       ; R6 := table
184 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
185 [-]: GETUPVAL  R7 U6        ; R7 := U6
186 [-]: NEWTABLE  R8 0 1       ; R8 := {}
187 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
188 [-]: CALL      R6 3 1       ; R6(R7,R8)
189 [-]: JMP       194          ; PC := 194
190 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
191 [-]: TEST      R6 1         ; if R6 then PC := 194
192 [-]: JMP       194          ; PC := 194
193 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
194 [-]: GETTABLE  R6 R0 K47    ; R6 := R0["guildId"]
195 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 220
196 [-]: JMP       220          ; PC := 220
197 [-]: GETTABLE  R6 R0 K48    ; R6 := R0["clanTier"]
198 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 220
199 [-]: JMP       220          ; PC := 220
200 [-]: GETGLOBAL R6 K49       ; R6 := clanTierIcons
201 [-]: GETTABLE  R7 R0 K48    ; R7 := R0["clanTier"]
202 [-]: GETTABLE  R2 R6 R7     ; R2 := R6[R7]
203 [-]: GETGLOBAL R6 K21       ; R6 := _G
204 [-]: GETTABLE  R1 R6 K50    ; R1 := R6["UITexture_CircleGradientBacker"]
205 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
206 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
207 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
208 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
209 [-]: LOADK     R10 K55      ; R10 := "_color"
210 [-]: LOADK     R11 K56      ; R11 := 65518
211 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
212 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
213 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
214 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
215 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
216 [-]: LOADK     R10 K57      ; R10 := "_alpha"
217 [-]: LOADK     R11 K29      ; R11 := 0
218 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
219 [-]: JMP       223          ; PC := 223
220 [-]: EQ        0 R4 K58     ; if R4 ~= "SolNode332" then PC := 223
221 [-]: JMP       223          ; PC := 223
222 [-]: LOADK     R3 K45       ; R3 := 120
223 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["isActiveMission"]
224 [-]: SETTABLE  R0 K59 R6    ; R0["visibleLabel"] := R6
225 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
226 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
227 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
228 [-]: LOADK     R9 K60       ; R9 := "Node.Container.Highlight"
229 [-]: LOADK     R10 K61      ; R10 := "_visible"
230 [-]: GETTABLE  R11 R0 K2    ; R11 := R0["locked"]
231 [-]: TEST      R11 1        ; if R11 then PC := 236
232 [-]: JMP       236          ; PC := 236
233 [-]: GETTABLE  R11 R0 K0    ; R11 := R0["completed"]
234 [-]: MOVE      R11 R11      ; R11 := R11
235 [-]: JMP       238          ; PC := 238
236 [-]: MOVE      R11 R0       ; R11 := R0
237 [-]: MOVE      R11 R1       ; R11 := R1
238 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
239 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
240 [-]: SELF      R6 R6 K62    ; R7 := R6; R6 := R6["0x26581636"]
241 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
242 [-]: LOADK     R9 K63       ; R9 := ".Node.Container.Node"
243 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
244 [-]: MOVE      R9 R1        ; R9 := R1
245 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
246 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
247 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
248 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
249 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
250 [-]: LOADK     R10 K64      ; R10 := "_width"
251 [-]: MOVE      R11 R3       ; R11 := R3
252 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
253 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
254 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
255 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
256 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
257 [-]: LOADK     R10 K65      ; R10 := "_height"
258 [-]: MOVE      R11 R3       ; R11 := R3
259 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
260 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
261 [-]: TEST      R6 0         ; if not R6 then PC := 266
262 [-]: JMP       266          ; PC := 266
263 [-]: GETTABLE  R6 R0 K66    ; R6 := R0["forceHover"]
264 [-]: TEST      R6 0         ; if not R6 then PC := 282
265 [-]: JMP       282          ; PC := 282
266 [-]: GETGLOBAL R6 K14       ; R6 := _T
267 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
268 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 281
269 [-]: JMP       281          ; PC := 281
270 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["radialSector"]
271 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 280
272 [-]: JMP       280          ; PC := 280
273 [-]: GETGLOBAL R6 K14       ; R6 := _T
274 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
275 [-]: GETTABLE  R6 R6 K68    ; R6 := R6["baseNodeName"]
276 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["radialSector"]
277 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["name"]
278 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 281
279 [-]: JMP       281          ; PC := 281
280 [-]: MOVE      R6 R0        ; R6 := R0
281 [-]: MOVE      R6 R1        ; R6 := R1
282 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
283 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
284 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
285 [-]: LOADK     R10 K70      ; R10 := "enabled"
286 [-]: MOVE      R11 R6       ; R11 := R6
287 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
288 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
289 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7["0x26581636"]
290 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
291 [-]: LOADK     R10 K71      ; R10 := ".Node.Container.Icon"
292 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
293 [-]: MOVE      R10 R2       ; R10 := R2
294 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
295 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
296 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
297 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
298 [-]: LOADK     R10 K72      ; R10 := "Node.Container.Icon"
299 [-]: LOADK     R11 K61      ; R11 := "_visible"
300 [-]: GETGLOBAL R12 K4       ; R12 := 0x400E7765
301 [-]: MOVE      R13 R2       ; R13 := R2
302 [-]: CALL      R12 2 2      ; R12 := R12(R13)
303 [-]: MOVE      R12 R12      ; R12 := R12
304 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
305 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["special"]
306 [-]: TEST      R7 0         ; if not R7 then PC := 314
307 [-]: JMP       314          ; PC := 314
308 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
309 [-]: SELF      R7 R7 K73    ; R8 := R7; R7 := R7["0x445651FB"]
310 [-]: GETTABLE  R9 R0 K74    ; R9 := R0["nodeIndex"]
311 [-]: LOADK     R10 K57      ; R10 := "_alpha"
312 [-]: LOADK     R11 K75      ; R11 := 100
313 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
314 [-]: GETTABLE  R7 R0 K76    ; R7 := R0["locationEnabled"]
315 [-]: TEST      R7 1         ; if R7 then PC := 324
316 [-]: JMP       324          ; PC := 324
317 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
318 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
319 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
320 [-]: LOADK     R10 K37      ; R10 := "Node"
321 [-]: LOADK     R11 K61      ; R11 := "_visible"
322 [-]: MOVE      R12 R0       ; R12 := R0
323 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
324 [-]: GETTABLE  R7 R0 K77    ; R7 := R0["isEmpty"]
325 [-]: TEST      R7 1         ; if R7 then PC := 334
326 [-]: JMP       334          ; PC := 334
327 [-]: GETUPVAL  R7 U8        ; R7 := U8
328 [-]: GETTABLE  R7 R7 K78    ; R7 := R7["Active"]
329 [-]: TEST      R7 0         ; if not R7 then PC := 340
330 [-]: JMP       340          ; PC := 340
331 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["locked"]
332 [-]: TEST      R7 0         ; if not R7 then PC := 340
333 [-]: JMP       340          ; PC := 340
334 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
335 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
336 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
337 [-]: LOADK     R10 K61      ; R10 := "_visible"
338 [-]: MOVE      R11 R0       ; R11 := R0
339 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
340 [-]: GETTABLE  R7 R0 K79    ; R7 := R0["isFlotilla"]
341 [-]: TEST      R7 0         ; if not R7 then PC := 349
342 [-]: JMP       349          ; PC := 349
343 [-]: GETGLOBAL R7 K35       ; R7 := table
344 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["0xE6450C9D"]
345 [-]: GETUPVAL  R8 U6        ; R8 := U6
346 [-]: NEWTABLE  R9 0 1       ; R9 := {}
347 [-]: SETTABLE  R9 K37 R0    ; R9["Node"] := R0
348 [-]: CALL      R7 3 1       ; R7(R8,R9)
349 [-]: GETUPVAL  R7 U9        ; R7 := U9
350 [-]: MOVE      R8 R0        ; R8 := R0
351 [-]: CALL      R7 2 1       ; R7(R8)
352 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2839
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x52C8784B"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  4 [-]: CALL      R0 2 5       ; R0,R1,R2,R3 := R0(R1)
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 1         ; if R4 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0xFD6CA2ED"]
 11 [-]: SUB       R6 R1 K4     ; R6 := R1 - 1
 12 [-]: MOVE      R7 R2        ; R7 := R2
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R2 R4        ; R2 := R4
 15 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 16 [-]: CLOSURE   R5 0         ; R5 := closure(Function #61.1)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R2        ; R0 := R2
 20 [-]: GETGLOBAL R6 K2        ; R6 := 0x400E7765
 21 [-]: MOVE      R7 R0        ; R7 := R0
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 1         ; if R6 then PC := 112
 24 [-]: JMP       112          ; PC := 112
 25 [-]: TEST      R3 0         ; if not R3 then PC := 112
 26 [-]: JMP       112          ; PC := 112
 27 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x6C207447"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LEN       R7 R6        ; R7 := # R6
 30 [-]: LE        0 R1 R7      ; if R1 > R7 then PC := 112
 31 [-]: JMP       112          ; PC := 112
 32 [-]: GETTABLE  R7 R6 R1     ; R7 := R6[R1]
 33 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mMainMission"]
 34 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mKey"]
 35 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
 36 [-]: MOVE      R10 R8       ; R10 := R8
 37 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 38 [-]: TEST      R9 1         ; if R9 then PC := 54
 39 [-]: JMP       54           ; PC := 54
 40 [-]: GETGLOBAL R9 K8        ; R9 := 0x9FAED6BC
 41 [-]: SELF      R10 R8 K9    ; R11 := R8; R10 := R8["0x625DA4BB"]
 42 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 43 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 44 [-]: MOVE      R10 R5       ; R10 := R5
 45 [-]: MOVE      R11 R9       ; R11 := R9
 46 [-]: MOVE      R12 R8       ; R12 := R8
 47 [-]: MOVE      R13 R2       ; R13 := R2
 48 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 49 [-]: GETGLOBAL R10 K10      ; R10 := table
 50 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xE6450C9D"]
 51 [-]: MOVE      R11 R4       ; R11 := R4
 52 [-]: MOVE      R12 R9       ; R12 := R9
 53 [-]: CALL      R10 3 1      ; R10(R11,R12)
 54 [-]: GETTABLE  R10 R7 K12   ; R10 := R7["mMarkedNodes"]
 55 [-]: LEN       R10 R10      ; R10 := # R10
 56 [-]: LT        0 K13 R10    ; if 0 >= R10 then PC := 112
 57 [-]: JMP       112          ; PC := 112
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["0xBB3AACF2"]
 60 [-]: CALL      R10 1 2      ; R10 := R10()
 61 [-]: GETTABLE  R11 R7 K15   ; R11 := R7["mShowFirstExistingMarkedNodeOnly"]
 62 [-]: TEST      R11 0        ; if not R11 then PC := 85
 63 [-]: JMP       85           ; PC := 85
 64 [-]: SELF      R11 R10 K16  ; R12 := R10; R11 := R10["0xCFD8148D"]
 65 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 66 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 67 [-]: GETGLOBAL R12 K17      ; R12 := EMPTY_SYMBOL
 68 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 112
 69 [-]: JMP       112          ; PC := 112
 70 [-]: MOVE      R12 R5       ; R12 := R5
 71 [-]: GETGLOBAL R13 K8       ; R13 := 0x9FAED6BC
 72 [-]: MOVE      R14 R11      ; R14 := R11
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: MOVE      R14 R8       ; R14 := R8
 75 [-]: MOVE      R15 R2       ; R15 := R2
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: GETGLOBAL R12 K10      ; R12 := table
 78 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0xE6450C9D"]
 79 [-]: MOVE      R13 R4       ; R13 := R4
 80 [-]: GETGLOBAL R14 K8       ; R14 := 0x9FAED6BC
 81 [-]: MOVE      R15 R11      ; R15 := R11
 82 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 83 [-]: CALL      R12 0 1      ; R12(R13,...)
 84 [-]: JMP       112          ; PC := 112
 85 [-]: GETGLOBAL R12 K18      ; R12 := 0x63B09107
 86 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 87 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 88 [-]: JMP       110          ; PC := 110
 89 [-]: SELF      R17 R10 K19  ; R18 := R10; R17 := R10["0xDF213CE1"]
 90 [-]: MOVE      R19 R16      ; R19 := R16
 91 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 92 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["name"]
 93 [-]: GETGLOBAL R18 K17      ; R18 := EMPTY_SYMBOL
 94 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 110
 95 [-]: JMP       110          ; PC := 110
 96 [-]: MOVE      R17 R5       ; R17 := R5
 97 [-]: GETGLOBAL R18 K8       ; R18 := 0x9FAED6BC
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CALL      R18 2 2      ; R18 := R18(R19)
100 [-]: MOVE      R19 R8       ; R19 := R8
101 [-]: MOVE      R20 R2       ; R20 := R2
102 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
103 [-]: GETGLOBAL R17 K10      ; R17 := table
104 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["0xE6450C9D"]
105 [-]: MOVE      R18 R4       ; R18 := R4
106 [-]: GETGLOBAL R19 K8       ; R19 := 0x9FAED6BC
107 [-]: MOVE      R20 R16      ; R20 := R16
108 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
109 [-]: CALL      R17 0 1      ; R17(R18,...)
110 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 89; R14 := R15 end
111 [-]: JMP       89           ; PC := 89
112 [-]: LOADK     R17 K4       ; R17 := 1
113 [-]: GETUPVAL  R18 U2       ; R18 := U2
114 [-]: LEN       R18 R18      ; R18 := # R18
115 [-]: LOADK     R19 K4       ; R19 := 1
116 [-]: FORPREP   R17 211      ; R17 -= R19; PC := 211
117 [-]: MOVE      R21 R1       ; R21 := R1
118 [-]: LOADK     R22 K4       ; R22 := 1
119 [-]: LEN       R23 R4       ; R23 := # R4
120 [-]: LOADK     R24 K4       ; R24 := 1
121 [-]: FORPREP   R22 129      ; R22 -= R24; PC := 129
122 [-]: GETTABLE  R26 R4 R25   ; R26 := R4[R25]
123 [-]: GETUPVAL  R27 U2       ; R27 := U2
124 [-]: GETTABLE  R27 R27 R20  ; R27 := R27[R20]
125 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 129
126 [-]: JMP       129          ; PC := 129
127 [-]: MOVE      R21 R0       ; R21 := R0
128 [-]: JMP       130          ; PC := 130
129 [-]: FORLOOP   R22 122      ; R22 += R24; if R22 <= R23 then begin PC := 122; R25 := R22 end
130 [-]: TEST      R21 0        ; if not R21 then PC := 211
131 [-]: JMP       211          ; PC := 211
132 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
133 [-]: GETUPVAL  R27 U3       ; R27 := U3
134 [-]: CALL      R26 2 2      ; R26 := R26(R27)
135 [-]: TEST      R26 1        ; if R26 then PC := 211
136 [-]: JMP       211          ; PC := 211
137 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
138 [-]: GETUPVAL  R27 U1       ; R27 := U1
139 [-]: GETUPVAL  R28 U2       ; R28 := U2
140 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
141 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
142 [-]: CALL      R26 2 2      ; R26 := R26(R27)
143 [-]: TEST      R26 1        ; if R26 then PC := 211
144 [-]: JMP       211          ; PC := 211
145 [-]: GETUPVAL  R26 U3       ; R26 := U3
146 [-]: SELF      R26 R26 K19  ; R27 := R26; R26 := R26["0xDF213CE1"]
147 [-]: GETGLOBAL R28 K21      ; R28 := 0xEC274B1A
148 [-]: GETUPVAL  R29 U2       ; R29 := U2
149 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
150 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
151 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
152 [-]: GETGLOBAL R27 K2       ; R27 := 0x400E7765
153 [-]: MOVE      R28 R26      ; R28 := R26
154 [-]: CALL      R27 2 2      ; R27 := R27(R28)
155 [-]: TEST      R27 1        ; if R27 then PC := 211
156 [-]: JMP       211          ; PC := 211
157 [-]: GETUPVAL  R27 U1       ; R27 := U1
158 [-]: GETUPVAL  R28 U2       ; R28 := U2
159 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
160 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
161 [-]: SELF      R28 R26 K23  ; R29 := R26; R28 := R26["0xA4269DBC"]
162 [-]: CALL      R28 2 2      ; R28 := R28(R29)
163 [-]: SETTABLE  R27 K22 R28  ; R27["radialSector"] := R28
164 [-]: GETUPVAL  R27 U1       ; R27 := U1
165 [-]: GETUPVAL  R28 U2       ; R28 := U2
166 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
167 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
168 [-]: GETUPVAL  R28 U1       ; R28 := U1
169 [-]: GETUPVAL  R29 U2       ; R29 := U2
170 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
171 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
172 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
173 [-]: GETTABLE  R28 R28 K20  ; R28 := R28["name"]
174 [-]: SETTABLE  R27 K20 R28  ; R27["name"] := R28
175 [-]: GETUPVAL  R27 U1       ; R27 := U1
176 [-]: GETUPVAL  R28 U2       ; R28 := U2
177 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
178 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
179 [-]: GETUPVAL  R28 U1       ; R28 := U1
180 [-]: GETUPVAL  R29 U2       ; R29 := U2
181 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
182 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
183 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
184 [-]: GETTABLE  R28 R28 K25  ; R28 := R28["pos"]
185 [-]: SETTABLE  R27 K24 R28  ; R27["position"] := R28
186 [-]: GETUPVAL  R27 U1       ; R27 := U1
187 [-]: GETUPVAL  R28 U2       ; R28 := U2
188 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
189 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
190 [-]: GETGLOBAL R28 K27      ; R28 := string
191 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["0x639C642A"]
192 [-]: GETGLOBAL R29 K29      ; R29 := mMovie
193 [-]: SELF      R29 R29 K30  ; R30 := R29; R29 := R29["0x5DB0BD4"]
194 [-]: GETTABLE  R31 R26 K31  ; R31 := R26["locTag"]
195 [-]: SELF      R31 R31 K32  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
196 [-]: CALL      R31 2 2      ; R31 := R31(R32)
197 [-]: MOVE      R32 R1       ; R32 := R1
198 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
199 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
200 [-]: SETTABLE  R27 K26 R28  ; R27["locName"] := R28
201 [-]: GETUPVAL  R27 U1       ; R27 := U1
202 [-]: GETUPVAL  R28 U2       ; R28 := U2
203 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
204 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
205 [-]: SETTABLE  R27 K33 K34  ; R27["IsQuest"] := "0x0"
206 [-]: GETUPVAL  R27 U1       ; R27 := U1
207 [-]: GETUPVAL  R28 U2       ; R28 := U2
208 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
209 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
210 [-]: SETTABLE  R27 K35 K36  ; R27["KeyType"] := nil
211 [-]: FORLOOP   R17 117      ; R17 += R19; if R17 <= R18 then begin PC := 117; R20 := R17 end
212 [-]: MOVE      R4 R2        ; R4 := R2
213 [-]: GETGLOBAL R27 K37      ; R27 := _G
214 [-]: GETUPVAL  R28 U2       ; R28 := U2
215 [-]: SETTABLE  R27 K38 R28  ; R27["QuestNodeNames"] := R28
216 [-]: RETURN    R0 1         ; return 


; Function #61.1:
;
; Name:            
; Defined at line: 2848
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 10 [-]: SETTABLE  R2 K1 K2     ; R2["IsQuest"] := "0x1"
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 13 [-]: SETTABLE  R2 K3 R1     ; R2["KeyType"] := R1
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 78
 20 [-]: JMP       78           ; PC := 78
 21 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 78
 25 [-]: JMP       78           ; PC := 78
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1["0xA26B0FA3"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: MOVE      R3 R3        ; R3 := R3
 31 [-]: SETTABLE  R2 K1 R3     ; R2["IsQuest"] := R3
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 34 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["radialSector"]
 35 [-]: GETUPVAL  R3 U1        ; R3 := U1
 36 [-]: SETTABLE  R2 K6 R3     ; R2["keyChain"] := R3
 37 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0xA26B0FA3"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: TEST      R2 1         ; if R2 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R2 K7        ; R2 := 0xE6DC43B0
 42 [-]: GETGLOBAL R3 K8        ; R3 := 0x9FAED6BC
 43 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x616C74B6"]
 44 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 45 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 50 [-]: GETGLOBAL R4 K11       ; R4 := string
 51 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0x639C642A"]
 52 [-]: MOVE      R5 R2        ; R5 := R2
 53 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 54 [-]: SETTABLE  R3 K10 R4    ; R3["locName"] := R4
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 57 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 58 [-]: SELF      R4 R1 K14    ; R5 := R1; R4 := R1["0xB8637349"]
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0xA4269DBC"]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: SETTABLE  R3 K13 R4    ; R3["mission"] := R4
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 65 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 66 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 67 [-]: GETUPVAL  R4 U2        ; R4 := U2
 68 [-]: SETTABLE  R3 K16 R4    ; R3["difficulty"] := R4
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 71 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 72 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 73 [-]: GETGLOBAL R4 K18       ; R4 := 0x2C00D429
 74 [-]: SELF      R5 R1 K19    ; R6 := R1; R5 := R1["0x1B252E3C"]
 75 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 76 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 77 [-]: SETTABLE  R3 K17 R4    ; R3["levelKeyName"] := R4
 78 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2927
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: LOADK     R0 K0        ; R0 := 1
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 K0        ; R2 := 1
 11 [-]: FORPREP   R0 23        ; R0 -= R2; PC := 23
 12 [-]: GETUPVAL  R4 U3        ; R4 := U3
 13 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 14 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["isShortcut"]
 15 [-]: TEST      R4 1         ; if R4 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R4 U4        ; R4 := U4
 18 [-]: GETUPVAL  R5 U3        ; R5 := U3
 19 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 20 [-]: CALL      R4 2 1       ; R4(R5)
 21 [-]: GETGLOBAL R4 K2        ; R4 := 0x1BF588C6
 22 [-]: CALL      R4 1 1       ; R4()
 23 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 24 [-]: GETUPVAL  R4 U5        ; R4 := U5
 25 [-]: CALL      R4 1 1       ; R4()
 26 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2944
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SETTABLE  R0 K0 K1     ; R0["visibleLabel"] := "0x1"
  2 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x26581636"]
  4 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
  5 [-]: LOADK     R4 K5        ; R4 := ".Node.Container.Node"
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xF81722A2"]
  9 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["locked"]
 10 [-]: GETGLOBAL R6 K8        ; R6 := shortcutLockedTexture
 11 [-]: GETGLOBAL R7 K9        ; R7 := shortcutUnlockedTexture
 12 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 15 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 17 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 18 [-]: LOADK     R5 K12       ; R5 := "_width"
 19 [-]: LOADK     R6 K13       ; R6 := 84
 20 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 21 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 24 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 25 [-]: LOADK     R5 K14       ; R5 := "_height"
 26 [-]: LOADK     R6 K13       ; R6 := 84
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 30 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 31 [-]: LOADK     R4 K15       ; R4 := "Node.Container.Icon"
 32 [-]: LOADK     R5 K16       ; R5 := "_visible"
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2953
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 41        ; R0 -= R2; PC := 41
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 12 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SETTABLE  R4 K2 K4     ; R4["locked"] := "0x1"
 15 [-]: SETTABLE  R4 K5 K6     ; R4["completed"] := "0x0"
 16 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 17 [-]: TEST      R5 0         ; if not R5 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
 20 [-]: GETTABLE  R6 R4 K8     ; R6 := R4["targetRegion"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["targetRegion"]
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: ADD       R7 R5 K0     ; R7 := R5 + 1
 27 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 28 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x80A80EEB"]
 29 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 30 [-]: GETGLOBAL R8 K10       ; R8 := Lotus_Game
 31 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["RadialRegion_RCS_LOCKED"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: SETTABLE  R4 K2 K6     ; R4["locked"] := "0x0"
 35 [-]: SETTABLE  R4 K5 K4     ; R4["completed"] := "0x1"
 36 [-]: GETUPVAL  R7 U2        ; R7 := U2
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R7 2 1       ; R7(R8)
 39 [-]: GETGLOBAL R7 K12       ; R7 := 0x1BF588C6
 40 [-]: CALL      R7 1 1       ; R7()
 41 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 42 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2978
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 72        ; R0 -= R2; PC := 72
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["radialSector"]
  9 [-]: GETUPVAL  R6 U1        ; R6 := U1
 10 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["region"]
 11 [-]: ADD       R7 R7 K0     ; R7 := R7 + 1
 12 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 13 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6["0x80A80EEB"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["RadialRegion_RCS_LOCKED"]
 17 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 72
 18 [-]: JMP       72           ; PC := 72
 19 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 20 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["NT_HUB"]
 22 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 39
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 25 [-]: GETUPVAL  R8 U2        ; R8 := U2
 26 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["CETUS_NODE_TAG"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 30 [-]: GETUPVAL  R8 U2        ; R8 := U2
 31 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["FORTUNA_NODE_TAG"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 35 [-]: GETUPVAL  R7 U3        ; R7 := U3
 36 [-]: MOVE      R8 R4        ; R8 := R4
 37 [-]: CALL      R7 2 1       ; R7(R8)
 38 [-]: JMP       72           ; PC := 72
 39 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 40 [-]: GETUPVAL  R8 U4        ; R8 := U4
 41 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["FIGHT_NODE_TAG"]
 42 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 49
 43 [-]: JMP       49           ; PC := 49
 44 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: MOVE      R8 R4        ; R8 := R4
 47 [-]: CALL      R7 2 1       ; R7(R8)
 48 [-]: JMP       72           ; PC := 72
 49 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 50 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 51 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["NT_JUNCTION"]
 52 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["complete"]
 55 [-]: TEST      R7 1         ; if R7 then PC := 62
 56 [-]: JMP       62           ; PC := 62
 57 [-]: SETTABLE  R4 K16 K12   ; R4["forceHover"] := "0x1"
 58 [-]: GETUPVAL  R7 U3        ; R7 := U3
 59 [-]: MOVE      R8 R4        ; R8 := R4
 60 [-]: CALL      R7 2 1       ; R7(R8)
 61 [-]: JMP       72           ; PC := 72
 62 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["reconstructionProgress"]
 63 [-]: TEST      R7 0         ; if not R7 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["reconstructionProgress"]
 66 [-]: LT        0 R7 K18     ; if R7 >= 2 then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 69 [-]: GETUPVAL  R7 U3        ; R7 := U3
 70 [-]: MOVE      R8 R4        ; R8 := R4
 71 [-]: CALL      R7 2 1       ; R7(R8)
 72 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 73 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 3002
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: UNM       R1 R0        ; R1 := - R0
  2 [-]: DIV       R1 K0 R1     ; R1 := 100 / R1
  3 [-]: DIV       R0 R1 K1     ; R0 := R1 / 75
  4 [-]: LOADK     R1 K2        ; R1 := 1
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 63        ; R1 -= R3; PC := 63
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 11 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["overrideIconSize"]
 12 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 63
 13 [-]: JMP       63           ; PC := 63
 14 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["clipName"]
 15 [-]: LOADK     R7 K6        ; R7 := ".Btn"
 16 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 17 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["clipName"]
 18 [-]: LOADK     R8 K7        ; R8 := ".Node.Container.Icon"
 19 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 20 [-]: GETTABLE  R8 R5 K5     ; R8 := R5["clipName"]
 21 [-]: LOADK     R9 K8        ; R9 := ".Node.Container.Node"
 22 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 23 [-]: GETTABLE  R9 R5 K3     ; R9 := R5["overrideIconSize"]
 24 [-]: MUL       R9 R9 R0     ; R9 := R9 * R0
 25 [-]: MUL       R10 R9 K9    ; R10 := R9 * 2
 26 [-]: MUL       R11 R10 K10  ; R11 := R10 * 1.5
 27 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 28 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 29 [-]: MOVE      R14 R6       ; R14 := R6
 30 [-]: LOADK     R15 K13      ; R15 := "_width"
 31 [-]: MOVE      R16 R9       ; R16 := R9
 32 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 33 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 34 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 35 [-]: MOVE      R14 R6       ; R14 := R6
 36 [-]: LOADK     R15 K14      ; R15 := "_height"
 37 [-]: MOVE      R16 R9       ; R16 := R9
 38 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 39 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 40 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 41 [-]: MOVE      R14 R7       ; R14 := R7
 42 [-]: LOADK     R15 K13      ; R15 := "_width"
 43 [-]: MOVE      R16 R10      ; R16 := R10
 44 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 45 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 46 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 47 [-]: MOVE      R14 R7       ; R14 := R7
 48 [-]: LOADK     R15 K14      ; R15 := "_height"
 49 [-]: MOVE      R16 R10      ; R16 := R10
 50 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 51 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 52 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 53 [-]: MOVE      R14 R8       ; R14 := R8
 54 [-]: LOADK     R15 K13      ; R15 := "_width"
 55 [-]: MOVE      R16 R11      ; R16 := R11
 56 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 57 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 58 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 59 [-]: MOVE      R14 R8       ; R14 := R8
 60 [-]: LOADK     R15 K14      ; R15 := "_height"
 61 [-]: MOVE      R16 R11      ; R16 := R11
 62 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 63 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 64 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 3026
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  70

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xECFDD17
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: GETTABLE  R6 R4 K2     ; R6 := R4["clipName"]
 12 [-]: CALL      R5 2 1       ; R5(R6)
 13 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["deco"]
 14 [-]: EQ        1 R5 K0      ; if R5 == nil then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 17 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["deco"]
 18 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mInstance"]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R5 K6        ; R5 := gBackgroundRegion
 23 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x9B0A3887"]
 24 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["deco"]
 25 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mInstance"]
 26 [-]: CALL      R5 3 1       ; R5(R6,R7)
 27 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 10; R2 := R3 end
 28 [-]: JMP       10           ; PC := 10
 29 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 32 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 33 [-]: GETUPVAL  R7 U3        ; R7 := U3
 34 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x7B440FBB"]
 35 [-]: MOVE      R8 R5        ; R8 := R5
 36 [-]: LOADNIL   R9 R9        ; R9 := nil
 37 [-]: GETGLOBAL R10 K9       ; R10 := gGameRules
 38 [-]: SELF      R10 R10 K10  ; R11 := R10; R10 := R10["0xC17093D6"]
 39 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 40 [-]: CALL      R7 0 1       ; R7(R8,...)
 41 [-]: LOADK     R7 K11       ; R7 := 1
 42 [-]: LEN       R8 R5        ; R8 := # R5
 43 [-]: LOADK     R9 K11       ; R9 := 1
 44 [-]: FORPREP   R7 53        ; R7 -= R9; PC := 53
 45 [-]: GETGLOBAL R11 K12      ; R11 := table
 46 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xE6450C9D"]
 47 [-]: MOVE      R12 R6       ; R12 := R6
 48 [-]: GETTABLE  R13 R5 R10   ; R13 := R5[R10]
 49 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["Type"]
 50 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13["0x625DA4BB"]
 51 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 52 [-]: CALL      R11 0 1      ; R11(R12,...)
 53 [-]: FORLOOP   R7 45        ; R7 += R9; if R7 <= R8 then begin PC := 45; R10 := R7 end
 54 [-]: GETUPVAL  R11 U3       ; R11 := U3
 55 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0x52C8784B"]
 56 [-]: GETGLOBAL R12 K17      ; R12 := gGameData
 57 [-]: CALL      R11 2 5      ; R11,R12,R13,R14 := R11(R12)
 58 [-]: GETGLOBAL R15 K4       ; R15 := 0x400E7765
 59 [-]: MOVE      R16 R11      ; R16 := R11
 60 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 61 [-]: TEST      R15 1        ; if R15 then PC := 119
 62 [-]: JMP       119          ; PC := 119
 63 [-]: GETUPVAL  R15 U3       ; R15 := U3
 64 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0x68C19111"]
 65 [-]: GETGLOBAL R16 K17      ; R16 := gGameData
 66 [-]: MOVE      R17 R11      ; R17 := R11
 67 [-]: MOVE      R18 R1       ; R18 := R1
 68 [-]: CALL      R15 4 5      ; R15,R16,R17,R18 := R15(R16,R17,R18)
 69 [-]: GETGLOBAL R19 K4       ; R19 := 0x400E7765
 70 [-]: MOVE      R20 R18      ; R20 := R18
 71 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 72 [-]: TEST      R19 1        ; if R19 then PC := 119
 73 [-]: JMP       119          ; PC := 119
 74 [-]: NEWTABLE  R19 0 7      ; R19 := {}
 75 [-]: GETGLOBAL R20 K20      ; R20 := Lotus_Game
 76 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["0xB880C02"]
 77 [-]: MOVE      R21 R18      ; R21 := R18
 78 [-]: LOADK     R22 K11      ; R22 := 1
 79 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 80 [-]: SETTABLE  R19 K19 R20  ; R19["Key"] := R20
 81 [-]: SETTABLE  R19 K22 R11  ; R19["KeyChain"] := R11
 82 [-]: SETTABLE  R19 K14 R18  ; R19["Type"] := R18
 83 [-]: GETGLOBAL R20 K24      ; R20 := 0xCAA43ABB
 84 [-]: MOVE      R21 R18      ; R21 := R18
 85 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 86 [-]: SETTABLE  R19 K23 R20  ; R19["Anchor"] := R20
 87 [-]: GETGLOBAL R20 K26      ; R20 := 0xE6DC43B0
 88 [-]: GETGLOBAL R21 K27      ; R21 := 0x9FAED6BC
 89 [-]: SELF      R22 R18 K28  ; R23 := R18; R22 := R18["0x616C74B6"]
 90 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 91 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 92 [-]: MOVE      R22 R0       ; R22 := R0
 93 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 94 [-]: SETTABLE  R19 K25 R20  ; R19["Name"] := R20
 95 [-]: GETGLOBAL R20 K26      ; R20 := 0xE6DC43B0
 96 [-]: GETGLOBAL R21 K27      ; R21 := 0x9FAED6BC
 97 [-]: SELF      R22 R18 K30  ; R23 := R18; R22 := R18["0x42300EB5"]
 98 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 99 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
100 [-]: MOVE      R22 R0       ; R22 := R0
101 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
102 [-]: SETTABLE  R19 K29 R20  ; R19["Description"] := R20
103 [-]: SELF      R20 R11 K32  ; R21 := R11; R20 := R11["0xFD6CA2ED"]
104 [-]: SUB       R22 R15 K11  ; R22 := R15 - 1
105 [-]: MOVE      R23 R16      ; R23 := R16
106 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
107 [-]: SETTABLE  R19 K31 R20  ; R19["Difficulty"] := R20
108 [-]: GETUPVAL  R20 U4       ; R20 := U4
109 [-]: EQ        0 R11 R20    ; if R11 ~= R20 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: SELF      R20 R18 K15  ; R21 := R18; R20 := R18["0x625DA4BB"]
112 [-]: CALL      R20 2 2      ; R20 := R20(R21)
113 [-]: MOVE      R20 R5       ; R20 := R5
114 [-]: GETGLOBAL R20 K12      ; R20 := table
115 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["0xE6450C9D"]
116 [-]: MOVE      R21 R5       ; R21 := R5
117 [-]: MOVE      R22 R19      ; R22 := R19
118 [-]: CALL      R20 3 1      ; R20(R21,R22)
119 [-]: LOADK     R20 K11      ; R20 := 1
120 [-]: GETUPVAL  R21 U6       ; R21 := U6
121 [-]: LEN       R21 R21      ; R21 := # R21
122 [-]: LOADK     R22 K11      ; R22 := 1
123 [-]: FORPREP   R20 163      ; R20 -= R22; PC := 163
124 [-]: MOVE      R24 R0       ; R24 := R0
125 [-]: GETUPVAL  R25 U6       ; R25 := U6
126 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
127 [-]: GETTABLE  R25 R25 K33  ; R25 := R25["name"]
128 [-]: GETGLOBAL R26 K4       ; R26 := 0x400E7765
129 [-]: GETUPVAL  R27 U6       ; R27 := U6
130 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
131 [-]: GETTABLE  R27 R27 K34  ; R27 := R27["mission"]
132 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["levelKeyName"]
133 [-]: CALL      R26 2 2      ; R26 := R26(R27)
134 [-]: TEST      R26 1        ; if R26 then PC := 146
135 [-]: JMP       146          ; PC := 146
136 [-]: MOVE      R24 R1       ; R24 := R1
137 [-]: LOADK     R26 K11      ; R26 := 1
138 [-]: LEN       R27 R6       ; R27 := # R6
139 [-]: LOADK     R28 K11      ; R28 := 1
140 [-]: FORPREP   R26 145      ; R26 -= R28; PC := 145
141 [-]: GETTABLE  R30 R6 R29   ; R30 := R6[R29]
142 [-]: EQ        0 R30 R25    ; if R30 ~= R25 then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: MOVE      R24 R0       ; R24 := R0
145 [-]: FORLOOP   R26 141      ; R26 += R28; if R26 <= R27 then begin PC := 141; R29 := R26 end
146 [-]: GETGLOBAL R30 K27      ; R30 := 0x9FAED6BC
147 [-]: MOVE      R31 R25      ; R31 := R25
148 [-]: CALL      R30 2 2      ; R30 := R30(R31)
149 [-]: MOVE      R25 R30      ; R25 := R30
150 [-]: GETUPVAL  R30 U7       ; R30 := U7
151 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["Sectors"]
152 [-]: GETTABLE  R30 R30 R25  ; R30 := R30[R25]
153 [-]: EQ        0 R30 K0     ; if R30 ~= nil then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: GETUPVAL  R31 U6       ; R31 := U6
156 [-]: GETTABLE  R30 R31 R23  ; R30 := R31[R23]
157 [-]: TEST      R24 1        ; if R24 then PC := 163
158 [-]: JMP       163          ; PC := 163
159 [-]: GETUPVAL  R31 U8       ; R31 := U8
160 [-]: SELF      R32 R30 K37  ; R33 := R30; R32 := R30["0xA4269DBC"]
161 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
162 [-]: CALL      R31 0 1      ; R31(R32,...)
163 [-]: FORLOOP   R20 124      ; R20 += R22; if R20 <= R21 then begin PC := 124; R23 := R20 end
164 [-]: NEWTABLE  R31 0 0      ; R31 := {}
165 [-]: LOADNIL   R32 R32      ; R32 := nil
166 [-]: LOADK     R33 K11      ; R33 := 1
167 [-]: LEN       R34 R5       ; R34 := # R5
168 [-]: LOADK     R35 K11      ; R35 := 1
169 [-]: FORPREP   R33 545      ; R33 -= R35; PC := 545
170 [-]: GETGLOBAL R37 K38      ; R37 := 0x1BF588C6
171 [-]: LOADK     R38 K39      ; R38 := 0
172 [-]: CALL      R37 2 1      ; R37(R38)
173 [-]: GETTABLE  R37 R5 R36   ; R37 := R5[R36]
174 [-]: GETTABLE  R38 R37 K14  ; R38 := R37["Type"]
175 [-]: SELF      R39 R38 K15  ; R40 := R38; R39 := R38["0x625DA4BB"]
176 [-]: CALL      R39 2 2      ; R39 := R39(R40)
177 [-]: SELF      R40 R38 K40  ; R41 := R38; R40 := R38["0xA26B0FA3"]
178 [-]: CALL      R40 2 2      ; R40 := R40(R41)
179 [-]: GETUPVAL  R41 U1       ; R41 := U1
180 [-]: GETGLOBAL R42 K27      ; R42 := 0x9FAED6BC
181 [-]: MOVE      R43 R39      ; R43 := R39
182 [-]: CALL      R42 2 2      ; R42 := R42(R43)
183 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
184 [-]: LOADNIL   R42 R42      ; R42 := nil
185 [-]: EQ        1 R41 K0     ; if R41 == nil then PC := 189
186 [-]: JMP       189          ; PC := 189
187 [-]: GETTABLE  R42 R41 K41  ; R42 := R41["radialSector"]
188 [-]: JMP       193          ; PC := 193
189 [-]: GETGLOBAL R43 K20      ; R43 := Lotus_Game
190 [-]: GETTABLE  R43 R43 K42  ; R43 := R43["0xAE448D50"]
191 [-]: CALL      R43 1 2      ; R43 := R43()
192 [-]: MOVE      R42 R43      ; R42 := R43
193 [-]: MOVE      R43 R0       ; R43 := R0
194 [-]: SELF      R44 R38 K43  ; R45 := R38; R44 := R38["0x9B16E6AD"]
195 [-]: CALL      R44 2 2      ; R44 := R44(R45)
196 [-]: GETGLOBAL R45 K44      ; R45 := _T
197 [-]: GETTABLE  R45 R45 K45  ; R45 := R45["REGION_ID_DOJO"]
198 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 227
199 [-]: JMP       227          ; PC := 227
200 [-]: GETUPVAL  R44 U9       ; R44 := U9
201 [-]: GETTABLE  R44 R44 K46  ; R44 := R44["Active"]
202 [-]: TEST      R44 0        ; if not R44 then PC := 210
203 [-]: JMP       210          ; PC := 210
204 [-]: GETGLOBAL R44 K48      ; R44 := 0xEC274B1A
205 [-]: LOADK     R45 K49      ; R45 := "/Lotus/Language/Dojo/DryDockMapLabel"
206 [-]: CALL      R44 2 2      ; R44 := R44(R45)
207 [-]: SETTABLE  R42 K47 R44  ; R42["locTag"] := R44
208 [-]: MOVE      R43 R1       ; R43 := R1
209 [-]: JMP       266          ; PC := 266
210 [-]: GETGLOBAL R44 K50      ; R44 := gPlayerProfileMgr
211 [-]: SELF      R44 R44 K51  ; R45 := R44; R44 := R44["0x21EF7B1A"]
212 [-]: LOADK     R46 K39      ; R46 := 0
213 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
214 [-]: GETGLOBAL R45 K4       ; R45 := 0x400E7765
215 [-]: MOVE      R46 R44      ; R46 := R44
216 [-]: CALL      R45 2 2      ; R45 := R45(R46)
217 [-]: TEST      R45 1        ; if R45 then PC := 266
218 [-]: JMP       266          ; PC := 266
219 [-]: GETGLOBAL R45 K48      ; R45 := 0xEC274B1A
220 [-]: SELF      R46 R44 K52  ; R47 := R44; R46 := R44["0x654F1092"]
221 [-]: CALL      R46 2 2      ; R46 := R46(R47)
222 [-]: SELF      R46 R46 K53  ; R47 := R46; R46 := R46["0x6D176768"]
223 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
224 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
225 [-]: SETTABLE  R42 K47 R45  ; R42["locTag"] := R45
226 [-]: JMP       266          ; PC := 266
227 [-]: TEST      R40 1        ; if R40 then PC := 266
228 [-]: JMP       266          ; PC := 266
229 [-]: GETGLOBAL R45 K54      ; R45 := mMovie
230 [-]: SELF      R45 R45 K55  ; R46 := R45; R45 := R45["0x5DB0BD4"]
231 [-]: GETTABLE  R47 R37 K25  ; R47 := R37["Name"]
232 [-]: MOVE      R48 R1       ; R48 := R1
233 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
234 [-]: GETTABLE  R46 R37 K14  ; R46 := R37["Type"]
235 [-]: SELF      R46 R46 K56  ; R47 := R46; R46 := R46["0xB8637349"]
236 [-]: CALL      R46 2 2      ; R46 := R46(R47)
237 [-]: GETTABLE  R46 R46 K57  ; R46 := R46["uniqueName"]
238 [-]: EQ        1 R46 K58    ; if R46 == "" then PC := 246
239 [-]: JMP       246          ; PC := 246
240 [-]: GETGLOBAL R47 K54      ; R47 := mMovie
241 [-]: SELF      R47 R47 K55  ; R48 := R47; R47 := R47["0x5DB0BD4"]
242 [-]: MOVE      R49 R46      ; R49 := R46
243 [-]: MOVE      R50 R0       ; R50 := R0
244 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
245 [-]: MOVE      R45 R47      ; R45 := R47
246 [-]: GETTABLE  R47 R37 K59  ; R47 := R37["Count"]
247 [-]: TEST      R47 0        ; if not R47 then PC := 262
248 [-]: JMP       262          ; PC := 262
249 [-]: GETTABLE  R47 R37 K59  ; R47 := R37["Count"]
250 [-]: LT        0 K11 R47    ; if 1 >= R47 then PC := 262
251 [-]: JMP       262          ; PC := 262
252 [-]: GETTABLE  R47 R37 K14  ; R47 := R37["Type"]
253 [-]: SELF      R47 R47 K60  ; R48 := R47; R47 := R47["0x49F6C90A"]
254 [-]: CALL      R47 2 2      ; R47 := R47(R48)
255 [-]: TEST      R47 0        ; if not R47 then PC := 262
256 [-]: JMP       262          ; PC := 262
257 [-]: MOVE      R47 R45      ; R47 := R45
258 [-]: LOADK     R48 K61      ; R48 := " ["
259 [-]: GETTABLE  R49 R37 K59  ; R49 := R37["Count"]
260 [-]: LOADK     R50 K62      ; R50 := "]"
261 [-]: CONCAT    R45 R47 R50  ; R45 := R47 .. R48 .. R49 .. R50
262 [-]: GETGLOBAL R47 K48      ; R47 := 0xEC274B1A
263 [-]: MOVE      R48 R45      ; R48 := R45
264 [-]: CALL      R47 2 2      ; R47 := R47(R48)
265 [-]: SETTABLE  R42 K47 R47  ; R42["locTag"] := R47
266 [-]: LOADNIL   R47 R47      ; R47 := nil
267 [-]: TEST      R40 0        ; if not R40 then PC := 273
268 [-]: JMP       273          ; PC := 273
269 [-]: GETTABLE  R48 R42 K34  ; R48 := R42["mission"]
270 [-]: SELF      R48 R48 K37  ; R49 := R48; R48 := R48["0xA4269DBC"]
271 [-]: CALL      R48 2 2      ; R48 := R48(R49)
272 [-]: MOVE      R47 R48      ; R47 := R48
273 [-]: GETTABLE  R48 R37 K14  ; R48 := R37["Type"]
274 [-]: SELF      R48 R48 K63  ; R49 := R48; R48 := R48["0x1B252E3C"]
275 [-]: CALL      R48 2 2      ; R48 := R48(R49)
276 [-]: GETGLOBAL R49 K64      ; R49 := string
277 [-]: GETTABLE  R49 R49 K65  ; R49 := R49["0xDE44F664"]
278 [-]: MOVE      R50 R48      ; R50 := R48
279 [-]: LOADK     R51 K66      ; R51 := "Hub"
280 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
281 [-]: TEST      R49 0        ; if not R49 then PC := 287
282 [-]: JMP       287          ; PC := 287
283 [-]: GETGLOBAL R49 K20      ; R49 := Lotus_Game
284 [-]: GETTABLE  R49 R49 K68  ; R49 := R49["NT_HUB"]
285 [-]: SETTABLE  R42 K67 R49  ; R42["nodeType"] := R49
286 [-]: JMP       290          ; PC := 290
287 [-]: GETGLOBAL R49 K20      ; R49 := Lotus_Game
288 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["NT_MISSION"]
289 [-]: SETTABLE  R42 K67 R49  ; R42["nodeType"] := R49
290 [-]: SETTABLE  R42 K70 K71  ; R42["unlocked"] := "0x1"
291 [-]: GETTABLE  R49 R37 K14  ; R49 := R37["Type"]
292 [-]: SELF      R49 R49 K56  ; R50 := R49; R49 := R49["0xB8637349"]
293 [-]: CALL      R49 2 2      ; R49 := R49(R50)
294 [-]: SELF      R49 R49 K37  ; R50 := R49; R49 := R49["0xA4269DBC"]
295 [-]: CALL      R49 2 2      ; R49 := R49(R50)
296 [-]: SETTABLE  R42 K34 R49  ; R42["mission"] := R49
297 [-]: GETTABLE  R49 R42 K34  ; R49 := R42["mission"]
298 [-]: GETGLOBAL R50 K72      ; R50 := 0x2C00D429
299 [-]: GETTABLE  R51 R37 K14  ; R51 := R37["Type"]
300 [-]: SELF      R51 R51 K63  ; R52 := R51; R51 := R51["0x1B252E3C"]
301 [-]: CALL      R51 2 0      ; R51,... := R51(R52)
302 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
303 [-]: SETTABLE  R49 K35 R50  ; R49["levelKeyName"] := R50
304 [-]: GETTABLE  R49 R37 K31  ; R49 := R37["Difficulty"]
305 [-]: EQ        1 R49 K0     ; if R49 == nil then PC := 310
306 [-]: JMP       310          ; PC := 310
307 [-]: GETTABLE  R49 R42 K34  ; R49 := R42["mission"]
308 [-]: GETTABLE  R50 R37 K31  ; R50 := R37["Difficulty"]
309 [-]: SETTABLE  R49 K73 R50  ; R49["difficulty"] := R50
310 [-]: GETTABLE  R49 R37 K22  ; R49 := R37["KeyChain"]
311 [-]: SETTABLE  R42 K74 R49  ; R42["keyChain"] := R49
312 [-]: LOADNIL   R49 R49      ; R49 := nil
313 [-]: GETTABLE  R50 R37 K75  ; R50 := R37["RegionOverride"]
314 [-]: EQ        1 R50 K0     ; if R50 == nil then PC := 318
315 [-]: JMP       318          ; PC := 318
316 [-]: GETTABLE  R49 R37 K75  ; R49 := R37["RegionOverride"]
317 [-]: JMP       322          ; PC := 322
318 [-]: GETTABLE  R50 R37 K14  ; R50 := R37["Type"]
319 [-]: SELF      R50 R50 K43  ; R51 := R50; R50 := R50["0x9B16E6AD"]
320 [-]: CALL      R50 2 2      ; R50 := R50(R51)
321 [-]: MOVE      R49 R50      ; R49 := R50
322 [-]: GETUPVAL  R50 U10      ; R50 := U10
323 [-]: LEN       R50 R50      ; R50 := # R50
324 [-]: LE        0 R50 R49    ; if R50 > R49 then PC := 347
325 [-]: JMP       347          ; PC := 347
326 [-]: GETGLOBAL R50 K76      ; R50 := 0x93B1256B
327 [-]: LOADK     R51 K77      ; R51 := "invalid region specified for key="
328 [-]: GETGLOBAL R52 K27      ; R52 := 0x9FAED6BC
329 [-]: GETTABLE  R53 R37 K14  ; R53 := R37["Type"]
330 [-]: SELF      R53 R53 K63  ; R54 := R53; R53 := R53["0x1B252E3C"]
331 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
332 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
333 [-]: CONCAT    R51 R51 R52  ; R51 := R51 .. R52
334 [-]: CALL      R50 2 1      ; R50(R51)
335 [-]: GETGLOBAL R50 K78      ; R50 := 0x6374FD98
336 [-]: GETUPVAL  R51 U11      ; R51 := U11
337 [-]: SELF      R51 R51 K79  ; R52 := R51; R51 := R51["0xDF213CE1"]
338 [-]: MOVE      R53 R39      ; R53 := R39
339 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
340 [-]: GETTABLE  R51 R51 K80  ; R51 := R51["region"]
341 [-]: LOADK     R52 K11      ; R52 := 1
342 [-]: GETUPVAL  R53 U10      ; R53 := U10
343 [-]: LEN       R53 R53      ; R53 := # R53
344 [-]: SUB       R53 R53 K11  ; R53 := R53 - 1
345 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
346 [-]: MOVE      R49 R50      ; R49 := R50
347 [-]: GETGLOBAL R50 K4       ; R50 := 0x400E7765
348 [-]: MOVE      R51 R41      ; R51 := R41
349 [-]: CALL      R50 2 2      ; R50 := R50(R51)
350 [-]: TEST      R50 0        ; if not R50 then PC := 458
351 [-]: JMP       458          ; PC := 458
352 [-]: GETTABLE  R50 R37 K14  ; R50 := R37["Type"]
353 [-]: SELF      R50 R50 K81  ; R51 := R50; R50 := R50["0x8B598ED4"]
354 [-]: GETUPVAL  R52 U12      ; R52 := U12
355 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
356 [-]: TEST      R50 1        ; if R50 then PC := 458
357 [-]: JMP       458          ; PC := 458
358 [-]: GETGLOBAL R50 K44      ; R50 := _T
359 [-]: GETTABLE  R50 R50 K82  ; R50 := R50["REGION_ID_MOON"]
360 [-]: EQ        0 R49 R50    ; if R49 ~= R50 then PC := 368
361 [-]: JMP       368          ; PC := 368
362 [-]: GETUPVAL  R50 U13      ; R50 := U13
363 [-]: GETGLOBAL R51 K44      ; R51 := _T
364 [-]: GETTABLE  R51 R51 K82  ; R51 := R51["REGION_ID_MOON"]
365 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
366 [-]: EQ        1 R50 K71    ; if R50 == "0x1" then PC := 458
367 [-]: JMP       458          ; PC := 458
368 [-]: TEST      R43 0        ; if not R43 then PC := 375
369 [-]: JMP       375          ; PC := 375
370 [-]: GETGLOBAL R50 K48      ; R50 := 0xEC274B1A
371 [-]: LOADK     R51 K83      ; R51 := "CrewBattleNodeDojo"
372 [-]: CALL      R50 2 2      ; R50 := R50(R51)
373 [-]: SETTABLE  R42 K33 R50  ; R42["name"] := R50
374 [-]: JMP       384          ; PC := 384
375 [-]: GETGLOBAL R50 K48      ; R50 := 0xEC274B1A
376 [-]: GETTABLE  R51 R37 K14  ; R51 := R37["Type"]
377 [-]: SELF      R51 R51 K63  ; R52 := R51; R51 := R51["0x1B252E3C"]
378 [-]: CALL      R51 2 2      ; R51 := R51(R52)
379 [-]: GETUPVAL  R52 U3       ; R52 := U3
380 [-]: GETTABLE  R52 R52 K84  ; R52 := R52["KEY_TAG"]
381 [-]: CONCAT    R51 R51 R52  ; R51 := R51 .. R52
382 [-]: CALL      R50 2 2      ; R50 := R50(R51)
383 [-]: SETTABLE  R42 K33 R50  ; R42["name"] := R50
384 [-]: GETGLOBAL R50 K64      ; R50 := string
385 [-]: GETTABLE  R50 R50 K65  ; R50 := R50["0xDE44F664"]
386 [-]: MOVE      R51 R48      ; R51 := R48
387 [-]: LOADK     R52 K66      ; R52 := "Hub"
388 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
389 [-]: TEST      R50 0        ; if not R50 then PC := 395
390 [-]: JMP       395          ; PC := 395
391 [-]: GETGLOBAL R50 K20      ; R50 := Lotus_Game
392 [-]: GETTABLE  R50 R50 K68  ; R50 := R50["NT_HUB"]
393 [-]: SETTABLE  R42 K67 R50  ; R42["nodeType"] := R50
394 [-]: JMP       398          ; PC := 398
395 [-]: GETGLOBAL R50 K20      ; R50 := Lotus_Game
396 [-]: GETTABLE  R50 R50 K69  ; R50 := R50["NT_MISSION"]
397 [-]: SETTABLE  R42 K67 R50  ; R42["nodeType"] := R50
398 [-]: SETTABLE  R42 K80 R49  ; R42["region"] := R49
399 [-]: GETTABLE  R50 R42 K80  ; R50 := R42["region"]
400 [-]: GETTABLE  R50 R31 R50  ; R50 := R31[R50]
401 [-]: EQ        0 R50 K0     ; if R50 ~= nil then PC := 405
402 [-]: JMP       405          ; PC := 405
403 [-]: GETTABLE  R50 R42 K80  ; R50 := R42["region"]
404 [-]: SETTABLE  R31 R50 K39  ; R31[R50] := 0
405 [-]: GETTABLE  R50 R37 K14  ; R50 := R37["Type"]
406 [-]: SELF      R50 R50 K85  ; R51 := R50; R50 := R50["0x387DBBEB"]
407 [-]: CALL      R50 2 2      ; R50 := R50(R51)
408 [-]: GETTABLE  R51 R50 K86  ; R51 := R50["x"]
409 [-]: EQ        1 R51 K39    ; if R51 == 0 then PC := 419
410 [-]: JMP       419          ; PC := 419
411 [-]: GETTABLE  R51 R50 K87  ; R51 := R50["y"]
412 [-]: EQ        1 R51 K39    ; if R51 == 0 then PC := 419
413 [-]: JMP       419          ; PC := 419
414 [-]: GETTABLE  R51 R50 K88  ; R51 := R50["z"]
415 [-]: EQ        1 R51 K39    ; if R51 == 0 then PC := 419
416 [-]: JMP       419          ; PC := 419
417 [-]: SETTABLE  R42 K89 R50  ; R42["pos"] := R50
418 [-]: JMP       435          ; PC := 435
419 [-]: GETUPVAL  R51 U10      ; R51 := U10
420 [-]: GETTABLE  R52 R42 K80  ; R52 := R42["region"]
421 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
422 [-]: GETTABLE  R51 R51 K89  ; R51 := R51["pos"]
423 [-]: GETGLOBAL R52 K90      ; R52 := 0x221C9700
424 [-]: GETTABLE  R53 R42 K80  ; R53 := R42["region"]
425 [-]: GETTABLE  R53 R31 R53  ; R53 := R31[R53]
426 [-]: MUL       R53 R53 K91  ; R53 := R53 * 0.019999999552965
427 [-]: GETTABLE  R54 R42 K80  ; R54 := R42["region"]
428 [-]: GETTABLE  R54 R31 R54  ; R54 := R31[R54]
429 [-]: UNM       R54 R54      ; R54 := - R54
430 [-]: MUL       R54 R54 K91  ; R54 := R54 * 0.019999999552965
431 [-]: LOADK     R55 K39      ; R55 := 0
432 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
433 [-]: ADD       R51 R51 R52  ; R51 := R51 + R52
434 [-]: SETTABLE  R42 K89 R51  ; R42["pos"] := R51
435 [-]: GETTABLE  R51 R37 K92  ; R51 := R37["DecoOverride"]
436 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 442
437 [-]: JMP       442          ; PC := 442
438 [-]: GETTABLE  R51 R37 K92  ; R51 := R37["DecoOverride"]
439 [-]: SETTABLE  R42 K3 R51   ; R42["deco"] := R51
440 [-]: GETTABLE  R51 R37 K94  ; R51 := R37["DecoScale"]
441 [-]: SETTABLE  R42 K93 R51  ; R42["scale"] := R51
442 [-]: GETTABLE  R51 R37 K95  ; R51 := R37["NodeOffset"]
443 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 449
444 [-]: JMP       449          ; PC := 449
445 [-]: GETTABLE  R51 R42 K89  ; R51 := R42["pos"]
446 [-]: GETTABLE  R52 R37 K95  ; R52 := R37["NodeOffset"]
447 [-]: ADD       R51 R51 R52  ; R51 := R51 + R52
448 [-]: SETTABLE  R42 K89 R51  ; R42["pos"] := R51
449 [-]: GETTABLE  R51 R42 K80  ; R51 := R42["region"]
450 [-]: GETTABLE  R52 R42 K80  ; R52 := R42["region"]
451 [-]: GETTABLE  R52 R31 R52  ; R52 := R31[R52]
452 [-]: ADD       R52 R52 K11  ; R52 := R52 + 1
453 [-]: SETTABLE  R31 R51 R52  ; R31[R51] := R52
454 [-]: GETUPVAL  R51 U8       ; R51 := U8
455 [-]: MOVE      R52 R42      ; R52 := R42
456 [-]: CALL      R51 2 2      ; R51 := R51(R52)
457 [-]: MOVE      R41 R51      ; R41 := R51
458 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
459 [-]: MOVE      R52 R41      ; R52 := R41
460 [-]: CALL      R51 2 2      ; R51 := R51(R52)
461 [-]: TEST      R51 1        ; if R51 then PC := 545
462 [-]: JMP       545          ; PC := 545
463 [-]: TEST      R40 1        ; if R40 then PC := 478
464 [-]: JMP       478          ; PC := 478
465 [-]: GETTABLE  R51 R42 K33  ; R51 := R42["name"]
466 [-]: SETTABLE  R41 K33 R51  ; R41["name"] := R51
467 [-]: GETGLOBAL R51 K64      ; R51 := string
468 [-]: GETTABLE  R51 R51 K97  ; R51 := R51["0x639C642A"]
469 [-]: GETGLOBAL R52 K54      ; R52 := mMovie
470 [-]: SELF      R52 R52 K55  ; R53 := R52; R52 := R52["0x5DB0BD4"]
471 [-]: GETTABLE  R54 R42 K47  ; R54 := R42["locTag"]
472 [-]: SELF      R54 R54 K98  ; R55 := R54; R54 := R54["0x5EC7A3D2"]
473 [-]: CALL      R54 2 2      ; R54 := R54(R55)
474 [-]: MOVE      R55 R0       ; R55 := R0
475 [-]: CALL      R52 4 0      ; R52,... := R52(R53,R54,R55)
476 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
477 [-]: SETTABLE  R41 K96 R51  ; R41["locName"] := R51
478 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
479 [-]: GETTABLE  R52 R37 K22  ; R52 := R37["KeyChain"]
480 [-]: CALL      R51 2 2      ; R51 := R51(R52)
481 [-]: TEST      R51 1        ; if R51 then PC := 485
482 [-]: JMP       485          ; PC := 485
483 [-]: SETTABLE  R41 K99 K100 ; R41["completed"] := "0x0"
484 [-]: JMP       525          ; PC := 525
485 [-]: GETTABLE  R51 R41 K99  ; R51 := R41["completed"]
486 [-]: TEST      R51 1        ; if R51 then PC := 525
487 [-]: JMP       525          ; PC := 525
488 [-]: GETTABLE  R51 R37 K14  ; R51 := R37["Type"]
489 [-]: SELF      R51 R51 K15  ; R52 := R51; R51 := R51["0x625DA4BB"]
490 [-]: CALL      R51 2 2      ; R51 := R51(R52)
491 [-]: SELF      R52 R39 K101 ; R53 := R39; R52 := R39["0x315E860F"]
492 [-]: CALL      R52 2 2      ; R52 := R52(R53)
493 [-]: TEST      R52 0        ; if not R52 then PC := 525
494 [-]: JMP       525          ; PC := 525
495 [-]: EQ        0 R32 K0     ; if R32 ~= nil then PC := 506
496 [-]: JMP       506          ; PC := 506
497 [-]: GETGLOBAL R52 K50      ; R52 := gPlayerProfileMgr
498 [-]: SELF      R52 R52 K51  ; R53 := R52; R52 := R52["0x21EF7B1A"]
499 [-]: LOADK     R54 K39      ; R54 := 0
500 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
501 [-]: SELF      R52 R52 K52  ; R53 := R52; R52 := R52["0x654F1092"]
502 [-]: CALL      R52 2 2      ; R52 := R52(R53)
503 [-]: SELF      R52 R52 K102 ; R53 := R52; R52 := R52["0xC92135A6"]
504 [-]: CALL      R52 2 2      ; R52 := R52(R53)
505 [-]: MOVE      R32 R52      ; R32 := R52
506 [-]: GETGLOBAL R52 K1       ; R52 := 0xECFDD17
507 [-]: MOVE      R53 R32      ; R53 := R32
508 [-]: CALL      R52 2 4      ; R52,R53,R54 := R52(R53)
509 [-]: JMP       523          ; PC := 523
510 [-]: GETTABLE  R57 R56 K103 ; R57 := R56["mTag"]
511 [-]: EQ        0 R57 R51    ; if R57 ~= R51 then PC := 523
512 [-]: JMP       523          ; PC := 523
513 [-]: GETTABLE  R57 R56 K104 ; R57 := R56["mCompletes"]
514 [-]: LT        1 K39 R57    ; if 0 < R57 then PC := 517
515 [-]: JMP       517          ; PC := 517
516 [-]: MOVE      R57 R0       ; R57 := R0
517 [-]: MOVE      R57 R1       ; R57 := R1
518 [-]: SETTABLE  R41 K99 R57  ; R41["completed"] := R57
519 [-]: GETTABLE  R57 R41 K41  ; R57 := R41["radialSector"]
520 [-]: GETTABLE  R58 R56 K104 ; R58 := R56["mCompletes"]
521 [-]: SETTABLE  R57 K105 R58 ; R57["missionsCompleted"] := R58
522 [-]: JMP       525          ; PC := 525
523 [-]: TFORLOOP  R52 2        ; R55,R56 :=  R52(R53,R54); if R55 ~= nil then begin PC = 510; R54 := R55 end
524 [-]: JMP       510          ; PC := 510
525 [-]: SETTABLE  R41 K106 K100; R41["locked"] := "0x0"
526 [-]: SETTABLE  R41 K107 K71 ; R41["visibleLabel"] := "0x1"
527 [-]: SETTABLE  R41 K108 K100; R41["isEmpty"] := "0x0"
528 [-]: TEST      R40 0        ; if not R40 then PC := 531
529 [-]: JMP       531          ; PC := 531
530 [-]: SETTABLE  R41 K109 R47 ; R41["displayMissionOverride"] := R47
531 [-]: GETTABLE  R57 R37 K31  ; R57 := R37["Difficulty"]
532 [-]: EQ        1 R57 K0     ; if R57 == nil then PC := 545
533 [-]: JMP       545          ; PC := 545
534 [-]: GETTABLE  R57 R41 K41  ; R57 := R41["radialSector"]
535 [-]: GETTABLE  R57 R57 K34  ; R57 := R57["mission"]
536 [-]: GETTABLE  R58 R37 K31  ; R58 := R37["Difficulty"]
537 [-]: SETTABLE  R57 K73 R58  ; R57["difficulty"] := R58
538 [-]: GETUPVAL  R57 U0       ; R57 := U0
539 [-]: GETTABLE  R58 R41 K110 ; R58 := R41["id"]
540 [-]: GETTABLE  R57 R57 R58  ; R57 := R57[R58]
541 [-]: GETTABLE  R57 R57 K41  ; R57 := R57["radialSector"]
542 [-]: GETTABLE  R57 R57 K34  ; R57 := R57["mission"]
543 [-]: GETTABLE  R58 R37 K31  ; R58 := R37["Difficulty"]
544 [-]: SETTABLE  R57 K73 R58  ; R57["difficulty"] := R58
545 [-]: FORLOOP   R33 170      ; R33 += R35; if R33 <= R34 then begin PC := 170; R36 := R33 end
546 [-]: GETUPVAL  R57 U9       ; R57 := U9
547 [-]: GETTABLE  R57 R57 K46  ; R57 := R57["Active"]
548 [-]: TEST      R57 1        ; if R57 then PC := 625
549 [-]: JMP       625          ; PC := 625
550 [-]: GETGLOBAL R57 K50      ; R57 := gPlayerProfileMgr
551 [-]: SELF      R57 R57 K51  ; R58 := R57; R57 := R57["0x21EF7B1A"]
552 [-]: LOADK     R59 K39      ; R59 := 0
553 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
554 [-]: SELF      R57 R57 K52  ; R58 := R57; R57 := R57["0x654F1092"]
555 [-]: CALL      R57 2 2      ; R57 := R57(R58)
556 [-]: SELF      R57 R57 K111 ; R58 := R57; R57 := R57["0x2D0B8A86"]
557 [-]: CALL      R57 2 2      ; R57 := R57(R58)
558 [-]: GETTABLE  R57 R57 K112 ; R57 := R57["mFeaturedGuilds"]
559 [-]: LOADK     R58 K11      ; R58 := 1
560 [-]: LEN       R59 R57      ; R59 := # R57
561 [-]: LOADK     R60 K11      ; R60 := 1
562 [-]: FORPREP   R58 624      ; R58 -= R60; PC := 624
563 [-]: GETGLOBAL R62 K20      ; R62 := Lotus_Game
564 [-]: GETTABLE  R62 R62 K42  ; R62 := R62["0xAE448D50"]
565 [-]: CALL      R62 1 2      ; R62 := R62()
566 [-]: GETUPVAL  R63 U14      ; R63 := U14
567 [-]: GETTABLE  R63 R63 K113 ; R63 := R63["0xF81722A2"]
568 [-]: GETUPVAL  R64 U14      ; R64 := U14
569 [-]: GETTABLE  R64 R64 K114 ; R64 := R64["0x36BA5F48"]
570 [-]: CALL      R64 1 2      ; R64 := R64()
571 [-]: GETGLOBAL R65 K48      ; R65 := 0xEC274B1A
572 [-]: LOADK     R66 K115     ; R66 := "/Lotus/Language/Clan/Clan_DOJO"
573 [-]: CALL      R65 2 2      ; R65 := R65(R66)
574 [-]: GETGLOBAL R66 K48      ; R66 := 0xEC274B1A
575 [-]: GETTABLE  R67 R57 R61  ; R67 := R57[R61]
576 [-]: GETTABLE  R67 R67 K116 ; R67 := R67["mName"]
577 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
578 [-]: CALL      R63 0 2      ; R63 := R63(R64,...)
579 [-]: SETTABLE  R62 K47 R63  ; R62["locTag"] := R63
580 [-]: GETGLOBAL R63 K20      ; R63 := Lotus_Game
581 [-]: GETTABLE  R63 R63 K68  ; R63 := R63["NT_HUB"]
582 [-]: SETTABLE  R62 K67 R63  ; R62["nodeType"] := R63
583 [-]: SETTABLE  R62 K70 K71  ; R62["unlocked"] := "0x1"
584 [-]: GETGLOBAL R63 K48      ; R63 := 0xEC274B1A
585 [-]: LOADK     R64 K117     ; R64 := "FeaturedDojoTier"
586 [-]: MOVE      R65 R61      ; R65 := R61
587 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
588 [-]: CALL      R63 2 2      ; R63 := R63(R64)
589 [-]: SETTABLE  R62 K33 R63  ; R62["name"] := R63
590 [-]: GETUPVAL  R63 U10      ; R63 := U10
591 [-]: GETTABLE  R63 R63 K118 ; R63 := R63[14]
592 [-]: GETTABLE  R63 R63 K89  ; R63 := R63["pos"]
593 [-]: GETGLOBAL R64 K119     ; R64 := 0x4CBE9A09
594 [-]: GETGLOBAL R65 K90      ; R65 := 0x221C9700
595 [-]: LOADK     R66 K39      ; R66 := 0
596 [-]: LOADK     R67 K120     ; R67 := -0.15999999642372
597 [-]: LOADK     R68 K39      ; R68 := 0
598 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
599 [-]: GETGLOBAL R66 K121     ; R66 := 0x1E4F6281
600 [-]: LOADK     R67 K39      ; R67 := 0
601 [-]: LOADK     R68 K39      ; R68 := 0
602 [-]: LEN       R69 R57      ; R69 := # R57
603 [-]: SUB       R69 R69 K11  ; R69 := R69 - 1
604 [-]: DIV       R69 R69 K122 ; R69 := R69 / 2
605 [-]: SUB       R69 R69 R61  ; R69 := R69 - R61
606 [-]: ADD       R69 R69 K11  ; R69 := R69 + 1
607 [-]: MUL       R69 K123 R69 ; R69 := -30 * R69
608 [-]: CALL      R66 4 0      ; R66,... := R66(R67,R68,R69)
609 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
610 [-]: ADD       R63 R63 R64  ; R63 := R63 + R64
611 [-]: SETTABLE  R62 K89 R63  ; R62["pos"] := R63
612 [-]: GETUPVAL  R63 U8       ; R63 := U8
613 [-]: MOVE      R64 R62      ; R64 := R62
614 [-]: NEWTABLE  R65 0 3      ; R65 := {}
615 [-]: GETTABLE  R66 R57 R61  ; R66 := R57[R61]
616 [-]: GETTABLE  R66 R66 K125 ; R66 := R66["mId"]
617 [-]: GETTABLE  R66 R66 K125 ; R66 := R66["mId"]
618 [-]: SETTABLE  R65 K124 R66 ; R65["guildId"] := R66
619 [-]: GETTABLE  R66 R57 R61  ; R66 := R57[R61]
620 [-]: GETTABLE  R66 R66 K127 ; R66 := R66["mTier"]
621 [-]: SETTABLE  R65 K126 R66 ; R65["clanTier"] := R66
622 [-]: SETTABLE  R65 K128 K129; R65["overrideIconSize"] := 120
623 [-]: CALL      R63 3 1      ; R63(R64,R65)
624 [-]: FORLOOP   R58 563      ; R58 += R60; if R58 <= R59 then begin PC := 563; R61 := R58 end
625 [-]: GETUPVAL  R63 U15      ; R63 := U15
626 [-]: CALL      R63 1 1      ; R63()
627 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 3274
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["NodeA"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["position"]
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["NodeA"]
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["position"]
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["controlPointA"]
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["position"]
  7 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["controlPointB"]
  8 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["position"]
  9 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["NodeB"]
 10 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["position"]
 11 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeB"]
 12 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["position"]
 13 [-]: NEWTABLE  R7 6 0       ; R7 := {}
 14 [-]: MOVE      R8 R1        ; R8 := R1
 15 [-]: MOVE      R9 R2        ; R9 := R2
 16 [-]: MOVE      R10 R3       ; R10 := R3
 17 [-]: MOVE      R11 R4       ; R11 := R4
 18 [-]: MOVE      R12 R5       ; R12 := R5
 19 [-]: MOVE      R13 R6       ; R13 := R6
 20 [-]: SETLIST   R7 6 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 6
 21 [-]: RETURN    R7 2         ; return R7
 22 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 3284
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x221C9700
  2 [-]: CALL      R5 1 2       ; R5 := R5()
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x518098BD
  4 [-]: MOVE      R7 R5        ; R7 := R5
  5 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["position"]
  6 [-]: GETTABLE  R9 R1 K2     ; R9 := R1["position"]
  7 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
  8 [-]: GETGLOBAL R6 K3        ; R6 := 0x96BEA6B
  9 [-]: MOVE      R7 R5        ; R7 := R5
 10 [-]: GETTABLE  R8 R1 K2     ; R8 := R1["position"]
 11 [-]: MUL       R9 R5 R0     ; R9 := R5 * R0
 12 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 13 [-]: GETGLOBAL R6 K4        ; R6 := 0xEDD2EBFF
 14 [-]: MOVE      R7 R3        ; R7 := R3
 15 [-]: MOVE      R8 R5        ; R8 := R5
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: SETTABLE  R5 K5 K6     ; R5["x"] := 0
 18 [-]: SETTABLE  R5 K7 K6     ; R5["y"] := 0
 19 [-]: SETTABLE  R5 K8 R4     ; R5["z"] := R4
 20 [-]: GETGLOBAL R7 K3        ; R7 := 0x96BEA6B
 21 [-]: MOVE      R8 R5        ; R8 := R5
 22 [-]: MOVE      R9 R3        ; R9 := R3
 23 [-]: GETGLOBAL R10 K9       ; R10 := 0x4CBE9A09
 24 [-]: MOVE      R11 R5       ; R11 := R5
 25 [-]: MOVE      R12 R6       ; R12 := R6
 26 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 27 [-]: CALL      R7 0 1       ; R7(R8,...)
 28 [-]: RETURN    R5 2         ; return R5
 29 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 3296
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x1BF588C6
  2 [-]: LOADK     R3 K1        ; R3 := 0
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: LOADNIL   R2 R2        ; R2 := nil
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["position"]
  6 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["position"]
  7 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0x458357BC
  9 [-]: MOVE      R5 R3        ; R5 := R3
 10 [-]: CALL      R4 2 1       ; R4(R5)
 11 [-]: LOADK     R4 K4        ; R4 := 10
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: LOADK     R6 K5        ; R6 := 1
 14 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["RelatedNodes"]
 15 [-]: LEN       R7 R7        ; R7 := # R7
 16 [-]: LOADK     R8 K5        ; R8 := 1
 17 [-]: FORPREP   R6 44        ; R6 -= R8; PC := 44
 18 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["RelatedNodes"]
 19 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 20 [-]: GETTABLE  R11 R1 K7    ; R11 := R1["name"]
 21 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 44
 22 [-]: JMP       44           ; PC := 44
 23 [-]: GETUPVAL  R11 U0       ; R11 := U0
 24 [-]: GETGLOBAL R12 K8       ; R12 := 0x9FAED6BC
 25 [-]: MOVE      R13 R10      ; R13 := R10
 26 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 27 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 28 [-]: EQ        1 R11 K9     ; if R11 == nil then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["position"]
 31 [-]: GETTABLE  R13 R11 K2   ; R13 := R11["position"]
 32 [-]: SUB       R5 R12 R13   ; R5 := R12 - R13
 33 [-]: GETGLOBAL R12 K3       ; R12 := 0x458357BC
 34 [-]: MOVE      R13 R5       ; R13 := R5
 35 [-]: CALL      R12 2 1      ; R12(R13)
 36 [-]: GETGLOBAL R12 K10      ; R12 := 0xDBA27FAF
 37 [-]: MOVE      R13 R3       ; R13 := R3
 38 [-]: MOVE      R14 R5       ; R14 := R5
 39 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 40 [-]: LT        0 R12 R4     ; if R12 >= R4 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R4 R12       ; R4 := R12
 43 [-]: MOVE      R2 R11       ; R2 := R11
 44 [-]: FORLOOP   R6 18        ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
 45 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 64
 46 [-]: JMP       64           ; PC := 64
 47 [-]: GETTABLE  R13 R2 K2    ; R13 := R2["position"]
 48 [-]: GETTABLE  R14 R0 K11   ; R14 := R0["isShortcut"]
 49 [-]: TEST      R14 0        ; if not R14 then PC := 62
 50 [-]: JMP       62           ; PC := 62
 51 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["isShortcut"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["position"]
 55 [-]: SUB       R14 R13 R14  ; R14 := R13 - R14
 56 [-]: GETGLOBAL R15 K3       ; R15 := 0x458357BC
 57 [-]: MOVE      R16 R14      ; R16 := R14
 58 [-]: CALL      R15 2 1      ; R15(R16)
 59 [-]: GETTABLE  R15 R0 K2    ; R15 := R0["position"]
 60 [-]: MUL       R16 R14 K12  ; R16 := R14 * 0.050000000745058
 61 [-]: ADD       R13 R15 R16  ; R13 := R15 + R16
 62 [-]: RETURN    R13 2        ; return R13
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADNIL   R15 R15      ; R15 := nil
 65 [-]: RETURN    R15 2        ; return R15
 66 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 3333
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Instance"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 105
  5 [-]: JMP       105          ; PC := 105
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x221C9700
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["NodeA"]
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 10 [-]: TEST      R2 0         ; if not R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["NodeB"]
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 14 [-]: SETTABLE  R0 K3 R2     ; R0["IsSurfaceConnection"] := R2
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["NodeA"]
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["radialSector"]
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["region"]
 19 [-]: ADD       R3 R3 K9     ; R3 := R3 + 1
 20 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 23 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["radialSector"]
 24 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["region"]
 25 [-]: ADD       R4 R4 K9     ; R4 := R4 + 1
 26 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 27 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2["0x8EEB099D"]
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: CALL      R4 3 1       ; R4(R5,R6)
 30 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["IsSurfaceConnection"]
 31 [-]: TEST      R4 0         ; if not R4 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 34 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 35 [-]: GETUPVAL  R6 U2        ; R6 := U2
 36 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["NodeA"]
 37 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["radialSector"]
 38 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["region"]
 39 [-]: ADD       R7 R7 K9     ; R7 := R7 + 1
 40 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 41 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["pos"]
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 46 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 47 [-]: GETGLOBAL R6 K13       ; R6 := ZERO_VECTOR
 48 [-]: LOADK     R7 K14       ; R7 := 0
 49 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 50 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 52 [-]: TEST      R4 0         ; if not R4 then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["NodeB"]
 55 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 56 [-]: TEST      R4 0         ; if not R4 then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Instance"]
 62 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x5BD03F6B"]
 63 [-]: MOVE      R7 R4        ; R7 := R4
 64 [-]: CALL      R5 3 1       ; R5(R6,R7)
 65 [-]: JMP       105          ; PC := 105
 66 [-]: GETUPVAL  R5 U4        ; R5 := U4
 67 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 68 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 69 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 70 [-]: EQ        0 R5 K17     ; if R5 ~= nil then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETUPVAL  R6 U5        ; R6 := U5
 73 [-]: LOADK     R7 K18       ; R7 := -1
 74 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["NodeA"]
 75 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 76 [-]: MOVE      R10 R1       ; R10 := R1
 77 [-]: MOVE      R11 R3       ; R11 := R3
 78 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 79 [-]: MOVE      R5 R6        ; R5 := R6
 80 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 81 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["position"]
 82 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 83 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["position"]
 84 [-]: GETUPVAL  R8 U4        ; R8 := U4
 85 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 86 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["NodeA"]
 87 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 88 [-]: EQ        0 R8 K17     ; if R8 ~= nil then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETUPVAL  R9 U5        ; R9 := U5
 91 [-]: LOADK     R10 K20      ; R10 := 2
 92 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["NodeA"]
 93 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["NodeB"]
 94 [-]: MOVE      R13 R1       ; R13 := R1
 95 [-]: MOVE      R14 R3       ; R14 := R3
 96 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
 97 [-]: MOVE      R8 R9        ; R8 := R9
 98 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["Instance"]
 99 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0xE18C28D7"]
100 [-]: MOVE      R11 R5       ; R11 := R5
101 [-]: MOVE      R12 R6       ; R12 := R6
102 [-]: MOVE      R13 R7       ; R13 := R7
103 [-]: MOVE      R14 R8       ; R14 := R8
104 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
105 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 3367
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x113DAAED"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R5 K2        ; R5 := gBackgroundRegion
 10 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x9B0A3887"]
 11 [-]: GETTABLE  R7 R4 K4     ; R7 := R4["mInstance"]
 12 [-]: CALL      R5 3 1       ; R5(R6,R7)
 13 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 14 [-]: JMP       9            ; PC := 9
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: LOADK     R5 K5        ; R5 := 0
 20 [-]: LOADK     R6 K5        ; R6 := 0
 21 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 22 [-]: LOADK     R9 K6        ; R9 := 1
 23 [-]: GETUPVAL  R10 U0       ; R10 := U0
 24 [-]: LEN       R10 R10      ; R10 := # R10
 25 [-]: LOADK     R11 K6       ; R11 := 1
 26 [-]: FORPREP   R9 197       ; R9 -= R11; PC := 197
 27 [-]: GETUPVAL  R13 U4       ; R13 := U4
 28 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 29 [-]: GETUPVAL  R15 U0       ; R15 := U0
 30 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 31 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["locationA"]
 32 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 33 [-]: GETTABLE  R7 R13 R14   ; R7 := R13[R14]
 34 [-]: GETUPVAL  R13 U4       ; R13 := U4
 35 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 36 [-]: GETUPVAL  R15 U0       ; R15 := U0
 37 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 38 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["locationB"]
 39 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 40 [-]: GETTABLE  R8 R13 R14   ; R8 := R13[R14]
 41 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 42 [-]: MOVE      R14 R7       ; R14 := R7
 43 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 44 [-]: TEST      R13 1        ; if R13 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 47 [-]: MOVE      R14 R8       ; R14 := R8
 48 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 49 [-]: TEST      R13 1        ; if R13 then PC := 197
 50 [-]: JMP       197          ; PC := 197
 51 [-]: GETTABLE  R14 R7 K11   ; R14 := R7["locationEnabled"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 182
 53 [-]: JMP       182          ; PC := 182
 54 [-]: GETTABLE  R14 R8 K11   ; R14 := R8["locationEnabled"]
 55 [-]: TEST      R14 0        ; if not R14 then PC := 182
 56 [-]: JMP       182          ; PC := 182
 57 [-]: ADD       R5 R5 K6     ; R5 := R5 + 1
 58 [-]: GETUPVAL  R14 U5       ; R14 := U5
 59 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["Sectors"]
 60 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
 61 [-]: GETTABLE  R16 R7 K13   ; R16 := R7["name"]
 62 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 63 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 64 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 74
 65 [-]: JMP       74           ; PC := 74
 66 [-]: GETUPVAL  R14 U5       ; R14 := U5
 67 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["Sectors"]
 68 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
 69 [-]: GETTABLE  R16 R8 K13   ; R16 := R8["name"]
 70 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 71 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 72 [-]: EQ        1 R14 K14    ; if R14 == nil then PC := 77
 73 [-]: JMP       77           ; PC := 77
 74 [-]: ADD       R6 R6 K6     ; R6 := R6 + 1
 75 [-]: GETUPVAL  R14 U3       ; R14 := U3
 76 [-]: SETTABLE  R14 R6 R5    ; R14[R6] := R5
 77 [-]: GETUPVAL  R14 U2       ; R14 := U2
 78 [-]: NEWTABLE  R15 0 4      ; R15 := {}
 79 [-]: SETTABLE  R15 K15 R7   ; R15["NodeA"] := R7
 80 [-]: SETTABLE  R15 K16 R8   ; R15["NodeB"] := R8
 81 [-]: GETTABLE  R16 R7 K18   ; R16 := R7["isShortcut"]
 82 [-]: TEST      R16 0        ; if not R16 then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: GETTABLE  R16 R8 K18   ; R16 := R8["isShortcut"]
 85 [-]: SETTABLE  R15 K17 R16  ; R15["IsShortcut"] := R16
 86 [-]: GETTABLE  R16 R7 K20   ; R16 := R7["isJunction"]
 87 [-]: TEST      R16 0        ; if not R16 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETTABLE  R16 R8 K18   ; R16 := R8["isShortcut"]
 90 [-]: TEST      R16 1        ; if R16 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: GETTABLE  R16 R7 K18   ; R16 := R7["isShortcut"]
 93 [-]: TEST      R16 0        ; if not R16 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: GETTABLE  R16 R8 K20   ; R16 := R8["isJunction"]
 96 [-]: SETTABLE  R15 K19 R16  ; R15["IsJunction"] := R16
 97 [-]: SETTABLE  R14 R5 R15   ; R14[R5] := R15
 98 [-]: GETTABLE  R14 R7 K21   ; R14 := R7["RelatedNodes"]
 99 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: NEWTABLE  R14 0 0      ; R14 := {}
102 [-]: SETTABLE  R7 K21 R14   ; R7["RelatedNodes"] := R14
103 [-]: GETTABLE  R14 R8 K21   ; R14 := R8["RelatedNodes"]
104 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: NEWTABLE  R14 0 0      ; R14 := {}
107 [-]: SETTABLE  R8 K21 R14   ; R8["RelatedNodes"] := R14
108 [-]: GETGLOBAL R14 K22      ; R14 := table
109 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xE6450C9D"]
110 [-]: GETTABLE  R15 R7 K21   ; R15 := R7["RelatedNodes"]
111 [-]: GETTABLE  R16 R8 K13   ; R16 := R8["name"]
112 [-]: CALL      R14 3 1      ; R14(R15,R16)
113 [-]: GETGLOBAL R14 K22      ; R14 := table
114 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xE6450C9D"]
115 [-]: GETTABLE  R15 R8 K21   ; R15 := R8["RelatedNodes"]
116 [-]: GETTABLE  R16 R7 K13   ; R16 := R7["name"]
117 [-]: CALL      R14 3 1      ; R14(R15,R16)
118 [-]: GETUPVAL  R14 U2       ; R14 := U2
119 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
120 [-]: GETTABLE  R14 R14 K17  ; R14 := R14["IsShortcut"]
121 [-]: TEST      R14 0        ; if not R14 then PC := 197
122 [-]: JMP       197          ; PC := 197
123 [-]: GETTABLE  R14 R8 K25   ; R14 := R8["radialSector"]
124 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["region"]
125 [-]: SETTABLE  R7 K24 R14   ; R7["targetRegion"] := R14
126 [-]: GETTABLE  R14 R7 K25   ; R14 := R7["radialSector"]
127 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["region"]
128 [-]: SETTABLE  R8 K24 R14   ; R8["targetRegion"] := R14
129 [-]: GETUPVAL  R14 U2       ; R14 := U2
130 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
131 [-]: NEWTABLE  R15 0 1      ; R15 := {}
132 [-]: GETUPVAL  R16 U0       ; R16 := U0
133 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
134 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["controlPointA"]
135 [-]: SETTABLE  R15 K28 R16  ; R15["position"] := R16
136 [-]: SETTABLE  R14 K27 R15  ; R14["controlPointA"] := R15
137 [-]: GETGLOBAL R14 K29      ; R14 := 0x218C5C62
138 [-]: GETUPVAL  R15 U2       ; R15 := U2
139 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
140 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["controlPointA"]
141 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["position"]
142 [-]: CALL      R14 2 2      ; R14 := R14(R15)
143 [-]: LT        0 R14 K30    ; if R14 >= 0.0099999997764826 then PC := 155
144 [-]: JMP       155          ; PC := 155
145 [-]: GETUPVAL  R14 U2       ; R14 := U2
146 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
147 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["controlPointA"]
148 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["position"]
149 [-]: GETTABLE  R16 R8 K28   ; R16 := R8["position"]
150 [-]: GETTABLE  R17 R7 K28   ; R17 := R7["position"]
151 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
152 [-]: MUL       R16 R16 K31  ; R16 := R16 * 0.30000001192093
153 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
154 [-]: SETTABLE  R14 K28 R15  ; R14["position"] := R15
155 [-]: GETUPVAL  R14 U2       ; R14 := U2
156 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
157 [-]: NEWTABLE  R15 0 1      ; R15 := {}
158 [-]: GETUPVAL  R16 U0       ; R16 := U0
159 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
160 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["controlPointB"]
161 [-]: SETTABLE  R15 K28 R16  ; R15["position"] := R16
162 [-]: SETTABLE  R14 K32 R15  ; R14["controlPointB"] := R15
163 [-]: GETGLOBAL R14 K29      ; R14 := 0x218C5C62
164 [-]: GETUPVAL  R15 U2       ; R15 := U2
165 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
166 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["controlPointB"]
167 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["position"]
168 [-]: CALL      R14 2 2      ; R14 := R14(R15)
169 [-]: LT        0 R14 K30    ; if R14 >= 0.0099999997764826 then PC := 197
170 [-]: JMP       197          ; PC := 197
171 [-]: GETUPVAL  R14 U2       ; R14 := U2
172 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
173 [-]: GETTABLE  R14 R14 K32  ; R14 := R14["controlPointB"]
174 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["position"]
175 [-]: GETTABLE  R16 R8 K28   ; R16 := R8["position"]
176 [-]: GETTABLE  R17 R7 K28   ; R17 := R7["position"]
177 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
178 [-]: MUL       R16 R16 K33  ; R16 := R16 * 0.69999998807907
179 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
180 [-]: SETTABLE  R14 K28 R15  ; R14["position"] := R15
181 [-]: JMP       197          ; PC := 197
182 [-]: GETGLOBAL R14 K34      ; R14 := 0x93B1256B
183 [-]: LOADK     R15 K35      ; R15 := "ERROR: Invalid nodes in edge "
184 [-]: GETGLOBAL R16 K7       ; R16 := 0x9FAED6BC
185 [-]: GETUPVAL  R17 U0       ; R17 := U0
186 [-]: GETTABLE  R17 R17 R12  ; R17 := R17[R12]
187 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["locationA"]
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: LOADK     R17 K36      ; R17 := " to "
190 [-]: GETGLOBAL R18 K7       ; R18 := 0x9FAED6BC
191 [-]: GETUPVAL  R19 U0       ; R19 := U0
192 [-]: GETTABLE  R19 R19 R12  ; R19 := R19[R12]
193 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["locationB"]
194 [-]: CALL      R18 2 2      ; R18 := R18(R19)
195 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
196 [-]: CALL      R14 2 1      ; R14(R15)
197 [-]: FORLOOP   R9 27        ; R9 += R11; if R9 <= R10 then begin PC := 27; R12 := R9 end
198 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 3442
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Active"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: LOADNIL   R0 R1        ; R0 := R1 := nil
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: LOADK     R3 K3        ; R3 := 1
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: LEN       R4 R4        ; R4 := # R4
 15 [-]: LOADK     R5 K3        ; R5 := 1
 16 [-]: FORPREP   R3 112       ; R3 -= R5; PC := 112
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x1BF588C6
 18 [-]: LOADK     R8 K5        ; R8 := 0
 19 [-]: CALL      R7 2 1       ; R7(R8)
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R0 R7 R6     ; R0 := R7[R6]
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 24 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["isShortcut"]
 25 [-]: TEST      R7 0         ; if not R7 then PC := 44
 26 [-]: JMP       44           ; PC := 44
 27 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["isShortcut"]
 29 [-]: TEST      R7 0         ; if not R7 then PC := 44
 30 [-]: JMP       44           ; PC := 44
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 33 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 34 [-]: TEST      R7 0         ; if not R7 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 37 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 38 [-]: TEST      R7 0         ; if not R7 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: GETGLOBAL R1 K10       ; R1 := splineShortcutType
 41 [-]: JMP       82           ; PC := 82
 42 [-]: GETGLOBAL R1 K11       ; R1 := splineDisabledShortcutType
 43 [-]: JMP       82           ; PC := 82
 44 [-]: GETGLOBAL R1 K12       ; R1 := splineNextConnectionType
 45 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 46 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["edgesLocked"]
 47 [-]: TEST      R7 1         ; if R7 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 50 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["edgesLocked"]
 51 [-]: TEST      R7 0         ; if not R7 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R1 K14       ; R1 := splineDisabledConnectionType
 54 [-]: JMP       82           ; PC := 82
 55 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 56 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 57 [-]: TEST      R7 0         ; if not R7 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 60 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 61 [-]: TEST      R7 0         ; if not R7 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: GETGLOBAL R1 K15       ; R1 := splineConnectionType
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 66 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["locked"]
 67 [-]: TEST      R7 1         ; if R7 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 70 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 71 [-]: TEST      R7 1         ; if R7 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 74 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["locked"]
 75 [-]: TEST      R7 1         ; if R7 then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 78 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 79 [-]: TEST      R7 1         ; if R7 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: GETGLOBAL R1 K14       ; R1 := splineDisabledConnectionType
 82 [-]: GETGLOBAL R7 K17       ; R7 := 0x400E7765
 83 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["Instance"]
 84 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 85 [-]: TEST      R7 1         ; if R7 then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETGLOBAL R7 K19       ; R7 := gBackgroundRegion
 88 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7["0x9B0A3887"]
 89 [-]: GETTABLE  R9 R0 K18    ; R9 := R0["Instance"]
 90 [-]: CALL      R7 3 1       ; R7(R8,R9)
 91 [-]: GETGLOBAL R7 K19       ; R7 := gBackgroundRegion
 92 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0xBDD34CC6"]
 93 [-]: MOVE      R9 R1        ; R9 := R1
 94 [-]: GETGLOBAL R10 K22      ; R10 := ZERO_VECTOR
 95 [-]: GETGLOBAL R11 K23      ; R11 := ZERO_ROTATION
 96 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 97 [-]: SETTABLE  R0 K18 R7    ; R0["Instance"] := R7
 98 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["Instance"]
 99 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0xD63FF2C2"]
100 [-]: GETUPVAL  R9 U2        ; R9 := U2
101 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["0xF81722A2"]
102 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["IsShortcut"]
103 [-]: GETUPVAL  R11 U3       ; R11 := U3
104 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["SHORTCUT_CULL_DISTANCE"]
105 [-]: GETUPVAL  R12 U3       ; R12 := U3
106 [-]: GETTABLE  R12 R12 K28  ; R12 := R12["LINE_CULL_DISTANCE"]
107 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
108 [-]: CALL      R7 0 1       ; R7(R8,...)
109 [-]: GETUPVAL  R7 U4        ; R7 := U4
110 [-]: MOVE      R8 R0        ; R8 := R0
111 [-]: CALL      R7 2 1       ; R7(R8)
112 [-]: FORLOOP   R3 17        ; R3 += R5; if R3 <= R4 then begin PC := 17; R6 := R3 end
113 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 3484
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  8 [-]: LOADK     R2 K4        ; R2 := 0
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 133
 14 [-]: JMP       133          ; PC := 133
 15 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x654F1092"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 133
 21 [-]: JMP       133          ; PC := 133
 22 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x2D0B8A86"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 25 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 133
 26 [-]: JMP       133          ; PC := 133
 27 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 28 [-]: LEN       R3 R3        ; R3 := # R3
 29 [-]: LT        0 K4 R3      ; if 0 >= R3 then PC := 133
 30 [-]: JMP       133          ; PC := 133
 31 [-]: LOADK     R3 K10       ; R3 := 86400
 32 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mVoidTraders"]
 33 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[1]
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: GETGLOBAL R6 K13       ; R6 := Engine
 36 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0xD09D7910"]
 37 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["mActivation"]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: SETTABLE  R5 K12 R6    ; R5["Time"] := R6
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["mExpiry"]
 42 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["sec"]
 43 [-]: SETTABLE  R5 K16 R6    ; R5["Expiry"] := R6
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETGLOBAL R6 K20       ; R6 := 0xEC274B1A
 46 [-]: GETTABLE  R7 R4 K21    ; R7 := R4["mNode"]
 47 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 48 [-]: SETTABLE  R5 K19 R6    ; R5["Location"] := R6
 49 [-]: GETUPVAL  R5 U0        ; R5 := U0
 50 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 51 [-]: LE        0 R5 K4      ; if R5 > 0 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: SETTABLE  R5 K22 K11   ; R5["Progress"] := 1
 55 [-]: GETUPVAL  R5 U0        ; R5 := U0
 56 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 57 [-]: JMP       70           ; PC := 70
 58 [-]: GETUPVAL  R5 U0        ; R5 := U0
 59 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 60 [-]: LE        0 R5 R3      ; if R5 > R3 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R5 U0        ; R5 := U0
 63 [-]: GETUPVAL  R6 U0        ; R6 := U0
 64 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Time"]
 65 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 66 [-]: SUB       R6 K11 R6    ; R6 := 1 - R6
 67 [-]: SETTABLE  R5 K22 R6    ; R5["Progress"] := R6
 68 [-]: GETUPVAL  R5 U0        ; R5 := U0
 69 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 70 [-]: GETUPVAL  R5 U0        ; R5 := U0
 71 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Active"]
 72 [-]: TEST      R5 0         ; if not R5 then PC := 133
 73 [-]: JMP       133          ; PC := 133
 74 [-]: LOADNIL   R5 R5        ; R5 := nil
 75 [-]: MOVE      R6 R0        ; R6 := R0
 76 [-]: LOADK     R7 K11       ; R7 := 1
 77 [-]: GETUPVAL  R8 U1        ; R8 := U1
 78 [-]: LEN       R8 R8        ; R8 := # R8
 79 [-]: LOADK     R9 K11       ; R9 := 1
 80 [-]: FORPREP   R7 110       ; R7 -= R9; PC := 110
 81 [-]: GETUPVAL  R11 U1       ; R11 := U1
 82 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 83 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
 84 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 85 [-]: GETUPVAL  R12 U0       ; R12 := U0
 86 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 87 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 97
 88 [-]: JMP       97           ; PC := 97
 89 [-]: GETUPVAL  R11 U1       ; R11 := U1
 90 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 91 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["NodeB"]
 92 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 93 [-]: GETUPVAL  R12 U0       ; R12 := U0
 94 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 95 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 110
 96 [-]: JMP       110          ; PC := 110
 97 [-]: GETUPVAL  R11 U1       ; R11 := U1
 98 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 99 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
100 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
101 [-]: GETUPVAL  R12 U0       ; R12 := U0
102 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
103 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R6 R0        ; R6 := R0
106 [-]: MOVE      R6 R1        ; R6 := R1
107 [-]: GETUPVAL  R11 U1       ; R11 := U1
108 [-]: GETTABLE  R5 R11 R10   ; R5 := R11[R10]
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R7 81        ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
111 [-]: GETGLOBAL R11 K5       ; R11 := 0x400E7765
112 [-]: MOVE      R12 R5       ; R12 := R5
113 [-]: CALL      R11 2 2      ; R11 := R11(R12)
114 [-]: TEST      R11 1        ; if R11 then PC := 131
115 [-]: JMP       131          ; PC := 131
116 [-]: GETUPVAL  R11 U0       ; R11 := U0
117 [-]: GETTABLE  R12 R5 K29   ; R12 := R5["Instance"]
118 [-]: SELF      R12 R12 K30  ; R13 := R12; R12 := R12["0xAC71FD5A"]
119 [-]: GETUPVAL  R14 U2       ; R14 := U2
120 [-]: GETTABLE  R14 R14 K31  ; R14 := R14["0xF81722A2"]
121 [-]: MOVE      R15 R6       ; R15 := R6
122 [-]: GETUPVAL  R16 U0       ; R16 := U0
123 [-]: GETTABLE  R16 R16 K22  ; R16 := R16["Progress"]
124 [-]: GETUPVAL  R17 U0       ; R17 := U0
125 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["Progress"]
126 [-]: SUB       R17 K11 R17  ; R17 := 1 - R17
127 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
128 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
129 [-]: SETTABLE  R11 K28 R12  ; R11["Position"] := R12
130 [-]: JMP       133          ; PC := 133
131 [-]: GETUPVAL  R11 U0       ; R11 := U0
132 [-]: SETTABLE  R11 K23 K32  ; R11["Active"] := "0x0"
133 [-]: GETGLOBAL R11 K33      ; R11 := mMovie
134 [-]: SELF      R11 R11 K34  ; R12 := R11; R11 := R11["0x1C19D966"]
135 [-]: LOADK     R13 K35      ; R13 := "VoidTrader"
136 [-]: LOADK     R14 K36      ; R14 := "_visible"
137 [-]: GETUPVAL  R15 U0       ; R15 := U0
138 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Active"]
139 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
140 [-]: GETUPVAL  R11 U0       ; R11 := U0
141 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Active"]
142 [-]: TEST      R11 0        ; if not R11 then PC := 149
143 [-]: JMP       149          ; PC := 149
144 [-]: GETGLOBAL R11 K33      ; R11 := mMovie
145 [-]: SELF      R11 R11 K37  ; R12 := R11; R11 := R11["0x26581636"]
146 [-]: LOADK     R13 K38      ; R13 := "VoidTrader.Image"
147 [-]: GETGLOBAL R14 K39      ; R14 := voidTraderIcon
148 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
149 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 3535
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xF81722A2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := Engine
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x9490FE70"]
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: TEST      R1 1         ; if R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Active"]
 10 [-]: LOADK     R2 K4        ; R2 := 48
 11 [-]: LOADK     R3 K5        ; R3 := 18
 12 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
 15 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x9490FE70"]
 17 [-]: CALL      R2 1 2       ; R2 := R2()
 18 [-]: TEST      R2 1         ; if R2 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Active"]
 22 [-]: LOADK     R3 K6        ; R3 := 64
 23 [-]: LOADK     R4 K7        ; R4 := 32
 24 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 25 [-]: LOADK     R2 K8        ; R2 := 1
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: LEN       R3 R3        ; R3 := # R3
 28 [-]: LOADK     R4 K8        ; R4 := 1
 29 [-]: FORPREP   R2 57        ; R2 -= R4; PC := 57
 30 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 31 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 32 [-]: GETUPVAL  R8 U2        ; R8 := U2
 33 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 34 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 35 [-]: LOADK     R9 K12       ; R9 := "Btn"
 36 [-]: LOADK     R10 K13      ; R10 := "_width"
 37 [-]: MOVE      R11 R1       ; R11 := R1
 38 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 39 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 40 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 41 [-]: GETUPVAL  R8 U2        ; R8 := U2
 42 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 43 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 44 [-]: LOADK     R9 K12       ; R9 := "Btn"
 45 [-]: LOADK     R10 K14      ; R10 := "_height"
 46 [-]: MOVE      R11 R1       ; R11 := R1
 47 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 48 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 49 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 50 [-]: GETUPVAL  R8 U2        ; R8 := U2
 51 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 52 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 53 [-]: LOADK     R9 K15       ; R9 := "Name.Bg"
 54 [-]: LOADK     R10 K14      ; R10 := "_height"
 55 [-]: MOVE      R11 R0       ; R11 := R0
 56 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 57 [-]: FORLOOP   R2 30        ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
 58 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3545
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CachedConstructionProjects"]
  5 [-]: LOADK     R1 K2        ; R1 := 1
  6 [-]: LEN       R2 R0        ; R2 := # R0
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 16        ; R1 -= R3; PC := 16
  9 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 10 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["info"]
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mNode"]
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: SELF      R8 R6 K5     ; R9 := R6; R8 := R6["0x5EC7A3D2"]
 14 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 15 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 16 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 17 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3555
; #Upvalues:       19
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 0
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K3        ; R4 := 0.20000000298023
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K4        ; R0 := gBackgroundRegion
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x9139A00"]
 10 [-]: GETGLOBAL R2 K6        ; R2 := gCameraSpotType
 11 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R2 R0 K8     ; R2 := R0[1]
 14 [-]: SETTABLE  R1 K7 R2     ; R1["cameraSpot"] := R2
 15 [-]: GETGLOBAL R1 K9        ; R1 := _G
 16 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["StalkerMode"]
 17 [-]: TEST      R1 1         ; if R1 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["Transitioned"]
 21 [-]: TEST      R1 1         ; if R1 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x25992394"]
 25 [-]: GETGLOBAL R2 K13       ; R2 := mapLoadedSound
 26 [-]: CALL      R1 2 1       ; R1(R2)
 27 [-]: GETGLOBAL R1 K14       ; R1 := 0x221C9700
 28 [-]: LOADK     R2 K2        ; R2 := 0
 29 [-]: LOADK     R3 K2        ; R3 := 0
 30 [-]: LOADK     R4 K8        ; R4 := 1
 31 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["cameraSpot"]
 34 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0xEC183DDC"]
 35 [-]: MUL       R4 R1 K16    ; R4 := R1 * -5
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: GETUPVAL  R3 U1        ; R3 := U1
 39 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["cameraSpot"]
 40 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6DA72501"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SETTABLE  R2 K17 R3    ; R2["originPos"] := R3
 43 [-]: GETUPVAL  R2 U1        ; R2 := U1
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["cameraSpot"]
 46 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0xF23A7849"]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: SETTABLE  R2 K19 R3    ; R2["origRotation"] := R3
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: GETGLOBAL R3 K22       ; R3 := 0xA0DB3B89
 51 [-]: GETUPVAL  R4 U1        ; R4 := U1
 52 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["cameraSpot"]
 53 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xF23A7849"]
 54 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 55 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 56 [-]: SETTABLE  R2 K21 R3    ; R2["origFacing"] := R3
 57 [-]: GETUPVAL  R2 U1        ; R2 := U1
 58 [-]: GETGLOBAL R3 K14       ; R3 := 0x221C9700
 59 [-]: GETUPVAL  R4 U1        ; R4 := U1
 60 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["originPos"]
 61 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["x"]
 62 [-]: GETUPVAL  R5 U1        ; R5 := U1
 63 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["originPos"]
 64 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["y"]
 65 [-]: GETUPVAL  R6 U1        ; R6 := U1
 66 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["originPos"]
 67 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["z"]
 68 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 69 [-]: SETTABLE  R2 K23 R3    ; R2["pos"] := R3
 70 [-]: GETUPVAL  R2 U1        ; R2 := U1
 71 [-]: GETGLOBAL R3 K28       ; R3 := 0x1E4F6281
 72 [-]: GETUPVAL  R4 U1        ; R4 := U1
 73 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["origRotation"]
 74 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["heading"]
 75 [-]: GETUPVAL  R5 U1        ; R5 := U1
 76 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["origRotation"]
 77 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["pitch"]
 78 [-]: GETUPVAL  R6 U1        ; R6 := U1
 79 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["origRotation"]
 80 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["bank"]
 81 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 82 [-]: SETTABLE  R2 K27 R3    ; R2["rotation"] := R3
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 85 [-]: SETTABLE  R2 K32 R3    ; R2["sky"] := R3
 86 [-]: GETUPVAL  R2 U1        ; R2 := U1
 87 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["sky"]
 88 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 89 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9139A00"]
 90 [-]: GETGLOBAL R5 K34       ; R5 := gZoneAttribsType
 91 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 92 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[1]
 93 [-]: SETTABLE  R2 K33 R3    ; R2["Zone"] := R3
 94 [-]: GETUPVAL  R2 U1        ; R2 := U1
 95 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["sky"]
 96 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 97 [-]: SELF      R3 R3 K36    ; R4 := R3; R3 := R3["0x90391273"]
 98 [-]: GETUPVAL  R5 U3        ; R5 := U3
 99 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["SKY_CUBE"]
100 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
101 [-]: SETTABLE  R2 K35 R3    ; R2["Cube"] := R3
102 [-]: GETUPVAL  R2 U1        ; R2 := U1
103 [-]: GETUPVAL  R3 U1        ; R3 := U1
104 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["sky"]
105 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["Zone"]
106 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6DA72501"]
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: SETTABLE  R2 K38 R3    ; R2["skyOrigin"] := R3
109 [-]: GETUPVAL  R2 U1        ; R2 := U1
110 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["cameraSpot"]
111 [-]: SELF      R2 R2 K39    ; R3 := R2; R2 := R2["0xAF85565F"]
112 [-]: LOADK     R4 K8        ; R4 := 1
113 [-]: LOADK     R5 K2        ; R5 := 0
114 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
115 [-]: GETGLOBAL R2 K9        ; R2 := _G
116 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["StalkerMode"]
117 [-]: TEST      R2 0         ; if not R2 then PC := 192
118 [-]: JMP       192          ; PC := 192
119 [-]: GETGLOBAL R2 K40       ; R2 := 0xB5A59043
120 [-]: LOADK     R3 K41       ; R3 := 60
121 [-]: LOADK     R4 K2        ; R4 := 0
122 [-]: LOADK     R5 K2        ; R5 := 0
123 [-]: LOADK     R6 K2        ; R6 := 0
124 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
125 [-]: GETGLOBAL R3 K42       ; R3 := 0x400E7765
126 [-]: GETUPVAL  R4 U1        ; R4 := U1
127 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["sky"]
128 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["Cube"]
129 [-]: CALL      R3 2 2       ; R3 := R3(R4)
130 [-]: TEST      R3 1         ; if R3 then PC := 146
131 [-]: JMP       146          ; PC := 146
132 [-]: GETUPVAL  R3 U1        ; R3 := U1
133 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["sky"]
134 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["Cube"]
135 [-]: SELF      R3 R3 K43    ; R4 := R3; R3 := R3["0xD124E361"]
136 [-]: GETGLOBAL R5 K44       ; R5 := Lotus_Game
137 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["TINT_COLOR"]
138 [-]: GETTABLE  R6 R2 K46    ; R6 := R2["red"]
139 [-]: DIV       R6 R6 K47    ; R6 := R6 / 255
140 [-]: GETTABLE  R7 R2 K48    ; R7 := R2["green"]
141 [-]: DIV       R7 R7 K47    ; R7 := R7 / 255
142 [-]: GETTABLE  R8 R2 K49    ; R8 := R2["blue"]
143 [-]: DIV       R8 R8 K47    ; R8 := R8 / 255
144 [-]: LOADK     R9 K8        ; R9 := 1
145 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
146 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
147 [-]: SELF      R3 R3 K50    ; R4 := R3; R3 := R3["0xA76F0612"]
148 [-]: GETGLOBAL R5 K51       ; R5 := 0xEC274B1A
149 [-]: LOADK     R6 K52       ; R6 := "Cloud"
150 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
151 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
152 [-]: GETGLOBAL R4 K53       ; R4 := 0xECFDD17
153 [-]: MOVE      R5 R3        ; R5 := R3
154 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
155 [-]: JMP       167          ; PC := 167
156 [-]: SELF      R9 R8 K43    ; R10 := R8; R9 := R8["0xD124E361"]
157 [-]: GETGLOBAL R11 K44      ; R11 := Lotus_Game
158 [-]: GETTABLE  R11 R11 K45  ; R11 := R11["TINT_COLOR"]
159 [-]: GETTABLE  R12 R2 K46   ; R12 := R2["red"]
160 [-]: DIV       R12 R12 K47  ; R12 := R12 / 255
161 [-]: GETTABLE  R13 R2 K48   ; R13 := R2["green"]
162 [-]: DIV       R13 R13 K47  ; R13 := R13 / 255
163 [-]: GETTABLE  R14 R2 K49   ; R14 := R2["blue"]
164 [-]: DIV       R14 R14 K47  ; R14 := R14 / 255
165 [-]: LOADK     R15 K8       ; R15 := 1
166 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
167 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 156; R6 := R7 end
168 [-]: JMP       156          ; PC := 156
169 [-]: GETGLOBAL R9 K4        ; R9 := gBackgroundRegion
170 [-]: SELF      R9 R9 K50    ; R10 := R9; R9 := R9["0xA76F0612"]
171 [-]: GETGLOBAL R11 K51      ; R11 := 0xEC274B1A
172 [-]: LOADK     R12 K54      ; R12 := "Water"
173 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
174 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
175 [-]: GETGLOBAL R10 K53      ; R10 := 0xECFDD17
176 [-]: MOVE      R11 R9       ; R11 := R9
177 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
178 [-]: JMP       190          ; PC := 190
179 [-]: SELF      R15 R14 K43  ; R16 := R14; R15 := R14["0xD124E361"]
180 [-]: GETGLOBAL R17 K44      ; R17 := Lotus_Game
181 [-]: GETTABLE  R17 R17 K45  ; R17 := R17["TINT_COLOR"]
182 [-]: GETTABLE  R18 R2 K46   ; R18 := R2["red"]
183 [-]: DIV       R18 R18 K47  ; R18 := R18 / 255
184 [-]: GETTABLE  R19 R2 K48   ; R19 := R2["green"]
185 [-]: DIV       R19 R19 K47  ; R19 := R19 / 255
186 [-]: GETTABLE  R20 R2 K49   ; R20 := R2["blue"]
187 [-]: DIV       R20 R20 K47  ; R20 := R20 / 255
188 [-]: LOADK     R21 K8       ; R21 := 1
189 [-]: CALL      R15 7 1      ; R15(R16,R17,R18,R19,R20,R21)
190 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 179; R12 := R13 end
191 [-]: JMP       179          ; PC := 179
192 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
193 [-]: SELF      R15 R15 K55  ; R16 := R15; R15 := R15["0x7669354A"]
194 [-]: GETGLOBAL R17 K4       ; R17 := gBackgroundRegion
195 [-]: SELF      R17 R17 K56  ; R18 := R17; R17 := R17["0xF7C1BE25"]
196 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
197 [-]: CALL      R15 0 1      ; R15(R16,...)
198 [-]: GETGLOBAL R15 K57      ; R15 := _T
199 [-]: GETTABLE  R15 R15 K58  ; R15 := R15["FortressLocation"]
200 [-]: EQ        0 R15 K59    ; if R15 ~= nil then PC := 212
201 [-]: JMP       212          ; PC := 212
202 [-]: GETGLOBAL R15 K57      ; R15 := _T
203 [-]: NEWTABLE  R16 0 5      ; R16 := {}
204 [-]: SETTABLE  R16 K60 K8   ; R16["SplineIndex"] := 1
205 [-]: SETTABLE  R16 K61 K2   ; R16["Progress"] := 0
206 [-]: SETTABLE  R16 K62 K8   ; R16["MaxSplines"] := 1
207 [-]: GETUPVAL  R17 U4       ; R17 := U4
208 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["Velocity"]
209 [-]: SETTABLE  R16 K63 R17  ; R16["Velocity"] := R17
210 [-]: SETTABLE  R16 K64 K65  ; R16["Initialized"] := "0x0"
211 [-]: SETTABLE  R15 K58 R16  ; R15["FortressLocation"] := R16
212 [-]: GETUPVAL  R15 U5       ; R15 := U5
213 [-]: CALL      R15 1 1      ; R15()
214 [-]: GETUPVAL  R15 U6       ; R15 := U6
215 [-]: CALL      R15 1 1      ; R15()
216 [-]: GETUPVAL  R15 U7       ; R15 := U7
217 [-]: CALL      R15 1 1      ; R15()
218 [-]: GETUPVAL  R15 U8       ; R15 := U8
219 [-]: CALL      R15 1 1      ; R15()
220 [-]: GETUPVAL  R15 U9       ; R15 := U9
221 [-]: CALL      R15 1 1      ; R15()
222 [-]: GETUPVAL  R15 U10      ; R15 := U10
223 [-]: CALL      R15 1 1      ; R15()
224 [-]: GETGLOBAL R15 K53      ; R15 := 0xECFDD17
225 [-]: GETUPVAL  R16 U4       ; R16 := U4
226 [-]: GETTABLE  R16 R16 K66  ; R16 := R16["Sectors"]
227 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
228 [-]: JMP       234          ; PC := 234
229 [-]: GETUPVAL  R20 U4       ; R20 := U4
230 [-]: GETTABLE  R20 R20 K67  ; R20 := R20["Nodes"]
231 [-]: GETUPVAL  R21 U11      ; R21 := U11
232 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
233 [-]: SETTABLE  R20 R18 R21  ; R20[R18] := R21
234 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 229; R17 := R18 end
235 [-]: JMP       229          ; PC := 229
236 [-]: GETUPVAL  R20 U12      ; R20 := U12
237 [-]: CALL      R20 1 1      ; R20()
238 [-]: GETUPVAL  R20 U13      ; R20 := U13
239 [-]: CALL      R20 1 1      ; R20()
240 [-]: GETUPVAL  R20 U14      ; R20 := U14
241 [-]: CALL      R20 1 1      ; R20()
242 [-]: GETUPVAL  R20 U15      ; R20 := U15
243 [-]: CALL      R20 1 1      ; R20()
244 [-]: GETUPVAL  R20 U16      ; R20 := U16
245 [-]: CALL      R20 1 1      ; R20()
246 [-]: GETUPVAL  R20 U17      ; R20 := U17
247 [-]: CALL      R20 1 1      ; R20()
248 [-]: GETUPVAL  R20 U18      ; R20 := U18
249 [-]: CALL      R20 1 2      ; R20 := R20()
250 [-]: TEST      R20 1        ; if R20 then PC := 275
251 [-]: JMP       275          ; PC := 275
252 [-]: GETGLOBAL R20 K9       ; R20 := _G
253 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["StalkerMode"]
254 [-]: TEST      R20 1        ; if R20 then PC := 275
255 [-]: JMP       275          ; PC := 275
256 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
257 [-]: GETGLOBAL R21 K68      ; R21 := mapSoundMusic
258 [-]: CALL      R20 2 2      ; R20 := R20(R21)
259 [-]: TEST      R20 1        ; if R20 then PC := 275
260 [-]: JMP       275          ; PC := 275
261 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
262 [-]: GETGLOBAL R21 K9       ; R21 := _G
263 [-]: GETTABLE  R21 R21 K69  ; R21 := R21["MapSoundInst"]
264 [-]: CALL      R20 2 2      ; R20 := R20(R21)
265 [-]: TEST      R20 0        ; if not R20 then PC := 275
266 [-]: JMP       275          ; PC := 275
267 [-]: GETGLOBAL R20 K9       ; R20 := _G
268 [-]: GETGLOBAL R21 K4       ; R21 := gBackgroundRegion
269 [-]: SELF      R21 R21 K12  ; R22 := R21; R21 := R21["0x25992394"]
270 [-]: GETGLOBAL R23 K68      ; R23 := mapSoundMusic
271 [-]: GETGLOBAL R24 K70      ; R24 := ZERO_VECTOR
272 [-]: MOVE      R25 R0       ; R25 := R0
273 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
274 [-]: SETTABLE  R20 K69 R21  ; R20["MapSoundInst"] := R21
275 [-]: GETGLOBAL R20 K57      ; R20 := _T
276 [-]: SETTABLE  R20 K71 K72  ; R20["InStarChart"] := "0x1"
277 [-]: GETUPVAL  R20 U2       ; R20 := U2
278 [-]: GETGLOBAL R21 K4       ; R21 := gBackgroundRegion
279 [-]: SELF      R21 R21 K50  ; R22 := R21; R21 := R21["0xA76F0612"]
280 [-]: GETGLOBAL R23 K51      ; R23 := 0xEC274B1A
281 [-]: LOADK     R24 K74      ; R24 := "Void"
282 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
283 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
284 [-]: SETTABLE  R20 K73 R21  ; R20["voidDecos"] := R21
285 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
286 [-]: GETUPVAL  R21 U2       ; R21 := U2
287 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["voidDecos"]
288 [-]: CALL      R20 2 2      ; R20 := R20(R21)
289 [-]: TEST      R20 1        ; if R20 then PC := 382
290 [-]: JMP       382          ; PC := 382
291 [-]: GETUPVAL  R20 U2       ; R20 := U2
292 [-]: GETTABLE  R20 R20 K73  ; R20 := R20["voidDecos"]
293 [-]: LEN       R20 R20      ; R20 := # R20
294 [-]: LT        0 K2 R20     ; if 0 >= R20 then PC := 382
295 [-]: JMP       382          ; PC := 382
296 [-]: GETUPVAL  R20 U2       ; R20 := U2
297 [-]: NEWTABLE  R21 0 0      ; R21 := {}
298 [-]: SETTABLE  R20 K75 R21  ; R20["voidDecoData"] := R21
299 [-]: LOADK     R20 K8       ; R20 := 1
300 [-]: GETUPVAL  R21 U2       ; R21 := U2
301 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["voidDecos"]
302 [-]: LEN       R21 R21      ; R21 := # R21
303 [-]: LOADK     R22 K8       ; R22 := 1
304 [-]: FORPREP   R20 365      ; R20 -= R22; PC := 365
305 [-]: GETUPVAL  R24 U2       ; R24 := U2
306 [-]: GETTABLE  R24 R24 K73  ; R24 := R24["voidDecos"]
307 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
308 [-]: GETUPVAL  R25 U2       ; R25 := U2
309 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
310 [-]: NEWTABLE  R26 0 0      ; R26 := {}
311 [-]: SETTABLE  R25 R23 R26  ; R25[R23] := R26
312 [-]: GETUPVAL  R25 U2       ; R25 := U2
313 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
314 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
315 [-]: SELF      R26 R24 K18  ; R27 := R24; R26 := R24["0x6DA72501"]
316 [-]: CALL      R26 2 2      ; R26 := R26(R27)
317 [-]: SETTABLE  R25 K23 R26  ; R25["pos"] := R26
318 [-]: GETUPVAL  R25 U2       ; R25 := U2
319 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
320 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
321 [-]: SELF      R26 R24 K77  ; R27 := R24; R26 := R24["0xEFE96608"]
322 [-]: CALL      R26 2 2      ; R26 := R26(R27)
323 [-]: SETTABLE  R25 K76 R26  ; R25["BMin"] := R26
324 [-]: GETUPVAL  R25 U2       ; R25 := U2
325 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
326 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
327 [-]: SELF      R26 R24 K79  ; R27 := R24; R26 := R24["0x3D6ED718"]
328 [-]: CALL      R26 2 2      ; R26 := R26(R27)
329 [-]: SETTABLE  R25 K78 R26  ; R25["BMax"] := R26
330 [-]: GETUPVAL  R25 U2       ; R25 := U2
331 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
332 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
333 [-]: GETUPVAL  R26 U2       ; R26 := U2
334 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
335 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
336 [-]: GETTABLE  R26 R26 K78  ; R26 := R26["BMax"]
337 [-]: GETUPVAL  R27 U2       ; R27 := U2
338 [-]: GETTABLE  R27 R27 K75  ; R27 := R27["voidDecoData"]
339 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
340 [-]: GETTABLE  R27 R27 K76  ; R27 := R27["BMin"]
341 [-]: SUB       R26 R26 R27  ; R26 := R26 - R27
342 [-]: SETTABLE  R25 K80 R26  ; R25["BScale"] := R26
343 [-]: GETUPVAL  R25 U2       ; R25 := U2
344 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
345 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
346 [-]: GETTABLE  R25 R25 K80  ; R25 := R25["BScale"]
347 [-]: GETUPVAL  R26 U2       ; R26 := U2
348 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
349 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
350 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["BScale"]
351 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["x"]
352 [-]: DIV       R26 K8 R26   ; R26 := 1 / R26
353 [-]: SETTABLE  R25 K24 R26  ; R25["x"] := R26
354 [-]: GETUPVAL  R25 U2       ; R25 := U2
355 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
356 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
357 [-]: GETTABLE  R25 R25 K80  ; R25 := R25["BScale"]
358 [-]: GETUPVAL  R26 U2       ; R26 := U2
359 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
360 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
361 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["BScale"]
362 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["y"]
363 [-]: DIV       R26 K8 R26   ; R26 := 1 / R26
364 [-]: SETTABLE  R25 K25 R26  ; R25["y"] := R26
365 [-]: FORLOOP   R20 305      ; R20 += R22; if R20 <= R21 then begin PC := 305; R23 := R20 end
366 [-]: GETUPVAL  R25 U2       ; R25 := U2
367 [-]: NEWTABLE  R26 0 0      ; R26 := {}
368 [-]: SETTABLE  R25 K81 R26  ; R25["uvHoles"] := R26
369 [-]: LOADK     R25 K8       ; R25 := 1
370 [-]: LOADK     R26 K82      ; R26 := 20
371 [-]: LOADK     R27 K8       ; R27 := 1
372 [-]: FORPREP   R25 381      ; R25 -= R27; PC := 381
373 [-]: GETUPVAL  R29 U2       ; R29 := U2
374 [-]: GETTABLE  R29 R29 K81  ; R29 := R29["uvHoles"]
375 [-]: GETGLOBAL R30 K51      ; R30 := 0xEC274B1A
376 [-]: LOADK     R31 K83      ; R31 := "UvHole"
377 [-]: SUB       R32 R28 K8   ; R32 := R28 - 1
378 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
379 [-]: CALL      R30 2 2      ; R30 := R30(R31)
380 [-]: SETTABLE  R29 R28 R30  ; R29[R28] := R30
381 [-]: FORLOOP   R25 373      ; R25 += R27; if R25 <= R26 then begin PC := 373; R28 := R25 end
382 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3657
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x2C15B55B"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x2B788BAB"]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xAFDDC504"]
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 0         ; if not R0 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x2E31258"]
 27 [-]: CALL      R0 2 1       ; R0(R1)
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3668
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xC042262A"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K2 K3     ; R0["mSyncAvatars"] := "0x1"
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K3     ; R0["mUseOperatorForLocal"] := "0x1"
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K6     ; R0["mPortrait"] := "0x0"
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["Active"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: GETGLOBAL R0 K8        ; R0 := 0x400E7765
 18 [-]: GETGLOBAL R1 K9        ; R1 := mapDioramaRJ
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 36
 21 [-]: JMP       36           ; PC := 36
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xF0BB6DD"]
 24 [-]: GETGLOBAL R2 K9        ; R2 := mapDioramaRJ
 25 [-]: CALL      R0 3 1       ; R0(R1,R2)
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETGLOBAL R0 K8        ; R0 := 0x400E7765
 28 [-]: GETGLOBAL R1 K11       ; R1 := mapDiorama
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xF0BB6DD"]
 34 [-]: GETGLOBAL R2 K11       ; R2 := mapDiorama
 35 [-]: CALL      R0 3 1       ; R0(R1,R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3685
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xECFDD17
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["sectors"]
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: JMP       31           ; PC := 31
  5 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["mission"]
  6 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["missionType"]
  7 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
  8 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["MT_RAILJACK"]
  9 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 31
 10 [-]: JMP       31           ; PC := 31
 11 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 12 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["mission"]
 13 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["levelOverride"]
 14 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 15 [-]: TEST      R6 1         ; if R6 then PC := 31
 16 [-]: JMP       31           ; PC := 31
 17 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["mission"]
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["faction"]
 19 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 20 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["FC_GRINEER"]
 21 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["mission"]
 24 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["faction"]
 25 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 26 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["FC_CORPUS"]
 27 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: RETURN    R6 2         ; return R6
 31 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
 32 [-]: JMP       5            ; PC := 5
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: RETURN    R6 2         ; return R6
 35 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3694
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x1B252E3C"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xBFFBFE5E"]
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: MOVE      R5 R2        ; R5 := R2
 14 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 15 [-]: TEST      R3 1         ; if R3 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R3 K3        ; R3 := table
 18 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: MOVE      R5 R2        ; R5 := R2
 21 [-]: CALL      R3 3 1       ; R3(R4,R5)
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: RETURN    R3 2         ; return R3
 24 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3706
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 34
 17 [-]: JMP       34           ; PC := 34
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x30BDE7F"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 21 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mShip"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R4 K7        ; R4 := table
 26 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 29 [-]: GETTABLE  R7 R3 K6     ; R7 := R3["mShip"]
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x1B252E3C"]
 31 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 32 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 33 [-]: CALL      R4 0 1       ; R4(R5,...)
 34 [-]: LOADK     R4 K11       ; R4 := 1
 35 [-]: GETUPVAL  R5 U0        ; R5 := U0
 36 [-]: LEN       R5 R5        ; R5 := # R5
 37 [-]: LOADK     R6 K11       ; R6 := 1
 38 [-]: FORPREP   R4 45        ; R4 -= R6; PC := 45
 39 [-]: GETUPVAL  R8 U0        ; R8 := U0
 40 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: MOVE      R10 R0       ; R10 := R0
 43 [-]: GETTABLE  R11 R8 K12   ; R11 := R8["deco"]
 44 [-]: CALL      R9 3 1       ; R9(R10,R11)
 45 [-]: FORLOOP   R4 39        ; R4 += R6; if R4 <= R5 then begin PC := 39; R7 := R4 end
 46 [-]: LOADK     R9 K11       ; R9 := 1
 47 [-]: GETUPVAL  R10 U2       ; R10 := U2
 48 [-]: LEN       R10 R10      ; R10 := # R10
 49 [-]: LOADK     R11 K11      ; R11 := 1
 50 [-]: FORPREP   R9 84        ; R9 -= R11; PC := 84
 51 [-]: GETUPVAL  R13 U2       ; R13 := U2
 52 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 53 [-]: GETUPVAL  R14 U3       ; R14 := U3
 54 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["Active"]
 55 [-]: TEST      R14 0        ; if not R14 then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETUPVAL  R14 U3       ; R14 := U3
 58 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["Regions"]
 59 [-]: GETGLOBAL R15 K15      ; R15 := _T
 60 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["REGION_ID_DOJO"]
 61 [-]: EQ        1 R12 R15    ; if R12 == R15 then PC := 68
 62 [-]: JMP       68           ; PC := 68
 63 [-]: GETUPVAL  R15 U4       ; R15 := U4
 64 [-]: MOVE      R16 R13      ; R16 := R13
 65 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 66 [-]: JMP       69           ; PC := 69
 67 [-]: MOVE      R15 R0       ; R15 := R0
 68 [-]: MOVE      R15 R1       ; R15 := R1
 69 [-]: SETTABLE  R14 R12 R15  ; R14[R12] := R15
 70 [-]: GETUPVAL  R14 U1       ; R14 := U1
 71 [-]: MOVE      R15 R0       ; R15 := R0
 72 [-]: GETTABLE  R16 R13 K17  ; R16 := R13["zoomedInEffects"]
 73 [-]: CALL      R14 3 1      ; R14(R15,R16)
 74 [-]: GETUPVAL  R14 U1       ; R14 := U1
 75 [-]: MOVE      R15 R0       ; R15 := R0
 76 [-]: GETTABLE  R16 R13 K18  ; R16 := R13["decoRedux"]
 77 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 78 [-]: TEST      R14 1        ; if R14 then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETUPVAL  R14 U1       ; R14 := U1
 81 [-]: MOVE      R15 R0       ; R15 := R0
 82 [-]: GETTABLE  R16 R13 K12  ; R16 := R13["deco"]
 83 [-]: CALL      R14 3 1      ; R14(R15,R16)
 84 [-]: FORLOOP   R9 51        ; R9 += R11; if R9 <= R10 then begin PC := 51; R12 := R9 end
 85 [-]: LOADK     R14 K11      ; R14 := 1
 86 [-]: GETUPVAL  R15 U5       ; R15 := U5
 87 [-]: LEN       R15 R15      ; R15 := # R15
 88 [-]: LOADK     R16 K11      ; R16 := 1
 89 [-]: FORPREP   R14 101      ; R14 -= R16; PC := 101
 90 [-]: GETUPVAL  R18 U5       ; R18 := U5
 91 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
 92 [-]: GETUPVAL  R19 U6       ; R19 := U6
 93 [-]: MOVE      R20 R18      ; R20 := R18
 94 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 95 [-]: TEST      R19 0        ; if not R19 then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETUPVAL  R19 U1       ; R19 := U1
 98 [-]: MOVE      R20 R0       ; R20 := R0
 99 [-]: GETTABLE  R21 R18 K12  ; R21 := R18["deco"]
100 [-]: CALL      R19 3 1      ; R19(R20,R21)
101 [-]: FORLOOP   R14 90       ; R14 += R16; if R14 <= R15 then begin PC := 90; R17 := R14 end
102 [-]: LEN       R19 R0       ; R19 := # R0
103 [-]: LT        0 K2 R19     ; if 0 >= R19 then PC := 111
104 [-]: JMP       111          ; PC := 111
105 [-]: GETGLOBAL R19 K19      ; R19 := UISys
106 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0x449B53E0"]
107 [-]: MOVE      R20 R0       ; R20 := R0
108 [-]: MOVE      R21 R1       ; R21 := R1
109 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
110 [-]: MOVE      R19 R7       ; R19 := R7
111 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3756
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3763
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := 3000
  2 [-]: UNM       R1 R0        ; R1 := - R0
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: UNM       R3 R0        ; R3 := - R0
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: GETGLOBAL R5 K1        ; R5 := 0x329BDC44
  7 [-]: LOADK     R6 K2        ; R6 := "EE.Interface.Components.DragScroll"
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["0x46FF1A3C"]
 10 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
 11 [-]: LOADK     R8 K5        ; R8 := "Board"
 12 [-]: MOVE      R9 R1        ; R9 := R1
 13 [-]: MOVE      R10 R3       ; R10 := R3
 14 [-]: MOVE      R11 R2       ; R11 := R2
 15 [-]: MOVE      R12 R4       ; R12 := R4
 16 [-]: CALL      R6 7 2       ; R6 := R6(R7,R8,R9,R10,R11,R12)
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: CLOSURE   R7 0         ; R7 := closure(Function #84.1)
 20 [-]: SETTABLE  R6 K6 R7     ; R6["OnScroll"] := R7
 21 [-]: GETUPVAL  R6 U0        ; R6 := U0
 22 [-]: CLOSURE   R7 1         ; R7 := closure(Function #84.2)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SETTABLE  R6 K7 R7     ; R6["mOnStopDrag"] := R7
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: CLOSURE   R7 2         ; R7 := closure(Function #84.3)
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: SETTABLE  R6 K8 R7     ; R6["mOnDeselectCallback"] := R7
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 31 [-]: LOADK     R8 K10       ; R8 := "x"
 32 [-]: LOADK     R9 K11       ; R9 := 0.5
 33 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 36 [-]: LOADK     R8 K12       ; R8 := "y"
 37 [-]: LOADK     R9 K11       ; R9 := 0.5
 38 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 39 [-]: RETURN    R0 1         ; return 


; Function #84.1:
;
; Name:            
; Defined at line: 3773
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: RETURN    R0 1         ; return 


; Function #84.2:
;
; Name:            
; Defined at line: 3777
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Deselected"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K0 K1     ; R0["Deselected"] := nil
  7 [-]: RETURN    R0 1         ; return 


; Function #84.3:
;
; Name:            
; Defined at line: 3783
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3790
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K0 K1     ; R0["mMovingRegion"] := nil
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K2 K1     ; R0["mMovingNode"] := nil
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K3 K1     ; R0["mEdgeNode1"] := nil
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K1     ; R0["mEdgeNode2"] := nil
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K1     ; R0["mInitialPosition"] := nil
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SETTABLE  R0 K6 K1     ; R0["mInitialWorldCursor"] := nil
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: SETTABLE  R0 K7 K8     ; R0["mRotationAxis"] := "heading"
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: SETTABLE  R0 K9 K10    ; R0["mFramingRegion"] := 0
 19 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3804
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mShiftDown"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SETTABLE  R0 K2 K3     ; R0["mRotationAxis"] := "bank"
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: SETTABLE  R0 K2 K4     ; R0["mRotationAxis"] := "pitch"
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETUPVAL  R0 U1        ; R0 := U1
 20 [-]: SETTABLE  R0 K2 K5     ; R0["mRotationAxis"] := "heading"
 21 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3814
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K3        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 65
 10 [-]: JMP       65           ; PC := 65
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0x52C8784B"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 18 [-]: MOVE      R8 R3        ; R8 := R3
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: TEST      R7 1         ; if R7 then PC := 65
 21 [-]: JMP       65           ; PC := 65
 22 [-]: TEST      R6 0         ; if not R6 then PC := 65
 23 [-]: JMP       65           ; PC := 65
 24 [-]: SELF      R7 R3 K7     ; R8 := R3; R7 := R3["0x6C207447"]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LEN       R8 R7        ; R8 := # R7
 27 [-]: LE        0 R4 R8      ; if R4 > R8 then PC := 65
 28 [-]: JMP       65           ; PC := 65
 29 [-]: GETTABLE  R8 R7 R4     ; R8 := R7[R4]
 30 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mMainMission"]
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mKey"]
 32 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 33 [-]: MOVE      R10 R8       ; R10 := R8
 34 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 35 [-]: TEST      R9 1         ; if R9 then PC := 51
 36 [-]: JMP       51           ; PC := 51
 37 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0xA26B0FA3"]
 38 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 39 [-]: TEST      R9 1         ; if R9 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 42 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 43 [-]: SELF      R11 R8 K13   ; R12 := R8; R11 := R8["0x616C74B6"]
 44 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 45 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 46 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 47 [-]: MOVE      R12 R0       ; R12 := R0
 48 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 49 [-]: MOVE      R0 R9        ; R0 := R9
 50 [-]: JMP       65           ; PC := 65
 51 [-]: GETTABLE  R9 R7 R4     ; R9 := R7[R4]
 52 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["mLocTag"]
 53 [-]: GETGLOBAL R10 K16      ; R10 := EMPTY_SYMBOL
 54 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 57 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 58 [-]: GETTABLE  R11 R7 R4    ; R11 := R7[R4]
 59 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mLocTag"]
 60 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: MOVE      R12 R0       ; R12 := R0
 63 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 64 [-]: MOVE      R0 R9        ; R0 := R9
 65 [-]: RETURN    R0 2         ; return R0
 66 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3837
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := cjson
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x8DC1075B"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := gMatchingService
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x3016115E"]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: GETGLOBAL R2 K4        ; R2 := gGameRules
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8B598ED4"]
 11 [-]: GETGLOBAL R4 K6        ; R4 := gLotusHubGameRulesType
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 54
 14 [-]: JMP       54           ; PC := 54
 15 [-]: GETGLOBAL R2 K7        ; R2 := gPlayerProfileMgr
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 17 [-]: LOADK     R4 K9        ; R4 := 0
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x654F1092"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K11       ; R3 := string
 22 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xDE44F664"]
 23 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["name"]
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["HUB_TAG"]
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 30 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 31 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["HUB_SPAWN_DEFAULT"]
 32 [-]: CALL      R3 3 1       ; R3(R4,R5)
 33 [-]: JMP       54           ; PC := 54
 34 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 35 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x81645750"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: TEST      R3 0         ; if not R3 then PC := 50
 38 [-]: JMP       50           ; PC := 50
 39 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 40 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x8B598ED4"]
 41 [-]: GETGLOBAL R5 K20       ; R5 := gLotusDojoGameRulesType
 42 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 43 [-]: TEST      R3 1         ; if R3 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 46 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 47 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["HUB_SPAWN_TRADE"]
 48 [-]: CALL      R3 3 1       ; R3(R4,R5)
 49 [-]: JMP       54           ; PC := 54
 50 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 51 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 52 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["HUB_SPAWN_NAVIGATION"]
 53 [-]: CALL      R3 3 1       ; R3(R4,R5)
 54 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3853
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETGLOBAL R1 K3        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["sectorInfo"]
 10 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["sectorInfo"]
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K3        ; R1 := _T
 17 [-]: SETTABLE  R1 K4 K5     ; R1["sectorInfo"] := nil
 18 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3862
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x1C988750"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K1        ; R3 := "AbortConfirm"
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3866
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gGameRules
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1106FFC3"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0xE67B2EA2"]
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 14 [-]: RETURN    R3 0         ; return R3,...
 15 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3874
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3877
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3884
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETGLOBAL R1 K1        ; R1 := gMatchingService
 11 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1FEAD306"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K3        ; R2 := gRegion
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xA559F558"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: MOVE      R1 R1        ; R1 := R1
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3888
; #Upvalues:       10
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["0x8ECD61A2"]
  3 [-]: GETGLOBAL R7 K1        ; R7 := 0xEC274B1A
  4 [-]: MOVE      R8 R0        ; R8 := R0
  5 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  6 [-]: MOVE      R8 R1        ; R8 := R1
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: EQ        1 R6 K2      ; if R6 == nil then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R7 U0        ; R7 := U0
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["0xDABD460F"]
 12 [-]: MOVE      R8 R6        ; R8 := R6
 13 [-]: CALL      R7 2 1       ; R7(R8)
 14 [-]: MOVE      R7 R0        ; R7 := R0
 15 [-]: RETURN    R7 2         ; return R7
 16 [-]: GETUPVAL  R7 U1        ; R7 := U1
 17 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["0xBB3AACF2"]
 18 [-]: CALL      R7 1 2       ; R7 := R7()
 19 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7["0x4B93F65B"]
 20 [-]: GETGLOBAL R10 K1       ; R10 := 0xEC274B1A
 21 [-]: MOVE      R11 R0       ; R11 := R0
 22 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 23 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 24 [-]: TEST      R8 0         ; if not R8 then PC := 99
 25 [-]: JMP       99           ; PC := 99
 26 [-]: GETTABLE  R9 R8 K6     ; R9 := R8["skillReqs"]
 27 [-]: LEN       R9 R9        ; R9 := # R9
 28 [-]: LT        0 K7 R9      ; if 0 >= R9 then PC := 99
 29 [-]: JMP       99           ; PC := 99
 30 [-]: NEWTABLE  R9 6 0       ; R9 := {}
 31 [-]: LOADK     R10 K8       ; R10 := "Intrinsics"
 32 [-]: LOADK     R11 K9       ; R11 := "RailjackIntrinsicPilot"
 33 [-]: LOADK     R12 K10      ; R12 := "RailjackIntrinsicGunner"
 34 [-]: LOADK     R13 K11      ; R13 := "RailjackIntrinsicTactic"
 35 [-]: LOADK     R14 K12      ; R14 := "RailjackIntrinsicEngineer"
 36 [-]: LOADK     R15 K13      ; R15 := "RailjackIntrinsicCommand"
 37 [-]: SETLIST   R9 6 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 6
 38 [-]: GETGLOBAL R10 K14      ; R10 := 0xECFDD17
 39 [-]: GETTABLE  R11 R8 K6    ; R11 := R8["skillReqs"]
 40 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 41 [-]: JMP       97           ; PC := 97
 42 [-]: LOADK     R15 K7       ; R15 := 0
 43 [-]: GETTABLE  R16 R14 K15  ; R16 := R14["skill"]
 44 [-]: GETGLOBAL R17 K16      ; R17 := Lotus_Game
 45 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["LPS_NONE"]
 46 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 65
 47 [-]: JMP       65           ; PC := 65
 48 [-]: GETGLOBAL R16 K16      ; R16 := Lotus_Game
 49 [-]: GETTABLE  R16 R16 K17  ; R16 := R16["LPS_NONE"]
 50 [-]: GETGLOBAL R17 K16      ; R17 := Lotus_Game
 51 [-]: GETTABLE  R17 R17 K18  ; R17 := R17["LPS_COMMAND"]
 52 [-]: LOADK     R18 K19      ; R18 := 1
 53 [-]: FORPREP   R16 63       ; R16 -= R18; PC := 63
 54 [-]: GETGLOBAL R20 K20      ; R20 := math
 55 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["0x8B011038"]
 56 [-]: MOVE      R21 R15      ; R21 := R15
 57 [-]: GETGLOBAL R22 K22      ; R22 := gGameData
 58 [-]: SELF      R22 R22 K23  ; R23 := R22; R22 := R22["0x8B666D8D"]
 59 [-]: MOVE      R24 R19      ; R24 := R19
 60 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
 61 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
 62 [-]: MOVE      R15 R20      ; R15 := R20
 63 [-]: FORLOOP   R16 54       ; R16 += R18; if R16 <= R17 then begin PC := 54; R19 := R16 end
 64 [-]: JMP       70           ; PC := 70
 65 [-]: GETGLOBAL R20 K22      ; R20 := gGameData
 66 [-]: SELF      R20 R20 K23  ; R21 := R20; R20 := R20["0x8B666D8D"]
 67 [-]: GETTABLE  R22 R14 K15  ; R22 := R14["skill"]
 68 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 69 [-]: MOVE      R15 R20      ; R15 := R20
 70 [-]: GETTABLE  R20 R14 K24  ; R20 := R14["req"]
 71 [-]: LT        0 R15 R20    ; if R15 >= R20 then PC := 97
 72 [-]: JMP       97           ; PC := 97
 73 [-]: GETTABLE  R20 R14 K15  ; R20 := R14["skill"]
 74 [-]: ADD       R20 R20 K19  ; R20 := R20 + 1
 75 [-]: GETTABLE  R20 R9 R20   ; R20 := R9[R20]
 76 [-]: GETGLOBAL R21 K25      ; R21 := string
 77 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["0x639C642A"]
 78 [-]: GETGLOBAL R22 K27      ; R22 := 0xE6DC43B0
 79 [-]: LOADK     R23 K28      ; R23 := "/Lotus/Language/Intrinsics/"
 80 [-]: MOVE      R24 R20      ; R24 := R20
 81 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
 82 [-]: LOADNIL   R24 R24      ; R24 := nil
 83 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
 84 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 85 [-]: GETGLOBAL R22 K27      ; R22 := 0xE6DC43B0
 86 [-]: LOADK     R23 K29      ; R23 := "/Lotus/Language/Menu/InsufficientSkill"
 87 [-]: NEWTABLE  R24 0 2      ; R24 := {}
 88 [-]: SETTABLE  R24 K30 R21  ; R24["SKILL"] := R21
 89 [-]: GETTABLE  R25 R14 K24  ; R25 := R14["req"]
 90 [-]: SETTABLE  R24 K31 R25  ; R24["RANK"] := R25
 91 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
 92 [-]: GETUPVAL  R23 U2       ; R23 := U2
 93 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["0xB11F032"]
 94 [-]: MOVE      R24 R22      ; R24 := R22
 95 [-]: CALL      R23 2 1      ; R23(R24)
 96 [-]: RETURN    R0 1         ; return 
 97 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 42; R12 := R13 end
 98 [-]: JMP       42           ; PC := 42
 99 [-]: GETGLOBAL R23 K33      ; R23 := gRegion
100 [-]: SELF      R23 R23 K34  ; R24 := R23; R23 := R23["0x3E2F6BF"]
101 [-]: CALL      R23 2 2      ; R23 := R23(R24)
102 [-]: GETGLOBAL R24 K35      ; R24 := 0x400E7765
103 [-]: MOVE      R25 R23      ; R25 := R23
104 [-]: CALL      R24 2 2      ; R24 := R24(R25)
105 [-]: TEST      R24 1        ; if R24 then PC := 203
106 [-]: JMP       203          ; PC := 203
107 [-]: GETUPVAL  R24 U3       ; R24 := U3
108 [-]: MOVE      R25 R23      ; R25 := R23
109 [-]: CALL      R24 2 2      ; R24 := R24(R25)
110 [-]: TEST      R24 0        ; if not R24 then PC := 203
111 [-]: JMP       203          ; PC := 203
112 [-]: GETGLOBAL R24 K36      ; R24 := gGameRules
113 [-]: SELF      R24 R24 K37  ; R25 := R24; R24 := R24["0x1106FFC3"]
114 [-]: CALL      R24 2 2      ; R24 := R24(R25)
115 [-]: GETGLOBAL R25 K35      ; R25 := 0x400E7765
116 [-]: MOVE      R26 R7       ; R26 := R7
117 [-]: CALL      R25 2 2      ; R25 := R25(R26)
118 [-]: TEST      R25 1        ; if R25 then PC := 135
119 [-]: JMP       135          ; PC := 135
120 [-]: GETGLOBAL R25 K35      ; R25 := 0x400E7765
121 [-]: MOVE      R26 R23      ; R26 := R23
122 [-]: CALL      R25 2 2      ; R25 := R25(R26)
123 [-]: TEST      R25 1        ; if R25 then PC := 135
124 [-]: JMP       135          ; PC := 135
125 [-]: GETGLOBAL R25 K35      ; R25 := 0x400E7765
126 [-]: MOVE      R26 R24      ; R26 := R24
127 [-]: CALL      R25 2 2      ; R25 := R25(R26)
128 [-]: TEST      R25 1        ; if R25 then PC := 135
129 [-]: JMP       135          ; PC := 135
130 [-]: SELF      R25 R24 K38  ; R26 := R24; R25 := R24["0xE67B2EA2"]
131 [-]: MOVE      R27 R23      ; R27 := R23
132 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
133 [-]: TEST      R25 1        ; if R25 then PC := 136
134 [-]: JMP       136          ; PC := 136
135 [-]: RETURN    R0 1         ; return 
136 [-]: GETGLOBAL R25 K39      ; R25 := 0x93B1256B
137 [-]: LOADK     R26 K40      ; R26 := "RJ GoToMission - "
138 [-]: GETGLOBAL R27 K41      ; R27 := 0x9FAED6BC
139 [-]: MOVE      R28 R0       ; R28 := R0
140 [-]: CALL      R27 2 2      ; R27 := R27(R28)
141 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
142 [-]: CALL      R25 2 1      ; R25(R26)
143 [-]: GETGLOBAL R25 K42      ; R25 := _T
144 [-]: GETGLOBAL R26 K1       ; R26 := 0xEC274B1A
145 [-]: MOVE      R27 R0       ; R27 := R0
146 [-]: CALL      R26 2 2      ; R26 := R26(R27)
147 [-]: SETTABLE  R25 K43 R26  ; R25["RailJackNextMissionNode"] := R26
148 [-]: GETGLOBAL R25 K42      ; R25 := _T
149 [-]: GETGLOBAL R26 K36      ; R26 := gGameRules
150 [-]: SELF      R26 R26 K45  ; R27 := R26; R26 := R26["0x8B598ED4"]
151 [-]: GETGLOBAL R28 K46      ; R28 := gLotusAttractModeGameRulesType
152 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
153 [-]: SETTABLE  R25 K44 R26  ; R25["SeamlessRailJackTransition"] := R26
154 [-]: NEWTABLE  R25 0 2      ; R25 := {}
155 [-]: SETTABLE  R25 K47 R0   ; R25["name"] := R0
156 [-]: SETTABLE  R25 K48 K7   ; R25["difficulty"] := 0
157 [-]: GETGLOBAL R26 K49      ; R26 := cjson
158 [-]: GETTABLE  R26 R26 K50  ; R26 := R26["0x8DC1075B"]
159 [-]: MOVE      R27 R25      ; R27 := R25
160 [-]: CALL      R26 2 2      ; R26 := R26(R27)
161 [-]: GETGLOBAL R27 K51      ; R27 := gMatchingService
162 [-]: SELF      R27 R27 K52  ; R28 := R27; R27 := R27["0x3016115E"]
163 [-]: MOVE      R29 R26      ; R29 := R26
164 [-]: CALL      R27 3 1      ; R27(R28,R29)
165 [-]: SELF      R27 R7 K53   ; R28 := R7; R27 := R7["0xDF213CE1"]
166 [-]: GETGLOBAL R29 K1       ; R29 := 0xEC274B1A
167 [-]: LOADK     R30 K54      ; R30 := "CrewShipGenericTunnel"
168 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
169 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
170 [-]: SELF      R28 R24 K55  ; R29 := R24; R28 := R24["0xD93C7568"]
171 [-]: GETTABLE  R30 R27 K56  ; R30 := R27["mission"]
172 [-]: CALL      R28 3 1      ; R28(R29,R30)
173 [-]: GETUPVAL  R28 U4       ; R28 := U4
174 [-]: SETTABLE  R28 K57 K2   ; R28["mSelectedRegion"] := nil
175 [-]: GETGLOBAL R28 K51      ; R28 := gMatchingService
176 [-]: SELF      R28 R28 K58  ; R29 := R28; R28 := R28["0x1FEAD306"]
177 [-]: CALL      R28 2 2      ; R28 := R28(R29)
178 [-]: TEST      R28 0        ; if not R28 then PC := 195
179 [-]: JMP       195          ; PC := 195
180 [-]: GETGLOBAL R28 K36      ; R28 := gGameRules
181 [-]: SELF      R28 R28 K45  ; R29 := R28; R28 := R28["0x8B598ED4"]
182 [-]: GETGLOBAL R30 K59      ; R30 := gLotusHubGameRulesType
183 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
184 [-]: TEST      R28 1        ; if R28 then PC := 195
185 [-]: JMP       195          ; PC := 195
186 [-]: MOVE      R28 R1       ; R28 := R1
187 [-]: MOVE      R29 R0       ; R29 := R0
188 [-]: GETUPVAL  R30 U5       ; R30 := U5
189 [-]: GETTABLE  R30 R30 K60  ; R30 := R30["0xAD27E97A"]
190 [-]: MOVE      R31 R0       ; R31 := R0
191 [-]: MOVE      R32 R28      ; R32 := R28
192 [-]: MOVE      R33 R29      ; R33 := R29
193 [-]: GETUPVAL  R34 U6       ; R34 := U6
194 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
195 [-]: MOVE      R30 R1       ; R30 := R1
196 [-]: GETUPVAL  R31 U7       ; R31 := U7
197 [-]: MOVE      R32 R30      ; R32 := R30
198 [-]: CALL      R31 2 1      ; R31(R32)
199 [-]: GETUPVAL  R31 U8       ; R31 := U8
200 [-]: SETTABLE  R31 K61 K2   ; R31["SelectionNode"] := nil
201 [-]: MOVE      R31 R1       ; R31 := R1
202 [-]: RETURN    R31 2        ; return R31
203 [-]: NEWTABLE  R31 0 4      ; R31 := {}
204 [-]: SETTABLE  R31 K47 R0   ; R31["name"] := R0
205 [-]: SETTABLE  R31 K62 R1   ; R31["quest"] := R1
206 [-]: SETTABLE  R31 K48 R3   ; R31["difficulty"] := R3
207 [-]: SETTABLE  R31 K63 R5   ; R31["wager"] := R5
208 [-]: TEST      R2 0         ; if not R2 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: EQ        1 R2 K64     ; if R2 == "" then PC := 213
211 [-]: JMP       213          ; PC := 213
212 [-]: SETTABLE  R31 K65 R2   ; R31["raid"] := R2
213 [-]: TEST      R4 0         ; if not R4 then PC := 218
214 [-]: JMP       218          ; PC := 218
215 [-]: EQ        1 R4 K64     ; if R4 == "" then PC := 218
216 [-]: JMP       218          ; PC := 218
217 [-]: SETTABLE  R31 K66 R4   ; R31["voidTier"] := R4
218 [-]: GETGLOBAL R32 K35      ; R32 := 0x400E7765
219 [-]: MOVE      R33 R1       ; R33 := R1
220 [-]: CALL      R32 2 2      ; R32 := R32(R33)
221 [-]: TEST      R32 1        ; if R32 then PC := 269
222 [-]: JMP       269          ; PC := 269
223 [-]: GETGLOBAL R32 K25      ; R32 := string
224 [-]: GETTABLE  R32 R32 K67  ; R32 := R32["0xDE44F664"]
225 [-]: MOVE      R33 R0       ; R33 := R0
226 [-]: GETUPVAL  R34 U1       ; R34 := U1
227 [-]: GETTABLE  R34 R34 K68  ; R34 := R34["KEY_TAG"]
228 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
229 [-]: TEST      R32 0        ; if not R32 then PC := 269
230 [-]: JMP       269          ; PC := 269
231 [-]: GETGLOBAL R32 K25      ; R32 := string
232 [-]: GETTABLE  R32 R32 K67  ; R32 := R32["0xDE44F664"]
233 [-]: MOVE      R33 R0       ; R33 := R0
234 [-]: GETUPVAL  R34 U1       ; R34 := U1
235 [-]: GETTABLE  R34 R34 K68  ; R34 := R34["KEY_TAG"]
236 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
237 [-]: EQ        1 R32 K2     ; if R32 == nil then PC := 269
238 [-]: JMP       269          ; PC := 269
239 [-]: GETGLOBAL R33 K25      ; R33 := string
240 [-]: GETTABLE  R33 R33 K69  ; R33 := R33["0x7B782033"]
241 [-]: MOVE      R34 R0       ; R34 := R0
242 [-]: LOADK     R35 K19      ; R35 := 1
243 [-]: SUB       R36 R32 K19  ; R36 := R32 - 1
244 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
245 [-]: GETGLOBAL R34 K70      ; R34 := 0x7C282057
246 [-]: MOVE      R35 R33      ; R35 := R33
247 [-]: CALL      R34 2 2      ; R34 := R34(R35)
248 [-]: GETGLOBAL R35 K35      ; R35 := 0x400E7765
249 [-]: MOVE      R36 R34      ; R36 := R34
250 [-]: CALL      R35 2 2      ; R35 := R35(R36)
251 [-]: TEST      R35 1        ; if R35 then PC := 269
252 [-]: JMP       269          ; PC := 269
253 [-]: SELF      R35 R34 K71  ; R36 := R34; R35 := R34["0x9BC3049C"]
254 [-]: CALL      R35 2 2      ; R35 := R35(R36)
255 [-]: TEST      R35 0        ; if not R35 then PC := 269
256 [-]: JMP       269          ; PC := 269
257 [-]: GETGLOBAL R35 K42      ; R35 := _T
258 [-]: SETTABLE  R35 K72 R31  ; R35["sectorInfo"] := R31
259 [-]: GETGLOBAL R35 K73      ; R35 := mMovie
260 [-]: SELF      R35 R35 K74  ; R36 := R35; R35 := R35["0x458F27A9"]
261 [-]: LOADK     R37 K75      ; R37 := "ShowQuestConfirm"
262 [-]: GETGLOBAL R38 K41      ; R38 := 0x9FAED6BC
263 [-]: SELF      R39 R34 K76  ; R40 := R34; R39 := R34["0x5F68C582"]
264 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
265 [-]: CALL      R38 0 0      ; R38,... := R38(R39,...)
266 [-]: CALL      R35 0 1      ; R35(R36,...)
267 [-]: MOVE      R35 R1       ; R35 := R1
268 [-]: RETURN    R35 2        ; return R35
269 [-]: GETUPVAL  R35 U9       ; R35 := U9
270 [-]: MOVE      R36 R31      ; R36 := R31
271 [-]: CALL      R35 2 1      ; R35(R36)
272 [-]: MOVE      R35 R1       ; R35 := R1
273 [-]: RETURN    R35 2        ; return R35
274 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 4008
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Invasion"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["CachedInvasionInfo"]
  9 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 10 [-]: TEST      R1 1         ; if R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETGLOBAL R1 K2        ; R1 := _T
 14 [-]: GETGLOBAL R2 K2        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["CachedInvasionInfo"]
 16 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 17 [-]: SETTABLE  R1 K4 R2     ; R1["gInvasionInfo"] := R2
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x5FF274BB"]
 21 [-]: GETGLOBAL R4 K7        ; R4 := invasionMovie
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K1 R2     ; R1["Invasion"] := R2
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Invasion"]
 26 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0xD692CA7B"]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: MOVE      R1 R1        ; R1 := R1
 30 [-]: MOVE      R1 R1        ; R1 := R1
 31 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 32 [-]: GETGLOBAL R2 K2        ; R2 := _T
 33 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["SquadOverlay"]
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: TEST      R1 1         ; if R1 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R1 K2        ; R1 := _T
 38 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["SquadOverlay"]
 39 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 40 [-]: LOADK     R3 K11       ; R3 := "OnRadialSolarMapOpenChildMovie"
 41 [-]: LOADK     R4 K12       ; R4 := ""
 42 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 43 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 4023
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["Invasion"] := nil
  3 [-]: MOVE      R1 R0        ; R1 := R0
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K3        ; R2 := _T
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["SquadOverlay"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R1 K3        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["SquadOverlay"]
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x458F27A9"]
 14 [-]: LOADK     R3 K6        ; R3 := "OnRadialSolarMapCloseChildMovie"
 15 [-]: LOADK     R4 K7        ; R4 := ""
 16 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 17 [-]: TEST      R0 0         ; if not R0 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: EQ        1 R0 K7      ; if R0 == "" then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: LOADK     R3 K7        ; R3 := ""
 24 [-]: LOADK     R4 K7        ; R4 := ""
 25 [-]: LOADK     R5 K7        ; R5 := ""
 26 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 4036
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["VoidProjection"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["CachedActiveMissions"]
  9 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 10 [-]: TEST      R1 1         ; if R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 15 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x5FF274BB"]
 16 [-]: GETGLOBAL R4 K6        ; R4 := projectionMovie
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: SETTABLE  R1 K1 R2     ; R1["VoidProjection"] := R2
 19 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["VoidProjection"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 75
 24 [-]: JMP       75           ; PC := 75
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["VOID_PROJECTION_ITEMS"]
 27 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["VoidT1"]
 28 [-]: GETGLOBAL R2 K2        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["CachedActiveMissions"]
 30 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 31 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mMissionInfo"]
 32 [-]: GETUPVAL  R3 U2        ; R3 := U2
 33 [-]: GETGLOBAL R4 K11       ; R4 := 0x9FAED6BC
 34 [-]: GETTABLE  R5 R2 K12    ; R5 := R2["activeMissionTag"]
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: SETTABLE  R3 K10 R4    ; R3["MissionTier"] := R4
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 39 [-]: GETUPVAL  R4 U2        ; R4 := U2
 40 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["MissionTier"]
 41 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 42 [-]: TEST      R3 0         ; if not R3 then PC := 49
 43 [-]: JMP       49           ; PC := 49
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 46 [-]: GETUPVAL  R4 U2        ; R4 := U2
 47 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["MissionTier"]
 48 [-]: GETTABLE  R1 R3 R4     ; R1 := R3[R4]
 49 [-]: GETUPVAL  R3 U2        ; R3 := U2
 50 [-]: SETTABLE  R3 K13 R0    ; R3["SectorName"] := R0
 51 [-]: GETUPVAL  R3 U0        ; R3 := U0
 52 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["VoidProjection"]
 53 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0xB9C96BA0"]
 54 [-]: LOADK     R5 K15       ; R5 := "SetExclusiveTier"
 55 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 56 [-]: SELF      R7 R1 K16    ; R8 := R1; R7 := R1["0x1B252E3C"]
 57 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 58 [-]: LOADK     R8 K17       ; R8 := "OnVoidProjectionChosen"
 59 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 60 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 61 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["Movie"]
 64 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 65 [-]: TEST      R3 1         ; if R3 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETUPVAL  R3 U3        ; R3 := U3
 68 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["Movie"]
 69 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x458F27A9"]
 70 [-]: LOADK     R5 K20       ; R5 := "ItemBrowsing"
 71 [-]: LOADK     R6 K21       ; R6 := "true"
 72 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 73 [-]: MOVE      R3 R1        ; R3 := R1
 74 [-]: MOVE      R3 R4        ; R3 := R4
 75 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 76 [-]: GETGLOBAL R4 K2        ; R4 := _T
 77 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["SquadOverlay"]
 78 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 79 [-]: TEST      R3 1         ; if R3 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETGLOBAL R3 K2        ; R3 := _T
 82 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["SquadOverlay"]
 83 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x458F27A9"]
 84 [-]: LOADK     R5 K23       ; R5 := "OnRadialSolarMapOpenChildMovie"
 85 [-]: LOADK     R6 K24       ; R6 := ""
 86 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 87 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 4066
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["VoidProjection"] := nil
  3 [-]: MOVE      R1 R0        ; R1 := R0
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U2        ; R2 := U2
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Movie"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Movie"]
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x458F27A9"]
 14 [-]: LOADK     R3 K5        ; R3 := "ItemBrowsing"
 15 [-]: LOADK     R4 K6        ; R4 := "false"
 16 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 17 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 18 [-]: GETGLOBAL R2 K7        ; R2 := _T
 19 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R1 K7        ; R1 := _T
 24 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["SquadOverlay"]
 25 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x458F27A9"]
 26 [-]: LOADK     R3 K9        ; R3 := "OnRadialSolarMapCloseChildMovie"
 27 [-]: LOADK     R4 K10       ; R4 := ""
 28 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 29 [-]: EQ        0 R0 K11     ; if R0 ~= "true" then PC := 43
 30 [-]: JMP       43           ; PC := 43
 31 [-]: GETUPVAL  R1 U3        ; R1 := U3
 32 [-]: GETUPVAL  R2 U4        ; R2 := U4
 33 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["SectorName"]
 34 [-]: GETUPVAL  R3 U5        ; R3 := U5
 35 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["ACTIVE_MISSION_TAG"]
 36 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 37 [-]: LOADK     R3 K10       ; R3 := ""
 38 [-]: LOADK     R4 K10       ; R4 := ""
 39 [-]: LOADK     R5 K10       ; R5 := ""
 40 [-]: GETUPVAL  R6 U4        ; R6 := U4
 41 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["MissionTier"]
 42 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 43 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 4083
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 4086
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Nightmare"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K1        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CachedSkullNodes"]
  7 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  8 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R1 K1        ; R1 := _T
 12 [-]: SETTABLE  R1 K4 R0     ; R1["gNightmareNodeName"] := R0
 13 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xF271473D"]
 15 [-]: CALL      R1 1 2       ; R1 := R1()
 16 [-]: GETGLOBAL R2 K5        ; R2 := Engine
 17 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["ThreeOptions"]
 18 [-]: SETTABLE  R1 K7 R2     ; R1["dialogType"] := R2
 19 [-]: SETTABLE  R1 K9 K10    ; R1["locString"] := "/Lotus/Language/Menu/ConfirmNightmare"
 20 [-]: SETTABLE  R1 K11 K12   ; R1["firstString"] := "/Lotus/Language/Menu/ConfirmNightmareYes"
 21 [-]: SETTABLE  R1 K13 K14   ; R1["secondString"] := "/Lotus/Language/Menu/ConfirmNightmareNo"
 22 [-]: SETTABLE  R1 K15 K16   ; R1["thirdString"] := "/Menu/Confirm_Item_Cancel"
 23 [-]: SELF      R2 R1 K17    ; R3 := R1; R2 := R1["0x69A4A158"]
 24 [-]: LOADK     R4 K18       ; R4 := "ConfirmNightmare"
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETUPVAL  R3 U1        ; R3 := U1
 28 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0x82F0B112"]
 29 [-]: MOVE      R4 R1        ; R4 := R1
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: SETTABLE  R2 K0 R3     ; R2["Nightmare"] := R3
 32 [-]: MOVE      R2 R1        ; R2 := R1
 33 [-]: MOVE      R2 R2        ; R2 := R2
 34 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 4105
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["Nightmare"] := nil
  3 [-]: MOVE      R1 R0        ; R1 := R0
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETGLOBAL R1 K2        ; R1 := Engine
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["CI_CANCEL"]
  7 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K4        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["gNightmareNodeName"]
 12 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["CI_GENERIC_1"]
 14 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R2 K7        ; R2 := _G
 17 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["CachedGoalInfo"]
 18 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: MOVE      R2 R1        ; R2 := R1
 22 [-]: GETUPVAL  R3 U2        ; R3 := U2
 23 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["EVENT_TAG"]
 24 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 27 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CI_SELECT"]
 28 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: MOVE      R2 R1        ; R2 := R1
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["NIGHTMARE_TAG"]
 33 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 34 [-]: GETUPVAL  R2 U3        ; R2 := U3
 35 [-]: MOVE      R3 R1        ; R3 := R1
 36 [-]: LOADK     R4 K12       ; R4 := ""
 37 [-]: LOADK     R5 K12       ; R5 := ""
 38 [-]: LOADK     R6 K12       ; R6 := ""
 39 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 40 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 4126
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 4129
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["MovieInst"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 1         ; if R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Movie"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETUPVAL  R4 U1        ; R4 := U1
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Movie"]
 16 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 17 [-]: LOADK     R6 K4        ; R6 := "ItemBrowsing"
 18 [-]: LOADK     R7 K5        ; R7 := "true"
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: SETTABLE  R4 K6 R0     ; R4["SectorName"] := R0
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: SETTABLE  R4 K7 R2     ; R4["Quest"] := R2
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: SETTABLE  R4 K8 R3     ; R4["Difficulty"] := R3
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5FF274BB"]
 29 [-]: GETGLOBAL R7 K11       ; R7 := wagerMovie
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: SETTABLE  R4 K1 R5     ; R4["MovieInst"] := R5
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["MovieInst"]
 36 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0xB9C96BA0"]
 37 [-]: LOADK     R6 K13       ; R6 := "SetSectorNameAndCloseCallback"
 38 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 39 [-]: MOVE      R8 R1        ; R8 := R1
 40 [-]: LOADK     R9 K14       ; R9 := "ConfirmWagerSelection"
 41 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 42 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 43 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 44 [-]: GETGLOBAL R5 K15       ; R5 := _T
 45 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["SquadOverlay"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R4 K15       ; R4 := _T
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["SquadOverlay"]
 51 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 52 [-]: LOADK     R6 K17       ; R6 := "OnRadialSolarMapOpenChildMovie"
 53 [-]: LOADK     R7 K18       ; R7 := ""
 54 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 55 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 4152
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 K1     ; R2["MovieInst"] := nil
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETUPVAL  R3 U2        ; R3 := U2
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Movie"]
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 14 [-]: LOADK     R4 K5        ; R4 := "ItemBrowsing"
 15 [-]: LOADK     R5 K6        ; R5 := "false"
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K7        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["SquadOverlay"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R2 K7        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 25 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 26 [-]: LOADK     R4 K9        ; R4 := "OnRadialSolarMapCloseChildMovie"
 27 [-]: LOADK     R5 K10       ; R5 := ""
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 55
 30 [-]: JMP       55           ; PC := 55
 31 [-]: EQ        1 R0 K6      ; if R0 == "false" then PC := 55
 32 [-]: JMP       55           ; PC := 55
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Quest"]
 36 [-]: TEST      R3 0         ; if not R3 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SectorName"]
 40 [-]: TEST      R3 1         ; if R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["Quest"]
 45 [-]: LOADNIL   R5 R5        ; R5 := nil
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Difficulty"]
 48 [-]: LOADNIL   R7 R7        ; R7 := nil
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 51 [-]: TEST      R2 1         ; if R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: RETURN    R0 1         ; return 
 54 [-]: JMP       57           ; PC := 57
 55 [-]: GETGLOBAL R2 K7        ; R2 := _T
 56 [-]: SETTABLE  R2 K14 K15   ; R2["MadeWagerChoice"] := "0x0"
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: SETTABLE  R2 K12 K10   ; R2["SectorName"] := ""
 59 [-]: GETUPVAL  R2 U0        ; R2 := U0
 60 [-]: SETTABLE  R2 K11 K1    ; R2["Quest"] := nil
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: SETTABLE  R2 K13 K16   ; R2["Difficulty"] := 0
 63 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4177
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  5 [-]: TEST      R0 1         ; if R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x48FBE19F"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LOADK     R1 K3        ; R1 := 1
 12 [-]: LEN       R2 R0        ; R2 := # R0
 13 [-]: LOADK     R3 K3        ; R3 := 1
 14 [-]: FORPREP   R1 25        ; R1 -= R3; PC := 25
 15 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 16 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8F6EA7B6"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: TEST      R5 1         ; if R5 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R5 K5        ; R5 := gMatchingService
 21 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xFE13353B"]
 22 [-]: GETTABLE  R7 R0 R4     ; R7 := R0[R4]
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 25 [-]: FORLOOP   R1 15        ; R1 += R3; if R1 <= R2 then begin PC := 15; R4 := R1 end
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["Node"]
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["radialSector"]
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mission"]
 30 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["SectorName"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K11       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["0xDE44F664"]
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: GETUPVAL  R9 U2        ; R9 := U2
 38 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["KEY_TAG"]
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: EQ        1 R7 K14     ; if R7 == nil then PC := 71
 41 [-]: JMP       71           ; PC := 71
 42 [-]: GETGLOBAL R8 K11       ; R8 := string
 43 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["0x7B782033"]
 44 [-]: MOVE      R9 R6        ; R9 := R6
 45 [-]: LOADK     R10 K3       ; R10 := 1
 46 [-]: SUB       R11 R7 K3    ; R11 := R7 - 1
 47 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 48 [-]: GETGLOBAL R9 K16       ; R9 := 0x7C282057
 49 [-]: MOVE      R10 R8       ; R10 := R8
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: GETGLOBAL R10 K17      ; R10 := 0x400E7765
 52 [-]: MOVE      R11 R9       ; R11 := R9
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: TEST      R10 1        ; if R10 then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETGLOBAL R10 K19      ; R10 := 0x2C00D429
 57 [-]: MOVE      R11 R8       ; R11 := R8
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: SETTABLE  R5 K18 R10   ; R5["levelKeyName"] := R10
 60 [-]: GETUPVAL  R10 U1       ; R10 := U1
 61 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 62 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 63 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 68 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 69 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 70 [-]: SETTABLE  R5 K21 R10   ; R5["keyChainName"] := R10
 71 [-]: GETUPVAL  R10 U1       ; R10 := U1
 72 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 73 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 74 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["name"]
 75 [-]: GETUPVAL  R11 U1       ; R11 := U1
 76 [-]: SETTABLE  R11 K0 K14   ; R11["Node"] := nil
 77 [-]: GETGLOBAL R11 K23      ; R11 := _T
 78 [-]: SETTABLE  R11 K24 K25  ; R11["StartingSoloMission"] := "0x1"
 79 [-]: GETUPVAL  R11 U3       ; R11 := U3
 80 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["0xCFE73DF8"]
 81 [-]: MOVE      R12 R10      ; R12 := R10
 82 [-]: MOVE      R13 R5       ; R13 := R5
 83 [-]: GETUPVAL  R14 U4       ; R14 := U4
 84 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["0xF81722A2"]
 85 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
 86 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 87 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 88 [-]: MOVE      R15 R15      ; R15 := R15
 89 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 90 [-]: LOADNIL   R17 R17      ; R17 := nil
 91 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 92 [-]: CALL      R11 0 1      ; R11(R12,...)
 93 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4213
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["SoloMission"] := nil
  3 [-]: MOVE      R1 R0        ; R1 := R0
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETGLOBAL R1 K2        ; R1 := Engine
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["CI_CANCEL"]
  7 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: SETTABLE  R1 K4 K1     ; R1["Node"] := nil
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Node"]
 14 [-]: TEST      R1 1         ; if R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: MOVE      R1 R1        ; R1 := R1
 18 [-]: MOVE      R1 R1        ; R1 := R1
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x93B1256B
 20 [-]: LOADK     R2 K6        ; R2 := "ConfirmSoloMission"
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: GETGLOBAL R1 K7        ; R1 := gMatchingService
 23 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x1E13A326"]
 24 [-]: LOADK     R3 K9        ; R3 := "OpenSoloMission"
 25 [-]: CALL      R1 3 1       ; R1(R2,R3)
 26 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4231
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["BackgroundMovie"]
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
  6 [-]: LOADK     R3 K3        ; R3 := "ShowBlockingMessage"
  7 [-]: LOADK     R4 K4        ; R4 := "0"
  8 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xB7E9C2EF"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETUPVAL  R2 U2        ; R2 := U2
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["sectorName"]
 20 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["playerCount"]
 21 [-]: GETTABLE  R4 R1 K9     ; R4 := R1["scenarioProgress"]
 22 [-]: LOADK     R5 K10       ; R5 := 0
 23 [-]: LOADK     R6 K10       ; R6 := 0
 24 [-]: LOADK     R7 K11       ; R7 := 100
 25 [-]: LOADNIL   R8 R10       ; R8 := R9 := R10 := nil
 26 [-]: TEST      R2 0         ; if not R2 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: EQ        0 R2 K12     ; if R2 ~= "ScenarioEventHub5" then PC := 37
 29 [-]: JMP       37           ; PC := 37
 30 [-]: GETGLOBAL R11 K13      ; R11 := _G
 31 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["CachedGoalInfo"]
 32 [-]: TEST      R11 0        ; if not R11 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETGLOBAL R11 K13      ; R11 := _G
 35 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["CachedGoalInfo"]
 36 [-]: GETTABLE  R10 R11 R2   ; R10 := R11[R2]
 37 [-]: TEST      R10 0        ; if not R10 then PC := 88
 38 [-]: JMP       88           ; PC := 88
 39 [-]: GETTABLE  R11 R10 K15  ; R11 := R10["mMetadata"]
 40 [-]: TEST      R11 0        ; if not R11 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: EQ        1 R11 K16    ; if R11 == "" then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R12 K17      ; R12 := cjson
 45 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["0x8A2E8315"]
 46 [-]: MOVE      R13 R11      ; R13 := R11
 47 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 48 [-]: TEST      R12 0        ; if not R12 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: GETTABLE  R7 R12 K19   ; R7 := R12["progressReq"]
 51 [-]: GETGLOBAL R13 K20      ; R13 := Engine
 52 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["0xD09D7910"]
 53 [-]: GETTABLE  R14 R10 K22  ; R14 := R10["mAltExpiry"]
 54 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 55 [-]: MOVE      R6 R13       ; R6 := R13
 56 [-]: LT        0 R6 K10     ; if R6 >= 0 then PC := 76
 57 [-]: JMP       76           ; PC := 76
 58 [-]: GETGLOBAL R13 K20      ; R13 := Engine
 59 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["0xD09D7910"]
 60 [-]: GETTABLE  R14 R10 K23  ; R14 := R10["mNextAltActivation"]
 61 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 62 [-]: MOVE      R5 R13       ; R5 := R13
 63 [-]: GETGLOBAL R13 K24      ; R13 := 0xE6DC43B0
 64 [-]: LOADK     R14 K25      ; R14 := "/Lotus/Language/Events/FragmentArrivalTime"
 65 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 66 [-]: GETUPVAL  R16 U3       ; R16 := U3
 67 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["0xC65D09DD"]
 68 [-]: GETGLOBAL R17 K28      ; R17 := mMovie
 69 [-]: MOVE      R18 R5       ; R18 := R5
 70 [-]: LOADK     R19 K29      ; R19 := "Compact"
 71 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 72 [-]: SETTABLE  R15 K26 R16  ; R15["VALUE"] := R16
 73 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 74 [-]: MOVE      R9 R13       ; R9 := R13
 75 [-]: JMP       88           ; PC := 88
 76 [-]: GETGLOBAL R13 K24      ; R13 := 0xE6DC43B0
 77 [-]: LOADK     R14 K30      ; R14 := "/Lotus/Language/Events/FlotillaTimeRemainingInstanceSelector"
 78 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 79 [-]: GETUPVAL  R16 U3       ; R16 := U3
 80 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["0xC65D09DD"]
 81 [-]: GETGLOBAL R17 K28      ; R17 := mMovie
 82 [-]: MOVE      R18 R6       ; R18 := R6
 83 [-]: LOADK     R19 K29      ; R19 := "Compact"
 84 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 85 [-]: SETTABLE  R15 K26 R16  ; R15["VALUE"] := R16
 86 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 87 [-]: MOVE      R8 R13       ; R8 := R13
 88 [-]: GETGLOBAL R13 K0       ; R13 := _T
 89 [-]: CLOSURE   R14 0        ; R14 := closure(Function #108.1)
 90 [-]: GETUPVAL  R0 U4        ; R0 := U4
 91 [-]: GETUPVAL  R0 U5        ; R0 := U5
 92 [-]: GETUPVAL  R0 U6        ; R0 := U6
 93 [-]: GETUPVAL  R0 U2        ; R0 := U2
 94 [-]: GETUPVAL  R0 U3        ; R0 := U3
 95 [-]: SETTABLE  R13 K31 R14  ; R13["MenuSelectionDone"] := R14
 96 [-]: TEST      R0 0         ; if not R0 then PC := 155
 97 [-]: JMP       155          ; PC := 155
 98 [-]: GETUPVAL  R13 U2       ; R13 := U2
 99 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mAutoJoinIfNotBusy"]
100 [-]: TEST      R13 0        ; if not R13 then PC := 155
101 [-]: JMP       155          ; PC := 155
102 [-]: GETUPVAL  R13 U2       ; R13 := U2
103 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["mBusyPlayerLoad"]
104 [-]: LT        0 K10 R13    ; if 0 >= R13 then PC := 155
105 [-]: JMP       155          ; PC := 155
106 [-]: MOVE      R13 R1       ; R13 := R1
107 [-]: LEN       R14 R4       ; R14 := # R4
108 [-]: LT        0 K10 R14    ; if 0 >= R14 then PC := 114
109 [-]: JMP       114          ; PC := 114
110 [-]: GETTABLE  R14 R4 K34   ; R14 := R4[1]
111 [-]: LE        0 R7 R14     ; if R7 > R14 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: MOVE      R13 R0       ; R13 := R0
114 [-]: TEST      R13 0        ; if not R13 then PC := 155
115 [-]: JMP       155          ; PC := 155
116 [-]: MOVE      R14 R1       ; R14 := R1
117 [-]: LOADK     R15 K35      ; R15 := 2
118 [-]: LEN       R16 R3       ; R16 := # R3
119 [-]: LOADK     R17 K34      ; R17 := 1
120 [-]: FORPREP   R15 126      ; R15 -= R17; PC := 126
121 [-]: GETTABLE  R19 R3 R18   ; R19 := R3[R18]
122 [-]: LT        0 K10 R19    ; if 0 >= R19 then PC := 126
123 [-]: JMP       126          ; PC := 126
124 [-]: MOVE      R14 R0       ; R14 := R0
125 [-]: JMP       127          ; PC := 127
126 [-]: FORLOOP   R15 121      ; R15 += R17; if R15 <= R16 then begin PC := 121; R18 := R15 end
127 [-]: TEST      R14 0        ; if not R14 then PC := 155
128 [-]: JMP       155          ; PC := 155
129 [-]: GETTABLE  R19 R3 K34   ; R19 := R3[1]
130 [-]: GETTABLE  R20 R1 K36   ; R20 := R1["hubCapacity"]
131 [-]: DIV       R19 R19 R20  ; R19 := R19 / R20
132 [-]: GETUPVAL  R20 U2       ; R20 := U2
133 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["mBusyPlayerLoad"]
134 [-]: LE        0 R19 R20    ; if R19 > R20 then PC := 155
135 [-]: JMP       155          ; PC := 155
136 [-]: GETGLOBAL R20 K5       ; R20 := 0x400E7765
137 [-]: GETUPVAL  R21 U4       ; R21 := U4
138 [-]: GETTABLE  R21 R21 K37  ; R21 := R21["MultiMissionSelector"]
139 [-]: CALL      R20 2 2      ; R20 := R20(R21)
140 [-]: TEST      R20 1        ; if R20 then PC := 146
141 [-]: JMP       146          ; PC := 146
142 [-]: GETUPVAL  R20 U4       ; R20 := U4
143 [-]: GETTABLE  R20 R20 K37  ; R20 := R20["MultiMissionSelector"]
144 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20["0xA58BB96C"]
145 [-]: CALL      R20 2 1      ; R20(R21)
146 [-]: GETGLOBAL R20 K0       ; R20 := _T
147 [-]: GETTABLE  R20 R20 K39  ; R20 := R20["0x968C0654"]
148 [-]: NEWTABLE  R21 1 0      ; R21 := {}
149 [-]: NEWTABLE  R22 0 2      ; R22 := {}
150 [-]: SETTABLE  R22 K40 K10  ; R22["Instance"] := 0
151 [-]: SETTABLE  R22 K41 K42  ; R22["IsFull"] := "0x0"
152 [-]: SETLIST   R21 1 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
153 [-]: CALL      R20 2 1      ; R20(R21)
154 [-]: RETURN    R0 1         ; return 
155 [-]: CLOSURE   R20 1        ; R20 := closure(Function #108.2)
156 [-]: GETUPVAL  R0 U2        ; R0 := U2
157 [-]: LOADK     R21 K43      ; R21 := "/Lotus/Language/Menu/ConfirmMultiHubInstance"
158 [-]: TEST      R9 1         ; if R9 then PC := 162
159 [-]: JMP       162          ; PC := 162
160 [-]: TEST      R8 0         ; if not R8 then PC := 178
161 [-]: JMP       178          ; PC := 178
162 [-]: GETGLOBAL R22 K24      ; R22 := 0xE6DC43B0
163 [-]: MOVE      R23 R21      ; R23 := R21
164 [-]: MOVE      R24 R1       ; R24 := R1
165 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
166 [-]: MOVE      R21 R22      ; R21 := R22
167 [-]: TEST      R9 0         ; if not R9 then PC := 174
168 [-]: JMP       174          ; PC := 174
169 [-]: MOVE      R22 R21      ; R22 := R21
170 [-]: LOADK     R23 K44      ; R23 := " | "
171 [-]: MOVE      R24 R9       ; R24 := R9
172 [-]: CONCAT    R21 R22 R24  ; R21 := R22 .. R23 .. R24
173 [-]: JMP       178          ; PC := 178
174 [-]: MOVE      R22 R21      ; R22 := R21
175 [-]: LOADK     R23 K44      ; R23 := " | "
176 [-]: MOVE      R24 R8       ; R24 := R8
177 [-]: CONCAT    R21 R22 R24  ; R21 := R22 .. R23 .. R24
178 [-]: GETUPVAL  R22 U4       ; R22 := U4
179 [-]: GETGLOBAL R23 K28      ; R23 := mMovie
180 [-]: SELF      R23 R23 K45  ; R24 := R23; R23 := R23["0x5FF274BB"]
181 [-]: GETGLOBAL R25 K46      ; R25 := genericMenuMovie
182 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
183 [-]: SETTABLE  R22 K37 R23  ; R22["MultiMissionSelector"] := R23
184 [-]: GETUPVAL  R22 U4       ; R22 := U4
185 [-]: GETTABLE  R22 R22 K37  ; R22 := R22["MultiMissionSelector"]
186 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x458F27A9"]
187 [-]: LOADK     R24 K47      ; R24 := "SetTitle"
188 [-]: MOVE      R25 R21      ; R25 := R21
189 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
190 [-]: GETUPVAL  R22 U4       ; R22 := U4
191 [-]: GETTABLE  R22 R22 K37  ; R22 := R22["MultiMissionSelector"]
192 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x458F27A9"]
193 [-]: LOADK     R24 K48      ; R24 := "SetCallBack"
194 [-]: LOADK     R25 K31      ; R25 := "MenuSelectionDone"
195 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
196 [-]: TEST      R0 0         ; if not R0 then PC := 209
197 [-]: JMP       209          ; PC := 209
198 [-]: GETGLOBAL R22 K0       ; R22 := _T
199 [-]: CLOSURE   R23 2        ; R23 := closure(Function #108.3)
200 [-]: MOVE      R0 R3        ; R0 := R3
201 [-]: MOVE      R0 R4        ; R0 := R4
202 [-]: MOVE      R0 R1        ; R0 := R1
203 [-]: MOVE      R0 R7        ; R0 := R7
204 [-]: MOVE      R0 R20       ; R0 := R20
205 [-]: GETUPVAL  R0 U2        ; R0 := U2
206 [-]: MOVE      R0 R6        ; R0 := R6
207 [-]: SETTABLE  R22 K49 R23  ; R22["GetMenuEntries"] := R23
208 [-]: JMP       213          ; PC := 213
209 [-]: GETGLOBAL R22 K0       ; R22 := _T
210 [-]: CLOSURE   R23 3        ; R23 := closure(Function #108.4)
211 [-]: GETUPVAL  R0 U2        ; R0 := U2
212 [-]: SETTABLE  R22 K49 R23  ; R22["GetMenuEntries"] := R23
213 [-]: GETUPVAL  R22 U4       ; R22 := U4
214 [-]: GETTABLE  R22 R22 K37  ; R22 := R22["MultiMissionSelector"]
215 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x458F27A9"]
216 [-]: LOADK     R24 K50      ; R24 := "SetElementsFunction"
217 [-]: LOADK     R25 K49      ; R25 := "GetMenuEntries"
218 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
219 [-]: RETURN    R0 1         ; return 


; Function #108.1:
;
; Name:            
; Defined at line: 4291
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SETTABLE  R1 K4 K2     ; R1["MultiMissionSelector"] := nil
  7 [-]: GETTABLE  R1 R0 K5     ; R1 := R0[1]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 88
  9 [-]: JMP       88           ; PC := 88
 10 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["Instance"]
 11 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 88
 12 [-]: JMP       88           ; PC := 88
 13 [-]: LOADK     R2 K7        ; R2 := "Selected hub index "
 14 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["Instance"]
 15 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 16 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["Players"]
 17 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: MOVE      R3 R2        ; R3 := R2
 20 [-]: LOADK     R4 K9        ; R4 := " with "
 21 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["Players"]
 22 [-]: LOADK     R6 K10       ; R6 := " players"
 23 [-]: CONCAT    R2 R3 R6     ; R2 := R3 .. R4 .. R5 .. R6
 24 [-]: GETTABLE  R3 R1 K11    ; R3 := R1["Progress"]
 25 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: MOVE      R3 R2        ; R3 := R2
 28 [-]: LOADK     R4 K12       ; R4 := " (Progress: "
 29 [-]: GETTABLE  R5 R1 K11    ; R5 := R1["Progress"]
 30 [-]: LOADK     R6 K13       ; R6 := ")"
 31 [-]: CONCAT    R2 R3 R6     ; R2 := R3 .. R4 .. R5 .. R6
 32 [-]: GETGLOBAL R3 K14       ; R3 := 0x93B1256B
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: CALL      R3 2 1       ; R3(R4)
 35 [-]: GETTABLE  R3 R1 K15    ; R3 := R1["IsFull"]
 36 [-]: EQ        0 R3 K16     ; if R3 ~= "0x1" then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 39 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 40 [-]: LOADK     R5 K19       ; R5 := "/Lotus/Language/Menu/MissionInstanceIsFull"
 41 [-]: MOVE      R6 R0        ; R6 := R0
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: GETUPVAL  R4 U1        ; R4 := U1
 44 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["0xB11F032"]
 45 [-]: MOVE      R5 R3        ; R5 := R3
 46 [-]: CALL      R4 2 1       ; R4(R5)
 47 [-]: RETURN    R0 1         ; return 
 48 [-]: GETGLOBAL R4 K21       ; R4 := gMatchingService
 49 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4["0x35DDC67D"]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: LT        0 K5 R4      ; if 1 >= R4 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETUPVAL  R4 U2        ; R4 := U2
 54 [-]: GETUPVAL  R5 U3        ; R5 := U3
 55 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["sectorName"]
 56 [-]: GETUPVAL  R6 U4        ; R6 := U4
 57 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["HUB_TAG"]
 58 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 59 [-]: LOADNIL   R6 R7        ; R6 := R7 := nil
 60 [-]: LOADK     R8 K25       ; R8 := 0.5
 61 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 62 [-]: TEST      R4 1         ; if R4 then PC := 84
 63 [-]: JMP       84           ; PC := 84
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: JMP       84           ; PC := 84
 66 [-]: GETUPVAL  R4 U2        ; R4 := U2
 67 [-]: GETUPVAL  R5 U3        ; R5 := U3
 68 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["sectorName"]
 69 [-]: GETUPVAL  R6 U4        ; R6 := U4
 70 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["HUB_TAG"]
 71 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 72 [-]: LOADNIL   R6 R7        ; R6 := R7 := nil
 73 [-]: LOADK     R8 K25       ; R8 := 0.5
 74 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 75 [-]: TEST      R4 1         ; if R4 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: RETURN    R0 1         ; return 
 78 [-]: GETGLOBAL R4 K0        ; R4 := _T
 79 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["SquadOverlay"]
 80 [-]: SELF      R4 R4 K27    ; R5 := R4; R4 := R4["0x458F27A9"]
 81 [-]: LOADK     R6 K28       ; R6 := "NotifyForceLoadSoloMission"
 82 [-]: LOADK     R7 K29       ; R7 := "dontLockSession"
 83 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 84 [-]: GETGLOBAL R4 K21       ; R4 := gMatchingService
 85 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4["0xEDAA4B70"]
 86 [-]: GETTABLE  R6 R1 K6     ; R6 := R1["Instance"]
 87 [-]: CALL      R4 3 1       ; R4(R5,R6)
 88 [-]: RETURN    R0 1         ; return 


; Function #108.2:
;
; Name:            
; Defined at line: 4371
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: DIV       R2 R0 R1     ; R2 := R0 / R1
  2 [-]: LOADNIL   R3 R3        ; R3 := nil
  3 [-]: EQ        0 R2 K0      ; if R2 ~= 0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADK     R3 K1        ; R3 := "HubInstanceEmpty"
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mBusyPlayerLoad"]
  9 [-]: LT        0 R2 R4      ; if R2 >= R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R3 K3        ; R3 := "HubInstanceCalm"
 12 [-]: JMP       18           ; PC := 18
 13 [-]: LT        0 R2 K4      ; if R2 >= 1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADK     R3 K5        ; R3 := "HubInstanceBusy"
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R3 K6        ; R3 := "HubInstanceFull"
 18 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 20 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/"
 21 [-]: MOVE      R7 R3        ; R7 := R3
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: RETURN    R4 2         ; return R4
 26 [-]: RETURN    R0 1         ; return 


; Function #108.3:
;
; Name:            
; Defined at line: 4404
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: LOADK     R2 K0        ; R2 := 1
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LOADK     R4 K0        ; R4 := 1
  7 [-]: FORPREP   R2 98        ; R2 -= R4; PC := 98
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 10 [-]: GETUPVAL  R7 U0        ; R7 := U0
 11 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 12 [-]: GETUPVAL  R8 U2        ; R8 := U2
 13 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["hubCapacity"]
 14 [-]: LE        1 R8 R7      ; if R8 <= R7 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: MOVE      R7 R1        ; R7 := R1
 18 [-]: TEST      R7 1         ; if R7 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: TESTSET   R7 R6 0      ; if not R6 then PC := 27 else R7 := R6
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R8 U3        ; R8 := U3
 23 [-]: LE        1 R8 R6      ; if R8 <= R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R7 R0        ; R7 := R0
 26 [-]: MOVE      R7 R1        ; R7 := R1
 27 [-]: GETUPVAL  R8 U4        ; R8 := U4
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 30 [-]: GETUPVAL  R10 U2       ; R10 := U2
 31 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["hubCapacity"]
 32 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 33 [-]: GETUPVAL  R9 U0        ; R9 := U0
 34 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 35 [-]: GETUPVAL  R10 U2       ; R10 := U2
 36 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["hubCapacity"]
 37 [-]: DIV       R9 R9 R10    ; R9 := R9 / R10
 38 [-]: GETUPVAL  R10 U5       ; R10 := U5
 39 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["mBusyPlayerLoad"]
 40 [-]: LE        1 R10 R9     ; if R10 <= R9 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R9 R0        ; R9 := R0
 43 [-]: MOVE      R9 R1        ; R9 := R1
 44 [-]: TEST      R7 1         ; if R7 then PC := 95
 45 [-]: JMP       95           ; PC := 95
 46 [-]: GETUPVAL  R10 U0       ; R10 := U0
 47 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 48 [-]: LT        1 K3 R10     ; if 0 < R10 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: LEN       R10 R0       ; R10 := # R0
 51 [-]: EQ        0 R10 K3     ; if R10 ~= 0 then PC := 95
 52 [-]: JMP       95           ; PC := 95
 53 [-]: GETUPVAL  R10 U5       ; R10 := U5
 54 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["sectorLoc"]
 55 [-]: LOADK     R11 K5       ; R11 := " "
 56 [-]: MOVE      R12 R5       ; R12 := R5
 57 [-]: LOADK     R13 K6       ; R13 := ": "
 58 [-]: MOVE      R14 R8       ; R14 := R8
 59 [-]: CONCAT    R10 R10 R14  ; R10 := R10 .. R11 .. R12 .. R13 .. R14
 60 [-]: TEST      R6 0         ; if not R6 then PC := 78
 61 [-]: JMP       78           ; PC := 78
 62 [-]: LT        0 K3 R6      ; if 0 >= R6 then PC := 78
 63 [-]: JMP       78           ; PC := 78
 64 [-]: GETUPVAL  R11 U6       ; R11 := U6
 65 [-]: LT        0 K3 R11     ; if 0 >= R11 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: GETGLOBAL R11 K7       ; R11 := 0xE6DC43B0
 68 [-]: LOADK     R12 K8       ; R12 := "/Lotus/Language/Events/FlotillaProgressInstanceSelector"
 69 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 70 [-]: SETTABLE  R13 K9 R6    ; R13["PROGRESS"] := R6
 71 [-]: GETUPVAL  R14 U3       ; R14 := U3
 72 [-]: SETTABLE  R13 K10 R14  ; R13["REQ"] := R14
 73 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 74 [-]: MOVE      R12 R10      ; R12 := R10
 75 [-]: LOADK     R13 K11      ; R13 := " - "
 76 [-]: MOVE      R14 R11      ; R14 := R11
 77 [-]: CONCAT    R10 R12 R14  ; R10 := R12 .. R13 .. R14
 78 [-]: GETGLOBAL R12 K12      ; R12 := table
 79 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["0xE6450C9D"]
 80 [-]: MOVE      R13 R0       ; R13 := R0
 81 [-]: NEWTABLE  R14 0 5      ; R14 := {}
 82 [-]: GETGLOBAL R15 K15      ; R15 := string
 83 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["0x639C642A"]
 84 [-]: MOVE      R16 R10      ; R16 := R10
 85 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 86 [-]: SETTABLE  R14 K14 R15  ; R14["mName"] := R15
 87 [-]: SUB       R15 R5 K0    ; R15 := R5 - 1
 88 [-]: SETTABLE  R14 K17 R15  ; R14["Instance"] := R15
 89 [-]: SETTABLE  R14 K18 R7   ; R14["IsFull"] := R7
 90 [-]: GETUPVAL  R15 U0       ; R15 := U0
 91 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
 92 [-]: SETTABLE  R14 K19 R15  ; R14["Players"] := R15
 93 [-]: SETTABLE  R14 K20 R6   ; R14["Progress"] := R6
 94 [-]: CALL      R12 3 1      ; R12(R13,R14)
 95 [-]: TEST      R9 1         ; if R9 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R1 R0        ; R1 := R0
 98 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 99 [-]: TEST      R1 1         ; if R1 then PC := 104
100 [-]: JMP       104          ; PC := 104
101 [-]: LEN       R12 R0       ; R12 := # R0
102 [-]: EQ        0 R12 K3     ; if R12 ~= 0 then PC := 132
103 [-]: JMP       132          ; PC := 132
104 [-]: GETUPVAL  R12 U0       ; R12 := U0
105 [-]: LEN       R12 R12      ; R12 := # R12
106 [-]: ADD       R12 R12 K0   ; R12 := R12 + 1
107 [-]: GETUPVAL  R13 U4       ; R13 := U4
108 [-]: LOADK     R14 K3       ; R14 := 0
109 [-]: GETUPVAL  R15 U2       ; R15 := U2
110 [-]: GETTABLE  R15 R15 K1   ; R15 := R15["hubCapacity"]
111 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
112 [-]: GETGLOBAL R14 K12      ; R14 := table
113 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["0xE6450C9D"]
114 [-]: MOVE      R15 R0       ; R15 := R0
115 [-]: NEWTABLE  R16 0 4      ; R16 := {}
116 [-]: GETGLOBAL R17 K15      ; R17 := string
117 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["0x639C642A"]
118 [-]: GETUPVAL  R18 U5       ; R18 := U5
119 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["sectorLoc"]
120 [-]: LOADK     R19 K5       ; R19 := " "
121 [-]: MOVE      R20 R12      ; R20 := R12
122 [-]: LOADK     R21 K6       ; R21 := ": "
123 [-]: MOVE      R22 R13      ; R22 := R13
124 [-]: CONCAT    R18 R18 R22  ; R18 := R18 .. R19 .. R20 .. R21 .. R22
125 [-]: CALL      R17 2 2      ; R17 := R17(R18)
126 [-]: SETTABLE  R16 K14 R17  ; R16["mName"] := R17
127 [-]: SUB       R17 R12 K0   ; R17 := R12 - 1
128 [-]: SETTABLE  R16 K17 R17  ; R16["Instance"] := R17
129 [-]: SETTABLE  R16 K18 K21  ; R16["IsFull"] := "0x0"
130 [-]: SETTABLE  R16 K19 K3   ; R16["Players"] := 0
131 [-]: CALL      R14 3 1      ; R14(R15,R16)
132 [-]: RETURN    R0 2         ; return R0
133 [-]: RETURN    R0 1         ; return 


; Function #108.4:
;
; Name:            
; Defined at line: 4442
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := string
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x639C642A"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["sectorLoc"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K3        ; R2 := table
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: LOADK     R6 K6        ; R6 := " 1"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: SETTABLE  R4 K5 R5     ; R4["mName"] := R5
 15 [-]: SETTABLE  R4 K7 K8     ; R4["Instance"] := 0
 16 [-]: SETTABLE  R4 K9 K10    ; R4["IsFull"] := "0x0"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4454
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: SETTABLE  R2 K2 R1     ; R2["sectorName"] := R1
  6 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x9FAED6BC
  9 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["locTag"]
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: GETGLOBAL R3 K6        ; R3 := string
 14 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x633C4246"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K8        ; R5 := "Relay"
 17 [-]: LOADK     R6 K9        ; R6 := ""
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: MOVE      R2 R3        ; R2 := R3
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: SETTABLE  R3 K10 R2    ; R3["sectorLoc"] := R2
 22 [-]: GETGLOBAL R3 K11       ; R3 := 0x400E7765
 23 [-]: GETUPVAL  R4 U1        ; R4 := U1
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: TEST      R3 0         ; if not R3 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: MOVE      R3 R2        ; R3 := R2
 30 [-]: GETGLOBAL R3 K12       ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["BackgroundMovie"]
 32 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x458F27A9"]
 33 [-]: LOADK     R5 K15       ; R5 := "ShowBlockingMessage"
 34 [-]: LOADK     R6 K16       ; R6 := "2"
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0xF2773BCF"]
 38 [-]: LOADK     R5 K18       ; R5 := "GotHubInstances"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: GETUPVAL  R3 U1        ; R3 := U1
 41 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x1F59D76E"]
 42 [-]: MOVE      R5 R1        ; R5 := R1
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4475
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x87B2D555"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0xE6DC43B0
  6 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Game/MissionName_"
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 11 [-]: RETURN    R2 0         ; return R2,...
 12 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4480
; #Upvalues:       10
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  59

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x9FAED6BC
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["name"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["difficulty"]
  6 [-]: MOVE      R5 R3        ; R5 := R3
  7 [-]: LOADK     R6 K4        ; R6 := "QUEST"
  8 [-]: GETGLOBAL R7 K5        ; R7 := string
  9 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xDE44F664"]
 10 [-]: MOVE      R8 R5        ; R8 := R5
 11 [-]: GETUPVAL  R9 U0        ; R9 := U0
 12 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["KEY_TAG"]
 13 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 14 [-]: TEST      R7 0         ; if not R7 then PC := 49
 15 [-]: JMP       49           ; PC := 49
 16 [-]: LOADNIL   R7 R7        ; R7 := nil
 17 [-]: GETGLOBAL R8 K5        ; R8 := string
 18 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["0xDE44F664"]
 19 [-]: MOVE      R9 R5        ; R9 := R5
 20 [-]: GETUPVAL  R10 U0       ; R10 := U0
 21 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["KEY_TAG"]
 22 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 23 [-]: EQ        1 R8 K8      ; if R8 == nil then PC := 49
 24 [-]: JMP       49           ; PC := 49
 25 [-]: GETGLOBAL R9 K5        ; R9 := string
 26 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["0x7B782033"]
 27 [-]: MOVE      R10 R5       ; R10 := R5
 28 [-]: LOADK     R11 K10      ; R11 := 1
 29 [-]: SUB       R12 R8 K10   ; R12 := R8 - 1
 30 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 31 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 32 [-]: MOVE      R11 R9       ; R11 := R9
 33 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 34 [-]: MOVE      R7 R10       ; R7 := R10
 35 [-]: GETGLOBAL R10 K12      ; R10 := 0x400E7765
 36 [-]: MOVE      R11 R7       ; R11 := R7
 37 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 38 [-]: TEST      R10 1        ; if R10 then PC := 49
 39 [-]: JMP       49           ; PC := 49
 40 [-]: SELF      R10 R7 K13   ; R11 := R7; R10 := R7["0x625DA4BB"]
 41 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 42 [-]: GETGLOBAL R11 K14      ; R11 := EMPTY_SYMBOL
 43 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETGLOBAL R11 K0       ; R11 := 0x9FAED6BC
 46 [-]: MOVE      R12 R10      ; R12 := R10
 47 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 48 [-]: MOVE      R5 R11       ; R5 := R11
 49 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 50 [-]: GETGLOBAL R12 K12      ; R12 := 0x400E7765
 51 [-]: GETTABLE  R13 R0 K15   ; R13 := R0["keyChain"]
 52 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 53 [-]: TEST      R12 1        ; if R12 then PC := 92
 54 [-]: JMP       92           ; PC := 92
 55 [-]: GETGLOBAL R12 K11      ; R12 := 0x7C282057
 56 [-]: GETTABLE  R13 R0 K15   ; R13 := R0["keyChain"]
 57 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 58 [-]: GETGLOBAL R13 K12      ; R13 := 0x400E7765
 59 [-]: MOVE      R14 R12      ; R14 := R12
 60 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 61 [-]: TEST      R13 1        ; if R13 then PC := 92
 62 [-]: JMP       92           ; PC := 92
 63 [-]: GETGLOBAL R13 K16      ; R13 := 0xE6DC43B0
 64 [-]: GETGLOBAL R14 K0       ; R14 := 0x9FAED6BC
 65 [-]: SELF      R15 R12 K17  ; R16 := R12; R15 := R12["0x616C74B6"]
 66 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 67 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 68 [-]: MOVE      R15 R0       ; R15 := R0
 69 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 70 [-]: LOADK     R14 K18      ; R14 := ": "
 71 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 72 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mission"]
 73 [-]: GETGLOBAL R15 K19      ; R15 := table
 74 [-]: GETTABLE  R15 R15 K20  ; R15 := R15["0xE6450C9D"]
 75 [-]: MOVE      R16 R11      ; R16 := R11
 76 [-]: NEWTABLE  R17 0 6      ; R17 := {}
 77 [-]: MOVE      R18 R13      ; R18 := R13
 78 [-]: GETUPVAL  R19 U1       ; R19 := U1
 79 [-]: CALL      R19 1 2      ; R19 := R19()
 80 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 81 [-]: SETTABLE  R17 K21 R18  ; R17["mName"] := R18
 82 [-]: SETTABLE  R17 K22 R6   ; R17["MissionTypeTag"] := R6
 83 [-]: SETTABLE  R17 K23 K24  ; R17["mIconTag"] := "quest"
 84 [-]: GETTABLE  R18 R14 K26  ; R18 := R14["minEnemyLevel"]
 85 [-]: SETTABLE  R17 K25 R18  ; R17["mMinLevel"] := R18
 86 [-]: GETTABLE  R18 R14 K28  ; R18 := R14["maxEnemyLevel"]
 87 [-]: SETTABLE  R17 K27 R18  ; R17["mMaxLevel"] := R18
 88 [-]: SELF      R18 R14 K30  ; R19 := R14; R18 := R14["0xEFC448EC"]
 89 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 90 [-]: SETTABLE  R17 K29 R18  ; R17["mFaction"] := R18
 91 [-]: CALL      R15 3 1      ; R15(R16,R17)
 92 [-]: GETGLOBAL R15 K31      ; R15 := _T
 93 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["CachedAlerts"]
 94 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
 95 [-]: TEST      R15 0        ; if not R15 then PC := 181
 96 [-]: JMP       181          ; PC := 181
 97 [-]: GETGLOBAL R15 K31      ; R15 := _T
 98 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["CachedAlerts"]
 99 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
100 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["mVisible"]
101 [-]: TEST      R15 0        ; if not R15 then PC := 181
102 [-]: JMP       181          ; PC := 181
103 [-]: LOADNIL   R15 R15      ; R15 := nil
104 [-]: GETGLOBAL R16 K31      ; R16 := _T
105 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["CachedAlerts"]
106 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
107 [-]: GETTABLE  R16 R16 K34  ; R16 := R16["mAlertInfo"]
108 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["mTag"]
109 [-]: GETGLOBAL R17 K14      ; R17 := EMPTY_SYMBOL
110 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 134
111 [-]: JMP       134          ; PC := 134
112 [-]: GETGLOBAL R16 K31      ; R16 := _T
113 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["CachedAlerts"]
114 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
115 [-]: GETTABLE  R16 R16 K34  ; R16 := R16["mAlertInfo"]
116 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["mMissionInfo"]
117 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["descText"]
118 [-]: GETGLOBAL R17 K14      ; R17 := EMPTY_SYMBOL
119 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 134
120 [-]: JMP       134          ; PC := 134
121 [-]: GETGLOBAL R16 K16      ; R16 := 0xE6DC43B0
122 [-]: GETGLOBAL R17 K0       ; R17 := 0x9FAED6BC
123 [-]: GETGLOBAL R18 K31      ; R18 := _T
124 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["CachedAlerts"]
125 [-]: GETTABLE  R18 R18 R5   ; R18 := R18[R5]
126 [-]: GETTABLE  R18 R18 K34  ; R18 := R18["mAlertInfo"]
127 [-]: GETTABLE  R18 R18 K36  ; R18 := R18["mMissionInfo"]
128 [-]: GETTABLE  R18 R18 K37  ; R18 := R18["descText"]
129 [-]: CALL      R17 2 2      ; R17 := R17(R18)
130 [-]: MOVE      R18 R0       ; R18 := R0
131 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
132 [-]: MOVE      R15 R16      ; R15 := R16
133 [-]: JMP       139          ; PC := 139
134 [-]: GETGLOBAL R16 K16      ; R16 := 0xE6DC43B0
135 [-]: LOADK     R17 K38      ; R17 := "/Lotus/Language/Menu/Notification_Alert"
136 [-]: MOVE      R18 R0       ; R18 := R0
137 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
138 [-]: MOVE      R15 R16      ; R15 := R16
139 [-]: MOVE      R16 R15      ; R16 := R15
140 [-]: LOADK     R17 K18      ; R17 := ": "
141 [-]: GETUPVAL  R18 U2       ; R18 := U2
142 [-]: GETGLOBAL R19 K31      ; R19 := _T
143 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["CachedAlerts"]
144 [-]: GETTABLE  R19 R19 R5   ; R19 := R19[R5]
145 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["mAlertInfo"]
146 [-]: GETTABLE  R19 R19 K36  ; R19 := R19["mMissionInfo"]
147 [-]: CALL      R18 2 2      ; R18 := R18(R19)
148 [-]: CONCAT    R15 R16 R18  ; R15 := R16 .. R17 .. R18
149 [-]: GETGLOBAL R16 K19      ; R16 := table
150 [-]: GETTABLE  R16 R16 K20  ; R16 := R16["0xE6450C9D"]
151 [-]: MOVE      R17 R11      ; R17 := R11
152 [-]: NEWTABLE  R18 0 6      ; R18 := {}
153 [-]: SETTABLE  R18 K21 R15  ; R18["mName"] := R15
154 [-]: GETUPVAL  R19 U0       ; R19 := U0
155 [-]: GETTABLE  R19 R19 K39  ; R19 := R19["ALERT_TAG"]
156 [-]: SETTABLE  R18 K22 R19  ; R18["MissionTypeTag"] := R19
157 [-]: SETTABLE  R18 K23 K40  ; R18["mIconTag"] := "alert"
158 [-]: GETGLOBAL R19 K31      ; R19 := _T
159 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["CachedAlerts"]
160 [-]: GETTABLE  R19 R19 R5   ; R19 := R19[R5]
161 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["mAlertInfo"]
162 [-]: GETTABLE  R19 R19 K36  ; R19 := R19["mMissionInfo"]
163 [-]: GETTABLE  R19 R19 K26  ; R19 := R19["minEnemyLevel"]
164 [-]: SETTABLE  R18 K25 R19  ; R18["mMinLevel"] := R19
165 [-]: GETGLOBAL R19 K31      ; R19 := _T
166 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["CachedAlerts"]
167 [-]: GETTABLE  R19 R19 R5   ; R19 := R19[R5]
168 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["mAlertInfo"]
169 [-]: GETTABLE  R19 R19 K36  ; R19 := R19["mMissionInfo"]
170 [-]: GETTABLE  R19 R19 K28  ; R19 := R19["maxEnemyLevel"]
171 [-]: SETTABLE  R18 K27 R19  ; R18["mMaxLevel"] := R19
172 [-]: GETGLOBAL R19 K31      ; R19 := _T
173 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["CachedAlerts"]
174 [-]: GETTABLE  R19 R19 R5   ; R19 := R19[R5]
175 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["mAlertInfo"]
176 [-]: GETTABLE  R19 R19 K36  ; R19 := R19["mMissionInfo"]
177 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xEFC448EC"]
178 [-]: CALL      R19 2 2      ; R19 := R19(R20)
179 [-]: SETTABLE  R18 K29 R19  ; R18["mFaction"] := R19
180 [-]: CALL      R16 3 1      ; R16(R17,R18)
181 [-]: GETGLOBAL R16 K41      ; R16 := _G
182 [-]: GETTABLE  R16 R16 K42  ; R16 := R16["CachedGoalInfo"]
183 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
184 [-]: TEST      R16 1        ; if R16 then PC := 195
185 [-]: JMP       195          ; PC := 195
186 [-]: GETGLOBAL R16 K41      ; R16 := _G
187 [-]: GETTABLE  R16 R16 K43  ; R16 := R16["MergedGoalNodes"]
188 [-]: TEST      R16 0        ; if not R16 then PC := 313
189 [-]: JMP       313          ; PC := 313
190 [-]: GETGLOBAL R16 K41      ; R16 := _G
191 [-]: GETTABLE  R16 R16 K43  ; R16 := R16["MergedGoalNodes"]
192 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
193 [-]: TEST      R16 0        ; if not R16 then PC := 313
194 [-]: JMP       313          ; PC := 313
195 [-]: GETGLOBAL R16 K41      ; R16 := _G
196 [-]: GETTABLE  R16 R16 K42  ; R16 := R16["CachedGoalInfo"]
197 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
198 [-]: LOADK     R17 K44      ; R17 := ""
199 [-]: GETTABLE  R18 R16 K45  ; R18 := R16["mDesc"]
200 [-]: LOADK     R19 K44      ; R19 := ""
201 [-]: GETTABLE  R20 R16 K46  ; R20 := R16["mTypes"]
202 [-]: LEN       R20 R20      ; R20 := # R20
203 [-]: LT        1 K47 R20    ; if 0 < R20 then PC := 213
204 [-]: JMP       213          ; PC := 213
205 [-]: GETGLOBAL R20 K12      ; R20 := 0x400E7765
206 [-]: GETTABLE  R21 R16 K48  ; R21 := R16["mItemType"]
207 [-]: CALL      R20 2 2      ; R20 := R20(R21)
208 [-]: TEST      R20 0        ; if not R20 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: GETTABLE  R20 R16 K49  ; R20 := R16["mBounty"]
211 [-]: TEST      R20 0        ; if not R20 then PC := 239
212 [-]: JMP       239          ; PC := 239
213 [-]: GETTABLE  R20 R16 K49  ; R20 := R16["mBounty"]
214 [-]: TEST      R20 1        ; if R20 then PC := 219
215 [-]: JMP       219          ; PC := 219
216 [-]: GETTABLE  R20 R16 K50  ; R20 := R16["mMaxConclave"]
217 [-]: LT        0 K47 R20    ; if 0 >= R20 then PC := 233
218 [-]: JMP       233          ; PC := 233
219 [-]: GETUPVAL  R20 U3       ; R20 := U3
220 [-]: GETTABLE  R20 R20 K51  ; R20 := R20["0xF81722A2"]
221 [-]: GETGLOBAL R21 K5       ; R21 := string
222 [-]: GETTABLE  R21 R21 K6   ; R21 := R21["0xDE44F664"]
223 [-]: GETGLOBAL R22 K0       ; R22 := 0x9FAED6BC
224 [-]: GETTABLE  R23 R16 K52  ; R23 := R16["mNode"]
225 [-]: CALL      R22 2 2      ; R22 := R22(R23)
226 [-]: LOADK     R23 K53      ; R23 := "Pvp"
227 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
228 [-]: LOADK     R22 K54      ; R22 := "/Lotus/Language/Menu/Notification_Conclave"
229 [-]: LOADK     R23 K55      ; R23 := "/Lotus/Language/Menu/Notification_Bounty"
230 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
231 [-]: MOVE      R17 R20      ; R17 := R20
232 [-]: JMP       234          ; PC := 234
233 [-]: LOADK     R17 K56      ; R17 := "/Lotus/Language/Menu/Notification_EnemyBounty"
234 [-]: MOVE      R20 R17      ; R20 := R17
235 [-]: LOADK     R21 K18      ; R21 := ": "
236 [-]: CONCAT    R17 R20 R21  ; R17 := R20 .. R21
237 [-]: LOADK     R19 K57      ; R19 := "tacticalalert"
238 [-]: JMP       284          ; PC := 284
239 [-]: GETTABLE  R20 R16 K58  ; R20 := R16["mFomorian"]
240 [-]: TEST      R20 0        ; if not R20 then PC := 284
241 [-]: JMP       284          ; PC := 284
242 [-]: GETUPVAL  R20 U3       ; R20 := U3
243 [-]: GETTABLE  R20 R20 K51  ; R20 := R20["0xF81722A2"]
244 [-]: GETTABLE  R21 R16 K59  ; R21 := R16["Faction"]
245 [-]: GETGLOBAL R22 K60      ; R22 := Lotus_Game
246 [-]: GETTABLE  R22 R22 K61  ; R22 := R22["FC_GRINEER"]
247 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 250
248 [-]: JMP       250          ; PC := 250
249 [-]: MOVE      R21 R0       ; R21 := R0
250 [-]: MOVE      R21 R1       ; R21 := R1
251 [-]: LOADK     R22 K62      ; R22 := "/Lotus/Language/Menu/Notification_Fomorian"
252 [-]: LOADK     R23 K63      ; R23 := "/Lotus/Language/Menu/CorpusRazorbackProject"
253 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
254 [-]: GETGLOBAL R21 K16      ; R21 := 0xE6DC43B0
255 [-]: MOVE      R22 R20      ; R22 := R20
256 [-]: MOVE      R23 R0       ; R23 := R0
257 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
258 [-]: LOADK     R22 K18      ; R22 := ": "
259 [-]: CONCAT    R17 R21 R22  ; R17 := R21 .. R22
260 [-]: GETUPVAL  R21 U4       ; R21 := U4
261 [-]: SELF      R21 R21 K64  ; R22 := R21; R21 := R21["0xDF213CE1"]
262 [-]: GETTABLE  R23 R16 K65  ; R23 := R16["mVictimNode"]
263 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
264 [-]: GETGLOBAL R22 K16      ; R22 := 0xE6DC43B0
265 [-]: GETGLOBAL R23 K0       ; R23 := 0x9FAED6BC
266 [-]: GETTABLE  R24 R21 K66  ; R24 := R21["locTag"]
267 [-]: CALL      R23 2 2      ; R23 := R23(R24)
268 [-]: MOVE      R24 R0       ; R24 := R0
269 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
270 [-]: MOVE      R18 R22      ; R18 := R22
271 [-]: GETUPVAL  R22 U3       ; R22 := U3
272 [-]: GETTABLE  R22 R22 K51  ; R22 := R22["0xF81722A2"]
273 [-]: GETTABLE  R23 R16 K59  ; R23 := R16["Faction"]
274 [-]: GETGLOBAL R24 K60      ; R24 := Lotus_Game
275 [-]: GETTABLE  R24 R24 K61  ; R24 := R24["FC_GRINEER"]
276 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: MOVE      R23 R0       ; R23 := R0
279 [-]: MOVE      R23 R1       ; R23 := R1
280 [-]: LOADK     R24 K67      ; R24 := "fomorian"
281 [-]: LOADK     R25 K68      ; R25 := "razorback"
282 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
283 [-]: MOVE      R19 R22      ; R19 := R22
284 [-]: GETGLOBAL R22 K16      ; R22 := 0xE6DC43B0
285 [-]: MOVE      R23 R17      ; R23 := R17
286 [-]: LOADNIL   R24 R24      ; R24 := nil
287 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
288 [-]: GETGLOBAL R23 K16      ; R23 := 0xE6DC43B0
289 [-]: MOVE      R24 R18      ; R24 := R18
290 [-]: LOADNIL   R25 R25      ; R25 := nil
291 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
292 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
293 [-]: GETGLOBAL R23 K19      ; R23 := table
294 [-]: GETTABLE  R23 R23 K20  ; R23 := R23["0xE6450C9D"]
295 [-]: MOVE      R24 R11      ; R24 := R11
296 [-]: NEWTABLE  R25 0 6      ; R25 := {}
297 [-]: SETTABLE  R25 K21 R22  ; R25["mName"] := R22
298 [-]: GETUPVAL  R26 U0       ; R26 := U0
299 [-]: GETTABLE  R26 R26 K69  ; R26 := R26["EVENT_TAG"]
300 [-]: SETTABLE  R25 K22 R26  ; R25["MissionTypeTag"] := R26
301 [-]: SETTABLE  R25 K23 R19  ; R25["mIconTag"] := R19
302 [-]: GETTABLE  R26 R16 K36  ; R26 := R16["mMissionInfo"]
303 [-]: GETTABLE  R26 R26 K26  ; R26 := R26["minEnemyLevel"]
304 [-]: SETTABLE  R25 K25 R26  ; R25["mMinLevel"] := R26
305 [-]: GETTABLE  R26 R16 K36  ; R26 := R16["mMissionInfo"]
306 [-]: GETTABLE  R26 R26 K28  ; R26 := R26["maxEnemyLevel"]
307 [-]: SETTABLE  R25 K27 R26  ; R25["mMaxLevel"] := R26
308 [-]: GETTABLE  R26 R16 K36  ; R26 := R16["mMissionInfo"]
309 [-]: SELF      R26 R26 K30  ; R27 := R26; R26 := R26["0xEFC448EC"]
310 [-]: CALL      R26 2 2      ; R26 := R26(R27)
311 [-]: SETTABLE  R25 K29 R26  ; R25["mFaction"] := R26
312 [-]: CALL      R23 3 1      ; R23(R24,R25)
313 [-]: GETGLOBAL R23 K31      ; R23 := _T
314 [-]: GETTABLE  R23 R23 K70  ; R23 := R23["CachedSyndicateMissions"]
315 [-]: GETTABLE  R23 R23 R5   ; R23 := R23[R5]
316 [-]: TEST      R23 0        ; if not R23 then PC := 377
317 [-]: JMP       377          ; PC := 377
318 [-]: GETGLOBAL R23 K31      ; R23 := _T
319 [-]: GETTABLE  R23 R23 K70  ; R23 := R23["CachedSyndicateMissions"]
320 [-]: GETTABLE  R23 R23 R5   ; R23 := R23[R5]
321 [-]: GETTABLE  R23 R23 K33  ; R23 := R23["mVisible"]
322 [-]: TEST      R23 0        ; if not R23 then PC := 377
323 [-]: JMP       377          ; PC := 377
324 [-]: GETGLOBAL R23 K16      ; R23 := 0xE6DC43B0
325 [-]: GETGLOBAL R24 K31      ; R24 := _T
326 [-]: GETTABLE  R24 R24 K70  ; R24 := R24["CachedSyndicateMissions"]
327 [-]: GETTABLE  R24 R24 R5   ; R24 := R24[R5]
328 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mSyndicateName"]
329 [-]: MOVE      R25 R0       ; R25 := R0
330 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
331 [-]: LOADK     R24 K18      ; R24 := ": "
332 [-]: GETUPVAL  R25 U2       ; R25 := U2
333 [-]: GETGLOBAL R26 K31      ; R26 := _T
334 [-]: GETTABLE  R26 R26 K70  ; R26 := R26["CachedSyndicateMissions"]
335 [-]: GETTABLE  R26 R26 R5   ; R26 := R26[R5]
336 [-]: GETTABLE  R26 R26 K36  ; R26 := R26["mMissionInfo"]
337 [-]: CALL      R25 2 2      ; R25 := R25(R26)
338 [-]: CONCAT    R23 R23 R25  ; R23 := R23 .. R24 .. R25
339 [-]: GETGLOBAL R24 K5       ; R24 := string
340 [-]: GETTABLE  R24 R24 K72  ; R24 := R24["0xBDD0D625"]
341 [-]: GETGLOBAL R25 K0       ; R25 := 0x9FAED6BC
342 [-]: GETGLOBAL R26 K31      ; R26 := _T
343 [-]: GETTABLE  R26 R26 K70  ; R26 := R26["CachedSyndicateMissions"]
344 [-]: GETTABLE  R26 R26 R5   ; R26 := R26[R5]
345 [-]: GETTABLE  R26 R26 K73  ; R26 := R26["mSyndicateTag"]
346 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
347 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
348 [-]: GETGLOBAL R25 K19      ; R25 := table
349 [-]: GETTABLE  R25 R25 K20  ; R25 := R25["0xE6450C9D"]
350 [-]: MOVE      R26 R11      ; R26 := R11
351 [-]: NEWTABLE  R27 0 6      ; R27 := {}
352 [-]: SETTABLE  R27 K21 R23  ; R27["mName"] := R23
353 [-]: GETUPVAL  R28 U0       ; R28 := U0
354 [-]: GETTABLE  R28 R28 K74  ; R28 := R28["SYNDICATE_MISSION_TAG"]
355 [-]: SETTABLE  R27 K22 R28  ; R27["MissionTypeTag"] := R28
356 [-]: SETTABLE  R27 K23 R24  ; R27["mIconTag"] := R24
357 [-]: GETGLOBAL R28 K31      ; R28 := _T
358 [-]: GETTABLE  R28 R28 K70  ; R28 := R28["CachedSyndicateMissions"]
359 [-]: GETTABLE  R28 R28 R5   ; R28 := R28[R5]
360 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["mMissionInfo"]
361 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["minEnemyLevel"]
362 [-]: SETTABLE  R27 K25 R28  ; R27["mMinLevel"] := R28
363 [-]: GETGLOBAL R28 K31      ; R28 := _T
364 [-]: GETTABLE  R28 R28 K70  ; R28 := R28["CachedSyndicateMissions"]
365 [-]: GETTABLE  R28 R28 R5   ; R28 := R28[R5]
366 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["mMissionInfo"]
367 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["maxEnemyLevel"]
368 [-]: SETTABLE  R27 K27 R28  ; R27["mMaxLevel"] := R28
369 [-]: GETGLOBAL R28 K31      ; R28 := _T
370 [-]: GETTABLE  R28 R28 K70  ; R28 := R28["CachedSyndicateMissions"]
371 [-]: GETTABLE  R28 R28 R5   ; R28 := R28[R5]
372 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["mMissionInfo"]
373 [-]: SELF      R28 R28 K30  ; R29 := R28; R28 := R28["0xEFC448EC"]
374 [-]: CALL      R28 2 2      ; R28 := R28(R29)
375 [-]: SETTABLE  R27 K29 R28  ; R27["mFaction"] := R28
376 [-]: CALL      R25 3 1      ; R25(R26,R27)
377 [-]: GETGLOBAL R25 K31      ; R25 := _T
378 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["CachedSortieMissions"]
379 [-]: GETTABLE  R25 R25 R5   ; R25 := R25[R5]
380 [-]: TEST      R25 0        ; if not R25 then PC := 418
381 [-]: JMP       418          ; PC := 418
382 [-]: GETGLOBAL R25 K31      ; R25 := _T
383 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["CachedSortieMissions"]
384 [-]: GETTABLE  R25 R25 R5   ; R25 := R25[R5]
385 [-]: GETTABLE  R25 R25 K76  ; R25 := R25["mShowInStarChart"]
386 [-]: TEST      R25 0        ; if not R25 then PC := 418
387 [-]: JMP       418          ; PC := 418
388 [-]: GETGLOBAL R25 K31      ; R25 := _T
389 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["CachedSortieMissions"]
390 [-]: GETTABLE  R25 R25 R5   ; R25 := R25[R5]
391 [-]: GETTABLE  R25 R25 K36  ; R25 := R25["mMissionInfo"]
392 [-]: GETGLOBAL R26 K16      ; R26 := 0xE6DC43B0
393 [-]: LOADK     R27 K77      ; R27 := "/Lotus/Language/Menu/SortieMissionName"
394 [-]: LOADNIL   R28 R28      ; R28 := nil
395 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
396 [-]: LOADK     R27 K18      ; R27 := ": "
397 [-]: GETUPVAL  R28 U2       ; R28 := U2
398 [-]: MOVE      R29 R25      ; R29 := R25
399 [-]: CALL      R28 2 2      ; R28 := R28(R29)
400 [-]: CONCAT    R26 R26 R28  ; R26 := R26 .. R27 .. R28
401 [-]: GETGLOBAL R27 K19      ; R27 := table
402 [-]: GETTABLE  R27 R27 K20  ; R27 := R27["0xE6450C9D"]
403 [-]: MOVE      R28 R11      ; R28 := R11
404 [-]: NEWTABLE  R29 0 6      ; R29 := {}
405 [-]: SETTABLE  R29 K21 R26  ; R29["mName"] := R26
406 [-]: GETUPVAL  R30 U0       ; R30 := U0
407 [-]: GETTABLE  R30 R30 K78  ; R30 := R30["SORTIE_MISSION_TAG"]
408 [-]: SETTABLE  R29 K22 R30  ; R29["MissionTypeTag"] := R30
409 [-]: SETTABLE  R29 K23 K79  ; R29["mIconTag"] := "sortie"
410 [-]: GETTABLE  R30 R25 K26  ; R30 := R25["minEnemyLevel"]
411 [-]: SETTABLE  R29 K25 R30  ; R29["mMinLevel"] := R30
412 [-]: GETTABLE  R30 R25 K28  ; R30 := R25["maxEnemyLevel"]
413 [-]: SETTABLE  R29 K27 R30  ; R29["mMaxLevel"] := R30
414 [-]: SELF      R30 R25 K30  ; R31 := R25; R30 := R25["0xEFC448EC"]
415 [-]: CALL      R30 2 2      ; R30 := R30(R31)
416 [-]: SETTABLE  R29 K29 R30  ; R29["mFaction"] := R30
417 [-]: CALL      R27 3 1      ; R27(R28,R29)
418 [-]: GETGLOBAL R27 K31      ; R27 := _T
419 [-]: GETTABLE  R27 R27 K80  ; R27 := R27["CachedInvasionInfo"]
420 [-]: GETTABLE  R27 R27 R5   ; R27 := R27[R5]
421 [-]: TEST      R27 0        ; if not R27 then PC := 466
422 [-]: JMP       466          ; PC := 466
423 [-]: NEWTABLE  R27 3 0      ; R27 := {}
424 [-]: LOADK     R28 K81      ; R28 := "/Lotus/Language/Menu/GrineerInvasionGeneric"
425 [-]: LOADK     R29 K82      ; R29 := "/Lotus/Language/Menu/CorpusInvasionGeneric"
426 [-]: LOADK     R30 K83      ; R30 := "/Lotus/Language/Menu/InfestedInvasionGeneric"
427 [-]: SETLIST   R27 3 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 3
428 [-]: GETGLOBAL R28 K16      ; R28 := 0xE6DC43B0
429 [-]: GETGLOBAL R29 K31      ; R29 := _T
430 [-]: GETTABLE  R29 R29 K80  ; R29 := R29["CachedInvasionInfo"]
431 [-]: GETTABLE  R29 R29 R5   ; R29 := R29[R5]
432 [-]: GETTABLE  R29 R29 K29  ; R29 := R29["mFaction"]
433 [-]: ADD       R29 R29 K10  ; R29 := R29 + 1
434 [-]: GETTABLE  R29 R27 R29  ; R29 := R27[R29]
435 [-]: LOADNIL   R30 R30      ; R30 := nil
436 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
437 [-]: GETGLOBAL R29 K19      ; R29 := table
438 [-]: GETTABLE  R29 R29 K20  ; R29 := R29["0xE6450C9D"]
439 [-]: MOVE      R30 R11      ; R30 := R11
440 [-]: NEWTABLE  R31 0 6      ; R31 := {}
441 [-]: SETTABLE  R31 K21 R28  ; R31["mName"] := R28
442 [-]: GETUPVAL  R32 U0       ; R32 := U0
443 [-]: GETTABLE  R32 R32 K84  ; R32 := R32["INVASION_ATTACKER_TAG"]
444 [-]: SETTABLE  R31 K22 R32  ; R31["MissionTypeTag"] := R32
445 [-]: SETTABLE  R31 K23 K85  ; R31["mIconTag"] := "invasion"
446 [-]: GETGLOBAL R32 K31      ; R32 := _T
447 [-]: GETTABLE  R32 R32 K80  ; R32 := R32["CachedInvasionInfo"]
448 [-]: GETTABLE  R32 R32 R5   ; R32 := R32[R5]
449 [-]: GETTABLE  R32 R32 K86  ; R32 := R32["mDefenderMissionInfo"]
450 [-]: GETTABLE  R32 R32 K26  ; R32 := R32["minEnemyLevel"]
451 [-]: SETTABLE  R31 K25 R32  ; R31["mMinLevel"] := R32
452 [-]: GETGLOBAL R32 K31      ; R32 := _T
453 [-]: GETTABLE  R32 R32 K80  ; R32 := R32["CachedInvasionInfo"]
454 [-]: GETTABLE  R32 R32 R5   ; R32 := R32[R5]
455 [-]: GETTABLE  R32 R32 K86  ; R32 := R32["mDefenderMissionInfo"]
456 [-]: GETTABLE  R32 R32 K28  ; R32 := R32["maxEnemyLevel"]
457 [-]: SETTABLE  R31 K27 R32  ; R31["mMaxLevel"] := R32
458 [-]: GETGLOBAL R32 K31      ; R32 := _T
459 [-]: GETTABLE  R32 R32 K80  ; R32 := R32["CachedInvasionInfo"]
460 [-]: GETTABLE  R32 R32 R5   ; R32 := R32[R5]
461 [-]: GETTABLE  R32 R32 K86  ; R32 := R32["mDefenderMissionInfo"]
462 [-]: SELF      R32 R32 K30  ; R33 := R32; R32 := R32["0xEFC448EC"]
463 [-]: CALL      R32 2 2      ; R32 := R32(R33)
464 [-]: SETTABLE  R31 K29 R32  ; R31["mFaction"] := R32
465 [-]: CALL      R29 3 1      ; R29(R30,R31)
466 [-]: GETGLOBAL R29 K31      ; R29 := _T
467 [-]: GETTABLE  R29 R29 K87  ; R29 := R29["CachedActiveMissions"]
468 [-]: TEST      R29 0        ; if not R29 then PC := 551
469 [-]: JMP       551          ; PC := 551
470 [-]: GETGLOBAL R29 K31      ; R29 := _T
471 [-]: GETTABLE  R29 R29 K87  ; R29 := R29["CachedActiveMissions"]
472 [-]: GETTABLE  R29 R29 R5   ; R29 := R29[R5]
473 [-]: TEST      R29 0        ; if not R29 then PC := 551
474 [-]: JMP       551          ; PC := 551
475 [-]: GETGLOBAL R29 K31      ; R29 := _T
476 [-]: GETTABLE  R29 R29 K87  ; R29 := R29["CachedActiveMissions"]
477 [-]: GETTABLE  R29 R29 R5   ; R29 := R29[R5]
478 [-]: GETTABLE  R29 R29 K33  ; R29 := R29["mVisible"]
479 [-]: TEST      R29 0        ; if not R29 then PC := 551
480 [-]: JMP       551          ; PC := 551
481 [-]: GETGLOBAL R29 K31      ; R29 := _T
482 [-]: GETTABLE  R29 R29 K87  ; R29 := R29["CachedActiveMissions"]
483 [-]: GETTABLE  R29 R29 R5   ; R29 := R29[R5]
484 [-]: GETTABLE  R29 R29 K36  ; R29 := R29["mMissionInfo"]
485 [-]: LOADK     R30 K88      ; R30 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc1"
486 [-]: LOADK     R31 K89      ; R31 := "lith"
487 [-]: GETTABLE  R32 R29 K90  ; R32 := R29["activeMissionTag"]
488 [-]: GETUPVAL  R33 U5       ; R33 := U5
489 [-]: GETTABLE  R33 R33 K91  ; R33 := R33["VOIDT2"]
490 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 495
491 [-]: JMP       495          ; PC := 495
492 [-]: LOADK     R30 K92      ; R30 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc2"
493 [-]: LOADK     R31 K93      ; R31 := "meso"
494 [-]: JMP       518          ; PC := 518
495 [-]: GETTABLE  R32 R29 K90  ; R32 := R29["activeMissionTag"]
496 [-]: GETUPVAL  R33 U5       ; R33 := U5
497 [-]: GETTABLE  R33 R33 K94  ; R33 := R33["VOIDT3"]
498 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 503
499 [-]: JMP       503          ; PC := 503
500 [-]: LOADK     R30 K95      ; R30 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc3"
501 [-]: LOADK     R31 K96      ; R31 := "neo"
502 [-]: JMP       518          ; PC := 518
503 [-]: GETTABLE  R32 R29 K90  ; R32 := R29["activeMissionTag"]
504 [-]: GETUPVAL  R33 U5       ; R33 := U5
505 [-]: GETTABLE  R33 R33 K97  ; R33 := R33["VOIDT4"]
506 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 511
507 [-]: JMP       511          ; PC := 511
508 [-]: LOADK     R30 K98      ; R30 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc4"
509 [-]: LOADK     R31 K99      ; R31 := "axi"
510 [-]: JMP       518          ; PC := 518
511 [-]: GETTABLE  R32 R29 K90  ; R32 := R29["activeMissionTag"]
512 [-]: GETUPVAL  R33 U5       ; R33 := U5
513 [-]: GETTABLE  R33 R33 K100 ; R33 := R33["VOIDT5"]
514 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 518
515 [-]: JMP       518          ; PC := 518
516 [-]: LOADK     R30 K101     ; R30 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc5"
517 [-]: LOADK     R31 K102     ; R31 := "requiem"
518 [-]: GETGLOBAL R32 K103     ; R32 := mMovie
519 [-]: SELF      R32 R32 K104 ; R33 := R32; R32 := R32["0x5DB0BD4"]
520 [-]: MOVE      R34 R30      ; R34 := R30
521 [-]: MOVE      R35 R0       ; R35 := R0
522 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
523 [-]: MOVE      R30 R32      ; R30 := R32
524 [-]: GETGLOBAL R32 K16      ; R32 := 0xE6DC43B0
525 [-]: LOADK     R33 K105     ; R33 := "/Lotus/Language/Menu/VoidTearMissionName"
526 [-]: NEWTABLE  R34 0 1      ; R34 := {}
527 [-]: SETTABLE  R34 K106 R30 ; R34["TIER"] := R30
528 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
529 [-]: LOADK     R33 K18      ; R33 := ": "
530 [-]: GETUPVAL  R34 U2       ; R34 := U2
531 [-]: MOVE      R35 R29      ; R35 := R29
532 [-]: CALL      R34 2 2      ; R34 := R34(R35)
533 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
534 [-]: GETGLOBAL R33 K19      ; R33 := table
535 [-]: GETTABLE  R33 R33 K20  ; R33 := R33["0xE6450C9D"]
536 [-]: MOVE      R34 R11      ; R34 := R11
537 [-]: NEWTABLE  R35 0 6      ; R35 := {}
538 [-]: SETTABLE  R35 K21 R32  ; R35["mName"] := R32
539 [-]: GETUPVAL  R36 U0       ; R36 := U0
540 [-]: GETTABLE  R36 R36 K107 ; R36 := R36["ACTIVE_MISSION_TAG"]
541 [-]: SETTABLE  R35 K22 R36  ; R35["MissionTypeTag"] := R36
542 [-]: SETTABLE  R35 K23 R31  ; R35["mIconTag"] := R31
543 [-]: GETTABLE  R36 R29 K26  ; R36 := R29["minEnemyLevel"]
544 [-]: SETTABLE  R35 K25 R36  ; R35["mMinLevel"] := R36
545 [-]: GETTABLE  R36 R29 K28  ; R36 := R29["maxEnemyLevel"]
546 [-]: SETTABLE  R35 K27 R36  ; R35["mMaxLevel"] := R36
547 [-]: SELF      R36 R29 K30  ; R37 := R29; R36 := R29["0xEFC448EC"]
548 [-]: CALL      R36 2 2      ; R36 := R36(R37)
549 [-]: SETTABLE  R35 K29 R36  ; R35["mFaction"] := R36
550 [-]: CALL      R33 3 1      ; R33(R34,R35)
551 [-]: GETUPVAL  R33 U4       ; R33 := U4
552 [-]: SELF      R33 R33 K108 ; R34 := R33; R33 := R33["0x4B93F65B"]
553 [-]: GETGLOBAL R35 K109     ; R35 := 0xEC274B1A
554 [-]: MOVE      R36 R5       ; R36 := R5
555 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
556 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
557 [-]: GETGLOBAL R34 K103     ; R34 := mMovie
558 [-]: SELF      R34 R34 K104 ; R35 := R34; R34 := R34["0x5DB0BD4"]
559 [-]: GETUPVAL  R36 U0       ; R36 := U0
560 [-]: GETTABLE  R36 R36 K110 ; R36 := R36["FactionNames"]
561 [-]: GETTABLE  R37 R33 K111 ; R37 := R33["faction"]
562 [-]: ADD       R37 R37 K10  ; R37 := R37 + 1
563 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
564 [-]: MOVE      R37 R0       ; R37 := R0
565 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
566 [-]: GETTABLE  R35 R33 K112 ; R35 := R33["forceAllyFaction"]
567 [-]: TEST      R35 0        ; if not R35 then PC := 581
568 [-]: JMP       581          ; PC := 581
569 [-]: GETGLOBAL R35 K103     ; R35 := mMovie
570 [-]: SELF      R35 R35 K104 ; R36 := R35; R35 := R35["0x5DB0BD4"]
571 [-]: LOADK     R37 K113     ; R37 := "/Lotus/Language/Game/Faction_GrineerUC"
572 [-]: MOVE      R38 R0       ; R38 := R0
573 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
574 [-]: LOADK     R36 K114     ; R36 := " / "
575 [-]: GETGLOBAL R37 K103     ; R37 := mMovie
576 [-]: SELF      R37 R37 K104 ; R38 := R37; R37 := R37["0x5DB0BD4"]
577 [-]: LOADK     R39 K115     ; R39 := "/Lotus/Language/Game/Faction_CorpusUC"
578 [-]: MOVE      R40 R0       ; R40 := R0
579 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
580 [-]: CONCAT    R34 R35 R37  ; R34 := R35 .. R36 .. R37
581 [-]: GETGLOBAL R35 K103     ; R35 := mMovie
582 [-]: SELF      R35 R35 K104 ; R36 := R35; R35 := R35["0x5DB0BD4"]
583 [-]: LOADK     R37 K116     ; R37 := "/Lotus/Language/Game/MissionName_"
584 [-]: GETUPVAL  R38 U0       ; R38 := U0
585 [-]: GETTABLE  R38 R38 K117 ; R38 := R38["0x87B2D555"]
586 [-]: MOVE      R39 R33      ; R39 := R33
587 [-]: CALL      R38 2 2      ; R38 := R38(R39)
588 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
589 [-]: MOVE      R38 R0       ; R38 := R0
590 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
591 [-]: GETGLOBAL R36 K31      ; R36 := _T
592 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["CachedGhostTowerMissions"]
593 [-]: TEST      R36 0        ; if not R36 then PC := 662
594 [-]: JMP       662          ; PC := 662
595 [-]: GETGLOBAL R36 K31      ; R36 := _T
596 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["CachedGhostTowerMissions"]
597 [-]: GETTABLE  R36 R36 R5   ; R36 := R36[R5]
598 [-]: EQ        1 R36 K8     ; if R36 == nil then PC := 662
599 [-]: JMP       662          ; PC := 662
600 [-]: GETGLOBAL R36 K31      ; R36 := _T
601 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["CachedGhostTowerMissions"]
602 [-]: GETTABLE  R36 R36 R5   ; R36 := R36[R5]
603 [-]: GETTABLE  R36 R36 K119 ; R36 := R36["mUnlocked"]
604 [-]: TEST      R36 0        ; if not R36 then PC := 662
605 [-]: JMP       662          ; PC := 662
606 [-]: GETGLOBAL R36 K31      ; R36 := _T
607 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["CachedGhostTowerMissions"]
608 [-]: GETTABLE  R36 R36 R5   ; R36 := R36[R5]
609 [-]: GETTABLE  R36 R36 K76  ; R36 := R36["mShowInStarChart"]
610 [-]: TEST      R36 0        ; if not R36 then PC := 662
611 [-]: JMP       662          ; PC := 662
612 [-]: GETGLOBAL R36 K31      ; R36 := _T
613 [-]: GETTABLE  R36 R36 K118 ; R36 := R36["CachedGhostTowerMissions"]
614 [-]: GETTABLE  R36 R36 R5   ; R36 := R36[R5]
615 [-]: GETTABLE  R36 R36 K36  ; R36 := R36["mMissionInfo"]
616 [-]: GETUPVAL  R37 U3       ; R37 := U3
617 [-]: GETTABLE  R37 R37 K51  ; R37 := R37["0xF81722A2"]
618 [-]: GETTABLE  R38 R36 K26  ; R38 := R36["minEnemyLevel"]
619 [-]: LE        1 K120 R38   ; if 80 <= R38 then PC := 622
620 [-]: JMP       622          ; PC := 622
621 [-]: MOVE      R38 R0       ; R38 := R0
622 [-]: MOVE      R38 R1       ; R38 := R1
623 [-]: LOADK     R39 K121     ; R39 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
624 [-]: LOADK     R40 K122     ; R40 := "/Lotus/Language/Menu/GhostTowerMissionName"
625 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
626 [-]: GETGLOBAL R38 K16      ; R38 := 0xE6DC43B0
627 [-]: MOVE      R39 R37      ; R39 := R37
628 [-]: MOVE      R40 R0       ; R40 := R0
629 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
630 [-]: LOADK     R39 K18      ; R39 := ": "
631 [-]: GETUPVAL  R40 U2       ; R40 := U2
632 [-]: MOVE      R41 R36      ; R41 := R36
633 [-]: CALL      R40 2 2      ; R40 := R40(R41)
634 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
635 [-]: GETGLOBAL R39 K19      ; R39 := table
636 [-]: GETTABLE  R39 R39 K20  ; R39 := R39["0xE6450C9D"]
637 [-]: MOVE      R40 R11      ; R40 := R11
638 [-]: NEWTABLE  R41 0 6      ; R41 := {}
639 [-]: SETTABLE  R41 K21 R38  ; R41["mName"] := R38
640 [-]: GETUPVAL  R42 U0       ; R42 := U0
641 [-]: GETTABLE  R42 R42 K123 ; R42 := R42["KUVA_TOWER_MISSION_TAG"]
642 [-]: SETTABLE  R41 K22 R42  ; R41["MissionTypeTag"] := R42
643 [-]: GETUPVAL  R42 U3       ; R42 := U3
644 [-]: GETTABLE  R42 R42 K51  ; R42 := R42["0xF81722A2"]
645 [-]: GETTABLE  R43 R36 K26  ; R43 := R36["minEnemyLevel"]
646 [-]: LE        1 K120 R43   ; if 80 <= R43 then PC := 649
647 [-]: JMP       649          ; PC := 649
648 [-]: MOVE      R43 R0       ; R43 := R0
649 [-]: MOVE      R43 R1       ; R43 := R1
650 [-]: LOADK     R44 K124     ; R44 := "kuvaflood"
651 [-]: LOADK     R45 K125     ; R45 := "kuvasiphon"
652 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
653 [-]: SETTABLE  R41 K23 R42  ; R41["mIconTag"] := R42
654 [-]: GETTABLE  R42 R36 K26  ; R42 := R36["minEnemyLevel"]
655 [-]: SETTABLE  R41 K25 R42  ; R41["mMinLevel"] := R42
656 [-]: GETTABLE  R42 R36 K28  ; R42 := R36["maxEnemyLevel"]
657 [-]: SETTABLE  R41 K27 R42  ; R41["mMaxLevel"] := R42
658 [-]: SELF      R42 R36 K30  ; R43 := R36; R42 := R36["0xEFC448EC"]
659 [-]: CALL      R42 2 2      ; R42 := R42(R43)
660 [-]: SETTABLE  R41 K29 R42  ; R41["mFaction"] := R42
661 [-]: CALL      R39 3 1      ; R39(R40,R41)
662 [-]: GETGLOBAL R39 K31      ; R39 := _T
663 [-]: GETTABLE  R39 R39 K126 ; R39 := R39["CachedSkullNodes"]
664 [-]: TEST      R39 0        ; if not R39 then PC := 737
665 [-]: JMP       737          ; PC := 737
666 [-]: GETGLOBAL R39 K31      ; R39 := _T
667 [-]: GETTABLE  R39 R39 K126 ; R39 := R39["CachedSkullNodes"]
668 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
669 [-]: EQ        1 R39 K8     ; if R39 == nil then PC := 737
670 [-]: JMP       737          ; PC := 737
671 [-]: GETGLOBAL R39 K16      ; R39 := 0xE6DC43B0
672 [-]: LOADK     R40 K127     ; R40 := "/Lotus/Language/Menu/NightmareModeName"
673 [-]: LOADNIL   R41 R41      ; R41 := nil
674 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
675 [-]: LOADK     R40 K18      ; R40 := ": "
676 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
677 [-]: MOVE      R40 R39      ; R40 := R39
678 [-]: MOVE      R41 R35      ; R41 := R35
679 [-]: CONCAT    R39 R40 R41  ; R39 := R40 .. R41
680 [-]: MOVE      R40 R39      ; R40 := R39
681 [-]: LOADK     R41 K128     ; R41 := "\r\n"
682 [-]: GETGLOBAL R42 K103     ; R42 := mMovie
683 [-]: SELF      R42 R42 K104 ; R43 := R42; R42 := R42["0x5DB0BD4"]
684 [-]: GETGLOBAL R44 K31      ; R44 := _T
685 [-]: GETTABLE  R44 R44 K126 ; R44 := R44["CachedSkullNodes"]
686 [-]: GETTABLE  R44 R44 R5   ; R44 := R44[R5]
687 [-]: GETTABLE  R44 R44 K10  ; R44 := R44[1]
688 [-]: GETTABLE  R44 R44 K129 ; R44 := R44[2]
689 [-]: MOVE      R45 R0       ; R45 := R0
690 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
691 [-]: CONCAT    R39 R40 R42  ; R39 := R40 .. R41 .. R42
692 [-]: GETGLOBAL R40 K31      ; R40 := _T
693 [-]: GETTABLE  R40 R40 K126 ; R40 := R40["CachedSkullNodes"]
694 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
695 [-]: LEN       R40 R40      ; R40 := # R40
696 [-]: LT        0 K10 R40    ; if 1 >= R40 then PC := 718
697 [-]: JMP       718          ; PC := 718
698 [-]: LOADK     R40 K129     ; R40 := 2
699 [-]: GETGLOBAL R41 K31      ; R41 := _T
700 [-]: GETTABLE  R41 R41 K126 ; R41 := R41["CachedSkullNodes"]
701 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
702 [-]: LEN       R41 R41      ; R41 := # R41
703 [-]: LOADK     R42 K10      ; R42 := 1
704 [-]: FORPREP   R40 717      ; R40 -= R42; PC := 717
705 [-]: MOVE      R44 R39      ; R44 := R39
706 [-]: LOADK     R45 K130     ; R45 := ", "
707 [-]: GETGLOBAL R46 K103     ; R46 := mMovie
708 [-]: SELF      R46 R46 K104 ; R47 := R46; R46 := R46["0x5DB0BD4"]
709 [-]: GETGLOBAL R48 K31      ; R48 := _T
710 [-]: GETTABLE  R48 R48 K126 ; R48 := R48["CachedSkullNodes"]
711 [-]: GETTABLE  R48 R48 R5   ; R48 := R48[R5]
712 [-]: GETTABLE  R48 R48 R43  ; R48 := R48[R43]
713 [-]: GETTABLE  R48 R48 K129 ; R48 := R48[2]
714 [-]: MOVE      R49 R0       ; R49 := R0
715 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
716 [-]: CONCAT    R39 R44 R46  ; R39 := R44 .. R45 .. R46
717 [-]: FORLOOP   R40 705      ; R40 += R42; if R40 <= R41 then begin PC := 705; R43 := R40 end
718 [-]: GETGLOBAL R44 K19      ; R44 := table
719 [-]: GETTABLE  R44 R44 K20  ; R44 := R44["0xE6450C9D"]
720 [-]: MOVE      R45 R11      ; R45 := R11
721 [-]: NEWTABLE  R46 0 6      ; R46 := {}
722 [-]: SETTABLE  R46 K21 R39  ; R46["mName"] := R39
723 [-]: GETUPVAL  R47 U0       ; R47 := U0
724 [-]: GETTABLE  R47 R47 K131 ; R47 := R47["NIGHTMARE_TAG"]
725 [-]: SETTABLE  R46 K22 R47  ; R46["MissionTypeTag"] := R47
726 [-]: SETTABLE  R46 K23 K132 ; R46["mIconTag"] := "nightmare"
727 [-]: GETTABLE  R47 R33 K26  ; R47 := R33["minEnemyLevel"]
728 [-]: ADD       R47 R47 K133 ; R47 := R47 + 10
729 [-]: SETTABLE  R46 K25 R47  ; R46["mMinLevel"] := R47
730 [-]: GETTABLE  R47 R33 K28  ; R47 := R33["maxEnemyLevel"]
731 [-]: ADD       R47 R47 K133 ; R47 := R47 + 10
732 [-]: SETTABLE  R46 K27 R47  ; R46["mMaxLevel"] := R47
733 [-]: SELF      R47 R33 K30  ; R48 := R33; R47 := R33["0xEFC448EC"]
734 [-]: CALL      R47 2 2      ; R47 := R47(R48)
735 [-]: SETTABLE  R46 K29 R47  ; R46["mFaction"] := R47
736 [-]: CALL      R44 3 1      ; R44(R45,R46)
737 [-]: GETGLOBAL R44 K31      ; R44 := _T
738 [-]: GETTABLE  R44 R44 K134 ; R44 := R44["CachedNemesisMissions"]
739 [-]: TEST      R44 0        ; if not R44 then PC := 789
740 [-]: JMP       789          ; PC := 789
741 [-]: GETGLOBAL R44 K31      ; R44 := _T
742 [-]: GETTABLE  R44 R44 K134 ; R44 := R44["CachedNemesisMissions"]
743 [-]: GETTABLE  R44 R44 R5   ; R44 := R44[R5]
744 [-]: TEST      R44 0        ; if not R44 then PC := 789
745 [-]: JMP       789          ; PC := 789
746 [-]: GETGLOBAL R44 K31      ; R44 := _T
747 [-]: GETTABLE  R44 R44 K134 ; R44 := R44["CachedNemesisMissions"]
748 [-]: GETTABLE  R44 R44 R5   ; R44 := R44[R5]
749 [-]: GETGLOBAL R45 K16      ; R45 := 0xE6DC43B0
750 [-]: LOADK     R46 K113     ; R46 := "/Lotus/Language/Game/Faction_GrineerUC"
751 [-]: MOVE      R47 R0       ; R47 := R0
752 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
753 [-]: GETGLOBAL R46 K103     ; R46 := mMovie
754 [-]: SELF      R46 R46 K104 ; R47 := R46; R46 := R46["0x5DB0BD4"]
755 [-]: LOADK     R48 K116     ; R48 := "/Lotus/Language/Game/MissionName_"
756 [-]: GETUPVAL  R49 U0       ; R49 := U0
757 [-]: GETTABLE  R49 R49 K117 ; R49 := R49["0x87B2D555"]
758 [-]: GETTABLE  R50 R44 K36  ; R50 := R44["mMissionInfo"]
759 [-]: CALL      R49 2 2      ; R49 := R49(R50)
760 [-]: CONCAT    R48 R48 R49  ; R48 := R48 .. R49
761 [-]: MOVE      R49 R0       ; R49 := R0
762 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
763 [-]: GETGLOBAL R47 K103     ; R47 := mMovie
764 [-]: SELF      R47 R47 K104 ; R48 := R47; R47 := R47["0x5DB0BD4"]
765 [-]: GETTABLE  R49 R44 K135 ; R49 := R44["missionName"]
766 [-]: MOVE      R50 R0       ; R50 := R0
767 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
768 [-]: LOADK     R48 K136     ; R48 := "<br>"
769 [-]: MOVE      R49 R46      ; R49 := R46
770 [-]: CONCAT    R47 R47 R49  ; R47 := R47 .. R48 .. R49
771 [-]: GETGLOBAL R48 K19      ; R48 := table
772 [-]: GETTABLE  R48 R48 K20  ; R48 := R48["0xE6450C9D"]
773 [-]: MOVE      R49 R11      ; R49 := R11
774 [-]: NEWTABLE  R50 0 7      ; R50 := {}
775 [-]: SETTABLE  R50 K21 R47  ; R50["mName"] := R47
776 [-]: GETUPVAL  R51 U0       ; R51 := U0
777 [-]: GETTABLE  R51 R51 K137 ; R51 := R51["NEMESIS_MISSION_TAG"]
778 [-]: SETTABLE  R50 K22 R51  ; R50["MissionTypeTag"] := R51
779 [-]: SETTABLE  R50 K23 K138 ; R50["mIconTag"] := "lich"
780 [-]: SETTABLE  R50 K139 K140; R50["mIsNemesis"] := "0x1"
781 [-]: GETTABLE  R51 R44 K36  ; R51 := R44["mMissionInfo"]
782 [-]: GETTABLE  R51 R51 K26  ; R51 := R51["minEnemyLevel"]
783 [-]: SETTABLE  R50 K25 R51  ; R50["mMinLevel"] := R51
784 [-]: GETTABLE  R51 R44 K36  ; R51 := R44["mMissionInfo"]
785 [-]: GETTABLE  R51 R51 K28  ; R51 := R51["maxEnemyLevel"]
786 [-]: SETTABLE  R50 K27 R51  ; R50["mMaxLevel"] := R51
787 [-]: SETTABLE  R50 K29 R45  ; R50["mFaction"] := R45
788 [-]: CALL      R48 3 1      ; R48(R49,R50)
789 [-]: GETGLOBAL R48 K31      ; R48 := _T
790 [-]: GETTABLE  R48 R48 K141 ; R48 := R48["CachedEliteAlertMissions"]
791 [-]: TEST      R48 0        ; if not R48 then PC := 840
792 [-]: JMP       840          ; PC := 840
793 [-]: GETGLOBAL R48 K31      ; R48 := _T
794 [-]: GETTABLE  R48 R48 K141 ; R48 := R48["CachedEliteAlertMissions"]
795 [-]: GETTABLE  R48 R48 R5   ; R48 := R48[R5]
796 [-]: EQ        1 R48 K8     ; if R48 == nil then PC := 840
797 [-]: JMP       840          ; PC := 840
798 [-]: GETGLOBAL R48 K31      ; R48 := _T
799 [-]: GETTABLE  R48 R48 K141 ; R48 := R48["CachedEliteAlertMissions"]
800 [-]: GETTABLE  R48 R48 R5   ; R48 := R48[R5]
801 [-]: GETTABLE  R48 R48 K119 ; R48 := R48["mUnlocked"]
802 [-]: TEST      R48 0        ; if not R48 then PC := 840
803 [-]: JMP       840          ; PC := 840
804 [-]: GETGLOBAL R48 K16      ; R48 := 0xE6DC43B0
805 [-]: LOADK     R49 K142     ; R49 := "/Lotus/Language/Menu/AlertHardMode"
806 [-]: LOADNIL   R50 R50      ; R50 := nil
807 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
808 [-]: LOADK     R49 K18      ; R49 := ": "
809 [-]: MOVE      R50 R35      ; R50 := R35
810 [-]: CONCAT    R48 R48 R50  ; R48 := R48 .. R49 .. R50
811 [-]: GETGLOBAL R49 K19      ; R49 := table
812 [-]: GETTABLE  R49 R49 K20  ; R49 := R49["0xE6450C9D"]
813 [-]: MOVE      R50 R11      ; R50 := R11
814 [-]: NEWTABLE  R51 0 6      ; R51 := {}
815 [-]: SETTABLE  R51 K21 R48  ; R51["mName"] := R48
816 [-]: GETUPVAL  R52 U0       ; R52 := U0
817 [-]: GETTABLE  R52 R52 K143 ; R52 := R52["ELITE_ALERT_TAG"]
818 [-]: SETTABLE  R51 K22 R52  ; R51["MissionTypeTag"] := R52
819 [-]: SETTABLE  R51 K23 K144 ; R51["mIconTag"] := "arbitration"
820 [-]: GETGLOBAL R52 K31      ; R52 := _T
821 [-]: GETTABLE  R52 R52 K141 ; R52 := R52["CachedEliteAlertMissions"]
822 [-]: GETTABLE  R52 R52 R5   ; R52 := R52[R5]
823 [-]: GETTABLE  R52 R52 K36  ; R52 := R52["mMissionInfo"]
824 [-]: GETTABLE  R52 R52 K26  ; R52 := R52["minEnemyLevel"]
825 [-]: SETTABLE  R51 K25 R52  ; R51["mMinLevel"] := R52
826 [-]: GETGLOBAL R52 K31      ; R52 := _T
827 [-]: GETTABLE  R52 R52 K141 ; R52 := R52["CachedEliteAlertMissions"]
828 [-]: GETTABLE  R52 R52 R5   ; R52 := R52[R5]
829 [-]: GETTABLE  R52 R52 K36  ; R52 := R52["mMissionInfo"]
830 [-]: GETTABLE  R52 R52 K28  ; R52 := R52["maxEnemyLevel"]
831 [-]: SETTABLE  R51 K27 R52  ; R51["mMaxLevel"] := R52
832 [-]: GETGLOBAL R52 K31      ; R52 := _T
833 [-]: GETTABLE  R52 R52 K141 ; R52 := R52["CachedEliteAlertMissions"]
834 [-]: GETTABLE  R52 R52 R5   ; R52 := R52[R5]
835 [-]: GETTABLE  R52 R52 K36  ; R52 := R52["mMissionInfo"]
836 [-]: SELF      R52 R52 K30  ; R53 := R52; R52 := R52["0xEFC448EC"]
837 [-]: CALL      R52 2 2      ; R52 := R52(R53)
838 [-]: SETTABLE  R51 K29 R52  ; R51["mFaction"] := R52
839 [-]: CALL      R49 3 1      ; R49(R50,R51)
840 [-]: GETUPVAL  R49 U6       ; R49 := U6
841 [-]: TEST      R49 0        ; if not R49 then PC := 897
842 [-]: JMP       897          ; PC := 897
843 [-]: GETUPVAL  R49 U7       ; R49 := U7
844 [-]: GETTABLE  R49 R49 K145 ; R49 := R49["Active"]
845 [-]: TEST      R49 1        ; if R49 then PC := 897
846 [-]: JMP       897          ; PC := 897
847 [-]: GETUPVAL  R49 U8       ; R49 := U8
848 [-]: TEST      R49 0        ; if not R49 then PC := 897
849 [-]: JMP       897          ; PC := 897
850 [-]: GETGLOBAL R49 K5       ; R49 := string
851 [-]: GETTABLE  R49 R49 K6   ; R49 := R49["0xDE44F664"]
852 [-]: MOVE      R50 R3       ; R50 := R3
853 [-]: GETUPVAL  R51 U0       ; R51 := U0
854 [-]: GETTABLE  R51 R51 K146 ; R51 := R51["TAG_SEPERATOR"]
855 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
856 [-]: EQ        0 R49 K8     ; if R49 ~= nil then PC := 897
857 [-]: JMP       897          ; PC := 897
858 [-]: GETGLOBAL R49 K12      ; R49 := 0x400E7765
859 [-]: GETTABLE  R50 R0 K15   ; R50 := R0["keyChain"]
860 [-]: CALL      R49 2 2      ; R49 := R49(R50)
861 [-]: TEST      R49 0        ; if not R49 then PC := 897
862 [-]: JMP       897          ; PC := 897
863 [-]: GETUPVAL  R49 U9       ; R49 := U9
864 [-]: GETTABLE  R49 R49 K147 ; R49 := R49["CurrentIndex"]
865 [-]: EQ        0 R49 K129   ; if R49 ~= 2 then PC := 897
866 [-]: JMP       897          ; PC := 897
867 [-]: GETGLOBAL R49 K16      ; R49 := 0xE6DC43B0
868 [-]: LOADK     R50 K148     ; R50 := "/Lotus/Language/Menu/HardMode"
869 [-]: LOADNIL   R51 R51      ; R51 := nil
870 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
871 [-]: LOADK     R50 K18      ; R50 := ": "
872 [-]: MOVE      R51 R35      ; R51 := R35
873 [-]: CONCAT    R49 R49 R51  ; R49 := R49 .. R50 .. R51
874 [-]: GETGLOBAL R50 K19      ; R50 := table
875 [-]: GETTABLE  R50 R50 K20  ; R50 := R50["0xE6450C9D"]
876 [-]: MOVE      R51 R11      ; R51 := R11
877 [-]: NEWTABLE  R52 0 6      ; R52 := {}
878 [-]: SETTABLE  R52 K21 R49  ; R52["mName"] := R49
879 [-]: GETUPVAL  R53 U0       ; R53 := U0
880 [-]: GETTABLE  R53 R53 K149 ; R53 := R53["HARD_MODE_TAG"]
881 [-]: SETTABLE  R52 K22 R53  ; R52["MissionTypeTag"] := R53
882 [-]: SETTABLE  R52 K23 K150 ; R52["mIconTag"] := "ultrahard"
883 [-]: GETTABLE  R53 R33 K26  ; R53 := R33["minEnemyLevel"]
884 [-]: GETUPVAL  R54 U0       ; R54 := U0
885 [-]: GETTABLE  R54 R54 K151 ; R54 := R54["HARD_MODE_LEVEL_MODIFIER"]
886 [-]: ADD       R53 R53 R54  ; R53 := R53 + R54
887 [-]: SETTABLE  R52 K25 R53  ; R52["mMinLevel"] := R53
888 [-]: GETTABLE  R53 R33 K28  ; R53 := R33["maxEnemyLevel"]
889 [-]: GETUPVAL  R54 U0       ; R54 := U0
890 [-]: GETTABLE  R54 R54 K151 ; R54 := R54["HARD_MODE_LEVEL_MODIFIER"]
891 [-]: ADD       R53 R53 R54  ; R53 := R53 + R54
892 [-]: SETTABLE  R52 K27 R53  ; R52["mMaxLevel"] := R53
893 [-]: SELF      R53 R33 K30  ; R54 := R33; R53 := R33["0xEFC448EC"]
894 [-]: CALL      R53 2 2      ; R53 := R53(R54)
895 [-]: SETTABLE  R52 K29 R53  ; R52["mFaction"] := R53
896 [-]: CALL      R50 3 1      ; R50(R51,R52)
897 [-]: GETGLOBAL R50 K12      ; R50 := 0x400E7765
898 [-]: GETTABLE  R51 R33 K152 ; R51 := R33["levelOverride"]
899 [-]: CALL      R50 2 2      ; R50 := R50(R51)
900 [-]: TEST      R50 1        ; if R50 then PC := 927
901 [-]: JMP       927          ; PC := 927
902 [-]: GETUPVAL  R50 U6       ; R50 := U6
903 [-]: TEST      R50 0        ; if not R50 then PC := 912
904 [-]: JMP       912          ; PC := 912
905 [-]: GETUPVAL  R50 U8       ; R50 := U8
906 [-]: TEST      R50 0        ; if not R50 then PC := 912
907 [-]: JMP       912          ; PC := 912
908 [-]: GETUPVAL  R50 U9       ; R50 := U9
909 [-]: GETTABLE  R50 R50 K147 ; R50 := R50["CurrentIndex"]
910 [-]: EQ        0 R50 K10    ; if R50 ~= 1 then PC := 927
911 [-]: JMP       927          ; PC := 927
912 [-]: GETGLOBAL R50 K19      ; R50 := table
913 [-]: GETTABLE  R50 R50 K20  ; R50 := R50["0xE6450C9D"]
914 [-]: MOVE      R51 R11      ; R51 := R11
915 [-]: NEWTABLE  R52 0 6      ; R52 := {}
916 [-]: SETTABLE  R52 K21 R35  ; R52["mName"] := R35
917 [-]: SETTABLE  R52 K22 K44  ; R52["MissionTypeTag"] := ""
918 [-]: SETTABLE  R52 K23 K153 ; R52["mIconTag"] := "regular"
919 [-]: GETTABLE  R53 R33 K26  ; R53 := R33["minEnemyLevel"]
920 [-]: SETTABLE  R52 K25 R53  ; R52["mMinLevel"] := R53
921 [-]: GETTABLE  R53 R33 K28  ; R53 := R33["maxEnemyLevel"]
922 [-]: SETTABLE  R52 K27 R53  ; R52["mMaxLevel"] := R53
923 [-]: SELF      R53 R33 K30  ; R54 := R33; R53 := R33["0xEFC448EC"]
924 [-]: CALL      R53 2 2      ; R53 := R53(R54)
925 [-]: SETTABLE  R52 K29 R53  ; R52["mFaction"] := R53
926 [-]: CALL      R50 3 1      ; R50(R51,R52)
927 [-]: LOADK     R50 K10      ; R50 := 1
928 [-]: LEN       R51 R11      ; R51 := # R11
929 [-]: LOADK     R52 K10      ; R52 := 1
930 [-]: FORPREP   R50 951      ; R50 -= R52; PC := 951
931 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
932 [-]: SETTABLE  R54 K154 R0  ; R54["RadialSector"] := R0
933 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
934 [-]: SETTABLE  R54 K155 R5  ; R54["BaseNodeName"] := R5
935 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
936 [-]: SETTABLE  R54 K156 R1  ; R54["SectorQuest"] := R1
937 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
938 [-]: SETTABLE  R54 K157 R2  ; R54["SectorRaid"] := R2
939 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
940 [-]: SETTABLE  R54 K158 R4  ; R54["SectorDifficulty"] := R4
941 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
942 [-]: GETGLOBAL R55 K160     ; R55 := missionTypeIconMap
943 [-]: SELF      R55 R55 K161 ; R56 := R55; R55 := R55["0xE16D5ECC"]
944 [-]: GETTABLE  R57 R11 R53  ; R57 := R11[R53]
945 [-]: GETTABLE  R57 R57 K23  ; R57 := R57["mIconTag"]
946 [-]: LOADK     R58 K47      ; R58 := 0
947 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
948 [-]: SETTABLE  R54 K159 R55 ; R54["Icon"] := R55
949 [-]: GETTABLE  R54 R11 R53  ; R54 := R11[R53]
950 [-]: SETTABLE  R54 K162 R34 ; R54["FactionName"] := R34
951 [-]: FORLOOP   R50 931      ; R50 += R52; if R50 <= R51 then begin PC := 931; R53 := R50 end
952 [-]: RETURN    R11 2        ; return R11
953 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4674
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["NodeMissions"]
  3 [-]: EQ        0 R3 K1      ; if R3 ~= nil then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: MOVE      R7 R2        ; R7 := R2
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: MOVE      R3 R4        ; R3 := R4
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["NodeMissionList"]
 13 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x7CF71D03"]
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: MOVE      R7 R1        ; R7 := R1
 16 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 17 [-]: LOADK     R4 K4        ; R4 := 1
 18 [-]: LEN       R5 R3        ; R5 := # R3
 19 [-]: LOADK     R6 K4        ; R6 := 1
 20 [-]: FORPREP   R4 27        ; R4 -= R6; PC := 27
 21 [-]: GETUPVAL  R8 U0        ; R8 := U0
 22 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["NodeMissionList"]
 23 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0xA77DA8EE"]
 24 [-]: GETTABLE  R10 R3 R7    ; R10 := R3[R7]
 25 [-]: MOVE      R11 R1       ; R11 := R1
 26 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 27 [-]: FORLOOP   R4 21        ; R4 += R6; if R4 <= R5 then begin PC := 21; R7 := R4 end
 28 [-]: GETUPVAL  R8 U0        ; R8 := U0
 29 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["NodeMissionList"]
 30 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8["0x6470BAF4"]
 31 [-]: CLOSURE   R10 0        ; R10 := closure(Function #112.1)
 32 [-]: GETUPVAL  R0 U2        ; R0 := U2
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: MOVE      R11 R1       ; R11 := R1
 35 [-]: MOVE      R12 R1       ; R12 := R1
 36 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 37 [-]: RETURN    R0 1         ; return 


; Function #112.1:
;
; Name:            
; Defined at line: 4687
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x61494587"]
  3 [-]: LOADK     R2 K1        ; R2 := 0
  4 [-]: CLOSURE   R3 0         ; R3 := closure(Function #112.1.1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #112.1.1:
;
; Name:            
; Defined at line: 4689
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["NodeMissionList"]
  3 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x625791A8"]
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4697
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB451D706"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SF_CLAN"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 1         ; if R0 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xB11F032"]
 10 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/SolarMap_NoClanShipFeature"
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 14 [-]: GETGLOBAL R1 K6        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["SquadOverlay"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 1         ; if R0 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R0 K6        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["SquadOverlay"]
 21 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x458F27A9"]
 22 [-]: LOADK     R2 K9        ; R2 := "InitiateDojoVisit"
 23 [-]: LOADK     R3 K10       ; R3 := ""
 24 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 25 [-]: NEWTABLE  R0 0 3       ; R0 := {}
 26 [-]: SETTABLE  R0 K11 K12   ; R0["name"] := "DojoHUB_HUB"
 27 [-]: SETTABLE  R0 K13 K10   ; R0["quest"] := ""
 28 [-]: SETTABLE  R0 K14 K10   ; R0["difficulty"] := ""
 29 [-]: GETGLOBAL R1 K15       ; R1 := gMatchingService
 30 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x3016115E"]
 31 [-]: GETGLOBAL R3 K17       ; R3 := cjson
 32 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["0x8DC1075B"]
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 35 [-]: CALL      R1 0 1       ; R1(R2,...)
 36 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4718
; #Upvalues:       18
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["locked"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["locationEnabled"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R0 K3        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 18 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["radialSector"]
 23 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K3        ; R0 := _T
 26 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 27 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["baseNodeName"]
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 30 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["radialSector"]
 31 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 32 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
 37 [-]: GETGLOBAL R2 K3        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SquadOverlay"]
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: TEST      R0 0         ; if not R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R1 K3        ; R1 := _T
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["SquadOverlay"]
 46 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x458F27A9"]
 47 [-]: LOADK     R3 K12       ; R3 := "Accept"
 48 [-]: LOADK     R4 K13       ; R4 := ""
 49 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R1 K14       ; R1 := 0x9FAED6BC
 52 [-]: GETUPVAL  R2 U0        ; R2 := U0
 53 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 54 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 55 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["name"]
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 59 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 60 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["keyChain"]
 61 [-]: LOADNIL   R3 R3        ; R3 := nil
 62 [-]: GETUPVAL  R4 U0        ; R4 := U0
 63 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 64 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["radialSector"]
 65 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mission"]
 66 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["difficulty"]
 67 [-]: GETUPVAL  R5 U1        ; R5 := U1
 68 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["Active"]
 69 [-]: TEST      R5 1         ; if R5 then PC := 104
 70 [-]: JMP       104          ; PC := 104
 71 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 72 [-]: GETUPVAL  R6 U0        ; R6 := U0
 73 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 74 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 75 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 76 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["levelKeyName"]
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: TEST      R5 1         ; if R5 then PC := 104
 79 [-]: JMP       104          ; PC := 104
 80 [-]: GETGLOBAL R5 K20       ; R5 := string
 81 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0xDE44F664"]
 82 [-]: MOVE      R6 R1        ; R6 := R1
 83 [-]: GETUPVAL  R7 U2        ; R7 := U2
 84 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["KEY_TAG"]
 85 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 86 [-]: TEST      R5 1         ; if R5 then PC := 104
 87 [-]: JMP       104          ; PC := 104
 88 [-]: GETGLOBAL R5 K3        ; R5 := _T
 89 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["DesiredGoToNodeTag"]
 90 [-]: TEST      R5 1         ; if R5 then PC := 104
 91 [-]: JMP       104          ; PC := 104
 92 [-]: GETGLOBAL R5 K14       ; R5 := 0x9FAED6BC
 93 [-]: GETUPVAL  R6 U0        ; R6 := U0
 94 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 95 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 96 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 97 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["levelKeyName"]
 98 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0x1B252E3C"]
 99 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
100 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
101 [-]: GETUPVAL  R6 U2        ; R6 := U2
102 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["KEY_TAG"]
103 [-]: CONCAT    R1 R5 R6     ; R1 := R5 .. R6
104 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
105 [-]: MOVE      R6 R2        ; R6 := R2
106 [-]: CALL      R5 2 2       ; R5 := R5(R6)
107 [-]: TEST      R5 1         ; if R5 then PC := 133
108 [-]: JMP       133          ; PC := 133
109 [-]: LOADNIL   R5 R5        ; R5 := nil
110 [-]: GETGLOBAL R6 K20       ; R6 := string
111 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["0xDE44F664"]
112 [-]: MOVE      R7 R1        ; R7 := R1
113 [-]: GETUPVAL  R8 U2        ; R8 := U2
114 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["KEY_TAG"]
115 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
116 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 128
117 [-]: JMP       128          ; PC := 128
118 [-]: GETGLOBAL R7 K20       ; R7 := string
119 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["0x7B782033"]
120 [-]: MOVE      R8 R1        ; R8 := R1
121 [-]: LOADK     R9 K26       ; R9 := 1
122 [-]: SUB       R10 R6 K26   ; R10 := R6 - 1
123 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
124 [-]: GETGLOBAL R8 K27       ; R8 := 0x7C282057
125 [-]: MOVE      R9 R7        ; R9 := R7
126 [-]: CALL      R8 2 2       ; R8 := R8(R9)
127 [-]: MOVE      R5 R8        ; R5 := R8
128 [-]: GETGLOBAL R8 K28       ; R8 := gGameRules
129 [-]: SELF      R8 R8 K29    ; R9 := R8; R8 := R8["0x8DD31239"]
130 [-]: MOVE      R10 R2       ; R10 := R2
131 [-]: MOVE      R11 R5       ; R11 := R5
132 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
133 [-]: GETGLOBAL R8 K20       ; R8 := string
134 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["0xDE44F664"]
135 [-]: MOVE      R9 R1        ; R9 := R1
136 [-]: LOADK     R10 K30      ; R10 := "FeaturedDojo"
137 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
138 [-]: TEST      R8 0         ; if not R8 then PC := 206
139 [-]: JMP       206          ; PC := 206
140 [-]: GETUPVAL  R8 U3        ; R8 := U3
141 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["0x36BA5F48"]
142 [-]: CALL      R8 1 2       ; R8 := R8()
143 [-]: TEST      R8 1         ; if R8 then PC := 197
144 [-]: JMP       197          ; PC := 197
145 [-]: GETGLOBAL R8 K32       ; R8 := 0xF595ADDE
146 [-]: GETGLOBAL R9 K20       ; R9 := string
147 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["0xAF449107"]
148 [-]: MOVE      R10 R1       ; R10 := R1
149 [-]: LOADK     R11 K34      ; R11 := "%d+"
150 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
151 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
152 [-]: GETGLOBAL R9 K35       ; R9 := gPlayerProfileMgr
153 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x21EF7B1A"]
154 [-]: LOADK     R11 K37      ; R11 := 0
155 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
156 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9["0x654F1092"]
157 [-]: CALL      R9 2 2       ; R9 := R9(R10)
158 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x2D0B8A86"]
159 [-]: CALL      R9 2 2       ; R9 := R9(R10)
160 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["mFeaturedGuilds"]
161 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
162 [-]: GETTABLE  R9 R9 K41    ; R9 := R9["mId"]
163 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
164 [-]: GETGLOBAL R11 K3       ; R11 := _T
165 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["SquadOverlay"]
166 [-]: CALL      R10 2 2      ; R10 := R10(R11)
167 [-]: TEST      R10 1        ; if R10 then PC := 205
168 [-]: JMP       205          ; PC := 205
169 [-]: GETGLOBAL R10 K42      ; R10 := gGameStatsMgr
170 [-]: EQ        1 R10 K5     ; if R10 == nil then PC := 179
171 [-]: JMP       179          ; PC := 179
172 [-]: GETGLOBAL R10 K42      ; R10 := gGameStatsMgr
173 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10["0x31F80B49"]
174 [-]: GETGLOBAL R12 K44      ; R12 := 0xEC274B1A
175 [-]: LOADK     R13 K45      ; R13 := "FEATURED_DOJO"
176 [-]: CALL      R12 2 2      ; R12 := R12(R13)
177 [-]: MOVE      R13 R8       ; R13 := R8
178 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
179 [-]: GETGLOBAL R10 K3       ; R10 := _T
180 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SquadOverlay"]
181 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0x458F27A9"]
182 [-]: LOADK     R12 K46      ; R12 := "InitiateDojoVisit"
183 [-]: GETTABLE  R13 R9 K41   ; R13 := R9["mId"]
184 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
185 [-]: NEWTABLE  R10 0 3      ; R10 := {}
186 [-]: SETTABLE  R10 K8 K47   ; R10["name"] := "DojoHUB_HUB"
187 [-]: SETTABLE  R10 K48 K13  ; R10["quest"] := ""
188 [-]: SETTABLE  R10 K17 K13  ; R10["difficulty"] := ""
189 [-]: GETGLOBAL R11 K49      ; R11 := gMatchingService
190 [-]: SELF      R11 R11 K50  ; R12 := R11; R11 := R11["0x3016115E"]
191 [-]: GETGLOBAL R13 K51      ; R13 := cjson
192 [-]: GETTABLE  R13 R13 K52  ; R13 := R13["0x8DC1075B"]
193 [-]: MOVE      R14 R10      ; R14 := R10
194 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
195 [-]: CALL      R11 0 1      ; R11(R12,...)
196 [-]: JMP       205          ; PC := 205
197 [-]: GETUPVAL  R11 U3       ; R11 := U3
198 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["0xB11F032"]
199 [-]: GETGLOBAL R12 K54      ; R12 := mMovie
200 [-]: SELF      R12 R12 K55  ; R13 := R12; R12 := R12["0x5DB0BD4"]
201 [-]: LOADK     R14 K56      ; R14 := "/Lotus/Language/Clan/RestrictedUGCWarning"
202 [-]: MOVE      R15 R0       ; R15 := R0
203 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
204 [-]: CALL      R11 0 1      ; R11(R12,...)
205 [-]: RETURN    R0 1         ; return 
206 [-]: GETUPVAL  R11 U4       ; R11 := U4
207 [-]: GETGLOBAL R12 K57      ; R12 := gRegion
208 [-]: SELF      R12 R12 K58  ; R13 := R12; R12 := R12["0x3E2F6BF"]
209 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
210 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
211 [-]: TEST      R11 1        ; if R11 then PC := 224
212 [-]: JMP       224          ; PC := 224
213 [-]: GETGLOBAL R11 K20      ; R11 := string
214 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xDE44F664"]
215 [-]: MOVE      R12 R1       ; R12 := R1
216 [-]: LOADK     R13 K59      ; R13 := "Dojo"
217 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
218 [-]: TEST      R11 0        ; if not R11 then PC := 224
219 [-]: JMP       224          ; PC := 224
220 [-]: GETUPVAL  R11 U5       ; R11 := U5
221 [-]: CALL      R11 1 1      ; R11()
222 [-]: RETURN    R0 1         ; return 
223 [-]: JMP       289          ; PC := 289
224 [-]: GETGLOBAL R11 K20      ; R11 := string
225 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xDE44F664"]
226 [-]: MOVE      R12 R1       ; R12 := R1
227 [-]: LOADK     R13 K60      ; R13 := "StalkerHideout"
228 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
229 [-]: TEST      R11 0        ; if not R11 then PC := 289
230 [-]: JMP       289          ; PC := 289
231 [-]: LOADNIL   R11 R11      ; R11 := nil
232 [-]: GETGLOBAL R12 K20      ; R12 := string
233 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["0xDE44F664"]
234 [-]: MOVE      R13 R1       ; R13 := R1
235 [-]: GETUPVAL  R14 U2       ; R14 := U2
236 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["KEY_TAG"]
237 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
238 [-]: EQ        1 R12 K5     ; if R12 == nil then PC := 288
239 [-]: JMP       288          ; PC := 288
240 [-]: GETGLOBAL R13 K20      ; R13 := string
241 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["0x7B782033"]
242 [-]: MOVE      R14 R1       ; R14 := R1
243 [-]: LOADK     R15 K26      ; R15 := 1
244 [-]: SUB       R16 R12 K26  ; R16 := R12 - 1
245 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
246 [-]: GETGLOBAL R14 K27      ; R14 := 0x7C282057
247 [-]: MOVE      R15 R13      ; R15 := R13
248 [-]: CALL      R14 2 2      ; R14 := R14(R15)
249 [-]: MOVE      R11 R14      ; R11 := R14
250 [-]: GETGLOBAL R14 K9       ; R14 := 0x400E7765
251 [-]: MOVE      R15 R11      ; R15 := R11
252 [-]: CALL      R14 2 2      ; R14 := R14(R15)
253 [-]: TEST      R14 1        ; if R14 then PC := 288
254 [-]: JMP       288          ; PC := 288
255 [-]: SELF      R14 R11 K61  ; R15 := R11; R14 := R11["0xB8637349"]
256 [-]: CALL      R14 2 2      ; R14 := R14(R15)
257 [-]: GETGLOBAL R15 K9       ; R15 := 0x400E7765
258 [-]: GETTABLE  R16 R14 K62  ; R16 := R14["levelOverride"]
259 [-]: CALL      R15 2 2      ; R15 := R15(R16)
260 [-]: TEST      R15 1        ; if R15 then PC := 288
261 [-]: JMP       288          ; PC := 288
262 [-]: GETGLOBAL R15 K63      ; R15 := _G
263 [-]: SETTABLE  R15 K64 K65  ; R15["StalkerMode"] := "0x1"
264 [-]: GETGLOBAL R15 K66      ; R15 := gGameConfig
265 [-]: SELF      R15 R15 K67  ; R16 := R15; R15 := R15["0x92CE9D7D"]
266 [-]: GETTABLE  R17 R14 K62  ; R17 := R14["levelOverride"]
267 [-]: CALL      R15 3 1      ; R15(R16,R17)
268 [-]: GETGLOBAL R15 K57      ; R15 := gRegion
269 [-]: SELF      R15 R15 K68  ; R16 := R15; R15 := R15["0xD2075696"]
270 [-]: CALL      R15 2 2      ; R15 := R15(R16)
271 [-]: GETTABLE  R16 R14 K62  ; R16 := R14["levelOverride"]
272 [-]: SETTABLE  R15 K69 R16  ; R15["level"] := R16
273 [-]: GETTABLE  R16 R14 K70  ; R16 := R14["gameRules"]
274 [-]: SETTABLE  R15 K70 R16  ; R15["gameRules"] := R16
275 [-]: GETGLOBAL R16 K71      ; R16 := gGameData
276 [-]: SELF      R16 R16 K72  ; R17 := R16; R16 := R16["0x33ABF5D"]
277 [-]: MOVE      R18 R15      ; R18 := R15
278 [-]: MOVE      R19 R1       ; R19 := R1
279 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
280 [-]: GETGLOBAL R16 K71      ; R16 := gGameData
281 [-]: SELF      R16 R16 K73  ; R17 := R16; R16 := R16["0x19F7DE8"]
282 [-]: MOVE      R18 R1       ; R18 := R1
283 [-]: CALL      R16 3 1      ; R16(R17,R18)
284 [-]: GETGLOBAL R16 K74      ; R16 := Engine
285 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["0xC53FF352"]
286 [-]: MOVE      R17 R0       ; R17 := R0
287 [-]: CALL      R16 2 1      ; R16(R17)
288 [-]: RETURN    R0 1         ; return 
289 [-]: GETGLOBAL R16 K63      ; R16 := _G
290 [-]: GETTABLE  R16 R16 K64  ; R16 := R16["StalkerMode"]
291 [-]: TEST      R16 0        ; if not R16 then PC := 318
292 [-]: JMP       318          ; PC := 318
293 [-]: GETUPVAL  R16 U0       ; R16 := U0
294 [-]: GETTABLE  R16 R16 K0   ; R16 := R16["Node"]
295 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["radialSector"]
296 [-]: GETTABLE  R16 R16 K76  ; R16 := R16["nodeType"]
297 [-]: GETGLOBAL R17 K77      ; R17 := Lotus_Game
298 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["NT_CLAN"]
299 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 311
300 [-]: JMP       311          ; PC := 311
301 [-]: GETUPVAL  R16 U6       ; R16 := U6
302 [-]: MOVE      R17 R1       ; R17 := R1
303 [-]: GETUPVAL  R18 U2       ; R18 := U2
304 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["BADLAND_MISSION_TAG"]
305 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
306 [-]: MOVE      R18 R2       ; R18 := R2
307 [-]: MOVE      R19 R3       ; R19 := R3
308 [-]: MOVE      R20 R4       ; R20 := R4
309 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
310 [-]: JMP       317          ; PC := 317
311 [-]: GETUPVAL  R16 U6       ; R16 := U6
312 [-]: MOVE      R17 R1       ; R17 := R1
313 [-]: MOVE      R18 R2       ; R18 := R2
314 [-]: MOVE      R19 R3       ; R19 := R3
315 [-]: MOVE      R20 R4       ; R20 := R4
316 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
317 [-]: RETURN    R0 1         ; return 
318 [-]: GETGLOBAL R16 K9       ; R16 := 0x400E7765
319 [-]: MOVE      R17 R2       ; R17 := R2
320 [-]: CALL      R16 2 2      ; R16 := R16(R17)
321 [-]: TEST      R16 1        ; if R16 then PC := 326
322 [-]: JMP       326          ; PC := 326
323 [-]: GETUPVAL  R16 U7       ; R16 := U7
324 [-]: EQ        1 R2 R16     ; if R2 == R16 then PC := 327
325 [-]: JMP       327          ; PC := 327
326 [-]: MOVE      R16 R0       ; R16 := R0
327 [-]: MOVE      R16 R1       ; R16 := R1
328 [-]: TEST      R16 1        ; if R16 then PC := 615
329 [-]: JMP       615          ; PC := 615
330 [-]: GETUPVAL  R17 U0       ; R17 := U0
331 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
332 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
333 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["nodeType"]
334 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
335 [-]: GETTABLE  R18 R18 K80  ; R18 := R18["NT_MISSION"]
336 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 356
337 [-]: JMP       356          ; PC := 356
338 [-]: GETUPVAL  R17 U0       ; R17 := U0
339 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
340 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
341 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["nodeType"]
342 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
343 [-]: GETTABLE  R18 R18 K78  ; R18 := R18["NT_CLAN"]
344 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 615
345 [-]: JMP       615          ; PC := 615
346 [-]: GETGLOBAL R17 K3       ; R17 := _T
347 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedEliteAlertMissions"]
348 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
349 [-]: TEST      R17 1        ; if R17 then PC := 356
350 [-]: JMP       356          ; PC := 356
351 [-]: GETGLOBAL R17 K3       ; R17 := _T
352 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedNemesisMissions"]
353 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
354 [-]: TEST      R17 0        ; if not R17 then PC := 615
355 [-]: JMP       615          ; PC := 615
356 [-]: GETUPVAL  R17 U8       ; R17 := U8
357 [-]: GETUPVAL  R18 U0       ; R18 := U0
358 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
359 [-]: MOVE      R19 R1       ; R19 := R1
360 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
361 [-]: TEST      R17 0        ; if not R17 then PC := 615
362 [-]: JMP       615          ; PC := 615
363 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
364 [-]: GETUPVAL  R18 U0       ; R18 := U0
365 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
366 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
367 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
368 [-]: CALL      R17 2 2      ; R17 := R17(R18)
369 [-]: TEST      R17 0        ; if not R17 then PC := 472
370 [-]: JMP       472          ; PC := 472
371 [-]: GETGLOBAL R17 K3       ; R17 := _T
372 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedAlerts"]
373 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
374 [-]: TEST      R17 0        ; if not R17 then PC := 382
375 [-]: JMP       382          ; PC := 382
376 [-]: GETGLOBAL R17 K3       ; R17 := _T
377 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedAlerts"]
378 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
379 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mVisible"]
380 [-]: TEST      R17 1        ; if R17 then PC := 472
381 [-]: JMP       472          ; PC := 472
382 [-]: GETGLOBAL R17 K63      ; R17 := _G
383 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedGoalInfo"]
384 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
385 [-]: TEST      R17 1        ; if R17 then PC := 472
386 [-]: JMP       472          ; PC := 472
387 [-]: GETGLOBAL R17 K63      ; R17 := _G
388 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["MergedGoalNodes"]
389 [-]: TEST      R17 0        ; if not R17 then PC := 396
390 [-]: JMP       396          ; PC := 396
391 [-]: GETGLOBAL R17 K63      ; R17 := _G
392 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["MergedGoalNodes"]
393 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
394 [-]: TEST      R17 1        ; if R17 then PC := 472
395 [-]: JMP       472          ; PC := 472
396 [-]: GETGLOBAL R17 K3       ; R17 := _T
397 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSyndicateMissions"]
398 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
399 [-]: TEST      R17 0        ; if not R17 then PC := 407
400 [-]: JMP       407          ; PC := 407
401 [-]: GETGLOBAL R17 K3       ; R17 := _T
402 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSyndicateMissions"]
403 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
404 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mVisible"]
405 [-]: TEST      R17 1        ; if R17 then PC := 472
406 [-]: JMP       472          ; PC := 472
407 [-]: GETGLOBAL R17 K3       ; R17 := _T
408 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedSortieMissions"]
409 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
410 [-]: TEST      R17 0        ; if not R17 then PC := 418
411 [-]: JMP       418          ; PC := 418
412 [-]: GETGLOBAL R17 K3       ; R17 := _T
413 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedSortieMissions"]
414 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
415 [-]: GETTABLE  R17 R17 K89  ; R17 := R17["mShowInStarChart"]
416 [-]: TEST      R17 1        ; if R17 then PC := 472
417 [-]: JMP       472          ; PC := 472
418 [-]: GETGLOBAL R17 K3       ; R17 := _T
419 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedActiveMissions"]
420 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
421 [-]: TEST      R17 0        ; if not R17 then PC := 435
422 [-]: JMP       435          ; PC := 435
423 [-]: GETGLOBAL R17 K3       ; R17 := _T
424 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedActiveMissions"]
425 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
426 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mVisible"]
427 [-]: TEST      R17 0        ; if not R17 then PC := 435
428 [-]: JMP       435          ; PC := 435
429 [-]: GETGLOBAL R17 K3       ; R17 := _T
430 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedActiveMissions"]
431 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
432 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mUnlocked"]
433 [-]: TEST      R17 1        ; if R17 then PC := 472
434 [-]: JMP       472          ; PC := 472
435 [-]: GETGLOBAL R17 K3       ; R17 := _T
436 [-]: GETTABLE  R17 R17 K92  ; R17 := R17["CachedInvasionInfo"]
437 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
438 [-]: TEST      R17 1        ; if R17 then PC := 472
439 [-]: JMP       472          ; PC := 472
440 [-]: GETGLOBAL R17 K3       ; R17 := _T
441 [-]: GETTABLE  R17 R17 K93  ; R17 := R17["CachedSkullNodes"]
442 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
443 [-]: EQ        0 R17 K5     ; if R17 ~= nil then PC := 472
444 [-]: JMP       472          ; PC := 472
445 [-]: GETGLOBAL R17 K3       ; R17 := _T
446 [-]: GETTABLE  R17 R17 K94  ; R17 := R17["CachedGhostTowerMissions"]
447 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
448 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 456
449 [-]: JMP       456          ; PC := 456
450 [-]: GETGLOBAL R17 K3       ; R17 := _T
451 [-]: GETTABLE  R17 R17 K94  ; R17 := R17["CachedGhostTowerMissions"]
452 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
453 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mUnlocked"]
454 [-]: TEST      R17 1        ; if R17 then PC := 472
455 [-]: JMP       472          ; PC := 472
456 [-]: GETGLOBAL R17 K3       ; R17 := _T
457 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedEliteAlertMissions"]
458 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
459 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 467
460 [-]: JMP       467          ; PC := 467
461 [-]: GETGLOBAL R17 K3       ; R17 := _T
462 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedEliteAlertMissions"]
463 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
464 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mUnlocked"]
465 [-]: TEST      R17 1        ; if R17 then PC := 472
466 [-]: JMP       472          ; PC := 472
467 [-]: GETGLOBAL R17 K3       ; R17 := _T
468 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedNemesisMissions"]
469 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
470 [-]: TEST      R17 0        ; if not R17 then PC := 615
471 [-]: JMP       615          ; PC := 615
472 [-]: GETGLOBAL R17 K3       ; R17 := _T
473 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
474 [-]: TEST      R17 0        ; if not R17 then PC := 517
475 [-]: JMP       517          ; PC := 517
476 [-]: GETGLOBAL R17 K3       ; R17 := _T
477 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
478 [-]: GETUPVAL  R18 U2       ; R18 := U2
479 [-]: GETTABLE  R18 R18 K95  ; R18 := R18["ACTIVE_MISSION_TAG"]
480 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 488
481 [-]: JMP       488          ; PC := 488
482 [-]: GETGLOBAL R17 K3       ; R17 := _T
483 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
484 [-]: GETUPVAL  R17 U9       ; R17 := U9
485 [-]: MOVE      R18 R1       ; R18 := R1
486 [-]: CALL      R17 2 1      ; R17(R18)
487 [-]: JMP       515          ; PC := 515
488 [-]: GETGLOBAL R17 K3       ; R17 := _T
489 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
490 [-]: GETUPVAL  R18 U2       ; R18 := U2
491 [-]: GETTABLE  R18 R18 K96  ; R18 := R18["INVASION_ATTACKER_TAG"]
492 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 500
493 [-]: JMP       500          ; PC := 500
494 [-]: GETGLOBAL R17 K3       ; R17 := _T
495 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
496 [-]: GETUPVAL  R17 U10      ; R17 := U10
497 [-]: MOVE      R18 R1       ; R18 := R1
498 [-]: CALL      R17 2 1      ; R17(R18)
499 [-]: JMP       515          ; PC := 515
500 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
501 [-]: GETUPVAL  R18 U0       ; R18 := U0
502 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
503 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
504 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
505 [-]: CALL      R17 2 2      ; R17 := R17(R18)
506 [-]: GETGLOBAL R18 K3       ; R18 := _T
507 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["DesiredGoToNodeTag"]
508 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
509 [-]: GETGLOBAL R17 K3       ; R17 := _T
510 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
511 [-]: GETUPVAL  R17 U6       ; R17 := U6
512 [-]: MOVE      R18 R1       ; R18 := R1
513 [-]: LOADNIL   R19 R21      ; R19 := R20 := R21 := nil
514 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
515 [-]: RETURN    R0 1         ; return 
516 [-]: JMP       615          ; PC := 615
517 [-]: GETUPVAL  R17 U0       ; R17 := U0
518 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
519 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
520 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
521 [-]: GETTABLE  R17 R17 K97  ; R17 := R17["missionType"]
522 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
523 [-]: GETTABLE  R18 R18 K98  ; R18 := R18["MT_ARENA"]
524 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 565
525 [-]: JMP       565          ; PC := 565
526 [-]: GETUPVAL  R17 U0       ; R17 := U0
527 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
528 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
529 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
530 [-]: GETTABLE  R17 R17 K99  ; R17 := R17["faction"]
531 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
532 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["FC_CORPUS"]
533 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 565
534 [-]: JMP       565          ; PC := 565
535 [-]: GETUPVAL  R17 U0       ; R17 := U0
536 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
537 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
538 [-]: TEST      R17 0        ; if not R17 then PC := 565
539 [-]: JMP       565          ; PC := 565
540 [-]: GETGLOBAL R17 K3       ; R17 := _T
541 [-]: GETTABLE  R17 R17 K101 ; R17 := R17["DesiredGoToQuest"]
542 [-]: TEST      R17 0        ; if not R17 then PC := 549
543 [-]: JMP       549          ; PC := 549
544 [-]: GETGLOBAL R17 K3       ; R17 := _T
545 [-]: GETTABLE  R2 R17 K101  ; R2 := R17["DesiredGoToQuest"]
546 [-]: GETGLOBAL R17 K3       ; R17 := _T
547 [-]: SETTABLE  R17 K101 K5  ; R17["DesiredGoToQuest"] := nil
548 [-]: JMP       557          ; PC := 557
549 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
550 [-]: MOVE      R18 R2       ; R18 := R2
551 [-]: CALL      R17 2 2      ; R17 := R17(R18)
552 [-]: TEST      R17 1        ; if R17 then PC := 557
553 [-]: JMP       557          ; PC := 557
554 [-]: SELF      R17 R2 K24   ; R18 := R2; R17 := R2["0x1B252E3C"]
555 [-]: CALL      R17 2 2      ; R17 := R17(R18)
556 [-]: MOVE      R2 R17       ; R2 := R17
557 [-]: GETUPVAL  R17 U11      ; R17 := U11
558 [-]: MOVE      R18 R1       ; R18 := R1
559 [-]: MOVE      R19 R1       ; R19 := R1
560 [-]: MOVE      R20 R2       ; R20 := R2
561 [-]: MOVE      R21 R4       ; R21 := R4
562 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
563 [-]: RETURN    R0 1         ; return 
564 [-]: JMP       615          ; PC := 615
565 [-]: GETGLOBAL R17 K3       ; R17 := _T
566 [-]: GETTABLE  R17 R17 K101 ; R17 := R17["DesiredGoToQuest"]
567 [-]: TEST      R17 0        ; if not R17 then PC := 574
568 [-]: JMP       574          ; PC := 574
569 [-]: GETGLOBAL R17 K3       ; R17 := _T
570 [-]: GETTABLE  R2 R17 K101  ; R2 := R17["DesiredGoToQuest"]
571 [-]: GETGLOBAL R17 K3       ; R17 := _T
572 [-]: SETTABLE  R17 K101 K5  ; R17["DesiredGoToQuest"] := nil
573 [-]: JMP       615          ; PC := 615
574 [-]: GETUPVAL  R17 U0       ; R17 := U0
575 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
576 [-]: GETTABLE  R17 R17 K102 ; R17 := R17["isBlockaded"]
577 [-]: TEST      R17 0        ; if not R17 then PC := 593
578 [-]: JMP       593          ; PC := 593
579 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
580 [-]: GETUPVAL  R18 U0       ; R18 := U0
581 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
582 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
583 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
584 [-]: CALL      R17 2 2      ; R17 := R17(R18)
585 [-]: GETUPVAL  R18 U2       ; R18 := U2
586 [-]: GETTABLE  R18 R18 K103 ; R18 := R18["NEMESIS_MISSION_TAG"]
587 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
588 [-]: GETUPVAL  R17 U6       ; R17 := U6
589 [-]: MOVE      R18 R1       ; R18 := R1
590 [-]: CALL      R17 2 1      ; R17(R18)
591 [-]: RETURN    R0 1         ; return 
592 [-]: JMP       615          ; PC := 615
593 [-]: GETGLOBAL R17 K63      ; R17 := _G
594 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedGoalInfo"]
595 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
596 [-]: TEST      R17 0        ; if not R17 then PC := 607
597 [-]: JMP       607          ; PC := 607
598 [-]: GETGLOBAL R17 K3       ; R17 := _T
599 [-]: GETTABLE  R17 R17 K104 ; R17 := R17["LockedGoalMissionInfo"]
600 [-]: TEST      R17 0        ; if not R17 then PC := 615
601 [-]: JMP       615          ; PC := 615
602 [-]: GETGLOBAL R17 K3       ; R17 := _T
603 [-]: GETTABLE  R17 R17 K104 ; R17 := R17["LockedGoalMissionInfo"]
604 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
605 [-]: TEST      R17 0        ; if not R17 then PC := 615
606 [-]: JMP       615          ; PC := 615
607 [-]: GETUPVAL  R17 U12      ; R17 := U12
608 [-]: GETUPVAL  R18 U0       ; R18 := U0
609 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
610 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
611 [-]: MOVE      R19 R2       ; R19 := R2
612 [-]: MOVE      R20 R3       ; R20 := R3
613 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
614 [-]: RETURN    R0 1         ; return 
615 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
616 [-]: GETUPVAL  R18 U0       ; R18 := U0
617 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
618 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
619 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
620 [-]: CALL      R17 2 2      ; R17 := R17(R18)
621 [-]: TEST      R17 1        ; if R17 then PC := 631
622 [-]: JMP       631          ; PC := 631
623 [-]: GETUPVAL  R17 U0       ; R17 := U0
624 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
625 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
626 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["keyChain"]
627 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17["0x1B252E3C"]
628 [-]: CALL      R17 2 2      ; R17 := R17(R18)
629 [-]: MOVE      R2 R17       ; R2 := R17
630 [-]: JMP       824          ; PC := 824
631 [-]: TEST      R2 1         ; if R2 then PC := 824
632 [-]: JMP       824          ; PC := 824
633 [-]: GETGLOBAL R17 K3       ; R17 := _T
634 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedAlerts"]
635 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
636 [-]: TEST      R17 0        ; if not R17 then PC := 655
637 [-]: JMP       655          ; PC := 655
638 [-]: GETGLOBAL R17 K3       ; R17 := _T
639 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedAlerts"]
640 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
641 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mVisible"]
642 [-]: TEST      R17 0        ; if not R17 then PC := 655
643 [-]: JMP       655          ; PC := 655
644 [-]: GETGLOBAL R17 K3       ; R17 := _T
645 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedAlerts"]
646 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
647 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mUnlocked"]
648 [-]: TEST      R17 0        ; if not R17 then PC := 655
649 [-]: JMP       655          ; PC := 655
650 [-]: MOVE      R17 R1       ; R17 := R1
651 [-]: GETUPVAL  R18 U2       ; R18 := U2
652 [-]: GETTABLE  R18 R18 K105 ; R18 := R18["ALERT_TAG"]
653 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
654 [-]: JMP       824          ; PC := 824
655 [-]: GETGLOBAL R17 K63      ; R17 := _G
656 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedGoalInfo"]
657 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
658 [-]: TEST      R17 0        ; if not R17 then PC := 684
659 [-]: JMP       684          ; PC := 684
660 [-]: GETUPVAL  R17 U0       ; R17 := U0
661 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
662 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
663 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["nodeType"]
664 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
665 [-]: GETTABLE  R18 R18 K106 ; R18 := R18["NT_HUB"]
666 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 684
667 [-]: JMP       684          ; PC := 684
668 [-]: GETGLOBAL R17 K3       ; R17 := _T
669 [-]: GETTABLE  R17 R17 K92  ; R17 := R17["CachedInvasionInfo"]
670 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
671 [-]: TEST      R17 0        ; if not R17 then PC := 679
672 [-]: JMP       679          ; PC := 679
673 [-]: GETGLOBAL R17 K3       ; R17 := _T
674 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
675 [-]: GETUPVAL  R17 U10      ; R17 := U10
676 [-]: MOVE      R18 R1       ; R18 := R1
677 [-]: CALL      R17 2 1      ; R17(R18)
678 [-]: RETURN    R0 1         ; return 
679 [-]: MOVE      R17 R1       ; R17 := R1
680 [-]: GETUPVAL  R18 U2       ; R18 := U2
681 [-]: GETTABLE  R18 R18 K107 ; R18 := R18["EVENT_TAG"]
682 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
683 [-]: JMP       824          ; PC := 824
684 [-]: GETGLOBAL R17 K3       ; R17 := _T
685 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSyndicateMissions"]
686 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
687 [-]: TEST      R17 0        ; if not R17 then PC := 706
688 [-]: JMP       706          ; PC := 706
689 [-]: GETGLOBAL R17 K3       ; R17 := _T
690 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSyndicateMissions"]
691 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
692 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mVisible"]
693 [-]: TEST      R17 0        ; if not R17 then PC := 706
694 [-]: JMP       706          ; PC := 706
695 [-]: GETGLOBAL R17 K3       ; R17 := _T
696 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSyndicateMissions"]
697 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
698 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mUnlocked"]
699 [-]: TEST      R17 0        ; if not R17 then PC := 706
700 [-]: JMP       706          ; PC := 706
701 [-]: MOVE      R17 R1       ; R17 := R1
702 [-]: GETUPVAL  R18 U2       ; R18 := U2
703 [-]: GETTABLE  R18 R18 K108 ; R18 := R18["SYNDICATE_MISSION_TAG"]
704 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
705 [-]: JMP       824          ; PC := 824
706 [-]: GETGLOBAL R17 K3       ; R17 := _T
707 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedSortieMissions"]
708 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
709 [-]: TEST      R17 0        ; if not R17 then PC := 722
710 [-]: JMP       722          ; PC := 722
711 [-]: GETGLOBAL R17 K3       ; R17 := _T
712 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedSortieMissions"]
713 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
714 [-]: GETTABLE  R17 R17 K89  ; R17 := R17["mShowInStarChart"]
715 [-]: TEST      R17 0        ; if not R17 then PC := 722
716 [-]: JMP       722          ; PC := 722
717 [-]: MOVE      R17 R1       ; R17 := R1
718 [-]: GETUPVAL  R18 U2       ; R18 := U2
719 [-]: GETTABLE  R18 R18 K109 ; R18 := R18["SORTIE_MISSION_TAG"]
720 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
721 [-]: JMP       824          ; PC := 824
722 [-]: GETGLOBAL R17 K3       ; R17 := _T
723 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedActiveMissions"]
724 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
725 [-]: TEST      R17 0        ; if not R17 then PC := 744
726 [-]: JMP       744          ; PC := 744
727 [-]: GETGLOBAL R17 K3       ; R17 := _T
728 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedActiveMissions"]
729 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
730 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mVisible"]
731 [-]: TEST      R17 0        ; if not R17 then PC := 744
732 [-]: JMP       744          ; PC := 744
733 [-]: GETGLOBAL R17 K3       ; R17 := _T
734 [-]: GETTABLE  R17 R17 K90  ; R17 := R17["CachedActiveMissions"]
735 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
736 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mUnlocked"]
737 [-]: TEST      R17 0        ; if not R17 then PC := 744
738 [-]: JMP       744          ; PC := 744
739 [-]: GETUPVAL  R17 U9       ; R17 := U9
740 [-]: MOVE      R18 R1       ; R18 := R1
741 [-]: CALL      R17 2 1      ; R17(R18)
742 [-]: RETURN    R0 1         ; return 
743 [-]: JMP       824          ; PC := 824
744 [-]: GETGLOBAL R17 K3       ; R17 := _T
745 [-]: GETTABLE  R17 R17 K92  ; R17 := R17["CachedInvasionInfo"]
746 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
747 [-]: TEST      R17 0        ; if not R17 then PC := 754
748 [-]: JMP       754          ; PC := 754
749 [-]: GETUPVAL  R17 U10      ; R17 := U10
750 [-]: MOVE      R18 R1       ; R18 := R1
751 [-]: CALL      R17 2 1      ; R17(R18)
752 [-]: RETURN    R0 1         ; return 
753 [-]: JMP       824          ; PC := 824
754 [-]: GETGLOBAL R17 K3       ; R17 := _T
755 [-]: GETTABLE  R17 R17 K93  ; R17 := R17["CachedSkullNodes"]
756 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
757 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 764
758 [-]: JMP       764          ; PC := 764
759 [-]: GETUPVAL  R17 U13      ; R17 := U13
760 [-]: MOVE      R18 R1       ; R18 := R1
761 [-]: CALL      R17 2 1      ; R17(R18)
762 [-]: RETURN    R0 1         ; return 
763 [-]: JMP       824          ; PC := 824
764 [-]: GETUPVAL  R17 U0       ; R17 := U0
765 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
766 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
767 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["nodeType"]
768 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
769 [-]: GETTABLE  R18 R18 K78  ; R18 := R18["NT_CLAN"]
770 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 783
771 [-]: JMP       783          ; PC := 783
772 [-]: GETUPVAL  R17 U6       ; R17 := U6
773 [-]: MOVE      R18 R1       ; R18 := R1
774 [-]: GETUPVAL  R19 U2       ; R19 := U2
775 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["BADLAND_MISSION_TAG"]
776 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
777 [-]: LOADK     R19 K13      ; R19 := ""
778 [-]: LOADK     R20 K13      ; R20 := ""
779 [-]: LOADK     R21 K13      ; R21 := ""
780 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
781 [-]: RETURN    R0 1         ; return 
782 [-]: JMP       824          ; PC := 824
783 [-]: GETUPVAL  R17 U0       ; R17 := U0
784 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
785 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
786 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["nodeType"]
787 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
788 [-]: GETTABLE  R18 R18 K110 ; R18 := R18["NT_PVP"]
789 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 796
790 [-]: JMP       796          ; PC := 796
791 [-]: MOVE      R17 R1       ; R17 := R1
792 [-]: GETUPVAL  R18 U2       ; R18 := U2
793 [-]: GETTABLE  R18 R18 K111 ; R18 := R18["PVP_TAG"]
794 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
795 [-]: JMP       824          ; PC := 824
796 [-]: GETUPVAL  R17 U0       ; R17 := U0
797 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
798 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
799 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["nodeType"]
800 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
801 [-]: GETTABLE  R18 R18 K106 ; R18 := R18["NT_HUB"]
802 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 824
803 [-]: JMP       824          ; PC := 824
804 [-]: GETGLOBAL R17 K49      ; R17 := gMatchingService
805 [-]: SELF      R17 R17 K112 ; R18 := R17; R17 := R17["0xA99F3BEF"]
806 [-]: CALL      R17 2 2      ; R17 := R17(R18)
807 [-]: TEST      R17 0        ; if not R17 then PC := 818
808 [-]: JMP       818          ; PC := 818
809 [-]: GETUPVAL  R17 U6       ; R17 := U6
810 [-]: MOVE      R18 R1       ; R18 := R1
811 [-]: GETUPVAL  R19 U2       ; R19 := U2
812 [-]: GETTABLE  R19 R19 K113 ; R19 := R19["HUB_TAG"]
813 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
814 [-]: LOADNIL   R19 R20      ; R19 := R20 := nil
815 [-]: LOADK     R21 K114     ; R21 := 0.5
816 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
817 [-]: RETURN    R0 1         ; return 
818 [-]: GETUPVAL  R17 U14      ; R17 := U14
819 [-]: GETUPVAL  R18 U0       ; R18 := U0
820 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
821 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
822 [-]: CALL      R17 2 1      ; R17(R18)
823 [-]: RETURN    R0 1         ; return 
824 [-]: GETUPVAL  R17 U0       ; R17 := U0
825 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
826 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
827 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
828 [-]: GETTABLE  R17 R17 K97  ; R17 := R17["missionType"]
829 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
830 [-]: GETTABLE  R18 R18 K98  ; R18 := R18["MT_ARENA"]
831 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 854
832 [-]: JMP       854          ; PC := 854
833 [-]: GETUPVAL  R17 U0       ; R17 := U0
834 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
835 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
836 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
837 [-]: GETTABLE  R17 R17 K99  ; R17 := R17["faction"]
838 [-]: GETGLOBAL R18 K77      ; R18 := Lotus_Game
839 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["FC_CORPUS"]
840 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 854
841 [-]: JMP       854          ; PC := 854
842 [-]: GETUPVAL  R17 U0       ; R17 := U0
843 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
844 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
845 [-]: TEST      R17 0        ; if not R17 then PC := 854
846 [-]: JMP       854          ; PC := 854
847 [-]: GETUPVAL  R17 U11      ; R17 := U11
848 [-]: MOVE      R18 R1       ; R18 := R1
849 [-]: MOVE      R19 R1       ; R19 := R1
850 [-]: MOVE      R20 R2       ; R20 := R2
851 [-]: MOVE      R21 R4       ; R21 := R4
852 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
853 [-]: RETURN    R0 1         ; return 
854 [-]: GETUPVAL  R17 U0       ; R17 := U0
855 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
856 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
857 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
858 [-]: GETTABLE  R17 R17 K115 ; R17 := R17["soloMode"]
859 [-]: TEST      R17 0        ; if not R17 then PC := 926
860 [-]: JMP       926          ; PC := 926
861 [-]: GETGLOBAL R17 K49      ; R17 := gMatchingService
862 [-]: SELF      R17 R17 K116 ; R18 := R17; R17 := R17["0x35DDC67D"]
863 [-]: CALL      R17 2 2      ; R17 := R17(R18)
864 [-]: LT        0 K26 R17    ; if 1 >= R17 then PC := 902
865 [-]: JMP       902          ; PC := 902
866 [-]: GETUPVAL  R17 U15      ; R17 := U15
867 [-]: GETTABLE  R17 R17 K117 ; R17 := R17["0x8ECD61A2"]
868 [-]: GETGLOBAL R18 K44      ; R18 := 0xEC274B1A
869 [-]: MOVE      R19 R1       ; R19 := R1
870 [-]: CALL      R18 2 2      ; R18 := R18(R19)
871 [-]: MOVE      R19 R1       ; R19 := R1
872 [-]: LOADNIL   R20 R20      ; R20 := nil
873 [-]: MOVE      R21 R1       ; R21 := R1
874 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
875 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 882
876 [-]: JMP       882          ; PC := 882
877 [-]: GETUPVAL  R18 U15      ; R18 := U15
878 [-]: GETTABLE  R18 R18 K118 ; R18 := R18["0xDABD460F"]
879 [-]: MOVE      R19 R17      ; R19 := R17
880 [-]: CALL      R18 2 1      ; R18(R19)
881 [-]: JMP       925          ; PC := 925
882 [-]: GETGLOBAL R18 K9       ; R18 := 0x400E7765
883 [-]: GETUPVAL  R19 U16      ; R19 := U16
884 [-]: GETTABLE  R19 R19 K119 ; R19 := R19["SoloMission"]
885 [-]: CALL      R18 2 2      ; R18 := R18(R19)
886 [-]: TEST      R18 0        ; if not R18 then PC := 925
887 [-]: JMP       925          ; PC := 925
888 [-]: GETUPVAL  R18 U17      ; R18 := U17
889 [-]: GETUPVAL  R19 U0       ; R19 := U0
890 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
891 [-]: SETTABLE  R18 K0 R19   ; R18["Node"] := R19
892 [-]: GETUPVAL  R18 U17      ; R18 := U17
893 [-]: SETTABLE  R18 K120 R1  ; R18["SectorName"] := R1
894 [-]: GETUPVAL  R18 U16      ; R18 := U16
895 [-]: GETUPVAL  R19 U3       ; R19 := U3
896 [-]: GETTABLE  R19 R19 K121 ; R19 := R19["0x1C988750"]
897 [-]: LOADK     R20 K122     ; R20 := "/Lotus/Language/Menu/SoloModeRequired"
898 [-]: LOADK     R21 K123     ; R21 := "ConfirmSoloMission"
899 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
900 [-]: SETTABLE  R18 K119 R19 ; R18["SoloMission"] := R19
901 [-]: JMP       925          ; PC := 925
902 [-]: GETUPVAL  R18 U0       ; R18 := U0
903 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
904 [-]: TEST      R18 0        ; if not R18 then PC := 925
905 [-]: JMP       925          ; PC := 925
906 [-]: GETUPVAL  R18 U0       ; R18 := U0
907 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
908 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
909 [-]: TEST      R18 0        ; if not R18 then PC := 925
910 [-]: JMP       925          ; PC := 925
911 [-]: GETUPVAL  R18 U6       ; R18 := U6
912 [-]: MOVE      R19 R1       ; R19 := R1
913 [-]: MOVE      R20 R2       ; R20 := R2
914 [-]: MOVE      R21 R3       ; R21 := R3
915 [-]: MOVE      R22 R4       ; R22 := R4
916 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
917 [-]: TEST      R18 0        ; if not R18 then PC := 925
918 [-]: JMP       925          ; PC := 925
919 [-]: GETGLOBAL R18 K3       ; R18 := _T
920 [-]: GETTABLE  R18 R18 K10  ; R18 := R18["SquadOverlay"]
921 [-]: SELF      R18 R18 K11  ; R19 := R18; R18 := R18["0x458F27A9"]
922 [-]: LOADK     R20 K124     ; R20 := "NotifyForceLoadSoloMission"
923 [-]: LOADK     R21 K13      ; R21 := ""
924 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
925 [-]: RETURN    R0 1         ; return 
926 [-]: GETUPVAL  R18 U1       ; R18 := U1
927 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["Active"]
928 [-]: TEST      R18 0        ; if not R18 then PC := 934
929 [-]: JMP       934          ; PC := 934
930 [-]: GETUPVAL  R18 U1       ; R18 := U1
931 [-]: GETUPVAL  R19 U0       ; R19 := U0
932 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
933 [-]: SETTABLE  R18 K125 R19 ; R18["SelectionNode"] := R19
934 [-]: GETUPVAL  R18 U6       ; R18 := U6
935 [-]: MOVE      R19 R1       ; R19 := R1
936 [-]: MOVE      R20 R2       ; R20 := R2
937 [-]: MOVE      R21 R3       ; R21 := R3
938 [-]: MOVE      R22 R4       ; R22 := R4
939 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
940 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4932
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SETTABLE  R0 K1 R1     ; R0["InRailJackMode"] := R1
  5 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4936
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 1
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K4        ; R4 := 0
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4940
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R0 K2        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["WareframeChallenge"]
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
  8 [-]: GETGLOBAL R2 K2        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 46
 12 [-]: JMP       46           ; PC := 46
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 14 [-]: GETGLOBAL R2 K6        ; R2 := gMatchingService
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD5E03646"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 46
 19 [-]: JMP       46           ; PC := 46
 20 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 21 [-]: GETGLOBAL R2 K8        ; R2 := gClient
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 46
 24 [-]: JMP       46           ; PC := 46
 25 [-]: GETGLOBAL R1 K8        ; R1 := gClient
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xC6E8F98F"]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 1         ; if R1 then PC := 46
 29 [-]: JMP       46           ; PC := 46
 30 [-]: TEST      R0 1         ; if R0 then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R1 K6        ; R1 := gMatchingService
 33 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xD01F29AC"]
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: EQ        0 R1 K11     ; if R1 ~= 0 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: GETGLOBAL R1 K12       ; R1 := 0x93B1256B
 38 [-]: LOADK     R2 K13       ; R2 := "Hosting lobby from MapRedux.lua (InitializeMore)"
 39 [-]: CALL      R1 2 1       ; R1(R2)
 40 [-]: GETGLOBAL R1 K2        ; R1 := _T
 41 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SquadOverlay"]
 42 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x458F27A9"]
 43 [-]: LOADK     R3 K15       ; R3 := "HostLobby"
 44 [-]: LOADK     R4 K16       ; R4 := ""
 45 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 46 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 47 [-]: GETGLOBAL R2 K17       ; R2 := worldStateMovie
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 1         ; if R1 then PC := 82
 50 [-]: JMP       82           ; PC := 82
 51 [-]: TEST      R0 1         ; if R0 then PC := 82
 52 [-]: JMP       82           ; PC := 82
 53 [-]: GETUPVAL  R1 U0        ; R1 := U0
 54 [-]: GETGLOBAL R2 K19       ; R2 := gFlashMgr
 55 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x616DD092"]
 56 [-]: GETGLOBAL R4 K17       ; R4 := worldStateMovie
 57 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 58 [-]: SETTABLE  R1 K18 R2    ; R1["Movie"] := R2
 59 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 60 [-]: GETUPVAL  R2 U0        ; R2 := U0
 61 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Movie"]
 62 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 63 [-]: TEST      R1 0         ; if not R1 then PC := 71
 64 [-]: JMP       71           ; PC := 71
 65 [-]: GETUPVAL  R1 U0        ; R1 := U0
 66 [-]: GETGLOBAL R2 K19       ; R2 := gFlashMgr
 67 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x24FF386"]
 68 [-]: GETGLOBAL R4 K17       ; R4 := worldStateMovie
 69 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 70 [-]: SETTABLE  R1 K18 R2    ; R1["Movie"] := R2
 71 [-]: GETGLOBAL R1 K2        ; R1 := _T
 72 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["MAP_HideExtraUI"]
 73 [-]: TEST      R1 0         ; if not R1 then PC := 82
 74 [-]: JMP       82           ; PC := 82
 75 [-]: GETUPVAL  R1 U0        ; R1 := U0
 76 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["Movie"]
 77 [-]: SELF      R1 R1 K23    ; R2 := R1; R1 := R1["0x1C19D966"]
 78 [-]: LOADK     R3 K24       ; R3 := "_root"
 79 [-]: LOADK     R4 K25       ; R4 := "_visible"
 80 [-]: MOVE      R5 R0        ; R5 := R0
 81 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 82 [-]: GETUPVAL  R1 U1        ; R1 := U1
 83 [-]: GETTABLE  R1 R1 K26    ; R1 := R1["0x5B8EB241"]
 84 [-]: CALL      R1 1 2       ; R1 := R1()
 85 [-]: TEST      R1 1         ; if R1 then PC := 100
 86 [-]: JMP       100          ; PC := 100
 87 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 88 [-]: GETGLOBAL R2 K27       ; R2 := gGameData
 89 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 90 [-]: TEST      R1 1         ; if R1 then PC := 98
 91 [-]: JMP       98           ; PC := 98
 92 [-]: GETGLOBAL R1 K27       ; R1 := gGameData
 93 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1["0x17358D95"]
 94 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 95 [-]: SELF      R1 R1 K29    ; R2 := R1; R1 := R1["0xB3F0027"]
 96 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 97 [-]: JMP       100          ; PC := 100
 98 [-]: MOVE      R1 R0        ; R1 := R0
 99 [-]: MOVE      R1 R1        ; R1 := R1
100 [-]: TEST      R1 0         ; if not R1 then PC := 120
101 [-]: JMP       120          ; PC := 120
102 [-]: GETGLOBAL R2 K30       ; R2 := gPlayerProfileMgr
103 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2["0x21EF7B1A"]
104 [-]: LOADK     R4 K11       ; R4 := 0
105 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
106 [-]: SELF      R3 R2 K32    ; R4 := R2; R3 := R2["0x3EEB612E"]
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: SELF      R4 R3 K33    ; R5 := R3; R4 := R3["0xDEFFE28B"]
109 [-]: CALL      R4 2 2       ; R4 := R4(R5)
110 [-]: TESTSET   R1 R4 1      ; if R4 then PC := 114 else R1 := R4
111 [-]: JMP       114          ; PC := 114
112 [-]: GETUPVAL  R4 U2        ; R4 := U2
113 [-]: GETTABLE  R1 R4 K34    ; R1 := R4["Active"]
114 [-]: GETUPVAL  R4 U3        ; R4 := U3
115 [-]: GETGLOBAL R5 K36       ; R5 := mMovie
116 [-]: SELF      R5 R5 K37    ; R6 := R5; R5 := R5["0x5FF274BB"]
117 [-]: GETGLOBAL R7 K38       ; R7 := episodeStatusMovie
118 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
119 [-]: SETTABLE  R4 K35 R5    ; R4["EpisodeStatus"] := R5
120 [-]: GETGLOBAL R4 K2        ; R4 := _T
121 [-]: MOVE      R5 R1        ; R5 := R1
122 [-]: SETTABLE  R4 K39 R5    ; R4["ResourceDroneVisible"] := R5
123 [-]: GETUPVAL  R4 U3        ; R4 := U3
124 [-]: GETGLOBAL R5 K36       ; R5 := mMovie
125 [-]: SELF      R5 R5 K37    ; R6 := R5; R5 := R5["0x5FF274BB"]
126 [-]: GETGLOBAL R7 K41       ; R7 := resourceDroneMovie
127 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
128 [-]: SETTABLE  R4 K40 R5    ; R4["ResourceDrone"] := R5
129 [-]: GETUPVAL  R4 U3        ; R4 := U3
130 [-]: GETTABLE  R4 R4 K40    ; R4 := R4["ResourceDrone"]
131 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4["0x458F27A9"]
132 [-]: LOADK     R6 K42       ; R6 := "OnRegionZoomOut"
133 [-]: LOADK     R7 K16       ; R7 := ""
134 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
135 [-]: GETUPVAL  R4 U1        ; R4 := U1
136 [-]: GETTABLE  R4 R4 K43    ; R4 := R4["0xBB3AACF2"]
137 [-]: CALL      R4 1 2       ; R4 := R4()
138 [-]: MOVE      R4 R4        ; R4 := R4
139 [-]: GETUPVAL  R4 U4        ; R4 := U4
140 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4["0x871D2E8C"]
141 [-]: CALL      R4 2 2       ; R4 := R4(R5)
142 [-]: MOVE      R4 R5        ; R4 := R5
143 [-]: GETUPVAL  R4 U4        ; R4 := U4
144 [-]: SELF      R4 R4 K45    ; R5 := R4; R4 := R4["0x5B0E7439"]
145 [-]: CALL      R4 2 2       ; R4 := R4(R5)
146 [-]: MOVE      R4 R6        ; R4 := R6
147 [-]: GETUPVAL  R4 U4        ; R4 := U4
148 [-]: SELF      R4 R4 K46    ; R5 := R4; R4 := R4["0x7E6E6726"]
149 [-]: CALL      R4 2 2       ; R4 := R4(R5)
150 [-]: MOVE      R4 R7        ; R4 := R7
151 [-]: GETGLOBAL R4 K19       ; R4 := gFlashMgr
152 [-]: SELF      R4 R4 K47    ; R5 := R4; R4 := R4["0xC4E70543"]
153 [-]: CALL      R4 2 1       ; R4(R5)
154 [-]: GETUPVAL  R4 U8        ; R4 := U8
155 [-]: CALL      R4 1 1       ; R4()
156 [-]: GETUPVAL  R4 U9        ; R4 := U9
157 [-]: CALL      R4 1 1       ; R4()
158 [-]: GETUPVAL  R4 U10       ; R4 := U10
159 [-]: CALL      R4 1 1       ; R4()
160 [-]: GETUPVAL  R4 U11       ; R4 := U11
161 [-]: CALL      R4 1 1       ; R4()
162 [-]: GETUPVAL  R4 U12       ; R4 := U12
163 [-]: CALL      R4 1 1       ; R4()
164 [-]: GETUPVAL  R4 U13       ; R4 := U13
165 [-]: CALL      R4 1 1       ; R4()
166 [-]: GETUPVAL  R4 U14       ; R4 := U14
167 [-]: CALL      R4 1 1       ; R4()
168 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4991
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4995
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["cameraSpot"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["cameraSpot"]
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xEC183DDC"]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["pos"]
 13 [-]: CALL      R0 3 1       ; R0(R1,R2)
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["cameraSpot"]
 16 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x5097FD8C"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["rotation"]
 19 [-]: CALL      R0 3 1       ; R0(R1,R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5009
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
  4 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  5 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x221C9700
  9 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 10 [-]: RETURN    R0 0         ; return R0,...
 11 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x7F595CA7"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x458357BC
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6DA72501"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xCD4B74A5"]
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: GETGLOBAL R5 K3        ; R5 := 0x221C9700
 27 [-]: LOADK     R6 K8        ; R6 := 0
 28 [-]: LOADK     R7 K8        ; R7 := 0
 29 [-]: LOADK     R8 K9        ; R8 := 1
 30 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 31 [-]: LOADK     R6 K8        ; R6 := 0
 32 [-]: TAILCALL  R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 33 [-]: RETURN    R2 0         ; return R2,...
 34 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5019
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 51
  9 [-]: JMP       51           ; PC := 51
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: MOVE      R1 R1        ; R1 := R1
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xF81722A2"]
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: LOADK     R4 K3        ; R4 := 100
 18 [-]: LOADK     R5 K4        ; R5 := 0
 19 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 20 [-]: GETGLOBAL R3 K5        ; R3 := 0xECFDD17
 21 [-]: GETUPVAL  R4 U3        ; R4 := U3
 22 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 23 [-]: JMP       48           ; PC := 48
 24 [-]: GETGLOBAL R8 K1        ; R8 := 0x400E7765
 25 [-]: GETTABLE  R9 R7 K6     ; R9 := R7["joinBtn"]
 26 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 27 [-]: TEST      R8 1         ; if R8 then PC := 47
 28 [-]: JMP       47           ; PC := 47
 29 [-]: GETGLOBAL R8 K7        ; R8 := 0x52E17A90
 30 [-]: GETGLOBAL R9 K8        ; R9 := mMovie
 31 [-]: GETTABLE  R10 R7 K6    ; R10 := R7["joinBtn"]
 32 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["mClipName"]
 33 [-]: GETGLOBAL R11 K10      ; R11 := UISys
 34 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["FlashInstance_LINEAR"]
 35 [-]: NEWTABLE  R12 1 0      ; R12 := {}
 36 [-]: LOADK     R13 K12      ; R13 := "_alpha"
 37 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
 38 [-]: NEWTABLE  R13 1 0      ; R13 := {}
 39 [-]: MOVE      R14 R2       ; R14 := R2
 40 [-]: SETLIST   R13 1 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
 41 [-]: LOADK     R14 K13      ; R14 := 0.5
 42 [-]: LOADK     R15 K4       ; R15 := 0
 43 [-]: CLOSURE   R16 0        ; R16 := closure(Function #121.1)
 44 [-]: MOVE      R0 R7        ; R0 := R7
 45 [-]: MOVE      R0 R1        ; R0 := R1
 46 [-]: CALL      R8 9 1       ; R8(R9,R10,R11,R12,R13,R14,R15,R16)
 47 [-]: CLOSE     R6           ; SAVE R6,...
 48 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 24; R5 := R6 end
 49 [-]: JMP       24           ; PC := 24
 50 [-]: CLOSE     R1           ; SAVE R1,...
 51 [-]: RETURN    R0 1         ; return 


; Function #121.1:
;
; Name:            
; Defined at line: 5034
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["joinBtn"]
  3 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xE2A2E3AC"]
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5042
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7F595CA7"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x458357BC
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Region"]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: SETTABLE  R3 K4 K5     ; R3["Region"] := nil
 13 [-]: LOADK     R3 K6        ; R3 := 500
 14 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 15 [-]: GETGLOBAL R6 K0        ; R6 := 0x221C9700
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: GETGLOBAL R7 K0        ; R7 := 0x221C9700
 18 [-]: CALL      R7 1 2       ; R7 := R7()
 19 [-]: LOADK     R8 K7        ; R8 := 0
 20 [-]: LOADK     R9 K7        ; R9 := 0
 21 [-]: MOVE      R10 R0       ; R10 := R0
 22 [-]: GETGLOBAL R11 K0       ; R11 := 0x221C9700
 23 [-]: CALL      R11 1 2      ; R11 := R11()
 24 [-]: GETGLOBAL R12 K0       ; R12 := 0x221C9700
 25 [-]: CALL      R12 1 2      ; R12 := R12()
 26 [-]: LOADNIL   R13 R13      ; R13 := nil
 27 [-]: MOVE      R14 R0       ; R14 := R0
 28 [-]: LOADK     R15 K6       ; R15 := 500
 29 [-]: GETGLOBAL R16 K0       ; R16 := 0x221C9700
 30 [-]: CALL      R16 1 2      ; R16 := R16()
 31 [-]: GETGLOBAL R17 K8       ; R17 := 0x400E7765
 32 [-]: GETGLOBAL R18 K9       ; R18 := gBackgroundRegion
 33 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 34 [-]: TEST      R17 1        ; if R17 then PC := 169
 35 [-]: JMP       169          ; PC := 169
 36 [-]: GETGLOBAL R17 K10      ; R17 := _T
 37 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["MouseInWorldStateWindow"]
 38 [-]: TEST      R17 1        ; if R17 then PC := 169
 39 [-]: JMP       169          ; PC := 169
 40 [-]: GETGLOBAL R17 K10      ; R17 := _T
 41 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["MouseInChatArea"]
 42 [-]: TEST      R17 1        ; if R17 then PC := 169
 43 [-]: JMP       169          ; PC := 169
 44 [-]: GETGLOBAL R17 K9       ; R17 := gBackgroundRegion
 45 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0xF7C1BE25"]
 46 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 47 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17["0x8EEB099D"]
 48 [-]: MOVE      R19 R11      ; R19 := R11
 49 [-]: CALL      R17 3 1      ; R17(R18,R19)
 50 [-]: LOADK     R17 K15      ; R17 := 1
 51 [-]: GETUPVAL  R18 U1       ; R18 := U1
 52 [-]: LEN       R18 R18      ; R18 := # R18
 53 [-]: LOADK     R19 K15      ; R19 := 1
 54 [-]: FORPREP   R17 168      ; R17 -= R19; PC := 168
 55 [-]: GETUPVAL  R21 U1       ; R21 := U1
 56 [-]: GETTABLE  R5 R21 R20   ; R5 := R21[R20]
 57 [-]: GETUPVAL  R21 U2       ; R21 := U2
 58 [-]: GETTABLE  R13 R21 R20  ; R13 := R21[R20]
 59 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
 60 [-]: MOVE      R22 R13      ; R22 := R13
 61 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 62 [-]: TEST      R21 1        ; if R21 then PC := 168
 63 [-]: JMP       168          ; PC := 168
 64 [-]: GETUPVAL  R21 U3       ; R21 := U3
 65 [-]: GETTABLE  R21 R21 K16  ; R21 := R21["Active"]
 66 [-]: TEST      R21 0        ; if not R21 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: GETUPVAL  R21 U3       ; R21 := U3
 69 [-]: GETTABLE  R21 R21 K17  ; R21 := R21["Regions"]
 70 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
 71 [-]: TEST      R21 0        ; if not R21 then PC := 168
 72 [-]: JMP       168          ; PC := 168
 73 [-]: SELF      R21 R13 K14  ; R22 := R13; R21 := R13["0x8EEB099D"]
 74 [-]: MOVE      R23 R12      ; R23 := R12
 75 [-]: CALL      R21 3 1      ; R21(R22,R23)
 76 [-]: GETGLOBAL R21 K18      ; R21 := 0x518098BD
 77 [-]: MOVE      R22 R6       ; R22 := R6
 78 [-]: MOVE      R23 R12      ; R23 := R12
 79 [-]: MOVE      R24 R11      ; R24 := R11
 80 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
 81 [-]: GETUPVAL  R21 U4       ; R21 := U4
 82 [-]: GETTABLE  R9 R21 R20   ; R9 := R21[R20]
 83 [-]: GETUPVAL  R21 U5       ; R21 := U5
 84 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["IsVisible"]
 85 [-]: TEST      R21 0        ; if not R21 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: ADD       R9 R9 K20    ; R9 := R9 + 0.20000000298023
 88 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
 89 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21["0xECAA969E"]
 90 [-]: MOVE      R23 R7       ; R23 := R7
 91 [-]: MOVE      R24 R0       ; R24 := R0
 92 [-]: MOVE      R25 R1       ; R25 := R1
 93 [-]: MOVE      R26 R6       ; R26 := R6
 94 [-]: MOVE      R27 R9       ; R27 := R9
 95 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
 96 [-]: MOVE      R10 R21      ; R10 := R21
 97 [-]: TEST      R10 0        ; if not R10 then PC := 108
 98 [-]: JMP       108          ; PC := 108
 99 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
100 [-]: MOVE      R22 R7       ; R22 := R7
101 [-]: CALL      R21 2 2      ; R21 := R21(R22)
102 [-]: LT        0 R21 R3     ; if R21 >= R3 then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: GETUPVAL  R21 U6       ; R21 := U6
105 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
106 [-]: TEST      R21 0        ; if not R21 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: GETUPVAL  R21 U0       ; R21 := U0
109 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["RegionLabel"]
110 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 128
111 [-]: JMP       128          ; PC := 128
112 [-]: MOVE      R4 R7        ; R4 := R7
113 [-]: GETUPVAL  R21 U0       ; R21 := U0
114 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["RegionLabel"]
115 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 119
116 [-]: JMP       119          ; PC := 119
117 [-]: LOADK     R3 K7        ; R3 := 0
118 [-]: JMP       123          ; PC := 123
119 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
120 [-]: MOVE      R22 R7       ; R22 := R7
121 [-]: CALL      R21 2 2      ; R21 := R21(R22)
122 [-]: MOVE      R3 R21       ; R3 := R21
123 [-]: GETUPVAL  R21 U0       ; R21 := U0
124 [-]: GETUPVAL  R22 U1       ; R22 := U1
125 [-]: GETTABLE  R22 R22 R20  ; R22 := R22[R20]
126 [-]: SETTABLE  R21 K4 R22   ; R21["Region"] := R22
127 [-]: MOVE      R8 R20       ; R8 := R20
128 [-]: GETUPVAL  R21 U7       ; R21 := U7
129 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mTargetVal"]
130 [-]: GETUPVAL  R22 U8       ; R22 := U8
131 [-]: GETTABLE  R22 R22 K25  ; R22 := R22["ZOOM_OUT_THRESHOLD"]
132 [-]: LT        0 R22 R21    ; if R22 >= R21 then PC := 168
133 [-]: JMP       168          ; PC := 168
134 [-]: GETUPVAL  R21 U5       ; R21 := U5
135 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["IsVisible"]
136 [-]: TEST      R21 1        ; if R21 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: ADD       R9 R9 K20    ; R9 := R9 + 0.20000000298023
139 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
140 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21["0xECAA969E"]
141 [-]: MOVE      R23 R16      ; R23 := R16
142 [-]: MOVE      R24 R0       ; R24 := R0
143 [-]: GETUPVAL  R25 U9       ; R25 := U9
144 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["CAMERA_FOCUS_DIR"]
145 [-]: MOVE      R26 R6       ; R26 := R6
146 [-]: MOVE      R27 R9       ; R27 := R9
147 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
148 [-]: MOVE      R14 R21      ; R14 := R21
149 [-]: TEST      R14 0        ; if not R14 then PC := 168
150 [-]: JMP       168          ; PC := 168
151 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
152 [-]: MOVE      R22 R16      ; R22 := R16
153 [-]: CALL      R21 2 2      ; R21 := R21(R22)
154 [-]: LT        0 R21 R15    ; if R21 >= R15 then PC := 168
155 [-]: JMP       168          ; PC := 168
156 [-]: GETUPVAL  R21 U6       ; R21 := U6
157 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
158 [-]: TEST      R21 1        ; if R21 then PC := 168
159 [-]: JMP       168          ; PC := 168
160 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
161 [-]: MOVE      R22 R16      ; R22 := R16
162 [-]: CALL      R21 2 2      ; R21 := R21(R22)
163 [-]: MOVE      R15 R21      ; R15 := R21
164 [-]: GETUPVAL  R21 U10      ; R21 := U10
165 [-]: GETUPVAL  R22 U1       ; R22 := U1
166 [-]: GETTABLE  R22 R22 R20  ; R22 := R22[R20]
167 [-]: CALL      R21 2 1      ; R21(R22)
168 [-]: FORLOOP   R17 55       ; R17 += R19; if R17 <= R18 then begin PC := 55; R20 := R17 end
169 [-]: GETUPVAL  R21 U7       ; R21 := U7
170 [-]: GETTABLE  R21 R21 K27  ; R21 := R21["mCurVal"]
171 [-]: LT        0 K28 R21    ; if -2 >= R21 then PC := 175
172 [-]: JMP       175          ; PC := 175
173 [-]: GETUPVAL  R21 U0       ; R21 := U0
174 [-]: SETTABLE  R21 K4 K5    ; R21["Region"] := nil
175 [-]: GETUPVAL  R21 U0       ; R21 := U0
176 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
177 [-]: EQ        1 R2 R21     ; if R2 == R21 then PC := 332
178 [-]: JMP       332          ; PC := 332
179 [-]: GETUPVAL  R21 U0       ; R21 := U0
180 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
181 [-]: EQ        1 R21 K5     ; if R21 == nil then PC := 275
182 [-]: JMP       275          ; PC := 275
183 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
184 [-]: GETUPVAL  R22 U0       ; R22 := U0
185 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["Region"]
186 [-]: GETTABLE  R22 R22 K29  ; R22 := R22["instance"]
187 [-]: CALL      R21 2 2      ; R21 := R21(R22)
188 [-]: TEST      R21 1        ; if R21 then PC := 275
189 [-]: JMP       275          ; PC := 275
190 [-]: GETUPVAL  R21 U11      ; R21 := U11
191 [-]: TEST      R21 1        ; if R21 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETUPVAL  R21 U12      ; R21 := U12
194 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["0x25992394"]
195 [-]: GETGLOBAL R22 K31      ; R22 := rollOverRegionSound
196 [-]: CALL      R21 2 1      ; R21(R22)
197 [-]: GETUPVAL  R21 U4       ; R21 := U4
198 [-]: GETTABLE  R9 R21 R8    ; R9 := R21[R8]
199 [-]: GETUPVAL  R21 U13      ; R21 := U13
200 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
201 [-]: EQ        0 R21 K5     ; if R21 ~= nil then PC := 206
202 [-]: JMP       206          ; PC := 206
203 [-]: GETUPVAL  R21 U13      ; R21 := U13
204 [-]: NEWTABLE  R22 0 0      ; R22 := {}
205 [-]: SETTABLE  R21 R8 R22   ; R21[R8] := R22
206 [-]: EQ        1 R9 K5      ; if R9 == nil then PC := 275
207 [-]: JMP       275          ; PC := 275
208 [-]: GETUPVAL  R21 U13      ; R21 := U13
209 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
210 [-]: GETGLOBAL R22 K8       ; R22 := 0x400E7765
211 [-]: GETTABLE  R23 R21 K15  ; R23 := R21[1]
212 [-]: CALL      R22 2 2      ; R22 := R22(R23)
213 [-]: TEST      R22 0        ; if not R22 then PC := 227
214 [-]: JMP       227          ; PC := 227
215 [-]: GETGLOBAL R22 K9       ; R22 := gBackgroundRegion
216 [-]: SELF      R22 R22 K32  ; R23 := R22; R22 := R22["0xBDD34CC6"]
217 [-]: GETGLOBAL R24 K33      ; R24 := hoverRing
218 [-]: GETUPVAL  R25 U0       ; R25 := U0
219 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["Region"]
220 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["instance"]
221 [-]: SELF      R25 R25 K34  ; R26 := R25; R25 := R25["0x6DA72501"]
222 [-]: CALL      R25 2 2      ; R25 := R25(R26)
223 [-]: GETUPVAL  R26 U9       ; R26 := U9
224 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["RING_ROTATION"]
225 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
226 [-]: SETTABLE  R21 K15 R22  ; R21[1] := R22
227 [-]: GETGLOBAL R22 K8       ; R22 := 0x400E7765
228 [-]: GETTABLE  R23 R21 K36  ; R23 := R21[2]
229 [-]: CALL      R22 2 2      ; R22 := R22(R23)
230 [-]: TEST      R22 0        ; if not R22 then PC := 253
231 [-]: JMP       253          ; PC := 253
232 [-]: GETGLOBAL R22 K9       ; R22 := gBackgroundRegion
233 [-]: SELF      R22 R22 K32  ; R23 := R22; R22 := R22["0xBDD34CC6"]
234 [-]: GETGLOBAL R24 K33      ; R24 := hoverRing
235 [-]: GETUPVAL  R25 U0       ; R25 := U0
236 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["Region"]
237 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["instance"]
238 [-]: SELF      R25 R25 K34  ; R26 := R25; R25 := R25["0x6DA72501"]
239 [-]: CALL      R25 2 2      ; R25 := R25(R26)
240 [-]: GETUPVAL  R26 U9       ; R26 := U9
241 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["RING_ROTATION"]
242 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
243 [-]: SETTABLE  R21 K36 R22  ; R21[2] := R22
244 [-]: GETTABLE  R22 R21 K36  ; R22 := R21[2]
245 [-]: SELF      R22 R22 K37  ; R23 := R22; R22 := R22["0xA20F64C0"]
246 [-]: GETGLOBAL R24 K38      ; R24 := 0xB5A59043
247 [-]: LOADK     R25 K39      ; R25 := 255
248 [-]: LOADK     R26 K39      ; R26 := 255
249 [-]: LOADK     R27 K39      ; R27 := 255
250 [-]: LOADK     R28 K40      ; R28 := 150
251 [-]: CALL      R24 5 0      ; R24,... := R24(R25,R26,R27,R28)
252 [-]: CALL      R22 0 1      ; R22(R23,...)
253 [-]: GETTABLE  R22 R21 K15  ; R22 := R21[1]
254 [-]: GETTABLE  R23 R21 K36  ; R23 := R21[2]
255 [-]: CLOSURE   R24 0        ; R24 := closure(Function #122.1)
256 [-]: MOVE      R0 R22       ; R0 := R22
257 [-]: MOVE      R0 R9        ; R0 := R9
258 [-]: MOVE      R0 R23       ; R0 := R23
259 [-]: GETGLOBAL R25 K41      ; R25 := 0x52E17A90
260 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
261 [-]: GETUPVAL  R27 U14      ; R27 := U14
262 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
263 [-]: GETTABLE  R27 R27 K42  ; R27 := R27["clipName"]
264 [-]: GETGLOBAL R28 K43      ; R28 := UISys
265 [-]: GETTABLE  R28 R28 K44  ; R28 := R28["FlashInstance_EASE_OUT"]
266 [-]: NEWTABLE  R29 1 0      ; R29 := {}
267 [-]: MOVE      R30 R24      ; R30 := R24
268 [-]: SETLIST   R29 1 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
269 [-]: NEWTABLE  R30 1 0      ; R30 := {}
270 [-]: LOADK     R31 K15      ; R31 := 1
271 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
272 [-]: LOADK     R31 K45      ; R31 := 0.25
273 [-]: CALL      R25 7 1      ; R25(R26,R27,R28,R29,R30,R31)
274 [-]: CLOSE     R21          ; SAVE R21,...
275 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 332
276 [-]: JMP       332          ; PC := 332
277 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
278 [-]: GETTABLE  R22 R2 K29   ; R22 := R2["instance"]
279 [-]: CALL      R21 2 2      ; R21 := R21(R22)
280 [-]: TEST      R21 1        ; if R21 then PC := 332
281 [-]: JMP       332          ; PC := 332
282 [-]: LOADK     R21 K7       ; R21 := 0
283 [-]: LOADK     R22 K15      ; R22 := 1
284 [-]: GETUPVAL  R23 U1       ; R23 := U1
285 [-]: LEN       R23 R23      ; R23 := # R23
286 [-]: LOADK     R24 K15      ; R24 := 1
287 [-]: FORPREP   R22 294      ; R22 -= R24; PC := 294
288 [-]: GETUPVAL  R26 U1       ; R26 := U1
289 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
290 [-]: EQ        0 R26 R2     ; if R26 ~= R2 then PC := 294
291 [-]: JMP       294          ; PC := 294
292 [-]: MOVE      R21 R25      ; R21 := R25
293 [-]: JMP       295          ; PC := 295
294 [-]: FORLOOP   R22 288      ; R22 += R24; if R22 <= R23 then begin PC := 288; R25 := R22 end
295 [-]: GETUPVAL  R26 U4       ; R26 := U4
296 [-]: GETTABLE  R9 R26 R21   ; R9 := R26[R21]
297 [-]: EQ        1 R9 K5      ; if R9 == nil then PC := 332
298 [-]: JMP       332          ; PC := 332
299 [-]: GETGLOBAL R26 K8       ; R26 := 0x400E7765
300 [-]: GETTABLE  R27 R2 K29   ; R27 := R2["instance"]
301 [-]: CALL      R26 2 2      ; R26 := R26(R27)
302 [-]: TEST      R26 1        ; if R26 then PC := 332
303 [-]: JMP       332          ; PC := 332
304 [-]: GETUPVAL  R26 U13      ; R26 := U13
305 [-]: GETTABLE  R26 R26 R21  ; R26 := R26[R21]
306 [-]: GETTABLE  R27 R26 K15  ; R27 := R26[1]
307 [-]: GETTABLE  R28 R26 K36  ; R28 := R26[2]
308 [-]: CLOSURE   R29 1        ; R29 := closure(Function #122.2)
309 [-]: MOVE      R0 R27       ; R0 := R27
310 [-]: MOVE      R0 R9        ; R0 := R9
311 [-]: MOVE      R0 R28       ; R0 := R28
312 [-]: GETGLOBAL R30 K41      ; R30 := 0x52E17A90
313 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
314 [-]: GETUPVAL  R32 U14      ; R32 := U14
315 [-]: GETTABLE  R32 R32 R21  ; R32 := R32[R21]
316 [-]: GETTABLE  R32 R32 K42  ; R32 := R32["clipName"]
317 [-]: GETGLOBAL R33 K43      ; R33 := UISys
318 [-]: GETTABLE  R33 R33 K46  ; R33 := R33["FlashInstance_EASE_IN"]
319 [-]: NEWTABLE  R34 1 0      ; R34 := {}
320 [-]: MOVE      R35 R29      ; R35 := R29
321 [-]: SETLIST   R34 1 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
322 [-]: NEWTABLE  R35 1 0      ; R35 := {}
323 [-]: LOADK     R36 K15      ; R36 := 1
324 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
325 [-]: LOADK     R36 K47      ; R36 := 0.15000000596046
326 [-]: LOADK     R37 K7       ; R37 := 0
327 [-]: CLOSURE   R38 2        ; R38 := closure(Function #122.3)
328 [-]: MOVE      R0 R27       ; R0 := R27
329 [-]: MOVE      R0 R28       ; R0 := R28
330 [-]: CALL      R30 9 1      ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
331 [-]: CLOSE     R26          ; SAVE R26,...
332 [-]: RETURN    R4 2         ; return R4
333 [-]: RETURN    R0 1         ; return 


; Function #122.1:
;
; Name:            
; Defined at line: 5140
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K1        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x8B011038"]
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: ADD       R2 R2 K3     ; R2 := R2 + 0.15000000596046
 10 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 11 [-]: LOADK     R3 K4        ; R3 := 0.0099999997764826
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x9F133E77"]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETUPVAL  R3 U2        ; R3 := U2
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETGLOBAL R2 K1        ; R2 := math
 24 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x8B011038"]
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: ADD       R3 R3 K6     ; R3 := R3 + 0.34999999403954
 27 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 28 [-]: LOADK     R4 K4        ; R4 := 0.0099999997764826
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9F133E77"]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R2        ; R6 := R2
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #122.2:
;
; Name:            
; Defined at line: 5172
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SUB       R0 K0 R0     ; R0 := 1 - R0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R1 K2        ; R1 := math
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x8B011038"]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: ADD       R2 R2 K4     ; R2 := R2 + 0.15000000596046
 11 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 12 [-]: LOADK     R3 K5        ; R3 := 0.0099999997764826
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9F133E77"]
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: TEST      R2 1         ; if R2 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R2 K2        ; R2 := math
 25 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x8B011038"]
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: ADD       R3 R3 K7     ; R3 := R3 + 0.34999999403954
 28 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 29 [-]: LOADK     R4 K5        ; R4 := 0.0099999997764826
 30 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x9F133E77"]
 33 [-]: MOVE      R5 R2        ; R5 := R2
 34 [-]: MOVE      R6 R2        ; R6 := R2
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: RETURN    R0 1         ; return 


; Function #122.3:
;
; Name:            
; Defined at line: 5185
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: CALL      R0 3 1       ; R0(R1,R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5200
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  4 [-]: TEST      R1 1         ; if R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Locked"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R1 U3        ; R1 := U3
 16 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETUPVAL  R1 U4        ; R1 := U4
 20 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xC4E503B0"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETUPVAL  R2 U5        ; R2 := U5
 23 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: LT        0 K5 R1      ; if -1 >= R1 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETUPVAL  R2 U5        ; R2 := U5
 28 [-]: LE        0 R2 K5      ; if R2 > -1 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: LE        0 R1 K5      ; if R1 > -1 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R2 U5        ; R2 := U5
 34 [-]: LT        0 K5 R2      ; if -1 >= R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: MOVE      R1 R5        ; R1 := R5
 38 [-]: RETURN    R0 2         ; return R0
 39 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 5220
; #Upvalues:       39
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  90

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["EDIT_REGIONS"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 83
  5 [-]: JMP       83           ; PC := 83
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mMovingRegion"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 83
 11 [-]: JMP       83           ; PC := 83
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInitialWorldCursor"]
 16 [-]: SUB       R1 R0 R1     ; R1 := R0 - R1
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mInitialPosition"]
 19 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 20 [-]: SETTABLE  R2 K5 K6     ; R2["z"] := 0
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mMovingRegion"]
 23 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["instance"]
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEC183DDC"]
 25 [-]: MOVE      R5 R2        ; R5 := R2
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x2F74E23B"]
 29 [-]: GETUPVAL  R5 U2        ; R5 := U2
 30 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mMovingRegion"]
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: LOADNIL   R3 R3        ; R3 := nil
 34 [-]: GETGLOBAL R4 K10       ; R4 := 0x63B09107
 35 [-]: GETUPVAL  R5 U2        ; R5 := U2
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mChildNodes"]
 37 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 38 [-]: JMP       70           ; PC := 70
 39 [-]: GETUPVAL  R9 U5        ; R9 := U5
 40 [-]: GETTABLE  R10 R8 K12   ; R10 := R8["NodeIndex"]
 41 [-]: GETTABLE  R3 R9 R10    ; R3 := R9[R10]
 42 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["InitialPosition"]
 43 [-]: ADD       R2 R9 R1     ; R2 := R9 + R1
 44 [-]: SETTABLE  R3 K14 R2    ; R3["position"] := R2
 45 [-]: GETUPVAL  R9 U6        ; R9 := U6
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R3 K15 R9    ; R3["isSurfaceNode"] := R9
 49 [-]: GETUPVAL  R9 U4        ; R9 := U4
 50 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0xDD4FB1D0"]
 51 [-]: GETTABLE  R11 R3 K17   ; R11 := R3["radialSector"]
 52 [-]: MOVE      R12 R2       ; R12 := R2
 53 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 54 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 55 [-]: EQ        1 R9 K19     ; if R9 == nil then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 58 [-]: GETTABLE  R10 R3 K18   ; R10 := R3["deco"]
 59 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["mInstance"]
 60 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 61 [-]: TEST      R9 1         ; if R9 then PC := 70
 62 [-]: JMP       70           ; PC := 70
 63 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 64 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mInstance"]
 65 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0xEC183DDC"]
 66 [-]: GETTABLE  R11 R3 K18   ; R11 := R3["deco"]
 67 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["mOffset"]
 68 [-]: ADD       R11 R2 R11   ; R11 := R2 + R11
 69 [-]: CALL      R9 3 1       ; R9(R10,R11)
 70 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 39; R6 := R7 end
 71 [-]: JMP       39           ; PC := 39
 72 [-]: LOADK     R9 K22       ; R9 := 1
 73 [-]: GETUPVAL  R10 U7       ; R10 := U7
 74 [-]: LEN       R10 R10      ; R10 := # R10
 75 [-]: LOADK     R11 K22      ; R11 := 1
 76 [-]: FORPREP   R9 81        ; R9 -= R11; PC := 81
 77 [-]: GETUPVAL  R13 U8       ; R13 := U8
 78 [-]: GETUPVAL  R14 U7       ; R14 := U7
 79 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 80 [-]: CALL      R13 2 1      ; R13(R14)
 81 [-]: FORLOOP   R9 77        ; R9 += R11; if R9 <= R10 then begin PC := 77; R12 := R9 end
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: GETUPVAL  R13 U0       ; R13 := U0
 84 [-]: GETUPVAL  R14 U1       ; R14 := U1
 85 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["EDIT_NODES"]
 86 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 186
 87 [-]: JMP       186          ; PC := 186
 88 [-]: GETGLOBAL R13 K1       ; R13 := 0x400E7765
 89 [-]: GETUPVAL  R14 U2       ; R14 := U2
 90 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mMovingNode"]
 91 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 92 [-]: TEST      R13 1        ; if R13 then PC := 186
 93 [-]: JMP       186          ; PC := 186
 94 [-]: GETUPVAL  R13 U9       ; R13 := U9
 95 [-]: CALL      R13 1 2      ; R13 := R13()
 96 [-]: EQ        1 R13 K19    ; if R13 == nil then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: EQ        0 R13 K25    ; if R13 ~= "0x0" then PC := 131
 99 [-]: JMP       131          ; PC := 131
100 [-]: GETUPVAL  R14 U3       ; R14 := U3
101 [-]: CALL      R14 1 2      ; R14 := R14()
102 [-]: LOADNIL   R15 R15      ; R15 := nil
103 [-]: GETUPVAL  R16 U10      ; R16 := U10
104 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["mShiftDown"]
105 [-]: TEST      R16 0        ; if not R16 then PC := 124
106 [-]: JMP       124          ; PC := 124
107 [-]: GETUPVAL  R16 U11      ; R16 := U11
108 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["0x5328C56B"]
109 [-]: GETGLOBAL R17 K28      ; R17 := mMovie
110 [-]: CALL      R16 2 2      ; R16 := R16(R17)
111 [-]: GETTABLE  R17 R16 K29  ; R17 := R16["y"]
112 [-]: GETUPVAL  R18 U2       ; R18 := U2
113 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["mInitialMousePosition"]
114 [-]: GETTABLE  R18 R18 K29  ; R18 := R18["y"]
115 [-]: SUB       R17 R17 R18  ; R17 := R17 - R18
116 [-]: GETGLOBAL R18 K31      ; R18 := 0x221C9700
117 [-]: LOADK     R19 K6       ; R19 := 0
118 [-]: LOADK     R20 K6       ; R20 := 0
119 [-]: UNM       R21 R17      ; R21 := - R17
120 [-]: DIV       R21 R21 K32  ; R21 := R21 / 500
121 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
122 [-]: MOVE      R15 R18      ; R15 := R18
123 [-]: JMP       127          ; PC := 127
124 [-]: GETUPVAL  R18 U2       ; R18 := U2
125 [-]: GETTABLE  R18 R18 K3   ; R18 := R18["mInitialWorldCursor"]
126 [-]: SUB       R15 R14 R18  ; R15 := R14 - R18
127 [-]: GETUPVAL  R18 U2       ; R18 := U2
128 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mInitialPosition"]
129 [-]: ADD       R13 R18 R15  ; R13 := R18 + R15
130 [-]: JMP       137          ; PC := 137
131 [-]: GETGLOBAL R18 K33      ; R18 := gBackgroundRegion
132 [-]: SELF      R18 R18 K34  ; R19 := R18; R18 := R18["0xF7C1BE25"]
133 [-]: CALL      R18 2 2      ; R18 := R18(R19)
134 [-]: SELF      R18 R18 K35  ; R19 := R18; R18 := R18["0x6DA72501"]
135 [-]: CALL      R18 2 2      ; R18 := R18(R19)
136 [-]: ADD       R13 R13 R18  ; R13 := R13 + R18
137 [-]: GETUPVAL  R19 U2       ; R19 := U2
138 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
139 [-]: SETTABLE  R19 K14 R13  ; R19["position"] := R13
140 [-]: GETUPVAL  R19 U2       ; R19 := U2
141 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
142 [-]: GETUPVAL  R20 U6       ; R20 := U6
143 [-]: GETUPVAL  R21 U2       ; R21 := U2
144 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mMovingNode"]
145 [-]: CALL      R20 2 2      ; R20 := R20(R21)
146 [-]: SETTABLE  R19 K15 R20  ; R19["isSurfaceNode"] := R20
147 [-]: GETUPVAL  R19 U2       ; R19 := U2
148 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
149 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["radialSector"]
150 [-]: GETTABLE  R19 R19 K36  ; R19 := R19["region"]
151 [-]: LOADK     R20 K22      ; R20 := 1
152 [-]: GETUPVAL  R21 U7       ; R21 := U7
153 [-]: LEN       R21 R21      ; R21 := # R21
154 [-]: LOADK     R22 K22      ; R22 := 1
155 [-]: FORPREP   R20 174      ; R20 -= R22; PC := 174
156 [-]: GETUPVAL  R24 U7       ; R24 := U7
157 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
158 [-]: GETTABLE  R24 R24 K37  ; R24 := R24["NodeA"]
159 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
160 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["region"]
161 [-]: EQ        1 R24 R19    ; if R24 == R19 then PC := 170
162 [-]: JMP       170          ; PC := 170
163 [-]: GETUPVAL  R24 U7       ; R24 := U7
164 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
165 [-]: GETTABLE  R24 R24 K38  ; R24 := R24["NodeB"]
166 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
167 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["region"]
168 [-]: EQ        0 R24 R19    ; if R24 ~= R19 then PC := 174
169 [-]: JMP       174          ; PC := 174
170 [-]: GETUPVAL  R24 U8       ; R24 := U8
171 [-]: GETUPVAL  R25 U7       ; R25 := U7
172 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
173 [-]: CALL      R24 2 1      ; R24(R25)
174 [-]: FORLOOP   R20 156      ; R20 += R22; if R20 <= R21 then begin PC := 156; R23 := R20 end
175 [-]: GETUPVAL  R24 U4       ; R24 := U4
176 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0xDD4FB1D0"]
177 [-]: GETUPVAL  R26 U2       ; R26 := U2
178 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["mMovingNode"]
179 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["radialSector"]
180 [-]: MOVE      R27 R13      ; R27 := R13
181 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
182 [-]: GETUPVAL  R24 U12      ; R24 := U12
183 [-]: GETUPVAL  R25 U2       ; R25 := U2
184 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMovingNode"]
185 [-]: CALL      R24 2 1      ; R24(R25)
186 [-]: GETUPVAL  R24 U0       ; R24 := U0
187 [-]: GETUPVAL  R25 U1       ; R25 := U1
188 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["EDIT_SHORTCUT_CONTROL_POINTS"]
189 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 334
190 [-]: JMP       334          ; PC := 334
191 [-]: GETUPVAL  R24 U3       ; R24 := U3
192 [-]: CALL      R24 1 2      ; R24 := R24()
193 [-]: GETUPVAL  R25 U2       ; R25 := U2
194 [-]: GETTABLE  R25 R25 K40  ; R25 := R25["mControlPointHeld"]
195 [-]: TEST      R25 1        ; if R25 then PC := 275
196 [-]: JMP       275          ; PC := 275
197 [-]: GETUPVAL  R25 U2       ; R25 := U2
198 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["mMovingControlPoint"]
199 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
200 [-]: LOADK     R29 K22      ; R29 := 1
201 [-]: GETUPVAL  R30 U7       ; R30 := U7
202 [-]: LEN       R30 R30      ; R30 := # R30
203 [-]: LOADK     R31 K22      ; R31 := 1
204 [-]: FORPREP   R29 240      ; R29 -= R31; PC := 240
205 [-]: GETUPVAL  R33 U7       ; R33 := U7
206 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
207 [-]: GETTABLE  R33 R33 K42  ; R33 := R33["IsShortcut"]
208 [-]: TEST      R33 0        ; if not R33 then PC := 240
209 [-]: JMP       240          ; PC := 240
210 [-]: GETGLOBAL R33 K10      ; R33 := 0x63B09107
211 [-]: NEWTABLE  R34 2 0      ; R34 := {}
212 [-]: GETUPVAL  R35 U7       ; R35 := U7
213 [-]: GETTABLE  R35 R35 R32  ; R35 := R35[R32]
214 [-]: GETTABLE  R35 R35 K43  ; R35 := R35["controlPointA"]
215 [-]: GETUPVAL  R36 U7       ; R36 := U7
216 [-]: GETTABLE  R36 R36 R32  ; R36 := R36[R32]
217 [-]: GETTABLE  R36 R36 K44  ; R36 := R36["controlPointB"]
218 [-]: SETLIST   R34 2 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
219 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
220 [-]: JMP       238          ; PC := 238
221 [-]: GETGLOBAL R38 K31      ; R38 := 0x221C9700
222 [-]: GETTABLE  R39 R37 K14  ; R39 := R37["position"]
223 [-]: GETTABLE  R39 R39 K45  ; R39 := R39["x"]
224 [-]: GETTABLE  R40 R37 K14  ; R40 := R37["position"]
225 [-]: GETTABLE  R40 R40 K29  ; R40 := R40["y"]
226 [-]: LOADK     R41 K6       ; R41 := 0
227 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
228 [-]: MOVE      R26 R38      ; R26 := R38
229 [-]: GETGLOBAL R38 K46      ; R38 := 0x218C5C62
230 [-]: SUB       R39 R26 R24  ; R39 := R26 - R24
231 [-]: CALL      R38 2 2      ; R38 := R38(R39)
232 [-]: LT        0 R38 K47    ; if R38 >= 0.10000000149012 then PC := 238
233 [-]: JMP       238          ; PC := 238
234 [-]: MOVE      R27 R37      ; R27 := R37
235 [-]: GETUPVAL  R38 U7       ; R38 := U7
236 [-]: GETTABLE  R28 R38 R32  ; R28 := R38[R32]
237 [-]: JMP       240          ; PC := 240
238 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 221; R35 := R36 end
239 [-]: JMP       221          ; PC := 221
240 [-]: FORLOOP   R29 205      ; R29 += R31; if R29 <= R30 then begin PC := 205; R32 := R29 end
241 [-]: EQ        1 R25 R27    ; if R25 == R27 then PC := 275
242 [-]: JMP       275          ; PC := 275
243 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
244 [-]: MOVE      R39 R25      ; R39 := R25
245 [-]: CALL      R38 2 2      ; R38 := R38(R39)
246 [-]: TEST      R38 1        ; if R38 then PC := 257
247 [-]: JMP       257          ; PC := 257
248 [-]: GETTABLE  R38 R25 K48  ; R38 := R25["ringInstance"]
249 [-]: SELF      R38 R38 K49  ; R39 := R38; R38 := R38["0xA20F64C0"]
250 [-]: GETGLOBAL R40 K50      ; R40 := 0xB5A59043
251 [-]: LOADK     R41 K6       ; R41 := 0
252 [-]: LOADK     R42 K51      ; R42 := 255
253 [-]: LOADK     R43 K6       ; R43 := 0
254 [-]: LOADK     R44 K51      ; R44 := 255
255 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
256 [-]: CALL      R38 0 1      ; R38(R39,...)
257 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
258 [-]: MOVE      R39 R27      ; R39 := R27
259 [-]: CALL      R38 2 2      ; R38 := R38(R39)
260 [-]: TEST      R38 1        ; if R38 then PC := 271
261 [-]: JMP       271          ; PC := 271
262 [-]: GETTABLE  R38 R27 K48  ; R38 := R27["ringInstance"]
263 [-]: SELF      R38 R38 K49  ; R39 := R38; R38 := R38["0xA20F64C0"]
264 [-]: GETGLOBAL R40 K50      ; R40 := 0xB5A59043
265 [-]: LOADK     R41 K6       ; R41 := 0
266 [-]: LOADK     R42 K6       ; R42 := 0
267 [-]: LOADK     R43 K51      ; R43 := 255
268 [-]: LOADK     R44 K51      ; R44 := 255
269 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
270 [-]: CALL      R38 0 1      ; R38(R39,...)
271 [-]: GETUPVAL  R38 U2       ; R38 := U2
272 [-]: SETTABLE  R38 K41 R27  ; R38["mMovingControlPoint"] := R27
273 [-]: GETUPVAL  R38 U2       ; R38 := U2
274 [-]: SETTABLE  R38 K52 R28  ; R38["mEditingEdge"] := R28
275 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
276 [-]: GETUPVAL  R39 U2       ; R39 := U2
277 [-]: GETTABLE  R39 R39 K41  ; R39 := R39["mMovingControlPoint"]
278 [-]: CALL      R38 2 2      ; R38 := R38(R39)
279 [-]: TEST      R38 1        ; if R38 then PC := 334
280 [-]: JMP       334          ; PC := 334
281 [-]: GETUPVAL  R38 U2       ; R38 := U2
282 [-]: GETTABLE  R38 R38 K40  ; R38 := R38["mControlPointHeld"]
283 [-]: TEST      R38 0        ; if not R38 then PC := 334
284 [-]: JMP       334          ; PC := 334
285 [-]: GETUPVAL  R38 U2       ; R38 := U2
286 [-]: GETTABLE  R38 R38 K41  ; R38 := R38["mMovingControlPoint"]
287 [-]: GETTABLE  R38 R38 K14  ; R38 := R38["position"]
288 [-]: GETTABLE  R38 R38 K5   ; R38 := R38["z"]
289 [-]: GETUPVAL  R39 U2       ; R39 := U2
290 [-]: GETTABLE  R39 R39 K3   ; R39 := R39["mInitialWorldCursor"]
291 [-]: SUB       R39 R24 R39  ; R39 := R24 - R39
292 [-]: GETUPVAL  R40 U2       ; R40 := U2
293 [-]: GETTABLE  R40 R40 K4   ; R40 := R40["mInitialPosition"]
294 [-]: ADD       R40 R40 R39  ; R40 := R40 + R39
295 [-]: SETTABLE  R40 K5 R38   ; R40["z"] := R38
296 [-]: GETUPVAL  R41 U2       ; R41 := U2
297 [-]: GETTABLE  R41 R41 K41  ; R41 := R41["mMovingControlPoint"]
298 [-]: SETTABLE  R41 K14 R40  ; R41["position"] := R40
299 [-]: GETUPVAL  R41 U13      ; R41 := U13
300 [-]: GETUPVAL  R42 U2       ; R42 := U2
301 [-]: GETTABLE  R42 R42 K52  ; R42 := R42["mEditingEdge"]
302 [-]: CALL      R41 2 2      ; R41 := R41(R42)
303 [-]: GETUPVAL  R42 U2       ; R42 := U2
304 [-]: GETTABLE  R42 R42 K52  ; R42 := R42["mEditingEdge"]
305 [-]: GETTABLE  R42 R42 K53  ; R42 := R42["Instance"]
306 [-]: SELF      R42 R42 K54  ; R43 := R42; R42 := R42["0x5BD03F6B"]
307 [-]: MOVE      R44 R41      ; R44 := R41
308 [-]: CALL      R42 3 1      ; R42(R43,R44)
309 [-]: GETUPVAL  R42 U2       ; R42 := U2
310 [-]: GETTABLE  R42 R42 K41  ; R42 := R42["mMovingControlPoint"]
311 [-]: GETTABLE  R42 R42 K48  ; R42 := R42["ringInstance"]
312 [-]: SELF      R42 R42 K8   ; R43 := R42; R42 := R42["0xEC183DDC"]
313 [-]: MOVE      R44 R40      ; R44 := R40
314 [-]: CALL      R42 3 1      ; R42(R43,R44)
315 [-]: GETUPVAL  R42 U4       ; R42 := U4
316 [-]: SELF      R42 R42 K55  ; R43 := R42; R42 := R42["0x3D2B1A67"]
317 [-]: GETUPVAL  R44 U2       ; R44 := U2
318 [-]: GETTABLE  R44 R44 K52  ; R44 := R44["mEditingEdge"]
319 [-]: GETTABLE  R44 R44 K37  ; R44 := R44["NodeA"]
320 [-]: GETTABLE  R44 R44 K17  ; R44 := R44["radialSector"]
321 [-]: GETUPVAL  R45 U2       ; R45 := U2
322 [-]: GETTABLE  R45 R45 K52  ; R45 := R45["mEditingEdge"]
323 [-]: GETTABLE  R45 R45 K38  ; R45 := R45["NodeB"]
324 [-]: GETTABLE  R45 R45 K17  ; R45 := R45["radialSector"]
325 [-]: GETUPVAL  R46 U2       ; R46 := U2
326 [-]: GETTABLE  R46 R46 K52  ; R46 := R46["mEditingEdge"]
327 [-]: GETTABLE  R46 R46 K43  ; R46 := R46["controlPointA"]
328 [-]: GETTABLE  R46 R46 K14  ; R46 := R46["position"]
329 [-]: GETUPVAL  R47 U2       ; R47 := U2
330 [-]: GETTABLE  R47 R47 K52  ; R47 := R47["mEditingEdge"]
331 [-]: GETTABLE  R47 R47 K44  ; R47 := R47["controlPointB"]
332 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
333 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
334 [-]: GETUPVAL  R42 U0       ; R42 := U0
335 [-]: GETUPVAL  R43 U1       ; R43 := U1
336 [-]: GETTABLE  R43 R43 K56  ; R43 := R43["EDIT_NODE_DECOS"]
337 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 548
338 [-]: JMP       548          ; PC := 548
339 [-]: GETGLOBAL R42 K1       ; R42 := 0x400E7765
340 [-]: GETUPVAL  R43 U2       ; R43 := U2
341 [-]: GETTABLE  R43 R43 K24  ; R43 := R43["mMovingNode"]
342 [-]: CALL      R42 2 2      ; R42 := R42(R43)
343 [-]: TEST      R42 1        ; if R42 then PC := 548
344 [-]: JMP       548          ; PC := 548
345 [-]: GETUPVAL  R42 U2       ; R42 := U2
346 [-]: GETTABLE  R42 R42 K57  ; R42 := R42["mEditingOffset"]
347 [-]: TEST      R42 0        ; if not R42 then PC := 379
348 [-]: JMP       379          ; PC := 379
349 [-]: GETUPVAL  R42 U3       ; R42 := U3
350 [-]: CALL      R42 1 2      ; R42 := R42()
351 [-]: GETUPVAL  R43 U2       ; R43 := U2
352 [-]: GETTABLE  R43 R43 K3   ; R43 := R43["mInitialWorldCursor"]
353 [-]: SUB       R43 R42 R43  ; R43 := R42 - R43
354 [-]: GETUPVAL  R44 U2       ; R44 := U2
355 [-]: GETTABLE  R44 R44 K4   ; R44 := R44["mInitialPosition"]
356 [-]: ADD       R44 R44 R43  ; R44 := R44 + R43
357 [-]: GETUPVAL  R45 U2       ; R45 := U2
358 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
359 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
360 [-]: SETTABLE  R45 K21 R44  ; R45["mOffset"] := R44
361 [-]: GETUPVAL  R45 U2       ; R45 := U2
362 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
363 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
364 [-]: GETTABLE  R45 R45 K20  ; R45 := R45["mInstance"]
365 [-]: SELF      R45 R45 K8   ; R46 := R45; R45 := R45["0xEC183DDC"]
366 [-]: GETUPVAL  R47 U2       ; R47 := U2
367 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
368 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
369 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
370 [-]: CALL      R45 3 1      ; R45(R46,R47)
371 [-]: GETUPVAL  R45 U4       ; R45 := U4
372 [-]: SELF      R45 R45 K58  ; R46 := R45; R45 := R45["0xEDBA7E36"]
373 [-]: GETUPVAL  R47 U2       ; R47 := U2
374 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
375 [-]: GETTABLE  R47 R47 K17  ; R47 := R47["radialSector"]
376 [-]: MOVE      R48 R44      ; R48 := R44
377 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
378 [-]: JMP       544          ; PC := 544
379 [-]: GETUPVAL  R45 U2       ; R45 := U2
380 [-]: GETTABLE  R45 R45 K59  ; R45 := R45["mEditingRotation"]
381 [-]: TEST      R45 0        ; if not R45 then PC := 470
382 [-]: JMP       470          ; PC := 470
383 [-]: GETUPVAL  R45 U11      ; R45 := U11
384 [-]: GETTABLE  R45 R45 K27  ; R45 := R45["0x5328C56B"]
385 [-]: GETGLOBAL R46 K28      ; R46 := mMovie
386 [-]: CALL      R45 2 2      ; R45 := R45(R46)
387 [-]: GETTABLE  R46 R45 K45  ; R46 := R45["x"]
388 [-]: GETUPVAL  R47 U2       ; R47 := U2
389 [-]: GETTABLE  R47 R47 K30  ; R47 := R47["mInitialMousePosition"]
390 [-]: GETTABLE  R47 R47 K45  ; R47 := R47["x"]
391 [-]: SUB       R46 R46 R47  ; R46 := R46 - R47
392 [-]: GETTABLE  R47 R45 K29  ; R47 := R45["y"]
393 [-]: GETUPVAL  R48 U2       ; R48 := U2
394 [-]: GETTABLE  R48 R48 K30  ; R48 := R48["mInitialMousePosition"]
395 [-]: GETTABLE  R48 R48 K29  ; R48 := R48["y"]
396 [-]: SUB       R47 R47 R48  ; R47 := R47 - R48
397 [-]: LOADNIL   R48 R48      ; R48 := nil
398 [-]: GETUPVAL  R49 U2       ; R49 := U2
399 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mRotationAxis"]
400 [-]: EQ        0 R49 K61    ; if R49 ~= "heading" then PC := 416
401 [-]: JMP       416          ; PC := 416
402 [-]: GETGLOBAL R49 K62      ; R49 := 0x1E4F6281
403 [-]: GETUPVAL  R50 U2       ; R50 := U2
404 [-]: GETTABLE  R50 R50 K63  ; R50 := R50["mInitialRotation"]
405 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["heading"]
406 [-]: ADD       R50 R50 R46  ; R50 := R50 + R46
407 [-]: GETUPVAL  R51 U2       ; R51 := U2
408 [-]: GETTABLE  R51 R51 K63  ; R51 := R51["mInitialRotation"]
409 [-]: GETTABLE  R51 R51 K64  ; R51 := R51["pitch"]
410 [-]: GETUPVAL  R52 U2       ; R52 := U2
411 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["mInitialRotation"]
412 [-]: GETTABLE  R52 R52 K65  ; R52 := R52["bank"]
413 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
414 [-]: MOVE      R48 R49      ; R48 := R49
415 [-]: JMP       451          ; PC := 451
416 [-]: GETUPVAL  R49 U2       ; R49 := U2
417 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mRotationAxis"]
418 [-]: EQ        0 R49 K64    ; if R49 ~= "pitch" then PC := 434
419 [-]: JMP       434          ; PC := 434
420 [-]: GETGLOBAL R49 K62      ; R49 := 0x1E4F6281
421 [-]: GETUPVAL  R50 U2       ; R50 := U2
422 [-]: GETTABLE  R50 R50 K63  ; R50 := R50["mInitialRotation"]
423 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["heading"]
424 [-]: GETUPVAL  R51 U2       ; R51 := U2
425 [-]: GETTABLE  R51 R51 K63  ; R51 := R51["mInitialRotation"]
426 [-]: GETTABLE  R51 R51 K64  ; R51 := R51["pitch"]
427 [-]: ADD       R51 R51 R47  ; R51 := R51 + R47
428 [-]: GETUPVAL  R52 U2       ; R52 := U2
429 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["mInitialRotation"]
430 [-]: GETTABLE  R52 R52 K65  ; R52 := R52["bank"]
431 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
432 [-]: MOVE      R48 R49      ; R48 := R49
433 [-]: JMP       451          ; PC := 451
434 [-]: GETUPVAL  R49 U2       ; R49 := U2
435 [-]: GETTABLE  R49 R49 K60  ; R49 := R49["mRotationAxis"]
436 [-]: EQ        0 R49 K65    ; if R49 ~= "bank" then PC := 451
437 [-]: JMP       451          ; PC := 451
438 [-]: GETGLOBAL R49 K62      ; R49 := 0x1E4F6281
439 [-]: GETUPVAL  R50 U2       ; R50 := U2
440 [-]: GETTABLE  R50 R50 K63  ; R50 := R50["mInitialRotation"]
441 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["heading"]
442 [-]: GETUPVAL  R51 U2       ; R51 := U2
443 [-]: GETTABLE  R51 R51 K63  ; R51 := R51["mInitialRotation"]
444 [-]: GETTABLE  R51 R51 K64  ; R51 := R51["pitch"]
445 [-]: GETUPVAL  R52 U2       ; R52 := U2
446 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["mInitialRotation"]
447 [-]: GETTABLE  R52 R52 K65  ; R52 := R52["bank"]
448 [-]: ADD       R52 R52 R46  ; R52 := R52 + R46
449 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
450 [-]: MOVE      R48 R49      ; R48 := R49
451 [-]: GETUPVAL  R49 U2       ; R49 := U2
452 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
453 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
454 [-]: SETTABLE  R49 K66 R48  ; R49["mRotation"] := R48
455 [-]: GETUPVAL  R49 U2       ; R49 := U2
456 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
457 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
458 [-]: GETTABLE  R49 R49 K20  ; R49 := R49["mInstance"]
459 [-]: SELF      R49 R49 K67  ; R50 := R49; R49 := R49["0x5097FD8C"]
460 [-]: MOVE      R51 R48      ; R51 := R48
461 [-]: CALL      R49 3 1      ; R49(R50,R51)
462 [-]: GETUPVAL  R49 U4       ; R49 := U4
463 [-]: SELF      R49 R49 K68  ; R50 := R49; R49 := R49["0xCDECE0C5"]
464 [-]: GETUPVAL  R51 U2       ; R51 := U2
465 [-]: GETTABLE  R51 R51 K24  ; R51 := R51["mMovingNode"]
466 [-]: GETTABLE  R51 R51 K17  ; R51 := R51["radialSector"]
467 [-]: MOVE      R52 R48      ; R52 := R48
468 [-]: CALL      R49 4 1      ; R49(R50,R51,R52)
469 [-]: JMP       544          ; PC := 544
470 [-]: GETUPVAL  R49 U2       ; R49 := U2
471 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["mEditingScale"]
472 [-]: TEST      R49 0        ; if not R49 then PC := 544
473 [-]: JMP       544          ; PC := 544
474 [-]: GETUPVAL  R49 U11      ; R49 := U11
475 [-]: GETTABLE  R49 R49 K27  ; R49 := R49["0x5328C56B"]
476 [-]: GETGLOBAL R50 K28      ; R50 := mMovie
477 [-]: CALL      R49 2 2      ; R49 := R49(R50)
478 [-]: GETGLOBAL R50 K70      ; R50 := 0xB09F286F
479 [-]: MOVE      R51 R49      ; R51 := R49
480 [-]: GETUPVAL  R52 U2       ; R52 := U2
481 [-]: GETTABLE  R52 R52 K30  ; R52 := R52["mInitialMousePosition"]
482 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
483 [-]: GETTABLE  R51 R49 K29  ; R51 := R49["y"]
484 [-]: GETUPVAL  R52 U2       ; R52 := U2
485 [-]: GETTABLE  R52 R52 K30  ; R52 := R52["mInitialMousePosition"]
486 [-]: GETTABLE  R52 R52 K29  ; R52 := R52["y"]
487 [-]: LT        1 R52 R51    ; if R52 < R51 then PC := 490
488 [-]: JMP       490          ; PC := 490
489 [-]: MOVE      R51 R0       ; R51 := R0
490 [-]: MOVE      R51 R1       ; R51 := R1
491 [-]: DIV       R52 R50 K71  ; R52 := R50 / 200
492 [-]: GETUPVAL  R53 U11      ; R53 := U11
493 [-]: GETTABLE  R53 R53 K72  ; R53 := R53["0xF81722A2"]
494 [-]: MOVE      R54 R51      ; R54 := R51
495 [-]: LOADK     R55 K22      ; R55 := 1
496 [-]: LOADK     R56 K73      ; R56 := -1
497 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
498 [-]: MUL       R52 R52 R53  ; R52 := R52 * R53
499 [-]: GETGLOBAL R53 K74      ; R53 := 0x6374FD98
500 [-]: GETUPVAL  R54 U2       ; R54 := U2
501 [-]: GETTABLE  R54 R54 K75  ; R54 := R54["mInitialScale"]
502 [-]: SUB       R55 K22 R52  ; R55 := 1 - R52
503 [-]: MUL       R54 R54 R55  ; R54 := R54 * R55
504 [-]: LOADK     R55 K76      ; R55 := 9.9999997473788e-06
505 [-]: LOADK     R56 K77      ; R56 := 10
506 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
507 [-]: GETUPVAL  R54 U2       ; R54 := U2
508 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
509 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
510 [-]: SETTABLE  R54 K78 R53  ; R54["mScale"] := R53
511 [-]: GETUPVAL  R54 U2       ; R54 := U2
512 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
513 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
514 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
515 [-]: SELF      R54 R54 K79  ; R55 := R54; R54 := R54["0x6A7E5F92"]
516 [-]: GETUPVAL  R56 U14      ; R56 := U14
517 [-]: GETTABLE  R56 R56 K80  ; R56 := R56["DECO_SCALE_MULTIPLIER"]
518 [-]: MUL       R56 R53 R56  ; R56 := R53 * R56
519 [-]: MOVE      R57 R1       ; R57 := R1
520 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
521 [-]: GETUPVAL  R54 U4       ; R54 := U4
522 [-]: SELF      R54 R54 K81  ; R55 := R54; R54 := R54["0x1F74748A"]
523 [-]: GETUPVAL  R56 U2       ; R56 := U2
524 [-]: GETTABLE  R56 R56 K24  ; R56 := R56["mMovingNode"]
525 [-]: GETTABLE  R56 R56 K17  ; R56 := R56["radialSector"]
526 [-]: MOVE      R57 R53      ; R57 := R53
527 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
528 [-]: GETUPVAL  R54 U2       ; R54 := U2
529 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
530 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
531 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
532 [-]: SELF      R54 R54 K82  ; R55 := R54; R54 := R54["0xB3733382"]
533 [-]: CALL      R54 2 2      ; R54 := R54(R55)
534 [-]: LOADK     R55 K22      ; R55 := 1
535 [-]: LEN       R56 R54      ; R56 := # R54
536 [-]: LOADK     R57 K22      ; R57 := 1
537 [-]: FORPREP   R55 543      ; R55 -= R57; PC := 543
538 [-]: GETTABLE  R59 R54 R58  ; R59 := R54[R58]
539 [-]: SELF      R59 R59 K79  ; R60 := R59; R59 := R59["0x6A7E5F92"]
540 [-]: LOADK     R61 K22      ; R61 := 1
541 [-]: MOVE      R62 R1       ; R62 := R1
542 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
543 [-]: FORLOOP   R55 538      ; R55 += R57; if R55 <= R56 then begin PC := 538; R58 := R55 end
544 [-]: GETUPVAL  R59 U12      ; R59 := U12
545 [-]: GETUPVAL  R60 U2       ; R60 := U2
546 [-]: GETTABLE  R60 R60 K24  ; R60 := R60["mMovingNode"]
547 [-]: CALL      R59 2 1      ; R59(R60)
548 [-]: GETUPVAL  R59 U15      ; R59 := U15
549 [-]: TEST      R59 1        ; if R59 then PC := 552
550 [-]: JMP       552          ; PC := 552
551 [-]: RETURN    R0 1         ; return 
552 [-]: GETGLOBAL R59 K83      ; R59 := _T
553 [-]: GETTABLE  R59 R59 K84  ; R59 := R59["MouseInWorldStateWindow"]
554 [-]: TEST      R59 1        ; if R59 then PC := 560
555 [-]: JMP       560          ; PC := 560
556 [-]: GETGLOBAL R59 K83      ; R59 := _T
557 [-]: GETTABLE  R59 R59 K85  ; R59 := R59["MouseInChatArea"]
558 [-]: TEST      R59 0        ; if not R59 then PC := 567
559 [-]: JMP       567          ; PC := 567
560 [-]: GETUPVAL  R59 U15      ; R59 := U15
561 [-]: GETTABLE  R59 R59 K86  ; R59 := R59["mDragging"]
562 [-]: TEST      R59 0        ; if not R59 then PC := 567
563 [-]: JMP       567          ; PC := 567
564 [-]: GETUPVAL  R59 U15      ; R59 := U15
565 [-]: SELF      R59 R59 K87  ; R60 := R59; R59 := R59["0xD963824A"]
566 [-]: CALL      R59 2 1      ; R59(R60)
567 [-]: GETGLOBAL R59 K88      ; R59 := 0x4CDEF9FF
568 [-]: CALL      R59 1 2      ; R59 := R59()
569 [-]: GETUPVAL  R60 U15      ; R60 := U15
570 [-]: SELF      R60 R60 K89  ; R61 := R60; R60 := R60["0x8C7099E9"]
571 [-]: MOVE      R62 R59      ; R62 := R59
572 [-]: CALL      R60 3 1      ; R60(R61,R62)
573 [-]: GETUPVAL  R60 U15      ; R60 := U15
574 [-]: GETTABLE  R60 R60 K90  ; R60 := R60["mCurrentScroll"]
575 [-]: GETTABLE  R60 R60 K45  ; R60 := R60["x"]
576 [-]: GETUPVAL  R61 U15      ; R61 := U15
577 [-]: GETTABLE  R61 R61 K90  ; R61 := R61["mCurrentScroll"]
578 [-]: GETTABLE  R61 R61 K29  ; R61 := R61["y"]
579 [-]: GETUPVAL  R62 U16      ; R62 := U16
580 [-]: GETTABLE  R62 R62 K91  ; R62 := R62["Active"]
581 [-]: TEST      R62 0        ; if not R62 then PC := 628
582 [-]: JMP       628          ; PC := 628
583 [-]: GETUPVAL  R62 U11      ; R62 := U11
584 [-]: GETTABLE  R62 R62 K92  ; R62 := R62["0xEA569929"]
585 [-]: GETGLOBAL R63 K28      ; R63 := mMovie
586 [-]: CALL      R62 2 3      ; R62,R63 := R62(R63)
587 [-]: GETGLOBAL R64 K74      ; R64 := 0x6374FD98
588 [-]: GETGLOBAL R65 K28      ; R65 := mMovie
589 [-]: SELF      R65 R65 K93  ; R66 := R65; R65 := R65["0xBAE5F929"]
590 [-]: CALL      R65 2 2      ; R65 := R65(R66)
591 [-]: LOADK     R66 K6       ; R66 := 0
592 [-]: MOVE      R67 R62      ; R67 := R62
593 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
594 [-]: DIV       R65 R62 K94  ; R65 := R62 / 2
595 [-]: SUB       R64 R64 R65  ; R64 := R64 - R65
596 [-]: GETGLOBAL R65 K74      ; R65 := 0x6374FD98
597 [-]: GETGLOBAL R66 K28      ; R66 := mMovie
598 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0x6ACD1B87"]
599 [-]: CALL      R66 2 2      ; R66 := R66(R67)
600 [-]: LOADK     R67 K6       ; R67 := 0
601 [-]: MOVE      R68 R63      ; R68 := R63
602 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
603 [-]: DIV       R66 R63 K94  ; R66 := R63 / 2
604 [-]: SUB       R65 R65 R66  ; R65 := R65 - R66
605 [-]: GETGLOBAL R66 K74      ; R66 := 0x6374FD98
606 [-]: DIV       R67 R64 R62  ; R67 := R64 / R62
607 [-]: LOADK     R68 K73      ; R68 := -1
608 [-]: LOADK     R69 K22      ; R69 := 1
609 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
610 [-]: UNM       R64 R66      ; R64 := - R66
611 [-]: GETGLOBAL R66 K74      ; R66 := 0x6374FD98
612 [-]: DIV       R67 R65 R63  ; R67 := R65 / R63
613 [-]: LOADK     R68 K73      ; R68 := -1
614 [-]: LOADK     R69 K22      ; R69 := 1
615 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
616 [-]: UNM       R65 R66      ; R65 := - R66
617 [-]: GETUPVAL  R66 U17      ; R66 := U17
618 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
619 [-]: MUL       R68 R64 K97  ; R68 := R64 * -0.0040000001899898
620 [-]: ADD       R68 R60 R68  ; R68 := R60 + R68
621 [-]: CALL      R66 3 1      ; R66(R67,R68)
622 [-]: GETUPVAL  R66 U18      ; R66 := U18
623 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
624 [-]: MUL       R68 R65 K98  ; R68 := R65 * -0.003000000026077
625 [-]: ADD       R68 R61 R68  ; R68 := R61 + R68
626 [-]: CALL      R66 3 1      ; R66(R67,R68)
627 [-]: JMP       636          ; PC := 636
628 [-]: GETUPVAL  R66 U17      ; R66 := U17
629 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
630 [-]: MOVE      R68 R60      ; R68 := R60
631 [-]: CALL      R66 3 1      ; R66(R67,R68)
632 [-]: GETUPVAL  R66 U18      ; R66 := U18
633 [-]: SELF      R66 R66 K96  ; R67 := R66; R66 := R66["0xDB349344"]
634 [-]: MOVE      R68 R61      ; R68 := R61
635 [-]: CALL      R66 3 1      ; R66(R67,R68)
636 [-]: GETUPVAL  R66 U17      ; R66 := U17
637 [-]: GETTABLE  R66 R66 K99  ; R66 := R66["mCurVal"]
638 [-]: GETUPVAL  R67 U18      ; R67 := U18
639 [-]: GETTABLE  R67 R67 K99  ; R67 := R67["mCurVal"]
640 [-]: GETUPVAL  R68 U17      ; R68 := U17
641 [-]: SELF      R68 R68 K89  ; R69 := R68; R68 := R68["0x8C7099E9"]
642 [-]: MOVE      R70 R59      ; R70 := R59
643 [-]: CALL      R68 3 1      ; R68(R69,R70)
644 [-]: GETUPVAL  R68 U18      ; R68 := U18
645 [-]: SELF      R68 R68 K89  ; R69 := R68; R68 := R68["0x8C7099E9"]
646 [-]: MOVE      R70 R59      ; R70 := R59
647 [-]: CALL      R68 3 1      ; R68(R69,R70)
648 [-]: GETGLOBAL R68 K100     ; R68 := math
649 [-]: GETTABLE  R68 R68 K101 ; R68 := R68["0xF93F7CC8"]
650 [-]: GETUPVAL  R69 U17      ; R69 := U17
651 [-]: GETTABLE  R69 R69 K102 ; R69 := R69["mTargetVal"]
652 [-]: SUB       R69 R66 R69  ; R69 := R66 - R69
653 [-]: CALL      R68 2 2      ; R68 := R68(R69)
654 [-]: LT        1 K103 R68   ; if 4.9999998736894e-06 < R68 then PC := 657
655 [-]: JMP       657          ; PC := 657
656 [-]: MOVE      R68 R0       ; R68 := R0
657 [-]: MOVE      R68 R1       ; R68 := R1
658 [-]: TEST      R68 1        ; if R68 then PC := 671
659 [-]: JMP       671          ; PC := 671
660 [-]: GETUPVAL  R69 U17      ; R69 := U17
661 [-]: GETTABLE  R69 R69 K99  ; R69 := R69["mCurVal"]
662 [-]: GETUPVAL  R70 U17      ; R70 := U17
663 [-]: GETTABLE  R70 R70 K102 ; R70 := R70["mTargetVal"]
664 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 671
665 [-]: JMP       671          ; PC := 671
666 [-]: GETUPVAL  R69 U17      ; R69 := U17
667 [-]: SELF      R69 R69 K104 ; R70 := R69; R69 := R69["0x5A7A6B1"]
668 [-]: GETUPVAL  R71 U17      ; R71 := U17
669 [-]: GETTABLE  R71 R71 K102 ; R71 := R71["mTargetVal"]
670 [-]: CALL      R69 3 1      ; R69(R70,R71)
671 [-]: GETGLOBAL R69 K100     ; R69 := math
672 [-]: GETTABLE  R69 R69 K101 ; R69 := R69["0xF93F7CC8"]
673 [-]: GETUPVAL  R70 U18      ; R70 := U18
674 [-]: GETTABLE  R70 R70 K102 ; R70 := R70["mTargetVal"]
675 [-]: SUB       R70 R67 R70  ; R70 := R67 - R70
676 [-]: CALL      R69 2 2      ; R69 := R69(R70)
677 [-]: LT        1 K103 R69   ; if 4.9999998736894e-06 < R69 then PC := 680
678 [-]: JMP       680          ; PC := 680
679 [-]: MOVE      R69 R0       ; R69 := R0
680 [-]: MOVE      R69 R1       ; R69 := R1
681 [-]: TEST      R69 1        ; if R69 then PC := 694
682 [-]: JMP       694          ; PC := 694
683 [-]: GETUPVAL  R70 U18      ; R70 := U18
684 [-]: GETTABLE  R70 R70 K99  ; R70 := R70["mCurVal"]
685 [-]: GETUPVAL  R71 U18      ; R71 := U18
686 [-]: GETTABLE  R71 R71 K102 ; R71 := R71["mTargetVal"]
687 [-]: EQ        1 R70 R71    ; if R70 == R71 then PC := 694
688 [-]: JMP       694          ; PC := 694
689 [-]: GETUPVAL  R70 U18      ; R70 := U18
690 [-]: SELF      R70 R70 K104 ; R71 := R70; R70 := R70["0x5A7A6B1"]
691 [-]: GETUPVAL  R72 U18      ; R72 := U18
692 [-]: GETTABLE  R72 R72 K102 ; R72 := R72["mTargetVal"]
693 [-]: CALL      R70 3 1      ; R70(R71,R72)
694 [-]: GETUPVAL  R70 U19      ; R70 := U19
695 [-]: GETTABLE  R70 R70 K99  ; R70 := R70["mCurVal"]
696 [-]: GETUPVAL  R71 U19      ; R71 := U19
697 [-]: SELF      R71 R71 K89  ; R72 := R71; R71 := R71["0x8C7099E9"]
698 [-]: MOVE      R73 R59      ; R73 := R59
699 [-]: CALL      R71 3 1      ; R71(R72,R73)
700 [-]: GETGLOBAL R71 K100     ; R71 := math
701 [-]: GETTABLE  R71 R71 K101 ; R71 := R71["0xF93F7CC8"]
702 [-]: GETUPVAL  R72 U19      ; R72 := U19
703 [-]: GETTABLE  R72 R72 K102 ; R72 := R72["mTargetVal"]
704 [-]: SUB       R72 R70 R72  ; R72 := R70 - R72
705 [-]: CALL      R71 2 2      ; R71 := R71(R72)
706 [-]: LT        1 K105 R71   ; if 0.0099999997764826 < R71 then PC := 709
707 [-]: JMP       709          ; PC := 709
708 [-]: MOVE      R71 R0       ; R71 := R0
709 [-]: MOVE      R71 R1       ; R71 := R1
710 [-]: TEST      R71 1        ; if R71 then PC := 723
711 [-]: JMP       723          ; PC := 723
712 [-]: GETUPVAL  R72 U15      ; R72 := U15
713 [-]: GETTABLE  R72 R72 K99  ; R72 := R72["mCurVal"]
714 [-]: GETUPVAL  R73 U15      ; R73 := U15
715 [-]: GETTABLE  R73 R73 K102 ; R73 := R73["mTargetVal"]
716 [-]: EQ        1 R72 R73    ; if R72 == R73 then PC := 723
717 [-]: JMP       723          ; PC := 723
718 [-]: GETUPVAL  R72 U15      ; R72 := U15
719 [-]: SELF      R72 R72 K104 ; R73 := R72; R72 := R72["0x5A7A6B1"]
720 [-]: GETUPVAL  R74 U15      ; R74 := U15
721 [-]: GETTABLE  R74 R74 K102 ; R74 := R74["mTargetVal"]
722 [-]: CALL      R72 3 1      ; R72(R73,R74)
723 [-]: GETUPVAL  R72 U20      ; R72 := U20
724 [-]: TEST      R72 0        ; if not R72 then PC := 732
725 [-]: JMP       732          ; PC := 732
726 [-]: TEST      R71 1        ; if R71 then PC := 732
727 [-]: JMP       732          ; PC := 732
728 [-]: GETUPVAL  R72 U20      ; R72 := U20
729 [-]: CALL      R72 1 1      ; R72()
730 [-]: LOADNIL   R72 R72      ; R72 := nil
731 [-]: MOVE      R72 R20      ; R72 := R20
732 [-]: TEST      R71 0        ; if not R71 then PC := 736
733 [-]: JMP       736          ; PC := 736
734 [-]: GETUPVAL  R72 U21      ; R72 := U21
735 [-]: CALL      R72 1 1      ; R72()
736 [-]: GETUPVAL  R72 U17      ; R72 := U17
737 [-]: SELF      R72 R72 K106 ; R73 := R72; R72 := R72["0xC4E503B0"]
738 [-]: CALL      R72 2 2      ; R72 := R72(R73)
739 [-]: MUL       R72 R72 K94  ; R72 := R72 * 2
740 [-]: SUB       R72 R72 K22  ; R72 := R72 - 1
741 [-]: GETUPVAL  R73 U22      ; R73 := U22
742 [-]: MUL       R72 R72 R73  ; R72 := R72 * R73
743 [-]: GETUPVAL  R73 U18      ; R73 := U18
744 [-]: SELF      R73 R73 K106 ; R74 := R73; R73 := R73["0xC4E503B0"]
745 [-]: CALL      R73 2 2      ; R73 := R73(R74)
746 [-]: MUL       R73 R73 K94  ; R73 := R73 * 2
747 [-]: SUB       R73 R73 K22  ; R73 := R73 - 1
748 [-]: GETUPVAL  R74 U22      ; R74 := U22
749 [-]: UNM       R74 R74      ; R74 := - R74
750 [-]: MUL       R73 R73 R74  ; R73 := R73 * R74
751 [-]: GETGLOBAL R74 K31      ; R74 := 0x221C9700
752 [-]: GETUPVAL  R75 U23      ; R75 := U23
753 [-]: GETTABLE  R75 R75 K107 ; R75 := R75["origFacing"]
754 [-]: GETTABLE  R75 R75 K45  ; R75 := R75["x"]
755 [-]: GETUPVAL  R76 U23      ; R76 := U23
756 [-]: GETTABLE  R76 R76 K107 ; R76 := R76["origFacing"]
757 [-]: GETTABLE  R76 R76 K29  ; R76 := R76["y"]
758 [-]: GETUPVAL  R77 U23      ; R77 := U23
759 [-]: GETTABLE  R77 R77 K107 ; R77 := R77["origFacing"]
760 [-]: GETTABLE  R77 R77 K5   ; R77 := R77["z"]
761 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
762 [-]: GETUPVAL  R75 U19      ; R75 := U19
763 [-]: SELF      R75 R75 K106 ; R76 := R75; R75 := R75["0xC4E503B0"]
764 [-]: CALL      R75 2 2      ; R75 := R75(R76)
765 [-]: MUL       R75 R74 R75  ; R75 := R74 * R75
766 [-]: GETTABLE  R76 R75 K45  ; R76 := R75["x"]
767 [-]: ADD       R76 R76 R72  ; R76 := R76 + R72
768 [-]: SETTABLE  R75 K45 R76  ; R75["x"] := R76
769 [-]: GETTABLE  R76 R75 K29  ; R76 := R75["y"]
770 [-]: ADD       R76 R76 R73  ; R76 := R76 + R73
771 [-]: SETTABLE  R75 K29 R76  ; R75["y"] := R76
772 [-]: LOADK     R76 K108     ; R76 := -0.20000000298023
773 [-]: LOADK     R77 K109     ; R77 := 0.40000000596046
774 [-]: LOADK     R78 K110     ; R78 := -0.26499998569489
775 [-]: GETUPVAL  R79 U16      ; R79 := U16
776 [-]: GETTABLE  R79 R79 K91  ; R79 := R79["Active"]
777 [-]: TEST      R79 1        ; if R79 then PC := 897
778 [-]: JMP       897          ; PC := 897
779 [-]: GETUPVAL  R79 U24      ; R79 := U24
780 [-]: GETTABLE  R79 R79 K111 ; R79 := R79["Region"]
781 [-]: GETUPVAL  R80 U25      ; R80 := U25
782 [-]: EQ        1 R79 R80    ; if R79 == R80 then PC := 897
783 [-]: JMP       897          ; PC := 897
784 [-]: GETGLOBAL R79 K1       ; R79 := 0x400E7765
785 [-]: GETUPVAL  R80 U26      ; R80 := U26
786 [-]: CALL      R79 2 2      ; R79 := R79(R80)
787 [-]: TEST      R79 1        ; if R79 then PC := 897
788 [-]: JMP       897          ; PC := 897
789 [-]: GETUPVAL  R79 U24      ; R79 := U24
790 [-]: GETTABLE  R79 R79 K112 ; R79 := R79["Locked"]
791 [-]: TEST      R79 1        ; if R79 then PC := 897
792 [-]: JMP       897          ; PC := 897
793 [-]: GETUPVAL  R79 U24      ; R79 := U24
794 [-]: GETUPVAL  R80 U26      ; R80 := U26
795 [-]: SELF      R80 R80 K35  ; R81 := R80; R80 := R80["0x6DA72501"]
796 [-]: CALL      R80 2 2      ; R80 := R80(R81)
797 [-]: SETTABLE  R79 K113 R80 ; R79["Previous"] := R80
798 [-]: GETUPVAL  R79 U24      ; R79 := U24
799 [-]: GETUPVAL  R80 U25      ; R80 := U25
800 [-]: SETTABLE  R79 K111 R80 ; R79["Region"] := R80
801 [-]: GETGLOBAL R79 K1       ; R79 := 0x400E7765
802 [-]: GETUPVAL  R80 U25      ; R80 := U25
803 [-]: CALL      R79 2 2      ; R79 := R79(R80)
804 [-]: TEST      R79 1        ; if R79 then PC := 829
805 [-]: JMP       829          ; PC := 829
806 [-]: GETUPVAL  R79 U25      ; R79 := U25
807 [-]: GETTABLE  R79 R79 K114 ; R79 := R79["pos"]
808 [-]: GETTABLE  R80 R79 K45  ; R80 := R79["x"]
809 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 818
810 [-]: JMP       818          ; PC := 818
811 [-]: GETGLOBAL R80 K31      ; R80 := 0x221C9700
812 [-]: UNM       R81 R77      ; R81 := - R77
813 [-]: MOVE      R82 R78      ; R82 := R78
814 [-]: MOVE      R83 R76      ; R83 := R76
815 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
816 [-]: MOVE      R79 R80      ; R79 := R80
817 [-]: JMP       824          ; PC := 824
818 [-]: GETGLOBAL R80 K31      ; R80 := 0x221C9700
819 [-]: ADD       R81 R77 K115 ; R81 := R77 + 0.20000000298023
820 [-]: MOVE      R82 R78      ; R82 := R78
821 [-]: MOVE      R83 R76      ; R83 := R76
822 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
823 [-]: MOVE      R79 R80      ; R79 := R80
824 [-]: GETUPVAL  R80 U24      ; R80 := U24
825 [-]: GETUPVAL  R81 U27      ; R81 := U27
826 [-]: ADD       R81 R81 R79  ; R81 := R81 + R79
827 [-]: SETTABLE  R80 K116 R81 ; R80["Target"] := R81
828 [-]: JMP       838          ; PC := 838
829 [-]: GETUPVAL  R80 U24      ; R80 := U24
830 [-]: GETUPVAL  R81 U27      ; R81 := U27
831 [-]: GETGLOBAL R82 K31      ; R82 := 0x221C9700
832 [-]: LOADK     R83 K47      ; R83 := 0.10000000149012
833 [-]: LOADK     R84 K6       ; R84 := 0
834 [-]: LOADK     R85 K117     ; R85 := 4
835 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
836 [-]: ADD       R81 R81 R82  ; R81 := R81 + R82
837 [-]: SETTABLE  R80 K116 R81 ; R80["Target"] := R81
838 [-]: GETUPVAL  R80 U24      ; R80 := U24
839 [-]: GETTABLE  R80 R80 K118 ; R80 := R80["Prop"]
840 [-]: SELF      R80 R80 K104 ; R81 := R80; R80 := R80["0x5A7A6B1"]
841 [-]: LOADK     R82 K6       ; R82 := 0
842 [-]: CALL      R80 3 1      ; R80(R81,R82)
843 [-]: GETUPVAL  R80 U24      ; R80 := U24
844 [-]: GETTABLE  R80 R80 K118 ; R80 := R80["Prop"]
845 [-]: SELF      R80 R80 K96  ; R81 := R80; R80 := R80["0xDB349344"]
846 [-]: LOADK     R82 K22      ; R82 := 1
847 [-]: CALL      R80 3 1      ; R80(R81,R82)
848 [-]: GETUPVAL  R80 U25      ; R80 := U25
849 [-]: EQ        0 R80 K19    ; if R80 ~= nil then PC := 859
850 [-]: JMP       859          ; PC := 859
851 [-]: GETUPVAL  R80 U26      ; R80 := U26
852 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
853 [-]: GETUPVAL  R82 U28      ; R82 := U28
854 [-]: MOVE      R83 R0       ; R83 := R0
855 [-]: MOVE      R84 R1       ; R84 := R1
856 [-]: LOADK     R85 K22      ; R85 := 1
857 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
858 [-]: JMP       892          ; PC := 892
859 [-]: GETUPVAL  R80 U19      ; R80 := U19
860 [-]: SELF      R80 R80 K106 ; R81 := R80; R80 := R80["0xC4E503B0"]
861 [-]: CALL      R80 2 2      ; R80 := R80(R81)
862 [-]: LT        0 R80 K73    ; if R80 >= -1 then PC := 872
863 [-]: JMP       872          ; PC := 872
864 [-]: GETUPVAL  R80 U26      ; R80 := U26
865 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
866 [-]: GETUPVAL  R82 U28      ; R82 := U28
867 [-]: MOVE      R83 R0       ; R83 := R0
868 [-]: MOVE      R84 R1       ; R84 := R1
869 [-]: LOADK     R85 K22      ; R85 := 1
870 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
871 [-]: JMP       892          ; PC := 892
872 [-]: GETUPVAL  R80 U25      ; R80 := U25
873 [-]: GETTABLE  R80 R80 K114 ; R80 := R80["pos"]
874 [-]: GETTABLE  R80 R80 K45  ; R80 := R80["x"]
875 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 885
876 [-]: JMP       885          ; PC := 885
877 [-]: GETUPVAL  R80 U26      ; R80 := U26
878 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
879 [-]: GETGLOBAL R82 K120     ; R82 := leftGraspAnim
880 [-]: MOVE      R83 R0       ; R83 := R0
881 [-]: MOVE      R84 R1       ; R84 := R1
882 [-]: LOADK     R85 K22      ; R85 := 1
883 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
884 [-]: JMP       892          ; PC := 892
885 [-]: GETUPVAL  R80 U26      ; R80 := U26
886 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
887 [-]: GETGLOBAL R82 K121     ; R82 := rightGraspAnim
888 [-]: MOVE      R83 R0       ; R83 := R0
889 [-]: MOVE      R84 R1       ; R84 := R1
890 [-]: LOADK     R85 K22      ; R85 := 1
891 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
892 [-]: GETUPVAL  R80 U19      ; R80 := U19
893 [-]: SELF      R80 R80 K106 ; R81 := R80; R80 := R80["0xC4E503B0"]
894 [-]: CALL      R80 2 2      ; R80 := R80(R81)
895 [-]: MOVE      R80 R29      ; R80 := R29
896 [-]: JMP       934          ; PC := 934
897 [-]: GETUPVAL  R80 U30      ; R80 := U30
898 [-]: CALL      R80 1 2      ; R80 := R80()
899 [-]: TEST      R80 0        ; if not R80 then PC := 934
900 [-]: JMP       934          ; PC := 934
901 [-]: GETUPVAL  R80 U19      ; R80 := U19
902 [-]: SELF      R80 R80 K106 ; R81 := R80; R80 := R80["0xC4E503B0"]
903 [-]: CALL      R80 2 2      ; R80 := R80(R81)
904 [-]: LT        0 R80 K73    ; if R80 >= -1 then PC := 914
905 [-]: JMP       914          ; PC := 914
906 [-]: GETUPVAL  R80 U26      ; R80 := U26
907 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
908 [-]: GETUPVAL  R82 U28      ; R82 := U28
909 [-]: MOVE      R83 R0       ; R83 := R0
910 [-]: MOVE      R84 R1       ; R84 := R1
911 [-]: LOADK     R85 K22      ; R85 := 1
912 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
913 [-]: JMP       934          ; PC := 934
914 [-]: GETUPVAL  R80 U25      ; R80 := U25
915 [-]: GETTABLE  R80 R80 K114 ; R80 := R80["pos"]
916 [-]: GETTABLE  R80 R80 K45  ; R80 := R80["x"]
917 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 927
918 [-]: JMP       927          ; PC := 927
919 [-]: GETUPVAL  R80 U26      ; R80 := U26
920 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
921 [-]: GETGLOBAL R82 K120     ; R82 := leftGraspAnim
922 [-]: MOVE      R83 R0       ; R83 := R0
923 [-]: MOVE      R84 R1       ; R84 := R1
924 [-]: LOADK     R85 K22      ; R85 := 1
925 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
926 [-]: JMP       934          ; PC := 934
927 [-]: GETUPVAL  R80 U26      ; R80 := U26
928 [-]: SELF      R80 R80 K119 ; R81 := R80; R80 := R80["0x7A97EAF5"]
929 [-]: GETGLOBAL R82 K121     ; R82 := rightGraspAnim
930 [-]: MOVE      R83 R0       ; R83 := R0
931 [-]: MOVE      R84 R1       ; R84 := R1
932 [-]: LOADK     R85 K22      ; R85 := 1
933 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
934 [-]: GETUPVAL  R80 U23      ; R80 := U23
935 [-]: GETUPVAL  R81 U23      ; R81 := U23
936 [-]: GETTABLE  R81 R81 K122 ; R81 := R81["originPos"]
937 [-]: ADD       R81 R81 R75  ; R81 := R81 + R75
938 [-]: SETTABLE  R80 K114 R81 ; R80["pos"] := R81
939 [-]: GETUPVAL  R80 U0       ; R80 := U0
940 [-]: GETUPVAL  R81 U1       ; R81 := U1
941 [-]: GETTABLE  R81 R81 K123 ; R81 := R81["EDIT_REGION_FRAMING"]
942 [-]: EQ        0 R80 R81    ; if R80 ~= R81 then PC := 976
943 [-]: JMP       976          ; PC := 976
944 [-]: GETUPVAL  R80 U31      ; R80 := U31
945 [-]: GETUPVAL  R81 U2       ; R81 := U2
946 [-]: GETTABLE  R81 R81 K124 ; R81 := R81["mFramingRegion"]
947 [-]: GETTABLE  R80 R80 R81  ; R80 := R80[R81]
948 [-]: TEST      R80 0        ; if not R80 then PC := 976
949 [-]: JMP       976          ; PC := 976
950 [-]: GETTABLE  R81 R80 K125 ; R81 := R80["zoomedFraming"]
951 [-]: GETTABLE  R81 R81 K45  ; R81 := R81["x"]
952 [-]: EQ        0 R81 R60    ; if R81 ~= R60 then PC := 964
953 [-]: JMP       964          ; PC := 964
954 [-]: GETTABLE  R81 R80 K125 ; R81 := R80["zoomedFraming"]
955 [-]: GETTABLE  R81 R81 K29  ; R81 := R81["y"]
956 [-]: EQ        0 R81 R61    ; if R81 ~= R61 then PC := 964
957 [-]: JMP       964          ; PC := 964
958 [-]: GETTABLE  R81 R80 K125 ; R81 := R80["zoomedFraming"]
959 [-]: GETTABLE  R81 R81 K5   ; R81 := R81["z"]
960 [-]: GETUPVAL  R82 U19      ; R82 := U19
961 [-]: GETTABLE  R82 R82 K102 ; R82 := R82["mTargetVal"]
962 [-]: EQ        1 R81 R82    ; if R81 == R82 then PC := 976
963 [-]: JMP       976          ; PC := 976
964 [-]: GETGLOBAL R81 K31      ; R81 := 0x221C9700
965 [-]: MOVE      R82 R60      ; R82 := R60
966 [-]: MOVE      R83 R61      ; R83 := R61
967 [-]: GETUPVAL  R84 U19      ; R84 := U19
968 [-]: GETTABLE  R84 R84 K102 ; R84 := R84["mTargetVal"]
969 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
970 [-]: SETTABLE  R80 K125 R81 ; R80["zoomedFraming"] := R81
971 [-]: GETUPVAL  R81 U4       ; R81 := U4
972 [-]: SELF      R81 R81 K126 ; R82 := R81; R81 := R81["0x2721E25D"]
973 [-]: MOVE      R83 R80      ; R83 := R80
974 [-]: GETTABLE  R84 R80 K125 ; R84 := R80["zoomedFraming"]
975 [-]: CALL      R81 4 1      ; R81(R82,R83,R84)
976 [-]: GETUPVAL  R81 U9       ; R81 := U9
977 [-]: CALL      R81 1 1      ; R81()
978 [-]: GETUPVAL  R81 U32      ; R81 := U32
979 [-]: SELF      R81 R81 K106 ; R82 := R81; R81 := R81["0xC4E503B0"]
980 [-]: CALL      R81 2 2      ; R81 := R81(R82)
981 [-]: LOADK     R82 K22      ; R82 := 1
982 [-]: GETGLOBAL R83 K83      ; R83 := _T
983 [-]: GETTABLE  R83 R83 K127 ; R83 := R83["HideSquadOverlay"]
984 [-]: EQ        1 R83 K19    ; if R83 == nil then PC := 991
985 [-]: JMP       991          ; PC := 991
986 [-]: GETGLOBAL R83 K83      ; R83 := _T
987 [-]: GETTABLE  R83 R83 K127 ; R83 := R83["HideSquadOverlay"]
988 [-]: LE        1 R83 K6     ; if R83 <= 0 then PC := 991
989 [-]: JMP       991          ; PC := 991
990 [-]: MOVE      R83 R0       ; R83 := R0
991 [-]: MOVE      R83 R1       ; R83 := R1
992 [-]: GETGLOBAL R84 K83      ; R84 := _T
993 [-]: GETTABLE  R84 R84 K128 ; R84 := R84["BackgroundVisible"]
994 [-]: TEST      R84 1        ; if R84 then PC := 1006
995 [-]: JMP       1006         ; PC := 1006
996 [-]: GETGLOBAL R84 K83      ; R84 := _T
997 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["HideMapRedux"]
998 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1004
999 [-]: JMP       1004         ; PC := 1004
1000 [-]: GETGLOBAL R84 K83      ; R84 := _T
1001 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["HideMapRedux"]
1002 [-]: LT        1 K6 R84     ; if 0 < R84 then PC := 1006
1003 [-]: JMP       1006         ; PC := 1006
1004 [-]: TEST      R83 1        ; if R83 then PC := 1008
1005 [-]: JMP       1008         ; PC := 1008
1006 [-]: LOADK     R82 K6       ; R82 := 0
1007 [-]: JMP       1023         ; PC := 1023
1008 [-]: GETUPVAL  R84 U33      ; R84 := U33
1009 [-]: GETTABLE  R84 R84 K130 ; R84 := R84["Node"]
1010 [-]: EQ        0 R84 K19    ; if R84 ~= nil then PC := 1016
1011 [-]: JMP       1016         ; PC := 1016
1012 [-]: GETGLOBAL R84 K83      ; R84 := _T
1013 [-]: GETTABLE  R84 R84 K131 ; R84 := R84["gPendingMission"]
1014 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1018
1015 [-]: JMP       1018         ; PC := 1018
1016 [-]: LOADK     R82 K115     ; R82 := 0.20000000298023
1017 [-]: JMP       1023         ; PC := 1023
1018 [-]: GETGLOBAL R84 K83      ; R84 := _T
1019 [-]: GETTABLE  R84 R84 K84  ; R84 := R84["MouseInWorldStateWindow"]
1020 [-]: TEST      R84 0        ; if not R84 then PC := 1023
1021 [-]: JMP       1023         ; PC := 1023
1022 [-]: LOADK     R82 K47      ; R82 := 0.10000000149012
1023 [-]: GETUPVAL  R84 U32      ; R84 := U32
1024 [-]: SELF      R84 R84 K96  ; R85 := R84; R84 := R84["0xDB349344"]
1025 [-]: MOVE      R86 R82      ; R86 := R82
1026 [-]: CALL      R84 3 1      ; R84(R85,R86)
1027 [-]: GETUPVAL  R84 U32      ; R84 := U32
1028 [-]: SELF      R84 R84 K89  ; R85 := R84; R84 := R84["0x8C7099E9"]
1029 [-]: MOVE      R86 R59      ; R86 := R59
1030 [-]: CALL      R84 3 1      ; R84(R85,R86)
1031 [-]: GETUPVAL  R84 U33      ; R84 := U33
1032 [-]: GETTABLE  R84 R84 K130 ; R84 := R84["Node"]
1033 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1039
1034 [-]: JMP       1039         ; PC := 1039
1035 [-]: GETUPVAL  R84 U34      ; R84 := U34
1036 [-]: GETUPVAL  R85 U33      ; R85 := U33
1037 [-]: GETTABLE  R85 R85 K130 ; R85 := R85["Node"]
1038 [-]: SETTABLE  R84 K130 R85 ; R84["Node"] := R85
1039 [-]: GETUPVAL  R84 U32      ; R84 := U32
1040 [-]: SELF      R84 R84 K106 ; R85 := R84; R84 := R84["0xC4E503B0"]
1041 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1042 [-]: EQ        1 R81 R84    ; if R81 == R84 then PC := 1057
1043 [-]: JMP       1057         ; PC := 1057
1044 [-]: GETGLOBAL R84 K1       ; R84 := 0x400E7765
1045 [-]: GETGLOBAL R85 K132     ; R85 := splineMaterial
1046 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1047 [-]: TEST      R84 1        ; if R84 then PC := 1057
1048 [-]: JMP       1057         ; PC := 1057
1049 [-]: GETGLOBAL R84 K132     ; R84 := splineMaterial
1050 [-]: SELF      R84 R84 K133 ; R85 := R84; R84 := R84["0x94FB2E1A"]
1051 [-]: GETUPVAL  R86 U35      ; R86 := U35
1052 [-]: GETTABLE  R86 R86 K134 ; R86 := R86["UNLIT_ATTEN"]
1053 [-]: GETUPVAL  R87 U32      ; R87 := U32
1054 [-]: SELF      R87 R87 K106 ; R88 := R87; R87 := R87["0xC4E503B0"]
1055 [-]: CALL      R87 2 0      ; R87,... := R87(R88)
1056 [-]: CALL      R84 0 1      ; R84(R85,...)
1057 [-]: GETUPVAL  R84 U36      ; R84 := U36
1058 [-]: SELF      R84 R84 K96  ; R85 := R84; R84 := R84["0xDB349344"]
1059 [-]: GETUPVAL  R86 U11      ; R86 := U11
1060 [-]: GETTABLE  R86 R86 K72  ; R86 := R86["0xF81722A2"]
1061 [-]: GETUPVAL  R87 U33      ; R87 := U33
1062 [-]: GETTABLE  R87 R87 K111 ; R87 := R87["Region"]
1063 [-]: EQ        0 R87 K19    ; if R87 ~= nil then PC := 1066
1064 [-]: JMP       1066         ; PC := 1066
1065 [-]: MOVE      R87 R0       ; R87 := R0
1066 [-]: MOVE      R87 R1       ; R87 := R1
1067 [-]: LOADK     R88 K22      ; R88 := 1
1068 [-]: LOADK     R89 K6       ; R89 := 0
1069 [-]: CALL      R86 4 0      ; R86,... := R86(R87,R88,R89)
1070 [-]: CALL      R84 0 1      ; R84(R85,...)
1071 [-]: GETUPVAL  R84 U36      ; R84 := U36
1072 [-]: SELF      R84 R84 K89  ; R85 := R84; R84 := R84["0x8C7099E9"]
1073 [-]: GETGLOBAL R86 K88      ; R86 := 0x4CDEF9FF
1074 [-]: CALL      R86 1 0      ; R86,... := R86()
1075 [-]: CALL      R84 0 1      ; R84(R85,...)
1076 [-]: GETUPVAL  R84 U33      ; R84 := U33
1077 [-]: GETTABLE  R84 R84 K111 ; R84 := R84["Region"]
1078 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 1084
1079 [-]: JMP       1084         ; PC := 1084
1080 [-]: GETUPVAL  R84 U37      ; R84 := U37
1081 [-]: GETUPVAL  R85 U33      ; R85 := U33
1082 [-]: GETTABLE  R85 R85 K111 ; R85 := R85["Region"]
1083 [-]: SETTABLE  R84 K111 R85 ; R84["Region"] := R85
1084 [-]: MOVE      R84 R0       ; R84 := R0
1085 [-]: MOVE      R84 R38      ; R84 := R38
1086 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 5550
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Deco"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 55
  6 [-]: JMP       55           ; PC := 55
  7 [-]: LOADK     R0 K2        ; R0 := 120
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x58E5C2DB
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: MOD       R1 R1 R0     ; R1 := R1 % R0
 11 [-]: DIV       R1 R1 R0     ; R1 := R1 / R0
 12 [-]: GETGLOBAL R2 K4        ; R2 := math
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["pi"]
 14 [-]: MUL       R2 R2 K6     ; R2 := R2 * 2
 15 [-]: MUL       R2 R2 R1     ; R2 := R2 * R1
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["RegionIndex"]
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: ADD       R3 R3 K8     ; R3 := R3 + 0.050000000745058
 21 [-]: GETGLOBAL R4 K4        ; R4 := math
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xBB3F1476"]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: MUL       R4 R4 R3     ; R4 := R4 * R3
 26 [-]: GETGLOBAL R5 K4        ; R5 := math
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x96330A01"]
 28 [-]: MOVE      R6 R2        ; R6 := R2
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 33 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0xEC183DDC"]
 34 [-]: GETUPVAL  R8 U0        ; R8 := U0
 35 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["AnchorPosition"]
 36 [-]: GETGLOBAL R9 K13       ; R9 := 0x221C9700
 37 [-]: MOVE      R10 R4       ; R10 := R4
 38 [-]: MOVE      R11 R5       ; R11 := R5
 39 [-]: LOADK     R12 K14      ; R12 := 0
 40 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 41 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 42 [-]: CALL      R6 3 1       ; R6(R7,R8)
 43 [-]: GETUPVAL  R6 U0        ; R6 := U0
 44 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 45 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x5097FD8C"]
 46 [-]: GETGLOBAL R8 K16       ; R8 := 0x1E4F6281
 47 [-]: LOADK     R9 K17       ; R9 := 90
 48 [-]: GETUPVAL  R10 U2       ; R10 := U2
 49 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["0xBFE096C9"]
 50 [-]: MOVE      R11 R2       ; R11 := R2
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: LOADK     R11 K19      ; R11 := -90
 53 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 54 [-]: CALL      R6 0 1       ; R6(R7,...)
 55 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 5564
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Region"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 169
  6 [-]: JMP       169          ; PC := 169
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETGLOBAL R1 K2        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 169
 12 [-]: JMP       169          ; PC := 169
 13 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Splines"]
 16 [-]: GETGLOBAL R2 K2        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SplineIndex"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 169
 22 [-]: JMP       169          ; PC := 169
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Splines"]
 25 [-]: GETGLOBAL R1 K2        ; R1 := _T
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 27 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SplineIndex"]
 28 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 29 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0xAC71FD5A"]
 30 [-]: GETGLOBAL R2 K2        ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 32 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Progress"]
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: GETGLOBAL R1 K8        ; R1 := 0xB09F286F
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 37 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["pos"]
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 40 [-]: LT        0 R1 K10     ; if R1 >= 0.0010000000474975 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x2721E25D"]
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Region"]
 47 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 48 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["x"]
 49 [-]: MUL       R5 R5 K14    ; R5 := R5 * 0.041000001132488
 50 [-]: ADD       R5 K15 R5    ; R5 := 0.5 + R5
 51 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["y"]
 52 [-]: ADD       R6 R6 K17    ; R6 := R6 + 0.029999999329448
 53 [-]: MUL       R6 R6 K18    ; R6 := R6 * 0.043000001460314
 54 [-]: SUB       R6 K15 R6    ; R6 := 0.5 - R6
 55 [-]: GETUPVAL  R7 U2        ; R7 := U2
 56 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["MAX_ZOOM"]
 57 [-]: SUB       R7 R7 K20    ; R7 := R7 - 0.30000001192093
 58 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["z"]
 59 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 60 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 61 [-]: CALL      R1 0 1       ; R1(R2,...)
 62 [-]: GETUPVAL  R1 U3        ; R1 := U3
 63 [-]: GETUPVAL  R2 U0        ; R2 := U0
 64 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 65 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETUPVAL  R1 U4        ; R1 := U4
 68 [-]: GETUPVAL  R2 U3        ; R2 := U3
 69 [-]: GETUPVAL  R3 U3        ; R3 := U3
 70 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["zoomedFraming"]
 71 [-]: CALL      R1 3 4       ; R1,R2,R3 := R1(R2,R3)
 72 [-]: GETUPVAL  R4 U5        ; R4 := U5
 73 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 74 [-]: LOADK     R6 K13       ; R6 := "x"
 75 [-]: MOVE      R7 R1        ; R7 := R1
 76 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 77 [-]: GETUPVAL  R4 U5        ; R4 := U5
 78 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 79 [-]: LOADK     R6 K16       ; R6 := "y"
 80 [-]: MOVE      R7 R2        ; R7 := R2
 81 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 82 [-]: GETUPVAL  R4 U0        ; R4 := U0
 83 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Region"]
 84 [-]: SETTABLE  R4 K9 R0     ; R4["pos"] := R0
 85 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 86 [-]: GETUPVAL  R5 U0        ; R5 := U0
 87 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
 88 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["pos"]
 89 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["x"]
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
 92 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["pos"]
 93 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["y"]
 94 [-]: GETUPVAL  R7 U0        ; R7 := U0
 95 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["Region"]
 96 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["pos"]
 97 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["z"]
 98 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 99 [-]: GETUPVAL  R5 U6        ; R5 := U6
100 [-]: MOVE      R6 R4        ; R6 := R4
101 [-]: CALL      R5 2 2       ; R5 := R5(R6)
102 [-]: MOVE      R4 R5        ; R4 := R5
103 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
104 [-]: GETUPVAL  R6 U0        ; R6 := U0
105 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
106 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["instance"]
107 [-]: CALL      R5 2 2       ; R5 := R5(R6)
108 [-]: TEST      R5 1         ; if R5 then PC := 133
109 [-]: JMP       133          ; PC := 133
110 [-]: GETUPVAL  R5 U0        ; R5 := U0
111 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
112 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["instance"]
113 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0xEC183DDC"]
114 [-]: MOVE      R7 R4        ; R7 := R4
115 [-]: CALL      R5 3 1       ; R5(R6,R7)
116 [-]: GETUPVAL  R5 U7        ; R5 := U7
117 [-]: GETUPVAL  R6 U0        ; R6 := U0
118 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["SubLabelIndex"]
119 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
120 [-]: GETGLOBAL R6 K12       ; R6 := 0x221C9700
121 [-]: LOADK     R7 K27       ; R7 := 0
122 [-]: GETUPVAL  R8 U0        ; R8 := U0
123 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Region"]
124 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["scale"]
125 [-]: MUL       R8 R8 K29    ; R8 := R8 * 1.0499999523163
126 [-]: GETUPVAL  R9 U8        ; R9 := U8
127 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["PLANET_UNIT_MULTIPLIER"]
128 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
129 [-]: LOADK     R9 K31       ; R9 := 9.9999997473788e-05
130 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
131 [-]: ADD       R6 R4 R6     ; R6 := R4 + R6
132 [-]: SETTABLE  R5 K9 R6     ; R5["pos"] := R6
133 [-]: GETGLOBAL R5 K32       ; R5 := 0xECFDD17
134 [-]: GETUPVAL  R6 U0        ; R6 := U0
135 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["Sectors"]
136 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
137 [-]: JMP       155          ; PC := 155
138 [-]: GETUPVAL  R10 U0       ; R10 := U0
139 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
140 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
141 [-]: JMP       155          ; PC := 155
142 [-]: GETUPVAL  R10 U0       ; R10 := U0
143 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
144 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
145 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
146 [-]: JMP       155          ; PC := 155
147 [-]: GETGLOBAL R10 K36      ; R10 := 0x96BEA6B
148 [-]: GETUPVAL  R11 U0       ; R11 := U0
149 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["Nodes"]
150 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
151 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["position"]
152 [-]: MOVE      R12 R0       ; R12 := R0
153 [-]: GETTABLE  R13 R9 K38   ; R13 := R9["decoOffset"]
154 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
155 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 138; R7 := R8 end
156 [-]: JMP       138          ; PC := 138
157 [-]: LOADK     R10 K39      ; R10 := 1
158 [-]: GETUPVAL  R11 U9       ; R11 := U9
159 [-]: LEN       R11 R11      ; R11 := # R11
160 [-]: LOADK     R12 K39      ; R12 := 1
161 [-]: FORPREP   R10 168      ; R10 -= R12; PC := 168
162 [-]: GETUPVAL  R14 U10      ; R14 := U10
163 [-]: GETUPVAL  R15 U11      ; R15 := U11
164 [-]: GETUPVAL  R16 U9       ; R16 := U9
165 [-]: GETTABLE  R16 R16 R13  ; R16 := R16[R13]
166 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
167 [-]: CALL      R14 2 1      ; R14(R15)
168 [-]: FORLOOP   R10 162      ; R10 += R12; if R10 <= R11 then begin PC := 162; R13 := R10 end
169 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5602
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ResourceDrone"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mCurVal"]
 10 [-]: LT        0 R0 K3      ; if R0 >= -2 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ResourceDrone"]
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x458F27A9"]
 15 [-]: LOADK     R3 K5        ; R3 := "OnRegionZoomOut"
 16 [-]: LOADK     R4 K6        ; R4 := ""
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: CALL      R1 1 1       ; R1()
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: LOADK     R1 K7        ; R1 := 1
 22 [-]: GETUPVAL  R2 U3        ; R2 := U3
 23 [-]: LEN       R2 R2        ; R2 := # R2
 24 [-]: LOADK     R3 K7        ; R3 := 1
 25 [-]: FORPREP   R1 45        ; R1 -= R3; PC := 45
 26 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 27 [-]: GETUPVAL  R6 U4        ; R6 := U4
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: TEST      R5 1         ; if R5 then PC := 45
 30 [-]: JMP       45           ; PC := 45
 31 [-]: GETUPVAL  R5 U4        ; R5 := U4
 32 [-]: GETUPVAL  R6 U3        ; R6 := U3
 33 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 34 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETUPVAL  R5 U0        ; R5 := U0
 37 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["ResourceDrone"]
 38 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x458F27A9"]
 39 [-]: LOADK     R7 K8        ; R7 := "OnRegionZoomIn"
 40 [-]: GETGLOBAL R8 K9        ; R8 := 0x9FAED6BC
 41 [-]: MOVE      R9 R4        ; R9 := R4
 42 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 43 [-]: CALL      R5 0 1       ; R5(R6,...)
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: FORLOOP   R1 26        ; R1 += R3; if R1 <= R2 then begin PC := 26; R4 := R1 end
 46 [-]: GETUPVAL  R5 U0        ; R5 := U0
 47 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["ResourceDrone"]
 48 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x458F27A9"]
 49 [-]: LOADK     R7 K5        ; R7 := "OnRegionZoomOut"
 50 [-]: LOADK     R8 K6        ; R8 := ""
 51 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 52 [-]: GETUPVAL  R5 U2        ; R5 := U2
 53 [-]: CALL      R5 1 1       ; R5()
 54 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5629
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := 0
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xBFE096C9"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xABA21F2F"]
  6 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["x"]
  7 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["y"]
  8 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["x"]
  9 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["y"]
 10 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 11 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 12 [-]: MOVE      R2 R3        ; R2 := R3
 13 [-]: SUB       R2 R2 K5     ; R2 := R2 - 90
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5636
; #Upvalues:       40
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  84

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["forceUpdate3dElements"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SETTABLE  R1 K0 K1     ; R1["forceUpdate3dElements"] := "0x0"
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x221C9700
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCurVal"]
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: EQ        0 R3 R2      ; if R3 ~= R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: MOVE      R2 R2        ; R2 := R2
 18 [-]: GETUPVAL  R4 U3        ; R4 := U3
 19 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["x"]
 20 [-]: GETUPVAL  R5 U4        ; R5 := U4
 21 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0xC4E503B0"]
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: GETUPVAL  R4 U3        ; R4 := U3
 26 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["y"]
 27 [-]: GETUPVAL  R5 U5        ; R5 := U5
 28 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0xC4E503B0"]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 39
 31 [-]: JMP       39           ; PC := 39
 32 [-]: GETUPVAL  R4 U6        ; R4 := U6
 33 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mPrevHoverNode"]
 34 [-]: GETUPVAL  R5 U6        ; R5 := U6
 35 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["Node"]
 36 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R4 R0        ; R4 := R0
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: GETUPVAL  R5 U3        ; R5 := U3
 41 [-]: GETUPVAL  R6 U4        ; R6 := U4
 42 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xC4E503B0"]
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: SETTABLE  R5 K4 R6     ; R5["x"] := R6
 45 [-]: GETUPVAL  R5 U3        ; R5 := U3
 46 [-]: GETUPVAL  R6 U5        ; R6 := U5
 47 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xC4E503B0"]
 48 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 49 [-]: SETTABLE  R5 K6 R6     ; R5["y"] := R6
 50 [-]: GETUPVAL  R5 U6        ; R5 := U6
 51 [-]: GETUPVAL  R6 U6        ; R6 := U6
 52 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Node"]
 53 [-]: SETTABLE  R5 K7 R6     ; R5["mPrevHoverNode"] := R6
 54 [-]: GETUPVAL  R5 U7        ; R5 := U7
 55 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["Alpha"]
 56 [-]: GETUPVAL  R6 U8        ; R6 := U8
 57 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xC4E503B0"]
 58 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 59 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R5 R0        ; R5 := R0
 62 [-]: MOVE      R5 R1        ; R5 := R1
 63 [-]: GETUPVAL  R6 U7        ; R6 := U7
 64 [-]: GETUPVAL  R7 U8        ; R7 := U8
 65 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xC4E503B0"]
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: SETTABLE  R6 K9 R7     ; R6["Alpha"] := R7
 68 [-]: GETUPVAL  R6 U6        ; R6 := U6
 69 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["Region"]
 70 [-]: EQ        0 R6 K11     ; if R6 ~= nil then PC := 82
 71 [-]: JMP       82           ; PC := 82
 72 [-]: GETUPVAL  R7 U9        ; R7 := U9
 73 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["Region"]
 74 [-]: EQ        1 R7 K11     ; if R7 == nil then PC := 82
 75 [-]: JMP       82           ; PC := 82
 76 [-]: GETUPVAL  R7 U9        ; R7 := U9
 77 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["Alpha"]
 78 [-]: LT        0 K12 R7     ; if 0 >= R7 then PC := 82
 79 [-]: JMP       82           ; PC := 82
 80 [-]: GETUPVAL  R7 U9        ; R7 := U9
 81 [-]: GETTABLE  R6 R7 K10    ; R6 := R7["Region"]
 82 [-]: LOADNIL   R7 R7        ; R7 := nil
 83 [-]: EQ        1 R6 K11     ; if R6 == nil then PC := 97
 84 [-]: JMP       97           ; PC := 97
 85 [-]: LOADK     R8 K13       ; R8 := 1
 86 [-]: GETUPVAL  R9 U10       ; R9 := U10
 87 [-]: LEN       R9 R9        ; R9 := # R9
 88 [-]: LOADK     R10 K13      ; R10 := 1
 89 [-]: FORPREP   R8 96        ; R8 -= R10; PC := 96
 90 [-]: GETUPVAL  R12 U10      ; R12 := U10
 91 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 92 [-]: EQ        0 R6 R12     ; if R6 ~= R12 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: SUB       R7 R11 K13   ; R7 := R11 - 1
 95 [-]: JMP       97           ; PC := 97
 96 [-]: FORLOOP   R8 90        ; R8 += R10; if R8 <= R9 then begin PC := 90; R11 := R8 end
 97 [-]: GETUPVAL  R12 U9       ; R12 := U9
 98 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Alpha"]
 99 [-]: GETUPVAL  R13 U11      ; R13 := U11
100 [-]: SELF      R13 R13 K5   ; R14 := R13; R13 := R13["0xC4E503B0"]
101 [-]: CALL      R13 2 2      ; R13 := R13(R14)
102 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R12 R0       ; R12 := R0
105 [-]: MOVE      R12 R1       ; R12 := R1
106 [-]: GETUPVAL  R13 U9       ; R13 := U9
107 [-]: GETUPVAL  R14 U11      ; R14 := U11
108 [-]: SELF      R14 R14 K5   ; R15 := R14; R14 := R14["0xC4E503B0"]
109 [-]: CALL      R14 2 2      ; R14 := R14(R15)
110 [-]: SETTABLE  R13 K9 R14   ; R13["Alpha"] := R14
111 [-]: GETUPVAL  R13 U12      ; R13 := U12
112 [-]: GETUPVAL  R14 U13      ; R14 := U13
113 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["READ_ONLY"]
114 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 118
115 [-]: JMP       118          ; PC := 118
116 [-]: MOVE      R3 R1        ; R3 := R1
117 [-]: MOVE      R4 R1        ; R4 := R1
118 [-]: LOADNIL   R13 R14      ; R13 := R14 := nil
119 [-]: GETGLOBAL R15 K2       ; R15 := 0x221C9700
120 [-]: CALL      R15 1 2      ; R15 := R15()
121 [-]: GETGLOBAL R16 K2       ; R16 := 0x221C9700
122 [-]: CALL      R16 1 2      ; R16 := R16()
123 [-]: GETGLOBAL R17 K15      ; R17 := 0x1E4F6281
124 [-]: CALL      R17 1 2      ; R17 := R17()
125 [-]: GETGLOBAL R18 K2       ; R18 := 0x221C9700
126 [-]: CALL      R18 1 2      ; R18 := R18()
127 [-]: TEST      R4 1         ; if R4 then PC := 137
128 [-]: JMP       137          ; PC := 137
129 [-]: TEST      R3 1         ; if R3 then PC := 137
130 [-]: JMP       137          ; PC := 137
131 [-]: TEST      R5 1         ; if R5 then PC := 137
132 [-]: JMP       137          ; PC := 137
133 [-]: TEST      R12 1        ; if R12 then PC := 137
134 [-]: JMP       137          ; PC := 137
135 [-]: TEST      R0 0         ; if not R0 then PC := 884
136 [-]: JMP       884          ; PC := 884
137 [-]: LOADK     R19 K16      ; R19 := 100
138 [-]: LOADNIL   R20 R22      ; R20 := R21 := R22 := nil
139 [-]: TEST      R3 0         ; if not R3 then PC := 210
140 [-]: JMP       210          ; PC := 210
141 [-]: LOADK     R23 K17      ; R23 := 0.20000000298023
142 [-]: GETGLOBAL R24 K18      ; R24 := 0x6374FD98
143 [-]: MOVE      R25 R2       ; R25 := R2
144 [-]: GETUPVAL  R26 U14      ; R26 := U14
145 [-]: GETTABLE  R26 R26 K19  ; R26 := R26["LAYER_1_RANGE"]
146 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["minValue"]
147 [-]: GETUPVAL  R27 U14      ; R27 := U14
148 [-]: GETTABLE  R27 R27 K19  ; R27 := R27["LAYER_1_RANGE"]
149 [-]: GETTABLE  R27 R27 K21  ; R27 := R27["maxValue"]
150 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
151 [-]: MOVE      R14 R24      ; R14 := R24
152 [-]: GETUPVAL  R24 U14      ; R24 := U14
153 [-]: GETTABLE  R24 R24 K19  ; R24 := R24["LAYER_1_RANGE"]
154 [-]: SELF      R24 R24 K22  ; R25 := R24; R24 := R24["0x3B43F25"]
155 [-]: MOVE      R26 R14      ; R26 := R14
156 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
157 [-]: MOVE      R14 R24      ; R14 := R24
158 [-]: LT        0 R14 R23    ; if R14 >= R23 then PC := 167
159 [-]: JMP       167          ; PC := 167
160 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
161 [-]: LOADK     R25 K12      ; R25 := 0
162 [-]: LOADK     R26 K24      ; R26 := 80
163 [-]: DIV       R27 R14 R23  ; R27 := R14 / R23
164 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
165 [-]: MOVE      R19 R24      ; R19 := R24
166 [-]: JMP       180          ; PC := 180
167 [-]: SUB       R24 K13 R23  ; R24 := 1 - R23
168 [-]: LT        0 R24 R14    ; if R24 >= R14 then PC := 179
169 [-]: JMP       179          ; PC := 179
170 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
171 [-]: LOADK     R25 K24      ; R25 := 80
172 [-]: LOADK     R26 K12      ; R26 := 0
173 [-]: SUB       R27 K13 R23  ; R27 := 1 - R23
174 [-]: SUB       R27 R14 R27  ; R27 := R14 - R27
175 [-]: DIV       R27 R27 R23  ; R27 := R27 / R23
176 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
177 [-]: MOVE      R19 R24      ; R19 := R24
178 [-]: JMP       180          ; PC := 180
179 [-]: LOADK     R19 K24      ; R19 := 80
180 [-]: GETGLOBAL R24 K18      ; R24 := 0x6374FD98
181 [-]: MOVE      R25 R2       ; R25 := R2
182 [-]: GETUPVAL  R26 U14      ; R26 := U14
183 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["PLANET_VIS_RANGE"]
184 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["minValue"]
185 [-]: GETUPVAL  R27 U14      ; R27 := U14
186 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["PLANET_VIS_RANGE"]
187 [-]: GETTABLE  R27 R27 K21  ; R27 := R27["maxValue"]
188 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
189 [-]: MOVE      R14 R24      ; R14 := R24
190 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
191 [-]: LOADK     R25 K12      ; R25 := 0
192 [-]: LOADK     R26 K24      ; R26 := 80
193 [-]: GETUPVAL  R27 U14      ; R27 := U14
194 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["PLANET_VIS_RANGE"]
195 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27["0x3B43F25"]
196 [-]: MOVE      R29 R14      ; R29 := R14
197 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
198 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
199 [-]: MOVE      R20 R24      ; R20 := R24
200 [-]: GETGLOBAL R24 K23      ; R24 := 0x93034B55
201 [-]: LOADK     R25 K26      ; R25 := 50
202 [-]: LOADK     R26 K24      ; R26 := 80
203 [-]: GETUPVAL  R27 U14      ; R27 := U14
204 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["PLANET_VIS_RANGE"]
205 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27["0x3B43F25"]
206 [-]: MOVE      R29 R14      ; R29 := R14
207 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
208 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
209 [-]: MOVE      R21 R24      ; R21 := R24
210 [-]: TEST      R4 1         ; if R4 then PC := 216
211 [-]: JMP       216          ; PC := 216
212 [-]: TEST      R3 1         ; if R3 then PC := 216
213 [-]: JMP       216          ; PC := 216
214 [-]: TEST      R0 0         ; if not R0 then PC := 285
215 [-]: JMP       285          ; PC := 285
216 [-]: LOADK     R24 K13      ; R24 := 1
217 [-]: GETUPVAL  R25 U15      ; R25 := U15
218 [-]: LEN       R25 R25      ; R25 := # R25
219 [-]: LOADK     R26 K13      ; R26 := 1
220 [-]: FORPREP   R24 284      ; R24 -= R26; PC := 284
221 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
222 [-]: SELF      R28 R28 K28  ; R29 := R28; R28 := R28["0x3688C0F4"]
223 [-]: MOVE      R30 R15      ; R30 := R15
224 [-]: GETUPVAL  R31 U15      ; R31 := U15
225 [-]: GETTABLE  R31 R31 R27  ; R31 := R31[R27]
226 [-]: GETTABLE  R31 R31 K29  ; R31 := R31["pos"]
227 [-]: MOVE      R32 R1       ; R32 := R1
228 [-]: MOVE      R33 R0       ; R33 := R0
229 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
230 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
231 [-]: SELF      R28 R28 K30  ; R29 := R28; R28 := R28["0x4717530F"]
232 [-]: GETUPVAL  R30 U15      ; R30 := U15
233 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
234 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
235 [-]: GETTABLE  R31 R15 K4   ; R31 := R15["x"]
236 [-]: GETTABLE  R32 R15 K6   ; R32 := R15["y"]
237 [-]: SUB       R32 R32 K32  ; R32 := R32 - 10
238 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
239 [-]: TEST      R3 0         ; if not R3 then PC := 284
240 [-]: JMP       284          ; PC := 284
241 [-]: GETUPVAL  R28 U15      ; R28 := U15
242 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
243 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["layer"]
244 [-]: TEST      R28 0        ; if not R28 then PC := 284
245 [-]: JMP       284          ; PC := 284
246 [-]: LOADK     R13 K16      ; R13 := 100
247 [-]: GETUPVAL  R28 U15      ; R28 := U15
248 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
249 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["layer"]
250 [-]: EQ        0 R28 K13    ; if R28 ~= 1 then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: MOVE      R13 R19      ; R13 := R19
253 [-]: JMP       276          ; PC := 276
254 [-]: GETUPVAL  R28 U15      ; R28 := U15
255 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
256 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["layer"]
257 [-]: EQ        0 R28 K34    ; if R28 ~= 2 then PC := 276
258 [-]: JMP       276          ; PC := 276
259 [-]: MOVE      R13 R20      ; R13 := R20
260 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
261 [-]: SELF      R28 R28 K35  ; R29 := R28; R28 := R28["0x445651FB"]
262 [-]: GETUPVAL  R30 U15      ; R30 := U15
263 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
264 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
265 [-]: LOADK     R31 K36      ; R31 := "_xscale"
266 [-]: MOVE      R32 R21      ; R32 := R21
267 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
268 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
269 [-]: SELF      R28 R28 K35  ; R29 := R28; R28 := R28["0x445651FB"]
270 [-]: GETUPVAL  R30 U15      ; R30 := U15
271 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
272 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
273 [-]: LOADK     R31 K37      ; R31 := "_yscale"
274 [-]: MOVE      R32 R21      ; R32 := R21
275 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
276 [-]: GETGLOBAL R28 K27      ; R28 := mMovie
277 [-]: SELF      R28 R28 K35  ; R29 := R28; R28 := R28["0x445651FB"]
278 [-]: GETUPVAL  R30 U15      ; R30 := U15
279 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
280 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["memberIndex"]
281 [-]: LOADK     R31 K38      ; R31 := "_alpha"
282 [-]: MOVE      R32 R13      ; R32 := R13
283 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
284 [-]: FORLOOP   R24 221      ; R24 += R26; if R24 <= R25 then begin PC := 221; R27 := R24 end
285 [-]: GETGLOBAL R28 K18      ; R28 := 0x6374FD98
286 [-]: MOVE      R29 R2       ; R29 := R2
287 [-]: GETUPVAL  R30 U14      ; R30 := U14
288 [-]: GETTABLE  R30 R30 K39  ; R30 := R30["LAYER_2_RANGE"]
289 [-]: GETTABLE  R30 R30 K20  ; R30 := R30["minValue"]
290 [-]: GETUPVAL  R31 U14      ; R31 := U14
291 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["LAYER_2_RANGE"]
292 [-]: GETTABLE  R31 R31 K21  ; R31 := R31["maxValue"]
293 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
294 [-]: MOVE      R14 R28      ; R14 := R28
295 [-]: GETUPVAL  R28 U16      ; R28 := U16
296 [-]: GETGLOBAL R29 K23      ; R29 := 0x93034B55
297 [-]: LOADK     R30 K12      ; R30 := 0
298 [-]: LOADK     R31 K16      ; R31 := 100
299 [-]: GETUPVAL  R32 U14      ; R32 := U14
300 [-]: GETTABLE  R32 R32 K39  ; R32 := R32["LAYER_2_RANGE"]
301 [-]: SELF      R32 R32 K22  ; R33 := R32; R32 := R32["0x3B43F25"]
302 [-]: MOVE      R34 R14      ; R34 := R14
303 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
304 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
305 [-]: GETUPVAL  R30 U17      ; R30 := U17
306 [-]: LT        0 R30 R28    ; if R30 >= R28 then PC := 320
307 [-]: JMP       320          ; PC := 320
308 [-]: GETUPVAL  R30 U17      ; R30 := U17
309 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 320
310 [-]: JMP       320          ; PC := 320
311 [-]: GETUPVAL  R30 U18      ; R30 := U18
312 [-]: CALL      R30 1 1      ; R30()
313 [-]: GETGLOBAL R30 K27      ; R30 := mMovie
314 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
315 [-]: LOADK     R32 K41      ; R32 := "Nodes"
316 [-]: LOADK     R33 K42      ; R33 := "noMenuSelection"
317 [-]: MOVE      R34 R1       ; R34 := R1
318 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
319 [-]: JMP       332          ; PC := 332
320 [-]: GETUPVAL  R30 U17      ; R30 := U17
321 [-]: LE        0 R28 R30    ; if R28 > R30 then PC := 332
322 [-]: JMP       332          ; PC := 332
323 [-]: GETUPVAL  R30 U17      ; R30 := U17
324 [-]: LT        0 R30 R29    ; if R30 >= R29 then PC := 332
325 [-]: JMP       332          ; PC := 332
326 [-]: GETGLOBAL R30 K27      ; R30 := mMovie
327 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
328 [-]: LOADK     R32 K41      ; R32 := "Nodes"
329 [-]: LOADK     R33 K42      ; R33 := "noMenuSelection"
330 [-]: MOVE      R34 R0       ; R34 := R0
331 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
332 [-]: MOVE      R29 R16      ; R29 := R16
333 [-]: GETUPVAL  R30 U14      ; R30 := U14
334 [-]: GETTABLE  R30 R30 K39  ; R30 := R30["LAYER_2_RANGE"]
335 [-]: SELF      R30 R30 K22  ; R31 := R30; R30 := R30["0x3B43F25"]
336 [-]: MOVE      R32 R14      ; R32 := R14
337 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
338 [-]: GETGLOBAL R31 K18      ; R31 := 0x6374FD98
339 [-]: MOVE      R32 R2       ; R32 := R2
340 [-]: GETUPVAL  R33 U14      ; R33 := U14
341 [-]: GETTABLE  R33 R33 K43  ; R33 := R33["SHORTCUT_RANGE"]
342 [-]: GETTABLE  R33 R33 K20  ; R33 := R33["minValue"]
343 [-]: GETUPVAL  R34 U14      ; R34 := U14
344 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["SHORTCUT_RANGE"]
345 [-]: GETTABLE  R34 R34 K21  ; R34 := R34["maxValue"]
346 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
347 [-]: MOVE      R14 R31      ; R14 := R31
348 [-]: GETGLOBAL R31 K23      ; R31 := 0x93034B55
349 [-]: LOADK     R32 K12      ; R32 := 0
350 [-]: LOADK     R33 K16      ; R33 := 100
351 [-]: GETUPVAL  R34 U14      ; R34 := U14
352 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["SHORTCUT_RANGE"]
353 [-]: SELF      R34 R34 K22  ; R35 := R34; R34 := R34["0x3B43F25"]
354 [-]: MOVE      R36 R14      ; R36 := R14
355 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
356 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
357 [-]: MOVE      R22 R31      ; R22 := R31
358 [-]: GETUPVAL  R31 U12      ; R31 := U12
359 [-]: GETUPVAL  R32 U13      ; R32 := U13
360 [-]: GETTABLE  R32 R32 K44  ; R32 := R32["EDIT_NODES"]
361 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 373
362 [-]: JMP       373          ; PC := 373
363 [-]: GETUPVAL  R31 U12      ; R31 := U12
364 [-]: GETUPVAL  R32 U13      ; R32 := U13
365 [-]: GETTABLE  R32 R32 K45  ; R32 := R32["EDIT_EDGES"]
366 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 373
367 [-]: JMP       373          ; PC := 373
368 [-]: GETUPVAL  R31 U12      ; R31 := U12
369 [-]: GETUPVAL  R32 U13      ; R32 := U13
370 [-]: GETTABLE  R32 R32 K46  ; R32 := R32["EDIT_NODE_DECOS"]
371 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 375
372 [-]: JMP       375          ; PC := 375
373 [-]: LOADK     R31 K16      ; R31 := 100
374 [-]: MOVE      R31 R16      ; R31 := R16
375 [-]: LOADNIL   R31 R35      ; R31 := R32 := R33 := R34 := R35 := nil
376 [-]: GETUPVAL  R36 U16      ; R36 := U16
377 [-]: LT        1 K12 R36    ; if 0 < R36 then PC := 390
378 [-]: JMP       390          ; PC := 390
379 [-]: GETUPVAL  R36 U16      ; R36 := U16
380 [-]: LT        1 K12 R36    ; if 0 < R36 then PC := 383
381 [-]: JMP       383          ; PC := 383
382 [-]: MOVE      R36 R0       ; R36 := R0
383 [-]: MOVE      R36 R1       ; R36 := R1
384 [-]: LT        1 K12 R28    ; if 0 < R28 then PC := 387
385 [-]: JMP       387          ; PC := 387
386 [-]: MOVE      R37 R0       ; R37 := R0
387 [-]: MOVE      R37 R1       ; R37 := R1
388 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 390
389 [-]: JMP       390          ; PC := 390
390 [-]: LOADK     R36 K13      ; R36 := 1
391 [-]: GETUPVAL  R37 U19      ; R37 := U19
392 [-]: LEN       R37 R37      ; R37 := # R37
393 [-]: LOADK     R38 K13      ; R38 := 1
394 [-]: FORPREP   R36 680      ; R36 -= R38; PC := 680
395 [-]: GETGLOBAL R40 K47      ; R40 := 0x1BF588C6
396 [-]: CALL      R40 1 1      ; R40()
397 [-]: GETUPVAL  R40 U19      ; R40 := U19
398 [-]: GETTABLE  R40 R40 R39  ; R40 := R40[R39]
399 [-]: GETTABLE  R41 R40 K48  ; R41 := R40["radialSector"]
400 [-]: TEST      R4 1         ; if R4 then PC := 406
401 [-]: JMP       406          ; PC := 406
402 [-]: TEST      R3 1         ; if R3 then PC := 406
403 [-]: JMP       406          ; PC := 406
404 [-]: TEST      R0 0         ; if not R0 then PC := 570
405 [-]: JMP       570          ; PC := 570
406 [-]: GETTABLE  R32 R40 K49  ; R32 := R40["position"]
407 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
408 [-]: SELF      R42 R42 K28  ; R43 := R42; R42 := R42["0x3688C0F4"]
409 [-]: MOVE      R44 R15      ; R44 := R15
410 [-]: MOVE      R45 R32      ; R45 := R32
411 [-]: MOVE      R46 R1       ; R46 := R1
412 [-]: GETUPVAL  R47 U20      ; R47 := U20
413 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
414 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
415 [-]: SELF      R42 R42 K30  ; R43 := R42; R42 := R42["0x4717530F"]
416 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
417 [-]: GETTABLE  R45 R15 K4   ; R45 := R15["x"]
418 [-]: GETTABLE  R46 R15 K6   ; R46 := R15["y"]
419 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
420 [-]: GETGLOBAL R42 K23      ; R42 := 0x93034B55
421 [-]: LOADK     R43 K50      ; R43 := 20
422 [-]: LOADK     R44 K26      ; R44 := 50
423 [-]: MOVE      R45 R30      ; R45 := R30
424 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
425 [-]: MOVE      R31 R42      ; R31 := R42
426 [-]: GETTABLE  R42 R40 K51  ; R42 := R40["isSurfaceNode"]
427 [-]: TEST      R42 0        ; if not R42 then PC := 539
428 [-]: JMP       539          ; PC := 539
429 [-]: LOADK     R33 K16      ; R33 := 100
430 [-]: GETTABLE  R34 R32 K52  ; R34 := R32["z"]
431 [-]: MUL       R34 R34 K32  ; R34 := R34 * 10
432 [-]: LE        0 K12 R34    ; if 0 > R34 then PC := 449
433 [-]: JMP       449          ; PC := 449
434 [-]: GETGLOBAL R42 K23      ; R42 := 0x93034B55
435 [-]: LOADK     R43 K53      ; R43 := 75
436 [-]: LOADK     R44 K26      ; R44 := 50
437 [-]: GETGLOBAL R45 K18      ; R45 := 0x6374FD98
438 [-]: GETGLOBAL R46 K54      ; R46 := math
439 [-]: GETTABLE  R46 R46 K55  ; R46 := R46["0xD6F2D811"]
440 [-]: MOVE      R47 R34      ; R47 := R34
441 [-]: LOADK     R48 K56      ; R48 := 3
442 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
443 [-]: LOADK     R47 K12      ; R47 := 0
444 [-]: LOADK     R48 K13      ; R48 := 1
445 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
446 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
447 [-]: MOVE      R33 R42      ; R33 := R42
448 [-]: JMP       466          ; PC := 466
449 [-]: GETGLOBAL R42 K23      ; R42 := 0x93034B55
450 [-]: LOADK     R43 K53      ; R43 := 75
451 [-]: LOADK     R44 K16      ; R44 := 100
452 [-]: GETGLOBAL R45 K18      ; R45 := 0x6374FD98
453 [-]: GETGLOBAL R46 K54      ; R46 := math
454 [-]: GETTABLE  R46 R46 K55  ; R46 := R46["0xD6F2D811"]
455 [-]: GETGLOBAL R47 K54      ; R47 := math
456 [-]: GETTABLE  R47 R47 K57  ; R47 := R47["0xF93F7CC8"]
457 [-]: MOVE      R48 R34      ; R48 := R34
458 [-]: CALL      R47 2 2      ; R47 := R47(R48)
459 [-]: LOADK     R48 K56      ; R48 := 3
460 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
461 [-]: LOADK     R47 K12      ; R47 := 0
462 [-]: LOADK     R48 K13      ; R48 := 1
463 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
464 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
465 [-]: MOVE      R33 R42      ; R33 := R42
466 [-]: GETUPVAL  R42 U21      ; R42 := U21
467 [-]: GETTABLE  R43 R41 K58  ; R43 := R41["region"]
468 [-]: ADD       R43 R43 K13  ; R43 := R43 + 1
469 [-]: GETTABLE  R35 R42 R43  ; R35 := R42[R43]
470 [-]: GETGLOBAL R42 K59      ; R42 := 0x400E7765
471 [-]: MOVE      R43 R35      ; R43 := R35
472 [-]: CALL      R42 2 2      ; R42 := R42(R43)
473 [-]: TEST      R42 1        ; if R42 then PC := 499
474 [-]: JMP       499          ; PC := 499
475 [-]: SELF      R42 R35 K60  ; R43 := R35; R42 := R35["0x8EEB099D"]
476 [-]: MOVE      R44 R16      ; R44 := R16
477 [-]: CALL      R42 3 1      ; R42(R43,R44)
478 [-]: GETGLOBAL R42 K61      ; R42 := 0x518098BD
479 [-]: MOVE      R43 R18      ; R43 := R18
480 [-]: MOVE      R44 R32      ; R44 := R32
481 [-]: MOVE      R45 R16      ; R45 := R16
482 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
483 [-]: GETGLOBAL R42 K62      ; R42 := 0x20F748B4
484 [-]: MOVE      R43 R17      ; R43 := R17
485 [-]: MOVE      R44 R1       ; R44 := R1
486 [-]: MOVE      R45 R18      ; R45 := R18
487 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
488 [-]: GETTABLE  R42 R17 K63  ; R42 := R17["heading"]
489 [-]: UNM       R42 R42      ; R42 := - R42
490 [-]: SETTABLE  R17 K63 R42  ; R17["heading"] := R42
491 [-]: GETGLOBAL R42 K18      ; R42 := 0x6374FD98
492 [-]: GETTABLE  R43 R17 K64  ; R43 := R17["pitch"]
493 [-]: MUL       R43 R43 K65  ; R43 := R43 * 0.75
494 [-]: LOADK     R44 K66      ; R44 := -75
495 [-]: LOADK     R45 K53      ; R45 := 75
496 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
497 [-]: SETTABLE  R17 K64 R42  ; R17["pitch"] := R42
498 [-]: JMP       503          ; PC := 503
499 [-]: NEWTABLE  R42 0 2      ; R42 := {}
500 [-]: SETTABLE  R42 K63 K12  ; R42["heading"] := 0
501 [-]: SETTABLE  R42 K64 K12  ; R42["pitch"] := 0
502 [-]: MOVE      R17 R42      ; R17 := R42
503 [-]: GETTABLE  R42 R40 K67  ; R42 := R40["visibleLabel"]
504 [-]: TEST      R42 1        ; if R42 then PC := 524
505 [-]: JMP       524          ; PC := 524
506 [-]: GETTABLE  R42 R40 K68  ; R42 := R40["isShortcut"]
507 [-]: TEST      R42 1        ; if R42 then PC := 524
508 [-]: JMP       524          ; PC := 524
509 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
510 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
511 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
512 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
513 [-]: LOADK     R46 K72      ; R46 := "_heading"
514 [-]: GETTABLE  R47 R17 K63  ; R47 := R17["heading"]
515 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
516 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
517 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
518 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
519 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
520 [-]: LOADK     R46 K73      ; R46 := "_pitch"
521 [-]: GETTABLE  R47 R17 K64  ; R47 := R17["pitch"]
522 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
523 [-]: JMP       558          ; PC := 558
524 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
525 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
526 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
527 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
528 [-]: LOADK     R46 K72      ; R46 := "_heading"
529 [-]: GETTABLE  R47 R17 K63  ; R47 := R17["heading"]
530 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
531 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
532 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
533 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
534 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
535 [-]: LOADK     R46 K73      ; R46 := "_pitch"
536 [-]: GETTABLE  R47 R17 K64  ; R47 := R17["pitch"]
537 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
538 [-]: JMP       558          ; PC := 558
539 [-]: GETUPVAL  R42 U12      ; R42 := U12
540 [-]: GETUPVAL  R43 U13      ; R43 := U13
541 [-]: GETTABLE  R43 R43 K14  ; R43 := R43["READ_ONLY"]
542 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 558
543 [-]: JMP       558          ; PC := 558
544 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
545 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
546 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
547 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
548 [-]: LOADK     R46 K72      ; R46 := "_heading"
549 [-]: LOADK     R47 K12      ; R47 := 0
550 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
551 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
552 [-]: SELF      R42 R42 K69  ; R43 := R42; R42 := R42["0x880196A7"]
553 [-]: GETTABLE  R44 R40 K70  ; R44 := R40["clipName"]
554 [-]: LOADK     R45 K71      ; R45 := "Node.Container"
555 [-]: LOADK     R46 K73      ; R46 := "_pitch"
556 [-]: LOADK     R47 K12      ; R47 := 0
557 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
558 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
559 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
560 [-]: GETTABLE  R44 R40 K74  ; R44 := R40["nodeIndex"]
561 [-]: LOADK     R45 K36      ; R45 := "_xscale"
562 [-]: MOVE      R46 R31      ; R46 := R31
563 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
564 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
565 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
566 [-]: GETTABLE  R44 R40 K74  ; R44 := R40["nodeIndex"]
567 [-]: LOADK     R45 K37      ; R45 := "_yscale"
568 [-]: MOVE      R46 R31      ; R46 := R31
569 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
570 [-]: GETGLOBAL R42 K75      ; R42 := _T
571 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["MouseInWorldStateWindow"]
572 [-]: TEST      R42 1        ; if R42 then PC := 598
573 [-]: JMP       598          ; PC := 598
574 [-]: GETGLOBAL R42 K75      ; R42 := _T
575 [-]: GETTABLE  R42 R42 K77  ; R42 := R42["gPendingMission"]
576 [-]: EQ        0 R42 K11    ; if R42 ~= nil then PC := 598
577 [-]: JMP       598          ; PC := 598
578 [-]: GETUPVAL  R42 U6       ; R42 := U6
579 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
580 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 588
581 [-]: JMP       588          ; PC := 588
582 [-]: GETUPVAL  R42 U6       ; R42 := U6
583 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
584 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["nodeIndex"]
585 [-]: GETTABLE  R43 R40 K74  ; R43 := R40["nodeIndex"]
586 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 598
587 [-]: JMP       598          ; PC := 598
588 [-]: GETUPVAL  R42 U7       ; R42 := U7
589 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
590 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 598
591 [-]: JMP       598          ; PC := 598
592 [-]: GETUPVAL  R42 U7       ; R42 := U7
593 [-]: GETTABLE  R42 R42 K8   ; R42 := R42["Node"]
594 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["nodeIndex"]
595 [-]: GETTABLE  R43 R40 K74  ; R43 := R40["nodeIndex"]
596 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 611
597 [-]: JMP       611          ; PC := 611
598 [-]: GETGLOBAL R42 K75      ; R42 := _T
599 [-]: GETTABLE  R42 R42 K77  ; R42 := R42["gPendingMission"]
600 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 618
601 [-]: JMP       618          ; PC := 618
602 [-]: GETTABLE  R42 R40 K48  ; R42 := R40["radialSector"]
603 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 618
604 [-]: JMP       618          ; PC := 618
605 [-]: GETGLOBAL R42 K75      ; R42 := _T
606 [-]: GETTABLE  R42 R42 K77  ; R42 := R42["gPendingMission"]
607 [-]: GETTABLE  R42 R42 K78  ; R42 := R42["baseNodeName"]
608 [-]: GETTABLE  R43 R41 K79  ; R43 := R41["name"]
609 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 618
610 [-]: JMP       618          ; PC := 618
611 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
612 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
613 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
614 [-]: LOADK     R45 K38      ; R45 := "_alpha"
615 [-]: GETUPVAL  R46 U16      ; R46 := U16
616 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
617 [-]: JMP       649          ; PC := 649
618 [-]: EQ        1 R7 K11     ; if R7 == nil then PC := 639
619 [-]: JMP       639          ; PC := 639
620 [-]: GETTABLE  R42 R40 K68  ; R42 := R40["isShortcut"]
621 [-]: TEST      R42 0        ; if not R42 then PC := 639
622 [-]: JMP       639          ; PC := 639
623 [-]: GETTABLE  R42 R41 K58  ; R42 := R41["region"]
624 [-]: EQ        0 R42 R7     ; if R42 ~= R7 then PC := 639
625 [-]: JMP       639          ; PC := 639
626 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
627 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
628 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
629 [-]: LOADK     R45 K38      ; R45 := "_alpha"
630 [-]: GETGLOBAL R46 K23      ; R46 := 0x93034B55
631 [-]: GETUPVAL  R47 U16      ; R47 := U16
632 [-]: MOVE      R48 R22      ; R48 := R22
633 [-]: GETUPVAL  R49 U11      ; R49 := U11
634 [-]: SELF      R49 R49 K5   ; R50 := R49; R49 := R49["0xC4E503B0"]
635 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
636 [-]: CALL      R46 0 0      ; R46,... := R46(R47,...)
637 [-]: CALL      R42 0 1      ; R42(R43,...)
638 [-]: JMP       649          ; PC := 649
639 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
640 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
641 [-]: GETTABLE  R44 R40 K31  ; R44 := R40["memberIndex"]
642 [-]: LOADK     R45 K38      ; R45 := "_alpha"
643 [-]: GETUPVAL  R46 U8       ; R46 := U8
644 [-]: SELF      R46 R46 K5   ; R47 := R46; R46 := R46["0xC4E503B0"]
645 [-]: CALL      R46 2 2      ; R46 := R46(R47)
646 [-]: GETUPVAL  R47 U16      ; R47 := U16
647 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
648 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
649 [-]: GETTABLE  R42 R40 K68  ; R42 := R40["isShortcut"]
650 [-]: TEST      R42 0        ; if not R42 then PC := 658
651 [-]: JMP       658          ; PC := 658
652 [-]: GETGLOBAL R42 K27      ; R42 := mMovie
653 [-]: SELF      R42 R42 K35  ; R43 := R42; R42 := R42["0x445651FB"]
654 [-]: GETTABLE  R44 R40 K80  ; R44 := R40["labelIndex"]
655 [-]: LOADK     R45 K38      ; R45 := "_alpha"
656 [-]: GETUPVAL  R46 U16      ; R46 := U16
657 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
658 [-]: GETUPVAL  R42 U12      ; R42 := U12
659 [-]: GETUPVAL  R43 U13      ; R43 := U13
660 [-]: GETTABLE  R43 R43 K44  ; R43 := R43["EDIT_NODES"]
661 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 680
662 [-]: JMP       680          ; PC := 680
663 [-]: GETTABLE  R42 R40 K81  ; R42 := R40["deco"]
664 [-]: EQ        1 R42 K11    ; if R42 == nil then PC := 680
665 [-]: JMP       680          ; PC := 680
666 [-]: GETGLOBAL R42 K59      ; R42 := 0x400E7765
667 [-]: GETTABLE  R43 R40 K81  ; R43 := R40["deco"]
668 [-]: GETTABLE  R43 R43 K82  ; R43 := R43["mInstance"]
669 [-]: CALL      R42 2 2      ; R42 := R42(R43)
670 [-]: TEST      R42 1        ; if R42 then PC := 680
671 [-]: JMP       680          ; PC := 680
672 [-]: GETTABLE  R42 R40 K81  ; R42 := R40["deco"]
673 [-]: GETTABLE  R42 R42 K82  ; R42 := R42["mInstance"]
674 [-]: SELF      R42 R42 K83  ; R43 := R42; R42 := R42["0xEC183DDC"]
675 [-]: GETTABLE  R44 R40 K49  ; R44 := R40["position"]
676 [-]: GETTABLE  R45 R40 K81  ; R45 := R40["deco"]
677 [-]: GETTABLE  R45 R45 K84  ; R45 := R45["mOffset"]
678 [-]: ADD       R44 R44 R45  ; R44 := R44 + R45
679 [-]: CALL      R42 3 1      ; R42(R43,R44)
680 [-]: FORLOOP   R36 395      ; R36 += R38; if R36 <= R37 then begin PC := 395; R39 := R36 end
681 [-]: LOADNIL   R42 R45      ; R42 := R43 := R44 := R45 := nil
682 [-]: LOADK     R46 K13      ; R46 := 1
683 [-]: GETUPVAL  R47 U22      ; R47 := U22
684 [-]: LEN       R47 R47      ; R47 := # R47
685 [-]: LOADK     R48 K13      ; R48 := 1
686 [-]: FORPREP   R46 794      ; R46 -= R48; PC := 794
687 [-]: GETUPVAL  R50 U22      ; R50 := U22
688 [-]: GETTABLE  R42 R50 R49  ; R42 := R50[R49]
689 [-]: GETGLOBAL R50 K59      ; R50 := 0x400E7765
690 [-]: GETTABLE  R51 R42 K85  ; R51 := R42["Instance"]
691 [-]: CALL      R50 2 2      ; R50 := R50(R51)
692 [-]: TEST      R50 1        ; if R50 then PC := 794
693 [-]: JMP       794          ; PC := 794
694 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["IsShortcut"]
695 [-]: TEST      R50 1        ; if R50 then PC := 700
696 [-]: JMP       700          ; PC := 700
697 [-]: GETTABLE  R50 R42 K87  ; R50 := R42["IsJunction"]
698 [-]: TEST      R50 0        ; if not R50 then PC := 752
699 [-]: JMP       752          ; PC := 752
700 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["IsShortcut"]
701 [-]: TEST      R50 0        ; if not R50 then PC := 732
702 [-]: JMP       732          ; PC := 732
703 [-]: GETUPVAL  R50 U23      ; R50 := U23
704 [-]: GETTABLE  R51 R42 K88  ; R51 := R42["NodeA"]
705 [-]: GETTABLE  R51 R51 K49  ; R51 := R51["position"]
706 [-]: GETTABLE  R52 R42 K89  ; R52 := R42["controlPointA"]
707 [-]: GETTABLE  R52 R52 K49  ; R52 := R52["position"]
708 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
709 [-]: MOVE      R43 R50      ; R43 := R50
710 [-]: GETGLOBAL R50 K27      ; R50 := mMovie
711 [-]: SELF      R50 R50 K35  ; R51 := R50; R50 := R50["0x445651FB"]
712 [-]: GETTABLE  R52 R42 K88  ; R52 := R42["NodeA"]
713 [-]: GETTABLE  R52 R52 K74  ; R52 := R52["nodeIndex"]
714 [-]: LOADK     R53 K90      ; R53 := "_rotation"
715 [-]: MOVE      R54 R43      ; R54 := R43
716 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
717 [-]: GETUPVAL  R50 U23      ; R50 := U23
718 [-]: GETTABLE  R51 R42 K91  ; R51 := R42["NodeB"]
719 [-]: GETTABLE  R51 R51 K49  ; R51 := R51["position"]
720 [-]: GETTABLE  R52 R42 K92  ; R52 := R42["controlPointB"]
721 [-]: GETTABLE  R52 R52 K49  ; R52 := R52["position"]
722 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
723 [-]: MOVE      R43 R50      ; R43 := R50
724 [-]: GETGLOBAL R50 K27      ; R50 := mMovie
725 [-]: SELF      R50 R50 K35  ; R51 := R50; R50 := R50["0x445651FB"]
726 [-]: GETTABLE  R52 R42 K91  ; R52 := R42["NodeB"]
727 [-]: GETTABLE  R52 R52 K74  ; R52 := R52["nodeIndex"]
728 [-]: LOADK     R53 K90      ; R53 := "_rotation"
729 [-]: MOVE      R54 R43      ; R54 := R43
730 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
731 [-]: JMP       752          ; PC := 752
732 [-]: GETTABLE  R50 R42 K88  ; R50 := R42["NodeA"]
733 [-]: GETTABLE  R50 R50 K93  ; R50 := R50["isJunction"]
734 [-]: TEST      R50 0        ; if not R50 then PC := 739
735 [-]: JMP       739          ; PC := 739
736 [-]: GETTABLE  R44 R42 K88  ; R44 := R42["NodeA"]
737 [-]: GETTABLE  R45 R42 K91  ; R45 := R42["NodeB"]
738 [-]: JMP       741          ; PC := 741
739 [-]: GETTABLE  R44 R42 K91  ; R44 := R42["NodeB"]
740 [-]: GETTABLE  R45 R42 K88  ; R45 := R42["NodeA"]
741 [-]: GETUPVAL  R50 U23      ; R50 := U23
742 [-]: GETTABLE  R51 R44 K49  ; R51 := R44["position"]
743 [-]: GETTABLE  R52 R45 K49  ; R52 := R45["position"]
744 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
745 [-]: MOVE      R43 R50      ; R43 := R50
746 [-]: GETGLOBAL R50 K27      ; R50 := mMovie
747 [-]: SELF      R50 R50 K35  ; R51 := R50; R50 := R50["0x445651FB"]
748 [-]: GETTABLE  R52 R44 K74  ; R52 := R44["nodeIndex"]
749 [-]: LOADK     R53 K90      ; R53 := "_rotation"
750 [-]: MOVE      R54 R43      ; R54 := R43
751 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
752 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["IsShortcut"]
753 [-]: TEST      R50 0        ; if not R50 then PC := 783
754 [-]: JMP       783          ; PC := 783
755 [-]: GETTABLE  R50 R42 K88  ; R50 := R42["NodeA"]
756 [-]: GETTABLE  R50 R50 K48  ; R50 := R50["radialSector"]
757 [-]: GETTABLE  R50 R50 K58  ; R50 := R50["region"]
758 [-]: EQ        1 R50 R7     ; if R50 == R7 then PC := 765
759 [-]: JMP       765          ; PC := 765
760 [-]: GETTABLE  R50 R42 K91  ; R50 := R42["NodeB"]
761 [-]: GETTABLE  R50 R50 K48  ; R50 := R50["radialSector"]
762 [-]: GETTABLE  R50 R50 K58  ; R50 := R50["region"]
763 [-]: EQ        0 R50 R7     ; if R50 ~= R7 then PC := 783
764 [-]: JMP       783          ; PC := 783
765 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["Instance"]
766 [-]: SELF      R50 R50 K94  ; R51 := R50; R50 := R50["0xD124E361"]
767 [-]: GETUPVAL  R52 U24      ; R52 := U24
768 [-]: GETTABLE  R52 R52 K95  ; R52 := R52["ALPHA_ATTEN"]
769 [-]: GETGLOBAL R53 K23      ; R53 := 0x93034B55
770 [-]: GETUPVAL  R54 U16      ; R54 := U16
771 [-]: MOVE      R55 R22      ; R55 := R22
772 [-]: GETUPVAL  R56 U11      ; R56 := U11
773 [-]: SELF      R56 R56 K5   ; R57 := R56; R56 := R56["0xC4E503B0"]
774 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
775 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
776 [-]: DIV       R53 R53 K16  ; R53 := R53 / 100
777 [-]: GETUPVAL  R54 U8       ; R54 := U8
778 [-]: SELF      R54 R54 K5   ; R55 := R54; R54 := R54["0xC4E503B0"]
779 [-]: CALL      R54 2 2      ; R54 := R54(R55)
780 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
781 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
782 [-]: JMP       794          ; PC := 794
783 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["Instance"]
784 [-]: SELF      R50 R50 K94  ; R51 := R50; R50 := R50["0xD124E361"]
785 [-]: GETUPVAL  R52 U24      ; R52 := U24
786 [-]: GETTABLE  R52 R52 K95  ; R52 := R52["ALPHA_ATTEN"]
787 [-]: GETUPVAL  R53 U16      ; R53 := U16
788 [-]: DIV       R53 R53 K16  ; R53 := R53 / 100
789 [-]: GETUPVAL  R54 U8       ; R54 := U8
790 [-]: SELF      R54 R54 K5   ; R55 := R54; R54 := R54["0xC4E503B0"]
791 [-]: CALL      R54 2 2      ; R54 := R54(R55)
792 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
793 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
794 [-]: FORLOOP   R46 687      ; R46 += R48; if R46 <= R47 then begin PC := 687; R49 := R46 end
795 [-]: MOVE      R14 R2       ; R14 := R2
796 [-]: GETGLOBAL R50 K18      ; R50 := 0x6374FD98
797 [-]: MOVE      R51 R14      ; R51 := R14
798 [-]: GETUPVAL  R52 U14      ; R52 := U14
799 [-]: GETTABLE  R52 R52 K19  ; R52 := R52["LAYER_1_RANGE"]
800 [-]: GETTABLE  R52 R52 K20  ; R52 := R52["minValue"]
801 [-]: GETUPVAL  R53 U14      ; R53 := U14
802 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["LAYER_1_RANGE"]
803 [-]: GETTABLE  R53 R53 K21  ; R53 := R53["maxValue"]
804 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
805 [-]: MOVE      R14 R50      ; R14 := R50
806 [-]: GETGLOBAL R50 K23      ; R50 := 0x93034B55
807 [-]: LOADK     R51 K96      ; R51 := 30
808 [-]: LOADK     R52 K32      ; R52 := 10
809 [-]: GETUPVAL  R53 U14      ; R53 := U14
810 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["LAYER_1_RANGE"]
811 [-]: SELF      R53 R53 K22  ; R54 := R53; R53 := R53["0x3B43F25"]
812 [-]: MOVE      R55 R14      ; R55 := R14
813 [-]: CALL      R53 3 0      ; R53,... := R53(R54,R55)
814 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
815 [-]: LOADK     R51 K13      ; R51 := 1
816 [-]: GETUPVAL  R52 U25      ; R52 := U25
817 [-]: LEN       R52 R52      ; R52 := # R52
818 [-]: LOADK     R53 K13      ; R53 := 1
819 [-]: FORPREP   R51 837      ; R51 -= R53; PC := 837
820 [-]: MOVE      R13 R50      ; R13 := R50
821 [-]: GETGLOBAL R55 K59      ; R55 := 0x400E7765
822 [-]: GETUPVAL  R56 U25      ; R56 := U25
823 [-]: GETTABLE  R56 R56 R54  ; R56 := R56[R54]
824 [-]: CALL      R55 2 2      ; R55 := R55(R56)
825 [-]: TEST      R55 1        ; if R55 then PC := 837
826 [-]: JMP       837          ; PC := 837
827 [-]: GETUPVAL  R55 U25      ; R55 := U25
828 [-]: GETTABLE  R55 R55 R54  ; R55 := R55[R54]
829 [-]: SELF      R55 R55 K94  ; R56 := R55; R55 := R55["0xD124E361"]
830 [-]: GETGLOBAL R57 K97      ; R57 := Lotus_Game
831 [-]: GETTABLE  R57 R57 K98  ; R57 := R57["TINT_COLOR"]
832 [-]: LOADK     R58 K12      ; R58 := 0
833 [-]: LOADK     R59 K12      ; R59 := 0
834 [-]: LOADK     R60 K12      ; R60 := 0
835 [-]: DIV       R61 R13 K16  ; R61 := R13 / 100
836 [-]: CALL      R55 7 1      ; R55(R56,R57,R58,R59,R60,R61)
837 [-]: FORLOOP   R51 820      ; R51 += R53; if R51 <= R52 then begin PC := 820; R54 := R51 end
838 [-]: GETUPVAL  R55 U26      ; R55 := U26
839 [-]: GETTABLE  R55 R55 K99  ; R55 := R55["Active"]
840 [-]: TEST      R55 0        ; if not R55 then PC := 880
841 [-]: JMP       880          ; PC := 880
842 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
843 [-]: SELF      R55 R55 K28  ; R56 := R55; R55 := R55["0x3688C0F4"]
844 [-]: MOVE      R57 R15      ; R57 := R15
845 [-]: GETUPVAL  R58 U26      ; R58 := U26
846 [-]: GETTABLE  R58 R58 K100 ; R58 := R58["Position"]
847 [-]: MOVE      R59 R1       ; R59 := R1
848 [-]: GETUPVAL  R60 U20      ; R60 := U20
849 [-]: CALL      R55 6 1      ; R55(R56,R57,R58,R59,R60)
850 [-]: GETGLOBAL R55 K23      ; R55 := 0x93034B55
851 [-]: LOADK     R56 K101     ; R56 := 60
852 [-]: LOADK     R57 K16      ; R57 := 100
853 [-]: MOVE      R58 R30      ; R58 := R30
854 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
855 [-]: MOVE      R31 R55      ; R31 := R55
856 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
857 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
858 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
859 [-]: LOADK     R58 K103     ; R58 := "_x"
860 [-]: GETTABLE  R59 R15 K4   ; R59 := R15["x"]
861 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
862 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
863 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
864 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
865 [-]: LOADK     R58 K104     ; R58 := "_y"
866 [-]: GETTABLE  R59 R15 K6   ; R59 := R15["y"]
867 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
868 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
869 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
870 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
871 [-]: LOADK     R58 K36      ; R58 := "_xscale"
872 [-]: MOVE      R59 R31      ; R59 := R31
873 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
874 [-]: GETGLOBAL R55 K27      ; R55 := mMovie
875 [-]: SELF      R55 R55 K40  ; R56 := R55; R55 := R55["0x1C19D966"]
876 [-]: LOADK     R57 K102     ; R57 := "VoidTrader"
877 [-]: LOADK     R58 K37      ; R58 := "_yscale"
878 [-]: MOVE      R59 R31      ; R59 := R31
879 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
880 [-]: GETUPVAL  R55 U27      ; R55 := U27
881 [-]: CALL      R55 1 1      ; R55()
882 [-]: GETUPVAL  R55 U28      ; R55 := U28
883 [-]: CALL      R55 1 1      ; R55()
884 [-]: GETUPVAL  R55 U26      ; R55 := U26
885 [-]: GETTABLE  R55 R55 K99  ; R55 := R55["Active"]
886 [-]: TEST      R55 0        ; if not R55 then PC := 908
887 [-]: JMP       908          ; PC := 908
888 [-]: GETGLOBAL R55 K105     ; R55 := 0x41AF6EE8
889 [-]: CALL      R55 1 2      ; R55 := R55()
890 [-]: GETUPVAL  R56 U26      ; R56 := U26
891 [-]: GETTABLE  R56 R56 K107 ; R56 := R56["Expiry"]
892 [-]: SETTABLE  R55 K106 R56 ; R55["sec"] := R56
893 [-]: GETGLOBAL R56 K108     ; R56 := Engine
894 [-]: GETTABLE  R56 R56 K109 ; R56 := R56["0xD09D7910"]
895 [-]: MOVE      R57 R55      ; R57 := R55
896 [-]: CALL      R56 2 2      ; R56 := R56(R57)
897 [-]: LE        0 R56 K12    ; if R56 > 0 then PC := 908
898 [-]: JMP       908          ; PC := 908
899 [-]: GETUPVAL  R57 U26      ; R57 := U26
900 [-]: SETTABLE  R57 K99 K1   ; R57["Active"] := "0x0"
901 [-]: GETGLOBAL R57 K27      ; R57 := mMovie
902 [-]: SELF      R57 R57 K40  ; R58 := R57; R57 := R57["0x1C19D966"]
903 [-]: LOADK     R59 K102     ; R59 := "VoidTrader"
904 [-]: LOADK     R60 K110     ; R60 := "_visible"
905 [-]: GETUPVAL  R61 U26      ; R61 := U26
906 [-]: GETTABLE  R61 R61 K99  ; R61 := R61["Active"]
907 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
908 [-]: GETGLOBAL R57 K59      ; R57 := 0x400E7765
909 [-]: GETUPVAL  R58 U29      ; R58 := U29
910 [-]: GETTABLE  R58 R58 K10  ; R58 := R58["Region"]
911 [-]: CALL      R57 2 2      ; R57 := R57(R58)
912 [-]: TEST      R57 1        ; if R57 then PC := 1123
913 [-]: JMP       1123         ; PC := 1123
914 [-]: GETGLOBAL R57 K18      ; R57 := 0x6374FD98
915 [-]: MOVE      R58 R2       ; R58 := R2
916 [-]: GETUPVAL  R59 U14      ; R59 := U14
917 [-]: GETTABLE  R59 R59 K39  ; R59 := R59["LAYER_2_RANGE"]
918 [-]: GETTABLE  R59 R59 K20  ; R59 := R59["minValue"]
919 [-]: GETUPVAL  R60 U14      ; R60 := U14
920 [-]: GETTABLE  R60 R60 K39  ; R60 := R60["LAYER_2_RANGE"]
921 [-]: GETTABLE  R60 R60 K21  ; R60 := R60["maxValue"]
922 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
923 [-]: MOVE      R2 R57       ; R2 := R57
924 [-]: GETUPVAL  R57 U14      ; R57 := U14
925 [-]: GETTABLE  R57 R57 K39  ; R57 := R57["LAYER_2_RANGE"]
926 [-]: SELF      R57 R57 K22  ; R58 := R57; R57 := R57["0x3B43F25"]
927 [-]: MOVE      R59 R2       ; R59 := R2
928 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
929 [-]: LOADNIL   R58 R59      ; R58 := R59 := nil
930 [-]: GETGLOBAL R60 K111     ; R60 := 0xECFDD17
931 [-]: GETUPVAL  R61 U29      ; R61 := U29
932 [-]: GETTABLE  R61 R61 K41  ; R61 := R61["Nodes"]
933 [-]: CALL      R60 2 4      ; R60,R61,R62 := R60(R61)
934 [-]: JMP       1099         ; PC := 1099
935 [-]: GETTABLE  R65 R64 K48  ; R65 := R64["radialSector"]
936 [-]: GETTABLE  R66 R64 K49  ; R66 := R64["position"]
937 [-]: GETGLOBAL R67 K27      ; R67 := mMovie
938 [-]: SELF      R67 R67 K28  ; R68 := R67; R67 := R67["0x3688C0F4"]
939 [-]: MOVE      R69 R15      ; R69 := R15
940 [-]: MOVE      R70 R66      ; R70 := R66
941 [-]: MOVE      R71 R1       ; R71 := R1
942 [-]: GETUPVAL  R72 U20      ; R72 := U20
943 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
944 [-]: GETGLOBAL R67 K27      ; R67 := mMovie
945 [-]: SELF      R67 R67 K30  ; R68 := R67; R67 := R67["0x4717530F"]
946 [-]: GETTABLE  R69 R64 K31  ; R69 := R64["memberIndex"]
947 [-]: GETTABLE  R70 R15 K4   ; R70 := R15["x"]
948 [-]: GETTABLE  R71 R15 K6   ; R71 := R15["y"]
949 [-]: CALL      R67 5 1      ; R67(R68,R69,R70,R71)
950 [-]: GETGLOBAL R67 K23      ; R67 := 0x93034B55
951 [-]: LOADK     R68 K50      ; R68 := 20
952 [-]: LOADK     R69 K26      ; R69 := 50
953 [-]: MOVE      R70 R57      ; R70 := R57
954 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
955 [-]: GETTABLE  R68 R64 K51  ; R68 := R64["isSurfaceNode"]
956 [-]: TEST      R68 0        ; if not R68 then PC := 1068
957 [-]: JMP       1068         ; PC := 1068
958 [-]: LOADK     R58 K16      ; R58 := 100
959 [-]: GETTABLE  R59 R66 K52  ; R59 := R66["z"]
960 [-]: MUL       R59 R59 K32  ; R59 := R59 * 10
961 [-]: LE        0 K12 R59    ; if 0 > R59 then PC := 978
962 [-]: JMP       978          ; PC := 978
963 [-]: GETGLOBAL R68 K23      ; R68 := 0x93034B55
964 [-]: LOADK     R69 K53      ; R69 := 75
965 [-]: LOADK     R70 K26      ; R70 := 50
966 [-]: GETGLOBAL R71 K18      ; R71 := 0x6374FD98
967 [-]: GETGLOBAL R72 K54      ; R72 := math
968 [-]: GETTABLE  R72 R72 K55  ; R72 := R72["0xD6F2D811"]
969 [-]: MOVE      R73 R59      ; R73 := R59
970 [-]: LOADK     R74 K56      ; R74 := 3
971 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
972 [-]: LOADK     R73 K12      ; R73 := 0
973 [-]: LOADK     R74 K13      ; R74 := 1
974 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
975 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
976 [-]: MOVE      R58 R68      ; R58 := R68
977 [-]: JMP       995          ; PC := 995
978 [-]: GETGLOBAL R68 K23      ; R68 := 0x93034B55
979 [-]: LOADK     R69 K53      ; R69 := 75
980 [-]: LOADK     R70 K16      ; R70 := 100
981 [-]: GETGLOBAL R71 K18      ; R71 := 0x6374FD98
982 [-]: GETGLOBAL R72 K54      ; R72 := math
983 [-]: GETTABLE  R72 R72 K55  ; R72 := R72["0xD6F2D811"]
984 [-]: GETGLOBAL R73 K54      ; R73 := math
985 [-]: GETTABLE  R73 R73 K57  ; R73 := R73["0xF93F7CC8"]
986 [-]: MOVE      R74 R59      ; R74 := R59
987 [-]: CALL      R73 2 2      ; R73 := R73(R74)
988 [-]: LOADK     R74 K56      ; R74 := 3
989 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
990 [-]: LOADK     R73 K12      ; R73 := 0
991 [-]: LOADK     R74 K13      ; R74 := 1
992 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
993 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
994 [-]: MOVE      R58 R68      ; R58 := R68
995 [-]: GETUPVAL  R68 U21      ; R68 := U21
996 [-]: GETTABLE  R69 R65 K58  ; R69 := R65["region"]
997 [-]: ADD       R69 R69 K13  ; R69 := R69 + 1
998 [-]: GETTABLE  R68 R68 R69  ; R68 := R68[R69]
999 [-]: GETGLOBAL R69 K59      ; R69 := 0x400E7765
1000 [-]: MOVE      R70 R68      ; R70 := R68
1001 [-]: CALL      R69 2 2      ; R69 := R69(R70)
1002 [-]: TEST      R69 1        ; if R69 then PC := 1028
1003 [-]: JMP       1028         ; PC := 1028
1004 [-]: SELF      R69 R68 K60  ; R70 := R68; R69 := R68["0x8EEB099D"]
1005 [-]: MOVE      R71 R16      ; R71 := R16
1006 [-]: CALL      R69 3 1      ; R69(R70,R71)
1007 [-]: GETGLOBAL R69 K61      ; R69 := 0x518098BD
1008 [-]: MOVE      R70 R18      ; R70 := R18
1009 [-]: MOVE      R71 R66      ; R71 := R66
1010 [-]: MOVE      R72 R16      ; R72 := R16
1011 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1012 [-]: GETGLOBAL R69 K62      ; R69 := 0x20F748B4
1013 [-]: MOVE      R70 R17      ; R70 := R17
1014 [-]: MOVE      R71 R1       ; R71 := R1
1015 [-]: MOVE      R72 R18      ; R72 := R18
1016 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1017 [-]: GETTABLE  R69 R17 K63  ; R69 := R17["heading"]
1018 [-]: UNM       R69 R69      ; R69 := - R69
1019 [-]: SETTABLE  R17 K63 R69  ; R17["heading"] := R69
1020 [-]: GETGLOBAL R69 K18      ; R69 := 0x6374FD98
1021 [-]: GETTABLE  R70 R17 K64  ; R70 := R17["pitch"]
1022 [-]: MUL       R70 R70 K65  ; R70 := R70 * 0.75
1023 [-]: LOADK     R71 K66      ; R71 := -75
1024 [-]: LOADK     R72 K53      ; R72 := 75
1025 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1026 [-]: SETTABLE  R17 K64 R69  ; R17["pitch"] := R69
1027 [-]: JMP       1032         ; PC := 1032
1028 [-]: NEWTABLE  R69 0 2      ; R69 := {}
1029 [-]: SETTABLE  R69 K63 K12  ; R69["heading"] := 0
1030 [-]: SETTABLE  R69 K64 K12  ; R69["pitch"] := 0
1031 [-]: MOVE      R17 R69      ; R17 := R69
1032 [-]: GETTABLE  R69 R64 K67  ; R69 := R64["visibleLabel"]
1033 [-]: TEST      R69 1        ; if R69 then PC := 1053
1034 [-]: JMP       1053         ; PC := 1053
1035 [-]: GETTABLE  R69 R64 K68  ; R69 := R64["isShortcut"]
1036 [-]: TEST      R69 1        ; if R69 then PC := 1053
1037 [-]: JMP       1053         ; PC := 1053
1038 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1039 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1040 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1041 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1042 [-]: LOADK     R73 K72      ; R73 := "_heading"
1043 [-]: GETTABLE  R74 R17 K63  ; R74 := R17["heading"]
1044 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1045 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1046 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1047 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1048 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1049 [-]: LOADK     R73 K73      ; R73 := "_pitch"
1050 [-]: GETTABLE  R74 R17 K64  ; R74 := R17["pitch"]
1051 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1052 [-]: JMP       1087         ; PC := 1087
1053 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1054 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1055 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1056 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1057 [-]: LOADK     R73 K72      ; R73 := "_heading"
1058 [-]: GETTABLE  R74 R17 K63  ; R74 := R17["heading"]
1059 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1060 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1061 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1062 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1063 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1064 [-]: LOADK     R73 K73      ; R73 := "_pitch"
1065 [-]: GETTABLE  R74 R17 K64  ; R74 := R17["pitch"]
1066 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1067 [-]: JMP       1087         ; PC := 1087
1068 [-]: GETUPVAL  R69 U12      ; R69 := U12
1069 [-]: GETUPVAL  R70 U13      ; R70 := U13
1070 [-]: GETTABLE  R70 R70 K14  ; R70 := R70["READ_ONLY"]
1071 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 1087
1072 [-]: JMP       1087         ; PC := 1087
1073 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1074 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1075 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1076 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1077 [-]: LOADK     R73 K72      ; R73 := "_heading"
1078 [-]: LOADK     R74 K12      ; R74 := 0
1079 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1080 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1081 [-]: SELF      R69 R69 K69  ; R70 := R69; R69 := R69["0x880196A7"]
1082 [-]: GETTABLE  R71 R64 K70  ; R71 := R64["clipName"]
1083 [-]: LOADK     R72 K71      ; R72 := "Node.Container"
1084 [-]: LOADK     R73 K73      ; R73 := "_pitch"
1085 [-]: LOADK     R74 K12      ; R74 := 0
1086 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1087 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1088 [-]: SELF      R69 R69 K35  ; R70 := R69; R69 := R69["0x445651FB"]
1089 [-]: GETTABLE  R71 R64 K74  ; R71 := R64["nodeIndex"]
1090 [-]: LOADK     R72 K36      ; R72 := "_xscale"
1091 [-]: MOVE      R73 R67      ; R73 := R67
1092 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1093 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1094 [-]: SELF      R69 R69 K35  ; R70 := R69; R69 := R69["0x445651FB"]
1095 [-]: GETTABLE  R71 R64 K74  ; R71 := R64["nodeIndex"]
1096 [-]: LOADK     R72 K37      ; R72 := "_yscale"
1097 [-]: MOVE      R73 R67      ; R73 := R67
1098 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1099 [-]: TFORLOOP  R60 2        ; R63,R64 :=  R60(R61,R62); if R63 ~= nil then begin PC = 935; R62 := R63 end
1100 [-]: JMP       935          ; PC := 935
1101 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1102 [-]: SELF      R69 R69 K28  ; R70 := R69; R69 := R69["0x3688C0F4"]
1103 [-]: MOVE      R71 R15      ; R71 := R15
1104 [-]: GETUPVAL  R72 U15      ; R72 := U15
1105 [-]: GETUPVAL  R73 U29      ; R73 := U29
1106 [-]: GETTABLE  R73 R73 K112 ; R73 := R73["SubLabelIndex"]
1107 [-]: GETTABLE  R72 R72 R73  ; R72 := R72[R73]
1108 [-]: GETTABLE  R72 R72 K29  ; R72 := R72["pos"]
1109 [-]: MOVE      R73 R1       ; R73 := R1
1110 [-]: MOVE      R74 R0       ; R74 := R0
1111 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1112 [-]: GETGLOBAL R69 K27      ; R69 := mMovie
1113 [-]: SELF      R69 R69 K30  ; R70 := R69; R69 := R69["0x4717530F"]
1114 [-]: GETUPVAL  R71 U15      ; R71 := U15
1115 [-]: GETUPVAL  R72 U29      ; R72 := U29
1116 [-]: GETTABLE  R72 R72 K112 ; R72 := R72["SubLabelIndex"]
1117 [-]: GETTABLE  R71 R71 R72  ; R71 := R71[R72]
1118 [-]: GETTABLE  R71 R71 K31  ; R71 := R71["memberIndex"]
1119 [-]: GETTABLE  R72 R15 K4   ; R72 := R15["x"]
1120 [-]: GETTABLE  R73 R15 K6   ; R73 := R15["y"]
1121 [-]: SUB       R73 R73 K32  ; R73 := R73 - 10
1122 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1123 [-]: GETUPVAL  R69 U6       ; R69 := U6
1124 [-]: GETTABLE  R69 R69 K8   ; R69 := R69["Node"]
1125 [-]: EQ        1 R69 K11    ; if R69 == nil then PC := 1267
1126 [-]: JMP       1267         ; PC := 1267
1127 [-]: GETUPVAL  R69 U6       ; R69 := U6
1128 [-]: GETTABLE  R69 R69 K8   ; R69 := R69["Node"]
1129 [-]: GETTABLE  R69 R69 K68  ; R69 := R69["isShortcut"]
1130 [-]: TEST      R69 1        ; if R69 then PC := 1267
1131 [-]: JMP       1267         ; PC := 1267
1132 [-]: GETUPVAL  R69 U6       ; R69 := U6
1133 [-]: GETTABLE  R69 R69 K8   ; R69 := R69["Node"]
1134 [-]: GETTABLE  R69 R69 K93  ; R69 := R69["isJunction"]
1135 [-]: TEST      R69 1        ; if R69 then PC := 1267
1136 [-]: JMP       1267         ; PC := 1267
1137 [-]: GETUPVAL  R69 U30      ; R69 := U30
1138 [-]: GETTABLE  R69 R69 K113 ; R69 := R69["0x69B983D"]
1139 [-]: GETGLOBAL R70 K27      ; R70 := mMovie
1140 [-]: GETUPVAL  R71 U6       ; R71 := U6
1141 [-]: GETTABLE  R71 R71 K8   ; R71 := R71["Node"]
1142 [-]: GETTABLE  R71 R71 K70  ; R71 := R71["clipName"]
1143 [-]: CALL      R69 3 3      ; R69,R70 := R69(R70,R71)
1144 [-]: LOADK     R71 K12      ; R71 := 0
1145 [-]: LOADNIL   R72 R72      ; R72 := nil
1146 [-]: GETGLOBAL R73 K27      ; R73 := mMovie
1147 [-]: SELF      R73 R73 K114 ; R74 := R73; R73 := R73["0xF3E132E0"]
1148 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1149 [-]: DIV       R73 R73 K34  ; R73 := R73 / 2
1150 [-]: LT        0 R73 R69    ; if R73 >= R69 then PC := 1155
1151 [-]: JMP       1155         ; PC := 1155
1152 [-]: SUB       R69 R69 K115 ; R69 := R69 - 475
1153 [-]: LOADK     R71 K116     ; R71 := -20
1154 [-]: JMP       1157         ; PC := 1157
1155 [-]: ADD       R69 R69 K96  ; R69 := R69 + 30
1156 [-]: LOADK     R71 K50      ; R71 := 20
1157 [-]: GETUPVAL  R73 U31      ; R73 := U31
1158 [-]: GETTABLE  R73 R73 K117 ; R73 := R73["BgHeight"]
1159 [-]: GETUPVAL  R74 U31      ; R74 := U31
1160 [-]: GETTABLE  R74 R74 K118 ; R74 := R74["NodeSelectionOpen"]
1161 [-]: TEST      R74 0        ; if not R74 then PC := 1174
1162 [-]: JMP       1174         ; PC := 1174
1163 [-]: GETUPVAL  R74 U31      ; R74 := U31
1164 [-]: GETTABLE  R74 R74 K119 ; R74 := R74["mBaseHeight"]
1165 [-]: GETUPVAL  R75 U31      ; R75 := U31
1166 [-]: GETTABLE  R75 R75 K120 ; R75 := R75["NodeMissionList"]
1167 [-]: SELF      R75 R75 K121 ; R76 := R75; R75 := R75["0xC51A5C9D"]
1168 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1169 [-]: GETUPVAL  R76 U31      ; R76 := U31
1170 [-]: GETTABLE  R76 R76 K120 ; R76 := R76["NodeMissionList"]
1171 [-]: GETTABLE  R76 R76 K122 ; R76 := R76["mForcedVerticalSeparation"]
1172 [-]: MUL       R75 R75 R76  ; R75 := R75 * R76
1173 [-]: ADD       R73 R74 R75  ; R73 := R74 + R75
1174 [-]: GETGLOBAL R74 K27      ; R74 := mMovie
1175 [-]: SELF      R74 R74 K123 ; R75 := R74; R74 := R74["0x68998E7D"]
1176 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1177 [-]: MUL       R74 R74 K124 ; R74 := R74 * 0.94999998807907
1178 [-]: SUB       R74 R74 R73  ; R74 := R74 - R73
1179 [-]: GETGLOBAL R75 K27      ; R75 := mMovie
1180 [-]: SELF      R75 R75 K123 ; R76 := R75; R75 := R75["0x68998E7D"]
1181 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1182 [-]: DIV       R75 R75 K34  ; R75 := R75 / 2
1183 [-]: LT        0 R75 R70    ; if R75 >= R70 then PC := 1189
1184 [-]: JMP       1189         ; PC := 1189
1185 [-]: SUB       R75 R70 R73  ; R75 := R70 - R73
1186 [-]: ADD       R70 R75 K125 ; R70 := R75 + 70
1187 [-]: LOADK     R72 K116     ; R72 := -20
1188 [-]: JMP       1196         ; PC := 1196
1189 [-]: GETGLOBAL R75 K54      ; R75 := math
1190 [-]: GETTABLE  R75 R75 K126 ; R75 := R75["0x65F9712A"]
1191 [-]: ADD       R76 R70 K32  ; R76 := R70 + 10
1192 [-]: MOVE      R77 R74      ; R77 := R74
1193 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
1194 [-]: MOVE      R70 R75      ; R70 := R75
1195 [-]: LOADK     R72 K50      ; R72 := 20
1196 [-]: GETGLOBAL R75 K27      ; R75 := mMovie
1197 [-]: SELF      R75 R75 K40  ; R76 := R75; R75 := R75["0x1C19D966"]
1198 [-]: LOADK     R77 K127     ; R77 := "InfoTip"
1199 [-]: LOADK     R78 K103     ; R78 := "_x"
1200 [-]: MOVE      R79 R69      ; R79 := R69
1201 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1202 [-]: GETUPVAL  R75 U31      ; R75 := U31
1203 [-]: GETTABLE  R75 R75 K128 ; R75 := R75["mSmoothY"]
1204 [-]: SELF      R75 R75 K5   ; R76 := R75; R75 := R75["0xC4E503B0"]
1205 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1206 [-]: EQ        0 R75 K129   ; if R75 ~= -1 then PC := 1214
1207 [-]: JMP       1214         ; PC := 1214
1208 [-]: GETUPVAL  R75 U31      ; R75 := U31
1209 [-]: GETTABLE  R75 R75 K128 ; R75 := R75["mSmoothY"]
1210 [-]: SELF      R75 R75 K130 ; R76 := R75; R75 := R75["0x5A7A6B1"]
1211 [-]: MOVE      R77 R70      ; R77 := R70
1212 [-]: CALL      R75 3 1      ; R75(R76,R77)
1213 [-]: JMP       1219         ; PC := 1219
1214 [-]: GETUPVAL  R75 U31      ; R75 := U31
1215 [-]: GETTABLE  R75 R75 K128 ; R75 := R75["mSmoothY"]
1216 [-]: SELF      R75 R75 K131 ; R76 := R75; R75 := R75["0xDB349344"]
1217 [-]: MOVE      R77 R70      ; R77 := R70
1218 [-]: CALL      R75 3 1      ; R75(R76,R77)
1219 [-]: GETUPVAL  R75 U31      ; R75 := U31
1220 [-]: GETTABLE  R75 R75 K128 ; R75 := R75["mSmoothY"]
1221 [-]: SELF      R75 R75 K132 ; R76 := R75; R75 := R75["0x8C7099E9"]
1222 [-]: GETGLOBAL R77 K133     ; R77 := 0x4CDEF9FF
1223 [-]: CALL      R77 1 0      ; R77,... := R77()
1224 [-]: CALL      R75 0 1      ; R75(R76,...)
1225 [-]: GETGLOBAL R75 K27      ; R75 := mMovie
1226 [-]: SELF      R75 R75 K40  ; R76 := R75; R75 := R75["0x1C19D966"]
1227 [-]: LOADK     R77 K127     ; R77 := "InfoTip"
1228 [-]: LOADK     R78 K104     ; R78 := "_y"
1229 [-]: GETUPVAL  R79 U31      ; R79 := U31
1230 [-]: GETTABLE  R79 R79 K128 ; R79 := R79["mSmoothY"]
1231 [-]: SELF      R79 R79 K5   ; R80 := R79; R79 := R79["0xC4E503B0"]
1232 [-]: CALL      R79 2 0      ; R79,... := R79(R80)
1233 [-]: CALL      R75 0 1      ; R75(R76,...)
1234 [-]: GETGLOBAL R75 K27      ; R75 := mMovie
1235 [-]: SELF      R75 R75 K35  ; R76 := R75; R75 := R75["0x445651FB"]
1236 [-]: GETUPVAL  R77 U6       ; R77 := U6
1237 [-]: GETTABLE  R77 R77 K8   ; R77 := R77["Node"]
1238 [-]: GETTABLE  R77 R77 K80  ; R77 := R77["labelIndex"]
1239 [-]: LOADK     R78 K38      ; R78 := "_alpha"
1240 [-]: LOADK     R79 K16      ; R79 := 100
1241 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1242 [-]: GETGLOBAL R75 K59      ; R75 := 0x400E7765
1243 [-]: GETUPVAL  R76 U32      ; R76 := U32
1244 [-]: GETTABLE  R76 R76 K134 ; R76 := R76["Projector"]
1245 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1246 [-]: TEST      R75 0        ; if not R75 then PC := 1267
1247 [-]: JMP       1267         ; PC := 1267
1248 [-]: GETUPVAL  R75 U32      ; R75 := U32
1249 [-]: GETGLOBAL R76 K135     ; R76 := gBackgroundRegion
1250 [-]: SELF      R76 R76 K136 ; R77 := R76; R76 := R76["0xBDD34CC6"]
1251 [-]: GETGLOBAL R78 K137     ; R78 := projectorEffect
1252 [-]: GETUPVAL  R79 U6       ; R79 := U6
1253 [-]: GETTABLE  R79 R79 K8   ; R79 := R79["Node"]
1254 [-]: GETTABLE  R79 R79 K49  ; R79 := R79["position"]
1255 [-]: GETGLOBAL R80 K15      ; R80 := 0x1E4F6281
1256 [-]: MOVE      R81 R71      ; R81 := R71
1257 [-]: MOVE      R82 R72      ; R82 := R72
1258 [-]: LOADK     R83 K12      ; R83 := 0
1259 [-]: CALL      R80 4 0      ; R80,... := R80(R81,R82,R83)
1260 [-]: CALL      R76 0 2      ; R76 := R76(R77,...)
1261 [-]: SETTABLE  R75 K134 R76 ; R75["Projector"] := R76
1262 [-]: GETUPVAL  R75 U32      ; R75 := U32
1263 [-]: GETTABLE  R75 R75 K134 ; R75 := R75["Projector"]
1264 [-]: SELF      R75 R75 K138 ; R76 := R75; R75 := R75["0x6A7E5F92"]
1265 [-]: LOADK     R77 K139     ; R77 := 0.125
1266 [-]: CALL      R75 3 1      ; R75(R76,R77)
1267 [-]: GETUPVAL  R75 U32      ; R75 := U32
1268 [-]: GETTABLE  R75 R75 K140 ; R75 := R75["Playing"]
1269 [-]: TEST      R75 0        ; if not R75 then PC := 1277
1270 [-]: JMP       1277         ; PC := 1277
1271 [-]: GETUPVAL  R75 U6       ; R75 := U6
1272 [-]: GETTABLE  R75 R75 K8   ; R75 := R75["Node"]
1273 [-]: EQ        0 R75 K11    ; if R75 ~= nil then PC := 1277
1274 [-]: JMP       1277         ; PC := 1277
1275 [-]: GETUPVAL  R75 U33      ; R75 := U33
1276 [-]: CALL      R75 1 1      ; R75()
1277 [-]: GETUPVAL  R75 U34      ; R75 := U34
1278 [-]: CALL      R75 1 1      ; R75()
1279 [-]: GETUPVAL  R75 U35      ; R75 := U35
1280 [-]: GETGLOBAL R76 K75      ; R76 := _T
1281 [-]: GETTABLE  R76 R76 K141 ; R76 := R76["REGION_ID_FORTRESS"]
1282 [-]: GETTABLE  R75 R75 R76  ; R75 := R75[R76]
1283 [-]: EQ        1 R75 K142   ; if R75 == "0x1" then PC := 1287
1284 [-]: JMP       1287         ; PC := 1287
1285 [-]: GETUPVAL  R75 U36      ; R75 := U36
1286 [-]: CALL      R75 1 1      ; R75()
1287 [-]: GETUPVAL  R75 U37      ; R75 := U37
1288 [-]: GETTABLE  R75 R75 K143 ; R75 := R75["Prop"]
1289 [-]: SELF      R75 R75 K5   ; R76 := R75; R75 := R75["0xC4E503B0"]
1290 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1291 [-]: GETUPVAL  R76 U37      ; R76 := U37
1292 [-]: GETTABLE  R76 R76 K143 ; R76 := R76["Prop"]
1293 [-]: SELF      R76 R76 K132 ; R77 := R76; R76 := R76["0x8C7099E9"]
1294 [-]: GETGLOBAL R78 K133     ; R78 := 0x4CDEF9FF
1295 [-]: CALL      R78 1 0      ; R78,... := R78()
1296 [-]: CALL      R76 0 1      ; R76(R77,...)
1297 [-]: GETGLOBAL R76 K54      ; R76 := math
1298 [-]: GETTABLE  R76 R76 K57  ; R76 := R76["0xF93F7CC8"]
1299 [-]: GETUPVAL  R77 U37      ; R77 := U37
1300 [-]: GETTABLE  R77 R77 K143 ; R77 := R77["Prop"]
1301 [-]: GETTABLE  R77 R77 K144 ; R77 := R77["mTargetVal"]
1302 [-]: SUB       R77 R75 R77  ; R77 := R75 - R77
1303 [-]: CALL      R76 2 2      ; R76 := R76(R77)
1304 [-]: LT        1 K145 R76   ; if 0.0099999997764826 < R76 then PC := 1307
1305 [-]: JMP       1307         ; PC := 1307
1306 [-]: MOVE      R76 R0       ; R76 := R0
1307 [-]: MOVE      R76 R1       ; R76 := R1
1308 [-]: TEST      R76 0        ; if not R76 then PC := 1332
1309 [-]: JMP       1332         ; PC := 1332
1310 [-]: GETGLOBAL R77 K59      ; R77 := 0x400E7765
1311 [-]: GETUPVAL  R78 U38      ; R78 := U38
1312 [-]: CALL      R77 2 2      ; R77 := R77(R78)
1313 [-]: TEST      R77 1        ; if R77 then PC := 1332
1314 [-]: JMP       1332         ; PC := 1332
1315 [-]: GETUPVAL  R77 U39      ; R77 := U39
1316 [-]: GETTABLE  R77 R77 K146 ; R77 := R77["TransitioningOut"]
1317 [-]: TEST      R77 1        ; if R77 then PC := 1332
1318 [-]: JMP       1332         ; PC := 1332
1319 [-]: GETUPVAL  R77 U38      ; R77 := U38
1320 [-]: SELF      R77 R77 K83  ; R78 := R77; R77 := R77["0xEC183DDC"]
1321 [-]: GETGLOBAL R79 K147     ; R79 := 0xE0C881B4
1322 [-]: GETUPVAL  R80 U37      ; R80 := U37
1323 [-]: GETTABLE  R80 R80 K148 ; R80 := R80["Previous"]
1324 [-]: GETUPVAL  R81 U37      ; R81 := U37
1325 [-]: GETTABLE  R81 R81 K149 ; R81 := R81["Target"]
1326 [-]: GETUPVAL  R82 U37      ; R82 := U37
1327 [-]: GETTABLE  R82 R82 K143 ; R82 := R82["Prop"]
1328 [-]: SELF      R82 R82 K5   ; R83 := R82; R82 := R82["0xC4E503B0"]
1329 [-]: CALL      R82 2 0      ; R82,... := R82(R83)
1330 [-]: CALL      R79 0 0      ; R79,... := R79(R80,...)
1331 [-]: CALL      R77 0 1      ; R77(R78,...)
1332 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 6002
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 33
  3 [-]: JMP       33           ; PC := 33
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mControlDown"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 11 [-]: TEST      R0 0         ; if not R0 then PC := 33
 12 [-]: JMP       33           ; PC := 33
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0xB09F286F
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: GETUPVAL  R3 U4        ; R3 := U4
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: LT        0 K2 R1      ; if 0.10000000149012 >= R1 then PC := 33
 20 [-]: JMP       33           ; PC := 33
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 24 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD856231D"]
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1E436B2A"]
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: MOVE      R0 R4        ; R0 := R4
 33 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 6014
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["IsVisible"] := R0
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
  5 [-]: LOADK     R3 K3        ; R3 := "Reticle"
  6 [-]: LOADK     R4 K4        ; R4 := "_visible"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xF81722A2"]
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: LOADK     R4 K6        ; R4 := 48
 15 [-]: LOADK     R5 K7        ; R5 := 32
 16 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 17 [-]: LOADK     R3 K8        ; R3 := 1
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: LOADK     R5 K8        ; R5 := 1
 20 [-]: FORPREP   R3 48        ; R3 -= R5; PC := 48
 21 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 22 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 23 [-]: GETUPVAL  R9 U1        ; R9 := U1
 24 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 25 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 26 [-]: LOADK     R10 K11      ; R10 := "Btn"
 27 [-]: LOADK     R11 K12      ; R11 := "_width"
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 30 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 31 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 32 [-]: GETUPVAL  R9 U1        ; R9 := U1
 33 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 34 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 35 [-]: LOADK     R10 K11      ; R10 := "Btn"
 36 [-]: LOADK     R11 K13      ; R11 := "_height"
 37 [-]: MOVE      R12 R2       ; R12 := R2
 38 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 39 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 40 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 43 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 44 [-]: LOADK     R10 K14      ; R10 := "Name"
 45 [-]: LOADK     R11 K15      ; R11 := "enabled"
 46 [-]: MOVE      R12 R0       ; R12 := R0
 47 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 48 [-]: FORLOOP   R3 21        ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
 49 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 6026
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["JunctionTasks"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 44
  6 [-]: JMP       44           ; PC := 44
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["pos"]
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["x"]
 13 [-]: LT        1 R2 K5      ; if R2 < 0 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: GETGLOBAL R3 K6        ; R3 := _T
 18 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["radialSector"]
 19 [-]: SETTABLE  R3 K7 R4     ; R3["JunctionTasksUIRadialSector"] := R4
 20 [-]: GETGLOBAL R3 K6        ; R3 := _T
 21 [-]: SETTABLE  R3 K9 R1     ; R3["JunctionTasksInstant"] := R1
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETGLOBAL R4 K10       ; R4 := gFlashMgr
 24 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x24FF386"]
 25 [-]: GETGLOBAL R6 K12       ; R6 := junctionTasksMovie
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: SETTABLE  R3 K1 R4     ; R3["JunctionTasks"] := R4
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["JunctionTasks"]
 30 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x163B749C"]
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: CALL      R3 3 1       ; R3(R4,R5)
 33 [-]: GETUPVAL  R3 U0        ; R3 := U0
 34 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["JunctionTasks"]
 35 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x458F27A9"]
 36 [-]: LOADK     R5 K15       ; R5 := "SetRightAligned"
 37 [-]: GETUPVAL  R6 U2        ; R6 := U2
 38 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["0xF81722A2"]
 39 [-]: MOVE      R7 R2        ; R7 := R2
 40 [-]: LOADK     R8 K17       ; R8 := "true"
 41 [-]: LOADK     R9 K18       ; R9 := "false"
 42 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 43 [-]: CALL      R3 0 1       ; R3(R4,...)
 44 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 6038
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MovieInst"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MovieInst"]
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K3        ; R2 := "ForceClose"
 11 [-]: LOADK     R3 K4        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: LOADK     R0 K5        ; R0 := 1
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: LEN       R1 R1        ; R1 := # R1
 16 [-]: LOADK     R2 K5        ; R2 := 1
 17 [-]: FORPREP   R0 50        ; R0 -= R2; PC := 50
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 20 [-]: GETTABLE  R5 R4 K6     ; R5 := R4["locked"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["forceHover"]
 24 [-]: JMP       27           ; PC := 27
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 28 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x1C19D966"]
 29 [-]: GETTABLE  R8 R4 K10    ; R8 := R4["clipName"]
 30 [-]: LOADK     R9 K11       ; R9 := "enabled"
 31 [-]: TESTSET   R10 R5 0     ; if not R5 then PC := 49 else R10 := R5
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETGLOBAL R10 K12      ; R10 := _T
 34 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 35 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: GETTABLE  R10 R4 K15   ; R10 := R4["radialSector"]
 38 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETGLOBAL R10 K12      ; R10 := _T
 41 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 42 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["baseNodeName"]
 43 [-]: GETTABLE  R11 R4 K15   ; R11 := R4["radialSector"]
 44 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["name"]
 45 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: MOVE      R10 R0       ; R10 := R0
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 50 [-]: FORLOOP   R0 18        ; R0 += R2; if R0 <= R1 then begin PC := 18; R3 := R0 end
 51 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 6051
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xCD4B74A5"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: GETGLOBAL R5 K1        ; R5 := 0x221C9700
  6 [-]: LOADK     R6 K2        ; R6 := 0
  7 [-]: LOADK     R7 K2        ; R7 := 0
  8 [-]: LOADK     R8 K3        ; R8 := 1
  9 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 10 [-]: GETUPVAL  R6 U1        ; R6 := U1
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["voidDecoData"]
 12 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[1]
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["pos"]
 14 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["z"]
 15 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 16 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 17 [-]: LOADK     R4 K3        ; R4 := 1
 18 [-]: GETUPVAL  R5 U1        ; R5 := U1
 19 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["voidDecoData"]
 20 [-]: LEN       R5 R5        ; R5 := # R5
 21 [-]: LOADK     R6 K3        ; R6 := 1
 22 [-]: FORPREP   R4 46        ; R4 -= R6; PC := 46
 23 [-]: GETUPVAL  R8 U1        ; R8 := U1
 24 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["voidDecoData"]
 25 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 26 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["BMin"]
 27 [-]: SUB       R8 R2 R8     ; R8 := R2 - R8
 28 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["x"]
 29 [-]: GETUPVAL  R10 U1       ; R10 := U1
 30 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["voidDecoData"]
 31 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 32 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["BScale"]
 33 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["x"]
 34 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 35 [-]: SUB       R9 K3 R9     ; R9 := 1 - R9
 36 [-]: SETTABLE  R8 K8 R9     ; R8["x"] := R9
 37 [-]: GETTABLE  R9 R8 K10    ; R9 := R8["y"]
 38 [-]: GETUPVAL  R10 U1       ; R10 := U1
 39 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["voidDecoData"]
 40 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 41 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["BScale"]
 42 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["y"]
 43 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 44 [-]: SETTABLE  R8 K10 R9    ; R8["y"] := R9
 45 [-]: SETTABLE  R3 R7 R8     ; R3[R7] := R8
 46 [-]: FORLOOP   R4 23        ; R4 += R6; if R4 <= R5 then begin PC := 23; R7 := R4 end
 47 [-]: RETURN    R3 2         ; return R3
 48 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 6065
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: LOADK     R5 K0        ; R5 := 1
  2 [-]: LEN       R6 R0        ; R6 := # R0
  3 [-]: LOADK     R7 K0        ; R7 := 1
  4 [-]: FORPREP   R5 32        ; R5 -= R7; PC := 32
  5 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
  6 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["x"]
  7 [-]: GETTABLE  R10 R0 R8    ; R10 := R0[R8]
  8 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["y"]
  9 [-]: EQ        0 R8 K3      ; if R8 ~= 2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: UNM       R9 R9        ; R9 := - R9
 12 [-]: UNM       R10 R10      ; R10 := - R10
 13 [-]: JMP       15           ; PC := 15
 14 [-]: UNM       R9 R9        ; R9 := - R9
 15 [-]: GETUPVAL  R11 U0       ; R11 := U0
 16 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["voidDecos"]
 17 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
 18 [-]: SELF      R11 R11 K5   ; R12 := R11; R11 := R11["0xD124E361"]
 19 [-]: GETUPVAL  R13 U0       ; R13 := U0
 20 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["uvHoles"]
 21 [-]: GETTABLE  R13 R13 R1   ; R13 := R13[R1]
 22 [-]: MOVE      R14 R9       ; R14 := R9
 23 [-]: MOVE      R15 R10      ; R15 := R10
 24 [-]: GETGLOBAL R16 K7       ; R16 := 0x93034B55
 25 [-]: LOADK     R17 K8       ; R17 := 0.012500000186265
 26 [-]: LOADK     R18 K9       ; R18 := 0.050000000745058
 27 [-]: MOVE      R19 R2       ; R19 := R2
 28 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 29 [-]: MUL       R16 R16 R3   ; R16 := R16 * R3
 30 [-]: MOVE      R17 R4       ; R17 := R4
 31 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
 32 [-]: FORLOOP   R5 5         ; R5 += R7; if R5 <= R6 then begin PC := 5; R8 := R5 end
 33 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 6081
; #Upvalues:       55
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  77

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6306558E
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  4 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x80D6B1A"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8C7099E9"]
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: CALL      R1 3 1       ; R1(R2,R3)
 22 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["sky"]
 25 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Zone"]
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 29
 28 [-]: JMP       29           ; PC := 29
 29 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["voidDecos"]
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: TEST      R1 1         ; if R1 then PC := 300
 34 [-]: JMP       300          ; PC := 300
 35 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 36 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 0         ; if not R1 then PC := 300
 39 [-]: JMP       300          ; PC := 300
 40 [-]: GETGLOBAL R1 K9        ; R1 := 0x994A1A7
 41 [-]: GETUPVAL  R2 U3        ; R2 := U3
 42 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MIN_ZOOM"]
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MAX_ZOOM"]
 45 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 46 [-]: GETGLOBAL R2 K12       ; R2 := 0x6374FD98
 47 [-]: GETUPVAL  R3 U4        ; R3 := U4
 48 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mCurVal"]
 49 [-]: GETTABLE  R4 R1 K14    ; R4 := R1["minValue"]
 50 [-]: GETTABLE  R5 R1 K15    ; R5 := R1["maxValue"]
 51 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 52 [-]: SELF      R3 R1 K16    ; R4 := R1; R3 := R1["0x3B43F25"]
 53 [-]: MOVE      R5 R2        ; R5 := R2
 54 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 55 [-]: MOVE      R2 R3        ; R2 := R3
 56 [-]: MUL       R2 R2 R2     ; R2 := R2 * R2
 57 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 58 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x7C1F5A97"]
 59 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 60 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x6DA72501"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: GETGLOBAL R4 K18       ; R4 := 0x221C9700
 63 [-]: LOADK     R5 K19       ; R5 := 0
 64 [-]: LOADK     R6 K19       ; R6 := 0
 65 [-]: LOADK     R7 K19       ; R7 := 0
 66 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 67 [-]: SUB       R4 R4 R3     ; R4 := R4 - R3
 68 [-]: GETGLOBAL R5 K20       ; R5 := 0x458357BC
 69 [-]: MOVE      R6 R4        ; R6 := R4
 70 [-]: CALL      R5 2 1       ; R5(R6)
 71 [-]: GETUPVAL  R5 U2        ; R5 := U2
 72 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0xC34F8067"]
 73 [-]: MOVE      R6 R3        ; R6 := R3
 74 [-]: MOVE      R7 R4        ; R7 := R4
 75 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 76 [-]: LOADK     R6 K22       ; R6 := 1
 77 [-]: GETUPVAL  R7 U2        ; R7 := U2
 78 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["0x1A212F7"]
 79 [-]: MOVE      R8 R5        ; R8 := R5
 80 [-]: MOVE      R9 R6        ; R9 := R6
 81 [-]: MOVE      R10 R2       ; R10 := R2
 82 [-]: LOADK     R11 K24      ; R11 := 3
 83 [-]: LOADK     R12 K25      ; R12 := 0.029999999329448
 84 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 85 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
 86 [-]: GETUPVAL  R7 U5        ; R7 := U5
 87 [-]: TEST      R7 1         ; if R7 then PC := 144
 88 [-]: JMP       144          ; PC := 144
 89 [-]: LOADK     R7 K22       ; R7 := 1
 90 [-]: GETUPVAL  R8 U6        ; R8 := U6
 91 [-]: LEN       R8 R8        ; R8 := # R8
 92 [-]: LOADK     R9 K22       ; R9 := 1
 93 [-]: FORPREP   R7 142       ; R7 -= R9; PC := 142
 94 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 95 [-]: GETUPVAL  R12 U7       ; R12 := U7
 96 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 97 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 98 [-]: TEST      R11 1        ; if R11 then PC := 142
 99 [-]: JMP       142          ; PC := 142
100 [-]: GETUPVAL  R11 U7       ; R11 := U7
101 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
102 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11["0x8C1ACCEF"]
103 [-]: CALL      R11 2 2      ; R11 := R11(R12)
104 [-]: TEST      R11 0        ; if not R11 then PC := 142
105 [-]: JMP       142          ; PC := 142
106 [-]: GETGLOBAL R11 K27      ; R11 := string
107 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0xDE44F664"]
108 [-]: GETUPVAL  R12 U6       ; R12 := U6
109 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
110 [-]: GETTABLE  R12 R12 K29  ; R12 := R12["name"]
111 [-]: LOADK     R13 K30      ; R13 := "Space"
112 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
113 [-]: TEST      R11 1        ; if R11 then PC := 142
114 [-]: JMP       142          ; PC := 142
115 [-]: GETUPVAL  R11 U6       ; R11 := U6
116 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
117 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["pos"]
118 [-]: SUB       R4 R11 R3    ; R4 := R11 - R3
119 [-]: GETGLOBAL R11 K20      ; R11 := 0x458357BC
120 [-]: MOVE      R12 R4       ; R12 := R4
121 [-]: CALL      R11 2 1      ; R11(R12)
122 [-]: GETUPVAL  R11 U2       ; R11 := U2
123 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xC34F8067"]
124 [-]: MOVE      R12 R3       ; R12 := R3
125 [-]: MOVE      R13 R4       ; R13 := R4
126 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
127 [-]: MOVE      R5 R11       ; R5 := R11
128 [-]: GETUPVAL  R11 U2       ; R11 := U2
129 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["uvHoles"]
130 [-]: LEN       R11 R11      ; R11 := # R11
131 [-]: LE        0 R6 R11     ; if R6 > R11 then PC := 142
132 [-]: JMP       142          ; PC := 142
133 [-]: GETUPVAL  R11 U2       ; R11 := U2
134 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0x1A212F7"]
135 [-]: MOVE      R12 R5       ; R12 := R5
136 [-]: MOVE      R13 R6       ; R13 := R6
137 [-]: MOVE      R14 R2       ; R14 := R2
138 [-]: LOADK     R15 K33      ; R15 := 1.2999999523163
139 [-]: LOADK     R16 K34      ; R16 := 0.050000000745058
140 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
141 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
142 [-]: FORLOOP   R7 94        ; R7 += R9; if R7 <= R8 then begin PC := 94; R10 := R7 end
143 [-]: JMP       274          ; PC := 274
144 [-]: GETGLOBAL R11 K27      ; R11 := string
145 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0xDE44F664"]
146 [-]: GETUPVAL  R12 U5       ; R12 := U5
147 [-]: GETTABLE  R12 R12 K29  ; R12 := R12["name"]
148 [-]: LOADK     R13 K30      ; R13 := "Space"
149 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
150 [-]: TEST      R11 1        ; if R11 then PC := 178
151 [-]: JMP       178          ; PC := 178
152 [-]: GETUPVAL  R11 U5       ; R11 := U5
153 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["pos"]
154 [-]: SUB       R4 R11 R3    ; R4 := R11 - R3
155 [-]: GETGLOBAL R11 K20      ; R11 := 0x458357BC
156 [-]: MOVE      R12 R4       ; R12 := R4
157 [-]: CALL      R11 2 1      ; R11(R12)
158 [-]: GETUPVAL  R11 U2       ; R11 := U2
159 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xC34F8067"]
160 [-]: MOVE      R12 R3       ; R12 := R3
161 [-]: MOVE      R13 R4       ; R13 := R4
162 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
163 [-]: MOVE      R5 R11       ; R5 := R11
164 [-]: GETUPVAL  R11 U2       ; R11 := U2
165 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["uvHoles"]
166 [-]: LEN       R11 R11      ; R11 := # R11
167 [-]: LE        0 R6 R11     ; if R6 > R11 then PC := 178
168 [-]: JMP       178          ; PC := 178
169 [-]: GETUPVAL  R11 U2       ; R11 := U2
170 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0x1A212F7"]
171 [-]: MOVE      R12 R5       ; R12 := R5
172 [-]: MOVE      R13 R6       ; R13 := R6
173 [-]: MOVE      R14 R2       ; R14 := R2
174 [-]: LOADK     R15 K33      ; R15 := 1.2999999523163
175 [-]: LOADK     R16 K34      ; R16 := 0.050000000745058
176 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
177 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
178 [-]: LOADK     R11 K22      ; R11 := 1
179 [-]: GETUPVAL  R12 U8       ; R12 := U8
180 [-]: LEN       R12 R12      ; R12 := # R12
181 [-]: LOADK     R13 K22      ; R13 := 1
182 [-]: FORPREP   R11 273      ; R11 -= R13; PC := 273
183 [-]: GETUPVAL  R15 U8       ; R15 := U8
184 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
185 [-]: GETUPVAL  R16 U9       ; R16 := U9
186 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["0x96C3A0A7"]
187 [-]: GETTABLE  R17 R15 K36  ; R17 := R15["radialSector"]
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: TEST      R16 0        ; if not R16 then PC := 216
190 [-]: JMP       216          ; PC := 216
191 [-]: GETUPVAL  R16 U10      ; R16 := U10
192 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["SentientFx"]
193 [-]: GETTABLE  R16 R16 K22  ; R16 := R16[1]
194 [-]: EQ        1 R16 K38    ; if R16 == nil then PC := 204
195 [-]: JMP       204          ; PC := 204
196 [-]: GETGLOBAL R16 K1       ; R16 := 0x400E7765
197 [-]: GETUPVAL  R17 U10      ; R17 := U10
198 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["SentientFx"]
199 [-]: GETTABLE  R17 R17 K22  ; R17 := R17[1]
200 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["mInstance"]
201 [-]: CALL      R16 2 2      ; R16 := R16(R17)
202 [-]: TEST      R16 0        ; if not R16 then PC := 216
203 [-]: JMP       216          ; PC := 216
204 [-]: GETUPVAL  R16 U10      ; R16 := U10
205 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["SentientFx"]
206 [-]: GETUPVAL  R17 U11      ; R17 := U11
207 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xAC19E744"]
208 [-]: GETGLOBAL R18 K2       ; R18 := mMovie
209 [-]: GETTABLE  R19 R15 K41  ; R19 := R15["clipName"]
210 [-]: GETGLOBAL R20 K42      ; R20 := sentientNodeEffect
211 [-]: LOADK     R21 K19      ; R21 := 0
212 [-]: LOADK     R22 K19      ; R22 := 0
213 [-]: GETGLOBAL R23 K43      ; R23 := gBackgroundRegion
214 [-]: CALL      R17 7 2      ; R17 := R17(R18,R19,R20,R21,R22,R23)
215 [-]: SETTABLE  R16 K22 R17  ; R16[1] := R17
216 [-]: GETUPVAL  R16 U6       ; R16 := U6
217 [-]: GETTABLE  R17 R15 K36  ; R17 := R15["radialSector"]
218 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["region"]
219 [-]: ADD       R17 R17 K22  ; R17 := R17 + 1
220 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
221 [-]: GETUPVAL  R17 U5       ; R17 := U5
222 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 273
223 [-]: JMP       273          ; PC := 273
224 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
225 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
226 [-]: CALL      R17 2 2      ; R17 := R17(R18)
227 [-]: TEST      R17 1        ; if R17 then PC := 273
228 [-]: JMP       273          ; PC := 273
229 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
230 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
231 [-]: GETTABLE  R18 R18 K39  ; R18 := R18["mInstance"]
232 [-]: CALL      R17 2 2      ; R17 := R17(R18)
233 [-]: TEST      R17 1        ; if R17 then PC := 273
234 [-]: JMP       273          ; PC := 273
235 [-]: GETUPVAL  R17 U2       ; R17 := U2
236 [-]: GETTABLE  R17 R17 K32  ; R17 := R17["uvHoles"]
237 [-]: LEN       R17 R17      ; R17 := # R17
238 [-]: LE        0 R6 R17     ; if R6 > R17 then PC := 273
239 [-]: JMP       273          ; PC := 273
240 [-]: GETTABLE  R17 R15 K45  ; R17 := R15["deco"]
241 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["mInstance"]
242 [-]: SELF      R17 R17 K46  ; R18 := R17; R17 := R17["0xECB5B892"]
243 [-]: CALL      R17 2 2      ; R17 := R17(R18)
244 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
245 [-]: GETTABLE  R18 R18 K47  ; R18 := R18["mScale"]
246 [-]: DIV       R17 R17 R18  ; R17 := R17 / R18
247 [-]: GETTABLE  R18 R15 K48  ; R18 := R15["position"]
248 [-]: SUB       R4 R18 R3    ; R4 := R18 - R3
249 [-]: GETGLOBAL R18 K20      ; R18 := 0x458357BC
250 [-]: MOVE      R19 R4       ; R19 := R4
251 [-]: CALL      R18 2 1      ; R18(R19)
252 [-]: GETUPVAL  R18 U2       ; R18 := U2
253 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["0xC34F8067"]
254 [-]: MOVE      R19 R3       ; R19 := R3
255 [-]: MOVE      R20 R4       ; R20 := R4
256 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
257 [-]: MOVE      R5 R18       ; R5 := R18
258 [-]: LOADK     R18 K22      ; R18 := 1
259 [-]: LEN       R19 R5       ; R19 := # R5
260 [-]: LOADK     R20 K22      ; R20 := 1
261 [-]: FORPREP   R18 271      ; R18 -= R20; PC := 271
262 [-]: GETUPVAL  R22 U2       ; R22 := U2
263 [-]: GETTABLE  R22 R22 K23  ; R22 := R22["0x1A212F7"]
264 [-]: MOVE      R23 R5       ; R23 := R5
265 [-]: MOVE      R24 R6       ; R24 := R6
266 [-]: MOVE      R25 R2       ; R25 := R2
267 [-]: MUL       R26 R17 K34  ; R26 := R17 * 0.050000000745058
268 [-]: ADD       R26 K49 R26  ; R26 := 0.10000000149012 + R26
269 [-]: LOADK     R27 K50      ; R27 := 0.014999999664724
270 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
271 [-]: FORLOOP   R18 262      ; R18 += R20; if R18 <= R19 then begin PC := 262; R21 := R18 end
272 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
273 [-]: FORLOOP   R11 183      ; R11 += R13; if R11 <= R12 then begin PC := 183; R14 := R11 end
274 [-]: MOVE      R22 R6       ; R22 := R6
275 [-]: GETUPVAL  R23 U2       ; R23 := U2
276 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["uvHoles"]
277 [-]: LEN       R23 R23      ; R23 := # R23
278 [-]: LOADK     R24 K22      ; R24 := 1
279 [-]: FORPREP   R22 299      ; R22 -= R24; PC := 299
280 [-]: LOADK     R26 K22      ; R26 := 1
281 [-]: GETUPVAL  R27 U2       ; R27 := U2
282 [-]: GETTABLE  R27 R27 K7   ; R27 := R27["voidDecos"]
283 [-]: LEN       R27 R27      ; R27 := # R27
284 [-]: LOADK     R28 K22      ; R28 := 1
285 [-]: FORPREP   R26 298      ; R26 -= R28; PC := 298
286 [-]: GETUPVAL  R30 U2       ; R30 := U2
287 [-]: GETTABLE  R30 R30 K7   ; R30 := R30["voidDecos"]
288 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
289 [-]: SELF      R30 R30 K51  ; R31 := R30; R30 := R30["0xD124E361"]
290 [-]: GETUPVAL  R32 U2       ; R32 := U2
291 [-]: GETTABLE  R32 R32 K32  ; R32 := R32["uvHoles"]
292 [-]: GETTABLE  R32 R32 R25  ; R32 := R32[R25]
293 [-]: LOADK     R33 K19      ; R33 := 0
294 [-]: LOADK     R34 K19      ; R34 := 0
295 [-]: LOADK     R35 K19      ; R35 := 0
296 [-]: LOADK     R36 K19      ; R36 := 0
297 [-]: CALL      R30 7 1      ; R30(R31,R32,R33,R34,R35,R36)
298 [-]: FORLOOP   R26 286      ; R26 += R28; if R26 <= R27 then begin PC := 286; R29 := R26 end
299 [-]: FORLOOP   R22 280      ; R22 += R24; if R22 <= R23 then begin PC := 280; R25 := R22 end
300 [-]: GETGLOBAL R30 K1       ; R30 := 0x400E7765
301 [-]: GETUPVAL  R31 U12      ; R31 := U12
302 [-]: CALL      R30 2 2      ; R30 := R30(R31)
303 [-]: TEST      R30 1        ; if R30 then PC := 329
304 [-]: JMP       329          ; PC := 329
305 [-]: LOADK     R30 K22      ; R30 := 1
306 [-]: LOADK     R31 K24      ; R31 := 3
307 [-]: LOADK     R32 K22      ; R32 := 1
308 [-]: FORPREP   R30 314      ; R30 -= R32; PC := 314
309 [-]: GETUPVAL  R34 U13      ; R34 := U13
310 [-]: GETTABLE  R34 R34 R33  ; R34 := R34[R33]
311 [-]: SELF      R34 R34 K4   ; R35 := R34; R34 := R34["0x8C7099E9"]
312 [-]: MOVE      R36 R0       ; R36 := R0
313 [-]: CALL      R34 3 1      ; R34(R35,R36)
314 [-]: FORLOOP   R30 309      ; R30 += R32; if R30 <= R31 then begin PC := 309; R33 := R30 end
315 [-]: GETUPVAL  R34 U12      ; R34 := U12
316 [-]: SELF      R34 R34 K52  ; R35 := R34; R34 := R34["0x8FD31352"]
317 [-]: GETGLOBAL R36 K53      ; R36 := 0xB5A59043
318 [-]: GETUPVAL  R37 U13      ; R37 := U13
319 [-]: GETTABLE  R37 R37 K22  ; R37 := R37[1]
320 [-]: GETTABLE  R37 R37 K13  ; R37 := R37["mCurVal"]
321 [-]: GETUPVAL  R38 U13      ; R38 := U13
322 [-]: GETTABLE  R38 R38 K54  ; R38 := R38[2]
323 [-]: GETTABLE  R38 R38 K13  ; R38 := R38["mCurVal"]
324 [-]: GETUPVAL  R39 U13      ; R39 := U13
325 [-]: GETTABLE  R39 R39 K24  ; R39 := R39[3]
326 [-]: GETTABLE  R39 R39 K13  ; R39 := R39["mCurVal"]
327 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
328 [-]: CALL      R34 0 1      ; R34(R35,...)
329 [-]: LOADNIL   R34 R34      ; R34 := nil
330 [-]: MOVE      R34 R14      ; R34 := R14
331 [-]: GETGLOBAL R34 K1       ; R34 := 0x400E7765
332 [-]: GETUPVAL  R35 U15      ; R35 := U15
333 [-]: GETTABLE  R35 R35 K55  ; R35 := R35["ResourceDrone"]
334 [-]: CALL      R34 2 2      ; R34 := R34(R35)
335 [-]: TEST      R34 1        ; if R34 then PC := 352
336 [-]: JMP       352          ; PC := 352
337 [-]: GETUPVAL  R34 U15      ; R34 := U15
338 [-]: GETTABLE  R34 R34 K55  ; R34 := R34["ResourceDrone"]
339 [-]: SELF      R34 R34 K56  ; R35 := R34; R34 := R34["0x458F27A9"]
340 [-]: LOADK     R36 K57      ; R36 := "IsBrowsingForDrone"
341 [-]: LOADK     R37 K58      ; R37 := ""
342 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
343 [-]: TEST      R34 1        ; if R34 then PC := 354
344 [-]: JMP       354          ; PC := 354
345 [-]: GETUPVAL  R34 U15      ; R34 := U15
346 [-]: GETTABLE  R34 R34 K55  ; R34 := R34["ResourceDrone"]
347 [-]: SELF      R34 R34 K56  ; R35 := R34; R34 := R34["0x458F27A9"]
348 [-]: LOADK     R36 K59      ; R36 := "IsViewingExtractAllManifest"
349 [-]: LOADK     R37 K58      ; R37 := ""
350 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
351 [-]: JMP       354          ; PC := 354
352 [-]: MOVE      R34 R0       ; R34 := R0
353 [-]: MOVE      R34 R1       ; R34 := R1
354 [-]: GETUPVAL  R35 U16      ; R35 := U16
355 [-]: EQ        1 R34 R35    ; if R34 == R35 then PC := 371
356 [-]: JMP       371          ; PC := 371
357 [-]: GETGLOBAL R35 K1       ; R35 := 0x400E7765
358 [-]: GETUPVAL  R36 U17      ; R36 := U17
359 [-]: GETTABLE  R36 R36 K60  ; R36 := R36["Movie"]
360 [-]: CALL      R35 2 2      ; R35 := R35(R36)
361 [-]: TEST      R35 1        ; if R35 then PC := 371
362 [-]: JMP       371          ; PC := 371
363 [-]: GETUPVAL  R35 U17      ; R35 := U17
364 [-]: GETTABLE  R35 R35 K60  ; R35 := R35["Movie"]
365 [-]: SELF      R35 R35 K56  ; R36 := R35; R35 := R35["0x458F27A9"]
366 [-]: LOADK     R37 K61      ; R37 := "ItemBrowsing"
367 [-]: GETGLOBAL R38 K62      ; R38 := 0x9FAED6BC
368 [-]: MOVE      R39 R34      ; R39 := R34
369 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
370 [-]: CALL      R35 0 1      ; R35(R36,...)
371 [-]: MOVE      R34 R16      ; R34 := R16
372 [-]: GETGLOBAL R35 K63      ; R35 := _T
373 [-]: GETTABLE  R35 R35 K64  ; R35 := R35["HideSquadOverlay"]
374 [-]: EQ        1 R35 K38    ; if R35 == nil then PC := 381
375 [-]: JMP       381          ; PC := 381
376 [-]: GETGLOBAL R35 K63      ; R35 := _T
377 [-]: GETTABLE  R35 R35 K64  ; R35 := R35["HideSquadOverlay"]
378 [-]: LE        1 R35 K19    ; if R35 <= 0 then PC := 381
379 [-]: JMP       381          ; PC := 381
380 [-]: MOVE      R35 R0       ; R35 := R0
381 [-]: MOVE      R35 R1       ; R35 := R1
382 [-]: GETGLOBAL R36 K2       ; R36 := mMovie
383 [-]: SELF      R36 R36 K65  ; R37 := R36; R36 := R36["0x625791A8"]
384 [-]: GETUPVAL  R38 U16      ; R38 := U16
385 [-]: TEST      R38 1        ; if R38 then PC := 405
386 [-]: JMP       405          ; PC := 405
387 [-]: GETUPVAL  R38 U17      ; R38 := U17
388 [-]: GETTABLE  R38 R38 K66  ; R38 := R38["DioOpen"]
389 [-]: TEST      R38 1        ; if R38 then PC := 405
390 [-]: JMP       405          ; PC := 405
391 [-]: GETGLOBAL R38 K63      ; R38 := _T
392 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["BackgroundVisible"]
393 [-]: TEST      R38 1        ; if R38 then PC := 405
394 [-]: JMP       405          ; PC := 405
395 [-]: GETGLOBAL R38 K63      ; R38 := _T
396 [-]: GETTABLE  R38 R38 K68  ; R38 := R38["HideMapRedux"]
397 [-]: EQ        1 R38 K38    ; if R38 == nil then PC := 403
398 [-]: JMP       403          ; PC := 403
399 [-]: GETGLOBAL R38 K63      ; R38 := _T
400 [-]: GETTABLE  R38 R38 K68  ; R38 := R38["HideMapRedux"]
401 [-]: EQ        0 R38 K19    ; if R38 ~= 0 then PC := 405
402 [-]: JMP       405          ; PC := 405
403 [-]: MOVE      R38 R35      ; R38 := R35
404 [-]: JMP       407          ; PC := 407
405 [-]: MOVE      R38 R0       ; R38 := R0
406 [-]: MOVE      R38 R1       ; R38 := R1
407 [-]: CALL      R36 3 1      ; R36(R37,R38)
408 [-]: GETUPVAL  R36 U18      ; R36 := U18
409 [-]: CALL      R36 1 1      ; R36()
410 [-]: GETUPVAL  R36 U19      ; R36 := U19
411 [-]: TEST      R36 1        ; if R36 then PC := 526
412 [-]: JMP       526          ; PC := 526
413 [-]: GETGLOBAL R36 K63      ; R36 := _T
414 [-]: GETTABLE  R36 R36 K69  ; R36 := R36["DesiredGoToNode"]
415 [-]: TEST      R36 0        ; if not R36 then PC := 504
416 [-]: JMP       504          ; PC := 504
417 [-]: GETGLOBAL R36 K70      ; R36 := 0xEC274B1A
418 [-]: GETGLOBAL R37 K63      ; R37 := _T
419 [-]: GETTABLE  R37 R37 K69  ; R37 := R37["DesiredGoToNode"]
420 [-]: CALL      R36 2 2      ; R36 := R36(R37)
421 [-]: GETUPVAL  R37 U20      ; R37 := U20
422 [-]: GETGLOBAL R38 K62      ; R38 := 0x9FAED6BC
423 [-]: MOVE      R39 R36      ; R39 := R36
424 [-]: CALL      R38 2 2      ; R38 := R38(R39)
425 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
426 [-]: CLOSURE   R38 0        ; R38 := closure(Function #136.1)
427 [-]: GETUPVAL  R0 U21       ; R0 := U21
428 [-]: MOVE      R0 R37       ; R0 := R37
429 [-]: GETUPVAL  R0 U22       ; R0 := U22
430 [-]: GETUPVAL  R0 U23       ; R0 := U23
431 [-]: GETUPVAL  R0 U11       ; R0 := U11
432 [-]: GETUPVAL  R0 U24       ; R0 := U24
433 [-]: GETUPVAL  R0 U0        ; R0 := U0
434 [-]: TEST      R37 0        ; if not R37 then PC := 464
435 [-]: JMP       464          ; PC := 464
436 [-]: GETUPVAL  R39 U6       ; R39 := U6
437 [-]: GETTABLE  R40 R37 K36  ; R40 := R37["radialSector"]
438 [-]: GETTABLE  R40 R40 K44  ; R40 := R40["region"]
439 [-]: ADD       R40 R40 K22  ; R40 := R40 + 1
440 [-]: GETTABLE  R39 R39 R40  ; R39 := R39[R40]
441 [-]: GETUPVAL  R40 U25      ; R40 := U25
442 [-]: GETTABLE  R41 R37 K36  ; R41 := R37["radialSector"]
443 [-]: GETTABLE  R41 R41 K44  ; R41 := R41["region"]
444 [-]: ADD       R41 R41 K22  ; R41 := R41 + 1
445 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
446 [-]: TEST      R40 0        ; if not R40 then PC := 451
447 [-]: JMP       451          ; PC := 451
448 [-]: MOVE      R40 R38      ; R40 := R38
449 [-]: CALL      R40 1 1      ; R40()
450 [-]: JMP       500          ; PC := 500
451 [-]: GETUPVAL  R40 U5       ; R40 := U5
452 [-]: TEST      R40 0        ; if not R40 then PC := 459
453 [-]: JMP       459          ; PC := 459
454 [-]: GETUPVAL  R40 U26      ; R40 := U26
455 [-]: MOVE      R41 R39      ; R41 := R39
456 [-]: MOVE      R42 R38      ; R42 := R38
457 [-]: CALL      R40 3 1      ; R40(R41,R42)
458 [-]: JMP       500          ; PC := 500
459 [-]: GETUPVAL  R40 U27      ; R40 := U27
460 [-]: MOVE      R41 R39      ; R41 := R39
461 [-]: MOVE      R42 R38      ; R42 := R38
462 [-]: CALL      R40 3 1      ; R40(R41,R42)
463 [-]: JMP       500          ; PC := 500
464 [-]: GETUPVAL  R40 U28      ; R40 := U28
465 [-]: GETTABLE  R40 R40 K71  ; R40 := R40["SANCTUARY_ONSLAUGHT_NODE"]
466 [-]: EQ        1 R36 R40    ; if R36 == R40 then PC := 472
467 [-]: JMP       472          ; PC := 472
468 [-]: GETUPVAL  R40 U28      ; R40 := U28
469 [-]: GETTABLE  R40 R40 K72  ; R40 := R40["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
470 [-]: EQ        0 R36 R40    ; if R36 ~= R40 then PC := 482
471 [-]: JMP       482          ; PC := 482
472 [-]: GETUPVAL  R40 U28      ; R40 := U28
473 [-]: GETTABLE  R40 R40 K73  ; R40 := R40["0x2C74584B"]
474 [-]: GETUPVAL  R41 U28      ; R41 := U28
475 [-]: GETTABLE  R41 R41 K72  ; R41 := R41["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
476 [-]: EQ        1 R36 R41    ; if R36 == R41 then PC := 479
477 [-]: JMP       479          ; PC := 479
478 [-]: MOVE      R41 R0       ; R41 := R0
479 [-]: MOVE      R41 R1       ; R41 := R1
480 [-]: CALL      R40 2 1      ; R40(R41)
481 [-]: JMP       500          ; PC := 500
482 [-]: GETGLOBAL R40 K27      ; R40 := string
483 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["0xDE44F664"]
484 [-]: GETGLOBAL R41 K63      ; R41 := _T
485 [-]: GETTABLE  R41 R41 K69  ; R41 := R41["DesiredGoToNode"]
486 [-]: LOADK     R42 K74      ; R42 := "CrewBattle"
487 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
488 [-]: TEST      R40 0        ; if not R40 then PC := 500
489 [-]: JMP       500          ; PC := 500
490 [-]: GETUPVAL  R40 U2       ; R40 := U2
491 [-]: GETTABLE  R40 R40 K75  ; R40 := R40["Active"]
492 [-]: TEST      R40 1        ; if R40 then PC := 500
493 [-]: JMP       500          ; PC := 500
494 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
495 [-]: SELF      R40 R40 K56  ; R41 := R40; R40 := R40["0x458F27A9"]
496 [-]: LOADK     R42 K76      ; R42 := "ToggleRailJack"
497 [-]: LOADK     R43 K58      ; R43 := ""
498 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
499 [-]: RETURN    R0 1         ; return 
500 [-]: GETGLOBAL R40 K63      ; R40 := _T
501 [-]: SETTABLE  R40 K69 K38  ; R40["DesiredGoToNode"] := nil
502 [-]: CLOSE     R36          ; SAVE R36,...
503 [-]: JMP       526          ; PC := 526
504 [-]: GETGLOBAL R36 K63      ; R36 := _T
505 [-]: GETTABLE  R36 R36 K77  ; R36 := R36["DesiredGoToRegion"]
506 [-]: TEST      R36 0        ; if not R36 then PC := 526
507 [-]: JMP       526          ; PC := 526
508 [-]: GETUPVAL  R36 U5       ; R36 := U5
509 [-]: TEST      R36 0        ; if not R36 then PC := 518
510 [-]: JMP       518          ; PC := 518
511 [-]: GETUPVAL  R36 U26      ; R36 := U26
512 [-]: GETUPVAL  R37 U6       ; R37 := U6
513 [-]: GETGLOBAL R38 K63      ; R38 := _T
514 [-]: GETTABLE  R38 R38 K77  ; R38 := R38["DesiredGoToRegion"]
515 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
516 [-]: CALL      R36 2 1      ; R36(R37)
517 [-]: JMP       524          ; PC := 524
518 [-]: GETUPVAL  R36 U27      ; R36 := U27
519 [-]: GETUPVAL  R37 U6       ; R37 := U6
520 [-]: GETGLOBAL R38 K63      ; R38 := _T
521 [-]: GETTABLE  R38 R38 K77  ; R38 := R38["DesiredGoToRegion"]
522 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
523 [-]: CALL      R36 2 1      ; R36(R37)
524 [-]: GETGLOBAL R36 K63      ; R36 := _T
525 [-]: SETTABLE  R36 K77 K38  ; R36["DesiredGoToRegion"] := nil
526 [-]: GETUPVAL  R36 U29      ; R36 := U29
527 [-]: CALL      R36 1 1      ; R36()
528 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
529 [-]: GETGLOBAL R37 K43      ; R37 := gBackgroundRegion
530 [-]: CALL      R36 2 2      ; R36 := R36(R37)
531 [-]: TEST      R36 0        ; if not R36 then PC := 534
532 [-]: JMP       534          ; PC := 534
533 [-]: RETURN    R0 1         ; return 
534 [-]: GETUPVAL  R36 U30      ; R36 := U30
535 [-]: CALL      R36 1 1      ; R36()
536 [-]: GETUPVAL  R36 U31      ; R36 := U31
537 [-]: CALL      R36 1 1      ; R36()
538 [-]: GETUPVAL  R36 U32      ; R36 := U32
539 [-]: CALL      R36 1 1      ; R36()
540 [-]: GETUPVAL  R36 U33      ; R36 := U33
541 [-]: CALL      R36 1 1      ; R36()
542 [-]: GETGLOBAL R36 K63      ; R36 := _T
543 [-]: GETTABLE  R36 R36 K78  ; R36 := R36["WareframeChallenge"]
544 [-]: TEST      R36 0        ; if not R36 then PC := 548
545 [-]: JMP       548          ; PC := 548
546 [-]: GETUPVAL  R36 U34      ; R36 := U34
547 [-]: CALL      R36 1 1      ; R36()
548 [-]: GETUPVAL  R36 U35      ; R36 := U35
549 [-]: TEST      R36 0        ; if not R36 then PC := 560
550 [-]: JMP       560          ; PC := 560
551 [-]: GETUPVAL  R36 U15      ; R36 := U15
552 [-]: GETUPVAL  R37 U11      ; R37 := U11
553 [-]: GETTABLE  R37 R37 K80  ; R37 := R37["0x1C988750"]
554 [-]: LOADK     R38 K81      ; R38 := "/Lotus/Language/Menu/SoloModeRequired"
555 [-]: LOADK     R39 K82      ; R39 := "ConfirmSoloMission"
556 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
557 [-]: SETTABLE  R36 K79 R37  ; R36["SoloMission"] := R37
558 [-]: MOVE      R36 R0       ; R36 := R0
559 [-]: MOVE      R36 R35      ; R36 := R35
560 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
561 [-]: GETUPVAL  R37 U36      ; R37 := U36
562 [-]: CALL      R36 2 2      ; R36 := R36(R37)
563 [-]: TEST      R36 1        ; if R36 then PC := 716
564 [-]: JMP       716          ; PC := 716
565 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
566 [-]: GETUPVAL  R37 U5       ; R37 := U5
567 [-]: CALL      R36 2 2      ; R36 := R36(R37)
568 [-]: TEST      R36 1        ; if R36 then PC := 716
569 [-]: JMP       716          ; PC := 716
570 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
571 [-]: GETUPVAL  R37 U5       ; R37 := U5
572 [-]: GETTABLE  R37 R37 K83  ; R37 := R37["instance"]
573 [-]: CALL      R36 2 2      ; R36 := R36(R37)
574 [-]: TEST      R36 1        ; if R36 then PC := 716
575 [-]: JMP       716          ; PC := 716
576 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
577 [-]: GETUPVAL  R37 U1       ; R37 := U1
578 [-]: GETTABLE  R37 R37 K84  ; R37 := R37["cameraSpot"]
579 [-]: CALL      R36 2 2      ; R36 := R36(R37)
580 [-]: TEST      R36 1        ; if R36 then PC := 716
581 [-]: JMP       716          ; PC := 716
582 [-]: GETGLOBAL R36 K85      ; R36 := 0x4CDEF9FF
583 [-]: CALL      R36 1 2      ; R36 := R36()
584 [-]: GETUPVAL  R37 U36      ; R37 := U36
585 [-]: SELF      R37 R37 K86  ; R38 := R37; R37 := R37["0xF23A7849"]
586 [-]: CALL      R37 2 2      ; R37 := R37(R38)
587 [-]: GETTABLE  R38 R37 K87  ; R38 := R37["heading"]
588 [-]: UNM       R38 R38      ; R38 := - R38
589 [-]: SETTABLE  R37 K87 R38  ; R37["heading"] := R38
590 [-]: GETTABLE  R38 R37 K88  ; R38 := R37["pitch"]
591 [-]: UNM       R38 R38      ; R38 := - R38
592 [-]: SETTABLE  R37 K88 R38  ; R37["pitch"] := R38
593 [-]: GETUPVAL  R38 U5       ; R38 := U5
594 [-]: GETTABLE  R38 R38 K83  ; R38 := R38["instance"]
595 [-]: SELF      R38 R38 K17  ; R39 := R38; R38 := R38["0x6DA72501"]
596 [-]: CALL      R38 2 2      ; R38 := R38(R39)
597 [-]: GETGLOBAL R39 K89      ; R39 := 0x96BEA6B
598 [-]: MOVE      R40 R38      ; R40 := R38
599 [-]: MOVE      R41 R38      ; R41 := R38
600 [-]: GETUPVAL  R42 U37      ; R42 := U37
601 [-]: GETTABLE  R42 R42 K90  ; R42 := R42["CAMERA_OFFSET"]
602 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
603 [-]: GETGLOBAL R39 K2       ; R39 := mMovie
604 [-]: SELF      R39 R39 K91  ; R40 := R39; R39 := R39["0xBAE5F929"]
605 [-]: CALL      R39 2 2      ; R39 := R39(R40)
606 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
607 [-]: SELF      R40 R40 K92  ; R41 := R40; R40 := R40["0xF595D5E1"]
608 [-]: CALL      R40 2 2      ; R40 := R40(R41)
609 [-]: DIV       R39 R39 R40  ; R39 := R39 / R40
610 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
611 [-]: SELF      R40 R40 K93  ; R41 := R40; R40 := R40["0x6ACD1B87"]
612 [-]: CALL      R40 2 2      ; R40 := R40(R41)
613 [-]: GETGLOBAL R41 K2       ; R41 := mMovie
614 [-]: SELF      R41 R41 K94  ; R42 := R41; R41 := R41["0xEE069D65"]
615 [-]: CALL      R41 2 2      ; R41 := R41(R42)
616 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
617 [-]: GETTABLE  R41 R38 K95  ; R41 := R38["x"]
618 [-]: MUL       R42 R39 K54  ; R42 := R39 * 2
619 [-]: SUB       R42 R42 K22  ; R42 := R42 - 1
620 [-]: GETGLOBAL R43 K96      ; R43 := math
621 [-]: GETTABLE  R43 R43 K97  ; R43 := R43["0xE0F1DBD7"]
622 [-]: GETGLOBAL R44 K96      ; R44 := math
623 [-]: GETTABLE  R44 R44 K98  ; R44 := R44["pi"]
624 [-]: DIV       R44 R44 K99  ; R44 := R44 / 180
625 [-]: MUL       R44 K100 R44 ; R44 := 40 * R44
626 [-]: CALL      R43 2 2      ; R43 := R43(R44)
627 [-]: MUL       R42 R42 R43  ; R42 := R42 * R43
628 [-]: MUL       R42 R42 K101 ; R42 := R42 * 1.5
629 [-]: ADD       R41 R41 R42  ; R41 := R41 + R42
630 [-]: SETTABLE  R38 K95 R41  ; R38["x"] := R41
631 [-]: GETTABLE  R41 R38 K102 ; R41 := R38["y"]
632 [-]: MUL       R42 R40 K54  ; R42 := R40 * 2
633 [-]: SUB       R42 R42 K22  ; R42 := R42 - 1
634 [-]: UNM       R42 R42      ; R42 := - R42
635 [-]: MUL       R42 R42 K103 ; R42 := R42 * 0.75
636 [-]: ADD       R41 R41 R42  ; R41 := R41 + R42
637 [-]: SETTABLE  R38 K102 R41 ; R38["y"] := R41
638 [-]: GETGLOBAL R41 K104     ; R41 := 0x518098BD
639 [-]: MOVE      R42 R38      ; R42 := R38
640 [-]: MOVE      R43 R38      ; R43 := R38
641 [-]: GETUPVAL  R44 U36      ; R44 := U36
642 [-]: SELF      R44 R44 K105 ; R45 := R44; R44 := R44["0xA2B01604"]
643 [-]: GETUPVAL  R46 U38      ; R46 := U38
644 [-]: GETTABLE  R46 R46 K106 ; R46 := R46["GAME_C1_HEAD1"]
645 [-]: CALL      R44 3 0      ; R44,... := R44(R45,R46)
646 [-]: CALL      R41 0 1      ; R41(R42,...)
647 [-]: GETGLOBAL R41 K89      ; R41 := 0x96BEA6B
648 [-]: MOVE      R42 R38      ; R42 := R38
649 [-]: MOVE      R43 R38      ; R43 := R38
650 [-]: GETUPVAL  R44 U1       ; R44 := U1
651 [-]: GETTABLE  R44 R44 K107 ; R44 := R44["skyOrigin"]
652 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
653 [-]: GETUPVAL  R41 U1       ; R41 := U1
654 [-]: GETTABLE  R41 R41 K84  ; R41 := R41["cameraSpot"]
655 [-]: SELF      R41 R41 K17  ; R42 := R41; R41 := R41["0x6DA72501"]
656 [-]: CALL      R41 2 2      ; R41 := R41(R42)
657 [-]: GETUPVAL  R42 U39      ; R42 := U39
658 [-]: GETTABLE  R43 R41 K108 ; R43 := R41["z"]
659 [-]: CALL      R42 2 1      ; R42(R43)
660 [-]: SETTABLE  R41 K108 K109; R41["z"] := -1
661 [-]: GETGLOBAL R42 K104     ; R42 := 0x518098BD
662 [-]: MOVE      R43 R38      ; R43 := R38
663 [-]: MOVE      R44 R38      ; R44 := R38
664 [-]: MOVE      R45 R41      ; R45 := R41
665 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
666 [-]: GETGLOBAL R42 K110     ; R42 := 0x4CBE9A09
667 [-]: MOVE      R43 R38      ; R43 := R38
668 [-]: MOVE      R44 R37      ; R44 := R37
669 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
670 [-]: GETGLOBAL R43 K111     ; R43 := 0xEDD2EBFF
671 [-]: GETGLOBAL R44 K112     ; R44 := ZERO_VECTOR
672 [-]: MOVE      R45 R42      ; R45 := R42
673 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
674 [-]: GETGLOBAL R44 K12      ; R44 := 0x6374FD98
675 [-]: GETTABLE  R45 R43 K87  ; R45 := R43["heading"]
676 [-]: LOADK     R46 K113     ; R46 := -45
677 [-]: LOADK     R47 K114     ; R47 := 45
678 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
679 [-]: SETTABLE  R43 K87 R44  ; R43["heading"] := R44
680 [-]: GETGLOBAL R44 K12      ; R44 := 0x6374FD98
681 [-]: GETTABLE  R45 R43 K88  ; R45 := R43["pitch"]
682 [-]: LOADK     R46 K115     ; R46 := -35
683 [-]: LOADK     R47 K116     ; R47 := 35
684 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
685 [-]: SETTABLE  R43 K88 R44  ; R43["pitch"] := R44
686 [-]: SETTABLE  R43 K117 K19 ; R43["bank"] := 0
687 [-]: GETUPVAL  R44 U40      ; R44 := U40
688 [-]: SELF      R44 R44 K118 ; R45 := R44; R44 := R44["0xDB349344"]
689 [-]: GETTABLE  R46 R43 K87  ; R46 := R43["heading"]
690 [-]: CALL      R44 3 1      ; R44(R45,R46)
691 [-]: GETUPVAL  R44 U41      ; R44 := U41
692 [-]: SELF      R44 R44 K118 ; R45 := R44; R44 := R44["0xDB349344"]
693 [-]: GETTABLE  R46 R43 K88  ; R46 := R43["pitch"]
694 [-]: CALL      R44 3 1      ; R44(R45,R46)
695 [-]: GETUPVAL  R44 U40      ; R44 := U40
696 [-]: SELF      R44 R44 K4   ; R45 := R44; R44 := R44["0x8C7099E9"]
697 [-]: MOVE      R46 R36      ; R46 := R36
698 [-]: CALL      R44 3 1      ; R44(R45,R46)
699 [-]: GETUPVAL  R44 U41      ; R44 := U41
700 [-]: SELF      R44 R44 K4   ; R45 := R44; R44 := R44["0x8C7099E9"]
701 [-]: MOVE      R46 R36      ; R46 := R36
702 [-]: CALL      R44 3 1      ; R44(R45,R46)
703 [-]: GETUPVAL  R44 U40      ; R44 := U40
704 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mCurVal"]
705 [-]: SETTABLE  R43 K87 R44  ; R43["heading"] := R44
706 [-]: GETUPVAL  R44 U41      ; R44 := U41
707 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mCurVal"]
708 [-]: SETTABLE  R43 K88 R44  ; R43["pitch"] := R44
709 [-]: GETUPVAL  R44 U36      ; R44 := U36
710 [-]: SELF      R44 R44 K119 ; R45 := R44; R44 := R44["0x42C8B968"]
711 [-]: GETUPVAL  R46 U38      ; R46 := U38
712 [-]: GETTABLE  R46 R46 K106 ; R46 := R46["GAME_C1_HEAD1"]
713 [-]: MOVE      R47 R43      ; R47 := R43
714 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
715 [-]: JMP       727          ; PC := 727
716 [-]: GETGLOBAL R44 K1       ; R44 := 0x400E7765
717 [-]: GETUPVAL  R45 U36      ; R45 := U36
718 [-]: CALL      R44 2 2      ; R44 := R44(R45)
719 [-]: TEST      R44 1        ; if R44 then PC := 727
720 [-]: JMP       727          ; PC := 727
721 [-]: GETUPVAL  R44 U36      ; R44 := U36
722 [-]: SELF      R44 R44 K119 ; R45 := R44; R44 := R44["0x42C8B968"]
723 [-]: GETUPVAL  R46 U38      ; R46 := U38
724 [-]: GETTABLE  R46 R46 K106 ; R46 := R46["GAME_C1_HEAD1"]
725 [-]: GETGLOBAL R47 K120     ; R47 := ZERO_ROTATION
726 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
727 [-]: GETGLOBAL R44 K63      ; R44 := _T
728 [-]: GETTABLE  R44 R44 K121 ; R44 := R44["SquadCountdownTimer"]
729 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 840
730 [-]: JMP       840          ; PC := 840
731 [-]: GETGLOBAL R44 K63      ; R44 := _T
732 [-]: GETTABLE  R44 R44 K122 ; R44 := R44["gPendingMission"]
733 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 765
734 [-]: JMP       765          ; PC := 765
735 [-]: GETUPVAL  R44 U24      ; R44 := U24
736 [-]: GETTABLE  R44 R44 K123 ; R44 := R44["Node"]
737 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 747
738 [-]: JMP       747          ; PC := 747
739 [-]: GETUPVAL  R44 U24      ; R44 := U24
740 [-]: GETTABLE  R44 R44 K123 ; R44 := R44["Node"]
741 [-]: GETTABLE  R44 R44 K29  ; R44 := R44["name"]
742 [-]: GETGLOBAL R45 K63      ; R45 := _T
743 [-]: GETTABLE  R45 R45 K122 ; R45 := R45["gPendingMission"]
744 [-]: GETTABLE  R45 R45 K124 ; R45 := R45["baseNodeName"]
745 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 765
746 [-]: JMP       765          ; PC := 765
747 [-]: GETUPVAL  R44 U20      ; R44 := U20
748 [-]: GETGLOBAL R45 K62      ; R45 := 0x9FAED6BC
749 [-]: GETGLOBAL R46 K63      ; R46 := _T
750 [-]: GETTABLE  R46 R46 K122 ; R46 := R46["gPendingMission"]
751 [-]: GETTABLE  R46 R46 K124 ; R46 := R46["baseNodeName"]
752 [-]: CALL      R45 2 2      ; R45 := R45(R46)
753 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
754 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 765
755 [-]: JMP       765          ; PC := 765
756 [-]: GETUPVAL  R44 U24      ; R44 := U24
757 [-]: GETUPVAL  R45 U20      ; R45 := U20
758 [-]: GETGLOBAL R46 K62      ; R46 := 0x9FAED6BC
759 [-]: GETGLOBAL R47 K63      ; R47 := _T
760 [-]: GETTABLE  R47 R47 K122 ; R47 := R47["gPendingMission"]
761 [-]: GETTABLE  R47 R47 K124 ; R47 := R47["baseNodeName"]
762 [-]: CALL      R46 2 2      ; R46 := R46(R47)
763 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
764 [-]: SETTABLE  R44 K123 R45 ; R44["Node"] := R45
765 [-]: GETUPVAL  R44 U24      ; R44 := U24
766 [-]: GETTABLE  R44 R44 K123 ; R44 := R44["Node"]
767 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 840
768 [-]: JMP       840          ; PC := 840
769 [-]: GETUPVAL  R44 U24      ; R44 := U24
770 [-]: GETTABLE  R44 R44 K125 ; R44 := R44["Timer"]
771 [-]: GETGLOBAL R45 K63      ; R45 := _T
772 [-]: GETTABLE  R45 R45 K121 ; R45 := R45["SquadCountdownTimer"]
773 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 840
774 [-]: JMP       840          ; PC := 840
775 [-]: LOADK     R44 K109     ; R44 := -1
776 [-]: GETUPVAL  R45 U24      ; R45 := U24
777 [-]: GETTABLE  R45 R45 K125 ; R45 := R45["Timer"]
778 [-]: EQ        1 R45 K38    ; if R45 == nil then PC := 786
779 [-]: JMP       786          ; PC := 786
780 [-]: GETGLOBAL R45 K96      ; R45 := math
781 [-]: GETTABLE  R45 R45 K126 ; R45 := R45["0xBCF846DF"]
782 [-]: GETUPVAL  R46 U24      ; R46 := U24
783 [-]: GETTABLE  R46 R46 K125 ; R46 := R46["Timer"]
784 [-]: CALL      R45 2 2      ; R45 := R45(R46)
785 [-]: MOVE      R44 R45      ; R44 := R45
786 [-]: GETUPVAL  R45 U24      ; R45 := U24
787 [-]: GETGLOBAL R46 K63      ; R46 := _T
788 [-]: GETTABLE  R46 R46 K121 ; R46 := R46["SquadCountdownTimer"]
789 [-]: SETTABLE  R45 K125 R46 ; R45["Timer"] := R46
790 [-]: GETUPVAL  R45 U24      ; R45 := U24
791 [-]: GETTABLE  R45 R45 K125 ; R45 := R45["Timer"]
792 [-]: EQ        0 R45 K109   ; if R45 ~= -1 then PC := 816
793 [-]: JMP       816          ; PC := 816
794 [-]: GETUPVAL  R45 U24      ; R45 := U24
795 [-]: SETTABLE  R45 K123 K38 ; R45["Node"] := nil
796 [-]: GETUPVAL  R45 U24      ; R45 := U24
797 [-]: GETTABLE  R45 R45 K127 ; R45 := R45["TransitioningOut"]
798 [-]: TEST      R45 0        ; if not R45 then PC := 816
799 [-]: JMP       816          ; PC := 816
800 [-]: GETUPVAL  R45 U24      ; R45 := U24
801 [-]: SETTABLE  R45 K127 K128; R45["TransitioningOut"] := "0x0"
802 [-]: GETUPVAL  R45 U24      ; R45 := U24
803 [-]: GETTABLE  R45 R45 K129 ; R45 := R45["InitialFOV"]
804 [-]: EQ        1 R45 K38    ; if R45 == nil then PC := 812
805 [-]: JMP       812          ; PC := 812
806 [-]: GETUPVAL  R45 U1       ; R45 := U1
807 [-]: GETTABLE  R45 R45 K84  ; R45 := R45["cameraSpot"]
808 [-]: SELF      R45 R45 K130 ; R46 := R45; R45 := R45["0x95E6F2AA"]
809 [-]: GETUPVAL  R47 U24      ; R47 := U24
810 [-]: GETTABLE  R47 R47 K129 ; R47 := R47["InitialFOV"]
811 [-]: CALL      R45 3 1      ; R45(R46,R47)
812 [-]: GETUPVAL  R45 U42      ; R45 := U42
813 [-]: SETTABLE  R45 K131 K128; R45["Locked"] := "0x0"
814 [-]: MOVE      R45 R0       ; R45 := R0
815 [-]: MOVE      R45 R19      ; R45 := R19
816 [-]: GETGLOBAL R45 K96      ; R45 := math
817 [-]: GETTABLE  R45 R45 K126 ; R45 := R45["0xBCF846DF"]
818 [-]: GETUPVAL  R46 U24      ; R46 := U24
819 [-]: GETTABLE  R46 R46 K125 ; R46 := R46["Timer"]
820 [-]: CALL      R45 2 2      ; R45 := R45(R46)
821 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 840
822 [-]: JMP       840          ; PC := 840
823 [-]: GETUPVAL  R46 U24      ; R46 := U24
824 [-]: GETTABLE  R46 R46 K123 ; R46 := R46["Node"]
825 [-]: EQ        1 R46 K38    ; if R46 == nil then PC := 840
826 [-]: JMP       840          ; PC := 840
827 [-]: GETUPVAL  R46 U10      ; R46 := U10
828 [-]: GETUPVAL  R47 U11      ; R47 := U11
829 [-]: GETTABLE  R47 R47 K40  ; R47 := R47["0xAC19E744"]
830 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
831 [-]: GETUPVAL  R49 U24      ; R49 := U24
832 [-]: GETTABLE  R49 R49 K123 ; R49 := R49["Node"]
833 [-]: GETTABLE  R49 R49 K41  ; R49 := R49["clipName"]
834 [-]: GETGLOBAL R50 K133     ; R50 := nodeCountdownEffect
835 [-]: LOADK     R51 K19      ; R51 := 0
836 [-]: LOADK     R52 K19      ; R52 := 0
837 [-]: GETGLOBAL R53 K43      ; R53 := gBackgroundRegion
838 [-]: CALL      R47 7 2      ; R47 := R47(R48,R49,R50,R51,R52,R53)
839 [-]: SETTABLE  R46 K132 R47 ; R46["CountdownFx"] := R47
840 [-]: GETGLOBAL R46 K134     ; R46 := gFlashMgr
841 [-]: SELF      R46 R46 K135 ; R47 := R46; R46 := R46["0x35FF770F"]
842 [-]: CALL      R46 2 2      ; R46 := R46(R47)
843 [-]: GETGLOBAL R47 K2       ; R47 := mMovie
844 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 1015
845 [-]: JMP       1015         ; PC := 1015
846 [-]: GETGLOBAL R46 K96      ; R46 := math
847 [-]: GETTABLE  R46 R46 K136 ; R46 := R46["0x8B011038"]
848 [-]: GETGLOBAL R47 K2       ; R47 := mMovie
849 [-]: SELF      R47 R47 K92  ; R48 := R47; R47 := R47["0xF595D5E1"]
850 [-]: CALL      R47 2 2      ; R47 := R47(R48)
851 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
852 [-]: SELF      R48 R48 K137 ; R49 := R48; R48 := R48["0xF3E132E0"]
853 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
854 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
855 [-]: GETUPVAL  R47 U43      ; R47 := U43
856 [-]: LEN       R47 R47      ; R47 := # R47
857 [-]: LT        1 K19 R47    ; if 0 < R47 then PC := 863
858 [-]: JMP       863          ; PC := 863
859 [-]: GETUPVAL  R47 U44      ; R47 := U44
860 [-]: LEN       R47 R47      ; R47 := # R47
861 [-]: LT        0 K19 R47    ; if 0 >= R47 then PC := 1015
862 [-]: JMP       1015         ; PC := 1015
863 [-]: GETUPVAL  R47 U45      ; R47 := U45
864 [-]: LT        0 K19 R47    ; if 0 >= R47 then PC := 1015
865 [-]: JMP       1015         ; PC := 1015
866 [-]: GETUPVAL  R47 U46      ; R47 := U46
867 [-]: GETGLOBAL R48 K85      ; R48 := 0x4CDEF9FF
868 [-]: CALL      R48 1 2      ; R48 := R48()
869 [-]: SUB       R47 R47 R48  ; R47 := R47 - R48
870 [-]: MOVE      R47 R46      ; R47 := R46
871 [-]: GETUPVAL  R47 U46      ; R47 := U46
872 [-]: LE        0 R47 K19    ; if R47 > 0 then PC := 1015
873 [-]: JMP       1015         ; PC := 1015
874 [-]: GETUPVAL  R47 U11      ; R47 := U11
875 [-]: GETTABLE  R47 R47 K138 ; R47 := R47["0xF81722A2"]
876 [-]: GETUPVAL  R48 U47      ; R48 := U47
877 [-]: LOADK     R49 K22      ; R49 := 1
878 [-]: LOADK     R50 K54      ; R50 := 2
879 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
880 [-]: MOVE      R47 R46      ; R47 := R46
881 [-]: MOVE      R47 R0       ; R47 := R0
882 [-]: LOADK     R48 K22      ; R48 := 1
883 [-]: GETUPVAL  R49 U43      ; R49 := U43
884 [-]: LEN       R49 R49      ; R49 := # R49
885 [-]: LOADK     R50 K22      ; R50 := 1
886 [-]: FORPREP   R48 948      ; R48 -= R50; PC := 948
887 [-]: GETGLOBAL R52 K139     ; R52 := 0xF595ADDE
888 [-]: GETGLOBAL R53 K2       ; R53 := mMovie
889 [-]: SELF      R53 R53 K140 ; R54 := R53; R53 := R53["0x294C4B0B"]
890 [-]: GETUPVAL  R55 U43      ; R55 := U43
891 [-]: GETTABLE  R55 R55 R51  ; R55 := R55[R51]
892 [-]: GETTABLE  R55 R55 K123 ; R55 := R55["Node"]
893 [-]: GETTABLE  R55 R55 K141 ; R55 := R55["memberIndex"]
894 [-]: LOADK     R56 K142     ; R56 := "_x"
895 [-]: CALL      R53 4 0      ; R53,... := R53(R54,R55,R56)
896 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
897 [-]: GETGLOBAL R53 K139     ; R53 := 0xF595ADDE
898 [-]: GETGLOBAL R54 K2       ; R54 := mMovie
899 [-]: SELF      R54 R54 K140 ; R55 := R54; R54 := R54["0x294C4B0B"]
900 [-]: GETUPVAL  R56 U43      ; R56 := U43
901 [-]: GETTABLE  R56 R56 R51  ; R56 := R56[R51]
902 [-]: GETTABLE  R56 R56 K123 ; R56 := R56["Node"]
903 [-]: GETTABLE  R56 R56 K141 ; R56 := R56["memberIndex"]
904 [-]: LOADK     R57 K143     ; R57 := "_y"
905 [-]: CALL      R54 4 0      ; R54,... := R54(R55,R56,R57)
906 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
907 [-]: GETUPVAL  R54 U11      ; R54 := U11
908 [-]: GETTABLE  R54 R54 K144 ; R54 := R54["0x4F6BF2C8"]
909 [-]: GETGLOBAL R55 K2       ; R55 := mMovie
910 [-]: NEWTABLE  R56 0 2      ; R56 := {}
911 [-]: SETTABLE  R56 K95 R52  ; R56["x"] := R52
912 [-]: SETTABLE  R56 K102 R53 ; R56["y"] := R53
913 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
914 [-]: GETTABLE  R55 R54 K95  ; R55 := R54["x"]
915 [-]: LT        0 K19 R55    ; if 0 >= R55 then PC := 947
916 [-]: JMP       947          ; PC := 947
917 [-]: GETTABLE  R55 R54 K102 ; R55 := R54["y"]
918 [-]: LT        0 K19 R55    ; if 0 >= R55 then PC := 947
919 [-]: JMP       947          ; PC := 947
920 [-]: GETTABLE  R55 R54 K95  ; R55 := R54["x"]
921 [-]: LT        0 R55 K22    ; if R55 >= 1 then PC := 947
922 [-]: JMP       947          ; PC := 947
923 [-]: GETTABLE  R55 R54 K102 ; R55 := R54["y"]
924 [-]: LT        0 R55 K22    ; if R55 >= 1 then PC := 947
925 [-]: JMP       947          ; PC := 947
926 [-]: GETUPVAL  R55 U0       ; R55 := U0
927 [-]: SELF      R55 R55 K145 ; R56 := R55; R55 := R55["0x61494587"]
928 [-]: DIV       R57 R52 R46  ; R57 := R52 / R46
929 [-]: MUL       R57 R57 K22  ; R57 := R57 * 1
930 [-]: CLOSURE   R58 1        ; R58 := closure(Function #136.2)
931 [-]: GETUPVAL  R0 U43       ; R0 := U43
932 [-]: MOVE      R0 R51       ; R0 := R51
933 [-]: GETUPVAL  R0 U2        ; R0 := U2
934 [-]: GETUPVAL  R0 U10       ; R0 := U10
935 [-]: GETUPVAL  R0 U11       ; R0 := U11
936 [-]: CALL      R55 4 1      ; R55(R56,R57,R58)
937 [-]: TEST      R47 1        ; if R47 then PC := 947
938 [-]: JMP       947          ; PC := 947
939 [-]: MOVE      R47 R1       ; R47 := R1
940 [-]: GETUPVAL  R55 U0       ; R55 := U0
941 [-]: SELF      R55 R55 K145 ; R56 := R55; R55 := R55["0x61494587"]
942 [-]: DIV       R57 R52 R46  ; R57 := R52 / R46
943 [-]: MUL       R57 R57 K22  ; R57 := R57 * 1
944 [-]: CLOSURE   R58 2        ; R58 := closure(Function #136.3)
945 [-]: GETUPVAL  R0 U11       ; R0 := U11
946 [-]: CALL      R55 4 1      ; R55(R56,R57,R58)
947 [-]: CLOSE     R51          ; SAVE R51,...
948 [-]: FORLOOP   R48 887      ; R48 += R50; if R48 <= R49 then begin PC := 887; R51 := R48 end
949 [-]: LOADK     R51 K22      ; R51 := 1
950 [-]: GETUPVAL  R52 U44      ; R52 := U44
951 [-]: LEN       R52 R52      ; R52 := # R52
952 [-]: LOADK     R53 K22      ; R53 := 1
953 [-]: FORPREP   R51 1014     ; R51 -= R53; PC := 1014
954 [-]: GETGLOBAL R55 K139     ; R55 := 0xF595ADDE
955 [-]: GETGLOBAL R56 K2       ; R56 := mMovie
956 [-]: SELF      R56 R56 K140 ; R57 := R56; R56 := R56["0x294C4B0B"]
957 [-]: GETUPVAL  R58 U44      ; R58 := U44
958 [-]: GETTABLE  R58 R58 R54  ; R58 := R58[R54]
959 [-]: GETTABLE  R58 R58 K123 ; R58 := R58["Node"]
960 [-]: GETTABLE  R58 R58 K141 ; R58 := R58["memberIndex"]
961 [-]: LOADK     R59 K142     ; R59 := "_x"
962 [-]: CALL      R56 4 0      ; R56,... := R56(R57,R58,R59)
963 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
964 [-]: GETGLOBAL R56 K139     ; R56 := 0xF595ADDE
965 [-]: GETGLOBAL R57 K2       ; R57 := mMovie
966 [-]: SELF      R57 R57 K140 ; R58 := R57; R57 := R57["0x294C4B0B"]
967 [-]: GETUPVAL  R59 U44      ; R59 := U44
968 [-]: GETTABLE  R59 R59 R54  ; R59 := R59[R54]
969 [-]: GETTABLE  R59 R59 K123 ; R59 := R59["Node"]
970 [-]: GETTABLE  R59 R59 K141 ; R59 := R59["memberIndex"]
971 [-]: LOADK     R60 K143     ; R60 := "_y"
972 [-]: CALL      R57 4 0      ; R57,... := R57(R58,R59,R60)
973 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
974 [-]: GETUPVAL  R57 U11      ; R57 := U11
975 [-]: GETTABLE  R57 R57 K144 ; R57 := R57["0x4F6BF2C8"]
976 [-]: GETGLOBAL R58 K2       ; R58 := mMovie
977 [-]: NEWTABLE  R59 0 2      ; R59 := {}
978 [-]: SETTABLE  R59 K95 R55  ; R59["x"] := R55
979 [-]: SETTABLE  R59 K102 R56 ; R59["y"] := R56
980 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
981 [-]: GETTABLE  R58 R57 K95  ; R58 := R57["x"]
982 [-]: LT        0 K19 R58    ; if 0 >= R58 then PC := 1013
983 [-]: JMP       1013         ; PC := 1013
984 [-]: GETTABLE  R58 R57 K102 ; R58 := R57["y"]
985 [-]: LT        0 K19 R58    ; if 0 >= R58 then PC := 1013
986 [-]: JMP       1013         ; PC := 1013
987 [-]: GETTABLE  R58 R57 K95  ; R58 := R57["x"]
988 [-]: LT        0 R58 K22    ; if R58 >= 1 then PC := 1013
989 [-]: JMP       1013         ; PC := 1013
990 [-]: GETTABLE  R58 R57 K102 ; R58 := R57["y"]
991 [-]: LT        0 R58 K22    ; if R58 >= 1 then PC := 1013
992 [-]: JMP       1013         ; PC := 1013
993 [-]: GETUPVAL  R58 U0       ; R58 := U0
994 [-]: SELF      R58 R58 K145 ; R59 := R58; R58 := R58["0x61494587"]
995 [-]: DIV       R60 R55 R46  ; R60 := R55 / R46
996 [-]: MUL       R60 R60 K22  ; R60 := R60 * 1
997 [-]: CLOSURE   R61 3        ; R61 := closure(Function #136.4)
998 [-]: GETUPVAL  R0 U44       ; R0 := U44
999 [-]: MOVE      R0 R54       ; R0 := R54
1000 [-]: GETUPVAL  R0 U10       ; R0 := U10
1001 [-]: GETUPVAL  R0 U11       ; R0 := U11
1002 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
1003 [-]: TEST      R47 1        ; if R47 then PC := 1013
1004 [-]: JMP       1013         ; PC := 1013
1005 [-]: MOVE      R47 R1       ; R47 := R1
1006 [-]: GETUPVAL  R58 U0       ; R58 := U0
1007 [-]: SELF      R58 R58 K145 ; R59 := R58; R58 := R58["0x61494587"]
1008 [-]: DIV       R60 R55 R46  ; R60 := R55 / R46
1009 [-]: MUL       R60 R60 K22  ; R60 := R60 * 1
1010 [-]: CLOSURE   R61 4        ; R61 := closure(Function #136.5)
1011 [-]: GETUPVAL  R0 U11       ; R0 := U11
1012 [-]: CALL      R58 4 1      ; R58(R59,R60,R61)
1013 [-]: CLOSE     R54          ; SAVE R54,...
1014 [-]: FORLOOP   R51 954      ; R51 += R53; if R51 <= R52 then begin PC := 954; R54 := R51 end
1015 [-]: GETUPVAL  R54 U21      ; R54 := U21
1016 [-]: GETTABLE  R54 R54 K123 ; R54 := R54["Node"]
1017 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1171
1018 [-]: JMP       1171         ; PC := 1171
1019 [-]: GETUPVAL  R54 U21      ; R54 := U21
1020 [-]: GETTABLE  R54 R54 K146 ; R54 := R54["UpdateTimer"]
1021 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1171
1022 [-]: JMP       1171         ; PC := 1171
1023 [-]: GETUPVAL  R54 U21      ; R54 := U21
1024 [-]: GETTABLE  R54 R54 K147 ; R54 := R54["TimerPre"]
1025 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1171
1026 [-]: JMP       1171         ; PC := 1171
1027 [-]: GETUPVAL  R54 U21      ; R54 := U21
1028 [-]: GETTABLE  R54 R54 K148 ; R54 := R54["TimerPost"]
1029 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1171
1030 [-]: JMP       1171         ; PC := 1171
1031 [-]: GETUPVAL  R54 U21      ; R54 := U21
1032 [-]: GETTABLE  R54 R54 K149 ; R54 := R54["NodeTime"]
1033 [-]: EQ        1 R54 K38    ; if R54 == nil then PC := 1171
1034 [-]: JMP       1171         ; PC := 1171
1035 [-]: GETUPVAL  R54 U21      ; R54 := U21
1036 [-]: GETUPVAL  R55 U21      ; R55 := U21
1037 [-]: GETTABLE  R55 R55 K146 ; R55 := R55["UpdateTimer"]
1038 [-]: ADD       R55 R55 R0   ; R55 := R55 + R0
1039 [-]: SETTABLE  R54 K146 R55 ; R54["UpdateTimer"] := R55
1040 [-]: GETUPVAL  R54 U21      ; R54 := U21
1041 [-]: GETTABLE  R54 R54 K146 ; R54 := R54["UpdateTimer"]
1042 [-]: LT        0 K22 R54    ; if 1 >= R54 then PC := 1171
1043 [-]: JMP       1171         ; PC := 1171
1044 [-]: GETUPVAL  R54 U21      ; R54 := U21
1045 [-]: GETUPVAL  R55 U21      ; R55 := U21
1046 [-]: GETTABLE  R55 R55 K149 ; R55 := R55["NodeTime"]
1047 [-]: GETUPVAL  R56 U21      ; R56 := U21
1048 [-]: GETTABLE  R56 R56 K146 ; R56 := R56["UpdateTimer"]
1049 [-]: SUB       R55 R55 R56  ; R55 := R55 - R56
1050 [-]: SETTABLE  R54 K149 R55 ; R54["NodeTime"] := R55
1051 [-]: GETUPVAL  R54 U48      ; R54 := U48
1052 [-]: GETTABLE  R54 R54 K150 ; R54 := R54["0x555EFA5"]
1053 [-]: GETUPVAL  R55 U49      ; R55 := U49
1054 [-]: GETTABLE  R55 R55 K151 ; R55 := R55["mMission"]
1055 [-]: GETTABLE  R55 R55 K152 ; R55 := R55["location"]
1056 [-]: CALL      R54 2 2      ; R54 := R54(R55)
1057 [-]: GETUPVAL  R55 U48      ; R55 := U48
1058 [-]: GETTABLE  R55 R55 K153 ; R55 := R55["0x447FCC2F"]
1059 [-]: MOVE      R56 R54      ; R56 := R54
1060 [-]: GETUPVAL  R57 U49      ; R57 := U49
1061 [-]: GETTABLE  R57 R57 K151 ; R57 := R57["mMission"]
1062 [-]: GETTABLE  R57 R57 K152 ; R57 := R57["location"]
1063 [-]: CALL      R55 3 4      ; R55,R56,R57 := R55(R56,R57)
1064 [-]: GETUPVAL  R58 U21      ; R58 := U21
1065 [-]: GETTABLE  R58 R58 K149 ; R58 := R58["NodeTime"]
1066 [-]: LT        0 R58 K19    ; if R58 >= 0 then PC := 1071
1067 [-]: JMP       1071         ; PC := 1071
1068 [-]: GETUPVAL  R58 U21      ; R58 := U21
1069 [-]: SETTABLE  R58 K149 R57 ; R58["NodeTime"] := R57
1070 [-]: JMP       1073         ; PC := 1073
1071 [-]: GETUPVAL  R58 U21      ; R58 := U21
1072 [-]: GETTABLE  R57 R58 K149 ; R57 := R58["NodeTime"]
1073 [-]: GETUPVAL  R58 U21      ; R58 := U21
1074 [-]: GETTABLE  R58 R58 K147 ; R58 := R58["TimerPre"]
1075 [-]: GETUPVAL  R59 U49      ; R59 := U49
1076 [-]: GETTABLE  R59 R59 K151 ; R59 := R59["mMission"]
1077 [-]: GETTABLE  R59 R59 K152 ; R59 := R59["location"]
1078 [-]: GETUPVAL  R60 U48      ; R60 := U48
1079 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["ORB_VALLIS_NODE_TAG"]
1080 [-]: EQ        0 R59 R60    ; if R59 ~= R60 then PC := 1121
1081 [-]: JMP       1121         ; PC := 1121
1082 [-]: MOVE      R59 R58      ; R59 := R58
1083 [-]: LOADK     R60 K155     ; R60 := "<font color=\""
1084 [-]: GETUPVAL  R61 U50      ; R61 := U50
1085 [-]: GETTABLE  R61 R61 K156 ; R61 := R61["FloatingContentHtml"]
1086 [-]: LOADK     R62 K157     ; R62 := "\">"
1087 [-]: GETGLOBAL R63 K27      ; R63 := string
1088 [-]: GETTABLE  R63 R63 K158 ; R63 := R63["0x639C642A"]
1089 [-]: GETGLOBAL R64 K2       ; R64 := mMovie
1090 [-]: SELF      R64 R64 K159 ; R65 := R64; R64 := R64["0x5DB0BD4"]
1091 [-]: LOADK     R66 K160     ; R66 := "/Lotus/Language/SolarisVenus/Temperature"
1092 [-]: MOVE      R67 R1       ; R67 := R1
1093 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
1094 [-]: CALL      R63 0 2      ; R63 := R63(R64,...)
1095 [-]: LOADK     R64 K161     ; R64 := "  </font><font color=\""
1096 [-]: GETUPVAL  R65 U50      ; R65 := U50
1097 [-]: GETTABLE  R65 R65 K162 ; R65 := R65["FloatingContentHighlightHtml"]
1098 [-]: LOADK     R66 K163     ; R66 := "\"><b>"
1099 [-]: GETGLOBAL R67 K2       ; R67 := mMovie
1100 [-]: SELF      R67 R67 K159 ; R68 := R67; R67 := R67["0x5DB0BD4"]
1101 [-]: LOADK     R69 K164     ; R69 := "/Lotus/Language/SystemMessages/TimeUntil"
1102 [-]: MOVE      R70 R0       ; R70 := R0
1103 [-]: NEWTABLE  R71 0 2      ; R71 := {}
1104 [-]: GETGLOBAL R72 K2       ; R72 := mMovie
1105 [-]: SELF      R72 R72 K159 ; R73 := R72; R72 := R72["0x5DB0BD4"]
1106 [-]: MOVE      R74 R56      ; R74 := R56
1107 [-]: MOVE      R75 R0       ; R75 := R0
1108 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
1109 [-]: SETTABLE  R71 K165 R72 ; R71["LABEL"] := R72
1110 [-]: GETUPVAL  R72 U48      ; R72 := U48
1111 [-]: GETTABLE  R72 R72 K167 ; R72 := R72["0xC65D09DD"]
1112 [-]: GETGLOBAL R73 K2       ; R73 := mMovie
1113 [-]: MOVE      R74 R57      ; R74 := R57
1114 [-]: LOADK     R75 K168     ; R75 := "CompactOne"
1115 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
1116 [-]: SETTABLE  R71 K166 R72 ; R71["TIME"] := R72
1117 [-]: CALL      R67 5 2      ; R67 := R67(R68,R69,R70,R71)
1118 [-]: LOADK     R68 K169     ; R68 := "</b><br></font>"
1119 [-]: CONCAT    R58 R59 R68  ; R58 := R59 .. R60 .. R61 .. R62 .. R63 .. R64 .. R65 .. R66 .. R67 .. R68
1120 [-]: JMP       1159         ; PC := 1159
1121 [-]: MOVE      R59 R58      ; R59 := R58
1122 [-]: LOADK     R60 K155     ; R60 := "<font color=\""
1123 [-]: GETUPVAL  R61 U50      ; R61 := U50
1124 [-]: GETTABLE  R61 R61 K156 ; R61 := R61["FloatingContentHtml"]
1125 [-]: LOADK     R62 K157     ; R62 := "\">"
1126 [-]: GETGLOBAL R63 K27      ; R63 := string
1127 [-]: GETTABLE  R63 R63 K158 ; R63 := R63["0x639C642A"]
1128 [-]: GETGLOBAL R64 K2       ; R64 := mMovie
1129 [-]: SELF      R64 R64 K159 ; R65 := R64; R64 := R64["0x5DB0BD4"]
1130 [-]: LOADK     R66 K170     ; R66 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
1131 [-]: MOVE      R67 R1       ; R67 := R1
1132 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
1133 [-]: CALL      R63 0 2      ; R63 := R63(R64,...)
1134 [-]: LOADK     R64 K161     ; R64 := "  </font><font color=\""
1135 [-]: GETUPVAL  R65 U50      ; R65 := U50
1136 [-]: GETTABLE  R65 R65 K162 ; R65 := R65["FloatingContentHighlightHtml"]
1137 [-]: LOADK     R66 K163     ; R66 := "\"><b>"
1138 [-]: GETGLOBAL R67 K2       ; R67 := mMovie
1139 [-]: SELF      R67 R67 K159 ; R68 := R67; R67 := R67["0x5DB0BD4"]
1140 [-]: LOADK     R69 K164     ; R69 := "/Lotus/Language/SystemMessages/TimeUntil"
1141 [-]: MOVE      R70 R0       ; R70 := R0
1142 [-]: NEWTABLE  R71 0 2      ; R71 := {}
1143 [-]: GETGLOBAL R72 K2       ; R72 := mMovie
1144 [-]: SELF      R72 R72 K159 ; R73 := R72; R72 := R72["0x5DB0BD4"]
1145 [-]: MOVE      R74 R56      ; R74 := R56
1146 [-]: MOVE      R75 R0       ; R75 := R0
1147 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
1148 [-]: SETTABLE  R71 K165 R72 ; R71["LABEL"] := R72
1149 [-]: GETUPVAL  R72 U48      ; R72 := U48
1150 [-]: GETTABLE  R72 R72 K167 ; R72 := R72["0xC65D09DD"]
1151 [-]: GETGLOBAL R73 K2       ; R73 := mMovie
1152 [-]: MOVE      R74 R57      ; R74 := R57
1153 [-]: LOADK     R75 K168     ; R75 := "CompactOne"
1154 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
1155 [-]: SETTABLE  R71 K166 R72 ; R71["TIME"] := R72
1156 [-]: CALL      R67 5 2      ; R67 := R67(R68,R69,R70,R71)
1157 [-]: LOADK     R68 K169     ; R68 := "</b><br></font>"
1158 [-]: CONCAT    R58 R59 R68  ; R58 := R59 .. R60 .. R61 .. R62 .. R63 .. R64 .. R65 .. R66 .. R67 .. R68
1159 [-]: MOVE      R59 R58      ; R59 := R58
1160 [-]: GETUPVAL  R60 U21      ; R60 := U21
1161 [-]: GETTABLE  R60 R60 K148 ; R60 := R60["TimerPost"]
1162 [-]: CONCAT    R58 R59 R60  ; R58 := R59 .. R60
1163 [-]: GETGLOBAL R59 K2       ; R59 := mMovie
1164 [-]: SELF      R59 R59 K171 ; R60 := R59; R59 := R59["0x1C19D966"]
1165 [-]: LOADK     R61 K172     ; R61 := "InfoTip.Label"
1166 [-]: LOADK     R62 K173     ; R62 := "text"
1167 [-]: MOVE      R63 R58      ; R63 := R58
1168 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
1169 [-]: GETUPVAL  R59 U21      ; R59 := U21
1170 [-]: SETTABLE  R59 K146 K19 ; R59["UpdateTimer"] := 0
1171 [-]: GETGLOBAL R59 K1       ; R59 := 0x400E7765
1172 [-]: GETUPVAL  R60 U10      ; R60 := U10
1173 [-]: GETTABLE  R60 R60 K174 ; R60 := R60["CountDownFx"]
1174 [-]: CALL      R59 2 2      ; R59 := R59(R60)
1175 [-]: TEST      R59 1        ; if R59 then PC := 1189
1176 [-]: JMP       1189         ; PC := 1189
1177 [-]: GETGLOBAL R59 K1       ; R59 := 0x400E7765
1178 [-]: GETUPVAL  R60 U10      ; R60 := U10
1179 [-]: GETTABLE  R60 R60 K174 ; R60 := R60["CountDownFx"]
1180 [-]: GETTABLE  R60 R60 K39  ; R60 := R60["mInstance"]
1181 [-]: CALL      R59 2 2      ; R59 := R59(R60)
1182 [-]: TEST      R59 1        ; if R59 then PC := 1189
1183 [-]: JMP       1189         ; PC := 1189
1184 [-]: GETUPVAL  R59 U10      ; R59 := U10
1185 [-]: GETTABLE  R59 R59 K174 ; R59 := R59["CountDownFx"]
1186 [-]: SELF      R59 R59 K4   ; R60 := R59; R59 := R59["0x8C7099E9"]
1187 [-]: MOVE      R61 R0       ; R61 := R0
1188 [-]: CALL      R59 3 1      ; R59(R60,R61)
1189 [-]: GETGLOBAL R59 K175     ; R59 := 0xECFDD17
1190 [-]: GETUPVAL  R60 U10      ; R60 := U10
1191 [-]: GETTABLE  R60 R60 K176 ; R60 := R60["PendingFx"]
1192 [-]: CALL      R59 2 4      ; R59,R60,R61 := R59(R60)
1193 [-]: JMP       1206         ; PC := 1206
1194 [-]: GETGLOBAL R64 K1       ; R64 := 0x400E7765
1195 [-]: GETTABLE  R65 R63 K39  ; R65 := R63["mInstance"]
1196 [-]: CALL      R64 2 2      ; R64 := R64(R65)
1197 [-]: TEST      R64 1        ; if R64 then PC := 1203
1198 [-]: JMP       1203         ; PC := 1203
1199 [-]: SELF      R64 R63 K4   ; R65 := R63; R64 := R63["0x8C7099E9"]
1200 [-]: MOVE      R66 R0       ; R66 := R0
1201 [-]: CALL      R64 3 1      ; R64(R65,R66)
1202 [-]: JMP       1206         ; PC := 1206
1203 [-]: GETUPVAL  R64 U10      ; R64 := U10
1204 [-]: GETTABLE  R64 R64 K176 ; R64 := R64["PendingFx"]
1205 [-]: SETTABLE  R64 R62 K38  ; R64[R62] := nil
1206 [-]: TFORLOOP  R59 2        ; R62,R63 :=  R59(R60,R61); if R62 ~= nil then begin PC = 1194; R61 := R62 end
1207 [-]: JMP       1194         ; PC := 1194
1208 [-]: GETGLOBAL R64 K175     ; R64 := 0xECFDD17
1209 [-]: GETUPVAL  R65 U10      ; R65 := U10
1210 [-]: GETTABLE  R65 R65 K177 ; R65 := R65["QuestFx"]
1211 [-]: CALL      R64 2 4      ; R64,R65,R66 := R64(R65)
1212 [-]: JMP       1225         ; PC := 1225
1213 [-]: GETGLOBAL R69 K1       ; R69 := 0x400E7765
1214 [-]: GETTABLE  R70 R68 K39  ; R70 := R68["mInstance"]
1215 [-]: CALL      R69 2 2      ; R69 := R69(R70)
1216 [-]: TEST      R69 1        ; if R69 then PC := 1222
1217 [-]: JMP       1222         ; PC := 1222
1218 [-]: SELF      R69 R68 K4   ; R70 := R68; R69 := R68["0x8C7099E9"]
1219 [-]: MOVE      R71 R0       ; R71 := R0
1220 [-]: CALL      R69 3 1      ; R69(R70,R71)
1221 [-]: JMP       1225         ; PC := 1225
1222 [-]: GETUPVAL  R69 U10      ; R69 := U10
1223 [-]: GETTABLE  R69 R69 K177 ; R69 := R69["QuestFx"]
1224 [-]: SETTABLE  R69 R67 K38  ; R69[R67] := nil
1225 [-]: TFORLOOP  R64 2        ; R67,R68 :=  R64(R65,R66); if R67 ~= nil then begin PC = 1213; R66 := R67 end
1226 [-]: JMP       1213         ; PC := 1213
1227 [-]: GETGLOBAL R69 K175     ; R69 := 0xECFDD17
1228 [-]: GETUPVAL  R70 U10      ; R70 := U10
1229 [-]: GETTABLE  R70 R70 K37  ; R70 := R70["SentientFx"]
1230 [-]: CALL      R69 2 4      ; R69,R70,R71 := R69(R70)
1231 [-]: JMP       1244         ; PC := 1244
1232 [-]: GETGLOBAL R74 K1       ; R74 := 0x400E7765
1233 [-]: GETTABLE  R75 R73 K39  ; R75 := R73["mInstance"]
1234 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1235 [-]: TEST      R74 1        ; if R74 then PC := 1241
1236 [-]: JMP       1241         ; PC := 1241
1237 [-]: SELF      R74 R73 K4   ; R75 := R73; R74 := R73["0x8C7099E9"]
1238 [-]: MOVE      R76 R0       ; R76 := R0
1239 [-]: CALL      R74 3 1      ; R74(R75,R76)
1240 [-]: JMP       1244         ; PC := 1244
1241 [-]: GETUPVAL  R74 U10      ; R74 := U10
1242 [-]: GETTABLE  R74 R74 K37  ; R74 := R74["SentientFx"]
1243 [-]: SETTABLE  R74 R72 K38  ; R74[R72] := nil
1244 [-]: TFORLOOP  R69 2        ; R72,R73 :=  R69(R70,R71); if R72 ~= nil then begin PC = 1232; R71 := R72 end
1245 [-]: JMP       1232         ; PC := 1232
1246 [-]: GETUPVAL  R74 U51      ; R74 := U51
1247 [-]: TEST      R74 0        ; if not R74 then PC := 1253
1248 [-]: JMP       1253         ; PC := 1253
1249 [-]: MOVE      R74 R0       ; R74 := R0
1250 [-]: MOVE      R74 R51      ; R74 := R51
1251 [-]: GETUPVAL  R74 U52      ; R74 := U52
1252 [-]: CALL      R74 1 1      ; R74()
1253 [-]: GETGLOBAL R74 K63      ; R74 := _T
1254 [-]: GETTABLE  R74 R74 K178 ; R74 := R74["UserInvitePending"]
1255 [-]: EQ        0 R74 K38    ; if R74 ~= nil then PC := 1258
1256 [-]: JMP       1258         ; PC := 1258
1257 [-]: MOVE      R74 R0       ; R74 := R0
1258 [-]: MOVE      R74 R1       ; R74 := R1
1259 [-]: GETUPVAL  R75 U53      ; R75 := U53
1260 [-]: EQ        1 R75 R74    ; if R75 == R74 then PC := 1265
1261 [-]: JMP       1265         ; PC := 1265
1262 [-]: MOVE      R74 R53      ; R74 := R53
1263 [-]: GETUPVAL  R75 U54      ; R75 := U54
1264 [-]: CALL      R75 1 1      ; R75()
1265 [-]: RETURN    R0 1         ; return 


; Function #136.1:
;
; Name:            
; Defined at line: 6197
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["radialSector"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mission"]
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["missionType"]
  9 [-]: GETGLOBAL R1 K4        ; R1 := Lotus_Game
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MT_JUNCTION"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U3        ; R0 := U3
 20 [-]: CALL      R0 1 1       ; R0()
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x25992394"]
 23 [-]: GETGLOBAL R1 K7        ; R1 := completeHoldSound
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: GETUPVAL  R0 U5        ; R0 := U5
 26 [-]: GETUPVAL  R1 U0        ; R1 := U0
 27 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 28 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 29 [-]: GETUPVAL  R0 U6        ; R0 := U6
 30 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x61494587"]
 31 [-]: LOADK     R2 K9        ; R2 := 0.10000000149012
 32 [-]: CLOSURE   R3 0         ; R3 := closure(Function #136.1.1)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 35 [-]: RETURN    R0 1         ; return 


; Function #136.1.1:
;
; Name:            
; Defined at line: 6209
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["Node"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #136.2:
;
; Name:            
; Defined at line: 6356
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
  5 [-]: JMP       62           ; PC := 62
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
 11 [-]: JMP       62           ; PC := 62
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
 18 [-]: JMP       62           ; PC := 62
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Active"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R1 U1        ; R1 := U1
 25 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 26 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 27 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["locked"]
 28 [-]: TEST      R0 1         ; if R0 then PC := 62
 29 [-]: JMP       62           ; PC := 62
 30 [-]: GETUPVAL  R0 U3        ; R0 := U3
 31 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["PendingFx"]
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 34 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R0 K6        ; R0 := 0x400E7765
 37 [-]: GETUPVAL  R1 U3        ; R1 := U3
 38 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["PendingFx"]
 39 [-]: GETUPVAL  R2 U1        ; R2 := U1
 40 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 41 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mInstance"]
 42 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 43 [-]: TEST      R0 0         ; if not R0 then PC := 62
 44 [-]: JMP       62           ; PC := 62
 45 [-]: GETUPVAL  R0 U3        ; R0 := U3
 46 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["PendingFx"]
 47 [-]: GETUPVAL  R1 U1        ; R1 := U1
 48 [-]: GETUPVAL  R2 U4        ; R2 := U4
 49 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xAC19E744"]
 50 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 51 [-]: GETUPVAL  R4 U0        ; R4 := U0
 52 [-]: GETUPVAL  R5 U1        ; R5 := U1
 53 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 54 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 55 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 56 [-]: GETGLOBAL R5 K10       ; R5 := nextNodeEffect
 57 [-]: LOADK     R6 K11       ; R6 := 0
 58 [-]: LOADK     R7 K11       ; R7 := 0
 59 [-]: GETGLOBAL R8 K12       ; R8 := gBackgroundRegion
 60 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 61 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 62 [-]: RETURN    R0 1         ; return 


; Function #136.3:
;
; Name:            
; Defined at line: 6369
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := nextNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #136.4:
;
; Name:            
; Defined at line: 6383
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 18 [-]: JMP       51           ; PC := 51
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 23 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 26 [-]: GETUPVAL  R1 U2        ; R1 := U2
 27 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["QuestFx"]
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mInstance"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 51
 33 [-]: JMP       51           ; PC := 51
 34 [-]: GETUPVAL  R0 U2        ; R0 := U2
 35 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 36 [-]: GETUPVAL  R1 U1        ; R1 := U1
 37 [-]: GETUPVAL  R2 U3        ; R2 := U3
 38 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xAC19E744"]
 39 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETUPVAL  R5 U1        ; R5 := U1
 42 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 45 [-]: GETGLOBAL R5 K8        ; R5 := questNodeEffect
 46 [-]: LOADK     R6 K9        ; R6 := 0
 47 [-]: LOADK     R7 K9        ; R7 := 0
 48 [-]: GETGLOBAL R8 K10       ; R8 := gBackgroundRegion
 49 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 50 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 51 [-]: RETURN    R0 1         ; return 


; Function #136.5:
;
; Name:            
; Defined at line: 6395
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := questNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 6476
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETGLOBAL R1 K1        ; R1 := gMatchingService
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xD5E03646"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0xEB3F45BE"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["gameModeId"]
 16 [-]: EQ        1 R2 K6      ; if R2 == 0 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: LOADK     R2 K7        ; R2 := 30
 21 [-]: TEST      R0 1         ; if R0 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETGLOBAL R3 K1        ; R3 := gMatchingService
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x35DDC67D"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: LE        0 R3 K9      ; if R3 > 1 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETUPVAL  R3 U1        ; R3 := U1
 29 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xEC3342D8"]
 30 [-]: CALL      R3 1 2       ; R3 := R3()
 31 [-]: TEST      R3 0         ; if not R3 then PC := 41
 32 [-]: JMP       41           ; PC := 41
 33 [-]: GETGLOBAL R3 K1        ; R3 := gMatchingService
 34 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x9BCA84D2"]
 35 [-]: MOVE      R5 R2        ; R5 := R2
 36 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 37 [-]: MOVE      R3 R3        ; R3 := R3
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: MOVE      R3 R1        ; R3 := R1
 41 [-]: RETURN    R3 2         ; return R3
 42 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 6489
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameRules
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8709CE86"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0x625791A8"]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: CALL      R2 3 1       ; R2(R3,R4)
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 29
 16 [-]: JMP       29           ; PC := 29
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K4        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SquadOverlay"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R2 K4        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 25 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x458F27A9"]
 26 [-]: LOADK     R4 K7        ; R4 := "ForceExitMap"
 27 [-]: LOADK     R5 K8        ; R5 := ""
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: GETGLOBAL R2 K4        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x18468666"]
 31 [-]: LOADK     R3 K10       ; R3 := "Clan"
 32 [-]: CALL      R2 2 1       ; R2(R3)
 33 [-]: GETGLOBAL R2 K4        ; R2 := _T
 34 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x18468666"]
 35 [-]: LOADK     R3 K11       ; R3 := "ClanSearch"
 36 [-]: CALL      R2 2 1       ; R2(R3)
 37 [-]: GETGLOBAL R2 K4        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x18468666"]
 39 [-]: LOADK     R3 K12       ; R3 := "InvasionSelection"
 40 [-]: CALL      R2 2 1       ; R2(R3)
 41 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 42 [-]: GETGLOBAL R3 K4        ; R3 := _T
 43 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mTrigger"]
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: TEST      R2 1         ; if R2 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R2 K4        ; R2 := _T
 48 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mTrigger"]
 49 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x8D5886B7"]
 50 [-]: LOADK     R4 K15       ; R4 := "Close"
 51 [-]: CALL      R2 3 1       ; R2(R3,R4)
 52 [-]: GETGLOBAL R2 K4        ; R2 := _T
 53 [-]: SETTABLE  R2 K13 K16   ; R2["mTrigger"] := nil
 54 [-]: GETGLOBAL R2 K4        ; R2 := _T
 55 [-]: SETTABLE  R2 K17 K16   ; R2["DiegeticPosition"] := nil
 56 [-]: GETUPVAL  R2 U1        ; R2 := U1
 57 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x25992394"]
 58 [-]: GETGLOBAL R3 K19       ; R3 := closeSound
 59 [-]: CALL      R2 2 1       ; R2(R3)
 60 [-]: GETGLOBAL R2 K20       ; R2 := gRegion
 61 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x3E2F6BF"]
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 64 [-]: MOVE      R4 R2        ; R4 := R2
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: SELF      R3 R2 K22    ; R4 := R2; R3 := R2["0x28609C89"]
 69 [-]: GETGLOBAL R5 K23       ; R5 := 0xEC274B1A
 70 [-]: LOADK     R6 K24       ; R6 := "IDLE"
 71 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 72 [-]: CALL      R3 0 1       ; R3(R4,...)
 73 [-]: GETGLOBAL R3 K25       ; R3 := mMovie
 74 [-]: SELF      R3 R3 K26    ; R4 := R3; R3 := R3["0xA58BB96C"]
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 6521
; #Upvalues:       17
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 1         ; if R0 then PC := 106
  2 [-]: JMP       106          ; PC := 106
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Open"]
  9 [-]: TEST      R3 1         ; if R3 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["DioOpen"]
 13 [-]: TEST      R3 0         ; if not R3 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
 23 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 24 [-]: LOADK     R5 K5        ; R5 := "CancelPressed"
 25 [-]: LOADK     R6 K6        ; R6 := ""
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETUPVAL  R3 U2        ; R3 := U2
 29 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["NodeSelectionOpen"]
 30 [-]: TEST      R3 0         ; if not R3 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: GETUPVAL  R3 U2        ; R3 := U2
 33 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["NodeMissionList"]
 34 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x625791A8"]
 35 [-]: MOVE      R5 R0        ; R5 := R0
 36 [-]: CALL      R3 3 1       ; R3(R4,R5)
 37 [-]: GETUPVAL  R3 U3        ; R3 := U3
 38 [-]: CALL      R3 1 1       ; R3()
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: GETGLOBAL R3 K10       ; R3 := Engine
 41 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x9490FE70"]
 42 [-]: CALL      R3 1 2       ; R3 := R3()
 43 [-]: TEST      R3 0         ; if not R3 then PC := 66
 44 [-]: JMP       66           ; PC := 66
 45 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 46 [-]: GETUPVAL  R4 U4        ; R4 := U4
 47 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["ResourceDrone"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: TEST      R3 1         ; if R3 then PC := 66
 50 [-]: JMP       66           ; PC := 66
 51 [-]: GETUPVAL  R3 U4        ; R3 := U4
 52 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["ResourceDrone"]
 53 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 54 [-]: LOADK     R5 K13       ; R5 := "IsExpanded"
 55 [-]: LOADK     R6 K6        ; R6 := ""
 56 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 57 [-]: TEST      R3 0         ; if not R3 then PC := 66
 58 [-]: JMP       66           ; PC := 66
 59 [-]: GETUPVAL  R3 U4        ; R3 := U4
 60 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["ResourceDrone"]
 61 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 62 [-]: LOADK     R5 K14       ; R5 := "DroneInfoUnfocused"
 63 [-]: LOADK     R6 K6        ; R6 := ""
 64 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 67 [-]: GETGLOBAL R4 K15       ; R4 := _T
 68 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["SquadOverlay"]
 69 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 70 [-]: TEST      R3 1         ; if R3 then PC := 81
 71 [-]: JMP       81           ; PC := 81
 72 [-]: GETGLOBAL R3 K15       ; R3 := _T
 73 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["SquadOverlay"]
 74 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 75 [-]: LOADK     R5 K17       ; R5 := "CancelMatchmakingDropdown"
 76 [-]: LOADK     R6 K6        ; R6 := ""
 77 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 78 [-]: TEST      R3 0         ; if not R3 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: RETURN    R0 1         ; return 
 81 [-]: GETUPVAL  R3 U5        ; R3 := U5
 82 [-]: GETUPVAL  R4 U6        ; R4 := U6
 83 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["READ_ONLY"]
 84 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: GETUPVAL  R3 U7        ; R3 := U7
 87 [-]: GETUPVAL  R4 U6        ; R4 := U6
 88 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["READ_ONLY"]
 89 [-]: CALL      R3 2 1       ; R3(R4)
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: GETUPVAL  R3 U8        ; R3 := U8
 92 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["mTargetVal"]
 93 [-]: GETUPVAL  R4 U9        ; R4 := U9
 94 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["STARTING_ZOOM"]
 95 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETGLOBAL R3 K21       ; R3 := mMovie
 98 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 99 [-]: LOADK     R5 K22       ; R5 := "onKeyDown_MENU_RIGHT_CLICK"
100 [-]: LOADK     R6 K6        ; R6 := ""
101 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
102 [-]: RETURN    R0 1         ; return 
103 [-]: EQ        0 R0 K23     ; if R0 ~= "0x0" then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: RETURN    R0 1         ; return 
106 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
107 [-]: GETUPVAL  R4 U1        ; R4 := U1
108 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: TEST      R3 1         ; if R3 then PC := 126
111 [-]: JMP       126          ; PC := 126
112 [-]: GETGLOBAL R3 K24       ; R3 := 0x52E17A90
113 [-]: GETUPVAL  R4 U1        ; R4 := U1
114 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
115 [-]: LOADK     R5 K25       ; R5 := "_root"
116 [-]: GETGLOBAL R6 K26       ; R6 := UISys
117 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["FlashInstance_LINEAR"]
118 [-]: NEWTABLE  R7 1 0       ; R7 := {}
119 [-]: LOADK     R8 K28       ; R8 := "_alpha"
120 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
121 [-]: NEWTABLE  R8 1 0       ; R8 := {}
122 [-]: LOADK     R9 K29       ; R9 := 0
123 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
124 [-]: LOADK     R9 K30       ; R9 := 0.30000001192093
125 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
126 [-]: TEST      R2 1         ; if R2 then PC := 132
127 [-]: JMP       132          ; PC := 132
128 [-]: GETUPVAL  R3 U10       ; R3 := U10
129 [-]: GETTABLE  R3 R3 K31    ; R3 := R3["0x25992394"]
130 [-]: GETGLOBAL R4 K32       ; R4 := closeSound
131 [-]: CALL      R3 2 1       ; R3(R4)
132 [-]: GETUPVAL  R3 U11       ; R3 := U11
133 [-]: MOVE      R4 R2        ; R4 := R2
134 [-]: CALL      R3 2 2       ; R3 := R3(R4)
135 [-]: TEST      R3 0         ; if not R3 then PC := 149
136 [-]: JMP       149          ; PC := 149
137 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
138 [-]: GETGLOBAL R4 K15       ; R4 := _T
139 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["SquadOverlay"]
140 [-]: CALL      R3 2 2       ; R3 := R3(R4)
141 [-]: TEST      R3 1         ; if R3 then PC := 149
142 [-]: JMP       149          ; PC := 149
143 [-]: GETGLOBAL R3 K15       ; R3 := _T
144 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["SquadOverlay"]
145 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
146 [-]: LOADK     R5 K33       ; R5 := "ForceExitMap"
147 [-]: LOADK     R6 K6        ; R6 := ""
148 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
149 [-]: GETGLOBAL R3 K15       ; R3 := _T
150 [-]: GETTABLE  R3 R3 K34    ; R3 := R3["0x45CBC39B"]
151 [-]: CALL      R3 1 1       ; R3()
152 [-]: MOVE      R3 R1        ; R3 := R1
153 [-]: MOVE      R3 R0        ; R3 := R0
154 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
155 [-]: GETUPVAL  R4 U12       ; R4 := U12
156 [-]: CALL      R3 2 2       ; R3 := R3(R4)
157 [-]: TEST      R3 1         ; if R3 then PC := 169
158 [-]: JMP       169          ; PC := 169
159 [-]: GETUPVAL  R3 U12       ; R3 := U12
160 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0xCE468565"]
161 [-]: LOADK     R5 K36       ; R5 := "x"
162 [-]: LOADK     R6 K37       ; R6 := 0.5
163 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
164 [-]: GETUPVAL  R3 U12       ; R3 := U12
165 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0xCE468565"]
166 [-]: LOADK     R5 K38       ; R5 := "y"
167 [-]: LOADK     R6 K37       ; R6 := 0.5
168 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
169 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
170 [-]: GETUPVAL  R4 U13       ; R4 := U13
171 [-]: CALL      R3 2 2       ; R3 := R3(R4)
172 [-]: TEST      R3 1         ; if R3 then PC := 200
173 [-]: JMP       200          ; PC := 200
174 [-]: GETUPVAL  R3 U14       ; R3 := U14
175 [-]: SETTABLE  R3 K39 K40   ; R3["Locked"] := "0x1"
176 [-]: GETUPVAL  R3 U14       ; R3 := U14
177 [-]: GETUPVAL  R4 U13       ; R4 := U13
178 [-]: SELF      R4 R4 K42    ; R5 := R4; R4 := R4["0x6DA72501"]
179 [-]: CALL      R4 2 2       ; R4 := R4(R5)
180 [-]: SETTABLE  R3 K41 R4    ; R3["Previous"] := R4
181 [-]: GETUPVAL  R3 U14       ; R3 := U14
182 [-]: GETUPVAL  R4 U15       ; R4 := U15
183 [-]: GETGLOBAL R5 K44       ; R5 := 0x221C9700
184 [-]: LOADK     R6 K29       ; R6 := 0
185 [-]: LOADK     R7 K29       ; R7 := 0
186 [-]: LOADK     R8 K45       ; R8 := 35
187 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
188 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
189 [-]: SETTABLE  R3 K43 R4    ; R3["Target"] := R4
190 [-]: GETUPVAL  R3 U14       ; R3 := U14
191 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["Prop"]
192 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0x5A7A6B1"]
193 [-]: LOADK     R5 K29       ; R5 := 0
194 [-]: CALL      R3 3 1       ; R3(R4,R5)
195 [-]: GETUPVAL  R3 U14       ; R3 := U14
196 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["Prop"]
197 [-]: SELF      R3 R3 K48    ; R4 := R3; R3 := R3["0xDB349344"]
198 [-]: LOADK     R5 K49       ; R5 := 1
199 [-]: CALL      R3 3 1       ; R3(R4,R5)
200 [-]: GETUPVAL  R3 U8        ; R3 := U8
201 [-]: SELF      R3 R3 K48    ; R4 := R3; R3 := R3["0xDB349344"]
202 [-]: LOADK     R5 K50       ; R5 := -100
203 [-]: CALL      R3 3 1       ; R3(R4,R5)
204 [-]: TEST      R1 0         ; if not R1 then PC := 213
205 [-]: JMP       213          ; PC := 213
206 [-]: GETGLOBAL R3 K51       ; R3 := gFlashMgr
207 [-]: SELF      R3 R3 K52    ; R4 := R3; R3 := R3["0xC4E70543"]
208 [-]: CALL      R3 2 1       ; R3(R4)
209 [-]: GETUPVAL  R3 U16       ; R3 := U16
210 [-]: MOVE      R4 R2        ; R4 := R2
211 [-]: CALL      R3 2 1       ; R3(R4)
212 [-]: JMP       237          ; PC := 237
213 [-]: GETGLOBAL R3 K24       ; R3 := 0x52E17A90
214 [-]: GETGLOBAL R4 K21       ; R4 := mMovie
215 [-]: LOADK     R5 K25       ; R5 := "_root"
216 [-]: GETGLOBAL R6 K26       ; R6 := UISys
217 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["FlashInstance_LINEAR"]
218 [-]: NEWTABLE  R7 1 0       ; R7 := {}
219 [-]: LOADK     R8 K28       ; R8 := "_alpha"
220 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
221 [-]: NEWTABLE  R8 1 0       ; R8 := {}
222 [-]: LOADK     R9 K29       ; R9 := 0
223 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
224 [-]: LOADK     R9 K30       ; R9 := 0.30000001192093
225 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
226 [-]: GETUPVAL  R3 U10       ; R3 := U10
227 [-]: GETTABLE  R3 R3 K53    ; R3 := R3["0xDB33ECB2"]
228 [-]: GETGLOBAL R4 K21       ; R4 := mMovie
229 [-]: LOADK     R5 K49       ; R5 := 1
230 [-]: LOADK     R6 K30       ; R6 := 0.30000001192093
231 [-]: LOADK     R7 K29       ; R7 := 0
232 [-]: CLOSURE   R8 0         ; R8 := closure(Function #139.1)
233 [-]: GETUPVAL  R0 U16       ; R0 := U16
234 [-]: MOVE      R0 R2        ; R0 := R2
235 [-]: GETUPVAL  R0 U10       ; R0 := U10
236 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
237 [-]: RETURN    R0 1         ; return 


; Function #139.1:
;
; Name:            
; Defined at line: 6600
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC4E70543"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R0 2 1       ; R0(R1)
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xDB33ECB2"]
  9 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 10 [-]: LOADK     R2 K4        ; R2 := 0
 11 [-]: LOADK     R3 K5        ; R3 := 0.20000000298023
 12 [-]: LOADK     R4 K4        ; R4 := 0
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 6608
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R4 K1        ; R4 := _T
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["SCREEN_EXIT_REASON_FORCE_CLOSE"]
  6 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R4 K1        ; R4 := _T
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
 10 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: EQ        1 R1 K0      ; if R1 == "true" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: EQ        1 R2 K0      ; if R2 == "true" then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R6 R0        ; R6 := R0
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 23 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 6612
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := 1
  2 [-]: LOADK     R3 K1        ; R3 := 100000
  3 [-]: LOADK     R4 K0        ; R4 := 1
  4 [-]: LEN       R5 R0        ; R5 := # R0
  5 [-]: LOADK     R6 K0        ; R6 := 1
  6 [-]: FORPREP   R4 15        ; R4 -= R6; PC := 15
  7 [-]: GETGLOBAL R8 K2        ; R8 := 0xB09F286F
  8 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
  9 [-]: MOVE      R10 R1       ; R10 := R1
 10 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 11 [-]: LT        0 R8 R3      ; if R8 >= R3 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R3 R8        ; R3 := R8
 14 [-]: MOVE      R2 R7        ; R2 := R7
 15 [-]: FORLOOP   R4 7         ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 6626
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["NodeSelectionOpen"]
 11 [-]: TEST      R0 0         ; if not R0 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R0 U2        ; R0 := U2
 15 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0x5328C56B"]
 16 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 20 [-]: LOADK     R3 K5        ; R3 := "Reticle"
 21 [-]: LOADK     R4 K6        ; R4 := "_x"
 22 [-]: GETUPVAL  R5 U2        ; R5 := U2
 23 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["0xB57E56DF"]
 24 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["x"]
 25 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 26 [-]: CALL      R1 0 1       ; R1(R2,...)
 27 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 28 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 29 [-]: LOADK     R3 K5        ; R3 := "Reticle"
 30 [-]: LOADK     R4 K9        ; R4 := "_y"
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["0xB57E56DF"]
 33 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["y"]
 34 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 35 [-]: CALL      R1 0 1       ; R1(R2,...)
 36 [-]: GETUPVAL  R1 U3        ; R1 := U3
 37 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: GETUPVAL  R1 U3        ; R1 := U3
 40 [-]: CALL      R1 1 1       ; R1()
 41 [-]: LOADNIL   R1 R1        ; R1 := nil
 42 [-]: MOVE      R1 R3        ; R1 := R3
 43 [-]: GETUPVAL  R1 U4        ; R1 := U4
 44 [-]: TEST      R1 1         ; if R1 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETUPVAL  R1 U5        ; R1 := U5
 47 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0xD963824A"]
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: GETUPVAL  R1 U6        ; R1 := U6
 50 [-]: GETUPVAL  R2 U7        ; R2 := U7
 51 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["EDIT_REGIONS"]
 52 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 64
 53 [-]: JMP       64           ; PC := 64
 54 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 55 [-]: GETUPVAL  R2 U8        ; R2 := U8
 56 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["mMovingRegion"]
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: TEST      R1 1         ; if R1 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R1 U8        ; R1 := U8
 61 [-]: SETTABLE  R1 K14 K11   ; R1["mMovingRegion"] := nil
 62 [-]: GETUPVAL  R1 U8        ; R1 := U8
 63 [-]: SETTABLE  R1 K15 K11   ; R1["mChildNodes"] := nil
 64 [-]: GETUPVAL  R1 U6        ; R1 := U6
 65 [-]: GETUPVAL  R2 U7        ; R2 := U7
 66 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["EDIT_NODES"]
 67 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 77
 68 [-]: JMP       77           ; PC := 77
 69 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 70 [-]: GETUPVAL  R2 U8        ; R2 := U8
 71 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mMovingNode"]
 72 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 73 [-]: TEST      R1 1         ; if R1 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: GETUPVAL  R1 U8        ; R1 := U8
 76 [-]: SETTABLE  R1 K17 K11   ; R1["mMovingNode"] := nil
 77 [-]: GETUPVAL  R1 U6        ; R1 := U6
 78 [-]: GETUPVAL  R2 U7        ; R2 := U7
 79 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["EDIT_NODE_DECOS"]
 80 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 83 [-]: GETUPVAL  R2 U8        ; R2 := U8
 84 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mMovingNode"]
 85 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 86 [-]: TEST      R1 1         ; if R1 then PC := 96
 87 [-]: JMP       96           ; PC := 96
 88 [-]: GETUPVAL  R1 U8        ; R1 := U8
 89 [-]: SETTABLE  R1 K17 K11   ; R1["mMovingNode"] := nil
 90 [-]: GETUPVAL  R1 U8        ; R1 := U8
 91 [-]: SETTABLE  R1 K19 K20   ; R1["mEditingOffset"] := "0x0"
 92 [-]: GETUPVAL  R1 U8        ; R1 := U8
 93 [-]: SETTABLE  R1 K21 K20   ; R1["mEditingRotation"] := "0x0"
 94 [-]: GETUPVAL  R1 U8        ; R1 := U8
 95 [-]: SETTABLE  R1 K22 K20   ; R1["mEditingScale"] := "0x0"
 96 [-]: GETUPVAL  R1 U6        ; R1 := U6
 97 [-]: GETUPVAL  R2 U7        ; R2 := U7
 98 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
 99 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 107
100 [-]: JMP       107          ; PC := 107
101 [-]: GETUPVAL  R1 U8        ; R1 := U8
102 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["mControlPointHeld"]
103 [-]: TEST      R1 0         ; if not R1 then PC := 107
104 [-]: JMP       107          ; PC := 107
105 [-]: GETUPVAL  R1 U8        ; R1 := U8
106 [-]: SETTABLE  R1 K24 K20   ; R1["mControlPointHeld"] := "0x0"
107 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 6665
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 6669
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["x"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["y"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["z"]
  4 [-]: RETURN    R2 4         ; return R2,R3,R4
  5 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 6691
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["position"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x221C9700
  3 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["x"]
  4 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["y"]
  5 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["z"]
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: LOADNIL   R3 R3        ; R3 := nil
  8 [-]: LOADK     R4 K5        ; R4 := 1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: LEN       R5 R5        ; R5 := # R5
 11 [-]: LOADK     R6 K5        ; R6 := 1
 12 [-]: FORPREP   R4 20        ; R4 -= R6; PC := 20
 13 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["radialSector"]
 14 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["region"]
 15 [-]: SUB       R9 R7 K5     ; R9 := R7 - 1
 16 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R3 R8 R7     ; R3 := R8[R7]
 20 [-]: FORLOOP   R4 13        ; R4 += R6; if R4 <= R5 then begin PC := 13; R7 := R4 end
 21 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 22 [-]: GETUPVAL  R9 U1        ; R9 := U1
 23 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 24 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 25 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 26 [-]: UNM       R8 R8        ; R8 := - R8
 27 [-]: GETUPVAL  R9 U1        ; R9 := U1
 28 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 29 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 30 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETTABLE  R8 R3 K9     ; R8 := R3["zoomedFraming"]
 33 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["z"]
 34 [-]: ADD       R8 R8 K10    ; R8 := R8 + 0.64999997615814
 35 [-]: SETTABLE  R2 K4 R8     ; R2["z"] := R8
 36 [-]: JMP       38           ; PC := 38
 37 [-]: SETTABLE  R2 K4 K11    ; R2["z"] := 8
 38 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 39 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 40 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 41 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 42 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 43 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 44 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 45 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 46 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 47 [-]: GETTABLE  R9 R2 K3     ; R9 := R2["y"]
 48 [-]: GETTABLE  R10 R2 K4    ; R10 := R2["z"]
 49 [-]: RETURN    R8 4         ; return R8,R9,R10
 50 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 6716
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R2        ; R0 := R2
 13 [-]: JMP       14           ; PC := 14
 14 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 6728
; #Upvalues:       15
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: EQ        0 R3 R0      ; if R3 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R3 1 1       ; R3()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R3 2 1       ; R3(R4)
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: CALL      R3 1 1       ; R3()
 14 [-]: GETUPVAL  R3 U3        ; R3 := U3
 15 [-]: MOVE      R4 R0        ; R4 := R0
 16 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["zoomedFraming"]
 17 [-]: CALL      R3 3 4       ; R3,R4,R5 := R3(R4,R5)
 18 [-]: GETUPVAL  R6 U4        ; R6 := U4
 19 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 20 [-]: LOADK     R8 K2        ; R8 := "x"
 21 [-]: MOVE      R9 R3        ; R9 := R3
 22 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 23 [-]: GETUPVAL  R6 U4        ; R6 := U4
 24 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 25 [-]: LOADK     R8 K3        ; R8 := "y"
 26 [-]: MOVE      R9 R4        ; R9 := R4
 27 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 28 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 29 [-]: MOVE      R7 R2        ; R7 := R2
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: TEST      R6 0         ; if not R6 then PC := 38
 32 [-]: JMP       38           ; PC := 38
 33 [-]: GETUPVAL  R6 U5        ; R6 := U5
 34 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xDB349344"]
 35 [-]: MOVE      R8 R5        ; R8 := R5
 36 [-]: CALL      R6 3 1       ; R6(R7,R8)
 37 [-]: MOVE      R1 R6        ; R1 := R6
 38 [-]: GETUPVAL  R6 U8        ; R6 := U8
 39 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xF81722A2"]
 40 [-]: GETUPVAL  R7 U9        ; R7 := U9
 41 [-]: LOADK     R8 K7        ; R8 := 0.5
 42 [-]: LOADK     R9 K8        ; R9 := 2
 43 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 44 [-]: MOVE      R6 R7        ; R6 := R7
 45 [-]: GETUPVAL  R6 U8        ; R6 := U8
 46 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0x25992394"]
 47 [-]: GETGLOBAL R7 K10       ; R7 := zoomInRegionSound
 48 [-]: CALL      R6 2 1       ; R6(R7)
 49 [-]: GETUPVAL  R6 U10       ; R6 := U10
 50 [-]: CALL      R6 1 1       ; R6()
 51 [-]: GETGLOBAL R6 K11       ; R6 := 0xCAA43ABB
 52 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["zoomedInEffects"]
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 55 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["instance"]
 56 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 57 [-]: TEST      R7 1         ; if R7 then PC := 69
 58 [-]: JMP       69           ; PC := 69
 59 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 60 [-]: MOVE      R8 R6        ; R8 := R6
 61 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 62 [-]: TEST      R7 1         ; if R7 then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["instance"]
 65 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7["0xAB436EF2"]
 66 [-]: MOVE      R9 R6        ; R9 := R6
 67 [-]: GETGLOBAL R10 K15      ; R10 := EMPTY_SYMBOL
 68 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 69 [-]: GETUPVAL  R7 U11       ; R7 := U11
 70 [-]: GETTABLE  R7 R7 K16    ; R7 := R7[1]
 71 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 72 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 73 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["red"]
 74 [-]: CALL      R7 3 1       ; R7(R8,R9)
 75 [-]: GETUPVAL  R7 U11       ; R7 := U11
 76 [-]: GETTABLE  R7 R7 K8     ; R7 := R7[2]
 77 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 78 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 79 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["green"]
 80 [-]: CALL      R7 3 1       ; R7(R8,R9)
 81 [-]: GETUPVAL  R7 U11       ; R7 := U11
 82 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[3]
 83 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 84 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 85 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["blue"]
 86 [-]: CALL      R7 3 1       ; R7(R8,R9)
 87 [-]: GETGLOBAL R7 K22       ; R7 := _T
 88 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 89 [-]: TEST      R7 0         ; if not R7 then PC := 94
 90 [-]: JMP       94           ; PC := 94
 91 [-]: GETGLOBAL R7 K22       ; R7 := _T
 92 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 93 [-]: SETTABLE  R7 K24 R0    ; R7["selectedPlanet"] := R0
 94 [-]: GETGLOBAL R7 K22       ; R7 := _T
 95 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["NemesisRegionTransmissionPlayed"]
 96 [-]: TEST      R7 1         ; if R7 then PC := 161
 97 [-]: JMP       161          ; PC := 161
 98 [-]: GETUPVAL  R7 U12       ; R7 := U12
 99 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["Active"]
100 [-]: TEST      R7 1         ; if R7 then PC := 161
101 [-]: JMP       161          ; PC := 161
102 [-]: GETGLOBAL R7 K27       ; R7 := gGameData
103 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7["0x17358D95"]
104 [-]: CALL      R7 2 2       ; R7 := R7(R8)
105 [-]: GETGLOBAL R8 K4        ; R8 := 0x400E7765
106 [-]: MOVE      R9 R7        ; R9 := R7
107 [-]: CALL      R8 2 2       ; R8 := R8(R9)
108 [-]: TEST      R8 1         ; if R8 then PC := 161
109 [-]: JMP       161          ; PC := 161
110 [-]: GETTABLE  R8 R7 K29    ; R8 := R7["mInfluenceNodes"]
111 [-]: LOADK     R9 K16       ; R9 := 1
112 [-]: LEN       R10 R8       ; R10 := # R8
113 [-]: LOADK     R11 K16      ; R11 := 1
114 [-]: FORPREP   R9 160       ; R9 -= R11; PC := 160
115 [-]: GETUPVAL  R13 U13      ; R13 := U13
116 [-]: SELF      R13 R13 K30  ; R14 := R13; R13 := R13["0xF64198FD"]
117 [-]: GETTABLE  R15 R8 R12   ; R15 := R8[R12]
118 [-]: GETTABLE  R15 R15 K31  ; R15 := R15["mNode"]
119 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
120 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["name"]
121 [-]: GETTABLE  R14 R0 K32   ; R14 := R0["name"]
122 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 160
123 [-]: JMP       160          ; PC := 160
124 [-]: GETGLOBAL R13 K33      ; R13 := _G
125 [-]: GETGLOBAL R14 K33      ; R14 := _G
126 [-]: GETTABLE  R14 R14 K34  ; R14 := R14["NemesisTauntCooldowns"]
127 [-]: TEST      R14 1        ; if R14 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: NEWTABLE  R14 0 0      ; R14 := {}
130 [-]: SETTABLE  R13 K34 R14  ; R13["NemesisTauntCooldowns"] := R14
131 [-]: GETGLOBAL R13 K33      ; R13 := _G
132 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["NemesisTauntCooldowns"]
133 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["InfluenceRegion"]
134 [-]: TEST      R13 0        ; if not R13 then PC := 145
135 [-]: JMP       145          ; PC := 145
136 [-]: GETGLOBAL R13 K33      ; R13 := _G
137 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["NemesisTauntCooldowns"]
138 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["InfluenceRegion"]
139 [-]: ADD       R13 R13 K36  ; R13 := R13 + 1200
140 [-]: GETGLOBAL R14 K37      ; R14 := gGameRules
141 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0x7B107ACD"]
142 [-]: CALL      R14 2 2      ; R14 := R14(R15)
143 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 157
144 [-]: JMP       157          ; PC := 157
145 [-]: GETUPVAL  R13 U14      ; R13 := U14
146 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["0x85329A4B"]
147 [-]: GETGLOBAL R14 K40      ; R14 := 0xEC274B1A
148 [-]: LOADK     R15 K35      ; R15 := "InfluenceRegion"
149 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
150 [-]: CALL      R13 0 1      ; R13(R14,...)
151 [-]: GETGLOBAL R13 K33      ; R13 := _G
152 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["NemesisTauntCooldowns"]
153 [-]: GETGLOBAL R14 K37      ; R14 := gGameRules
154 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0x7B107ACD"]
155 [-]: CALL      R14 2 2      ; R14 := R14(R15)
156 [-]: SETTABLE  R13 K35 R14  ; R13["InfluenceRegion"] := R14
157 [-]: GETGLOBAL R13 K22      ; R13 := _T
158 [-]: SETTABLE  R13 K25 K41  ; R13["NemesisRegionTransmissionPlayed"] := "0x1"
159 [-]: JMP       161          ; PC := 161
160 [-]: FORLOOP   R9 115       ; R9 += R11; if R9 <= R10 then begin PC := 115; R12 := R9 end
161 [-]: GETGLOBAL R13 K22      ; R13 := _T
162 [-]: SETTABLE  R13 K42 R0   ; R13["StarChartSelectedRegion"] := R0
163 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 6789
; #Upvalues:       13
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U4        ; R2 := U4
 15 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
 16 [-]: GETUPVAL  R3 U5        ; R3 := U5
 17 [-]: LOADK     R4 K1        ; R4 := 0.5
 18 [-]: LOADK     R5 K2        ; R5 := 2
 19 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 20 [-]: MOVE      R2 R3        ; R2 := R3
 21 [-]: GETUPVAL  R2 U6        ; R2 := U6
 22 [-]: MOVE      R3 R0        ; R3 := R0
 23 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["zoomedFraming"]
 24 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
 25 [-]: GETUPVAL  R5 U7        ; R5 := U7
 26 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mCurrentScroll"]
 27 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["x"]
 28 [-]: GETUPVAL  R6 U7        ; R6 := U7
 29 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mCurrentScroll"]
 30 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["y"]
 31 [-]: GETUPVAL  R7 U4        ; R7 := U4
 32 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x2D888705"]
 33 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 34 [-]: SETTABLE  R8 K8 R5     ; R8["X"] := R5
 35 [-]: SETTABLE  R8 K9 R6     ; R8["Y"] := R6
 36 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 37 [-]: SETTABLE  R9 K8 R2     ; R9["X"] := R2
 38 [-]: SETTABLE  R9 K9 R3     ; R9["Y"] := R3
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: LOADK     R8 K10       ; R8 := 0
 41 [-]: LOADK     R9 K10       ; R9 := 0
 42 [-]: GETUPVAL  R10 U8       ; R10 := U8
 43 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mCurVal"]
 44 [-]: LT        0 K10 R7     ; if 0 >= R7 then PC := 53
 45 [-]: JMP       53           ; PC := 53
 46 [-]: GETGLOBAL R11 K12      ; R11 := math
 47 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0x8B011038"]
 48 [-]: LOADK     R12 K14      ; R12 := 1.5
 49 [-]: MUL       R13 K15 R7   ; R13 := 4 * R7
 50 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 51 [-]: TEST      R11 1        ; if R11 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: LOADK     R11 K10      ; R11 := 0
 54 [-]: LOADK     R12 K16      ; R12 := -2
 55 [-]: CLOSURE   R13 0        ; R13 := closure(Function #148.1)
 56 [-]: MOVE      R0 R10       ; R0 := R10
 57 [-]: MOVE      R0 R12       ; R0 := R12
 58 [-]: MOVE      R0 R4        ; R0 := R4
 59 [-]: GETUPVAL  R0 U8        ; R0 := U8
 60 [-]: MOVE      R0 R8        ; R0 := R8
 61 [-]: MOVE      R0 R5        ; R0 := R5
 62 [-]: MOVE      R0 R2        ; R0 := R2
 63 [-]: MOVE      R0 R9        ; R0 := R9
 64 [-]: MOVE      R0 R6        ; R0 := R6
 65 [-]: MOVE      R0 R3        ; R0 := R3
 66 [-]: GETUPVAL  R0 U7        ; R0 := U7
 67 [-]: GETUPVAL  R0 U9        ; R0 := U9
 68 [-]: GETUPVAL  R0 U10       ; R0 := U10
 69 [-]: MOVE      R14 R1       ; R14 := R1
 70 [-]: MOVE      R14 R11      ; R14 := R11
 71 [-]: GETGLOBAL R14 K17      ; R14 := 0x52E17A90
 72 [-]: GETGLOBAL R15 K18      ; R15 := mMovie
 73 [-]: LOADK     R16 K19      ; R16 := "_root"
 74 [-]: GETGLOBAL R17 K20      ; R17 := UISys
 75 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["FlashInstance_LINEAR"]
 76 [-]: NEWTABLE  R18 1 0      ; R18 := {}
 77 [-]: MOVE      R19 R13      ; R19 := R13
 78 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 79 [-]: NEWTABLE  R19 1 0      ; R19 := {}
 80 [-]: LOADK     R20 K22      ; R20 := 1
 81 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
 82 [-]: MOVE      R20 R11      ; R20 := R11
 83 [-]: LOADK     R21 K10      ; R21 := 0
 84 [-]: CLOSURE   R22 1        ; R22 := closure(Function #148.2)
 85 [-]: GETUPVAL  R0 U11       ; R0 := U11
 86 [-]: MOVE      R0 R1        ; R0 := R1
 87 [-]: CALL      R14 9 1      ; R14(R15,R16,R17,R18,R19,R20,R21,R22)
 88 [-]: GETUPVAL  R14 U4       ; R14 := U4
 89 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0x25992394"]
 90 [-]: GETGLOBAL R15 K24      ; R15 := jumpToRegionSound
 91 [-]: CALL      R14 2 1      ; R14(R15)
 92 [-]: GETUPVAL  R14 U12      ; R14 := U12
 93 [-]: GETTABLE  R14 R14 K22  ; R14 := R14[1]
 94 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 95 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
 96 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["red"]
 97 [-]: CALL      R14 3 1      ; R14(R15,R16)
 98 [-]: GETUPVAL  R14 U12      ; R14 := U12
 99 [-]: GETTABLE  R14 R14 K2   ; R14 := R14[2]
100 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
101 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
102 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["green"]
103 [-]: CALL      R14 3 1      ; R14(R15,R16)
104 [-]: GETUPVAL  R14 U12      ; R14 := U12
105 [-]: GETTABLE  R14 R14 K29  ; R14 := R14[3]
106 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
107 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
108 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["blue"]
109 [-]: CALL      R14 3 1      ; R14(R15,R16)
110 [-]: GETGLOBAL R14 K31      ; R14 := 0xCAA43ABB
111 [-]: GETTABLE  R15 R0 K32   ; R15 := R0["zoomedInEffects"]
112 [-]: CALL      R14 2 2      ; R14 := R14(R15)
113 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
114 [-]: GETTABLE  R16 R0 K34   ; R16 := R0["instance"]
115 [-]: CALL      R15 2 2      ; R15 := R15(R16)
116 [-]: TEST      R15 1        ; if R15 then PC := 128
117 [-]: JMP       128          ; PC := 128
118 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
119 [-]: MOVE      R16 R14      ; R16 := R14
120 [-]: CALL      R15 2 2      ; R15 := R15(R16)
121 [-]: TEST      R15 1        ; if R15 then PC := 128
122 [-]: JMP       128          ; PC := 128
123 [-]: GETTABLE  R15 R0 K34   ; R15 := R0["instance"]
124 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15["0xAB436EF2"]
125 [-]: MOVE      R17 R14      ; R17 := R14
126 [-]: GETGLOBAL R18 K36      ; R18 := EMPTY_SYMBOL
127 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
128 [-]: RETURN    R0 1         ; return 


; Function #148.1:
;
; Name:            
; Defined at line: 6816
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9E1B8940
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
 10 [-]: GETGLOBAL R4 K1        ; R4 := math
 11 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xD6F2D811"]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: LOADK     R6 K3        ; R6 := 0.89999997615814
 14 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 15 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: LOADK     R3 K4        ; R3 := 0
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: LE        0 R4 K5      ; if R4 > 0.5 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: GETUPVAL  R7 U1        ; R7 := U1
 24 [-]: MOVE      R8 R4        ; R8 := R4
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: MOVE      R3 R5        ; R3 := R5
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETUPVAL  R7 U2        ; R7 := U2
 31 [-]: MOVE      R8 R4        ; R8 := R4
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: MOVE      R3 R5        ; R3 := R5
 34 [-]: GETUPVAL  R5 U3        ; R5 := U3
 35 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 36 [-]: MOVE      R7 R3        ; R7 := R3
 37 [-]: CALL      R5 3 1       ; R5(R6,R7)
 38 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 39 [-]: GETUPVAL  R6 U5        ; R6 := U5
 40 [-]: GETUPVAL  R7 U6        ; R7 := U6
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: MOVE      R5 R4        ; R5 := R4
 44 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 45 [-]: GETUPVAL  R6 U8        ; R6 := U8
 46 [-]: GETUPVAL  R7 U9        ; R7 := U9
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R5 R7        ; R5 := R7
 50 [-]: GETUPVAL  R5 U10       ; R5 := U10
 51 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 52 [-]: LOADK     R7 K9        ; R7 := "x"
 53 [-]: GETUPVAL  R8 U4        ; R8 := U4
 54 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 55 [-]: GETUPVAL  R5 U10       ; R5 := U10
 56 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 57 [-]: LOADK     R7 K10       ; R7 := "y"
 58 [-]: GETUPVAL  R8 U7        ; R8 := U7
 59 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 60 [-]: GETUPVAL  R5 U11       ; R5 := U11
 61 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 62 [-]: GETUPVAL  R7 U4        ; R7 := U4
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: GETUPVAL  R5 U12       ; R5 := U12
 65 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 66 [-]: GETUPVAL  R7 U7        ; R7 := U7
 67 [-]: CALL      R5 3 1       ; R5(R6,R7)
 68 [-]: RETURN    R0 1         ; return 


; Function #148.2:
;
; Name:            
; Defined at line: 6839
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 6857
; #Upvalues:       10
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  122

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0x9FAED6BC
  2 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["name"]
  3 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  4 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["radialSector"]
  5 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["name"]
  6 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["radialSector"]
  7 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["nodeType"]
  8 [-]: GETUPVAL  R10 U1       ; R10 := U1
  9 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0x4A4041CA"]
 10 [-]: MOVE      R11 R0       ; R11 := R0
 11 [-]: MOVE      R12 R2       ; R12 := R2
 12 [-]: GETUPVAL  R13 U2       ; R13 := U2
 13 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 14 [-]: MOVE      R10 R0       ; R10 := R0
 15 [-]: GETUPVAL  R10 U0       ; R10 := U0
 16 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["mName"]
 17 [-]: GETGLOBAL R11 K6       ; R11 := _G
 18 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["CachedGoalInfo"]
 19 [-]: LOADK     R12 K8       ; R12 := ""
 20 [-]: LOADK     R13 K8       ; R13 := ""
 21 [-]: LOADNIL   R14 R14      ; R14 := nil
 22 [-]: GETGLOBAL R15 K9       ; R15 := string
 23 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["0x639C642A"]
 24 [-]: GETGLOBAL R16 K11      ; R16 := 0xE6DC43B0
 25 [-]: GETGLOBAL R17 K0       ; R17 := 0x9FAED6BC
 26 [-]: GETTABLE  R18 R0 K12   ; R18 := R0["locTag"]
 27 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 28 [-]: MOVE      R18 R0       ; R18 := R0
 29 [-]: CALL      R16 3 0      ; R16,... := R16(R17,R18)
 30 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 31 [-]: GETGLOBAL R16 K13      ; R16 := _T
 32 [-]: GETTABLE  R16 R16 K14  ; R16 := R16["CachedSyndicateMissions"]
 33 [-]: GETTABLE  R16 R16 R7   ; R16 := R16[R7]
 34 [-]: TEST      R16 0        ; if not R16 then PC := 69
 35 [-]: JMP       69           ; PC := 69
 36 [-]: GETGLOBAL R16 K13      ; R16 := _T
 37 [-]: GETTABLE  R16 R16 K14  ; R16 := R16["CachedSyndicateMissions"]
 38 [-]: GETTABLE  R16 R16 R7   ; R16 := R16[R7]
 39 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["mVisible"]
 40 [-]: TEST      R16 0        ; if not R16 then PC := 69
 41 [-]: JMP       69           ; PC := 69
 42 [-]: GETGLOBAL R16 K13      ; R16 := _T
 43 [-]: GETTABLE  R16 R16 K16  ; R16 := R16["CachedAlerts"]
 44 [-]: GETTABLE  R16 R16 R7   ; R16 := R16[R7]
 45 [-]: TEST      R16 0        ; if not R16 then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETGLOBAL R16 K13      ; R16 := _T
 48 [-]: GETTABLE  R16 R16 K16  ; R16 := R16["CachedAlerts"]
 49 [-]: GETTABLE  R16 R16 R7   ; R16 := R16[R7]
 50 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["mVisible"]
 51 [-]: TEST      R16 1        ; if R16 then PC := 69
 52 [-]: JMP       69           ; PC := 69
 53 [-]: GETTABLE  R16 R11 R7   ; R16 := R11[R7]
 54 [-]: TEST      R16 1        ; if R16 then PC := 69
 55 [-]: JMP       69           ; PC := 69
 56 [-]: MOVE      R16 R15      ; R16 := R15
 57 [-]: LOADK     R17 K17      ; R17 := " - "
 58 [-]: GETGLOBAL R18 K9       ; R18 := string
 59 [-]: GETTABLE  R18 R18 K10  ; R18 := R18["0x639C642A"]
 60 [-]: GETGLOBAL R19 K11      ; R19 := 0xE6DC43B0
 61 [-]: GETGLOBAL R20 K13      ; R20 := _T
 62 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["CachedSyndicateMissions"]
 63 [-]: GETTABLE  R20 R20 R7   ; R20 := R20[R7]
 64 [-]: GETTABLE  R20 R20 K18  ; R20 := R20["mSyndicateName"]
 65 [-]: MOVE      R21 R0       ; R21 := R0
 66 [-]: CALL      R19 3 0      ; R19,... := R19(R20,R21)
 67 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
 68 [-]: CONCAT    R15 R16 R18  ; R15 := R16 .. R17 .. R18
 69 [-]: GETUPVAL  R16 U3       ; R16 := U3
 70 [-]: GETTABLE  R16 R16 K19  ; R16 := R16["0xF81722A2"]
 71 [-]: GETGLOBAL R17 K9       ; R17 := string
 72 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["0xDE44F664"]
 73 [-]: MOVE      R18 R7       ; R18 := R7
 74 [-]: GETUPVAL  R19 U1       ; R19 := U1
 75 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["KEY_TAG"]
 76 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 77 [-]: EQ        1 R17 K22    ; if R17 == nil then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: MOVE      R17 R0       ; R17 := R0
 80 [-]: MOVE      R17 R1       ; R17 := R1
 81 [-]: GETGLOBAL R18 K23      ; R18 := mMovie
 82 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18["0x5DB0BD4"]
 83 [-]: LOADK     R20 K25      ; R20 := "/Lotus/Language/Game/MissionName_Default"
 84 [-]: MOVE      R21 R0       ; R21 := R0
 85 [-]: NEWTABLE  R22 1 1      ; R22 := {}
 86 [-]: SETTABLE  R22 K26 R15  ; R22["MISSION_NAME"] := R15
 87 [-]: LOADNIL   R23 R23      ; R23 := nil
 88 [-]: SETLIST   R22 1 1      ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
 89 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
 90 [-]: MOVE      R19 R15      ; R19 := R15
 91 [-]: MOVE      R20 R0       ; R20 := R0
 92 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
 93 [-]: GETGLOBAL R17 K27      ; R17 := Lotus_Game
 94 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["NT_HUB"]
 95 [-]: EQ        1 R9 R17     ; if R9 == R17 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R17 R0       ; R17 := R0
 98 [-]: MOVE      R17 R1       ; R17 := R1
 99 [-]: GETGLOBAL R18 K9       ; R18 := string
100 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["0xDE44F664"]
101 [-]: MOVE      R19 R7       ; R19 := R7
102 [-]: LOADK     R20 K29      ; R20 := "Dojo"
103 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
104 [-]: EQ        0 R18 K22    ; if R18 ~= nil then PC := 107
105 [-]: JMP       107          ; PC := 107
106 [-]: MOVE      R18 R0       ; R18 := R0
107 [-]: MOVE      R18 R1       ; R18 := R1
108 [-]: GETGLOBAL R19 K30      ; R19 := 0x400E7765
109 [-]: MOVE      R20 R4       ; R20 := R4
110 [-]: CALL      R19 2 2      ; R19 := R19(R20)
111 [-]: MOVE      R19 R19      ; R19 := R19
112 [-]: LOADNIL   R20 R20      ; R20 := nil
113 [-]: LOADK     R21 K31      ; R21 := 0
114 [-]: MOVE      R22 R0       ; R22 := R0
115 [-]: LOADK     R23 K8       ; R23 := ""
116 [-]: LOADK     R24 K31      ; R24 := 0
117 [-]: LOADK     R25 K32      ; R25 := 3
118 [-]: LOADNIL   R26 R26      ; R26 := nil
119 [-]: LOADK     R27 K8       ; R27 := ""
120 [-]: MOVE      R28 R0       ; R28 := R0
121 [-]: LOADK     R29 K8       ; R29 := ""
122 [-]: GETGLOBAL R30 K13      ; R30 := _T
123 [-]: GETTABLE  R30 R30 K33  ; R30 := R30["gActiveMatchMakingMode"]
124 [-]: GETGLOBAL R31 K13      ; R31 := _T
125 [-]: GETTABLE  R31 R31 K34  ; R31 := R31["MATCHMAKING_QUICKMATCH_GAMEMODE"]
126 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 152
127 [-]: JMP       152          ; PC := 152
128 [-]: GETUPVAL  R30 U1       ; R30 := U1
129 [-]: GETTABLE  R30 R30 K35  ; R30 := R30["0x25E52949"]
130 [-]: GETTABLE  R31 R0 K2    ; R31 := R0["radialSector"]
131 [-]: GETTABLE  R31 R31 K36  ; R31 := R31["region"]
132 [-]: ADD       R31 R31 K37  ; R31 := R31 + 1
133 [-]: CALL      R30 2 2      ; R30 := R30(R31)
134 [-]: TEST      R30 1        ; if R30 then PC := 152
135 [-]: JMP       152          ; PC := 152
136 [-]: GETUPVAL  R30 U1       ; R30 := U1
137 [-]: GETTABLE  R30 R30 K38  ; R30 := R30["0xE4E5932F"]
138 [-]: MOVE      R31 R7       ; R31 := R7
139 [-]: CALL      R30 2 2      ; R30 := R30(R31)
140 [-]: MOVE      R1 R30       ; R1 := R30
141 [-]: GETUPVAL  R30 U4       ; R30 := U4
142 [-]: GETTABLE  R30 R30 R1   ; R30 := R30[R1]
143 [-]: TEST      R30 0        ; if not R30 then PC := 151
144 [-]: JMP       151          ; PC := 151
145 [-]: GETUPVAL  R30 U4       ; R30 := U4
146 [-]: GETTABLE  R30 R30 R1   ; R30 := R30[R1]
147 [-]: LT        0 K31 R30    ; if 0 >= R30 then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: GETUPVAL  R30 U4       ; R30 := U4
150 [-]: GETTABLE  R21 R30 R1   ; R21 := R30[R1]
151 [-]: MOVE      R22 R1       ; R22 := R1
152 [-]: LOADNIL   R30 R32      ; R30 := R31 := R32 := nil
153 [-]: LOADK     R33 K8       ; R33 := ""
154 [-]: CLOSURE   R34 0        ; R34 := closure(Function #149.1)
155 [-]: MOVE      R0 R33       ; R0 := R33
156 [-]: GETUPVAL  R0 U5        ; R0 := U5
157 [-]: LOADK     R33 K39      ; R33 := "<p>"
158 [-]: LOADNIL   R35 R35      ; R35 := nil
159 [-]: TEST      R19 0        ; if not R19 then PC := 218
160 [-]: JMP       218          ; PC := 218
161 [-]: GETGLOBAL R36 K40      ; R36 := 0x7C282057
162 [-]: MOVE      R37 R4       ; R37 := R4
163 [-]: CALL      R36 2 2      ; R36 := R36(R37)
164 [-]: GETGLOBAL R37 K30      ; R37 := 0x400E7765
165 [-]: MOVE      R38 R36      ; R38 := R36
166 [-]: CALL      R37 2 2      ; R37 := R37(R38)
167 [-]: TEST      R37 1        ; if R37 then PC := 207
168 [-]: JMP       207          ; PC := 207
169 [-]: GETGLOBAL R37 K9       ; R37 := string
170 [-]: GETTABLE  R37 R37 K10  ; R37 := R37["0x639C642A"]
171 [-]: GETGLOBAL R38 K11      ; R38 := 0xE6DC43B0
172 [-]: GETGLOBAL R39 K0       ; R39 := 0x9FAED6BC
173 [-]: SELF      R40 R36 K41  ; R41 := R36; R40 := R36["0x616C74B6"]
174 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
175 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
176 [-]: MOVE      R40 R0       ; R40 := R0
177 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
178 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
179 [-]: MOVE      R10 R37      ; R10 := R37
180 [-]: GETGLOBAL R37 K11      ; R37 := 0xE6DC43B0
181 [-]: GETGLOBAL R38 K0       ; R38 := 0x9FAED6BC
182 [-]: SELF      R39 R36 K42  ; R40 := R36; R39 := R36["0x42300EB5"]
183 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
184 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
185 [-]: MOVE      R39 R0       ; R39 := R0
186 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
187 [-]: MOVE      R14 R37      ; R14 := R37
188 [-]: LOADK     R13 K43      ; R13 := " "
189 [-]: GETUPVAL  R37 U1       ; R37 := U1
190 [-]: GETTABLE  R37 R37 K44  ; R37 := R37["0x68C19111"]
191 [-]: GETGLOBAL R38 K45      ; R38 := gGameData
192 [-]: MOVE      R39 R36      ; R39 := R36
193 [-]: CALL      R37 3 3      ; R37,R38 := R37(R38,R39)
194 [-]: SELF      R39 R36 K46  ; R40 := R36; R39 := R36["0x6C207447"]
195 [-]: CALL      R39 2 2      ; R39 := R39(R40)
196 [-]: GETTABLE  R40 R39 R37  ; R40 := R39[R37]
197 [-]: GETTABLE  R40 R40 K47  ; R40 := R40["mLocTag"]
198 [-]: GETGLOBAL R41 K11      ; R41 := 0xE6DC43B0
199 [-]: GETGLOBAL R42 K0       ; R42 := 0x9FAED6BC
200 [-]: MOVE      R43 R40      ; R43 := R40
201 [-]: CALL      R42 2 2      ; R42 := R42(R43)
202 [-]: MOVE      R43 R0       ; R43 := R0
203 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
204 [-]: MOVE      R14 R41      ; R14 := R41
205 [-]: MOVE      R35 R1       ; R35 := R1
206 [-]: JMP       216          ; PC := 216
207 [-]: GETGLOBAL R41 K9       ; R41 := string
208 [-]: GETTABLE  R41 R41 K10  ; R41 := R41["0x639C642A"]
209 [-]: GETGLOBAL R42 K23      ; R42 := mMovie
210 [-]: SELF      R42 R42 K24  ; R43 := R42; R42 := R42["0x5DB0BD4"]
211 [-]: LOADK     R44 K48      ; R44 := "/Lotus/Language/Game/MissionName_Generic"
212 [-]: MOVE      R45 R0       ; R45 := R0
213 [-]: CALL      R42 4 0      ; R42,... := R42(R43,R44,R45)
214 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
215 [-]: MOVE      R10 R41      ; R10 := R41
216 [-]: MOVE      R22 R0       ; R22 := R0
217 [-]: JMP       815          ; PC := 815
218 [-]: TEST      R17 1        ; if R17 then PC := 222
219 [-]: JMP       222          ; PC := 222
220 [-]: TEST      R18 0        ; if not R18 then PC := 224
221 [-]: JMP       224          ; PC := 224
222 [-]: MOVE      R22 R0       ; R22 := R0
223 [-]: JMP       815          ; PC := 815
224 [-]: GETUPVAL  R41 U0       ; R41 := U0
225 [-]: GETTABLE  R41 R41 K49  ; R41 := R41["mAlertInfo"]
226 [-]: EQ        1 R41 K22    ; if R41 == nil then PC := 296
227 [-]: JMP       296          ; PC := 296
228 [-]: LOADK     R41 K50      ; R41 := " ("
229 [-]: GETGLOBAL R42 K11      ; R42 := 0xE6DC43B0
230 [-]: LOADK     R43 K51      ; R43 := "/Lotus/Language/Menu/Notification_Alert"
231 [-]: MOVE      R44 R0       ; R44 := R0
232 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
233 [-]: LOADK     R43 K52      ; R43 := ")"
234 [-]: CONCAT    R12 R41 R43  ; R12 := R41 .. R42 .. R43
235 [-]: GETGLOBAL R41 K53      ; R41 := Engine
236 [-]: GETTABLE  R41 R41 K54  ; R41 := R41["0xD09D7910"]
237 [-]: GETGLOBAL R42 K13      ; R42 := _T
238 [-]: GETTABLE  R42 R42 K16  ; R42 := R42["CachedAlerts"]
239 [-]: GETTABLE  R42 R42 R7   ; R42 := R42[R7]
240 [-]: GETTABLE  R42 R42 K49  ; R42 := R42["mAlertInfo"]
241 [-]: GETTABLE  R42 R42 K55  ; R42 := R42["mExpiry"]
242 [-]: CALL      R41 2 2      ; R41 := R41(R42)
243 [-]: GETUPVAL  R42 U1       ; R42 := U1
244 [-]: GETTABLE  R42 R42 K56  ; R42 := R42["0x9E1A1D26"]
245 [-]: MOVE      R43 R41      ; R43 := R41
246 [-]: CALL      R42 2 2      ; R42 := R42(R43)
247 [-]: MOVE      R30 R42      ; R30 := R42
248 [-]: GETGLOBAL R42 K13      ; R42 := _T
249 [-]: GETTABLE  R42 R42 K16  ; R42 := R42["CachedAlerts"]
250 [-]: GETTABLE  R42 R42 R7   ; R42 := R42[R7]
251 [-]: TEST      R42 0        ; if not R42 then PC := 287
252 [-]: JMP       287          ; PC := 287
253 [-]: GETGLOBAL R42 K13      ; R42 := _T
254 [-]: GETTABLE  R42 R42 K16  ; R42 := R42["CachedAlerts"]
255 [-]: GETTABLE  R42 R42 R7   ; R42 := R42[R7]
256 [-]: GETTABLE  R42 R42 K49  ; R42 := R42["mAlertInfo"]
257 [-]: GETTABLE  R42 R42 K57  ; R42 := R42["mTag"]
258 [-]: GETGLOBAL R43 K58      ; R43 := EMPTY_SYMBOL
259 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 287
260 [-]: JMP       287          ; PC := 287
261 [-]: GETGLOBAL R42 K13      ; R42 := _T
262 [-]: GETTABLE  R42 R42 K16  ; R42 := R42["CachedAlerts"]
263 [-]: GETTABLE  R42 R42 R7   ; R42 := R42[R7]
264 [-]: GETTABLE  R42 R42 K49  ; R42 := R42["mAlertInfo"]
265 [-]: GETTABLE  R42 R42 K59  ; R42 := R42["mMissionInfo"]
266 [-]: GETTABLE  R42 R42 K60  ; R42 := R42["descText"]
267 [-]: GETGLOBAL R43 K58      ; R43 := EMPTY_SYMBOL
268 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 287
269 [-]: JMP       287          ; PC := 287
270 [-]: LOADK     R42 K50      ; R42 := " ("
271 [-]: GETGLOBAL R43 K9       ; R43 := string
272 [-]: GETTABLE  R43 R43 K10  ; R43 := R43["0x639C642A"]
273 [-]: GETGLOBAL R44 K11      ; R44 := 0xE6DC43B0
274 [-]: GETGLOBAL R45 K0       ; R45 := 0x9FAED6BC
275 [-]: GETGLOBAL R46 K13      ; R46 := _T
276 [-]: GETTABLE  R46 R46 K16  ; R46 := R46["CachedAlerts"]
277 [-]: GETTABLE  R46 R46 R7   ; R46 := R46[R7]
278 [-]: GETTABLE  R46 R46 K49  ; R46 := R46["mAlertInfo"]
279 [-]: GETTABLE  R46 R46 K59  ; R46 := R46["mMissionInfo"]
280 [-]: GETTABLE  R46 R46 K60  ; R46 := R46["descText"]
281 [-]: CALL      R45 2 2      ; R45 := R45(R46)
282 [-]: MOVE      R46 R0       ; R46 := R0
283 [-]: CALL      R44 3 0      ; R44,... := R44(R45,R46)
284 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
285 [-]: LOADK     R44 K52      ; R44 := ")"
286 [-]: CONCAT    R12 R42 R44  ; R12 := R42 .. R43 .. R44
287 [-]: GETUPVAL  R42 U1       ; R42 := U1
288 [-]: GETTABLE  R42 R42 K61  ; R42 := R42["0xF030C338"]
289 [-]: GETGLOBAL R43 K23      ; R43 := mMovie
290 [-]: GETUPVAL  R44 U0       ; R44 := U0
291 [-]: GETTABLE  R44 R44 K49  ; R44 := R44["mAlertInfo"]
292 [-]: GETTABLE  R44 R44 K62  ; R44 := R44["missionReward"]
293 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
294 [-]: MOVE      R31 R42      ; R31 := R42
295 [-]: JMP       815          ; PC := 815
296 [-]: GETUPVAL  R42 U0       ; R42 := U0
297 [-]: GETTABLE  R42 R42 K63  ; R42 := R42["mGoalInfo"]
298 [-]: TEST      R42 0        ; if not R42 then PC := 363
299 [-]: JMP       363          ; PC := 363
300 [-]: GETGLOBAL R42 K9       ; R42 := string
301 [-]: GETTABLE  R42 R42 K10  ; R42 := R42["0x639C642A"]
302 [-]: GETGLOBAL R43 K11      ; R43 := 0xE6DC43B0
303 [-]: GETUPVAL  R44 U0       ; R44 := U0
304 [-]: GETTABLE  R44 R44 K63  ; R44 := R44["mGoalInfo"]
305 [-]: GETTABLE  R44 R44 K64  ; R44 := R44["mDesc"]
306 [-]: MOVE      R45 R0       ; R45 := R0
307 [-]: CALL      R43 3 0      ; R43,... := R43(R44,R45)
308 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
309 [-]: MOVE      R16 R42      ; R16 := R42
310 [-]: GETGLOBAL R42 K9       ; R42 := string
311 [-]: GETTABLE  R42 R42 K10  ; R42 := R42["0x639C642A"]
312 [-]: GETGLOBAL R43 K23      ; R43 := mMovie
313 [-]: SELF      R43 R43 K24  ; R44 := R43; R43 := R43["0x5DB0BD4"]
314 [-]: LOADK     R45 K65      ; R45 := "/Lotus/Language/Game/MissionName_"
315 [-]: GETUPVAL  R46 U1       ; R46 := U1
316 [-]: GETTABLE  R46 R46 K66  ; R46 := R46["0x87B2D555"]
317 [-]: GETUPVAL  R47 U0       ; R47 := U0
318 [-]: GETTABLE  R47 R47 K67  ; R47 := R47["mMission"]
319 [-]: CALL      R46 2 2      ; R46 := R46(R47)
320 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
321 [-]: MOVE      R46 R0       ; R46 := R0
322 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
323 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
324 [-]: MOVE      R10 R42      ; R10 := R42
325 [-]: GETUPVAL  R42 U0       ; R42 := U0
326 [-]: GETTABLE  R42 R42 K67  ; R42 := R42["mMission"]
327 [-]: GETTABLE  R42 R42 K68  ; R42 := R42["archwingRequired"]
328 [-]: TEST      R42 0        ; if not R42 then PC := 815
329 [-]: JMP       815          ; PC := 815
330 [-]: GETGLOBAL R42 K23      ; R42 := mMovie
331 [-]: SELF      R42 R42 K24  ; R43 := R42; R42 := R42["0x5DB0BD4"]
332 [-]: LOADK     R44 K69      ; R44 := "<ARCHWING>"
333 [-]: MOVE      R45 R1       ; R45 := R1
334 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
335 [-]: LOADK     R43 K43      ; R43 := " "
336 [-]: MOVE      R44 R10      ; R44 := R10
337 [-]: CONCAT    R10 R42 R44  ; R10 := R42 .. R43 .. R44
338 [-]: GETUPVAL  R42 U0       ; R42 := U0
339 [-]: GETTABLE  R42 R42 K67  ; R42 := R42["mMission"]
340 [-]: GETTABLE  R42 R42 K70  ; R42 := R42["isSharkwingMission"]
341 [-]: TEST      R42 0        ; if not R42 then PC := 353
342 [-]: JMP       353          ; PC := 353
343 [-]: MOVE      R42 R10      ; R42 := R10
344 [-]: LOADK     R43 K50      ; R43 := " ("
345 [-]: GETGLOBAL R44 K23      ; R44 := mMovie
346 [-]: SELF      R44 R44 K24  ; R45 := R44; R44 := R44["0x5DB0BD4"]
347 [-]: LOADK     R46 K71      ; R46 := "/Lotus/Language/Menu/Sharkwing"
348 [-]: MOVE      R47 R0       ; R47 := R0
349 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
350 [-]: LOADK     R45 K52      ; R45 := ")"
351 [-]: CONCAT    R10 R42 R45  ; R10 := R42 .. R43 .. R44 .. R45
352 [-]: JMP       815          ; PC := 815
353 [-]: MOVE      R42 R10      ; R42 := R10
354 [-]: LOADK     R43 K50      ; R43 := " ("
355 [-]: GETGLOBAL R44 K23      ; R44 := mMovie
356 [-]: SELF      R44 R44 K24  ; R45 := R44; R44 := R44["0x5DB0BD4"]
357 [-]: LOADK     R46 K72      ; R46 := "/Lotus/Language/Menu/Loadout_Archwing"
358 [-]: MOVE      R47 R0       ; R47 := R0
359 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
360 [-]: LOADK     R45 K52      ; R45 := ")"
361 [-]: CONCAT    R10 R42 R45  ; R10 := R42 .. R43 .. R44 .. R45
362 [-]: JMP       815          ; PC := 815
363 [-]: GETUPVAL  R42 U0       ; R42 := U0
364 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["mGhostTowerMissionInfo"]
365 [-]: EQ        1 R42 K22    ; if R42 == nil then PC := 388
366 [-]: JMP       388          ; PC := 388
367 [-]: GETUPVAL  R42 U3       ; R42 := U3
368 [-]: GETTABLE  R42 R42 K19  ; R42 := R42["0xF81722A2"]
369 [-]: GETUPVAL  R43 U0       ; R43 := U0
370 [-]: GETTABLE  R43 R43 K73  ; R43 := R43["mGhostTowerMissionInfo"]
371 [-]: GETTABLE  R43 R43 K59  ; R43 := R43["mMissionInfo"]
372 [-]: GETTABLE  R43 R43 K74  ; R43 := R43["minEnemyLevel"]
373 [-]: LE        1 K75 R43    ; if 80 <= R43 then PC := 376
374 [-]: JMP       376          ; PC := 376
375 [-]: MOVE      R43 R0       ; R43 := R0
376 [-]: MOVE      R43 R1       ; R43 := R1
377 [-]: LOADK     R44 K76      ; R44 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
378 [-]: LOADK     R45 K77      ; R45 := "/Lotus/Language/Menu/GhostTowerMissionName"
379 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
380 [-]: LOADK     R43 K50      ; R43 := " ("
381 [-]: GETGLOBAL R44 K11      ; R44 := 0xE6DC43B0
382 [-]: MOVE      R45 R42      ; R45 := R42
383 [-]: MOVE      R46 R0       ; R46 := R0
384 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
385 [-]: LOADK     R45 K52      ; R45 := ")"
386 [-]: CONCAT    R12 R43 R45  ; R12 := R43 .. R44 .. R45
387 [-]: JMP       815          ; PC := 815
388 [-]: GETGLOBAL R43 K13      ; R43 := _T
389 [-]: GETTABLE  R43 R43 K78  ; R43 := R43["CachedSkullNodes"]
390 [-]: GETTABLE  R43 R43 R7   ; R43 := R43[R7]
391 [-]: EQ        1 R43 K22    ; if R43 == nil then PC := 432
392 [-]: JMP       432          ; PC := 432
393 [-]: TEST      R3 0         ; if not R3 then PC := 432
394 [-]: JMP       432          ; PC := 432
395 [-]: LOADK     R13 K8       ; R13 := ""
396 [-]: LOADK     R43 K37      ; R43 := 1
397 [-]: GETGLOBAL R44 K13      ; R44 := _T
398 [-]: GETTABLE  R44 R44 K78  ; R44 := R44["CachedSkullNodes"]
399 [-]: GETTABLE  R44 R44 R7   ; R44 := R44[R7]
400 [-]: LEN       R44 R44      ; R44 := # R44
401 [-]: LOADK     R45 K37      ; R45 := 1
402 [-]: FORPREP   R43 425      ; R43 -= R45; PC := 425
403 [-]: EQ        1 R46 K37    ; if R46 == 1 then PC := 411
404 [-]: JMP       411          ; PC := 411
405 [-]: GETGLOBAL R47 K9       ; R47 := string
406 [-]: GETTABLE  R47 R47 K10  ; R47 := R47["0x639C642A"]
407 [-]: MOVE      R48 R13      ; R48 := R13
408 [-]: CALL      R47 2 2      ; R47 := R47(R48)
409 [-]: LOADK     R48 K79      ; R48 := ", "
410 [-]: CONCAT    R13 R47 R48  ; R13 := R47 .. R48
411 [-]: MOVE      R47 R13      ; R47 := R13
412 [-]: GETGLOBAL R48 K9       ; R48 := string
413 [-]: GETTABLE  R48 R48 K10  ; R48 := R48["0x639C642A"]
414 [-]: GETGLOBAL R49 K23      ; R49 := mMovie
415 [-]: SELF      R49 R49 K24  ; R50 := R49; R49 := R49["0x5DB0BD4"]
416 [-]: GETGLOBAL R51 K13      ; R51 := _T
417 [-]: GETTABLE  R51 R51 K78  ; R51 := R51["CachedSkullNodes"]
418 [-]: GETTABLE  R51 R51 R7   ; R51 := R51[R7]
419 [-]: GETTABLE  R51 R51 R46  ; R51 := R51[R46]
420 [-]: GETTABLE  R51 R51 K80  ; R51 := R51[2]
421 [-]: MOVE      R52 R0       ; R52 := R0
422 [-]: CALL      R49 4 0      ; R49,... := R49(R50,R51,R52)
423 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
424 [-]: CONCAT    R13 R47 R48  ; R13 := R47 .. R48
425 [-]: FORLOOP   R43 403      ; R43 += R45; if R43 <= R44 then begin PC := 403; R46 := R43 end
426 [-]: GETGLOBAL R47 K11      ; R47 := 0xE6DC43B0
427 [-]: LOADK     R48 K81      ; R48 := "/Lotus/Language/Menu/NightmareModeName"
428 [-]: LOADNIL   R49 R49      ; R49 := nil
429 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
430 [-]: MOVE      R14 R47      ; R14 := R47
431 [-]: JMP       815          ; PC := 815
432 [-]: GETGLOBAL R47 K13      ; R47 := _T
433 [-]: GETTABLE  R47 R47 K82  ; R47 := R47["CachedSortieMissions"]
434 [-]: GETTABLE  R47 R47 R7   ; R47 := R47[R7]
435 [-]: TEST      R47 0        ; if not R47 then PC := 467
436 [-]: JMP       467          ; PC := 467
437 [-]: GETGLOBAL R47 K13      ; R47 := _T
438 [-]: GETTABLE  R47 R47 K82  ; R47 := R47["CachedSortieMissions"]
439 [-]: GETTABLE  R47 R47 R7   ; R47 := R47[R7]
440 [-]: GETTABLE  R47 R47 K83  ; R47 := R47["mShowInStarChart"]
441 [-]: TEST      R47 0        ; if not R47 then PC := 467
442 [-]: JMP       467          ; PC := 467
443 [-]: LOADK     R47 K50      ; R47 := " ("
444 [-]: GETGLOBAL R48 K11      ; R48 := 0xE6DC43B0
445 [-]: LOADK     R49 K84      ; R49 := "/Lotus/Language/Menu/SortieMissionName"
446 [-]: LOADNIL   R50 R50      ; R50 := nil
447 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
448 [-]: LOADK     R49 K52      ; R49 := ")"
449 [-]: CONCAT    R12 R47 R49  ; R12 := R47 .. R48 .. R49
450 [-]: GETGLOBAL R47 K53      ; R47 := Engine
451 [-]: GETTABLE  R47 R47 K54  ; R47 := R47["0xD09D7910"]
452 [-]: GETGLOBAL R48 K13      ; R48 := _T
453 [-]: GETTABLE  R48 R48 K82  ; R48 := R48["CachedSortieMissions"]
454 [-]: GETTABLE  R48 R48 R7   ; R48 := R48[R7]
455 [-]: GETTABLE  R48 R48 K55  ; R48 := R48["mExpiry"]
456 [-]: CALL      R47 2 2      ; R47 := R47(R48)
457 [-]: GETUPVAL  R48 U1       ; R48 := U1
458 [-]: GETTABLE  R48 R48 K85  ; R48 := R48["0xE233A311"]
459 [-]: MOVE      R49 R47      ; R49 := R47
460 [-]: CALL      R48 2 2      ; R48 := R48(R49)
461 [-]: MOVE      R30 R48      ; R30 := R48
462 [-]: GETGLOBAL R48 K13      ; R48 := _T
463 [-]: GETTABLE  R48 R48 K82  ; R48 := R48["CachedSortieMissions"]
464 [-]: GETTABLE  R48 R48 R7   ; R48 := R48[R7]
465 [-]: GETTABLE  R32 R48 K86  ; R32 := R48["mModifierAuraDesc"]
466 [-]: JMP       815          ; PC := 815
467 [-]: GETGLOBAL R48 K13      ; R48 := _T
468 [-]: GETTABLE  R48 R48 K14  ; R48 := R48["CachedSyndicateMissions"]
469 [-]: GETTABLE  R48 R48 R7   ; R48 := R48[R7]
470 [-]: TEST      R48 0        ; if not R48 then PC := 513
471 [-]: JMP       513          ; PC := 513
472 [-]: GETGLOBAL R48 K13      ; R48 := _T
473 [-]: GETTABLE  R48 R48 K14  ; R48 := R48["CachedSyndicateMissions"]
474 [-]: GETTABLE  R48 R48 R7   ; R48 := R48[R7]
475 [-]: GETTABLE  R48 R48 K15  ; R48 := R48["mVisible"]
476 [-]: TEST      R48 0        ; if not R48 then PC := 513
477 [-]: JMP       513          ; PC := 513
478 [-]: LOADK     R48 K50      ; R48 := " ("
479 [-]: GETGLOBAL R49 K11      ; R49 := 0xE6DC43B0
480 [-]: LOADK     R50 K87      ; R50 := "/Lotus/Language/Menu/SyndicateMissionName"
481 [-]: MOVE      R51 R0       ; R51 := R0
482 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
483 [-]: LOADK     R50 K52      ; R50 := ")"
484 [-]: CONCAT    R12 R48 R50  ; R12 := R48 .. R49 .. R50
485 [-]: GETGLOBAL R48 K53      ; R48 := Engine
486 [-]: GETTABLE  R48 R48 K54  ; R48 := R48["0xD09D7910"]
487 [-]: GETGLOBAL R49 K13      ; R49 := _T
488 [-]: GETTABLE  R49 R49 K14  ; R49 := R49["CachedSyndicateMissions"]
489 [-]: GETTABLE  R49 R49 R7   ; R49 := R49[R7]
490 [-]: GETTABLE  R49 R49 K55  ; R49 := R49["mExpiry"]
491 [-]: CALL      R48 2 2      ; R48 := R48(R49)
492 [-]: GETUPVAL  R49 U1       ; R49 := U1
493 [-]: GETTABLE  R49 R49 K56  ; R49 := R49["0x9E1A1D26"]
494 [-]: MOVE      R50 R48      ; R50 := R48
495 [-]: CALL      R49 2 2      ; R49 := R49(R50)
496 [-]: MOVE      R30 R49      ; R30 := R49
497 [-]: GETGLOBAL R49 K23      ; R49 := mMovie
498 [-]: SELF      R49 R49 K24  ; R50 := R49; R49 := R49["0x5DB0BD4"]
499 [-]: LOADK     R51 K88      ; R51 := "/Lotus/Language/Menu/Syndicates_Reputation"
500 [-]: MOVE      R52 R1       ; R52 := R1
501 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
502 [-]: GETUPVAL  R50 U3       ; R50 := U3
503 [-]: GETTABLE  R50 R50 K89  ; R50 := R50["0x7E197415"]
504 [-]: GETGLOBAL R51 K13      ; R51 := _T
505 [-]: GETTABLE  R51 R51 K14  ; R51 := R51["CachedSyndicateMissions"]
506 [-]: GETTABLE  R51 R51 R7   ; R51 := R51[R7]
507 [-]: GETTABLE  R51 R51 K59  ; R51 := R51["mMissionInfo"]
508 [-]: GETTABLE  R51 R51 K90  ; R51 := R51["syndicateXP"]
509 [-]: LOADK     R52 K31      ; R52 := 0
510 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
511 [-]: CONCAT    R31 R49 R50  ; R31 := R49 .. R50
512 [-]: JMP       815          ; PC := 815
513 [-]: GETGLOBAL R49 K13      ; R49 := _T
514 [-]: GETTABLE  R49 R49 K91  ; R49 := R49["CachedActiveMissions"]
515 [-]: TEST      R49 0        ; if not R49 then PC := 545
516 [-]: JMP       545          ; PC := 545
517 [-]: GETGLOBAL R49 K13      ; R49 := _T
518 [-]: GETTABLE  R49 R49 K91  ; R49 := R49["CachedActiveMissions"]
519 [-]: GETTABLE  R49 R49 R7   ; R49 := R49[R7]
520 [-]: TEST      R49 0        ; if not R49 then PC := 545
521 [-]: JMP       545          ; PC := 545
522 [-]: GETGLOBAL R49 K13      ; R49 := _T
523 [-]: GETTABLE  R49 R49 K91  ; R49 := R49["CachedActiveMissions"]
524 [-]: GETTABLE  R49 R49 R7   ; R49 := R49[R7]
525 [-]: GETTABLE  R49 R49 K15  ; R49 := R49["mVisible"]
526 [-]: TEST      R49 0        ; if not R49 then PC := 545
527 [-]: JMP       545          ; PC := 545
528 [-]: GETGLOBAL R49 K53      ; R49 := Engine
529 [-]: GETTABLE  R49 R49 K54  ; R49 := R49["0xD09D7910"]
530 [-]: GETGLOBAL R50 K13      ; R50 := _T
531 [-]: GETTABLE  R50 R50 K91  ; R50 := R50["CachedActiveMissions"]
532 [-]: GETTABLE  R50 R50 R7   ; R50 := R50[R7]
533 [-]: GETTABLE  R50 R50 K55  ; R50 := R50["mExpiry"]
534 [-]: CALL      R49 2 2      ; R49 := R49(R50)
535 [-]: GETUPVAL  R50 U1       ; R50 := U1
536 [-]: GETTABLE  R50 R50 K85  ; R50 := R50["0xE233A311"]
537 [-]: MOVE      R51 R49      ; R51 := R49
538 [-]: CALL      R50 2 2      ; R50 := R50(R51)
539 [-]: MOVE      R30 R50      ; R30 := R50
540 [-]: GETGLOBAL R50 K13      ; R50 := _T
541 [-]: GETTABLE  R50 R50 K91  ; R50 := R50["CachedActiveMissions"]
542 [-]: GETTABLE  R50 R50 R7   ; R50 := R50[R7]
543 [-]: GETTABLE  R32 R50 K86  ; R32 := R50["mModifierAuraDesc"]
544 [-]: JMP       815          ; PC := 815
545 [-]: GETUPVAL  R50 U0       ; R50 := U0
546 [-]: GETTABLE  R50 R50 K92  ; R50 := R50["mInvasionInfo"]
547 [-]: EQ        1 R50 K22    ; if R50 == nil then PC := 815
548 [-]: JMP       815          ; PC := 815
549 [-]: GETUPVAL  R50 U0       ; R50 := U0
550 [-]: GETTABLE  R50 R50 K92  ; R50 := R50["mInvasionInfo"]
551 [-]: GETTABLE  R50 R50 K93  ; R50 := R50["mFaction"]
552 [-]: GETGLOBAL R51 K27      ; R51 := Lotus_Game
553 [-]: GETTABLE  R51 R51 K94  ; R51 := R51["FC_INFESTATION"]
554 [-]: EQ        1 R50 R51    ; if R50 == R51 then PC := 557
555 [-]: JMP       557          ; PC := 557
556 [-]: MOVE      R28 R0       ; R28 := R0
557 [-]: MOVE      R28 R1       ; R28 := R1
558 [-]: GETUPVAL  R50 U0       ; R50 := U0
559 [-]: GETTABLE  R50 R50 K92  ; R50 := R50["mInvasionInfo"]
560 [-]: GETTABLE  R50 R50 K95  ; R50 := R50["mEventTag"]
561 [-]: GETGLOBAL R51 K58      ; R51 := EMPTY_SYMBOL
562 [-]: EQ        0 R50 R51    ; if R50 ~= R51 then PC := 599
563 [-]: JMP       599          ; PC := 599
564 [-]: GETUPVAL  R50 U0       ; R50 := U0
565 [-]: GETTABLE  R50 R50 K92  ; R50 := R50["mInvasionInfo"]
566 [-]: GETTABLE  R50 R50 K96  ; R50 := R50["mCount"]
567 [-]: GETUPVAL  R51 U0       ; R51 := U0
568 [-]: GETTABLE  R51 R51 K92  ; R51 := R51["mInvasionInfo"]
569 [-]: GETTABLE  R51 R51 K97  ; R51 := R51["mGoal"]
570 [-]: DIV       R50 R50 R51  ; R50 := R50 / R51
571 [-]: MUL       R50 R50 K98  ; R50 := R50 * 50
572 [-]: ADD       R50 K98 R50  ; R50 := 50 + R50
573 [-]: TEST      R28 0        ; if not R28 then PC := 585
574 [-]: JMP       585          ; PC := 585
575 [-]: GETUPVAL  R51 U0       ; R51 := U0
576 [-]: GETTABLE  R51 R51 K92  ; R51 := R51["mInvasionInfo"]
577 [-]: GETTABLE  R51 R51 K96  ; R51 := R51["mCount"]
578 [-]: GETUPVAL  R52 U0       ; R52 := U0
579 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["mInvasionInfo"]
580 [-]: GETTABLE  R52 R52 K97  ; R52 := R52["mGoal"]
581 [-]: DIV       R51 R51 R52  ; R51 := R51 / R52
582 [-]: MUL       R51 R51 K99  ; R51 := R51 * 100
583 [-]: ADD       R50 K99 R51  ; R50 := 100 + R51
584 [-]: JMP       593          ; PC := 593
585 [-]: GETUPVAL  R51 U0       ; R51 := U0
586 [-]: GETTABLE  R51 R51 K92  ; R51 := R51["mInvasionInfo"]
587 [-]: GETTABLE  R51 R51 K100 ; R51 := R51["mAttackerMissionInfo"]
588 [-]: GETTABLE  R51 R51 K101 ; R51 := R51["faction"]
589 [-]: GETGLOBAL R52 K27      ; R52 := Lotus_Game
590 [-]: GETTABLE  R52 R52 K94  ; R52 := R52["FC_INFESTATION"]
591 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 593
592 [-]: JMP       593          ; PC := 593
593 [-]: GETUPVAL  R51 U1       ; R51 := U1
594 [-]: GETTABLE  R51 R51 K102 ; R51 := R51["0x90BB414A"]
595 [-]: MOVE      R52 R50      ; R52 := R50
596 [-]: CALL      R51 2 2      ; R51 := R51(R52)
597 [-]: MOVE      R23 R51      ; R23 := R51
598 [-]: JMP       634          ; PC := 634
599 [-]: GETUPVAL  R51 U0       ; R51 := U0
600 [-]: GETTABLE  R51 R51 K92  ; R51 := R51["mInvasionInfo"]
601 [-]: GETTABLE  R51 R51 K96  ; R51 := R51["mCount"]
602 [-]: GETUPVAL  R52 U0       ; R52 := U0
603 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["mInvasionInfo"]
604 [-]: GETTABLE  R52 R52 K97  ; R52 := R52["mGoal"]
605 [-]: DIV       R51 R51 R52  ; R51 := R51 / R52
606 [-]: MUL       R51 R51 K98  ; R51 := R51 * 50
607 [-]: ADD       R51 K98 R51  ; R51 := 50 + R51
608 [-]: GETUPVAL  R52 U0       ; R52 := U0
609 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["mInvasionInfo"]
610 [-]: GETTABLE  R52 R52 K96  ; R52 := R52["mCount"]
611 [-]: GETUPVAL  R53 U0       ; R53 := U0
612 [-]: GETTABLE  R53 R53 K92  ; R53 := R53["mInvasionInfo"]
613 [-]: GETTABLE  R53 R53 K97  ; R53 := R53["mGoal"]
614 [-]: DIV       R52 R52 R53  ; R52 := R52 / R53
615 [-]: MUL       R52 R52 K98  ; R52 := R52 * 50
616 [-]: SUB       R52 K98 R52  ; R52 := 50 - R52
617 [-]: GETUPVAL  R53 U1       ; R53 := U1
618 [-]: GETTABLE  R53 R53 K102 ; R53 := R53["0x90BB414A"]
619 [-]: MOVE      R54 R51      ; R54 := R51
620 [-]: CALL      R53 2 2      ; R53 := R53(R54)
621 [-]: GETUPVAL  R54 U1       ; R54 := U1
622 [-]: GETTABLE  R54 R54 K102 ; R54 := R54["0x90BB414A"]
623 [-]: MOVE      R55 R52      ; R55 := R52
624 [-]: CALL      R54 2 2      ; R54 := R54(R55)
625 [-]: GETGLOBAL R55 K11      ; R55 := 0xE6DC43B0
626 [-]: LOADK     R56 K103     ; R56 := "/Lotus/Language/Menu/DilemmaActiveProgress"
627 [-]: NEWTABLE  R57 0 4      ; R57 := {}
628 [-]: SETTABLE  R57 K104 K105; R57["OPTION_ONE"] := "Nef Anyo"
629 [-]: SETTABLE  R57 K106 K107; R57["OPTION_TWO"] := "Alad V"
630 [-]: SETTABLE  R57 K108 R53 ; R57["VALUE_ONE"] := R53
631 [-]: SETTABLE  R57 K109 R54 ; R57["VALUE_TWO"] := R54
632 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
633 [-]: MOVE      R23 R55      ; R23 := R55
634 [-]: TEST      R28 0        ; if not R28 then PC := 646
635 [-]: JMP       646          ; PC := 646
636 [-]: GETGLOBAL R55 K11      ; R55 := 0xE6DC43B0
637 [-]: LOADK     R56 K110     ; R56 := "/Lotus/Language/Menu/MissionIntro_Invasion"
638 [-]: MOVE      R57 R0       ; R57 := R0
639 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
640 [-]: MOVE      R10 R55      ; R10 := R55
641 [-]: LOADK     R55 K50      ; R55 := " ("
642 [-]: GETUPVAL  R56 U0       ; R56 := U0
643 [-]: GETTABLE  R56 R56 K5   ; R56 := R56["mName"]
644 [-]: LOADK     R57 K52      ; R57 := ")"
645 [-]: CONCAT    R12 R55 R57  ; R12 := R55 .. R56 .. R57
646 [-]: GETGLOBAL R55 K30      ; R55 := 0x400E7765
647 [-]: GETGLOBAL R56 K45      ; R56 := gGameData
648 [-]: CALL      R55 2 2      ; R55 := R55(R56)
649 [-]: TEST      R55 1        ; if R55 then PC := 815
650 [-]: JMP       815          ; PC := 815
651 [-]: GETGLOBAL R55 K45      ; R55 := gGameData
652 [-]: SELF      R55 R55 K111 ; R56 := R55; R55 := R55["0x8EA5238E"]
653 [-]: CALL      R55 2 2      ; R55 := R55(R56)
654 [-]: LOADK     R56 K37      ; R56 := 1
655 [-]: LEN       R57 R55      ; R57 := # R55
656 [-]: LOADK     R58 K37      ; R58 := 1
657 [-]: FORPREP   R56 728      ; R56 -= R58; PC := 728
658 [-]: GETTABLE  R60 R55 R59  ; R60 := R55[R59]
659 [-]: GETTABLE  R60 R60 K112 ; R60 := R60["mId"]
660 [-]: GETTABLE  R60 R60 K112 ; R60 := R60["mId"]
661 [-]: GETUPVAL  R61 U0       ; R61 := U0
662 [-]: GETTABLE  R61 R61 K92  ; R61 := R61["mInvasionInfo"]
663 [-]: GETTABLE  R61 R61 K112 ; R61 := R61["mId"]
664 [-]: GETTABLE  R61 R61 K112 ; R61 := R61["mId"]
665 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 728
666 [-]: JMP       728          ; PC := 728
667 [-]: GETTABLE  R60 R55 R59  ; R60 := R55[R59]
668 [-]: GETTABLE  R24 R60 K113 ; R24 := R60["mDelta"]
669 [-]: LT        0 K31 R24    ; if 0 >= R24 then PC := 696
670 [-]: JMP       696          ; PC := 696
671 [-]: GETUPVAL  R60 U0       ; R60 := U0
672 [-]: GETTABLE  R60 R60 K92  ; R60 := R60["mInvasionInfo"]
673 [-]: GETTABLE  R26 R60 K93  ; R26 := R60["mFaction"]
674 [-]: GETUPVAL  R60 U3       ; R60 := U3
675 [-]: GETTABLE  R60 R60 K19  ; R60 := R60["0xF81722A2"]
676 [-]: GETUPVAL  R61 U0       ; R61 := U0
677 [-]: GETTABLE  R61 R61 K92  ; R61 := R61["mInvasionInfo"]
678 [-]: GETTABLE  R61 R61 K114 ; R61 := R61["mAttackerName"]
679 [-]: GETGLOBAL R62 K58      ; R62 := EMPTY_SYMBOL
680 [-]: EQ        1 R61 R62    ; if R61 == R62 then PC := 683
681 [-]: JMP       683          ; PC := 683
682 [-]: MOVE      R61 R0       ; R61 := R0
683 [-]: MOVE      R61 R1       ; R61 := R1
684 [-]: GETUPVAL  R62 U1       ; R62 := U1
685 [-]: GETTABLE  R62 R62 K115 ; R62 := R62["FactionNames"]
686 [-]: ADD       R63 R26 K37  ; R63 := R26 + 1
687 [-]: GETTABLE  R62 R62 R63  ; R62 := R62[R63]
688 [-]: GETGLOBAL R63 K0       ; R63 := 0x9FAED6BC
689 [-]: GETUPVAL  R64 U0       ; R64 := U0
690 [-]: GETTABLE  R64 R64 K92  ; R64 := R64["mInvasionInfo"]
691 [-]: GETTABLE  R64 R64 K114 ; R64 := R64["mAttackerName"]
692 [-]: CALL      R63 2 0      ; R63,... := R63(R64)
693 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
694 [-]: MOVE      R27 R60      ; R27 := R60
695 [-]: JMP       728          ; PC := 728
696 [-]: LT        0 R24 K31    ; if R24 >= 0 then PC := 728
697 [-]: JMP       728          ; PC := 728
698 [-]: GETGLOBAL R60 K116     ; R60 := math
699 [-]: GETTABLE  R60 R60 K117 ; R60 := R60["0xF93F7CC8"]
700 [-]: MOVE      R61 R24      ; R61 := R24
701 [-]: CALL      R60 2 2      ; R60 := R60(R61)
702 [-]: MOVE      R24 R60      ; R24 := R60
703 [-]: GETUPVAL  R60 U0       ; R60 := U0
704 [-]: GETTABLE  R60 R60 K92  ; R60 := R60["mInvasionInfo"]
705 [-]: GETTABLE  R60 R60 K100 ; R60 := R60["mAttackerMissionInfo"]
706 [-]: GETTABLE  R26 R60 K101 ; R26 := R60["faction"]
707 [-]: GETUPVAL  R60 U3       ; R60 := U3
708 [-]: GETTABLE  R60 R60 K19  ; R60 := R60["0xF81722A2"]
709 [-]: GETUPVAL  R61 U0       ; R61 := U0
710 [-]: GETTABLE  R61 R61 K92  ; R61 := R61["mInvasionInfo"]
711 [-]: GETTABLE  R61 R61 K118 ; R61 := R61["mDefenderName"]
712 [-]: GETGLOBAL R62 K58      ; R62 := EMPTY_SYMBOL
713 [-]: EQ        1 R61 R62    ; if R61 == R62 then PC := 716
714 [-]: JMP       716          ; PC := 716
715 [-]: MOVE      R61 R0       ; R61 := R0
716 [-]: MOVE      R61 R1       ; R61 := R1
717 [-]: GETUPVAL  R62 U1       ; R62 := U1
718 [-]: GETTABLE  R62 R62 K115 ; R62 := R62["FactionNames"]
719 [-]: ADD       R63 R26 K37  ; R63 := R26 + 1
720 [-]: GETTABLE  R62 R62 R63  ; R62 := R62[R63]
721 [-]: GETGLOBAL R63 K0       ; R63 := 0x9FAED6BC
722 [-]: GETUPVAL  R64 U0       ; R64 := U0
723 [-]: GETTABLE  R64 R64 K92  ; R64 := R64["mInvasionInfo"]
724 [-]: GETTABLE  R64 R64 K118 ; R64 := R64["mDefenderName"]
725 [-]: CALL      R63 2 0      ; R63,... := R63(R64)
726 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
727 [-]: MOVE      R27 R60      ; R27 := R60
728 [-]: FORLOOP   R56 658      ; R56 += R58; if R56 <= R57 then begin PC := 658; R59 := R56 end
729 [-]: GETUPVAL  R60 U1       ; R60 := U1
730 [-]: GETTABLE  R60 R60 K61  ; R60 := R60["0xF030C338"]
731 [-]: GETGLOBAL R61 K23      ; R61 := mMovie
732 [-]: GETUPVAL  R62 U0       ; R62 := U0
733 [-]: GETTABLE  R62 R62 K92  ; R62 := R62["mInvasionInfo"]
734 [-]: GETTABLE  R62 R62 K119 ; R62 := R62["mAttackerReward"]
735 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
736 [-]: GETUPVAL  R61 U1       ; R61 := U1
737 [-]: GETTABLE  R61 R61 K61  ; R61 := R61["0xF030C338"]
738 [-]: GETGLOBAL R62 K23      ; R62 := mMovie
739 [-]: GETUPVAL  R63 U0       ; R63 := U0
740 [-]: GETTABLE  R63 R63 K92  ; R63 := R63["mInvasionInfo"]
741 [-]: GETTABLE  R63 R63 K120 ; R63 := R63["mDefenderReward"]
742 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
743 [-]: GETUPVAL  R62 U3       ; R62 := U3
744 [-]: GETTABLE  R62 R62 K19  ; R62 := R62["0xF81722A2"]
745 [-]: MOVE      R63 R28      ; R63 := R28
746 [-]: MOVE      R64 R60      ; R64 := R60
747 [-]: LOADK     R65 K43      ; R65 := " "
748 [-]: GETGLOBAL R66 K23      ; R66 := mMovie
749 [-]: SELF      R66 R66 K24  ; R67 := R66; R66 := R66["0x5DB0BD4"]
750 [-]: LOADK     R68 K121     ; R68 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
751 [-]: MOVE      R69 R0       ; R69 := R0
752 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
753 [-]: LOADK     R67 K43      ; R67 := " "
754 [-]: MOVE      R68 R61      ; R68 := R61
755 [-]: CONCAT    R64 R64 R68  ; R64 := R64 .. R65 .. R66 .. R67 .. R68
756 [-]: MOVE      R65 R61      ; R65 := R61
757 [-]: CALL      R62 4 2      ; R62 := R62(R63,R64,R65)
758 [-]: MOVE      R29 R62      ; R29 := R62
759 [-]: LOADK     R62 K122     ; R62 := "\r\n"
760 [-]: MOVE      R63 R23      ; R63 := R23
761 [-]: LOADK     R64 K122     ; R64 := "\r\n"
762 [-]: MOVE      R65 R24      ; R65 := R24
763 [-]: LOADK     R66 K123     ; R66 := "/"
764 [-]: MOVE      R67 R25      ; R67 := R25
765 [-]: CONCAT    R20 R62 R67  ; R20 := R62 .. R63 .. R64 .. R65 .. R66 .. R67
766 [-]: TEST      R26 0        ; if not R26 then PC := 778
767 [-]: JMP       778          ; PC := 778
768 [-]: TEST      R28 1        ; if R28 then PC := 778
769 [-]: JMP       778          ; PC := 778
770 [-]: MOVE      R62 R20      ; R62 := R20
771 [-]: LOADK     R63 K43      ; R63 := " "
772 [-]: GETGLOBAL R64 K23      ; R64 := mMovie
773 [-]: SELF      R64 R64 K24  ; R65 := R64; R64 := R64["0x5DB0BD4"]
774 [-]: MOVE      R66 R27      ; R66 := R27
775 [-]: MOVE      R67 R0       ; R67 := R0
776 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
777 [-]: CONCAT    R20 R62 R64  ; R20 := R62 .. R63 .. R64
778 [-]: MOVE      R62 R20      ; R62 := R20
779 [-]: LOADK     R63 K122     ; R63 := "\r\n"
780 [-]: MOVE      R64 R29      ; R64 := R29
781 [-]: CONCAT    R20 R62 R64  ; R20 := R62 .. R63 .. R64
782 [-]: GETGLOBAL R62 K53      ; R62 := Engine
783 [-]: GETTABLE  R62 R62 K54  ; R62 := R62["0xD09D7910"]
784 [-]: GETUPVAL  R63 U0       ; R63 := U0
785 [-]: GETTABLE  R63 R63 K92  ; R63 := R63["mInvasionInfo"]
786 [-]: GETTABLE  R63 R63 K55  ; R63 := R63["mExpiry"]
787 [-]: CALL      R62 2 2      ; R62 := R62(R63)
788 [-]: LE        0 K124 R62   ; if -600 > R62 then PC := 815
789 [-]: JMP       815          ; PC := 815
790 [-]: LE        0 R62 K125   ; if R62 > 43200 then PC := 815
791 [-]: JMP       815          ; PC := 815
792 [-]: GETUPVAL  R63 U1       ; R63 := U1
793 [-]: GETTABLE  R63 R63 K126 ; R63 := R63["0xE5892312"]
794 [-]: MOVE      R64 R62      ; R64 := R62
795 [-]: CALL      R63 2 2      ; R63 := R63(R64)
796 [-]: LT        0 R62 K31    ; if R62 >= 0 then PC := 803
797 [-]: JMP       803          ; PC := 803
798 [-]: GETUPVAL  R64 U1       ; R64 := U1
799 [-]: GETTABLE  R64 R64 K126 ; R64 := R64["0xE5892312"]
800 [-]: LOADK     R65 K31      ; R65 := 0
801 [-]: CALL      R64 2 2      ; R64 := R64(R65)
802 [-]: MOVE      R63 R64      ; R63 := R64
803 [-]: MOVE      R64 R16      ; R64 := R16
804 [-]: LOADK     R65 K17      ; R65 := " - "
805 [-]: GETGLOBAL R66 K9       ; R66 := string
806 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
807 [-]: GETGLOBAL R67 K11      ; R67 := 0xE6DC43B0
808 [-]: LOADK     R68 K127     ; R68 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
809 [-]: LOADNIL   R69 R69      ; R69 := nil
810 [-]: CALL      R67 3 0      ; R67,... := R67(R68,R69)
811 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
812 [-]: LOADK     R67 K43      ; R67 := " "
813 [-]: MOVE      R68 R63      ; R68 := R63
814 [-]: CONCAT    R16 R64 R68  ; R16 := R64 .. R65 .. R66 .. R67 .. R68
815 [-]: GETUPVAL  R64 U0       ; R64 := U0
816 [-]: GETTABLE  R64 R64 K67  ; R64 := R64["mMission"]
817 [-]: GETTABLE  R64 R64 K128 ; R64 := R64["missionType"]
818 [-]: GETGLOBAL R65 K27      ; R65 := Lotus_Game
819 [-]: GETTABLE  R65 R65 K129 ; R65 := R65["MT_RAILJACK"]
820 [-]: EQ        0 R64 R65    ; if R64 ~= R65 then PC := 868
821 [-]: JMP       868          ; PC := 868
822 [-]: GETGLOBAL R64 K30      ; R64 := 0x400E7765
823 [-]: GETUPVAL  R65 U0       ; R65 := U0
824 [-]: GETTABLE  R65 R65 K67  ; R65 := R65["mMission"]
825 [-]: SELF      R65 R65 K130 ; R66 := R65; R65 := R65["0x70C51B59"]
826 [-]: CALL      R65 2 0      ; R65,... := R65(R66)
827 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
828 [-]: TEST      R64 0        ; if not R64 then PC := 868
829 [-]: JMP       868          ; PC := 868
830 [-]: GETGLOBAL R64 K23      ; R64 := mMovie
831 [-]: SELF      R64 R64 K24  ; R65 := R64; R64 := R64["0x5DB0BD4"]
832 [-]: LOADK     R66 K131     ; R66 := "<RAILJACK>"
833 [-]: MOVE      R67 R1       ; R67 := R1
834 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
835 [-]: LOADK     R65 K43      ; R65 := " "
836 [-]: GETGLOBAL R66 K9       ; R66 := string
837 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
838 [-]: GETGLOBAL R67 K23      ; R67 := mMovie
839 [-]: SELF      R67 R67 K24  ; R68 := R67; R67 := R67["0x5DB0BD4"]
840 [-]: LOADK     R69 K132     ; R69 := "/Lotus/Language/Railjack/Railjack"
841 [-]: MOVE      R70 R0       ; R70 := R0
842 [-]: CALL      R67 4 0      ; R67,... := R67(R68,R69,R70)
843 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
844 [-]: CONCAT    R10 R64 R66  ; R10 := R64 .. R65 .. R66
845 [-]: MOVE      R64 R34      ; R64 := R34
846 [-]: LOADNIL   R65 R65      ; R65 := nil
847 [-]: MOVE      R66 R10      ; R66 := R10
848 [-]: CALL      R64 3 1      ; R64(R65,R66)
849 [-]: GETGLOBAL R64 K9       ; R64 := string
850 [-]: GETTABLE  R64 R64 K133 ; R64 := R64["0xC6772A8A"]
851 [-]: MOVE      R65 R33      ; R65 := R33
852 [-]: CALL      R64 2 2      ; R64 := R64(R65)
853 [-]: MOVE      R65 R33      ; R65 := R33
854 [-]: LOADK     R66 K134     ; R66 := "</p>"
855 [-]: CONCAT    R33 R65 R66  ; R33 := R65 .. R66
856 [-]: GETUPVAL  R65 U6       ; R65 := U6
857 [-]: GETTABLE  R65 R65 K135 ; R65 := R65["UpdateTimer"]
858 [-]: EQ        1 R65 K22    ; if R65 == nil then PC := 867
859 [-]: JMP       867          ; PC := 867
860 [-]: GETUPVAL  R65 U6       ; R65 := U6
861 [-]: GETGLOBAL R66 K9       ; R66 := string
862 [-]: GETTABLE  R66 R66 K137 ; R66 := R66["0x7B782033"]
863 [-]: MOVE      R67 R33      ; R67 := R33
864 [-]: ADD       R68 R64 K37  ; R68 := R64 + 1
865 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
866 [-]: SETTABLE  R65 K136 R66 ; R65["TimerPost"] := R66
867 [-]: RETURN    R33 2        ; return R33
868 [-]: GETGLOBAL R65 K27      ; R65 := Lotus_Game
869 [-]: GETTABLE  R65 R65 K28  ; R65 := R65["NT_HUB"]
870 [-]: EQ        1 R9 R65     ; if R9 == R65 then PC := 878
871 [-]: JMP       878          ; PC := 878
872 [-]: MOVE      R65 R34      ; R65 := R34
873 [-]: LOADNIL   R66 R66      ; R66 := nil
874 [-]: MOVE      R67 R10      ; R67 := R10
875 [-]: MOVE      R68 R12      ; R68 := R12
876 [-]: CONCAT    R67 R67 R68  ; R67 := R67 .. R68
877 [-]: CALL      R65 3 1      ; R65(R66,R67)
878 [-]: EQ        1 R13 K8     ; if R13 == "" then PC := 885
879 [-]: JMP       885          ; PC := 885
880 [-]: MOVE      R65 R34      ; R65 := R34
881 [-]: MOVE      R66 R14      ; R66 := R14
882 [-]: MOVE      R67 R13      ; R67 := R13
883 [-]: MOVE      R68 R35      ; R68 := R35
884 [-]: CALL      R65 4 1      ; R65(R66,R67,R68)
885 [-]: GETUPVAL  R65 U0       ; R65 := U0
886 [-]: GETTABLE  R65 R65 K67  ; R65 := R65["mMission"]
887 [-]: GETTABLE  R65 R65 K138 ; R65 := R65["goalTag"]
888 [-]: SELF      R65 R65 K139 ; R66 := R65; R65 := R65["0x5EC7A3D2"]
889 [-]: CALL      R65 2 2      ; R65 := R65(R66)
890 [-]: EQ        0 R65 K140   ; if R65 ~= "NoMods" then PC := 905
891 [-]: JMP       905          ; PC := 905
892 [-]: GETGLOBAL R65 K23      ; R65 := mMovie
893 [-]: SELF      R65 R65 K24  ; R66 := R65; R65 := R65["0x5DB0BD4"]
894 [-]: LOADK     R67 K141     ; R67 := "/Lotus/Language/Sorties/SOModifierNoMods"
895 [-]: MOVE      R68 R0       ; R68 := R0
896 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
897 [-]: GETGLOBAL R66 K23      ; R66 := mMovie
898 [-]: SELF      R66 R66 K24  ; R67 := R66; R66 := R66["0x5DB0BD4"]
899 [-]: LOADK     R68 K142     ; R68 := "/Lotus/Language/Sorties/SOModifierCaption"
900 [-]: MOVE      R69 R0       ; R69 := R0
901 [-]: NEWTABLE  R70 0 1      ; R70 := {}
902 [-]: SETTABLE  R70 K143 R65 ; R70["MODIFIER_DESC"] := R65
903 [-]: CALL      R66 5 2      ; R66 := R66(R67,R68,R69,R70)
904 [-]: MOVE      R32 R66      ; R32 := R66
905 [-]: TEST      R19 1        ; if R19 then PC := 984
906 [-]: JMP       984          ; PC := 984
907 [-]: EQ        1 R20 K22    ; if R20 == nil then PC := 984
908 [-]: JMP       984          ; PC := 984
909 [-]: TEST      R28 1        ; if R28 then PC := 984
910 [-]: JMP       984          ; PC := 984
911 [-]: GETGLOBAL R66 K11      ; R66 := 0xE6DC43B0
912 [-]: GETGLOBAL R67 K0       ; R67 := 0x9FAED6BC
913 [-]: GETUPVAL  R68 U1       ; R68 := U1
914 [-]: GETTABLE  R68 R68 K115 ; R68 := R68["FactionNames"]
915 [-]: GETUPVAL  R69 U0       ; R69 := U0
916 [-]: GETTABLE  R69 R69 K92  ; R69 := R69["mInvasionInfo"]
917 [-]: GETTABLE  R69 R69 K93  ; R69 := R69["mFaction"]
918 [-]: ADD       R69 R69 K37  ; R69 := R69 + 1
919 [-]: GETTABLE  R68 R68 R69  ; R68 := R68[R69]
920 [-]: CALL      R67 2 2      ; R67 := R67(R68)
921 [-]: MOVE      R68 R0       ; R68 := R0
922 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
923 [-]: LOADK     R67 K50      ; R67 := " ("
924 [-]: GETGLOBAL R68 K9       ; R68 := string
925 [-]: GETTABLE  R68 R68 K10  ; R68 := R68["0x639C642A"]
926 [-]: GETGLOBAL R69 K23      ; R69 := mMovie
927 [-]: SELF      R69 R69 K24  ; R70 := R69; R69 := R69["0x5DB0BD4"]
928 [-]: LOADK     R71 K65      ; R71 := "/Lotus/Language/Game/MissionName_"
929 [-]: GETUPVAL  R72 U1       ; R72 := U1
930 [-]: GETTABLE  R72 R72 K66  ; R72 := R72["0x87B2D555"]
931 [-]: GETUPVAL  R73 U0       ; R73 := U0
932 [-]: GETTABLE  R73 R73 K92  ; R73 := R73["mInvasionInfo"]
933 [-]: GETTABLE  R73 R73 K100 ; R73 := R73["mAttackerMissionInfo"]
934 [-]: CALL      R72 2 2      ; R72 := R72(R73)
935 [-]: CONCAT    R71 R71 R72  ; R71 := R71 .. R72
936 [-]: MOVE      R72 R0       ; R72 := R0
937 [-]: CALL      R69 4 0      ; R69,... := R69(R70,R71,R72)
938 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
939 [-]: LOADK     R69 K52      ; R69 := ")"
940 [-]: CONCAT    R66 R66 R69  ; R66 := R66 .. R67 .. R68 .. R69
941 [-]: GETGLOBAL R67 K11      ; R67 := 0xE6DC43B0
942 [-]: GETGLOBAL R68 K0       ; R68 := 0x9FAED6BC
943 [-]: GETUPVAL  R69 U1       ; R69 := U1
944 [-]: GETTABLE  R69 R69 K115 ; R69 := R69["FactionNames"]
945 [-]: GETUPVAL  R70 U0       ; R70 := U0
946 [-]: GETTABLE  R70 R70 K92  ; R70 := R70["mInvasionInfo"]
947 [-]: GETTABLE  R70 R70 K100 ; R70 := R70["mAttackerMissionInfo"]
948 [-]: GETTABLE  R70 R70 K101 ; R70 := R70["faction"]
949 [-]: ADD       R70 R70 K37  ; R70 := R70 + 1
950 [-]: GETTABLE  R69 R69 R70  ; R69 := R69[R70]
951 [-]: CALL      R68 2 2      ; R68 := R68(R69)
952 [-]: MOVE      R69 R0       ; R69 := R0
953 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
954 [-]: LOADK     R68 K50      ; R68 := " ("
955 [-]: GETGLOBAL R69 K9       ; R69 := string
956 [-]: GETTABLE  R69 R69 K10  ; R69 := R69["0x639C642A"]
957 [-]: GETGLOBAL R70 K23      ; R70 := mMovie
958 [-]: SELF      R70 R70 K24  ; R71 := R70; R70 := R70["0x5DB0BD4"]
959 [-]: LOADK     R72 K65      ; R72 := "/Lotus/Language/Game/MissionName_"
960 [-]: GETUPVAL  R73 U1       ; R73 := U1
961 [-]: GETTABLE  R73 R73 K66  ; R73 := R73["0x87B2D555"]
962 [-]: GETUPVAL  R74 U0       ; R74 := U0
963 [-]: GETTABLE  R74 R74 K92  ; R74 := R74["mInvasionInfo"]
964 [-]: GETTABLE  R74 R74 K144 ; R74 := R74["mDefenderMissionInfo"]
965 [-]: CALL      R73 2 2      ; R73 := R73(R74)
966 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
967 [-]: MOVE      R73 R0       ; R73 := R0
968 [-]: CALL      R70 4 0      ; R70,... := R70(R71,R72,R73)
969 [-]: CALL      R69 0 2      ; R69 := R69(R70,...)
970 [-]: LOADK     R70 K52      ; R70 := ")"
971 [-]: CONCAT    R67 R67 R70  ; R67 := R67 .. R68 .. R69 .. R70
972 [-]: MOVE      R68 R34      ; R68 := R34
973 [-]: LOADNIL   R69 R69      ; R69 := nil
974 [-]: MOVE      R70 R66      ; R70 := R66
975 [-]: LOADK     R71 K43      ; R71 := " "
976 [-]: GETGLOBAL R72 K11      ; R72 := 0xE6DC43B0
977 [-]: LOADK     R73 K121     ; R73 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
978 [-]: LOADNIL   R74 R74      ; R74 := nil
979 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
980 [-]: LOADK     R73 K122     ; R73 := "\r\n"
981 [-]: MOVE      R74 R67      ; R74 := R67
982 [-]: CONCAT    R70 R70 R74  ; R70 := R70 .. R71 .. R72 .. R73 .. R74
983 [-]: CALL      R68 3 1      ; R68(R69,R70)
984 [-]: GETUPVAL  R68 U0       ; R68 := U0
985 [-]: GETTABLE  R68 R68 K67  ; R68 := R68["mMission"]
986 [-]: GETTABLE  R68 R68 K128 ; R68 := R68["missionType"]
987 [-]: GETGLOBAL R69 K27      ; R69 := Lotus_Game
988 [-]: GETTABLE  R69 R69 K145 ; R69 := R69["MT_LANDSCAPE"]
989 [-]: EQ        1 R68 R69    ; if R68 == R69 then PC := 999
990 [-]: JMP       999          ; PC := 999
991 [-]: GETGLOBAL R68 K27      ; R68 := Lotus_Game
992 [-]: GETTABLE  R68 R68 K28  ; R68 := R68["NT_HUB"]
993 [-]: EQ        0 R9 R68     ; if R9 ~= R68 then PC := 1071
994 [-]: JMP       1071         ; PC := 1071
995 [-]: GETUPVAL  R68 U1       ; R68 := U1
996 [-]: GETTABLE  R68 R68 K146 ; R68 := R68["CETUS_NODE_TAG"]
997 [-]: EQ        0 R8 R68     ; if R8 ~= R68 then PC := 1071
998 [-]: JMP       1071         ; PC := 1071
999 [-]: GETUPVAL  R68 U6       ; R68 := U6
1000 [-]: SETTABLE  R68 K135 K31 ; R68["UpdateTimer"] := 0
1001 [-]: GETUPVAL  R68 U6       ; R68 := U6
1002 [-]: SETTABLE  R68 K147 R33 ; R68["TimerPre"] := R33
1003 [-]: GETUPVAL  R68 U1       ; R68 := U1
1004 [-]: GETTABLE  R68 R68 K148 ; R68 := R68["0x555EFA5"]
1005 [-]: GETUPVAL  R69 U0       ; R69 := U0
1006 [-]: GETTABLE  R69 R69 K67  ; R69 := R69["mMission"]
1007 [-]: GETTABLE  R69 R69 K149 ; R69 := R69["location"]
1008 [-]: CALL      R68 2 2      ; R68 := R68(R69)
1009 [-]: GETUPVAL  R69 U1       ; R69 := U1
1010 [-]: GETTABLE  R69 R69 K150 ; R69 := R69["0x447FCC2F"]
1011 [-]: MOVE      R70 R68      ; R70 := R68
1012 [-]: GETUPVAL  R71 U0       ; R71 := U0
1013 [-]: GETTABLE  R71 R71 K67  ; R71 := R71["mMission"]
1014 [-]: GETTABLE  R71 R71 K149 ; R71 := R71["location"]
1015 [-]: CALL      R69 3 4      ; R69,R70,R71 := R69(R70,R71)
1016 [-]: GETUPVAL  R72 U6       ; R72 := U6
1017 [-]: SETTABLE  R72 K151 R71 ; R72["NodeTime"] := R71
1018 [-]: GETUPVAL  R72 U0       ; R72 := U0
1019 [-]: GETTABLE  R72 R72 K67  ; R72 := R72["mMission"]
1020 [-]: GETTABLE  R72 R72 K149 ; R72 := R72["location"]
1021 [-]: GETUPVAL  R73 U1       ; R73 := U1
1022 [-]: GETTABLE  R73 R73 K152 ; R73 := R73["ORB_VALLIS_NODE_TAG"]
1023 [-]: EQ        0 R72 R73    ; if R72 ~= R73 then PC := 1048
1024 [-]: JMP       1048         ; PC := 1048
1025 [-]: MOVE      R72 R34      ; R72 := R34
1026 [-]: LOADK     R73 K153     ; R73 := "/Lotus/Language/SolarisVenus/Temperature"
1027 [-]: GETGLOBAL R74 K23      ; R74 := mMovie
1028 [-]: SELF      R74 R74 K24  ; R75 := R74; R74 := R74["0x5DB0BD4"]
1029 [-]: LOADK     R76 K154     ; R76 := "/Lotus/Language/SystemMessages/TimeUntil"
1030 [-]: MOVE      R77 R0       ; R77 := R0
1031 [-]: NEWTABLE  R78 0 2      ; R78 := {}
1032 [-]: GETGLOBAL R79 K23      ; R79 := mMovie
1033 [-]: SELF      R79 R79 K24  ; R80 := R79; R79 := R79["0x5DB0BD4"]
1034 [-]: MOVE      R81 R70      ; R81 := R70
1035 [-]: MOVE      R82 R0       ; R82 := R0
1036 [-]: CALL      R79 4 2      ; R79 := R79(R80,R81,R82)
1037 [-]: SETTABLE  R78 K155 R79 ; R78["LABEL"] := R79
1038 [-]: GETUPVAL  R79 U1       ; R79 := U1
1039 [-]: GETTABLE  R79 R79 K157 ; R79 := R79["0xC65D09DD"]
1040 [-]: GETGLOBAL R80 K23      ; R80 := mMovie
1041 [-]: MOVE      R81 R71      ; R81 := R71
1042 [-]: LOADK     R82 K158     ; R82 := "CompactOne"
1043 [-]: CALL      R79 4 2      ; R79 := R79(R80,R81,R82)
1044 [-]: SETTABLE  R78 K156 R79 ; R78["TIME"] := R79
1045 [-]: CALL      R74 5 0      ; R74,... := R74(R75,R76,R77,R78)
1046 [-]: CALL      R72 0 1      ; R72(R73,...)
1047 [-]: JMP       1079         ; PC := 1079
1048 [-]: MOVE      R72 R34      ; R72 := R34
1049 [-]: LOADK     R73 K159     ; R73 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
1050 [-]: GETGLOBAL R74 K23      ; R74 := mMovie
1051 [-]: SELF      R74 R74 K24  ; R75 := R74; R74 := R74["0x5DB0BD4"]
1052 [-]: LOADK     R76 K154     ; R76 := "/Lotus/Language/SystemMessages/TimeUntil"
1053 [-]: MOVE      R77 R0       ; R77 := R0
1054 [-]: NEWTABLE  R78 0 2      ; R78 := {}
1055 [-]: GETGLOBAL R79 K23      ; R79 := mMovie
1056 [-]: SELF      R79 R79 K24  ; R80 := R79; R79 := R79["0x5DB0BD4"]
1057 [-]: MOVE      R81 R70      ; R81 := R70
1058 [-]: MOVE      R82 R0       ; R82 := R0
1059 [-]: CALL      R79 4 2      ; R79 := R79(R80,R81,R82)
1060 [-]: SETTABLE  R78 K155 R79 ; R78["LABEL"] := R79
1061 [-]: GETUPVAL  R79 U1       ; R79 := U1
1062 [-]: GETTABLE  R79 R79 K157 ; R79 := R79["0xC65D09DD"]
1063 [-]: GETGLOBAL R80 K23      ; R80 := mMovie
1064 [-]: MOVE      R81 R71      ; R81 := R71
1065 [-]: LOADK     R82 K158     ; R82 := "CompactOne"
1066 [-]: CALL      R79 4 2      ; R79 := R79(R80,R81,R82)
1067 [-]: SETTABLE  R78 K156 R79 ; R78["TIME"] := R79
1068 [-]: CALL      R74 5 0      ; R74,... := R74(R75,R76,R77,R78)
1069 [-]: CALL      R72 0 1      ; R72(R73,...)
1070 [-]: JMP       1079         ; PC := 1079
1071 [-]: GETUPVAL  R72 U6       ; R72 := U6
1072 [-]: SETTABLE  R72 K135 K22 ; R72["UpdateTimer"] := nil
1073 [-]: GETUPVAL  R72 U6       ; R72 := U6
1074 [-]: SETTABLE  R72 K151 K22 ; R72["NodeTime"] := nil
1075 [-]: GETUPVAL  R72 U6       ; R72 := U6
1076 [-]: SETTABLE  R72 K147 K22 ; R72["TimerPre"] := nil
1077 [-]: GETUPVAL  R72 U6       ; R72 := U6
1078 [-]: SETTABLE  R72 K136 K22 ; R72["TimerPost"] := nil
1079 [-]: GETGLOBAL R72 K9       ; R72 := string
1080 [-]: GETTABLE  R72 R72 K133 ; R72 := R72["0xC6772A8A"]
1081 [-]: MOVE      R73 R33      ; R73 := R33
1082 [-]: CALL      R72 2 2      ; R72 := R72(R73)
1083 [-]: GETUPVAL  R73 U1       ; R73 := U1
1084 [-]: GETTABLE  R73 R73 K160 ; R73 := R73["OPTIONAL_GOAL_PREFIX"]
1085 [-]: MOVE      R74 R7       ; R74 := R7
1086 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1087 [-]: GETTABLE  R74 R11 R73  ; R74 := R11[R73]
1088 [-]: TEST      R74 0        ; if not R74 then PC := 1098
1089 [-]: JMP       1098         ; PC := 1098
1090 [-]: MOVE      R74 R34      ; R74 := R34
1091 [-]: LOADK     R75 K161     ; R75 := "/Lotus/Language/Menu/WorldStatePanel_Event"
1092 [-]: GETGLOBAL R76 K11      ; R76 := 0xE6DC43B0
1093 [-]: GETTABLE  R77 R11 R73  ; R77 := R11[R73]
1094 [-]: GETTABLE  R77 R77 K64  ; R77 := R77["mDesc"]
1095 [-]: LOADNIL   R78 R78      ; R78 := nil
1096 [-]: CALL      R76 3 0      ; R76,... := R76(R77,R78)
1097 [-]: CALL      R74 0 1      ; R74(R75,...)
1098 [-]: LOADNIL   R74 R74      ; R74 := nil
1099 [-]: GETUPVAL  R75 U0       ; R75 := U0
1100 [-]: GETTABLE  R75 R75 K67  ; R75 := R75["mMission"]
1101 [-]: GETTABLE  R75 R75 K128 ; R75 := R75["missionType"]
1102 [-]: GETGLOBAL R76 K27      ; R76 := Lotus_Game
1103 [-]: GETTABLE  R76 R76 K162 ; R76 := R76["MT_ASSASSINATION"]
1104 [-]: EQ        0 R75 R76    ; if R75 ~= R76 then PC := 1117
1105 [-]: JMP       1117         ; PC := 1117
1106 [-]: TEST      R18 1        ; if R18 then PC := 1117
1107 [-]: JMP       1117         ; PC := 1117
1108 [-]: MOVE      R75 R34      ; R75 := R34
1109 [-]: LOADK     R76 K163     ; R76 := "/Lotus/Language/Menu/MissionIntro_Target"
1110 [-]: GETGLOBAL R77 K9       ; R77 := string
1111 [-]: GETTABLE  R77 R77 K10  ; R77 := R77["0x639C642A"]
1112 [-]: GETUPVAL  R78 U0       ; R78 := U0
1113 [-]: GETTABLE  R78 R78 K64  ; R78 := R78["mDesc"]
1114 [-]: CALL      R77 2 0      ; R77,... := R77(R78)
1115 [-]: CALL      R75 0 1      ; R75(R76,...)
1116 [-]: JMP       1199         ; PC := 1199
1117 [-]: GETTABLE  R75 R0 K164  ; R75 := R0["guildId"]
1118 [-]: EQ        1 R75 K22    ; if R75 == nil then PC := 1143
1119 [-]: JMP       1143         ; PC := 1143
1120 [-]: GETTABLE  R75 R0 K165  ; R75 := R0["clanTier"]
1121 [-]: EQ        1 R75 K22    ; if R75 == nil then PC := 1143
1122 [-]: JMP       1143         ; PC := 1143
1123 [-]: MOVE      R75 R34      ; R75 := R34
1124 [-]: LOADK     R76 K166     ; R76 := "/Lotus/Language/Menu/Profile_Clan"
1125 [-]: GETGLOBAL R77 K9       ; R77 := string
1126 [-]: GETTABLE  R77 R77 K10  ; R77 := R77["0x639C642A"]
1127 [-]: GETTABLE  R78 R0 K167  ; R78 := R0["locName"]
1128 [-]: CALL      R77 2 0      ; R77,... := R77(R78)
1129 [-]: CALL      R75 0 1      ; R75(R76,...)
1130 [-]: MOVE      R75 R34      ; R75 := R34
1131 [-]: LOADK     R76 K168     ; R76 := "/Lotus/Language/Dojo/ClanTier"
1132 [-]: GETGLOBAL R77 K9       ; R77 := string
1133 [-]: GETTABLE  R77 R77 K10  ; R77 := R77["0x639C642A"]
1134 [-]: GETGLOBAL R78 K11      ; R78 := 0xE6DC43B0
1135 [-]: GETUPVAL  R79 U7       ; R79 := U7
1136 [-]: GETTABLE  R80 R0 K165  ; R80 := R0["clanTier"]
1137 [-]: GETTABLE  R79 R79 R80  ; R79 := R79[R80]
1138 [-]: LOADNIL   R80 R80      ; R80 := nil
1139 [-]: CALL      R78 3 0      ; R78,... := R78(R79,R80)
1140 [-]: CALL      R77 0 0      ; R77,... := R77(R78,...)
1141 [-]: CALL      R75 0 1      ; R75(R76,...)
1142 [-]: JMP       1199         ; PC := 1199
1143 [-]: GETGLOBAL R75 K27      ; R75 := Lotus_Game
1144 [-]: GETTABLE  R75 R75 K28  ; R75 := R75["NT_HUB"]
1145 [-]: EQ        0 R9 R75     ; if R9 ~= R75 then PC := 1174
1146 [-]: JMP       1174         ; PC := 1174
1147 [-]: LOADNIL   R75 R75      ; R75 := nil
1148 [-]: EQ        0 R7 K169    ; if R7 ~= "IronwakeHUB3" then PC := 1152
1149 [-]: JMP       1152         ; PC := 1152
1150 [-]: LOADK     R75 K170     ; R75 := "/Lotus/Language/Factions/SteelMeridianName"
1151 [-]: JMP       1165         ; PC := 1165
1152 [-]: GETUPVAL  R76 U1       ; R76 := U1
1153 [-]: GETTABLE  R76 R76 K146 ; R76 := R76["CETUS_NODE_TAG"]
1154 [-]: EQ        0 R8 R76     ; if R8 ~= R76 then PC := 1158
1155 [-]: JMP       1158         ; PC := 1158
1156 [-]: LOADK     R75 K171     ; R75 := "/Lotus/Language/Syndicates/CetusName"
1157 [-]: JMP       1165         ; PC := 1165
1158 [-]: GETUPVAL  R76 U1       ; R76 := U1
1159 [-]: GETTABLE  R76 R76 K172 ; R76 := R76["FORTUNA_NODE_TAG"]
1160 [-]: EQ        0 R8 R76     ; if R8 ~= R76 then PC := 1164
1161 [-]: JMP       1164         ; PC := 1164
1162 [-]: LOADK     R75 K173     ; R75 := "/Lotus/Language/Syndicates/SolarisName"
1163 [-]: JMP       1165         ; PC := 1165
1164 [-]: LOADK     R75 K174     ; R75 := "/Lotus/Language/Menu/Codex_Tenno"
1165 [-]: GETGLOBAL R76 K9       ; R76 := string
1166 [-]: GETTABLE  R76 R76 K10  ; R76 := R76["0x639C642A"]
1167 [-]: GETGLOBAL R77 K11      ; R77 := 0xE6DC43B0
1168 [-]: MOVE      R78 R75      ; R78 := R75
1169 [-]: LOADNIL   R79 R79      ; R79 := nil
1170 [-]: CALL      R77 3 0      ; R77,... := R77(R78,R79)
1171 [-]: CALL      R76 0 2      ; R76 := R76(R77,...)
1172 [-]: MOVE      R74 R76      ; R74 := R76
1173 [-]: JMP       1199         ; PC := 1199
1174 [-]: TEST      R18 0        ; if not R18 then PC := 1180
1175 [-]: JMP       1180         ; PC := 1180
1176 [-]: GETUPVAL  R76 U8       ; R76 := U8
1177 [-]: GETTABLE  R76 R76 K175 ; R76 := R76["Active"]
1178 [-]: TEST      R76 1        ; if R76 then PC := 1199
1179 [-]: JMP       1199         ; PC := 1199
1180 [-]: GETGLOBAL R76 K9       ; R76 := string
1181 [-]: GETTABLE  R76 R76 K10  ; R76 := R76["0x639C642A"]
1182 [-]: GETUPVAL  R77 U0       ; R77 := U0
1183 [-]: GETTABLE  R77 R77 K64  ; R77 := R77["mDesc"]
1184 [-]: CALL      R76 2 2      ; R76 := R76(R77)
1185 [-]: TEST      R5 0         ; if not R5 then PC := 1198
1186 [-]: JMP       1198         ; PC := 1198
1187 [-]: MOVE      R77 R76      ; R77 := R76
1188 [-]: LOADK     R78 K50      ; R78 := " ("
1189 [-]: GETGLOBAL R79 K9       ; R79 := string
1190 [-]: GETTABLE  R79 R79 K10  ; R79 := R79["0x639C642A"]
1191 [-]: GETGLOBAL R80 K11      ; R80 := 0xE6DC43B0
1192 [-]: LOADK     R81 K176     ; R81 := "/Lotus/Language/Menu/OccupyingFaction"
1193 [-]: LOADNIL   R82 R82      ; R82 := nil
1194 [-]: CALL      R80 3 0      ; R80,... := R80(R81,R82)
1195 [-]: CALL      R79 0 2      ; R79 := R79(R80,...)
1196 [-]: LOADK     R80 K52      ; R80 := ")"
1197 [-]: CONCAT    R76 R77 R80  ; R76 := R77 .. R78 .. R79 .. R80
1198 [-]: MOVE      R74 R76      ; R74 := R76
1199 [-]: TEST      R17 1        ; if R17 then PC := 1257
1200 [-]: JMP       1257         ; PC := 1257
1201 [-]: TEST      R18 1        ; if R18 then PC := 1257
1202 [-]: JMP       1257         ; PC := 1257
1203 [-]: GETUPVAL  R77 U3       ; R77 := U3
1204 [-]: GETTABLE  R77 R77 K19  ; R77 := R77["0xF81722A2"]
1205 [-]: EQ        1 R3 K177    ; if R3 == "0x1" then PC := 1208
1206 [-]: JMP       1208         ; PC := 1208
1207 [-]: MOVE      R78 R0       ; R78 := R0
1208 [-]: MOVE      R78 R1       ; R78 := R1
1209 [-]: LOADK     R79 K178     ; R79 := 10
1210 [-]: LOADK     R80 K31      ; R80 := 0
1211 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
1212 [-]: GETUPVAL  R78 U0       ; R78 := U0
1213 [-]: GETTABLE  R78 R78 K179 ; R78 := R78["mLevelMin"]
1214 [-]: ADD       R78 R78 R77  ; R78 := R78 + R77
1215 [-]: GETUPVAL  R79 U0       ; R79 := U0
1216 [-]: GETTABLE  R79 R79 K180 ; R79 := R79["mLevelMax"]
1217 [-]: ADD       R79 R79 R77  ; R79 := R79 + R77
1218 [-]: EQ        1 R6 K22     ; if R6 == nil then PC := 1222
1219 [-]: JMP       1222         ; PC := 1222
1220 [-]: GETTABLE  R78 R6 K181  ; R78 := R6["mMinLevel"]
1221 [-]: GETTABLE  R79 R6 K182  ; R79 := R6["mMaxLevel"]
1222 [-]: MOVE      R80 R78      ; R80 := R78
1223 [-]: LOADK     R81 K183     ; R81 := "-"
1224 [-]: MOVE      R82 R79      ; R82 := R79
1225 [-]: CONCAT    R80 R80 R82  ; R80 := R80 .. R81 .. R82
1226 [-]: MOVE      R81 R34      ; R81 := R34
1227 [-]: GETUPVAL  R82 U3       ; R82 := U3
1228 [-]: GETTABLE  R82 R82 K19  ; R82 := R82["0xF81722A2"]
1229 [-]: EQ        0 R74 K22    ; if R74 ~= nil then PC := 1232
1230 [-]: JMP       1232         ; PC := 1232
1231 [-]: MOVE      R83 R0       ; R83 := R0
1232 [-]: MOVE      R83 R1       ; R83 := R1
1233 [-]: MOVE      R84 R74      ; R84 := R74
1234 [-]: LOADK     R85 K184     ; R85 := "/Lotus/Language/Menu/MissionBoard_Level"
1235 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
1236 [-]: MOVE      R83 R80      ; R83 := R80
1237 [-]: CALL      R81 3 1      ; R81(R82,R83)
1238 [-]: GETUPVAL  R81 U0       ; R81 := U0
1239 [-]: GETTABLE  R81 R81 K67  ; R81 := R81["mMission"]
1240 [-]: GETTABLE  R81 R81 K128 ; R81 := R81["missionType"]
1241 [-]: GETGLOBAL R82 K27      ; R82 := Lotus_Game
1242 [-]: GETTABLE  R82 R82 K129 ; R82 := R82["MT_RAILJACK"]
1243 [-]: EQ        0 R81 R82    ; if R81 ~= R82 then PC := 1257
1244 [-]: JMP       1257         ; PC := 1257
1245 [-]: GETUPVAL  R81 U0       ; R81 := U0
1246 [-]: GETTABLE  R81 R81 K67  ; R81 := R81["mMission"]
1247 [-]: GETTABLE  R81 R81 K185 ; R81 := R81["minSpaceEnemyLevel"]
1248 [-]: LOADK     R82 K183     ; R82 := "-"
1249 [-]: GETUPVAL  R83 U0       ; R83 := U0
1250 [-]: GETTABLE  R83 R83 K67  ; R83 := R83["mMission"]
1251 [-]: GETTABLE  R83 R83 K186 ; R83 := R83["maxSpaceEnemyLevel"]
1252 [-]: CONCAT    R81 R81 R83  ; R81 := R81 .. R82 .. R83
1253 [-]: MOVE      R82 R34      ; R82 := R34
1254 [-]: LOADK     R83 K187     ; R83 := "/Lotus/Language/Menu/MissionBoard_SpaceLevel"
1255 [-]: MOVE      R84 R81      ; R84 := R81
1256 [-]: CALL      R82 3 1      ; R82(R83,R84)
1257 [-]: GETGLOBAL R82 K30      ; R82 := 0x400E7765
1258 [-]: GETUPVAL  R83 U0       ; R83 := U0
1259 [-]: GETTABLE  R83 R83 K67  ; R83 := R83["mMission"]
1260 [-]: GETTABLE  R83 R83 K188 ; R83 := R83["exclusiveWeapon"]
1261 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1262 [-]: TEST      R82 1        ; if R82 then PC := 1306
1263 [-]: JMP       1306         ; PC := 1306
1264 [-]: GETGLOBAL R82 K11      ; R82 := 0xE6DC43B0
1265 [-]: GETGLOBAL R83 K0       ; R83 := 0x9FAED6BC
1266 [-]: GETGLOBAL R84 K40      ; R84 := 0x7C282057
1267 [-]: GETUPVAL  R85 U0       ; R85 := U0
1268 [-]: GETTABLE  R85 R85 K67  ; R85 := R85["mMission"]
1269 [-]: GETTABLE  R85 R85 K188 ; R85 := R85["exclusiveWeapon"]
1270 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1271 [-]: SELF      R84 R84 K41  ; R85 := R84; R84 := R84["0x616C74B6"]
1272 [-]: CALL      R84 2 0      ; R84,... := R84(R85)
1273 [-]: CALL      R83 0 2      ; R83 := R83(R84,...)
1274 [-]: MOVE      R84 R0       ; R84 := R0
1275 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
1276 [-]: GETGLOBAL R83 K11      ; R83 := 0xE6DC43B0
1277 [-]: LOADK     R84 K189     ; R84 := "/Lotus/Language/Menu/Lobby_RestrictionDesc"
1278 [-]: NEWTABLE  R85 0 1      ; R85 := {}
1279 [-]: SETTABLE  R85 K190 R82 ; R85["ITEM"] := R82
1280 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
1281 [-]: GETUPVAL  R84 U0       ; R84 := U0
1282 [-]: GETTABLE  R84 R84 K63  ; R84 := R84["mGoalInfo"]
1283 [-]: TEST      R84 0        ; if not R84 then PC := 1301
1284 [-]: JMP       1301         ; PC := 1301
1285 [-]: GETUPVAL  R84 U0       ; R84 := U0
1286 [-]: GETTABLE  R84 R84 K63  ; R84 := R84["mGoalInfo"]
1287 [-]: GETTABLE  R84 R84 K57  ; R84 := R84["mTag"]
1288 [-]: GETUPVAL  R85 U9       ; R85 := U9
1289 [-]: GETTABLE  R85 R85 K191 ; R85 := R85["MACHETE_MAYHEM"]
1290 [-]: EQ        0 R84 R85    ; if R84 ~= R85 then PC := 1301
1291 [-]: JMP       1301         ; PC := 1301
1292 [-]: GETGLOBAL R84 K11      ; R84 := 0xE6DC43B0
1293 [-]: LOADK     R85 K192     ; R85 := "/Lotus/Language/Menu/EnergyRestrictionDesc"
1294 [-]: NEWTABLE  R86 0 1      ; R86 := {}
1295 [-]: SETTABLE  R86 K193 K194; R86["AMOUNT"] := 25
1296 [-]: CALL      R84 3 2      ; R84 := R84(R85,R86)
1297 [-]: MOVE      R85 R83      ; R85 := R83
1298 [-]: LOADK     R86 K79      ; R86 := ", "
1299 [-]: MOVE      R87 R84      ; R87 := R84
1300 [-]: CONCAT    R83 R85 R87  ; R83 := R85 .. R86 .. R87
1301 [-]: MOVE      R85 R34      ; R85 := R34
1302 [-]: LOADK     R86 K195     ; R86 := "/Lotus/Language/Menu/Lobby_Restriction"
1303 [-]: MOVE      R87 R83      ; R87 := R83
1304 [-]: CALL      R85 3 1      ; R85(R86,R87)
1305 [-]: JMP       1414         ; PC := 1414
1306 [-]: GETGLOBAL R85 K30      ; R85 := 0x400E7765
1307 [-]: GETUPVAL  R86 U0       ; R86 := U0
1308 [-]: GETTABLE  R86 R86 K67  ; R86 := R86["mMission"]
1309 [-]: GETTABLE  R86 R86 K196 ; R86 := R86["miscItemFee"]
1310 [-]: GETTABLE  R86 R86 K197 ; R86 := R86["mItemType"]
1311 [-]: CALL      R85 2 2      ; R85 := R85(R86)
1312 [-]: TEST      R85 1        ; if R85 then PC := 1414
1313 [-]: JMP       1414         ; PC := 1414
1314 [-]: EQ        0 R20 K22    ; if R20 ~= nil then PC := 1414
1315 [-]: JMP       1414         ; PC := 1414
1316 [-]: GETUPVAL  R85 U0       ; R85 := U0
1317 [-]: GETTABLE  R85 R85 K67  ; R85 := R85["mMission"]
1318 [-]: GETTABLE  R85 R85 K196 ; R85 := R85["miscItemFee"]
1319 [-]: GETTABLE  R85 R85 K197 ; R85 := R85["mItemType"]
1320 [-]: GETGLOBAL R86 K0       ; R86 := 0x9FAED6BC
1321 [-]: GETUPVAL  R87 U0       ; R87 := U0
1322 [-]: GETTABLE  R87 R87 K67  ; R87 := R87["mMission"]
1323 [-]: GETTABLE  R87 R87 K196 ; R87 := R87["miscItemFee"]
1324 [-]: GETTABLE  R87 R87 K197 ; R87 := R87["mItemType"]
1325 [-]: SELF      R87 R87 K198 ; R88 := R87; R87 := R87["0x1B252E3C"]
1326 [-]: CALL      R87 2 0      ; R87,... := R87(R88)
1327 [-]: CALL      R86 0 2      ; R86 := R86(R87,...)
1328 [-]: GETGLOBAL R87 K13      ; R87 := _T
1329 [-]: GETTABLE  R87 R87 K199 ; R87 := R87["OwnedFeeItems"]
1330 [-]: TEST      R87 1        ; if R87 then PC := 1335
1331 [-]: JMP       1335         ; PC := 1335
1332 [-]: GETGLOBAL R87 K13      ; R87 := _T
1333 [-]: NEWTABLE  R88 0 0      ; R88 := {}
1334 [-]: SETTABLE  R87 K199 R88 ; R87["OwnedFeeItems"] := R88
1335 [-]: GETGLOBAL R87 K13      ; R87 := _T
1336 [-]: GETTABLE  R87 R87 K199 ; R87 := R87["OwnedFeeItems"]
1337 [-]: GETTABLE  R87 R87 R86  ; R87 := R87[R86]
1338 [-]: TEST      R87 1        ; if R87 then PC := 1391
1339 [-]: JMP       1391         ; PC := 1391
1340 [-]: GETGLOBAL R87 K13      ; R87 := _T
1341 [-]: GETTABLE  R87 R87 K199 ; R87 := R87["OwnedFeeItems"]
1342 [-]: NEWTABLE  R88 0 0      ; R88 := {}
1343 [-]: SETTABLE  R87 R86 R88  ; R87[R86] := R88
1344 [-]: GETGLOBAL R87 K13      ; R87 := _T
1345 [-]: GETTABLE  R87 R87 K199 ; R87 := R87["OwnedFeeItems"]
1346 [-]: GETTABLE  R87 R87 R86  ; R87 := R87[R86]
1347 [-]: SETTABLE  R87 K200 K31 ; R87["Count"] := 0
1348 [-]: GETGLOBAL R87 K13      ; R87 := _T
1349 [-]: GETTABLE  R87 R87 K199 ; R87 := R87["OwnedFeeItems"]
1350 [-]: GETTABLE  R87 R87 R86  ; R87 := R87[R86]
1351 [-]: GETGLOBAL R88 K11      ; R88 := 0xE6DC43B0
1352 [-]: GETGLOBAL R89 K0       ; R89 := 0x9FAED6BC
1353 [-]: GETGLOBAL R90 K40      ; R90 := 0x7C282057
1354 [-]: MOVE      R91 R85      ; R91 := R85
1355 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1356 [-]: SELF      R90 R90 K41  ; R91 := R90; R90 := R90["0x616C74B6"]
1357 [-]: CALL      R90 2 0      ; R90,... := R90(R91)
1358 [-]: CALL      R89 0 2      ; R89 := R89(R90,...)
1359 [-]: MOVE      R90 R0       ; R90 := R0
1360 [-]: CALL      R88 3 2      ; R88 := R88(R89,R90)
1361 [-]: SETTABLE  R87 K201 R88 ; R87["LocText"] := R88
1362 [-]: GETGLOBAL R87 K202     ; R87 := gPlayerProfileMgr
1363 [-]: SELF      R87 R87 K203 ; R88 := R87; R87 := R87["0x21EF7B1A"]
1364 [-]: LOADK     R89 K31      ; R89 := 0
1365 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1366 [-]: SELF      R87 R87 K204 ; R88 := R87; R87 := R87["0x654F1092"]
1367 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1368 [-]: SELF      R87 R87 K205 ; R88 := R87; R87 := R87["0x6F2E05FD"]
1369 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1370 [-]: SELF      R87 R87 K206 ; R88 := R87; R87 := R87["0x3329FBFF"]
1371 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1372 [-]: LOADK     R88 K37      ; R88 := 1
1373 [-]: LEN       R89 R87      ; R89 := # R87
1374 [-]: LOADK     R90 K37      ; R90 := 1
1375 [-]: FORPREP   R88 1390     ; R88 -= R90; PC := 1390
1376 [-]: GETTABLE  R92 R87 R91  ; R92 := R87[R91]
1377 [-]: GETTABLE  R92 R92 K197 ; R92 := R92["mItemType"]
1378 [-]: SELF      R92 R92 K207 ; R93 := R92; R92 := R92["0x8B598ED4"]
1379 [-]: MOVE      R94 R85      ; R94 := R85
1380 [-]: CALL      R92 3 2      ; R92 := R92(R93,R94)
1381 [-]: TEST      R92 0        ; if not R92 then PC := 1390
1382 [-]: JMP       1390         ; PC := 1390
1383 [-]: GETGLOBAL R92 K13      ; R92 := _T
1384 [-]: GETTABLE  R92 R92 K199 ; R92 := R92["OwnedFeeItems"]
1385 [-]: GETTABLE  R92 R92 R86  ; R92 := R92[R86]
1386 [-]: GETTABLE  R93 R87 R91  ; R93 := R87[R91]
1387 [-]: GETTABLE  R93 R93 K208 ; R93 := R93["mItemCount"]
1388 [-]: SETTABLE  R92 K200 R93 ; R92["Count"] := R93
1389 [-]: JMP       1391         ; PC := 1391
1390 [-]: FORLOOP   R88 1376     ; R88 += R90; if R88 <= R89 then begin PC := 1376; R91 := R88 end
1391 [-]: GETGLOBAL R92 K11      ; R92 := 0xE6DC43B0
1392 [-]: LOADK     R93 K209     ; R93 := "/Lotus/Language/Menu/Lobby_CountedItemRestrictionDesc"
1393 [-]: NEWTABLE  R94 0 3      ; R94 := {}
1394 [-]: GETGLOBAL R95 K13      ; R95 := _T
1395 [-]: GETTABLE  R95 R95 K199 ; R95 := R95["OwnedFeeItems"]
1396 [-]: GETTABLE  R95 R95 R86  ; R95 := R95[R86]
1397 [-]: GETTABLE  R95 R95 K201 ; R95 := R95["LocText"]
1398 [-]: SETTABLE  R94 K190 R95 ; R94["ITEM"] := R95
1399 [-]: GETUPVAL  R95 U0       ; R95 := U0
1400 [-]: GETTABLE  R95 R95 K67  ; R95 := R95["mMission"]
1401 [-]: GETTABLE  R95 R95 K196 ; R95 := R95["miscItemFee"]
1402 [-]: GETTABLE  R95 R95 K208 ; R95 := R95["mItemCount"]
1403 [-]: SETTABLE  R94 K210 R95 ; R94["COUNT"] := R95
1404 [-]: GETGLOBAL R95 K13      ; R95 := _T
1405 [-]: GETTABLE  R95 R95 K199 ; R95 := R95["OwnedFeeItems"]
1406 [-]: GETTABLE  R95 R95 R86  ; R95 := R95[R86]
1407 [-]: GETTABLE  R95 R95 K200 ; R95 := R95["Count"]
1408 [-]: SETTABLE  R94 K211 R95 ; R94["OWNED"] := R95
1409 [-]: CALL      R92 3 2      ; R92 := R92(R93,R94)
1410 [-]: MOVE      R93 R34      ; R93 := R34
1411 [-]: LOADK     R94 K8       ; R94 := ""
1412 [-]: MOVE      R95 R92      ; R95 := R92
1413 [-]: CALL      R93 3 1      ; R93(R94,R95)
1414 [-]: GETTABLE  R93 R2 K128  ; R93 := R2["missionType"]
1415 [-]: GETGLOBAL R94 K27      ; R94 := Lotus_Game
1416 [-]: GETTABLE  R94 R94 K212 ; R94 := R94["MT_ARENA"]
1417 [-]: EQ        0 R93 R94    ; if R93 ~= R94 then PC := 1470
1418 [-]: JMP       1470         ; PC := 1470
1419 [-]: GETTABLE  R93 R2 K101  ; R93 := R2["faction"]
1420 [-]: GETGLOBAL R94 K27      ; R94 := Lotus_Game
1421 [-]: GETTABLE  R94 R94 K213 ; R94 := R94["FC_CORPUS"]
1422 [-]: EQ        0 R93 R94    ; if R93 ~= R94 then PC := 1470
1423 [-]: JMP       1470         ; PC := 1470
1424 [-]: SELF      R93 R2 K214  ; R94 := R2; R93 := R2["0x62A99A22"]
1425 [-]: CALL      R93 2 2      ; R93 := R93(R94)
1426 [-]: LEN       R94 R93      ; R94 := # R93
1427 [-]: LT        0 K31 R94    ; if 0 >= R94 then PC := 1470
1428 [-]: JMP       1470         ; PC := 1470
1429 [-]: GETUPVAL  R94 U3       ; R94 := U3
1430 [-]: GETTABLE  R94 R94 K89  ; R94 := R94["0x7E197415"]
1431 [-]: GETTABLE  R95 R93 K37  ; R95 := R93[1]
1432 [-]: GETTABLE  R95 R95 K215 ; R95 := R95["mCreditsFee"]
1433 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1434 [-]: LOADK     R95 K31      ; R95 := 0
1435 [-]: GETGLOBAL R96 K30      ; R96 := 0x400E7765
1436 [-]: GETGLOBAL R97 K45      ; R97 := gGameData
1437 [-]: CALL      R96 2 2      ; R96 := R96(R97)
1438 [-]: TEST      R96 1        ; if R96 then PC := 1447
1439 [-]: JMP       1447         ; PC := 1447
1440 [-]: GETUPVAL  R96 U3       ; R96 := U3
1441 [-]: GETTABLE  R96 R96 K216 ; R96 := R96["0x1C719E76"]
1442 [-]: GETGLOBAL R97 K45      ; R97 := gGameData
1443 [-]: SELF      R97 R97 K217 ; R98 := R97; R97 := R97["0xCD5A25A6"]
1444 [-]: CALL      R97 2 0      ; R97,... := R97(R98)
1445 [-]: CALL      R96 0 2      ; R96 := R96(R97,...)
1446 [-]: MOVE      R95 R96      ; R95 := R96
1447 [-]: GETGLOBAL R96 K23      ; R96 := mMovie
1448 [-]: SELF      R96 R96 K24  ; R97 := R96; R96 := R96["0x5DB0BD4"]
1449 [-]: LOADK     R98 K218     ; R98 := "/Lotus/Language/Menu/CreditsFormatted"
1450 [-]: MOVE      R99 R1       ; R99 := R1
1451 [-]: NEWTABLE  R100 0 1     ; R100 := {}
1452 [-]: SETTABLE  R100 K219 R94; R100["CREDITS"] := R94
1453 [-]: CALL      R96 5 2      ; R96 := R96(R97,R98,R99,R100)
1454 [-]: MOVE      R97 R34      ; R97 := R34
1455 [-]: LOADK     R98 K220     ; R98 := "/Lotus/Language/Menu/Lobby_GreedCreditsRequirementDesc"
1456 [-]: MOVE      R99 R96      ; R99 := R96
1457 [-]: CALL      R97 3 1      ; R97(R98,R99)
1458 [-]: GETGLOBAL R97 K23      ; R97 := mMovie
1459 [-]: SELF      R97 R97 K24  ; R98 := R97; R97 := R97["0x5DB0BD4"]
1460 [-]: LOADK     R99 K221     ; R99 := "/Lotus/Language/Menu/CreditsFormattedOwned"
1461 [-]: MOVE      R100 R1      ; R100 := R1
1462 [-]: NEWTABLE  R101 0 1     ; R101 := {}
1463 [-]: SETTABLE  R101 K211 R95; R101["OWNED"] := R95
1464 [-]: CALL      R97 5 2      ; R97 := R97(R98,R99,R100,R101)
1465 [-]: MOVE      R96 R97      ; R96 := R97
1466 [-]: MOVE      R97 R34      ; R97 := R34
1467 [-]: LOADK     R98 K222     ; R98 := "/Lotus/Language/Menu/Lobby_GreedCreditsOwnedRequirementDesc"
1468 [-]: MOVE      R99 R96      ; R99 := R96
1469 [-]: CALL      R97 3 1      ; R97(R98,R99)
1470 [-]: GETTABLE  R97 R2 K223  ; R97 := R2["skillReqs"]
1471 [-]: LEN       R97 R97      ; R97 := # R97
1472 [-]: LT        0 K31 R97    ; if 0 >= R97 then PC := 1512
1473 [-]: JMP       1512         ; PC := 1512
1474 [-]: NEWTABLE  R97 6 0      ; R97 := {}
1475 [-]: LOADK     R98 K224     ; R98 := "Intrinsics"
1476 [-]: LOADK     R99 K225     ; R99 := "RailjackIntrinsicPilot"
1477 [-]: LOADK     R100 K226    ; R100 := "RailjackIntrinsicGunner"
1478 [-]: LOADK     R101 K227    ; R101 := "RailjackIntrinsicTactic"
1479 [-]: LOADK     R102 K228    ; R102 := "RailjackIntrinsicEngineer"
1480 [-]: LOADK     R103 K229    ; R103 := "RailjackIntrinsicCommand"
1481 [-]: SETLIST   R97 6 1      ; R97[(1-1)*FPF+i] := R(97+i), 1 <= i <= 6
1482 [-]: LOADK     R98 K8       ; R98 := ""
1483 [-]: GETGLOBAL R99 K230     ; R99 := 0xECFDD17
1484 [-]: GETTABLE  R100 R2 K223 ; R100 := R2["skillReqs"]
1485 [-]: CALL      R99 2 4      ; R99,R100,R101 := R99(R100)
1486 [-]: JMP       1506         ; PC := 1506
1487 [-]: GETTABLE  R104 R103 K231; R104 := R103["skill"]
1488 [-]: ADD       R104 R104 K37; R104 := R104 + 1
1489 [-]: GETTABLE  R104 R97 R104; R104 := R97[R104]
1490 [-]: GETGLOBAL R105 K11     ; R105 := 0xE6DC43B0
1491 [-]: LOADK     R106 K232    ; R106 := "/Lotus/Language/Intrinsics/"
1492 [-]: MOVE      R107 R104    ; R107 := R104
1493 [-]: CONCAT    R106 R106 R107; R106 := R106 .. R107
1494 [-]: LOADNIL   R107 R107    ; R107 := nil
1495 [-]: CALL      R105 3 2     ; R105 := R105(R106,R107)
1496 [-]: GETGLOBAL R106 K9      ; R106 := string
1497 [-]: GETTABLE  R106 R106 K10; R106 := R106["0x639C642A"]
1498 [-]: MOVE      R107 R98     ; R107 := R98
1499 [-]: MOVE      R108 R105    ; R108 := R105
1500 [-]: LOADK     R109 K43     ; R109 := " "
1501 [-]: GETTABLE  R110 R103 K233; R110 := R103["req"]
1502 [-]: LOADK     R111 K43     ; R111 := " "
1503 [-]: CONCAT    R107 R107 R111; R107 := R107 .. R108 .. R109 .. R110 .. R111
1504 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1505 [-]: MOVE      R98 R106     ; R98 := R106
1506 [-]: TFORLOOP  R99 2        ; R102,R103 :=  R99(R100,R101); if R102 ~= nil then begin PC = 1487; R101 := R102 end
1507 [-]: JMP       1487         ; PC := 1487
1508 [-]: MOVE      R106 R34     ; R106 := R34
1509 [-]: LOADK     R107 K234    ; R107 := "/Game/Requires"
1510 [-]: MOVE      R108 R98     ; R108 := R98
1511 [-]: CALL      R106 3 1     ; R106(R107,R108)
1512 [-]: GETGLOBAL R106 K27     ; R106 := Lotus_Game
1513 [-]: GETTABLE  R106 R106 K235; R106 := R106["NT_CLAN"]
1514 [-]: EQ        0 R9 R106    ; if R9 ~= R106 then PC := 1549
1515 [-]: JMP       1549         ; PC := 1549
1516 [-]: SELF      R106 R2 K236 ; R107 := R2; R106 := R2["0xC2648A91"]
1517 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1518 [-]: GETGLOBAL R107 K30     ; R107 := 0x400E7765
1519 [-]: MOVE      R108 R106    ; R108 := R106
1520 [-]: CALL      R107 2 2     ; R107 := R107(R108)
1521 [-]: TEST      R107 1       ; if R107 then PC := 1549
1522 [-]: JMP       1549         ; PC := 1549
1523 [-]: LOADK     R107 K8      ; R107 := ""
1524 [-]: LOADK     R108 K37     ; R108 := 1
1525 [-]: LEN       R109 R106    ; R109 := # R106
1526 [-]: LOADK     R110 K37     ; R110 := 1
1527 [-]: FORPREP   R108 1544    ; R108 -= R110; PC := 1544
1528 [-]: MOVE      R112 R107    ; R112 := R107
1529 [-]: GETTABLE  R113 R106 R111; R113 := R106[R111]
1530 [-]: SELF      R113 R113 K237; R114 := R113; R113 := R113["0x2683916D"]
1531 [-]: MOVE      R115 R1      ; R115 := R1
1532 [-]: CALL      R113 3 2     ; R113 := R113(R114,R115)
1533 [-]: GETUPVAL  R114 U3      ; R114 := U3
1534 [-]: GETTABLE  R114 R114 K19; R114 := R114["0xF81722A2"]
1535 [-]: LEN       R115 R106    ; R115 := # R106
1536 [-]: EQ        1 R111 R115  ; if R111 == R115 then PC := 1539
1537 [-]: JMP       1539         ; PC := 1539
1538 [-]: MOVE      R115 R0      ; R115 := R0
1539 [-]: MOVE      R115 R1      ; R115 := R1
1540 [-]: LOADK     R116 K8      ; R116 := ""
1541 [-]: LOADK     R117 K238    ; R117 := "<br>"
1542 [-]: CALL      R114 4 2     ; R114 := R114(R115,R116,R117)
1543 [-]: CONCAT    R107 R112 R114; R107 := R112 .. R113 .. R114
1544 [-]: FORLOOP   R108 1528    ; R108 += R110; if R108 <= R109 then begin PC := 1528; R111 := R108 end
1545 [-]: MOVE      R112 R34     ; R112 := R34
1546 [-]: LOADK     R113 K239    ; R113 := "/Lotus/Language/Menu/BonusBounty"
1547 [-]: MOVE      R114 R107    ; R114 := R107
1548 [-]: CALL      R112 3 1     ; R112(R113,R114)
1549 [-]: TEST      R19 1        ; if R19 then PC := 1581
1550 [-]: JMP       1581         ; PC := 1581
1551 [-]: EQ        1 R20 K22    ; if R20 == nil then PC := 1581
1552 [-]: JMP       1581         ; PC := 1581
1553 [-]: MOVE      R112 R34     ; R112 := R34
1554 [-]: LOADK     R113 K240    ; R113 := "/Lotus/Language/Menu/MissionBoard_InvasionStatus"
1555 [-]: MOVE      R114 R23     ; R114 := R23
1556 [-]: CALL      R112 3 1     ; R112(R113,R114)
1557 [-]: MOVE      R112 R24     ; R112 := R24
1558 [-]: LOADK     R113 K123    ; R113 := "/"
1559 [-]: MOVE      R114 R25     ; R114 := R25
1560 [-]: CONCAT    R112 R112 R114; R112 := R112 .. R113 .. R114
1561 [-]: TEST      R26 0        ; if not R26 then PC := 1573
1562 [-]: JMP       1573         ; PC := 1573
1563 [-]: TEST      R28 1        ; if R28 then PC := 1573
1564 [-]: JMP       1573         ; PC := 1573
1565 [-]: MOVE      R113 R112    ; R113 := R112
1566 [-]: LOADK     R114 K43     ; R114 := " "
1567 [-]: GETGLOBAL R115 K23     ; R115 := mMovie
1568 [-]: SELF      R115 R115 K24; R116 := R115; R115 := R115["0x5DB0BD4"]
1569 [-]: MOVE      R117 R27     ; R117 := R27
1570 [-]: MOVE      R118 R0      ; R118 := R0
1571 [-]: CALL      R115 4 2     ; R115 := R115(R116,R117,R118)
1572 [-]: CONCAT    R112 R113 R115; R112 := R113 .. R114 .. R115
1573 [-]: MOVE      R113 R34     ; R113 := R34
1574 [-]: LOADK     R114 K241    ; R114 := "/Lotus/Language/Menu/MissionBoard_InvasionCompletions"
1575 [-]: MOVE      R115 R112    ; R115 := R112
1576 [-]: CALL      R113 3 1     ; R113(R114,R115)
1577 [-]: MOVE      R113 R34     ; R113 := R34
1578 [-]: LOADK     R114 K242    ; R114 := "/Lotus/Language/Menu/MissionBoard_InvasionPayment"
1579 [-]: MOVE      R115 R29     ; R115 := R29
1580 [-]: CALL      R113 3 1     ; R113(R114,R115)
1581 [-]: TEST      R19 1        ; if R19 then PC := 1589
1582 [-]: JMP       1589         ; PC := 1589
1583 [-]: EQ        1 R30 K22    ; if R30 == nil then PC := 1589
1584 [-]: JMP       1589         ; PC := 1589
1585 [-]: MOVE      R113 R34     ; R113 := R34
1586 [-]: LOADK     R114 K127    ; R114 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
1587 [-]: MOVE      R115 R30     ; R115 := R30
1588 [-]: CALL      R113 3 1     ; R113(R114,R115)
1589 [-]: EQ        1 R31 K22    ; if R31 == nil then PC := 1595
1590 [-]: JMP       1595         ; PC := 1595
1591 [-]: MOVE      R113 R34     ; R113 := R34
1592 [-]: LOADK     R114 K243    ; R114 := "/Lotus/Language/Menu/AlertPopup_Rewards"
1593 [-]: MOVE      R115 R31     ; R115 := R31
1594 [-]: CALL      R113 3 1     ; R113(R114,R115)
1595 [-]: EQ        1 R32 K22    ; if R32 == nil then PC := 1604
1596 [-]: JMP       1604         ; PC := 1604
1597 [-]: MOVE      R113 R34     ; R113 := R34
1598 [-]: LOADNIL   R114 R114    ; R114 := nil
1599 [-]: GETGLOBAL R115 K9      ; R115 := string
1600 [-]: GETTABLE  R115 R115 K10; R115 := R115["0x639C642A"]
1601 [-]: MOVE      R116 R32     ; R116 := R32
1602 [-]: CALL      R115 2 0     ; R115,... := R115(R116)
1603 [-]: CALL      R113 0 1     ; R113(R114,...)
1604 [-]: GETGLOBAL R113 K30     ; R113 := 0x400E7765
1605 [-]: GETTABLE  R114 R2 K244 ; R114 := R2["questReq"]
1606 [-]: CALL      R113 2 2     ; R113 := R113(R114)
1607 [-]: TEST      R113 1       ; if R113 then PC := 1636
1608 [-]: JMP       1636         ; PC := 1636
1609 [-]: GETUPVAL  R113 U1      ; R113 := U1
1610 [-]: GETTABLE  R113 R113 K245; R113 := R113["0x2AAC7A8C"]
1611 [-]: GETTABLE  R114 R2 K244 ; R114 := R2["questReq"]
1612 [-]: CALL      R113 2 2     ; R113 := R113(R114)
1613 [-]: TEST      R113 1       ; if R113 then PC := 1636
1614 [-]: JMP       1636         ; PC := 1636
1615 [-]: GETGLOBAL R113 K40     ; R113 := 0x7C282057
1616 [-]: GETTABLE  R114 R2 K244 ; R114 := R2["questReq"]
1617 [-]: CALL      R113 2 2     ; R113 := R113(R114)
1618 [-]: GETGLOBAL R114 K23     ; R114 := mMovie
1619 [-]: SELF      R114 R114 K24; R115 := R114; R114 := R114["0x5DB0BD4"]
1620 [-]: GETGLOBAL R116 K0      ; R116 := 0x9FAED6BC
1621 [-]: SELF      R117 R113 K41; R118 := R113; R117 := R113["0x616C74B6"]
1622 [-]: CALL      R117 2 0     ; R117,... := R117(R118)
1623 [-]: CALL      R116 0 2     ; R116 := R116(R117,...)
1624 [-]: MOVE      R117 R0      ; R117 := R0
1625 [-]: CALL      R114 4 2     ; R114 := R114(R115,R116,R117)
1626 [-]: MOVE      R115 R34     ; R115 := R34
1627 [-]: LOADK     R116 K246    ; R116 := "/Lotus/Language/Menu/MissionLocked"
1628 [-]: GETGLOBAL R117 K23     ; R117 := mMovie
1629 [-]: SELF      R117 R117 K24; R118 := R117; R117 := R117["0x5DB0BD4"]
1630 [-]: LOADK     R119 K247    ; R119 := "/Lotus/Language/Game/MissionNodeQuestRequired"
1631 [-]: MOVE      R120 R0      ; R120 := R0
1632 [-]: NEWTABLE  R121 0 1     ; R121 := {}
1633 [-]: SETTABLE  R121 K248 R114; R121["QUESTNAME"] := R114
1634 [-]: CALL      R117 5 0     ; R117,... := R117(R118,R119,R120,R121)
1635 [-]: CALL      R115 0 1     ; R115(R116,...)
1636 [-]: TEST      R22 0        ; if not R22 then PC := 1644
1637 [-]: JMP       1644         ; PC := 1644
1638 [-]: MOVE      R115 R34     ; R115 := R34
1639 [-]: LOADK     R116 K249    ; R116 := "/Lotus/Language/Menu/MissionBoard_Squads"
1640 [-]: GETGLOBAL R117 K0      ; R117 := 0x9FAED6BC
1641 [-]: MOVE      R118 R21     ; R118 := R21
1642 [-]: CALL      R117 2 0     ; R117,... := R117(R118)
1643 [-]: CALL      R115 0 1     ; R115(R116,...)
1644 [-]: MOVE      R115 R33     ; R115 := R33
1645 [-]: LOADK     R116 K134    ; R116 := "</p>"
1646 [-]: CONCAT    R33 R115 R116; R33 := R115 .. R116
1647 [-]: GETUPVAL  R115 U6      ; R115 := U6
1648 [-]: GETTABLE  R115 R115 K135; R115 := R115["UpdateTimer"]
1649 [-]: EQ        1 R115 K22   ; if R115 == nil then PC := 1658
1650 [-]: JMP       1658         ; PC := 1658
1651 [-]: GETUPVAL  R115 U6      ; R115 := U6
1652 [-]: GETGLOBAL R116 K9      ; R116 := string
1653 [-]: GETTABLE  R116 R116 K137; R116 := R116["0x7B782033"]
1654 [-]: MOVE      R117 R33     ; R117 := R33
1655 [-]: ADD       R118 R72 K37 ; R118 := R72 + 1
1656 [-]: CALL      R116 3 2     ; R116 := R116(R117,R118)
1657 [-]: SETTABLE  R115 K136 R116; R115["TimerPost"] := R116
1658 [-]: MOVE      R115 R33     ; R115 := R33
1659 [-]: GETUPVAL  R116 U0      ; R116 := U0
1660 [-]: RETURN    R115 3       ; return R115,R116
1661 [-]: RETURN    R0 1         ; return 


; Function #149.1:
;
; Name:            
; Defined at line: 6905
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 24
  2 [-]: JMP       24           ; PC := 24
  3 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  4 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x5DB0BD4"]
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R4 K3        ; R4 := string
 11 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0x639C642A"]
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: MOVE      R3 R4        ; R3 := R4
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: LOADK     R5 K5        ; R5 := "<font color=\""
 17 [-]: GETUPVAL  R6 U1        ; R6 := U1
 18 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["FloatingContentHtml"]
 19 [-]: LOADK     R7 K7        ; R7 := "\">"
 20 [-]: MOVE      R8 R3        ; R8 := R3
 21 [-]: LOADK     R9 K8        ; R9 := "  </font>"
 22 [-]: CONCAT    R4 R4 R9     ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 41
 25 [-]: JMP       41           ; PC := 41
 26 [-]: GETGLOBAL R4 K3        ; R4 := string
 27 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xC6772A8A"]
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: LT        0 K10 R4     ; if 0 >= R4 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: LOADK     R5 K5        ; R5 := "<font color=\""
 34 [-]: GETUPVAL  R6 U1        ; R6 := U1
 35 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["FloatingContentHighlightHtml"]
 36 [-]: LOADK     R7 K12       ; R7 := "\"><b>"
 37 [-]: MOVE      R8 R1        ; R8 := R1
 38 [-]: LOADK     R9 K13       ; R9 := "</b><br></font>"
 39 [-]: CONCAT    R4 R4 R9     ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9
 40 [-]: MOVE      R4 R0        ; R4 := R0
 41 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 7287
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: LOADK     R3 K1        ; R3 := "OnEmblemReady("
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", "
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: LOADK     R7 K4        ; R7 := ")"
  9 [-]: CONCAT    R3 R3 R7     ; R3 := R3 .. R4 .. R5 .. R6 .. R7
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x7C282057
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x85A7A017"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 22 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: SETTABLE  R3 K8 R2     ; R3["clanIcon"] := R2
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: SETTABLE  R4 R1 K7     ; R4[R1] := nil
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Node"]
 29 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 32 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x26581636"]
 33 [-]: LOADK     R6 K12       ; R6 := "InfoTip.EnemyIcon"
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 36 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 7305
; #Upvalues:       25
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  69

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  9 [-]: LOADK     R4 K3        ; R4 := "_root"
 10 [-]: LOADK     R5 K4        ; R5 := "_xmouse"
 11 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
 14 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
 16 [-]: LOADK     R5 K3        ; R5 := "_root"
 17 [-]: LOADK     R6 K5        ; R6 := "_ymouse"
 18 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: LE        0 R1 K6      ; if R1 > -1000 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: LE        0 R2 K6      ; if R2 > -1000 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R3 U2        ; R3 := U2
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 27 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 81
 28 [-]: JMP       81           ; PC := 81
 29 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x880196A7"]
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["clipName"]
 34 [-]: LOADK     R6 K7        ; R6 := "Node"
 35 [-]: LOADK     R7 K11       ; R7 := "_color"
 36 [-]: GETGLOBAL R8 K12       ; R8 := _G
 37 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["UIColor_White"]
 38 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 39 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 40 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x445651FB"]
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 43 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["labelIndex"]
 44 [-]: LOADK     R6 K16       ; R6 := "_alpha"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: GETUPVAL  R8 U2        ; R8 := U2
 47 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Node"]
 48 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 49 [-]: CALL      R3 0 1       ; R3(R4,...)
 50 [-]: GETUPVAL  R3 U2        ; R3 := U2
 51 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 52 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["guildId"]
 53 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETUPVAL  R3 U2        ; R3 := U2
 56 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 57 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["clanTier"]
 58 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R3 R0        ; R3 := R0
 61 [-]: MOVE      R3 R1        ; R3 := R1
 62 [-]: TEST      R3 0         ; if not R3 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: GETGLOBAL R4 K19       ; R4 := 0x52E17A90
 65 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 66 [-]: GETUPVAL  R6 U2        ; R6 := U2
 67 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
 68 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["clipName"]
 69 [-]: LOADK     R7 K20       ; R7 := ".Node.Container.Node"
 70 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 71 [-]: GETGLOBAL R7 K21       ; R7 := UISys
 72 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["FlashInstance_LINEAR"]
 73 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 74 [-]: LOADK     R9 K16       ; R9 := "_alpha"
 75 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 76 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 77 [-]: LOADK     R10 K23      ; R10 := 0
 78 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 79 [-]: LOADK     R10 K24      ; R10 := 0.25
 80 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 81 [-]: GETUPVAL  R4 U4        ; R4 := U4
 82 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 83 [-]: MOVE      R5 R0        ; R5 := R0
 84 [-]: GETUPVAL  R6 U5        ; R6 := U5
 85 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R5 R1        ; R5 := R1
 88 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
 89 [-]: MOVE      R7 R4        ; R7 := R4
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 1111
 92 [-]: JMP       1111         ; PC := 1111
 93 [-]: GETTABLE  R6 R4 K26    ; R6 := R4["forceHover"]
 94 [-]: TEST      R6 1         ; if R6 then PC := 114
 95 [-]: JMP       114          ; PC := 114
 96 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["locked"]
 97 [-]: TEST      R6 0         ; if not R6 then PC := 114
 98 [-]: JMP       114          ; PC := 114
 99 [-]: GETUPVAL  R6 U6        ; R6 := U6
100 [-]: GETUPVAL  R7 U7        ; R7 := U7
101 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["EDIT_NODES"]
102 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R6 U6        ; R6 := U6
105 [-]: GETUPVAL  R7 U7        ; R7 := U7
106 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["EDIT_EDGES"]
107 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
108 [-]: JMP       114          ; PC := 114
109 [-]: GETUPVAL  R6 U6        ; R6 := U6
110 [-]: GETUPVAL  R7 U7        ; R7 := U7
111 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["EDIT_NODE_DECOS"]
112 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 1111
113 [-]: JMP       1111         ; PC := 1111
114 [-]: GETTABLE  R6 R4 K31    ; R6 := R4["locationEnabled"]
115 [-]: TEST      R6 0         ; if not R6 then PC := 1111
116 [-]: JMP       1111         ; PC := 1111
117 [-]: GETUPVAL  R6 U2        ; R6 := U2
118 [-]: SETTABLE  R6 K7 R4     ; R6["Node"] := R4
119 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
120 [-]: GETUPVAL  R7 U2        ; R7 := U2
121 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
122 [-]: CALL      R6 2 2       ; R6 := R6(R7)
123 [-]: TEST      R6 0         ; if not R6 then PC := 126
124 [-]: JMP       126          ; PC := 126
125 [-]: RETURN    R0 1         ; return 
126 [-]: GETUPVAL  R6 U2        ; R6 := U2
127 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
128 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
129 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["mission"]
130 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["missionType"]
131 [-]: GETGLOBAL R7 K35       ; R7 := Lotus_Game
132 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["MT_ASSASSINATION"]
133 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 139
134 [-]: JMP       139          ; PC := 139
135 [-]: GETUPVAL  R6 U8        ; R6 := U8
136 [-]: GETUPVAL  R7 U2        ; R7 := U2
137 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
138 [-]: CALL      R6 2 1       ; R6(R7)
139 [-]: TEST      R5 1         ; if R5 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R6 U9        ; R6 := U9
142 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["0x25992394"]
143 [-]: GETGLOBAL R7 K12       ; R7 := _G
144 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["UISound_Focus"]
145 [-]: CALL      R6 2 1       ; R6(R7)
146 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["guildId"]
147 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 152
148 [-]: JMP       152          ; PC := 152
149 [-]: GETTABLE  R6 R4 K18    ; R6 := R4["clanTier"]
150 [-]: EQ        0 R6 K8      ; if R6 ~= nil then PC := 153
151 [-]: JMP       153          ; PC := 153
152 [-]: MOVE      R6 R0        ; R6 := R0
153 [-]: MOVE      R6 R1        ; R6 := R1
154 [-]: TEST      R6 0         ; if not R6 then PC := 172
155 [-]: JMP       172          ; PC := 172
156 [-]: GETGLOBAL R7 K19       ; R7 := 0x52E17A90
157 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
158 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
159 [-]: LOADK     R10 K20      ; R10 := ".Node.Container.Node"
160 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
161 [-]: GETGLOBAL R10 K21      ; R10 := UISys
162 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_LINEAR"]
163 [-]: NEWTABLE  R11 1 0      ; R11 := {}
164 [-]: LOADK     R12 K16      ; R12 := "_alpha"
165 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
166 [-]: NEWTABLE  R12 1 0      ; R12 := {}
167 [-]: LOADK     R13 K39      ; R13 := 35
168 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
169 [-]: LOADK     R13 K24      ; R13 := 0.25
170 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
171 [-]: JMP       179          ; PC := 179
172 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
173 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0x1C19D966"]
174 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
175 [-]: LOADK     R10 K11      ; R10 := "_color"
176 [-]: GETGLOBAL R11 K12      ; R11 := _G
177 [-]: GETTABLE  R11 R11 K41  ; R11 := R11["UIColor_Yellow"]
178 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
179 [-]: GETTABLE  R7 R4 K42    ; R7 := R4["isJunction"]
180 [-]: TEST      R7 0         ; if not R7 then PC := 189
181 [-]: JMP       189          ; PC := 189
182 [-]: GETGLOBAL R7 K43       ; R7 := _T
183 [-]: SETTABLE  R7 K44 K8    ; R7["JunctionTasksRelayReconstruction"] := nil
184 [-]: GETUPVAL  R7 U10       ; R7 := U10
185 [-]: MOVE      R8 R4        ; R8 := R4
186 [-]: MOVE      R9 R5        ; R9 := R5
187 [-]: CALL      R7 3 1       ; R7(R8,R9)
188 [-]: JMP       1111         ; PC := 1111
189 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
190 [-]: TEST      R7 0         ; if not R7 then PC := 220
191 [-]: JMP       220          ; PC := 220
192 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
193 [-]: EQ        0 R7 K23     ; if R7 ~= 0 then PC := 220
194 [-]: JMP       220          ; PC := 220
195 [-]: GETTABLE  R7 R4 K46    ; R7 := R4["name"]
196 [-]: SELF      R7 R7 K47    ; R8 := R7; R7 := R7["0x5EC7A3D2"]
197 [-]: CALL      R7 2 2       ; R7 := R7(R8)
198 [-]: GETGLOBAL R8 K48       ; R8 := string
199 [-]: GETTABLE  R8 R8 K49    ; R8 := R8["0x7B782033"]
200 [-]: MOVE      R9 R7        ; R9 := R7
201 [-]: LOADK     R10 K50      ; R10 := 1
202 [-]: GETGLOBAL R11 K48      ; R11 := string
203 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["0xDE44F664"]
204 [-]: MOVE      R12 R7       ; R12 := R7
205 [-]: LOADK     R13 K52      ; R13 := "Rebuild"
206 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
207 [-]: SUB       R11 R11 K50  ; R11 := R11 - 1
208 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
209 [-]: MOVE      R7 R8        ; R7 := R8
210 [-]: GETGLOBAL R8 K43       ; R8 := _T
211 [-]: GETUPVAL  R9 U11       ; R9 := U11
212 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
213 [-]: GETTABLE  R9 R9 K53    ; R9 := R9["info"]
214 [-]: SETTABLE  R8 K44 R9    ; R8["JunctionTasksRelayReconstruction"] := R9
215 [-]: GETUPVAL  R8 U10       ; R8 := U10
216 [-]: MOVE      R9 R4        ; R9 := R4
217 [-]: MOVE      R10 R5       ; R10 := R5
218 [-]: CALL      R8 3 1       ; R8(R9,R10)
219 [-]: JMP       1111         ; PC := 1111
220 [-]: GETUPVAL  R8 U6        ; R8 := U6
221 [-]: GETUPVAL  R9 U7        ; R9 := U7
222 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["EDIT_NODE_DECOS"]
223 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 1111
224 [-]: JMP       1111         ; PC := 1111
225 [-]: GETUPVAL  R8 U12       ; R8 := U12
226 [-]: TEST      R8 0         ; if not R8 then PC := 1111
227 [-]: JMP       1111         ; PC := 1111
228 [-]: GETTABLE  R8 R4 K26    ; R8 := R4["forceHover"]
229 [-]: TEST      R8 1         ; if R8 then PC := 234
230 [-]: JMP       234          ; PC := 234
231 [-]: GETTABLE  R8 R4 K27    ; R8 := R4["locked"]
232 [-]: TEST      R8 1         ; if R8 then PC := 1111
233 [-]: JMP       1111         ; PC := 1111
234 [-]: GETTABLE  R8 R4 K54    ; R8 := R4["isShortcut"]
235 [-]: TEST      R8 1         ; if R8 then PC := 1111
236 [-]: JMP       1111         ; PC := 1111
237 [-]: GETUPVAL  R8 U13       ; R8 := U13
238 [-]: SELF      R8 R8 K55    ; R9 := R8; R8 := R8["0xDF213CE1"]
239 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
240 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
241 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
242 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["mission"]
243 [-]: GETTABLE  R8 R8 K56    ; R8 := R8["faction"]
244 [-]: GETGLOBAL R9 K57       ; R9 := 0x9FAED6BC
245 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
246 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
247 [-]: CALL      R9 2 2       ; R9 := R9(R10)
248 [-]: LOADNIL   R10 R10      ; R10 := nil
249 [-]: GETTABLE  R11 R4 K58   ; R11 := R4["displayMissionOverride"]
250 [-]: EQ        1 R11 K8     ; if R11 == nil then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: GETTABLE  R10 R4 K58   ; R10 := R4["displayMissionOverride"]
253 [-]: JMP       272          ; PC := 272
254 [-]: GETGLOBAL R11 K25      ; R11 := 0x400E7765
255 [-]: GETTABLE  R12 R4 K32   ; R12 := R4["radialSector"]
256 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["mission"]
257 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["levelKeyName"]
258 [-]: CALL      R11 2 2      ; R11 := R11(R12)
259 [-]: TEST      R11 1        ; if R11 then PC := 264
260 [-]: JMP       264          ; PC := 264
261 [-]: GETTABLE  R11 R4 K32   ; R11 := R4["radialSector"]
262 [-]: GETTABLE  R10 R11 K33  ; R10 := R11["mission"]
263 [-]: JMP       272          ; PC := 272
264 [-]: GETUPVAL  R11 U14      ; R11 := U14
265 [-]: GETTABLE  R11 R11 K60  ; R11 := R11["0xBB3AACF2"]
266 [-]: CALL      R11 1 2      ; R11 := R11()
267 [-]: SELF      R11 R11 K61  ; R12 := R11; R11 := R11["0x4B93F65B"]
268 [-]: GETTABLE  R13 R4 K32   ; R13 := R4["radialSector"]
269 [-]: GETTABLE  R13 R13 K46  ; R13 := R13["name"]
270 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
271 [-]: MOVE      R10 R11      ; R10 := R11
272 [-]: GETTABLE  R11 R4 K32   ; R11 := R4["radialSector"]
273 [-]: GETTABLE  R12 R11 K62  ; R12 := R11["keyChain"]
274 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
275 [-]: MOVE      R14 R12      ; R14 := R12
276 [-]: CALL      R13 2 2      ; R13 := R13(R14)
277 [-]: MOVE      R13 R13      ; R13 := R13
278 [-]: LOADNIL   R14 R14      ; R14 := nil
279 [-]: GETUPVAL  R15 U15      ; R15 := U15
280 [-]: GETUPVAL  R16 U16      ; R16 := U16
281 [-]: MOVE      R17 R11      ; R17 := R11
282 [-]: MOVE      R18 R12      ; R18 := R12
283 [-]: MOVE      R19 R14      ; R19 := R14
284 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
285 [-]: SETTABLE  R15 K63 R16  ; R15["NodeMissions"] := R16
286 [-]: MOVE      R15 R0       ; R15 := R0
287 [-]: GETGLOBAL R16 K43      ; R16 := _T
288 [-]: GETTABLE  R16 R16 K64  ; R16 := R16["CachedInvasionInfo"]
289 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
290 [-]: EQ        0 R16 K8     ; if R16 ~= nil then PC := 293
291 [-]: JMP       293          ; PC := 293
292 [-]: MOVE      R16 R0       ; R16 := R0
293 [-]: MOVE      R16 R1       ; R16 := R1
294 [-]: GETGLOBAL R17 K25      ; R17 := 0x400E7765
295 [-]: GETTABLE  R18 R4 K58   ; R18 := R4["displayMissionOverride"]
296 [-]: CALL      R17 2 2      ; R17 := R17(R18)
297 [-]: TEST      R17 0        ; if not R17 then PC := 308
298 [-]: JMP       308          ; PC := 308
299 [-]: GETTABLE  R17 R10 K56  ; R17 := R10["faction"]
300 [-]: EQ        1 R8 R17     ; if R8 == R17 then PC := 306
301 [-]: JMP       306          ; PC := 306
302 [-]: GETGLOBAL R17 K25      ; R17 := 0x400E7765
303 [-]: GETTABLE  R18 R10 K59  ; R18 := R10["levelKeyName"]
304 [-]: CALL      R17 2 2      ; R17 := R17(R18)
305 [-]: JMP       308          ; PC := 308
306 [-]: MOVE      R17 R0       ; R17 := R0
307 [-]: MOVE      R17 R1       ; R17 := R1
308 [-]: GETGLOBAL R18 K43      ; R18 := _T
309 [-]: GETTABLE  R18 R18 K65  ; R18 := R18["CachedGhostTowerMissions"]
310 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
311 [-]: EQ        1 R18 K8     ; if R18 == nil then PC := 334
312 [-]: JMP       334          ; PC := 334
313 [-]: GETGLOBAL R18 K43      ; R18 := _T
314 [-]: GETTABLE  R18 R18 K65  ; R18 := R18["CachedGhostTowerMissions"]
315 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
316 [-]: GETTABLE  R18 R18 K66  ; R18 := R18["mUnlocked"]
317 [-]: TEST      R18 0        ; if not R18 then PC := 336
318 [-]: JMP       336          ; PC := 336
319 [-]: GETTABLE  R18 R4 K67   ; R18 := R4["icon"]
320 [-]: GETGLOBAL R19 K12      ; R19 := _G
321 [-]: GETTABLE  R19 R19 K68  ; R19 := R19["UITextures_GhostTower"]
322 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 329
323 [-]: JMP       329          ; PC := 329
324 [-]: GETTABLE  R18 R4 K67   ; R18 := R4["icon"]
325 [-]: GETGLOBAL R19 K12      ; R19 := _G
326 [-]: GETTABLE  R19 R19 K69  ; R19 := R19["UITextures_GhostTowerVariant"]
327 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 334
328 [-]: JMP       334          ; PC := 334
329 [-]: GETGLOBAL R18 K43      ; R18 := _T
330 [-]: GETTABLE  R18 R18 K65  ; R18 := R18["CachedGhostTowerMissions"]
331 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
332 [-]: GETTABLE  R18 R18 K70  ; R18 := R18["mShowInStarChart"]
333 [-]: JMP       336          ; PC := 336
334 [-]: MOVE      R18 R0       ; R18 := R0
335 [-]: MOVE      R18 R1       ; R18 := R1
336 [-]: TEST      R18 1        ; if R18 then PC := 365
337 [-]: JMP       365          ; PC := 365
338 [-]: GETGLOBAL R19 K43      ; R19 := _T
339 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["CachedSkullNodes"]
340 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
341 [-]: TEST      R19 1        ; if R19 then PC := 356
342 [-]: JMP       356          ; PC := 356
343 [-]: GETGLOBAL R19 K43      ; R19 := _T
344 [-]: GETTABLE  R19 R19 K72  ; R19 := R19["CachedAlerts"]
345 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
346 [-]: TEST      R19 0        ; if not R19 then PC := 367
347 [-]: JMP       367          ; PC := 367
348 [-]: GETGLOBAL R19 K43      ; R19 := _T
349 [-]: GETTABLE  R19 R19 K72  ; R19 := R19["CachedAlerts"]
350 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
351 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["mAlertInfo"]
352 [-]: GETTABLE  R19 R19 K74  ; R19 := R19["mMissionInfo"]
353 [-]: GETTABLE  R19 R19 K75  ; R19 := R19["nightmare"]
354 [-]: TEST      R19 0        ; if not R19 then PC := 367
355 [-]: JMP       367          ; PC := 367
356 [-]: GETUPVAL  R19 U17      ; R19 := U17
357 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
358 [-]: TEST      R19 0        ; if not R19 then PC := 366
359 [-]: JMP       366          ; PC := 366
360 [-]: GETUPVAL  R19 U17      ; R19 := U17
361 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
362 [-]: GETTABLE  R19 R19 K76  ; R19 := R19["IsQuest"]
363 [-]: MOVE      R19 R19      ; R19 := R19
364 [-]: JMP       367          ; PC := 367
365 [-]: MOVE      R19 R0       ; R19 := R0
366 [-]: MOVE      R19 R1       ; R19 := R1
367 [-]: GETGLOBAL R20 K43      ; R20 := _T
368 [-]: GETTABLE  R20 R20 K77  ; R20 := R20["CachedEliteAlertMissions"]
369 [-]: GETTABLE  R20 R20 R9   ; R20 := R20[R9]
370 [-]: EQ        1 R20 K8     ; if R20 == nil then PC := 383
371 [-]: JMP       383          ; PC := 383
372 [-]: GETGLOBAL R20 K43      ; R20 := _T
373 [-]: GETTABLE  R20 R20 K77  ; R20 := R20["CachedEliteAlertMissions"]
374 [-]: GETTABLE  R20 R20 R9   ; R20 := R20[R9]
375 [-]: GETTABLE  R20 R20 K66  ; R20 := R20["mUnlocked"]
376 [-]: TEST      R20 0        ; if not R20 then PC := 385
377 [-]: JMP       385          ; PC := 385
378 [-]: GETGLOBAL R20 K43      ; R20 := _T
379 [-]: GETTABLE  R20 R20 K77  ; R20 := R20["CachedEliteAlertMissions"]
380 [-]: GETTABLE  R20 R20 R9   ; R20 := R20[R9]
381 [-]: GETTABLE  R20 R20 K70  ; R20 := R20["mShowInStarChart"]
382 [-]: JMP       385          ; PC := 385
383 [-]: MOVE      R20 R0       ; R20 := R0
384 [-]: MOVE      R20 R1       ; R20 := R1
385 [-]: GETGLOBAL R21 K43      ; R21 := _T
386 [-]: GETTABLE  R21 R21 K78  ; R21 := R21["CachedNemesisMissions"]
387 [-]: GETTABLE  R21 R21 R9   ; R21 := R21[R9]
388 [-]: EQ        0 R21 K8     ; if R21 ~= nil then PC := 391
389 [-]: JMP       391          ; PC := 391
390 [-]: MOVE      R21 R0       ; R21 := R0
391 [-]: MOVE      R21 R1       ; R21 := R1
392 [-]: GETUPVAL  R22 U15      ; R22 := U15
393 [-]: GETTABLE  R22 R22 K63  ; R22 := R22["NodeMissions"]
394 [-]: GETTABLE  R22 R22 K50  ; R22 := R22[1]
395 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 401
396 [-]: JMP       401          ; PC := 401
397 [-]: GETUPVAL  R22 U15      ; R22 := U15
398 [-]: GETTABLE  R22 R22 K63  ; R22 := R22["NodeMissions"]
399 [-]: GETTABLE  R22 R22 K50  ; R22 := R22[1]
400 [-]: GETTABLE  R21 R22 K79  ; R21 := R22["mIsNemesis"]
401 [-]: GETUPVAL  R22 U18      ; R22 := U18
402 [-]: GETTABLE  R22 R22 K80  ; R22 := R22["Active"]
403 [-]: GETGLOBAL R23 K12      ; R23 := _G
404 [-]: GETTABLE  R23 R23 K81  ; R23 := R23["CachedGoalInfo"]
405 [-]: TEST      R23 0        ; if not R23 then PC := 445
406 [-]: JMP       445          ; PC := 445
407 [-]: GETGLOBAL R23 K12      ; R23 := _G
408 [-]: GETTABLE  R23 R23 K81  ; R23 := R23["CachedGoalInfo"]
409 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
410 [-]: TEST      R23 0        ; if not R23 then PC := 445
411 [-]: JMP       445          ; PC := 445
412 [-]: GETGLOBAL R23 K12      ; R23 := _G
413 [-]: GETTABLE  R23 R23 K81  ; R23 := R23["CachedGoalInfo"]
414 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
415 [-]: GETTABLE  R23 R23 K82  ; R23 := R23["mRelayReconstruction"]
416 [-]: TEST      R23 0        ; if not R23 then PC := 421
417 [-]: JMP       421          ; PC := 421
418 [-]: GETTABLE  R23 R4 K45   ; R23 := R4["reconstructionProgress"]
419 [-]: EQ        0 R23 K50    ; if R23 ~= 1 then PC := 445
420 [-]: JMP       445          ; PC := 445
421 [-]: GETGLOBAL R23 K12      ; R23 := _G
422 [-]: GETTABLE  R23 R23 K81  ; R23 := R23["CachedGoalInfo"]
423 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
424 [-]: GETTABLE  R10 R23 K74  ; R10 := R23["mMissionInfo"]
425 [-]: GETGLOBAL R23 K43      ; R23 := _T
426 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["CachedGoalKeys"]
427 [-]: TEST      R23 0        ; if not R23 then PC := 440
428 [-]: JMP       440          ; PC := 440
429 [-]: GETGLOBAL R23 K43      ; R23 := _T
430 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["CachedGoalKeys"]
431 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
432 [-]: TEST      R23 0        ; if not R23 then PC := 440
433 [-]: JMP       440          ; PC := 440
434 [-]: GETGLOBAL R23 K43      ; R23 := _T
435 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["CachedGoalKeys"]
436 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
437 [-]: SELF      R23 R23 K84  ; R24 := R23; R23 := R23["0xF1A9732E"]
438 [-]: CALL      R23 2 2      ; R23 := R23(R24)
439 [-]: SETTABLE  R10 K67 R23  ; R10["icon"] := R23
440 [-]: GETGLOBAL R23 K25      ; R23 := 0x400E7765
441 [-]: GETTABLE  R24 R10 K67  ; R24 := R10["icon"]
442 [-]: CALL      R23 2 2      ; R23 := R23(R24)
443 [-]: MOVE      R15 R23      ; R15 := R23
444 [-]: JMP       476          ; PC := 476
445 [-]: GETGLOBAL R23 K43      ; R23 := _T
446 [-]: GETTABLE  R23 R23 K85  ; R23 := R23["LockedGoalMissionInfo"]
447 [-]: TEST      R23 0        ; if not R23 then PC := 476
448 [-]: JMP       476          ; PC := 476
449 [-]: GETGLOBAL R23 K43      ; R23 := _T
450 [-]: GETTABLE  R23 R23 K85  ; R23 := R23["LockedGoalMissionInfo"]
451 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
452 [-]: TEST      R23 0        ; if not R23 then PC := 476
453 [-]: JMP       476          ; PC := 476
454 [-]: GETGLOBAL R23 K43      ; R23 := _T
455 [-]: GETTABLE  R23 R23 K85  ; R23 := R23["LockedGoalMissionInfo"]
456 [-]: GETTABLE  R10 R23 R9   ; R10 := R23[R9]
457 [-]: GETGLOBAL R23 K43      ; R23 := _T
458 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["CachedGoalKeys"]
459 [-]: TEST      R23 0        ; if not R23 then PC := 472
460 [-]: JMP       472          ; PC := 472
461 [-]: GETGLOBAL R23 K43      ; R23 := _T
462 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["CachedGoalKeys"]
463 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
464 [-]: TEST      R23 0        ; if not R23 then PC := 472
465 [-]: JMP       472          ; PC := 472
466 [-]: GETGLOBAL R23 K43      ; R23 := _T
467 [-]: GETTABLE  R23 R23 K83  ; R23 := R23["CachedGoalKeys"]
468 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
469 [-]: SELF      R23 R23 K84  ; R24 := R23; R23 := R23["0xF1A9732E"]
470 [-]: CALL      R23 2 2      ; R23 := R23(R24)
471 [-]: SETTABLE  R10 K67 R23  ; R10["icon"] := R23
472 [-]: GETGLOBAL R23 K25      ; R23 := 0x400E7765
473 [-]: GETTABLE  R24 R10 K67  ; R24 := R10["icon"]
474 [-]: CALL      R23 2 2      ; R23 := R23(R24)
475 [-]: MOVE      R15 R23      ; R15 := R23
476 [-]: GETTABLE  R23 R4 K86   ; R23 := R4["locName"]
477 [-]: TEST      R6 0         ; if not R6 then PC := 487
478 [-]: JMP       487          ; PC := 487
479 [-]: GETGLOBAL R24 K48      ; R24 := string
480 [-]: GETTABLE  R24 R24 K87  ; R24 := R24["0x639C642A"]
481 [-]: GETGLOBAL R25 K88      ; R25 := 0xE6DC43B0
482 [-]: LOADK     R26 K89      ; R26 := "/Lotus/Language/Dojo/FeaturedDojo"
483 [-]: LOADNIL   R27 R27      ; R27 := nil
484 [-]: CALL      R25 3 0      ; R25,... := R25(R26,R27)
485 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
486 [-]: MOVE      R23 R24      ; R23 := R24
487 [-]: GETUPVAL  R24 U19      ; R24 := U19
488 [-]: MOVE      R25 R4       ; R25 := R4
489 [-]: LOADNIL   R26 R26      ; R26 := nil
490 [-]: MOVE      R27 R10      ; R27 := R10
491 [-]: MOVE      R28 R19      ; R28 := R19
492 [-]: MOVE      R29 R12      ; R29 := R12
493 [-]: MOVE      R30 R17      ; R30 := R17
494 [-]: GETUPVAL  R31 U15      ; R31 := U15
495 [-]: GETTABLE  R31 R31 K63  ; R31 := R31["NodeMissions"]
496 [-]: GETTABLE  R31 R31 K50  ; R31 := R31[1]
497 [-]: CALL      R24 8 3      ; R24,R25 := R24(R25,R26,R27,R28,R29,R30,R31)
498 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
499 [-]: SELF      R26 R26 K40  ; R27 := R26; R26 := R26["0x1C19D966"]
500 [-]: LOADK     R28 K90      ; R28 := "InfoTip.NodeName"
501 [-]: LOADK     R29 K91      ; R29 := "verticalAlignment"
502 [-]: LOADK     R30 K92      ; R30 := "bottom"
503 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
504 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
505 [-]: SELF      R26 R26 K40  ; R27 := R26; R26 := R26["0x1C19D966"]
506 [-]: LOADK     R28 K90      ; R28 := "InfoTip.NodeName"
507 [-]: LOADK     R29 K93      ; R29 := "letterspacing"
508 [-]: LOADK     R30 K23      ; R30 := 0
509 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
510 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
511 [-]: SELF      R26 R26 K40  ; R27 := R26; R26 := R26["0x1C19D966"]
512 [-]: LOADK     R28 K90      ; R28 := "InfoTip.NodeName"
513 [-]: LOADK     R29 K94      ; R29 := "text"
514 [-]: MOVE      R30 R23      ; R30 := R23
515 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
516 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
517 [-]: SELF      R26 R26 K40  ; R27 := R26; R26 := R26["0x1C19D966"]
518 [-]: LOADK     R28 K95      ; R28 := "InfoTip.Label"
519 [-]: LOADK     R29 K94      ; R29 := "text"
520 [-]: MOVE      R30 R24      ; R30 := R24
521 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
522 [-]: LOADNIL   R26 R26      ; R26 := nil
523 [-]: EQ        1 R25 K8     ; if R25 == nil then PC := 526
524 [-]: JMP       526          ; PC := 526
525 [-]: GETTABLE  R26 R25 K96  ; R26 := R25["mFactionTag"]
526 [-]: GETUPVAL  R27 U15      ; R27 := U15
527 [-]: GETGLOBAL R28 K0       ; R28 := 0xF595ADDE
528 [-]: GETGLOBAL R29 K1       ; R29 := mMovie
529 [-]: SELF      R29 R29 K2   ; R30 := R29; R29 := R29["0x6B7B470B"]
530 [-]: LOADK     R31 K98      ; R31 := "InfoTip.Bg"
531 [-]: LOADK     R32 K99      ; R32 := "_width"
532 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
533 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
534 [-]: SETTABLE  R27 K97 R28  ; R27["BgWidth"] := R28
535 [-]: EQ        0 R24 K100   ; if R24 ~= "<p></p>" then PC := 542
536 [-]: JMP       542          ; PC := 542
537 [-]: GETUPVAL  R27 U15      ; R27 := U15
538 [-]: GETUPVAL  R28 U15      ; R28 := U15
539 [-]: GETTABLE  R28 R28 K102 ; R28 := R28["mBaseHeight"]
540 [-]: SETTABLE  R27 K101 R28 ; R27["BgHeight"] := R28
541 [-]: JMP       555          ; PC := 555
542 [-]: GETUPVAL  R27 U15      ; R27 := U15
543 [-]: GETUPVAL  R28 U15      ; R28 := U15
544 [-]: GETTABLE  R28 R28 K102 ; R28 := R28["mBaseHeight"]
545 [-]: GETGLOBAL R29 K0       ; R29 := 0xF595ADDE
546 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
547 [-]: SELF      R30 R30 K2   ; R31 := R30; R30 := R30["0x6B7B470B"]
548 [-]: LOADK     R32 K95      ; R32 := "InfoTip.Label"
549 [-]: LOADK     R33 K103     ; R33 := "textHeight"
550 [-]: CALL      R30 4 0      ; R30,... := R30(R31,R32,R33)
551 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
552 [-]: ADD       R28 R28 R29  ; R28 := R28 + R29
553 [-]: ADD       R28 R28 K104 ; R28 := R28 + 12
554 [-]: SETTABLE  R27 K101 R28 ; R27["BgHeight"] := R28
555 [-]: GETGLOBAL R27 K19      ; R27 := 0x52E17A90
556 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
557 [-]: LOADK     R29 K105     ; R29 := "InfoTip"
558 [-]: GETGLOBAL R30 K21      ; R30 := UISys
559 [-]: GETTABLE  R30 R30 K22  ; R30 := R30["FlashInstance_LINEAR"]
560 [-]: NEWTABLE  R31 1 0      ; R31 := {}
561 [-]: LOADK     R32 K16      ; R32 := "_alpha"
562 [-]: SETLIST   R31 1 1      ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 1
563 [-]: NEWTABLE  R32 1 0      ; R32 := {}
564 [-]: LOADK     R33 K106     ; R33 := 100
565 [-]: SETLIST   R32 1 1      ; R32[(1-1)*FPF+i] := R(32+i), 1 <= i <= 1
566 [-]: LOADK     R33 K107     ; R33 := 0.20000000298023
567 [-]: CALL      R27 7 1      ; R27(R28,R29,R30,R31,R32,R33)
568 [-]: GETGLOBAL R27 K108     ; R27 := math
569 [-]: GETTABLE  R27 R27 K109 ; R27 := R27["0x1DD19CC9"]
570 [-]: MUL       R28 R0 K110  ; R28 := R0 * 67443
571 [-]: CALL      R27 2 1      ; R27(R28)
572 [-]: LOADNIL   R27 R27      ; R27 := nil
573 [-]: LOADK     R28 K50      ; R28 := 1
574 [-]: TEST      R20 0        ; if not R20 then PC := 579
575 [-]: JMP       579          ; PC := 579
576 [-]: GETGLOBAL R29 K12      ; R29 := _G
577 [-]: GETTABLE  R27 R29 K111 ; R27 := R29["UITexture_EliteAlert"]
578 [-]: JMP       726          ; PC := 726
579 [-]: TEST      R19 0        ; if not R19 then PC := 584
580 [-]: JMP       584          ; PC := 584
581 [-]: GETGLOBAL R29 K12      ; R29 := _G
582 [-]: GETTABLE  R27 R29 K112 ; R27 := R29["UITexture_SkullLarge"]
583 [-]: JMP       726          ; PC := 726
584 [-]: TEST      R18 0        ; if not R18 then PC := 589
585 [-]: JMP       589          ; PC := 589
586 [-]: GETTABLE  R27 R4 K67   ; R27 := R4["icon"]
587 [-]: LOADK     R28 K113     ; R28 := 0.60000002384186
588 [-]: JMP       726          ; PC := 726
589 [-]: TEST      R6 0         ; if not R6 then PC := 621
590 [-]: JMP       621          ; PC := 621
591 [-]: GETTABLE  R29 R4 K114  ; R29 := R4["clanIcon"]
592 [-]: EQ        1 R29 K8     ; if R29 == nil then PC := 596
593 [-]: JMP       596          ; PC := 596
594 [-]: GETTABLE  R27 R4 K114  ; R27 := R4["clanIcon"]
595 [-]: JMP       726          ; PC := 726
596 [-]: GETGLOBAL R29 K12      ; R29 := _G
597 [-]: GETTABLE  R27 R29 K115 ; R27 := R29["UITexture_DefaultClan"]
598 [-]: GETUPVAL  R29 U9       ; R29 := U9
599 [-]: GETTABLE  R29 R29 K116 ; R29 := R29["0x36BA5F48"]
600 [-]: CALL      R29 1 2      ; R29 := R29()
601 [-]: TEST      R29 1        ; if R29 then PC := 726
602 [-]: JMP       726          ; PC := 726
603 [-]: GETUPVAL  R29 U14      ; R29 := U14
604 [-]: GETTABLE  R29 R29 K117 ; R29 := R29["0x71ACF9C"]
605 [-]: GETTABLE  R30 R4 K17   ; R30 := R4["guildId"]
606 [-]: CALL      R29 2 2      ; R29 := R29(R30)
607 [-]: EQ        1 R29 K8     ; if R29 == nil then PC := 726
608 [-]: JMP       726          ; PC := 726
609 [-]: GETUPVAL  R30 U20      ; R30 := U20
610 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
611 [-]: EQ        0 R30 K8     ; if R30 ~= nil then PC := 726
612 [-]: JMP       726          ; PC := 726
613 [-]: GETUPVAL  R30 U20      ; R30 := U20
614 [-]: SETTABLE  R30 R29 R4   ; R30[R29] := R4
615 [-]: GETGLOBAL R30 K118     ; R30 := gGameRules
616 [-]: SELF      R30 R30 K119 ; R31 := R30; R30 := R30["0x4A57F63D"]
617 [-]: MOVE      R32 R29      ; R32 := R29
618 [-]: LOADK     R33 K120     ; R33 := "OnEmblemReady"
619 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
620 [-]: JMP       726          ; PC := 726
621 [-]: GETGLOBAL R30 K25      ; R30 := 0x400E7765
622 [-]: MOVE      R31 R10      ; R31 := R10
623 [-]: CALL      R30 2 2      ; R30 := R30(R31)
624 [-]: TEST      R30 1        ; if R30 then PC := 726
625 [-]: JMP       726          ; PC := 726
626 [-]: LOADNIL   R30 R30      ; R30 := nil
627 [-]: TEST      R13 1        ; if R13 then PC := 675
628 [-]: JMP       675          ; PC := 675
629 [-]: TEST      R16 0        ; if not R16 then PC := 639
630 [-]: JMP       639          ; PC := 639
631 [-]: GETGLOBAL R31 K43      ; R31 := _T
632 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["CachedInvasionInfo"]
633 [-]: GETTABLE  R31 R31 R9   ; R31 := R31[R9]
634 [-]: GETTABLE  R31 R31 K121 ; R31 := R31["mAttackerMissionInfo"]
635 [-]: SELF      R31 R31 K122 ; R32 := R31; R31 := R31["0x70C51B59"]
636 [-]: CALL      R31 2 2      ; R31 := R31(R32)
637 [-]: MOVE      R30 R31      ; R30 := R31
638 [-]: JMP       675          ; PC := 675
639 [-]: GETTABLE  R31 R10 K34  ; R31 := R10["missionType"]
640 [-]: GETGLOBAL R32 K35      ; R32 := Lotus_Game
641 [-]: GETTABLE  R32 R32 K123 ; R32 := R32["MT_RAILJACK"]
642 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 675
643 [-]: JMP       675          ; PC := 675
644 [-]: GETGLOBAL R31 K124     ; R31 := 0x63B09107
645 [-]: SELF      R32 R10 K122 ; R33 := R10; R32 := R10["0x70C51B59"]
646 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
647 [-]: CALL      R31 0 4      ; R31,R32,R33 := R31(R32,...)
648 [-]: JMP       673          ; PC := 673
649 [-]: GETTABLE  R36 R35 K125 ; R36 := R35["agent"]
650 [-]: GETGLOBAL R37 K25      ; R37 := 0x400E7765
651 [-]: MOVE      R38 R36      ; R38 := R36
652 [-]: CALL      R37 2 2      ; R37 := R37(R38)
653 [-]: TEST      R37 1        ; if R37 then PC := 673
654 [-]: JMP       673          ; PC := 673
655 [-]: GETGLOBAL R37 K48      ; R37 := string
656 [-]: GETTABLE  R37 R37 K51  ; R37 := R37["0xDE44F664"]
657 [-]: SELF      R38 R36 K126 ; R39 := R36; R38 := R36["0x1B252E3C"]
658 [-]: CALL      R38 2 2      ; R38 := R38(R39)
659 [-]: LOADK     R39 K127     ; R39 := "Fighters"
660 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
661 [-]: TEST      R37 0        ; if not R37 then PC := 673
662 [-]: JMP       673          ; PC := 673
663 [-]: EQ        0 R30 K8     ; if R30 ~= nil then PC := 667
664 [-]: JMP       667          ; PC := 667
665 [-]: NEWTABLE  R37 0 0      ; R37 := {}
666 [-]: MOVE      R30 R37      ; R30 := R37
667 [-]: GETGLOBAL R37 K128     ; R37 := table
668 [-]: GETTABLE  R37 R37 K129 ; R37 := R37["0xE6450C9D"]
669 [-]: MOVE      R38 R30      ; R38 := R30
670 [-]: NEWTABLE  R39 0 1      ; R39 := {}
671 [-]: SETTABLE  R39 K125 R36 ; R39["agent"] := R36
672 [-]: CALL      R37 3 1      ; R37(R38,R39)
673 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 649; R33 := R34 end
674 [-]: JMP       649          ; PC := 649
675 [-]: GETGLOBAL R37 K25      ; R37 := 0x400E7765
676 [-]: MOVE      R38 R30      ; R38 := R30
677 [-]: CALL      R37 2 2      ; R37 := R37(R38)
678 [-]: TEST      R37 0        ; if not R37 then PC := 683
679 [-]: JMP       683          ; PC := 683
680 [-]: SELF      R37 R10 K122 ; R38 := R10; R37 := R10["0x70C51B59"]
681 [-]: CALL      R37 2 2      ; R37 := R37(R38)
682 [-]: MOVE      R30 R37      ; R30 := R37
683 [-]: LEN       R37 R30      ; R37 := # R30
684 [-]: LT        0 K23 R37    ; if 0 >= R37 then PC := 726
685 [-]: JMP       726          ; PC := 726
686 [-]: LOADK     R37 K23      ; R37 := 0
687 [-]: GETGLOBAL R38 K25      ; R38 := 0x400E7765
688 [-]: MOVE      R39 R27      ; R39 := R27
689 [-]: CALL      R38 2 2      ; R38 := R38(R39)
690 [-]: TEST      R38 0        ; if not R38 then PC := 726
691 [-]: JMP       726          ; PC := 726
692 [-]: LT        0 R37 K130   ; if R37 >= 5 then PC := 726
693 [-]: JMP       726          ; PC := 726
694 [-]: ADD       R37 R37 K50  ; R37 := R37 + 1
695 [-]: GETGLOBAL R38 K108     ; R38 := math
696 [-]: GETTABLE  R38 R38 K131 ; R38 := R38["0xBCF846DF"]
697 [-]: GETGLOBAL R39 K108     ; R39 := math
698 [-]: GETTABLE  R39 R39 K132 ; R39 := R39["0x865961F7"]
699 [-]: LOADK     R40 K50      ; R40 := 1
700 [-]: LEN       R41 R30      ; R41 := # R30
701 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
702 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
703 [-]: GETUPVAL  R39 U21      ; R39 := U21
704 [-]: SELF      R39 R39 K133 ; R40 := R39; R39 := R39["0xF37AEF8E"]
705 [-]: GETTABLE  R41 R30 R38  ; R41 := R30[R38]
706 [-]: GETTABLE  R41 R41 K125 ; R41 := R41["agent"]
707 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
708 [-]: GETGLOBAL R40 K25      ; R40 := 0x400E7765
709 [-]: GETTABLE  R41 R39 K67  ; R41 := R39["icon"]
710 [-]: CALL      R40 2 2      ; R40 := R40(R41)
711 [-]: TEST      R40 1        ; if R40 then PC := 715
712 [-]: JMP       715          ; PC := 715
713 [-]: GETTABLE  R27 R39 K67  ; R27 := R39["icon"]
714 [-]: JMP       687          ; PC := 687
715 [-]: GETGLOBAL R40 K134     ; R40 := 0x93B1256B
716 [-]: LOADK     R41 K135     ; R41 := "codex entry missing image:"
717 [-]: GETGLOBAL R42 K57      ; R42 := 0x9FAED6BC
718 [-]: GETTABLE  R43 R30 R38  ; R43 := R30[R38]
719 [-]: GETTABLE  R43 R43 K125 ; R43 := R43["agent"]
720 [-]: SELF      R43 R43 K126 ; R44 := R43; R43 := R43["0x1B252E3C"]
721 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
722 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
723 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
724 [-]: CALL      R40 2 1      ; R40(R41)
725 [-]: JMP       687          ; PC := 687
726 [-]: GETUPVAL  R40 U15      ; R40 := U15
727 [-]: GETTABLE  R40 R40 K136 ; R40 := R40["OriginalEnemyImageSize"]
728 [-]: EQ        0 R40 K8     ; if R40 ~= nil then PC := 739
729 [-]: JMP       739          ; PC := 739
730 [-]: GETUPVAL  R40 U15      ; R40 := U15
731 [-]: GETGLOBAL R41 K0       ; R41 := 0xF595ADDE
732 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
733 [-]: SELF      R42 R42 K2   ; R43 := R42; R42 := R42["0x6B7B470B"]
734 [-]: LOADK     R44 K137     ; R44 := "InfoTip.EnemyIcon"
735 [-]: LOADK     R45 K99      ; R45 := "_width"
736 [-]: CALL      R42 4 0      ; R42,... := R42(R43,R44,R45)
737 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
738 [-]: SETTABLE  R40 K136 R41 ; R40["OriginalEnemyImageSize"] := R41
739 [-]: GETGLOBAL R40 K25      ; R40 := 0x400E7765
740 [-]: MOVE      R41 R27      ; R41 := R27
741 [-]: CALL      R40 2 2      ; R40 := R40(R41)
742 [-]: TEST      R40 1        ; if R40 then PC := 750
743 [-]: JMP       750          ; PC := 750
744 [-]: GETUPVAL  R40 U22      ; R40 := U22
745 [-]: GETTABLE  R40 R40 K138 ; R40 := R40["Playing"]
746 [-]: TEST      R40 1        ; if R40 then PC := 750
747 [-]: JMP       750          ; PC := 750
748 [-]: MOVE      R40 R15      ; R40 := R15
749 [-]: JMP       752          ; PC := 752
750 [-]: MOVE      R40 R0       ; R40 := R0
751 [-]: MOVE      R40 R1       ; R40 := R1
752 [-]: GETGLOBAL R41 K1       ; R41 := mMovie
753 [-]: SELF      R41 R41 K40  ; R42 := R41; R41 := R41["0x1C19D966"]
754 [-]: LOADK     R43 K137     ; R43 := "InfoTip.EnemyIcon"
755 [-]: LOADK     R44 K139     ; R44 := "_visible"
756 [-]: MOVE      R45 R40      ; R45 := R40
757 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
758 [-]: GETGLOBAL R41 K1       ; R41 := mMovie
759 [-]: SELF      R41 R41 K40  ; R42 := R41; R41 := R41["0x1C19D966"]
760 [-]: LOADK     R43 K140     ; R43 := "InfoTip.EnemyShadow"
761 [-]: LOADK     R44 K139     ; R44 := "_visible"
762 [-]: MOVE      R45 R40      ; R45 := R40
763 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
764 [-]: GETUPVAL  R41 U15      ; R41 := U15
765 [-]: GETTABLE  R41 R41 K136 ; R41 := R41["OriginalEnemyImageSize"]
766 [-]: MUL       R41 R41 R28  ; R41 := R41 * R28
767 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
768 [-]: SELF      R42 R42 K40  ; R43 := R42; R42 := R42["0x1C19D966"]
769 [-]: LOADK     R44 K137     ; R44 := "InfoTip.EnemyIcon"
770 [-]: LOADK     R45 K99      ; R45 := "_width"
771 [-]: MOVE      R46 R41      ; R46 := R41
772 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
773 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
774 [-]: SELF      R42 R42 K40  ; R43 := R42; R42 := R42["0x1C19D966"]
775 [-]: LOADK     R44 K137     ; R44 := "InfoTip.EnemyIcon"
776 [-]: LOADK     R45 K141     ; R45 := "_height"
777 [-]: MOVE      R46 R41      ; R46 := R41
778 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
779 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
780 [-]: SELF      R42 R42 K40  ; R43 := R42; R42 := R42["0x1C19D966"]
781 [-]: LOADK     R44 K140     ; R44 := "InfoTip.EnemyShadow"
782 [-]: LOADK     R45 K99      ; R45 := "_width"
783 [-]: MOVE      R46 R41      ; R46 := R41
784 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
785 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
786 [-]: SELF      R42 R42 K40  ; R43 := R42; R42 := R42["0x1C19D966"]
787 [-]: LOADK     R44 K140     ; R44 := "InfoTip.EnemyShadow"
788 [-]: LOADK     R45 K141     ; R45 := "_height"
789 [-]: MOVE      R46 R41      ; R46 := R41
790 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
791 [-]: TEST      R40 0        ; if not R40 then PC := 815
792 [-]: JMP       815          ; PC := 815
793 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
794 [-]: SELF      R42 R42 K142 ; R43 := R42; R42 := R42["0x26581636"]
795 [-]: LOADK     R44 K137     ; R44 := "InfoTip.EnemyIcon"
796 [-]: MOVE      R45 R27      ; R45 := R27
797 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
798 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
799 [-]: SELF      R42 R42 K143 ; R43 := R42; R42 := R42["0x4443A5E7"]
800 [-]: LOADK     R44 K140     ; R44 := "InfoTip.EnemyShadow"
801 [-]: MOVE      R45 R27      ; R45 := R27
802 [-]: GETGLOBAL R46 K144     ; R46 := fgEnemyMaterial
803 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
804 [-]: GETUPVAL  R42 U23      ; R42 := U23
805 [-]: TEST      R42 0        ; if not R42 then PC := 815
806 [-]: JMP       815          ; PC := 815
807 [-]: GETGLOBAL R42 K134     ; R42 := 0x93B1256B
808 [-]: LOADK     R43 K145     ; R43 := "Enemy picture: "
809 [-]: GETGLOBAL R44 K57      ; R44 := 0x9FAED6BC
810 [-]: SELF      R45 R27 K126 ; R46 := R27; R45 := R27["0x1B252E3C"]
811 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
812 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
813 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
814 [-]: CALL      R42 2 1      ; R42(R43)
815 [-]: EQ        0 R26 K8     ; if R26 ~= nil then PC := 818
816 [-]: JMP       818          ; PC := 818
817 [-]: MOVE      R42 R0       ; R42 := R0
818 [-]: MOVE      R42 R1       ; R42 := R1
819 [-]: LOADNIL   R43 R43      ; R43 := nil
820 [-]: TEST      R42 0        ; if not R42 then PC := 837
821 [-]: JMP       837          ; PC := 837
822 [-]: GETGLOBAL R44 K146     ; R44 := factionIconMap
823 [-]: SELF      R44 R44 K147 ; R45 := R44; R44 := R44["0xE16D5ECC"]
824 [-]: GETGLOBAL R46 K48      ; R46 := string
825 [-]: GETTABLE  R46 R46 K148 ; R46 := R46["0xBDD0D625"]
826 [-]: MOVE      R47 R26      ; R47 := R26
827 [-]: CALL      R46 2 2      ; R46 := R46(R47)
828 [-]: LOADK     R47 K149     ; R47 := "color"
829 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
830 [-]: LOADK     R47 K23      ; R47 := 0
831 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
832 [-]: MOVE      R43 R44      ; R43 := R44
833 [-]: GETGLOBAL R44 K25      ; R44 := 0x400E7765
834 [-]: MOVE      R45 R43      ; R45 := R43
835 [-]: CALL      R44 2 2      ; R44 := R44(R45)
836 [-]: MOVE      R42 R44      ; R42 := R44
837 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
838 [-]: SELF      R44 R44 K40  ; R45 := R44; R44 := R44["0x1C19D966"]
839 [-]: LOADK     R46 K150     ; R46 := "InfoTip.Faction"
840 [-]: LOADK     R47 K139     ; R47 := "_visible"
841 [-]: MOVE      R48 R42      ; R48 := R42
842 [-]: CALL      R44 5 1      ; R44(R45,R46,R47,R48)
843 [-]: TEST      R42 0        ; if not R42 then PC := 850
844 [-]: JMP       850          ; PC := 850
845 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
846 [-]: SELF      R44 R44 K142 ; R45 := R44; R44 := R44["0x26581636"]
847 [-]: LOADK     R46 K150     ; R46 := "InfoTip.Faction"
848 [-]: MOVE      R47 R43      ; R47 := R43
849 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
850 [-]: GETGLOBAL R44 K151     ; R44 := locationTextures
851 [-]: GETGLOBAL R45 K108     ; R45 := math
852 [-]: GETTABLE  R45 R45 K131 ; R45 := R45["0xBCF846DF"]
853 [-]: GETGLOBAL R46 K108     ; R46 := math
854 [-]: GETTABLE  R46 R46 K132 ; R46 := R46["0x865961F7"]
855 [-]: LOADK     R47 K50      ; R47 := 1
856 [-]: GETGLOBAL R48 K151     ; R48 := locationTextures
857 [-]: LEN       R48 R48      ; R48 := # R48
858 [-]: CALL      R46 3 0      ; R46,... := R46(R47,R48)
859 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
860 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
861 [-]: GETUPVAL  R45 U15      ; R45 := U15
862 [-]: GETTABLE  R45 R45 K152 ; R45 := R45["InitLocationPicHeight"]
863 [-]: GETUPVAL  R46 U15      ; R46 := U15
864 [-]: GETTABLE  R46 R46 K153 ; R46 := R46["InitLocationPicYPos"]
865 [-]: GETGLOBAL R47 K48      ; R47 := string
866 [-]: GETTABLE  R47 R47 K51  ; R47 := R47["0xDE44F664"]
867 [-]: MOVE      R48 R9       ; R48 := R9
868 [-]: LOADK     R49 K154     ; R49 := "Dojo"
869 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
870 [-]: TEST      R47 0        ; if not R47 then PC := 883
871 [-]: JMP       883          ; PC := 883
872 [-]: GETGLOBAL R47 K155     ; R47 := locationIconMap
873 [-]: SELF      R47 R47 K156 ; R48 := R47; R47 := R47["0x7FFA0478"]
874 [-]: LOADK     R49 K157     ; R49 := "dojo"
875 [-]: GETGLOBAL R50 K108     ; R50 := math
876 [-]: GETTABLE  R50 R50 K132 ; R50 := R50["0x865961F7"]
877 [-]: LOADK     R51 K23      ; R51 := 0
878 [-]: LOADK     R52 K106     ; R52 := 100
879 [-]: CALL      R50 3 0      ; R50,... := R50(R51,R52)
880 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
881 [-]: MOVE      R44 R47      ; R44 := R47
882 [-]: JMP       908          ; PC := 908
883 [-]: GETGLOBAL R47 K25      ; R47 := 0x400E7765
884 [-]: GETTABLE  R48 R10 K158 ; R48 := R10["levelOverride"]
885 [-]: CALL      R47 2 2      ; R47 := R47(R48)
886 [-]: TEST      R47 1        ; if R47 then PC := 908
887 [-]: JMP       908          ; PC := 908
888 [-]: GETGLOBAL R47 K25      ; R47 := 0x400E7765
889 [-]: GETGLOBAL R48 K155     ; R48 := locationIconMap
890 [-]: CALL      R47 2 2      ; R47 := R47(R48)
891 [-]: TEST      R47 1        ; if R47 then PC := 908
892 [-]: JMP       908          ; PC := 908
893 [-]: GETGLOBAL R47 K155     ; R47 := locationIconMap
894 [-]: SELF      R47 R47 K156 ; R48 := R47; R47 := R47["0x7FFA0478"]
895 [-]: GETGLOBAL R49 K48      ; R49 := string
896 [-]: GETTABLE  R49 R49 K148 ; R49 := R49["0xBDD0D625"]
897 [-]: GETTABLE  R50 R10 K158 ; R50 := R10["levelOverride"]
898 [-]: SELF      R50 R50 K126 ; R51 := R50; R50 := R50["0x1B252E3C"]
899 [-]: CALL      R50 2 0      ; R50,... := R50(R51)
900 [-]: CALL      R49 0 2      ; R49 := R49(R50,...)
901 [-]: GETGLOBAL R50 K108     ; R50 := math
902 [-]: GETTABLE  R50 R50 K132 ; R50 := R50["0x865961F7"]
903 [-]: LOADK     R51 K23      ; R51 := 0
904 [-]: LOADK     R52 K106     ; R52 := 100
905 [-]: CALL      R50 3 0      ; R50,... := R50(R51,R52)
906 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
907 [-]: MOVE      R44 R47      ; R44 := R47
908 [-]: GETGLOBAL R47 K25      ; R47 := 0x400E7765
909 [-]: MOVE      R48 R44      ; R48 := R44
910 [-]: CALL      R47 2 2      ; R47 := R47(R48)
911 [-]: TEST      R47 0        ; if not R47 then PC := 944
912 [-]: JMP       944          ; PC := 944
913 [-]: TEST      R15 0        ; if not R15 then PC := 944
914 [-]: JMP       944          ; PC := 944
915 [-]: GETTABLE  R44 R10 K67  ; R44 := R10["icon"]
916 [-]: GETGLOBAL R47 K159     ; R47 := 0x7C282057
917 [-]: MOVE      R48 R44      ; R48 := R44
918 [-]: CALL      R47 2 2      ; R47 := R47(R48)
919 [-]: SELF      R48 R47 K160 ; R49 := R47; R48 := R47["0x11FF52EA"]
920 [-]: CALL      R48 2 2      ; R48 := R48(R49)
921 [-]: GETTABLE  R49 R48 K161 ; R49 := R48["x"]
922 [-]: LT        0 K23 R49    ; if 0 >= R49 then PC := 944
923 [-]: JMP       944          ; PC := 944
924 [-]: GETTABLE  R49 R48 K162 ; R49 := R48["y"]
925 [-]: GETTABLE  R50 R48 K161 ; R50 := R48["x"]
926 [-]: DIV       R49 R49 R50  ; R49 := R49 / R50
927 [-]: GETGLOBAL R50 K0       ; R50 := 0xF595ADDE
928 [-]: GETGLOBAL R51 K1       ; R51 := mMovie
929 [-]: SELF      R51 R51 K2   ; R52 := R51; R51 := R51["0x6B7B470B"]
930 [-]: LOADK     R53 K163     ; R53 := "InfoTip.LocationPic"
931 [-]: LOADK     R54 K99      ; R54 := "_width"
932 [-]: CALL      R51 4 0      ; R51,... := R51(R52,R53,R54)
933 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
934 [-]: MUL       R45 R50 R49  ; R45 := R50 * R49
935 [-]: GETUPVAL  R50 U15      ; R50 := U15
936 [-]: GETTABLE  R50 R50 K152 ; R50 := R50["InitLocationPicHeight"]
937 [-]: LT        0 R50 R45    ; if R50 >= R45 then PC := 944
938 [-]: JMP       944          ; PC := 944
939 [-]: GETUPVAL  R50 U15      ; R50 := U15
940 [-]: GETTABLE  R50 R50 K152 ; R50 := R50["InitLocationPicHeight"]
941 [-]: SUB       R50 R45 R50  ; R50 := R45 - R50
942 [-]: DIV       R50 R50 K164 ; R50 := R50 / 2
943 [-]: ADD       R46 R46 R50  ; R46 := R46 + R50
944 [-]: GETGLOBAL R50 K1       ; R50 := mMovie
945 [-]: SELF      R50 R50 K40  ; R51 := R50; R50 := R50["0x1C19D966"]
946 [-]: LOADK     R52 K163     ; R52 := "InfoTip.LocationPic"
947 [-]: LOADK     R53 K141     ; R53 := "_height"
948 [-]: MOVE      R54 R45      ; R54 := R45
949 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
950 [-]: GETGLOBAL R50 K1       ; R50 := mMovie
951 [-]: SELF      R50 R50 K40  ; R51 := R50; R50 := R50["0x1C19D966"]
952 [-]: LOADK     R52 K163     ; R52 := "InfoTip.LocationPic"
953 [-]: LOADK     R53 K165     ; R53 := "_y"
954 [-]: MOVE      R54 R46      ; R54 := R46
955 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
956 [-]: GETGLOBAL R50 K1       ; R50 := mMovie
957 [-]: SELF      R50 R50 K142 ; R51 := R50; R50 := R50["0x26581636"]
958 [-]: LOADK     R52 K163     ; R52 := "InfoTip.LocationPic"
959 [-]: MOVE      R53 R44      ; R53 := R44
960 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
961 [-]: GETGLOBAL R50 K1       ; R50 := mMovie
962 [-]: SELF      R50 R50 K166 ; R51 := R50; R50 := R50["0x7E1F26D7"]
963 [-]: LOADK     R52 K163     ; R52 := "InfoTip.LocationPic"
964 [-]: GETGLOBAL R53 K167     ; R53 := locationPicMaterial
965 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
966 [-]: LOADK     R50 K168     ; R50 := 16777215
967 [-]: TEST      R19 0        ; if not R19 then PC := 971
968 [-]: JMP       971          ; PC := 971
969 [-]: LOADK     R50 K169     ; R50 := 13382451
970 [-]: JMP       974          ; PC := 974
971 [-]: TEST      R21 0        ; if not R21 then PC := 974
972 [-]: JMP       974          ; PC := 974
973 [-]: LOADK     R50 K170     ; R50 := 16746632
974 [-]: GETGLOBAL R51 K1       ; R51 := mMovie
975 [-]: SELF      R51 R51 K9   ; R52 := R51; R51 := R51["0x880196A7"]
976 [-]: LOADK     R53 K105     ; R53 := "InfoTip"
977 [-]: LOADK     R54 K171     ; R54 := "NemesisOverlay"
978 [-]: LOADK     R55 K139     ; R55 := "_visible"
979 [-]: MOVE      R56 R21      ; R56 := R21
980 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
981 [-]: GETGLOBAL R51 K1       ; R51 := mMovie
982 [-]: SELF      R51 R51 K9   ; R52 := R51; R51 := R51["0x880196A7"]
983 [-]: LOADK     R53 K105     ; R53 := "InfoTip"
984 [-]: LOADK     R54 K172     ; R54 := "LocationPic"
985 [-]: LOADK     R55 K11      ; R55 := "_color"
986 [-]: MOVE      R56 R50      ; R56 := R50
987 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
988 [-]: GETGLOBAL R51 K1       ; R51 := mMovie
989 [-]: SELF      R51 R51 K9   ; R52 := R51; R51 := R51["0x880196A7"]
990 [-]: LOADK     R53 K105     ; R53 := "InfoTip"
991 [-]: LOADK     R54 K173     ; R54 := "RailjackOverlay"
992 [-]: LOADK     R55 K139     ; R55 := "_visible"
993 [-]: MOVE      R56 R22      ; R56 := R22
994 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
995 [-]: GETGLOBAL R51 K174     ; R51 := 0x8C64AFA9
996 [-]: GETGLOBAL R52 K1       ; R52 := mMovie
997 [-]: GETTABLE  R53 R4 K10   ; R53 := R4["clipName"]
998 [-]: LOADK     R54 K175     ; R54 := ".swapDepths"
999 [-]: CONCAT    R53 R53 R54  ; R53 := R53 .. R54
1000 [-]: LOADK     R54 K176     ; R54 := 501
1001 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
1002 [-]: GETUPVAL  R51 U15      ; R51 := U15
1003 [-]: GETTABLE  R51 R51 K101 ; R51 := R51["BgHeight"]
1004 [-]: GETUPVAL  R52 U15      ; R52 := U15
1005 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["NodeMissions"]
1006 [-]: LEN       R52 R52      ; R52 := # R52
1007 [-]: GETGLOBAL R53 K1       ; R53 := mMovie
1008 [-]: SELF      R53 R53 K9   ; R54 := R53; R53 := R53["0x880196A7"]
1009 [-]: LOADK     R55 K105     ; R55 := "InfoTip"
1010 [-]: LOADK     R56 K177     ; R56 := "MissionPreviews"
1011 [-]: LOADK     R57 K139     ; R57 := "_visible"
1012 [-]: LT        1 K50 R52    ; if 1 < R52 then PC := 1015
1013 [-]: JMP       1015         ; PC := 1015
1014 [-]: MOVE      R58 R0       ; R58 := R0
1015 [-]: MOVE      R58 R1       ; R58 := R1
1016 [-]: CALL      R53 6 1      ; R53(R54,R55,R56,R57,R58)
1017 [-]: LT        0 K50 R52    ; if 1 >= R52 then PC := 1068
1018 [-]: JMP       1068         ; PC := 1068
1019 [-]: LOADK     R53 K178     ; R53 := 38
1020 [-]: GETGLOBAL R54 K108     ; R54 := math
1021 [-]: GETTABLE  R54 R54 K179 ; R54 := R54["0x8B011038"]
1022 [-]: MOVE      R55 R51      ; R55 := R51
1023 [-]: GETUPVAL  R56 U15      ; R56 := U15
1024 [-]: GETTABLE  R56 R56 K102 ; R56 := R56["mBaseHeight"]
1025 [-]: ADD       R56 R56 K180 ; R56 := R56 + 14
1026 [-]: MUL       R57 R52 R53  ; R57 := R52 * R53
1027 [-]: ADD       R56 R56 R57  ; R56 := R56 + R57
1028 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
1029 [-]: MOVE      R51 R54      ; R51 := R54
1030 [-]: GETUPVAL  R54 U15      ; R54 := U15
1031 [-]: SETTABLE  R54 K101 R51 ; R54["BgHeight"] := R51
1032 [-]: LOADK     R54 K50      ; R54 := 1
1033 [-]: LOADK     R55 K181     ; R55 := 6
1034 [-]: LOADK     R56 K50      ; R56 := 1
1035 [-]: FORPREP   R54 1067     ; R54 -= R56; PC := 1067
1036 [-]: LOADK     R58 K182     ; R58 := "InfoTip.MissionPreviews.Mission"
1037 [-]: MOVE      R59 R57      ; R59 := R57
1038 [-]: CONCAT    R58 R58 R59  ; R58 := R58 .. R59
1039 [-]: GETGLOBAL R59 K1       ; R59 := mMovie
1040 [-]: SELF      R59 R59 K40  ; R60 := R59; R59 := R59["0x1C19D966"]
1041 [-]: MOVE      R61 R58      ; R61 := R58
1042 [-]: LOADK     R62 K139     ; R62 := "_visible"
1043 [-]: LE        1 R57 R52    ; if R57 <= R52 then PC := 1046
1044 [-]: JMP       1046         ; PC := 1046
1045 [-]: MOVE      R63 R0       ; R63 := R0
1046 [-]: MOVE      R63 R1       ; R63 := R1
1047 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
1048 [-]: LE        0 R57 R52    ; if R57 > R52 then PC := 1067
1049 [-]: JMP       1067         ; PC := 1067
1050 [-]: GETGLOBAL R59 K1       ; R59 := mMovie
1051 [-]: SELF      R59 R59 K40  ; R60 := R59; R59 := R59["0x1C19D966"]
1052 [-]: MOVE      R61 R58      ; R61 := R58
1053 [-]: LOADK     R62 K165     ; R62 := "_y"
1054 [-]: SUB       R63 R57 K50  ; R63 := R57 - 1
1055 [-]: MUL       R63 R63 R53  ; R63 := R63 * R53
1056 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
1057 [-]: GETGLOBAL R59 K1       ; R59 := mMovie
1058 [-]: SELF      R59 R59 K142 ; R60 := R59; R59 := R59["0x26581636"]
1059 [-]: MOVE      R61 R58      ; R61 := R58
1060 [-]: LOADK     R62 K183     ; R62 := ".Icon"
1061 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
1062 [-]: GETUPVAL  R62 U15      ; R62 := U15
1063 [-]: GETTABLE  R62 R62 K63  ; R62 := R62["NodeMissions"]
1064 [-]: GETTABLE  R62 R62 R57  ; R62 := R62[R57]
1065 [-]: GETTABLE  R62 R62 K184 ; R62 := R62["Icon"]
1066 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
1067 [-]: FORLOOP   R54 1036     ; R54 += R56; if R54 <= R55 then begin PC := 1036; R57 := R54 end
1068 [-]: GETGLOBAL R59 K1       ; R59 := mMovie
1069 [-]: SELF      R59 R59 K9   ; R60 := R59; R59 := R59["0x880196A7"]
1070 [-]: LOADK     R61 K105     ; R61 := "InfoTip"
1071 [-]: LOADK     R62 K185     ; R62 := "Darken"
1072 [-]: LOADK     R63 K141     ; R63 := "_height"
1073 [-]: MOVE      R64 R51      ; R64 := R51
1074 [-]: CALL      R59 6 1      ; R59(R60,R61,R62,R63,R64)
1075 [-]: GETGLOBAL R59 K1       ; R59 := mMovie
1076 [-]: SELF      R59 R59 K9   ; R60 := R59; R59 := R59["0x880196A7"]
1077 [-]: LOADK     R61 K105     ; R61 := "InfoTip"
1078 [-]: LOADK     R62 K186     ; R62 := "Blurer"
1079 [-]: LOADK     R63 K141     ; R63 := "_height"
1080 [-]: MOVE      R64 R51      ; R64 := R51
1081 [-]: CALL      R59 6 1      ; R59(R60,R61,R62,R63,R64)
1082 [-]: GETTABLE  R59 R4 K187  ; R59 := R4["deco"]
1083 [-]: EQ        1 R59 K8     ; if R59 == nil then PC := 1111
1084 [-]: JMP       1111         ; PC := 1111
1085 [-]: GETGLOBAL R59 K25      ; R59 := 0x400E7765
1086 [-]: GETTABLE  R60 R4 K187  ; R60 := R4["deco"]
1087 [-]: GETTABLE  R60 R60 K188 ; R60 := R60["mInstance"]
1088 [-]: CALL      R59 2 2      ; R59 := R59(R60)
1089 [-]: TEST      R59 1        ; if R59 then PC := 1111
1090 [-]: JMP       1111         ; PC := 1111
1091 [-]: GETGLOBAL R59 K19      ; R59 := 0x52E17A90
1092 [-]: GETGLOBAL R60 K1       ; R60 := mMovie
1093 [-]: GETTABLE  R61 R4 K10   ; R61 := R4["clipName"]
1094 [-]: GETGLOBAL R62 K21      ; R62 := UISys
1095 [-]: GETTABLE  R62 R62 K189 ; R62 := R62["FlashInstance_EASE_OUT"]
1096 [-]: NEWTABLE  R63 1 0      ; R63 := {}
1097 [-]: CLOSURE   R64 0        ; R64 := closure(Function #151.1)
1098 [-]: MOVE      R0 R4        ; R0 := R4
1099 [-]: GETUPVAL  R0 U24       ; R0 := U24
1100 [-]: SETLIST   R63 1 1      ; R63[(1-1)*FPF+i] := R(63+i), 1 <= i <= 1
1101 [-]: NEWTABLE  R64 1 0      ; R64 := {}
1102 [-]: LOADK     R65 K50      ; R65 := 1
1103 [-]: SETLIST   R64 1 1      ; R64[(1-1)*FPF+i] := R(64+i), 1 <= i <= 1
1104 [-]: GETUPVAL  R65 U9       ; R65 := U9
1105 [-]: GETTABLE  R65 R65 K190 ; R65 := R65["0xF81722A2"]
1106 [-]: MOVE      R66 R5       ; R66 := R5
1107 [-]: LOADK     R67 K191     ; R67 := 0.0010000000474975
1108 [-]: LOADK     R68 K107     ; R68 := 0.20000000298023
1109 [-]: CALL      R65 4 0      ; R65,... := R65(R66,R67,R68)
1110 [-]: CALL      R59 0 1      ; R59(R60,...)
1111 [-]: RETURN    R0 1         ; return 


; Function #151.1:
;
; Name:            
; Defined at line: 7584
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: ADD       R4 K7 R4     ; R4 := 1 + R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 7594
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        1 R1 R2      ; if R1 <= R2 then PC := 14
  4 [-]: JMP       14           ; PC := 14
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["NodeSelectionOpen"]
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R1 U3        ; R1 := U3
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Node"]
 17 [-]: GETUPVAL  R2 U3        ; R2 := U3
 18 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Node"]
 19 [-]: MOVE      R2 R4        ; R2 := R4
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: SETTABLE  R2 K3 K4     ; R2["Node"] := nil
 22 [-]: EQ        1 R0 K4      ; if R0 == nil then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U5        ; R2 := U5
 25 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 26 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETUPVAL  R2 U5        ; R2 := U5
 29 [-]: GETTABLE  R1 R2 R0     ; R1 := R2[R0]
 30 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 31 [-]: GETUPVAL  R3 U6        ; R3 := U6
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Projector"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R2 K6        ; R2 := gBackgroundRegion
 37 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x9B0A3887"]
 38 [-]: GETUPVAL  R4 U6        ; R4 := U6
 39 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Projector"]
 40 [-]: CALL      R2 3 1       ; R2(R3,R4)
 41 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 42 [-]: MOVE      R3 R1        ; R3 := R1
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 1         ; if R2 then PC := 140
 45 [-]: JMP       140          ; PC := 140
 46 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 47 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x1C19D966"]
 48 [-]: GETTABLE  R4 R1 K9     ; R4 := R1["clipName"]
 49 [-]: LOADK     R5 K10       ; R5 := "_color"
 50 [-]: GETGLOBAL R6 K11       ; R6 := _G
 51 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["UIColor_White"]
 52 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 53 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 54 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x445651FB"]
 55 [-]: GETTABLE  R4 R1 K14    ; R4 := R1["labelIndex"]
 56 [-]: LOADK     R5 K15       ; R5 := "_alpha"
 57 [-]: GETUPVAL  R6 U7        ; R6 := U7
 58 [-]: MOVE      R7 R1        ; R7 := R1
 59 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 60 [-]: CALL      R2 0 1       ; R2(R3,...)
 61 [-]: GETTABLE  R2 R1 K16    ; R2 := R1["guildId"]
 62 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 67
 63 [-]: JMP       67           ; PC := 67
 64 [-]: GETTABLE  R2 R1 K17    ; R2 := R1["clanTier"]
 65 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 68
 66 [-]: JMP       68           ; PC := 68
 67 [-]: MOVE      R2 R0        ; R2 := R0
 68 [-]: MOVE      R2 R1        ; R2 := R1
 69 [-]: TEST      R2 0         ; if not R2 then PC := 86
 70 [-]: JMP       86           ; PC := 86
 71 [-]: GETGLOBAL R3 K18       ; R3 := 0x52E17A90
 72 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 73 [-]: GETTABLE  R5 R1 K9     ; R5 := R1["clipName"]
 74 [-]: LOADK     R6 K19       ; R6 := ".Node.Container.Node"
 75 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 76 [-]: GETGLOBAL R6 K20       ; R6 := UISys
 77 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["FlashInstance_LINEAR"]
 78 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 79 [-]: LOADK     R8 K15       ; R8 := "_alpha"
 80 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 81 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 82 [-]: LOADK     R9 K22       ; R9 := 0
 83 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 84 [-]: LOADK     R9 K23       ; R9 := 0.25
 85 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 86 [-]: GETGLOBAL R3 K18       ; R3 := 0x52E17A90
 87 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 88 [-]: LOADK     R5 K24       ; R5 := "InfoTip"
 89 [-]: GETGLOBAL R6 K20       ; R6 := UISys
 90 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["FlashInstance_LINEAR"]
 91 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 92 [-]: LOADK     R8 K15       ; R8 := "_alpha"
 93 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 94 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 95 [-]: LOADK     R9 K22       ; R9 := 0
 96 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 97 [-]: LOADK     R9 K25       ; R9 := 0.050000000745058
 98 [-]: LOADK     R10 K22      ; R10 := 0
 99 [-]: CLOSURE   R11 0        ; R11 := closure(Function #152.1)
100 [-]: GETUPVAL  R0 U2        ; R0 := U2
101 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
102 [-]: GETTABLE  R3 R1 K26    ; R3 := R1["deco"]
103 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 126
104 [-]: JMP       126          ; PC := 126
105 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
106 [-]: GETTABLE  R4 R1 K26    ; R4 := R1["deco"]
107 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["mInstance"]
108 [-]: CALL      R3 2 2       ; R3 := R3(R4)
109 [-]: TEST      R3 1         ; if R3 then PC := 126
110 [-]: JMP       126          ; PC := 126
111 [-]: GETGLOBAL R3 K18       ; R3 := 0x52E17A90
112 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
113 [-]: GETTABLE  R5 R1 K9     ; R5 := R1["clipName"]
114 [-]: GETGLOBAL R6 K20       ; R6 := UISys
115 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["FlashInstance_EASE_OUT"]
116 [-]: NEWTABLE  R7 1 0       ; R7 := {}
117 [-]: CLOSURE   R8 1         ; R8 := closure(Function #152.2)
118 [-]: MOVE      R0 R1        ; R0 := R1
119 [-]: GETUPVAL  R0 U8        ; R0 := U8
120 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
121 [-]: NEWTABLE  R8 1 0       ; R8 := {}
122 [-]: LOADK     R9 K29       ; R9 := 1
123 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
124 [-]: LOADK     R9 K30       ; R9 := 0.20000000298023
125 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
126 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
127 [-]: GETUPVAL  R4 U9        ; R4 := U9
128 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["JunctionTasks"]
129 [-]: CALL      R3 2 2       ; R3 := R3(R4)
130 [-]: TEST      R3 1         ; if R3 then PC := 140
131 [-]: JMP       140          ; PC := 140
132 [-]: GETGLOBAL R3 K32       ; R3 := _T
133 [-]: SETTABLE  R3 K33 K4    ; R3["JunctionTasksUIRadialSector"] := nil
134 [-]: GETUPVAL  R3 U9        ; R3 := U9
135 [-]: GETTABLE  R3 R3 K31    ; R3 := R3["JunctionTasks"]
136 [-]: SELF      R3 R3 K34    ; R4 := R3; R3 := R3["0xA58BB96C"]
137 [-]: CALL      R3 2 1       ; R3(R4)
138 [-]: GETUPVAL  R3 U9        ; R3 := U9
139 [-]: SETTABLE  R3 K31 K4    ; R3["JunctionTasks"] := nil
140 [-]: RETURN    R0 1         ; return 


; Function #152.1:
;
; Name:            
; Defined at line: 7621
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mSmoothY"]
  3 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5A7A6B1"]
  4 [-]: LOADK     R2 K2        ; R2 := -1
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #152.2:
;
; Name:            
; Defined at line: 7627
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: SUB       R4 K7 R4     ; R4 := 1.5 - R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 7642
; #Upvalues:       28
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xF595ADDE
 10 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6B7B470B"]
 12 [-]: LOADK     R3 K4        ; R3 := "_root"
 13 [-]: LOADK     R4 K5        ; R4 := "_xmouse"
 14 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 15 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 17 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 18 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
 19 [-]: LOADK     R4 K4        ; R4 := "_root"
 20 [-]: LOADK     R5 K6        ; R5 := "_ymouse"
 21 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 22 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 23 [-]: LE        0 R0 K7      ; if R0 > -1000 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: LE        0 R1 K7      ; if R1 > -1000 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["MouseInWorldStateWindow"]
 30 [-]: TEST      R2 1         ; if R2 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R2 K8        ; R2 := _T
 33 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MouseInChatArea"]
 34 [-]: TEST      R2 0         ; if not R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R2 K8        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 39 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: GETGLOBAL R2 K8        ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 43 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x458F27A9"]
 44 [-]: LOADK     R4 K14       ; R4 := "HasFocus"
 45 [-]: LOADK     R5 K15       ; R5 := ""
 46 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 47 [-]: TEST      R2 0         ; if not R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETGLOBAL R2 K8        ; R2 := _T
 51 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["TopMenuOpen"]
 52 [-]: TEST      R2 0         ; if not R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R2 K17       ; R2 := gGameConfig
 56 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x89E53943"]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 71
 59 [-]: JMP       71           ; PC := 71
 60 [-]: GETUPVAL  R2 U2        ; R2 := U2
 61 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Active"]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 155
 63 [-]: JMP       155          ; PC := 155
 64 [-]: GETGLOBAL R2 K20       ; R2 := gPromotedToHost
 65 [-]: TEST      R2 0         ; if not R2 then PC := 155
 66 [-]: JMP       155          ; PC := 155
 67 [-]: GETUPVAL  R2 U3        ; R2 := U3
 68 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 69 [-]: TEST      R2 0         ; if not R2 then PC := 155
 70 [-]: JMP       155          ; PC := 155
 71 [-]: GETUPVAL  R2 U2        ; R2 := U2
 72 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Active"]
 73 [-]: TEST      R2 0         ; if not R2 then PC := 106
 74 [-]: JMP       106          ; PC := 106
 75 [-]: GETUPVAL  R2 U3        ; R2 := U3
 76 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["Region"]
 77 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 87
 78 [-]: JMP       87           ; PC := 87
 79 [-]: GETUPVAL  R2 U3        ; R2 := U3
 80 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["Region"]
 81 [-]: GETUPVAL  R3 U4        ; R3 := U4
 82 [-]: GETGLOBAL R4 K8        ; R4 := _T
 83 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["REGION_ID_DOJO"]
 84 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 85 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 105
 86 [-]: JMP       105          ; PC := 105
 87 [-]: GETUPVAL  R2 U3        ; R2 := U3
 88 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 89 [-]: TEST      R2 0         ; if not R2 then PC := 106
 90 [-]: JMP       106          ; PC := 106
 91 [-]: GETUPVAL  R2 U3        ; R2 := U3
 92 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 93 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["radialSector"]
 94 [-]: TEST      R2 0         ; if not R2 then PC := 106
 95 [-]: JMP       106          ; PC := 106
 96 [-]: GETUPVAL  R2 U3        ; R2 := U3
 97 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Node"]
 98 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["radialSector"]
 99 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["region"]
100 [-]: GETGLOBAL R3 K8        ; R3 := _T
101 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["REGION_ID_DOJO"]
102 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R2 R0        ; R2 := R0
105 [-]: MOVE      R2 R1        ; R2 := R1
106 [-]: TEST      R2 1         ; if R2 then PC := 130
107 [-]: JMP       130          ; PC := 130
108 [-]: GETUPVAL  R3 U2        ; R3 := U2
109 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["Active"]
110 [-]: TEST      R3 0         ; if not R3 then PC := 130
111 [-]: JMP       130          ; PC := 130
112 [-]: GETUPVAL  R3 U3        ; R3 := U3
113 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Node"]
114 [-]: TEST      R3 0         ; if not R3 then PC := 129
115 [-]: JMP       129          ; PC := 129
116 [-]: GETUPVAL  R3 U3        ; R3 := U3
117 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Node"]
118 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["radialSector"]
119 [-]: TEST      R3 0         ; if not R3 then PC := 130
120 [-]: JMP       130          ; PC := 130
121 [-]: GETUPVAL  R3 U3        ; R3 := U3
122 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["Node"]
123 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["radialSector"]
124 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["missionTag"]
125 [-]: GETUPVAL  R4 U5        ; R4 := U5
126 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["SQUAD_LINK_EVENT"]
127 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: MOVE      R2 R1        ; R2 := R1
130 [-]: TEST      R2 1         ; if R2 then PC := 155
131 [-]: JMP       155          ; PC := 155
132 [-]: LOADNIL   R3 R3        ; R3 := nil
133 [-]: GETUPVAL  R4 U2        ; R4 := U2
134 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Active"]
135 [-]: TEST      R4 0         ; if not R4 then PC := 145
136 [-]: JMP       145          ; PC := 145
137 [-]: GETUPVAL  R4 U6        ; R4 := U6
138 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["0xF81722A2"]
139 [-]: GETGLOBAL R5 K20       ; R5 := gPromotedToHost
140 [-]: LOADK     R6 K29       ; R6 := "/Lotus/Language/Menu/HostMigrationMissionsBlocked"
141 [-]: LOADK     R7 K30       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlockedRailjack"
142 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
143 [-]: MOVE      R3 R4        ; R3 := R4
144 [-]: JMP       146          ; PC := 146
145 [-]: LOADK     R3 K31       ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
146 [-]: GETUPVAL  R4 U6        ; R4 := U6
147 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["0xB11F032"]
148 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
149 [-]: SELF      R5 R5 K33    ; R6 := R5; R5 := R5["0x5DB0BD4"]
150 [-]: MOVE      R7 R3        ; R7 := R3
151 [-]: MOVE      R8 R0        ; R8 := R0
152 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
153 [-]: CALL      R4 0 1       ; R4(R5,...)
154 [-]: RETURN    R0 1         ; return 
155 [-]: GETGLOBAL R4 K34       ; R4 := Engine
156 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["0x9490FE70"]
157 [-]: CALL      R4 1 2       ; R4 := R4()
158 [-]: TEST      R4 0         ; if not R4 then PC := 175
159 [-]: JMP       175          ; PC := 175
160 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
161 [-]: GETGLOBAL R5 K8        ; R5 := _T
162 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["SquadOverlay"]
163 [-]: CALL      R4 2 2       ; R4 := R4(R5)
164 [-]: TEST      R4 1         ; if R4 then PC := 175
165 [-]: JMP       175          ; PC := 175
166 [-]: GETGLOBAL R4 K8        ; R4 := _T
167 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["SquadOverlay"]
168 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x458F27A9"]
169 [-]: LOADK     R6 K38       ; R6 := "MatchmakingFocused"
170 [-]: LOADK     R7 K15       ; R7 := ""
171 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
172 [-]: TEST      R4 0         ; if not R4 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: RETURN    R0 1         ; return 
175 [-]: GETUPVAL  R4 U7        ; R4 := U7
176 [-]: GETUPVAL  R5 U8        ; R5 := U8
177 [-]: GETTABLE  R5 R5 K39    ; R5 := R5["EDIT_REGIONS"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 249
179 [-]: JMP       249          ; PC := 249
180 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
181 [-]: GETUPVAL  R5 U3        ; R5 := U3
182 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Region"]
183 [-]: CALL      R4 2 2       ; R4 := R4(R5)
184 [-]: TEST      R4 1         ; if R4 then PC := 249
185 [-]: JMP       249          ; PC := 249
186 [-]: GETUPVAL  R4 U9        ; R4 := U9
187 [-]: GETUPVAL  R5 U3        ; R5 := U3
188 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Region"]
189 [-]: SETTABLE  R4 K40 R5    ; R4["mMovingRegion"] := R5
190 [-]: GETUPVAL  R4 U9        ; R4 := U9
191 [-]: GETUPVAL  R5 U3        ; R5 := U3
192 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Region"]
193 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["instance"]
194 [-]: SELF      R5 R5 K43    ; R6 := R5; R5 := R5["0x6DA72501"]
195 [-]: CALL      R5 2 2       ; R5 := R5(R6)
196 [-]: SETTABLE  R4 K41 R5    ; R4["mInitialPosition"] := R5
197 [-]: GETUPVAL  R4 U9        ; R4 := U9
198 [-]: GETUPVAL  R5 U10       ; R5 := U10
199 [-]: CALL      R5 1 2       ; R5 := R5()
200 [-]: SETTABLE  R4 K44 R5    ; R4["mInitialWorldCursor"] := R5
201 [-]: LOADNIL   R4 R4        ; R4 := nil
202 [-]: GETGLOBAL R5 K45       ; R5 := 0x63B09107
203 [-]: GETUPVAL  R6 U4        ; R6 := U4
204 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
205 [-]: JMP       212          ; PC := 212
206 [-]: GETUPVAL  R10 U3       ; R10 := U3
207 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["Region"]
208 [-]: EQ        0 R10 R9     ; if R10 ~= R9 then PC := 212
209 [-]: JMP       212          ; PC := 212
210 [-]: SUB       R4 R8 K46    ; R4 := R8 - 1
211 [-]: JMP       214          ; PC := 214
212 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 206; R7 := R8 end
213 [-]: JMP       206          ; PC := 206
214 [-]: GETGLOBAL R10 K36      ; R10 := 0x400E7765
215 [-]: MOVE      R11 R4       ; R11 := R4
216 [-]: CALL      R10 2 2      ; R10 := R10(R11)
217 [-]: TEST      R10 1        ; if R10 then PC := 679
218 [-]: JMP       679          ; PC := 679
219 [-]: GETUPVAL  R10 U9       ; R10 := U9
220 [-]: NEWTABLE  R11 0 0      ; R11 := {}
221 [-]: SETTABLE  R10 K47 R11  ; R10["mChildNodes"] := R11
222 [-]: GETGLOBAL R10 K45      ; R10 := 0x63B09107
223 [-]: GETUPVAL  R11 U11      ; R11 := U11
224 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
225 [-]: JMP       246          ; PC := 246
226 [-]: GETTABLE  R15 R14 K24  ; R15 := R14["radialSector"]
227 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["region"]
228 [-]: EQ        0 R15 R4     ; if R15 ~= R4 then PC := 246
229 [-]: JMP       246          ; PC := 246
230 [-]: GETGLOBAL R15 K48      ; R15 := table
231 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["0xE6450C9D"]
232 [-]: GETUPVAL  R16 U9       ; R16 := U9
233 [-]: GETTABLE  R16 R16 K47  ; R16 := R16["mChildNodes"]
234 [-]: NEWTABLE  R17 0 2      ; R17 := {}
235 [-]: SETTABLE  R17 K50 R13  ; R17["NodeIndex"] := R13
236 [-]: GETGLOBAL R18 K52      ; R18 := 0x221C9700
237 [-]: GETTABLE  R19 R14 K53  ; R19 := R14["position"]
238 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["x"]
239 [-]: GETTABLE  R20 R14 K53  ; R20 := R14["position"]
240 [-]: GETTABLE  R20 R20 K55  ; R20 := R20["y"]
241 [-]: GETTABLE  R21 R14 K53  ; R21 := R14["position"]
242 [-]: GETTABLE  R21 R21 K56  ; R21 := R21["z"]
243 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
244 [-]: SETTABLE  R17 K51 R18  ; R17["InitialPosition"] := R18
245 [-]: CALL      R15 3 1      ; R15(R16,R17)
246 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 226; R12 := R13 end
247 [-]: JMP       226          ; PC := 226
248 [-]: JMP       679          ; PC := 679
249 [-]: GETUPVAL  R15 U7       ; R15 := U7
250 [-]: GETUPVAL  R16 U8       ; R16 := U8
251 [-]: GETTABLE  R16 R16 K57  ; R16 := R16["EDIT_NODES"]
252 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 291
253 [-]: JMP       291          ; PC := 291
254 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
255 [-]: GETUPVAL  R16 U3       ; R16 := U3
256 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
257 [-]: CALL      R15 2 2      ; R15 := R15(R16)
258 [-]: TEST      R15 1        ; if R15 then PC := 291
259 [-]: JMP       291          ; PC := 291
260 [-]: GETUPVAL  R15 U9       ; R15 := U9
261 [-]: GETUPVAL  R16 U3       ; R16 := U3
262 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
263 [-]: SETTABLE  R15 K58 R16  ; R15["mMovingNode"] := R16
264 [-]: GETUPVAL  R15 U9       ; R15 := U9
265 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
266 [-]: GETUPVAL  R17 U3       ; R17 := U3
267 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
268 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["position"]
269 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
270 [-]: GETUPVAL  R18 U3       ; R18 := U3
271 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
272 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["position"]
273 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
274 [-]: GETUPVAL  R19 U3       ; R19 := U3
275 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
276 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["position"]
277 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
278 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
279 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
280 [-]: GETUPVAL  R15 U9       ; R15 := U9
281 [-]: GETUPVAL  R16 U10      ; R16 := U10
282 [-]: CALL      R16 1 2      ; R16 := R16()
283 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
284 [-]: GETUPVAL  R15 U9       ; R15 := U9
285 [-]: GETUPVAL  R16 U6       ; R16 := U6
286 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
287 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
288 [-]: CALL      R16 2 2      ; R16 := R16(R17)
289 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
290 [-]: JMP       679          ; PC := 679
291 [-]: GETUPVAL  R15 U7       ; R15 := U7
292 [-]: GETUPVAL  R16 U8       ; R16 := U8
293 [-]: GETTABLE  R16 R16 K61  ; R16 := R16["EDIT_EDGES"]
294 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 372
295 [-]: JMP       372          ; PC := 372
296 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
297 [-]: GETUPVAL  R16 U3       ; R16 := U3
298 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
299 [-]: CALL      R15 2 2      ; R15 := R15(R16)
300 [-]: TEST      R15 0        ; if not R15 then PC := 307
301 [-]: JMP       307          ; PC := 307
302 [-]: GETUPVAL  R15 U9       ; R15 := U9
303 [-]: SETTABLE  R15 K62 K12  ; R15["mEdgeNode1"] := nil
304 [-]: GETUPVAL  R15 U9       ; R15 := U9
305 [-]: SETTABLE  R15 K63 K12  ; R15["mEdgeNode2"] := nil
306 [-]: JMP       364          ; PC := 364
307 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
308 [-]: GETUPVAL  R16 U9       ; R16 := U9
309 [-]: GETTABLE  R16 R16 K62  ; R16 := R16["mEdgeNode1"]
310 [-]: CALL      R15 2 2      ; R15 := R15(R16)
311 [-]: TEST      R15 1        ; if R15 then PC := 321
312 [-]: JMP       321          ; PC := 321
313 [-]: GETUPVAL  R15 U12      ; R15 := U12
314 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["mControlDown"]
315 [-]: TEST      R15 1        ; if R15 then PC := 326
316 [-]: JMP       326          ; PC := 326
317 [-]: GETUPVAL  R15 U12      ; R15 := U12
318 [-]: GETTABLE  R15 R15 K65  ; R15 := R15["mShiftDown"]
319 [-]: TEST      R15 1        ; if R15 then PC := 326
320 [-]: JMP       326          ; PC := 326
321 [-]: GETUPVAL  R15 U9       ; R15 := U9
322 [-]: GETUPVAL  R16 U3       ; R16 := U3
323 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
324 [-]: SETTABLE  R15 K62 R16  ; R15["mEdgeNode1"] := R16
325 [-]: JMP       338          ; PC := 338
326 [-]: GETUPVAL  R15 U3       ; R15 := U3
327 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["Node"]
328 [-]: GETTABLE  R15 R15 K66  ; R15 := R15["name"]
329 [-]: GETUPVAL  R16 U9       ; R16 := U9
330 [-]: GETTABLE  R16 R16 K62  ; R16 := R16["mEdgeNode1"]
331 [-]: GETTABLE  R16 R16 K66  ; R16 := R16["name"]
332 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 338
333 [-]: JMP       338          ; PC := 338
334 [-]: GETUPVAL  R15 U9       ; R15 := U9
335 [-]: GETUPVAL  R16 U3       ; R16 := U3
336 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
337 [-]: SETTABLE  R15 K63 R16  ; R15["mEdgeNode2"] := R16
338 [-]: GETUPVAL  R15 U9       ; R15 := U9
339 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
340 [-]: GETUPVAL  R17 U3       ; R17 := U3
341 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
342 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["position"]
343 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
344 [-]: GETUPVAL  R18 U3       ; R18 := U3
345 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
346 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["position"]
347 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
348 [-]: GETUPVAL  R19 U3       ; R19 := U3
349 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
350 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["position"]
351 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
352 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
353 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
354 [-]: GETUPVAL  R15 U9       ; R15 := U9
355 [-]: GETUPVAL  R16 U10      ; R16 := U10
356 [-]: CALL      R16 1 2      ; R16 := R16()
357 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
358 [-]: GETUPVAL  R15 U9       ; R15 := U9
359 [-]: GETUPVAL  R16 U6       ; R16 := U6
360 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
361 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
362 [-]: CALL      R16 2 2      ; R16 := R16(R17)
363 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
364 [-]: GETGLOBAL R15 K2       ; R15 := mMovie
365 [-]: SELF      R15 R15 K67  ; R16 := R15; R15 := R15["0x1C19D966"]
366 [-]: LOADK     R17 K68      ; R17 := "ScreenModeLabel"
367 [-]: LOADK     R18 K69      ; R18 := "text"
368 [-]: GETUPVAL  R19 U13      ; R19 := U13
369 [-]: CALL      R19 1 0      ; R19,... := R19()
370 [-]: CALL      R15 0 1      ; R15(R16,...)
371 [-]: JMP       679          ; PC := 679
372 [-]: GETUPVAL  R15 U7       ; R15 := U7
373 [-]: GETUPVAL  R16 U8       ; R16 := U8
374 [-]: GETTABLE  R16 R16 K70  ; R16 := R16["EDIT_NODE_DECOS"]
375 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 488
376 [-]: JMP       488          ; PC := 488
377 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
378 [-]: GETUPVAL  R16 U3       ; R16 := U3
379 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
380 [-]: CALL      R15 2 2      ; R15 := R15(R16)
381 [-]: TEST      R15 1        ; if R15 then PC := 488
382 [-]: JMP       488          ; PC := 488
383 [-]: GETUPVAL  R15 U3       ; R15 := U3
384 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["Node"]
385 [-]: GETTABLE  R15 R15 K71  ; R15 := R15["deco"]
386 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 396
387 [-]: JMP       396          ; PC := 396
388 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
389 [-]: GETUPVAL  R16 U3       ; R16 := U3
390 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
391 [-]: GETTABLE  R16 R16 K71  ; R16 := R16["deco"]
392 [-]: GETTABLE  R16 R16 K72  ; R16 := R16["mInstance"]
393 [-]: CALL      R15 2 2      ; R15 := R15(R16)
394 [-]: TEST      R15 0        ; if not R15 then PC := 397
395 [-]: JMP       397          ; PC := 397
396 [-]: RETURN    R0 1         ; return 
397 [-]: GETUPVAL  R15 U9       ; R15 := U9
398 [-]: GETUPVAL  R16 U3       ; R16 := U3
399 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
400 [-]: SETTABLE  R15 K58 R16  ; R15["mMovingNode"] := R16
401 [-]: GETUPVAL  R15 U9       ; R15 := U9
402 [-]: SETTABLE  R15 K73 K74  ; R15["mEditingOffset"] := "0x0"
403 [-]: GETUPVAL  R15 U9       ; R15 := U9
404 [-]: SETTABLE  R15 K75 K74  ; R15["mEditingRotation"] := "0x0"
405 [-]: GETUPVAL  R15 U9       ; R15 := U9
406 [-]: SETTABLE  R15 K76 K74  ; R15["mEditingScale"] := "0x0"
407 [-]: GETUPVAL  R15 U12      ; R15 := U12
408 [-]: GETTABLE  R15 R15 K77  ; R15 := R15["mAltDown"]
409 [-]: TEST      R15 0        ; if not R15 then PC := 426
410 [-]: JMP       426          ; PC := 426
411 [-]: GETUPVAL  R15 U9       ; R15 := U9
412 [-]: GETUPVAL  R16 U3       ; R16 := U3
413 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["Node"]
414 [-]: GETTABLE  R16 R16 K71  ; R16 := R16["deco"]
415 [-]: GETTABLE  R16 R16 K79  ; R16 := R16["mScale"]
416 [-]: SETTABLE  R15 K78 R16  ; R15["mInitialScale"] := R16
417 [-]: GETUPVAL  R15 U9       ; R15 := U9
418 [-]: GETUPVAL  R16 U6       ; R16 := U6
419 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
420 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
421 [-]: CALL      R16 2 2      ; R16 := R16(R17)
422 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
423 [-]: GETUPVAL  R15 U9       ; R15 := U9
424 [-]: SETTABLE  R15 K76 K80  ; R15["mEditingScale"] := "0x1"
425 [-]: JMP       483          ; PC := 483
426 [-]: GETUPVAL  R15 U12      ; R15 := U12
427 [-]: GETTABLE  R15 R15 K65  ; R15 := R15["mShiftDown"]
428 [-]: TEST      R15 1        ; if R15 then PC := 434
429 [-]: JMP       434          ; PC := 434
430 [-]: GETUPVAL  R15 U12      ; R15 := U12
431 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["mControlDown"]
432 [-]: TEST      R15 0        ; if not R15 then PC := 462
433 [-]: JMP       462          ; PC := 462
434 [-]: GETUPVAL  R15 U9       ; R15 := U9
435 [-]: GETGLOBAL R16 K82      ; R16 := 0x1E4F6281
436 [-]: GETUPVAL  R17 U3       ; R17 := U3
437 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
438 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["deco"]
439 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["mRotation"]
440 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["heading"]
441 [-]: GETUPVAL  R18 U3       ; R18 := U3
442 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
443 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["deco"]
444 [-]: GETTABLE  R18 R18 K83  ; R18 := R18["mRotation"]
445 [-]: GETTABLE  R18 R18 K85  ; R18 := R18["pitch"]
446 [-]: GETUPVAL  R19 U3       ; R19 := U3
447 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
448 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["deco"]
449 [-]: GETTABLE  R19 R19 K83  ; R19 := R19["mRotation"]
450 [-]: GETTABLE  R19 R19 K86  ; R19 := R19["bank"]
451 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
452 [-]: SETTABLE  R15 K81 R16  ; R15["mInitialRotation"] := R16
453 [-]: GETUPVAL  R15 U9       ; R15 := U9
454 [-]: GETUPVAL  R16 U6       ; R16 := U6
455 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["0x5328C56B"]
456 [-]: GETGLOBAL R17 K2       ; R17 := mMovie
457 [-]: CALL      R16 2 2      ; R16 := R16(R17)
458 [-]: SETTABLE  R15 K59 R16  ; R15["mInitialMousePosition"] := R16
459 [-]: GETUPVAL  R15 U9       ; R15 := U9
460 [-]: SETTABLE  R15 K75 K80  ; R15["mEditingRotation"] := "0x1"
461 [-]: JMP       483          ; PC := 483
462 [-]: GETUPVAL  R15 U9       ; R15 := U9
463 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
464 [-]: GETUPVAL  R17 U3       ; R17 := U3
465 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["Node"]
466 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["deco"]
467 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["mOffset"]
468 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
469 [-]: GETUPVAL  R18 U3       ; R18 := U3
470 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["Node"]
471 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["deco"]
472 [-]: GETTABLE  R18 R18 K87  ; R18 := R18["mOffset"]
473 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
474 [-]: GETUPVAL  R19 U3       ; R19 := U3
475 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["Node"]
476 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["deco"]
477 [-]: GETTABLE  R19 R19 K87  ; R19 := R19["mOffset"]
478 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
479 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
480 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
481 [-]: GETUPVAL  R15 U9       ; R15 := U9
482 [-]: SETTABLE  R15 K73 K80  ; R15["mEditingOffset"] := "0x1"
483 [-]: GETUPVAL  R15 U9       ; R15 := U9
484 [-]: GETUPVAL  R16 U10      ; R16 := U10
485 [-]: CALL      R16 1 2      ; R16 := R16()
486 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
487 [-]: JMP       679          ; PC := 679
488 [-]: GETUPVAL  R15 U7       ; R15 := U7
489 [-]: GETUPVAL  R16 U8       ; R16 := U8
490 [-]: GETTABLE  R16 R16 K88  ; R16 := R16["EDIT_REGION_FRAMING"]
491 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 497
492 [-]: JMP       497          ; PC := 497
493 [-]: GETUPVAL  R15 U14      ; R15 := U14
494 [-]: SELF      R15 R15 K89  ; R16 := R15; R15 := R15["0x3AEEE6C2"]
495 [-]: CALL      R15 2 1      ; R15(R16)
496 [-]: JMP       679          ; PC := 679
497 [-]: GETUPVAL  R15 U7       ; R15 := U7
498 [-]: GETUPVAL  R16 U8       ; R16 := U8
499 [-]: GETTABLE  R16 R16 K90  ; R16 := R16["EDIT_SHORTCUT_CONTROL_POINTS"]
500 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 531
501 [-]: JMP       531          ; PC := 531
502 [-]: GETGLOBAL R15 K36      ; R15 := 0x400E7765
503 [-]: GETUPVAL  R16 U9       ; R16 := U9
504 [-]: GETTABLE  R16 R16 K91  ; R16 := R16["mMovingControlPoint"]
505 [-]: CALL      R15 2 2      ; R15 := R15(R16)
506 [-]: TEST      R15 1        ; if R15 then PC := 531
507 [-]: JMP       531          ; PC := 531
508 [-]: GETUPVAL  R15 U9       ; R15 := U9
509 [-]: SETTABLE  R15 K92 K80  ; R15["mControlPointHeld"] := "0x1"
510 [-]: GETUPVAL  R15 U9       ; R15 := U9
511 [-]: GETUPVAL  R16 U10      ; R16 := U10
512 [-]: CALL      R16 1 2      ; R16 := R16()
513 [-]: SETTABLE  R15 K44 R16  ; R15["mInitialWorldCursor"] := R16
514 [-]: GETUPVAL  R15 U9       ; R15 := U9
515 [-]: GETGLOBAL R16 K52      ; R16 := 0x221C9700
516 [-]: GETUPVAL  R17 U9       ; R17 := U9
517 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["mMovingControlPoint"]
518 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["position"]
519 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["x"]
520 [-]: GETUPVAL  R18 U9       ; R18 := U9
521 [-]: GETTABLE  R18 R18 K91  ; R18 := R18["mMovingControlPoint"]
522 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["position"]
523 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["y"]
524 [-]: GETUPVAL  R19 U9       ; R19 := U9
525 [-]: GETTABLE  R19 R19 K91  ; R19 := R19["mMovingControlPoint"]
526 [-]: GETTABLE  R19 R19 K53  ; R19 := R19["position"]
527 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["z"]
528 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
529 [-]: SETTABLE  R15 K41 R16  ; R15["mInitialPosition"] := R16
530 [-]: JMP       679          ; PC := 679
531 [-]: GETUPVAL  R15 U15      ; R15 := U15
532 [-]: TEST      R15 0        ; if not R15 then PC := 643
533 [-]: JMP       643          ; PC := 643
534 [-]: GETUPVAL  R15 U16      ; R15 := U16
535 [-]: GETUPVAL  R16 U15      ; R16 := U15
536 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
537 [-]: TEST      R15 0        ; if not R15 then PC := 679
538 [-]: JMP       679          ; PC := 679
539 [-]: GETUPVAL  R15 U12      ; R15 := U12
540 [-]: GETTABLE  R15 R15 K65  ; R15 := R15["mShiftDown"]
541 [-]: TEST      R15 0        ; if not R15 then PC := 610
542 [-]: JMP       610          ; PC := 610
543 [-]: GETUPVAL  R15 U16      ; R15 := U16
544 [-]: GETUPVAL  R16 U17      ; R16 := U17
545 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
546 [-]: TEST      R15 0        ; if not R15 then PC := 679
547 [-]: JMP       679          ; PC := 679
548 [-]: GETUPVAL  R15 U10      ; R15 := U10
549 [-]: CALL      R15 1 2      ; R15 := R15()
550 [-]: GETUPVAL  R16 U16      ; R16 := U16
551 [-]: GETUPVAL  R17 U15      ; R17 := U15
552 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
553 [-]: SELF      R16 R16 K93  ; R17 := R16; R16 := R16["0x27D983EC"]
554 [-]: MOVE      R18 R15      ; R18 := R15
555 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
556 [-]: GETUPVAL  R17 U16      ; R17 := U16
557 [-]: GETUPVAL  R18 U15      ; R18 := U15
558 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
559 [-]: SELF      R17 R17 K94  ; R18 := R17; R17 := R17["0x178C31B9"]
560 [-]: CALL      R17 2 2      ; R17 := R17(R18)
561 [-]: GETUPVAL  R18 U18      ; R18 := U18
562 [-]: MOVE      R19 R17      ; R19 := R17
563 [-]: MOVE      R20 R16      ; R20 := R16
564 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
565 [-]: GETUPVAL  R19 U19      ; R19 := U19
566 [-]: EQ        0 R19 K12    ; if R19 ~= nil then PC := 570
567 [-]: JMP       570          ; PC := 570
568 [-]: MOVE      R18 R19      ; R18 := R19
569 [-]: JMP       679          ; PC := 679
570 [-]: GETUPVAL  R19 U19      ; R19 := U19
571 [-]: MOVE      R20 R18      ; R20 := R18
572 [-]: GETUPVAL  R21 U16      ; R21 := U16
573 [-]: GETUPVAL  R22 U17      ; R22 := U17
574 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
575 [-]: SELF      R21 R21 K94  ; R22 := R21; R21 := R21["0x178C31B9"]
576 [-]: CALL      R21 2 2      ; R21 := R21(R22)
577 [-]: LOADK     R22 K46      ; R22 := 1
578 [-]: LEN       R23 R21      ; R23 := # R21
579 [-]: LOADK     R24 K46      ; R24 := 1
580 [-]: FORPREP   R22 595      ; R22 -= R24; PC := 595
581 [-]: GETUPVAL  R26 U16      ; R26 := U16
582 [-]: GETUPVAL  R27 U17      ; R27 := U17
583 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
584 [-]: SELF      R26 R26 K95  ; R27 := R26; R26 := R26["0x96C67B0"]
585 [-]: GETTABLE  R28 R21 R25  ; R28 := R21[R25]
586 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
587 [-]: SETTABLE  R21 R25 R26  ; R21[R25] := R26
588 [-]: GETUPVAL  R26 U16      ; R26 := U16
589 [-]: GETUPVAL  R27 U15      ; R27 := U15
590 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
591 [-]: SELF      R26 R26 K93  ; R27 := R26; R26 := R26["0x27D983EC"]
592 [-]: GETTABLE  R28 R21 R25  ; R28 := R21[R25]
593 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
594 [-]: SETTABLE  R21 R25 R26  ; R21[R25] := R26
595 [-]: FORLOOP   R22 581      ; R22 += R24; if R22 <= R23 then begin PC := 581; R25 := R22 end
596 [-]: GETUPVAL  R26 U16      ; R26 := U16
597 [-]: GETUPVAL  R27 U15      ; R27 := U15
598 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
599 [-]: SELF      R26 R26 K96  ; R27 := R26; R26 := R26["0x75123FC4"]
600 [-]: MOVE      R28 R19      ; R28 := R19
601 [-]: MOVE      R29 R20      ; R29 := R20
602 [-]: MOVE      R30 R21      ; R30 := R21
603 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
604 [-]: GETUPVAL  R26 U16      ; R26 := U16
605 [-]: GETUPVAL  R27 U15      ; R27 := U15
606 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
607 [-]: SELF      R26 R26 K97  ; R27 := R26; R26 := R26["0x1E436B2A"]
608 [-]: CALL      R26 2 1      ; R26(R27)
609 [-]: JMP       679          ; PC := 679
610 [-]: GETUPVAL  R26 U12      ; R26 := U12
611 [-]: GETTABLE  R26 R26 K77  ; R26 := R26["mAltDown"]
612 [-]: TEST      R26 0        ; if not R26 then PC := 626
613 [-]: JMP       626          ; PC := 626
614 [-]: GETUPVAL  R26 U16      ; R26 := U16
615 [-]: GETUPVAL  R27 U15      ; R27 := U15
616 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
617 [-]: SELF      R26 R26 K98  ; R27 := R26; R26 := R26["0x5BD03F6B"]
618 [-]: NEWTABLE  R28 0 0      ; R28 := {}
619 [-]: CALL      R26 3 1      ; R26(R27,R28)
620 [-]: GETUPVAL  R26 U16      ; R26 := U16
621 [-]: GETUPVAL  R27 U15      ; R27 := U15
622 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
623 [-]: SELF      R26 R26 K97  ; R27 := R26; R26 := R26["0x1E436B2A"]
624 [-]: CALL      R26 2 1      ; R26(R27)
625 [-]: JMP       679          ; PC := 679
626 [-]: GETUPVAL  R26 U12      ; R26 := U12
627 [-]: GETTABLE  R26 R26 K64  ; R26 := R26["mControlDown"]
628 [-]: TEST      R26 1        ; if R26 then PC := 679
629 [-]: JMP       679          ; PC := 679
630 [-]: GETUPVAL  R26 U16      ; R26 := U16
631 [-]: GETUPVAL  R27 U15      ; R27 := U15
632 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
633 [-]: SELF      R26 R26 K99  ; R27 := R26; R26 := R26["0xD856231D"]
634 [-]: GETUPVAL  R28 U10      ; R28 := U10
635 [-]: CALL      R28 1 0      ; R28,... := R28()
636 [-]: CALL      R26 0 1      ; R26(R27,...)
637 [-]: GETUPVAL  R26 U16      ; R26 := U16
638 [-]: GETUPVAL  R27 U15      ; R27 := U15
639 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
640 [-]: SELF      R26 R26 K97  ; R27 := R26; R26 := R26["0x1E436B2A"]
641 [-]: CALL      R26 2 1      ; R26(R27)
642 [-]: JMP       679          ; PC := 679
643 [-]: GETUPVAL  R26 U3       ; R26 := U3
644 [-]: GETTABLE  R26 R26 K21  ; R26 := R26["Node"]
645 [-]: TEST      R26 0        ; if not R26 then PC := 658
646 [-]: JMP       658          ; PC := 658
647 [-]: CLOSURE   R26 0        ; R26 := closure(Function #153.1)
648 [-]: GETUPVAL  R0 U3        ; R0 := U3
649 [-]: GETUPVAL  R0 U21       ; R0 := U21
650 [-]: GETUPVAL  R0 U22       ; R0 := U22
651 [-]: GETUPVAL  R0 U4        ; R0 := U4
652 [-]: GETUPVAL  R0 U23       ; R0 := U23
653 [-]: GETUPVAL  R0 U6        ; R0 := U6
654 [-]: GETUPVAL  R0 U24       ; R0 := U24
655 [-]: GETUPVAL  R0 U25       ; R0 := U25
656 [-]: MOVE      R26 R20      ; R26 := R20
657 [-]: JMP       679          ; PC := 679
658 [-]: GETUPVAL  R26 U3       ; R26 := U3
659 [-]: GETTABLE  R26 R26 K22  ; R26 := R26["Region"]
660 [-]: TEST      R26 0        ; if not R26 then PC := 667
661 [-]: JMP       667          ; PC := 667
662 [-]: GETUPVAL  R26 U26      ; R26 := U26
663 [-]: GETUPVAL  R27 U3       ; R27 := U3
664 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["Region"]
665 [-]: CALL      R26 2 1      ; R26(R27)
666 [-]: JMP       679          ; PC := 679
667 [-]: GETUPVAL  R26 U27      ; R26 := U27
668 [-]: GETTABLE  R26 R26 K100 ; R26 := R26["IsVisible"]
669 [-]: TEST      R26 1        ; if R26 then PC := 679
670 [-]: JMP       679          ; PC := 679
671 [-]: GETGLOBAL R26 K34      ; R26 := Engine
672 [-]: GETTABLE  R26 R26 K101 ; R26 := R26["0xE3029851"]
673 [-]: CALL      R26 1 2      ; R26 := R26()
674 [-]: TEST      R26 1        ; if R26 then PC := 679
675 [-]: JMP       679          ; PC := 679
676 [-]: GETUPVAL  R26 U14      ; R26 := U14
677 [-]: SELF      R26 R26 K89  ; R27 := R26; R26 := R26["0x3AEEE6C2"]
678 [-]: CALL      R26 2 1      ; R26(R27)
679 [-]: MOVE      R26 R0       ; R26 := R0
680 [-]: RETURN    R26 2        ; return R26
681 [-]: RETURN    R0 1         ; return 


; Function #153.1:
;
; Name:            
; Defined at line: 7804
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 62
  4 [-]: JMP       62           ; PC := 62
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["isShortcut"]
  8 [-]: TEST      R0 0         ; if not R0 then PC := 36
  9 [-]: JMP       36           ; PC := 36
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["radialSector"]
 19 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mission"]
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["levelOverride"]
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: TEST      R0 0         ; if not R0 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 31 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["targetRegion"]
 32 [-]: ADD       R2 R2 K9     ; R2 := R2 + 1
 33 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 34 [-]: CALL      R0 2 1       ; R0(R1)
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 38 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 39 [-]: TEST      R0 1         ; if R0 then PC := 62
 40 [-]: JMP       62           ; PC := 62
 41 [-]: GETUPVAL  R0 U5        ; R0 := U5
 42 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 43 [-]: GETGLOBAL R1 K11       ; R1 := clickAndHoldSound
 44 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 45 [-]: MOVE      R0 R4        ; R0 := R4
 46 [-]: GETUPVAL  R0 U6        ; R0 := U6
 47 [-]: CALL      R0 1 1       ; R0()
 48 [-]: GETUPVAL  R0 U5        ; R0 := U5
 49 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 50 [-]: GETGLOBAL R1 K12       ; R1 := _G
 51 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["UISound_Select"]
 52 [-]: CALL      R0 2 1       ; R0(R1)
 53 [-]: GETUPVAL  R0 U5        ; R0 := U5
 54 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 55 [-]: GETGLOBAL R1 K12       ; R1 := _G
 56 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["UISound_ButtonSelect"]
 57 [-]: CALL      R0 2 1       ; R0(R1)
 58 [-]: GETUPVAL  R0 U7        ; R0 := U7
 59 [-]: GETUPVAL  R1 U0        ; R1 := U0
 60 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 61 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 62 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 7829
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 7833
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Region"]
  8 [-]: EQ        0 R0 K3      ; if R0 ~= nil then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SETTABLE  R0 K4 K5     ; R0["InSelectClick"] := "0x1"
 14 [-]: GETUPVAL  R0 U1        ; R0 := U1
 15 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 16 [-]: RETURN    R0 0         ; return R0,...
 17 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 7845
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["InSelectClick"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K0 K1     ; R0["InSelectClick"] := "0x0"
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 11 [-]: RETURN    R0 0         ; return R0,...
 12 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 7854
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xD963824A"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 7864
; #Upvalues:       17
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 1         ; if R0 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["NodeSelectionOpen"]
 10 [-]: TEST      R0 0         ; if not R0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETGLOBAL R0 K2        ; R0 := _T
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["MouseInWorldStateWindow"]
 15 [-]: TEST      R0 1         ; if R0 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R0 K2        ; R0 := _T
 18 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["MouseInChatArea"]
 19 [-]: TEST      R0 0         ; if not R0 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: TEST      R0 0         ; if not R0 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETUPVAL  R0 U4        ; R0 := U4
 26 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x3AEEE6C2"]
 27 [-]: CALL      R0 2 1       ; R0(R1)
 28 [-]: JMP       118          ; PC := 118
 29 [-]: GETUPVAL  R0 U5        ; R0 := U5
 30 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["mTargetVal"]
 31 [-]: GETUPVAL  R1 U6        ; R1 := U6
 32 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["STARTING_ZOOM"]
 33 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 118
 34 [-]: JMP       118          ; PC := 118
 35 [-]: GETUPVAL  R0 U4        ; R0 := U4
 36 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0xCE468565"]
 37 [-]: LOADK     R2 K9        ; R2 := "x"
 38 [-]: LOADK     R3 K10       ; R3 := 0.5
 39 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 40 [-]: GETUPVAL  R0 U4        ; R0 := U4
 41 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0xCE468565"]
 42 [-]: LOADK     R2 K11       ; R2 := "y"
 43 [-]: LOADK     R3 K10       ; R3 := 0.5
 44 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 45 [-]: GETUPVAL  R0 U5        ; R0 := U5
 46 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0xDB349344"]
 47 [-]: GETUPVAL  R2 U6        ; R2 := U6
 48 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["STARTING_ZOOM"]
 49 [-]: CALL      R0 3 1       ; R0(R1,R2)
 50 [-]: GETUPVAL  R0 U8        ; R0 := U8
 51 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["0xF81722A2"]
 52 [-]: GETUPVAL  R1 U9        ; R1 := U9
 53 [-]: LOADK     R2 K14       ; R2 := 1
 54 [-]: LOADK     R3 K15       ; R3 := 2
 55 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 56 [-]: MOVE      R0 R7        ; R0 := R7
 57 [-]: GETGLOBAL R0 K16       ; R0 := 0x400E7765
 58 [-]: GETUPVAL  R1 U10       ; R1 := U10
 59 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 60 [-]: TEST      R0 1         ; if R0 then PC := 87
 61 [-]: JMP       87           ; PC := 87
 62 [-]: GETGLOBAL R0 K16       ; R0 := 0x400E7765
 63 [-]: GETUPVAL  R1 U10       ; R1 := U10
 64 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["instance"]
 65 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 66 [-]: TEST      R0 1         ; if R0 then PC := 87
 67 [-]: JMP       87           ; PC := 87
 68 [-]: GETGLOBAL R0 K16       ; R0 := 0x400E7765
 69 [-]: GETUPVAL  R1 U10       ; R1 := U10
 70 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["zoomedInEffects"]
 71 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 72 [-]: TEST      R0 1         ; if R0 then PC := 87
 73 [-]: JMP       87           ; PC := 87
 74 [-]: GETUPVAL  R0 U10       ; R0 := U10
 75 [-]: GETTABLE  R0 R0 K17    ; R0 := R0["instance"]
 76 [-]: SELF      R0 R0 K19    ; R1 := R0; R0 := R0["0x9F1DC568"]
 77 [-]: GETUPVAL  R2 U10       ; R2 := U10
 78 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["zoomedInEffects"]
 79 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 80 [-]: GETGLOBAL R1 K16       ; R1 := 0x400E7765
 81 [-]: MOVE      R2 R0        ; R2 := R0
 82 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 83 [-]: TEST      R1 1         ; if R1 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: SELF      R1 R0 K20    ; R2 := R0; R1 := R0["0xD4C2743F"]
 86 [-]: CALL      R1 2 1       ; R1(R2)
 87 [-]: GETUPVAL  R1 U11       ; R1 := U11
 88 [-]: LOADNIL   R2 R2        ; R2 := nil
 89 [-]: CALL      R1 2 1       ; R1(R2)
 90 [-]: LOADNIL   R1 R1        ; R1 := nil
 91 [-]: MOVE      R1 R12       ; R1 := R12
 92 [-]: GETUPVAL  R1 U13       ; R1 := U13
 93 [-]: CALL      R1 1 1       ; R1()
 94 [-]: GETUPVAL  R1 U8        ; R1 := U8
 95 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["0x25992394"]
 96 [-]: GETGLOBAL R2 K22       ; R2 := zoomOutSound
 97 [-]: CALL      R1 2 1       ; R1(R2)
 98 [-]: GETUPVAL  R1 U14       ; R1 := U14
 99 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[1]
100 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0xDB349344"]
101 [-]: GETUPVAL  R3 U15       ; R3 := U15
102 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["red"]
103 [-]: CALL      R1 3 1       ; R1(R2,R3)
104 [-]: GETUPVAL  R1 U14       ; R1 := U14
105 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[2]
106 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0xDB349344"]
107 [-]: GETUPVAL  R3 U15       ; R3 := U15
108 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["green"]
109 [-]: CALL      R1 3 1       ; R1(R2,R3)
110 [-]: GETUPVAL  R1 U14       ; R1 := U14
111 [-]: GETTABLE  R1 R1 K25    ; R1 := R1[3]
112 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0xDB349344"]
113 [-]: GETUPVAL  R3 U15       ; R3 := U15
114 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["blue"]
115 [-]: CALL      R1 3 1       ; R1(R2,R3)
116 [-]: GETUPVAL  R1 U16       ; R1 := U16
117 [-]: CALL      R1 1 1       ; R1()
118 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 7902
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyUp_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 7906
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 7910
; #Upvalues:       12
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 149
  3 [-]: JMP       149          ; PC := 149
  4 [-]: GETGLOBAL R2 K0        ; R2 := _T
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MouseInWorldStateWindow"]
  6 [-]: TEST      R2 1         ; if R2 then PC := 149
  7 [-]: JMP       149          ; PC := 149
  8 [-]: GETGLOBAL R2 K0        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MouseInChatArea"]
 10 [-]: TEST      R2 1         ; if R2 then PC := 149
 11 [-]: JMP       149          ; PC := 149
 12 [-]: GETGLOBAL R2 K0        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["JunctionTasksUIRadialSector"]
 14 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 149
 15 [-]: JMP       149          ; PC := 149
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NodeSelectionOpen"]
 18 [-]: TEST      R2 1         ; if R2 then PC := 149
 19 [-]: JMP       149          ; PC := 149
 20 [-]: GETUPVAL  R2 U2        ; R2 := U2
 21 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["MIN_ZOOM"]
 22 [-]: GETUPVAL  R3 U2        ; R3 := U2
 23 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MAX_ZOOM"]
 24 [-]: GETUPVAL  R4 U2        ; R4 := U2
 25 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["MAX_ZOOM"]
 26 [-]: GETUPVAL  R5 U3        ; R5 := U3
 27 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mTargetVal"]
 28 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 29 [-]: DIV       R4 R4 K9     ; R4 := R4 / 2
 30 [-]: GETGLOBAL R5 K10       ; R5 := Engine
 31 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0x9490FE70"]
 32 [-]: CALL      R5 1 2       ; R5 := R5()
 33 [-]: TEST      R5 0         ; if not R5 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: DIV       R4 R4 K12    ; R4 := R4 / 10
 36 [-]: LT        0 R4 K13     ; if R4 >= 0.050000000745058 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADK     R4 K13       ; R4 := 0.050000000745058
 39 [-]: GETUPVAL  R5 U4        ; R5 := U4
 40 [-]: GETUPVAL  R6 U5        ; R6 := U5
 41 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["EDIT_REGION_FRAMING"]
 42 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: LOADK     R4 K13       ; R4 := 0.050000000745058
 45 [-]: LOADK     R2 K15       ; R2 := -999
 46 [-]: LOADK     R3 K16       ; R3 := 999
 47 [-]: GETGLOBAL R5 K17       ; R5 := 0xF595ADDE
 48 [-]: MOVE      R6 R1        ; R6 := R1
 49 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 50 [-]: LT        0 R5 K18     ; if R5 >= 0 then PC := 120
 51 [-]: JMP       120          ; PC := 120
 52 [-]: GETGLOBAL R5 K19       ; R5 := 0x400E7765
 53 [-]: GETUPVAL  R6 U6        ; R6 := U6
 54 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 55 [-]: TEST      R5 1         ; if R5 then PC := 91
 56 [-]: JMP       91           ; PC := 91
 57 [-]: GETGLOBAL R5 K19       ; R5 := 0x400E7765
 58 [-]: GETUPVAL  R6 U6        ; R6 := U6
 59 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["Region"]
 60 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 61 [-]: TEST      R5 1         ; if R5 then PC := 91
 62 [-]: JMP       91           ; PC := 91
 63 [-]: GETUPVAL  R5 U6        ; R5 := U6
 64 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["Region"]
 65 [-]: GETUPVAL  R6 U7        ; R6 := U7
 66 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 91
 67 [-]: JMP       91           ; PC := 91
 68 [-]: GETUPVAL  R5 U8        ; R5 := U8
 69 [-]: GETUPVAL  R6 U9        ; R6 := U9
 70 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["0xB57E56DF"]
 71 [-]: GETGLOBAL R7 K22       ; R7 := mMovie
 72 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7["0xF595D5E1"]
 73 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 74 [-]: DIV       R7 R7 K9     ; R7 := R7 / 2
 75 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 76 [-]: GETUPVAL  R7 U9        ; R7 := U9
 77 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["0xB57E56DF"]
 78 [-]: GETGLOBAL R8 K22       ; R8 := mMovie
 79 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0xEE069D65"]
 80 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 81 [-]: DIV       R8 R8 K9     ; R8 := R8 / 2
 82 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 83 [-]: CALL      R5 0 1       ; R5(R6,...)
 84 [-]: GETUPVAL  R5 U10       ; R5 := U10
 85 [-]: GETUPVAL  R6 U6        ; R6 := U6
 86 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["Region"]
 87 [-]: LOADNIL   R7 R7        ; R7 := nil
 88 [-]: MOVE      R8 R1        ; R8 := R1
 89 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: MOVE      R5 R3        ; R5 := R3
 92 [-]: GETGLOBAL R6 K19       ; R6 := 0x400E7765
 93 [-]: GETUPVAL  R7 U7        ; R7 := U7
 94 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 95 [-]: TEST      R6 1         ; if R6 then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: GETGLOBAL R6 K25       ; R6 := math
 98 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["0x8B011038"]
 99 [-]: MOVE      R7 R5        ; R7 := R5
100 [-]: GETUPVAL  R8 U7        ; R8 := U7
101 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["zoomedFraming"]
102 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["z"]
103 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
104 [-]: MOVE      R5 R6        ; R5 := R6
105 [-]: GETUPVAL  R6 U3        ; R6 := U3
106 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mTargetVal"]
107 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 149
108 [-]: JMP       149          ; PC := 149
109 [-]: GETUPVAL  R6 U3        ; R6 := U3
110 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6["0xDB349344"]
111 [-]: GETGLOBAL R8 K30       ; R8 := 0x6374FD98
112 [-]: GETUPVAL  R9 U3        ; R9 := U3
113 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mTargetVal"]
114 [-]: ADD       R9 R9 R4     ; R9 := R9 + R4
115 [-]: MOVE      R10 R2       ; R10 := R2
116 [-]: MOVE      R11 R5       ; R11 := R5
117 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
118 [-]: CALL      R6 0 1       ; R6(R7,...)
119 [-]: JMP       149          ; PC := 149
120 [-]: GETGLOBAL R6 K17       ; R6 := 0xF595ADDE
121 [-]: MOVE      R7 R1        ; R7 := R1
122 [-]: CALL      R6 2 2       ; R6 := R6(R7)
123 [-]: LT        0 K18 R6     ; if 0 >= R6 then PC := 149
124 [-]: JMP       149          ; PC := 149
125 [-]: GETUPVAL  R6 U3        ; R6 := U3
126 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6["0xDB349344"]
127 [-]: GETGLOBAL R8 K30       ; R8 := 0x6374FD98
128 [-]: GETUPVAL  R9 U3        ; R9 := U3
129 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mTargetVal"]
130 [-]: SUB       R9 R9 R4     ; R9 := R9 - R4
131 [-]: MOVE      R10 R2       ; R10 := R2
132 [-]: MOVE      R11 R3       ; R11 := R3
133 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
134 [-]: CALL      R6 0 1       ; R6(R7,...)
135 [-]: GETGLOBAL R6 K19       ; R6 := 0x400E7765
136 [-]: GETUPVAL  R7 U7        ; R7 := U7
137 [-]: CALL      R6 2 2       ; R6 := R6(R7)
138 [-]: TEST      R6 1         ; if R6 then PC := 149
139 [-]: JMP       149          ; PC := 149
140 [-]: GETUPVAL  R6 U3        ; R6 := U3
141 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mTargetVal"]
142 [-]: GETUPVAL  R7 U2        ; R7 := U2
143 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["ZOOM_OUT_THRESHOLD"]
144 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 149
145 [-]: JMP       149          ; PC := 149
146 [-]: GETUPVAL  R6 U11       ; R6 := U11
147 [-]: MOVE      R7 R0        ; R7 := R0
148 [-]: CALL      R6 2 1       ; R6(R7)
149 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 7949
; #Upvalues:       19
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: TEST      R3 0         ; if not R3 then PC := 373
  3 [-]: JMP       373          ; PC := 373
  4 [-]: GETGLOBAL R3 K0        ; R3 := gFlashMgr
  5 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x616DD092"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xBCEEAD81"]
  8 [-]: CALL      R5 1 0       ; R5,... := R5()
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x1AA40FBC"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: EQ        0 R4 K5      ; if R4 ~= "MessageBox" then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: EQ        0 R1 K6      ; if R1 ~= "EN_LSHIFT" then PC := 37
 21 [-]: JMP       37           ; PC := 37
 22 [-]: GETUPVAL  R4 U2        ; R4 := U2
 23 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: SETTABLE  R4 K7 R5     ; R4["mShiftDown"] := R5
 28 [-]: GETUPVAL  R4 U3        ; R4 := U3
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 31 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R4 U5        ; R4 := U5
 34 [-]: CALL      R4 1 1       ; R4()
 35 [-]: GETUPVAL  R4 U6        ; R4 := U6
 36 [-]: CALL      R4 1 1       ; R4()
 37 [-]: EQ        0 R1 K10     ; if R1 ~= "EN_LCONTROL" then PC := 54
 38 [-]: JMP       54           ; PC := 54
 39 [-]: GETUPVAL  R4 U2        ; R4 := U2
 40 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: SETTABLE  R4 K11 R5    ; R4["mControlDown"] := R5
 45 [-]: GETUPVAL  R4 U3        ; R4 := U3
 46 [-]: GETUPVAL  R5 U4        ; R5 := U4
 47 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 48 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETUPVAL  R4 U5        ; R4 := U5
 51 [-]: CALL      R4 1 1       ; R4()
 52 [-]: GETUPVAL  R4 U6        ; R4 := U6
 53 [-]: CALL      R4 1 1       ; R4()
 54 [-]: EQ        0 R1 K12     ; if R1 ~= "EN_LALT" then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: MOVE      R5 R1        ; R5 := R1
 61 [-]: SETTABLE  R4 K13 R5    ; R4["mAltDown"] := R5
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETUPVAL  R5 U4        ; R5 := U4
 64 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 65 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: GETUPVAL  R4 U5        ; R4 := U5
 68 [-]: CALL      R4 1 1       ; R4()
 69 [-]: GETUPVAL  R4 U6        ; R4 := U6
 70 [-]: CALL      R4 1 1       ; R4()
 71 [-]: EQ        0 R1 K14     ; if R1 ~= "EN_E" then PC := 88
 72 [-]: JMP       88           ; PC := 88
 73 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETUPVAL  R4 U7        ; R4 := U7
 76 [-]: GETUPVAL  R5 U1        ; R5 := U1
 77 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["0x7C43280B"]
 78 [-]: GETUPVAL  R6 U3        ; R6 := U3
 79 [-]: GETUPVAL  R7 U1        ; R7 := U1
 80 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["INCREMENT"]
 81 [-]: LOADK     R8 K17       ; R8 := 1
 82 [-]: GETUPVAL  R9 U4        ; R9 := U4
 83 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["MAX_VALUE"]
 84 [-]: SUB       R9 R9 K17    ; R9 := R9 - 1
 85 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 86 [-]: CALL      R4 0 1       ; R4(R5,...)
 87 [-]: JMP       103          ; PC := 103
 88 [-]: EQ        0 R1 K19     ; if R1 ~= "EN_S" then PC := 103
 89 [-]: JMP       103          ; PC := 103
 90 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 103
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 93 [-]: GETUPVAL  R5 U8        ; R5 := U8
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: TEST      R4 1         ; if R4 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETUPVAL  R4 U8        ; R4 := U8
 98 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xEF081AD8"]
 99 [-]: CALL      R4 2 1       ; R4(R5)
100 [-]: GETGLOBAL R4 K21       ; R4 := 0xE40A882D
101 [-]: LOADK     R5 K22       ; R5 := "SolarMap Serialized"
102 [-]: CALL      R4 2 1       ; R4(R5)
103 [-]: EQ        0 R1 K23     ; if R1 ~= "EN_A" then PC := 171
104 [-]: JMP       171          ; PC := 171
105 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 171
106 [-]: JMP       171          ; PC := 171
107 [-]: GETUPVAL  R4 U3        ; R4 := U3
108 [-]: GETUPVAL  R5 U4        ; R5 := U4
109 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
110 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 171
111 [-]: JMP       171          ; PC := 171
112 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
113 [-]: GETUPVAL  R5 U9        ; R5 := U9
114 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
115 [-]: CALL      R4 2 2       ; R4 := R4(R5)
116 [-]: TEST      R4 1         ; if R4 then PC := 286
117 [-]: JMP       286          ; PC := 286
118 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
119 [-]: GETUPVAL  R5 U9        ; R5 := U9
120 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
121 [-]: CALL      R4 2 2       ; R4 := R4(R5)
122 [-]: TEST      R4 1         ; if R4 then PC := 286
123 [-]: JMP       286          ; PC := 286
124 [-]: GETUPVAL  R4 U10       ; R4 := U10
125 [-]: GETUPVAL  R5 U10       ; R5 := U10
126 [-]: LEN       R5 R5        ; R5 := # R5
127 [-]: NEWTABLE  R6 0 3       ; R6 := {}
128 [-]: GETUPVAL  R7 U9        ; R7 := U9
129 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
130 [-]: SETTABLE  R6 K27 R7    ; R6["NodeA"] := R7
131 [-]: GETUPVAL  R7 U9        ; R7 := U9
132 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
133 [-]: SETTABLE  R6 K28 R7    ; R6["NodeB"] := R7
134 [-]: GETUPVAL  R7 U9        ; R7 := U9
135 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
136 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
137 [-]: TEST      R7 0         ; if not R7 then PC := 142
138 [-]: JMP       142          ; PC := 142
139 [-]: GETUPVAL  R7 U9        ; R7 := U9
140 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
141 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
142 [-]: SETTABLE  R6 K29 R7    ; R6["IsShortcut"] := R7
143 [-]: SETTABLE  R4 R5 R6     ; R4[R5] := R6
144 [-]: GETUPVAL  R4 U8        ; R4 := U8
145 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x2337A98F"]
146 [-]: GETUPVAL  R6 U9        ; R6 := U9
147 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mEdgeNode1"]
148 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
149 [-]: GETUPVAL  R7 U9        ; R7 := U9
150 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
151 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["radialSector"]
152 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
153 [-]: GETUPVAL  R4 U8        ; R4 := U8
154 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x113DAAED"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: MOVE      R4 R11       ; R4 := R11
157 [-]: GETUPVAL  R4 U9        ; R4 := U9
158 [-]: SETTABLE  R4 K25 K34   ; R4["mEdgeNode1"] := nil
159 [-]: GETUPVAL  R4 U9        ; R4 := U9
160 [-]: SETTABLE  R4 K26 K34   ; R4["mEdgeNode2"] := nil
161 [-]: GETGLOBAL R4 K35       ; R4 := mMovie
162 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x1C19D966"]
163 [-]: LOADK     R6 K37       ; R6 := "ScreenModeLabel"
164 [-]: LOADK     R7 K38       ; R7 := "text"
165 [-]: GETUPVAL  R8 U12       ; R8 := U12
166 [-]: CALL      R8 1 0       ; R8,... := R8()
167 [-]: CALL      R4 0 1       ; R4(R5,...)
168 [-]: GETUPVAL  R4 U13       ; R4 := U13
169 [-]: CALL      R4 1 1       ; R4()
170 [-]: JMP       286          ; PC := 286
171 [-]: EQ        0 R1 K39     ; if R1 ~= "EN_D" then PC := 269
172 [-]: JMP       269          ; PC := 269
173 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 269
174 [-]: JMP       269          ; PC := 269
175 [-]: GETUPVAL  R4 U3        ; R4 := U3
176 [-]: GETUPVAL  R5 U4        ; R5 := U4
177 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 269
179 [-]: JMP       269          ; PC := 269
180 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
181 [-]: GETUPVAL  R5 U9        ; R5 := U9
182 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
183 [-]: CALL      R4 2 2       ; R4 := R4(R5)
184 [-]: TEST      R4 1         ; if R4 then PC := 286
185 [-]: JMP       286          ; PC := 286
186 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
187 [-]: GETUPVAL  R5 U9        ; R5 := U9
188 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
189 [-]: CALL      R4 2 2       ; R4 := R4(R5)
190 [-]: TEST      R4 1         ; if R4 then PC := 286
191 [-]: JMP       286          ; PC := 286
192 [-]: LOADK     R4 K17       ; R4 := 1
193 [-]: GETUPVAL  R5 U10       ; R5 := U10
194 [-]: LEN       R5 R5        ; R5 := # R5
195 [-]: LOADK     R6 K17       ; R6 := 1
196 [-]: FORPREP   R4 241       ; R4 -= R6; PC := 241
197 [-]: GETUPVAL  R8 U10       ; R8 := U10
198 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
199 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
200 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
201 [-]: GETUPVAL  R10 U9       ; R10 := U9
202 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
203 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
204 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
205 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
208 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
209 [-]: GETUPVAL  R10 U9       ; R10 := U9
210 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
211 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
212 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
213 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 231
214 [-]: JMP       231          ; PC := 231
215 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
216 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
217 [-]: GETUPVAL  R10 U9       ; R10 := U9
218 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
219 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
220 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
221 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
222 [-]: JMP       241          ; PC := 241
223 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
224 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
225 [-]: GETUPVAL  R10 U9       ; R10 := U9
226 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
227 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
228 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
229 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
230 [-]: JMP       241          ; PC := 241
231 [-]: GETGLOBAL R9 K41       ; R9 := gBackgroundRegion
232 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9["0x9B0A3887"]
233 [-]: GETTABLE  R11 R8 K43   ; R11 := R8["Instance"]
234 [-]: CALL      R9 3 1       ; R9(R10,R11)
235 [-]: GETGLOBAL R9 K44       ; R9 := table
236 [-]: GETTABLE  R9 R9 K45    ; R9 := R9["0xCDB1FD5E"]
237 [-]: GETUPVAL  R10 U10      ; R10 := U10
238 [-]: MOVE      R11 R7       ; R11 := R7
239 [-]: CALL      R9 3 1       ; R9(R10,R11)
240 [-]: JMP       242          ; PC := 242
241 [-]: FORLOOP   R4 197       ; R4 += R6; if R4 <= R5 then begin PC := 197; R7 := R4 end
242 [-]: GETUPVAL  R9 U8        ; R9 := U8
243 [-]: SELF      R9 R9 K46    ; R10 := R9; R9 := R9["0x1EE7613D"]
244 [-]: GETUPVAL  R11 U9       ; R11 := U9
245 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["mEdgeNode1"]
246 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["radialSector"]
247 [-]: GETUPVAL  R12 U9       ; R12 := U9
248 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["mEdgeNode2"]
249 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["radialSector"]
250 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
251 [-]: GETUPVAL  R9 U8        ; R9 := U8
252 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9["0x113DAAED"]
253 [-]: CALL      R9 2 2       ; R9 := R9(R10)
254 [-]: MOVE      R9 R11       ; R9 := R11
255 [-]: GETUPVAL  R9 U9        ; R9 := U9
256 [-]: SETTABLE  R9 K25 K34   ; R9["mEdgeNode1"] := nil
257 [-]: GETUPVAL  R9 U9        ; R9 := U9
258 [-]: SETTABLE  R9 K26 K34   ; R9["mEdgeNode2"] := nil
259 [-]: GETGLOBAL R9 K35       ; R9 := mMovie
260 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
261 [-]: LOADK     R11 K37      ; R11 := "ScreenModeLabel"
262 [-]: LOADK     R12 K38      ; R12 := "text"
263 [-]: GETUPVAL  R13 U12      ; R13 := U12
264 [-]: CALL      R13 1 0      ; R13,... := R13()
265 [-]: CALL      R9 0 1       ; R9(R10,...)
266 [-]: GETUPVAL  R9 U13       ; R9 := U13
267 [-]: CALL      R9 1 1       ; R9()
268 [-]: JMP       286          ; PC := 286
269 [-]: EQ        0 R1 K47     ; if R1 ~= "EN_C" then PC := 286
270 [-]: JMP       286          ; PC := 286
271 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 286
272 [-]: JMP       286          ; PC := 286
273 [-]: GETUPVAL  R9 U3        ; R9 := U3
274 [-]: GETUPVAL  R10 U4       ; R10 := U4
275 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["EDIT_EDGES"]
276 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 286
277 [-]: JMP       286          ; PC := 286
278 [-]: GETGLOBAL R9 K3        ; R9 := 0x400E7765
279 [-]: GETUPVAL  R10 U9       ; R10 := U9
280 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
281 [-]: CALL      R9 2 2       ; R9 := R9(R10)
282 [-]: TEST      R9 1         ; if R9 then PC := 286
283 [-]: JMP       286          ; PC := 286
284 [-]: GETUPVAL  R9 U13       ; R9 := U13
285 [-]: CALL      R9 1 1       ; R9()
286 [-]: EQ        0 R1 K48     ; if R1 ~= "EN_R" then PC := 315
287 [-]: JMP       315          ; PC := 315
288 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 315
289 [-]: JMP       315          ; PC := 315
290 [-]: GETUPVAL  R9 U3        ; R9 := U3
291 [-]: GETUPVAL  R10 U4       ; R10 := U4
292 [-]: GETTABLE  R10 R10 K49  ; R10 := R10["EDIT_REGION_FRAMING"]
293 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 315
294 [-]: JMP       315          ; PC := 315
295 [-]: GETUPVAL  R9 U9        ; R9 := U9
296 [-]: GETUPVAL  R10 U1       ; R10 := U1
297 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0x7C43280B"]
298 [-]: GETUPVAL  R11 U9       ; R11 := U9
299 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
300 [-]: GETUPVAL  R12 U1       ; R12 := U1
301 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["INCREMENT"]
302 [-]: LOADK     R13 K17      ; R13 := 1
303 [-]: GETUPVAL  R14 U14      ; R14 := U14
304 [-]: LEN       R14 R14      ; R14 := # R14
305 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
306 [-]: SETTABLE  R9 K50 R10   ; R9["mFramingRegion"] := R10
307 [-]: GETUPVAL  R9 U15       ; R9 := U15
308 [-]: GETUPVAL  R10 U14      ; R10 := U14
309 [-]: GETUPVAL  R11 U9       ; R11 := U9
310 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
311 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
312 [-]: CALL      R9 2 1       ; R9(R10)
313 [-]: GETUPVAL  R9 U16       ; R9 := U16
314 [-]: CALL      R9 1 1       ; R9()
315 [-]: EQ        0 R1 K51     ; if R1 ~= "EN_L" then PC := 329
316 [-]: JMP       329          ; PC := 329
317 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 329
318 [-]: JMP       329          ; PC := 329
319 [-]: GETUPVAL  R9 U17       ; R9 := U17
320 [-]: MOVE      R9 R9        ; R9 := R9
321 [-]: MOVE      R9 R17       ; R9 := R17
322 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
323 [-]: LOADK     R10 K52      ; R10 := "Visible Tags:"
324 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
325 [-]: GETUPVAL  R12 U17      ; R12 := U17
326 [-]: CALL      R11 2 2      ; R11 := R11(R12)
327 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
328 [-]: CALL      R9 2 1       ; R9(R10)
329 [-]: EQ        0 R1 K54     ; if R1 ~= "EN_U" then PC := 373
330 [-]: JMP       373          ; PC := 373
331 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 373
332 [-]: JMP       373          ; PC := 373
333 [-]: GETGLOBAL R9 K55       ; R9 := _T
334 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
335 [-]: EQ        0 R9 K34     ; if R9 ~= nil then PC := 339
336 [-]: JMP       339          ; PC := 339
337 [-]: GETGLOBAL R9 K55       ; R9 := _T
338 [-]: SETTABLE  R9 K56 K57   ; R9["MAP_HideExtraUI"] := "0x0"
339 [-]: GETGLOBAL R9 K55       ; R9 := _T
340 [-]: GETGLOBAL R10 K55      ; R10 := _T
341 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["MAP_HideExtraUI"]
342 [-]: MOVE      R10 R10      ; R10 := R10
343 [-]: SETTABLE  R9 K56 R10   ; R9["MAP_HideExtraUI"] := R10
344 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
345 [-]: LOADK     R10 K58      ; R10 := "Visible Extra UI:"
346 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
347 [-]: GETGLOBAL R12 K55      ; R12 := _T
348 [-]: GETTABLE  R12 R12 K56  ; R12 := R12["MAP_HideExtraUI"]
349 [-]: CALL      R11 2 2      ; R11 := R11(R12)
350 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
351 [-]: CALL      R9 2 1       ; R9(R10)
352 [-]: GETGLOBAL R9 K55       ; R9 := _T
353 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
354 [-]: TEST      R9 0         ; if not R9 then PC := 360
355 [-]: JMP       360          ; PC := 360
356 [-]: GETGLOBAL R9 K55       ; R9 := _T
357 [-]: GETTABLE  R9 R9 K59    ; R9 := R9["0x45CBC39B"]
358 [-]: CALL      R9 1 1       ; R9()
359 [-]: JMP       364          ; PC := 364
360 [-]: GETGLOBAL R9 K55       ; R9 := _T
361 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["0x8ED0D55D"]
362 [-]: MOVE      R10 R1       ; R10 := R1
363 [-]: CALL      R9 2 1       ; R9(R10)
364 [-]: GETUPVAL  R9 U18       ; R9 := U18
365 [-]: GETTABLE  R9 R9 K61    ; R9 := R9["Movie"]
366 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
367 [-]: LOADK     R11 K62      ; R11 := "_root"
368 [-]: LOADK     R12 K63      ; R12 := "_visible"
369 [-]: GETGLOBAL R13 K55      ; R13 := _T
370 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["MAP_HideExtraUI"]
371 [-]: MOVE      R13 R13      ; R13 := R13
372 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
373 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 8055
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 8059
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 8063
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        1 R1 R2      ; if R1 <= R2 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["NodeSelectionOpen"]
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 16 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 21
 20 [-]: JMP       21           ; PC := 21
 21 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 8074
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "_root"
  4 [-]: LOADK     R4 K3        ; R4 := "noMenuSelection"
  5 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: SETTABLE  R1 K5 R2     ; R1["Open"] := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 8079
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: SETTABLE  R1 K0 R2     ; R1["DioOpen"] := R2
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 8085
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 1       ; R4()
  3 [-]: GETUPVAL  R4 U1        ; R4 := U1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 1       ; R4(R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 8091
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x61494587"]
  3 [-]: LOADK     R2 K1        ; R2 := 0.050000000745058
  4 [-]: CLOSURE   R3 0         ; R3 := closure(Function #169.1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #169.1:
;
; Name:            
; Defined at line: 8093
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["forceUpdate3dElements"] := "0x1"
  3 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 8098
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 8102
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 R0     ; R1["mTrigger"] := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 8107
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 8111
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0xECFDD17
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       63           ; PC := 63
  9 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
 10 [-]: TEST      R5 1         ; if R5 then PC := 63
 11 [-]: JMP       63           ; PC := 63
 12 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["isJunction"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 63
 14 [-]: JMP       63           ; PC := 63
 15 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["special"]
 16 [-]: TEST      R5 1         ; if R5 then PC := 58
 17 [-]: JMP       58           ; PC := 58
 18 [-]: GETGLOBAL R5 K4        ; R5 := _T
 19 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["CachedSortieMissions"]
 20 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 21 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 22 [-]: JMP       58           ; PC := 58
 23 [-]: GETGLOBAL R5 K4        ; R5 := _T
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["CachedActiveMissions"]
 25 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 26 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 27 [-]: JMP       58           ; PC := 58
 28 [-]: GETGLOBAL R5 K4        ; R5 := _T
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["CachedAlerts"]
 30 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 31 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 32 [-]: JMP       58           ; PC := 58
 33 [-]: GETGLOBAL R5 K4        ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedInvasionInfo"]
 35 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 36 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 37 [-]: JMP       58           ; PC := 58
 38 [-]: GETGLOBAL R5 K10       ; R5 := _G
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["CachedGoalInfo"]
 40 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 41 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETGLOBAL R5 K10       ; R5 := _G
 44 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MergedGoalNodes"]
 45 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 46 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R5 K4        ; R5 := _T
 49 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedSyndicateMissions"]
 50 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 51 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETGLOBAL R5 K4        ; R5 := _T
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["CachedSkullNodes"]
 55 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 56 [-]: EQ        1 R5 K6      ; if R5 == nil then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R5 U3        ; R5 := U3
 59 [-]: MOVE      R6 R4        ; R6 := R4
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K15       ; R5 := 0x1BF588C6
 62 [-]: CALL      R5 1 1       ; R5()
 63 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 64 [-]: JMP       9            ; PC := 9
 65 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 8135
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
  9 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 107
 10 [-]: JMP       107          ; PC := 107
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["TransitioningOut"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 107
 14 [-]: JMP       107          ; PC := 107
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Timer"]
 17 [-]: EQ        1 R1 K6      ; if R1 == -1 then PC := 107
 18 [-]: JMP       107          ; PC := 107
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: SETTABLE  R1 K4 K7     ; R1["TransitioningOut"] := "0x1"
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: MOVE      R1 R1        ; R1 := R1
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETUPVAL  R5 U3        ; R5 := U3
 29 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 30 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["x"]
 31 [-]: SETTABLE  R4 K8 R5     ; R4["InitialX"] := R5
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETUPVAL  R5 U3        ; R5 := U3
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 35 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["y"]
 36 [-]: SETTABLE  R4 K11 R5    ; R4["InitialY"] := R5
 37 [-]: GETUPVAL  R4 U0        ; R4 := U0
 38 [-]: GETUPVAL  R5 U4        ; R5 := U4
 39 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mCurVal"]
 40 [-]: SETTABLE  R4 K13 R5    ; R4["InitialZoom"] := R5
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: SETTABLE  R4 K15 R1    ; R4["TargetX"] := R1
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: SETTABLE  R4 K16 R2    ; R4["TargetY"] := R2
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: SETTABLE  R4 K17 R3    ; R4["TargetZoom"] := R3
 47 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 48 [-]: GETUPVAL  R5 U5        ; R5 := U5
 49 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: TEST      R4 1         ; if R4 then PC := 64
 52 [-]: JMP       64           ; PC := 64
 53 [-]: GETUPVAL  R4 U0        ; R4 := U0
 54 [-]: GETUPVAL  R5 U5        ; R5 := U5
 55 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
 56 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5["0xF8AE9518"]
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: SETTABLE  R4 K19 R5    ; R4["InitialFOV"] := R5
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETUPVAL  R5 U0        ; R5 := U0
 61 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["InitialFOV"]
 62 [-]: DIV       R5 R5 K22    ; R5 := R5 / 4
 63 [-]: SETTABLE  R4 K21 R5    ; R4["TargetFOV"] := R5
 64 [-]: GETUPVAL  R4 U6        ; R4 := U6
 65 [-]: SETTABLE  R4 K23 K7    ; R4["Locked"] := "0x1"
 66 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 67 [-]: GETUPVAL  R5 U7        ; R5 := U7
 68 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 69 [-]: TEST      R4 1         ; if R4 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETUPVAL  R4 U6        ; R4 := U6
 72 [-]: GETUPVAL  R5 U7        ; R5 := U7
 73 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0x6DA72501"]
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: SETTABLE  R4 K24 R5    ; R4["Previous"] := R5
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETUPVAL  R4 U6        ; R4 := U6
 78 [-]: GETGLOBAL R5 K26       ; R5 := 0x221C9700
 79 [-]: CALL      R5 1 2       ; R5 := R5()
 80 [-]: SETTABLE  R4 K24 R5    ; R4["Previous"] := R5
 81 [-]: GETUPVAL  R4 U6        ; R4 := U6
 82 [-]: GETUPVAL  R5 U6        ; R5 := U6
 83 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Previous"]
 84 [-]: GETGLOBAL R6 K26       ; R6 := 0x221C9700
 85 [-]: LOADK     R7 K28       ; R7 := 0
 86 [-]: LOADK     R8 K28       ; R8 := 0
 87 [-]: GETUPVAL  R9 U0        ; R9 := U0
 88 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["TargetZoom"]
 89 [-]: GETUPVAL  R10 U0       ; R10 := U0
 90 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["InitialZoom"]
 91 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
 92 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 93 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 94 [-]: SETTABLE  R4 K27 R5    ; R4["Target"] := R5
 95 [-]: GETUPVAL  R4 U6        ; R4 := U6
 96 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["Prop"]
 97 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4["0x5A7A6B1"]
 98 [-]: LOADK     R6 K31       ; R6 := 1
 99 [-]: CALL      R4 3 1       ; R4(R5,R6)
100 [-]: GETUPVAL  R4 U6        ; R4 := U6
101 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["Prop"]
102 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0xDB349344"]
103 [-]: LOADK     R6 K31       ; R6 := 1
104 [-]: CALL      R4 3 1       ; R4(R5,R6)
105 [-]: GETUPVAL  R4 U6        ; R4 := U6
106 [-]: SETTABLE  R4 K33 K6    ; R4["Region"] := -1
107 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
108 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0x1C19D966"]
109 [-]: LOADK     R6 K35       ; R6 := "_root"
110 [-]: LOADK     R7 K36       ; R7 := "_alpha"
111 [-]: MUL       R8 R0 K37    ; R8 := R0 * 100
112 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
113 [-]: SUB       R4 K31 R0    ; R4 := 1 - R0
114 [-]: GETUPVAL  R5 U0        ; R5 := U0
115 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["InitialZoom"]
116 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 122
117 [-]: JMP       122          ; PC := 122
118 [-]: GETUPVAL  R5 U0        ; R5 := U0
119 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["TargetZoom"]
120 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: MOVE      R5 R0        ; R5 := R0
123 [-]: MOVE      R5 R1        ; R5 := R1
124 [-]: GETUPVAL  R6 U0        ; R6 := U0
125 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["InitialFOV"]
126 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 132
127 [-]: JMP       132          ; PC := 132
128 [-]: GETUPVAL  R6 U0        ; R6 := U0
129 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["TargetFOV"]
130 [-]: EQ        0 R6 K3      ; if R6 ~= nil then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: MOVE      R6 R0        ; R6 := R0
133 [-]: MOVE      R6 R1        ; R6 := R1
134 [-]: TEST      R5 1         ; if R5 then PC := 138
135 [-]: JMP       138          ; PC := 138
136 [-]: TEST      R6 0         ; if not R6 then PC := 192
137 [-]: JMP       192          ; PC := 192
138 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
139 [-]: GETUPVAL  R8 U5        ; R8 := U5
140 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["cameraSpot"]
141 [-]: CALL      R7 2 2       ; R7 := R7(R8)
142 [-]: TEST      R7 1         ; if R7 then PC := 158
143 [-]: JMP       158          ; PC := 158
144 [-]: TEST      R6 0         ; if not R6 then PC := 158
145 [-]: JMP       158          ; PC := 158
146 [-]: GETUPVAL  R7 U5        ; R7 := U5
147 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["cameraSpot"]
148 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7["0x95E6F2AA"]
149 [-]: GETGLOBAL R9 K39       ; R9 := 0x93034B55
150 [-]: GETUPVAL  R10 U0       ; R10 := U0
151 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["InitialFOV"]
152 [-]: GETUPVAL  R11 U0       ; R11 := U0
153 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["TargetFOV"]
154 [-]: MOVE      R12 R4       ; R12 := R4
155 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
156 [-]: CALL      R7 0 1       ; R7(R8,...)
157 [-]: JMP       170          ; PC := 170
158 [-]: TEST      R5 0         ; if not R5 then PC := 170
159 [-]: JMP       170          ; PC := 170
160 [-]: GETUPVAL  R7 U4        ; R7 := U4
161 [-]: SELF      R7 R7 K30    ; R8 := R7; R7 := R7["0x5A7A6B1"]
162 [-]: GETGLOBAL R9 K39       ; R9 := 0x93034B55
163 [-]: GETUPVAL  R10 U0       ; R10 := U0
164 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["InitialZoom"]
165 [-]: GETUPVAL  R11 U0       ; R11 := U0
166 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["TargetZoom"]
167 [-]: MOVE      R12 R4       ; R12 := R4
168 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
169 [-]: CALL      R7 0 1       ; R7(R8,...)
170 [-]: GETUPVAL  R7 U3        ; R7 := U3
171 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0xCE468565"]
172 [-]: LOADK     R9 K10       ; R9 := "x"
173 [-]: GETGLOBAL R10 K39      ; R10 := 0x93034B55
174 [-]: GETUPVAL  R11 U0       ; R11 := U0
175 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["InitialX"]
176 [-]: GETUPVAL  R12 U0       ; R12 := U0
177 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["TargetX"]
178 [-]: MOVE      R13 R4       ; R13 := R4
179 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
180 [-]: CALL      R7 0 1       ; R7(R8,...)
181 [-]: GETUPVAL  R7 U3        ; R7 := U3
182 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0xCE468565"]
183 [-]: LOADK     R9 K12       ; R9 := "y"
184 [-]: GETGLOBAL R10 K39      ; R10 := 0x93034B55
185 [-]: GETUPVAL  R11 U0       ; R11 := U0
186 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["InitialY"]
187 [-]: GETUPVAL  R12 U0       ; R12 := U0
188 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["TargetY"]
189 [-]: MOVE      R13 R4       ; R13 := R4
190 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
191 [-]: CALL      R7 0 1       ; R7(R8,...)
192 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
193 [-]: GETUPVAL  R8 U7        ; R8 := U7
194 [-]: CALL      R7 2 2       ; R7 := R7(R8)
195 [-]: TEST      R7 1         ; if R7 then PC := 215
196 [-]: JMP       215          ; PC := 215
197 [-]: GETUPVAL  R7 U6        ; R7 := U6
198 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["Previous"]
199 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 215
200 [-]: JMP       215          ; PC := 215
201 [-]: GETUPVAL  R7 U6        ; R7 := U6
202 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["Target"]
203 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 215
204 [-]: JMP       215          ; PC := 215
205 [-]: GETUPVAL  R7 U7        ; R7 := U7
206 [-]: SELF      R7 R7 K41    ; R8 := R7; R7 := R7["0xEC183DDC"]
207 [-]: GETGLOBAL R9 K42       ; R9 := 0xE0C881B4
208 [-]: GETUPVAL  R10 U6       ; R10 := U6
209 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["Previous"]
210 [-]: GETUPVAL  R11 U6       ; R11 := U6
211 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["Target"]
212 [-]: MOVE      R12 R4       ; R12 := R4
213 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
214 [-]: CALL      R7 0 1       ; R7(R8,...)
215 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 8191
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 8198
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 8202
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 49
  5 [-]: JMP       49           ; PC := 49
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 15 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x80B14403"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x80B14403"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8B598ED4"]
 24 [-]: GETGLOBAL R3 K5        ; R3 := 0x2C00D429
 25 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: TEST      R1 1         ; if R1 then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xB7C97379"]
 32 [-]: GETGLOBAL R3 K8        ; R3 := 0xEC274B1A
 33 [-]: LOADK     R4 K9        ; R4 := "Player"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0x80B14403"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 41 [-]: GETGLOBAL R2 K11       ; R2 := _G
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["UISound_ButtonSelect"]
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETUPVAL  R1 U1        ; R1 := U1
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 46 [-]: GETGLOBAL R2 K11       ; R2 := _G
 47 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UISound_DialogOpen"]
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 8217
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 8222
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 8226
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x42C0C1F"]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 8230
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["NodeMissionList"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["NodeMissionList"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 8236
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["NodeMissionList"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["NodeMissionList"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 8242
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["NodeMissionList"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["NodeMissionList"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BC31182"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 8248
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SelectorList"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SelectorList"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 8254
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SelectorList"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SelectorList"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 8260
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SelectorList"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SelectorList"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BC31182"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 8266
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xD5274B5D"]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ExpansionTimerId"]
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x61494587"]
  9 [-]: LOADK     R3 K3        ; R3 := 0.10000000149012
 10 [-]: CLOSURE   R4 0         ; R4 := closure(Function #187.1)
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SETTABLE  R0 K1 R1     ; R0["ExpansionTimerId"] := R1
 14 [-]: RETURN    R0 1         ; return 


; Function #187.1:
;
; Name:            
; Defined at line: 8268
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 8271
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xD5274B5D"]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ExpansionTimerId"]
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x61494587"]
  9 [-]: LOADK     R3 K3        ; R3 := 0.10000000149012
 10 [-]: CLOSURE   R4 0         ; R4 := closure(Function #188.1)
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SETTABLE  R0 K1 R1     ; R0["ExpansionTimerId"] := R1
 14 [-]: RETURN    R0 1         ; return 


; Function #188.1:
;
; Name:            
; Defined at line: 8273
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 8276
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["NodeSelectionOpen"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["NodeMissionList"]
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x625791A8"]
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 1       ; R0()
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 8284
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        0 R0 K0      ; if R0 ~= 0 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: LOADK     R0 K1        ; R0 := 1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADK     R0 K0        ; R0 := 0
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: CALL      R0 1 1       ; R0()
 13 [-]: RETURN    R0 1         ; return 


