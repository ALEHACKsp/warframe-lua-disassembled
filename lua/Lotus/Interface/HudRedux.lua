code size: 1105
code size: 3
code size: 2
code size: 23
code size: 17
code size: 109
code size: 24
code size: 3
code size: 95
code size: 40
code size: 14
code size: 428
code size: 61
code size: 145
code size: 41
code size: 474
code size: 31
code size: 13
code size: 35
code size: 27
code size: 24
code size: 9
code size: 25
code size: 17
code size: 14
code size: 61
code size: 28
code size: 27
code size: 56
code size: 19
code size: 8
code size: 80
code size: 33
code size: 19
code size: 8
code size: 29
code size: 8
code size: 19
code size: 15
code size: 19
code size: 8
code size: 21
code size: 73
code size: 19
code size: 8
code size: 19
code size: 8
code size: 114
code size: 30
code size: 63
code size: 14
code size: 31
code size: 27
code size: 28
code size: 26
code size: 100
code size: 59
code size: 45
code size: 20
code size: 25
code size: 67
code size: 40
code size: 181
code size: 20
code size: 40
code size: 14
code size: 14
code size: 22
code size: 16
code size: 50
code size: 15
code size: 7
code size: 96
code size: 21
code size: 16
code size: 25
code size: 60
code size: 23
code size: 57
code size: 23
code size: 57
code size: 28
code size: 8
code size: 28
code size: 8
code size: 19
code size: 22
code size: 19
code size: 22
code size: 28
code size: 62
code size: 19
code size: 41
code size: 91
code size: 28
code size: 87
code size: 60
code size: 21
code size: 35
code size: 50
code size: 82
code size: 11
code size: 42
code size: 28
code size: 26
code size: 84
code size: 11
code size: 24
code size: 80
code size: 20
code size: 38
code size: 9
code size: 64
code size: 37
code size: 196
code size: 55
code size: 12
code size: 9
code size: 11
code size: 19
code size: 15
code size: 43
code size: 10
code size: 15
code size: 7
code size: 5
code size: 5
code size: 56
code size: 150
code size: 5
code size: 66
code size: 22
code size: 221
code size: 124
code size: 23
code size: 12
code size: 18
code size: 6
code size: 52
code size: 1
code size: 1
code size: 1
code size: 52
code size: 39
code size: 6
code size: 17
code size: 5
code size: 41
code size: 43
code size: 32
code size: 11
code size: 3
code size: 18
code size: 18
code size: 4
code size: 11
code size: 16
code size: 70
code size: 64
code size: 81
code size: 261
code size: 314
code size: 16
code size: 7
code size: 22
code size: 6
code size: 28
code size: 19
code size: 136
code size: 40
code size: 10
code size: 90
code size: 21
code size: 13
code size: 101
code size: 24
code size: 38
code size: 21
code size: 21
code size: 5
code size: 21
code size: 37
code size: 33
code size: 9
code size: 46
code size: 48
code size: 38
code size: 7
code size: 67
code size: 131
code size: 9
code size: 156
code size: 51
code size: 12
code size: 31
code size: 40
code size: 16
code size: 11
code size: 3
code size: 193
code size: 149
code size: 92
code size: 177
code size: 40
code size: 58
code size: 3
code size: 67
code size: 52
code size: 82
code size: 145
code size: 164
code size: 114
code size: 106
code size: 112
code size: 848
code size: 203
code size: 321
code size: 3
code size: 773
code size: 23
code size: 43
code size: 64
code size: 118
code size: 1
code size: 3
code size: 34
code size: 16
code size: 7
code size: 52
code size: 3
code size: 3
code size: 3
code size: 3
code size: 31
code size: 273
code size: 10
code size: 20
code size: 11
code size: 46
code size: 20
code size: 66
code size: 192
code size: 31
code size: 55
code size: 60
code size: 15
code size: 5
code size: 23
code size: 7
code size: 687
code size: 11
code size: 16
code size: 18
code size: 19
code size: 21
code size: 3
code size: 12
code size: 6
code size: 6
code size: 131
code size: 6
code size: 6
code size: 6
code size: 6
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 5
code size: 3
code size: 5
code size: 5
code size: 5
code size: 5
code size: 4
code size: 149
code size: 1609
code size: 17
code size: 53
code size: 24
code size: 33
code size: 3
code size: 20
code size: 3
code size: 15
code size: 50
code size: 31
code size: 91
code size: 3
code size: 11
code size: 59
code size: 32
code size: 46
code size: 11
code size: 79
code size: 5
code size: 4
code size: 3
code size: 34
code size: 30
code size: 90
code size: 20
code size: 7
code size: 13
code size: 60
code size: 40
code size: 15
code size: 46
code size: 120
code size: 61
code size: 27
code size: 6
code size: 131
code size: 21
code size: 12
code size: 6
code size: 17
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\lua\Lotus\Interface\HudRedux.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  168

  1 [-]: NEWTABLE  R0 0 4       ; R0 := {}
  2 [-]: SETTABLE  R0 K0 K1     ; R0["INVALID32"] := 4294967296
  3 [-]: SETTABLE  R0 K2 K3     ; R0["PVP_XP_PER_LEVEL"] := 150
  4 [-]: SETTABLE  R0 K4 K5     ; R0["MAX_LOG_FADE_TIME"] := 0.34999999403954
  5 [-]: SETTABLE  R0 K6 K7     ; R0["LEVEL_ABBREV"] := ""
  6 [-]: NEWTABLE  R1 0 4       ; R1 := {}
  7 [-]: NEWTABLE  R2 0 3       ; R2 := {}
  8 [-]: SETTABLE  R2 K9 K10    ; R2["X"] := -75
  9 [-]: SETTABLE  R2 K11 K12   ; R2["Y"] := 13
 10 [-]: SETTABLE  R2 K13 K14   ; R2["Ability"] := nil
 11 [-]: SETTABLE  R1 K8 R2     ; R1["A"] := R2
 12 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 13 [-]: SETTABLE  R2 K9 K15    ; R2["X"] := -126
 14 [-]: SETTABLE  R2 K11 K16   ; R2["Y"] := -37
 15 [-]: SETTABLE  R2 K13 K14   ; R2["Ability"] := nil
 16 [-]: SETTABLE  R1 K9 R2     ; R1["X"] := R2
 17 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 18 [-]: SETTABLE  R2 K9 K18    ; R2["X"] := -23
 19 [-]: SETTABLE  R2 K11 K16   ; R2["Y"] := -37
 20 [-]: SETTABLE  R2 K13 K14   ; R2["Ability"] := nil
 21 [-]: SETTABLE  R1 K17 R2    ; R1["B"] := R2
 22 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 23 [-]: SETTABLE  R2 K9 K10    ; R2["X"] := -75
 24 [-]: SETTABLE  R2 K11 K19   ; R2["Y"] := -91
 25 [-]: SETTABLE  R2 K13 K14   ; R2["Ability"] := nil
 26 [-]: SETTABLE  R1 K11 R2    ; R1["Y"] := R2
 27 [-]: NEWTABLE  R2 4 0       ; R2 := {}
 28 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 29 [-]: SETTABLE  R3 K9 K20    ; R3["X"] := -131
 30 [-]: SETTABLE  R3 K11 K21   ; R3["Y"] := 18
 31 [-]: SETTABLE  R3 K13 K22   ; R3["Ability"] := "ACTIVATE_ABILITY_MENU_0"
 32 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 33 [-]: SETTABLE  R4 K9 K23    ; R4["X"] := -93.75
 34 [-]: SETTABLE  R4 K11 K21   ; R4["Y"] := 18
 35 [-]: SETTABLE  R4 K13 K24   ; R4["Ability"] := "ACTIVATE_ABILITY_MENU_1"
 36 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 37 [-]: SETTABLE  R5 K9 K25    ; R5["X"] := -56
 38 [-]: SETTABLE  R5 K11 K21   ; R5["Y"] := 18
 39 [-]: SETTABLE  R5 K13 K26   ; R5["Ability"] := "ACTIVATE_ABILITY_MENU_2"
 40 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 41 [-]: SETTABLE  R6 K9 K27    ; R6["X"] := -19
 42 [-]: SETTABLE  R6 K11 K21   ; R6["Y"] := 18
 43 [-]: SETTABLE  R6 K13 K28   ; R6["Ability"] := "ACTIVATE_ABILITY_MENU_3"
 44 [-]: SETLIST   R2 4 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
 45 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 46 [-]: NEWTABLE  R4 0 19      ; R4 := {}
 47 [-]: SETTABLE  R4 K29 K30   ; R4["mScreenDuck"] := 0
 48 [-]: SETTABLE  R4 K31 K32   ; R4["mTransOnRightSide"] := "0x0"
 49 [-]: SETTABLE  R4 K33 K32   ; R4["mPlayingWithController"] := "0x0"
 50 [-]: SETTABLE  R4 K34 K32   ; R4["mDispatchingQueuedFuncs"] := "0x0"
 51 [-]: SETTABLE  R4 K35 K32   ; R4["mWasSpectating"] := "0x0"
 52 [-]: SETTABLE  R4 K36 K32   ; R4["mSpaceMode"] := "0x0"
 53 [-]: SETTABLE  R4 K37 K30   ; R4["mImpactMessageFrame"] := 0
 54 [-]: SETTABLE  R4 K38 K39   ; R4["mImpactMessageScale"] := 100
 55 [-]: SETTABLE  R4 K40 K39   ; R4["mImpactMessageTransitionScale"] := 100
 56 [-]: SETTABLE  R4 K41 K32   ; R4["IsSpectating"] := "0x0"
 57 [-]: SETTABLE  R4 K42 K32   ; R4["IsOperator"] := "0x0"
 58 [-]: SETTABLE  R4 K43 K32   ; R4["Initialized"] := "0x0"
 59 [-]: SETTABLE  R4 K44 K32   ; R4["UIMode"] := "0x0"
 60 [-]: SETTABLE  R4 K45 K32   ; R4["IsInConclave"] := "0x0"
 61 [-]: SETTABLE  R4 K46 K14   ; R4["mProfileMovie"] := nil
 62 [-]: SETTABLE  R4 K47 K14   ; R4["mHudMarkersMovie"] := nil
 63 [-]: SETTABLE  R4 K48 K49   ; R4["mDistanceFieldMiniMap"] := "0x1"
 64 [-]: SETTABLE  R4 K50 K32   ; R4["PlayerListHasChanged"] := "0x0"
 65 [-]: SETTABLE  R4 K51 K52   ; R4["MissionType"] := -1
 66 [-]: SETTABLE  R4 K53 K32   ; R4["StalkerMode"] := "0x0"
 67 [-]: SETTABLE  R4 K54 K32   ; R4["IsAlternateHud"] := "0x0"
 68 [-]: SETTABLE  R4 K55 K49   ; R4["mEnergyVisible"] := "0x1"
 69 [-]: GETGLOBAL R5 K56       ; R5 := 0x329BDC44
 70 [-]: LOADK     R6 K57       ; R6 := "Lotus.Interface.UIUtilities"
 71 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 72 [-]: GETGLOBAL R6 K56       ; R6 := 0x329BDC44
 73 [-]: LOADK     R7 K58       ; R7 := "Lotus.Interface.LotusUtilities"
 74 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 75 [-]: GETGLOBAL R7 K56       ; R7 := 0x329BDC44
 76 [-]: LOADK     R8 K59       ; R8 := "Lotus.Interface.LotusNetworkUtilities"
 77 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 78 [-]: GETGLOBAL R8 K56       ; R8 := 0x329BDC44
 79 [-]: LOADK     R9 K60       ; R9 := "EE.Interface.Utilities"
 80 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 81 [-]: GETGLOBAL R9 K56       ; R9 := 0x329BDC44
 82 [-]: LOADK     R10 K61      ; R10 := "Lotus.Interface.UIStyleUtilities"
 83 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 84 [-]: GETGLOBAL R10 K56      ; R10 := 0x329BDC44
 85 [-]: LOADK     R11 K62      ; R11 := "EE.Interface.AnchorMgr"
 86 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 87 [-]: GETGLOBAL R11 K56      ; R11 := 0x329BDC44
 88 [-]: LOADK     R12 K63      ; R12 := "Lotus.Interface.CardUtilitiesRedux"
 89 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 90 [-]: GETGLOBAL R12 K56      ; R12 := 0x329BDC44
 91 [-]: LOADK     R13 K64      ; R13 := "Lotus.Interface.Components.HealthAndShieldDisplay"
 92 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 93 [-]: GETGLOBAL R13 K56      ; R13 := 0x329BDC44
 94 [-]: LOADK     R14 K65      ; R14 := "Lotus.Scripts.Libs.LandscapeLib"
 95 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 96 [-]: LOADNIL   R14 R14      ; R14 := nil
 97 [-]: NEWTABLE  R15 0 3      ; R15 := {}
 98 [-]: SETTABLE  R15 K66 K14  ; R15["Fade"] := nil
 99 [-]: SETTABLE  R15 K67 K49  ; R15["WaitingForProgressMovie"] := "0x1"
100 [-]: SETTABLE  R15 K68 K32  ; R15["TopMenuOpen"] := "0x0"
101 [-]: NEWTABLE  R16 0 1      ; R16 := {}
102 [-]: SETTABLE  R16 K69 K70  ; R16["offsetX"] := 125
103 [-]: LOADNIL   R17 R17      ; R17 := nil
104 [-]: NEWTABLE  R18 0 4      ; R18 := {}
105 [-]: SETTABLE  R18 K71 K14  ; R18["InventoryController"] := nil
106 [-]: SETTABLE  R18 K72 K14  ; R18["DamageController"] := nil
107 [-]: SETTABLE  R18 K73 K14  ; R18["CameraController"] := nil
108 [-]: SETTABLE  R18 K74 K14  ; R18["InputController"] := nil
109 [-]: LOADNIL   R19 R20      ; R19 := R20 := nil
110 [-]: NEWTABLE  R21 0 0      ; R21 := {}
111 [-]: NEWTABLE  R22 0 3      ; R22 := {}
112 [-]: SETTABLE  R22 K75 K32  ; R22["mVisible"] := "0x0"
113 [-]: SETTABLE  R22 K76 K30  ; R22["mProgress"] := 0
114 [-]: SETTABLE  R22 K77 K14  ; R22["mList"] := nil
115 [-]: NEWTABLE  R23 0 0      ; R23 := {}
116 [-]: NEWTABLE  R24 0 2      ; R24 := {}
117 [-]: SETTABLE  R24 K78 K30  ; R24["x"] := 0
118 [-]: SETTABLE  R24 K79 K30  ; R24["y"] := 0
119 [-]: NEWTABLE  R25 0 0      ; R25 := {}
120 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
121 [-]: MOVE      R29 R1       ; R29 := R1
122 [-]: LOADNIL   R30 R35      ; R30 := R31 := R32 := R33 := R34 := R35 := nil
123 [-]: NEWTABLE  R36 0 0      ; R36 := {}
124 [-]: MOVE      R37 R0       ; R37 := R0
125 [-]: NEWTABLE  R38 0 2      ; R38 := {}
126 [-]: NEWTABLE  R39 2 0      ; R39 := {}
127 [-]: LOADK     R40 K30      ; R40 := 0
128 [-]: LOADK     R41 K30      ; R41 := 0
129 [-]: SETLIST   R39 2 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 2
130 [-]: SETTABLE  R38 K80 R39  ; R38["HudScalePadding"] := R39
131 [-]: SETTABLE  R38 K81 K82  ; R38["HudScale"] := 1
132 [-]: NEWTABLE  R39 0 2      ; R39 := {}
133 [-]: SETTABLE  R39 K83 K14  ; R39["ptr"] := nil
134 [-]: SETTABLE  R39 K84 K14  ; R39["impactBehavior"] := nil
135 [-]: NEWTABLE  R40 0 6      ; R40 := {}
136 [-]: SETTABLE  R40 K85 K32  ; R40["isEnabled"] := "0x0"
137 [-]: SETTABLE  R40 K86 K14  ; R40["timer"] := nil
138 [-]: SETTABLE  R40 K87 K30  ; R40["timerId"] := 0
139 [-]: SETTABLE  R40 K88 K52  ; R40["prevMinute"] := -1
140 [-]: SETTABLE  R40 K89 K30  ; R40["mTotalTime"] := 0
141 [-]: SETTABLE  R40 K90 K7   ; R40["currentText"] := ""
142 [-]: NEWTABLE  R41 0 0      ; R41 := {}
143 [-]: LOADNIL   R42 R43      ; R42 := R43 := nil
144 [-]: NEWTABLE  R44 0 0      ; R44 := {}
145 [-]: NEWTABLE  R45 0 0      ; R45 := {}
146 [-]: LOADNIL   R46 R46      ; R46 := nil
147 [-]: NEWTABLE  R47 0 3      ; R47 := {}
148 [-]: SETTABLE  R47 K91 K32  ; R47["hasCheckedForStatusEffects"] := "0x0"
149 [-]: SETTABLE  R47 K92 K93  ; R47["effectCheckRetry"] := 5
150 [-]: SETTABLE  R47 K94 K14  ; R47["effectOverride"] := nil
151 [-]: NEWTABLE  R48 0 2      ; R48 := {}
152 [-]: SETTABLE  R48 K95 K14  ; R48["Player"] := nil
153 [-]: SETTABLE  R48 K96 K14  ; R48["Sentinel"] := nil
154 [-]: LOADNIL   R49 R49      ; R49 := nil
155 [-]: NEWTABLE  R50 0 0      ; R50 := {}
156 [-]: LOADNIL   R51 R52      ; R51 := R52 := nil
157 [-]: NEWTABLE  R53 0 2      ; R53 := {}
158 [-]: NEWTABLE  R54 0 0      ; R54 := {}
159 [-]: SETTABLE  R53 K97 R54  ; R53["Buffs"] := R54
160 [-]: SETTABLE  R53 K98 K32  ; R53["Cached"] := "0x0"
161 [-]: NEWTABLE  R54 0 0      ; R54 := {}
162 [-]: LOADNIL   R55 R55      ; R55 := nil
163 [-]: LOADK     R56 K30      ; R56 := 0
164 [-]: NEWTABLE  R57 13 0     ; R57 := {}
165 [-]: LOADK     R58 K99      ; R58 := "DT_IMPACT"
166 [-]: LOADK     R59 K100     ; R59 := "DT_PUNCTURE"
167 [-]: LOADK     R60 K101     ; R60 := "DT_SLASH"
168 [-]: LOADK     R61 K102     ; R61 := "DT_FIRE"
169 [-]: LOADK     R62 K103     ; R62 := "DT_FREEZE"
170 [-]: LOADK     R63 K104     ; R63 := "DT_ELECTRICITY"
171 [-]: LOADK     R64 K105     ; R64 := "DT_POISON"
172 [-]: LOADK     R65 K106     ; R65 := "DT_EXPLOSION"
173 [-]: LOADK     R66 K107     ; R66 := "DT_RADIATION"
174 [-]: LOADK     R67 K108     ; R67 := "DT_GAS"
175 [-]: LOADK     R68 K109     ; R68 := "DT_MAGNETIC"
176 [-]: LOADK     R69 K110     ; R69 := "DT_VIRAL"
177 [-]: LOADK     R70 K111     ; R70 := "DT_CORROSIVE"
178 [-]: SETLIST   R57 13 1     ; R57[(1-1)*FPF+i] := R(57+i), 1 <= i <= 13
179 [-]: NEWTABLE  R58 0 3      ; R58 := {}
180 [-]: SETTABLE  R58 K112 K30 ; R58["Time"] := 0
181 [-]: SETTABLE  R58 K113 K32 ; R58["Enabled"] := "0x0"
182 [-]: SETTABLE  R58 K114 K14 ; R58["LastColor"] := nil
183 [-]: MOVE      R59 R0       ; R59 := R0
184 [-]: MOVE      R60 R0       ; R60 := R0
185 [-]: LOADNIL   R61 R61      ; R61 := nil
186 [-]: NEWTABLE  R62 0 2      ; R62 := {}
187 [-]: SETTABLE  R62 K115 K14 ; R62["CurrentValue"] := nil
188 [-]: SETTABLE  R62 K116 K32 ; R62["Draining"] := "0x0"
189 [-]: LOADNIL   R63 R63      ; R63 := nil
190 [-]: LOADK     R64 K30      ; R64 := 0
191 [-]: NEWTABLE  R65 0 4      ; R65 := {}
192 [-]: SETTABLE  R65 K113 K32 ; R65["Enabled"] := "0x0"
193 [-]: NEWTABLE  R66 0 0      ; R66 := {}
194 [-]: SETTABLE  R65 K117 R66 ; R65["Faded"] := R66
195 [-]: NEWTABLE  R66 23 0     ; R66 := {}
196 [-]: LOADK     R67 K119     ; R67 := "MiniMapContainer"
197 [-]: LOADK     R68 K120     ; R68 := "HudTracker"
198 [-]: LOADK     R69 K121     ; R69 := "HealthAndShield"
199 [-]: LOADK     R70 K122     ; R70 := "WeaponFrame"
200 [-]: LOADK     R71 K123     ; R71 := "AbilityPanel"
201 [-]: LOADK     R72 K124     ; R72 := "Card"
202 [-]: LOADK     R73 K125     ; R73 := "StandingGain"
203 [-]: LOADK     R74 K126     ; R74 := "PvPHeldFlagTimer"
204 [-]: LOADK     R75 K127     ; R75 := "MiniGameScore"
205 [-]: LOADK     R76 K128     ; R76 := "BorderBox"
206 [-]: LOADK     R77 K129     ; R77 := "QuestMessage"
207 [-]: LOADK     R78 K130     ; R78 := "GenericMessage"
208 [-]: LOADK     R79 K131     ; R79 := "LogMessageContainer"
209 [-]: LOADK     R80 K132     ; R80 := "Prompt"
210 [-]: LOADK     R81 K133     ; R81 := "DamageIndicator"
211 [-]: LOADK     R82 K134     ; R82 := "Reticle"
212 [-]: LOADK     R83 K135     ; R83 := "Reticle.Arm1"
213 [-]: LOADK     R84 K136     ; R84 := "ReticleCustom"
214 [-]: LOADK     R85 K137     ; R85 := "SuccessfulHitNotification"
215 [-]: LOADK     R86 K138     ; R86 := "reloadTimer"
216 [-]: LOADK     R87 K139     ; R87 := "AbilityChargeProgress"
217 [-]: LOADK     R88 K140     ; R88 := "AbilityDots"
218 [-]: LOADK     R89 K141     ; R89 := "Stamina"
219 [-]: LOADK     R90 K142     ; R90 := "GameplayMessage"
220 [-]: LOADK     R91 K143     ; R91 := "PainLeft"
221 [-]: LOADK     R92 K144     ; R92 := "PainRight"
222 [-]: LOADK     R93 K145     ; R93 := "PainTop"
223 [-]: LOADK     R94 K146     ; R94 := "PainBottom"
224 [-]: LOADK     R95 K147     ; R95 := "SlamIndicator"
225 [-]: LOADK     R96 K148     ; R96 := "MiniMapOverlayMsg"
226 [-]: SETLIST   R66 30 1     ; R66[(1-1)*FPF+i] := R(66+i), 1 <= i <= 30
227 [-]: SETTABLE  R65 K118 R66 ; R65["Clips"] := R66
228 [-]: NEWTABLE  R66 0 4      ; R66 := {}
229 [-]: SETTABLE  R66 K143 K49 ; R66["PainLeft"] := "0x1"
230 [-]: SETTABLE  R66 K144 K49 ; R66["PainRight"] := "0x1"
231 [-]: SETTABLE  R66 K145 K49 ; R66["PainTop"] := "0x1"
232 [-]: SETTABLE  R66 K146 K49 ; R66["PainBottom"] := "0x1"
233 [-]: SETTABLE  R65 K149 R66 ; R65["AutoClips"] := R66
234 [-]: NEWTABLE  R66 0 9      ; R66 := {}
235 [-]: SETTABLE  R66 K150 K30 ; R66["CurrentIndex"] := 0
236 [-]: NEWTABLE  R67 0 0      ; R67 := {}
237 [-]: SETTABLE  R66 K151 R67 ; R66["List"] := R67
238 [-]: NEWTABLE  R67 0 0      ; R67 := {}
239 [-]: SETTABLE  R66 K152 R67 ; R66["TypeInfo"] := R67
240 [-]: NEWTABLE  R67 0 0      ; R67 := {}
241 [-]: SETTABLE  R66 K153 R67 ; R66["ActiveHealthTrackers"] := R67
242 [-]: NEWTABLE  R67 0 0      ; R67 := {}
243 [-]: SETTABLE  R66 K154 R67 ; R66["ActiveTimers"] := R67
244 [-]: SETTABLE  R66 K155 K14 ; R66["VoidTearTracker"] := nil
245 [-]: SETTABLE  R66 K156 K14 ; R66["VoidTearTitleTracker"] := nil
246 [-]: SETTABLE  R66 K157 K14 ; R66["VoidTearListTracker"] := nil
247 [-]: SETTABLE  R66 K158 K14 ; R66["TimerOfInterest"] := nil
248 [-]: NEWTABLE  R67 0 2      ; R67 := {}
249 [-]: SETTABLE  R67 K159 K32 ; R67["DarkSector"] := "0x0"
250 [-]: SETTABLE  R67 K160 K32 ; R67["PhotoBooth"] := "0x0"
251 [-]: LOADNIL   R68 R68      ; R68 := nil
252 [-]: LOADK     R69 K30      ; R69 := 0
253 [-]: NEWTABLE  R70 0 7      ; R70 := {}
254 [-]: SETTABLE  R70 K161 K32 ; R70["Active"] := "0x0"
255 [-]: SETTABLE  R70 K162 K14 ; R70["IsNight"] := nil
256 [-]: SETTABLE  R70 K163 K82 ; R70["TransitionEpsilon"] := 1
257 [-]: SETTABLE  R70 K164 K32 ; R70["Visible"] := "0x0"
258 [-]: SETTABLE  R70 K165 K32 ; R70["Landscape"] := "0x0"
259 [-]: SETTABLE  R70 K166 K30 ; R70["DayCount"] := 0
260 [-]: SETTABLE  R70 K167 K30 ; R70["GameTimeAtDusk"] := 0
261 [-]: NEWTABLE  R71 0 8      ; R71 := {}
262 [-]: SETTABLE  R71 K168 K14 ; R71["deco"] := nil
263 [-]: SETTABLE  R71 K169 K14 ; R71["avatar"] := nil
264 [-]: SETTABLE  R71 K170 K14 ; R71["hitProxy"] := nil
265 [-]: SETTABLE  R71 K171 K32 ; R71["valid"] := "0x0"
266 [-]: SETTABLE  R71 K172 K14 ; R71["name"] := nil
267 [-]: SETTABLE  R71 K173 K14 ; R71["player"] := nil
268 [-]: SETTABLE  R71 K174 K32 ; R71["sameFaction"] := "0x0"
269 [-]: SETTABLE  R71 K175 K14 ; R71["desc"] := nil
270 [-]: GETGLOBAL R72 K176     ; R72 := 0xEC274B1A
271 [-]: LOADK     R73 K177     ; R73 := "Hostage"
272 [-]: CALL      R72 2 2      ; R72 := R72(R73)
273 [-]: LOADNIL   R73 R73      ; R73 := nil
274 [-]: CLOSURE   R74 0        ; R74 := closure(Function #1)
275 [-]: MOVE      R0 R44       ; R0 := R44
276 [-]: SETGLOBAL R74 K178     ; GetCards := R74
277 [-]: SETGLOBAL R74 K179     ; 0xD11BEB25 := R74
278 [-]: CLOSURE   R74 1        ; R74 := closure(Function #2)
279 [-]: SETGLOBAL R74 K180     ; GetSelectedCards := R74
280 [-]: SETGLOBAL R74 K181     ; 0x444C64CA := R74
281 [-]: CLOSURE   R74 2        ; R74 := closure(Function #3)
282 [-]: MOVE      R0 R21       ; R0 := R21
283 [-]: CLOSURE   R75 3        ; R75 := closure(Function #4)
284 [-]: MOVE      R0 R4        ; R0 := R4
285 [-]: MOVE      R0 R3        ; R0 := R3
286 [-]: CLOSURE   R76 4        ; R76 := closure(Function #5)
287 [-]: MOVE      R0 R66       ; R0 := R66
288 [-]: MOVE      R0 R33       ; R0 := R33
289 [-]: MOVE      R0 R69       ; R0 := R69
290 [-]: MOVE      R0 R25       ; R0 := R25
291 [-]: CLOSURE   R77 5        ; R77 := closure(Function #6)
292 [-]: MOVE      R0 R76       ; R0 := R76
293 [-]: SETGLOBAL R77 K182     ; SortHudTrackers := R77
294 [-]: SETGLOBAL R77 K183     ; 0x990575CC := R77
295 [-]: CLOSURE   R77 6        ; R77 := closure(Function #7)
296 [-]: MOVE      R0 R66       ; R0 := R66
297 [-]: MOVE      R0 R32       ; R0 := R32
298 [-]: MOVE      R0 R76       ; R0 := R76
299 [-]: CLOSURE   R78 7        ; R78 := closure(Function #8)
300 [-]: MOVE      R0 R66       ; R0 := R66
301 [-]: CLOSURE   R79 8        ; R79 := closure(Function #9)
302 [-]: MOVE      R0 R66       ; R0 := R66
303 [-]: MOVE      R0 R6        ; R0 := R6
304 [-]: MOVE      R0 R4        ; R0 := R4
305 [-]: MOVE      R0 R76       ; R0 := R76
306 [-]: CLOSURE   R80 9        ; R80 := closure(Function #10)
307 [-]: MOVE      R0 R66       ; R0 := R66
308 [-]: MOVE      R0 R32       ; R0 := R32
309 [-]: MOVE      R0 R75       ; R0 := R75
310 [-]: MOVE      R0 R76       ; R0 := R76
311 [-]: MOVE      R0 R6        ; R0 := R6
312 [-]: MOVE      R0 R8        ; R0 := R8
313 [-]: MOVE      R0 R17       ; R0 := R17
314 [-]: MOVE      R0 R74       ; R0 := R74
315 [-]: MOVE      R0 R77       ; R0 := R77
316 [-]: MOVE      R0 R79       ; R0 := R79
317 [-]: CLOSURE   R81 10       ; R81 := closure(Function #11)
318 [-]: MOVE      R0 R8        ; R0 := R8
319 [-]: SETGLOBAL R81 K184     ; ShowQuestMessage := R81
320 [-]: SETGLOBAL R81 K185     ; 0x55BD85BB := R81
321 [-]: CLOSURE   R81 11       ; R81 := closure(Function #12)
322 [-]: SETGLOBAL R81 K186     ; HideQuestMessage := R81
323 [-]: SETGLOBAL R81 K187     ; 0xF6882E16 := R81
324 [-]: CLOSURE   R81 12       ; R81 := closure(Function #13)
325 [-]: MOVE      R0 R8        ; R0 := R8
326 [-]: CLOSURE   R82 13       ; R82 := closure(Function #14)
327 [-]: MOVE      R0 R40       ; R0 := R40
328 [-]: MOVE      R0 R17       ; R0 := R17
329 [-]: CLOSURE   R83 14       ; R83 := closure(Function #15)
330 [-]: MOVE      R0 R40       ; R0 := R40
331 [-]: MOVE      R0 R8        ; R0 := R8
332 [-]: MOVE      R0 R32       ; R0 := R32
333 [-]: MOVE      R0 R82       ; R0 := R82
334 [-]: MOVE      R0 R17       ; R0 := R17
335 [-]: MOVE      R0 R74       ; R0 := R74
336 [-]: CLOSURE   R84 15       ; R84 := closure(Function #16)
337 [-]: MOVE      R0 R8        ; R0 := R8
338 [-]: SETGLOBAL R84 K188     ; AnimateTyping := R84
339 [-]: SETGLOBAL R84 K189     ; 0xACEBA655 := R84
340 [-]: CLOSURE   R84 16       ; R84 := closure(Function #17)
341 [-]: MOVE      R0 R16       ; R0 := R16
342 [-]: CLOSURE   R85 17       ; R85 := closure(Function #18)
343 [-]: MOVE      R0 R26       ; R0 := R26
344 [-]: SETGLOBAL R85 K190     ; HideReticle := R85
345 [-]: SETGLOBAL R85 K191     ; 0x6A8F3FC6 := R85
346 [-]: CLOSURE   R85 18       ; R85 := closure(Function #19)
347 [-]: MOVE      R0 R26       ; R0 := R26
348 [-]: MOVE      R0 R18       ; R0 := R18
349 [-]: CLOSURE   R86 19       ; R86 := closure(Function #20)
350 [-]: MOVE      R0 R85       ; R0 := R85
351 [-]: SETGLOBAL R86 K192     ; ShowReticle := R86
352 [-]: SETGLOBAL R86 K193     ; 0xB2D3A47A := R86
353 [-]: CLOSURE   R86 20       ; R86 := closure(Function #21)
354 [-]: MOVE      R0 R4        ; R0 := R4
355 [-]: SETGLOBAL R86 K194     ; SetReticleVisible := R86
356 [-]: SETGLOBAL R86 K195     ; 0x51AA4C41 := R86
357 [-]: CLOSURE   R86 21       ; R86 := closure(Function #22)
358 [-]: SETGLOBAL R86 K196     ; HideAffinity := R86
359 [-]: SETGLOBAL R86 K197     ; 0xB085EFE7 := R86
360 [-]: CLOSURE   R86 22       ; R86 := closure(Function #23)
361 [-]: MOVE      R0 R27       ; R0 := R27
362 [-]: SETGLOBAL R86 K198     ; HideAbilityDots := R86
363 [-]: SETGLOBAL R86 K199     ; 0x8DBF744 := R86
364 [-]: CLOSURE   R86 23       ; R86 := closure(Function #24)
365 [-]: MOVE      R0 R27       ; R0 := R27
366 [-]: SETGLOBAL R86 K200     ; ShowAbilityDots := R86
367 [-]: SETGLOBAL R86 K201     ; 0xC8890AC0 := R86
368 [-]: CLOSURE   R86 24       ; R86 := closure(Function #25)
369 [-]: MOVE      R0 R38       ; R0 := R38
370 [-]: MOVE      R0 R5        ; R0 := R5
371 [-]: MOVE      R0 R14       ; R0 := R14
372 [-]: MOVE      R0 R27       ; R0 := R27
373 [-]: MOVE      R0 R25       ; R0 := R25
374 [-]: CLOSURE   R87 25       ; R87 := closure(Function #26)
375 [-]: MOVE      R0 R38       ; R0 := R38
376 [-]: CLOSURE   R88 26       ; R88 := closure(Function #27)
377 [-]: MOVE      R0 R87       ; R0 := R87
378 [-]: MOVE      R0 R86       ; R0 := R86
379 [-]: SETGLOBAL R88 K202     ; onViewportSizeChanged := R88
380 [-]: SETGLOBAL R88 K203     ; 0x3A900427 := R88
381 [-]: CLOSURE   R88 27       ; R88 := closure(Function #28)
382 [-]: CLOSURE   R89 28       ; R89 := closure(Function #29)
383 [-]: MOVE      R0 R54       ; R0 := R54
384 [-]: MOVE      R0 R88       ; R0 := R88
385 [-]: SETTABLE  R54 K204 R89 ; R54["IsBuffEqual"] := R89
386 [-]: CLOSURE   R89 29       ; R89 := closure(Function #30)
387 [-]: MOVE      R0 R51       ; R0 := R51
388 [-]: MOVE      R0 R30       ; R0 := R30
389 [-]: MOVE      R0 R28       ; R0 := R28
390 [-]: MOVE      R0 R54       ; R0 := R54
391 [-]: MOVE      R0 R37       ; R0 := R37
392 [-]: MOVE      R0 R49       ; R0 := R49
393 [-]: CLOSURE   R90 30       ; R90 := closure(Function #31)
394 [-]: MOVE      R0 R51       ; R0 := R51
395 [-]: MOVE      R0 R30       ; R0 := R30
396 [-]: MOVE      R0 R88       ; R0 := R88
397 [-]: MOVE      R0 R49       ; R0 := R49
398 [-]: CLOSURE   R91 31       ; R91 := closure(Function #32)
399 [-]: MOVE      R0 R27       ; R0 := R27
400 [-]: CLOSURE   R92 32       ; R92 := closure(Function #33)
401 [-]: MOVE      R0 R27       ; R0 := R27
402 [-]: CLOSURE   R93 33       ; R93 := closure(Function #34)
403 [-]: MOVE      R0 R6        ; R0 := R6
404 [-]: SETGLOBAL R93 K205     ; PlayFocusActivatedFX := R93
405 [-]: SETGLOBAL R93 K206     ; 0x85FA6FD6 := R93
406 [-]: CLOSURE   R93 34       ; R93 := closure(Function #35)
407 [-]: MOVE      R0 R27       ; R0 := R27
408 [-]: CLOSURE   R94 35       ; R94 := closure(Function #36)
409 [-]: MOVE      R0 R4        ; R0 := R4
410 [-]: MOVE      R0 R49       ; R0 := R49
411 [-]: SETGLOBAL R94 K207     ; Shutdown := R94
412 [-]: SETGLOBAL R94 K208     ; 0x3C577FA3 := R94
413 [-]: CLOSURE   R94 36       ; R94 := closure(Function #37)
414 [-]: MOVE      R0 R27       ; R0 := R27
415 [-]: CLOSURE   R95 37       ; R95 := closure(Function #38)
416 [-]: MOVE      R0 R28       ; R0 := R28
417 [-]: MOVE      R0 R27       ; R0 := R27
418 [-]: MOVE      R0 R94       ; R0 := R94
419 [-]: CLOSURE   R96 38       ; R96 := closure(Function #39)
420 [-]: SETGLOBAL R96 K209     ; OnIconReady := R96
421 [-]: SETGLOBAL R96 K210     ; 0xB4C269B9 := R96
422 [-]: CLOSURE   R96 39       ; R96 := closure(Function #40)
423 [-]: SETGLOBAL R96 K211     ; ForceShowMysteryPrize := R96
424 [-]: SETGLOBAL R96 K212     ; 0x59CA394A := R96
425 [-]: CLOSURE   R96 40       ; R96 := closure(Function #41)
426 [-]: MOVE      R0 R75       ; R0 := R75
427 [-]: SETGLOBAL R96 K213     ; ShowEncounterReward := R96
428 [-]: SETGLOBAL R96 K214     ; 0x2FA00E82 := R96
429 [-]: CLOSURE   R96 41       ; R96 := closure(Function #42)
430 [-]: MOVE      R0 R32       ; R0 := R32
431 [-]: CLOSURE   R97 42       ; R97 := closure(Function #43)
432 [-]: MOVE      R0 R14       ; R0 := R14
433 [-]: SETGLOBAL R97 K215     ; UpdateLogMessageContainerY := R97
434 [-]: SETGLOBAL R97 K216     ; 0x66127ACE := R97
435 [-]: CLOSURE   R97 43       ; R97 := closure(Function #44)
436 [-]: SETGLOBAL R97 K217     ; ShowGameplayMessage := R97
437 [-]: SETGLOBAL R97 K218     ; 0x42271786 := R97
438 [-]: NEWTABLE  R97 0 0      ; R97 := {}
439 [-]: CLOSURE   R98 44       ; R98 := closure(Function #45)
440 [-]: MOVE      R0 R97       ; R0 := R97
441 [-]: SETGLOBAL R98 K219     ; ResetBuddyEffects := R98
442 [-]: SETGLOBAL R98 K220     ; 0xE54E347C := R98
443 [-]: CLOSURE   R98 45       ; R98 := closure(Function #46)
444 [-]: MOVE      R0 R98       ; R0 := R98
445 [-]: CLOSURE   R99 46       ; R99 := closure(Function #47)
446 [-]: CLOSURE   R73 47       ; R73 := closure(Function #48)
447 [-]: MOVE      R0 R4        ; R0 := R4
448 [-]: MOVE      R0 R6        ; R0 := R6
449 [-]: CLOSURE   R100 48      ; R100 := closure(Function #49)
450 [-]: MOVE      R0 R32       ; R0 := R32
451 [-]: MOVE      R0 R4        ; R0 := R4
452 [-]: MOVE      R0 R6        ; R0 := R6
453 [-]: MOVE      R0 R73       ; R0 := R73
454 [-]: CLOSURE   R101 49      ; R101 := closure(Function #50)
455 [-]: MOVE      R0 R27       ; R0 := R27
456 [-]: MOVE      R0 R39       ; R0 := R39
457 [-]: MOVE      R0 R4        ; R0 := R4
458 [-]: NEWTABLE  R102 0 4     ; R102 := {}
459 [-]: SETTABLE  R102 K221 K222; R102["Current"] := -100
460 [-]: SETTABLE  R102 K43 K32 ; R102["Initialized"] := "0x0"
461 [-]: SETTABLE  R102 K223 K82; R102["MaxClipsUsed"] := 1
462 [-]: SETTABLE  R102 K164 K49; R102["Visible"] := "0x1"
463 [-]: CLOSURE   R103 50      ; R103 := closure(Function #51)
464 [-]: MOVE      R0 R102      ; R0 := R102
465 [-]: CLOSURE   R104 51      ; R104 := closure(Function #52)
466 [-]: MOVE      R0 R50       ; R0 := R50
467 [-]: MOVE      R0 R8        ; R0 := R8
468 [-]: MOVE      R0 R18       ; R0 := R18
469 [-]: MOVE      R0 R57       ; R0 := R57
470 [-]: MOVE      R0 R51       ; R0 := R51
471 [-]: MOVE      R0 R20       ; R0 := R20
472 [-]: MOVE      R0 R19       ; R0 := R19
473 [-]: CLOSURE   R105 52      ; R105 := closure(Function #53)
474 [-]: MOVE      R0 R53       ; R0 := R53
475 [-]: MOVE      R0 R51       ; R0 := R51
476 [-]: MOVE      R0 R4        ; R0 := R4
477 [-]: MOVE      R0 R37       ; R0 := R37
478 [-]: MOVE      R0 R26       ; R0 := R26
479 [-]: MOVE      R0 R89       ; R0 := R89
480 [-]: MOVE      R0 R90       ; R0 := R90
481 [-]: MOVE      R0 R30       ; R0 := R30
482 [-]: MOVE      R0 R8        ; R0 := R8
483 [-]: MOVE      R0 R96       ; R0 := R96
484 [-]: CLOSURE   R106 53      ; R106 := closure(Function #54)
485 [-]: CLOSURE   R107 54      ; R107 := closure(Function #55)
486 [-]: SETGLOBAL R107 K224    ; SetForceLocalRespawn := R107
487 [-]: SETGLOBAL R107 K225    ; 0xF543D8C := R107
488 [-]: CLOSURE   R107 55      ; R107 := closure(Function #56)
489 [-]: MOVE      R0 R14       ; R0 := R14
490 [-]: SETGLOBAL R107 K226    ; RegisterToAnchorMgr := R107
491 [-]: SETGLOBAL R107 K227    ; 0x99CEF82F := R107
492 [-]: CLOSURE   R107 56      ; R107 := closure(Function #57)
493 [-]: MOVE      R0 R14       ; R0 := R14
494 [-]: SETGLOBAL R107 K228    ; UnregisterFromAnchorMgr := R107
495 [-]: SETGLOBAL R107 K229    ; 0xD7A3C347 := R107
496 [-]: CLOSURE   R107 57      ; R107 := closure(Function #58)
497 [-]: MOVE      R0 R50       ; R0 := R50
498 [-]: CLOSURE   R108 58      ; R108 := closure(Function #59)
499 [-]: MOVE      R0 R50       ; R0 := R50
500 [-]: CLOSURE   R109 59      ; R109 := closure(Function #60)
501 [-]: MOVE      R0 R19       ; R0 := R19
502 [-]: MOVE      R0 R18       ; R0 := R18
503 [-]: MOVE      R0 R47       ; R0 := R47
504 [-]: MOVE      R0 R52       ; R0 := R52
505 [-]: MOVE      R0 R108      ; R0 := R108
506 [-]: MOVE      R0 R107      ; R0 := R107
507 [-]: CLOSURE   R110 60      ; R110 := closure(Function #61)
508 [-]: MOVE      R0 R107      ; R0 := R107
509 [-]: MOVE      R0 R108      ; R0 := R108
510 [-]: SETGLOBAL R110 K230    ; ConditionalUpgradeChanged := R110
511 [-]: SETGLOBAL R110 K231    ; 0xCD35F369 := R110
512 [-]: LOADNIL   R110 R110    ; R110 := nil
513 [-]: CLOSURE   R111 61      ; R111 := closure(Function #62)
514 [-]: MOVE      R0 R110      ; R0 := R110
515 [-]: MOVE      R0 R27       ; R0 := R27
516 [-]: CLOSURE   R112 62      ; R112 := closure(Function #63)
517 [-]: MOVE      R0 R44       ; R0 := R44
518 [-]: MOVE      R0 R11       ; R0 := R11
519 [-]: MOVE      R0 R45       ; R0 := R45
520 [-]: MOVE      R0 R8        ; R0 := R8
521 [-]: MOVE      R0 R27       ; R0 := R27
522 [-]: CLOSURE   R113 63      ; R113 := closure(Function #64)
523 [-]: MOVE      R0 R110      ; R0 := R110
524 [-]: CLOSURE   R114 64      ; R114 := closure(Function #65)
525 [-]: MOVE      R0 R113      ; R0 := R113
526 [-]: SETGLOBAL R114 K232    ; HandleModFound := R114
527 [-]: SETGLOBAL R114 K233    ; 0x79EFC8D1 := R114
528 [-]: CLOSURE   R114 65      ; R114 := closure(Function #66)
529 [-]: MOVE      R0 R110      ; R0 := R110
530 [-]: MOVE      R0 R4        ; R0 := R4
531 [-]: MOVE      R0 R112      ; R0 := R112
532 [-]: MOVE      R0 R45       ; R0 := R45
533 [-]: MOVE      R0 R11       ; R0 := R11
534 [-]: MOVE      R0 R111      ; R0 := R111
535 [-]: CLOSURE   R115 66      ; R115 := closure(Function #67)
536 [-]: MOVE      R0 R4        ; R0 := R4
537 [-]: MOVE      R0 R6        ; R0 := R6
538 [-]: SETGLOBAL R115 K234    ; CreateNotificationParticles := R115
539 [-]: SETGLOBAL R115 K235    ; 0xF6E72ED3 := R115
540 [-]: CLOSURE   R115 67      ; R115 := closure(Function #68)
541 [-]: MOVE      R0 R4        ; R0 := R4
542 [-]: MOVE      R0 R27       ; R0 := R27
543 [-]: SETGLOBAL R115 K236    ; ShowNotification := R115
544 [-]: SETGLOBAL R115 K237    ; 0x761CAD7D := R115
545 [-]: CLOSURE   R115 68      ; R115 := closure(Function #69)
546 [-]: MOVE      R0 R16       ; R0 := R16
547 [-]: CLOSURE   R116 69      ; R116 := closure(Function #70)
548 [-]: MOVE      R0 R16       ; R0 := R16
549 [-]: MOVE      R0 R115      ; R0 := R115
550 [-]: CLOSURE   R117 70      ; R117 := closure(Function #71)
551 [-]: MOVE      R0 R116      ; R0 := R116
552 [-]: SETGLOBAL R117 K238    ; NotifyAbilityChange := R117
553 [-]: SETGLOBAL R117 K239    ; 0xB1F9A699 := R117
554 [-]: CLOSURE   R117 71      ; R117 := closure(Function #72)
555 [-]: MOVE      R0 R40       ; R0 := R40
556 [-]: MOVE      R0 R17       ; R0 := R17
557 [-]: CLOSURE   R118 72      ; R118 := closure(Function #73)
558 [-]: MOVE      R0 R116      ; R0 := R116
559 [-]: MOVE      R0 R29       ; R0 := R29
560 [-]: MOVE      R0 R40       ; R0 := R40
561 [-]: MOVE      R0 R117      ; R0 := R117
562 [-]: SETGLOBAL R118 K240    ; NotifyAbilityActivate := R118
563 [-]: SETGLOBAL R118 K241    ; 0xFA03C2AE := R118
564 [-]: CLOSURE   R118 73      ; R118 := closure(Function #74)
565 [-]: MOVE      R0 R116      ; R0 := R116
566 [-]: MOVE      R0 R27       ; R0 := R27
567 [-]: MOVE      R0 R8        ; R0 := R8
568 [-]: SETGLOBAL R118 K242    ; NotifyAbilityActivateError := R118
569 [-]: SETGLOBAL R118 K243    ; 0xDD3CFA81 := R118
570 [-]: CLOSURE   R118 74      ; R118 := closure(Function #75)
571 [-]: CLOSURE   R119 75      ; R119 := closure(Function #76)
572 [-]: MOVE      R0 R4        ; R0 := R4
573 [-]: MOVE      R0 R8        ; R0 := R8
574 [-]: CLOSURE   R120 76      ; R120 := closure(Function #77)
575 [-]: MOVE      R0 R8        ; R0 := R8
576 [-]: MOVE      R0 R4        ; R0 := R4
577 [-]: MOVE      R0 R27       ; R0 := R27
578 [-]: CLOSURE   R121 77      ; R121 := closure(Function #78)
579 [-]: MOVE      R0 R14       ; R0 := R14
580 [-]: MOVE      R0 R62       ; R0 := R62
581 [-]: MOVE      R0 R8        ; R0 := R8
582 [-]: MOVE      R0 R27       ; R0 := R27
583 [-]: MOVE      R0 R38       ; R0 := R38
584 [-]: MOVE      R0 R25       ; R0 := R25
585 [-]: SETGLOBAL R121 K244    ; UpdateFocusAnchor := R121
586 [-]: SETGLOBAL R121 K245    ; 0x31A01CA1 := R121
587 [-]: CLOSURE   R121 78      ; R121 := closure(Function #79)
588 [-]: MOVE      R0 R33       ; R0 := R33
589 [-]: MOVE      R0 R59       ; R0 := R59
590 [-]: MOVE      R0 R27       ; R0 := R27
591 [-]: MOVE      R0 R30       ; R0 := R30
592 [-]: CLOSURE   R122 79      ; R122 := closure(Function #80)
593 [-]: MOVE      R0 R27       ; R0 := R27
594 [-]: MOVE      R0 R59       ; R0 := R59
595 [-]: MOVE      R0 R33       ; R0 := R33
596 [-]: CLOSURE   R123 80      ; R123 := closure(Function #81)
597 [-]: MOVE      R0 R49       ; R0 := R49
598 [-]: MOVE      R0 R27       ; R0 := R27
599 [-]: CLOSURE   R124 81      ; R124 := closure(Function #82)
600 [-]: MOVE      R0 R8        ; R0 := R8
601 [-]: SETGLOBAL R124 K246    ; OnChatMessage := R124
602 [-]: SETGLOBAL R124 K247    ; 0x77A79E68 := R124
603 [-]: CLOSURE   R124 82      ; R124 := closure(Function #83)
604 [-]: MOVE      R0 R8        ; R0 := R8
605 [-]: SETGLOBAL R124 K248    ; ToggleChatWindow := R124
606 [-]: SETGLOBAL R124 K249    ; 0xAAFA50A2 := R124
607 [-]: CLOSURE   R124 83      ; R124 := closure(Function #84)
608 [-]: CLOSURE   R125 84      ; R125 := closure(Function #85)
609 [-]: MOVE      R0 R4        ; R0 := R4
610 [-]: SETGLOBAL R125 K250    ; OnPlayersChanged := R125
611 [-]: SETGLOBAL R125 K251    ; 0x1AC2CE51 := R125
612 [-]: CLOSURE   R125 85      ; R125 := closure(Function #86)
613 [-]: MOVE      R0 R4        ; R0 := R4
614 [-]: MOVE      R0 R49       ; R0 := R49
615 [-]: MOVE      R0 R32       ; R0 := R32
616 [-]: MOVE      R0 R41       ; R0 := R41
617 [-]: MOVE      R0 R27       ; R0 := R27
618 [-]: MOVE      R0 R21       ; R0 := R21
619 [-]: MOVE      R0 R54       ; R0 := R54
620 [-]: MOVE      R0 R124      ; R0 := R124
621 [-]: MOVE      R0 R6        ; R0 := R6
622 [-]: MOVE      R0 R8        ; R0 := R8
623 [-]: MOVE      R0 R26       ; R0 := R26
624 [-]: CLOSURE   R126 86      ; R126 := closure(Function #87)
625 [-]: MOVE      R0 R28       ; R0 := R28
626 [-]: MOVE      R0 R66       ; R0 := R66
627 [-]: MOVE      R0 R80       ; R0 := R80
628 [-]: MOVE      R0 R6        ; R0 := R6
629 [-]: MOVE      R0 R17       ; R0 := R17
630 [-]: MOVE      R0 R74       ; R0 := R74
631 [-]: MOVE      R0 R77       ; R0 := R77
632 [-]: CLOSURE   R127 87      ; R127 := closure(Function #88)
633 [-]: MOVE      R0 R4        ; R0 := R4
634 [-]: SETGLOBAL R127 K252    ; ShowTransmission := R127
635 [-]: SETGLOBAL R127 K253    ; 0x9EFD08AE := R127
636 [-]: CLOSURE   R127 88      ; R127 := closure(Function #89)
637 [-]: MOVE      R0 R28       ; R0 := R28
638 [-]: MOVE      R0 R71       ; R0 := R71
639 [-]: MOVE      R0 R4        ; R0 := R4
640 [-]: MOVE      R0 R6        ; R0 := R6
641 [-]: MOVE      R0 R72       ; R0 := R72
642 [-]: MOVE      R0 R124      ; R0 := R124
643 [-]: CLOSURE   R128 89      ; R128 := closure(Function #90)
644 [-]: MOVE      R0 R28       ; R0 := R28
645 [-]: MOVE      R0 R71       ; R0 := R71
646 [-]: MOVE      R0 R6        ; R0 := R6
647 [-]: MOVE      R0 R127      ; R0 := R127
648 [-]: CLOSURE   R129 90      ; R129 := closure(Function #91)
649 [-]: MOVE      R0 R30       ; R0 := R30
650 [-]: MOVE      R0 R18       ; R0 := R18
651 [-]: MOVE      R0 R39       ; R0 := R39
652 [-]: MOVE      R0 R27       ; R0 := R27
653 [-]: MOVE      R0 R8        ; R0 := R8
654 [-]: CLOSURE   R130 91      ; R130 := closure(Function #92)
655 [-]: MOVE      R0 R129      ; R0 := R129
656 [-]: SETGLOBAL R130 K254    ; UpdateScanUpdateParams := R130
657 [-]: SETGLOBAL R130 K255    ; 0x39C4DD75 := R130
658 [-]: CLOSURE   R130 92      ; R130 := closure(Function #93)
659 [-]: MOVE      R0 R66       ; R0 := R66
660 [-]: MOVE      R0 R80       ; R0 := R80
661 [-]: MOVE      R0 R6        ; R0 := R6
662 [-]: MOVE      R0 R8        ; R0 := R8
663 [-]: CLOSURE   R131 93      ; R131 := closure(Function #94)
664 [-]: MOVE      R0 R8        ; R0 := R8
665 [-]: MOVE      R0 R66       ; R0 := R66
666 [-]: CLOSURE   R132 94      ; R132 := closure(Function #95)
667 [-]: MOVE      R0 R66       ; R0 := R66
668 [-]: MOVE      R0 R77       ; R0 := R77
669 [-]: MOVE      R0 R130      ; R0 := R130
670 [-]: MOVE      R0 R131      ; R0 := R131
671 [-]: MOVE      R0 R80       ; R0 := R80
672 [-]: MOVE      R0 R6        ; R0 := R6
673 [-]: MOVE      R0 R22       ; R0 := R22
674 [-]: CLOSURE   R133 95      ; R133 := closure(Function #96)
675 [-]: MOVE      R0 R66       ; R0 := R66
676 [-]: MOVE      R0 R80       ; R0 := R80
677 [-]: MOVE      R0 R6        ; R0 := R6
678 [-]: MOVE      R0 R22       ; R0 := R22
679 [-]: CLOSURE   R134 96      ; R134 := closure(Function #97)
680 [-]: MOVE      R0 R32       ; R0 := R32
681 [-]: MOVE      R0 R66       ; R0 := R66
682 [-]: MOVE      R0 R80       ; R0 := R80
683 [-]: MOVE      R0 R6        ; R0 := R6
684 [-]: MOVE      R0 R77       ; R0 := R77
685 [-]: CLOSURE   R135 97      ; R135 := closure(Function #98)
686 [-]: MOVE      R0 R4        ; R0 := R4
687 [-]: MOVE      R0 R6        ; R0 := R6
688 [-]: MOVE      R0 R46       ; R0 := R46
689 [-]: MOVE      R0 R80       ; R0 := R80
690 [-]: MOVE      R0 R77       ; R0 := R77
691 [-]: MOVE      R0 R66       ; R0 := R66
692 [-]: MOVE      R0 R132      ; R0 := R132
693 [-]: MOVE      R0 R133      ; R0 := R133
694 [-]: CLOSURE   R136 98      ; R136 := closure(Function #99)
695 [-]: MOVE      R0 R31       ; R0 := R31
696 [-]: MOVE      R0 R8        ; R0 := R8
697 [-]: CLOSURE   R137 99      ; R137 := closure(Function #100)
698 [-]: MOVE      R0 R32       ; R0 := R32
699 [-]: MOVE      R0 R100      ; R0 := R100
700 [-]: MOVE      R0 R28       ; R0 := R28
701 [-]: MOVE      R0 R33       ; R0 := R33
702 [-]: MOVE      R0 R18       ; R0 := R18
703 [-]: MOVE      R0 R4        ; R0 := R4
704 [-]: MOVE      R0 R35       ; R0 := R35
705 [-]: MOVE      R0 R26       ; R0 := R26
706 [-]: MOVE      R0 R30       ; R0 := R30
707 [-]: MOVE      R0 R6        ; R0 := R6
708 [-]: MOVE      R0 R53       ; R0 := R53
709 [-]: MOVE      R0 R54       ; R0 := R54
710 [-]: MOVE      R0 R27       ; R0 := R27
711 [-]: MOVE      R0 R51       ; R0 := R51
712 [-]: MOVE      R0 R49       ; R0 := R49
713 [-]: MOVE      R0 R89       ; R0 := R89
714 [-]: MOVE      R0 R31       ; R0 := R31
715 [-]: MOVE      R0 R136      ; R0 := R136
716 [-]: MOVE      R0 R48       ; R0 := R48
717 [-]: MOVE      R0 R85       ; R0 := R85
718 [-]: MOVE      R0 R21       ; R0 := R21
719 [-]: MOVE      R0 R60       ; R0 := R60
720 [-]: CLOSURE   R138 100     ; R138 := closure(Function #101)
721 [-]: MOVE      R0 R1        ; R0 := R1
722 [-]: MOVE      R0 R34       ; R0 := R34
723 [-]: MOVE      R0 R63       ; R0 := R63
724 [-]: CLOSURE   R139 101     ; R139 := closure(Function #102)
725 [-]: MOVE      R0 R4        ; R0 := R4
726 [-]: MOVE      R0 R15       ; R0 := R15
727 [-]: MOVE      R0 R138      ; R0 := R138
728 [-]: MOVE      R0 R67       ; R0 := R67
729 [-]: MOVE      R0 R30       ; R0 := R30
730 [-]: MOVE      R0 R32       ; R0 := R32
731 [-]: MOVE      R0 R65       ; R0 := R65
732 [-]: MOVE      R0 R6        ; R0 := R6
733 [-]: MOVE      R0 R27       ; R0 := R27
734 [-]: CLOSURE   R140 102     ; R140 := closure(Function #103)
735 [-]: MOVE      R0 R139      ; R0 := R139
736 [-]: SETGLOBAL R140 K256    ; UpdateFade := R140
737 [-]: SETGLOBAL R140 K257    ; 0x68297BC0 := R140
738 [-]: CLOSURE   R140 103     ; R140 := closure(Function #104)
739 [-]: MOVE      R0 R4        ; R0 := R4
740 [-]: MOVE      R0 R17       ; R0 := R17
741 [-]: MOVE      R0 R68       ; R0 := R68
742 [-]: MOVE      R0 R137      ; R0 := R137
743 [-]: MOVE      R0 R48       ; R0 := R48
744 [-]: MOVE      R0 R30       ; R0 := R30
745 [-]: MOVE      R0 R3        ; R0 := R3
746 [-]: MOVE      R0 R125      ; R0 := R125
747 [-]: MOVE      R0 R6        ; R0 := R6
748 [-]: MOVE      R0 R32       ; R0 := R32
749 [-]: MOVE      R0 R43       ; R0 := R43
750 [-]: MOVE      R0 R27       ; R0 := R27
751 [-]: MOVE      R0 R28       ; R0 := R28
752 [-]: MOVE      R0 R54       ; R0 := R54
753 [-]: MOVE      R0 R18       ; R0 := R18
754 [-]: MOVE      R0 R19       ; R0 := R19
755 [-]: MOVE      R0 R128      ; R0 := R128
756 [-]: MOVE      R0 R139      ; R0 := R139
757 [-]: MOVE      R0 R26       ; R0 := R26
758 [-]: MOVE      R0 R101      ; R0 := R101
759 [-]: MOVE      R0 R70       ; R0 := R70
760 [-]: MOVE      R0 R13       ; R0 := R13
761 [-]: MOVE      R0 R8        ; R0 := R8
762 [-]: MOVE      R0 R104      ; R0 := R104
763 [-]: MOVE      R0 R66       ; R0 := R66
764 [-]: MOVE      R0 R77       ; R0 := R77
765 [-]: MOVE      R0 R114      ; R0 := R114
766 [-]: MOVE      R0 R23       ; R0 := R23
767 [-]: MOVE      R0 R49       ; R0 := R49
768 [-]: MOVE      R0 R123      ; R0 := R123
769 [-]: MOVE      R0 R105      ; R0 := R105
770 [-]: MOVE      R0 R109      ; R0 := R109
771 [-]: MOVE      R0 R76       ; R0 := R76
772 [-]: MOVE      R0 R67       ; R0 := R67
773 [-]: MOVE      R0 R31       ; R0 := R31
774 [-]: MOVE      R0 R126      ; R0 := R126
775 [-]: MOVE      R0 R135      ; R0 := R135
776 [-]: MOVE      R0 R134      ; R0 := R134
777 [-]: MOVE      R0 R42       ; R0 := R42
778 [-]: SETGLOBAL R140 K258    ; Update := R140
779 [-]: SETGLOBAL R140 K259    ; 0x8C7099E9 := R140
780 [-]: LOADK     R140 K260    ; R140 := 4
781 [-]: CLOSURE   R141 104     ; R141 := closure(Function #105)
782 [-]: MOVE      R0 R23       ; R0 := R23
783 [-]: MOVE      R0 R4        ; R0 := R4
784 [-]: MOVE      R0 R32       ; R0 := R32
785 [-]: MOVE      R0 R140      ; R0 := R140
786 [-]: MOVE      R0 R28       ; R0 := R28
787 [-]: MOVE      R0 R8        ; R0 := R8
788 [-]: MOVE      R0 R6        ; R0 := R6
789 [-]: CLOSURE   R142 105     ; R142 := closure(Function #106)
790 [-]: MOVE      R0 R43       ; R0 := R43
791 [-]: MOVE      R0 R49       ; R0 := R49
792 [-]: MOVE      R0 R8        ; R0 := R8
793 [-]: MOVE      R0 R4        ; R0 := R4
794 [-]: MOVE      R0 R37       ; R0 := R37
795 [-]: MOVE      R0 R6        ; R0 := R6
796 [-]: MOVE      R0 R142      ; R0 := R142
797 [-]: CLOSURE   R143 106     ; R143 := closure(Function #107)
798 [-]: SETGLOBAL R143 K261    ; ForceShowMinimapProgressBar := R143
799 [-]: SETGLOBAL R143 K262    ; 0xEA6C8450 := R143
800 [-]: CLOSURE   R143 107     ; R143 := closure(Function #108)
801 [-]: SETGLOBAL R143 K263    ; ForceHideMinimapProgressBar := R143
802 [-]: SETGLOBAL R143 K264    ; 0xBCD18AA5 := R143
803 [-]: CLOSURE   R143 108     ; R143 := closure(Function #109)
804 [-]: SETGLOBAL R143 K265    ; SetMinimapProgressText := R143
805 [-]: SETGLOBAL R143 K266    ; 0x7DBA0797 := R143
806 [-]: LOADNIL   R143 R143    ; R143 := nil
807 [-]: CLOSURE   R144 109     ; R144 := closure(Function #110)
808 [-]: MOVE      R0 R143      ; R0 := R143
809 [-]: MOVE      R0 R12       ; R0 := R12
810 [-]: SETGLOBAL R144 K267    ; SetMinimapProgressValue := R144
811 [-]: SETGLOBAL R144 K268    ; 0x10C22AD7 := R144
812 [-]: CLOSURE   R144 110     ; R144 := closure(Function #111)
813 [-]: MOVE      R0 R4        ; R0 := R4
814 [-]: MOVE      R0 R61       ; R0 := R61
815 [-]: CLOSURE   R145 111     ; R145 := closure(Function #112)
816 [-]: MOVE      R0 R32       ; R0 := R32
817 [-]: MOVE      R0 R63       ; R0 := R63
818 [-]: MOVE      R0 R8        ; R0 := R8
819 [-]: MOVE      R0 R6        ; R0 := R6
820 [-]: MOVE      R0 R4        ; R0 := R4
821 [-]: MOVE      R0 R61       ; R0 := R61
822 [-]: MOVE      R0 R17       ; R0 := R17
823 [-]: MOVE      R0 R144      ; R0 := R144
824 [-]: CLOSURE   R146 112     ; R146 := closure(Function #113)
825 [-]: MOVE      R0 R145      ; R0 := R145
826 [-]: SETGLOBAL R146 K269    ; ShowBasicImpactMessage := R146
827 [-]: SETGLOBAL R146 K270    ; 0xD8211219 := R146
828 [-]: CLOSURE   R146 113     ; R146 := closure(Function #114)
829 [-]: MOVE      R0 R64       ; R0 := R64
830 [-]: CLOSURE   R147 114     ; R147 := closure(Function #115)
831 [-]: MOVE      R0 R32       ; R0 := R32
832 [-]: MOVE      R0 R14       ; R0 := R14
833 [-]: CLOSURE   R148 115     ; R148 := closure(Function #116)
834 [-]: MOVE      R0 R27       ; R0 := R27
835 [-]: MOVE      R0 R28       ; R0 := R28
836 [-]: SETGLOBAL R148 K271    ; RefreshGlowEffectsEnabled := R148
837 [-]: SETGLOBAL R148 K272    ; 0x37F1454C := R148
838 [-]: CLOSURE   R148 116     ; R148 := closure(Function #117)
839 [-]: MOVE      R0 R49       ; R0 := R49
840 [-]: MOVE      R0 R34       ; R0 := R34
841 [-]: MOVE      R0 R38       ; R0 := R38
842 [-]: MOVE      R0 R29       ; R0 := R29
843 [-]: MOVE      R0 R27       ; R0 := R27
844 [-]: MOVE      R0 R28       ; R0 := R28
845 [-]: MOVE      R0 R86       ; R0 := R86
846 [-]: MOVE      R0 R87       ; R0 := R87
847 [-]: MOVE      R0 R136      ; R0 := R136
848 [-]: CLOSURE   R149 117     ; R149 := closure(Function #118)
849 [-]: MOVE      R0 R27       ; R0 := R27
850 [-]: MOVE      R0 R4        ; R0 := R4
851 [-]: MOVE      R0 R39       ; R0 := R39
852 [-]: MOVE      R0 R8        ; R0 := R8
853 [-]: MOVE      R0 R1        ; R0 := R1
854 [-]: MOVE      R0 R2        ; R0 := R2
855 [-]: CLOSURE   R150 118     ; R150 := closure(Function #119)
856 [-]: MOVE      R0 R51       ; R0 := R51
857 [-]: SETGLOBAL R150 K273    ; SetStatEffectColumns := R150
858 [-]: SETGLOBAL R150 K274    ; 0x2EA886F := R150
859 [-]: CLOSURE   R150 119     ; R150 := closure(Function #120)
860 [-]: MOVE      R0 R51       ; R0 := R51
861 [-]: MOVE      R0 R17       ; R0 := R17
862 [-]: MOVE      R0 R8        ; R0 := R8
863 [-]: MOVE      R0 R96       ; R0 := R96
864 [-]: CLOSURE   R151 120     ; R151 := closure(Function #121)
865 [-]: MOVE      R0 R148      ; R0 := R148
866 [-]: MOVE      R0 R49       ; R0 := R49
867 [-]: SETGLOBAL R151 K275    ; OnProfileSaved := R151
868 [-]: SETGLOBAL R151 K276    ; 0xF048D49D := R151
869 [-]: CLOSURE   R151 121     ; R151 := closure(Function #122)
870 [-]: MOVE      R0 R22       ; R0 := R22
871 [-]: CLOSURE   R152 122     ; R152 := closure(Function #123)
872 [-]: MOVE      R0 R8        ; R0 := R8
873 [-]: CLOSURE   R153 123     ; R153 := closure(Function #124)
874 [-]: MOVE      R0 R8        ; R0 := R8
875 [-]: CLOSURE   R154 124     ; R154 := closure(Function #125)
876 [-]: MOVE      R0 R26       ; R0 := R26
877 [-]: CLOSURE   R155 125     ; R155 := closure(Function #126)
878 [-]: MOVE      R0 R65       ; R0 := R65
879 [-]: CLOSURE   R156 126     ; R156 := closure(Function #127)
880 [-]: CLOSURE   R157 127     ; R157 := closure(Function #128)
881 [-]: MOVE      R0 R27       ; R0 := R27
882 [-]: CLOSURE   R158 128     ; R158 := closure(Function #129)
883 [-]: MOVE      R0 R27       ; R0 := R27
884 [-]: CLOSURE   R159 129     ; R159 := closure(Function #130)
885 [-]: MOVE      R0 R75       ; R0 := R75
886 [-]: MOVE      R0 R118      ; R0 := R118
887 [-]: MOVE      R0 R120      ; R0 := R120
888 [-]: MOVE      R0 R119      ; R0 := R119
889 [-]: MOVE      R0 R91       ; R0 := R91
890 [-]: MOVE      R0 R92       ; R0 := R92
891 [-]: MOVE      R0 R93       ; R0 := R93
892 [-]: MOVE      R0 R94       ; R0 := R94
893 [-]: MOVE      R0 R95       ; R0 := R95
894 [-]: MOVE      R0 R145      ; R0 := R145
895 [-]: MOVE      R0 R144      ; R0 := R144
896 [-]: MOVE      R0 R146      ; R0 := R146
897 [-]: MOVE      R0 R151      ; R0 := R151
898 [-]: MOVE      R0 R152      ; R0 := R152
899 [-]: MOVE      R0 R153      ; R0 := R153
900 [-]: MOVE      R0 R154      ; R0 := R154
901 [-]: MOVE      R0 R155      ; R0 := R155
902 [-]: MOVE      R0 R156      ; R0 := R156
903 [-]: MOVE      R0 R157      ; R0 := R157
904 [-]: MOVE      R0 R14       ; R0 := R14
905 [-]: MOVE      R0 R121      ; R0 := R121
906 [-]: MOVE      R0 R122      ; R0 := R122
907 [-]: MOVE      R0 R77       ; R0 := R77
908 [-]: MOVE      R0 R80       ; R0 := R80
909 [-]: MOVE      R0 R78       ; R0 := R78
910 [-]: MOVE      R0 R158      ; R0 := R158
911 [-]: MOVE      R0 R38       ; R0 := R38
912 [-]: CLOSURE   R160 130     ; R160 := closure(Function #131)
913 [-]: MOVE      R0 R36       ; R0 := R36
914 [-]: MOVE      R0 R9        ; R0 := R9
915 [-]: MOVE      R0 R8        ; R0 := R8
916 [-]: CLOSURE   R161 131     ; R161 := closure(Function #132)
917 [-]: MOVE      R0 R15       ; R0 := R15
918 [-]: MOVE      R0 R4        ; R0 := R4
919 [-]: MOVE      R0 R100      ; R0 := R100
920 [-]: MOVE      R0 R32       ; R0 := R32
921 [-]: MOVE      R0 R148      ; R0 := R148
922 [-]: MOVE      R0 R6        ; R0 := R6
923 [-]: MOVE      R0 R66       ; R0 := R66
924 [-]: MOVE      R0 R70       ; R0 := R70
925 [-]: MOVE      R0 R22       ; R0 := R22
926 [-]: MOVE      R0 R84       ; R0 := R84
927 [-]: MOVE      R0 R83       ; R0 := R83
928 [-]: MOVE      R0 R14       ; R0 := R14
929 [-]: MOVE      R0 R10       ; R0 := R10
930 [-]: MOVE      R0 R38       ; R0 := R38
931 [-]: MOVE      R0 R68       ; R0 := R68
932 [-]: MOVE      R0 R160      ; R0 := R160
933 [-]: MOVE      R0 R64       ; R0 := R64
934 [-]: MOVE      R0 R141      ; R0 := R141
935 [-]: MOVE      R0 R142      ; R0 := R142
936 [-]: MOVE      R0 R46       ; R0 := R46
937 [-]: MOVE      R0 R8        ; R0 := R8
938 [-]: MOVE      R0 R27       ; R0 := R27
939 [-]: MOVE      R0 R25       ; R0 := R25
940 [-]: MOVE      R0 R5        ; R0 := R5
941 [-]: MOVE      R0 R69       ; R0 := R69
942 [-]: MOVE      R0 R76       ; R0 := R76
943 [-]: MOVE      R0 R17       ; R0 := R17
944 [-]: MOVE      R0 R138      ; R0 := R138
945 [-]: MOVE      R0 R42       ; R0 := R42
946 [-]: MOVE      R0 R81       ; R0 := R81
947 [-]: MOVE      R0 R0        ; R0 := R0
948 [-]: MOVE      R0 R147      ; R0 := R147
949 [-]: MOVE      R0 R57       ; R0 := R57
950 [-]: MOVE      R0 R150      ; R0 := R150
951 [-]: MOVE      R0 R159      ; R0 := R159
952 [-]: MOVE      R0 R67       ; R0 := R67
953 [-]: SETGLOBAL R161 K277    ; Initialize := R161
954 [-]: SETGLOBAL R161 K278    ; 0x62648036 := R161
955 [-]: CLOSURE   R161 132     ; R161 := closure(Function #133)
956 [-]: MOVE      R0 R4        ; R0 := R4
957 [-]: SETGLOBAL R161 K279    ; ScreenDuck := R161
958 [-]: SETGLOBAL R161 K280    ; 0x356181A7 := R161
959 [-]: CLOSURE   R161 133     ; R161 := closure(Function #134)
960 [-]: MOVE      R0 R47       ; R0 := R47
961 [-]: SETGLOBAL R161 K281    ; StatusEffectChanged := R161
962 [-]: SETGLOBAL R161 K282    ; 0x1A3BEEC0 := R161
963 [-]: CLOSURE   R161 134     ; R161 := closure(Function #135)
964 [-]: MOVE      R0 R47       ; R0 := R47
965 [-]: SETGLOBAL R161 K283    ; OnPlayerInventoryChanged := R161
966 [-]: SETGLOBAL R161 K284    ; 0x4B37D2DD := R161
967 [-]: CLOSURE   R161 135     ; R161 := closure(Function #136)
968 [-]: MOVE      R0 R49       ; R0 := R49
969 [-]: SETGLOBAL R161 K285    ; ToggleSquad := R161
970 [-]: SETGLOBAL R161 K286    ; 0xAFEEF32D := R161
971 [-]: CLOSURE   R161 136     ; R161 := closure(Function #137)
972 [-]: MOVE      R0 R14       ; R0 := R14
973 [-]: MOVE      R0 R38       ; R0 := R38
974 [-]: MOVE      R0 R25       ; R0 := R25
975 [-]: MOVE      R0 R27       ; R0 := R27
976 [-]: SETGLOBAL R161 K287    ; onHudMarginsChanged := R161
977 [-]: SETGLOBAL R161 K288    ; 0x7313D3F8 := R161
978 [-]: CLOSURE   R161 137     ; R161 := closure(Function #138)
979 [-]: MOVE      R0 R14       ; R0 := R14
980 [-]: SETGLOBAL R161 K289    ; HideAllExceptImpact := R161
981 [-]: SETGLOBAL R161 K290    ; 0x7A0AE20C := R161
982 [-]: CLOSURE   R161 138     ; R161 := closure(Function #139)
983 [-]: MOVE      R0 R56       ; R0 := R56
984 [-]: MOVE      R0 R55       ; R0 := R55
985 [-]: MOVE      R0 R8        ; R0 := R8
986 [-]: MOVE      R0 R6        ; R0 := R6
987 [-]: SETGLOBAL R161 K291    ; OnComboHitMultiplier := R161
988 [-]: SETGLOBAL R161 K292    ; 0x40DEA350 := R161
989 [-]: LOADNIL   R161 R161    ; R161 := nil
990 [-]: MOVE      R162 R0      ; R162 := R0
991 [-]: CLOSURE   R163 139     ; R163 := closure(Function #140)
992 [-]: MOVE      R0 R162      ; R0 := R162
993 [-]: SETGLOBAL R163 K293    ; Close_Dialog := R163
994 [-]: SETGLOBAL R163 K294    ; 0xED17AE2F := R163
995 [-]: CLOSURE   R163 140     ; R163 := closure(Function #141)
996 [-]: MOVE      R0 R161      ; R0 := R161
997 [-]: CLOSURE   R164 141     ; R164 := closure(Function #142)
998 [-]: MOVE      R0 R7        ; R0 := R7
999 [-]: MOVE      R0 R163      ; R0 := R163
1000 [-]: MOVE      R0 R162      ; R0 := R162
1001 [-]: MOVE      R0 R8        ; R0 := R8
1002 [-]: SETGLOBAL R164 K295    ; HUD_OnFindExternalSessionComplete := R164
1003 [-]: SETGLOBAL R164 K296    ; 0x391936F8 := R164
1004 [-]: CLOSURE   R164 142     ; R164 := closure(Function #143)
1005 [-]: MOVE      R0 R162      ; R0 := R162
1006 [-]: MOVE      R0 R161      ; R0 := R161
1007 [-]: MOVE      R0 R8        ; R0 := R8
1008 [-]: SETGLOBAL R164 K297    ; HUD_ExternalGameReady := R164
1009 [-]: SETGLOBAL R164 K298    ; 0x81CAE5B3 := R164
1010 [-]: CLOSURE   R164 143     ; R164 := closure(Function #144)
1011 [-]: MOVE      R0 R18       ; R0 := R18
1012 [-]: SETGLOBAL R164 K299    ; SwitchSpectator := R164
1013 [-]: SETGLOBAL R164 K300    ; 0xFCE9BE01 := R164
1014 [-]: CLOSURE   R164 144     ; R164 := closure(Function #145)
1015 [-]: SETGLOBAL R164 K301    ; SetMiniGameScore := R164
1016 [-]: SETGLOBAL R164 K302    ; 0xEB8EA74C := R164
1017 [-]: CLOSURE   R164 145     ; R164 := closure(Function #146)
1018 [-]: MOVE      R0 R27       ; R0 := R27
1019 [-]: CLOSURE   R165 146     ; R165 := closure(Function #147)
1020 [-]: MOVE      R0 R75       ; R0 := R75
1021 [-]: MOVE      R0 R164      ; R0 := R164
1022 [-]: SETGLOBAL R165 K303    ; InitMiniGameMode := R165
1023 [-]: SETGLOBAL R165 K304    ; 0x8773E3B7 := R165
1024 [-]: CLOSURE   R165 147     ; R165 := closure(Function #148)
1025 [-]: MOVE      R0 R40       ; R0 := R40
1026 [-]: SETGLOBAL R165 K305    ; IsMissionTimerUp := R165
1027 [-]: SETGLOBAL R165 K306    ; 0x1870821F := R165
1028 [-]: CLOSURE   R165 148     ; R165 := closure(Function #149)
1029 [-]: SETGLOBAL R165 K307    ; ForceOpenScreenFromTopMenu := R165
1030 [-]: SETGLOBAL R165 K308    ; 0x58E51AE4 := R165
1031 [-]: CLOSURE   R165 149     ; R165 := closure(Function #150)
1032 [-]: MOVE      R0 R149      ; R0 := R149
1033 [-]: SETGLOBAL R165 K309    ; OnPowerModifierHeld := R165
1034 [-]: SETGLOBAL R165 K310    ; 0x41FC7F4D := R165
1035 [-]: CLOSURE   R165 150     ; R165 := closure(Function #151)
1036 [-]: SETGLOBAL R165 K311    ; Disconnect := R165
1037 [-]: SETGLOBAL R165 K312    ; 0xC53FF352 := R165
1038 [-]: CLOSURE   R165 151     ; R165 := closure(Function #152)
1039 [-]: MOVE      R0 R27       ; R0 := R27
1040 [-]: MOVE      R0 R71       ; R0 := R71
1041 [-]: MOVE      R0 R73       ; R0 := R73
1042 [-]: MOVE      R0 R4        ; R0 := R4
1043 [-]: MOVE      R0 R6        ; R0 := R6
1044 [-]: MOVE      R0 R32       ; R0 := R32
1045 [-]: SETGLOBAL R165 K313    ; OnInspect := R165
1046 [-]: SETGLOBAL R165 K314    ; 0x6765C3E2 := R165
1047 [-]: CLOSURE   R165 152     ; R165 := closure(Function #153)
1048 [-]: CLOSURE   R166 153     ; R166 := closure(Function #154)
1049 [-]: MOVE      R0 R6        ; R0 := R6
1050 [-]: SETGLOBAL R166 K315    ; SyndicatePowerUp := R166
1051 [-]: SETGLOBAL R166 K316    ; 0x5EB28E5F := R166
1052 [-]: CLOSURE   R166 154     ; R166 := closure(Function #155)
1053 [-]: MOVE      R0 R6        ; R0 := R6
1054 [-]: MOVE      R0 R17       ; R0 := R17
1055 [-]: MOVE      R0 R165      ; R0 := R165
1056 [-]: SETGLOBAL R166 K317    ; SyndicatePowerActivated := R166
1057 [-]: SETGLOBAL R166 K318    ; 0xE19E07FA := R166
1058 [-]: CLOSURE   R166 155     ; R166 := closure(Function #156)
1059 [-]: CLOSURE   R167 156     ; R167 := closure(Function #157)
1060 [-]: SETGLOBAL R167 K319    ; SimarisScanChallengeHack := R167
1061 [-]: SETGLOBAL R167 K320    ; 0xB5C522F := R167
1062 [-]: CLOSURE   R167 157     ; R167 := closure(Function #158)
1063 [-]: MOVE      R0 R8        ; R0 := R8
1064 [-]: MOVE      R0 R166      ; R0 := R166
1065 [-]: SETGLOBAL R167 K321    ; ShowStandingEarned := R167
1066 [-]: SETGLOBAL R167 K322    ; 0x5D06249C := R167
1067 [-]: CLOSURE   R167 158     ; R167 := closure(Function #159)
1068 [-]: MOVE      R0 R57       ; R0 := R57
1069 [-]: MOVE      R0 R4        ; R0 := R4
1070 [-]: MOVE      R0 R19       ; R0 := R19
1071 [-]: MOVE      R0 R27       ; R0 := R27
1072 [-]: MOVE      R0 R39       ; R0 := R39
1073 [-]: SETGLOBAL R167 K323    ; IconCacheFlushed := R167
1074 [-]: SETGLOBAL R167 K324    ; 0x5C92AF6F := R167
1075 [-]: CLOSURE   R167 159     ; R167 := closure(Function #160)
1076 [-]: MOVE      R0 R54       ; R0 := R54
1077 [-]: MOVE      R0 R80       ; R0 := R80
1078 [-]: MOVE      R0 R6        ; R0 := R6
1079 [-]: SETGLOBAL R167 K325    ; CreateTreasureHuntFailTimer := R167
1080 [-]: SETGLOBAL R167 K326    ; 0x9C3F04A5 := R167
1081 [-]: CLOSURE   R167 160     ; R167 := closure(Function #161)
1082 [-]: MOVE      R0 R77       ; R0 := R77
1083 [-]: MOVE      R0 R54       ; R0 := R54
1084 [-]: SETGLOBAL R167 K327    ; DestroyTreasureHuntFailTimer := R167
1085 [-]: SETGLOBAL R167 K328    ; 0xC407494C := R167
1086 [-]: CLOSURE   R167 161     ; R167 := closure(Function #162)
1087 [-]: MOVE      R0 R36       ; R0 := R36
1088 [-]: MOVE      R0 R8        ; R0 := R8
1089 [-]: MOVE      R0 R21       ; R0 := R21
1090 [-]: SETGLOBAL R167 K329    ; OnPreDeath := R167
1091 [-]: SETGLOBAL R167 K330    ; 0xB974E546 := R167
1092 [-]: CLOSURE   R167 162     ; R167 := closure(Function #163)
1093 [-]: MOVE      R0 R26       ; R0 := R26
1094 [-]: MOVE      R0 R38       ; R0 := R38
1095 [-]: SETGLOBAL R167 K331    ; OnNewReticleMovie := R167
1096 [-]: SETGLOBAL R167 K332    ; 0xAF2FA80B := R167
1097 [-]: CLOSURE   R167 163     ; R167 := closure(Function #164)
1098 [-]: MOVE      R0 R138      ; R0 := R138
1099 [-]: SETGLOBAL R167 K333    ; OnGamepadTransition := R167
1100 [-]: SETGLOBAL R167 K334    ; 0x98E4F633 := R167
1101 [-]: CLOSURE   R167 164     ; R167 := closure(Function #165)
1102 [-]: MOVE      R0 R75       ; R0 := R75
1103 [-]: SETGLOBAL R167 K335    ; SetGenericMessageScale := R167
1104 [-]: SETGLOBAL R167 K336    ; 0x9ABA7FF3 := R167
1105 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 247
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 252
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 256
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := gRegion
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xA559F558"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: LOADK     R0 K2        ; R0 := 1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: LEN       R1 R1        ; R1 := # R1
  9 [-]: LOADK     R2 K2        ; R2 := 1
 10 [-]: FORPREP   R0 22        ; R0 -= R2; PC := 22
 11 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 19 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0xBEB3FD7C"]
 20 [-]: MOVE      R6 R0        ; R6 := R0
 21 [-]: CALL      R4 3 1       ; R4(R5,R6)
 22 [-]: FORLOOP   R0 11        ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
 23 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 266
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       3
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mDispatchingQueuedFuncs"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: VARARG    R3 0         ; R3 := ...
  7 [-]: CALL      R2 0 1       ; R2(R3,...)
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R2 K1        ; R2 := table
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xE6450C9D"]
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: VARARG    R6 0         ; R6 := ...
 15 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 16 [-]: CALL      R2 3 1       ; R2(R3,R4)
 17 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 279
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA5C58010"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["List"]
  6 [-]: CLOSURE   R3 0         ; R3 := closure(Function #5.1)
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: GETGLOBAL R1 K4        ; R1 := 0x63B09107
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["List"]
 11 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 12 [-]: JMP       84           ; PC := 84
 13 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["NeedsInit"]
 14 [-]: TEST      R6 1         ; if R6 then PC := 84
 15 [-]: JMP       84           ; PC := 84
 16 [-]: GETTABLE  R6 R5 K6     ; R6 := R5["Removing"]
 17 [-]: TEST      R6 1         ; if R6 then PC := 84
 18 [-]: JMP       84           ; PC := 84
 19 [-]: GETTABLE  R6 R5 K7     ; R6 := R5["Data"]
 20 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["IgnoreStacking"]
 21 [-]: TEST      R6 1         ; if R6 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETTABLE  R6 R5 K7     ; R6 := R5["Data"]
 24 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Visible"]
 25 [-]: EQ        0 R6 K10     ; if R6 ~= "0x0" then PC := 49
 26 [-]: JMP       49           ; PC := 49
 27 [-]: GETTABLE  R6 R5 K7     ; R6 := R5["Data"]
 28 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["OffsetY"]
 29 [-]: GETTABLE  R7 R5 K7     ; R7 := R5["Data"]
 30 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["Static"]
 31 [-]: TEST      R7 0         ; if not R7 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETUPVAL  R7 U1        ; R7 := U1
 34 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0xC20CC0C2"]
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: TEST      R7 0         ; if not R7 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETUPVAL  R7 U1        ; R7 := U1
 39 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7["0xBD6EB35A"]
 40 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 41 [-]: ADD       R6 R6 R7     ; R6 := R6 + R7
 42 [-]: GETGLOBAL R7 K15       ; R7 := mMovie
 43 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0x1C19D966"]
 44 [-]: GETTABLE  R9 R5 K17    ; R9 := R5["ClipName"]
 45 [-]: LOADK     R10 K18      ; R10 := "_y"
 46 [-]: MOVE      R11 R6       ; R11 := R6
 47 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 48 [-]: JMP       71           ; PC := 71
 49 [-]: GETTABLE  R7 R5 K7     ; R7 := R5["Data"]
 50 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["OffsetY"]
 51 [-]: ADD       R7 R0 R7     ; R7 := R0 + R7
 52 [-]: GETGLOBAL R8 K15       ; R8 := mMovie
 53 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8["0x1C19D966"]
 54 [-]: GETTABLE  R10 R5 K17   ; R10 := R5["ClipName"]
 55 [-]: LOADK     R11 K18      ; R11 := "_y"
 56 [-]: MOVE      R12 R7       ; R12 := R7
 57 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 58 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["Data"]
 59 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["Height"]
 60 [-]: GETTABLE  R9 R5 K7     ; R9 := R5["Data"]
 61 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["OffsetY"]
 62 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 63 [-]: LE        0 K0 R8      ; if 0 > R8 then PC := 71
 64 [-]: JMP       71           ; PC := 71
 65 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["Data"]
 66 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["Height"]
 67 [-]: ADD       R8 R0 R8     ; R8 := R0 + R8
 68 [-]: GETTABLE  R9 R5 K7     ; R9 := R5["Data"]
 69 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["OffsetY"]
 70 [-]: ADD       R0 R8 R9     ; R0 := R8 + R9
 71 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["Data"]
 72 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["OffsetX"]
 73 [-]: EQ        1 R8 K0      ; if R8 == 0 then PC := 84
 74 [-]: JMP       84           ; PC := 84
 75 [-]: GETGLOBAL R8 K15       ; R8 := mMovie
 76 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8["0x1C19D966"]
 77 [-]: GETTABLE  R10 R5 K17   ; R10 := R5["ClipName"]
 78 [-]: LOADK     R11 K21      ; R11 := "_x"
 79 [-]: GETTABLE  R12 R5 K22   ; R12 := R5["BaseX"]
 80 [-]: GETTABLE  R13 R5 K7    ; R13 := R5["Data"]
 81 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["OffsetX"]
 82 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
 83 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 84 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 13; R3 := R4 end
 85 [-]: JMP       13           ; PC := 13
 86 [-]: GETUPVAL  R8 U2        ; R8 := U2
 87 [-]: EQ        1 R8 R0      ; if R8 == R0 then PC := 109
 88 [-]: JMP       109          ; PC := 109
 89 [-]: MOVE      R0 R2        ; R0 := R2
 90 [-]: GETGLOBAL R8 K23       ; R8 := 0xECFDD17
 91 [-]: GETUPVAL  R9 U3        ; R9 := U3
 92 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 93 [-]: JMP       107          ; PC := 107
 94 [-]: GETTABLE  R13 R12 K24  ; R13 := R12["ApplyTrackerOffset"]
 95 [-]: TEST      R13 0        ; if not R13 then PC := 107
 96 [-]: JMP       107          ; PC := 107
 97 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
 98 [-]: GETTABLE  R14 R12 K26  ; R14 := R12["Movie"]
 99 [-]: CALL      R13 2 2      ; R13 := R13(R14)
100 [-]: TEST      R13 1        ; if R13 then PC := 107
101 [-]: JMP       107          ; PC := 107
102 [-]: GETTABLE  R13 R12 K26  ; R13 := R12["Movie"]
103 [-]: SELF      R13 R13 K27  ; R14 := R13; R13 := R13["0x458F27A9"]
104 [-]: LOADK     R15 K24      ; R15 := "ApplyTrackerOffset"
105 [-]: MOVE      R16 R0       ; R16 := R0
106 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
107 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 94; R10 := R11 end
108 [-]: JMP       94           ; PC := 94
109 [-]: RETURN    R0 1         ; return 


; Function #5.1:
;
; Name:            
; Defined at line: 282
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Data"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SortPriority"]
  3 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Data"]
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SortPriority"]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Index"]
  8 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Index"]
  9 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Data"]
 16 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SortPriority"]
 17 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Data"]
 18 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SortPriority"]
 19 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 320
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 324
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x6A235628
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: EQ        0 R3 K1      ; if R3 ~= "string" then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x63B09107
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["List"]
  9 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["Name"]
 12 [-]: EQ        0 R8 R0      ; if R8 ~= R0 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: MOVE      R2 R7        ; R2 := R7
 15 [-]: JMP       42           ; PC := 42
 16 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 11; R5 := R6 end
 17 [-]: JMP       11           ; PC := 11
 18 [-]: JMP       42           ; PC := 42
 19 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 20 [-]: MOVE      R9 R0        ; R9 := R0
 21 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 22 [-]: TEST      R8 1         ; if R8 then PC := 42
 23 [-]: JMP       42           ; PC := 42
 24 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 25 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["ClipName"]
 26 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 27 [-]: TEST      R8 1         ; if R8 then PC := 42
 28 [-]: JMP       42           ; PC := 42
 29 [-]: GETGLOBAL R8 K2        ; R8 := 0x63B09107
 30 [-]: GETUPVAL  R9 U0        ; R9 := U0
 31 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["List"]
 32 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Name"]
 35 [-]: GETTABLE  R14 R12 K4   ; R14 := R12["Name"]
 36 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: MOVE      R2 R12       ; R2 := R12
 39 [-]: JMP       42           ; PC := 42
 40 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 34; R10 := R11 end
 41 [-]: JMP       34           ; PC := 34
 42 [-]: TEST      R2 0         ; if not R2 then PC := 95
 43 [-]: JMP       95           ; PC := 95
 44 [-]: GETTABLE  R13 R2 K7    ; R13 := R2["Removing"]
 45 [-]: TEST      R13 1        ; if R13 then PC := 95
 46 [-]: JMP       95           ; PC := 95
 47 [-]: GETUPVAL  R13 U0       ; R13 := U0
 48 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["ActiveHealthTrackers"]
 49 [-]: GETTABLE  R14 R2 K6    ; R14 := R2["ClipName"]
 50 [-]: SETTABLE  R13 R14 K9   ; R13[R14] := nil
 51 [-]: GETUPVAL  R13 U0       ; R13 := U0
 52 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["ActiveTimers"]
 53 [-]: GETTABLE  R14 R2 K6    ; R14 := R2["ClipName"]
 54 [-]: SETTABLE  R13 R14 K9   ; R13[R14] := nil
 55 [-]: SETTABLE  R2 K7 K11    ; R2["Removing"] := "0x1"
 56 [-]: SETTABLE  R2 K12 K9    ; R2["NeedsInit"] := nil
 57 [-]: GETGLOBAL R13 K5       ; R13 := 0x400E7765
 58 [-]: MOVE      R14 R1       ; R14 := R1
 59 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 60 [-]: TEST      R13 0        ; if not R13 then PC := 69
 61 [-]: JMP       69           ; PC := 69
 62 [-]: GETTABLE  R13 R2 K13   ; R13 := R2["Data"]
 63 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["FadeTime"]
 64 [-]: TEST      R13 0        ; if not R13 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETTABLE  R13 R2 K13   ; R13 := R2["Data"]
 67 [-]: GETTABLE  R1 R13 K14   ; R1 := R13["FadeTime"]
 68 [-]: JMP       70           ; PC := 70
 69 [-]: LOADK     R1 K15       ; R1 := 0.15000000596046
 70 [-]: GETTABLE  R13 R2 K16   ; R13 := R2["Local"]
 71 [-]: TEST      R13 1        ; if R13 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETUPVAL  R13 U1       ; R13 := U1
 74 [-]: SELF      R13 R13 K17  ; R14 := R13; R13 := R13["0x13866EEC"]
 75 [-]: GETTABLE  R15 R2 K4    ; R15 := R2["Name"]
 76 [-]: CALL      R13 3 1      ; R13(R14,R15)
 77 [-]: GETGLOBAL R13 K18      ; R13 := 0x52E17A90
 78 [-]: GETGLOBAL R14 K19      ; R14 := mMovie
 79 [-]: GETTABLE  R15 R2 K6    ; R15 := R2["ClipName"]
 80 [-]: GETGLOBAL R16 K20      ; R16 := UISys
 81 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["FlashInstance_LINEAR"]
 82 [-]: NEWTABLE  R17 1 0      ; R17 := {}
 83 [-]: LOADK     R18 K22      ; R18 := "_alpha"
 84 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
 85 [-]: NEWTABLE  R18 1 0      ; R18 := {}
 86 [-]: LOADK     R19 K23      ; R19 := 0
 87 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 88 [-]: MOVE      R19 R1       ; R19 := R1
 89 [-]: LOADK     R20 K23      ; R20 := 0
 90 [-]: CLOSURE   R21 0        ; R21 := closure(Function #7.1)
 91 [-]: GETUPVAL  R0 U0        ; R0 := U0
 92 [-]: MOVE      R0 R2        ; R0 := R2
 93 [-]: GETUPVAL  R0 U2        ; R0 := U2
 94 [-]: CALL      R13 9 1      ; R13(R14,R15,R16,R17,R18,R19,R20,R21)
 95 [-]: RETURN    R0 1         ; return 


; Function #7.1:
;
; Name:            
; Defined at line: 357
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x63B09107
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["List"]
  4 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  5 [-]: JMP       38           ; PC := 38
  6 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["ClipName"]
  7 [-]: GETUPVAL  R6 U1        ; R6 := U1
  8 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["ClipName"]
  9 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 38
 10 [-]: JMP       38           ; PC := 38
 11 [-]: GETGLOBAL R5 K3        ; R5 := 0x8C64AFA9
 12 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
 13 [-]: GETUPVAL  R7 U1        ; R7 := U1
 14 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["ClipName"]
 15 [-]: LOADK     R8 K5        ; R8 := ".removeMovieClip"
 16 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 17 [-]: CALL      R5 3 1       ; R5(R6,R7)
 18 [-]: GETGLOBAL R5 K6        ; R5 := 0x400E7765
 19 [-]: GETUPVAL  R6 U1        ; R6 := U1
 20 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Display"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R5 K8        ; R5 := gRegion
 25 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x9B0A3887"]
 26 [-]: GETUPVAL  R7 U1        ; R7 := U1
 27 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Display"]
 28 [-]: CALL      R5 3 1       ; R5(R6,R7)
 29 [-]: GETGLOBAL R5 K10       ; R5 := table
 30 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xCDB1FD5E"]
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["List"]
 33 [-]: MOVE      R7 R3        ; R7 := R3
 34 [-]: CALL      R5 3 1       ; R5(R6,R7)
 35 [-]: GETUPVAL  R5 U2        ; R5 := U2
 36 [-]: CALL      R5 1 1       ; R5()
 37 [-]: JMP       40           ; PC := 40
 38 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 6; R2 := R3 end
 39 [-]: JMP       6            ; PC := 6
 40 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 374
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x63B09107
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["List"]
  4 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["Name"]
  7 [-]: EQ        0 R6 R0      ; if R6 ~= R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R5 2         ; return R5
 10 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 6; R3 := R4 end
 11 [-]: JMP       6            ; PC := 6
 12 [-]: LOADNIL   R6 R6        ; R6 := nil
 13 [-]: RETURN    R6 2         ; return R6
 14 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 383
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["NeedsInit"]
  2 [-]: TEST      R2 1         ; if R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Data"]
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Type"]
  7 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["ClipName"]
  8 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Data"]
  9 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Height"]
 10 [-]: EQ        0 R4 K5      ; if R4 ~= nil then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: GETGLOBAL R5 K6        ; R5 := 0x8C64AFA9
 15 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 16 [-]: LOADK     R7 K8        ; R7 := "HudTracker.Trackers."
 17 [-]: GETUPVAL  R8 U0        ; R8 := U0
 18 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["TypeInfo"]
 19 [-]: GETTABLE  R8 R8 R2     ; R8 := R8[R2]
 20 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Name"]
 21 [-]: LOADK     R9 K11       ; R9 := ".duplicateMovieClip"
 22 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 23 [-]: MOVE      R8 R1        ; R8 := R1
 24 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["Index"]
 25 [-]: ADD       R9 K13 R9    ; R9 := 500 + R9
 26 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 27 [-]: TEST      R4 1         ; if R4 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
 30 [-]: GETGLOBAL R6 K14       ; R6 := 0xF595ADDE
 31 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
 32 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x6B7B470B"]
 33 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["ClipName"]
 34 [-]: LOADK     R10 K16      ; R10 := "_height"
 35 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 36 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 37 [-]: SETTABLE  R5 K4 R6     ; R5["Height"] := R6
 38 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 39 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x6B7B470B"]
 40 [-]: MOVE      R7 R3        ; R7 := R3
 41 [-]: LOADK     R8 K18       ; R8 := "_x"
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: SETTABLE  R0 K17 R5    ; R0["BaseX"] := R5
 44 [-]: GETUPVAL  R5 U1        ; R5 := U1
 45 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["HT_PROGRESS_BAR"]
 46 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 117
 47 [-]: JMP       117          ; PC := 117
 48 [-]: TEST      R4 1         ; if R4 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
 51 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["Data"]
 52 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["Height"]
 53 [-]: SUB       R6 R6 K20    ; R6 := R6 - 15
 54 [-]: SETTABLE  R5 K4 R6     ; R5["Height"] := R6
 55 [-]: GETGLOBAL R5 K14       ; R5 := 0xF595ADDE
 56 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 57 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x6B7B470B"]
 58 [-]: MOVE      R8 R3        ; R8 := R3
 59 [-]: LOADK     R9 K22       ; R9 := ".Message"
 60 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 61 [-]: LOADK     R9 K18       ; R9 := "_x"
 62 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 63 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 64 [-]: SETTABLE  R0 K21 R5    ; R0["InitMessageXPos"] := R5
 65 [-]: GETGLOBAL R5 K14       ; R5 := 0xF595ADDE
 66 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 67 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x6B7B470B"]
 68 [-]: MOVE      R8 R3        ; R8 := R3
 69 [-]: LOADK     R9 K24       ; R9 := ".Goal"
 70 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 71 [-]: LOADK     R9 K18       ; R9 := "_x"
 72 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 73 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 74 [-]: SETTABLE  R0 K23 R5    ; R0["InitGoalXPos"] := R5
 75 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 76 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x6B7B470B"]
 77 [-]: MOVE      R7 R3        ; R7 := R3
 78 [-]: LOADK     R8 K24       ; R8 := ".Goal"
 79 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 80 [-]: LOADK     R8 K26       ; R8 := "_color"
 81 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 82 [-]: SETTABLE  R0 K25 R5    ; R0["InitTextColor"] := R5
 83 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 84 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0x7E1F26D7"]
 85 [-]: MOVE      R7 R3        ; R7 := R3
 86 [-]: LOADK     R8 K28       ; R8 := ".Progress"
 87 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 88 [-]: GETGLOBAL R8 K29       ; R8 := _G
 89 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["UIMaterial_Plain"]
 90 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 91 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 92 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0x7E1F26D7"]
 93 [-]: MOVE      R7 R3        ; R7 := R3
 94 [-]: LOADK     R8 K31       ; R8 := ".Progress.Fill"
 95 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 96 [-]: GETGLOBAL R8 K32       ; R8 := radialProgressMaterial
 97 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 98 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 99 [-]: SELF      R5 R5 K33    ; R6 := R5; R5 := R5["0x302AAB2F"]
100 [-]: MOVE      R7 R3        ; R7 := R3
101 [-]: LOADK     R8 K31       ; R8 := ".Progress.Fill"
102 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
103 [-]: LOADK     R8 K34       ; R8 := "AlphaTestThreshold"
104 [-]: LOADK     R9 K35       ; R9 := 0
105 [-]: LOADK     R10 K35      ; R10 := 0
106 [-]: LOADK     R11 K35      ; R11 := 0
107 [-]: LOADK     R12 K35      ; R12 := 0
108 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
109 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
110 [-]: GETTABLE  R5 R5 K36    ; R5 := R5["Icon"]
111 [-]: EQ        0 R5 K5      ; if R5 ~= nil then PC := 362
112 [-]: JMP       362          ; PC := 362
113 [-]: GETTABLE  R5 R0 K37    ; R5 := R0["0xACE7582B"]
114 [-]: GETGLOBAL R6 K38       ; R6 := defaultBroadcastIcon
115 [-]: CALL      R5 2 1       ; R5(R6)
116 [-]: JMP       362          ; PC := 362
117 [-]: GETUPVAL  R5 U1        ; R5 := U1
118 [-]: GETTABLE  R5 R5 K39    ; R5 := R5["HT_TIMER"]
119 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 129
120 [-]: JMP       129          ; PC := 129
121 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
122 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["Label"]
123 [-]: EQ        0 R5 K5      ; if R5 ~= nil then PC := 362
124 [-]: JMP       362          ; PC := 362
125 [-]: GETTABLE  R5 R0 K41    ; R5 := R0["0x37B51F78"]
126 [-]: LOADK     R6 K42       ; R6 := "/Lotus/Language/Menu/AlertPopup_Time"
127 [-]: CALL      R5 2 1       ; R5(R6)
128 [-]: JMP       362          ; PC := 362
129 [-]: GETUPVAL  R5 U1        ; R5 := U1
130 [-]: GETTABLE  R5 R5 K43    ; R5 := R5["HT_HEALTH_TRACKER"]
131 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 155
132 [-]: JMP       155          ; PC := 155
133 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
134 [-]: SELF      R5 R5 K44    ; R6 := R5; R5 := R5["0x1C19D966"]
135 [-]: MOVE      R7 R3        ; R7 := R3
136 [-]: LOADK     R8 K45       ; R8 := "_alpha"
137 [-]: LOADK     R9 K35       ; R9 := 0
138 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
139 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
140 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
141 [-]: MOVE      R7 R3        ; R7 := R3
142 [-]: LOADK     R8 K47       ; R8 := "LostHealth"
143 [-]: LOADK     R9 K45       ; R9 := "_alpha"
144 [-]: LOADK     R10 K35      ; R10 := 0
145 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
146 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
147 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
148 [-]: MOVE      R7 R3        ; R7 := R3
149 [-]: LOADK     R8 K48       ; R8 := "LostHealth.Label"
150 [-]: LOADK     R9 K49       ; R9 := "textColor"
151 [-]: GETGLOBAL R10 K29      ; R10 := _G
152 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["UIColor_Red"]
153 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
154 [-]: JMP       362          ; PC := 362
155 [-]: GETUPVAL  R5 U1        ; R5 := U1
156 [-]: GETTABLE  R5 R5 K51    ; R5 := R5["HT_OPPONENT_BAR"]
157 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 248
158 [-]: JMP       248          ; PC := 248
159 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
160 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
161 [-]: MOVE      R7 R3        ; R7 := R3
162 [-]: LOADK     R8 K52       ; R8 := "UpperProgressLabel"
163 [-]: LOADK     R9 K53       ; R9 := "text"
164 [-]: LOADK     R10 K54      ; R10 := "0%"
165 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
166 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
167 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
168 [-]: MOVE      R7 R3        ; R7 := R3
169 [-]: LOADK     R8 K55       ; R8 := "UpperProgressBar.Progress"
170 [-]: LOADK     R9 K56       ; R9 := "_xscale"
171 [-]: GETGLOBAL R10 K57      ; R10 := 0x6374FD98
172 [-]: GETGLOBAL R11 K58      ; R11 := math
173 [-]: GETTABLE  R11 R11 K59  ; R11 := R11["0xF7005A7B"]
174 [-]: LOADK     R12 K35      ; R12 := 0
175 [-]: CALL      R11 2 2      ; R11 := R11(R12)
176 [-]: LOADK     R12 K60      ; R12 := 0.0010000000474975
177 [-]: LOADK     R13 K61      ; R13 := 100
178 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
179 [-]: CALL      R5 0 1       ; R5(R6,...)
180 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
181 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
182 [-]: MOVE      R7 R3        ; R7 := R3
183 [-]: LOADK     R8 K62       ; R8 := "UpperProgressBar.Bg"
184 [-]: LOADK     R9 K26       ; R9 := "_color"
185 [-]: LOADK     R10 K63      ; R10 := 13421772
186 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
187 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
188 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
189 [-]: MOVE      R7 R3        ; R7 := R3
190 [-]: LOADK     R8 K64       ; R8 := "LowerProgressLabel"
191 [-]: LOADK     R9 K53       ; R9 := "text"
192 [-]: LOADK     R10 K54      ; R10 := "0%"
193 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
194 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
195 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
196 [-]: MOVE      R7 R3        ; R7 := R3
197 [-]: LOADK     R8 K65       ; R8 := "LowerProgressBar.Progress"
198 [-]: LOADK     R9 K56       ; R9 := "_xscale"
199 [-]: GETGLOBAL R10 K57      ; R10 := 0x6374FD98
200 [-]: GETGLOBAL R11 K58      ; R11 := math
201 [-]: GETTABLE  R11 R11 K59  ; R11 := R11["0xF7005A7B"]
202 [-]: LOADK     R12 K35      ; R12 := 0
203 [-]: CALL      R11 2 2      ; R11 := R11(R12)
204 [-]: LOADK     R12 K60      ; R12 := 0.0010000000474975
205 [-]: LOADK     R13 K61      ; R13 := 100
206 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
207 [-]: CALL      R5 0 1       ; R5(R6,...)
208 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
209 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
210 [-]: MOVE      R7 R3        ; R7 := R3
211 [-]: LOADK     R8 K66       ; R8 := "LowerProgressBar.Bg"
212 [-]: LOADK     R9 K26       ; R9 := "_color"
213 [-]: LOADK     R10 K63      ; R10 := 13421772
214 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
215 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
216 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0x7E1F26D7"]
217 [-]: MOVE      R7 R3        ; R7 := R3
218 [-]: LOADK     R8 K67       ; R8 := ".UpperProgressBar.Bg"
219 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
220 [-]: GETGLOBAL R8 K29       ; R8 := _G
221 [-]: GETTABLE  R8 R8 K68    ; R8 := R8["UIMaterial_SmoothEdgeNoDepthTest"]
222 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
223 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
224 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0x7E1F26D7"]
225 [-]: MOVE      R7 R3        ; R7 := R3
226 [-]: LOADK     R8 K69       ; R8 := ".LowerProgressBar.Bg"
227 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
228 [-]: GETGLOBAL R8 K29       ; R8 := _G
229 [-]: GETTABLE  R8 R8 K68    ; R8 := R8["UIMaterial_SmoothEdgeNoDepthTest"]
230 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
231 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
232 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0x7E1F26D7"]
233 [-]: MOVE      R7 R3        ; R7 := R3
234 [-]: LOADK     R8 K70       ; R8 := ".UpperProgressBar.Progress"
235 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
236 [-]: GETGLOBAL R8 K29       ; R8 := _G
237 [-]: GETTABLE  R8 R8 K68    ; R8 := R8["UIMaterial_SmoothEdgeNoDepthTest"]
238 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
239 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
240 [-]: SELF      R5 R5 K27    ; R6 := R5; R5 := R5["0x7E1F26D7"]
241 [-]: MOVE      R7 R3        ; R7 := R3
242 [-]: LOADK     R8 K71       ; R8 := ".LowerProgressBar.Progress"
243 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
244 [-]: GETGLOBAL R8 K29       ; R8 := _G
245 [-]: GETTABLE  R8 R8 K68    ; R8 := R8["UIMaterial_SmoothEdgeNoDepthTest"]
246 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
247 [-]: JMP       362          ; PC := 362
248 [-]: GETUPVAL  R5 U1        ; R5 := U1
249 [-]: GETTABLE  R5 R5 K72    ; R5 := R5["HT_LABEL"]
250 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 267
251 [-]: JMP       267          ; PC := 267
252 [-]: TEST      R4 1         ; if R4 then PC := 259
253 [-]: JMP       259          ; PC := 259
254 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
255 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["Data"]
256 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["Height"]
257 [-]: ADD       R6 R6 K20    ; R6 := R6 + 15
258 [-]: SETTABLE  R5 K4 R6     ; R5["Height"] := R6
259 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
260 [-]: SELF      R5 R5 K46    ; R6 := R5; R5 := R5["0x880196A7"]
261 [-]: MOVE      R7 R3        ; R7 := R3
262 [-]: LOADK     R8 K40       ; R8 := "Label"
263 [-]: LOADK     R9 K73       ; R9 := "tintIcons"
264 [-]: MOVE      R10 R1       ; R10 := R1
265 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
266 [-]: JMP       362          ; PC := 362
267 [-]: GETUPVAL  R5 U1        ; R5 := U1
268 [-]: GETTABLE  R5 R5 K74    ; R5 := R5["HT_ICON_BAR"]
269 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 362
270 [-]: JMP       362          ; PC := 362
271 [-]: TEST      R4 1         ; if R4 then PC := 278
272 [-]: JMP       278          ; PC := 278
273 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
274 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["Data"]
275 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["Height"]
276 [-]: ADD       R6 R6 K75    ; R6 := R6 + 20
277 [-]: SETTABLE  R5 K4 R6     ; R5["Height"] := R6
278 [-]: MOVE      R5 R3        ; R5 := R3
279 [-]: LOADK     R6 K76       ; R6 := ".Element"
280 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
281 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
282 [-]: SELF      R6 R6 K44    ; R7 := R6; R6 := R6["0x1C19D966"]
283 [-]: MOVE      R8 R5        ; R8 := R5
284 [-]: LOADK     R9 K77       ; R9 := "_visible"
285 [-]: MOVE      R10 R0       ; R10 := R0
286 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
287 [-]: GETGLOBAL R6 K78       ; R6 := 0x329BDC44
288 [-]: LOADK     R7 K79       ; R7 := "EE.Interface.Components.List"
289 [-]: CALL      R6 2 2       ; R6 := R6(R7)
290 [-]: GETTABLE  R7 R6 K80    ; R7 := R6["0xB40DEC3F"]
291 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
292 [-]: MOVE      R9 R3        ; R9 := R3
293 [-]: LOADK     R10 K76      ; R10 := ".Element"
294 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
295 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
296 [-]: SETTABLE  R7 K81 K35   ; R7["mForcedVerticalSeparation"] := 0
297 [-]: SETTABLE  R7 K82 K83   ; R7["mForcedHorizontalSeparation"] := 22
298 [-]: CLOSURE   R8 0         ; R8 := closure(Function #9.1)
299 [-]: MOVE      R0 R7        ; R0 := R7
300 [-]: MOVE      R0 R0        ; R0 := R0
301 [-]: SETTABLE  R7 K84 R8    ; R7["mElementDrawCallback"] := R8
302 [-]: GETTABLE  R8 R7 K86    ; R8 := R7["Redraw"]
303 [-]: SETTABLE  R7 K85 R8    ; R7["_IconList_Redraw"] := R8
304 [-]: CLOSURE   R8 1         ; R8 := closure(Function #9.2)
305 [-]: MOVE      R0 R0        ; R0 := R0
306 [-]: MOVE      R0 R3        ; R0 := R3
307 [-]: SETTABLE  R7 K86 R8    ; R7["Redraw"] := R8
308 [-]: GETGLOBAL R8 K87       ; R8 := 0xECFDD17
309 [-]: GETTABLE  R9 R0 K88    ; R9 := R0["List"]
310 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
311 [-]: JMP       320          ; PC := 320
312 [-]: GETGLOBAL R13 K89      ; R13 := 0x6A235628
313 [-]: MOVE      R14 R11      ; R14 := R11
314 [-]: CALL      R13 2 2      ; R13 := R13(R14)
315 [-]: EQ        0 R13 K90    ; if R13 ~= "string" then PC := 320
316 [-]: JMP       320          ; PC := 320
317 [-]: EQ        1 R11 K86    ; if R11 == "Redraw" then PC := 320
318 [-]: JMP       320          ; PC := 320
319 [-]: SETTABLE  R7 R11 R12   ; R7[R11] := R12
320 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 312; R10 := R11 end
321 [-]: JMP       312          ; PC := 312
322 [-]: GETTABLE  R13 R0 K88   ; R13 := R0["List"]
323 [-]: GETTABLE  R13 R13 K81  ; R13 := R13["mForcedVerticalSeparation"]
324 [-]: EQ        0 R13 K5     ; if R13 ~= nil then PC := 327
325 [-]: JMP       327          ; PC := 327
326 [-]: SETTABLE  R7 K81 K5    ; R7["mForcedVerticalSeparation"] := nil
327 [-]: GETTABLE  R13 R0 K88   ; R13 := R0["List"]
328 [-]: GETTABLE  R13 R13 K82  ; R13 := R13["mForcedHorizontalSeparation"]
329 [-]: EQ        0 R13 K5     ; if R13 ~= nil then PC := 332
330 [-]: JMP       332          ; PC := 332
331 [-]: SETTABLE  R7 K82 K5    ; R7["mForcedHorizontalSeparation"] := nil
332 [-]: SETTABLE  R0 K88 R7    ; R0["List"] := R7
333 [-]: SETTABLE  R0 K0 K5     ; R0["NeedsInit"] := nil
334 [-]: GETGLOBAL R13 K87      ; R13 := 0xECFDD17
335 [-]: GETTABLE  R14 R0 K91   ; R14 := R0["InitFuncQueue"]
336 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
337 [-]: JMP       346          ; PC := 346
338 [-]: GETTABLE  R18 R17 K92  ; R18 := R17[1]
339 [-]: GETTABLE  R19 R17 K93  ; R19 := R17[2]
340 [-]: GETTABLE  R20 R17 K94  ; R20 := R17[3]
341 [-]: GETTABLE  R21 R17 K95  ; R21 := R17[4]
342 [-]: GETTABLE  R22 R17 K96  ; R22 := R17[5]
343 [-]: GETTABLE  R23 R17 K97  ; R23 := R17[6]
344 [-]: GETTABLE  R24 R17 K98  ; R24 := R17[7]
345 [-]: CALL      R18 7 1      ; R18(R19,R20,R21,R22,R23,R24)
346 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 338; R15 := R16 end
347 [-]: JMP       338          ; PC := 338
348 [-]: GETTABLE  R18 R0 K99   ; R18 := R0["InitRedraw"]
349 [-]: TEST      R18 0        ; if not R18 then PC := 361
350 [-]: JMP       361          ; PC := 361
351 [-]: GETTABLE  R18 R0 K88   ; R18 := R0["List"]
352 [-]: SELF      R18 R18 K100 ; R19 := R18; R18 := R18["0x6470BAF4"]
353 [-]: GETTABLE  R20 R0 K99   ; R20 := R0["InitRedraw"]
354 [-]: GETTABLE  R20 R20 K101 ; R20 := R20["Callback"]
355 [-]: GETTABLE  R21 R0 K99   ; R21 := R0["InitRedraw"]
356 [-]: GETTABLE  R21 R21 K102 ; R21 := R21["ForceRedraw"]
357 [-]: GETTABLE  R22 R0 K99   ; R22 := R0["InitRedraw"]
358 [-]: GETTABLE  R22 R22 K103 ; R22 := R22["InstantDraw"]
359 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
360 [-]: SETTABLE  R0 K99 K5    ; R0["InitRedraw"] := nil
361 [-]: CLOSE     R5           ; SAVE R5,...
362 [-]: GETUPVAL  R5 U2        ; R5 := U2
363 [-]: GETTABLE  R5 R5 K104   ; R5 := R5["IsAlternateHud"]
364 [-]: TEST      R5 0         ; if not R5 then PC := 374
365 [-]: JMP       374          ; PC := 374
366 [-]: GETUPVAL  R5 U1        ; R5 := U1
367 [-]: GETTABLE  R5 R5 K39    ; R5 := R5["HT_TIMER"]
368 [-]: EQ        1 R2 R5      ; if R2 == R5 then PC := 374
369 [-]: JMP       374          ; PC := 374
370 [-]: GETTABLE  R5 R0 K105   ; R5 := R0["0x625791A8"]
371 [-]: MOVE      R6 R0        ; R6 := R0
372 [-]: CALL      R5 2 1       ; R5(R6)
373 [-]: SETTABLE  R0 K106 K107 ; R0["IgnoreVis"] := "0x1"
374 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
375 [-]: GETTABLE  R5 R5 K108   ; R5 := R5["FadeTime"]
376 [-]: TEST      R5 0         ; if not R5 then PC := 402
377 [-]: JMP       402          ; PC := 402
378 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Data"]
379 [-]: GETTABLE  R5 R5 K108   ; R5 := R5["FadeTime"]
380 [-]: LT        0 K35 R5     ; if 0 >= R5 then PC := 402
381 [-]: JMP       402          ; PC := 402
382 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
383 [-]: SELF      R5 R5 K44    ; R6 := R5; R5 := R5["0x1C19D966"]
384 [-]: MOVE      R7 R3        ; R7 := R3
385 [-]: LOADK     R8 K45       ; R8 := "_alpha"
386 [-]: LOADK     R9 K35       ; R9 := 0
387 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
388 [-]: GETGLOBAL R5 K109      ; R5 := 0x52E17A90
389 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
390 [-]: MOVE      R7 R3        ; R7 := R3
391 [-]: GETGLOBAL R8 K110      ; R8 := UISys
392 [-]: GETTABLE  R8 R8 K111   ; R8 := R8["FlashInstance_LINEAR"]
393 [-]: NEWTABLE  R9 1 0       ; R9 := {}
394 [-]: LOADK     R10 K45      ; R10 := "_alpha"
395 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
396 [-]: NEWTABLE  R10 1 0      ; R10 := {}
397 [-]: LOADK     R11 K61      ; R11 := 100
398 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
399 [-]: GETTABLE  R11 R0 K1    ; R11 := R0["Data"]
400 [-]: GETTABLE  R11 R11 K108 ; R11 := R11["FadeTime"]
401 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
402 [-]: SETTABLE  R0 K0 K5     ; R0["NeedsInit"] := nil
403 [-]: GETTABLE  R5 R0 K112   ; R5 := R0["InitCallBack"]
404 [-]: TEST      R5 0         ; if not R5 then PC := 410
405 [-]: JMP       410          ; PC := 410
406 [-]: GETTABLE  R5 R0 K113   ; R5 := R0["0x94FE059D"]
407 [-]: MOVE      R6 R0        ; R6 := R0
408 [-]: CALL      R5 2 1       ; R5(R6)
409 [-]: SETTABLE  R0 K112 K5   ; R0["InitCallBack"] := nil
410 [-]: GETGLOBAL R5 K114      ; R5 := 0x400E7765
411 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["Data"]
412 [-]: GETTABLE  R6 R6 K115   ; R6 := R6["Location"]
413 [-]: CALL      R5 2 2       ; R5 := R5(R6)
414 [-]: TEST      R5 1         ; if R5 then PC := 426
415 [-]: JMP       426          ; PC := 426
416 [-]: GETGLOBAL R5 K116      ; R5 := 0x63B09107
417 [-]: GETGLOBAL R6 K117      ; R6 := _T
418 [-]: GETTABLE  R6 R6 K118   ; R6 := R6["LocationTrackerAddedCallbacks"]
419 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
420 [-]: JMP       424          ; PC := 424
421 [-]: MOVE      R10 R9       ; R10 := R9
422 [-]: MOVE      R11 R0       ; R11 := R0
423 [-]: CALL      R10 2 1      ; R10(R11)
424 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 421; R7 := R8 end
425 [-]: JMP       421          ; PC := 421
426 [-]: GETUPVAL  R10 U3       ; R10 := U3
427 [-]: CALL      R10 1 1      ; R10()
428 [-]: RETURN    R0 1         ; return 


; Function #9.1:
;
; Name:            
; Defined at line: 448
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: CLOSURE   R1 0         ; R1 := closure(Function #9.1.1)
  2 [-]: GETUPVAL  R0 U0        ; R0 := U0
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0xECFDD17
  7 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["StackedElements"]
  8 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  9 [-]: JMP       49           ; PC := 49
 10 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 11 [-]: GETTABLE  R8 R6 K3     ; R8 := R6["mClipName"]
 12 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 13 [-]: TEST      R7 0         ; if not R7 then PC := 45
 14 [-]: JMP       45           ; PC := 45
 15 [-]: GETGLOBAL R7 K4        ; R7 := 0x8C64AFA9
 16 [-]: GETGLOBAL R8 K5        ; R8 := mMovie
 17 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["mClipName"]
 18 [-]: LOADK     R10 K6       ; R10 := ".duplicateMovieClip"
 19 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 20 [-]: GETTABLE  R10 R6 K7    ; R10 := R6["Name"]
 21 [-]: GETTABLE  R11 R6 K8    ; R11 := R6["Depth"]
 22 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 23 [-]: LOADK     R7 K9        ; R7 := 0
 24 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["mClipName"]
 25 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8["0xDE44F664"]
 26 [-]: LOADK     R10 K11      ; R10 := "%."
 27 [-]: ADD       R11 R7 K12   ; R11 := R7 + 1
 28 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 29 [-]: TEST      R8 0         ; if not R8 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: MOVE      R7 R8        ; R7 := R8
 32 [-]: JMP       24           ; PC := 24
 33 [-]: JMP       35           ; PC := 35
 34 [-]: JMP       24           ; PC := 24
 35 [-]: LT        0 K9 R7      ; if 0 >= R7 then PC := 45
 36 [-]: JMP       45           ; PC := 45
 37 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["mClipName"]
 38 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9["0x7B782033"]
 39 [-]: LOADK     R11 K12      ; R11 := 1
 40 [-]: MOVE      R12 R7       ; R12 := R7
 41 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 42 [-]: GETTABLE  R10 R6 K7    ; R10 := R6["Name"]
 43 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 44 [-]: SETTABLE  R6 K3 R9     ; R6["mClipName"] := R9
 45 [-]: MOVE      R9 R1        ; R9 := R1
 46 [-]: MOVE      R10 R6       ; R10 := R6
 47 [-]: MOVE      R11 R0       ; R11 := R0
 48 [-]: CALL      R9 3 1       ; R9(R10,R11)
 49 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 10; R4 := R5 end
 50 [-]: JMP       10           ; PC := 10
 51 [-]: GETUPVAL  R9 U1        ; R9 := U1
 52 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["CustomDrawFunction"]
 53 [-]: TEST      R9 0         ; if not R9 then PC := 61
 54 [-]: JMP       61           ; PC := 61
 55 [-]: GETUPVAL  R9 U1        ; R9 := U1
 56 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["0x83E5EC7C"]
 57 [-]: GETGLOBAL R10 K5       ; R10 := mMovie
 58 [-]: GETUPVAL  R11 U0       ; R11 := U0
 59 [-]: MOVE      R12 R0       ; R12 := R0
 60 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 61 [-]: RETURN    R0 1         ; return 


; Function #9.1.1:
;
; Name:            
; Defined at line: 450
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Icon"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  5 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x26581636"]
  6 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
  7 [-]: LOADK     R5 K4        ; R5 := ".Bg"
  8 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  9 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["Icon"]
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["Rotation"]
 12 [-]: TEST      R2 0         ; if not R2 then PC := 21
 13 [-]: JMP       21           ; PC := 21
 14 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 15 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x880196A7"]
 16 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 17 [-]: LOADK     R5 K7        ; R5 := "Bg"
 18 [-]: LOADK     R6 K8        ; R6 := "_rotation"
 19 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["Rotation"]
 20 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 21 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["Width"]
 22 [-]: TEST      R2 0         ; if not R2 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 25 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x880196A7"]
 26 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 27 [-]: LOADK     R5 K7        ; R5 := "Bg"
 28 [-]: LOADK     R6 K10       ; R6 := "_width"
 29 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["Width"]
 30 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 31 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["Height"]
 32 [-]: TEST      R2 0         ; if not R2 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 35 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x880196A7"]
 36 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 37 [-]: LOADK     R5 K7        ; R5 := "Bg"
 38 [-]: LOADK     R6 K12       ; R6 := "_height"
 39 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["Height"]
 40 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 41 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["X"]
 42 [-]: TEST      R2 0         ; if not R2 then PC := 74
 43 [-]: JMP       74           ; PC := 74
 44 [-]: LOADK     R2 K14       ; R2 := 0
 45 [-]: TEST      R1 0         ; if not R1 then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mClipName"]
 48 [-]: TEST      R3 0         ; if not R3 then PC := 61
 49 [-]: JMP       61           ; PC := 61
 50 [-]: GETGLOBAL R3 K15       ; R3 := 0xF595ADDE
 51 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 52 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4["0x6B7B470B"]
 53 [-]: GETTABLE  R6 R1 K3     ; R6 := R1["mClipName"]
 54 [-]: LOADK     R7 K17       ; R7 := "_x"
 55 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 56 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 57 [-]: MOVE      R2 R3        ; R2 := R3
 58 [-]: EQ        0 R2 K18     ; if R2 ~= nil then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADK     R2 K14       ; R2 := 0
 61 [-]: TEST      R1 1         ; if R1 then PC := 67
 62 [-]: JMP       67           ; PC := 67
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["mForcedHorizontalSeparation"]
 65 [-]: TEST      R3 1         ; if R3 then PC := 74
 66 [-]: JMP       74           ; PC := 74
 67 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 68 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0x1C19D966"]
 69 [-]: GETTABLE  R5 R0 K3     ; R5 := R0["mClipName"]
 70 [-]: LOADK     R6 K17       ; R6 := "_x"
 71 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["X"]
 72 [-]: ADD       R7 R7 R2     ; R7 := R7 + R2
 73 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 74 [-]: GETTABLE  R3 R0 K21    ; R3 := R0["Y"]
 75 [-]: TEST      R3 0         ; if not R3 then PC := 107
 76 [-]: JMP       107          ; PC := 107
 77 [-]: LOADK     R3 K14       ; R3 := 0
 78 [-]: TEST      R1 0         ; if not R1 then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mClipName"]
 81 [-]: TEST      R4 0         ; if not R4 then PC := 94
 82 [-]: JMP       94           ; PC := 94
 83 [-]: GETGLOBAL R4 K15       ; R4 := 0xF595ADDE
 84 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 85 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x6B7B470B"]
 86 [-]: GETTABLE  R7 R1 K3     ; R7 := R1["mClipName"]
 87 [-]: LOADK     R8 K22       ; R8 := "_y"
 88 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 89 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 90 [-]: MOVE      R3 R4        ; R3 := R4
 91 [-]: EQ        0 R3 K18     ; if R3 ~= nil then PC := 94
 92 [-]: JMP       94           ; PC := 94
 93 [-]: LOADK     R3 K14       ; R3 := 0
 94 [-]: TEST      R1 1         ; if R1 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: GETUPVAL  R4 U0        ; R4 := U0
 97 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["mForcedVerticalSeparation"]
 98 [-]: TEST      R4 1         ; if R4 then PC := 107
 99 [-]: JMP       107          ; PC := 107
100 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
101 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0x1C19D966"]
102 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mClipName"]
103 [-]: LOADK     R7 K22       ; R7 := "_y"
104 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["Y"]
105 [-]: ADD       R8 R8 R3     ; R8 := R8 + R3
106 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
107 [-]: GETTABLE  R4 R0 K24    ; R4 := R0["Label"]
108 [-]: TEST      R4 0         ; if not R4 then PC := 118
109 [-]: JMP       118          ; PC := 118
110 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
111 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4["0xD6A79FE9"]
112 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mClipName"]
113 [-]: LOADK     R7 K26       ; R7 := ".Label"
114 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
115 [-]: LOADK     R7 K27       ; R7 := "text"
116 [-]: GETTABLE  R8 R0 K24    ; R8 := R0["Label"]
117 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
118 [-]: GETTABLE  R4 R0 K28    ; R4 := R0["Alpha"]
119 [-]: TEST      R4 0         ; if not R4 then PC := 127
120 [-]: JMP       127          ; PC := 127
121 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
122 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0x1C19D966"]
123 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mClipName"]
124 [-]: LOADK     R7 K29       ; R7 := "_alpha"
125 [-]: GETTABLE  R8 R0 K28    ; R8 := R0["Alpha"]
126 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
127 [-]: GETTABLE  R4 R0 K30    ; R4 := R0["Visible"]
128 [-]: TEST      R4 0         ; if not R4 then PC := 136
129 [-]: JMP       136          ; PC := 136
130 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
131 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0x1C19D966"]
132 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mClipName"]
133 [-]: LOADK     R7 K31       ; R7 := "_visible"
134 [-]: GETTABLE  R8 R0 K30    ; R8 := R0["Visible"]
135 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
136 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["Color"]
137 [-]: TEST      R4 0         ; if not R4 then PC := 145
138 [-]: JMP       145          ; PC := 145
139 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
140 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0x1C19D966"]
141 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mClipName"]
142 [-]: LOADK     R7 K33       ; R7 := "_color"
143 [-]: GETTABLE  R8 R0 K32    ; R8 := R0["Color"]
144 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
145 [-]: RETURN    R0 1         ; return 


; Function #9.2:
;
; Name:            
; Defined at line: 527
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["List"]
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mElements"]
 10 [-]: LEN       R4 R4        ; R4 := # R4
 11 [-]: LT        0 K4 R4      ; if 0 >= R4 then PC := 29
 12 [-]: JMP       29           ; PC := 29
 13 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 14 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
 15 [-]: GETUPVAL  R6 U1        ; R6 := U1
 16 [-]: LOADK     R7 K6        ; R7 := "Element"
 17 [-]: LOADK     R8 K7        ; R8 := "_visible"
 18 [-]: GETUPVAL  R9 U0        ; R9 := U0
 19 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["List"]
 20 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["mElements"]
 21 [-]: GETTABLE  R9 R9 K8     ; R9 := R9[1]
 22 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["Visible"]
 23 [-]: EQ        0 R9 K10     ; if R9 ~= "0x0" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R9 R0        ; R9 := R0
 26 [-]: MOVE      R9 R1        ; R9 := R1
 27 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 30 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
 31 [-]: GETUPVAL  R6 U1        ; R6 := U1
 32 [-]: LOADK     R7 K6        ; R7 := "Element"
 33 [-]: LOADK     R8 K7        ; R8 := "_visible"
 34 [-]: MOVE      R9 R1        ; R9 := R1
 35 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 36 [-]: SELF      R4 R0 K11    ; R5 := R0; R4 := R0["0xC24C6981"]
 37 [-]: MOVE      R6 R1        ; R6 := R1
 38 [-]: MOVE      R7 R2        ; R7 := R2
 39 [-]: MOVE      R8 R3        ; R8 := R3
 40 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 41 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 594
; #Upvalues:       10
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0x63B09107
  2 [-]: GETUPVAL  R8 U0        ; R8 := U0
  3 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["List"]
  4 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETTABLE  R12 R11 K2   ; R12 := R11["Name"]
  7 [-]: EQ        0 R12 R0     ; if R12 ~= R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R11 2        ; return R11
 10 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 6; R9 := R10 end
 11 [-]: JMP       6            ; PC := 6
 12 [-]: EQ        0 R4 K3      ; if R4 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R2 K4        ; R2 := 0.15000000596046
 18 [-]: GETGLOBAL R12 K5       ; R12 := 0x400E7765
 19 [-]: MOVE      R13 R3       ; R13 := R3
 20 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 21 [-]: TEST      R12 1        ; if R12 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: EQ        1 R3 K6      ; if R3 == "0x0" then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: EQ        0 R3 K7      ; if R3 ~= "0x1" then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADK     R3 K8        ; R3 := 5
 28 [-]: EQ        0 R6 K3      ; if R6 ~= nil then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R6 R1        ; R6 := R1
 31 [-]: GETUPVAL  R12 U0       ; R12 := U0
 32 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["TypeInfo"]
 33 [-]: GETTABLE  R12 R12 R1   ; R12 := R12[R1]
 34 [-]: EQ        1 R12 K3     ; if R12 == nil then PC := 472
 35 [-]: JMP       472          ; PC := 472
 36 [-]: GETUPVAL  R12 U0       ; R12 := U0
 37 [-]: GETUPVAL  R13 U0       ; R13 := U0
 38 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["CurrentIndex"]
 39 [-]: ADD       R13 R13 K11  ; R13 := R13 + 1
 40 [-]: SETTABLE  R12 K10 R13  ; R12["CurrentIndex"] := R13
 41 [-]: GETUPVAL  R12 U0       ; R12 := U0
 42 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["TypeInfo"]
 43 [-]: GETTABLE  R12 R12 R1   ; R12 := R12[R1]
 44 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["Name"]
 45 [-]: GETUPVAL  R13 U0       ; R13 := U0
 46 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["CurrentIndex"]
 47 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 48 [-]: LOADK     R13 K12      ; R13 := "HudTracker.Trackers."
 49 [-]: MOVE      R14 R12      ; R14 := R12
 50 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 51 [-]: MOVE      R14 R1       ; R14 := R1
 52 [-]: NEWTABLE  R15 0 8      ; R15 := {}
 53 [-]: SETTABLE  R15 K13 R13  ; R15["ClipName"] := R13
 54 [-]: SETTABLE  R15 K14 K7   ; R15["NeedsInit"] := "0x1"
 55 [-]: SETTABLE  R15 K15 R5   ; R15["InitCallBack"] := R5
 56 [-]: SETTABLE  R15 K2 R0    ; R15["Name"] := R0
 57 [-]: GETGLOBAL R16 K17      ; R16 := mMovie
 58 [-]: SETTABLE  R15 K16 R16  ; R15["Movie"] := R16
 59 [-]: MOVE      R16 R4       ; R16 := R4
 60 [-]: SETTABLE  R15 K18 R16  ; R15["Local"] := R16
 61 [-]: GETUPVAL  R16 U0       ; R16 := U0
 62 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["CurrentIndex"]
 63 [-]: SETTABLE  R15 K19 R16  ; R15["Index"] := R16
 64 [-]: NEWTABLE  R16 0 5      ; R16 := {}
 65 [-]: SETTABLE  R16 K21 R1   ; R16["Type"] := R1
 66 [-]: SETTABLE  R16 K22 K23  ; R16["OffsetX"] := 0
 67 [-]: SETTABLE  R16 K24 K23  ; R16["OffsetY"] := 0
 68 [-]: SETTABLE  R16 K25 R2   ; R16["FadeTime"] := R2
 69 [-]: SETTABLE  R16 K26 R3   ; R16["SortPriority"] := R3
 70 [-]: SETTABLE  R15 K20 R16  ; R15["Data"] := R16
 71 [-]: CLOSURE   R16 0        ; R16 := closure(Function #10.1)
 72 [-]: MOVE      R0 R4        ; R0 := R4
 73 [-]: MOVE      R0 R15       ; R0 := R15
 74 [-]: GETUPVAL  R0 U1        ; R0 := U1
 75 [-]: GETUPVAL  R0 U2        ; R0 := U2
 76 [-]: CLOSURE   R17 1        ; R17 := closure(Function #10.2)
 77 [-]: MOVE      R0 R15       ; R0 := R15
 78 [-]: MOVE      R0 R16       ; R0 := R16
 79 [-]: GETUPVAL  R0 U2        ; R0 := U2
 80 [-]: GETUPVAL  R0 U3        ; R0 := U3
 81 [-]: SETTABLE  R15 K27 R17  ; R15["SetOffset"] := R17
 82 [-]: CLOSURE   R17 2        ; R17 := closure(Function #10.3)
 83 [-]: MOVE      R0 R15       ; R0 := R15
 84 [-]: MOVE      R0 R16       ; R0 := R16
 85 [-]: GETUPVAL  R0 U2        ; R0 := U2
 86 [-]: GETUPVAL  R0 U3        ; R0 := U3
 87 [-]: SETTABLE  R15 K28 R17  ; R15["SetHeight"] := R17
 88 [-]: CLOSURE   R17 3        ; R17 := closure(Function #10.4)
 89 [-]: MOVE      R0 R15       ; R0 := R15
 90 [-]: MOVE      R0 R16       ; R0 := R16
 91 [-]: GETUPVAL  R0 U2        ; R0 := U2
 92 [-]: GETUPVAL  R0 U3        ; R0 := U3
 93 [-]: MOVE      R0 R13       ; R0 := R13
 94 [-]: SETTABLE  R15 K29 R17  ; R15["SetVisible"] := R17
 95 [-]: CLOSURE   R17 4        ; R17 := closure(Function #10.5)
 96 [-]: MOVE      R0 R15       ; R0 := R15
 97 [-]: MOVE      R0 R16       ; R0 := R16
 98 [-]: GETUPVAL  R0 U2        ; R0 := U2
 99 [-]: GETUPVAL  R0 U3        ; R0 := U3
100 [-]: SETTABLE  R15 K30 R17  ; R15["IgnoreStacking"] := R17
101 [-]: CLOSURE   R17 5        ; R17 := closure(Function #10.6)
102 [-]: MOVE      R0 R15       ; R0 := R15
103 [-]: MOVE      R0 R16       ; R0 := R16
104 [-]: GETUPVAL  R0 U2        ; R0 := U2
105 [-]: GETUPVAL  R0 U3        ; R0 := U3
106 [-]: SETTABLE  R15 K31 R17  ; R15["SetSortPriority"] := R17
107 [-]: CLOSURE   R17 6        ; R17 := closure(Function #10.7)
108 [-]: MOVE      R0 R15       ; R0 := R15
109 [-]: MOVE      R0 R16       ; R0 := R16
110 [-]: SETTABLE  R15 K32 R17  ; R15["SetLocation"] := R17
111 [-]: CLOSURE   R17 7        ; R17 := closure(Function #10.8)
112 [-]: MOVE      R0 R15       ; R0 := R15
113 [-]: SETTABLE  R15 K33 R17  ; R15["ApplyDataCommon"] := R17
114 [-]: GETUPVAL  R17 U4       ; R17 := U4
115 [-]: GETTABLE  R17 R17 K34  ; R17 := R17["HT_PROGRESS_BAR"]
116 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 193
117 [-]: JMP       193          ; PC := 193
118 [-]: GETTABLE  R17 R15 K20  ; R17 := R15["Data"]
119 [-]: SETTABLE  R17 K35 K23  ; R17["Progress"] := 0
120 [-]: GETTABLE  R17 R15 K20  ; R17 := R15["Data"]
121 [-]: NEWTABLE  R18 0 0      ; R18 := {}
122 [-]: SETTABLE  R17 K36 R18  ; R17["LocalizeLabels"] := R18
123 [-]: CLOSURE   R17 8        ; R17 := closure(Function #10.9)
124 [-]: MOVE      R0 R15       ; R0 := R15
125 [-]: SETTABLE  R15 K37 R17  ; R15["Localize"] := R17
126 [-]: CLOSURE   R17 9        ; R17 := closure(Function #10.10)
127 [-]: MOVE      R0 R15       ; R0 := R15
128 [-]: MOVE      R0 R16       ; R0 := R16
129 [-]: GETUPVAL  R0 U2        ; R0 := U2
130 [-]: GETUPVAL  R0 U5        ; R0 := U5
131 [-]: MOVE      R0 R13       ; R0 := R13
132 [-]: SETTABLE  R15 K38 R17  ; R15["SetLabel"] := R17
133 [-]: CLOSURE   R17 10       ; R17 := closure(Function #10.11)
134 [-]: MOVE      R0 R15       ; R0 := R15
135 [-]: MOVE      R0 R16       ; R0 := R16
136 [-]: GETUPVAL  R0 U2        ; R0 := U2
137 [-]: MOVE      R0 R13       ; R0 := R13
138 [-]: SETTABLE  R15 K39 R17  ; R15["SetLabelColor"] := R17
139 [-]: CLOSURE   R17 11       ; R17 := closure(Function #10.12)
140 [-]: MOVE      R0 R15       ; R0 := R15
141 [-]: GETUPVAL  R0 U5        ; R0 := U5
142 [-]: MOVE      R0 R16       ; R0 := R16
143 [-]: GETUPVAL  R0 U2        ; R0 := U2
144 [-]: MOVE      R0 R13       ; R0 := R13
145 [-]: SETTABLE  R15 K40 R17  ; R15["SetGoalLabel"] := R17
146 [-]: CLOSURE   R17 12       ; R17 := closure(Function #10.13)
147 [-]: MOVE      R0 R15       ; R0 := R15
148 [-]: MOVE      R0 R16       ; R0 := R16
149 [-]: GETUPVAL  R0 U2        ; R0 := U2
150 [-]: MOVE      R0 R13       ; R0 := R13
151 [-]: SETTABLE  R15 K41 R17  ; R15["SetGoalColor"] := R17
152 [-]: CLOSURE   R17 13       ; R17 := closure(Function #10.14)
153 [-]: MOVE      R0 R15       ; R0 := R15
154 [-]: MOVE      R0 R16       ; R0 := R16
155 [-]: GETUPVAL  R0 U2        ; R0 := U2
156 [-]: MOVE      R0 R13       ; R0 := R13
157 [-]: SETTABLE  R15 K42 R17  ; R15["SetIcon"] := R17
158 [-]: CLOSURE   R17 14       ; R17 := closure(Function #10.15)
159 [-]: MOVE      R0 R15       ; R0 := R15
160 [-]: MOVE      R0 R16       ; R0 := R16
161 [-]: GETUPVAL  R0 U2        ; R0 := U2
162 [-]: MOVE      R0 R13       ; R0 := R13
163 [-]: SETTABLE  R15 K43 R17  ; R15["SetIconSize"] := R17
164 [-]: CLOSURE   R17 15       ; R17 := closure(Function #10.16)
165 [-]: MOVE      R0 R15       ; R0 := R15
166 [-]: MOVE      R0 R16       ; R0 := R16
167 [-]: GETUPVAL  R0 U2        ; R0 := U2
168 [-]: MOVE      R0 R13       ; R0 := R13
169 [-]: SETTABLE  R15 K44 R17  ; R15["SetIconColor"] := R17
170 [-]: CLOSURE   R17 16       ; R17 := closure(Function #10.17)
171 [-]: MOVE      R0 R15       ; R0 := R15
172 [-]: MOVE      R0 R16       ; R0 := R16
173 [-]: GETUPVAL  R0 U2        ; R0 := U2
174 [-]: MOVE      R0 R13       ; R0 := R13
175 [-]: GETUPVAL  R0 U5        ; R0 := U5
176 [-]: SETTABLE  R15 K45 R17  ; R15["SetValue"] := R17
177 [-]: CLOSURE   R17 17       ; R17 := closure(Function #10.18)
178 [-]: MOVE      R0 R15       ; R0 := R15
179 [-]: MOVE      R0 R16       ; R0 := R16
180 [-]: GETUPVAL  R0 U2        ; R0 := U2
181 [-]: MOVE      R0 R13       ; R0 := R13
182 [-]: SETTABLE  R15 K46 R17  ; R15["SetProgressColor"] := R17
183 [-]: CLOSURE   R17 18       ; R17 := closure(Function #10.19)
184 [-]: MOVE      R0 R15       ; R0 := R15
185 [-]: MOVE      R0 R16       ; R0 := R16
186 [-]: GETUPVAL  R0 U2        ; R0 := U2
187 [-]: MOVE      R0 R13       ; R0 := R13
188 [-]: SETTABLE  R15 K47 R17  ; R15["SetFlareColor"] := R17
189 [-]: CLOSURE   R17 19       ; R17 := closure(Function #10.20)
190 [-]: MOVE      R0 R15       ; R0 := R15
191 [-]: SETTABLE  R15 K48 R17  ; R15["ApplyData"] := R17
192 [-]: JMP       445          ; PC := 445
193 [-]: GETUPVAL  R17 U4       ; R17 := U4
194 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["HT_TIMER"]
195 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 242
196 [-]: JMP       242          ; PC := 242
197 [-]: CLOSURE   R17 20       ; R17 := closure(Function #10.21)
198 [-]: MOVE      R0 R15       ; R0 := R15
199 [-]: MOVE      R0 R16       ; R0 := R16
200 [-]: GETUPVAL  R0 U2        ; R0 := U2
201 [-]: GETUPVAL  R0 U5        ; R0 := U5
202 [-]: GETUPVAL  R0 U6        ; R0 := U6
203 [-]: SETTABLE  R15 K50 R17  ; R15["ShowMessage"] := R17
204 [-]: CLOSURE   R17 21       ; R17 := closure(Function #10.22)
205 [-]: MOVE      R0 R15       ; R0 := R15
206 [-]: MOVE      R0 R16       ; R0 := R16
207 [-]: GETUPVAL  R0 U2        ; R0 := U2
208 [-]: GETUPVAL  R0 U5        ; R0 := U5
209 [-]: MOVE      R0 R13       ; R0 := R13
210 [-]: SETTABLE  R15 K38 R17  ; R15["SetLabel"] := R17
211 [-]: CLOSURE   R17 22       ; R17 := closure(Function #10.23)
212 [-]: MOVE      R0 R15       ; R0 := R15
213 [-]: MOVE      R0 R16       ; R0 := R16
214 [-]: GETUPVAL  R0 U2        ; R0 := U2
215 [-]: MOVE      R0 R13       ; R0 := R13
216 [-]: GETUPVAL  R0 U6        ; R0 := U6
217 [-]: GETUPVAL  R0 U7        ; R0 := U7
218 [-]: GETUPVAL  R0 U8        ; R0 := U8
219 [-]: SETTABLE  R15 K45 R17  ; R15["SetValue"] := R17
220 [-]: CLOSURE   R17 23       ; R17 := closure(Function #10.24)
221 [-]: MOVE      R0 R15       ; R0 := R15
222 [-]: GETUPVAL  R0 U0        ; R0 := U0
223 [-]: MOVE      R0 R13       ; R0 := R13
224 [-]: SETTABLE  R15 K51 R17  ; R15["Update"] := R17
225 [-]: CLOSURE   R17 24       ; R17 := closure(Function #10.25)
226 [-]: MOVE      R0 R15       ; R0 := R15
227 [-]: GETUPVAL  R0 U5        ; R0 := U5
228 [-]: GETUPVAL  R0 U0        ; R0 := U0
229 [-]: MOVE      R0 R13       ; R0 := R13
230 [-]: SETTABLE  R15 K52 R17  ; R15["StartTimer"] := R17
231 [-]: CLOSURE   R17 25       ; R17 := closure(Function #10.26)
232 [-]: MOVE      R0 R15       ; R0 := R15
233 [-]: MOVE      R0 R16       ; R0 := R16
234 [-]: GETUPVAL  R0 U2        ; R0 := U2
235 [-]: GETUPVAL  R0 U5        ; R0 := U5
236 [-]: MOVE      R0 R13       ; R0 := R13
237 [-]: SETTABLE  R15 K53 R17  ; R15["SetPaused"] := R17
238 [-]: CLOSURE   R17 26       ; R17 := closure(Function #10.27)
239 [-]: MOVE      R0 R15       ; R0 := R15
240 [-]: SETTABLE  R15 K48 R17  ; R15["ApplyData"] := R17
241 [-]: JMP       445          ; PC := 445
242 [-]: GETUPVAL  R17 U4       ; R17 := U4
243 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["HT_HEALTH_TRACKER"]
244 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 291
245 [-]: JMP       291          ; PC := 291
246 [-]: CLOSURE   R17 27       ; R17 := closure(Function #10.28)
247 [-]: MOVE      R0 R15       ; R0 := R15
248 [-]: GETUPVAL  R0 U0        ; R0 := U0
249 [-]: MOVE      R0 R13       ; R0 := R13
250 [-]: GETUPVAL  R0 U8        ; R0 := U8
251 [-]: MOVE      R0 R4        ; R0 := R4
252 [-]: MOVE      R0 R16       ; R0 := R16
253 [-]: GETUPVAL  R0 U2        ; R0 := U2
254 [-]: SETTABLE  R15 K55 R17  ; R15["SetTarget"] := R17
255 [-]: CLOSURE   R17 28       ; R17 := closure(Function #10.29)
256 [-]: MOVE      R0 R15       ; R0 := R15
257 [-]: MOVE      R0 R16       ; R0 := R16
258 [-]: GETUPVAL  R0 U2        ; R0 := U2
259 [-]: MOVE      R0 R13       ; R0 := R13
260 [-]: SETTABLE  R15 K56 R17  ; R15["SetNameFormat"] := R17
261 [-]: CLOSURE   R17 29       ; R17 := closure(Function #10.30)
262 [-]: MOVE      R0 R15       ; R0 := R15
263 [-]: MOVE      R0 R16       ; R0 := R16
264 [-]: SETTABLE  R15 K57 R17  ; R15["SetNameOverride"] := R17
265 [-]: CLOSURE   R17 30       ; R17 := closure(Function #10.31)
266 [-]: MOVE      R0 R15       ; R0 := R15
267 [-]: MOVE      R0 R16       ; R0 := R16
268 [-]: SETTABLE  R15 K58 R17  ; R15["SetRemoveOnNullTarget"] := R17
269 [-]: CLOSURE   R17 31       ; R17 := closure(Function #10.32)
270 [-]: MOVE      R0 R15       ; R0 := R15
271 [-]: MOVE      R0 R16       ; R0 := R16
272 [-]: GETUPVAL  R0 U2        ; R0 := U2
273 [-]: GETUPVAL  R0 U5        ; R0 := U5
274 [-]: GETUPVAL  R0 U4        ; R0 := U4
275 [-]: MOVE      R0 R13       ; R0 := R13
276 [-]: GETUPVAL  R0 U6        ; R0 := U6
277 [-]: SETTABLE  R15 K59 R17  ; R15["SetHealthWarningThreshold"] := R17
278 [-]: CLOSURE   R17 32       ; R17 := closure(Function #10.33)
279 [-]: GETUPVAL  R0 U2        ; R0 := U2
280 [-]: MOVE      R0 R13       ; R0 := R13
281 [-]: GETUPVAL  R0 U4        ; R0 := U4
282 [-]: SETTABLE  R15 K60 R17  ; R15["ShowLostHealthMsg"] := R17
283 [-]: CLOSURE   R17 33       ; R17 := closure(Function #10.34)
284 [-]: MOVE      R0 R15       ; R0 := R15
285 [-]: MOVE      R0 R16       ; R0 := R16
286 [-]: SETTABLE  R15 K61 R17  ; R15["SetIgnorePredeath"] := R17
287 [-]: CLOSURE   R17 34       ; R17 := closure(Function #10.35)
288 [-]: MOVE      R0 R15       ; R0 := R15
289 [-]: SETTABLE  R15 K48 R17  ; R15["ApplyData"] := R17
290 [-]: JMP       445          ; PC := 445
291 [-]: GETUPVAL  R17 U4       ; R17 := U4
292 [-]: GETTABLE  R17 R17 K62  ; R17 := R17["HT_OPPONENT_BAR"]
293 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 347
294 [-]: JMP       347          ; PC := 347
295 [-]: CLOSURE   R17 35       ; R17 := closure(Function #10.36)
296 [-]: MOVE      R0 R15       ; R0 := R15
297 [-]: MOVE      R0 R16       ; R0 := R16
298 [-]: GETUPVAL  R0 U2        ; R0 := U2
299 [-]: MOVE      R0 R13       ; R0 := R13
300 [-]: SETTABLE  R15 K63 R17  ; R15["SetUpperFactionLabel"] := R17
301 [-]: CLOSURE   R17 36       ; R17 := closure(Function #10.37)
302 [-]: MOVE      R0 R15       ; R0 := R15
303 [-]: MOVE      R0 R16       ; R0 := R16
304 [-]: GETUPVAL  R0 U2        ; R0 := U2
305 [-]: MOVE      R0 R13       ; R0 := R13
306 [-]: SETTABLE  R15 K64 R17  ; R15["SetLowerFactionLabel"] := R17
307 [-]: CLOSURE   R17 37       ; R17 := closure(Function #10.38)
308 [-]: MOVE      R0 R15       ; R0 := R15
309 [-]: MOVE      R0 R16       ; R0 := R16
310 [-]: GETUPVAL  R0 U2        ; R0 := U2
311 [-]: MOVE      R0 R13       ; R0 := R13
312 [-]: SETTABLE  R15 K65 R17  ; R15["SetUpperFactionIcon"] := R17
313 [-]: CLOSURE   R17 38       ; R17 := closure(Function #10.39)
314 [-]: MOVE      R0 R15       ; R0 := R15
315 [-]: MOVE      R0 R16       ; R0 := R16
316 [-]: GETUPVAL  R0 U2        ; R0 := U2
317 [-]: MOVE      R0 R13       ; R0 := R13
318 [-]: SETTABLE  R15 K66 R17  ; R15["SetLowerFactionIcon"] := R17
319 [-]: CLOSURE   R17 39       ; R17 := closure(Function #10.40)
320 [-]: MOVE      R0 R15       ; R0 := R15
321 [-]: MOVE      R0 R16       ; R0 := R16
322 [-]: GETUPVAL  R0 U2        ; R0 := U2
323 [-]: MOVE      R0 R13       ; R0 := R13
324 [-]: SETTABLE  R15 K67 R17  ; R15["SetUpperColor"] := R17
325 [-]: CLOSURE   R17 40       ; R17 := closure(Function #10.41)
326 [-]: MOVE      R0 R15       ; R0 := R15
327 [-]: MOVE      R0 R16       ; R0 := R16
328 [-]: GETUPVAL  R0 U2        ; R0 := U2
329 [-]: MOVE      R0 R13       ; R0 := R13
330 [-]: SETTABLE  R15 K68 R17  ; R15["SetLowerColor"] := R17
331 [-]: CLOSURE   R17 41       ; R17 := closure(Function #10.42)
332 [-]: MOVE      R0 R15       ; R0 := R15
333 [-]: MOVE      R0 R16       ; R0 := R16
334 [-]: GETUPVAL  R0 U2        ; R0 := U2
335 [-]: MOVE      R0 R13       ; R0 := R13
336 [-]: SETTABLE  R15 K69 R17  ; R15["UpdateProgress"] := R17
337 [-]: CLOSURE   R17 42       ; R17 := closure(Function #10.43)
338 [-]: MOVE      R0 R15       ; R0 := R15
339 [-]: MOVE      R0 R16       ; R0 := R16
340 [-]: GETUPVAL  R0 U2        ; R0 := U2
341 [-]: MOVE      R0 R13       ; R0 := R13
342 [-]: SETTABLE  R15 K70 R17  ; R15["ToggleLowerFaction"] := R17
343 [-]: CLOSURE   R17 43       ; R17 := closure(Function #10.44)
344 [-]: MOVE      R0 R15       ; R0 := R15
345 [-]: SETTABLE  R15 K48 R17  ; R15["ApplyData"] := R17
346 [-]: JMP       445          ; PC := 445
347 [-]: GETUPVAL  R17 U4       ; R17 := U4
348 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["HT_LABEL"]
349 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 370
350 [-]: JMP       370          ; PC := 370
351 [-]: GETTABLE  R17 R15 K20  ; R17 := R15["Data"]
352 [-]: SETTABLE  R17 K72 K7   ; R17["AutoHeight"] := "0x1"
353 [-]: GETTABLE  R17 R15 K20  ; R17 := R15["Data"]
354 [-]: NEWTABLE  R18 0 0      ; R18 := {}
355 [-]: SETTABLE  R17 K36 R18  ; R17["LocalizeLabels"] := R18
356 [-]: CLOSURE   R17 44       ; R17 := closure(Function #10.45)
357 [-]: MOVE      R0 R15       ; R0 := R15
358 [-]: SETTABLE  R15 K37 R17  ; R15["Localize"] := R17
359 [-]: CLOSURE   R17 45       ; R17 := closure(Function #10.46)
360 [-]: MOVE      R0 R15       ; R0 := R15
361 [-]: GETUPVAL  R0 U5        ; R0 := U5
362 [-]: MOVE      R0 R16       ; R0 := R16
363 [-]: GETUPVAL  R0 U2        ; R0 := U2
364 [-]: MOVE      R0 R13       ; R0 := R13
365 [-]: SETTABLE  R15 K38 R17  ; R15["SetLabel"] := R17
366 [-]: CLOSURE   R17 46       ; R17 := closure(Function #10.47)
367 [-]: MOVE      R0 R15       ; R0 := R15
368 [-]: SETTABLE  R15 K48 R17  ; R15["ApplyData"] := R17
369 [-]: JMP       445          ; PC := 445
370 [-]: GETUPVAL  R17 U4       ; R17 := U4
371 [-]: GETTABLE  R17 R17 K73  ; R17 := R17["HT_ICON_BAR"]
372 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 438
373 [-]: JMP       438          ; PC := 438
374 [-]: NEWTABLE  R17 0 3      ; R17 := {}
375 [-]: SETTABLE  R17 K74 K23  ; R17["mForcedVerticalSeparation"] := 0
376 [-]: SETTABLE  R17 K75 K76  ; R17["mForcedHorizontalSeparation"] := 22
377 [-]: CLOSURE   R18 47       ; R18 := closure(Function #10.48)
378 [-]: MOVE      R0 R15       ; R0 := R15
379 [-]: SETTABLE  R17 K77 R18  ; R17["Redraw"] := R18
380 [-]: SETTABLE  R15 K1 R17   ; R15["List"] := R17
381 [-]: GETTABLE  R17 R15 K20  ; R17 := R15["Data"]
382 [-]: NEWTABLE  R18 0 0      ; R18 := {}
383 [-]: SETTABLE  R17 K78 R18  ; R17["ListData"] := R18
384 [-]: NEWTABLE  R17 0 0      ; R17 := {}
385 [-]: SETTABLE  R15 K79 R17  ; R15["InitFuncQueue"] := R17
386 [-]: NEWTABLE  R17 0 1      ; R17 := {}
387 [-]: SETTABLE  R17 K80 K7   ; R17["Icon"] := "0x1"
388 [-]: NEWTABLE  R18 0 9      ; R18 := {}
389 [-]: SETTABLE  R18 K81 K7   ; R18["mPrefix"] := "0x1"
390 [-]: SETTABLE  R18 K82 K7   ; R18["UTIL"] := "0x1"
391 [-]: SETTABLE  R18 K83 K7   ; R18["mClips"] := "0x1"
392 [-]: SETTABLE  R18 K84 K7   ; R18["mClipName"] := "0x1"
393 [-]: SETTABLE  R18 K85 K7   ; R18["mTopClipIndexUsed"] := "0x1"
394 [-]: SETTABLE  R18 K86 K7   ; R18["UP"] := "0x1"
395 [-]: SETTABLE  R18 K87 K7   ; R18["DOWN"] := "0x1"
396 [-]: SETTABLE  R18 K88 K7   ; R18["LEFT"] := "0x1"
397 [-]: SETTABLE  R18 K89 K7   ; R18["RIGHT"] := "0x1"
398 [-]: CLOSURE   R19 48       ; R19 := closure(Function #10.49)
399 [-]: MOVE      R0 R18       ; R0 := R18
400 [-]: MOVE      R0 R15       ; R0 := R15
401 [-]: MOVE      R0 R17       ; R0 := R17
402 [-]: SETTABLE  R15 K90 R19  ; R15["StripUnserializables"] := R19
403 [-]: CLOSURE   R19 49       ; R19 := closure(Function #10.50)
404 [-]: MOVE      R0 R15       ; R0 := R15
405 [-]: MOVE      R0 R17       ; R0 := R17
406 [-]: MOVE      R0 R18       ; R0 := R18
407 [-]: SETTABLE  R15 K91 R19  ; R15["ApplyListData"] := R19
408 [-]: CLOSURE   R19 50       ; R19 := closure(Function #10.51)
409 [-]: MOVE      R0 R15       ; R0 := R15
410 [-]: MOVE      R0 R16       ; R0 := R16
411 [-]: SETTABLE  R15 K92 R19  ; R15["UpdateData"] := R19
412 [-]: CLOSURE   R19 51       ; R19 := closure(Function #10.52)
413 [-]: MOVE      R0 R15       ; R0 := R15
414 [-]: GETUPVAL  R0 U5        ; R0 := U5
415 [-]: SETTABLE  R15 K93 R19  ; R15["AddIcon"] := R19
416 [-]: CLOSURE   R19 52       ; R19 := closure(Function #10.53)
417 [-]: MOVE      R0 R15       ; R0 := R15
418 [-]: SETTABLE  R15 K94 R19  ; R15["RemoveIcon"] := R19
419 [-]: CLOSURE   R19 53       ; R19 := closure(Function #10.54)
420 [-]: MOVE      R0 R15       ; R0 := R15
421 [-]: SETTABLE  R15 K95 R19  ; R15["RemoveIcons"] := R19
422 [-]: CLOSURE   R19 54       ; R19 := closure(Function #10.55)
423 [-]: MOVE      R0 R15       ; R0 := R15
424 [-]: SETTABLE  R15 K96 R19  ; R15["AddStackingIcon"] := R19
425 [-]: CLOSURE   R19 55       ; R19 := closure(Function #10.56)
426 [-]: MOVE      R0 R15       ; R0 := R15
427 [-]: SETTABLE  R15 K97 R19  ; R15["SetCustomDrawFunction"] := R19
428 [-]: CLOSURE   R19 56       ; R19 := closure(Function #10.57)
429 [-]: MOVE      R0 R15       ; R0 := R15
430 [-]: SETTABLE  R15 K48 R19  ; R15["ApplyData"] := R19
431 [-]: GETTABLE  R19 R15 K20  ; R19 := R15["Data"]
432 [-]: GETTABLE  R20 R15 K98  ; R20 := R15["0xB1494B8A"]
433 [-]: GETTABLE  R21 R15 K1   ; R21 := R15["List"]
434 [-]: CALL      R20 2 2      ; R20 := R20(R21)
435 [-]: SETTABLE  R19 K78 R20  ; R19["ListData"] := R20
436 [-]: CLOSE     R17          ; SAVE R17,...
437 [-]: JMP       445          ; PC := 445
438 [-]: MOVE      R14 R0       ; R14 := R0
439 [-]: LOADNIL   R15 R15      ; R15 := nil
440 [-]: GETGLOBAL R17 K99      ; R17 := 0x93B1256B
441 [-]: LOADK     R18 K100     ; R18 := "Unknown HUD Tracker "
442 [-]: MOVE      R19 R1       ; R19 := R1
443 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
444 [-]: CALL      R17 2 1      ; R17(R18)
445 [-]: TEST      R14 0        ; if not R14 then PC := 465
446 [-]: JMP       465          ; PC := 465
447 [-]: TEST      R4 0         ; if not R4 then PC := 459
448 [-]: JMP       459          ; PC := 459
449 [-]: TEST      R6 0         ; if not R6 then PC := 459
450 [-]: JMP       459          ; PC := 459
451 [-]: GETTABLE  R17 R15 K92  ; R17 := R15["UpdateData"]
452 [-]: EQ        1 R17 K3     ; if R17 == nil then PC := 457
453 [-]: JMP       457          ; PC := 457
454 [-]: GETTABLE  R17 R15 K101 ; R17 := R15["0x6DEF39F7"]
455 [-]: CALL      R17 1 1      ; R17()
456 [-]: JMP       459          ; PC := 459
457 [-]: MOVE      R17 R16      ; R17 := R16
458 [-]: CALL      R17 1 1      ; R17()
459 [-]: GETGLOBAL R17 K102     ; R17 := table
460 [-]: GETTABLE  R17 R17 K103 ; R17 := R17["0xE6450C9D"]
461 [-]: GETUPVAL  R18 U0       ; R18 := U0
462 [-]: GETTABLE  R18 R18 K1   ; R18 := R18["List"]
463 [-]: MOVE      R19 R15      ; R19 := R15
464 [-]: CALL      R17 3 1      ; R17(R18,R19)
465 [-]: GETUPVAL  R17 U2       ; R17 := U2
466 [-]: GETUPVAL  R18 U9       ; R18 := U9
467 [-]: MOVE      R19 R15      ; R19 := R15
468 [-]: MOVE      R20 R12      ; R20 := R12
469 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
470 [-]: RETURN    R15 2        ; return R15
471 [-]: CLOSE     R12          ; SAVE R12,...
472 [-]: LOADNIL   R12 R12      ; R12 := nil
473 [-]: RETURN    R12 2        ; return R12
474 [-]: RETURN    R0 1         ; return 


; Function #10.1:
;
; Name:            
; Defined at line: 626
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 31
  3 [-]: JMP       31           ; PC := 31
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Removing"]
  6 [-]: TEST      R0 1         ; if R0 then PC := 31
  7 [-]: JMP       31           ; PC := 31
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xB943B03C"]
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Name"]
 17 [-]: GETGLOBAL R3 K4        ; R3 := cjson
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x8DC1075B"]
 19 [-]: GETUPVAL  R4 U1        ; R4 := U1
 20 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Data"]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["EntityInfo"]
 24 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETUPVAL  R0 U3        ; R0 := U3
 27 [-]: CLOSURE   R1 0         ; R1 := closure(Function #10.1.1)
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: GETUPVAL  R0 U1        ; R0 := U1
 30 [-]: CALL      R0 2 1       ; R0(R1)
 31 [-]: RETURN    R0 1         ; return 


; Function #10.1.1:
;
; Name:            
; Defined at line: 632
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xB943B03C"]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Name"]
  5 [-]: GETGLOBAL R3 K2        ; R3 := cjson
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0x8DC1075B"]
  7 [-]: GETUPVAL  R4 U1        ; R4 := U1
  8 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Data"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: GETUPVAL  R4 U1        ; R4 := U1
 11 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["EntityInfo"]
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #10.2:
;
; Name:            
; Defined at line: 640
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: MOVE      R3 R0        ; R3 := R0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Data"]
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["OffsetX"]
  9 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Data"]
 13 [-]: SETTABLE  R4 K2 R0     ; R4["OffsetX"] := R0
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 28
 16 [-]: JMP       28           ; PC := 28
 17 [-]: TEST      R2 1         ; if R2 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Data"]
 21 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["OffsetY"]
 22 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Data"]
 26 [-]: SETTABLE  R4 K3 R1     ; R4["OffsetY"] := R1
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: TEST      R3 0         ; if not R3 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETUPVAL  R4 U1        ; R4 := U1
 31 [-]: CALL      R4 1 1       ; R4()
 32 [-]: GETUPVAL  R4 U2        ; R4 := U2
 33 [-]: GETUPVAL  R5 U3        ; R5 := U3
 34 [-]: CALL      R4 2 1       ; R4(R5)
 35 [-]: RETURN    R0 1         ; return 


; Function #10.3:
;
; Name:            
; Defined at line: 661
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["AutoHeight"]
  4 [-]: TEST      R3 0         ; if not R3 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: TEST      R2 1         ; if R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 10 [-]: SETTABLE  R3 K1 K2     ; R3["AutoHeight"] := nil
 11 [-]: TEST      R1 1         ; if R1 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 15 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Height"]
 16 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 21 [-]: SETTABLE  R3 K3 R0     ; R3["Height"] := R0
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: CALL      R3 1 1       ; R3()
 24 [-]: GETUPVAL  R3 U2        ; R3 := U2
 25 [-]: GETUPVAL  R4 U3        ; R4 := U3
 26 [-]: CALL      R3 2 1       ; R3(R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #10.4:
;
; Name:            
; Defined at line: 674
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["IgnoreVis"]
  3 [-]: TEST      R2 1         ; if R2 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: TEST      R1 1         ; if R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Visible"]
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
 15 [-]: SETTABLE  R2 K2 R0     ; R2["Visible"] := R0
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: CALL      R2 1 1       ; R2()
 18 [-]: GETUPVAL  R2 U2        ; R2 := U2
 19 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.4.1)
 20 [-]: GETUPVAL  R0 U3        ; R0 := U3
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: CALL      R2 2 1       ; R2(R3)
 24 [-]: RETURN    R0 1         ; return 


; Function #10.4.1:
;
; Name:            
; Defined at line: 680
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  4 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: LOADK     R3 K2        ; R3 := "_visible"
  7 [-]: GETUPVAL  R4 U2        ; R4 := U2
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #10.5:
;
; Name:            
; Defined at line: 687
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R2 1         ; if R2 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["IgnoreStacking"]
  6 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 14
  7 [-]: JMP       14           ; PC := 14
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["static"]
 11 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 16 [-]: SETTABLE  R3 K1 R0     ; R3["IgnoreStacking"] := R0
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 19 [-]: SETTABLE  R3 K3 R1     ; R3["Static"] := R1
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: CALL      R3 1 1       ; R3()
 22 [-]: GETUPVAL  R3 U2        ; R3 := U2
 23 [-]: GETUPVAL  R4 U3        ; R4 := U3
 24 [-]: CALL      R3 2 1       ; R3(R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #10.6:
;
; Name:            
; Defined at line: 698
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SortPriority"]
  4 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  9 [-]: SETTABLE  R2 K1 R0     ; R2["SortPriority"] := R0
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R2 1 1       ; R2()
 12 [-]: TEST      R1 1         ; if R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: GETUPVAL  R3 U3        ; R3 := U3
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: RETURN    R0 1         ; return 


; Function #10.7:
;
; Name:            
; Defined at line: 710
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["location"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
  9 [-]: SETTABLE  R1 K2 R0     ; R1["Location"] := R0
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: SETTABLE  R1 K3 K4     ; R1["AutonomousVisibility"] := "0x1"
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: CALL      R1 1 1       ; R1()
 14 [-]: RETURN    R0 1         ; return 


; Function #10.8:
;
; Name:            
; Defined at line: 720
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xDA4AD912"]
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["OffsetX"]
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["OffsetY"]
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  8 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["Height"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xBBA39962"]
 14 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["Height"]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["AutoHeight"]
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 19 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["Visible"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["AutonomousVisibility"]
 25 [-]: TEST      R2 1         ; if R2 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: GETUPVAL  R2 U0        ; R2 := U0
 28 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x625791A8"]
 29 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["Visible"]
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: CALL      R2 3 1       ; R2(R3,R4)
 32 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 33 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["SortPriority"]
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 1         ; if R2 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETUPVAL  R2 U0        ; R2 := U0
 38 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0x6C027D23"]
 39 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["SortPriority"]
 40 [-]: CALL      R2 2 1       ; R2(R3)
 41 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 42 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["IgnoreStacking"]
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 1         ; if R2 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETUPVAL  R2 U0        ; R2 := U0
 47 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0x6470ACE2"]
 48 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["IgnoreStacking"]
 49 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["Static"]
 50 [-]: MOVE      R5 R1        ; R5 := R1
 51 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 52 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 53 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["Location"]
 54 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 55 [-]: TEST      R2 1         ; if R2 then PC := 61
 56 [-]: JMP       61           ; PC := 61
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["0x5484D994"]
 59 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["Location"]
 60 [-]: CALL      R2 2 1       ; R2(R3)
 61 [-]: RETURN    R0 1         ; return 


; Function #10.9:
;
; Name:            
; Defined at line: 743
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x63B09107
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Data"]
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["LocalizeLabels"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["Tag"]
  8 [-]: EQ        0 R8 R0      ; if R8 ~= R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["Upper"]
 11 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: SETTABLE  R7 K5 R1     ; R7["Params"] := R1
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 16 [-]: JMP       7            ; PC := 7
 17 [-]: GETGLOBAL R8 K6        ; R8 := table
 18 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 19 [-]: GETUPVAL  R9 U0        ; R9 := U0
 20 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["Data"]
 21 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["LocalizeLabels"]
 22 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 23 [-]: SETTABLE  R10 K3 R0    ; R10["Tag"] := R0
 24 [-]: SETTABLE  R10 K5 R1    ; R10["Params"] := R1
 25 [-]: SETTABLE  R10 K4 R2    ; R10["Upper"] := R2
 26 [-]: CALL      R8 3 1       ; R8(R9,R10)
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #10.10:
;
; Name:            
; Defined at line: 755
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R0 K1        ; R0 := ""
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Label"]
  9 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 14 [-]: SETTABLE  R3 K3 R0     ; R3["Label"] := R0
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 17 [-]: SETTABLE  R3 K4 R1     ; R3["LabelAnimRate"] := R1
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: CALL      R3 1 1       ; R3()
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: CLOSURE   R4 0         ; R4 := closure(Function #10.10.1)
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: MOVE      R0 R1        ; R0 := R1
 24 [-]: GETUPVAL  R0 U3        ; R0 := U3
 25 [-]: GETUPVAL  R0 U4        ; R0 := U4
 26 [-]: CALL      R3 2 1       ; R3(R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #10.10.1:
;
; Name:            
; Defined at line: 766
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 0         ; if not R1 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xACEBA655"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 12 [-]: LOADNIL   R3 R3        ; R3 := nil
 13 [-]: GETUPVAL  R4 U3        ; R4 := U3
 14 [-]: LOADK     R5 K3        ; R5 := ".Message"
 15 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: LOADNIL   R6 R6        ; R6 := nil
 18 [-]: GETUPVAL  R7 U1        ; R7 := U1
 19 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETUPVAL  R3 U3        ; R3 := U3
 24 [-]: LOADK     R4 K5        ; R4 := "Message"
 25 [-]: LOADK     R5 K6        ; R5 := "text"
 26 [-]: MOVE      R6 R0        ; R6 := R0
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: GETUPVAL  R1 U2        ; R1 := U2
 29 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0xF81722A2"]
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: EQ        1 R2 K8      ; if R2 == "" then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: MOVE      R2 R1        ; R2 := R1
 35 [-]: LOADK     R3 K9        ; R3 := -10
 36 [-]: LOADK     R4 K10       ; R4 := 0
 37 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 38 [-]: GETGLOBAL R2 K11       ; R2 := 0xF595ADDE
 39 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 40 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0x6B7B470B"]
 41 [-]: GETUPVAL  R5 U3        ; R5 := U3
 42 [-]: LOADK     R6 K13       ; R6 := ".Icon"
 43 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 44 [-]: LOADK     R6 K14       ; R6 := "_y"
 45 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 46 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 47 [-]: EQ        1 R2 K15     ; if R2 == nil then PC := 56
 48 [-]: JMP       56           ; PC := 56
 49 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 50 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x880196A7"]
 51 [-]: GETUPVAL  R5 U3        ; R5 := U3
 52 [-]: LOADK     R6 K16       ; R6 := "Goal"
 53 [-]: LOADK     R7 K14       ; R7 := "_y"
 54 [-]: ADD       R8 R2 R1     ; R8 := R2 + R1
 55 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 56 [-]: RETURN    R0 1         ; return 


; Function #10.11:
;
; Name:            
; Defined at line: 782
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["LabelColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["LabelColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.11.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.11.1:
;
; Name:            
; Defined at line: 789
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "Message"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.12:
;
; Name:            
; Defined at line: 795
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R0 K3        ; R0 := ""
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: SETTABLE  R3 K4 R0     ; R3["newGoalLabel"] := R0
 12 [-]: GETGLOBAL R3 K5        ; R3 := 0x63B09107
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Data"]
 15 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LocalizeLabels"]
 16 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 17 [-]: JMP       49           ; PC := 49
 18 [-]: GETTABLE  R8 R7 K8     ; R8 := R7["Tag"]
 19 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x633C4246"]
 20 [-]: LOADK     R10 K10      ; R10 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
 21 [-]: LOADK     R11 K11      ; R11 := "%%%0"
 22 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 23 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
 24 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 25 [-]: GETTABLE  R11 R7 K8    ; R11 := R7["Tag"]
 26 [-]: MOVE      R12 R1       ; R12 := R1
 27 [-]: GETTABLE  R13 R7 K13   ; R13 := R7["Params"]
 28 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 29 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x633C4246"]
 30 [-]: LOADK     R11 K14      ; R11 := "%%"
 31 [-]: LOADK     R12 K11      ; R12 := "%%%0"
 32 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 33 [-]: GETUPVAL  R10 U0       ; R10 := U0
 34 [-]: GETUPVAL  R11 U0       ; R11 := U0
 35 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["newGoalLabel"]
 36 [-]: SELF      R11 R11 K9   ; R12 := R11; R11 := R11["0x633C4246"]
 37 [-]: MOVE      R13 R8       ; R13 := R8
 38 [-]: GETUPVAL  R14 U1       ; R14 := U1
 39 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["0xF81722A2"]
 40 [-]: GETTABLE  R15 R7 K16   ; R15 := R7["Upper"]
 41 [-]: GETGLOBAL R16 K17      ; R16 := string
 42 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["0x639C642A"]
 43 [-]: MOVE      R17 R9       ; R17 := R9
 44 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 45 [-]: MOVE      R17 R9       ; R17 := R9
 46 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 47 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 48 [-]: SETTABLE  R10 K4 R11   ; R10["newGoalLabel"] := R11
 49 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 18; R5 := R6 end
 50 [-]: JMP       18           ; PC := 18
 51 [-]: TEST      R2 1         ; if R2 then PC := 65
 52 [-]: JMP       65           ; PC := 65
 53 [-]: GETUPVAL  R10 U0       ; R10 := U0
 54 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Data"]
 55 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["GoalLabel"]
 56 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["newGoalLabel"]
 60 [-]: GETUPVAL  R11 U0       ; R11 := U0
 61 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["prevGoalLabel"]
 62 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: GETUPVAL  R10 U0       ; R10 := U0
 66 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Data"]
 67 [-]: SETTABLE  R10 K19 R0   ; R10["GoalLabel"] := R0
 68 [-]: GETUPVAL  R10 U0       ; R10 := U0
 69 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Data"]
 70 [-]: SETTABLE  R10 K21 R1   ; R10["GoalLabelAnimRate"] := R1
 71 [-]: GETUPVAL  R10 U2       ; R10 := U2
 72 [-]: CALL      R10 1 1      ; R10()
 73 [-]: GETUPVAL  R10 U3       ; R10 := U3
 74 [-]: CLOSURE   R11 0        ; R11 := closure(Function #10.12.1)
 75 [-]: GETUPVAL  R0 U0        ; R0 := U0
 76 [-]: MOVE      R0 R1        ; R0 := R1
 77 [-]: GETUPVAL  R0 U1        ; R0 := U1
 78 [-]: GETUPVAL  R0 U4        ; R0 := U4
 79 [-]: CALL      R10 2 1      ; R10(R11)
 80 [-]: RETURN    R0 1         ; return 


; Function #10.12.1:
;
; Name:            
; Defined at line: 815
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["newGoalLabel"]
  4 [-]: SETTABLE  R0 K0 R1     ; R0["prevGoalLabel"] := R1
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xACEBA655"]
 10 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: GETUPVAL  R3 U3        ; R3 := U3
 13 [-]: LOADK     R4 K4        ; R4 := ".Goal"
 14 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["newGoalLabel"]
 17 [-]: LOADNIL   R5 R5        ; R5 := nil
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
 22 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x880196A7"]
 23 [-]: GETUPVAL  R2 U3        ; R2 := U3
 24 [-]: LOADK     R3 K6        ; R3 := "Goal"
 25 [-]: LOADK     R4 K7        ; R4 := "text"
 26 [-]: GETUPVAL  R5 U0        ; R5 := U0
 27 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["newGoalLabel"]
 28 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["Data"]
 31 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 32 [-]: SETTABLE  R0 K9 R1     ; R0["LocalizeLabels"] := R1
 33 [-]: RETURN    R0 1         ; return 


; Function #10.13:
;
; Name:            
; Defined at line: 826
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["GoalColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["GoalColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.13.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.13.1:
;
; Name:            
; Defined at line: 833
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "Goal"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.14:
;
; Name:            
; Defined at line: 838
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: GETGLOBAL R0 K1        ; R0 := defaultBroadcastIcon
  7 [-]: TEST      R1 1         ; if R1 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0x1B252E3C"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Data"]
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Icon"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Data"]
 19 [-]: SELF      R3 R0 K2     ; R4 := R0; R3 := R0["0x1B252E3C"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: SETTABLE  R2 K4 R3     ; R2["Icon"] := R3
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: CALL      R2 1 1       ; R2()
 24 [-]: GETUPVAL  R2 U2        ; R2 := U2
 25 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.14.1)
 26 [-]: GETUPVAL  R0 U3        ; R0 := U3
 27 [-]: MOVE      R0 R0        ; R0 := R0
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #10.14.1:
;
; Name:            
; Defined at line: 850
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x26581636"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := ".Icon"
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.15:
;
; Name:            
; Defined at line: 855
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["IconSize"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["IconSize"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.15.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.15.1:
;
; Name:            
; Defined at line: 862
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "Icon"
  5 [-]: LOADK     R4 K3        ; R4 := "_width"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: LOADK     R3 K2        ; R3 := "Icon"
 12 [-]: LOADK     R4 K4        ; R4 := "_height"
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #10.16:
;
; Name:            
; Defined at line: 868
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["IconColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["IconColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.16.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.16.1:
;
; Name:            
; Defined at line: 875
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "Icon"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.17:
;
; Name:            
; Defined at line: 880
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Progress"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["Progress"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.17.1)
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: GETUPVAL  R0 U4        ; R0 := U4
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 


; Function #10.17.1:
;
; Name:            
; Defined at line: 887
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LE        1 K0 R0      ; if 0 <= R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: LOADK     R4 K3        ; R4 := "Progress"
 10 [-]: LOADK     R5 K4        ; R5 := "_visible"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: LOADK     R4 K5        ; R4 := "Flare"
 17 [-]: LOADK     R5 K4        ; R5 := "_visible"
 18 [-]: MOVE      R6 R0        ; R6 := R0
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 21 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: LOADK     R4 K6        ; R4 := "Icon"
 24 [-]: LOADK     R5 K4        ; R5 := "_visible"
 25 [-]: MOVE      R6 R0        ; R6 := R0
 26 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 27 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 28 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: LOADK     R4 K7        ; R4 := "Message"
 31 [-]: LOADK     R5 K8        ; R5 := "_x"
 32 [-]: GETUPVAL  R6 U2        ; R6 := U2
 33 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0xF81722A2"]
 34 [-]: MOVE      R7 R0        ; R7 := R0
 35 [-]: GETUPVAL  R8 U3        ; R8 := U3
 36 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["InitMessageXPos"]
 37 [-]: LOADK     R9 K11       ; R9 := -5
 38 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 39 [-]: CALL      R1 0 1       ; R1(R2,...)
 40 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 41 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
 42 [-]: GETUPVAL  R3 U1        ; R3 := U1
 43 [-]: LOADK     R4 K12       ; R4 := "Goal"
 44 [-]: LOADK     R5 K8        ; R5 := "_x"
 45 [-]: GETUPVAL  R6 U2        ; R6 := U2
 46 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0xF81722A2"]
 47 [-]: MOVE      R7 R0        ; R7 := R0
 48 [-]: GETUPVAL  R8 U3        ; R8 := U3
 49 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["InitGoalXPos"]
 50 [-]: LOADK     R9 K11       ; R9 := -5
 51 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 52 [-]: CALL      R1 0 1       ; R1(R2,...)
 53 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 54 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x6B7B470B"]
 55 [-]: GETUPVAL  R3 U1        ; R3 := U1
 56 [-]: LOADK     R4 K15       ; R4 := ".Goal"
 57 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 58 [-]: LOADK     R4 K8        ; R4 := "_x"
 59 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 60 [-]: TEST      R0 0         ; if not R0 then PC := 73
 61 [-]: JMP       73           ; PC := 73
 62 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 63 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x302AAB2F"]
 64 [-]: GETUPVAL  R4 U1        ; R4 := U1
 65 [-]: LOADK     R5 K17       ; R5 := ".Progress.Fill"
 66 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 67 [-]: LOADK     R5 K18       ; R5 := "AlphaTestThreshold"
 68 [-]: GETUPVAL  R6 U0        ; R6 := U0
 69 [-]: LOADK     R7 K0        ; R7 := 0
 70 [-]: LOADK     R8 K0        ; R8 := 0
 71 [-]: LOADK     R9 K0        ; R9 := 0
 72 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 73 [-]: RETURN    R0 1         ; return 


; Function #10.18:
;
; Name:            
; Defined at line: 902
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ProgressColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["ProgressColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.18.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.18.1:
;
; Name:            
; Defined at line: 909
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "Progress"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.19:
;
; Name:            
; Defined at line: 914
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FlareColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["FlareColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.19.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.19.1:
;
; Name:            
; Defined at line: 921
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "Flare"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.20:
;
; Name:            
; Defined at line: 926
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["LocalizeLabels"]
  4 [-]: SETTABLE  R3 K1 R4     ; R3["LocalizeLabels"] := R4
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  6 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["Label"]
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x37B51F78"]
 12 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["Label"]
 13 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["LabelAnimRate"]
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 16 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 17 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["LabelColor"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x2B89DAF7"]
 23 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["LabelColor"]
 24 [-]: MOVE      R5 R2        ; R5 := R2
 25 [-]: CALL      R3 3 1       ; R3(R4,R5)
 26 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 27 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["GoalLabel"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xA93A5B2D"]
 33 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["GoalLabel"]
 34 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["GoalLabelAnimRate"]
 35 [-]: MOVE      R6 R2        ; R6 := R2
 36 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 37 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 38 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["GoalColor"]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 1         ; if R3 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETUPVAL  R3 U0        ; R3 := U0
 43 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xD9C32B1C"]
 44 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["GoalColor"]
 45 [-]: MOVE      R5 R2        ; R5 := R2
 46 [-]: CALL      R3 3 1       ; R3(R4,R5)
 47 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 48 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["Icon"]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: TEST      R3 1         ; if R3 then PC := 59
 51 [-]: JMP       59           ; PC := 59
 52 [-]: GETUPVAL  R3 U0        ; R3 := U0
 53 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["0xACE7582B"]
 54 [-]: GETGLOBAL R4 K15       ; R4 := 0x7C282057
 55 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["Icon"]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: MOVE      R5 R2        ; R5 := R2
 58 [-]: CALL      R3 3 1       ; R3(R4,R5)
 59 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 60 [-]: GETTABLE  R4 R0 K16    ; R4 := R0["IconSize"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: TEST      R3 1         ; if R3 then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETUPVAL  R3 U0        ; R3 := U0
 65 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0x5D6DDEDF"]
 66 [-]: GETTABLE  R4 R0 K16    ; R4 := R0["IconSize"]
 67 [-]: MOVE      R5 R2        ; R5 := R2
 68 [-]: CALL      R3 3 1       ; R3(R4,R5)
 69 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 70 [-]: GETTABLE  R4 R0 K18    ; R4 := R0["IconColor"]
 71 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 72 [-]: TEST      R3 1         ; if R3 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETUPVAL  R3 U0        ; R3 := U0
 75 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0x6D9AEFA"]
 76 [-]: GETTABLE  R4 R0 K18    ; R4 := R0["IconColor"]
 77 [-]: MOVE      R5 R2        ; R5 := R2
 78 [-]: CALL      R3 3 1       ; R3(R4,R5)
 79 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 80 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["Progress"]
 81 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 82 [-]: TEST      R3 1         ; if R3 then PC := 89
 83 [-]: JMP       89           ; PC := 89
 84 [-]: GETUPVAL  R3 U0        ; R3 := U0
 85 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["0x6733C272"]
 86 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["Progress"]
 87 [-]: MOVE      R5 R2        ; R5 := R2
 88 [-]: CALL      R3 3 1       ; R3(R4,R5)
 89 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 90 [-]: GETTABLE  R4 R0 K22    ; R4 := R0["ProgressColor"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 1         ; if R3 then PC := 99
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETUPVAL  R3 U0        ; R3 := U0
 95 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["0xB3B2AA00"]
 96 [-]: GETTABLE  R4 R0 K22    ; R4 := R0["ProgressColor"]
 97 [-]: MOVE      R5 R2        ; R5 := R2
 98 [-]: CALL      R3 3 1       ; R3(R4,R5)
 99 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
100 [-]: GETTABLE  R4 R0 K24    ; R4 := R0["FlareColor"]
101 [-]: CALL      R3 2 2       ; R3 := R3(R4)
102 [-]: TEST      R3 1         ; if R3 then PC := 109
103 [-]: JMP       109          ; PC := 109
104 [-]: GETUPVAL  R3 U0        ; R3 := U0
105 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["0xE5C60225"]
106 [-]: GETTABLE  R4 R0 K24    ; R4 := R0["FlareColor"]
107 [-]: MOVE      R5 R2        ; R5 := R2
108 [-]: CALL      R3 3 1       ; R3(R4,R5)
109 [-]: GETUPVAL  R3 U0        ; R3 := U0
110 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["0xC9403736"]
111 [-]: MOVE      R4 R0        ; R4 := R0
112 [-]: MOVE      R5 R2        ; R5 := R2
113 [-]: CALL      R3 3 1       ; R3(R4,R5)
114 [-]: RETURN    R0 1         ; return 


; Function #10.21:
;
; Name:            
; Defined at line: 962
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 12
  2 [-]: JMP       12           ; PC := 12
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Message"]
  6 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETGLOBAL R2 K3        ; R2 := _G
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["StalkerMode"]
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
 15 [-]: SETTABLE  R2 K2 R0     ; R2["Message"] := R0
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
 18 [-]: SETTABLE  R2 K5 R1     ; R2["MessageDuration"] := R1
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: GETUPVAL  R2 U2        ; R2 := U2
 22 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.21.1)
 23 [-]: MOVE      R0 R0        ; R0 := R0
 24 [-]: GETUPVAL  R0 U0        ; R0 := U0
 25 [-]: GETUPVAL  R0 U3        ; R0 := U3
 26 [-]: MOVE      R0 R1        ; R0 := R1
 27 [-]: GETUPVAL  R0 U4        ; R0 := U4
 28 [-]: GETUPVAL  R0 U1        ; R0 := U1
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: RETURN    R0 1         ; return 


; Function #10.21.1:
;
; Name:            
; Defined at line: 970
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CurrentMessage"]
  8 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: SETTABLE  R1 K2 R2     ; R1["CurrentMessage"] := R2
 13 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "BorderBox.Text"
 16 [-]: LOADK     R4 K6        ; R4 := "text"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R1 U1        ; R1 := U1
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: SETTABLE  R1 K2 R2     ; R1["CurrentMessage"] := R2
 23 [-]: GETGLOBAL R1 K7        ; R1 := 0x52E17A90
 24 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 25 [-]: LOADK     R3 K8        ; R3 := "BorderBox"
 26 [-]: GETGLOBAL R4 K9        ; R4 := UISys
 27 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["FlashInstance_LINEAR"]
 28 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 29 [-]: LOADK     R6 K11       ; R6 := "_alpha"
 30 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 31 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 32 [-]: LOADK     R7 K12       ; R7 := 100
 33 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 34 [-]: LOADK     R7 K13       ; R7 := 0.25
 35 [-]: LOADK     R8 K14       ; R8 := 0
 36 [-]: LOADNIL   R9 R9        ; R9 := nil
 37 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 38 [-]: GETUPVAL  R1 U2        ; R1 := U2
 39 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["0xACEBA655"]
 40 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 41 [-]: LOADNIL   R3 R3        ; R3 := nil
 42 [-]: LOADK     R4 K5        ; R4 := "BorderBox.Text"
 43 [-]: MOVE      R5 R0        ; R5 := R0
 44 [-]: CLOSURE   R6 0         ; R6 := closure(Function #10.21.1.1)
 45 [-]: GETUPVAL  R0 U3        ; R0 := U3
 46 [-]: GETUPVAL  R0 U1        ; R0 := U1
 47 [-]: GETUPVAL  R0 U4        ; R0 := U4
 48 [-]: GETUPVAL  R0 U5        ; R0 := U5
 49 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 50 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 51 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 52 [-]: LOADK     R3 K16       ; R3 := "BorderBox.Background"
 53 [-]: LOADK     R4 K17       ; R4 := "_width"
 54 [-]: GETGLOBAL R5 K18       ; R5 := 0xF595ADDE
 55 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
 56 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6["0x6B7B470B"]
 57 [-]: LOADK     R8 K5        ; R8 := "BorderBox.Text"
 58 [-]: LOADK     R9 K20       ; R9 := "textWidth"
 59 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 60 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 61 [-]: ADD       R5 R5 K21    ; R5 := R5 + 50
 62 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 63 [-]: RETURN    R0 1         ; return 


; Function #10.21.1.1:
;
; Name:            
; Defined at line: 981
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x61494587"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CLOSURE   R4 0         ; R4 := closure(Function #10.21.1.1.1)
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: GETUPVAL  R0 U3        ; R0 := U3
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SETTABLE  R0 K1 R1     ; R0["popupTimerId"] := R1
 14 [-]: RETURN    R0 1         ; return 


; Function #10.21.1.1.1:
;
; Name:            
; Defined at line: 983
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Data"]
  3 [-]: SETTABLE  R0 K1 K2     ; R0["Message"] := nil
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Data"]
  6 [-]: SETTABLE  R0 K3 K2     ; R0["MessageDuration"] := nil
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K4 K2     ; R0["CurrentMessage"] := nil
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xD5274B5D"]
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["popupTimerId"]
 15 [-]: CALL      R0 3 1       ; R0(R1,R2)
 16 [-]: GETGLOBAL R0 K7        ; R0 := 0x52E17A90
 17 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 18 [-]: LOADK     R2 K9        ; R2 := "BorderBox"
 19 [-]: GETGLOBAL R3 K10       ; R3 := UISys
 20 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["FlashInstance_SMOOTH_STEP"]
 21 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 22 [-]: LOADK     R5 K12       ; R5 := "_alpha"
 23 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 24 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 25 [-]: LOADK     R6 K13       ; R6 := 0
 26 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 27 [-]: LOADK     R6 K14       ; R6 := 0.40000000596046
 28 [-]: LOADK     R7 K13       ; R7 := 0
 29 [-]: LOADNIL   R8 R8        ; R8 := nil
 30 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 31 [-]: RETURN    R0 1         ; return 


; Function #10.22:
;
; Name:            
; Defined at line: 997
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R0 K1        ; R0 := ""
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Label"]
  9 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 14 [-]: SETTABLE  R3 K3 R0     ; R3["Label"] := R0
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 17 [-]: SETTABLE  R3 K4 R1     ; R3["LabelAnimRate"] := R1
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: CALL      R3 1 1       ; R3()
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: CLOSURE   R4 0         ; R4 := closure(Function #10.22.1)
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: MOVE      R0 R1        ; R0 := R1
 24 [-]: GETUPVAL  R0 U3        ; R0 := U3
 25 [-]: GETUPVAL  R0 U4        ; R0 := U4
 26 [-]: CALL      R3 2 1       ; R3(R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #10.22.1:
;
; Name:            
; Defined at line: 1008
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 0         ; if not R1 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xACEBA655"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 12 [-]: LOADNIL   R3 R3        ; R3 := nil
 13 [-]: GETUPVAL  R4 U3        ; R4 := U3
 14 [-]: LOADK     R5 K3        ; R5 := ".Title"
 15 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: LOADNIL   R6 R6        ; R6 := nil
 18 [-]: GETUPVAL  R7 U1        ; R7 := U1
 19 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETUPVAL  R3 U3        ; R3 := U3
 24 [-]: LOADK     R4 K5        ; R4 := "Title"
 25 [-]: LOADK     R5 K6        ; R5 := "text"
 26 [-]: MOVE      R6 R0        ; R6 := R0
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: RETURN    R0 1         ; return 


; Function #10.23:
;
; Name:            
; Defined at line: 1018
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: MOVE      R0 R2        ; R0 := R2
  5 [-]: TEST      R1 1         ; if R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Time"]
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Data"]
 15 [-]: SETTABLE  R2 K2 R0     ; R2["Time"] := R0
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: CALL      R2 1 1       ; R2()
 18 [-]: GETUPVAL  R2 U2        ; R2 := U2
 19 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.23.1)
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: GETUPVAL  R0 U4        ; R0 := U4
 23 [-]: GETUPVAL  R0 U5        ; R0 := U5
 24 [-]: GETUPVAL  R0 U6        ; R0 := U6
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: RETURN    R0 1         ; return 


; Function #10.23.1:
;
; Name:            
; Defined at line: 1026
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Data"]
  5 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Time"]
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 60
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: GETGLOBAL R1 K0        ; R1 := math
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 13 [-]: MUL       R3 R0 K4     ; R3 := R0 * 60
 14 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: LT        0 R0 K5      ; if R0 >= 1 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADK     R0 K6        ; R0 := 0
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 22 [-]: LE        0 R2 K6      ; if R2 > 0 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADK     R0 K6        ; R0 := 0
 25 [-]: LOADK     R1 K6        ; R1 := 0
 26 [-]: GETGLOBAL R2 K7        ; R2 := mMovie
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x880196A7"]
 28 [-]: GETUPVAL  R4 U1        ; R4 := U1
 29 [-]: LOADK     R5 K3        ; R5 := "Time"
 30 [-]: LOADK     R6 K9        ; R6 := "text"
 31 [-]: GETGLOBAL R7 K10       ; R7 := string
 32 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x4B1F4F58"]
 33 [-]: LOADK     R8 K12       ; R8 := "%02.0f:%02.0f"
 34 [-]: MOVE      R9 R0        ; R9 := R0
 35 [-]: MOVE      R10 R1       ; R10 := R1
 36 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 37 [-]: CALL      R2 0 1       ; R2(R3,...)
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 40 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["Duration"]
 41 [-]: TEST      R2 0         ; if not R2 then PC := 100
 42 [-]: JMP       100          ; PC := 100
 43 [-]: GETUPVAL  R2 U0        ; R2 := U0
 44 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 45 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["TimerStarted"]
 46 [-]: TEST      R2 0         ; if not R2 then PC := 100
 47 [-]: JMP       100          ; PC := 100
 48 [-]: GETUPVAL  R2 U0        ; R2 := U0
 49 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 50 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["Inverted"]
 51 [-]: TEST      R2 0         ; if not R2 then PC := 61
 52 [-]: JMP       61           ; PC := 61
 53 [-]: GETUPVAL  R2 U0        ; R2 := U0
 54 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 55 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 56 [-]: GETUPVAL  R3 U0        ; R3 := U0
 57 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 58 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["Duration"]
 59 [-]: LE        1 R3 R2      ; if R3 <= R2 then PC := 71
 60 [-]: JMP       71           ; PC := 71
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 63 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["Inverted"]
 64 [-]: TEST      R2 1         ; if R2 then PC := 100
 65 [-]: JMP       100          ; PC := 100
 66 [-]: GETUPVAL  R2 U0        ; R2 := U0
 67 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 68 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 69 [-]: LE        0 R2 K6      ; if R2 > 0 then PC := 100
 70 [-]: JMP       100          ; PC := 100
 71 [-]: GETUPVAL  R2 U0        ; R2 := U0
 72 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["CompleteCallback"]
 73 [-]: EQ        1 R2 K17     ; if R2 == nil then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: GETUPVAL  R2 U0        ; R2 := U0
 76 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x62EEF382"]
 77 [-]: CALL      R2 1 1       ; R2()
 78 [-]: GETUPVAL  R2 U0        ; R2 := U0
 79 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 80 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["FailOnExpiry"]
 81 [-]: TEST      R2 0         ; if not R2 then PC := 92
 82 [-]: JMP       92           ; PC := 92
 83 [-]: GETUPVAL  R2 U0        ; R2 := U0
 84 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["0xB11F032"]
 85 [-]: LOADK     R3 K21       ; R3 := "/Lotus/Language/Menu/HUD_MissionFailed"
 86 [-]: CALL      R2 2 1       ; R2(R3)
 87 [-]: GETUPVAL  R2 U2        ; R2 := U2
 88 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2["0x61494587"]
 89 [-]: LOADK     R4 K23       ; R4 := 1.5
 90 [-]: GETUPVAL  R5 U3        ; R5 := U3
 91 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 92 [-]: GETUPVAL  R2 U0        ; R2 := U0
 93 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 94 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["RemoveOnComplete"]
 95 [-]: TEST      R2 0         ; if not R2 then PC := 100
 96 [-]: JMP       100          ; PC := 100
 97 [-]: GETUPVAL  R2 U4        ; R2 := U4
 98 [-]: GETUPVAL  R3 U0        ; R3 := U0
 99 [-]: CALL      R2 2 1       ; R2(R3)
100 [-]: RETURN    R0 1         ; return 


; Function #10.24:
;
; Name:            
; Defined at line: 1056
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Paused"]
  4 [-]: TEST      R1 1         ; if R1 then PC := 59
  5 [-]: JMP       59           ; PC := 59
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 59
 12 [-]: JMP       59           ; PC := 59
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Inverted"]
 16 [-]: TEST      R1 0         ; if not R1 then PC := 43
 17 [-]: JMP       43           ; PC := 43
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x6733C272"]
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 22 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 23 [-]: ADD       R2 R2 R0     ; R2 := R2 + R0
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
 27 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Duration"]
 28 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 59
 29 [-]: JMP       59           ; PC := 59
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
 32 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Time"]
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 35 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Duration"]
 36 [-]: LE        0 R2 R1      ; if R2 > R1 then PC := 59
 37 [-]: JMP       59           ; PC := 59
 38 [-]: GETUPVAL  R1 U1        ; R1 := U1
 39 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["ActiveTimers"]
 40 [-]: GETUPVAL  R2 U2        ; R2 := U2
 41 [-]: SETTABLE  R1 R2 K7     ; R1[R2] := nil
 42 [-]: JMP       59           ; PC := 59
 43 [-]: GETUPVAL  R1 U0        ; R1 := U0
 44 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x6733C272"]
 45 [-]: GETUPVAL  R2 U0        ; R2 := U0
 46 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 47 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Time"]
 48 [-]: SUB       R2 R2 R0     ; R2 := R2 - R0
 49 [-]: CALL      R1 2 1       ; R1(R2)
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Data"]
 52 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Time"]
 53 [-]: LE        0 R1 K9      ; if R1 > 0 then PC := 59
 54 [-]: JMP       59           ; PC := 59
 55 [-]: GETUPVAL  R1 U1        ; R1 := U1
 56 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["ActiveTimers"]
 57 [-]: GETUPVAL  R2 U2        ; R2 := U2
 58 [-]: SETTABLE  R1 R2 K7     ; R1[R2] := nil
 59 [-]: RETURN    R0 1         ; return 


; Function #10.25:
;
; Name:            
; Defined at line: 1074
; #Upvalues:       4
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETUPVAL  R5 U0        ; R5 := U0
  5 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Data"]
  6 [-]: SETTABLE  R5 K2 K0     ; R5["TimerStarted"] := nil
  7 [-]: GETUPVAL  R5 U0        ; R5 := U0
  8 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Data"]
  9 [-]: SETTABLE  R5 K3 R0     ; R5["Duration"] := R0
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Data"]
 12 [-]: SETTABLE  R5 K4 R1     ; R5["Inverted"] := R1
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Data"]
 15 [-]: SETTABLE  R5 K5 R2     ; R5["RemoveOnComplete"] := R2
 16 [-]: GETUPVAL  R5 U0        ; R5 := U0
 17 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Data"]
 18 [-]: SETTABLE  R5 K6 R3     ; R5["FailOnExpiry"] := R3
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: SETTABLE  R5 K7 R4     ; R5["CompleteCallback"] := R4
 21 [-]: TEST      R0 0         ; if not R0 then PC := 33
 22 [-]: JMP       33           ; PC := 33
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0x6733C272"]
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0xF81722A2"]
 27 [-]: MOVE      R7 R1        ; R7 := R1
 28 [-]: LOADK     R8 K10       ; R8 := 0
 29 [-]: MOVE      R9 R0        ; R9 := R0
 30 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 31 [-]: CALL      R5 0 1       ; R5(R6,...)
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0x6733C272"]
 35 [-]: LOADK     R6 K10       ; R6 := 0
 36 [-]: CALL      R5 2 1       ; R5(R6)
 37 [-]: GETUPVAL  R5 U2        ; R5 := U2
 38 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["ActiveTimers"]
 39 [-]: GETUPVAL  R6 U3        ; R6 := U3
 40 [-]: GETUPVAL  R7 U0        ; R7 := U0
 41 [-]: SETTABLE  R5 R6 R7     ; R5[R6] := R7
 42 [-]: GETUPVAL  R5 U0        ; R5 := U0
 43 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Data"]
 44 [-]: SETTABLE  R5 K2 K12    ; R5["TimerStarted"] := "0x1"
 45 [-]: RETURN    R0 1         ; return 


; Function #10.26:
;
; Name:            
; Defined at line: 1094
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Paused"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["Paused"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.26.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETUPVAL  R0 U4        ; R0 := U4
 19 [-]: CALL      R2 2 1       ; R2(R3)
 20 [-]: RETURN    R0 1         ; return 


; Function #10.26.1:
;
; Name:            
; Defined at line: 1101
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xF81722A2"]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Data"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Paused"]
  6 [-]: GETGLOBAL R2 K3        ; R2 := _G
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIColor_MediumGrey"]
  8 [-]: GETGLOBAL R3 K3        ; R3 := _G
  9 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIColor_White"]
 10 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 11 [-]: GETGLOBAL R1 K6        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x880196A7"]
 13 [-]: GETUPVAL  R3 U2        ; R3 := U2
 14 [-]: LOADK     R4 K8        ; R4 := "Title"
 15 [-]: LOADK     R5 K9        ; R5 := "_color"
 16 [-]: MOVE      R6 R0        ; R6 := R0
 17 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 18 [-]: GETGLOBAL R1 K6        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x880196A7"]
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: LOADK     R4 K10       ; R4 := "Time"
 22 [-]: LOADK     R5 K9        ; R5 := "_color"
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: RETURN    R0 1         ; return 


; Function #10.27:
;
; Name:            
; Defined at line: 1108
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["TimerStarted"]
  4 [-]: SETTABLE  R3 K1 R4     ; R3["TimerStarted"] := R4
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
  7 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Inverted"]
  8 [-]: SETTABLE  R3 K2 R4     ; R3["Inverted"] := R4
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 11 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["Duration"]
 12 [-]: SETTABLE  R3 K3 R4     ; R3["Duration"] := R4
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 15 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["RemoveOnComplete"]
 16 [-]: SETTABLE  R3 K4 R4     ; R3["RemoveOnComplete"] := R4
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 19 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["FailOnExpiry"]
 20 [-]: SETTABLE  R3 K5 R4     ; R3["FailOnExpiry"] := R4
 21 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 22 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["Label"]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x37B51F78"]
 28 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["Label"]
 29 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["LabelAnimRate"]
 30 [-]: MOVE      R6 R2        ; R6 := R2
 31 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 32 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 33 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["Time"]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 1         ; if R3 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x6733C272"]
 39 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["Time"]
 40 [-]: MOVE      R5 R2        ; R5 := R2
 41 [-]: CALL      R3 3 1       ; R3(R4,R5)
 42 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 43 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["Paused"]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 52
 46 [-]: JMP       52           ; PC := 52
 47 [-]: GETUPVAL  R3 U0        ; R3 := U0
 48 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["0x3DE5CD9B"]
 49 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["Paused"]
 50 [-]: MOVE      R5 R2        ; R5 := R2
 51 [-]: CALL      R3 3 1       ; R3(R4,R5)
 52 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 53 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["Message"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: TEST      R3 1         ; if R3 then PC := 62
 56 [-]: JMP       62           ; PC := 62
 57 [-]: GETUPVAL  R3 U0        ; R3 := U0
 58 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["0xB11F032"]
 59 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["Message"]
 60 [-]: GETTABLE  R5 R0 K16    ; R5 := R0["MessageDuration"]
 61 [-]: CALL      R3 3 1       ; R3(R4,R5)
 62 [-]: GETUPVAL  R3 U0        ; R3 := U0
 63 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0xC9403736"]
 64 [-]: MOVE      R4 R0        ; R4 := R0
 65 [-]: MOVE      R5 R2        ; R5 := R2
 66 [-]: CALL      R3 3 1       ; R3(R4,R5)
 67 [-]: RETURN    R0 1         ; return 


; Function #10.28:
;
; Name:            
; Defined at line: 1130
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["EntityInfo"]
  3 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SETTABLE  R1 K0 R0     ; R1["EntityInfo"] := R0
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0xECFDD17
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["ActiveHealthTrackers"]
 11 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 12 [-]: JMP       29           ; PC := 29
 13 [-]: GETUPVAL  R6 U2        ; R6 := U2
 14 [-]: EQ        1 R4 R6      ; if R4 == R6 then PC := 29
 15 [-]: JMP       29           ; PC := 29
 16 [-]: GETTABLE  R6 R5 K0     ; R6 := R5["EntityInfo"]
 17 [-]: GETUPVAL  R7 U0        ; R7 := U0
 18 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["EntityInfo"]
 19 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 29
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETUPVAL  R6 U3        ; R6 := U3
 22 [-]: GETUPVAL  R7 U0        ; R7 := U0
 23 [-]: CALL      R6 2 1       ; R6(R7)
 24 [-]: MOVE      R6 R0        ; R6 := R0
 25 [-]: MOVE      R6 R4        ; R6 := R4
 26 [-]: GETUPVAL  R6 U0        ; R6 := U0
 27 [-]: SETTABLE  R6 K3 K4     ; R6["Local"] := "0x1"
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 13; R3 := R4 end
 30 [-]: JMP       13           ; PC := 13
 31 [-]: GETUPVAL  R6 U5        ; R6 := U5
 32 [-]: CALL      R6 1 1       ; R6()
 33 [-]: GETUPVAL  R6 U6        ; R6 := U6
 34 [-]: CLOSURE   R7 0         ; R7 := closure(Function #10.28.1)
 35 [-]: GETUPVAL  R0 U0        ; R0 := U0
 36 [-]: GETUPVAL  R0 U2        ; R0 := U2
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: GETUPVAL  R0 U3        ; R0 := U3
 39 [-]: CALL      R6 2 1       ; R6(R7)
 40 [-]: RETURN    R0 1         ; return 


; Function #10.28.1:
;
; Name:            
; Defined at line: 1146
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["EntityInfo"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 181
  6 [-]: JMP       181          ; PC := 181
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["EntityInfo"]
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 10 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAvatarType
 11 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 12 [-]: TEST      R0 0         ; if not R0 then PC := 63
 13 [-]: JMP       63           ; PC := 63
 14 [-]: LOADNIL   R0 R0        ; R0 := nil
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Data"]
 17 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["NameOverride"]
 18 [-]: EQ        1 R1 K6      ; if R1 == nil then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R1 K7        ; R1 := mMovie
 21 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Data"]
 24 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["NameOverride"]
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["EntityInfo"]
 31 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xFA66CF82"]
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: GETUPVAL  R1 U0        ; R1 := U0
 35 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Data"]
 36 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["NameFormat"]
 37 [-]: TEST      R1 0         ; if not R1 then PC := 55
 38 [-]: JMP       55           ; PC := 55
 39 [-]: GETGLOBAL R1 K11       ; R1 := string
 40 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x633C4246"]
 41 [-]: GETUPVAL  R2 U0        ; R2 := U0
 42 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Data"]
 43 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["NameFormat"]
 44 [-]: LOADK     R3 K13       ; R3 := "|NAME|"
 45 [-]: MOVE      R4 R0        ; R4 := R0
 46 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 47 [-]: GETGLOBAL R2 K7        ; R2 := mMovie
 48 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x17028E8F"]
 49 [-]: GETUPVAL  R4 U1        ; R4 := U1
 50 [-]: LOADK     R5 K15       ; R5 := ".Name.text"
 51 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 52 [-]: MOVE      R5 R1        ; R5 := R1
 53 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 54 [-]: JMP       63           ; PC := 63
 55 [-]: GETGLOBAL R2 K7        ; R2 := mMovie
 56 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0xD6A79FE9"]
 57 [-]: GETUPVAL  R4 U1        ; R4 := U1
 58 [-]: LOADK     R5 K17       ; R5 := ".Name"
 59 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 60 [-]: LOADK     R5 K18       ; R5 := "text"
 61 [-]: MOVE      R6 R0        ; R6 := R0
 62 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 63 [-]: GETUPVAL  R2 U2        ; R2 := U2
 64 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["ActiveHealthTrackers"]
 65 [-]: GETUPVAL  R3 U1        ; R3 := U1
 66 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 67 [-]: TEST      R2 0         ; if not R2 then PC := 91
 68 [-]: JMP       91           ; PC := 91
 69 [-]: GETUPVAL  R2 U0        ; R2 := U0
 70 [-]: GETUPVAL  R3 U2        ; R3 := U2
 71 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["ActiveHealthTrackers"]
 72 [-]: GETUPVAL  R4 U1        ; R4 := U1
 73 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 74 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["Display"]
 75 [-]: SETTABLE  R2 K20 R3    ; R2["Display"] := R3
 76 [-]: GETUPVAL  R2 U0        ; R2 := U0
 77 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["Display"]
 78 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0xE103D6D0"]
 79 [-]: GETUPVAL  R4 U0        ; R4 := U0
 80 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["EntityInfo"]
 81 [-]: CALL      R2 3 1       ; R2(R3,R4)
 82 [-]: GETUPVAL  R2 U0        ; R2 := U0
 83 [-]: GETUPVAL  R3 U0        ; R3 := U0
 84 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EntityInfo"]
 85 [-]: SETTABLE  R2 K22 R3    ; R2["DisplayAvatar"] := R3
 86 [-]: GETUPVAL  R2 U0        ; R2 := U0
 87 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["Display"]
 88 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2["0x62648036"]
 89 [-]: CALL      R2 2 1       ; R2(R3)
 90 [-]: JMP       175          ; PC := 175
 91 [-]: GETGLOBAL R2 K24       ; R2 := Script
 92 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["ObjectType_RM_SERVER_ONLY"]
 93 [-]: GETGLOBAL R3 K26       ; R3 := gRegion
 94 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0xA559F558"]
 95 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 96 [-]: TEST      R3 1         ; if R3 then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: GETGLOBAL R3 K24       ; R3 := Script
 99 [-]: GETTABLE  R2 R3 K28    ; R2 := R3["ObjectType_RM_CLIENT_ONLY"]
100 [-]: GETUPVAL  R3 U0        ; R3 := U0
101 [-]: GETGLOBAL R4 K26       ; R4 := gRegion
102 [-]: SELF      R4 R4 K29    ; R5 := R4; R4 := R4["0xBB64E1BF"]
103 [-]: GETGLOBAL R6 K30       ; R6 := healthShieldDisplayType
104 [-]: LOADNIL   R7 R7        ; R7 := nil
105 [-]: MOVE      R8 R2        ; R8 := R2
106 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
107 [-]: SETTABLE  R3 K20 R4    ; R3["Display"] := R4
108 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
109 [-]: GETUPVAL  R4 U0        ; R4 := U0
110 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["Display"]
111 [-]: CALL      R3 2 2       ; R3 := R3(R4)
112 [-]: TEST      R3 0         ; if not R3 then PC := 125
113 [-]: JMP       125          ; PC := 125
114 [-]: GETGLOBAL R3 K31       ; R3 := 0x93B1256B
115 [-]: LOADK     R4 K32       ; R4 := "Failed to created health display for tracker '"
116 [-]: GETUPVAL  R5 U0        ; R5 := U0
117 [-]: GETTABLE  R5 R5 K33    ; R5 := R5["Name"]
118 [-]: LOADK     R6 K34       ; R6 := "'"
119 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
120 [-]: CALL      R3 2 1       ; R3(R4)
121 [-]: GETUPVAL  R3 U3        ; R3 := U3
122 [-]: GETUPVAL  R4 U0        ; R4 := U0
123 [-]: CALL      R3 2 1       ; R3(R4)
124 [-]: RETURN    R0 1         ; return 
125 [-]: GETUPVAL  R3 U0        ; R3 := U0
126 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["Display"]
127 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0x6664BCC9"]
128 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
129 [-]: GETUPVAL  R6 U0        ; R6 := U0
130 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["EntityInfo"]
131 [-]: LOADK     R7 K36       ; R7 := 100
132 [-]: GETUPVAL  R8 U1        ; R8 := U1
133 [-]: LOADK     R9 K37       ; R9 := ".Target"
134 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
135 [-]: GETUPVAL  R9 U1        ; R9 := U1
136 [-]: LOADK     R10 K38      ; R10 := ".Value"
137 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
138 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
139 [-]: GETUPVAL  R3 U0        ; R3 := U0
140 [-]: GETUPVAL  R4 U0        ; R4 := U0
141 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["EntityInfo"]
142 [-]: SETTABLE  R3 K22 R4    ; R3["DisplayAvatar"] := R4
143 [-]: GETUPVAL  R3 U0        ; R3 := U0
144 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Data"]
145 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["IgnorePredeath"]
146 [-]: TEST      R3 0         ; if not R3 then PC := 155
147 [-]: JMP       155          ; PC := 155
148 [-]: GETUPVAL  R3 U0        ; R3 := U0
149 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["Display"]
150 [-]: SELF      R3 R3 K40    ; R4 := R3; R3 := R3["0x84A3ADD4"]
151 [-]: GETUPVAL  R5 U0        ; R5 := U0
152 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["Data"]
153 [-]: GETTABLE  R5 R5 K39    ; R5 := R5["IgnorePredeath"]
154 [-]: CALL      R3 3 1       ; R3(R4,R5)
155 [-]: GETUPVAL  R3 U2        ; R3 := U2
156 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["ActiveHealthTrackers"]
157 [-]: GETUPVAL  R4 U1        ; R4 := U1
158 [-]: GETUPVAL  R5 U0        ; R5 := U0
159 [-]: SETTABLE  R3 R4 R5     ; R3[R4] := R5
160 [-]: GETGLOBAL R3 K41       ; R3 := 0x52E17A90
161 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
162 [-]: GETUPVAL  R5 U1        ; R5 := U1
163 [-]: GETGLOBAL R6 K42       ; R6 := UISys
164 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
165 [-]: NEWTABLE  R7 1 0       ; R7 := {}
166 [-]: LOADK     R8 K44       ; R8 := "_alpha"
167 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
168 [-]: NEWTABLE  R8 1 0       ; R8 := {}
169 [-]: LOADK     R9 K36       ; R9 := 100
170 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
171 [-]: LOADK     R9 K45       ; R9 := 0.5
172 [-]: LOADK     R10 K46      ; R10 := 0
173 [-]: LOADNIL   R11 R11      ; R11 := nil
174 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
175 [-]: GETUPVAL  R3 U0        ; R3 := U0
176 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["Display"]
177 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0x8C7099E9"]
178 [-]: GETGLOBAL R5 K48       ; R5 := 0x4CDEF9FF
179 [-]: CALL      R5 1 0       ; R5,... := R5()
180 [-]: CALL      R3 0 1       ; R3(R4,...)
181 [-]: RETURN    R0 1         ; return 


; Function #10.29:
;
; Name:            
; Defined at line: 1192
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["NameFormat"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["NameFormat"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.29.1)
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: GETUPVAL  R0 U3        ; R0 := U3
 19 [-]: CALL      R2 2 1       ; R2(R3)
 20 [-]: RETURN    R0 1         ; return 


; Function #10.29.1:
;
; Name:            
; Defined at line: 1200
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["EntityInfo"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 40
  6 [-]: JMP       40           ; PC := 40
  7 [-]: LOADNIL   R0 R0        ; R0 := nil
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Data"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["NameOverride"]
 11 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 17 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["NameOverride"]
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: MOVE      R0 R1        ; R0 := R1
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["EntityInfo"]
 24 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xFA66CF82"]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: MOVE      R0 R1        ; R0 := R1
 27 [-]: GETGLOBAL R1 K8        ; R1 := string
 28 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x633C4246"]
 29 [-]: GETUPVAL  R2 U1        ; R2 := U1
 30 [-]: LOADK     R3 K10       ; R3 := "|NAME|"
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 33 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 34 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x17028E8F"]
 35 [-]: GETUPVAL  R4 U2        ; R4 := U2
 36 [-]: LOADK     R5 K12       ; R5 := ".Name.text"
 37 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 38 [-]: MOVE      R5 R1        ; R5 := R1
 39 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 40 [-]: RETURN    R0 1         ; return 


; Function #10.30:
;
; Name:            
; Defined at line: 1215
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["NameOverride"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["NameOverride"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: RETURN    R0 1         ; return 


; Function #10.31:
;
; Name:            
; Defined at line: 1225
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["RemoveOnNullTarget"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["RemoveOnNullTarget"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: RETURN    R0 1         ; return 


; Function #10.32:
;
; Name:            
; Defined at line: 1235
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["HealthWarningThreshold"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["HealthWarningThreshold"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.32.1)
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: GETUPVAL  R0 U4        ; R0 := U4
 19 [-]: GETUPVAL  R0 U5        ; R0 := U5
 20 [-]: GETUPVAL  R0 U6        ; R0 := U6
 21 [-]: CALL      R2 2 1       ; R2(R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #10.32.1:
;
; Name:            
; Defined at line: 1243
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["HealthPct"]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x7BEB1B64"]
  8 [-]: LOADK     R2 K3        ; R2 := -1
  9 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.32.1.1)
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: GETUPVAL  R0 U4        ; R0 := U4
 14 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 15 [-]: SETTABLE  R0 K0 R1     ; R0["HealthPct"] := R1
 16 [-]: RETURN    R0 1         ; return 


; Function #10.32.1.1:
;
; Name:            
; Defined at line: 1246
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["HealthWarningThreshold"]
  4 [-]: LE        0 R0 R2      ; if R0 > R2 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["HealthWarningThreshold"]
  9 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 12 [-]: GETGLOBAL R3 K3        ; R3 := defenseTargetNearDeath
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 50
 15 [-]: JMP       50           ; PC := 50
 16 [-]: CLOSURE   R2 0         ; R2 := closure(Function #10.32.1.1.1)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["NearDeathTimerID"]
 21 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 50
 22 [-]: JMP       50           ; PC := 50
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETUPVAL  R4 U3        ; R4 := U3
 25 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x61494587"]
 26 [-]: LOADK     R6 K7        ; R6 := 3
 27 [-]: MOVE      R7 R2        ; R7 := R2
 28 [-]: MOVE      R8 R1        ; R8 := R1
 29 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 30 [-]: SETTABLE  R3 K4 R4     ; R3["NearDeathTimerID"] := R4
 31 [-]: MOVE      R3 R2        ; R3 := R2
 32 [-]: CALL      R3 1 1       ; R3()
 33 [-]: JMP       50           ; PC := 50
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["NearDeathTimerID"]
 36 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 40 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["HealthWarningThreshold"]
 41 [-]: LT        0 R3 R0      ; if R3 >= R0 then PC := 50
 42 [-]: JMP       50           ; PC := 50
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xD5274B5D"]
 45 [-]: GETUPVAL  R5 U0        ; R5 := U0
 46 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["NearDeathTimerID"]
 47 [-]: CALL      R3 3 1       ; R3(R4,R5)
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: SETTABLE  R3 K4 K5     ; R3["NearDeathTimerID"] := nil
 50 [-]: RETURN    R0 1         ; return 


; Function #10.32.1.1.1:
;
; Name:            
; Defined at line: 1251
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x69B983D"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: LOADK     R3 K2        ; R3 := ".Value"
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xBB2F7661"]
 10 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 11 [-]: GETGLOBAL R4 K4        ; R4 := defenseTargetNearDeath
 12 [-]: ADD       R5 R0 K5     ; R5 := R0 + 10
 13 [-]: ADD       R6 R1 K5     ; R6 := R1 + 10
 14 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 15 [-]: RETURN    R0 1         ; return 


; Function #10.33:
;
; Name:            
; Defined at line: 1271
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CLOSURE   R2 0         ; R2 := closure(Function #10.33.1)
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #10.33.1:
;
; Name:            
; Defined at line: 1272
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "LostHealth"
  5 [-]: LOADK     R4 K3        ; R4 := "_alpha"
  6 [-]: LOADK     R5 K4        ; R5 := 0
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: LOADK     R3 K2        ; R3 := "LostHealth"
 12 [-]: LOADK     R4 K5        ; R4 := "_xscale"
 13 [-]: LOADK     R5 K6        ; R5 := 60
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: LOADK     R3 K2        ; R3 := "LostHealth"
 19 [-]: LOADK     R4 K7        ; R4 := "_yscale"
 20 [-]: LOADK     R5 K6        ; R5 := 60
 21 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 22 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 23 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0xD6A79FE9"]
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: LOADK     R3 K9        ; R3 := ".LostHealth.Label"
 26 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 27 [-]: LOADK     R3 K10       ; R3 := "text"
 28 [-]: GETUPVAL  R4 U1        ; R4 := U1
 29 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 30 [-]: GETGLOBAL R0 K11       ; R0 := 0xF595ADDE
 31 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 32 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x6B7B470B"]
 33 [-]: GETUPVAL  R3 U0        ; R3 := U0
 34 [-]: LOADK     R4 K9        ; R4 := ".LostHealth.Label"
 35 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 36 [-]: LOADK     R4 K13       ; R4 := "textWidth"
 37 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 38 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 39 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 40 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
 41 [-]: GETUPVAL  R3 U0        ; R3 := U0
 42 [-]: LOADK     R4 K14       ; R4 := "LostHealth.Label"
 43 [-]: LOADK     R5 K15       ; R5 := "_x"
 44 [-]: UNM       R6 R0        ; R6 := - R0
 45 [-]: DIV       R6 R6 K16    ; R6 := R6 / 2
 46 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 47 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 48 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
 49 [-]: GETUPVAL  R3 U0        ; R3 := U0
 50 [-]: LOADK     R4 K2        ; R4 := "LostHealth"
 51 [-]: LOADK     R5 K15       ; R5 := "_x"
 52 [-]: DIV       R6 R0 K16    ; R6 := R0 / 2
 53 [-]: SUB       R6 K17 R6    ; R6 := 100 - R6
 54 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 55 [-]: GETGLOBAL R1 K18       ; R1 := 0x52E17A90
 56 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 57 [-]: GETUPVAL  R3 U0        ; R3 := U0
 58 [-]: LOADK     R4 K19       ; R4 := ".LostHealth"
 59 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 60 [-]: GETGLOBAL R4 K20       ; R4 := UISys
 61 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["FlashInstance_EASE_OUT"]
 62 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 63 [-]: LOADK     R6 K3        ; R6 := "_alpha"
 64 [-]: LOADK     R7 K5        ; R7 := "_xscale"
 65 [-]: LOADK     R8 K7        ; R8 := "_yscale"
 66 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 67 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 68 [-]: LOADK     R7 K17       ; R7 := 100
 69 [-]: LOADK     R8 K17       ; R8 := 100
 70 [-]: LOADK     R9 K17       ; R9 := 100
 71 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 72 [-]: LOADK     R7 K22       ; R7 := 0.25
 73 [-]: LOADK     R8 K4        ; R8 := 0
 74 [-]: CLOSURE   R9 0         ; R9 := closure(Function #10.33.1.1)
 75 [-]: GETUPVAL  R0 U0        ; R0 := U0
 76 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 77 [-]: GETGLOBAL R1 K23       ; R1 := 0x400E7765
 78 [-]: GETGLOBAL R2 K24       ; R2 := timeLostFx
 79 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 80 [-]: TEST      R1 1         ; if R1 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETUPVAL  R1 U2        ; R1 := U2
 83 [-]: GETTABLE  R1 R1 K25    ; R1 := R1["0x69B983D"]
 84 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 85 [-]: GETUPVAL  R3 U0        ; R3 := U0
 86 [-]: LOADK     R4 K19       ; R4 := ".LostHealth"
 87 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 88 [-]: CALL      R1 3 3       ; R1,R2 := R1(R2,R3)
 89 [-]: GETUPVAL  R3 U2        ; R3 := U2
 90 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["0xBB2F7661"]
 91 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 92 [-]: GETGLOBAL R5 K24       ; R5 := timeLostFx
 93 [-]: MOVE      R6 R1        ; R6 := R1
 94 [-]: ADD       R7 R2 K27    ; R7 := R2 + 3
 95 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 96 [-]: RETURN    R0 1         ; return 


; Function #10.33.1.1:
;
; Name:            
; Defined at line: 1283
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := ".LostHealth"
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_LINEAR"]
  8 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  9 [-]: LOADK     R5 K5        ; R5 := "_xscale"
 10 [-]: LOADK     R6 K6        ; R6 := "_yscale"
 11 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 12 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 13 [-]: LOADK     R6 K7        ; R6 := 120
 14 [-]: LOADK     R7 K7        ; R7 := 120
 15 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 16 [-]: LOADK     R6 K8        ; R6 := 1.5
 17 [-]: LOADK     R7 K9        ; R7 := 0
 18 [-]: CLOSURE   R8 0         ; R8 := closure(Function #10.33.1.1.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 21 [-]: RETURN    R0 1         ; return 


; Function #10.33.1.1.1:
;
; Name:            
; Defined at line: 1285
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := ".LostHealth"
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_LINEAR"]
  8 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  9 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 10 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 11 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 12 [-]: LOADK     R6 K6        ; R6 := 0
 13 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 14 [-]: LOADK     R6 K7        ; R6 := 0.25
 15 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 16 [-]: RETURN    R0 1         ; return 


; Function #10.34:
;
; Name:            
; Defined at line: 1299
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["IgnorePredeath"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["IgnorePredeath"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Display"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Display"]
 22 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x84A3ADD4"]
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #10.35:
;
; Name:            
; Defined at line: 1313
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0xA3B2879"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R3 2 1       ; R3(R4)
  5 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  6 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["RemoveOnNullTarget"]
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0xEEB6DA74"]
 12 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["RemoveOnNullTarget"]
 13 [-]: MOVE      R5 R2        ; R5 := R2
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 16 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["HealthWarningThreshold"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0xA4AE043E"]
 22 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["HealthWarningThreshold"]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R3 3 1       ; R3(R4,R5)
 25 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 26 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["NameOverride"]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: TEST      R3 1         ; if R3 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xB42AC053"]
 32 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["NameOverride"]
 33 [-]: MOVE      R5 R2        ; R5 := R2
 34 [-]: CALL      R3 3 1       ; R3(R4,R5)
 35 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 36 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["NameFormat"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: TEST      R3 1         ; if R3 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: GETUPVAL  R3 U0        ; R3 := U0
 41 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xA7677E04"]
 42 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["NameFormat"]
 43 [-]: MOVE      R5 R2        ; R5 := R2
 44 [-]: CALL      R3 3 1       ; R3(R4,R5)
 45 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 46 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["IgnorePredeath"]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: TEST      R3 1         ; if R3 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETUPVAL  R3 U0        ; R3 := U0
 51 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x7F18147B"]
 52 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["IgnorePredeath"]
 53 [-]: MOVE      R5 R2        ; R5 := R2
 54 [-]: CALL      R3 3 1       ; R3(R4,R5)
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xC9403736"]
 57 [-]: MOVE      R4 R0        ; R4 := R0
 58 [-]: MOVE      R5 R2        ; R5 := R2
 59 [-]: CALL      R3 3 1       ; R3(R4,R5)
 60 [-]: RETURN    R0 1         ; return 


; Function #10.36:
;
; Name:            
; Defined at line: 1334
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R0 K1        ; R0 := ""
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UpperFactionLabel"]
  9 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 14 [-]: SETTABLE  R2 K3 R0     ; R2["UpperFactionLabel"] := R0
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: CALL      R2 1 1       ; R2()
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.36.1)
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: GETUPVAL  R0 U3        ; R0 := U3
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: CALL      R2 2 1       ; R2(R3)
 23 [-]: RETURN    R0 1         ; return 


; Function #10.36.1:
;
; Name:            
; Defined at line: 1345
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: LOADK     R4 K3        ; R4 := "UpperFactionLabel"
 10 [-]: LOADK     R5 K4        ; R5 := "text"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Data"]
 15 [-]: GETGLOBAL R2 K7        ; R2 := math
 16 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x8B011038"]
 17 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 18 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x6B7B470B"]
 20 [-]: GETUPVAL  R6 U1        ; R6 := U1
 21 [-]: LOADK     R7 K11       ; R7 := ".UpperFactionLabel"
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: LOADK     R7 K12       ; R7 := "textWidth"
 24 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 25 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 26 [-]: LOADK     R4 K13       ; R4 := 160
 27 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 28 [-]: SETTABLE  R1 K6 R2     ; R1["UpperLabelWidth"] := R2
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Data"]
 31 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["LowerLabelWidth"]
 32 [-]: TEST      R1 1         ; if R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADK     R1 K13       ; R1 := 160
 35 [-]: GETGLOBAL R2 K7        ; R2 := math
 36 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x8B011038"]
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: GETUPVAL  R4 U2        ; R4 := U2
 39 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Data"]
 40 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["UpperLabelWidth"]
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: MOVE      R1 R2        ; R1 := R2
 43 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 44 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x880196A7"]
 45 [-]: GETUPVAL  R4 U1        ; R4 := U1
 46 [-]: LOADK     R5 K15       ; R5 := "UpperProgressLabel"
 47 [-]: LOADK     R6 K16       ; R6 := "_x"
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 50 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 51 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x880196A7"]
 52 [-]: GETUPVAL  R4 U1        ; R4 := U1
 53 [-]: LOADK     R5 K17       ; R5 := "LowerProgressLabel"
 54 [-]: LOADK     R6 K16       ; R6 := "_x"
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 57 [-]: RETURN    R0 1         ; return 


; Function #10.37:
;
; Name:            
; Defined at line: 1357
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R0 K1        ; R0 := ""
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["LowerFactionLabel"]
  9 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 14 [-]: SETTABLE  R2 K3 R0     ; R2["LowerFactionLabel"] := R0
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: CALL      R2 1 1       ; R2()
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.37.1)
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: GETUPVAL  R0 U3        ; R0 := U3
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: CALL      R2 2 1       ; R2(R3)
 23 [-]: RETURN    R0 1         ; return 


; Function #10.37.1:
;
; Name:            
; Defined at line: 1368
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: LOADK     R4 K3        ; R4 := "LowerFactionLabel"
 10 [-]: LOADK     R5 K4        ; R5 := "text"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Data"]
 15 [-]: GETGLOBAL R2 K7        ; R2 := math
 16 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x8B011038"]
 17 [-]: GETGLOBAL R3 K9        ; R3 := 0xF595ADDE
 18 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x6B7B470B"]
 20 [-]: GETUPVAL  R6 U1        ; R6 := U1
 21 [-]: LOADK     R7 K11       ; R7 := ".LowerFactionLabel"
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: LOADK     R7 K12       ; R7 := "textWidth"
 24 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 25 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 26 [-]: LOADK     R4 K13       ; R4 := 160
 27 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 28 [-]: SETTABLE  R1 K6 R2     ; R1["LowerLabelWidth"] := R2
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Data"]
 31 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["UpperLabelWidth"]
 32 [-]: TEST      R1 1         ; if R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADK     R1 K13       ; R1 := 160
 35 [-]: GETGLOBAL R2 K7        ; R2 := math
 36 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x8B011038"]
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: GETUPVAL  R4 U2        ; R4 := U2
 39 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Data"]
 40 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["LowerLabelWidth"]
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: MOVE      R1 R2        ; R1 := R2
 43 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 44 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x880196A7"]
 45 [-]: GETUPVAL  R4 U1        ; R4 := U1
 46 [-]: LOADK     R5 K15       ; R5 := "UpperProgressLabel"
 47 [-]: LOADK     R6 K16       ; R6 := "_x"
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 50 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 51 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x880196A7"]
 52 [-]: GETUPVAL  R4 U1        ; R4 := U1
 53 [-]: LOADK     R5 K17       ; R5 := "LowerProgressLabel"
 54 [-]: LOADK     R6 K16       ; R6 := "_x"
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 57 [-]: RETURN    R0 1         ; return 


; Function #10.38:
;
; Name:            
; Defined at line: 1380
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: TEST      R1 1         ; if R1 then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x1B252E3C"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 12 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UpperFactionIcon"]
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 18 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x1B252E3C"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: SETTABLE  R2 K3 R3     ; R2["UpperFactionIcon"] := R3
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: CALL      R2 1 1       ; R2()
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.38.1)
 25 [-]: GETUPVAL  R0 U3        ; R0 := U3
 26 [-]: MOVE      R0 R0        ; R0 := R0
 27 [-]: CALL      R2 2 1       ; R2(R3)
 28 [-]: RETURN    R0 1         ; return 


; Function #10.38.1:
;
; Name:            
; Defined at line: 1387
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x26581636"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := ".UpperFactionIcon"
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.39:
;
; Name:            
; Defined at line: 1392
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: TEST      R1 1         ; if R1 then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x1B252E3C"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
 12 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["LowerFactionIcon"]
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
 18 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x1B252E3C"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: SETTABLE  R2 K3 R3     ; R2["LowerFactionIcon"] := R3
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: CALL      R2 1 1       ; R2()
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.39.1)
 25 [-]: GETUPVAL  R0 U3        ; R0 := U3
 26 [-]: MOVE      R0 R0        ; R0 := R0
 27 [-]: CALL      R2 2 1       ; R2(R3)
 28 [-]: RETURN    R0 1         ; return 


; Function #10.39.1:
;
; Name:            
; Defined at line: 1398
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x26581636"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := ".LowerFactionIcon"
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #10.40:
;
; Name:            
; Defined at line: 1403
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["UpperColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["UpperColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.40.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.40.1:
;
; Name:            
; Defined at line: 1411
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "UpperFactionLabel"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: LOADK     R3 K4        ; R3 := "UpperProgressLabel"
 12 [-]: LOADK     R4 K3        ; R4 := "_color"
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: LOADK     R3 K5        ; R3 := "UpperProgressBar.Progress"
 19 [-]: LOADK     R4 K3        ; R4 := "_color"
 20 [-]: GETUPVAL  R5 U1        ; R5 := U1
 21 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #10.41:
;
; Name:            
; Defined at line: 1418
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["LowerColor"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["LowerColor"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.41.1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.41.1:
;
; Name:            
; Defined at line: 1426
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "LowerFactionLabel"
  5 [-]: LOADK     R4 K3        ; R4 := "_color"
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  8 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: LOADK     R3 K4        ; R3 := "LowerProgressLabel"
 12 [-]: LOADK     R4 K3        ; R4 := "_color"
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: LOADK     R3 K5        ; R3 := "LowerProgressBar.Progress"
 19 [-]: LOADK     R4 K3        ; R4 := "_color"
 20 [-]: GETUPVAL  R5 U1        ; R5 := U1
 21 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #10.42:
;
; Name:            
; Defined at line: 1433
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R2 1         ; if R2 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["UpperProgress"]
  6 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 14
  7 [-]: JMP       14           ; PC := 14
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["LowerProgress"]
 11 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 16 [-]: SETTABLE  R3 K1 R0     ; R3["UpperProgress"] := R0
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Data"]
 19 [-]: SETTABLE  R3 K2 R1     ; R3["LowerProgress"] := R1
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: CALL      R3 1 1       ; R3()
 22 [-]: GETUPVAL  R3 U2        ; R3 := U2
 23 [-]: CLOSURE   R4 0         ; R4 := closure(Function #10.42.1)
 24 [-]: GETUPVAL  R0 U3        ; R0 := U3
 25 [-]: MOVE      R0 R0        ; R0 := R0
 26 [-]: MOVE      R0 R1        ; R0 := R1
 27 [-]: CALL      R3 2 1       ; R3(R4)
 28 [-]: RETURN    R0 1         ; return 


; Function #10.42.1:
;
; Name:            
; Defined at line: 1442
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "UpperProgressBar.Progress"
  5 [-]: LOADK     R4 K3        ; R4 := "_xscale"
  6 [-]: GETGLOBAL R5 K4        ; R5 := 0x6374FD98
  7 [-]: GETGLOBAL R6 K5        ; R6 := math
  8 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xF7005A7B"]
  9 [-]: GETUPVAL  R7 U1        ; R7 := U1
 10 [-]: MUL       R7 R7 K7     ; R7 := R7 * 100
 11 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 12 [-]: LOADK     R7 K8        ; R7 := 0.0010000000474975
 13 [-]: LOADK     R8 K7        ; R8 := 100
 14 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 15 [-]: CALL      R0 0 1       ; R0(R1,...)
 16 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 17 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: LOADK     R3 K9        ; R3 := "UpperProgressLabel"
 20 [-]: LOADK     R4 K10       ; R4 := "text"
 21 [-]: GETGLOBAL R5 K5        ; R5 := math
 22 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF7005A7B"]
 23 [-]: GETUPVAL  R6 U1        ; R6 := U1
 24 [-]: MUL       R6 R6 K7     ; R6 := R6 * 100
 25 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 26 [-]: LOADK     R6 K11       ; R6 := "%"
 27 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 28 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 29 [-]: GETGLOBAL R0 K12       ; R0 := 0x400E7765
 30 [-]: GETUPVAL  R1 U2        ; R1 := U2
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 1         ; if R0 then PC := 62
 33 [-]: JMP       62           ; PC := 62
 34 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 35 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 36 [-]: GETUPVAL  R2 U0        ; R2 := U0
 37 [-]: LOADK     R3 K13       ; R3 := "LowerProgressBar.Progress"
 38 [-]: LOADK     R4 K3        ; R4 := "_xscale"
 39 [-]: GETGLOBAL R5 K4        ; R5 := 0x6374FD98
 40 [-]: GETGLOBAL R6 K5        ; R6 := math
 41 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xF7005A7B"]
 42 [-]: GETUPVAL  R7 U2        ; R7 := U2
 43 [-]: MUL       R7 R7 K7     ; R7 := R7 * 100
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: LOADK     R7 K8        ; R7 := 0.0010000000474975
 46 [-]: LOADK     R8 K7        ; R8 := 100
 47 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 48 [-]: CALL      R0 0 1       ; R0(R1,...)
 49 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 50 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x880196A7"]
 51 [-]: GETUPVAL  R2 U0        ; R2 := U0
 52 [-]: LOADK     R3 K14       ; R3 := "LowerProgressLabel"
 53 [-]: LOADK     R4 K10       ; R4 := "text"
 54 [-]: GETGLOBAL R5 K5        ; R5 := math
 55 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF7005A7B"]
 56 [-]: GETUPVAL  R6 U2        ; R6 := U2
 57 [-]: MUL       R6 R6 K7     ; R6 := R6 * 100
 58 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 59 [-]: LOADK     R6 K11       ; R6 := "%"
 60 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 61 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 62 [-]: RETURN    R0 1         ; return 


; Function #10.43:
;
; Name:            
; Defined at line: 1453
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R1 1         ; if R1 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["LowerVisible"]
  6 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Data"]
 11 [-]: SETTABLE  R2 K1 R0     ; R2["LowerVisible"] := R0
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #10.43.1)
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: RETURN    R0 1         ; return 


; Function #10.43.1:
;
; Name:            
; Defined at line: 1461
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADK     R0 K1        ; R0 := 100
  6 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: LOADK     R4 K4        ; R4 := "LowerFactionLabel"
 10 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: LOADK     R4 K6        ; R4 := "LowerFactionIcon"
 17 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 18 [-]: MOVE      R6 R0        ; R6 := R0
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 21 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: LOADK     R4 K7        ; R4 := "LowerProgressLabel"
 24 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 25 [-]: MOVE      R6 R0        ; R6 := R0
 26 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 27 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 28 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: LOADK     R4 K8        ; R4 := "LowerProgressBar.Progress"
 31 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 32 [-]: MOVE      R6 R0        ; R6 := R0
 33 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 34 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 35 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: LOADK     R4 K9        ; R4 := "LowerProgressBar.Bg"
 38 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 39 [-]: DIV       R6 R0 K10    ; R6 := R0 / 5
 40 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 41 [-]: RETURN    R0 1         ; return 


; Function #10.44:
;
; Name:            
; Defined at line: 1475
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["UpperFactionLabel"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x3846A7E4"]
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["UpperFactionLabel"]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 12 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["LowerFactionLabel"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x5F24AABD"]
 18 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["LowerFactionLabel"]
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 22 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["UpperFactionIcon"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 33
 25 [-]: JMP       33           ; PC := 33
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0x4D4D1AB0"]
 28 [-]: GETGLOBAL R3 K7        ; R3 := 0x7C282057
 29 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["UpperFactionIcon"]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: CALL      R2 3 1       ; R2(R3,R4)
 33 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 34 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["LowerFactionIcon"]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 1         ; if R2 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0xB095D524"]
 40 [-]: GETGLOBAL R3 K7        ; R3 := 0x7C282057
 41 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["LowerFactionIcon"]
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: MOVE      R4 R1        ; R4 := R1
 44 [-]: CALL      R2 3 1       ; R2(R3,R4)
 45 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 46 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["UpperColor"]
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETUPVAL  R2 U0        ; R2 := U0
 51 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0xC881F2B3"]
 52 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["UpperColor"]
 53 [-]: MOVE      R4 R1        ; R4 := R1
 54 [-]: CALL      R2 3 1       ; R2(R3,R4)
 55 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 56 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["LowerColor"]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETUPVAL  R2 U0        ; R2 := U0
 61 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0x20CF6E5A"]
 62 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["LowerColor"]
 63 [-]: MOVE      R4 R1        ; R4 := R1
 64 [-]: CALL      R2 3 1       ; R2(R3,R4)
 65 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 66 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["UpperProgress"]
 67 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 68 [-]: TEST      R2 1         ; if R2 then PC := 76
 69 [-]: JMP       76           ; PC := 76
 70 [-]: GETUPVAL  R2 U0        ; R2 := U0
 71 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["0xE03F8790"]
 72 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["UpperProgress"]
 73 [-]: GETTABLE  R4 R0 K16    ; R4 := R0["LowerProgress"]
 74 [-]: MOVE      R5 R1        ; R5 := R1
 75 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 76 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 77 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["LowerVisible"]
 78 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 79 [-]: TEST      R2 1         ; if R2 then PC := 86
 80 [-]: JMP       86           ; PC := 86
 81 [-]: GETUPVAL  R2 U0        ; R2 := U0
 82 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0xC2C9E3AC"]
 83 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["LowerVisible"]
 84 [-]: MOVE      R4 R1        ; R4 := R1
 85 [-]: CALL      R2 3 1       ; R2(R3,R4)
 86 [-]: GETUPVAL  R2 U0        ; R2 := U0
 87 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["0xC9403736"]
 88 [-]: MOVE      R3 R0        ; R3 := R0
 89 [-]: MOVE      R4 R1        ; R4 := R1
 90 [-]: CALL      R2 3 1       ; R2(R3,R4)
 91 [-]: RETURN    R0 1         ; return 


; Function #10.45:
;
; Name:            
; Defined at line: 1505
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x63B09107
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Data"]
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["LocalizeLabels"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["Tag"]
  8 [-]: EQ        0 R8 R0      ; if R8 ~= R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["Upper"]
 11 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: SETTABLE  R7 K5 R1     ; R7["Params"] := R1
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 16 [-]: JMP       7            ; PC := 7
 17 [-]: GETGLOBAL R8 K6        ; R8 := table
 18 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 19 [-]: GETUPVAL  R9 U0        ; R9 := U0
 20 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["Data"]
 21 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["LocalizeLabels"]
 22 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 23 [-]: SETTABLE  R10 K3 R0    ; R10["Tag"] := R0
 24 [-]: SETTABLE  R10 K5 R1    ; R10["Params"] := R1
 25 [-]: SETTABLE  R10 K4 R2    ; R10["Upper"] := R2
 26 [-]: CALL      R8 3 1       ; R8(R9,R10)
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #10.46:
;
; Name:            
; Defined at line: 1516
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R0 K3        ; R0 := ""
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["newLabel"]
 14 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: SETTABLE  R3 K4 R0     ; R3["newLabel"] := R0
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0x63B09107
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Data"]
 22 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LocalizeLabels"]
 23 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 24 [-]: JMP       56           ; PC := 56
 25 [-]: GETTABLE  R8 R7 K8     ; R8 := R7["Tag"]
 26 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x633C4246"]
 27 [-]: LOADK     R10 K10      ; R10 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
 28 [-]: LOADK     R11 K11      ; R11 := "%%%0"
 29 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 30 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
 31 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 32 [-]: GETTABLE  R11 R7 K8    ; R11 := R7["Tag"]
 33 [-]: MOVE      R12 R1       ; R12 := R1
 34 [-]: GETTABLE  R13 R7 K13   ; R13 := R7["Params"]
 35 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 36 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x633C4246"]
 37 [-]: LOADK     R11 K14      ; R11 := "%%"
 38 [-]: LOADK     R12 K11      ; R12 := "%%%0"
 39 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 40 [-]: GETUPVAL  R10 U0       ; R10 := U0
 41 [-]: GETUPVAL  R11 U0       ; R11 := U0
 42 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["newLabel"]
 43 [-]: SELF      R11 R11 K9   ; R12 := R11; R11 := R11["0x633C4246"]
 44 [-]: MOVE      R13 R8       ; R13 := R8
 45 [-]: GETUPVAL  R14 U1       ; R14 := U1
 46 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["0xF81722A2"]
 47 [-]: GETTABLE  R15 R7 K16   ; R15 := R7["Upper"]
 48 [-]: GETGLOBAL R16 K17      ; R16 := string
 49 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["0x639C642A"]
 50 [-]: MOVE      R17 R9       ; R17 := R9
 51 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 52 [-]: MOVE      R17 R9       ; R17 := R9
 53 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 54 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 55 [-]: SETTABLE  R10 K4 R11   ; R10["newLabel"] := R11
 56 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 25; R5 := R6 end
 57 [-]: JMP       25           ; PC := 25
 58 [-]: TEST      R2 1         ; if R2 then PC := 72
 59 [-]: JMP       72           ; PC := 72
 60 [-]: GETUPVAL  R10 U0       ; R10 := U0
 61 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Data"]
 62 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["Label"]
 63 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R10 U0       ; R10 := U0
 66 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["newLabel"]
 67 [-]: GETUPVAL  R11 U0       ; R11 := U0
 68 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["prevLabel"]
 69 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: RETURN    R0 1         ; return 
 72 [-]: GETUPVAL  R10 U0       ; R10 := U0
 73 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Data"]
 74 [-]: SETTABLE  R10 K19 R0   ; R10["Label"] := R0
 75 [-]: GETUPVAL  R10 U0       ; R10 := U0
 76 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Data"]
 77 [-]: SETTABLE  R10 K21 R1   ; R10["LabelAnimRate"] := R1
 78 [-]: GETUPVAL  R10 U2       ; R10 := U2
 79 [-]: CALL      R10 1 1      ; R10()
 80 [-]: GETUPVAL  R10 U3       ; R10 := U3
 81 [-]: CLOSURE   R11 0        ; R11 := closure(Function #10.46.1)
 82 [-]: GETUPVAL  R0 U0        ; R0 := U0
 83 [-]: MOVE      R0 R1        ; R0 := R1
 84 [-]: GETUPVAL  R0 U1        ; R0 := U1
 85 [-]: GETUPVAL  R0 U4        ; R0 := U4
 86 [-]: CALL      R10 2 1      ; R10(R11)
 87 [-]: RETURN    R0 1         ; return 


; Function #10.46.1:
;
; Name:            
; Defined at line: 1539
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["newLabel"]
  4 [-]: SETTABLE  R0 K0 R1     ; R0["prevLabel"] := R1
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xACEBA655"]
 10 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: GETUPVAL  R3 U3        ; R3 := U3
 13 [-]: LOADK     R4 K4        ; R4 := ".Label"
 14 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["newLabel"]
 17 [-]: LOADNIL   R5 R5        ; R5 := nil
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
 22 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xD6A79FE9"]
 23 [-]: GETUPVAL  R2 U3        ; R2 := U3
 24 [-]: LOADK     R3 K4        ; R3 := ".Label"
 25 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 26 [-]: LOADK     R3 K6        ; R3 := "text"
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["newLabel"]
 29 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 30 [-]: GETUPVAL  R0 U0        ; R0 := U0
 31 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["Data"]
 32 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["AutoHeight"]
 33 [-]: TEST      R0 0         ; if not R0 then PC := 56
 34 [-]: JMP       56           ; PC := 56
 35 [-]: GETGLOBAL R0 K9        ; R0 := 0xF595ADDE
 36 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 37 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x6B7B470B"]
 38 [-]: GETUPVAL  R3 U3        ; R3 := U3
 39 [-]: LOADK     R4 K4        ; R4 := ".Label"
 40 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 41 [-]: LOADK     R4 K11       ; R4 := "textHeight"
 42 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 43 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 44 [-]: EQ        1 R0 K12     ; if R0 == nil then PC := 56
 45 [-]: JMP       56           ; PC := 56
 46 [-]: GETUPVAL  R1 U0        ; R1 := U0
 47 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["0xBBA39962"]
 48 [-]: GETGLOBAL R2 K14       ; R2 := math
 49 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["0x8B011038"]
 50 [-]: ADD       R3 R0 K16    ; R3 := R0 + 15
 51 [-]: LOADK     R4 K17       ; R4 := 40
 52 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 53 [-]: LOADNIL   R3 R3        ; R3 := nil
 54 [-]: MOVE      R4 R1        ; R4 := R1
 55 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 56 [-]: GETUPVAL  R1 U0        ; R1 := U0
 57 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["Data"]
 58 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 59 [-]: SETTABLE  R1 K18 R2    ; R1["LocalizeLabels"] := R2
 60 [-]: RETURN    R0 1         ; return 


; Function #10.47:
;
; Name:            
; Defined at line: 1556
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Label"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Data"]
  8 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["LocalizeLabels"]
  9 [-]: SETTABLE  R3 K3 R4     ; R3["LocalizeLabels"] := R4
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x37B51F78"]
 12 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Label"]
 13 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["LabelAnimRate"]
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0xC9403736"]
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: MOVE      R5 R2        ; R5 := R2
 20 [-]: CALL      R3 3 1       ; R3(R4,R5)
 21 [-]: RETURN    R0 1         ; return 


; Function #10.48:
;
; Name:            
; Defined at line: 1567
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["InitRedraw"]
  3 [-]: TEST      R4 0         ; if not R4 then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["InitRedraw"]
  7 [-]: TESTSET   R5 R2 1      ; if R2 then PC := 12 else R5 := R2
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["InitRedraw"]
 11 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["ForceRedraw"]
 12 [-]: SETTABLE  R4 K1 R5     ; R4["ForceRedraw"] := R5
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["InitRedraw"]
 15 [-]: TESTSET   R5 R3 1      ; if R3 then PC := 20 else R5 := R3
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["InitRedraw"]
 19 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["InstantDraw"]
 20 [-]: SETTABLE  R4 K2 R5     ; R4["InstantDraw"] := R5
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 24 [-]: SETTABLE  R5 K1 R2     ; R5["ForceRedraw"] := R2
 25 [-]: SETTABLE  R5 K2 R3     ; R5["InstantDraw"] := R3
 26 [-]: SETTABLE  R4 K0 R5     ; R4["InitRedraw"] := R5
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["InitRedraw"]
 29 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Callback"]
 30 [-]: TEST      R4 1         ; if R4 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["InitRedraw"]
 34 [-]: SETTABLE  R4 K3 R1     ; R4["Callback"] := R1
 35 [-]: RETURN    R0 1         ; return 


; Function #10.49:
;
; Name:            
; Defined at line: 1588
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xECFDD17
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  5 [-]: JMP       47           ; PC := 47
  6 [-]: GETUPVAL  R7 U0        ; R7 := U0
  7 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
  8 [-]: TEST      R7 1         ; if R7 then PC := 47
  9 [-]: JMP       47           ; PC := 47
 10 [-]: GETGLOBAL R7 K1        ; R7 := 0x6A235628
 11 [-]: MOVE      R8 R6        ; R8 := R6
 12 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 13 [-]: EQ        0 R7 K2      ; if R7 ~= "table" then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: EQ        1 R6 R0      ; if R6 == R0 then PC := 47
 16 [-]: JMP       47           ; PC := 47
 17 [-]: GETUPVAL  R7 U1        ; R7 := U1
 18 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["0xB1494B8A"]
 19 [-]: MOVE      R8 R6        ; R8 := R6
 20 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 21 [-]: SETTABLE  R1 R5 R7     ; R1[R5] := R7
 22 [-]: JMP       47           ; PC := 47
 23 [-]: GETGLOBAL R7 K1        ; R7 := 0x6A235628
 24 [-]: MOVE      R8 R6        ; R8 := R6
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: EQ        0 R7 K4      ; if R7 ~= "userdata" then PC := 36
 27 [-]: JMP       36           ; PC := 36
 28 [-]: GETUPVAL  R7 U2        ; R7 := U2
 29 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 30 [-]: TEST      R7 0         ; if not R7 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: SELF      R7 R6 K5     ; R8 := R6; R7 := R6["0x1B252E3C"]
 33 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 34 [-]: SETTABLE  R1 R5 R7     ; R1[R5] := R7
 35 [-]: JMP       47           ; PC := 47
 36 [-]: GETGLOBAL R7 K1        ; R7 := 0x6A235628
 37 [-]: MOVE      R8 R6        ; R8 := R6
 38 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 39 [-]: EQ        1 R7 K6      ; if R7 == "function" then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETGLOBAL R7 K1        ; R7 := 0x6A235628
 42 [-]: MOVE      R8 R6        ; R8 := R6
 43 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 44 [-]: EQ        1 R7 K4      ; if R7 == "userdata" then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: SETTABLE  R1 R5 R6     ; R1[R5] := R6
 47 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 6; R4 := R5 end
 48 [-]: JMP       6            ; PC := 6
 49 [-]: RETURN    R1 2         ; return R1
 50 [-]: RETURN    R0 1         ; return 


; Function #10.50:
;
; Name:            
; Defined at line: 1608
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R0 R2 K1     ; R0 := R2["List"]
  5 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
  9 [-]: GETTABLE  R1 R2 K3     ; R1 := R2["ListData"]
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0xECFDD17
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 13 [-]: JMP       34           ; PC := 34
 14 [-]: GETUPVAL  R7 U1        ; R7 := U1
 15 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 16 [-]: TEST      R7 0         ; if not R7 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R7 K5        ; R7 := 0x7C282057
 19 [-]: MOVE      R8 R6        ; R8 := R6
 20 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 21 [-]: SETTABLE  R0 R5 R7     ; R0[R5] := R7
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R7 K6        ; R7 := 0x400E7765
 24 [-]: GETTABLE  R8 R0 R5     ; R8 := R0[R5]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: TEST      R7 1         ; if R7 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETGLOBAL R7 K7        ; R7 := 0x6A235628
 29 [-]: MOVE      R8 R6        ; R8 := R6
 30 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 31 [-]: EQ        1 R7 K8      ; if R7 == "table" then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: SETTABLE  R0 R5 R6     ; R0[R5] := R6
 34 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 14; R4 := R5 end
 35 [-]: JMP       14           ; PC := 14
 36 [-]: GETGLOBAL R7 K4        ; R7 := 0xECFDD17
 37 [-]: MOVE      R8 R0        ; R8 := R0
 38 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 39 [-]: JMP       80           ; PC := 80
 40 [-]: GETUPVAL  R12 U2       ; R12 := U2
 41 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 42 [-]: TEST      R12 1        ; if R12 then PC := 80
 43 [-]: JMP       80           ; PC := 80
 44 [-]: GETGLOBAL R12 K7       ; R12 := 0x6A235628
 45 [-]: MOVE      R13 R11      ; R13 := R11
 46 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 47 [-]: EQ        0 R12 K8     ; if R12 ~= "table" then PC := 57
 48 [-]: JMP       57           ; PC := 57
 49 [-]: EQ        1 R11 R0     ; if R11 == R0 then PC := 80
 50 [-]: JMP       80           ; PC := 80
 51 [-]: GETUPVAL  R12 U0       ; R12 := U0
 52 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["0xB2D5008D"]
 53 [-]: MOVE      R13 R11      ; R13 := R11
 54 [-]: GETTABLE  R14 R1 R10   ; R14 := R1[R10]
 55 [-]: CALL      R12 3 1      ; R12(R13,R14)
 56 [-]: JMP       80           ; PC := 80
 57 [-]: GETTABLE  R12 R1 R10   ; R12 := R1[R10]
 58 [-]: EQ        0 R12 K0     ; if R12 ~= nil then PC := 80
 59 [-]: JMP       80           ; PC := 80
 60 [-]: GETGLOBAL R12 K7       ; R12 := 0x6A235628
 61 [-]: MOVE      R13 R11      ; R13 := R11
 62 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 63 [-]: EQ        0 R12 K10    ; if R12 ~= "userdata" then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETUPVAL  R12 U1       ; R12 := U1
 66 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 67 [-]: TEST      R12 1        ; if R12 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETGLOBAL R12 K7       ; R12 := 0x6A235628
 70 [-]: MOVE      R13 R11      ; R13 := R11
 71 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 72 [-]: EQ        1 R12 K11    ; if R12 == "function" then PC := 80
 73 [-]: JMP       80           ; PC := 80
 74 [-]: GETGLOBAL R12 K7       ; R12 := 0x6A235628
 75 [-]: MOVE      R13 R11      ; R13 := R11
 76 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 77 [-]: EQ        1 R12 K10    ; if R12 == "userdata" then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: SETTABLE  R0 R10 K0    ; R0[R10] := nil
 80 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 40; R9 := R10 end
 81 [-]: JMP       40           ; PC := 40
 82 [-]: RETURN    R0 1         ; return 


; Function #10.51:
;
; Name:            
; Defined at line: 1640
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Data"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xB1494B8A"]
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["List"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: SETTABLE  R0 K1 R1     ; R0["ListData"] := R1
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: RETURN    R0 1         ; return 


; Function #10.52:
;
; Name:            
; Defined at line: 1646
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  7 [-]: MOVE      R1 R3        ; R1 := R3
  8 [-]: SETTABLE  R1 K1 R0     ; R1["Icon"] := R0
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["NeedsInit"]
 11 [-]: TEST      R3 0         ; if not R3 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: GETGLOBAL R3 K3        ; R3 := table
 14 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["InitFuncQueue"]
 17 [-]: NEWTABLE  R5 4 0       ; R5 := {}
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["AddIcon"]
 20 [-]: MOVE      R7 R0        ; R7 := R0
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: MOVE      R9 R2        ; R9 := R2
 23 [-]: SETLIST   R5 4 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 4
 24 [-]: CALL      R3 3 1       ; R3(R4,R5)
 25 [-]: JMP       42           ; PC := 42
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["List"]
 28 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xA77DA8EE"]
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: GETUPVAL  R6 U1        ; R6 := U1
 31 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0xF81722A2"]
 32 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 33 [-]: MOVE      R8 R2        ; R8 := R2
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: MOVE      R9 R2        ; R9 := R2
 37 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 38 [-]: CALL      R3 0 1       ; R3(R4,...)
 39 [-]: GETUPVAL  R3 U0        ; R3 := U0
 40 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x6DEF39F7"]
 41 [-]: CALL      R3 1 1       ; R3()
 42 [-]: RETURN    R0 1         ; return 


; Function #10.53:
;
; Name:            
; Defined at line: 1660
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["NeedsInit"]
  3 [-]: TEST      R3 0         ; if not R3 then PC := 18
  4 [-]: JMP       18           ; PC := 18
  5 [-]: GETGLOBAL R3 K1        ; R3 := table
  6 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xE6450C9D"]
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["InitFuncQueue"]
  9 [-]: NEWTABLE  R5 4 0       ; R5 := {}
 10 [-]: GETUPVAL  R6 U0        ; R6 := U0
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["RemoveIcon"]
 12 [-]: MOVE      R7 R0        ; R7 := R0
 13 [-]: MOVE      R8 R1        ; R8 := R1
 14 [-]: MOVE      R9 R2        ; R9 := R2
 15 [-]: SETLIST   R5 4 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 4
 16 [-]: CALL      R3 3 1       ; R3(R4,R5)
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["List"]
 20 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x96ABF26F"]
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: MOVE      R6 R1        ; R6 := R1
 23 [-]: MOVE      R7 R2        ; R7 := R2
 24 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x6DEF39F7"]
 27 [-]: CALL      R3 1 1       ; R3()
 28 [-]: RETURN    R0 1         ; return 


; Function #10.54:
;
; Name:            
; Defined at line: 1670
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["NeedsInit"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 17
  4 [-]: JMP       17           ; PC := 17
  5 [-]: GETGLOBAL R2 K1        ; R2 := table
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xE6450C9D"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["InitFuncQueue"]
  9 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["RemoveIcons"]
 12 [-]: MOVE      R6 R0        ; R6 := R0
 13 [-]: MOVE      R7 R1        ; R7 := R1
 14 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 15 [-]: CALL      R2 3 1       ; R2(R3,R4)
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["List"]
 19 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x7CF71D03"]
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0x6DEF39F7"]
 25 [-]: CALL      R2 1 1       ; R2()
 26 [-]: RETURN    R0 1         ; return 


; Function #10.55:
;
; Name:            
; Defined at line: 1680
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x93B1256B
  4 [-]: LOADK     R5 K2        ; R5 := "HudTracker: No key for stacking icon!"
  5 [-]: CALL      R4 2 1       ; R4(R5)
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["NeedsInit"]
  9 [-]: TEST      R4 0         ; if not R4 then PC := 25
 10 [-]: JMP       25           ; PC := 25
 11 [-]: GETGLOBAL R4 K4        ; R4 := table
 12 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xE6450C9D"]
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["InitFuncQueue"]
 15 [-]: NEWTABLE  R6 5 0       ; R6 := {}
 16 [-]: GETUPVAL  R7 U0        ; R7 := U0
 17 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["AddStackingIcon"]
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: MOVE      R9 R1        ; R9 := R1
 20 [-]: MOVE      R10 R2       ; R10 := R2
 21 [-]: MOVE      R11 R3       ; R11 := R3
 22 [-]: SETLIST   R6 5 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 5
 23 [-]: CALL      R4 3 1       ; R4(R5,R6)
 24 [-]: JMP       84           ; PC := 84
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["List"]
 27 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mElements"]
 28 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 29 [-]: TEST      R4 0         ; if not R4 then PC := 84
 30 [-]: JMP       84           ; PC := 84
 31 [-]: GETGLOBAL R5 K10       ; R5 := 0x400E7765
 32 [-]: GETTABLE  R6 R4 K11    ; R6 := R4["StackedElements"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 0         ; if not R5 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 37 [-]: SETTABLE  R4 K11 R5    ; R4["StackedElements"] := R5
 38 [-]: LOADK     R5 K12       ; R5 := 0
 39 [-]: GETGLOBAL R6 K13       ; R6 := 0xECFDD17
 40 [-]: GETTABLE  R7 R4 K11    ; R7 := R4["StackedElements"]
 41 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 42 [-]: JMP       44           ; PC := 44
 43 [-]: ADD       R5 R5 K14    ; R5 := R5 + 1
 44 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 43; R8 := R9 end
 45 [-]: JMP       43           ; PC := 43
 46 [-]: GETGLOBAL R11 K10      ; R11 := 0x400E7765
 47 [-]: MOVE      R12 R3       ; R12 := R3
 48 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 49 [-]: TEST      R11 0        ; if not R11 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 52 [-]: MOVE      R3 R11       ; R3 := R11
 53 [-]: GETGLOBAL R11 K10      ; R11 := 0x400E7765
 54 [-]: GETTABLE  R12 R3 K15   ; R12 := R3["Alpha"]
 55 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 56 [-]: TEST      R11 0        ; if not R11 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: SETTABLE  R3 K15 K16   ; R3["Alpha"] := 100
 59 [-]: GETGLOBAL R11 K10      ; R11 := 0x400E7765
 60 [-]: GETTABLE  R12 R3 K17   ; R12 := R3["Visible"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: TEST      R11 0        ; if not R11 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: SETTABLE  R3 K17 K18   ; R3["Visible"] := "0x1"
 65 [-]: GETGLOBAL R11 K10      ; R11 := 0x400E7765
 66 [-]: GETTABLE  R12 R3 K19   ; R12 := R3["Y"]
 67 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 68 [-]: TEST      R11 0        ; if not R11 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: SETTABLE  R3 K19 K12   ; R3["Y"] := 0
 71 [-]: SETTABLE  R3 K20 R2    ; R3["Icon"] := R2
 72 [-]: MOVE      R11 R3       ; R11 := R3
 73 [-]: MOVE      R12 R1       ; R12 := R1
 74 [-]: LOADK     R13 K22      ; R13 := "_"
 75 [-]: MOVE      R14 R0       ; R14 := R0
 76 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 77 [-]: SETTABLE  R11 K21 R12  ; R11["Name"] := R12
 78 [-]: MUL       R12 R0 K24   ; R12 := R0 * 20
 79 [-]: ADD       R12 K25 R12  ; R12 := 1500 + R12
 80 [-]: ADD       R12 R12 R5   ; R12 := R12 + R5
 81 [-]: SETTABLE  R11 K23 R12  ; R11["Depth"] := R12
 82 [-]: GETTABLE  R12 R4 K11   ; R12 := R4["StackedElements"]
 83 [-]: SETTABLE  R12 R1 R11   ; R12[R1] := R11
 84 [-]: RETURN    R0 1         ; return 


; Function #10.56:
;
; Name:            
; Defined at line: 1722
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6A235628
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K1      ; if R1 ~= "function" then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SETTABLE  R1 K2 R0     ; R1["CustomDrawFunction"] := R0
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SETTABLE  R1 K2 K3     ; R1["CustomDrawFunction"] := nil
 11 [-]: RETURN    R0 1         ; return 


; Function #10.57:
;
; Name:            
; Defined at line: 1744
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["ListData"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Data"]
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["ListData"]
  9 [-]: SETTABLE  R2 K1 R3     ; R2["ListData"] := R3
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xB2D5008D"]
 12 [-]: CALL      R2 1 1       ; R2()
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xC9403736"]
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["List"]
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x6470BAF4"]
 21 [-]: LOADNIL   R4 R4        ; R4 := nil
 22 [-]: MOVE      R5 R1        ; R5 := R1
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 1783
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x17028E8F"]
  9 [-]: LOADK     R3 K3        ; R3 := "QuestMessage.Text.text"
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0xF595ADDE
 13 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x6B7B470B"]
 15 [-]: LOADK     R4 K6        ; R4 := "QuestMessage.Text.textWidth"
 16 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: MUL       R2 R1 K7     ; R2 := R1 * 1.4500000476837
 19 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 20 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x1C19D966"]
 21 [-]: LOADK     R5 K9        ; R5 := "QuestMessage.Text"
 22 [-]: LOADK     R6 K10       ; R6 := "text"
 23 [-]: LOADK     R7 K11       ; R7 := ""
 24 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 25 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 26 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x1C19D966"]
 27 [-]: LOADK     R5 K12       ; R5 := "QuestMessage"
 28 [-]: LOADK     R6 K13       ; R6 := "_xscale"
 29 [-]: LOADK     R7 K14       ; R7 := 100
 30 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 31 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 32 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x1C19D966"]
 33 [-]: LOADK     R5 K12       ; R5 := "QuestMessage"
 34 [-]: LOADK     R6 K15       ; R6 := "_yscale"
 35 [-]: LOADK     R7 K14       ; R7 := 100
 36 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 37 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 38 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x1C19D966"]
 39 [-]: LOADK     R5 K16       ; R5 := "QuestMessage.Line"
 40 [-]: LOADK     R6 K17       ; R6 := "_width"
 41 [-]: LOADK     R7 K18       ; R7 := 1
 42 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0xACEBA655"]
 45 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 46 [-]: LOADNIL   R5 R5        ; R5 := nil
 47 [-]: LOADK     R6 K9        ; R6 := "QuestMessage.Text"
 48 [-]: MOVE      R7 R0        ; R7 := R0
 49 [-]: LOADNIL   R8 R8        ; R8 := nil
 50 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 51 [-]: GETGLOBAL R3 K20       ; R3 := 0x52E17A90
 52 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 53 [-]: LOADK     R5 K12       ; R5 := "QuestMessage"
 54 [-]: GETGLOBAL R6 K21       ; R6 := UISys
 55 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
 56 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 57 [-]: LOADK     R8 K23       ; R8 := "_alpha"
 58 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 59 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 60 [-]: LOADK     R9 K14       ; R9 := 100
 61 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 62 [-]: LOADK     R9 K24       ; R9 := 0.34999999403954
 63 [-]: LOADK     R10 K25      ; R10 := 0
 64 [-]: LOADNIL   R11 R11      ; R11 := nil
 65 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 66 [-]: GETGLOBAL R3 K20       ; R3 := 0x52E17A90
 67 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 68 [-]: LOADK     R5 K16       ; R5 := "QuestMessage.Line"
 69 [-]: GETGLOBAL R6 K21       ; R6 := UISys
 70 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
 71 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 72 [-]: LOADK     R8 K17       ; R8 := "_width"
 73 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 74 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 75 [-]: MOVE      R9 R2        ; R9 := R2
 76 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 77 [-]: LOADK     R9 K24       ; R9 := 0.34999999403954
 78 [-]: LOADK     R10 K25      ; R10 := 0
 79 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 80 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 1803
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "QuestMessage"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: LOADK     R6 K6        ; R6 := "_xscale"
  9 [-]: LOADK     R7 K7        ; R7 := "_yscale"
 10 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 11 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 12 [-]: LOADK     R6 K8        ; R6 := 0
 13 [-]: LOADK     R7 K9        ; R7 := 140
 14 [-]: LOADK     R8 K9        ; R8 := 140
 15 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 16 [-]: LOADK     R6 K10       ; R6 := 0.34999999403954
 17 [-]: LOADK     R7 K8        ; R7 := 0
 18 [-]: LOADNIL   R8 R8        ; R8 := nil
 19 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 20 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 1810
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == "" then PC := 32
  2 [-]: JMP       32           ; PC := 32
  3 [-]: GETGLOBAL R1 K1        ; R1 := _G
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["StalkerMode"]
  5 [-]: TEST      R1 1         ; if R1 then PC := 32
  6 [-]: JMP       32           ; PC := 32
  7 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 12 [-]: GETGLOBAL R2 K5        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["GenericMessageNoAnimateTyping"]
 14 [-]: TEST      R2 0         ; if not R2 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD6A79FE9"]
 18 [-]: LOADK     R4 K8        ; R4 := "GenericMessage.Text"
 19 [-]: LOADK     R5 K9        ; R5 := "text"
 20 [-]: MOVE      R6 R1        ; R6 := R1
 21 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0xACEBA655"]
 25 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 26 [-]: LOADNIL   R4 R4        ; R4 := nil
 27 [-]: LOADK     R5 K8        ; R5 := "GenericMessage.Text"
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: LOADNIL   R7 R7        ; R7 := nil
 30 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 33 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD6A79FE9"]
 34 [-]: LOADK     R4 K8        ; R4 := "GenericMessage.Text"
 35 [-]: LOADK     R5 K9        ; R5 := "text"
 36 [-]: LOADK     R6 K0        ; R6 := ""
 37 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 38 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 1825
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x61494587"]
  4 [-]: LOADK     R3 K2        ; R3 := 5
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Hide"]
  7 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["timerId"] := R1
  9 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 1831
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xEC274B1A
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SETTABLE  R0 K0 R1     ; R0["mTimerName"] := R1
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CLOSURE   R1 0         ; R1 := closure(Function #15.1)
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: SETTABLE  R0 K2 R1     ; R0["Show"] := R1
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: CLOSURE   R1 1         ; R1 := closure(Function #15.2)
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: GETUPVAL  R0 U5        ; R0 := U5
 16 [-]: SETTABLE  R0 K3 R1     ; R0["Update"] := R1
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: CLOSURE   R1 2         ; R1 := closure(Function #15.3)
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: SETTABLE  R0 K4 R1     ; R0["Hide"] := R1
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R1 U1        ; R1 := U1
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x7BEB1B64"]
 26 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 27 [-]: SETTABLE  R2 K7 K8     ; R2["time"] := -1
 28 [-]: SETTABLE  R2 K9 K10    ; R2["timerStopped"] := "0x1"
 29 [-]: GETUPVAL  R3 U0        ; R3 := U0
 30 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Update"]
 31 [-]: CLOSURE   R4 3         ; R4 := closure(Function #15.4)
 32 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 33 [-]: SETTABLE  R0 K5 R1     ; R0["timer"] := R1
 34 [-]: GETGLOBAL R0 K11       ; R0 := mMovie
 35 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x1C19D966"]
 36 [-]: LOADK     R2 K13       ; R2 := "MiniMapContainer.MissionCountdown"
 37 [-]: LOADK     R3 K14       ; R3 := "_alpha"
 38 [-]: LOADK     R4 K15       ; R4 := 0
 39 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 40 [-]: GETGLOBAL R0 K11       ; R0 := mMovie
 41 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x17028E8F"]
 42 [-]: LOADK     R2 K17       ; R2 := "MiniMapContainer.MissionCountdown.Title.text"
 43 [-]: LOADK     R3 K18       ; R3 := "/Lotus/Language/Menu/AlertPopup_Time"
 44 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 45 [-]: GETGLOBAL R0 K11       ; R0 := mMovie
 46 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x1C19D966"]
 47 [-]: LOADK     R2 K19       ; R2 := "MiniMapContainer.DefenseTarget.LostHealth"
 48 [-]: LOADK     R3 K14       ; R3 := "_alpha"
 49 [-]: LOADK     R4 K15       ; R4 := 0
 50 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 51 [-]: GETGLOBAL R0 K11       ; R0 := mMovie
 52 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x1C19D966"]
 53 [-]: LOADK     R2 K20       ; R2 := "MiniMapContainer.DefenseTarget.LostHealth.Label"
 54 [-]: LOADK     R3 K21       ; R3 := "textColor"
 55 [-]: GETGLOBAL R4 K22       ; R4 := _G
 56 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["UIColor_Red"]
 57 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 58 [-]: GETGLOBAL R0 K11       ; R0 := mMovie
 59 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x1C19D966"]
 60 [-]: LOADK     R2 K24       ; R2 := "BorderBox"
 61 [-]: LOADK     R3 K14       ; R3 := "_alpha"
 62 [-]: LOADK     R4 K15       ; R4 := 0
 63 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 64 [-]: RETURN    R0 1         ; return 


; Function #15.1:
;
; Name:            
; Defined at line: 1834
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x52E17A90
  2 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  3 [-]: LOADK     R4 K2        ; R4 := "BorderBox"
  4 [-]: GETGLOBAL R5 K3        ; R5 := UISys
  5 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["FlashInstance_LINEAR"]
  6 [-]: NEWTABLE  R6 1 0       ; R6 := {}
  7 [-]: LOADK     R7 K5        ; R7 := "_alpha"
  8 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 10 [-]: LOADK     R8 K6        ; R8 := 100
 11 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 12 [-]: LOADK     R8 K7        ; R8 := 0.25
 13 [-]: LOADK     R9 K8        ; R9 := 0
 14 [-]: LOADNIL   R10 R10      ; R10 := nil
 15 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0xACEBA655"]
 18 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: LOADK     R5 K10       ; R5 := "BorderBox.Text"
 21 [-]: MOVE      R6 R0        ; R6 := R0
 22 [-]: MOVE      R7 R1        ; R7 := R1
 23 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 24 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 25 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x1C19D966"]
 26 [-]: LOADK     R4 K12       ; R4 := "BorderBox.Background"
 27 [-]: LOADK     R5 K13       ; R5 := "_width"
 28 [-]: GETGLOBAL R6 K14       ; R6 := 0xF595ADDE
 29 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 30 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x6B7B470B"]
 31 [-]: LOADK     R9 K10       ; R9 := "BorderBox.Text"
 32 [-]: LOADK     R10 K16      ; R10 := "textWidth"
 33 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 34 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 35 [-]: ADD       R6 R6 K17    ; R6 := R6 + 50
 36 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 37 [-]: RETURN    R0 1         ; return 


; Function #15.2:
;
; Name:            
; Defined at line: 1842
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["time"]
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["timerStopped"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: SETTABLE  R2 K2 K3     ; R2["isEnabled"] := "0x0"
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x8361ECC"]
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mTimerName"]
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x315E860F"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0x79EA5337"]
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 1       ; R2(R3)
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: JMP       130          ; PC := 130
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["isEnabled"]
 24 [-]: TEST      R2 1         ; if R2 then PC := 68
 25 [-]: JMP       68           ; PC := 68
 26 [-]: LE        0 K8 R1      ; if 0 > R1 then PC := 68
 27 [-]: JMP       68           ; PC := 68
 28 [-]: GETGLOBAL R2 K9        ; R2 := 0x52E17A90
 29 [-]: GETGLOBAL R3 K10       ; R3 := mMovie
 30 [-]: LOADK     R4 K11       ; R4 := "MiniMapContainer.MissionCountdown"
 31 [-]: GETGLOBAL R5 K12       ; R5 := UISys
 32 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["FlashInstance_LINEAR"]
 33 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 34 [-]: LOADK     R7 K14       ; R7 := "_alpha"
 35 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 36 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 37 [-]: LOADK     R8 K15       ; R8 := 100
 38 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 39 [-]: LOADK     R8 K16       ; R8 := 0.15000000596046
 40 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 41 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 42 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 43 [-]: GETGLOBAL R4 K18       ; R4 := 0x9FAED6BC
 44 [-]: GETUPVAL  R5 U1        ; R5 := U1
 45 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8361ECC"]
 46 [-]: GETUPVAL  R7 U0        ; R7 := U0
 47 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mTimerName"]
 48 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 49 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 50 [-]: MOVE      R5 R1        ; R5 := R1
 51 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 52 [-]: GETGLOBAL R3 K19       ; R3 := string
 53 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["0xC6772A8A"]
 54 [-]: MOVE      R4 R2        ; R4 := R2
 55 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 56 [-]: LT        0 K8 R3      ; if 0 >= R3 then PC := 130
 57 [-]: JMP       130          ; PC := 130
 58 [-]: GETUPVAL  R3 U0        ; R3 := U0
 59 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["0x7CC73200"]
 60 [-]: MOVE      R4 R2        ; R4 := R2
 61 [-]: GETUPVAL  R5 U2        ; R5 := U2
 62 [-]: CALL      R3 3 1       ; R3(R4,R5)
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: SETTABLE  R3 K2 K22    ; R3["isEnabled"] := "0x1"
 65 [-]: GETUPVAL  R3 U0        ; R3 := U0
 66 [-]: SETTABLE  R3 K23 R2    ; R3["currentText"] := R2
 67 [-]: JMP       130          ; PC := 130
 68 [-]: GETUPVAL  R3 U0        ; R3 := U0
 69 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["isEnabled"]
 70 [-]: TEST      R3 0         ; if not R3 then PC := 130
 71 [-]: JMP       130          ; PC := 130
 72 [-]: LT        0 R1 K8      ; if R1 >= 0 then PC := 130
 73 [-]: JMP       130          ; PC := 130
 74 [-]: GETUPVAL  R3 U0        ; R3 := U0
 75 [-]: SETTABLE  R3 K2 K3     ; R3["isEnabled"] := "0x0"
 76 [-]: GETUPVAL  R3 U1        ; R3 := U1
 77 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x8361ECC"]
 78 [-]: GETUPVAL  R5 U0        ; R5 := U0
 79 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mTimerName"]
 80 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 81 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x315E860F"]
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: TEST      R3 0         ; if not R3 then PC := 129
 84 [-]: JMP       129          ; PC := 129
 85 [-]: GETGLOBAL R3 K24       ; R3 := 0x400E7765
 86 [-]: GETGLOBAL R4 K25       ; R4 := _T
 87 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["missionTimerExpiryPortTrigger"]
 88 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 89 [-]: TEST      R3 1         ; if R3 then PC := 99
 90 [-]: JMP       99           ; PC := 99
 91 [-]: GETGLOBAL R3 K25       ; R3 := _T
 92 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["missionTimerExpiryPortTrigger"]
 93 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0x8D5886B7"]
 94 [-]: GETGLOBAL R5 K18       ; R5 := 0x9FAED6BC
 95 [-]: GETGLOBAL R6 K25       ; R6 := _T
 96 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["missionTimerExpiryPortCommand"]
 97 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 98 [-]: CALL      R3 0 1       ; R3(R4,...)
 99 [-]: GETUPVAL  R3 U1        ; R3 := U1
100 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x62ECACF5"]
101 [-]: GETUPVAL  R5 U0        ; R5 := U0
102 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mTimerName"]
103 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
104 [-]: TEST      R3 0         ; if not R3 then PC := 123
105 [-]: JMP       123          ; PC := 123
106 [-]: GETGLOBAL R3 K10       ; R3 := mMovie
107 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x5DB0BD4"]
108 [-]: LOADK     R5 K30       ; R5 := "/Lotus/Language/Menu/HUD_MissionFailed"
109 [-]: MOVE      R6 R1        ; R6 := R1
110 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
111 [-]: GETUPVAL  R4 U0        ; R4 := U0
112 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["0x7CC73200"]
113 [-]: MOVE      R5 R3        ; R5 := R3
114 [-]: CALL      R4 2 1       ; R4(R5)
115 [-]: GETUPVAL  R4 U0        ; R4 := U0
116 [-]: SETTABLE  R4 K23 R3    ; R4["currentText"] := R3
117 [-]: GETUPVAL  R4 U3        ; R4 := U3
118 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x61494587"]
119 [-]: LOADK     R6 K32       ; R6 := 1.5
120 [-]: GETUPVAL  R7 U4        ; R7 := U4
121 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
122 [-]: JMP       129          ; PC := 129
123 [-]: GETUPVAL  R4 U0        ; R4 := U0
124 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x79EA5337"]
125 [-]: MOVE      R5 R1        ; R5 := R1
126 [-]: CALL      R4 2 1       ; R4(R5)
127 [-]: GETUPVAL  R4 U0        ; R4 := U0
128 [-]: SETTABLE  R4 K23 K33   ; R4["currentText"] := ""
129 [-]: RETURN    R0 1         ; return 
130 [-]: GETUPVAL  R4 U1        ; R4 := U1
131 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0x46B5CD04"]
132 [-]: GETUPVAL  R6 U0        ; R6 := U0
133 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mTimerName"]
134 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
135 [-]: TEST      R4 0         ; if not R4 then PC := 140
136 [-]: JMP       140          ; PC := 140
137 [-]: GETUPVAL  R4 U0        ; R4 := U0
138 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["mTotalTime"]
139 [-]: SUB       R1 R4 R1     ; R1 := R4 - R1
140 [-]: GETUPVAL  R4 U0        ; R4 := U0
141 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["isEnabled"]
142 [-]: TEST      R4 0         ; if not R4 then PC := 167
143 [-]: JMP       167          ; PC := 167
144 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
145 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0x5DB0BD4"]
146 [-]: GETGLOBAL R6 K18       ; R6 := 0x9FAED6BC
147 [-]: GETUPVAL  R7 U1        ; R7 := U1
148 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7["0x8361ECC"]
149 [-]: GETUPVAL  R9 U0        ; R9 := U0
150 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["mTimerName"]
151 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
152 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
153 [-]: MOVE      R7 R1        ; R7 := R1
154 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
155 [-]: GETUPVAL  R5 U0        ; R5 := U0
156 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["currentText"]
157 [-]: EQ        1 R5 R4      ; if R5 == R4 then PC := 167
158 [-]: JMP       167          ; PC := 167
159 [-]: GETUPVAL  R5 U0        ; R5 := U0
160 [-]: SETTABLE  R5 K23 R4    ; R5["currentText"] := R4
161 [-]: GETGLOBAL R5 K10       ; R5 := mMovie
162 [-]: SELF      R5 R5 K36    ; R6 := R5; R5 := R5["0x1C19D966"]
163 [-]: LOADK     R7 K37       ; R7 := "BorderBox.Text"
164 [-]: LOADK     R8 K38       ; R8 := "text"
165 [-]: MOVE      R9 R4        ; R9 := R4
166 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
167 [-]: GETGLOBAL R5 K39       ; R5 := math
168 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["0xF7005A7B"]
169 [-]: DIV       R6 R1 K41    ; R6 := R1 / 60
170 [-]: CALL      R5 2 2       ; R5 := R5(R6)
171 [-]: GETGLOBAL R6 K39       ; R6 := math
172 [-]: GETTABLE  R6 R6 K40    ; R6 := R6["0xF7005A7B"]
173 [-]: MUL       R7 R5 K41    ; R7 := R5 * 60
174 [-]: SUB       R7 R1 R7     ; R7 := R1 - R7
175 [-]: CALL      R6 2 2       ; R6 := R6(R7)
176 [-]: LT        0 R5 K42     ; if R5 >= 1 then PC := 179
177 [-]: JMP       179          ; PC := 179
178 [-]: LOADK     R5 K8        ; R5 := 0
179 [-]: LE        0 R1 K8      ; if R1 > 0 then PC := 183
180 [-]: JMP       183          ; PC := 183
181 [-]: LOADK     R5 K8        ; R5 := 0
182 [-]: LOADK     R6 K8        ; R6 := 0
183 [-]: GETGLOBAL R7 K10       ; R7 := mMovie
184 [-]: SELF      R7 R7 K36    ; R8 := R7; R7 := R7["0x1C19D966"]
185 [-]: LOADK     R9 K43       ; R9 := "MiniMapContainer.MissionCountdown.Time"
186 [-]: LOADK     R10 K38      ; R10 := "text"
187 [-]: GETGLOBAL R11 K19      ; R11 := string
188 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["0x4B1F4F58"]
189 [-]: LOADK     R12 K45      ; R12 := "%02.0f:%02.0f"
190 [-]: MOVE      R13 R5       ; R13 := R5
191 [-]: MOVE      R14 R6       ; R14 := R6
192 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
193 [-]: CALL      R7 0 1       ; R7(R8,...)
194 [-]: GETUPVAL  R7 U0        ; R7 := U0
195 [-]: SETTABLE  R7 K46 R5    ; R7["prevMinute"] := R5
196 [-]: RETURN    R0 1         ; return 


; Function #15.3:
;
; Name:            
; Defined at line: 1917
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x9DFCE2CC"]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mTimerName"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: TEST      R1 1         ; if R1 then PC := 55
  7 [-]: JMP       55           ; PC := 55
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xD5274B5D"]
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["timerId"]
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x52E17A90
 14 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 15 [-]: LOADK     R3 K6        ; R3 := "BorderBox"
 16 [-]: GETGLOBAL R4 K7        ; R4 := UISys
 17 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 18 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 19 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 20 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 21 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 22 [-]: LOADK     R7 K10       ; R7 := 0
 23 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 24 [-]: LOADK     R7 K11       ; R7 := 0.40000000596046
 25 [-]: LOADK     R8 K10       ; R8 := 0
 26 [-]: LOADNIL   R9 R9        ; R9 := nil
 27 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x8CD6C436"]
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mTimerName"]
 32 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 33 [-]: TEST      R1 0         ; if not R1 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETGLOBAL R1 K13       ; R1 := 0x400E7765
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 1         ; if R1 then PC := 55
 39 [-]: JMP       55           ; PC := 55
 40 [-]: TEST      R0 0         ; if not R0 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R1 K4        ; R1 := 0x52E17A90
 43 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 44 [-]: LOADK     R3 K14       ; R3 := "MiniMapContainer.MissionCountdown"
 45 [-]: GETGLOBAL R4 K7        ; R4 := UISys
 46 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["FlashInstance_LINEAR"]
 47 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 48 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 49 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 50 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 51 [-]: LOADK     R7 K10       ; R7 := 0
 52 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 53 [-]: LOADK     R7 K16       ; R7 := 0.15000000596046
 54 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 55 [-]: RETURN    R0 1         ; return 


; Function #15.4:
;
; Name:            
; Defined at line: 1926
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["time"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["time"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["timerStopped"]
  6 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["timerStopped"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 1936
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0xACEBA655"]
  3 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  4 [-]: LOADNIL   R5 R5        ; R5 := nil
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: MOVE      R7 R1        ; R7 := R1
  7 [-]: MOVE      R8 R2        ; R8 := R2
  8 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
  9 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 1941
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #17.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K0 R1     ; R0["CalculatePosition"] := R1
  5 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x1C19D966"]
  7 [-]: LOADK     R2 K3        ; R2 := "AbilityPanel.AbilityMessage"
  8 [-]: LOADK     R3 K4        ; R3 := "_alpha"
  9 [-]: LOADK     R4 K5        ; R4 := 0
 10 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #17.1:
;
; Name:            
; Defined at line: 1943
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
  3 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
  4 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x6B7B470B"]
  5 [-]: LOADK     R5 K4        ; R5 := "AbilityPanel.EnergyAmount"
  6 [-]: LOADK     R6 K5        ; R6 := "textWidth"
  7 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  8 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  9 [-]: SUB       R2 K6 R2     ; R2 := -20 - R2
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
 11 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 12 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x6B7B470B"]
 13 [-]: LOADK     R6 K7        ; R6 := "AbilityPanel.AbilityMessage.Label"
 14 [-]: LOADK     R7 K5        ; R7 := "textWidth"
 15 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 16 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 17 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 18 [-]: SETTABLE  R1 K0 R2     ; R1["newX"] := R2
 19 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 1949
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x6A8F3FC6"]
  8 [-]: EQ        0 R0 K2      ; if R0 ~= "false" then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K3        ; R1 := _T
 14 [-]: SETTABLE  R1 K4 K5     ; R1["reticleState"] := "0x0"
 15 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 1956
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 43
  5 [-]: JMP       43           ; PC := 43
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["InventoryController"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["InventoryController"]
 19 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x10252651"]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 43
 22 [-]: JMP       43           ; PC := 43
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 24 [-]: GETGLOBAL R2 K3        ; R2 := gGameRules
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 1         ; if R1 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 29 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8B598ED4"]
 30 [-]: GETGLOBAL R3 K5        ; R3 := gLotusSpeedballGameRulesType
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: TEST      R1 1         ; if R1 then PC := 43
 33 [-]: JMP       43           ; PC := 43
 34 [-]: GETUPVAL  R1 U0        ; R1 := U0
 35 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xB2D3A47A"]
 36 [-]: EQ        0 R0 K7      ; if R0 ~= "0x0" then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: MOVE      R3 R1        ; R3 := R1
 40 [-]: CALL      R1 3 1       ; R1(R2,R3)
 41 [-]: GETGLOBAL R1 K8        ; R1 := _T
 42 [-]: SETTABLE  R1 K9 K10    ; R1["reticleState"] := "0x1"
 43 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 1963
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "false" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: CALL      R1 2 1       ; R1(R2)
 10 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 1971
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["IsAlternateHud"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 11 [-]: LOADK     R3 K4        ; R3 := "Reticle"
 12 [-]: LOADK     R4 K5        ; R4 := "_visible"
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 1979
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "HealthAndShield.SuitAffinity"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 1983
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xC8890AC0"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 1987
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xC8890AC0"]
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 1991
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x7262C22B"]
  4 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["HudScale"]
  7 [-]: GETUPVAL  R4 U2        ; R4 := U2
  8 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  9 [-]: SETTABLE  R0 K0 R1     ; R0["HudScalePadding"] := R1
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U3        ; R1 := U3
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R0 U3        ; R0 := U3
 16 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x7262C22B"]
 17 [-]: CALL      R0 2 1       ; R0(R1)
 18 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 56
 22 [-]: JMP       56           ; PC := 56
 23 [-]: LOADNIL   R0 R0        ; R0 := nil
 24 [-]: GETGLOBAL R1 K5        ; R1 := 0xECFDD17
 25 [-]: GETUPVAL  R2 U4        ; R2 := U4
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: JMP       54           ; PC := 54
 28 [-]: GETUPVAL  R6 U2        ; R6 := U2
 29 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0xE73374BC"]
 30 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["Clip"]
 31 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 32 [-]: MOVE      R0 R6        ; R0 := R6
 33 [-]: GETUPVAL  R6 U3        ; R6 := U3
 34 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x348FAF6A"]
 35 [-]: GETTABLE  R8 R5 K9     ; R8 := R5["Movie"]
 36 [-]: GETTABLE  R9 R5 K7     ; R9 := R5["Clip"]
 37 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["x"]
 38 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["y"]
 39 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 40 [-]: GETTABLE  R6 R5 K12    ; R6 := R5["HandleHudScale"]
 41 [-]: TEST      R6 0         ; if not R6 then PC := 54
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 44 [-]: GETTABLE  R7 R5 K9     ; R7 := R5["Movie"]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: TEST      R6 1         ; if R6 then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETUPVAL  R6 U1        ; R6 := U1
 49 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["0x7262C22B"]
 50 [-]: GETTABLE  R7 R5 K9     ; R7 := R5["Movie"]
 51 [-]: GETUPVAL  R8 U0        ; R8 := U0
 52 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["HudScale"]
 53 [-]: CALL      R6 3 1       ; R6(R7,R8)
 54 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
 55 [-]: JMP       28           ; PC := 28
 56 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 2011
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xF595D5E1"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xEE069D65"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xF3E132E0"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LT        1 R0 R2      ; if R0 < R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x68998E7D"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: LT        0 R1 R2      ; if R1 >= R2 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETGLOBAL R2 K5        ; R2 := Engine
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0x1398DAFB"]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 1         ; if R2 then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 23 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xF3E132E0"]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: MOVE      R0 R2        ; R0 := R2
 26 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 27 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x68998E7D"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETGLOBAL R2 K5        ; R2 := Engine
 31 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0x1398DAFB"]
 32 [-]: CALL      R2 1 2       ; R2 := R2()
 33 [-]: TEST      R2 0         ; if not R2 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 36 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xF3E132E0"]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: MOVE      R0 R2        ; R0 := R2
 39 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 40 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x68998E7D"]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: MOVE      R1 R2        ; R1 := R2
 43 [-]: LOADK     R2 K7        ; R2 := 70
 44 [-]: GETUPVAL  R3 U0        ; R3 := U0
 45 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["HudScale"]
 46 [-]: DIV       R3 R0 R3     ; R3 := R0 / R3
 47 [-]: SUB       R4 R0 R3     ; R4 := R0 - R3
 48 [-]: GETUPVAL  R5 U0        ; R5 := U0
 49 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["HudScale"]
 50 [-]: DIV       R5 R1 R5     ; R5 := R1 / R5
 51 [-]: SUB       R6 R1 R5     ; R6 := R1 - R5
 52 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 53 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 54 [-]: LOADK     R9 K10       ; R9 := "PainTop"
 55 [-]: LOADK     R10 K11      ; R10 := "_x"
 56 [-]: DIV       R11 R0 K12   ; R11 := R0 / 2
 57 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 58 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 59 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 60 [-]: LOADK     R9 K10       ; R9 := "PainTop"
 61 [-]: LOADK     R10 K13      ; R10 := "_y"
 62 [-]: DIV       R11 R6 K12   ; R11 := R6 / 2
 63 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 64 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 65 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 66 [-]: LOADK     R9 K10       ; R9 := "PainTop"
 67 [-]: LOADK     R10 K14      ; R10 := "_width"
 68 [-]: MOVE      R11 R3       ; R11 := R3
 69 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 70 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 71 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 72 [-]: LOADK     R9 K10       ; R9 := "PainTop"
 73 [-]: LOADK     R10 K15      ; R10 := "_height"
 74 [-]: MOVE      R11 R2       ; R11 := R2
 75 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 76 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 77 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 78 [-]: LOADK     R9 K16       ; R9 := "PainBottom"
 79 [-]: LOADK     R10 K11      ; R10 := "_x"
 80 [-]: DIV       R11 R0 K12   ; R11 := R0 / 2
 81 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 82 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 83 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 84 [-]: LOADK     R9 K16       ; R9 := "PainBottom"
 85 [-]: LOADK     R10 K13      ; R10 := "_y"
 86 [-]: DIV       R11 R6 K12   ; R11 := R6 / 2
 87 [-]: ADD       R11 R5 R11   ; R11 := R5 + R11
 88 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 89 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 90 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 91 [-]: LOADK     R9 K16       ; R9 := "PainBottom"
 92 [-]: LOADK     R10 K14      ; R10 := "_width"
 93 [-]: MOVE      R11 R3       ; R11 := R3
 94 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 95 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 96 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
 97 [-]: LOADK     R9 K16       ; R9 := "PainBottom"
 98 [-]: LOADK     R10 K15      ; R10 := "_height"
 99 [-]: MOVE      R11 R2       ; R11 := R2
100 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
101 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
102 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
103 [-]: LOADK     R9 K17       ; R9 := "PainLeft"
104 [-]: LOADK     R10 K11      ; R10 := "_x"
105 [-]: DIV       R11 R4 K12   ; R11 := R4 / 2
106 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
107 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
108 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
109 [-]: LOADK     R9 K17       ; R9 := "PainLeft"
110 [-]: LOADK     R10 K13      ; R10 := "_y"
111 [-]: DIV       R11 R1 K12   ; R11 := R1 / 2
112 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
113 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
114 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
115 [-]: LOADK     R9 K17       ; R9 := "PainLeft"
116 [-]: LOADK     R10 K14      ; R10 := "_width"
117 [-]: MOVE      R11 R2       ; R11 := R2
118 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
119 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
120 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
121 [-]: LOADK     R9 K17       ; R9 := "PainLeft"
122 [-]: LOADK     R10 K15      ; R10 := "_height"
123 [-]: MOVE      R11 R5       ; R11 := R5
124 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
125 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
126 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
127 [-]: LOADK     R9 K18       ; R9 := "PainRight"
128 [-]: LOADK     R10 K11      ; R10 := "_x"
129 [-]: DIV       R11 R4 K12   ; R11 := R4 / 2
130 [-]: ADD       R11 R3 R11   ; R11 := R3 + R11
131 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
132 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
133 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
134 [-]: LOADK     R9 K18       ; R9 := "PainRight"
135 [-]: LOADK     R10 K13      ; R10 := "_y"
136 [-]: DIV       R11 R1 K12   ; R11 := R1 / 2
137 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
138 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
139 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
140 [-]: LOADK     R9 K18       ; R9 := "PainRight"
141 [-]: LOADK     R10 K14      ; R10 := "_width"
142 [-]: MOVE      R11 R2       ; R11 := R2
143 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
144 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
145 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x1C19D966"]
146 [-]: LOADK     R9 K18       ; R9 := "PainRight"
147 [-]: LOADK     R10 K15      ; R10 := "_height"
148 [-]: MOVE      R11 R5       ; R11 := R5
149 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
150 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 2054
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 1       ; R4()
  3 [-]: GETUPVAL  R4 U1        ; R4 := U1
  4 [-]: CALL      R4 1 1       ; R4()
  5 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 2062
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R2 R0        ; R2 := R0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mInstigator"]
  7 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R2 2         ; return R2
 10 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mInstigator"]
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 12 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["Instigator"]
 13 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 18 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInstigator"]
 19 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["player"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 38
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 24 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Instigator"]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 1         ; if R4 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mInstigator"]
 29 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["player"]
 30 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Instigator"]
 31 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x96D4FC9C"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: MOVE      R3 R0        ; R3 := R0
 36 [-]: MOVE      R3 R1        ; R3 := R1
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 39 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInstigator"]
 40 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["avatar"]
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: TEST      R4 0         ; if not R4 then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 45 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["Instigator"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 0         ; if not R4 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: MOVE      R3 R1        ; R3 := R1
 50 [-]: TESTSET   R2 R3 0      ; if not R3 then PC := 65 else R2 := R3
 51 [-]: JMP       65           ; PC := 65
 52 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mAbilityType"]
 53 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 63
 54 [-]: JMP       63           ; PC := 63
 55 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mAbilityType"]
 56 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["AbilityType"]
 57 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mAugmentType"]
 60 [-]: GETTABLE  R5 R1 K10    ; R5 := R1["AugmentType"]
 61 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R2 R0        ; R2 := R0
 64 [-]: MOVE      R2 R1        ; R2 := R1
 65 [-]: RETURN    R2 2         ; return R2
 66 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 2081
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Status"]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mAbilityType"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Stat"]
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SETTABLE  R1 K0 R0     ; R1["Status"] := R0
 22 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 2100
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x80B14403"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETUPVAL  R2 U3        ; R2 := U3
 16 [-]: NEWTABLE  R3 0 4       ; R3 := {}
 17 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["instigator"]
 18 [-]: SETTABLE  R3 K4 R4     ; R3["Instigator"] := R4
 19 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["abilityType"]
 20 [-]: SETTABLE  R3 K6 R4     ; R3["AbilityType"] := R4
 21 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["augmentType"]
 22 [-]: SETTABLE  R3 K8 R4     ; R3["AugmentType"] := R4
 23 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["affected"]
 24 [-]: SETTABLE  R3 K10 R4    ; R3["Affected"] := R4
 25 [-]: SETTABLE  R2 K3 R3     ; R2["Stat"] := R3
 26 [-]: GETUPVAL  R2 U3        ; R2 := U3
 27 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Stat"]
 28 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Instigator"]
 29 [-]: EQ        1 R2 R1      ; if R2 == R1 then PC := 43
 30 [-]: JMP       43           ; PC := 43
 31 [-]: GETTABLE  R2 R0 K12    ; R2 := R0["forceSquadPanel"]
 32 [-]: TEST      R2 1         ; if R2 then PC := 44
 33 [-]: JMP       44           ; PC := 44
 34 [-]: GETUPVAL  R2 U4        ; R2 := U4
 35 [-]: TEST      R2 0         ; if not R2 then PC := 44
 36 [-]: JMP       44           ; PC := 44
 37 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["abilityType"]
 38 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x8B598ED4"]
 39 [-]: GETGLOBAL R4 K14       ; R4 := arbitrationReviveBuffType
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: MOVE      R2 R1        ; R2 := R1
 44 [-]: LOADK     R3 K15       ; R3 := 1
 45 [-]: GETUPVAL  R4 U3        ; R4 := U3
 46 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Stat"]
 47 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["Affected"]
 48 [-]: LEN       R4 R4        ; R4 := # R4
 49 [-]: LOADK     R5 K15       ; R5 := 1
 50 [-]: FORPREP   R3 205       ; R3 -= R5; PC := 205
 51 [-]: GETUPVAL  R7 U3        ; R7 := U3
 52 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Stat"]
 53 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["Affected"]
 54 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 55 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 205
 56 [-]: JMP       205          ; PC := 205
 57 [-]: GETUPVAL  R7 U3        ; R7 := U3
 58 [-]: SETTABLE  R7 K16 K0    ; R7["Status"] := nil
 59 [-]: GETUPVAL  R7 U0        ; R7 := U0
 60 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7["0x9D2060CB"]
 61 [-]: GETUPVAL  R9 U3        ; R9 := U3
 62 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["IsBuffEqual"]
 63 [-]: CALL      R7 3 1       ; R7(R8,R9)
 64 [-]: GETUPVAL  R7 U3        ; R7 := U3
 65 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["Status"]
 66 [-]: EQ        1 R7 K0      ; if R7 == nil then PC := 136
 67 [-]: JMP       136          ; PC := 136
 68 [-]: MOVE      R7 R0        ; R7 := R0
 69 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["stackData"]
 70 [-]: TEST      R8 0         ; if not R8 then PC := 92
 71 [-]: JMP       92           ; PC := 92
 72 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["buffType"]
 73 [-]: GETUPVAL  R9 U3        ; R9 := U3
 74 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["Status"]
 75 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["mBuffType"]
 76 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 92
 77 [-]: JMP       92           ; PC := 92
 78 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["buffData"]
 79 [-]: EQ        0 R8 K23     ; if R8 ~= 0 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: MOVE      R7 R0        ; R7 := R0
 82 [-]: MOVE      R7 R1        ; R7 := R1
 83 [-]: GETUPVAL  R8 U3        ; R8 := U3
 84 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
 85 [-]: GETUPVAL  R9 U3        ; R9 := U3
 86 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["Status"]
 87 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["mBuffData"]
 88 [-]: GETTABLE  R10 R0 K22   ; R10 := R0["buffData"]
 89 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
 90 [-]: SETTABLE  R8 K24 R9    ; R8["mBuffData"] := R9
 91 [-]: JMP       104          ; PC := 104
 92 [-]: GETUPVAL  R8 U3        ; R8 := U3
 93 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
 94 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["mBuffData"]
 95 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["buffData"]
 96 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 99
 97 [-]: JMP       99           ; PC := 99
 98 [-]: MOVE      R7 R0        ; R7 := R0
 99 [-]: MOVE      R7 R1        ; R7 := R1
100 [-]: GETUPVAL  R8 U3        ; R8 := U3
101 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
102 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["buffData"]
103 [-]: SETTABLE  R8 K24 R9    ; R8["mBuffData"] := R9
104 [-]: TEST      R7 1         ; if R7 then PC := 120
105 [-]: JMP       120          ; PC := 120
106 [-]: GETUPVAL  R8 U3        ; R8 := U3
107 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
108 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mBuffType"]
109 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["buffType"]
110 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 119
111 [-]: JMP       119          ; PC := 119
112 [-]: GETUPVAL  R8 U3        ; R8 := U3
113 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
114 [-]: GETTABLE  R8 R8 K25    ; R8 := R8["mBuffDataExtra"]
115 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["buffDataExtra"]
116 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 119
117 [-]: JMP       119          ; PC := 119
118 [-]: MOVE      R7 R0        ; R7 := R0
119 [-]: MOVE      R7 R1        ; R7 := R1
120 [-]: GETUPVAL  R8 U3        ; R8 := U3
121 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
122 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["buffType"]
123 [-]: SETTABLE  R8 K21 R9    ; R8["mBuffType"] := R9
124 [-]: GETUPVAL  R8 U3        ; R8 := U3
125 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["Status"]
126 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["buffDataExtra"]
127 [-]: SETTABLE  R8 K25 R9    ; R8["mBuffDataExtra"] := R9
128 [-]: TEST      R7 0         ; if not R7 then PC := 206
129 [-]: JMP       206          ; PC := 206
130 [-]: GETUPVAL  R8 U0        ; R8 := U0
131 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["0xA372F64A"]
132 [-]: GETUPVAL  R9 U3        ; R9 := U3
133 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["Status"]
134 [-]: CALL      R8 2 1       ; R8(R9)
135 [-]: JMP       206          ; PC := 206
136 [-]: LOADNIL   R8 R8        ; R8 := nil
137 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
138 [-]: GETUPVAL  R10 U3       ; R10 := U3
139 [-]: GETTABLE  R10 R10 K3   ; R10 := R10["Stat"]
140 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["Instigator"]
141 [-]: CALL      R9 2 2       ; R9 := R9(R10)
142 [-]: TEST      R9 1         ; if R9 then PC := 150
143 [-]: JMP       150          ; PC := 150
144 [-]: GETUPVAL  R9 U3        ; R9 := U3
145 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Stat"]
146 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["Instigator"]
147 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9["0x96D4FC9C"]
148 [-]: CALL      R9 2 2       ; R9 := R9(R10)
149 [-]: MOVE      R8 R9        ; R8 := R9
150 [-]: GETUPVAL  R9 U0        ; R9 := U0
151 [-]: SELF      R9 R9 K29    ; R10 := R9; R9 := R9["0xC51A5C9D"]
152 [-]: CALL      R9 2 2       ; R9 := R9(R10)
153 [-]: ADD       R9 R9 K15    ; R9 := R9 + 1
154 [-]: GETTABLE  R10 R0 K30   ; R10 := R0["isDebuff"]
155 [-]: TEST      R10 0        ; if not R10 then PC := 174
156 [-]: JMP       174          ; PC := 174
157 [-]: LT        0 K15 R9     ; if 1 >= R9 then PC := 174
158 [-]: JMP       174          ; PC := 174
159 [-]: GETUPVAL  R10 U0       ; R10 := U0
160 [-]: SELF      R10 R10 K31  ; R11 := R10; R10 := R10["0xD75E681A"]
161 [-]: SUB       R12 R9 K15   ; R12 := R9 - 1
162 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
163 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
164 [-]: MOVE      R12 R10      ; R12 := R10
165 [-]: CALL      R11 2 2      ; R11 := R11(R12)
166 [-]: TEST      R11 1        ; if R11 then PC := 174
167 [-]: JMP       174          ; PC := 174
168 [-]: GETTABLE  R11 R10 K32  ; R11 := R10["mIsDebuff"]
169 [-]: TEST      R11 0        ; if not R11 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: JMP       174          ; PC := 174
172 [-]: SUB       R9 R9 K15    ; R9 := R9 - 1
173 [-]: JMP       157          ; PC := 157
174 [-]: GETUPVAL  R11 U0       ; R11 := U0
175 [-]: SELF      R11 R11 K33  ; R12 := R11; R11 := R11["0xA6D439FA"]
176 [-]: MOVE      R13 R9       ; R13 := R9
177 [-]: NEWTABLE  R14 0 8      ; R14 := {}
178 [-]: NEWTABLE  R15 0 2      ; R15 := {}
179 [-]: GETUPVAL  R16 U3       ; R16 := U3
180 [-]: GETTABLE  R16 R16 K3   ; R16 := R16["Stat"]
181 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["Instigator"]
182 [-]: SETTABLE  R15 K35 R16  ; R15["avatar"] := R16
183 [-]: SETTABLE  R15 K36 R8   ; R15["player"] := R8
184 [-]: SETTABLE  R14 K34 R15  ; R14["mInstigator"] := R15
185 [-]: GETUPVAL  R15 U3       ; R15 := U3
186 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["Stat"]
187 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["AbilityType"]
188 [-]: SETTABLE  R14 K37 R15  ; R14["mAbilityType"] := R15
189 [-]: GETUPVAL  R15 U3       ; R15 := U3
190 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["Stat"]
191 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["AugmentType"]
192 [-]: SETTABLE  R14 K38 R15  ; R14["mAugmentType"] := R15
193 [-]: GETTABLE  R15 R0 K20   ; R15 := R0["buffType"]
194 [-]: SETTABLE  R14 K21 R15  ; R14["mBuffType"] := R15
195 [-]: GETTABLE  R15 R0 K22   ; R15 := R0["buffData"]
196 [-]: SETTABLE  R14 K24 R15  ; R14["mBuffData"] := R15
197 [-]: GETTABLE  R15 R0 K26   ; R15 := R0["buffDataExtra"]
198 [-]: SETTABLE  R14 K25 R15  ; R14["mBuffDataExtra"] := R15
199 [-]: GETTABLE  R15 R0 K22   ; R15 := R0["buffData"]
200 [-]: SETTABLE  R14 K39 R15  ; R14["mInitialBuffData"] := R15
201 [-]: GETTABLE  R15 R0 K30   ; R15 := R0["isDebuff"]
202 [-]: SETTABLE  R14 K32 R15  ; R14["mIsDebuff"] := R15
203 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
204 [-]: JMP       206          ; PC := 206
205 [-]: FORLOOP   R3 51        ; R3 += R5; if R3 <= R4 then begin PC := 51; R6 := R3 end
206 [-]: TEST      R2 0         ; if not R2 then PC := 217
207 [-]: JMP       217          ; PC := 217
208 [-]: GETUPVAL  R11 U5       ; R11 := U5
209 [-]: EQ        1 R11 K0     ; if R11 == nil then PC := 217
210 [-]: JMP       217          ; PC := 217
211 [-]: GETUPVAL  R11 U5       ; R11 := U5
212 [-]: SELF      R11 R11 K40  ; R12 := R11; R11 := R11["0x42864F11"]
213 [-]: MOVE      R13 R0       ; R13 := R0
214 [-]: GETUPVAL  R14 U3       ; R14 := U3
215 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["Stat"]
216 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
217 [-]: GETUPVAL  R11 U3       ; R11 := U3
218 [-]: SETTABLE  R11 K3 K0    ; R11["Stat"] := nil
219 [-]: GETUPVAL  R11 U3       ; R11 := U3
220 [-]: SETTABLE  R11 K16 K0   ; R11["Status"] := nil
221 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 2176
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["instigator"]
 12 [-]: SETTABLE  R1 K2 R2     ; R1["Instigator"] := R2
 13 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["abilityType"]
 14 [-]: SETTABLE  R1 K4 R2     ; R1["AbilityType"] := R2
 15 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["augmentType"]
 16 [-]: SETTABLE  R1 K6 R2     ; R1["AugmentType"] := R2
 17 [-]: LOADK     R2 K8        ; R2 := 1
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0xC51A5C9D"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: LOADK     R4 K8        ; R4 := 1
 22 [-]: FORPREP   R2 106       ; R2 -= R4; PC := 106
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mElements"]
 25 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 26 [-]: GETUPVAL  R7 U2        ; R7 := U2
 27 [-]: MOVE      R8 R6        ; R8 := R6
 28 [-]: MOVE      R9 R1        ; R9 := R1
 29 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 30 [-]: TEST      R7 0         ; if not R7 then PC := 106
 31 [-]: JMP       106          ; PC := 106
 32 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
 33 [-]: GETUPVAL  R8 U1        ; R8 := U1
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: TEST      R7 1         ; if R7 then PC := 107
 36 [-]: JMP       107          ; PC := 107
 37 [-]: GETGLOBAL R7 K11       ; R7 := 0xECFDD17
 38 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["affected"]
 39 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 40 [-]: JMP       103          ; PC := 103
 41 [-]: GETGLOBAL R12 K1       ; R12 := 0x400E7765
 42 [-]: MOVE      R13 R11      ; R13 := R11
 43 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 44 [-]: TEST      R12 1        ; if R12 then PC := 103
 45 [-]: JMP       103          ; PC := 103
 46 [-]: GETUPVAL  R12 U1       ; R12 := U1
 47 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 103
 48 [-]: JMP       103          ; PC := 103
 49 [-]: GETGLOBAL R12 K1       ; R12 := 0x400E7765
 50 [-]: SELF      R13 R11 K13  ; R14 := R11; R13 := R11["0xDE5882DD"]
 51 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 52 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 53 [-]: TEST      R12 1        ; if R12 then PC := 69
 54 [-]: JMP       69           ; PC := 69
 55 [-]: GETGLOBAL R12 K1       ; R12 := 0x400E7765
 56 [-]: GETUPVAL  R13 U1       ; R13 := U1
 57 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0xDE5882DD"]
 58 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 59 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 60 [-]: TEST      R12 1        ; if R12 then PC := 69
 61 [-]: JMP       69           ; PC := 69
 62 [-]: SELF      R12 R11 K13  ; R13 := R11; R12 := R11["0xDE5882DD"]
 63 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 64 [-]: GETUPVAL  R13 U1       ; R13 := U1
 65 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0xDE5882DD"]
 66 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 67 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 103
 68 [-]: JMP       103          ; PC := 103
 69 [-]: GETTABLE  R12 R0 K14   ; R12 := R0["stackData"]
 70 [-]: TEST      R12 0        ; if not R12 then PC := 90
 71 [-]: JMP       90           ; PC := 90
 72 [-]: GETTABLE  R12 R0 K15   ; R12 := R0["buffType"]
 73 [-]: GETTABLE  R13 R6 K16   ; R13 := R6["mBuffType"]
 74 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETTABLE  R12 R6 K17   ; R12 := R6["mBuffData"]
 77 [-]: GETTABLE  R13 R0 K18   ; R13 := R0["buffData"]
 78 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
 79 [-]: SETTABLE  R6 K17 R12   ; R6["mBuffData"] := R12
 80 [-]: GETTABLE  R12 R6 K17   ; R12 := R6["mBuffData"]
 81 [-]: LT        0 K19 R12    ; if 9.9999997473788e-06 >= R12 then PC := 90
 82 [-]: JMP       90           ; PC := 90
 83 [-]: GETUPVAL  R12 U0       ; R12 := U0
 84 [-]: SELF      R12 R12 K20  ; R13 := R12; R12 := R12["0x6470BAF4"]
 85 [-]: LOADNIL   R14 R14      ; R14 := nil
 86 [-]: MOVE      R15 R1       ; R15 := R1
 87 [-]: MOVE      R16 R1       ; R16 := R1
 88 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 89 [-]: JMP       107          ; PC := 107
 90 [-]: GETUPVAL  R12 U0       ; R12 := U0
 91 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12["0x96ABF26F"]
 92 [-]: MOVE      R14 R5       ; R14 := R5
 93 [-]: MOVE      R15 R1       ; R15 := R1
 94 [-]: MOVE      R16 R1       ; R16 := R1
 95 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 96 [-]: GETUPVAL  R12 U0       ; R12 := U0
 97 [-]: SELF      R12 R12 K20  ; R13 := R12; R12 := R12["0x6470BAF4"]
 98 [-]: LOADNIL   R14 R14      ; R14 := nil
 99 [-]: MOVE      R15 R1       ; R15 := R1
100 [-]: MOVE      R16 R1       ; R16 := R1
101 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
102 [-]: JMP       107          ; PC := 107
103 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 41; R9 := R10 end
104 [-]: JMP       41           ; PC := 41
105 [-]: JMP       107          ; PC := 107
106 [-]: FORLOOP   R2 23        ; R2 += R4; if R2 <= R3 then begin PC := 23; R5 := R2 end
107 [-]: GETTABLE  R12 R1 K2    ; R12 := R1["Instigator"]
108 [-]: GETUPVAL  R13 U1       ; R13 := U1
109 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 114
110 [-]: JMP       114          ; PC := 114
111 [-]: GETTABLE  R12 R0 K22   ; R12 := R0["forceSquadPanel"]
112 [-]: JMP       115          ; PC := 115
113 [-]: MOVE      R12 R0       ; R12 := R0
114 [-]: MOVE      R12 R1       ; R12 := R1
115 [-]: TEST      R12 0        ; if not R12 then PC := 124
116 [-]: JMP       124          ; PC := 124
117 [-]: GETUPVAL  R13 U3       ; R13 := U3
118 [-]: EQ        1 R13 K0     ; if R13 == nil then PC := 124
119 [-]: JMP       124          ; PC := 124
120 [-]: GETUPVAL  R13 U3       ; R13 := U3
121 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0xDB0EB79D"]
122 [-]: MOVE      R15 R0       ; R15 := R0
123 [-]: CALL      R13 3 1      ; R13(R14,R15)
124 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 2224
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x6A235628
  2 [-]: MOVE      R5 R2        ; R5 := R2
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: EQ        0 R4 K1      ; if R4 ~= "string" then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x56C11D97"]
  8 [-]: MOVE      R6 R0        ; R6 := R0
  9 [-]: MOVE      R7 R1        ; R7 := R1
 10 [-]: MOVE      R8 R2        ; R8 := R2
 11 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xDBBE4D08"]
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: MOVE      R7 R1        ; R7 := R1
 17 [-]: MOVE      R8 R2        ; R8 := R2
 18 [-]: EQ        1 R3 K4      ; if R3 == "0x1" then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R9 R0        ; R9 := R0
 21 [-]: MOVE      R9 R1        ; R9 := R1
 22 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 23 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 2232
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: SELF      R5 R5 K0     ; R6 := R5; R5 := R5["0x18B9D30B"]
  3 [-]: MOVE      R7 R0        ; R7 := R0
  4 [-]: MOVE      R8 R1        ; R8 := R1
  5 [-]: MOVE      R9 R2        ; R9 := R2
  6 [-]: MOVE      R10 R3       ; R10 := R3
  7 [-]: EQ        1 R4 K1      ; if R4 == "0x1" then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R11 R0       ; R11 := R0
 10 [-]: MOVE      R11 R1       ; R11 := R1
 11 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 12 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 2236
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := focusActivatedFX
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0x69B983D"]
  8 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  9 [-]: LOADK     R2 K4        ; R2 := "AbilityPanel.Focus"
 10 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xBB2F7661"]
 13 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 14 [-]: GETGLOBAL R4 K1        ; R4 := focusActivatedFX
 15 [-]: MOVE      R5 R0        ; R5 := R0
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 2243
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x2EEF2045"]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 2247
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x616DD092"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := backgroundMovie
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R1 K4        ; R1 := 0x93B1256B
 11 [-]: LOADK     R2 K5        ; R2 := "HUD Redux: Closing background movie"
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0xA58BB96C"]
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mProfileMovie"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mProfileMovie"]
 23 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xA58BB96C"]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mHudMarkersMovie"]
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mHudMarkersMovie"]
 33 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xA58BB96C"]
 34 [-]: CALL      R1 2 1       ; R1(R2)
 35 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 36 [-]: GETUPVAL  R2 U1        ; R2 := U1
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 1         ; if R1 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETUPVAL  R1 U1        ; R1 := U1
 41 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x3C577FA3"]
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETGLOBAL R1 K10       ; R1 := _T
 44 [-]: CLOSURE   R2 0         ; R2 := closure(Function #36.1)
 45 [-]: SETTABLE  R1 K11 R2    ; R1["HUD_AddMotionClip"] := R2
 46 [-]: GETGLOBAL R1 K10       ; R1 := _T
 47 [-]: CLOSURE   R2 1         ; R2 := closure(Function #36.2)
 48 [-]: SETTABLE  R1 K12 R2    ; R1["HUD_UpdateMotionClip"] := R2
 49 [-]: GETGLOBAL R1 K10       ; R1 := _T
 50 [-]: CLOSURE   R2 2         ; R2 := closure(Function #36.3)
 51 [-]: SETTABLE  R1 K13 R2    ; R1["HUD_RemoveMotionClip"] := R2
 52 [-]: RETURN    R0 1         ; return 


; Function #36.1:
;
; Name:            
; Defined at line: 2262
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #36.2:
;
; Name:            
; Defined at line: 2263
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #36.3:
;
; Name:            
; Defined at line: 2264
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 2269
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R2 K0        ; R2 := _G
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["StalkerMode"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: LOADK     R2 K2        ; R2 := ""
  8 [-]: TEST      R1 0         ; if not R1 then PC := 47
  9 [-]: JMP       47           ; PC := 47
 10 [-]: NEWTABLE  R3 0 1       ; R3 := {}
 11 [-]: SETTABLE  R3 K3 K4     ; R3["Icon"] := "0x1"
 12 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 13 [-]: GETGLOBAL R5 K5        ; R5 := 0xECFDD17
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R10 K6       ; R10 := 0x6A235628
 18 [-]: MOVE      R11 R9       ; R11 := R9
 19 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 20 [-]: EQ        0 R10 K7     ; if R10 ~= "userdata" then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETTABLE  R10 R3 R8    ; R10 := R3[R8]
 23 [-]: TEST      R10 0        ; if not R10 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: SELF      R10 R9 K8    ; R11 := R9; R10 := R9["0x1B252E3C"]
 26 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 27 [-]: SETTABLE  R4 R8 R10    ; R4[R8] := R10
 28 [-]: JMP       40           ; PC := 40
 29 [-]: GETGLOBAL R10 K6       ; R10 := 0x6A235628
 30 [-]: MOVE      R11 R9       ; R11 := R9
 31 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 32 [-]: EQ        1 R10 K9     ; if R10 == "function" then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETGLOBAL R10 K6       ; R10 := 0x6A235628
 35 [-]: MOVE      R11 R9       ; R11 := R9
 36 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 37 [-]: EQ        1 R10 K7     ; if R10 == "userdata" then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: SETTABLE  R4 R8 R9     ; R4[R8] := R9
 40 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 17; R7 := R8 end
 41 [-]: JMP       17           ; PC := 17
 42 [-]: GETGLOBAL R10 K10      ; R10 := cjson
 43 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0x8DC1075B"]
 44 [-]: MOVE      R11 R4       ; R11 := R4
 45 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 46 [-]: MOVE      R2 R10       ; R2 := R10
 47 [-]: GETUPVAL  R10 U0       ; R10 := U0
 48 [-]: SELF      R10 R10 K12  ; R11 := R10; R10 := R10["0xB4036FF3"]
 49 [-]: MOVE      R12 R0       ; R12 := R0
 50 [-]: MOVE      R13 R2       ; R13 := R2
 51 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 52 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 2292
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 39
  5 [-]: JMP       39           ; PC := 39
  6 [-]: EQ        1 R0 K1      ; if R0 == "" then PC := 39
  7 [-]: JMP       39           ; PC := 39
  8 [-]: EQ        1 R1 K1      ; if R1 == "" then PC := 39
  9 [-]: JMP       39           ; PC := 39
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x144A28F9"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: EQ        0 R3 R1      ; if R3 ~= R1 then PC := 29
 16 [-]: JMP       29           ; PC := 29
 17 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: GETUPVAL  R5 U1        ; R5 := U1
 24 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0xD8035B45"]
 25 [-]: MOVE      R7 R4        ; R7 := R4
 26 [-]: MOVE      R8 R0        ; R8 := R0
 27 [-]: MOVE      R9 R1        ; R9 := R1
 28 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 29 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 30 [-]: MOVE      R6 R2        ; R6 := R2
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: EQ        1 R2 K1      ; if R2 == "" then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: GETUPVAL  R5 U2        ; R5 := U2
 37 [-]: MOVE      R6 R2        ; R6 := R2
 38 [-]: CALL      R5 2 1       ; R5(R6)
 39 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 2307
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R0 0         ; if not R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
  5 [-]: SETTABLE  R2 R1 K2     ; R2[R1] := "0x1"
  6 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 2313
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x24FF386"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := survivalRewardsMovie
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R1 K4        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["DisplayMysteryPrize"]
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K4        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x7CB0A7AF"]
 16 [-]: CALL      R1 1 1       ; R1()
 17 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 2320
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CLOSURE   R2 0         ; R2 := closure(Function #41.1)
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #41.1:
;
; Name:            
; Defined at line: 2321
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7C282057
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x5D66D97A"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x9FAED6BC
 19 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1["0x1B252E3C"]
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 22 [-]: GETGLOBAL R3 K5        ; R3 := gFlashMgr
 23 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x24FF386"]
 24 [-]: GETGLOBAL R5 K7        ; R5 := survivalRewardsMovie
 25 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 26 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3["0xB9C96BA0"]
 32 [-]: LOADK     R6 K9        ; R6 := "ShowReward"
 33 [-]: NEWTABLE  R7 5 0       ; R7 := {}
 34 [-]: LOADK     R8 K10       ; R8 := ""
 35 [-]: LOADK     R9 K11       ; R9 := "false"
 36 [-]: LOADK     R10 K12      ; R10 := 0
 37 [-]: MOVE      R11 R2       ; R11 := R2
 38 [-]: LOADK     R12 K13      ; R12 := "true"
 39 [-]: SETLIST   R7 5 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 5
 40 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 41 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 2341
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gLoadedIcons"]
  3 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: SETTABLE  R1 K1 R2     ; R1["gLoadedIcons"] := R2
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 42
 13 [-]: JMP       42           ; PC := 42
 14 [-]: GETGLOBAL R2 K0        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
 16 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x1B252E3C"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETGLOBAL R2 K0        ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
 23 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x1B252E3C"]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: SETTABLE  R2 R3 K5     ; R2[R3] := "0x0"
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x4A57F63D"]
 28 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x1B252E3C"]
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: LOADK     R5 K7        ; R5 := "OnIconReady"
 31 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 32 [-]: MOVE      R1 R1        ; R1 := R1
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R2 K0        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gLoadedIcons"]
 36 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x1B252E3C"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 39 [-]: EQ        0 R2 K5      ; if R2 ~= "0x0" then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R1 R1        ; R1 := R1
 42 [-]: RETURN    R1 2         ; return R1
 43 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 2360
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 32
  5 [-]: JMP       32           ; PC := 32
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: LOADK     R2 K1        ; R2 := 0
  8 [-]: LOADK     R3 K2        ; R3 := 1
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["list"]
 11 [-]: LEN       R4 R4        ; R4 := # R4
 12 [-]: LOADK     R5 K2        ; R5 := 1
 13 [-]: FORPREP   R3 22        ; R3 -= R5; PC := 22
 14 [-]: GETUPVAL  R7 U0        ; R7 := U0
 15 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["list"]
 16 [-]: GETTABLE  R1 R7 R6     ; R1 := R7[R6]
 17 [-]: GETTABLE  R7 R1 K4     ; R7 := R1["clip"]
 18 [-]: EQ        0 R7 K5      ; if R7 ~= "LogMessageContainer" then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["NewY"]
 21 [-]: JMP       23           ; PC := 23
 22 [-]: FORLOOP   R3 14        ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
 23 [-]: EQ        0 R0 K7      ; if R0 ~= "true" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: SUB       R2 R2 K8     ; R2 := R2 - 80
 26 [-]: GETGLOBAL R7 K9        ; R7 := mMovie
 27 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x1C19D966"]
 28 [-]: LOADK     R9 K5        ; R9 := "LogMessageContainer"
 29 [-]: LOADK     R10 K11      ; R10 := "_y"
 30 [-]: MOVE      R11 R2       ; R11 := R2
 31 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 32 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 2379
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x8C64AFA9
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: LOADK     R3 K2        ; R3 := "GameplayMessage.gotoAndPlay"
  4 [-]: LOADK     R4 K3        ; R4 := "Show"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x17028E8F"]
  8 [-]: LOADK     R3 K5        ; R3 := "GameplayMessage.MsgContainer.Msg.text"
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 2386
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 2391
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x52E17A90
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: GETGLOBAL R4 K2        ; R4 := UISys
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  7 [-]: LOADK     R6 K4        ; R6 := "_alpha"
  8 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 10 [-]: LOADK     R7 K5        ; R7 := 30
 11 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 12 [-]: LOADK     R7 K6        ; R7 := 0.30000001192093
 13 [-]: LOADK     R8 K7        ; R8 := 0
 14 [-]: CLOSURE   R9 0         ; R9 := closure(Function #46.1)
 15 [-]: MOVE      R0 R0        ; R0 := R0
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 18 [-]: RETURN    R0 1         ; return 


; Function #46.1:
;
; Name:            
; Defined at line: 2392
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETGLOBAL R3 K2        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  7 [-]: LOADK     R5 K4        ; R5 := "_alpha"
  8 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: LOADK     R6 K5        ; R6 := 100
 11 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 12 [-]: LOADK     R6 K6        ; R6 := 0.30000001192093
 13 [-]: LOADK     R7 K7        ; R7 := 0
 14 [-]: CLOSURE   R8 0         ; R8 := closure(Function #46.1.1)
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 18 [-]: RETURN    R0 1         ; return 


; Function #46.1.1:
;
; Name:            
; Defined at line: 2392
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 2396
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x11D1121F"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: LOADK     R4 K3        ; R4 := "_alpha"
  9 [-]: LOADK     R5 K4        ; R5 := 100
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 2403
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIMode"]
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETGLOBAL R0 K3        ; R0 := _G
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["StalkerMode"]
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 2407
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETUPVAL  R1 U2        ; R1 := U2
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x84DCC428"]
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: SETTABLE  R0 K1 R1     ; R0["UIMode"] := R1
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: CALL      R0 1 2       ; R0 := R0()
 10 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 12 [-]: LOADK     R3 K5        ; R3 := "HealthAndShield"
 13 [-]: LOADK     R4 K6        ; R4 := "_visible"
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 18 [-]: LOADK     R3 K7        ; R3 := "WeaponFrame"
 19 [-]: LOADK     R4 K6        ; R4 := "_visible"
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 22 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 24 [-]: LOADK     R3 K8        ; R3 := "Reticle"
 25 [-]: LOADK     R4 K6        ; R4 := "_visible"
 26 [-]: MOVE      R5 R0        ; R5 := R0
 27 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 28 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 30 [-]: LOADK     R3 K9        ; R3 := "reloadTimer"
 31 [-]: LOADK     R4 K6        ; R4 := "_visible"
 32 [-]: MOVE      R5 R0        ; R5 := R0
 33 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 34 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 35 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 36 [-]: LOADK     R3 K10       ; R3 := "AbilityChargeProgress"
 37 [-]: LOADK     R4 K6        ; R4 := "_visible"
 38 [-]: MOVE      R5 R0        ; R5 := R0
 39 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 40 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 41 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 42 [-]: LOADK     R3 K11       ; R3 := "PainTop"
 43 [-]: LOADK     R4 K6        ; R4 := "_visible"
 44 [-]: MOVE      R5 R0        ; R5 := R0
 45 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 46 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 47 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 48 [-]: LOADK     R3 K12       ; R3 := "PainBottom"
 49 [-]: LOADK     R4 K6        ; R4 := "_visible"
 50 [-]: MOVE      R5 R0        ; R5 := R0
 51 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 52 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 53 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 54 [-]: LOADK     R3 K13       ; R3 := "PainLeft"
 55 [-]: LOADK     R4 K6        ; R4 := "_visible"
 56 [-]: MOVE      R5 R0        ; R5 := R0
 57 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 58 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 59 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 60 [-]: LOADK     R3 K14       ; R3 := "PainRight"
 61 [-]: LOADK     R4 K6        ; R4 := "_visible"
 62 [-]: MOVE      R5 R0        ; R5 := R0
 63 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 64 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 65 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 66 [-]: LOADK     R3 K15       ; R3 := "AbilityPanel"
 67 [-]: LOADK     R4 K6        ; R4 := "_visible"
 68 [-]: MOVE      R5 R0        ; R5 := R0
 69 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 70 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 2426
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SecretMiniGameActive"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
  7 [-]: LOADK     R4 K4        ; R4 := "WeaponFrame"
  8 [-]: LOADK     R5 K5        ; R5 := "_visible"
  9 [-]: MOVE      R6 R0        ; R6 := R0
 10 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x58A4A786"]
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x365C109A"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 0         ; if not R2 then PC := 64
 21 [-]: JMP       64           ; PC := 64
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x19240B28"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: SETTABLE  R2 K8 R3     ; R2["ptr"] := R3
 27 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 28 [-]: GETUPVAL  R3 U1        ; R3 := U1
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ptr"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 1         ; if R2 then PC := 40
 32 [-]: JMP       40           ; PC := 40
 33 [-]: GETUPVAL  R2 U1        ; R2 := U1
 34 [-]: GETUPVAL  R3 U1        ; R3 := U1
 35 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ptr"]
 36 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xBD910BAE"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: SETTABLE  R2 K11 R3    ; R2["impactBehavior"] := R3
 39 [-]: JMP       42           ; PC := 42
 40 [-]: GETUPVAL  R2 U1        ; R2 := U1
 41 [-]: SETTABLE  R2 K11 K13   ; R2["impactBehavior"] := nil
 42 [-]: GETUPVAL  R2 U2        ; R2 := U2
 43 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["IsOperator"]
 44 [-]: TEST      R2 0         ; if not R2 then PC := 64
 45 [-]: JMP       64           ; PC := 64
 46 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 47 [-]: GETUPVAL  R3 U1        ; R3 := U1
 48 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ptr"]
 49 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 50 [-]: TEST      R2 1         ; if R2 then PC := 64
 51 [-]: JMP       64           ; PC := 64
 52 [-]: GETUPVAL  R2 U1        ; R2 := U1
 53 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["ptr"]
 54 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x3180ADE8"]
 55 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 56 [-]: TEST      R2 0         ; if not R2 then PC := 64
 57 [-]: JMP       64           ; PC := 64
 58 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 59 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
 60 [-]: LOADK     R4 K4        ; R4 := "WeaponFrame"
 61 [-]: LOADK     R5 K5        ; R5 := "_visible"
 62 [-]: MOVE      R6 R1        ; R6 := R1
 63 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 64 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 2451
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
  3 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
  4 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x6B7B470B"]
  5 [-]: LOADK     R5 K4        ; R5 := "Stamina.Bar.Point1"
  6 [-]: LOADK     R6 K5        ; R6 := "_width"
  7 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  8 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  9 [-]: SETTABLE  R1 K0 R2     ; R1["PointWidth"] := R2
 10 [-]: LOADK     R1 K6        ; R1 := 1
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: LOADK     R3 K6        ; R3 := 1
 13 [-]: FORPREP   R1 42        ; R1 -= R3; PC := 42
 14 [-]: LOADK     R5 K7        ; R5 := "Stamina.Bar.Point"
 15 [-]: GETGLOBAL R6 K8        ; R6 := 0x9FAED6BC
 16 [-]: MOVE      R7 R4        ; R7 := R4
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 19 [-]: EQ        1 R4 K6      ; if R4 == 1 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETUPVAL  R6 U0        ; R6 := U0
 22 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["MaxClipsUsed"]
 23 [-]: LT        0 R6 R4      ; if R6 >= R4 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: GETGLOBAL R6 K10       ; R6 := 0x8C64AFA9
 26 [-]: GETGLOBAL R7 K2        ; R7 := mMovie
 27 [-]: LOADK     R8 K11       ; R8 := "Stamina.Bar.Point1.duplicateMovieClip"
 28 [-]: LOADK     R9 K12       ; R9 := "Point"
 29 [-]: GETGLOBAL R10 K8       ; R10 := 0x9FAED6BC
 30 [-]: MOVE      R11 R4       ; R11 := R4
 31 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 32 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 33 [-]: MOVE      R10 R4       ; R10 := R4
 34 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 35 [-]: GETGLOBAL R6 K2        ; R6 := mMovie
 36 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6["0x1C19D966"]
 37 [-]: MOVE      R8 R5        ; R8 := R5
 38 [-]: LOADK     R9 K14       ; R9 := "_x"
 39 [-]: SUB       R10 R4 K6    ; R10 := R4 - 1
 40 [-]: MUL       R10 R10 K15  ; R10 := R10 * 40
 41 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 42 [-]: FORLOOP   R1 14        ; R1 += R3; if R1 <= R2 then begin PC := 14; R4 := R1 end
 43 [-]: ADD       R6 R0 K6     ; R6 := R0 + 1
 44 [-]: GETUPVAL  R7 U0        ; R7 := U0
 45 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["MaxClipsUsed"]
 46 [-]: LOADK     R8 K6        ; R8 := 1
 47 [-]: FORPREP   R6 57        ; R6 -= R8; PC := 57
 48 [-]: GETGLOBAL R10 K10      ; R10 := 0x8C64AFA9
 49 [-]: GETGLOBAL R11 K2       ; R11 := mMovie
 50 [-]: LOADK     R12 K7       ; R12 := "Stamina.Bar.Point"
 51 [-]: GETGLOBAL R13 K8       ; R13 := 0x9FAED6BC
 52 [-]: MOVE      R14 R9       ; R14 := R9
 53 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 54 [-]: LOADK     R14 K16      ; R14 := ".removeMovieClip"
 55 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 56 [-]: CALL      R10 3 1      ; R10(R11,R12)
 57 [-]: FORLOOP   R6 48        ; R6 += R8; if R6 <= R7 then begin PC := 48; R9 := R6 end
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: SETTABLE  R10 K9 R0    ; R10["MaxClipsUsed"] := R0
 60 [-]: GETUPVAL  R10 U0       ; R10 := U0
 61 [-]: SETTABLE  R10 K17 R0   ; R10["FullBars"] := R0
 62 [-]: GETUPVAL  R10 U0       ; R10 := U0
 63 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["MaxClipsUsed"]
 64 [-]: MUL       R10 R10 K15  ; R10 := R10 * 40
 65 [-]: SUB       R10 R10 K18  ; R10 := R10 - 8
 66 [-]: GETGLOBAL R11 K2       ; R11 := mMovie
 67 [-]: SELF      R11 R11 K13  ; R12 := R11; R11 := R11["0x1C19D966"]
 68 [-]: LOADK     R13 K19      ; R13 := "Stamina.Bar"
 69 [-]: LOADK     R14 K14      ; R14 := "_x"
 70 [-]: DIV       R15 R10 K20  ; R15 := R10 / 2
 71 [-]: UNM       R15 R15      ; R15 := - R15
 72 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 73 [-]: GETGLOBAL R11 K2       ; R11 := mMovie
 74 [-]: SELF      R11 R11 K13  ; R12 := R11; R11 := R11["0x1C19D966"]
 75 [-]: LOADK     R13 K21      ; R13 := "Stamina"
 76 [-]: LOADK     R14 K22      ; R14 := "_visible"
 77 [-]: MOVE      R15 R1       ; R15 := R1
 78 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 79 [-]: GETUPVAL  R11 U0       ; R11 := U0
 80 [-]: SETTABLE  R11 K23 K24  ; R11["Initialized"] := "0x1"
 81 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 2478
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SecretMiniGameActive"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SecretMiniGameAllowsPause"]
  7 [-]: TEST      R1 0         ; if not R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0xB8613F53"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x4CDEF9FF
 15 [-]: CALL      R1 1 2       ; R1 := R1()
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: LEN       R3 R3        ; R3 := # R3
 19 [-]: LT        0 K5 R3      ; if 0 >= R3 then PC := 53
 20 [-]: JMP       53           ; PC := 53
 21 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 22 [-]: MOVE      R2 R3        ; R2 := R3
 23 [-]: GETGLOBAL R3 K6        ; R3 := 0x63B09107
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 26 [-]: JMP       51           ; PC := 51
 27 [-]: GETTABLE  R8 R7 K7     ; R8 := R7["Timer"]
 28 [-]: TEST      R8 0         ; if not R8 then PC := 49
 29 [-]: JMP       49           ; PC := 49
 30 [-]: GETTABLE  R8 R7 K7     ; R8 := R7["Timer"]
 31 [-]: LT        0 K5 R8      ; if 0 >= R8 then PC := 49
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETGLOBAL R8 K8        ; R8 := math
 34 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0x8B011038"]
 35 [-]: LOADK     R9 K5        ; R9 := 0
 36 [-]: GETTABLE  R10 R7 K7    ; R10 := R7["Timer"]
 37 [-]: SUB       R10 R10 R1   ; R10 := R10 - R1
 38 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 39 [-]: SETTABLE  R7 K7 R8     ; R7["Timer"] := R8
 40 [-]: GETGLOBAL R8 K11       ; R8 := 0x9FAED6BC
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["0x7E197415"]
 43 [-]: GETTABLE  R10 R7 K7    ; R10 := R7["Timer"]
 44 [-]: ADD       R10 R10 K13  ; R10 := R10 + 1
 45 [-]: LOADK     R11 K5       ; R11 := 0
 46 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
 47 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 48 [-]: SETTABLE  R7 K10 R8    ; R7["Time"] := R8
 49 [-]: SETTABLE  R7 K14 K15   ; R7["InStatEffectList"] := "0x0"
 50 [-]: SETTABLE  R2 R6 R7     ; R2[R6] := R7
 51 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 27; R5 := R6 end
 52 [-]: JMP       27           ; PC := 27
 53 [-]: GETUPVAL  R8 U2        ; R8 := U2
 54 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["DamageController"]
 55 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x9583286A"]
 56 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 57 [-]: GETGLOBAL R9 K18       ; R9 := Game
 58 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["PT_CAUSTIC_BURN"]
 59 [-]: LE        0 R8 R9      ; if R8 > R9 then PC := 104
 60 [-]: JMP       104          ; PC := 104
 61 [-]: GETUPVAL  R9 U0        ; R9 := U0
 62 [-]: LEN       R9 R9        ; R9 := # R9
 63 [-]: EQ        0 R9 K5      ; if R9 ~= 0 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 66 [-]: MOVE      R2 R9        ; R2 := R9
 67 [-]: MOVE      R9 R8        ; R9 := R8
 68 [-]: GETGLOBAL R10 K18      ; R10 := Game
 69 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["PT_CAUSTIC_BURN"]
 70 [-]: LOADK     R11 K13      ; R11 := 1
 71 [-]: FORPREP   R9 103       ; R9 -= R11; PC := 103
 72 [-]: GETUPVAL  R13 U2       ; R13 := U2
 73 [-]: GETTABLE  R13 R13 K16  ; R13 := R13["DamageController"]
 74 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x41E21FEE"]
 75 [-]: MOVE      R15 R12      ; R15 := R12
 76 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 77 [-]: LT        0 K5 R13     ; if 0 >= R13 then PC := 103
 78 [-]: JMP       103          ; PC := 103
 79 [-]: EQ        0 R2 K21     ; if R2 ~= nil then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: NEWTABLE  R13 0 0      ; R13 := {}
 82 [-]: MOVE      R2 R13       ; R2 := R13
 83 [-]: GETGLOBAL R13 K22      ; R13 := table
 84 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["0xE6450C9D"]
 85 [-]: MOVE      R14 R2       ; R14 := R2
 86 [-]: NEWTABLE  R15 0 3      ; R15 := {}
 87 [-]: SETTABLE  R15 K24 R12  ; R15["DamageType"] := R12
 88 [-]: GETUPVAL  R16 U3       ; R16 := U3
 89 [-]: ADD       R17 R12 K13  ; R17 := R12 + 1
 90 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
 91 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["Icon"]
 92 [-]: SETTABLE  R15 K25 R16  ; R15["Icon"] := R16
 93 [-]: GETGLOBAL R16 K8       ; R16 := math
 94 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["0xBCF846DF"]
 95 [-]: GETUPVAL  R17 U2       ; R17 := U2
 96 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["DamageController"]
 97 [-]: SELF      R17 R17 K20  ; R18 := R17; R17 := R17["0x41E21FEE"]
 98 [-]: MOVE      R19 R12      ; R19 := R12
 99 [-]: CALL      R17 3 0      ; R17,... := R17(R18,R19)
100 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
101 [-]: SETTABLE  R15 K10 R16  ; R15["Time"] := R16
102 [-]: CALL      R13 3 1      ; R13(R14,R15)
103 [-]: FORLOOP   R9 72        ; R9 += R11; if R9 <= R10 then begin PC := 72; R12 := R9 end
104 [-]: LEN       R13 R2       ; R13 := # R2
105 [-]: LOADK     R14 K13      ; R14 := 1
106 [-]: MOVE      R15 R0       ; R15 := R0
107 [-]: GETUPVAL  R16 U4       ; R16 := U4
108 [-]: EQ        1 R16 K21    ; if R16 == nil then PC := 175
109 [-]: JMP       175          ; PC := 175
110 [-]: LOADK     R16 K13      ; R16 := 1
111 [-]: GETUPVAL  R17 U4       ; R17 := U4
112 [-]: SELF      R17 R17 K27  ; R18 := R17; R17 := R17["0xC51A5C9D"]
113 [-]: CALL      R17 2 2      ; R17 := R17(R18)
114 [-]: LE        0 R16 R17    ; if R16 > R17 then PC := 175
115 [-]: JMP       175          ; PC := 175
116 [-]: GETUPVAL  R17 U4       ; R17 := U4
117 [-]: SELF      R17 R17 K28  ; R18 := R17; R17 := R17["0xD75E681A"]
118 [-]: MOVE      R19 R16      ; R19 := R16
119 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
120 [-]: GETGLOBAL R18 K29      ; R18 := 0x400E7765
121 [-]: MOVE      R19 R17      ; R19 := R17
122 [-]: CALL      R18 2 2      ; R18 := R18(R19)
123 [-]: TEST      R18 1        ; if R18 then PC := 175
124 [-]: JMP       175          ; PC := 175
125 [-]: GETTABLE  R18 R17 K30  ; R18 := R17["mIsDebuff"]
126 [-]: TEST      R18 0        ; if not R18 then PC := 175
127 [-]: JMP       175          ; PC := 175
128 [-]: GETTABLE  R18 R17 K31  ; R18 := R17["mAbilityType"]
129 [-]: EQ        1 R18 K21    ; if R18 == nil then PC := 132
130 [-]: JMP       132          ; PC := 132
131 [-]: JMP       175          ; PC := 175
132 [-]: ADD       R14 R16 K13  ; R14 := R16 + 1
133 [-]: MOVE      R18 R0       ; R18 := R0
134 [-]: LOADK     R19 K13      ; R19 := 1
135 [-]: MOVE      R20 R13      ; R20 := R13
136 [-]: LOADK     R21 K13      ; R21 := 1
137 [-]: FORPREP   R19 162      ; R19 -= R21; PC := 162
138 [-]: GETTABLE  R23 R2 R22   ; R23 := R2[R22]
139 [-]: EQ        1 R23 K21    ; if R23 == nil then PC := 162
140 [-]: JMP       162          ; PC := 162
141 [-]: GETTABLE  R23 R2 R22   ; R23 := R2[R22]
142 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["DamageType"]
143 [-]: GETTABLE  R24 R17 K32  ; R24 := R17["mDamageType"]
144 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 162
145 [-]: JMP       162          ; PC := 162
146 [-]: GETTABLE  R23 R2 R22   ; R23 := R2[R22]
147 [-]: GETTABLE  R23 R23 K10  ; R23 := R23["Time"]
148 [-]: GETTABLE  R24 R17 K33  ; R24 := R17["mBuffData"]
149 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 158
150 [-]: JMP       158          ; PC := 158
151 [-]: GETTABLE  R23 R2 R22   ; R23 := R2[R22]
152 [-]: GETTABLE  R23 R23 K10  ; R23 := R23["Time"]
153 [-]: SETTABLE  R17 K33 R23  ; R17["mBuffData"] := R23
154 [-]: GETUPVAL  R23 U4       ; R23 := U4
155 [-]: GETTABLE  R23 R23 K34  ; R23 := R23["0xA372F64A"]
156 [-]: MOVE      R24 R17      ; R24 := R17
157 [-]: CALL      R23 2 1      ; R23(R24)
158 [-]: GETTABLE  R23 R2 R22   ; R23 := R2[R22]
159 [-]: SETTABLE  R23 K14 K35  ; R23["InStatEffectList"] := "0x1"
160 [-]: MOVE      R18 R1       ; R18 := R1
161 [-]: JMP       163          ; PC := 163
162 [-]: FORLOOP   R19 138      ; R19 += R21; if R19 <= R20 then begin PC := 138; R22 := R19 end
163 [-]: TEST      R18 1        ; if R18 then PC := 173
164 [-]: JMP       173          ; PC := 173
165 [-]: MOVE      R15 R1       ; R15 := R1
166 [-]: GETUPVAL  R23 U4       ; R23 := U4
167 [-]: SELF      R23 R23 K36  ; R24 := R23; R23 := R23["0x96ABF26F"]
168 [-]: MOVE      R25 R16      ; R25 := R16
169 [-]: MOVE      R26 R1       ; R26 := R1
170 [-]: MOVE      R27 R1       ; R27 := R1
171 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
172 [-]: JMP       111          ; PC := 111
173 [-]: ADD       R16 R16 K13  ; R16 := R16 + 1
174 [-]: JMP       111          ; PC := 111
175 [-]: LOADK     R23 K13      ; R23 := 1
176 [-]: MOVE      R24 R13      ; R24 := R13
177 [-]: LOADK     R25 K13      ; R25 := 1
178 [-]: FORPREP   R23 238      ; R23 -= R25; PC := 238
179 [-]: GETTABLE  R27 R2 R26   ; R27 := R2[R26]
180 [-]: GETTABLE  R27 R27 K14  ; R27 := R27["InStatEffectList"]
181 [-]: TEST      R27 1        ; if R27 then PC := 238
182 [-]: JMP       238          ; PC := 238
183 [-]: MOVE      R15 R1       ; R15 := R1
184 [-]: NEWTABLE  R27 0 6      ; R27 := {}
185 [-]: GETGLOBAL R28 K38      ; R28 := Lotus_Game
186 [-]: GETTABLE  R28 R28 K39  ; R28 := R28["BT_TIMER"]
187 [-]: SETTABLE  R27 K37 R28  ; R27["mBuffType"] := R28
188 [-]: SETTABLE  R27 K30 K35  ; R27["mIsDebuff"] := "0x1"
189 [-]: GETTABLE  R28 R2 R26   ; R28 := R2[R26]
190 [-]: GETTABLE  R28 R28 K24  ; R28 := R28["DamageType"]
191 [-]: SETTABLE  R27 K32 R28  ; R27["mDamageType"] := R28
192 [-]: GETTABLE  R28 R2 R26   ; R28 := R2[R26]
193 [-]: GETTABLE  R28 R28 K25  ; R28 := R28["Icon"]
194 [-]: SETTABLE  R27 K40 R28  ; R27["mIcon"] := R28
195 [-]: SETTABLE  R27 K41 K42  ; R27["mDesc"] := ""
196 [-]: GETTABLE  R28 R2 R26   ; R28 := R2[R26]
197 [-]: GETTABLE  R28 R28 K10  ; R28 := R28["Time"]
198 [-]: SETTABLE  R27 K33 R28  ; R27["mBuffData"] := R28
199 [-]: GETTABLE  R28 R2 R26   ; R28 := R2[R26]
200 [-]: GETTABLE  R28 R28 K43  ; R28 := R28["Description"]
201 [-]: EQ        1 R28 K21    ; if R28 == nil then PC := 207
202 [-]: JMP       207          ; PC := 207
203 [-]: GETTABLE  R28 R2 R26   ; R28 := R2[R26]
204 [-]: GETTABLE  R28 R28 K43  ; R28 := R28["Description"]
205 [-]: SETTABLE  R27 K41 R28  ; R27["mDesc"] := R28
206 [-]: JMP       222          ; PC := 222
207 [-]: GETGLOBAL R28 K44      ; R28 := 0xF595ADDE
208 [-]: GETTABLE  R29 R2 R26   ; R29 := R2[R26]
209 [-]: GETTABLE  R29 R29 K24  ; R29 := R29["DamageType"]
210 [-]: CALL      R28 2 2      ; R28 := R28(R29)
211 [-]: EQ        1 R28 K21    ; if R28 == nil then PC := 222
212 [-]: JMP       222          ; PC := 222
213 [-]: GETUPVAL  R28 U3       ; R28 := U3
214 [-]: GETGLOBAL R29 K44      ; R29 := 0xF595ADDE
215 [-]: GETTABLE  R30 R2 R26   ; R30 := R2[R26]
216 [-]: GETTABLE  R30 R30 K24  ; R30 := R30["DamageType"]
217 [-]: CALL      R29 2 2      ; R29 := R29(R30)
218 [-]: ADD       R29 R29 K13  ; R29 := R29 + 1
219 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
220 [-]: GETTABLE  R28 R28 K45  ; R28 := R28["NameTag"]
221 [-]: SETTABLE  R27 K41 R28  ; R27["mDesc"] := R28
222 [-]: GETTABLE  R28 R27 K33  ; R28 := R27["mBuffData"]
223 [-]: EQ        1 R28 K21    ; if R28 == nil then PC := 228
224 [-]: JMP       228          ; PC := 228
225 [-]: GETTABLE  R28 R27 K33  ; R28 := R27["mBuffData"]
226 [-]: EQ        0 R28 K42    ; if R28 ~= "" then PC := 231
227 [-]: JMP       231          ; PC := 231
228 [-]: GETGLOBAL R28 K38      ; R28 := Lotus_Game
229 [-]: GETTABLE  R28 R28 K46  ; R28 := R28["BT_STATIC"]
230 [-]: SETTABLE  R27 K37 R28  ; R27["mBuffType"] := R28
231 [-]: GETUPVAL  R28 U4       ; R28 := U4
232 [-]: SELF      R28 R28 K47  ; R29 := R28; R28 := R28["0xA6D439FA"]
233 [-]: MOVE      R30 R14      ; R30 := R14
234 [-]: MOVE      R31 R27      ; R31 := R27
235 [-]: MOVE      R32 R1       ; R32 := R1
236 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
237 [-]: ADD       R14 R14 K13  ; R14 := R14 + 1
238 [-]: FORLOOP   R23 179      ; R23 += R25; if R23 <= R24 then begin PC := 179; R26 := R23 end
239 [-]: TEST      R15 1        ; if R15 then PC := 253
240 [-]: JMP       253          ; PC := 253
241 [-]: GETUPVAL  R28 U5       ; R28 := U5
242 [-]: GETUPVAL  R29 U6       ; R29 := U6
243 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 253
244 [-]: JMP       253          ; PC := 253
245 [-]: MOVE      R15 R1       ; R15 := R1
246 [-]: GETUPVAL  R28 U6       ; R28 := U6
247 [-]: MOVE      R28 R5       ; R28 := R5
248 [-]: GETUPVAL  R28 U4       ; R28 := U4
249 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28["0x6470BAF4"]
250 [-]: LOADNIL   R30 R30      ; R30 := nil
251 [-]: MOVE      R31 R1       ; R31 := R1
252 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
253 [-]: TEST      R15 0        ; if not R15 then PC := 261
254 [-]: JMP       261          ; PC := 261
255 [-]: GETUPVAL  R28 U4       ; R28 := U4
256 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28["0x6470BAF4"]
257 [-]: LOADNIL   R30 R30      ; R30 := nil
258 [-]: MOVE      R31 R1       ; R31 := R1
259 [-]: MOVE      R32 R1       ; R32 := R1
260 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
261 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 2599
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Cached"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 45
  4 [-]: JMP       45           ; PC := 45
  5 [-]: LOADK     R1 K1        ; R1 := 1
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Buffs"]
  8 [-]: LEN       R2 R2        ; R2 := # R2
  9 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 45
 10 [-]: JMP       45           ; PC := 45
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Buffs"]
 13 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 16 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0x8917176E"]
 17 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["buffType"]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 0         ; if not R4 then PC := 41
 20 [-]: JMP       41           ; PC := 41
 21 [-]: GETTABLE  R4 R2 K6     ; R4 := R2["buffData"]
 22 [-]: LE        0 K7 R4      ; if 0 > R4 then PC := 41
 23 [-]: JMP       41           ; PC := 41
 24 [-]: GETGLOBAL R4 K8        ; R4 := math
 25 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0x8B011038"]
 26 [-]: GETTABLE  R5 R2 K6     ; R5 := R2["buffData"]
 27 [-]: SUB       R5 R5 R0     ; R5 := R5 - R0
 28 [-]: LOADK     R6 K7        ; R6 := 0
 29 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 30 [-]: SETTABLE  R2 K6 R4     ; R2["buffData"] := R4
 31 [-]: GETTABLE  R4 R2 K6     ; R4 := R2["buffData"]
 32 [-]: LE        0 R4 K7      ; if R4 > 0 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: MOVE      R3 R0        ; R3 := R0
 35 [-]: GETGLOBAL R4 K10       ; R4 := table
 36 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xCDB1FD5E"]
 37 [-]: GETUPVAL  R5 U0        ; R5 := U0
 38 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Buffs"]
 39 [-]: MOVE      R6 R1        ; R6 := R1
 40 [-]: CALL      R4 3 1       ; R4(R5,R6)
 41 [-]: TEST      R3 0         ; if not R3 then PC := 6
 42 [-]: JMP       6            ; PC := 6
 43 [-]: ADD       R1 R1 K1     ; R1 := R1 + 1
 44 [-]: JMP       6            ; PC := 6
 45 [-]: GETUPVAL  R4 U1        ; R4 := U1
 46 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETUPVAL  R4 U2        ; R4 := U2
 49 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["IsSpectating"]
 50 [-]: TEST      R4 0         ; if not R4 then PC := 56
 51 [-]: JMP       56           ; PC := 56
 52 [-]: GETUPVAL  R4 U3        ; R4 := U3
 53 [-]: TEST      R4 1         ; if R4 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: RETURN    R0 1         ; return 
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["IsSpectating"]
 58 [-]: TEST      R4 1         ; if R4 then PC := 91
 59 [-]: JMP       91           ; PC := 91
 60 [-]: GETUPVAL  R4 U4        ; R4 := U4
 61 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 123
 62 [-]: JMP       123          ; PC := 123
 63 [-]: GETUPVAL  R4 U4        ; R4 := U4
 64 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4["0x7D7429DB"]
 65 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 66 [-]: TEST      R4 0         ; if not R4 then PC := 123
 67 [-]: JMP       123          ; PC := 123
 68 [-]: GETUPVAL  R4 U4        ; R4 := U4
 69 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0x9CE5BA4C"]
 70 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 71 [-]: LOADK     R5 K1        ; R5 := 1
 72 [-]: LEN       R6 R4        ; R6 := # R4
 73 [-]: LOADK     R7 K1        ; R7 := 1
 74 [-]: FORPREP   R5 86        ; R5 -= R7; PC := 86
 75 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 76 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["addBuff"]
 77 [-]: TEST      R9 0         ; if not R9 then PC := 83
 78 [-]: JMP       83           ; PC := 83
 79 [-]: GETUPVAL  R9 U5        ; R9 := U5
 80 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 81 [-]: CALL      R9 2 1       ; R9(R10)
 82 [-]: JMP       86           ; PC := 86
 83 [-]: GETUPVAL  R9 U6        ; R9 := U6
 84 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 85 [-]: CALL      R9 2 1       ; R9(R10)
 86 [-]: FORLOOP   R5 75        ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
 87 [-]: GETUPVAL  R9 U4        ; R9 := U4
 88 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9["0xDEB91575"]
 89 [-]: CALL      R9 2 1       ; R9(R10)
 90 [-]: JMP       123          ; PC := 123
 91 [-]: GETGLOBAL R9 K18       ; R9 := 0x400E7765
 92 [-]: GETUPVAL  R10 U7       ; R10 := U7
 93 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 94 [-]: TEST      R9 1         ; if R9 then PC := 123
 95 [-]: JMP       123          ; PC := 123
 96 [-]: GETUPVAL  R9 U3        ; R9 := U3
 97 [-]: TEST      R9 0         ; if not R9 then PC := 123
 98 [-]: JMP       123          ; PC := 123
 99 [-]: GETUPVAL  R9 U7        ; R9 := U7
100 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x9CE5BA4C"]
101 [-]: CALL      R9 2 2       ; R9 := R9(R10)
102 [-]: LOADK     R10 K1       ; R10 := 1
103 [-]: LEN       R11 R9       ; R11 := # R9
104 [-]: LOADK     R12 K1       ; R12 := 1
105 [-]: FORPREP   R10 122      ; R10 -= R12; PC := 122
106 [-]: GETGLOBAL R14 K18      ; R14 := 0x400E7765
107 [-]: GETTABLE  R15 R9 R13   ; R15 := R9[R13]
108 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["abilityType"]
109 [-]: CALL      R14 2 2      ; R14 := R14(R15)
110 [-]: TEST      R14 1        ; if R14 then PC := 122
111 [-]: JMP       122          ; PC := 122
112 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
113 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["abilityType"]
114 [-]: SELF      R14 R14 K20  ; R15 := R14; R14 := R14["0x8B598ED4"]
115 [-]: GETGLOBAL R16 K21      ; R16 := arbitrationReviveBuffType
116 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
117 [-]: TEST      R14 0        ; if not R14 then PC := 122
118 [-]: JMP       122          ; PC := 122
119 [-]: GETUPVAL  R14 U5       ; R14 := U5
120 [-]: GETTABLE  R15 R9 R13   ; R15 := R9[R13]
121 [-]: CALL      R14 2 1      ; R14(R15)
122 [-]: FORLOOP   R10 106      ; R10 += R12; if R10 <= R11 then begin PC := 106; R13 := R10 end
123 [-]: GETGLOBAL R14 K18      ; R14 := 0x400E7765
124 [-]: GETUPVAL  R15 U7       ; R15 := U7
125 [-]: CALL      R14 2 2      ; R14 := R14(R15)
126 [-]: TEST      R14 1        ; if R14 then PC := 133
127 [-]: JMP       133          ; PC := 133
128 [-]: GETUPVAL  R14 U7       ; R14 := U7
129 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5A115A02"]
130 [-]: CALL      R14 2 2      ; R14 := R14(R15)
131 [-]: TEST      R14 0        ; if not R14 then PC := 148
132 [-]: JMP       148          ; PC := 148
133 [-]: GETUPVAL  R14 U1       ; R14 := U1
134 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14["0xC51A5C9D"]
135 [-]: CALL      R14 2 2      ; R14 := R14(R15)
136 [-]: LT        0 K7 R14     ; if 0 >= R14 then PC := 148
137 [-]: JMP       148          ; PC := 148
138 [-]: GETUPVAL  R14 U1       ; R14 := U1
139 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14["0x7CF71D03"]
140 [-]: CALL      R14 2 1      ; R14(R15)
141 [-]: GETUPVAL  R14 U1       ; R14 := U1
142 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0x6470BAF4"]
143 [-]: CALL      R14 2 1      ; R14(R15)
144 [-]: GETUPVAL  R14 U1       ; R14 := U1
145 [-]: SETTABLE  R14 K26 K12  ; R14["mVisNameId"] := nil
146 [-]: GETUPVAL  R14 U1       ; R14 := U1
147 [-]: SETTABLE  R14 K27 K12  ; R14["mVisNameFadeTimer"] := nil
148 [-]: GETUPVAL  R14 U1       ; R14 := U1
149 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["mVisNameId"]
150 [-]: EQ        1 R14 K12    ; if R14 == nil then PC := 204
151 [-]: JMP       204          ; PC := 204
152 [-]: GETUPVAL  R14 U1       ; R14 := U1
153 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["mVisNameFadeTimer"]
154 [-]: EQ        1 R14 K12    ; if R14 == nil then PC := 204
155 [-]: JMP       204          ; PC := 204
156 [-]: GETUPVAL  R14 U1       ; R14 := U1
157 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14["0xF61F409A"]
158 [-]: GETUPVAL  R16 U1       ; R16 := U1
159 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["mVisNameId"]
160 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
161 [-]: GETGLOBAL R15 K18      ; R15 := 0x400E7765
162 [-]: MOVE      R16 R14      ; R16 := R14
163 [-]: CALL      R15 2 2      ; R15 := R15(R16)
164 [-]: TEST      R15 1        ; if R15 then PC := 200
165 [-]: JMP       200          ; PC := 200
166 [-]: GETTABLE  R15 R14 K29  ; R15 := R14["mClipName"]
167 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 200
168 [-]: JMP       200          ; PC := 200
169 [-]: GETUPVAL  R15 U1       ; R15 := U1
170 [-]: GETGLOBAL R16 K8       ; R16 := math
171 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["0x8B011038"]
172 [-]: GETUPVAL  R17 U1       ; R17 := U1
173 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["mVisNameFadeTimer"]
174 [-]: SUB       R17 R17 R0   ; R17 := R17 - R0
175 [-]: LOADK     R18 K7       ; R18 := 0
176 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
177 [-]: SETTABLE  R15 K27 R16  ; R15["mVisNameFadeTimer"] := R16
178 [-]: GETUPVAL  R15 U1       ; R15 := U1
179 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["mVisNameFadeTimer"]
180 [-]: GETUPVAL  R16 U1       ; R16 := U1
181 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["mVisNameFadeDuration"]
182 [-]: DIV       R15 R15 R16  ; R15 := R15 / R16
183 [-]: MUL       R15 R15 K31  ; R15 := R15 * 100
184 [-]: GETGLOBAL R16 K32      ; R16 := mMovie
185 [-]: SELF      R16 R16 K33  ; R17 := R16; R16 := R16["0x880196A7"]
186 [-]: GETTABLE  R18 R14 K29  ; R18 := R14["mClipName"]
187 [-]: LOADK     R19 K34      ; R19 := "StatName"
188 [-]: LOADK     R20 K35      ; R20 := "_alpha"
189 [-]: MOVE      R21 R15      ; R21 := R15
190 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
191 [-]: GETUPVAL  R16 U1       ; R16 := U1
192 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["mVisNameFadeTimer"]
193 [-]: EQ        0 R16 K7     ; if R16 ~= 0 then PC := 204
194 [-]: JMP       204          ; PC := 204
195 [-]: GETUPVAL  R16 U1       ; R16 := U1
196 [-]: SETTABLE  R16 K26 K12  ; R16["mVisNameId"] := nil
197 [-]: GETUPVAL  R16 U1       ; R16 := U1
198 [-]: SETTABLE  R16 K27 K12  ; R16["mVisNameFadeTimer"] := nil
199 [-]: JMP       204          ; PC := 204
200 [-]: GETUPVAL  R16 U1       ; R16 := U1
201 [-]: SETTABLE  R16 K26 K12  ; R16["mVisNameId"] := nil
202 [-]: GETUPVAL  R16 U1       ; R16 := U1
203 [-]: SETTABLE  R16 K27 K12  ; R16["mVisNameFadeTimer"] := nil
204 [-]: GETUPVAL  R16 U1       ; R16 := U1
205 [-]: SELF      R16 R16 K23  ; R17 := R16; R16 := R16["0xC51A5C9D"]
206 [-]: CALL      R16 2 2      ; R16 := R16(R17)
207 [-]: LOADK     R17 K1       ; R17 := 1
208 [-]: LE        0 R17 R16    ; if R17 > R16 then PC := 314
209 [-]: JMP       314          ; PC := 314
210 [-]: GETUPVAL  R18 U1       ; R18 := U1
211 [-]: SELF      R18 R18 K36  ; R19 := R18; R18 := R18["0xD75E681A"]
212 [-]: MOVE      R20 R17      ; R20 := R17
213 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
214 [-]: MOVE      R19 R1       ; R19 := R1
215 [-]: EQ        1 R18 K12    ; if R18 == nil then PC := 310
216 [-]: JMP       310          ; PC := 310
217 [-]: GETTABLE  R20 R18 K29  ; R20 := R18["mClipName"]
218 [-]: EQ        1 R20 K12    ; if R20 == nil then PC := 310
219 [-]: JMP       310          ; PC := 310
220 [-]: GETGLOBAL R20 K3       ; R20 := Lotus_Game
221 [-]: GETTABLE  R20 R20 K4   ; R20 := R20["0x8917176E"]
222 [-]: GETTABLE  R21 R18 K37  ; R21 := R18["mBuffType"]
223 [-]: CALL      R20 2 2      ; R20 := R20(R21)
224 [-]: TEST      R20 0        ; if not R20 then PC := 285
225 [-]: JMP       285          ; PC := 285
226 [-]: GETTABLE  R20 R18 K38  ; R20 := R18["mBuffData"]
227 [-]: LE        0 K7 R20     ; if 0 > R20 then PC := 285
228 [-]: JMP       285          ; PC := 285
229 [-]: GETGLOBAL R20 K8       ; R20 := math
230 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["0x8B011038"]
231 [-]: GETTABLE  R21 R18 K38  ; R21 := R18["mBuffData"]
232 [-]: SUB       R21 R21 R0   ; R21 := R21 - R0
233 [-]: LOADK     R22 K7       ; R22 := 0
234 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
235 [-]: SETTABLE  R18 K38 R20  ; R18["mBuffData"] := R20
236 [-]: GETTABLE  R20 R18 K38  ; R20 := R18["mBuffData"]
237 [-]: LE        0 R20 K7     ; if R20 > 0 then PC := 273
238 [-]: JMP       273          ; PC := 273
239 [-]: GETTABLE  R20 R18 K37  ; R20 := R18["mBuffType"]
240 [-]: GETGLOBAL R21 K3       ; R21 := Lotus_Game
241 [-]: GETTABLE  R21 R21 K39  ; R21 := R21["BT_STACK_TIMER_DECAY"]
242 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 259
243 [-]: JMP       259          ; PC := 259
244 [-]: GETTABLE  R20 R18 K40  ; R20 := R18["mBuffDataExtra"]
245 [-]: LT        0 K1 R20     ; if 1 >= R20 then PC := 259
246 [-]: JMP       259          ; PC := 259
247 [-]: GETTABLE  R20 R18 K40  ; R20 := R18["mBuffDataExtra"]
248 [-]: SUB       R20 R20 K1   ; R20 := R20 - 1
249 [-]: SETTABLE  R18 K40 R20  ; R18["mBuffDataExtra"] := R20
250 [-]: GETTABLE  R20 R18 K41  ; R20 := R18["mInitialBuffData"]
251 [-]: SETTABLE  R18 K38 R20  ; R18["mBuffData"] := R20
252 [-]: GETUPVAL  R20 U1       ; R20 := U1
253 [-]: SELF      R20 R20 K25  ; R21 := R20; R20 := R20["0x6470BAF4"]
254 [-]: LOADNIL   R22 R22      ; R22 := nil
255 [-]: MOVE      R23 R1       ; R23 := R1
256 [-]: MOVE      R24 R1       ; R24 := R1
257 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
258 [-]: JMP       285          ; PC := 285
259 [-]: GETUPVAL  R20 U1       ; R20 := U1
260 [-]: SELF      R20 R20 K42  ; R21 := R20; R20 := R20["0x96ABF26F"]
261 [-]: MOVE      R22 R17      ; R22 := R17
262 [-]: MOVE      R23 R1       ; R23 := R1
263 [-]: MOVE      R24 R1       ; R24 := R1
264 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
265 [-]: GETUPVAL  R20 U1       ; R20 := U1
266 [-]: SELF      R20 R20 K25  ; R21 := R20; R20 := R20["0x6470BAF4"]
267 [-]: LOADNIL   R22 R22      ; R22 := nil
268 [-]: MOVE      R23 R1       ; R23 := R1
269 [-]: MOVE      R24 R1       ; R24 := R1
270 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
271 [-]: MOVE      R19 R0       ; R19 := R0
272 [-]: JMP       285          ; PC := 285
273 [-]: GETGLOBAL R20 K32      ; R20 := mMovie
274 [-]: SELF      R20 R20 K43  ; R21 := R20; R20 := R20["0xD6A79FE9"]
275 [-]: GETTABLE  R22 R18 K29  ; R22 := R18["mClipName"]
276 [-]: LOADK     R23 K44      ; R23 := ".Desc"
277 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
278 [-]: LOADK     R23 K45      ; R23 := "text"
279 [-]: GETUPVAL  R24 U8       ; R24 := U8
280 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["0x7E197415"]
281 [-]: GETTABLE  R25 R18 K38  ; R25 := R18["mBuffData"]
282 [-]: LOADK     R26 K1       ; R26 := 1
283 [-]: CALL      R24 3 0      ; R24,... := R24(R25,R26)
284 [-]: CALL      R20 0 1      ; R20(R21,...)
285 [-]: TEST      R19 0        ; if not R19 then PC := 310
286 [-]: JMP       310          ; PC := 310
287 [-]: GETTABLE  R20 R18 K47  ; R20 := R18["WaitingForIcon"]
288 [-]: TEST      R20 0        ; if not R20 then PC := 310
289 [-]: JMP       310          ; PC := 310
290 [-]: GETUPVAL  R20 U9       ; R20 := U9
291 [-]: GETTABLE  R21 R18 K48  ; R21 := R18["Icon"]
292 [-]: CALL      R20 2 2      ; R20 := R20(R21)
293 [-]: TEST      R20 0        ; if not R20 then PC := 310
294 [-]: JMP       310          ; PC := 310
295 [-]: SETTABLE  R18 K47 K49  ; R18["WaitingForIcon"] := "0x0"
296 [-]: GETGLOBAL R20 K32      ; R20 := mMovie
297 [-]: SELF      R20 R20 K33  ; R21 := R20; R20 := R20["0x880196A7"]
298 [-]: GETTABLE  R22 R18 K29  ; R22 := R18["mClipName"]
299 [-]: LOADK     R23 K50      ; R23 := "Icon.Icon"
300 [-]: LOADK     R24 K51      ; R24 := "_visible"
301 [-]: MOVE      R25 R1       ; R25 := R1
302 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
303 [-]: GETGLOBAL R20 K32      ; R20 := mMovie
304 [-]: SELF      R20 R20 K52  ; R21 := R20; R20 := R20["0x26581636"]
305 [-]: GETTABLE  R22 R18 K29  ; R22 := R18["mClipName"]
306 [-]: LOADK     R23 K53      ; R23 := ".Icon.Icon"
307 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
308 [-]: GETTABLE  R23 R18 K48  ; R23 := R18["Icon"]
309 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
310 [-]: TEST      R19 0        ; if not R19 then PC := 208
311 [-]: JMP       208          ; PC := 208
312 [-]: ADD       R17 R17 K1   ; R17 := R17 + 1
313 [-]: JMP       208          ; PC := 208
314 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2717
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B598ED4"]
  7 [-]: GETGLOBAL R3 K2        ; R3 := gLotusWeaponType
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 1         ; if R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADNIL   R1 R1        ; R1 := nil
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x4734EA47"]
 14 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 15 [-]: RETURN    R1 0         ; return R1,...
 16 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2725
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: EQ        1 R0 K2      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: SETTABLE  R1 K1 R2     ; R1["forceLocalRespawn"] := R2
  7 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2730
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
  5 [-]: TEST      R3 0         ; if not R3 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: TEST      R4 0         ; if not R4 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: SELF      R5 R5 K0     ; R6 := R5; R5 := R5["0x99AA2516"]
 11 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 12 [-]: MOVE      R8 R0        ; R8 := R0
 13 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 14 [-]: MOVE      R10 R3       ; R10 := R3
 15 [-]: MOVE      R11 R4       ; R11 := R4
 16 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 17 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETGLOBAL R5 K2        ; R5 := 0x93B1256B
 20 [-]: LOADK     R6 K3        ; R6 := "Failed to register to AnchorMgr, invalid alignment"
 21 [-]: CALL      R5 2 1       ; R5(R6)
 22 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2741
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x9AF5291A"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2746
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  3 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["Icon"]
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: SETTABLE  R0 K0 R1     ; R0["Icon"] := R1
  7 [-]: LOADK     R1 K3        ; R1 := 1
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: LEN       R2 R2        ; R2 := # R2
 10 [-]: LOADK     R3 K3        ; R3 := 1
 11 [-]: FORPREP   R1 21        ; R1 -= R3; PC := 21
 12 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["DamageType"]
 13 [-]: GETUPVAL  R6 U0        ; R6 := U0
 14 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 15 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["DamageType"]
 16 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETUPVAL  R5 U0        ; R5 := U0
 19 [-]: SETTABLE  R5 R4 R0     ; R5[R4] := R0
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: FORLOOP   R1 12        ; R1 += R3; if R1 <= R2 then begin PC := 12; R4 := R1 end
 22 [-]: GETGLOBAL R5 K5        ; R5 := table
 23 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xE6450C9D"]
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: LOADK     R7 K3        ; R7 := 1
 26 [-]: MOVE      R8 R0        ; R8 := R0
 27 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 28 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2757
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 K0        ; R3 := 1
  5 [-]: FORPREP   R1 18        ; R1 -= R3; PC := 18
  6 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["DamageType"]
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
  9 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["DamageType"]
 10 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R5 K2        ; R5 := table
 13 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["0xCDB1FD5E"]
 14 [-]: GETUPVAL  R6 U0        ; R6 := U0
 15 [-]: MOVE      R7 R4        ; R7 := R4
 16 [-]: CALL      R5 3 1       ; R5(R6,R7)
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 19 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2766
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["InventoryController"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["hasCheckedForStatusEffects"]
 21 [-]: TEST      R2 0         ; if not R2 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETUPVAL  R2 U2        ; R2 := U2
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["effectCheckRetry"]
 25 [-]: LT        0 K4 R2      ; if 0 >= R2 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETUPVAL  R2 U2        ; R2 := U2
 28 [-]: GETUPVAL  R3 U2        ; R3 := U2
 29 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["effectCheckRetry"]
 30 [-]: SUB       R3 R3 R1     ; R3 := R3 - R1
 31 [-]: SETTABLE  R2 K3 R3     ; R2["effectCheckRetry"] := R3
 32 [-]: GETUPVAL  R2 U2        ; R2 := U2
 33 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["effectCheckRetry"]
 34 [-]: LT        0 R2 K4      ; if R2 >= 0 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: SETTABLE  R2 K2 K5     ; R2["hasCheckedForStatusEffects"] := "0x0"
 38 [-]: RETURN    R0 1         ; return 
 39 [-]: GETUPVAL  R2 U2        ; R2 := U2
 40 [-]: SETTABLE  R2 K2 K6     ; R2["hasCheckedForStatusEffects"] := "0x1"
 41 [-]: LOADNIL   R2 R2        ; R2 := nil
 42 [-]: GETUPVAL  R3 U2        ; R3 := U2
 43 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["effectOverride"]
 44 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 114
 45 [-]: JMP       114          ; PC := 114
 46 [-]: LOADNIL   R4 R4        ; R4 := nil
 47 [-]: LOADK     R5 K9        ; R5 := 1
 48 [-]: GETUPVAL  R6 U1        ; R6 := U1
 49 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["InventoryController"]
 50 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x802B4901"]
 51 [-]: GETGLOBAL R8 K11       ; R8 := Lotus_Game
 52 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["CP_GENERAL"]
 53 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 54 [-]: LOADK     R7 K9        ; R7 := 1
 55 [-]: FORPREP   R5 113       ; R5 -= R7; PC := 113
 56 [-]: GETUPVAL  R9 U1        ; R9 := U1
 57 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["InventoryController"]
 58 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9["0x1B1C752"]
 59 [-]: SUB       R11 R8 K9    ; R11 := R8 - 1
 60 [-]: GETGLOBAL R12 K11      ; R12 := Lotus_Game
 61 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["CP_GENERAL"]
 62 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 63 [-]: MOVE      R4 R9        ; R4 := R9
 64 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 65 [-]: MOVE      R10 R4       ; R10 := R4
 66 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 67 [-]: TEST      R9 1         ; if R9 then PC := 113
 68 [-]: JMP       113          ; PC := 113
 69 [-]: GETUPVAL  R9 U1        ; R9 := U1
 70 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["InventoryController"]
 71 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x6B200196"]
 72 [-]: SUB       R11 R8 K9    ; R11 := R8 - 1
 73 [-]: GETGLOBAL R12 K11      ; R12 := Lotus_Game
 74 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["CP_GENERAL"]
 75 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 76 [-]: LT        0 K4 R9      ; if 0 >= R9 then PC := 113
 77 [-]: JMP       113          ; PC := 113
 78 [-]: SELF      R9 R4 K15    ; R10 := R4; R9 := R4["0x1B252E3C"]
 79 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 80 [-]: MOVE      R3 R9        ; R3 := R9
 81 [-]: EQ        0 R3 K16     ; if R3 ~= "ShieldDebuffKey" then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 84 [-]: SETTABLE  R9 K17 K18   ; R9["Icon"] := "<SHIELD_DEBUFF_KEY>"
 85 [-]: SETTABLE  R9 K19 K20   ; R9["Description"] := "/Lotus/Language/Items/ShieldDebuffKeyName"
 86 [-]: MOVE      R2 R9        ; R2 := R9
 87 [-]: JMP       108          ; PC := 108
 88 [-]: EQ        0 R3 K21     ; if R3 ~= "HealthDebuffKey" then PC := 95
 89 [-]: JMP       95           ; PC := 95
 90 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 91 [-]: SETTABLE  R9 K17 K22   ; R9["Icon"] := "<HEALTH_DEBUFF_KEY>"
 92 [-]: SETTABLE  R9 K19 K23   ; R9["Description"] := "/Lotus/Language/Items/HealthDebuffKeyName"
 93 [-]: MOVE      R2 R9        ; R2 := R9
 94 [-]: JMP       108          ; PC := 108
 95 [-]: EQ        0 R3 K24     ; if R3 ~= "SpeedDebuffKey" then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 98 [-]: SETTABLE  R9 K17 K25   ; R9["Icon"] := "<SPEED_DEBUFF_KEY>"
 99 [-]: SETTABLE  R9 K19 K26   ; R9["Description"] := "/Lotus/Language/Items/SpeedDebuffKeyName"
100 [-]: MOVE      R2 R9        ; R2 := R9
101 [-]: JMP       108          ; PC := 108
102 [-]: EQ        0 R3 K27     ; if R3 ~= "DamageDebuffKey" then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: NEWTABLE  R9 0 2       ; R9 := {}
105 [-]: SETTABLE  R9 K17 K28   ; R9["Icon"] := "<DAMAGE_DEBUFF_KEY>"
106 [-]: SETTABLE  R9 K19 K29   ; R9["Description"] := "/Lotus/Language/Items/DamageDebuffKeyName"
107 [-]: MOVE      R2 R9        ; R2 := R9
108 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 113
109 [-]: JMP       113          ; PC := 113
110 [-]: SETTABLE  R2 K30 R3    ; R2["DamageType"] := R3
111 [-]: SETTABLE  R2 K31 K32   ; R2["Time"] := ""
112 [-]: JMP       114          ; PC := 114
113 [-]: FORLOOP   R5 56        ; R5 += R7; if R5 <= R6 then begin PC := 56; R8 := R5 end
114 [-]: GETUPVAL  R9 U3        ; R9 := U3
115 [-]: EQ        1 R9 K8      ; if R9 == nil then PC := 131
116 [-]: JMP       131          ; PC := 131
117 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 124
118 [-]: JMP       124          ; PC := 124
119 [-]: GETUPVAL  R9 U3        ; R9 := U3
120 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["DamageType"]
121 [-]: GETTABLE  R10 R2 K30   ; R10 := R2["DamageType"]
122 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETUPVAL  R9 U4        ; R9 := U4
125 [-]: GETUPVAL  R10 U3       ; R10 := U3
126 [-]: CALL      R9 2 1       ; R9(R10)
127 [-]: LOADNIL   R9 R9        ; R9 := nil
128 [-]: MOVE      R9 R3        ; R9 := R3
129 [-]: JMP       131          ; PC := 131
130 [-]: RETURN    R0 1         ; return 
131 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 136
132 [-]: JMP       136          ; PC := 136
133 [-]: GETUPVAL  R9 U5        ; R9 := U5
134 [-]: MOVE      R10 R2       ; R10 := R2
135 [-]: CALL      R9 2 1       ; R9(R10)
136 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2821
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7C282057
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 40
  8 [-]: JMP       40           ; PC := 40
  9 [-]: NEWTABLE  R4 0 5       ; R4 := {}
 10 [-]: SETTABLE  R4 K2 K3     ; R4["Icon"] := "<SHIELD_DEBUFF_KEY>"
 11 [-]: GETGLOBAL R5 K5        ; R5 := 0x9FAED6BC
 12 [-]: SELF      R6 R3 K6     ; R7 := R3; R6 := R3["0x616C74B6"]
 13 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 14 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 15 [-]: SETTABLE  R4 K4 R5     ; R4["Description"] := R5
 16 [-]: SETTABLE  R4 K7 R0     ; R4["DamageType"] := R0
 17 [-]: GETGLOBAL R5 K9        ; R5 := 0xF595ADDE
 18 [-]: MOVE      R6 R2        ; R6 := R2
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: SETTABLE  R4 K8 R5     ; R4["Timer"] := R5
 21 [-]: GETGLOBAL R5 K9        ; R5 := 0xF595ADDE
 22 [-]: MOVE      R6 R2        ; R6 := R2
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: SETTABLE  R4 K10 R5    ; R4["Time"] := R5
 25 [-]: EQ        0 R1 K11     ; if R1 ~= "true" then PC := 37
 26 [-]: JMP       37           ; PC := 37
 27 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["Timer"]
 28 [-]: EQ        1 R5 K12     ; if R5 == nil then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["Timer"]
 31 [-]: LT        0 K13 R5     ; if 0 >= R5 then PC := 40
 32 [-]: JMP       40           ; PC := 40
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 1       ; R5(R6)
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETUPVAL  R5 U1        ; R5 := U1
 38 [-]: MOVE      R6 R4        ; R6 := R4
 39 [-]: CALL      R5 2 1       ; R5(R6)
 40 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2838
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := table
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xCDB1FD5E"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: LOADK     R2 K2        ; R2 := 1
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x774E5789"]
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2843
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x8383A1DC"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: LOADK     R4 K2        ; R4 := -1
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: SETTABLE  R1 K0 R2     ; R1[1] := R2
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstalled"]
 11 [-]: SETTABLE  R1 K4 K0     ; R1["fake"] := 1
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 14 [-]: SETTABLE  R1 K0 R2     ; R1[1] := R2
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1]
 17 [-]: SETTABLE  R1 K5 K0     ; R1["mCardIndex"] := 1
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1]
 20 [-]: SETTABLE  R1 K6 K7     ; R1["mClipName"] := "Card.Card"
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1]
 23 [-]: SETTABLE  R1 K3 K0     ; R1["mInstalled"] := 1
 24 [-]: GETUPVAL  R1 U2        ; R1 := U2
 25 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1]
 26 [-]: GETGLOBAL R2 K9        ; R2 := Lotus_Game
 27 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["AP_UNIVERSAL"]
 28 [-]: SETTABLE  R1 K8 R2     ; R1["mPolarity"] := R2
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["0xA7A7B88"]
 31 [-]: GETUPVAL  R2 U2        ; R2 := U2
 32 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1]
 33 [-]: CALL      R1 2 1       ; R1(R2)
 34 [-]: GETUPVAL  R1 U1        ; R1 := U1
 35 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x697262FB"]
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1]
 38 [-]: GETUPVAL  R3 U2        ; R3 := U2
 39 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[1]
 40 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mClipName"]
 41 [-]: LOADK     R4 K13       ; R4 := ".Card"
 42 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 43 [-]: MOVE      R4 R1        ; R4 := R1
 44 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 45 [-]: GETGLOBAL R1 K14       ; R1 := mMovie
 46 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0x880196A7"]
 47 [-]: GETUPVAL  R3 U2        ; R3 := U2
 48 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[1]
 49 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mClipName"]
 50 [-]: LOADK     R4 K16       ; R4 := "Card.BottomFrame.Equipped"
 51 [-]: LOADK     R5 K17       ; R5 := "_alpha"
 52 [-]: LOADK     R6 K18       ; R6 := 0
 53 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 54 [-]: GETUPVAL  R1 U3        ; R1 := U3
 55 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["0x25992394"]
 56 [-]: GETGLOBAL R2 K20       ; R2 := showCardSound
 57 [-]: CALL      R1 2 1       ; R1(R2)
 58 [-]: GETUPVAL  R1 U2        ; R1 := U2
 59 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[1]
 60 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mClipName"]
 61 [-]: GETGLOBAL R2 K14       ; R2 := mMovie
 62 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x1C19D966"]
 63 [-]: MOVE      R4 R1        ; R4 := R1
 64 [-]: LOADK     R5 K17       ; R5 := "_alpha"
 65 [-]: LOADK     R6 K18       ; R6 := 0
 66 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 67 [-]: GETGLOBAL R2 K22       ; R2 := 0x52E17A90
 68 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 69 [-]: MOVE      R4 R1        ; R4 := R1
 70 [-]: GETGLOBAL R5 K23       ; R5 := UISys
 71 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["FlashInstance_SMOOTH_STEP"]
 72 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 73 [-]: LOADK     R7 K17       ; R7 := "_alpha"
 74 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 75 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 76 [-]: LOADK     R8 K25       ; R8 := 100
 77 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 78 [-]: LOADK     R8 K26       ; R8 := 0.20000000298023
 79 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 80 [-]: GETGLOBAL R2 K14       ; R2 := mMovie
 81 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x1C19D966"]
 82 [-]: LOADK     R4 K27       ; R4 := "Card"
 83 [-]: LOADK     R5 K28       ; R5 := "_visible"
 84 [-]: MOVE      R6 R1        ; R6 := R1
 85 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 86 [-]: GETUPVAL  R2 U4        ; R2 := U4
 87 [-]: SELF      R2 R2 K29    ; R3 := R2; R2 := R2["0x774E5789"]
 88 [-]: MOVE      R4 R1        ; R4 := R1
 89 [-]: CALL      R2 3 1       ; R2(R3,R4)
 90 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2868
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xA9D5605B"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItem"]
  5 [-]: SETTABLE  R1 K2 R2     ; R1["mItemType"] := R2
  6 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mFingerprint"]
  7 [-]: SETTABLE  R1 K4 R2     ; R1["mUpgradeFingerprint"] := R2
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: EQ        0 R2 K6      ; if R2 ~= nil then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: GETGLOBAL R2 K7        ; R2 := table
 14 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xE6450C9D"]
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: LOADK     R6 K9        ; R6 := -1
 19 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2878
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R1 K1        ; R1 := ""
  4 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x2C00D429
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: SETTABLE  R2 K2 R3     ; R2["mItem"] := R3
  9 [-]: SETTABLE  R2 K4 R1     ; R2["mFingerprint"] := R1
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 1       ; R3(R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2887
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETGLOBAL R1 K0        ; R1 := _G
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["StalkerMode"]
  6 [-]: TEST      R1 0         ; if not R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: EQ        0 R1 K2      ; if R1 ~= 0 then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 17 [-]: LOADK     R3 K5        ; R3 := "Card"
 18 [-]: LOADK     R4 K6        ; R4 := "_visible"
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETGLOBAL R1 K7        ; R1 := gFlashMgr
 23 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0xCC01AE7A"]
 24 [-]: GETGLOBAL R3 K0        ; R3 := _G
 25 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UIMovie_TransmissionMovie"]
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["mTransOnRightSide"]
 31 [-]: TEST      R1 0         ; if not R1 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: LOADK     R1 K11       ; R1 := 1
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 37 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[1]
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 40 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[2]
 41 [-]: LT        0 R3 K2      ; if R3 >= 0 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 45 [-]: SETTABLE  R3 K12 K13   ; R3[2] := 3
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: GETUPVAL  R4 U0        ; R4 := U0
 48 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 49 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[1]
 50 [-]: CALL      R3 2 1       ; R3(R4)
 51 [-]: JMP       101          ; PC := 101
 52 [-]: GETUPVAL  R3 U0        ; R3 := U0
 53 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 54 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[2]
 55 [-]: LT        0 K2 R3      ; if 0 >= R3 then PC := 101
 56 [-]: JMP       101          ; PC := 101
 57 [-]: GETUPVAL  R3 U0        ; R3 := U0
 58 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 61 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[2]
 62 [-]: SUB       R4 R4 R0     ; R4 := R4 - R0
 63 [-]: SETTABLE  R3 K12 R4    ; R3[2] := R4
 64 [-]: GETUPVAL  R3 U0        ; R3 := U0
 65 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 66 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[2]
 67 [-]: LT        0 R3 K2      ; if R3 >= 0 then PC := 101
 68 [-]: JMP       101          ; PC := 101
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 71 [-]: SETTABLE  R3 K12 K2    ; R3[2] := 0
 72 [-]: GETUPVAL  R3 U3        ; R3 := U3
 73 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[1]
 74 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mClipName"]
 75 [-]: GETUPVAL  R4 U4        ; R4 := U4
 76 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["0x697262FB"]
 77 [-]: GETUPVAL  R5 U3        ; R5 := U3
 78 [-]: GETTABLE  R5 R5 K11    ; R5 := R5[1]
 79 [-]: GETUPVAL  R6 U3        ; R6 := U3
 80 [-]: GETTABLE  R6 R6 K11    ; R6 := R6[1]
 81 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["mClipName"]
 82 [-]: LOADK     R7 K16       ; R7 := ".Card"
 83 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 84 [-]: MOVE      R7 R1        ; R7 := R1
 85 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 86 [-]: GETGLOBAL R4 K17       ; R4 := 0x52E17A90
 87 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 88 [-]: MOVE      R6 R3        ; R6 := R3
 89 [-]: GETGLOBAL R7 K18       ; R7 := UISys
 90 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["FlashInstance_SMOOTH_STEP"]
 91 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 92 [-]: LOADK     R9 K20       ; R9 := "_alpha"
 93 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 94 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 95 [-]: LOADK     R10 K2       ; R10 := 0
 96 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 97 [-]: LOADK     R10 K21      ; R10 := 0.20000000298023
 98 [-]: LOADK     R11 K2       ; R11 := 0
 99 [-]: GETUPVAL  R12 U5       ; R12 := U5
100 [-]: CALL      R4 9 1       ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
101 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2924
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MinimalHud"]
  3 [-]: TEST      R2 1         ; if R2 then PC := 24
  4 [-]: JMP       24           ; PC := 24
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["IsAlternateHud"]
  7 [-]: TEST      R2 1         ; if R2 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7C282057
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x69B983D"]
 14 [-]: GETGLOBAL R4 K5        ; R4 := mMovie
 15 [-]: LOADK     R5 K6        ; R5 := "Notification"
 16 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["0xBB2F7661"]
 19 [-]: GETGLOBAL R6 K5        ; R6 := mMovie
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: MOVE      R8 R3        ; R8 := R3
 22 [-]: ADD       R9 R4 R1     ; R9 := R4 + R1
 23 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 24 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2932
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MinimalHud"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["IsAlternateHud"]
  7 [-]: TEST      R1 0         ; if not R1 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xC0CDD376"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: JMP       38           ; PC := 38
 14 [-]: LOADK     R1 K4        ; R1 := 105
 15 [-]: GETGLOBAL R2 K5        ; R2 := 0x52E17A90
 16 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 17 [-]: LOADK     R4 K7        ; R4 := "Notification"
 18 [-]: GETGLOBAL R5 K8        ; R5 := UISys
 19 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["FlashInstance_EASE_IN"]
 20 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 21 [-]: LOADK     R7 K10       ; R7 := "_alpha"
 22 [-]: LOADK     R8 K11       ; R8 := "_xscale"
 23 [-]: LOADK     R9 K12       ; R9 := "_yscale"
 24 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 25 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 26 [-]: LOADK     R8 K13       ; R8 := 100
 27 [-]: LOADK     R9 K13       ; R9 := 100
 28 [-]: LOADK     R10 K13      ; R10 := 100
 29 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 30 [-]: LOADK     R8 K14       ; R8 := 0.34999999403954
 31 [-]: LOADK     R9 K15       ; R9 := 0
 32 [-]: CLOSURE   R10 0        ; R10 := closure(Function #68.1)
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: GETUPVAL  R0 U1        ; R0 := U1
 36 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 37 [-]: CLOSE     R1           ; SAVE R1,...
 38 [-]: RETURN    R0 1         ; return 


; Function #68.1:
;
; Name:            
; Defined at line: 2938
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "Notification"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_LINEAR"]
  6 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_xscale"
  8 [-]: LOADK     R6 K6        ; R6 := "_yscale"
  9 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 10 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 11 [-]: GETUPVAL  R6 U0        ; R6 := U0
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 14 [-]: GETGLOBAL R6 K7        ; R6 := 0xF595ADDE
 15 [-]: GETUPVAL  R7 U1        ; R7 := U1
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: LOADK     R7 K8        ; R7 := 0
 18 [-]: CLOSURE   R8 0         ; R8 := closure(Function #68.1.1)
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 21 [-]: RETURN    R0 1         ; return 


; Function #68.1.1:
;
; Name:            
; Defined at line: 2940
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "Notification"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_EASE_IN_OUT_BACK"]
  6 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: LOADK     R6 K6        ; R6 := "_xscale"
  9 [-]: LOADK     R7 K7        ; R7 := "_yscale"
 10 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 11 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 12 [-]: LOADK     R6 K8        ; R6 := 0
 13 [-]: LOADK     R7 K9        ; R7 := 60
 14 [-]: LOADK     R8 K9        ; R8 := 60
 15 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 16 [-]: LOADK     R6 K10       ; R6 := 0.34999999403954
 17 [-]: LOADK     R7 K8        ; R7 := 0
 18 [-]: CLOSURE   R8 0         ; R8 := closure(Function #68.1.1.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 21 [-]: RETURN    R0 1         ; return 


; Function #68.1.1.1:
;
; Name:            
; Defined at line: 2942
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xC0CDD376"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2951
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "AbilityPanel.AbilityMessage"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: LOADK     R6 K6        ; R6 := "_x"
  9 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 10 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 11 [-]: LOADK     R6 K7        ; R6 := 0
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["newX"]
 14 [-]: GETUPVAL  R8 U0        ; R8 := U0
 15 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["offsetX"]
 16 [-]: SUB       R7 R7 R8     ; R7 := R7 - R8
 17 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 18 [-]: LOADK     R6 K10       ; R6 := 0.30000001192093
 19 [-]: LOADK     R7 K11       ; R7 := 2
 20 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 21 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2956
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x17028E8F"]
  3 [-]: LOADK     R5 K2        ; R5 := "AbilityPanel.AbilityMessage.Label.text"
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x6F859B74"]
  8 [-]: CALL      R3 2 1       ; R3(R4)
  9 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 10 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x1C19D966"]
 11 [-]: LOADK     R5 K5        ; R5 := "AbilityPanel.AbilityMessage"
 12 [-]: LOADK     R6 K6        ; R6 := "_x"
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["newX"]
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["offsetX"]
 17 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 18 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 19 [-]: GETGLOBAL R3 K9        ; R3 := 0x52E17A90
 20 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 21 [-]: LOADK     R5 K5        ; R5 := "AbilityPanel.AbilityMessage"
 22 [-]: GETGLOBAL R6 K10       ; R6 := UISys
 23 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["FlashInstance_SMOOTH_STEP"]
 24 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 25 [-]: LOADK     R8 K12       ; R8 := "_alpha"
 26 [-]: LOADK     R9 K6        ; R9 := "_x"
 27 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 28 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 29 [-]: LOADK     R9 K13       ; R9 := 100
 30 [-]: GETUPVAL  R10 U0       ; R10 := U0
 31 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["newX"]
 32 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 33 [-]: LOADK     R9 K14       ; R9 := 0.25
 34 [-]: LOADK     R10 K15      ; R10 := 0
 35 [-]: GETUPVAL  R11 U1       ; R11 := U1
 36 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 37 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2964
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: MOVE      R5 R0        ; R5 := R0
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 12 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Game/AbilitySelected"
 13 [-]: MOVE      R6 R0        ; R6 := R0
 14 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 15 [-]: SETTABLE  R7 K4 R2     ; R7["ABILITY_NAME"] := R2
 16 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: LOADK     R5 K5        ; R5 := 16777215
 19 [-]: LOADK     R6 K5        ; R6 := 16777215
 20 [-]: MOVE      R7 R3        ; R7 := R3
 21 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 22 [-]: GETGLOBAL R4 K6        ; R4 := 0x8C64AFA9
 23 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 24 [-]: GETGLOBAL R6 K7        ; R6 := string
 25 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0x4B1F4F58"]
 26 [-]: LOADK     R7 K9        ; R7 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
 27 [-]: ADD       R8 R1 K10    ; R8 := R1 + 1
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: LOADK     R7 K11       ; R7 := "Play"
 30 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: RETURN    R4 2         ; return R4
 33 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2975
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x61494587"]
  4 [-]: LOADK     R3 K2        ; R3 := 0.25
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Hide"]
  7 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["timerId"] := R1
  9 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2980
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: MOVE      R5 R0        ; R5 := R0
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: LOADK     R4 K3        ; R4 := 16777215
 12 [-]: LOADK     R5 K4        ; R5 := 366327
 13 [-]: MOVE      R6 R2        ; R6 := R2
 14 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x8C64AFA9
 16 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 17 [-]: GETGLOBAL R5 K6        ; R5 := string
 18 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["0x4B1F4F58"]
 19 [-]: LOADK     R6 K8        ; R6 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
 20 [-]: ADD       R7 R1 K9     ; R7 := R1 + 1
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: LOADK     R6 K10       ; R6 := "Play"
 23 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 24 [-]: GETUPVAL  R3 U1        ; R3 := U1
 25 [-]: TEST      R3 0         ; if not R3 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: GETUPVAL  R3 U2        ; R3 := U2
 28 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x7CC73200"]
 29 [-]: MOVE      R4 R2        ; R4 := R2
 30 [-]: GETUPVAL  R5 U3        ; R5 := U3
 31 [-]: CALL      R3 3 1       ; R3(R4,R5)
 32 [-]: GETGLOBAL R3 K12       ; R3 := 0x400E7765
 33 [-]: GETGLOBAL R4 K13       ; R4 := _T
 34 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["RailjackHud_Movie"]
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: TEST      R3 1         ; if R3 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETGLOBAL R3 K13       ; R3 := _T
 39 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["RailjackHud_Movie"]
 40 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x458F27A9"]
 41 [-]: LOADK     R5 K16       ; R5 := "NotifyAbilityActivate"
 42 [-]: MOVE      R6 R1        ; R6 := R1
 43 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 44 [-]: MOVE      R3 R1        ; R3 := R1
 45 [-]: RETURN    R3 2         ; return R3
 46 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2999
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SecretMiniGameActive"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 46
  4 [-]: JMP       46           ; PC := 46
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: LOADK     R3 K2        ; R3 := 16777215
  8 [-]: LOADK     R4 K3        ; R4 := 16711680
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: TEST      R2 0         ; if not R2 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x53BCD7B9"]
 16 [-]: LOADK     R4 K5        ; R4 := "NotifyAbilityActivateError"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 20 [-]: GETGLOBAL R3 K0        ; R3 := _T
 21 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["RailjackHud_Movie"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 41
 24 [-]: JMP       41           ; PC := 41
 25 [-]: GETGLOBAL R2 K0        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["RailjackHud_Movie"]
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x458F27A9"]
 28 [-]: LOADK     R4 K5        ; R4 := "NotifyAbilityActivateError"
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 31 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 32 [-]: GETGLOBAL R3 K9        ; R3 := railjackActivateErrorSound
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0x25992394"]
 38 [-]: GETGLOBAL R3 K9        ; R3 := railjackActivateErrorSound
 39 [-]: CALL      R2 2 1       ; R2(R3)
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETUPVAL  R2 U2        ; R2 := U2
 42 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0x25992394"]
 43 [-]: GETGLOBAL R3 K11       ; R3 := _G
 44 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["UISound_Error"]
 45 [-]: CALL      R2 2 1       ; R2(R3)
 46 [-]: MOVE      R2 R1        ; R2 := R1
 47 [-]: RETURN    R2 2         ; return R2
 48 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 3019
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 0         ; if not R0 then PC := 23
  2 [-]: JMP       23           ; PC := 23
  3 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  5 [-]: LOADK     R3 K2        ; R3 := "WeaponFrame"
  6 [-]: LOADK     R4 K3        ; R4 := "_visible"
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x52E17A90
 10 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 11 [-]: LOADK     R3 K2        ; R3 := "WeaponFrame"
 12 [-]: GETGLOBAL R4 K5        ; R4 := UISys
 13 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["FlashInstance_LINEAR"]
 14 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 15 [-]: LOADK     R6 K7        ; R6 := "_alpha"
 16 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 17 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 18 [-]: LOADK     R7 K8        ; R7 := 100
 19 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 20 [-]: LOADK     R7 K9        ; R7 := 0.15000000596046
 21 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETGLOBAL R1 K4        ; R1 := 0x52E17A90
 24 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 25 [-]: LOADK     R3 K2        ; R3 := "WeaponFrame"
 26 [-]: GETGLOBAL R4 K5        ; R4 := UISys
 27 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["FlashInstance_LINEAR"]
 28 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 29 [-]: LOADK     R6 K7        ; R6 := "_alpha"
 30 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 31 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 32 [-]: LOADK     R7 K10       ; R7 := 0
 33 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 34 [-]: LOADK     R7 K9        ; R7 := 0.15000000596046
 35 [-]: LOADK     R8 K10       ; R8 := 0
 36 [-]: CLOSURE   R9 0         ; R9 := closure(Function #75.1)
 37 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 38 [-]: RETURN    R0 1         ; return 


; Function #75.1:
;
; Name:            
; Defined at line: 3025
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "WeaponFrame"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3031
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: NEWTABLE  R1 2 0       ; R1 := {}
  2 [-]: LOADK     R2 K0        ; R2 := ".EnergyBar"
  3 [-]: LOADK     R3 K1        ; R3 := ".EnergyAmount"
  4 [-]: SETLIST   R1 2 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 2
  5 [-]: NEWTABLE  R2 4 0       ; R2 := {}
  6 [-]: LOADK     R3 K2        ; R3 := ".Ability1"
  7 [-]: LOADK     R4 K3        ; R4 := ".Ability2"
  8 [-]: LOADK     R5 K4        ; R5 := ".Ability3"
  9 [-]: LOADK     R6 K5        ; R6 := ".Ability4"
 10 [-]: SETLIST   R2 4 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: SETTABLE  R3 K6 R0     ; R3["mEnergyVisible"] := R0
 13 [-]: GETUPVAL  R3 U1        ; R3 := U1
 14 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xF81722A2"]
 15 [-]: MOVE      R4 R0        ; R4 := R0
 16 [-]: LOADK     R5 K8        ; R5 := 100
 17 [-]: LOADK     R6 K9        ; R6 := 0
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: GETUPVAL  R4 U1        ; R4 := U1
 20 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0xF81722A2"]
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: LOADK     R6 K10       ; R6 := 18
 23 [-]: LOADK     R7 K11       ; R7 := 32
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: GETGLOBAL R5 K12       ; R5 := 0x63B09107
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 28 [-]: JMP       44           ; PC := 44
 29 [-]: GETGLOBAL R10 K13      ; R10 := 0x52E17A90
 30 [-]: GETGLOBAL R11 K14      ; R11 := mMovie
 31 [-]: LOADK     R12 K15      ; R12 := "AbilityPanel"
 32 [-]: MOVE      R13 R9       ; R13 := R9
 33 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 34 [-]: GETGLOBAL R13 K16      ; R13 := UISys
 35 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["FlashInstance_LINEAR"]
 36 [-]: NEWTABLE  R14 1 0      ; R14 := {}
 37 [-]: LOADK     R15 K18      ; R15 := "_alpha"
 38 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
 39 [-]: NEWTABLE  R15 1 0      ; R15 := {}
 40 [-]: MOVE      R16 R3       ; R16 := R3
 41 [-]: SETLIST   R15 1 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
 42 [-]: LOADK     R16 K19      ; R16 := 0.15000000596046
 43 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
 44 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 29; R7 := R8 end
 45 [-]: JMP       29           ; PC := 29
 46 [-]: GETGLOBAL R10 K12      ; R10 := 0x63B09107
 47 [-]: MOVE      R11 R2       ; R11 := R2
 48 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 49 [-]: JMP       65           ; PC := 65
 50 [-]: GETGLOBAL R15 K13      ; R15 := 0x52E17A90
 51 [-]: GETGLOBAL R16 K14      ; R16 := mMovie
 52 [-]: LOADK     R17 K15      ; R17 := "AbilityPanel"
 53 [-]: MOVE      R18 R14      ; R18 := R14
 54 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
 55 [-]: GETGLOBAL R18 K16      ; R18 := UISys
 56 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["FlashInstance_LINEAR"]
 57 [-]: NEWTABLE  R19 1 0      ; R19 := {}
 58 [-]: LOADK     R20 K20      ; R20 := "_y"
 59 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
 60 [-]: NEWTABLE  R20 1 0      ; R20 := {}
 61 [-]: MOVE      R21 R4       ; R21 := R4
 62 [-]: SETLIST   R20 1 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
 63 [-]: LOADK     R21 K19      ; R21 := 0.15000000596046
 64 [-]: CALL      R15 7 1      ; R15(R16,R17,R18,R19,R20,R21)
 65 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 50; R12 := R13 end
 66 [-]: JMP       50           ; PC := 50
 67 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3045
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: NEWTABLE  R1 3 0       ; R1 := {}
  2 [-]: LOADK     R2 K0        ; R2 := ".ControllerCastingImage"
  3 [-]: LOADK     R3 K1        ; R3 := ".ControllerCastingButtons"
  4 [-]: LOADK     R4 K2        ; R4 := ".TacticalCallout"
  5 [-]: SETLIST   R1 3 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 3
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x63B09107
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
 11 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x1C19D966"]
 12 [-]: LOADK     R9 K6        ; R9 := "AbilityPanel"
 13 [-]: MOVE      R10 R6       ; R10 := R6
 14 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 15 [-]: LOADK     R10 K7       ; R10 := "_visible"
 16 [-]: MOVE      R11 R0       ; R11 := R0
 17 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 18 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 10; R4 := R5 end
 19 [-]: JMP       10           ; PC := 10
 20 [-]: TEST      R0 0         ; if not R0 then PC := 92
 21 [-]: JMP       92           ; PC := 92
 22 [-]: NEWTABLE  R7 8 0       ; R7 := {}
 23 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 24 [-]: SETTABLE  R8 K8 K9     ; R8["Clip"] := ".Ability1"
 25 [-]: SETTABLE  R8 K10 K11   ; R8["Alpha"] := 100
 26 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 27 [-]: SETTABLE  R9 K8 K12    ; R9["Clip"] := ".Ability2"
 28 [-]: SETTABLE  R9 K10 K11   ; R9["Alpha"] := 100
 29 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 30 [-]: SETTABLE  R10 K8 K13   ; R10["Clip"] := ".Ability3"
 31 [-]: SETTABLE  R10 K10 K11  ; R10["Alpha"] := 100
 32 [-]: NEWTABLE  R11 0 2      ; R11 := {}
 33 [-]: SETTABLE  R11 K8 K14   ; R11["Clip"] := ".Ability4"
 34 [-]: SETTABLE  R11 K10 K11  ; R11["Alpha"] := 100
 35 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 36 [-]: SETTABLE  R12 K8 K15   ; R12["Clip"] := ".EnergyBar"
 37 [-]: GETUPVAL  R13 U0       ; R13 := U0
 38 [-]: GETTABLE  R13 R13 K16  ; R13 := R13["0xF81722A2"]
 39 [-]: GETUPVAL  R14 U1       ; R14 := U1
 40 [-]: GETTABLE  R14 R14 K17  ; R14 := R14["mEnergyVisible"]
 41 [-]: LOADK     R15 K11      ; R15 := 100
 42 [-]: LOADK     R16 K18      ; R16 := 0
 43 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 44 [-]: SETTABLE  R12 K10 R13  ; R12["Alpha"] := R13
 45 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 46 [-]: SETTABLE  R13 K8 K19   ; R13["Clip"] := ".AbilityMessage"
 47 [-]: SETTABLE  R13 K10 K18  ; R13["Alpha"] := 0
 48 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 49 [-]: SETTABLE  R14 K8 K20   ; R14["Clip"] := ".EnergyAmount"
 50 [-]: GETUPVAL  R15 U0       ; R15 := U0
 51 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["0xF81722A2"]
 52 [-]: GETUPVAL  R16 U1       ; R16 := U1
 53 [-]: GETTABLE  R16 R16 K17  ; R16 := R16["mEnergyVisible"]
 54 [-]: LOADK     R17 K11      ; R17 := 100
 55 [-]: LOADK     R18 K18      ; R18 := 0
 56 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 57 [-]: SETTABLE  R14 K10 R15  ; R14["Alpha"] := R15
 58 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 59 [-]: SETTABLE  R15 K8 K21   ; R15["Clip"] := ".Focus"
 60 [-]: SETTABLE  R15 K10 K11  ; R15["Alpha"] := 100
 61 [-]: SETLIST   R7 8 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 8
 62 [-]: GETGLOBAL R8 K3        ; R8 := 0x63B09107
 63 [-]: MOVE      R9 R7        ; R9 := R7
 64 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 65 [-]: JMP       89           ; PC := 89
 66 [-]: GETGLOBAL R13 K4       ; R13 := mMovie
 67 [-]: SELF      R13 R13 K5   ; R14 := R13; R13 := R13["0x1C19D966"]
 68 [-]: LOADK     R15 K6       ; R15 := "AbilityPanel"
 69 [-]: GETTABLE  R16 R12 K8   ; R16 := R12["Clip"]
 70 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 71 [-]: LOADK     R16 K7       ; R16 := "_visible"
 72 [-]: MOVE      R17 R1       ; R17 := R1
 73 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 74 [-]: GETGLOBAL R13 K22      ; R13 := 0x52E17A90
 75 [-]: GETGLOBAL R14 K4       ; R14 := mMovie
 76 [-]: LOADK     R15 K6       ; R15 := "AbilityPanel"
 77 [-]: GETTABLE  R16 R12 K8   ; R16 := R12["Clip"]
 78 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 79 [-]: GETGLOBAL R16 K23      ; R16 := UISys
 80 [-]: GETTABLE  R16 R16 K24  ; R16 := R16["FlashInstance_LINEAR"]
 81 [-]: NEWTABLE  R17 1 0      ; R17 := {}
 82 [-]: LOADK     R18 K25      ; R18 := "_alpha"
 83 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
 84 [-]: NEWTABLE  R18 1 0      ; R18 := {}
 85 [-]: GETTABLE  R19 R12 K10  ; R19 := R12["Alpha"]
 86 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 87 [-]: LOADK     R19 K26      ; R19 := 0.15000000596046
 88 [-]: CALL      R13 7 1      ; R13(R14,R15,R16,R17,R18,R19)
 89 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 66; R10 := R11 end
 90 [-]: JMP       66           ; PC := 66
 91 [-]: JMP       127          ; PC := 127
 92 [-]: NEWTABLE  R13 8 0      ; R13 := {}
 93 [-]: LOADK     R14 K9       ; R14 := ".Ability1"
 94 [-]: LOADK     R15 K12      ; R15 := ".Ability2"
 95 [-]: LOADK     R16 K13      ; R16 := ".Ability3"
 96 [-]: LOADK     R17 K14      ; R17 := ".Ability4"
 97 [-]: LOADK     R18 K15      ; R18 := ".EnergyBar"
 98 [-]: LOADK     R19 K19      ; R19 := ".AbilityMessage"
 99 [-]: LOADK     R20 K20      ; R20 := ".EnergyAmount"
100 [-]: LOADK     R21 K21      ; R21 := ".Focus"
101 [-]: SETLIST   R13 8 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 8
102 [-]: GETGLOBAL R14 K3       ; R14 := 0x63B09107
103 [-]: MOVE      R15 R13      ; R15 := R13
104 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
105 [-]: JMP       125          ; PC := 125
106 [-]: GETGLOBAL R19 K22      ; R19 := 0x52E17A90
107 [-]: GETGLOBAL R20 K4       ; R20 := mMovie
108 [-]: LOADK     R21 K6       ; R21 := "AbilityPanel"
109 [-]: MOVE      R22 R18      ; R22 := R18
110 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
111 [-]: GETGLOBAL R22 K23      ; R22 := UISys
112 [-]: GETTABLE  R22 R22 K24  ; R22 := R22["FlashInstance_LINEAR"]
113 [-]: NEWTABLE  R23 1 0      ; R23 := {}
114 [-]: LOADK     R24 K25      ; R24 := "_alpha"
115 [-]: SETLIST   R23 1 1      ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 1
116 [-]: NEWTABLE  R24 1 0      ; R24 := {}
117 [-]: LOADK     R25 K18      ; R25 := 0
118 [-]: SETLIST   R24 1 1      ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 1
119 [-]: LOADK     R25 K26      ; R25 := 0.15000000596046
120 [-]: LOADK     R26 K18      ; R26 := 0
121 [-]: CLOSURE   R27 0        ; R27 := closure(Function #77.1)
122 [-]: MOVE      R0 R18       ; R0 := R18
123 [-]: CALL      R19 9 1      ; R19(R20,R21,R22,R23,R24,R25,R26,R27)
124 [-]: CLOSE     R17          ; SAVE R17,...
125 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 106; R16 := R17 end
126 [-]: JMP       106          ; PC := 106
127 [-]: GETUPVAL  R17 U2       ; R17 := U2
128 [-]: SELF      R17 R17 K27  ; R18 := R17; R17 := R17["0xF4B643F0"]
129 [-]: MOVE      R19 R0       ; R19 := R0
130 [-]: CALL      R17 3 1      ; R17(R18,R19)
131 [-]: RETURN    R0 1         ; return 


; Function #77.1:
;
; Name:            
; Defined at line: 3070
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "AbilityPanel"
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: LOADK     R3 K3        ; R3 := "_visible"
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3079
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 154
  5 [-]: JMP       154          ; PC := 154
  6 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: EQ        1 R1 K1      ; if R1 == "true" then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R1 R0        ; R1 := R0
 13 [-]: MOVE      R1 R1        ; R1 := R1
 14 [-]: EQ        1 R2 K1      ; if R2 == "true" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: LOADNIL   R3 R3        ; R3 := nil
 19 [-]: LOADK     R4 K2        ; R4 := 1
 20 [-]: GETUPVAL  R5 U0        ; R5 := U0
 21 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["list"]
 22 [-]: LEN       R5 R5        ; R5 := # R5
 23 [-]: LOADK     R6 K2        ; R6 := 1
 24 [-]: FORPREP   R4 53        ; R4 -= R6; PC := 53
 25 [-]: GETUPVAL  R8 U0        ; R8 := U0
 26 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["list"]
 27 [-]: GETTABLE  R3 R8 R7     ; R3 := R8[R7]
 28 [-]: GETTABLE  R8 R3 K4     ; R8 := R3["clip"]
 29 [-]: EQ        0 R8 K5      ; if R8 ~= "AbilityPanel" then PC := 53
 30 [-]: JMP       53           ; PC := 53
 31 [-]: TEST      R0 1         ; if R0 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R8 U1        ; R8 := U1
 34 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["OriginalX"]
 35 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETUPVAL  R8 U1        ; R8 := U1
 38 [-]: GETTABLE  R9 R3 K8     ; R9 := R3["originalX"]
 39 [-]: SETTABLE  R8 K6 R9     ; R8["OriginalX"] := R9
 40 [-]: GETUPVAL  R8 U1        ; R8 := U1
 41 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["OriginalX"]
 42 [-]: GETUPVAL  R9 U2        ; R9 := U2
 43 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["0xF81722A2"]
 44 [-]: TESTSET   R10 R1 1     ; if R1 then PC := 47 else R10 := R1
 45 [-]: JMP       47           ; PC := 47
 46 [-]: MOVE      R10 R2       ; R10 := R2
 47 [-]: LOADK     R11 K10      ; R11 := -65
 48 [-]: LOADK     R12 K11      ; R12 := 0
 49 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 50 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 51 [-]: SETTABLE  R3 K8 R8     ; R3["originalX"] := R8
 52 [-]: JMP       54           ; PC := 54
 53 [-]: FORLOOP   R4 25        ; R4 += R6; if R4 <= R5 then begin PC := 25; R7 := R4 end
 54 [-]: TEST      R0 0         ; if not R0 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: TEST      R1 1         ; if R1 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: TEST      R2 0         ; if not R2 then PC := 152
 59 [-]: JMP       152          ; PC := 152
 60 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
 61 [-]: GETUPVAL  R9 U3        ; R9 := U3
 62 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 63 [-]: TEST      R8 0         ; if not R8 then PC := 86
 64 [-]: JMP       86           ; PC := 86
 65 [-]: GETGLOBAL R8 K12       ; R8 := mMovie
 66 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8["0x7C1F5A97"]
 67 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 68 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 69 [-]: MOVE      R10 R8       ; R10 := R8
 70 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 71 [-]: TEST      R9 0         ; if not R9 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: MOVE      R9 R0        ; R9 := R0
 74 [-]: RETURN    R9 2         ; return R9
 75 [-]: SELF      R9 R8 K14    ; R10 := R8; R9 := R8["0x8109F422"]
 76 [-]: MOVE      R11 R0       ; R11 := R0
 77 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 78 [-]: MOVE      R9 R3        ; R9 := R3
 79 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 80 [-]: GETUPVAL  R10 U3       ; R10 := U3
 81 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 82 [-]: TEST      R9 0         ; if not R9 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: MOVE      R9 R0        ; R9 := R0
 85 [-]: RETURN    R9 2         ; return R9
 86 [-]: GETGLOBAL R9 K12       ; R9 := mMovie
 87 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0xF595D5E1"]
 88 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 89 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
 90 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10["0xEE069D65"]
 91 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 92 [-]: GETGLOBAL R11 K12      ; R11 := mMovie
 93 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11["0xF3E132E0"]
 94 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 95 [-]: LT        1 R9 R11     ; if R9 < R11 then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: GETGLOBAL R11 K12      ; R11 := mMovie
 98 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x68998E7D"]
 99 [-]: CALL      R11 2 2      ; R11 := R11(R12)
100 [-]: LT        0 R10 R11    ; if R10 >= R11 then PC := 115
101 [-]: JMP       115          ; PC := 115
102 [-]: GETGLOBAL R11 K19      ; R11 := Engine
103 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0x1398DAFB"]
104 [-]: CALL      R11 1 2      ; R11 := R11()
105 [-]: TEST      R11 1        ; if R11 then PC := 115
106 [-]: JMP       115          ; PC := 115
107 [-]: GETGLOBAL R11 K12      ; R11 := mMovie
108 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11["0xF3E132E0"]
109 [-]: CALL      R11 2 2      ; R11 := R11(R12)
110 [-]: MOVE      R9 R11       ; R9 := R11
111 [-]: GETGLOBAL R11 K12      ; R11 := mMovie
112 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x68998E7D"]
113 [-]: CALL      R11 2 2      ; R11 := R11(R12)
114 [-]: MOVE      R10 R11      ; R10 := R11
115 [-]: GETUPVAL  R11 U0       ; R11 := U0
116 [-]: SELF      R11 R11 K21  ; R12 := R11; R11 := R11["0x8C7099E9"]
117 [-]: MOVE      R13 R9       ; R13 := R9
118 [-]: MOVE      R14 R10      ; R14 := R10
119 [-]: MOVE      R15 R1       ; R15 := R1
120 [-]: GETUPVAL  R16 U4       ; R16 := U4
121 [-]: GETTABLE  R16 R16 K22  ; R16 := R16["HudScalePadding"]
122 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
123 [-]: GETUPVAL  R11 U3       ; R11 := U3
124 [-]: SELF      R11 R11 K23  ; R12 := R11; R11 := R11["0xFB8B923D"]
125 [-]: GETUPVAL  R13 U0       ; R13 := U0
126 [-]: SELF      R13 R13 K24  ; R14 := R13; R13 := R13["0xE73374BC"]
127 [-]: LOADK     R15 K25      ; R15 := "Notification"
128 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
129 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["y"]
130 [-]: CALL      R11 3 1      ; R11(R12,R13)
131 [-]: GETGLOBAL R11 K27      ; R11 := 0x63B09107
132 [-]: GETUPVAL  R12 U5       ; R12 := U5
133 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
134 [-]: JMP       150          ; PC := 150
135 [-]: GETTABLE  R16 R15 K28  ; R16 := R15["Clip"]
136 [-]: EQ        0 R16 K5     ; if R16 ~= "AbilityPanel" then PC := 150
137 [-]: JMP       150          ; PC := 150
138 [-]: GETUPVAL  R16 U0       ; R16 := U0
139 [-]: SELF      R16 R16 K24  ; R17 := R16; R16 := R16["0xE73374BC"]
140 [-]: GETTABLE  R18 R15 K28  ; R18 := R15["Clip"]
141 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
142 [-]: GETUPVAL  R17 U3       ; R17 := U3
143 [-]: SELF      R17 R17 K29  ; R18 := R17; R17 := R17["0x348FAF6A"]
144 [-]: GETTABLE  R19 R15 K30  ; R19 := R15["Movie"]
145 [-]: GETTABLE  R20 R15 K28  ; R20 := R15["Clip"]
146 [-]: GETTABLE  R21 R16 K31  ; R21 := R16["x"]
147 [-]: GETTABLE  R22 R16 K26  ; R22 := R16["y"]
148 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
149 [-]: JMP       152          ; PC := 152
150 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 135; R13 := R14 end
151 [-]: JMP       135          ; PC := 135
152 [-]: MOVE      R17 R1       ; R17 := R1
153 [-]: RETURN    R17 2        ; return R17
154 [-]: MOVE      R17 R0       ; R17 := R0
155 [-]: RETURN    R17 2        ; return R17
156 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3134
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xC20CC0C2"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: MOVE      R1 R1        ; R1 := R1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x16C11F34"]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 47
 16 [-]: JMP       47           ; PC := 47
 17 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 18 [-]: GETUPVAL  R2 U3        ; R2 := U3
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 47
 21 [-]: JMP       47           ; PC := 47
 22 [-]: GETUPVAL  R1 U2        ; R1 := U2
 23 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x9CD44422"]
 24 [-]: GETUPVAL  R3 U3        ; R3 := U3
 25 [-]: GETGLOBAL R4 K4        ; R4 := _T
 26 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["DisableMiniMap"]
 27 [-]: EQ        1 R4 K6      ; if R4 == "0x1" then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R4 R0        ; R4 := R0
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: GETGLOBAL R5 K4        ; R5 := _T
 32 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["DisableMiniMap"]
 33 [-]: EQ        0 R5 K6      ; if R5 ~= "0x1" then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: MOVE      R5 R0        ; R5 := R0
 36 [-]: MOVE      R5 R1        ; R5 := R1
 37 [-]: GETGLOBAL R6 K4        ; R6 := _T
 38 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["OverlayMapVisible"]
 39 [-]: EQ        1 R6 K6      ; if R6 == "0x1" then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R6 R0        ; R6 := R0
 42 [-]: MOVE      R6 R1        ; R6 := R1
 43 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R1 R0        ; R1 := R0
 46 [-]: MOVE      R1 R1        ; R1 := R1
 47 [-]: GETUPVAL  R1 U2        ; R1 := U2
 48 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x150B3A35"]
 49 [-]: MOVE      R3 R0        ; R3 := R0
 50 [-]: CALL      R1 3 1       ; R1(R2,R3)
 51 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3149
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x49C8D629"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: TEST      R1 0         ; if not R1 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x16C11F34"]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3157
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mVisible"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 25
  4 [-]: JMP       25           ; PC := 25
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVoipHidden"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: LOADK     R1 K2        ; R1 := 1
 10 [-]: LOADK     R2 K3        ; R2 := 3
 11 [-]: LOADK     R3 K2        ; R3 := 1
 12 [-]: FORPREP   R1 21        ; R1 -= R3; PC := 21
 13 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 14 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x1C19D966"]
 15 [-]: LOADK     R7 K6        ; R7 := "VoipIndicator"
 16 [-]: MOVE      R8 R4        ; R8 := R4
 17 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 18 [-]: LOADK     R8 K7        ; R8 := "_alpha"
 19 [-]: LOADK     R9 K8        ; R9 := 0
 20 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 21 [-]: FORLOOP   R1 13        ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: SETTABLE  R5 K1 K9     ; R5["mVoipHidden"] := "0x1"
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: SETTABLE  R5 K1 K10    ; R5["mVoipHidden"] := nil
 27 [-]: GETUPVAL  R5 U1        ; R5 := U1
 28 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0xD3FAEE97"]
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: CALL      R5 3 1       ; R5(R6,R7)
 31 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3174
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := gFlashMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x616DD092"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xBCEEAD81"]
  5 [-]: CALL      R3 1 0       ; R3,... := R3()
  6 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x458F27A9"]
 13 [-]: LOADK     R4 K5        ; R4 := "OnChatMessage"
 14 [-]: LOADK     R5 K6        ; R5 := "["
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: LOADK     R7 K7        ; R7 := "]"
 17 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K8        ; R2 := gPlayerProfileMgr
 20 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 21 [-]: LOADK     R4 K10       ; R4 := 0
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 1         ; if R3 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: SELF      R3 R2 K11    ; R4 := R2; R3 := R2["0x654F1092"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 31 [-]: MOVE      R5 R3        ; R5 := R3
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 1         ; if R4 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: SELF      R4 R3 K12    ; R5 := R3; R4 := R3["0xA1A3B41E"]
 36 [-]: MOVE      R6 R0        ; R6 := R0
 37 [-]: CALL      R4 3 1       ; R4(R5,R6)
 38 [-]: LOADK     R4 K13       ; R4 := 1
 39 [-]: RETURN    R4 2         ; return R4
 40 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3192
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x616DD092"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xBCEEAD81"]
  5 [-]: CALL      R2 1 0       ; R2,... := R2()
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x458F27A9"]
 13 [-]: LOADK     R3 K5        ; R3 := "ToggleFocus"
 14 [-]: LOADK     R4 K6        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3200
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x144A28F9"]
  7 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  8 [-]: RETURN    R1 0         ; return R1,...
  9 [-]: LOADK     R1 K2        ; R1 := ""
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3208
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["PlayerListHasChanged"] := "0x1"
  3 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3212
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["PlayerListHasChanged"] := "0x0"
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: SETTABLE  R0 K2 K3     ; R0["mPlayersChanged"] := "0x1"
  8 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x889EAB05"]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 20 [-]: LOADK     R1 K6        ; R1 := 1
 21 [-]: GETUPVAL  R2 U3        ; R2 := U3
 22 [-]: LEN       R2 R2        ; R2 := # R2
 23 [-]: LOADK     R3 K6        ; R3 := 1
 24 [-]: FORPREP   R1 28        ; R1 -= R3; PC := 28
 25 [-]: GETUPVAL  R5 U3        ; R5 := U3
 26 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 27 [-]: SETTABLE  R0 R4 R5     ; R0[R4] := R5
 28 [-]: FORLOOP   R1 25        ; R1 += R3; if R1 <= R2 then begin PC := 25; R4 := R1 end
 29 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 30 [-]: GETUPVAL  R6 U4        ; R6 := U4
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETUPVAL  R5 U4        ; R5 := U4
 35 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xE6234912"]
 36 [-]: GETGLOBAL R7 K8        ; R7 := mMovie
 37 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x7C1F5A97"]
 38 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 39 [-]: CALL      R5 0 1       ; R5(R6,...)
 40 [-]: GETGLOBAL R5 K10       ; R5 := gRegion
 41 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x48FBE19F"]
 42 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 43 [-]: MOVE      R5 R5        ; R5 := R5
 44 [-]: GETUPVAL  R5 U6        ; R5 := U6
 45 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 46 [-]: SETTABLE  R5 K12 R6    ; R5["PlayerAvatars"] := R6
 47 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 48 [-]: MOVE      R5 R3        ; R5 := R3
 49 [-]: LOADK     R5 K6        ; R5 := 1
 50 [-]: GETUPVAL  R6 U5        ; R6 := U5
 51 [-]: LEN       R6 R6        ; R6 := # R6
 52 [-]: LOADK     R7 K6        ; R7 := 1
 53 [-]: FORPREP   R5 80        ; R5 -= R7; PC := 80
 54 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 55 [-]: GETUPVAL  R10 U5       ; R10 := U5
 56 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 57 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 58 [-]: TEST      R9 1         ; if R9 then PC := 80
 59 [-]: JMP       80           ; PC := 80
 60 [-]: GETUPVAL  R9 U5        ; R9 := U5
 61 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 62 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9["0xAF835E05"]
 63 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 64 [-]: TEST      R9 1         ; if R9 then PC := 80
 65 [-]: JMP       80           ; PC := 80
 66 [-]: GETUPVAL  R9 U7        ; R9 := U7
 67 [-]: GETUPVAL  R10 U5       ; R10 := U5
 68 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 69 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 70 [-]: GETUPVAL  R10 U8       ; R10 := U8
 71 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["HIDDEN_PLAYER_NAME"]
 72 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 80
 73 [-]: JMP       80           ; PC := 80
 74 [-]: GETUPVAL  R9 U3        ; R9 := U3
 75 [-]: GETUPVAL  R10 U7       ; R10 := U7
 76 [-]: GETUPVAL  R11 U5       ; R11 := U5
 77 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
 78 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 79 [-]: SETTABLE  R9 R8 R10    ; R9[R8] := R10
 80 [-]: FORLOOP   R5 54        ; R5 += R7; if R5 <= R6 then begin PC := 54; R8 := R5 end
 81 [-]: GETGLOBAL R9 K15       ; R9 := gFlashMgr
 82 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0x616DD092"]
 83 [-]: GETUPVAL  R11 U9       ; R11 := U9
 84 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0xBCEEAD81"]
 85 [-]: CALL      R11 1 0      ; R11,... := R11()
 86 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 87 [-]: GETGLOBAL R10 K4       ; R10 := 0x400E7765
 88 [-]: MOVE      R11 R9       ; R11 := R9
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: TEST      R10 1        ; if R10 then PC := 193
 91 [-]: JMP       193          ; PC := 193
 92 [-]: GETUPVAL  R10 U0       ; R10 := U0
 93 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["Initialized"]
 94 [-]: TEST      R10 0        ; if not R10 then PC := 193
 95 [-]: JMP       193          ; PC := 193
 96 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 97 [-]: LOADK     R11 K6       ; R11 := 1
 98 [-]: GETUPVAL  R12 U3       ; R12 := U3
 99 [-]: LEN       R12 R12      ; R12 := # R12
100 [-]: LOADK     R13 K6       ; R13 := 1
101 [-]: FORPREP   R11 105      ; R11 -= R13; PC := 105
102 [-]: GETUPVAL  R15 U3       ; R15 := U3
103 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
104 [-]: SETTABLE  R10 R14 R15  ; R10[R14] := R15
105 [-]: FORLOOP   R11 102      ; R11 += R13; if R11 <= R12 then begin PC := 102; R14 := R11 end
106 [-]: LOADK     R15 K6       ; R15 := 1
107 [-]: LEN       R16 R0       ; R16 := # R0
108 [-]: LOADK     R17 K6       ; R17 := 1
109 [-]: FORPREP   R15 128      ; R15 -= R17; PC := 128
110 [-]: LOADK     R19 K6       ; R19 := 1
111 [-]: LEN       R20 R10      ; R20 := # R10
112 [-]: LOADK     R21 K6       ; R21 := 1
113 [-]: FORPREP   R19 127      ; R19 -= R21; PC := 127
114 [-]: GETTABLE  R23 R0 R18   ; R23 := R0[R18]
115 [-]: GETTABLE  R24 R10 R22  ; R24 := R10[R22]
116 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: GETTABLE  R23 R0 R18   ; R23 := R0[R18]
119 [-]: EQ        1 R23 K19    ; if R23 == "" then PC := 127
120 [-]: JMP       127          ; PC := 127
121 [-]: GETTABLE  R23 R10 R22  ; R23 := R10[R22]
122 [-]: EQ        1 R23 K19    ; if R23 == "" then PC := 127
123 [-]: JMP       127          ; PC := 127
124 [-]: SETTABLE  R0 R18 K19   ; R0[R18] := ""
125 [-]: SETTABLE  R10 R22 K19  ; R10[R22] := ""
126 [-]: JMP       128          ; PC := 128
127 [-]: FORLOOP   R19 114      ; R19 += R21; if R19 <= R20 then begin PC := 114; R22 := R19 end
128 [-]: FORLOOP   R15 110      ; R15 += R17; if R15 <= R16 then begin PC := 110; R18 := R15 end
129 [-]: LOADK     R23 K6       ; R23 := 1
130 [-]: LEN       R24 R0       ; R24 := # R0
131 [-]: LOADK     R25 K6       ; R25 := 1
132 [-]: FORPREP   R23 167      ; R23 -= R25; PC := 167
133 [-]: GETTABLE  R27 R0 R26   ; R27 := R0[R26]
134 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 167
135 [-]: JMP       167          ; PC := 167
136 [-]: GETTABLE  R27 R0 R26   ; R27 := R0[R26]
137 [-]: EQ        1 R27 K19    ; if R27 == "" then PC := 167
138 [-]: JMP       167          ; PC := 167
139 [-]: SELF      R27 R9 K21   ; R28 := R9; R27 := R9["0xB9C96BA0"]
140 [-]: LOADK     R29 K22      ; R29 := "ChannelSystemMessage"
141 [-]: NEWTABLE  R30 2 0      ; R30 := {}
142 [-]: GETGLOBAL R31 K8       ; R31 := mMovie
143 [-]: SELF      R31 R31 K23  ; R32 := R31; R31 := R31["0x5DB0BD4"]
144 [-]: LOADK     R33 K24      ; R33 := "/Lotus/Language/Menu/PlayerHasDisconnected"
145 [-]: MOVE      R34 R0       ; R34 := R0
146 [-]: NEWTABLE  R35 0 1      ; R35 := {}
147 [-]: GETTABLE  R36 R0 R26   ; R36 := R0[R26]
148 [-]: SETTABLE  R35 K25 R36  ; R35["PLAYER_NAME"] := R36
149 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
150 [-]: LOADK     R32 K26      ; R32 := "1"
151 [-]: SETLIST   R30 2 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 2
152 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
153 [-]: GETUPVAL  R27 U10      ; R27 := U10
154 [-]: SELF      R27 R27 K27  ; R28 := R27; R27 := R27["0x327054B8"]
155 [-]: CALL      R27 2 2      ; R27 := R27(R28)
156 [-]: GETGLOBAL R28 K28      ; R28 := string
157 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["0xDE44F664"]
158 [-]: MOVE      R29 R27      ; R29 := R27
159 [-]: GETTABLE  R30 R0 R26   ; R30 := R0[R26]
160 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
161 [-]: EQ        1 R28 K20    ; if R28 == nil then PC := 167
162 [-]: JMP       167          ; PC := 167
163 [-]: GETUPVAL  R28 U10      ; R28 := U10
164 [-]: SELF      R28 R28 K30  ; R29 := R28; R28 := R28["0xF2EF8AA7"]
165 [-]: LOADK     R30 K19      ; R30 := ""
166 [-]: CALL      R28 3 1      ; R28(R29,R30)
167 [-]: FORLOOP   R23 133      ; R23 += R25; if R23 <= R24 then begin PC := 133; R26 := R23 end
168 [-]: LOADK     R28 K6       ; R28 := 1
169 [-]: LEN       R29 R10      ; R29 := # R10
170 [-]: LOADK     R30 K6       ; R30 := 1
171 [-]: FORPREP   R28 192      ; R28 -= R30; PC := 192
172 [-]: GETTABLE  R32 R10 R31  ; R32 := R10[R31]
173 [-]: EQ        1 R32 K20    ; if R32 == nil then PC := 192
174 [-]: JMP       192          ; PC := 192
175 [-]: GETTABLE  R32 R10 R31  ; R32 := R10[R31]
176 [-]: EQ        1 R32 K19    ; if R32 == "" then PC := 192
177 [-]: JMP       192          ; PC := 192
178 [-]: SELF      R32 R9 K21   ; R33 := R9; R32 := R9["0xB9C96BA0"]
179 [-]: LOADK     R34 K22      ; R34 := "ChannelSystemMessage"
180 [-]: NEWTABLE  R35 2 0      ; R35 := {}
181 [-]: GETGLOBAL R36 K8       ; R36 := mMovie
182 [-]: SELF      R36 R36 K23  ; R37 := R36; R36 := R36["0x5DB0BD4"]
183 [-]: LOADK     R38 K31      ; R38 := "/Lotus/Language/Menu/PlayerHasJoined"
184 [-]: MOVE      R39 R0       ; R39 := R0
185 [-]: NEWTABLE  R40 0 1      ; R40 := {}
186 [-]: GETTABLE  R41 R10 R31  ; R41 := R10[R31]
187 [-]: SETTABLE  R40 K25 R41  ; R40["PLAYER_NAME"] := R41
188 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
189 [-]: LOADK     R37 K26      ; R37 := "1"
190 [-]: SETLIST   R35 2 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 2
191 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
192 [-]: FORLOOP   R28 172      ; R28 += R30; if R28 <= R29 then begin PC := 172; R31 := R28 end
193 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3280
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETGLOBAL R2 K1        ; R2 := gGameRules
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x299232DB"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: LOADK     R2 K3        ; R2 := 1
 16 [-]: LEN       R3 R1        ; R3 := # R1
 17 [-]: LOADK     R4 K3        ; R4 := 1
 18 [-]: FORPREP   R2 27        ; R2 -= R4; PC := 27
 19 [-]: GETGLOBAL R6 K1        ; R6 := gGameRules
 20 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xE74D02B4"]
 21 [-]: GETTABLE  R8 R1 R5     ; R8 := R1[R5]
 22 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETTABLE  R0 R1 R5     ; R0 := R1[R5]
 26 [-]: JMP       28           ; PC := 28
 27 [-]: FORLOOP   R2 19        ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
 28 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 139
 29 [-]: JMP       139          ; PC := 139
 30 [-]: GETGLOBAL R6 K6        ; R6 := 0x9FAED6BC
 31 [-]: GETGLOBAL R7 K1        ; R7 := gGameRules
 32 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0x8361ECC"]
 33 [-]: MOVE      R9 R0        ; R9 := R0
 34 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 35 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 36 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 37 [-]: GETUPVAL  R8 U1        ; R8 := U1
 38 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
 39 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 40 [-]: TEST      R7 0         ; if not R7 then PC := 69
 41 [-]: JMP       69           ; PC := 69
 42 [-]: GETUPVAL  R7 U1        ; R7 := U1
 43 [-]: GETUPVAL  R8 U2        ; R8 := U2
 44 [-]: LOADK     R9 K8        ; R9 := "TimerOfInterest"
 45 [-]: GETUPVAL  R10 U3       ; R10 := U3
 46 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["HT_TIMER"]
 47 [-]: LOADK     R11 K10      ; R11 := 0.25
 48 [-]: MOVE      R12 R0       ; R12 := R0
 49 [-]: MOVE      R13 R0       ; R13 := R0
 50 [-]: CALL      R8 6 2       ; R8 := R8(R9,R10,R11,R12,R13)
 51 [-]: SETTABLE  R7 K8 R8     ; R7["TimerOfInterest"] := R8
 52 [-]: GETUPVAL  R7 U1        ; R7 := U1
 53 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["TimerOfInterest"]
 54 [-]: SETTABLE  R7 K11 R0    ; R7["MissionTimerName"] := R0
 55 [-]: GETGLOBAL R7 K12       ; R7 := string
 56 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["0xC6772A8A"]
 57 [-]: MOVE      R8 R6        ; R8 := R6
 58 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 59 [-]: LT        0 K14 R7     ; if 0 >= R7 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: GETUPVAL  R7 U1        ; R7 := U1
 62 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["TimerOfInterest"]
 63 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["0xB11F032"]
 64 [-]: MOVE      R8 R6        ; R8 := R6
 65 [-]: LOADK     R9 K16       ; R9 := 5
 66 [-]: CALL      R7 3 1       ; R7(R8,R9)
 67 [-]: GETGLOBAL R7 K17       ; R7 := _T
 68 [-]: SETTABLE  R7 K18 K5    ; R7["TimerOfInterestEnded"] := nil
 69 [-]: GETGLOBAL R7 K1        ; R7 := gGameRules
 70 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7["0x4503D699"]
 71 [-]: MOVE      R9 R0        ; R9 := R0
 72 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 73 [-]: GETUPVAL  R8 U1        ; R8 := U1
 74 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
 75 [-]: TEST      R8 0         ; if not R8 then PC := 82
 76 [-]: JMP       82           ; PC := 82
 77 [-]: GETUPVAL  R8 U1        ; R8 := U1
 78 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
 79 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["0x6733C272"]
 80 [-]: MOVE      R9 R7        ; R9 := R7
 81 [-]: CALL      R8 2 1       ; R8(R9)
 82 [-]: GETGLOBAL R8 K17       ; R8 := _T
 83 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["TimerOfInterestEnded"]
 84 [-]: TEST      R8 1         ; if R8 then PC := 122
 85 [-]: JMP       122          ; PC := 122
 86 [-]: LE        0 R7 K14     ; if R7 > 0 then PC := 122
 87 [-]: JMP       122          ; PC := 122
 88 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
 89 [-]: GETGLOBAL R9 K17       ; R9 := _T
 90 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["missionTimerExpiryPortTrigger"]
 91 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 92 [-]: TEST      R8 1         ; if R8 then PC := 102
 93 [-]: JMP       102          ; PC := 102
 94 [-]: GETGLOBAL R8 K17       ; R8 := _T
 95 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["missionTimerExpiryPortTrigger"]
 96 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8["0x8D5886B7"]
 97 [-]: GETGLOBAL R10 K6       ; R10 := 0x9FAED6BC
 98 [-]: GETGLOBAL R11 K17      ; R11 := _T
 99 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["missionTimerExpiryPortCommand"]
100 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
101 [-]: CALL      R8 0 1       ; R8(R9,...)
102 [-]: GETGLOBAL R8 K1        ; R8 := gGameRules
103 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x62ECACF5"]
104 [-]: GETUPVAL  R10 U1       ; R10 := U1
105 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["TimerOfInterest"]
106 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["MissionTimerName"]
107 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
108 [-]: TEST      R8 0         ; if not R8 then PC := 120
109 [-]: JMP       120          ; PC := 120
110 [-]: GETUPVAL  R8 U1        ; R8 := U1
111 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
112 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["0xB11F032"]
113 [-]: LOADK     R9 K25       ; R9 := "/Lotus/Language/Menu/HUD_MissionFailed"
114 [-]: CALL      R8 2 1       ; R8(R9)
115 [-]: GETUPVAL  R8 U4        ; R8 := U4
116 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8["0x61494587"]
117 [-]: LOADK     R10 K27      ; R10 := 1.5
118 [-]: GETUPVAL  R11 U5       ; R11 := U5
119 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
120 [-]: GETGLOBAL R8 K17       ; R8 := _T
121 [-]: SETTABLE  R8 K18 K28   ; R8["TimerOfInterestEnded"] := "0x1"
122 [-]: GETUPVAL  R8 U1        ; R8 := U1
123 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
124 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["CurrentMessage"]
125 [-]: EQ        1 R8 K5      ; if R8 == nil then PC := 149
126 [-]: JMP       149          ; PC := 149
127 [-]: GETUPVAL  R8 U1        ; R8 := U1
128 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
129 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["CurrentMessage"]
130 [-]: EQ        1 R8 R6      ; if R8 == R6 then PC := 149
131 [-]: JMP       149          ; PC := 149
132 [-]: GETUPVAL  R8 U1        ; R8 := U1
133 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
134 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["0xB11F032"]
135 [-]: MOVE      R9 R6        ; R9 := R6
136 [-]: LOADK     R10 K16      ; R10 := 5
137 [-]: CALL      R8 3 1       ; R8(R9,R10)
138 [-]: JMP       149          ; PC := 149
139 [-]: GETUPVAL  R8 U1        ; R8 := U1
140 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["TimerOfInterest"]
141 [-]: EQ        1 R8 K5      ; if R8 == nil then PC := 149
142 [-]: JMP       149          ; PC := 149
143 [-]: GETUPVAL  R8 U6        ; R8 := U6
144 [-]: GETUPVAL  R9 U1        ; R9 := U1
145 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["TimerOfInterest"]
146 [-]: CALL      R8 2 1       ; R8(R9)
147 [-]: GETUPVAL  R8 U1        ; R8 := U1
148 [-]: SETTABLE  R8 K8 K5     ; R8["TimerOfInterest"] := nil
149 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3336
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["DisableAllTransmissions"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["QueuedTransmissions"]
  8 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 12 [-]: SETTABLE  R1 K2 R2     ; R1["QueuedTransmissions"] := R2
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x7C282057
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 17 [-]: GETGLOBAL R3 K0        ; R3 := _T
 18 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R2 K0        ; R2 := _T
 23 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["curTransmission"]
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x1B252E3C"]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: EQ        1 R2 R0      ; if R2 == R0 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: MOVE      R2 R0        ; R2 := R0
 29 [-]: MOVE      R2 R1        ; R2 := R1
 30 [-]: TEST      R2 1         ; if R2 then PC := 55
 31 [-]: JMP       55           ; PC := 55
 32 [-]: LOADK     R3 K8        ; R3 := 1
 33 [-]: GETGLOBAL R4 K0        ; R4 := _T
 34 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["QueuedTransmissions"]
 35 [-]: LEN       R4 R4        ; R4 := # R4
 36 [-]: LOADK     R5 K8        ; R5 := 1
 37 [-]: FORPREP   R3 54        ; R3 -= R5; PC := 54
 38 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 39 [-]: GETGLOBAL R8 K0        ; R8 := _T
 40 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["QueuedTransmissions"]
 41 [-]: GETTABLE  R8 R8 R6     ; R8 := R8[R6]
 42 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 43 [-]: TEST      R7 1         ; if R7 then PC := 54
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETGLOBAL R7 K0        ; R7 := _T
 46 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["QueuedTransmissions"]
 47 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 48 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0x1B252E3C"]
 49 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 50 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R2 R1        ; R2 := R1
 53 [-]: JMP       55           ; PC := 55
 54 [-]: FORLOOP   R3 38        ; R3 += R5; if R3 <= R4 then begin PC := 38; R6 := R3 end
 55 [-]: TEST      R2 1         ; if R2 then PC := 92
 56 [-]: JMP       92           ; PC := 92
 57 [-]: GETGLOBAL R7 K9        ; R7 := table
 58 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["0xE6450C9D"]
 59 [-]: GETGLOBAL R8 K0        ; R8 := _T
 60 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["QueuedTransmissions"]
 61 [-]: MOVE      R9 R1        ; R9 := R1
 62 [-]: CALL      R7 3 1       ; R7(R8,R9)
 63 [-]: GETGLOBAL R7 K11       ; R7 := 0x93B1256B
 64 [-]: LOADK     R8 K12       ; R8 := "Queued a transmission from Hud: "
 65 [-]: MOVE      R9 R0        ; R9 := R0
 66 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 67 [-]: CALL      R7 2 1       ; R7(R8)
 68 [-]: GETGLOBAL R7 K13       ; R7 := gFlashMgr
 69 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7["0x616DD092"]
 70 [-]: GETGLOBAL R9 K15       ; R9 := _G
 71 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["UIMovie_TransmissionMovie"]
 72 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 73 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 74 [-]: MOVE      R9 R7        ; R9 := R7
 75 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 76 [-]: TEST      R8 0         ; if not R8 then PC := 88
 77 [-]: JMP       88           ; PC := 88
 78 [-]: GETGLOBAL R8 K13       ; R8 := gFlashMgr
 79 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x24FF386"]
 80 [-]: GETGLOBAL R10 K15      ; R10 := _G
 81 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["UIMovie_TransmissionMovie"]
 82 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 83 [-]: MOVE      R7 R8        ; R7 := R8
 84 [-]: GETUPVAL  R8 U0        ; R8 := U0
 85 [-]: SELF      R9 R1 K19    ; R10 := R1; R9 := R1["0xE3145EE5"]
 86 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 87 [-]: SETTABLE  R8 K18 R9    ; R8["mTransOnRightSide"] := R9
 88 [-]: SELF      R8 R7 K20    ; R9 := R7; R8 := R7["0x458F27A9"]
 89 [-]: LOADK     R10 K21      ; R10 := "TransmissionQueuedFromHud"
 90 [-]: MOVE      R11 R0       ; R11 := R0
 91 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 92 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3373
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x80B14403"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["avatar"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 134
  9 [-]: JMP       134          ; PC := 134
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["avatar"]
 12 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 134
 13 [-]: JMP       134          ; PC := 134
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UIMode"]
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UI_MODE_IN_SPACE_HUB"]
 18 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6B13818C"]
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: TEST      R1 1         ; if R1 then PC := 134
 26 [-]: JMP       134          ; PC := 134
 27 [-]: GETUPVAL  R1 U1        ; R1 := U1
 28 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["avatar"]
 29 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xCE832AFF"]
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: GETUPVAL  R2 U4        ; R2 := U4
 32 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETUPVAL  R2 U1        ; R2 := U1
 35 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["avatar"]
 36 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x8B598ED4"]
 37 [-]: GETGLOBAL R4 K9        ; R4 := gLotusSentinelAvatarType
 38 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 39 [-]: TEST      R2 0         ; if not R2 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: GETUPVAL  R2 U1        ; R2 := U1
 43 [-]: SETTABLE  R2 K10 K11   ; R2["valid"] := "0x1"
 44 [-]: GETUPVAL  R2 U1        ; R2 := U1
 45 [-]: GETUPVAL  R3 U1        ; R3 := U1
 46 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 47 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xDE5882DD"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: SETTABLE  R2 K12 R3    ; R2["player"] := R3
 50 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 51 [-]: GETUPVAL  R3 U1        ; R3 := U1
 52 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["player"]
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: TEST      R2 1         ; if R2 then PC := 64
 55 [-]: JMP       64           ; PC := 64
 56 [-]: GETUPVAL  R2 U1        ; R2 := U1
 57 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["avatar"]
 58 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x86E626FB"]
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: SELF      R3 R0 K14    ; R4 := R0; R3 := R0["0x86E626FB"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 112
 63 [-]: JMP       112          ; PC := 112
 64 [-]: GETUPVAL  R2 U1        ; R2 := U1
 65 [-]: GETUPVAL  R3 U1        ; R3 := U1
 66 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 67 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3["0xFA66CF82"]
 68 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 69 [-]: SETTABLE  R2 K15 R3    ; R2["name"] := R3
 70 [-]: GETUPVAL  R2 U1        ; R2 := U1
 71 [-]: GETUPVAL  R3 U1        ; R3 := U1
 72 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["avatar"]
 73 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x5749EDEC"]
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x5EC7A3D2"]
 76 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 77 [-]: SETTABLE  R2 K17 R3    ; R2["desc"] := R3
 78 [-]: GETGLOBAL R2 K20       ; R2 := string
 79 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["0xC6772A8A"]
 80 [-]: GETUPVAL  R3 U1        ; R3 := U1
 81 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["desc"]
 82 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 83 [-]: LT        0 K22 R2     ; if 0 >= R2 then PC := 94
 84 [-]: JMP       94           ; PC := 94
 85 [-]: GETUPVAL  R2 U1        ; R2 := U1
 86 [-]: GETGLOBAL R3 K23       ; R3 := mMovie
 87 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 88 [-]: GETUPVAL  R5 U1        ; R5 := U1
 89 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["desc"]
 90 [-]: MOVE      R6 R1        ; R6 := R1
 91 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 92 [-]: SETTABLE  R2 K17 R3    ; R2["desc"] := R3
 93 [-]: JMP       140          ; PC := 140
 94 [-]: GETUPVAL  R2 U1        ; R2 := U1
 95 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["name"]
 96 [-]: EQ        1 R2 K25     ; if R2 == "" then PC := 140
 97 [-]: JMP       140          ; PC := 140
 98 [-]: GETGLOBAL R2 K26       ; R2 := gFlashMgr
 99 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0x2803B896"]
100 [-]: LOADK     R4 K28       ; R4 := "INSPECT"
101 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
102 [-]: EQ        1 R2 K25     ; if R2 == "" then PC := 140
103 [-]: JMP       140          ; PC := 140
104 [-]: GETUPVAL  R2 U1        ; R2 := U1
105 [-]: GETGLOBAL R3 K23       ; R3 := mMovie
106 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x5DB0BD4"]
107 [-]: LOADK     R5 K29       ; R5 := "/Lotus/Language/Menu/InspectPlayer"
108 [-]: MOVE      R6 R1        ; R6 := R1
109 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
110 [-]: SETTABLE  R2 K17 R3    ; R2["desc"] := R3
111 [-]: JMP       140          ; PC := 140
112 [-]: GETUPVAL  R2 U1        ; R2 := U1
113 [-]: GETUPVAL  R3 U5        ; R3 := U5
114 [-]: GETUPVAL  R4 U1        ; R4 := U1
115 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["player"]
116 [-]: CALL      R3 2 2       ; R3 := R3(R4)
117 [-]: SETTABLE  R2 K15 R3    ; R2["name"] := R3
118 [-]: GETUPVAL  R2 U1        ; R2 := U1
119 [-]: SETTABLE  R2 K30 K11   ; R2["sameFaction"] := "0x1"
120 [-]: GETGLOBAL R2 K26       ; R2 := gFlashMgr
121 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0x2803B896"]
122 [-]: LOADK     R4 K28       ; R4 := "INSPECT"
123 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
124 [-]: EQ        1 R2 K25     ; if R2 == "" then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: GETUPVAL  R2 U1        ; R2 := U1
127 [-]: GETGLOBAL R3 K23       ; R3 := mMovie
128 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x5DB0BD4"]
129 [-]: LOADK     R5 K29       ; R5 := "/Lotus/Language/Menu/InspectPlayer"
130 [-]: MOVE      R6 R1        ; R6 := R1
131 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
132 [-]: SETTABLE  R2 K17 R3    ; R2["desc"] := R3
133 [-]: JMP       140          ; PC := 140
134 [-]: GETUPVAL  R2 U1        ; R2 := U1
135 [-]: SETTABLE  R2 K12 K31   ; R2["player"] := nil
136 [-]: GETUPVAL  R2 U1        ; R2 := U1
137 [-]: SETTABLE  R2 K30 K32   ; R2["sameFaction"] := "0x0"
138 [-]: GETUPVAL  R2 U1        ; R2 := U1
139 [-]: SETTABLE  R2 K15 K25   ; R2["name"] := ""
140 [-]: GETGLOBAL R2 K23       ; R2 := mMovie
141 [-]: SELF      R2 R2 K33    ; R3 := R2; R2 := R2["0xD6A79FE9"]
142 [-]: LOADK     R4 K34       ; R4 := "TargetStatus.Name"
143 [-]: LOADK     R5 K35       ; R5 := "text"
144 [-]: GETUPVAL  R6 U1        ; R6 := U1
145 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["name"]
146 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
147 [-]: GETGLOBAL R2 K23       ; R2 := mMovie
148 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2["0x1C19D966"]
149 [-]: LOADK     R4 K34       ; R4 := "TargetStatus.Name"
150 [-]: LOADK     R5 K37       ; R5 := "_visible"
151 [-]: MOVE      R6 R1        ; R6 := R1
152 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
153 [-]: GETUPVAL  R2 U1        ; R2 := U1
154 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["desc"]
155 [-]: EQ        1 R2 K31     ; if R2 == nil then PC := 171
156 [-]: JMP       171          ; PC := 171
157 [-]: GETGLOBAL R2 K23       ; R2 := mMovie
158 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2["0x1C19D966"]
159 [-]: LOADK     R4 K38       ; R4 := "TargetStatus.Desc"
160 [-]: LOADK     R5 K35       ; R5 := "text"
161 [-]: GETUPVAL  R6 U1        ; R6 := U1
162 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["desc"]
163 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
164 [-]: GETGLOBAL R2 K23       ; R2 := mMovie
165 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2["0x1C19D966"]
166 [-]: LOADK     R4 K38       ; R4 := "TargetStatus.Desc"
167 [-]: LOADK     R5 K37       ; R5 := "_visible"
168 [-]: MOVE      R6 R1        ; R6 := R1
169 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
170 [-]: JMP       177          ; PC := 177
171 [-]: GETGLOBAL R2 K23       ; R2 := mMovie
172 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2["0x1C19D966"]
173 [-]: LOADK     R4 K38       ; R4 := "TargetStatus.Desc"
174 [-]: LOADK     R5 K37       ; R5 := "_visible"
175 [-]: MOVE      R6 R0        ; R6 := R0
176 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
177 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3416
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x80B14403"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x8DB5D01F"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD2399495"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: SETTABLE  R2 K4 K5     ; R2["valid"] := "0x0"
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: SETTABLE  R2 K6 K7     ; R2["name"] := ""
 24 [-]: GETUPVAL  R2 U1        ; R2 := U1
 25 [-]: SETTABLE  R2 K8 K9     ; R2["desc"] := nil
 26 [-]: GETUPVAL  R2 U1        ; R2 := U1
 27 [-]: SETTABLE  R2 K10 K9    ; R2["player"] := nil
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETUPVAL  R4 U1        ; R4 := U1
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["0xABC89504"]
 33 [-]: MOVE      R6 R1        ; R6 := R1
 34 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 35 [-]: SETTABLE  R4 K13 R7    ; R4["hitProxy"] := R7
 36 [-]: SETTABLE  R3 K12 R6    ; R3["avatar"] := R6
 37 [-]: SETTABLE  R2 K11 R5    ; R2["deco"] := R5
 38 [-]: GETUPVAL  R2 U3        ; R2 := U3
 39 [-]: CALL      R2 1 1       ; R2()
 40 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3436
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R1 K2 R2     ; R1["Avatar"] := R2
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: SETTABLE  R1 K3 R2     ; R1["Controllers"] := R2
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: SETTABLE  R1 K4 R2     ; R1["Weapon"] := R2
  9 [-]: SETTABLE  R0 K1 R1     ; R0["ScanUpdateParms"] := R1
 10 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U3        ; R1 := U3
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 34
 14 [-]: JMP       34           ; PC := 34
 15 [-]: GETGLOBAL R0 K6        ; R0 := mMovie
 16 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x7C1F5A97"]
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0["0x8109F422"]
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: MOVE      R1 R3        ; R1 := R3
 28 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 29 [-]: GETUPVAL  R2 U3        ; R2 := U3
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: TEST      R1 0         ; if not R1 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: GETUPVAL  R1 U3        ; R1 := U3
 35 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x464AF503"]
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: GETGLOBAL R2 K0        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ScanUpdateParms"]
 39 [-]: NEWTABLE  R3 0 4       ; R3 := {}
 40 [-]: GETTABLE  R4 R1 K11    ; R4 := R1["mActive"]
 41 [-]: SETTABLE  R3 K11 R4    ; R3["mActive"] := R4
 42 [-]: GETTABLE  R4 R1 K12    ; R4 := R1["mPtr"]
 43 [-]: SETTABLE  R3 K12 R4    ; R3["mPtr"] := R4
 44 [-]: GETTABLE  R4 R1 K13    ; R4 := R1["mAvatar"]
 45 [-]: SETTABLE  R3 K13 R4    ; R3["mAvatar"] := R4
 46 [-]: GETTABLE  R4 R1 K14    ; R4 := R1["mName"]
 47 [-]: SETTABLE  R3 K14 R4    ; R3["mName"] := R4
 48 [-]: SETTABLE  R2 K10 R3    ; R2["CurrentTarget"] := R3
 49 [-]: GETGLOBAL R2 K0        ; R2 := _T
 50 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ScanUpdateParms"]
 51 [-]: GETUPVAL  R3 U4        ; R3 := U4
 52 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0xF81722A2"]
 53 [-]: GETTABLE  R4 R1 K11    ; R4 := R1["mActive"]
 54 [-]: LOADK     R5 K17       ; R5 := 1
 55 [-]: LOADNIL   R6 R6        ; R6 := nil
 56 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 57 [-]: SETTABLE  R2 K15 R3    ; R2["ActiveTargetIndex"] := R3
 58 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3453
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3458
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADK     R3 K1        ; R3 := "HRVoidTearList"
  4 [-]: GETUPVAL  R4 U2        ; R4 := U2
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HT_ICON_BAR"]
  6 [-]: LOADK     R5 K3        ; R5 := 0.5
  7 [-]: LOADK     R6 K4        ; R6 := 1
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 10 [-]: SETTABLE  R1 K0 R2     ; R1["VoidTearListTracker"] := R2
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xDA4AD912"]
 14 [-]: LOADK     R2 K6        ; R2 := 0
 15 [-]: LOADK     R3 K7        ; R3 := -15
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 19 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["List"]
 20 [-]: SETTABLE  R1 K9 K6     ; R1["mCurrProgress"] := 0
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 23 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["List"]
 24 [-]: GETUPVAL  R2 U3        ; R2 := U3
 25 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0x97B78441"]
 26 [-]: GETGLOBAL R3 K12       ; R3 := _G
 27 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["UIColor_Red"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SETTABLE  R1 K10 R2    ; R1["mCompletedColorObj"] := R2
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 32 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["0xBA336C78"]
 33 [-]: CLOSURE   R2 0         ; R2 := closure(Function #93.1)
 34 [-]: GETUPVAL  R0 U3        ; R0 := U3
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: GETUPVAL  R1 U0        ; R1 := U0
 37 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 38 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["0x6DEF39F7"]
 39 [-]: CALL      R1 1 1       ; R1()
 40 [-]: GETUPVAL  R1 U0        ; R1 := U0
 41 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["VoidTearListTracker"]
 42 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["List"]
 43 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x6470BAF4"]
 44 [-]: CALL      R1 2 1       ; R1(R2)
 45 [-]: GETGLOBAL R1 K17       ; R1 := 0x400E7765
 46 [-]: GETUPVAL  R2 U0        ; R2 := U0
 47 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["VoidTearTitleTracker"]
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 67
 50 [-]: JMP       67           ; PC := 67
 51 [-]: GETUPVAL  R1 U0        ; R1 := U0
 52 [-]: GETUPVAL  R2 U1        ; R2 := U1
 53 [-]: LOADK     R3 K19       ; R3 := "HRVoidTearTitle"
 54 [-]: GETUPVAL  R4 U2        ; R4 := U2
 55 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["HT_LABEL"]
 56 [-]: LOADK     R5 K3        ; R5 := 0.5
 57 [-]: LOADK     R6 K4        ; R6 := 1
 58 [-]: MOVE      R7 R0        ; R7 := R0
 59 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 60 [-]: SETTABLE  R1 K18 R2    ; R1["VoidTearTitleTracker"] := R2
 61 [-]: GETUPVAL  R1 U0        ; R1 := U0
 62 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["VoidTearTitleTracker"]
 63 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xDA4AD912"]
 64 [-]: LOADK     R2 K6        ; R2 := 0
 65 [-]: LOADK     R3 K21       ; R3 := -20
 66 [-]: CALL      R1 3 1       ; R1(R2,R3)
 67 [-]: RETURN    R0 1         ; return 


; Function #93.1:
;
; Name:            
; Defined at line: 3464
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETTABLE  R4 R2 K1     ; R4 := R2["mClipName"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 52
  5 [-]: JMP       52           ; PC := 52
  6 [-]: SELF      R3 R0 K2     ; R4 := R0; R3 := R0["0x7E1F26D7"]
  7 [-]: GETTABLE  R5 R2 K1     ; R5 := R2["mClipName"]
  8 [-]: LOADK     R6 K3        ; R6 := ".Bg"
  9 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 10 [-]: GETGLOBAL R6 K4        ; R6 := _G
 11 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIMaterial_RectangleNoDepth"]
 12 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 13 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["Id"]
 14 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["mCurrProgress"]
 15 [-]: LE        1 R3 R4      ; if R3 <= R4 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xF81722A2"]
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: LOADK     R6 K9        ; R6 := 0.5
 23 [-]: LOADK     R7 K10       ; R7 := 0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0xF81722A2"]
 27 [-]: MOVE      R6 R3        ; R6 := R3
 28 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["mCompletedColorObj"]
 29 [-]: GETGLOBAL R8 K4        ; R8 := _G
 30 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["UIColorObject_White"]
 31 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 32 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0["0x302AAB2F"]
 33 [-]: GETTABLE  R8 R2 K1     ; R8 := R2["mClipName"]
 34 [-]: LOADK     R9 K3        ; R9 := ".Bg"
 35 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 36 [-]: LOADK     R9 K14       ; R9 := "RectInnerColor"
 37 [-]: GETTABLE  R10 R5 K15   ; R10 := R5["r"]
 38 [-]: GETTABLE  R11 R5 K16   ; R11 := R5["g"]
 39 [-]: GETTABLE  R12 R5 K17   ; R12 := R5["b"]
 40 [-]: MOVE      R13 R4       ; R13 := R4
 41 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
 42 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0["0x302AAB2F"]
 43 [-]: GETTABLE  R8 R2 K1     ; R8 := R2["mClipName"]
 44 [-]: LOADK     R9 K3        ; R9 := ".Bg"
 45 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 46 [-]: LOADK     R9 K18       ; R9 := "RectEdgeColor"
 47 [-]: GETTABLE  R10 R5 K15   ; R10 := R5["r"]
 48 [-]: GETTABLE  R11 R5 K16   ; R11 := R5["g"]
 49 [-]: GETTABLE  R12 R5 K17   ; R12 := R5["b"]
 50 [-]: LOADK     R13 K19      ; R13 := 0.89999997615814
 51 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
 52 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3486
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: LOADK     R2 K0        ; R2 := "<p><font face=\"Noto Sans\" size=\"14\"><b>"
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xF81722A2"]
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Title"]
  6 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: LOADK     R5 K4        ; R5 := ""
 11 [-]: GETGLOBAL R6 K5        ; R6 := 0xE6DC43B0
 12 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["Title"]
 13 [-]: MOVE      R8 R0        ; R8 := R0
 14 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 15 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 16 [-]: LOADK     R4 K6        ; R4 := "</b></font></p>"
 17 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["VoidTearTitleTracker"]
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x37B51F78"]
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 1       ; R3(R4)
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["VoidTearListTracker"]
 25 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["NeedsInit"]
 26 [-]: TEST      R3 1         ; if R3 then PC := 55
 27 [-]: JMP       55           ; PC := 55
 28 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["Total"]
 29 [-]: GETUPVAL  R4 U1        ; R4 := U1
 30 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["VoidTearListTracker"]
 31 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["List"]
 32 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0xC51A5C9D"]
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["VoidTearListTracker"]
 38 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["0xC1C06028"]
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: MOVE      R5 R1        ; R5 := R1
 41 [-]: CALL      R3 3 1       ; R3(R4,R5)
 42 [-]: LOADK     R3 K15       ; R3 := 1
 43 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["Total"]
 44 [-]: LOADK     R5 K15       ; R5 := 1
 45 [-]: FORPREP   R3 53        ; R3 -= R5; PC := 53
 46 [-]: GETUPVAL  R7 U1        ; R7 := U1
 47 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 48 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["0xA2331E78"]
 49 [-]: LOADNIL   R8 R8        ; R8 := nil
 50 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 51 [-]: SETTABLE  R9 K17 K18   ; R9["Rotation"] := 45
 52 [-]: CALL      R7 3 1       ; R7(R8,R9)
 53 [-]: FORLOOP   R3 46        ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
 54 [-]: MOVE      R1 R1        ; R1 := R1
 55 [-]: GETTABLE  R7 R0 K19    ; R7 := R0["Curr"]
 56 [-]: GETUPVAL  R8 U1        ; R8 := U1
 57 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["VoidTearListTracker"]
 58 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["List"]
 59 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["mCurrProgress"]
 60 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 72
 61 [-]: JMP       72           ; PC := 72
 62 [-]: GETUPVAL  R7 U1        ; R7 := U1
 63 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 64 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["List"]
 65 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["Curr"]
 66 [-]: SETTABLE  R7 K20 R8    ; R7["mCurrProgress"] := R8
 67 [-]: GETUPVAL  R7 U1        ; R7 := U1
 68 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 69 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["0x6DEF39F7"]
 70 [-]: CALL      R7 1 1       ; R7()
 71 [-]: MOVE      R1 R1        ; R1 := R1
 72 [-]: TEST      R1 0         ; if not R1 then PC := 82
 73 [-]: JMP       82           ; PC := 82
 74 [-]: GETUPVAL  R7 U1        ; R7 := U1
 75 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["VoidTearListTracker"]
 76 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["List"]
 77 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7["0x6470BAF4"]
 78 [-]: LOADNIL   R9 R9        ; R9 := nil
 79 [-]: MOVE      R10 R1       ; R10 := R1
 80 [-]: MOVE      R11 R1       ; R11 := R1
 81 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 82 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3512
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["VoidTearProgress"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 32
  4 [-]: JMP       32           ; PC := 32
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["GreedWagerProgress"]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 32
  8 [-]: JMP       32           ; PC := 32
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 32
 12 [-]: JMP       32           ; PC := 32
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VoidTearTracker"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: SETTABLE  R1 K4 K2     ; R1["VoidTearTracker"] := nil
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VoidTearTitleTracker"]
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: SETTABLE  R1 K5 K2     ; R1["VoidTearTitleTracker"] := nil
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VoidTearListTracker"]
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: SETTABLE  R1 K6 K2     ; R1["VoidTearListTracker"] := nil
 31 [-]: JMP       145          ; PC := 145
 32 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 145
 33 [-]: JMP       145          ; PC := 145
 34 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["List"]
 35 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 49
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETGLOBAL R1 K8        ; R1 := 0x400E7765
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VoidTearListTracker"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: TEST      R1 0         ; if not R1 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: GETUPVAL  R1 U2        ; R1 := U2
 44 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["List"]
 45 [-]: CALL      R1 2 1       ; R1(R2)
 46 [-]: GETUPVAL  R1 U3        ; R1 := U3
 47 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["List"]
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: GETGLOBAL R1 K8        ; R1 := 0x400E7765
 50 [-]: GETUPVAL  R2 U0        ; R2 := U0
 51 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VoidTearTracker"]
 52 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 53 [-]: TEST      R1 0         ; if not R1 then PC := 65
 54 [-]: JMP       65           ; PC := 65
 55 [-]: GETUPVAL  R1 U0        ; R1 := U0
 56 [-]: GETUPVAL  R2 U4        ; R2 := U4
 57 [-]: LOADK     R3 K9        ; R3 := "HRVoidTear"
 58 [-]: GETUPVAL  R4 U5        ; R4 := U5
 59 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["HT_PROGRESS_BAR"]
 60 [-]: LOADK     R5 K11       ; R5 := 0.5
 61 [-]: LOADK     R6 K12       ; R6 := 1
 62 [-]: MOVE      R7 R0        ; R7 := R0
 63 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 64 [-]: SETTABLE  R1 K4 R2     ; R1["VoidTearTracker"] := R2
 65 [-]: GETUPVAL  R1 U6        ; R1 := U6
 66 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["UpdateOverrides"]
 67 [-]: TEST      R1 0         ; if not R1 then PC := 121
 68 [-]: JMP       121          ; PC := 121
 69 [-]: GETUPVAL  R1 U6        ; R1 := U6
 70 [-]: SETTABLE  R1 K13 K2    ; R1["UpdateOverrides"] := nil
 71 [-]: GETUPVAL  R1 U0        ; R1 := U0
 72 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 73 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["0x37B51F78"]
 74 [-]: GETUPVAL  R2 U6        ; R2 := U6
 75 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["Message"]
 76 [-]: CALL      R1 2 1       ; R1(R2)
 77 [-]: GETUPVAL  R1 U0        ; R1 := U0
 78 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 79 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["0xACE7582B"]
 80 [-]: GETUPVAL  R2 U6        ; R2 := U6
 81 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Icon"]
 82 [-]: CALL      R1 2 1       ; R1(R2)
 83 [-]: GETUPVAL  R1 U6        ; R1 := U6
 84 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["Tint"]
 85 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 111
 86 [-]: JMP       111          ; PC := 111
 87 [-]: GETUPVAL  R1 U0        ; R1 := U0
 88 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 89 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["0x2B89DAF7"]
 90 [-]: GETUPVAL  R2 U6        ; R2 := U6
 91 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Tint"]
 92 [-]: CALL      R1 2 1       ; R1(R2)
 93 [-]: GETUPVAL  R1 U0        ; R1 := U0
 94 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
 95 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["0xD9C32B1C"]
 96 [-]: GETUPVAL  R2 U6        ; R2 := U6
 97 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Tint"]
 98 [-]: CALL      R1 2 1       ; R1(R2)
 99 [-]: GETUPVAL  R1 U0        ; R1 := U0
100 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
101 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["0x6D9AEFA"]
102 [-]: GETUPVAL  R2 U6        ; R2 := U6
103 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Tint"]
104 [-]: CALL      R1 2 1       ; R1(R2)
105 [-]: GETUPVAL  R1 U0        ; R1 := U0
106 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
107 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["0xB3B2AA00"]
108 [-]: GETUPVAL  R2 U6        ; R2 := U6
109 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Tint"]
110 [-]: CALL      R1 2 1       ; R1(R2)
111 [-]: GETUPVAL  R1 U6        ; R1 := U6
112 [-]: GETTABLE  R1 R1 K23    ; R1 := R1["IconSize"]
113 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 121
114 [-]: JMP       121          ; PC := 121
115 [-]: GETUPVAL  R1 U0        ; R1 := U0
116 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
117 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["0x5D6DDEDF"]
118 [-]: GETUPVAL  R2 U6        ; R2 := U6
119 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["IconSize"]
120 [-]: CALL      R1 2 1       ; R1(R2)
121 [-]: GETUPVAL  R1 U0        ; R1 := U0
122 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
123 [-]: GETTABLE  R1 R1 K25    ; R1 := R1["0xA93A5B2D"]
124 [-]: GETGLOBAL R2 K26       ; R2 := mMovie
125 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2["0x5DB0BD4"]
126 [-]: LOADK     R4 K28       ; R4 := "/Lotus/Language/Menu/ProgressXOfY"
127 [-]: MOVE      R5 R1        ; R5 := R1
128 [-]: NEWTABLE  R6 0 2       ; R6 := {}
129 [-]: GETTABLE  R7 R0 K30    ; R7 := R0["Curr"]
130 [-]: SETTABLE  R6 K29 R7    ; R6["CURRENT"] := R7
131 [-]: GETTABLE  R7 R0 K32    ; R7 := R0["Total"]
132 [-]: SETTABLE  R6 K31 R7    ; R6["TOTAL"] := R7
133 [-]: CALL      R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
134 [-]: CALL      R1 0 1       ; R1(R2,...)
135 [-]: GETTABLE  R1 R0 K32    ; R1 := R0["Total"]
136 [-]: LT        0 K33 R1     ; if 0 >= R1 then PC := 145
137 [-]: JMP       145          ; PC := 145
138 [-]: GETUPVAL  R1 U0        ; R1 := U0
139 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VoidTearTracker"]
140 [-]: GETTABLE  R1 R1 K34    ; R1 := R1["0x6733C272"]
141 [-]: GETTABLE  R2 R0 K30    ; R2 := R0["Curr"]
142 [-]: GETTABLE  R3 R0 K32    ; R3 := R0["Total"]
143 [-]: DIV       R2 R2 R3     ; R2 := R2 / R3
144 [-]: CALL      R1 2 1       ; R1(R2)
145 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3555
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["GreedWagerProgress"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 164
  4 [-]: JMP       164          ; PC := 164
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  8 [-]: LOADK     R4 K4        ; R4 := "/Lotus/Language/Game/PveGreedCarryingPoints"
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 11 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["Carrying"]
 12 [-]: SETTABLE  R6 K5 R7     ; R6["val"] := R7
 13 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 14 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["NoGoal"]
 15 [-]: TEST      R3 0         ; if not R3 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["Completed"]
 20 [-]: TEST      R3 1         ; if R3 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 23 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 24 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Language/Menu/ProgressXOfY"
 25 [-]: MOVE      R6 R1        ; R6 := R1
 26 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 27 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["Curr"]
 28 [-]: SETTABLE  R7 K10 R8    ; R7["CURRENT"] := R8
 29 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["Total"]
 30 [-]: SETTABLE  R7 K12 R8    ; R7["TOTAL"] := R8
 31 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 32 [-]: MOVE      R1 R3        ; R1 := R3
 33 [-]: JMP       35           ; PC := 35
 34 [-]: GETTABLE  R1 R0 K14    ; R1 := R0["CompletedText"]
 35 [-]: MOVE      R3 R1        ; R3 := R1
 36 [-]: LOADK     R4 K15       ; R4 := "\r\n"
 37 [-]: MOVE      R5 R2        ; R5 := R2
 38 [-]: CONCAT    R1 R3 R5     ; R1 := R3 .. R4 .. R5
 39 [-]: GETTABLE  R3 R0 K16    ; R3 := R0["Bonus"]
 40 [-]: LT        0 K17 R3     ; if 0 >= R3 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: LOADK     R3 K15       ; R3 := "\r\n"
 43 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 44 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 45 [-]: LOADK     R6 K18       ; R6 := "/Lotus/Language/Game/PveGreedCarryingBonus"
 46 [-]: MOVE      R7 R1        ; R7 := R1
 47 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 48 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["Bonus"]
 49 [-]: SETTABLE  R8 K5 R9     ; R8["val"] := R9
 50 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 51 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 52 [-]: MOVE      R4 R1        ; R4 := R1
 53 [-]: MOVE      R5 R3        ; R5 := R3
 54 [-]: CONCAT    R1 R4 R5     ; R1 := R4 .. R5
 55 [-]: GETUPVAL  R4 U0        ; R4 := U0
 56 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 57 [-]: EQ        0 R4 K20     ; if R4 ~= nil then PC := 69
 58 [-]: JMP       69           ; PC := 69
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETUPVAL  R5 U1        ; R5 := U1
 61 [-]: LOADK     R6 K21       ; R6 := "HRVoidTear"
 62 [-]: GETUPVAL  R7 U2        ; R7 := U2
 63 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["HT_PROGRESS_BAR"]
 64 [-]: LOADK     R8 K23       ; R8 := 0.5
 65 [-]: LOADK     R9 K24       ; R9 := 1
 66 [-]: MOVE      R10 R0       ; R10 := R0
 67 [-]: CALL      R5 6 2       ; R5 := R5(R6,R7,R8,R9,R10)
 68 [-]: SETTABLE  R4 K19 R5    ; R4["VoidTearTracker"] := R5
 69 [-]: GETUPVAL  R4 U3        ; R4 := U3
 70 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["UpdateOverrides"]
 71 [-]: TEST      R4 0         ; if not R4 then PC := 125
 72 [-]: JMP       125          ; PC := 125
 73 [-]: GETUPVAL  R4 U3        ; R4 := U3
 74 [-]: SETTABLE  R4 K25 K20   ; R4["UpdateOverrides"] := nil
 75 [-]: GETUPVAL  R4 U0        ; R4 := U0
 76 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 77 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["0x37B51F78"]
 78 [-]: GETUPVAL  R5 U3        ; R5 := U3
 79 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["Message"]
 80 [-]: CALL      R4 2 1       ; R4(R5)
 81 [-]: GETUPVAL  R4 U0        ; R4 := U0
 82 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 83 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["0xACE7582B"]
 84 [-]: GETUPVAL  R5 U3        ; R5 := U3
 85 [-]: GETTABLE  R5 R5 K29    ; R5 := R5["Icon"]
 86 [-]: CALL      R4 2 1       ; R4(R5)
 87 [-]: GETUPVAL  R4 U3        ; R4 := U3
 88 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["Tint"]
 89 [-]: EQ        1 R4 K20     ; if R4 == nil then PC := 115
 90 [-]: JMP       115          ; PC := 115
 91 [-]: GETUPVAL  R4 U0        ; R4 := U0
 92 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 93 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["0x2B89DAF7"]
 94 [-]: GETUPVAL  R5 U3        ; R5 := U3
 95 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["Tint"]
 96 [-]: CALL      R4 2 1       ; R4(R5)
 97 [-]: GETUPVAL  R4 U0        ; R4 := U0
 98 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
 99 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["0xD9C32B1C"]
100 [-]: GETUPVAL  R5 U3        ; R5 := U3
101 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["Tint"]
102 [-]: CALL      R4 2 1       ; R4(R5)
103 [-]: GETUPVAL  R4 U0        ; R4 := U0
104 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
105 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["0x6D9AEFA"]
106 [-]: GETUPVAL  R5 U3        ; R5 := U3
107 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["Tint"]
108 [-]: CALL      R4 2 1       ; R4(R5)
109 [-]: GETUPVAL  R4 U0        ; R4 := U0
110 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
111 [-]: GETTABLE  R4 R4 K34    ; R4 := R4["0xB3B2AA00"]
112 [-]: GETUPVAL  R5 U3        ; R5 := U3
113 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["Tint"]
114 [-]: CALL      R4 2 1       ; R4(R5)
115 [-]: GETUPVAL  R4 U3        ; R4 := U3
116 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["IconSize"]
117 [-]: EQ        1 R4 K20     ; if R4 == nil then PC := 125
118 [-]: JMP       125          ; PC := 125
119 [-]: GETUPVAL  R4 U0        ; R4 := U0
120 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
121 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["0x5D6DDEDF"]
122 [-]: GETUPVAL  R5 U3        ; R5 := U3
123 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["IconSize"]
124 [-]: CALL      R4 2 1       ; R4(R5)
125 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["Completed"]
126 [-]: TEST      R4 1         ; if R4 then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["NoGoal"]
129 [-]: TEST      R4 1         ; if R4 then PC := 139
130 [-]: JMP       139          ; PC := 139
131 [-]: GETUPVAL  R4 U0        ; R4 := U0
132 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
133 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["0x6733C272"]
134 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["Curr"]
135 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["Total"]
136 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
137 [-]: CALL      R4 2 1       ; R4(R5)
138 [-]: JMP       144          ; PC := 144
139 [-]: GETUPVAL  R4 U0        ; R4 := U0
140 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
141 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["0x6733C272"]
142 [-]: LOADK     R5 K24       ; R5 := 1
143 [-]: CALL      R4 2 1       ; R4(R5)
144 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["NoGoal"]
145 [-]: TEST      R4 0         ; if not R4 then PC := 159
146 [-]: JMP       159          ; PC := 159
147 [-]: GETUPVAL  R4 U0        ; R4 := U0
148 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
149 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["0x37B51F78"]
150 [-]: MOVE      R5 R1        ; R5 := R1
151 [-]: LOADK     R6 K24       ; R6 := 1
152 [-]: CALL      R4 3 1       ; R4(R5,R6)
153 [-]: GETUPVAL  R4 U0        ; R4 := U0
154 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
155 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["0xA93A5B2D"]
156 [-]: LOADK     R5 K39       ; R5 := ""
157 [-]: CALL      R4 2 1       ; R4(R5)
158 [-]: JMP       164          ; PC := 164
159 [-]: GETUPVAL  R4 U0        ; R4 := U0
160 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VoidTearTracker"]
161 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["0xA93A5B2D"]
162 [-]: MOVE      R5 R1        ; R5 := R1
163 [-]: CALL      R4 2 1       ; R4(R5)
164 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3609
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 114
  5 [-]: JMP       114          ; PC := 114
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC942D6DE"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 114
 10 [-]: JMP       114          ; PC := 114
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x4A110D13"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K3        ; R1 := 0x63B09107
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["List"]
 17 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["Local"]
 20 [-]: TEST      R6 1         ; if R6 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: SETTABLE  R5 K6 K7     ; R5["NoDataReceived"] := "0x1"
 23 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 19; R3 := R4 end
 24 [-]: JMP       19           ; PC := 19
 25 [-]: GETGLOBAL R6 K3        ; R6 := 0x63B09107
 26 [-]: MOVE      R7 R0        ; R7 := R0
 27 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 28 [-]: JMP       88           ; PC := 88
 29 [-]: MOVE      R11 R0       ; R11 := R0
 30 [-]: GETTABLE  R12 R10 K8   ; R12 := R10["mDirty"]
 31 [-]: TEST      R12 0        ; if not R12 then PC := 73
 32 [-]: JMP       73           ; PC := 73
 33 [-]: GETGLOBAL R12 K9       ; R12 := cjson
 34 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x8A2E8315"]
 35 [-]: GETTABLE  R13 R10 K11  ; R13 := R10["mData"]
 36 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 37 [-]: GETTABLE  R13 R10 K12  ; R13 := R10["mEntity"]
 38 [-]: GETGLOBAL R14 K0       ; R14 := 0x400E7765
 39 [-]: MOVE      R15 R12      ; R15 := R12
 40 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 41 [-]: TEST      R14 1        ; if R14 then PC := 73
 42 [-]: JMP       73           ; PC := 73
 43 [-]: MOVE      R11 R1       ; R11 := R1
 44 [-]: GETUPVAL  R14 U2       ; R14 := U2
 45 [-]: GETTABLE  R15 R10 K13  ; R15 := R10["mName"]
 46 [-]: GETTABLE  R16 R12 K14  ; R16 := R12["Type"]
 47 [-]: GETTABLE  R17 R12 K15  ; R17 := R12["FadeTime"]
 48 [-]: GETTABLE  R18 R12 K16  ; R18 := R12["SortPriority"]
 49 [-]: MOVE      R19 R1       ; R19 := R1
 50 [-]: LOADNIL   R20 R20      ; R20 := nil
 51 [-]: MOVE      R21 R0       ; R21 := R0
 52 [-]: CALL      R14 8 2      ; R14 := R14(R15,R16,R17,R18,R19,R20,R21)
 53 [-]: SETTABLE  R14 K6 K17   ; R14["NoDataReceived"] := nil
 54 [-]: GETTABLE  R15 R14 K18  ; R15 := R14["0x714325CA"]
 55 [-]: MOVE      R16 R12      ; R16 := R12
 56 [-]: MOVE      R17 R13      ; R17 := R13
 57 [-]: CALL      R15 3 1      ; R15(R16,R17)
 58 [-]: GETTABLE  R15 R12 K14  ; R15 := R12["Type"]
 59 [-]: GETUPVAL  R16 U3       ; R16 := U3
 60 [-]: GETTABLE  R16 R16 K19  ; R16 := R16["HT_HEALTH_TRACKER"]
 61 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 73
 62 [-]: JMP       73           ; PC := 73
 63 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
 64 [-]: MOVE      R16 R13      ; R16 := R13
 65 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 66 [-]: TEST      R15 0        ; if not R15 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: GETUPVAL  R15 U0       ; R15 := U0
 69 [-]: SELF      R15 R15 K20  ; R16 := R15; R15 := R15["0x7CF6E6AB"]
 70 [-]: GETTABLE  R17 R10 K13  ; R17 := R10["mName"]
 71 [-]: MOVE      R18 R1       ; R18 := R1
 72 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 73 [-]: TEST      R11 1        ; if R11 then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETGLOBAL R15 K3       ; R15 := 0x63B09107
 76 [-]: GETUPVAL  R16 U1       ; R16 := U1
 77 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["List"]
 78 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 79 [-]: JMP       86           ; PC := 86
 80 [-]: GETTABLE  R20 R19 K21  ; R20 := R19["Name"]
 81 [-]: GETTABLE  R21 R10 K13  ; R21 := R10["mName"]
 82 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: SETTABLE  R19 K6 K17   ; R19["NoDataReceived"] := nil
 85 [-]: JMP       88           ; PC := 88
 86 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 80; R17 := R18 end
 87 [-]: JMP       80           ; PC := 80
 88 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 29; R8 := R9 end
 89 [-]: JMP       29           ; PC := 29
 90 [-]: NEWTABLE  R20 0 0      ; R20 := {}
 91 [-]: GETGLOBAL R21 K3       ; R21 := 0x63B09107
 92 [-]: GETUPVAL  R22 U1       ; R22 := U1
 93 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["List"]
 94 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
 95 [-]: JMP       104          ; PC := 104
 96 [-]: GETTABLE  R26 R25 K6   ; R26 := R25["NoDataReceived"]
 97 [-]: TEST      R26 0        ; if not R26 then PC := 104
 98 [-]: JMP       104          ; PC := 104
 99 [-]: GETGLOBAL R26 K22      ; R26 := table
100 [-]: GETTABLE  R26 R26 K23  ; R26 := R26["0xE6450C9D"]
101 [-]: MOVE      R27 R20      ; R27 := R20
102 [-]: GETTABLE  R28 R25 K21  ; R28 := R25["Name"]
103 [-]: CALL      R26 3 1      ; R26(R27,R28)
104 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 96; R23 := R24 end
105 [-]: JMP       96           ; PC := 96
106 [-]: LOADK     R26 K24      ; R26 := 1
107 [-]: LEN       R27 R20      ; R27 := # R20
108 [-]: LOADK     R28 K24      ; R28 := 1
109 [-]: FORPREP   R26 113      ; R26 -= R28; PC := 113
110 [-]: GETUPVAL  R30 U4       ; R30 := U4
111 [-]: GETTABLE  R31 R20 R29  ; R31 := R20[R29]
112 [-]: CALL      R30 2 1      ; R30(R31)
113 [-]: FORLOOP   R26 110      ; R26 += R28; if R26 <= R27 then begin PC := 110; R29 := R26 end
114 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3656
; #Upvalues:       8
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R2 K0        ; R2 := _G
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["StalkerMode"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UIMode"]
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UI_MODE_IN_DOJO"]
 10 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 90
 11 [-]: JMP       90           ; PC := 90
 12 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x72E5DB62"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: LOADNIL   R3 R3        ; R3 := nil
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 37
 19 [-]: JMP       37           ; PC := 37
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0x9FAED6BC
 21 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2["0xDE4E0D11"]
 22 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 23 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 24 [-]: EQ        1 R4 K8      ; if R4 == "" then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 27 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 28 [-]: MOVE      R7 R4        ; R7 := R4
 29 [-]: MOVE      R8 R0        ; R8 := R0
 30 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 31 [-]: MOVE      R3 R5        ; R3 := R5
 32 [-]: GETUPVAL  R5 U2        ; R5 := U2
 33 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0xC022C8A8"]
 34 [-]: SELF      R7 R2 K12    ; R8 := R2; R7 := R2["0xD2079950"]
 35 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 36 [-]: CALL      R5 0 1       ; R5(R6,...)
 37 [-]: TEST      R3 0         ; if not R3 then PC := 78
 38 [-]: JMP       78           ; PC := 78
 39 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 40 [-]: GETGLOBAL R6 K13       ; R6 := _T
 41 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["DojoRoomTracker"]
 42 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 71
 44 [-]: JMP       71           ; PC := 71
 45 [-]: GETGLOBAL R5 K13       ; R5 := _T
 46 [-]: GETUPVAL  R6 U3        ; R6 := U3
 47 [-]: LOADK     R7 K15       ; R7 := "DojoRoomLabel"
 48 [-]: GETUPVAL  R8 U1        ; R8 := U1
 49 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["HT_PROGRESS_BAR"]
 50 [-]: LOADK     R9 K17       ; R9 := 0.20000000298023
 51 [-]: LOADNIL   R10 R10      ; R10 := nil
 52 [-]: MOVE      R11 R0       ; R11 := R0
 53 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 54 [-]: SETTABLE  R5 K14 R6    ; R5["DojoRoomTracker"] := R6
 55 [-]: GETGLOBAL R5 K13       ; R5 := _T
 56 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 57 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["0xE5C60225"]
 58 [-]: GETGLOBAL R6 K0        ; R6 := _G
 59 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["UIColor_DarkBlue"]
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K13       ; R5 := _T
 62 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 63 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["0x37B51F78"]
 64 [-]: LOADK     R6 K8        ; R6 := ""
 65 [-]: CALL      R5 2 1       ; R5(R6)
 66 [-]: GETGLOBAL R5 K13       ; R5 := _T
 67 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 68 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0x6733C272"]
 69 [-]: LOADK     R6 K22       ; R6 := -1
 70 [-]: CALL      R5 2 1       ; R5(R6)
 71 [-]: GETGLOBAL R5 K13       ; R5 := _T
 72 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["DojoRoomTracker"]
 73 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["0xA93A5B2D"]
 74 [-]: MOVE      R6 R3        ; R6 := R3
 75 [-]: LOADK     R7 K24       ; R7 := 1
 76 [-]: CALL      R5 3 1       ; R5(R6,R7)
 77 [-]: JMP       90           ; PC := 90
 78 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 79 [-]: GETGLOBAL R6 K13       ; R6 := _T
 80 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["DojoRoomTracker"]
 81 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 82 [-]: TEST      R5 1         ; if R5 then PC := 90
 83 [-]: JMP       90           ; PC := 90
 84 [-]: GETUPVAL  R5 U4        ; R5 := U4
 85 [-]: GETGLOBAL R6 K13       ; R6 := _T
 86 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["DojoRoomTracker"]
 87 [-]: CALL      R5 2 1       ; R5(R6)
 88 [-]: GETGLOBAL R5 K13       ; R5 := _T
 89 [-]: SETTABLE  R5 K14 K25   ; R5["DojoRoomTracker"] := nil
 90 [-]: GETGLOBAL R5 K13       ; R5 := _T
 91 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["VoidTearProgress"]
 92 [-]: TEST      R5 1         ; if R5 then PC := 98
 93 [-]: JMP       98           ; PC := 98
 94 [-]: GETUPVAL  R5 U5        ; R5 := U5
 95 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["VoidTearTracker"]
 96 [-]: EQ        1 R5 K25     ; if R5 == nil then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: GETUPVAL  R5 U6        ; R5 := U6
 99 [-]: CALL      R5 1 1       ; R5()
100 [-]: GETGLOBAL R5 K13       ; R5 := _T
101 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["GreedWagerProgress"]
102 [-]: TEST      R5 0         ; if not R5 then PC := 106
103 [-]: JMP       106          ; PC := 106
104 [-]: GETUPVAL  R5 U7        ; R5 := U7
105 [-]: CALL      R5 1 1       ; R5()
106 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3695
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x3EEB612E"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x783F5B1C"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 112
 19 [-]: JMP       112          ; PC := 112
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x8B598ED4"]
 22 [-]: GETGLOBAL R4 K7        ; R4 := petAvatarType
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: TEST      R2 1         ; if R2 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x8B598ED4"]
 28 [-]: GETGLOBAL R4 K8        ; R4 := gLotusMoaPetAvatarType
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: TEST      R2 0         ; if not R2 then PC := 112
 31 [-]: JMP       112          ; PC := 112
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x15D4DAEE"]
 34 [-]: GETGLOBAL R4 K10       ; R4 := kubrowMarker
 35 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 36 [-]: GETGLOBAL R3 K11       ; R3 := 0x63B09107
 37 [-]: MOVE      R4 R2        ; R4 := R2
 38 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 39 [-]: JMP       42           ; PC := 42
 40 [-]: SELF      R8 R7 K12    ; R9 := R7; R8 := R7["0xD4C2743F"]
 41 [-]: CALL      R8 2 1       ; R8(R9)
 42 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 40; R5 := R6 end
 43 [-]: JMP       40           ; PC := 40
 44 [-]: GETUPVAL  R8 U0        ; R8 := U0
 45 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x15D4DAEE"]
 46 [-]: GETGLOBAL R10 K13      ; R10 := catbrowMarker
 47 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 48 [-]: MOVE      R2 R8        ; R2 := R8
 49 [-]: GETGLOBAL R8 K11       ; R8 := 0x63B09107
 50 [-]: MOVE      R9 R2        ; R9 := R2
 51 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 52 [-]: JMP       55           ; PC := 55
 53 [-]: SELF      R13 R12 K12  ; R14 := R12; R13 := R12["0xD4C2743F"]
 54 [-]: CALL      R13 2 1      ; R13(R14)
 55 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 53; R10 := R11 end
 56 [-]: JMP       53           ; PC := 53
 57 [-]: GETUPVAL  R13 U0       ; R13 := U0
 58 [-]: SELF      R13 R13 K9   ; R14 := R13; R13 := R13["0x15D4DAEE"]
 59 [-]: GETGLOBAL R15 K14      ; R15 := moaPetMarker
 60 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 61 [-]: MOVE      R2 R13       ; R2 := R13
 62 [-]: GETGLOBAL R13 K11      ; R13 := 0x63B09107
 63 [-]: MOVE      R14 R2       ; R14 := R2
 64 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 65 [-]: JMP       68           ; PC := 68
 66 [-]: SELF      R18 R17 K12  ; R19 := R17; R18 := R17["0xD4C2743F"]
 67 [-]: CALL      R18 2 1      ; R18(R19)
 68 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 66; R15 := R16 end
 69 [-]: JMP       66           ; PC := 66
 70 [-]: TEST      R1 0         ; if not R1 then PC := 112
 71 [-]: JMP       112          ; PC := 112
 72 [-]: GETUPVAL  R18 U0       ; R18 := U0
 73 [-]: SELF      R18 R18 K6   ; R19 := R18; R18 := R18["0x8B598ED4"]
 74 [-]: GETGLOBAL R20 K8       ; R20 := gLotusMoaPetAvatarType
 75 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 76 [-]: TEST      R18 0        ; if not R18 then PC := 91
 77 [-]: JMP       91           ; PC := 91
 78 [-]: GETUPVAL  R18 U0       ; R18 := U0
 79 [-]: SELF      R18 R18 K15  ; R19 := R18; R18 := R18["0xAB436EF2"]
 80 [-]: GETGLOBAL R20 K14      ; R20 := moaPetMarker
 81 [-]: GETGLOBAL R21 K16      ; R21 := 0xEC274B1A
 82 [-]: LOADK     R22 K17      ; R22 := "GAME_C1_GUN1"
 83 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 84 [-]: GETGLOBAL R22 K18      ; R22 := 0x221C9700
 85 [-]: LOADK     R23 K2       ; R23 := 0
 86 [-]: LOADK     R24 K19      ; R24 := 0.30000001192093
 87 [-]: LOADK     R25 K2       ; R25 := 0
 88 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
 89 [-]: CALL      R18 0 1      ; R18(R19,...)
 90 [-]: JMP       112          ; PC := 112
 91 [-]: GETUPVAL  R18 U1       ; R18 := U1
 92 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["0xF81722A2"]
 93 [-]: GETUPVAL  R19 U0       ; R19 := U0
 94 [-]: SELF      R19 R19 K6   ; R20 := R19; R19 := R19["0x8B598ED4"]
 95 [-]: GETGLOBAL R21 K21      ; R21 := kubrowAvatarType
 96 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
 97 [-]: GETGLOBAL R20 K10      ; R20 := kubrowMarker
 98 [-]: GETGLOBAL R21 K13      ; R21 := catbrowMarker
 99 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
100 [-]: GETUPVAL  R19 U0       ; R19 := U0
101 [-]: SELF      R19 R19 K15  ; R20 := R19; R19 := R19["0xAB436EF2"]
102 [-]: MOVE      R21 R18      ; R21 := R18
103 [-]: GETGLOBAL R22 K16      ; R22 := 0xEC274B1A
104 [-]: LOADK     R23 K22      ; R23 := "GAME_C1_HEAD1"
105 [-]: CALL      R22 2 2      ; R22 := R22(R23)
106 [-]: GETGLOBAL R23 K18      ; R23 := 0x221C9700
107 [-]: LOADK     R24 K2       ; R24 := 0
108 [-]: LOADK     R25 K23      ; R25 := 0.40000000596046
109 [-]: LOADK     R26 K2       ; R26 := 0
110 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
111 [-]: CALL      R19 0 1      ; R19(R20,...)
112 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 3731
; #Upvalues:       22
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 1       ; R0()
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 0         ; if not R0 then PC := 59
 23 [-]: JMP       59           ; PC := 59
 24 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 25 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x7C1F5A97"]
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: MOVE      R0 R2        ; R0 := R2
 28 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: TEST      R0 0         ; if not R0 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: MOVE      R0 R0        ; R0 := R0
 34 [-]: RETURN    R0 2         ; return R0
 35 [-]: GETUPVAL  R0 U2        ; R0 := U2
 36 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xEF61B79B"]
 37 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 38 [-]: MOVE      R0 R3        ; R0 := R3
 39 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 40 [-]: GETUPVAL  R1 U3        ; R1 := U3
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: TEST      R0 0         ; if not R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R0 K5        ; R0 := 0x93B1256B
 45 [-]: LOADK     R1 K6        ; R1 := "HUD REDUX: null minimap"
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: LOADNIL   R0 R0        ; R0 := nil
 48 [-]: MOVE      R0 R2        ; R0 := R2
 49 [-]: MOVE      R0 R0        ; R0 := R0
 50 [-]: RETURN    R0 2         ; return R0
 51 [-]: GETUPVAL  R0 U3        ; R0 := U3
 52 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xC20CC0C2"]
 53 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 54 [-]: TEST      R0 1         ; if R0 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETUPVAL  R0 U3        ; R0 := U3
 57 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0xE3BBCC24"]
 58 [-]: CALL      R0 2 1       ; R0(R1)
 59 [-]: LOADNIL   R0 R0        ; R0 := nil
 60 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 61 [-]: GETUPVAL  R2 U4        ; R2 := U4
 62 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["CameraController"]
 63 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 64 [-]: TEST      R1 0         ; if not R1 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R1 U4        ; R1 := U4
 67 [-]: GETUPVAL  R2 U2        ; R2 := U2
 68 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x5AF30A19"]
 69 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 70 [-]: SETTABLE  R1 K9 R2     ; R1["CameraController"] := R2
 71 [-]: GETUPVAL  R1 U0        ; R1 := U0
 72 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x8B598ED4"]
 73 [-]: GETGLOBAL R3 K12       ; R3 := gLotusBasePvpGameRulesType
 74 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 75 [-]: TEST      R1 0         ; if not R1 then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: GETUPVAL  R1 U0        ; R1 := U0
 78 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1["0x232D0973"]
 79 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 80 [-]: GETUPVAL  R2 U5        ; R2 := U5
 81 [-]: GETUPVAL  R3 U5        ; R3 := U5
 82 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["IsSpectating"]
 83 [-]: SETTABLE  R2 K14 R3    ; R2["mWasSpectating"] := R3
 84 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 85 [-]: GETUPVAL  R3 U4        ; R3 := U4
 86 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["CameraController"]
 87 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 88 [-]: TEST      R2 1         ; if R2 then PC := 181
 89 [-]: JMP       181          ; PC := 181
 90 [-]: GETUPVAL  R2 U4        ; R2 := U4
 91 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["CameraController"]
 92 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x7831DA07"]
 93 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 94 [-]: TEST      R2 0         ; if not R2 then PC := 181
 95 [-]: JMP       181          ; PC := 181
 96 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 97 [-]: GETUPVAL  R3 U4        ; R3 := U4
 98 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["CameraController"]
 99 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x58C50BA3"]
100 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
101 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
102 [-]: TEST      R2 1         ; if R2 then PC := 181
103 [-]: JMP       181          ; PC := 181
104 [-]: GETUPVAL  R2 U4        ; R2 := U4
105 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["CameraController"]
106 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x58C50BA3"]
107 [-]: CALL      R2 2 2       ; R2 := R2(R3)
108 [-]: MOVE      R0 R2        ; R0 := R2
109 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
110 [-]: GETGLOBAL R3 K18       ; R3 := _T
111 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["CommanderMap"]
112 [-]: CALL      R2 2 2       ; R2 := R2(R3)
113 [-]: TEST      R2 0         ; if not R2 then PC := 132
114 [-]: JMP       132          ; PC := 132
115 [-]: GETGLOBAL R2 K20       ; R2 := gRegion
116 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x3E2F6BF"]
117 [-]: CALL      R2 2 2       ; R2 := R2(R3)
118 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 132
119 [-]: JMP       132          ; PC := 132
120 [-]: GETUPVAL  R3 U6        ; R3 := U6
121 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 132
122 [-]: JMP       132          ; PC := 132
123 [-]: GETUPVAL  R3 U3        ; R3 := U3
124 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0xE103D6D0"]
125 [-]: MOVE      R5 R0        ; R5 := R0
126 [-]: CALL      R3 3 1       ; R3(R4,R5)
127 [-]: MOVE      R0 R6        ; R0 := R6
128 [-]: GETUPVAL  R3 U6        ; R3 := U6
129 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3["0x7802BD11"]
130 [-]: MOVE      R5 R0        ; R5 := R0
131 [-]: CALL      R3 3 1       ; R3(R4,R5)
132 [-]: GETUPVAL  R3 U5        ; R3 := U5
133 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["IsSpectating"]
134 [-]: TEST      R3 1         ; if R3 then PC := 178
135 [-]: JMP       178          ; PC := 178
136 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
137 [-]: LOADK     R4 K24       ; R4 := "*** Enabling spectator mode ***"
138 [-]: CALL      R3 2 1       ; R3(R4)
139 [-]: TEST      R1 0         ; if not R1 then PC := 169
140 [-]: JMP       169          ; PC := 169
141 [-]: GETUPVAL  R3 U0        ; R3 := U0
142 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3["0x5DFBCA3F"]
143 [-]: CALL      R3 2 2       ; R3 := R3(R4)
144 [-]: GETGLOBAL R4 K26       ; R4 := Lotus_Game
145 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["PVP_MATCH_STARTED"]
146 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 155
147 [-]: JMP       155          ; PC := 155
148 [-]: GETUPVAL  R3 U0        ; R3 := U0
149 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3["0x5DFBCA3F"]
150 [-]: CALL      R3 2 2       ; R3 := R3(R4)
151 [-]: GETGLOBAL R4 K26       ; R4 := Lotus_Game
152 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["PVP_ROUND_STARTED"]
153 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 169
154 [-]: JMP       169          ; PC := 169
155 [-]: GETGLOBAL R3 K18       ; R3 := _T
156 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["gSectorWars"]
157 [-]: TEST      R3 1         ; if R3 then PC := 169
158 [-]: JMP       169          ; PC := 169
159 [-]: GETUPVAL  R3 U0        ; R3 := U0
160 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x8B598ED4"]
161 [-]: GETGLOBAL R5 K30       ; R5 := gLotusPvpGameRulesType
162 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
163 [-]: TEST      R3 1         ; if R3 then PC := 169
164 [-]: JMP       169          ; PC := 169
165 [-]: GETUPVAL  R3 U0        ; R3 := U0
166 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0x2E663A6A"]
167 [-]: MOVE      R5 R1        ; R5 := R1
168 [-]: CALL      R3 3 1       ; R3(R4,R5)
169 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
170 [-]: GETUPVAL  R4 U7        ; R4 := U7
171 [-]: CALL      R3 2 2       ; R3 := R3(R4)
172 [-]: TEST      R3 1         ; if R3 then PC := 178
173 [-]: JMP       178          ; PC := 178
174 [-]: GETUPVAL  R3 U7        ; R3 := U7
175 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3["0xA38B648B"]
176 [-]: MOVE      R5 R0        ; R5 := R0
177 [-]: CALL      R3 3 1       ; R3(R4,R5)
178 [-]: GETUPVAL  R3 U5        ; R3 := U5
179 [-]: SETTABLE  R3 K15 K33   ; R3["IsSpectating"] := "0x1"
180 [-]: JMP       272          ; PC := 272
181 [-]: GETUPVAL  R3 U5        ; R3 := U5
182 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["IsSpectating"]
183 [-]: TEST      R3 1         ; if R3 then PC := 190
184 [-]: JMP       190          ; PC := 190
185 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
186 [-]: GETUPVAL  R4 U8        ; R4 := U8
187 [-]: CALL      R3 2 2       ; R3 := R3(R4)
188 [-]: TEST      R3 0         ; if not R3 then PC := 249
189 [-]: JMP       249          ; PC := 249
190 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
191 [-]: GETGLOBAL R4 K18       ; R4 := _T
192 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["CommanderMap"]
193 [-]: CALL      R3 2 2       ; R3 := R3(R4)
194 [-]: TEST      R3 0         ; if not R3 then PC := 207
195 [-]: JMP       207          ; PC := 207
196 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
197 [-]: GETUPVAL  R4 U6        ; R4 := U6
198 [-]: CALL      R3 2 2       ; R3 := R3(R4)
199 [-]: TEST      R3 1         ; if R3 then PC := 207
200 [-]: JMP       207          ; PC := 207
201 [-]: GETUPVAL  R3 U6        ; R3 := U6
202 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3["0x7802BD11"]
203 [-]: MOVE      R5 R1        ; R5 := R1
204 [-]: CALL      R3 3 1       ; R3(R4,R5)
205 [-]: LOADNIL   R3 R3        ; R3 := nil
206 [-]: MOVE      R3 R6        ; R3 := R6
207 [-]: GETUPVAL  R3 U2        ; R3 := U2
208 [-]: SELF      R3 R3 K34    ; R4 := R3; R3 := R3["0x80B14403"]
209 [-]: CALL      R3 2 2       ; R3 := R3(R4)
210 [-]: MOVE      R0 R3        ; R0 := R3
211 [-]: TEST      R0 0         ; if not R0 then PC := 272
212 [-]: JMP       272          ; PC := 272
213 [-]: TEST      R1 0         ; if not R1 then PC := 237
214 [-]: JMP       237          ; PC := 237
215 [-]: GETUPVAL  R3 U0        ; R3 := U0
216 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3["0x5DFBCA3F"]
217 [-]: CALL      R3 2 2       ; R3 := R3(R4)
218 [-]: GETGLOBAL R4 K26       ; R4 := Lotus_Game
219 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["PVP_MATCH_STARTED"]
220 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 229
221 [-]: JMP       229          ; PC := 229
222 [-]: GETUPVAL  R3 U0        ; R3 := U0
223 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3["0x5DFBCA3F"]
224 [-]: CALL      R3 2 2       ; R3 := R3(R4)
225 [-]: GETGLOBAL R4 K26       ; R4 := Lotus_Game
226 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["PVP_ROUND_STARTED"]
227 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 237
228 [-]: JMP       237          ; PC := 237
229 [-]: GETGLOBAL R3 K18       ; R3 := _T
230 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["gSectorWars"]
231 [-]: TEST      R3 1         ; if R3 then PC := 237
232 [-]: JMP       237          ; PC := 237
233 [-]: GETUPVAL  R3 U0        ; R3 := U0
234 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0x2E663A6A"]
235 [-]: MOVE      R5 R0        ; R5 := R0
236 [-]: CALL      R3 3 1       ; R3(R4,R5)
237 [-]: GETUPVAL  R3 U5        ; R3 := U5
238 [-]: SETTABLE  R3 K15 K35   ; R3["IsSpectating"] := "0x0"
239 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
240 [-]: GETUPVAL  R4 U7        ; R4 := U7
241 [-]: CALL      R3 2 2       ; R3 := R3(R4)
242 [-]: TEST      R3 1         ; if R3 then PC := 272
243 [-]: JMP       272          ; PC := 272
244 [-]: GETUPVAL  R3 U7        ; R3 := U7
245 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3["0xA38B648B"]
246 [-]: MOVE      R5 R1        ; R5 := R1
247 [-]: CALL      R3 3 1       ; R3(R4,R5)
248 [-]: JMP       272          ; PC := 272
249 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
250 [-]: GETGLOBAL R4 K18       ; R4 := _T
251 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["CommanderMap"]
252 [-]: CALL      R3 2 2       ; R3 := R3(R4)
253 [-]: TEST      R3 0         ; if not R3 then PC := 266
254 [-]: JMP       266          ; PC := 266
255 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
256 [-]: GETUPVAL  R4 U6        ; R4 := U6
257 [-]: CALL      R3 2 2       ; R3 := R3(R4)
258 [-]: TEST      R3 1         ; if R3 then PC := 266
259 [-]: JMP       266          ; PC := 266
260 [-]: GETUPVAL  R3 U6        ; R3 := U6
261 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3["0x7802BD11"]
262 [-]: MOVE      R5 R1        ; R5 := R1
263 [-]: CALL      R3 3 1       ; R3(R4,R5)
264 [-]: LOADNIL   R3 R3        ; R3 := nil
265 [-]: MOVE      R3 R6        ; R3 := R6
266 [-]: GETUPVAL  R3 U9        ; R3 := U9
267 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["0x6C682A30"]
268 [-]: GETUPVAL  R4 U2        ; R4 := U2
269 [-]: GETUPVAL  R5 U8        ; R5 := U8
270 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
271 [-]: MOVE      R0 R3        ; R0 := R3
272 [-]: GETUPVAL  R3 U5        ; R3 := U5
273 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["IsSpectating"]
274 [-]: TEST      R3 0         ; if not R3 then PC := 297
275 [-]: JMP       297          ; PC := 297
276 [-]: GETUPVAL  R3 U5        ; R3 := U5
277 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mWasSpectating"]
278 [-]: TEST      R3 1         ; if R3 then PC := 297
279 [-]: JMP       297          ; PC := 297
280 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
281 [-]: GETUPVAL  R4 U7        ; R4 := U7
282 [-]: CALL      R3 2 2       ; R3 := R3(R4)
283 [-]: TEST      R3 1         ; if R3 then PC := 297
284 [-]: JMP       297          ; PC := 297
285 [-]: GETUPVAL  R3 U7        ; R3 := U7
286 [-]: SELF      R3 R3 K37    ; R4 := R3; R3 := R3["0x3823ED12"]
287 [-]: CALL      R3 2 2       ; R3 := R3(R4)
288 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
289 [-]: MOVE      R5 R3        ; R5 := R3
290 [-]: CALL      R4 2 2       ; R4 := R4(R5)
291 [-]: TEST      R4 1         ; if R4 then PC := 297
292 [-]: JMP       297          ; PC := 297
293 [-]: SELF      R4 R3 K38    ; R5 := R3; R4 := R3["0x458F27A9"]
294 [-]: LOADK     R6 K39       ; R6 := "SetAiming"
295 [-]: LOADK     R7 K40       ; R7 := "false"
296 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
297 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
298 [-]: GETUPVAL  R5 U8        ; R5 := U8
299 [-]: CALL      R4 2 2       ; R4 := R4(R5)
300 [-]: TEST      R4 1         ; if R4 then PC := 377
301 [-]: JMP       377          ; PC := 377
302 [-]: GETUPVAL  R4 U8        ; R4 := U8
303 [-]: SELF      R4 R4 K41    ; R5 := R4; R4 := R4["0x5A115A02"]
304 [-]: CALL      R4 2 2       ; R4 := R4(R5)
305 [-]: TEST      R4 0         ; if not R4 then PC := 377
306 [-]: JMP       377          ; PC := 377
307 [-]: GETUPVAL  R4 U10       ; R4 := U10
308 [-]: GETTABLE  R4 R4 K42    ; R4 := R4["Cached"]
309 [-]: TEST      R4 1         ; if R4 then PC := 377
310 [-]: JMP       377          ; PC := 377
311 [-]: GETUPVAL  R4 U8        ; R4 := U8
312 [-]: SELF      R4 R4 K43    ; R5 := R4; R4 := R4["0x9CE5BA4C"]
313 [-]: CALL      R4 2 2       ; R4 := R4(R5)
314 [-]: LOADK     R5 K44       ; R5 := 1
315 [-]: LEN       R6 R4        ; R6 := # R4
316 [-]: LOADK     R7 K44       ; R7 := 1
317 [-]: FORPREP   R5 374       ; R5 -= R7; PC := 374
318 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
319 [-]: GETTABLE  R10 R9 K45   ; R10 := R9["instigator"]
320 [-]: GETUPVAL  R11 U8       ; R11 := U8
321 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 374
322 [-]: JMP       374          ; PC := 374
323 [-]: GETGLOBAL R10 K26      ; R10 := Lotus_Game
324 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["0xFAFD4322"]
325 [-]: CALL      R10 1 2      ; R10 := R10()
326 [-]: NEWTABLE  R11 0 0      ; R11 := {}
327 [-]: GETUPVAL  R12 U8       ; R12 := U8
328 [-]: SETTABLE  R10 K45 R12  ; R10["instigator"] := R12
329 [-]: GETTABLE  R12 R9 K47   ; R12 := R9["buffType"]
330 [-]: SETTABLE  R10 K47 R12  ; R10["buffType"] := R12
331 [-]: GETTABLE  R12 R9 K48   ; R12 := R9["isDebuff"]
332 [-]: SETTABLE  R10 K48 R12  ; R10["isDebuff"] := R12
333 [-]: GETTABLE  R12 R9 K49   ; R12 := R9["stackData"]
334 [-]: SETTABLE  R10 K49 R12  ; R10["stackData"] := R12
335 [-]: GETTABLE  R12 R9 K50   ; R12 := R9["abilityType"]
336 [-]: SETTABLE  R10 K50 R12  ; R10["abilityType"] := R12
337 [-]: GETTABLE  R12 R9 K51   ; R12 := R9["augmentType"]
338 [-]: SETTABLE  R10 K51 R12  ; R10["augmentType"] := R12
339 [-]: GETTABLE  R12 R9 K52   ; R12 := R9["buffData"]
340 [-]: SETTABLE  R10 K52 R12  ; R10["buffData"] := R12
341 [-]: GETTABLE  R12 R9 K53   ; R12 := R9["buffDataExtra"]
342 [-]: SETTABLE  R10 K53 R12  ; R10["buffDataExtra"] := R12
343 [-]: LOADK     R12 K44      ; R12 := 1
344 [-]: GETTABLE  R13 R9 K54   ; R13 := R9["affected"]
345 [-]: LEN       R13 R13      ; R13 := # R13
346 [-]: LOADK     R14 K44      ; R14 := 1
347 [-]: FORPREP   R12 363      ; R12 -= R14; PC := 363
348 [-]: GETTABLE  R16 R9 K54   ; R16 := R9["affected"]
349 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
350 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
351 [-]: MOVE      R18 R16      ; R18 := R16
352 [-]: CALL      R17 2 2      ; R17 := R17(R18)
353 [-]: TEST      R17 1        ; if R17 then PC := 363
354 [-]: JMP       363          ; PC := 363
355 [-]: GETUPVAL  R17 U8       ; R17 := U8
356 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 363
357 [-]: JMP       363          ; PC := 363
358 [-]: GETGLOBAL R17 K55      ; R17 := table
359 [-]: GETTABLE  R17 R17 K56  ; R17 := R17["0xE6450C9D"]
360 [-]: MOVE      R18 R11      ; R18 := R11
361 [-]: MOVE      R19 R16      ; R19 := R16
362 [-]: CALL      R17 3 1      ; R17(R18,R19)
363 [-]: FORLOOP   R12 348      ; R12 += R14; if R12 <= R13 then begin PC := 348; R15 := R12 end
364 [-]: LEN       R17 R11      ; R17 := # R11
365 [-]: LT        0 K57 R17    ; if 0 >= R17 then PC := 374
366 [-]: JMP       374          ; PC := 374
367 [-]: SETTABLE  R10 K54 R11  ; R10["affected"] := R11
368 [-]: GETGLOBAL R17 K55      ; R17 := table
369 [-]: GETTABLE  R17 R17 K56  ; R17 := R17["0xE6450C9D"]
370 [-]: GETUPVAL  R18 U10      ; R18 := U10
371 [-]: GETTABLE  R18 R18 K58  ; R18 := R18["Buffs"]
372 [-]: MOVE      R19 R10      ; R19 := R10
373 [-]: CALL      R17 3 1      ; R17(R18,R19)
374 [-]: FORLOOP   R5 318       ; R5 += R7; if R5 <= R6 then begin PC := 318; R8 := R5 end
375 [-]: GETUPVAL  R17 U10      ; R17 := U10
376 [-]: SETTABLE  R17 K42 K33  ; R17["Cached"] := "0x1"
377 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
378 [-]: MOVE      R18 R0       ; R18 := R0
379 [-]: CALL      R17 2 2      ; R17 := R17(R18)
380 [-]: TEST      R17 0        ; if not R17 then PC := 384
381 [-]: JMP       384          ; PC := 384
382 [-]: MOVE      R17 R0       ; R17 := R0
383 [-]: RETURN    R17 2        ; return R17
384 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
385 [-]: GETUPVAL  R18 U8       ; R18 := U8
386 [-]: CALL      R17 2 2      ; R17 := R17(R18)
387 [-]: TEST      R17 1        ; if R17 then PC := 398
388 [-]: JMP       398          ; PC := 398
389 [-]: GETUPVAL  R17 U8       ; R17 := U8
390 [-]: EQ        0 R17 R0     ; if R17 ~= R0 then PC := 398
391 [-]: JMP       398          ; PC := 398
392 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
393 [-]: GETUPVAL  R18 U11      ; R18 := U11
394 [-]: GETTABLE  R18 R18 K59  ; R18 := R18["ActivePowerSuit"]
395 [-]: CALL      R17 2 2      ; R17 := R17(R18)
396 [-]: TEST      R17 0        ; if not R17 then PC := 626
397 [-]: JMP       626          ; PC := 626
398 [-]: SELF      R17 R0 K60   ; R18 := R0; R17 := R0["0x8DB5D01F"]
399 [-]: CALL      R17 2 2      ; R17 := R17(R18)
400 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
401 [-]: MOVE      R19 R17      ; R19 := R17
402 [-]: CALL      R18 2 2      ; R18 := R18(R19)
403 [-]: TEST      R18 1        ; if R18 then PC := 438
404 [-]: JMP       438          ; PC := 438
405 [-]: SELF      R18 R17 K11  ; R19 := R17; R18 := R17["0x8B598ED4"]
406 [-]: GETGLOBAL R20 K61      ; R20 := gLotusInventoryControllerType
407 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
408 [-]: TEST      R18 0        ; if not R18 then PC := 438
409 [-]: JMP       438          ; PC := 438
410 [-]: GETUPVAL  R18 U4       ; R18 := U4
411 [-]: SETTABLE  R18 K62 R17  ; R18["InventoryController"] := R17
412 [-]: GETUPVAL  R18 U11      ; R18 := U11
413 [-]: GETUPVAL  R19 U4       ; R19 := U4
414 [-]: GETTABLE  R19 R19 K62  ; R19 := R19["InventoryController"]
415 [-]: SELF      R19 R19 K63  ; R20 := R19; R19 := R19["0x6978AC59"]
416 [-]: CALL      R19 2 2      ; R19 := R19(R20)
417 [-]: SETTABLE  R18 K59 R19  ; R18["ActivePowerSuit"] := R19
418 [-]: GETUPVAL  R18 U11      ; R18 := U11
419 [-]: GETUPVAL  R19 U2       ; R19 := U2
420 [-]: SELF      R19 R19 K65  ; R20 := R19; R19 := R19["0x93E76705"]
421 [-]: CALL      R19 2 2      ; R19 := R19(R20)
422 [-]: SETTABLE  R18 K64 R19  ; R18["OwnedPowerSuitAvatar"] := R19
423 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
424 [-]: GETUPVAL  R19 U11      ; R19 := U11
425 [-]: GETTABLE  R19 R19 K64  ; R19 := R19["OwnedPowerSuitAvatar"]
426 [-]: CALL      R18 2 2      ; R18 := R18(R19)
427 [-]: TEST      R18 1        ; if R18 then PC := 436
428 [-]: JMP       436          ; PC := 436
429 [-]: GETUPVAL  R18 U4       ; R18 := U4
430 [-]: GETUPVAL  R19 U11      ; R19 := U11
431 [-]: GETTABLE  R19 R19 K64  ; R19 := R19["OwnedPowerSuitAvatar"]
432 [-]: SELF      R19 R19 K60  ; R20 := R19; R19 := R19["0x8DB5D01F"]
433 [-]: CALL      R19 2 2      ; R19 := R19(R20)
434 [-]: SETTABLE  R18 K66 R19  ; R18["OwnedPowerSuitInventoryController"] := R19
435 [-]: JMP       438          ; PC := 438
436 [-]: GETUPVAL  R18 U4       ; R18 := U4
437 [-]: SETTABLE  R18 K66 K67  ; R18["OwnedPowerSuitInventoryController"] := nil
438 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
439 [-]: GETUPVAL  R19 U4       ; R19 := U4
440 [-]: GETTABLE  R19 R19 K62  ; R19 := R19["InventoryController"]
441 [-]: CALL      R18 2 2      ; R18 := R18(R19)
442 [-]: TEST      R18 0        ; if not R18 then PC := 446
443 [-]: JMP       446          ; PC := 446
444 [-]: MOVE      R18 R0       ; R18 := R0
445 [-]: RETURN    R18 2        ; return R18
446 [-]: GETUPVAL  R18 U4       ; R18 := U4
447 [-]: SELF      R19 R0 K69   ; R20 := R0; R19 := R0["0xA3F6069B"]
448 [-]: CALL      R19 2 2      ; R19 := R19(R20)
449 [-]: SETTABLE  R18 K68 R19  ; R18["DamageController"] := R19
450 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
451 [-]: GETUPVAL  R19 U4       ; R19 := U4
452 [-]: GETTABLE  R19 R19 K68  ; R19 := R19["DamageController"]
453 [-]: CALL      R18 2 2      ; R18 := R18(R19)
454 [-]: TEST      R18 0        ; if not R18 then PC := 458
455 [-]: JMP       458          ; PC := 458
456 [-]: MOVE      R18 R0       ; R18 := R0
457 [-]: RETURN    R18 2        ; return R18
458 [-]: GETUPVAL  R18 U4       ; R18 := U4
459 [-]: SELF      R19 R0 K71   ; R20 := R0; R19 := R0["0x53F87356"]
460 [-]: CALL      R19 2 2      ; R19 := R19(R20)
461 [-]: SETTABLE  R18 K70 R19  ; R18["InputController"] := R19
462 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
463 [-]: GETUPVAL  R19 U4       ; R19 := U4
464 [-]: GETTABLE  R19 R19 K70  ; R19 := R19["InputController"]
465 [-]: CALL      R18 2 2      ; R18 := R18(R19)
466 [-]: TEST      R18 0        ; if not R18 then PC := 470
467 [-]: JMP       470          ; PC := 470
468 [-]: MOVE      R18 R0       ; R18 := R0
469 [-]: RETURN    R18 2        ; return R18
470 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
471 [-]: GETUPVAL  R19 U12      ; R19 := U12
472 [-]: CALL      R18 2 2      ; R18 := R18(R19)
473 [-]: TEST      R18 0        ; if not R18 then PC := 490
474 [-]: JMP       490          ; PC := 490
475 [-]: GETUPVAL  R18 U2       ; R18 := U2
476 [-]: SELF      R18 R18 K72  ; R19 := R18; R18 := R18["0x8109F422"]
477 [-]: CALL      R18 2 2      ; R18 := R18(R19)
478 [-]: MOVE      R18 R12      ; R18 := R12
479 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
480 [-]: GETUPVAL  R19 U12      ; R19 := U12
481 [-]: CALL      R18 2 2      ; R18 := R18(R19)
482 [-]: TEST      R18 0        ; if not R18 then PC := 486
483 [-]: JMP       486          ; PC := 486
484 [-]: MOVE      R18 R0       ; R18 := R0
485 [-]: RETURN    R18 2        ; return R18
486 [-]: GETUPVAL  R18 U12      ; R18 := U12
487 [-]: SELF      R18 R18 K73  ; R19 := R18; R18 := R18["0xB6E36143"]
488 [-]: GETUPVAL  R20 U2       ; R20 := U2
489 [-]: CALL      R18 3 1      ; R18(R19,R20)
490 [-]: GETUPVAL  R18 U5       ; R18 := U5
491 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["StalkerMode"]
492 [-]: GETGLOBAL R19 K75      ; R19 := _G
493 [-]: GETTABLE  R19 R19 K74  ; R19 := R19["StalkerMode"]
494 [-]: EQ        0 R19 K67    ; if R19 ~= nil then PC := 497
495 [-]: JMP       497          ; PC := 497
496 [-]: MOVE      R19 R0       ; R19 := R0
497 [-]: MOVE      R19 R1       ; R19 := R1
498 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 513
499 [-]: JMP       513          ; PC := 513
500 [-]: GETUPVAL  R18 U5       ; R18 := U5
501 [-]: GETGLOBAL R19 K75      ; R19 := _G
502 [-]: GETTABLE  R19 R19 K74  ; R19 := R19["StalkerMode"]
503 [-]: EQ        0 R19 K67    ; if R19 ~= nil then PC := 506
504 [-]: JMP       506          ; PC := 506
505 [-]: MOVE      R19 R0       ; R19 := R0
506 [-]: MOVE      R19 R1       ; R19 := R1
507 [-]: SETTABLE  R18 K74 R19  ; R18["StalkerMode"] := R19
508 [-]: GETUPVAL  R18 U12      ; R18 := U12
509 [-]: SELF      R18 R18 K76  ; R19 := R18; R18 := R18["0x60C27"]
510 [-]: GETUPVAL  R20 U5       ; R20 := U5
511 [-]: GETTABLE  R20 R20 K74  ; R20 := R20["StalkerMode"]
512 [-]: CALL      R18 3 1      ; R18(R19,R20)
513 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
514 [-]: GETUPVAL  R19 U7       ; R19 := U7
515 [-]: CALL      R18 2 2      ; R18 := R18(R19)
516 [-]: TEST      R18 0        ; if not R18 then PC := 529
517 [-]: JMP       529          ; PC := 529
518 [-]: GETUPVAL  R18 U2       ; R18 := U2
519 [-]: SELF      R18 R18 K77  ; R19 := R18; R18 := R18["0x9A631181"]
520 [-]: CALL      R18 2 2      ; R18 := R18(R19)
521 [-]: MOVE      R18 R7       ; R18 := R7
522 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
523 [-]: GETUPVAL  R19 U7       ; R19 := U7
524 [-]: CALL      R18 2 2      ; R18 := R18(R19)
525 [-]: TEST      R18 0        ; if not R18 then PC := 529
526 [-]: JMP       529          ; PC := 529
527 [-]: MOVE      R18 R0       ; R18 := R0
528 [-]: RETURN    R18 2        ; return R18
529 [-]: MOVE      R0 R8        ; R0 := R8
530 [-]: GETUPVAL  R18 U12      ; R18 := U12
531 [-]: SELF      R18 R18 K78  ; R19 := R18; R18 := R18["0xEEF0F870"]
532 [-]: CALL      R18 2 1      ; R18(R19)
533 [-]: GETGLOBAL R18 K18      ; R18 := _T
534 [-]: GETUPVAL  R19 U8       ; R19 := U8
535 [-]: SETTABLE  R18 K79 R19  ; R18["CurrentHudAvatar"] := R19
536 [-]: GETUPVAL  R18 U7       ; R18 := U7
537 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18["0xDEB91575"]
538 [-]: CALL      R18 2 1      ; R18(R19)
539 [-]: GETUPVAL  R18 U7       ; R18 := U7
540 [-]: SELF      R18 R18 K32  ; R19 := R18; R18 := R18["0xA38B648B"]
541 [-]: GETUPVAL  R20 U5       ; R20 := U5
542 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["IsSpectating"]
543 [-]: MOVE      R20 R20      ; R20 := R20
544 [-]: CALL      R18 3 1      ; R18(R19,R20)
545 [-]: GETUPVAL  R18 U13      ; R18 := U13
546 [-]: SELF      R18 R18 K81  ; R19 := R18; R18 := R18["0x7CF71D03"]
547 [-]: CALL      R18 2 1      ; R18(R19)
548 [-]: GETUPVAL  R18 U14      ; R18 := U14
549 [-]: EQ        1 R18 K67    ; if R18 == nil then PC := 554
550 [-]: JMP       554          ; PC := 554
551 [-]: GETUPVAL  R18 U14      ; R18 := U14
552 [-]: SELF      R18 R18 K82  ; R19 := R18; R18 := R18["0xCE9AB882"]
553 [-]: CALL      R18 2 1      ; R18(R19)
554 [-]: GETUPVAL  R18 U5       ; R18 := U5
555 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["IsSpectating"]
556 [-]: TEST      R18 1        ; if R18 then PC := 595
557 [-]: JMP       595          ; PC := 595
558 [-]: GETUPVAL  R18 U10      ; R18 := U10
559 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["Cached"]
560 [-]: TEST      R18 0        ; if not R18 then PC := 580
561 [-]: JMP       580          ; PC := 580
562 [-]: LOADK     R18 K44      ; R18 := 1
563 [-]: GETUPVAL  R19 U10      ; R19 := U10
564 [-]: GETTABLE  R19 R19 K58  ; R19 := R19["Buffs"]
565 [-]: LEN       R19 R19      ; R19 := # R19
566 [-]: LOADK     R20 K44      ; R20 := 1
567 [-]: FORPREP   R18 579      ; R18 -= R20; PC := 579
568 [-]: GETUPVAL  R22 U10      ; R22 := U10
569 [-]: GETTABLE  R22 R22 K58  ; R22 := R22["Buffs"]
570 [-]: GETTABLE  R22 R22 R21  ; R22 := R22[R21]
571 [-]: SETTABLE  R22 K45 R0   ; R22["instigator"] := R0
572 [-]: SELF      R23 R0 K83   ; R24 := R0; R23 := R0["0x584F13D6"]
573 [-]: GETUPVAL  R25 U10      ; R25 := U10
574 [-]: GETTABLE  R25 R25 K58  ; R25 := R25["Buffs"]
575 [-]: GETTABLE  R25 R25 R21  ; R25 := R25[R21]
576 [-]: MOVE      R26 R1       ; R26 := R1
577 [-]: MOVE      R27 R0       ; R27 := R0
578 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
579 [-]: FORLOOP   R18 568      ; R18 += R20; if R18 <= R19 then begin PC := 568; R21 := R18 end
580 [-]: GETUPVAL  R23 U10      ; R23 := U10
581 [-]: SETTABLE  R23 K42 K35  ; R23["Cached"] := "0x0"
582 [-]: GETUPVAL  R23 U10      ; R23 := U10
583 [-]: NEWTABLE  R24 0 0      ; R24 := {}
584 [-]: SETTABLE  R23 K58 R24  ; R23["Buffs"] := R24
585 [-]: SELF      R23 R0 K43   ; R24 := R0; R23 := R0["0x9CE5BA4C"]
586 [-]: CALL      R23 2 2      ; R23 := R23(R24)
587 [-]: LOADK     R24 K44      ; R24 := 1
588 [-]: LEN       R25 R23      ; R25 := # R23
589 [-]: LOADK     R26 K44      ; R26 := 1
590 [-]: FORPREP   R24 594      ; R24 -= R26; PC := 594
591 [-]: GETUPVAL  R28 U15      ; R28 := U15
592 [-]: GETTABLE  R29 R23 R27  ; R29 := R23[R27]
593 [-]: CALL      R28 2 1      ; R28(R29)
594 [-]: FORLOOP   R24 591      ; R24 += R26; if R24 <= R25 then begin PC := 591; R27 := R24 end
595 [-]: GETUPVAL  R28 U4       ; R28 := U4
596 [-]: GETTABLE  R28 R28 K62  ; R28 := R28["InventoryController"]
597 [-]: SELF      R28 R28 K84  ; R29 := R28; R28 := R28["0x10252651"]
598 [-]: CALL      R28 2 2      ; R28 := R28(R29)
599 [-]: GETUPVAL  R29 U5       ; R29 := U5
600 [-]: GETTABLE  R29 R29 K15  ; R29 := R29["IsSpectating"]
601 [-]: TEST      R29 1        ; if R29 then PC := 648
602 [-]: JMP       648          ; PC := 648
603 [-]: TEST      R28 1        ; if R28 then PC := 648
604 [-]: JMP       648          ; PC := 648
605 [-]: GETUPVAL  R29 U2       ; R29 := U2
606 [-]: SELF      R29 R29 K65  ; R30 := R29; R29 := R29["0x93E76705"]
607 [-]: CALL      R29 2 2      ; R29 := R29(R30)
608 [-]: GETGLOBAL R30 K0       ; R30 := 0x400E7765
609 [-]: MOVE      R31 R29      ; R31 := R29
610 [-]: CALL      R30 2 2      ; R30 := R30(R31)
611 [-]: TEST      R30 1        ; if R30 then PC := 623
612 [-]: JMP       623          ; PC := 623
613 [-]: SELF      R30 R29 K60  ; R31 := R29; R30 := R29["0x8DB5D01F"]
614 [-]: CALL      R30 2 2      ; R30 := R30(R31)
615 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
616 [-]: MOVE      R32 R30      ; R32 := R30
617 [-]: CALL      R31 2 2      ; R31 := R31(R32)
618 [-]: TEST      R31 1        ; if R31 then PC := 623
619 [-]: JMP       623          ; PC := 623
620 [-]: SELF      R31 R30 K85  ; R32 := R30; R31 := R30["0x30DABA98"]
621 [-]: CALL      R31 2 2      ; R31 := R31(R32)
622 [-]: MOVE      R31 R16      ; R31 := R16
623 [-]: GETUPVAL  R31 U17      ; R31 := U17
624 [-]: CALL      R31 1 1      ; R31()
625 [-]: JMP       648          ; PC := 648
626 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
627 [-]: GETUPVAL  R32 U4       ; R32 := U4
628 [-]: GETTABLE  R32 R32 K62  ; R32 := R32["InventoryController"]
629 [-]: CALL      R31 2 2      ; R31 := R31(R32)
630 [-]: TEST      R31 1        ; if R31 then PC := 648
631 [-]: JMP       648          ; PC := 648
632 [-]: GETUPVAL  R31 U4       ; R31 := U4
633 [-]: GETTABLE  R31 R31 K62  ; R31 := R31["InventoryController"]
634 [-]: SELF      R31 R31 K84  ; R32 := R31; R31 := R31["0x10252651"]
635 [-]: CALL      R31 2 2      ; R31 := R31(R32)
636 [-]: GETUPVAL  R32 U11      ; R32 := U11
637 [-]: GETTABLE  R32 R32 K86  ; R32 := R32["SpaceMode"]
638 [-]: EQ        1 R32 R31    ; if R32 == R31 then PC := 648
639 [-]: JMP       648          ; PC := 648
640 [-]: GETUPVAL  R32 U11      ; R32 := U11
641 [-]: SETTABLE  R32 K86 R31  ; R32["SpaceMode"] := R31
642 [-]: GETUPVAL  R32 U11      ; R32 := U11
643 [-]: GETUPVAL  R33 U4       ; R33 := U4
644 [-]: GETTABLE  R33 R33 K62  ; R33 := R33["InventoryController"]
645 [-]: SELF      R33 R33 K63  ; R34 := R33; R33 := R33["0x6978AC59"]
646 [-]: CALL      R33 2 2      ; R33 := R33(R34)
647 [-]: SETTABLE  R32 K59 R33  ; R32["ActivePowerSuit"] := R33
648 [-]: GETGLOBAL R32 K0       ; R32 := 0x400E7765
649 [-]: GETUPVAL  R33 U16      ; R33 := U16
650 [-]: CALL      R32 2 2      ; R32 := R32(R33)
651 [-]: TEST      R32 0        ; if not R32 then PC := 684
652 [-]: JMP       684          ; PC := 684
653 [-]: GETGLOBAL R32 K0       ; R32 := 0x400E7765
654 [-]: GETUPVAL  R33 U4       ; R33 := U4
655 [-]: GETTABLE  R33 R33 K62  ; R33 := R33["InventoryController"]
656 [-]: CALL      R32 2 2      ; R32 := R32(R33)
657 [-]: TEST      R32 1        ; if R32 then PC := 684
658 [-]: JMP       684          ; PC := 684
659 [-]: GETUPVAL  R32 U4       ; R32 := U4
660 [-]: GETTABLE  R32 R32 K62  ; R32 := R32["InventoryController"]
661 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x10252651"]
662 [-]: CALL      R32 2 2      ; R32 := R32(R33)
663 [-]: TEST      R32 1        ; if R32 then PC := 684
664 [-]: JMP       684          ; PC := 684
665 [-]: GETUPVAL  R32 U5       ; R32 := U5
666 [-]: GETTABLE  R32 R32 K15  ; R32 := R32["IsSpectating"]
667 [-]: TEST      R32 1        ; if R32 then PC := 684
668 [-]: JMP       684          ; PC := 684
669 [-]: GETGLOBAL R32 K0       ; R32 := 0x400E7765
670 [-]: GETUPVAL  R33 U4       ; R33 := U4
671 [-]: GETTABLE  R33 R33 K62  ; R33 := R33["InventoryController"]
672 [-]: SELF      R33 R33 K85  ; R34 := R33; R33 := R33["0x30DABA98"]
673 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
674 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
675 [-]: TEST      R32 1        ; if R32 then PC := 684
676 [-]: JMP       684          ; PC := 684
677 [-]: GETUPVAL  R32 U4       ; R32 := U4
678 [-]: GETTABLE  R32 R32 K62  ; R32 := R32["InventoryController"]
679 [-]: SELF      R32 R32 K85  ; R33 := R32; R32 := R32["0x30DABA98"]
680 [-]: CALL      R32 2 2      ; R32 := R32(R33)
681 [-]: MOVE      R32 R16      ; R32 := R16
682 [-]: GETUPVAL  R32 U17      ; R32 := U17
683 [-]: CALL      R32 1 1      ; R32()
684 [-]: GETGLOBAL R32 K0       ; R32 := 0x400E7765
685 [-]: GETUPVAL  R33 U4       ; R33 := U4
686 [-]: GETTABLE  R33 R33 K62  ; R33 := R33["InventoryController"]
687 [-]: CALL      R32 2 2      ; R32 := R32(R33)
688 [-]: TEST      R32 0        ; if not R32 then PC := 692
689 [-]: JMP       692          ; PC := 692
690 [-]: MOVE      R32 R0       ; R32 := R0
691 [-]: RETURN    R32 2        ; return R32
692 [-]: GETUPVAL  R32 U4       ; R32 := U4
693 [-]: GETTABLE  R32 R32 K62  ; R32 := R32["InventoryController"]
694 [-]: SELF      R32 R32 K84  ; R33 := R32; R32 := R32["0x10252651"]
695 [-]: CALL      R32 2 2      ; R32 := R32(R33)
696 [-]: LOADK     R33 K87      ; R33 := 45
697 [-]: LOADK     R34 K88      ; R34 := 10
698 [-]: GETUPVAL  R35 U3       ; R35 := U3
699 [-]: SELF      R35 R35 K89  ; R36 := R35; R35 := R35["0x83FDB916"]
700 [-]: CALL      R35 2 2      ; R35 := R35(R36)
701 [-]: GETUPVAL  R36 U5       ; R36 := U5
702 [-]: GETTABLE  R36 R36 K90  ; R36 := R36["mSpaceMode"]
703 [-]: EQ        1 R36 R32    ; if R36 == R32 then PC := 797
704 [-]: JMP       797          ; PC := 797
705 [-]: GETUPVAL  R36 U5       ; R36 := U5
706 [-]: SETTABLE  R36 K90 R32  ; R36["mSpaceMode"] := R32
707 [-]: GETUPVAL  R36 U5       ; R36 := U5
708 [-]: GETTABLE  R36 R36 K90  ; R36 := R36["mSpaceMode"]
709 [-]: TEST      R36 0        ; if not R36 then PC := 746
710 [-]: JMP       746          ; PC := 746
711 [-]: LOADNIL   R36 R36      ; R36 := nil
712 [-]: MOVE      R36 R16      ; R36 := R16
713 [-]: GETUPVAL  R36 U18      ; R36 := U18
714 [-]: GETTABLE  R36 R36 K91  ; R36 := R36["Sentinel"]
715 [-]: EQ        1 R36 K67    ; if R36 == nil then PC := 724
716 [-]: JMP       724          ; PC := 724
717 [-]: GETUPVAL  R36 U18      ; R36 := U18
718 [-]: GETTABLE  R36 R36 K91  ; R36 := R36["Sentinel"]
719 [-]: SETTABLE  R36 K92 K67  ; R36["mAvatar"] := nil
720 [-]: GETUPVAL  R36 U18      ; R36 := U18
721 [-]: GETTABLE  R36 R36 K91  ; R36 := R36["Sentinel"]
722 [-]: SELF      R36 R36 K93  ; R37 := R36; R36 := R36["0x8C7099E9"]
723 [-]: CALL      R36 2 1      ; R36(R37)
724 [-]: GETUPVAL  R36 U4       ; R36 := U4
725 [-]: GETTABLE  R36 R36 K62  ; R36 := R36["InventoryController"]
726 [-]: SELF      R36 R36 K94  ; R37 := R36; R36 := R36["0x3DC7CDBF"]
727 [-]: CALL      R36 2 2      ; R36 := R36(R37)
728 [-]: TEST      R36 1        ; if R36 then PC := 759
729 [-]: JMP       759          ; PC := 759
730 [-]: TEST      R35 1        ; if R35 then PC := 740
731 [-]: JMP       740          ; PC := 740
732 [-]: GETUPVAL  R36 U3       ; R36 := U3
733 [-]: SELF      R36 R36 K95  ; R37 := R36; R36 := R36["0x564F5CA5"]
734 [-]: LOADK     R38 K96      ; R38 := 150
735 [-]: LOADK     R39 K97      ; R39 := 300
736 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
737 [-]: LOADK     R33 K96      ; R33 := 150
738 [-]: LOADK     R34 K97      ; R34 := 300
739 [-]: JMP       759          ; PC := 759
740 [-]: GETUPVAL  R36 U3       ; R36 := U3
741 [-]: SELF      R36 R36 K95  ; R37 := R36; R36 := R36["0x564F5CA5"]
742 [-]: MOVE      R38 R33      ; R38 := R33
743 [-]: MOVE      R39 R34      ; R39 := R34
744 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
745 [-]: JMP       759          ; PC := 759
746 [-]: TEST      R35 1        ; if R35 then PC := 754
747 [-]: JMP       754          ; PC := 754
748 [-]: GETUPVAL  R36 U3       ; R36 := U3
749 [-]: SELF      R36 R36 K95  ; R37 := R36; R36 := R36["0x564F5CA5"]
750 [-]: LOADK     R38 K96      ; R38 := 150
751 [-]: LOADK     R39 K97      ; R39 := 300
752 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
753 [-]: JMP       759          ; PC := 759
754 [-]: GETUPVAL  R36 U3       ; R36 := U3
755 [-]: SELF      R36 R36 K95  ; R37 := R36; R36 := R36["0x564F5CA5"]
756 [-]: MOVE      R38 R33      ; R38 := R33
757 [-]: MOVE      R39 R34      ; R39 := R34
758 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
759 [-]: GETGLOBAL R36 K0       ; R36 := 0x400E7765
760 [-]: GETGLOBAL R37 K75      ; R37 := _G
761 [-]: GETTABLE  R37 R37 K98  ; R37 := R37["UIMovie_ArcWingHudMovie"]
762 [-]: CALL      R36 2 2      ; R36 := R36(R37)
763 [-]: TEST      R36 1        ; if R36 then PC := 797
764 [-]: JMP       797          ; PC := 797
765 [-]: GETGLOBAL R36 K99      ; R36 := gFlashMgr
766 [-]: SELF      R36 R36 K100 ; R37 := R36; R36 := R36["0x616DD092"]
767 [-]: GETGLOBAL R38 K75      ; R38 := _G
768 [-]: GETTABLE  R38 R38 K98  ; R38 := R38["UIMovie_ArcWingHudMovie"]
769 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
770 [-]: GETUPVAL  R37 U5       ; R37 := U5
771 [-]: GETTABLE  R37 R37 K90  ; R37 := R37["mSpaceMode"]
772 [-]: TEST      R37 0        ; if not R37 then PC := 785
773 [-]: JMP       785          ; PC := 785
774 [-]: GETGLOBAL R37 K0       ; R37 := 0x400E7765
775 [-]: MOVE      R38 R36      ; R38 := R36
776 [-]: CALL      R37 2 2      ; R37 := R37(R38)
777 [-]: TEST      R37 0        ; if not R37 then PC := 797
778 [-]: JMP       797          ; PC := 797
779 [-]: GETGLOBAL R37 K99      ; R37 := gFlashMgr
780 [-]: SELF      R37 R37 K101 ; R38 := R37; R37 := R37["0x24FF386"]
781 [-]: GETGLOBAL R39 K75      ; R39 := _G
782 [-]: GETTABLE  R39 R39 K98  ; R39 := R39["UIMovie_ArcWingHudMovie"]
783 [-]: CALL      R37 3 1      ; R37(R38,R39)
784 [-]: JMP       797          ; PC := 797
785 [-]: GETGLOBAL R37 K0       ; R37 := 0x400E7765
786 [-]: MOVE      R38 R36      ; R38 := R36
787 [-]: CALL      R37 2 2      ; R37 := R37(R38)
788 [-]: TEST      R37 1        ; if R37 then PC := 797
789 [-]: JMP       797          ; PC := 797
790 [-]: SELF      R37 R36 K102 ; R38 := R36; R37 := R36["0xA58BB96C"]
791 [-]: CALL      R37 2 1      ; R37(R38)
792 [-]: GETGLOBAL R37 K5       ; R37 := 0x93B1256B
793 [-]: LOADK     R38 K103     ; R38 := "ScopeDebug: Show from HudRedux"
794 [-]: CALL      R37 2 1      ; R37(R38)
795 [-]: GETUPVAL  R37 U19      ; R37 := U19
796 [-]: CALL      R37 1 1      ; R37()
797 [-]: GETUPVAL  R37 U5       ; R37 := U5
798 [-]: GETTABLE  R37 R37 K104 ; R37 := R37["mDistanceFieldMiniMap"]
799 [-]: EQ        1 R35 R37    ; if R35 == R37 then PC := 818
800 [-]: JMP       818          ; PC := 818
801 [-]: GETUPVAL  R37 U5       ; R37 := U5
802 [-]: SETTABLE  R37 K104 R35 ; R37["mDistanceFieldMiniMap"] := R35
803 [-]: GETUPVAL  R37 U5       ; R37 := U5
804 [-]: GETTABLE  R37 R37 K104 ; R37 := R37["mDistanceFieldMiniMap"]
805 [-]: TEST      R37 1        ; if R37 then PC := 813
806 [-]: JMP       813          ; PC := 813
807 [-]: GETUPVAL  R37 U3       ; R37 := U3
808 [-]: SELF      R37 R37 K95  ; R38 := R37; R37 := R37["0x564F5CA5"]
809 [-]: LOADK     R39 K96      ; R39 := 150
810 [-]: LOADK     R40 K97      ; R40 := 300
811 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
812 [-]: JMP       818          ; PC := 818
813 [-]: GETUPVAL  R37 U3       ; R37 := U3
814 [-]: SELF      R37 R37 K95  ; R38 := R37; R37 := R37["0x564F5CA5"]
815 [-]: MOVE      R39 R33      ; R39 := R33
816 [-]: MOVE      R40 R34      ; R40 := R34
817 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
818 [-]: GETUPVAL  R37 U20      ; R37 := U20
819 [-]: LEN       R37 R37      ; R37 := # R37
820 [-]: EQ        0 R37 K57    ; if R37 ~= 0 then PC := 837
821 [-]: JMP       837          ; PC := 837
822 [-]: GETGLOBAL R37 K20      ; R37 := gRegion
823 [-]: SELF      R37 R37 K105 ; R38 := R37; R37 := R37["0x48FBE19F"]
824 [-]: CALL      R37 2 2      ; R37 := R37(R38)
825 [-]: MOVE      R37 R20      ; R37 := R20
826 [-]: GETUPVAL  R37 U11      ; R37 := U11
827 [-]: NEWTABLE  R38 0 0      ; R38 := {}
828 [-]: SETTABLE  R37 K106 R38 ; R37["PlayerAvatars"] := R38
829 [-]: GETUPVAL  R37 U20      ; R37 := U20
830 [-]: LEN       R37 R37      ; R37 := # R37
831 [-]: EQ        1 R37 K57    ; if R37 == 0 then PC := 837
832 [-]: JMP       837          ; PC := 837
833 [-]: GETGLOBAL R37 K20      ; R37 := gRegion
834 [-]: SELF      R37 R37 K107 ; R38 := R37; R37 := R37["0x6B8D7573"]
835 [-]: LOADK     R39 K108     ; R39 := "OnPlayersChanged"
836 [-]: CALL      R37 3 1      ; R37(R38,R39)
837 [-]: GETUPVAL  R37 U21      ; R37 := U21
838 [-]: TEST      R37 1        ; if R37 then PC := 846
839 [-]: JMP       846          ; PC := 846
840 [-]: GETGLOBAL R37 K109     ; R37 := gMatchingService
841 [-]: SELF      R37 R37 K110 ; R38 := R37; R37 := R37["0xF7CA4CAC"]
842 [-]: LOADK     R39 K111     ; R39 := "HUD_ExternalGameReady"
843 [-]: CALL      R37 3 1      ; R37(R38,R39)
844 [-]: MOVE      R37 R1       ; R37 := R1
845 [-]: MOVE      R37 R21      ; R37 := R21
846 [-]: MOVE      R37 R1       ; R37 := R1
847 [-]: RETURN    R37 2        ; return R37
848 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 4049
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["B"]
  3 [-]: SETTABLE  R0 K1 K2     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_2"
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["A"]
  6 [-]: SETTABLE  R0 K1 K4     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_0"
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["X"]
  9 [-]: SETTABLE  R0 K1 K6     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_1"
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["Y"]
 12 [-]: SETTABLE  R0 K1 K8     ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_3"
 13 [-]: NEWTABLE  R0 4 0       ; R0 := {}
 14 [-]: LOADK     R1 K4        ; R1 := "ACTIVATE_ABILITY_MENU_0"
 15 [-]: LOADK     R2 K6        ; R2 := "ACTIVATE_ABILITY_MENU_1"
 16 [-]: LOADK     R3 K2        ; R3 := "ACTIVATE_ABILITY_MENU_2"
 17 [-]: LOADK     R4 K8        ; R4 := "ACTIVATE_ABILITY_MENU_3"
 18 [-]: SETLIST   R0 4 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 4
 19 [-]: GETGLOBAL R1 K9        ; R1 := gPlayerProfileMgr
 20 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x32D83CC3"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: TEST      R1 0         ; if not R1 then PC := 79
 23 [-]: JMP       79           ; PC := 79
 24 [-]: GETGLOBAL R1 K11       ; R1 := 0x63B09107
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: JMP       77           ; PC := 77
 28 [-]: GETUPVAL  R6 U1        ; R6 := U1
 29 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x5156A665"]
 30 [-]: MOVE      R8 R5        ; R8 := R5
 31 [-]: MOVE      R9 R0        ; R9 := R0
 32 [-]: GETGLOBAL R10 K13      ; R10 := gGameConfig
 33 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x73D34741"]
 34 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 35 [-]: GETGLOBAL R11 K15      ; R11 := abilityMenuFilter
 36 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 37 [-]: EQ        0 R6 K16     ; if R6 ~= "" then PC := 54
 38 [-]: JMP       54           ; PC := 54
 39 [-]: GETGLOBAL R7 K17       ; R7 := gFlashMgr
 40 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7["0x2803B896"]
 41 [-]: MOVE      R9 R5        ; R9 := R5
 42 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 43 [-]: GETUPVAL  R8 U1        ; R8 := U1
 44 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8["0x8FA7D392"]
 45 [-]: MOVE      R10 R7       ; R10 := R7
 46 [-]: GETGLOBAL R11 K13      ; R11 := gGameConfig
 47 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x73D34741"]
 48 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 49 [-]: GETGLOBAL R12 K15      ; R12 := abilityMenuFilter
 50 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 51 [-]: TEST      R8 1         ; if R8 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: MOVE      R6 R7        ; R6 := R7
 54 [-]: EQ        0 R6 K20     ; if R6 ~= "GAMEPAD_X" then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETUPVAL  R8 U0        ; R8 := U0
 57 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["A"]
 58 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 59 [-]: JMP       77           ; PC := 77
 60 [-]: EQ        0 R6 K21     ; if R6 ~= "GAMEPAD_CIRCLE" then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETUPVAL  R8 U0        ; R8 := U0
 63 [-]: GETTABLE  R8 R8 K0     ; R8 := R8["B"]
 64 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 65 [-]: JMP       77           ; PC := 77
 66 [-]: EQ        0 R6 K22     ; if R6 ~= "GAMEPAD_TRIANGLE" then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: GETUPVAL  R8 U0        ; R8 := U0
 69 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Y"]
 70 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 71 [-]: JMP       77           ; PC := 77
 72 [-]: EQ        0 R6 K23     ; if R6 ~= "GAMEPAD_SQUARE" then PC := 77
 73 [-]: JMP       77           ; PC := 77
 74 [-]: GETUPVAL  R8 U0        ; R8 := U0
 75 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["X"]
 76 [-]: SETTABLE  R8 K1 R5     ; R8["Ability"] := R5
 77 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
 78 [-]: JMP       28           ; PC := 28
 79 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 80 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x17028E8F"]
 81 [-]: LOADK     R10 K26      ; R10 := "AbilityPanel.ControllerCastingButtons.AButton.text"
 82 [-]: LOADK     R11 K27      ; R11 := "<GAMEPAD_X>"
 83 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 84 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 85 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x17028E8F"]
 86 [-]: LOADK     R10 K28      ; R10 := "AbilityPanel.ControllerCastingButtons.BButton.text"
 87 [-]: LOADK     R11 K29      ; R11 := "<GAMEPAD_CIRCLE>"
 88 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 89 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 90 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x17028E8F"]
 91 [-]: LOADK     R10 K30      ; R10 := "AbilityPanel.ControllerCastingButtons.XButton.text"
 92 [-]: LOADK     R11 K31      ; R11 := "<GAMEPAD_SQUARE>"
 93 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 94 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
 95 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x17028E8F"]
 96 [-]: LOADK     R10 K32      ; R10 := "AbilityPanel.ControllerCastingButtons.YButton.text"
 97 [-]: LOADK     R11 K33      ; R11 := "<GAMEPAD_TRIANGLE>"
 98 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 99 [-]: GETGLOBAL R8 K24       ; R8 := mMovie
100 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0x17028E8F"]
101 [-]: LOADK     R10 K34      ; R10 := "AbilityPanel.FocusButton.text"
102 [-]: LOADK     R11 K35      ; R11 := "<ACTIVATE_ABILITY_MENU_4>"
103 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
104 [-]: GETGLOBAL R8 K17       ; R8 := gFlashMgr
105 [-]: SELF      R8 R8 K36    ; R9 := R8; R8 := R8["0x675C7F8B"]
106 [-]: LOADK     R10 K37      ; R10 := "VIEW_RAILJACK_SYSTEMS_MENU"
107 [-]: MOVE      R11 R1       ; R11 := R1
108 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
109 [-]: LOADK     R9 K16       ; R9 := ""
110 [-]: EQ        1 R8 K16     ; if R8 == "" then PC := 129
111 [-]: JMP       129          ; PC := 129
112 [-]: GETGLOBAL R10 K24      ; R10 := mMovie
113 [-]: SELF      R10 R10 K38  ; R11 := R10; R10 := R10["0x5DB0BD4"]
114 [-]: LOADK     R12 K39      ; R12 := "<"
115 [-]: MOVE      R13 R8       ; R13 := R8
116 [-]: LOADK     R14 K40      ; R14 := ">"
117 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
118 [-]: MOVE      R13 R1       ; R13 := R1
119 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
120 [-]: LOADK     R11 K41      ; R11 := " "
121 [-]: GETGLOBAL R12 K42      ; R12 := 0xD26C89A0
122 [-]: GETGLOBAL R13 K24      ; R13 := mMovie
123 [-]: SELF      R13 R13 K38  ; R14 := R13; R13 := R13["0x5DB0BD4"]
124 [-]: LOADK     R15 K43      ; R15 := "/Lotus/Language/CrewShip/CommandConsole_Tactical"
125 [-]: MOVE      R16 R0       ; R16 := R0
126 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
127 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
128 [-]: CONCAT    R9 R10 R12   ; R9 := R10 .. R11 .. R12
129 [-]: GETGLOBAL R10 K24      ; R10 := mMovie
130 [-]: SELF      R10 R10 K44  ; R11 := R10; R10 := R10["0x1C19D966"]
131 [-]: LOADK     R12 K45      ; R12 := "AbilityPanel.TacticalCallout"
132 [-]: LOADK     R13 K46      ; R13 := "text"
133 [-]: MOVE      R14 R9       ; R14 := R9
134 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
135 [-]: GETGLOBAL R10 K24      ; R10 := mMovie
136 [-]: SELF      R10 R10 K44  ; R11 := R10; R10 := R10["0x1C19D966"]
137 [-]: LOADK     R12 K47      ; R12 := "AbilityPanel.ControllerCastingButtons"
138 [-]: LOADK     R13 K48      ; R13 := "_alpha"
139 [-]: LOADK     R14 K49      ; R14 := 0
140 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
141 [-]: GETGLOBAL R10 K24      ; R10 := mMovie
142 [-]: SELF      R10 R10 K44  ; R11 := R10; R10 := R10["0x1C19D966"]
143 [-]: LOADK     R12 K50      ; R12 := "AbilityPanel.ControllerCastingImage"
144 [-]: LOADK     R13 K48      ; R13 := "_alpha"
145 [-]: LOADK     R14 K49      ; R14 := 0
146 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
147 [-]: GETGLOBAL R10 K24      ; R10 := mMovie
148 [-]: SELF      R10 R10 K44  ; R11 := R10; R10 := R10["0x1C19D966"]
149 [-]: LOADK     R12 K45      ; R12 := "AbilityPanel.TacticalCallout"
150 [-]: LOADK     R13 K48      ; R13 := "_alpha"
151 [-]: LOADK     R14 K49      ; R14 := 0
152 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
153 [-]: GETGLOBAL R10 K24      ; R10 := mMovie
154 [-]: SELF      R10 R10 K44  ; R11 := R10; R10 := R10["0x1C19D966"]
155 [-]: LOADK     R12 K51      ; R12 := "AbilityPanel.FocusButton"
156 [-]: LOADK     R13 K48      ; R13 := "_alpha"
157 [-]: LOADK     R14 K49      ; R14 := 0
158 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
159 [-]: GETUPVAL  R10 U2       ; R10 := U2
160 [-]: EQ        1 R10 K52    ; if R10 == nil then PC := 203
161 [-]: JMP       203          ; PC := 203
162 [-]: LOADK     R10 K16      ; R10 := ""
163 [-]: GETUPVAL  R11 U2       ; R11 := U2
164 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["Message"]
165 [-]: GETGLOBAL R12 K54      ; R12 := 0x6A235628
166 [-]: MOVE      R13 R11      ; R13 := R11
167 [-]: CALL      R12 2 2      ; R12 := R12(R13)
168 [-]: EQ        0 R12 K55    ; if R12 ~= "function" then PC := 173
169 [-]: JMP       173          ; PC := 173
170 [-]: MOVE      R12 R11      ; R12 := R11
171 [-]: CALL      R12 1 2      ; R12 := R12()
172 [-]: MOVE      R11 R12      ; R11 := R12
173 [-]: GETUPVAL  R12 U2       ; R12 := U2
174 [-]: GETTABLE  R12 R12 K56  ; R12 := R12["InputFilter"]
175 [-]: GETGLOBAL R13 K57      ; R13 := 0x400E7765
176 [-]: MOVE      R14 R12      ; R14 := R12
177 [-]: CALL      R13 2 2      ; R13 := R13(R14)
178 [-]: TEST      R13 1        ; if R13 then PC := 189
179 [-]: JMP       189          ; PC := 189
180 [-]: GETGLOBAL R13 K24      ; R13 := mMovie
181 [-]: SELF      R13 R13 K58  ; R14 := R13; R13 := R13["0x6724E8D6"]
182 [-]: MOVE      R15 R11      ; R15 := R11
183 [-]: MOVE      R16 R12      ; R16 := R12
184 [-]: GETUPVAL  R17 U2       ; R17 := U2
185 [-]: GETTABLE  R17 R17 K59  ; R17 := R17["Params"]
186 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
187 [-]: MOVE      R10 R13      ; R10 := R13
188 [-]: JMP       197          ; PC := 197
189 [-]: GETGLOBAL R13 K24      ; R13 := mMovie
190 [-]: SELF      R13 R13 K38  ; R14 := R13; R13 := R13["0x5DB0BD4"]
191 [-]: MOVE      R15 R11      ; R15 := R11
192 [-]: MOVE      R16 R1       ; R16 := R1
193 [-]: GETUPVAL  R17 U2       ; R17 := U2
194 [-]: GETTABLE  R17 R17 K59  ; R17 := R17["Params"]
195 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
196 [-]: MOVE      R10 R13      ; R10 := R13
197 [-]: GETGLOBAL R13 K24      ; R13 := mMovie
198 [-]: SELF      R13 R13 K44  ; R14 := R13; R13 := R13["0x1C19D966"]
199 [-]: LOADK     R15 K60      ; R15 := "ImpactMessage.Label"
200 [-]: LOADK     R16 K46      ; R16 := "text"
201 [-]: MOVE      R17 R10      ; R17 := R10
202 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
203 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 4112
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x4CDEF9FF
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScreenDuck"]
  6 [-]: LT        0 K0 R2      ; if 0 >= R2 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETGLOBAL R3 K3        ; R3 := math
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x8B011038"]
 11 [-]: LOADK     R4 K0        ; R4 := 0
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mScreenDuck"]
 14 [-]: MUL       R6 R1 K5     ; R6 := R1 * 0.5
 15 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: SETTABLE  R2 K2 R3     ; R2["mScreenDuck"] := R3
 18 [-]: LOADK     R0 K0        ; R0 := 0
 19 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF017C404"]
 21 [-]: LOADK     R4 K0        ; R4 := 0
 22 [-]: CALL      R2 3 1       ; R2(R3,R4)
 23 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 24 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0xE7F490E3"]
 25 [-]: GETGLOBAL R4 K3        ; R4 := math
 26 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0x65F9712A"]
 27 [-]: LOADK     R5 K10       ; R5 := 1
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["mScreenDuck"]
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: MUL       R4 R4 K11    ; R4 := R4 * 0.80000001192093
 32 [-]: CALL      R2 3 1       ; R2(R3,R4)
 33 [-]: GETGLOBAL R2 K12       ; R2 := _T
 34 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["TopMenuOpen"]
 35 [-]: TEST      R2 0         ; if not R2 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: LOADK     R0 K10       ; R0 := 1
 38 [-]: GETUPVAL  R2 U1        ; R2 := U1
 39 [-]: SETTABLE  R2 K13 K14   ; R2["TopMenuOpen"] := "0x1"
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["TopMenuOpen"]
 43 [-]: TEST      R2 0         ; if not R2 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETUPVAL  R2 U2        ; R2 := U2
 46 [-]: CALL      R2 1 1       ; R2()
 47 [-]: GETUPVAL  R2 U1        ; R2 := U1
 48 [-]: SETTABLE  R2 K13 K15   ; R2["TopMenuOpen"] := "0x0"
 49 [-]: GETUPVAL  R2 U3        ; R2 := U3
 50 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["PhotoBooth"]
 51 [-]: TEST      R2 0         ; if not R2 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: LOADK     R0 K10       ; R0 := 1
 54 [-]: GETGLOBAL R2 K12       ; R2 := _T
 55 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["HideHud"]
 56 [-]: EQ        1 R2 K18     ; if R2 == nil then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETGLOBAL R2 K12       ; R2 := _T
 59 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["HideHud"]
 60 [-]: LT        0 K0 R2      ; if 0 >= R2 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: LOADK     R0 K10       ; R0 := 1
 63 [-]: GETGLOBAL R2 K19       ; R2 := gRegion
 64 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x7B2F8B2F"]
 65 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 66 [-]: TEST      R2 0         ; if not R2 then PC := 76
 67 [-]: JMP       76           ; PC := 76
 68 [-]: GETGLOBAL R2 K19       ; R2 := gRegion
 69 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x7B2F8B2F"]
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x55359FCC"]
 72 [-]: GETUPVAL  R4 U4        ; R4 := U4
 73 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 74 [-]: TEST      R2 0         ; if not R2 then PC := 86
 75 [-]: JMP       86           ; PC := 86
 76 [-]: GETGLOBAL R2 K22       ; R2 := 0x400E7765
 77 [-]: GETUPVAL  R3 U5        ; R3 := U5
 78 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 79 [-]: TEST      R2 1         ; if R2 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETUPVAL  R2 U5        ; R2 := U5
 82 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2["0x3B0C00B5"]
 83 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 84 [-]: TEST      R2 0         ; if not R2 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: LOADK     R0 K10       ; R0 := 1
 87 [-]: GETUPVAL  R2 U1        ; R2 := U1
 88 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["WaitingForProgressMovie"]
 89 [-]: TEST      R2 0         ; if not R2 then PC := 102
 90 [-]: JMP       102          ; PC := 102
 91 [-]: GETGLOBAL R2 K25       ; R2 := gFlashMgr
 92 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2["0xCC01AE7A"]
 93 [-]: GETGLOBAL R4 K27       ; R4 := progressMovie
 94 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 95 [-]: TEST      R2 1         ; if R2 then PC := 100
 96 [-]: JMP       100          ; PC := 100
 97 [-]: GETUPVAL  R2 U1        ; R2 := U1
 98 [-]: SETTABLE  R2 K24 K15   ; R2["WaitingForProgressMovie"] := "0x0"
 99 [-]: JMP       111          ; PC := 111
100 [-]: LOADK     R0 K10       ; R0 := 1
101 [-]: JMP       111          ; PC := 111
102 [-]: GETGLOBAL R2 K12       ; R2 := _T
103 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["SpectatorHudOpen"]
104 [-]: TEST      R2 1         ; if R2 then PC := 110
105 [-]: JMP       110          ; PC := 110
106 [-]: GETGLOBAL R2 K12       ; R2 := _T
107 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["PVPScoreBoardOpen"]
108 [-]: TEST      R2 0         ; if not R2 then PC := 111
109 [-]: JMP       111          ; PC := 111
110 [-]: LOADK     R0 K10       ; R0 := 1
111 [-]: GETUPVAL  R2 U0        ; R2 := U0
112 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["IsAlternateHud"]
113 [-]: TEST      R2 0         ; if not R2 then PC := 116
114 [-]: JMP       116          ; PC := 116
115 [-]: LOADK     R0 K10       ; R0 := 1
116 [-]: GETGLOBAL R2 K12       ; R2 := _T
117 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["MinimalHud"]
118 [-]: TEST      R2 0         ; if not R2 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: LOADK     R0 K10       ; R0 := 1
121 [-]: GETUPVAL  R2 U1        ; R2 := U1
122 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["Fade"]
123 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 129
124 [-]: JMP       129          ; PC := 129
125 [-]: GETGLOBAL R2 K12       ; R2 := _T
126 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["UpdateHudFadeValue"]
127 [-]: TEST      R2 0         ; if not R2 then PC := 321
128 [-]: JMP       321          ; PC := 321
129 [-]: GETUPVAL  R2 U1        ; R2 := U1
130 [-]: SETTABLE  R2 K32 R0    ; R2["Fade"] := R0
131 [-]: GETGLOBAL R2 K12       ; R2 := _T
132 [-]: SETTABLE  R2 K33 K18   ; R2["UpdateHudFadeValue"] := nil
133 [-]: GETGLOBAL R2 K34       ; R2 := 0xC9457441
134 [-]: MOVE      R3 R0        ; R3 := R0
135 [-]: CALL      R2 2 2       ; R2 := R2(R3)
136 [-]: SUB       R2 K10 R2    ; R2 := 1 - R2
137 [-]: MUL       R2 R2 K35    ; R2 := R2 * 100
138 [-]: GETUPVAL  R3 U6        ; R3 := U6
139 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["Enabled"]
140 [-]: TEST      R3 1         ; if R3 then PC := 184
141 [-]: JMP       184          ; PC := 184
142 [-]: GETGLOBAL R3 K37       ; R3 := 0xAA09E79D
143 [-]: GETUPVAL  R4 U6        ; R4 := U6
144 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["Faded"]
145 [-]: CALL      R3 2 2       ; R3 := R3(R4)
146 [-]: EQ        0 R3 K18     ; if R3 ~= nil then PC := 184
147 [-]: JMP       184          ; PC := 184
148 [-]: GETGLOBAL R3 K12       ; R3 := _T
149 [-]: GETTABLE  R3 R3 K31    ; R3 := R3["MinimalHud"]
150 [-]: TEST      R3 1         ; if R3 then PC := 184
151 [-]: JMP       184          ; PC := 184
152 [-]: GETUPVAL  R3 U0        ; R3 := U0
153 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["IsAlternateHud"]
154 [-]: TEST      R3 1         ; if R3 then PC := 184
155 [-]: JMP       184          ; PC := 184
156 [-]: GETGLOBAL R3 K12       ; R3 := _T
157 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["SpectatorHudOpen"]
158 [-]: TEST      R3 1         ; if R3 then PC := 184
159 [-]: JMP       184          ; PC := 184
160 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
161 [-]: SELF      R3 R3 K39    ; R4 := R3; R3 := R3["0x1C19D966"]
162 [-]: LOADK     R5 K40       ; R5 := "_root"
163 [-]: LOADK     R6 K41       ; R6 := "_alpha"
164 [-]: MOVE      R7 R2        ; R7 := R2
165 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
166 [-]: GETUPVAL  R3 U0        ; R3 := U0
167 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["UIMode"]
168 [-]: GETUPVAL  R4 U7        ; R4 := U7
169 [-]: GETTABLE  R4 R4 K43    ; R4 := R4["UI_MODE_IN_DOJO"]
170 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 317
171 [-]: JMP       317          ; PC := 317
172 [-]: GETGLOBAL R3 K25       ; R3 := gFlashMgr
173 [-]: SELF      R3 R3 K44    ; R4 := R3; R3 := R3["0x616DD092"]
174 [-]: GETGLOBAL R5 K45       ; R5 := dojoLegendMovie
175 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
176 [-]: TEST      R3 0         ; if not R3 then PC := 317
177 [-]: JMP       317          ; PC := 317
178 [-]: SELF      R4 R3 K39    ; R5 := R3; R4 := R3["0x1C19D966"]
179 [-]: LOADK     R6 K40       ; R6 := "_root"
180 [-]: LOADK     R7 K41       ; R7 := "_alpha"
181 [-]: MOVE      R8 R2        ; R8 := R2
182 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
183 [-]: JMP       317          ; PC := 317
184 [-]: GETGLOBAL R4 K46       ; R4 := 0x63B09107
185 [-]: GETUPVAL  R5 U6        ; R5 := U6
186 [-]: GETTABLE  R5 R5 K47    ; R5 := R5["Clips"]
187 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
188 [-]: JMP       315          ; PC := 315
189 [-]: GETUPVAL  R9 U0        ; R9 := U0
190 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["IsAlternateHud"]
191 [-]: TEST      R9 1         ; if R9 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETGLOBAL R9 K12       ; R9 := _T
194 [-]: GETTABLE  R9 R9 K48    ; R9 := R9["ForceShowHudTrackers"]
195 [-]: TEST      R9 0         ; if not R9 then PC := 199
196 [-]: JMP       199          ; PC := 199
197 [-]: EQ        1 R8 K49     ; if R8 == "HudTracker" then PC := 295
198 [-]: JMP       295          ; PC := 295
199 [-]: GETUPVAL  R9 U0        ; R9 := U0
200 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["IsAlternateHud"]
201 [-]: TEST      R9 1         ; if R9 then PC := 207
202 [-]: JMP       207          ; PC := 207
203 [-]: GETGLOBAL R9 K12       ; R9 := _T
204 [-]: GETTABLE  R9 R9 K50    ; R9 := R9["ForceShowHealthShield"]
205 [-]: TEST      R9 0         ; if not R9 then PC := 209
206 [-]: JMP       209          ; PC := 209
207 [-]: EQ        1 R8 K51     ; if R8 == "HealthAndShield" then PC := 295
208 [-]: JMP       295          ; PC := 295
209 [-]: GETUPVAL  R9 U0        ; R9 := U0
210 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["IsAlternateHud"]
211 [-]: TEST      R9 1         ; if R9 then PC := 217
212 [-]: JMP       217          ; PC := 217
213 [-]: GETGLOBAL R9 K12       ; R9 := _T
214 [-]: GETTABLE  R9 R9 K52    ; R9 := R9["ForceShowMiniMap"]
215 [-]: TEST      R9 0         ; if not R9 then PC := 221
216 [-]: JMP       221          ; PC := 221
217 [-]: EQ        1 R8 K53     ; if R8 == "MiniMapContainer" then PC := 295
218 [-]: JMP       295          ; PC := 295
219 [-]: EQ        1 R8 K54     ; if R8 == "MiniMapOverlayMsg" then PC := 295
220 [-]: JMP       295          ; PC := 295
221 [-]: GETGLOBAL R9 K12       ; R9 := _T
222 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["MinimalHud"]
223 [-]: TEST      R9 0         ; if not R9 then PC := 231
224 [-]: JMP       231          ; PC := 231
225 [-]: EQ        1 R8 K55     ; if R8 == "Reticle" then PC := 295
226 [-]: JMP       295          ; PC := 295
227 [-]: EQ        1 R8 K56     ; if R8 == "ReticleCustom" then PC := 295
228 [-]: JMP       295          ; PC := 295
229 [-]: EQ        1 R8 K57     ; if R8 == "PvPHeldFlagTimer" then PC := 295
230 [-]: JMP       295          ; PC := 295
231 [-]: GETUPVAL  R9 U6        ; R9 := U6
232 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["Faded"]
233 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
234 [-]: TEST      R9 1         ; if R9 then PC := 256
235 [-]: JMP       256          ; PC := 256
236 [-]: GETUPVAL  R9 U6        ; R9 := U6
237 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["Faded"]
238 [-]: NEWTABLE  R10 0 2      ; R10 := {}
239 [-]: GETGLOBAL R11 K6       ; R11 := mMovie
240 [-]: SELF      R11 R11 K59  ; R12 := R11; R11 := R11["0x6B7B470B"]
241 [-]: MOVE      R13 R8       ; R13 := R8
242 [-]: LOADK     R14 K60      ; R14 := "_visible"
243 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
244 [-]: EQ        1 R11 K61    ; if R11 == "true" then PC := 247
245 [-]: JMP       247          ; PC := 247
246 [-]: MOVE      R11 R0       ; R11 := R0
247 [-]: MOVE      R11 R1       ; R11 := R1
248 [-]: SETTABLE  R10 K58 R11  ; R10["Visible"] := R11
249 [-]: GETGLOBAL R11 K6       ; R11 := mMovie
250 [-]: SELF      R11 R11 K59  ; R12 := R11; R11 := R11["0x6B7B470B"]
251 [-]: MOVE      R13 R8       ; R13 := R8
252 [-]: LOADK     R14 K41      ; R14 := "_alpha"
253 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
254 [-]: SETTABLE  R10 K62 R11  ; R10["Alpha"] := R11
255 [-]: SETTABLE  R9 R8 R10    ; R9[R8] := R10
256 [-]: GETGLOBAL R9 K6        ; R9 := mMovie
257 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x1C19D966"]
258 [-]: MOVE      R11 R8       ; R11 := R8
259 [-]: LOADK     R12 K60      ; R12 := "_visible"
260 [-]: EQ        0 R0 K0      ; if R0 ~= 0 then PC := 267
261 [-]: JMP       267          ; PC := 267
262 [-]: GETUPVAL  R13 U6       ; R13 := U6
263 [-]: GETTABLE  R13 R13 K38  ; R13 := R13["Faded"]
264 [-]: GETTABLE  R13 R13 R8   ; R13 := R13[R8]
265 [-]: GETTABLE  R13 R13 K58  ; R13 := R13["Visible"]
266 [-]: JMP       269          ; PC := 269
267 [-]: MOVE      R13 R0       ; R13 := R0
268 [-]: MOVE      R13 R1       ; R13 := R1
269 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
270 [-]: GETUPVAL  R9 U6        ; R9 := U6
271 [-]: GETTABLE  R9 R9 K63    ; R9 := R9["AutoClips"]
272 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
273 [-]: TEST      R9 1         ; if R9 then PC := 289
274 [-]: JMP       289          ; PC := 289
275 [-]: GETGLOBAL R9 K6        ; R9 := mMovie
276 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x1C19D966"]
277 [-]: MOVE      R11 R8       ; R11 := R8
278 [-]: LOADK     R12 K41      ; R12 := "_alpha"
279 [-]: GETGLOBAL R13 K34      ; R13 := 0xC9457441
280 [-]: MOVE      R14 R0       ; R14 := R0
281 [-]: CALL      R13 2 2      ; R13 := R13(R14)
282 [-]: SUB       R13 K10 R13  ; R13 := 1 - R13
283 [-]: GETUPVAL  R14 U6       ; R14 := U6
284 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["Faded"]
285 [-]: GETTABLE  R14 R14 R8   ; R14 := R14[R8]
286 [-]: GETTABLE  R14 R14 K62  ; R14 := R14["Alpha"]
287 [-]: MUL       R13 R13 R14  ; R13 := R13 * R14
288 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
289 [-]: EQ        0 R0 K0      ; if R0 ~= 0 then PC := 315
290 [-]: JMP       315          ; PC := 315
291 [-]: GETUPVAL  R9 U6        ; R9 := U6
292 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["Faded"]
293 [-]: SETTABLE  R9 R8 K18    ; R9[R8] := nil
294 [-]: JMP       315          ; PC := 315
295 [-]: GETUPVAL  R9 U6        ; R9 := U6
296 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["Faded"]
297 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
298 [-]: TEST      R9 0         ; if not R9 then PC := 315
299 [-]: JMP       315          ; PC := 315
300 [-]: GETGLOBAL R9 K6        ; R9 := mMovie
301 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x1C19D966"]
302 [-]: MOVE      R11 R8       ; R11 := R8
303 [-]: LOADK     R12 K60      ; R12 := "_visible"
304 [-]: MOVE      R13 R1       ; R13 := R1
305 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
306 [-]: GETGLOBAL R9 K6        ; R9 := mMovie
307 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x1C19D966"]
308 [-]: MOVE      R11 R8       ; R11 := R8
309 [-]: LOADK     R12 K41      ; R12 := "_alpha"
310 [-]: LOADK     R13 K35      ; R13 := 100
311 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
312 [-]: GETUPVAL  R9 U6        ; R9 := U6
313 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["Faded"]
314 [-]: SETTABLE  R9 R8 K18    ; R9[R8] := nil
315 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 189; R6 := R7 end
316 [-]: JMP       189          ; PC := 189
317 [-]: GETUPVAL  R9 U8        ; R9 := U8
318 [-]: SELF      R9 R9 K64    ; R10 := R9; R9 := R9["0x7B3F73E7"]
319 [-]: MOVE      R11 R2       ; R11 := R2
320 [-]: CALL      R9 3 1       ; R9(R10,R11)
321 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 4204
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 4208
; #Upvalues:       39
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  34

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Initialized"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x4CDEF9FF
 12 [-]: CALL      R0 1 2       ; R0 := R0()
 13 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x80D6B1A"]
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x8C7099E9"]
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: CALL      R1 3 1       ; R1(R2,R3)
 26 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 27 [-]: GETUPVAL  R2 U2        ; R2 := U2
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETUPVAL  R1 U2        ; R1 := U2
 32 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x8C7099E9"]
 33 [-]: CALL      R1 2 1       ; R1(R2)
 34 [-]: GETUPVAL  R1 U3        ; R1 := U3
 35 [-]: CALL      R1 1 2       ; R1 := R1()
 36 [-]: TEST      R1 0         ; if not R1 then PC := 63
 37 [-]: JMP       63           ; PC := 63
 38 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 39 [-]: GETUPVAL  R3 U4        ; R3 := U4
 40 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["Player"]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: TEST      R2 1         ; if R2 then PC := 63
 43 [-]: JMP       63           ; PC := 63
 44 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 45 [-]: GETUPVAL  R3 U4        ; R3 := U4
 46 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["Player"]
 47 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mDamageControl"]
 48 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 49 [-]: TEST      R2 1         ; if R2 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETUPVAL  R2 U4        ; R2 := U4
 52 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Player"]
 53 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mAvatar"]
 54 [-]: GETUPVAL  R3 U5        ; R3 := U5
 55 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 63
 56 [-]: JMP       63           ; PC := 63
 57 [-]: GETUPVAL  R2 U4        ; R2 := U4
 58 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Player"]
 59 [-]: GETUPVAL  R3 U5        ; R3 := U5
 60 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0xA3F6069B"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: SETTABLE  R2 K7 R3     ; R2["mDamageControl"] := R3
 63 [-]: TEST      R1 1         ; if R1 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETUPVAL  R2 U0        ; R2 := U0
 67 [-]: SETTABLE  R2 K10 K11   ; R2["mDispatchingQueuedFuncs"] := "0x1"
 68 [-]: GETUPVAL  R2 U6        ; R2 := U6
 69 [-]: LEN       R2 R2        ; R2 := # R2
 70 [-]: LT        0 K12 R2     ; if 0 >= R2 then PC := 117
 71 [-]: JMP       117          ; PC := 117
 72 [-]: LOADK     R2 K13       ; R2 := 1
 73 [-]: GETUPVAL  R3 U6        ; R3 := U6
 74 [-]: LEN       R3 R3        ; R3 := # R3
 75 [-]: LOADK     R4 K13       ; R4 := 1
 76 [-]: FORPREP   R2 114       ; R2 -= R4; PC := 114
 77 [-]: GETUPVAL  R6 U6        ; R6 := U6
 78 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 79 [-]: GETTABLE  R6 R6 K13    ; R6 := R6[1]
 80 [-]: GETUPVAL  R7 U6        ; R7 := U6
 81 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 82 [-]: GETTABLE  R7 R7 K14    ; R7 := R7[2]
 83 [-]: GETUPVAL  R8 U6        ; R8 := U6
 84 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 85 [-]: GETTABLE  R8 R8 K15    ; R8 := R8[3]
 86 [-]: GETUPVAL  R9 U6        ; R9 := U6
 87 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 88 [-]: GETTABLE  R9 R9 K16    ; R9 := R9[4]
 89 [-]: GETUPVAL  R10 U6       ; R10 := U6
 90 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 91 [-]: GETTABLE  R10 R10 K17  ; R10 := R10[5]
 92 [-]: GETUPVAL  R11 U6       ; R11 := U6
 93 [-]: GETTABLE  R11 R11 R5   ; R11 := R11[R5]
 94 [-]: GETTABLE  R11 R11 K18  ; R11 := R11[6]
 95 [-]: GETUPVAL  R12 U6       ; R12 := U6
 96 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 97 [-]: GETTABLE  R12 R12 K19  ; R12 := R12[7]
 98 [-]: GETUPVAL  R13 U6       ; R13 := U6
 99 [-]: GETTABLE  R13 R13 R5   ; R13 := R13[R5]
100 [-]: GETTABLE  R13 R13 K20  ; R13 := R13[8]
101 [-]: GETUPVAL  R14 U6       ; R14 := U6
102 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
103 [-]: GETTABLE  R14 R14 K21  ; R14 := R14[9]
104 [-]: GETUPVAL  R15 U6       ; R15 := U6
105 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
106 [-]: GETTABLE  R15 R15 K22  ; R15 := R15[10]
107 [-]: GETUPVAL  R16 U6       ; R16 := U6
108 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
109 [-]: GETTABLE  R16 R16 K23  ; R16 := R16[11]
110 [-]: GETUPVAL  R17 U6       ; R17 := U6
111 [-]: GETTABLE  R17 R17 R5   ; R17 := R17[R5]
112 [-]: GETTABLE  R17 R17 K24  ; R17 := R17[12]
113 [-]: CALL      R6 12 1      ; R6(R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17)
114 [-]: FORLOOP   R2 77        ; R2 += R4; if R2 <= R3 then begin PC := 77; R5 := R2 end
115 [-]: NEWTABLE  R6 0 0       ; R6 := {}
116 [-]: MOVE      R6 R6        ; R6 := R6
117 [-]: GETUPVAL  R6 U0        ; R6 := U0
118 [-]: SETTABLE  R6 K10 K25   ; R6["mDispatchingQueuedFuncs"] := "0x0"
119 [-]: GETUPVAL  R6 U0        ; R6 := U0
120 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["PlayerListHasChanged"]
121 [-]: TEST      R6 0         ; if not R6 then PC := 125
122 [-]: JMP       125          ; PC := 125
123 [-]: GETUPVAL  R6 U7        ; R6 := U7
124 [-]: CALL      R6 1 1       ; R6()
125 [-]: GETUPVAL  R6 U0        ; R6 := U0
126 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["UIMode"]
127 [-]: GETUPVAL  R7 U8        ; R7 := U8
128 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["UI_MODE_IN_GAME"]
129 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 144
130 [-]: JMP       144          ; PC := 144
131 [-]: GETUPVAL  R6 U0        ; R6 := U0
132 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["IsInConclave"]
133 [-]: TEST      R6 1         ; if R6 then PC := 144
134 [-]: JMP       144          ; PC := 144
135 [-]: GETUPVAL  R6 U0        ; R6 := U0
136 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["MissionType"]
137 [-]: EQ        0 R6 K31     ; if R6 ~= -1 then PC := 144
138 [-]: JMP       144          ; PC := 144
139 [-]: GETUPVAL  R6 U0        ; R6 := U0
140 [-]: GETUPVAL  R7 U9        ; R7 := U9
141 [-]: SELF      R7 R7 K32    ; R8 := R7; R7 := R7["0xE20DC519"]
142 [-]: CALL      R7 2 2       ; R7 := R7(R8)
143 [-]: SETTABLE  R6 K30 R7    ; R6["MissionType"] := R7
144 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
145 [-]: GETUPVAL  R7 U10       ; R7 := U10
146 [-]: CALL      R6 2 2       ; R6 := R6(R7)
147 [-]: TEST      R6 1         ; if R6 then PC := 152
148 [-]: JMP       152          ; PC := 152
149 [-]: GETUPVAL  R6 U10       ; R6 := U10
150 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0x8C7099E9"]
151 [-]: CALL      R6 2 1       ; R6(R7)
152 [-]: GETUPVAL  R6 U0        ; R6 := U0
153 [-]: GETGLOBAL R7 K34       ; R7 := Engine
154 [-]: GETTABLE  R7 R7 K35    ; R7 := R7["0x9490FE70"]
155 [-]: CALL      R7 1 2       ; R7 := R7()
156 [-]: SETTABLE  R6 K33 R7    ; R6["mPlayingWithController"] := R7
157 [-]: GETUPVAL  R6 U11       ; R6 := U11
158 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0x8C7099E9"]
159 [-]: GETUPVAL  R8 U12       ; R8 := U12
160 [-]: MOVE      R9 R0        ; R9 := R0
161 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
162 [-]: GETGLOBAL R6 K36       ; R6 := _T
163 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["OverrideDamageIndicatorColor"]
164 [-]: EQ        1 R6 K38     ; if R6 == nil then PC := 173
165 [-]: JMP       173          ; PC := 173
166 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
167 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6["0x1C19D966"]
168 [-]: LOADK     R8 K40       ; R8 := "SuccessfulHitNotification"
169 [-]: LOADK     R9 K41       ; R9 := "_color"
170 [-]: GETGLOBAL R10 K36      ; R10 := _T
171 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["OverrideDamageIndicatorColor"]
172 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
173 [-]: GETUPVAL  R6 U13       ; R6 := U13
174 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["SecretMiniGameActive"]
175 [-]: GETGLOBAL R7 K36       ; R7 := _T
176 [-]: GETTABLE  R7 R7 K42    ; R7 := R7["SecretMiniGameActive"]
177 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 201
178 [-]: JMP       201          ; PC := 201
179 [-]: GETUPVAL  R6 U13       ; R6 := U13
180 [-]: GETGLOBAL R7 K36       ; R7 := _T
181 [-]: GETTABLE  R7 R7 K42    ; R7 := R7["SecretMiniGameActive"]
182 [-]: SETTABLE  R6 K42 R7    ; R6["SecretMiniGameActive"] := R7
183 [-]: GETUPVAL  R6 U11       ; R6 := U11
184 [-]: SELF      R6 R6 K43    ; R7 := R6; R6 := R6["0xDDFBCED2"]
185 [-]: GETGLOBAL R8 K36       ; R8 := _T
186 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["SecretMiniGameActive"]
187 [-]: EQ        1 R8 K11     ; if R8 == "0x1" then PC := 190
188 [-]: JMP       190          ; PC := 190
189 [-]: MOVE      R8 R0        ; R8 := R0
190 [-]: MOVE      R8 R1        ; R8 := R1
191 [-]: CALL      R6 3 1       ; R6(R7,R8)
192 [-]: GETUPVAL  R6 U11       ; R6 := U11
193 [-]: SELF      R6 R6 K44    ; R7 := R6; R6 := R6["0xE642A116"]
194 [-]: GETGLOBAL R8 K36       ; R8 := _T
195 [-]: GETTABLE  R8 R8 K45    ; R8 := R8["SecretMiniGameAllowsPause"]
196 [-]: EQ        1 R8 K11     ; if R8 == "0x1" then PC := 199
197 [-]: JMP       199          ; PC := 199
198 [-]: MOVE      R8 R0        ; R8 := R0
199 [-]: MOVE      R8 R1        ; R8 := R1
200 [-]: CALL      R6 3 1       ; R6(R7,R8)
201 [-]: GETUPVAL  R6 U0        ; R6 := U0
202 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["UIMode"]
203 [-]: GETUPVAL  R7 U8        ; R7 := U8
204 [-]: GETTABLE  R7 R7 K46    ; R7 := R7["UI_MODE_IN_SPACE_HUB"]
205 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 307
206 [-]: JMP       307          ; PC := 307
207 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
208 [-]: GETUPVAL  R7 U5        ; R7 := U5
209 [-]: CALL      R6 2 2       ; R6 := R6(R7)
210 [-]: TEST      R6 1         ; if R6 then PC := 309
211 [-]: JMP       309          ; PC := 309
212 [-]: GETUPVAL  R6 U5        ; R6 := U5
213 [-]: SELF      R6 R6 K47    ; R7 := R6; R6 := R6["0xB8613F53"]
214 [-]: CALL      R6 2 2       ; R6 := R6(R7)
215 [-]: TEST      R6 0         ; if not R6 then PC := 309
216 [-]: JMP       309          ; PC := 309
217 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
218 [-]: GETUPVAL  R7 U13       ; R7 := U13
219 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["ActivePowerSuit"]
220 [-]: CALL      R6 2 2       ; R6 := R6(R7)
221 [-]: TEST      R6 0         ; if not R6 then PC := 229
222 [-]: JMP       229          ; PC := 229
223 [-]: GETUPVAL  R6 U13       ; R6 := U13
224 [-]: GETUPVAL  R7 U14       ; R7 := U14
225 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["InventoryController"]
226 [-]: SELF      R7 R7 K50    ; R8 := R7; R7 := R7["0x6978AC59"]
227 [-]: CALL      R7 2 2       ; R7 := R7(R8)
228 [-]: SETTABLE  R6 K48 R7    ; R6["ActivePowerSuit"] := R7
229 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
230 [-]: GETUPVAL  R7 U13       ; R7 := U13
231 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["ActivePowerSuit"]
232 [-]: CALL      R6 2 2       ; R6 := R6(R7)
233 [-]: TEST      R6 1         ; if R6 then PC := 240
234 [-]: JMP       240          ; PC := 240
235 [-]: GETUPVAL  R6 U13       ; R6 := U13
236 [-]: GETTABLE  R6 R6 K48    ; R6 := R6["ActivePowerSuit"]
237 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0xDDAD2706"]
238 [-]: CALL      R6 2 2       ; R6 := R6(R7)
239 [-]: JMP       242          ; PC := 242
240 [-]: MOVE      R6 R0        ; R6 := R0
241 [-]: MOVE      R6 R1        ; R6 := R1
242 [-]: TEST      R6 0         ; if not R6 then PC := 250
243 [-]: JMP       250          ; PC := 250
244 [-]: GETUPVAL  R7 U13       ; R7 := U13
245 [-]: GETUPVAL  R8 U14       ; R8 := U14
246 [-]: GETTABLE  R8 R8 K49    ; R8 := R8["InventoryController"]
247 [-]: SELF      R8 R8 K52    ; R9 := R8; R8 := R8["0xE81AC1B1"]
248 [-]: CALL      R8 2 2       ; R8 := R8(R9)
249 [-]: SETTABLE  R7 K48 R8    ; R7["ActivePowerSuit"] := R8
250 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
251 [-]: GETUPVAL  R8 U15       ; R8 := U15
252 [-]: CALL      R7 2 2       ; R7 := R7(R8)
253 [-]: TEST      R7 1         ; if R7 then PC := 260
254 [-]: JMP       260          ; PC := 260
255 [-]: GETUPVAL  R7 U13       ; R7 := U13
256 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["ActivePowerSuit"]
257 [-]: GETUPVAL  R8 U15       ; R8 := U15
258 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 309
259 [-]: JMP       309          ; PC := 309
260 [-]: GETUPVAL  R7 U13       ; R7 := U13
261 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["ActivePowerSuit"]
262 [-]: MOVE      R7 R15       ; R7 := R15
263 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
264 [-]: GETUPVAL  R8 U15       ; R8 := U15
265 [-]: CALL      R7 2 2       ; R7 := R7(R8)
266 [-]: TEST      R7 1         ; if R7 then PC := 309
267 [-]: JMP       309          ; PC := 309
268 [-]: GETUPVAL  R7 U0        ; R7 := U0
269 [-]: GETUPVAL  R8 U15       ; R8 := U15
270 [-]: SELF      R8 R8 K54    ; R9 := R8; R8 := R8["0x8B598ED4"]
271 [-]: GETGLOBAL R10 K55      ; R10 := operatorPowersuitType
272 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
273 [-]: SETTABLE  R7 K53 R8    ; R7["IsOperator"] := R8
274 [-]: GETUPVAL  R7 U15       ; R7 := U15
275 [-]: SELF      R7 R7 K56    ; R8 := R7; R7 := R7["0xAFA67B2D"]
276 [-]: CALL      R7 2 2       ; R7 := R7(R8)
277 [-]: SELF      R8 R7 K57    ; R9 := R7; R8 := R7["0xE36D0FC5"]
278 [-]: GETGLOBAL R10 K58      ; R10 := Lotus_Game
279 [-]: GETTABLE  R10 R10 K59  ; R10 := R10["PrimaryColors"]
280 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
281 [-]: SELF      R9 R8 K60    ; R10 := R8; R9 := R8["0x3A5ED62E"]
282 [-]: GETGLOBAL R11 K58      ; R11 := Lotus_Game
283 [-]: GETTABLE  R11 R11 K61  ; R11 := R11["EnergyColor"]
284 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
285 [-]: TEST      R9 0         ; if not R9 then PC := 309
286 [-]: JMP       309          ; PC := 309
287 [-]: GETGLOBAL R9 K62       ; R9 := 0xB5A59043
288 [-]: SELF      R10 R8 K63   ; R11 := R8; R10 := R8["0xDDA3917C"]
289 [-]: GETGLOBAL R12 K58      ; R12 := Lotus_Game
290 [-]: GETTABLE  R12 R12 K61  ; R12 := R12["EnergyColor"]
291 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
292 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
293 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
294 [-]: MOVE      R11 R9       ; R11 := R9
295 [-]: CALL      R10 2 2      ; R10 := R10(R11)
296 [-]: TEST      R10 1        ; if R10 then PC := 309
297 [-]: JMP       309          ; PC := 309
298 [-]: SELF      R10 R9 K64   ; R11 := R9; R10 := R9["0x479E62B4"]
299 [-]: CALL      R10 2 2      ; R10 := R10(R11)
300 [-]: GETGLOBAL R11 K1       ; R11 := mMovie
301 [-]: SELF      R11 R11 K39  ; R12 := R11; R11 := R11["0x1C19D966"]
302 [-]: LOADK     R13 K65      ; R13 := "AbilityChargeProgress"
303 [-]: LOADK     R14 K41      ; R14 := "_color"
304 [-]: MOVE      R15 R10      ; R15 := R10
305 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
306 [-]: JMP       309          ; PC := 309
307 [-]: GETUPVAL  R11 U16      ; R11 := U16
308 [-]: CALL      R11 1 1      ; R11()
309 [-]: GETUPVAL  R11 U17      ; R11 := U17
310 [-]: CALL      R11 1 1      ; R11()
311 [-]: GETUPVAL  R11 U5       ; R11 := U5
312 [-]: GETUPVAL  R12 U0       ; R12 := U0
313 [-]: GETTABLE  R12 R12 K66  ; R12 := R12["IsSpectating"]
314 [-]: TEST      R12 1        ; if R12 then PC := 323
315 [-]: JMP       323          ; PC := 323
316 [-]: GETUPVAL  R12 U11      ; R12 := U11
317 [-]: SELF      R12 R12 K67  ; R13 := R12; R12 := R12["0x41AB2063"]
318 [-]: MOVE      R14 R11      ; R14 := R11
319 [-]: MOVE      R15 R0       ; R15 := R0
320 [-]: GETGLOBAL R16 K36      ; R16 := _T
321 [-]: GETTABLE  R16 R16 K68  ; R16 := R16["velocityCoords"]
322 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
323 [-]: GETGLOBAL R12 K69      ; R12 := gFlashMgr
324 [-]: SELF      R12 R12 K70  ; R13 := R12; R12 := R12["0xCC01AE7A"]
325 [-]: GETGLOBAL R14 K71      ; R14 := backgroundMovie
326 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
327 [-]: TEST      R12 1        ; if R12 then PC := 337
328 [-]: JMP       337          ; PC := 337
329 [-]: GETGLOBAL R12 K72      ; R12 := 0x93B1256B
330 [-]: LOADK     R13 K73      ; R13 := "HUD REDUX: Pushing background movie from Update"
331 [-]: CALL      R12 2 1      ; R12(R13)
332 [-]: GETGLOBAL R12 K69      ; R12 := gFlashMgr
333 [-]: SELF      R12 R12 K74  ; R13 := R12; R12 := R12["0x24FF386"]
334 [-]: GETGLOBAL R14 K71      ; R14 := backgroundMovie
335 [-]: CALL      R12 3 1      ; R12(R13,R14)
336 [-]: JMP       356          ; PC := 356
337 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
338 [-]: GETGLOBAL R13 K36      ; R13 := _T
339 [-]: GETTABLE  R13 R13 K75  ; R13 := R13["BackgroundInitialized"]
340 [-]: CALL      R12 2 2      ; R12 := R12(R13)
341 [-]: TEST      R12 0        ; if not R12 then PC := 356
342 [-]: JMP       356          ; PC := 356
343 [-]: GETGLOBAL R12 K72      ; R12 := 0x93B1256B
344 [-]: LOADK     R13 K76      ; R13 := "HUD REDUX: Closing background and reinitializing due to the fact that the BackgroundInitialized is nil"
345 [-]: CALL      R12 2 1      ; R12(R13)
346 [-]: GETGLOBAL R12 K69      ; R12 := gFlashMgr
347 [-]: SELF      R12 R12 K77  ; R13 := R12; R12 := R12["0x616DD092"]
348 [-]: GETGLOBAL R14 K71      ; R14 := backgroundMovie
349 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
350 [-]: SELF      R13 R12 K78  ; R14 := R12; R13 := R12["0xA58BB96C"]
351 [-]: CALL      R13 2 1      ; R13(R14)
352 [-]: GETGLOBAL R13 K69      ; R13 := gFlashMgr
353 [-]: SELF      R13 R13 K74  ; R14 := R13; R13 := R13["0x24FF386"]
354 [-]: GETGLOBAL R15 K71      ; R15 := backgroundMovie
355 [-]: CALL      R13 3 1      ; R13(R14,R15)
356 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
357 [-]: GETUPVAL  R14 U0       ; R14 := U0
358 [-]: GETTABLE  R14 R14 K79  ; R14 := R14["mHudMarkersMovie"]
359 [-]: CALL      R13 2 2      ; R13 := R13(R14)
360 [-]: TEST      R13 0        ; if not R13 then PC := 381
361 [-]: JMP       381          ; PC := 381
362 [-]: GETUPVAL  R13 U0       ; R13 := U0
363 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
364 [-]: SELF      R14 R14 K80  ; R15 := R14; R14 := R14["0x5FF274BB"]
365 [-]: GETGLOBAL R16 K81      ; R16 := hudMarkersMovie
366 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
367 [-]: SETTABLE  R13 K79 R14  ; R13["mHudMarkersMovie"] := R14
368 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
369 [-]: GETUPVAL  R14 U0       ; R14 := U0
370 [-]: GETTABLE  R14 R14 K79  ; R14 := R14["mHudMarkersMovie"]
371 [-]: CALL      R13 2 2      ; R13 := R13(R14)
372 [-]: TEST      R13 1        ; if R13 then PC := 381
373 [-]: JMP       381          ; PC := 381
374 [-]: GETUPVAL  R13 U0       ; R13 := U0
375 [-]: GETTABLE  R13 R13 K79  ; R13 := R13["mHudMarkersMovie"]
376 [-]: SELF      R13 R13 K82  ; R14 := R13; R13 := R13["0x7669354A"]
377 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
378 [-]: SELF      R15 R15 K83  ; R16 := R15; R15 := R15["0x7C1F5A97"]
379 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
380 [-]: CALL      R13 0 1      ; R13(R14,...)
381 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
382 [-]: GETUPVAL  R14 U18      ; R14 := U18
383 [-]: CALL      R13 2 2      ; R13 := R13(R14)
384 [-]: TEST      R13 0        ; if not R13 then PC := 396
385 [-]: JMP       396          ; PC := 396
386 [-]: GETUPVAL  R13 U12      ; R13 := U12
387 [-]: SELF      R13 R13 K84  ; R14 := R13; R13 := R13["0x9A631181"]
388 [-]: CALL      R13 2 2      ; R13 := R13(R14)
389 [-]: MOVE      R13 R18      ; R13 := R18
390 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
391 [-]: GETUPVAL  R14 U18      ; R14 := U18
392 [-]: CALL      R13 2 2      ; R13 := R13(R14)
393 [-]: TEST      R13 0        ; if not R13 then PC := 396
394 [-]: JMP       396          ; PC := 396
395 [-]: RETURN    R0 1         ; return 
396 [-]: GETUPVAL  R13 U0       ; R13 := U0
397 [-]: GETTABLE  R13 R13 K66  ; R13 := R13["IsSpectating"]
398 [-]: TEST      R13 1        ; if R13 then PC := 404
399 [-]: JMP       404          ; PC := 404
400 [-]: GETUPVAL  R13 U19      ; R13 := U19
401 [-]: MOVE      R14 R11      ; R14 := R11
402 [-]: MOVE      R15 R0       ; R15 := R0
403 [-]: CALL      R13 3 1      ; R13(R14,R15)
404 [-]: GETGLOBAL R13 K36      ; R13 := _T
405 [-]: GETTABLE  R13 R13 K85  ; R13 := R13["isStreamingLevel"]
406 [-]: TEST      R13 1        ; if R13 then PC := 545
407 [-]: JMP       545          ; PC := 545
408 [-]: GETUPVAL  R13 U20      ; R13 := U20
409 [-]: GETTABLE  R13 R13 K86  ; R13 := R13["Active"]
410 [-]: TEST      R13 0        ; if not R13 then PC := 545
411 [-]: JMP       545          ; PC := 545
412 [-]: GETUPVAL  R13 U21      ; R13 := U21
413 [-]: GETTABLE  R13 R13 K87  ; R13 := R13["0xE15207D0"]
414 [-]: CALL      R13 1 2      ; R13 := R13()
415 [-]: EQ        1 R13 K38    ; if R13 == nil then PC := 545
416 [-]: JMP       545          ; PC := 545
417 [-]: GETUPVAL  R14 U20      ; R14 := U20
418 [-]: GETTABLE  R14 R14 K88  ; R14 := R14["IsNight"]
419 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 545
420 [-]: JMP       545          ; PC := 545
421 [-]: GETUPVAL  R14 U20      ; R14 := U20
422 [-]: GETTABLE  R14 R14 K88  ; R14 := R14["IsNight"]
423 [-]: EQ        1 R14 K38    ; if R14 == nil then PC := 426
424 [-]: JMP       426          ; PC := 426
425 [-]: MOVE      R14 R0       ; R14 := R0
426 [-]: MOVE      R14 R1       ; R14 := R1
427 [-]: GETUPVAL  R15 U20      ; R15 := U20
428 [-]: SETTABLE  R15 K88 R13  ; R15["IsNight"] := R13
429 [-]: TEST      R14 1        ; if R14 then PC := 488
430 [-]: JMP       488          ; PC := 488
431 [-]: GETUPVAL  R15 U20      ; R15 := U20
432 [-]: GETTABLE  R15 R15 K89  ; R15 := R15["Landscape"]
433 [-]: TEST      R15 0        ; if not R15 then PC := 488
434 [-]: JMP       488          ; PC := 488
435 [-]: GETUPVAL  R15 U20      ; R15 := U20
436 [-]: GETTABLE  R15 R15 K88  ; R15 := R15["IsNight"]
437 [-]: TEST      R15 0        ; if not R15 then PC := 450
438 [-]: JMP       450          ; PC := 450
439 [-]: GETUPVAL  R15 U20      ; R15 := U20
440 [-]: GETUPVAL  R16 U20      ; R16 := U20
441 [-]: GETTABLE  R16 R16 K90  ; R16 := R16["DayCount"]
442 [-]: ADD       R16 R16 K13  ; R16 := R16 + 1
443 [-]: SETTABLE  R15 K90 R16  ; R15["DayCount"] := R16
444 [-]: GETUPVAL  R15 U20      ; R15 := U20
445 [-]: GETUPVAL  R16 U9       ; R16 := U9
446 [-]: SELF      R16 R16 K92  ; R17 := R16; R16 := R16["0xCF5DF9F6"]
447 [-]: CALL      R16 2 2      ; R16 := R16(R17)
448 [-]: SETTABLE  R15 K91 R16  ; R15["GameTimeAtDusk"] := R16
449 [-]: JMP       488          ; PC := 488
450 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
451 [-]: GETUPVAL  R16 U9       ; R16 := U9
452 [-]: CALL      R15 2 2      ; R15 := R15(R16)
453 [-]: TEST      R15 1        ; if R15 then PC := 465
454 [-]: JMP       465          ; PC := 465
455 [-]: GETUPVAL  R15 U9       ; R15 := U9
456 [-]: SELF      R15 R15 K92  ; R16 := R15; R15 := R15["0xCF5DF9F6"]
457 [-]: CALL      R15 2 2      ; R15 := R15(R16)
458 [-]: GETUPVAL  R16 U20      ; R16 := U20
459 [-]: GETTABLE  R16 R16 K91  ; R16 := R16["GameTimeAtDusk"]
460 [-]: SUB       R15 R15 R16  ; R15 := R15 - R16
461 [-]: LT        0 R15 K93    ; if R15 >= 2940 then PC := 465
462 [-]: JMP       465          ; PC := 465
463 [-]: GETUPVAL  R15 U20      ; R15 := U20
464 [-]: SETTABLE  R15 K90 K12  ; R15["DayCount"] := 0
465 [-]: GETUPVAL  R15 U20      ; R15 := U20
466 [-]: GETTABLE  R15 R15 K90  ; R15 := R15["DayCount"]
467 [-]: LT        0 K12 R15    ; if 0 >= R15 then PC := 488
468 [-]: JMP       488          ; PC := 488
469 [-]: GETUPVAL  R15 U20      ; R15 := U20
470 [-]: GETTABLE  R15 R15 K89  ; R15 := R15["Landscape"]
471 [-]: TEST      R15 0        ; if not R15 then PC := 488
472 [-]: JMP       488          ; PC := 488
473 [-]: GETGLOBAL R15 K94      ; R15 := gRegion
474 [-]: SELF      R15 R15 K95  ; R16 := R15; R15 := R15["0x372CB914"]
475 [-]: CALL      R15 2 2      ; R15 := R15(R16)
476 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
477 [-]: MOVE      R17 R15      ; R17 := R15
478 [-]: CALL      R16 2 2      ; R16 := R16(R17)
479 [-]: TEST      R16 1        ; if R16 then PC := 488
480 [-]: JMP       488          ; PC := 488
481 [-]: GETGLOBAL R16 K96      ; R16 := gChallengeMgr
482 [-]: SELF      R16 R16 K97  ; R17 := R16; R16 := R16["0x83829B2"]
483 [-]: MOVE      R18 R15      ; R18 := R15
484 [-]: GETGLOBAL R19 K98      ; R19 := 0xEC274B1A
485 [-]: LOADK     R20 K99      ; R20 := "SURVIVED_EIDOLON_NIGHT"
486 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
487 [-]: CALL      R16 0 1      ; R16(R17,...)
488 [-]: GETUPVAL  R16 U20      ; R16 := U20
489 [-]: GETTABLE  R16 R16 K100 ; R16 := R16["Visible"]
490 [-]: TEST      R16 0        ; if not R16 then PC := 545
491 [-]: JMP       545          ; PC := 545
492 [-]: TEST      R14 0        ; if not R14 then PC := 507
493 [-]: JMP       507          ; PC := 507
494 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
495 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16["0x1C19D966"]
496 [-]: LOADK     R18 K101     ; R18 := "MiniMapContainer.Clock.Spinner"
497 [-]: LOADK     R19 K102     ; R19 := "_rotation"
498 [-]: GETUPVAL  R20 U22      ; R20 := U22
499 [-]: GETTABLE  R20 R20 K103 ; R20 := R20["0xF81722A2"]
500 [-]: GETUPVAL  R21 U20      ; R21 := U20
501 [-]: GETTABLE  R21 R21 K88  ; R21 := R21["IsNight"]
502 [-]: LOADK     R22 K104     ; R22 := 180
503 [-]: LOADK     R23 K12      ; R23 := 0
504 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
505 [-]: CALL      R16 0 1      ; R16(R17,...)
506 [-]: JMP       526          ; PC := 526
507 [-]: GETGLOBAL R16 K105     ; R16 := 0x52E17A90
508 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
509 [-]: LOADK     R18 K101     ; R18 := "MiniMapContainer.Clock.Spinner"
510 [-]: GETGLOBAL R19 K106     ; R19 := UISys
511 [-]: GETTABLE  R19 R19 K107 ; R19 := R19["FlashInstance_EASE_OUT_BACK"]
512 [-]: NEWTABLE  R20 1 0      ; R20 := {}
513 [-]: LOADK     R21 K102     ; R21 := "_rotation"
514 [-]: SETLIST   R20 1 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
515 [-]: NEWTABLE  R21 0 0      ; R21 := {}
516 [-]: GETUPVAL  R22 U22      ; R22 := U22
517 [-]: GETTABLE  R22 R22 K103 ; R22 := R22["0xF81722A2"]
518 [-]: GETUPVAL  R23 U20      ; R23 := U20
519 [-]: GETTABLE  R23 R23 K88  ; R23 := R23["IsNight"]
520 [-]: LOADK     R24 K104     ; R24 := 180
521 [-]: LOADK     R25 K12      ; R25 := 0
522 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
523 [-]: SETLIST   R21 0 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 0
524 [-]: LOADK     R22 K108     ; R22 := 0.5
525 [-]: CALL      R16 7 1      ; R16(R17,R18,R19,R20,R21,R22)
526 [-]: GETGLOBAL R16 K36      ; R16 := _T
527 [-]: GETTABLE  R16 R16 K109 ; R16 := R16["ShowNotification"]
528 [-]: EQ        1 R16 K38    ; if R16 == nil then PC := 545
529 [-]: JMP       545          ; PC := 545
530 [-]: TEST      R14 1        ; if R14 then PC := 545
531 [-]: JMP       545          ; PC := 545
532 [-]: LOADK     R16 K110     ; R16 := "/Lotus/Language/Menu/"
533 [-]: GETUPVAL  R17 U22      ; R17 := U22
534 [-]: GETTABLE  R17 R17 K103 ; R17 := R17["0xF81722A2"]
535 [-]: GETUPVAL  R18 U20      ; R18 := U20
536 [-]: GETTABLE  R18 R18 K88  ; R18 := R18["IsNight"]
537 [-]: LOADK     R19 K111     ; R19 := "HUD_Nightfall"
538 [-]: LOADK     R20 K112     ; R20 := "HUD_Daybreak"
539 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
540 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
541 [-]: GETGLOBAL R17 K36      ; R17 := _T
542 [-]: GETTABLE  R17 R17 K113 ; R17 := R17["0x761CAD7D"]
543 [-]: MOVE      R18 R16      ; R18 := R16
544 [-]: CALL      R17 2 1      ; R17(R18)
545 [-]: GETUPVAL  R17 U2       ; R17 := U2
546 [-]: SELF      R17 R17 K114 ; R18 := R17; R17 := R17["0xE2A2E3AC"]
547 [-]: GETGLOBAL R19 K36      ; R19 := _T
548 [-]: GETTABLE  R19 R19 K85  ; R19 := R19["isStreamingLevel"]
549 [-]: EQ        1 R19 K11    ; if R19 == "0x1" then PC := 552
550 [-]: JMP       552          ; PC := 552
551 [-]: MOVE      R19 R0       ; R19 := R0
552 [-]: MOVE      R19 R1       ; R19 := R1
553 [-]: CALL      R17 3 1      ; R17(R18,R19)
554 [-]: GETUPVAL  R17 U0       ; R17 := U0
555 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["UIMode"]
556 [-]: GETUPVAL  R18 U8       ; R18 := U8
557 [-]: GETTABLE  R18 R18 K46  ; R18 := R18["UI_MODE_IN_SPACE_HUB"]
558 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 653
559 [-]: JMP       653          ; PC := 653
560 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
561 [-]: MOVE      R18 R11      ; R18 := R11
562 [-]: CALL      R17 2 2      ; R17 := R17(R18)
563 [-]: TEST      R17 1        ; if R17 then PC := 568
564 [-]: JMP       568          ; PC := 568
565 [-]: GETUPVAL  R17 U23      ; R17 := U23
566 [-]: MOVE      R18 R11      ; R18 := R11
567 [-]: CALL      R17 2 1      ; R17(R18)
568 [-]: GETGLOBAL R17 K115     ; R17 := 0xECFDD17
569 [-]: GETUPVAL  R18 U24      ; R18 := U24
570 [-]: GETTABLE  R18 R18 K116 ; R18 := R18["ActiveHealthTrackers"]
571 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
572 [-]: JMP       614          ; PC := 614
573 [-]: GETTABLE  R22 R21 K117 ; R22 := R21["Data"]
574 [-]: GETTABLE  R22 R22 K118 ; R22 := R22["RemoveOnNullTarget"]
575 [-]: TEST      R22 0        ; if not R22 then PC := 586
576 [-]: JMP       586          ; PC := 586
577 [-]: GETGLOBAL R22 K0       ; R22 := 0x400E7765
578 [-]: GETTABLE  R23 R21 K119 ; R23 := R21["DisplayAvatar"]
579 [-]: CALL      R22 2 2      ; R22 := R22(R23)
580 [-]: TEST      R22 0        ; if not R22 then PC := 586
581 [-]: JMP       586          ; PC := 586
582 [-]: GETUPVAL  R22 U25      ; R22 := U25
583 [-]: MOVE      R23 R21      ; R23 := R21
584 [-]: CALL      R22 2 1      ; R22(R23)
585 [-]: JMP       614          ; PC := 614
586 [-]: GETTABLE  R22 R21 K120 ; R22 := R21["Display"]
587 [-]: SELF      R22 R22 K5   ; R23 := R22; R22 := R22["0x8C7099E9"]
588 [-]: MOVE      R24 R0       ; R24 := R0
589 [-]: CALL      R22 3 1      ; R22(R23,R24)
590 [-]: GETGLOBAL R22 K0       ; R22 := 0x400E7765
591 [-]: GETTABLE  R23 R21 K121 ; R23 := R21["HealthPct"]
592 [-]: CALL      R22 2 2      ; R22 := R22(R23)
593 [-]: TEST      R22 1        ; if R22 then PC := 614
594 [-]: JMP       614          ; PC := 614
595 [-]: GETGLOBAL R22 K0       ; R22 := 0x400E7765
596 [-]: GETTABLE  R23 R21 K119 ; R23 := R21["DisplayAvatar"]
597 [-]: CALL      R22 2 2      ; R22 := R22(R23)
598 [-]: TEST      R22 1        ; if R22 then PC := 614
599 [-]: JMP       614          ; PC := 614
600 [-]: GETGLOBAL R22 K122     ; R22 := math
601 [-]: GETTABLE  R22 R22 K123 ; R22 := R22["0xBCF846DF"]
602 [-]: GETTABLE  R23 R21 K119 ; R23 := R21["DisplayAvatar"]
603 [-]: SELF      R23 R23 K124 ; R24 := R23; R23 := R23["0x8E8D708B"]
604 [-]: CALL      R23 2 2      ; R23 := R23(R24)
605 [-]: MUL       R23 R23 K125 ; R23 := R23 * 100
606 [-]: CALL      R22 2 2      ; R22 := R22(R23)
607 [-]: LT        0 K125 R22   ; if 100 >= R22 then PC := 610
608 [-]: JMP       610          ; PC := 610
609 [-]: LOADK     R22 K125     ; R22 := 100
610 [-]: GETTABLE  R23 R21 K121 ; R23 := R21["HealthPct"]
611 [-]: SELF      R23 R23 K126 ; R24 := R23; R23 := R23["0xC022C8A8"]
612 [-]: MOVE      R25 R22      ; R25 := R22
613 [-]: CALL      R23 3 1      ; R23(R24,R25)
614 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 573; R19 := R20 end
615 [-]: JMP       573          ; PC := 573
616 [-]: GETGLOBAL R23 K115     ; R23 := 0xECFDD17
617 [-]: GETUPVAL  R24 U24      ; R24 := U24
618 [-]: GETTABLE  R24 R24 K127 ; R24 := R24["ActiveTimers"]
619 [-]: CALL      R23 2 4      ; R23,R24,R25 := R23(R24)
620 [-]: JMP       624          ; PC := 624
621 [-]: GETTABLE  R28 R27 K5   ; R28 := R27["0x8C7099E9"]
622 [-]: MOVE      R29 R0       ; R29 := R0
623 [-]: CALL      R28 2 1      ; R28(R29)
624 [-]: TFORLOOP  R23 2        ; R26,R27 :=  R23(R24,R25); if R26 ~= nil then begin PC = 621; R25 := R26 end
625 [-]: JMP       621          ; PC := 621
626 [-]: GETGLOBAL R28 K0       ; R28 := 0x400E7765
627 [-]: MOVE      R29 R11      ; R29 := R11
628 [-]: CALL      R28 2 2      ; R28 := R28(R29)
629 [-]: TEST      R28 1        ; if R28 then PC := 644
630 [-]: JMP       644          ; PC := 644
631 [-]: GETGLOBAL R28 K36      ; R28 := _T
632 [-]: GETTABLE  R28 R28 K128 ; R28 := R28["PetNameNeedsUpdate"]
633 [-]: TEST      R28 0        ; if not R28 then PC := 641
634 [-]: JMP       641          ; PC := 641
635 [-]: GETGLOBAL R28 K36      ; R28 := _T
636 [-]: SETTABLE  R28 K128 K38 ; R28["PetNameNeedsUpdate"] := nil
637 [-]: GETUPVAL  R28 U11      ; R28 := U11
638 [-]: SELF      R28 R28 K129 ; R29 := R28; R28 := R28["0xA59972C3"]
639 [-]: MOVE      R30 R11      ; R30 := R11
640 [-]: CALL      R28 3 1      ; R28(R29,R30)
641 [-]: GETUPVAL  R28 U26      ; R28 := U26
642 [-]: MOVE      R29 R0       ; R29 := R0
643 [-]: CALL      R28 2 1      ; R28(R29)
644 [-]: GETUPVAL  R28 U27      ; R28 := U27
645 [-]: SELF      R28 R28 K5   ; R29 := R28; R28 := R28["0x8C7099E9"]
646 [-]: CALL      R28 2 1      ; R28(R29)
647 [-]: GETUPVAL  R28 U28      ; R28 := U28
648 [-]: SELF      R28 R28 K5   ; R29 := R28; R28 := R28["0x8C7099E9"]
649 [-]: CALL      R28 2 1      ; R28(R29)
650 [-]: GETUPVAL  R28 U29      ; R28 := U29
651 [-]: MOVE      R29 R0       ; R29 := R0
652 [-]: CALL      R28 2 1      ; R28(R29)
653 [-]: GETUPVAL  R28 U11      ; R28 := U11
654 [-]: SELF      R28 R28 K130 ; R29 := R28; R28 := R28["0x911CA526"]
655 [-]: MOVE      R30 R11      ; R30 := R11
656 [-]: MOVE      R31 R0       ; R31 := R0
657 [-]: GETGLOBAL R32 K36      ; R32 := _T
658 [-]: GETTABLE  R32 R32 K131 ; R32 := R32["keyBindsSaved"]
659 [-]: EQ        1 R32 K11    ; if R32 == "0x1" then PC := 662
660 [-]: JMP       662          ; PC := 662
661 [-]: MOVE      R32 R0       ; R32 := R0
662 [-]: MOVE      R32 R1       ; R32 := R1
663 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
664 [-]: GETUPVAL  R28 U0       ; R28 := U0
665 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["mPlayingWithController"]
666 [-]: TEST      R28 0        ; if not R28 then PC := 674
667 [-]: JMP       674          ; PC := 674
668 [-]: GETGLOBAL R28 K36      ; R28 := _T
669 [-]: GETTABLE  R28 R28 K131 ; R28 := R28["keyBindsSaved"]
670 [-]: TEST      R28 0        ; if not R28 then PC := 674
671 [-]: JMP       674          ; PC := 674
672 [-]: GETGLOBAL R28 K36      ; R28 := _T
673 [-]: SETTABLE  R28 K131 K38 ; R28["keyBindsSaved"] := nil
674 [-]: GETUPVAL  R28 U11      ; R28 := U11
675 [-]: SELF      R28 R28 K132 ; R29 := R28; R28 := R28["0x7C8F8B01"]
676 [-]: MOVE      R30 R11      ; R30 := R11
677 [-]: GETGLOBAL R31 K36      ; R31 := _T
678 [-]: GETTABLE  R31 R31 K133 ; R31 := R31["SubtitleVisible"]
679 [-]: EQ        1 R31 K11    ; if R31 == "0x1" then PC := 682
680 [-]: JMP       682          ; PC := 682
681 [-]: MOVE      R31 R0       ; R31 := R0
682 [-]: MOVE      R31 R1       ; R31 := R1
683 [-]: MOVE      R32 R0       ; R32 := R0
684 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
685 [-]: GETUPVAL  R28 U30      ; R28 := U30
686 [-]: MOVE      R29 R0       ; R29 := R0
687 [-]: CALL      R28 2 1      ; R28(R29)
688 [-]: GETUPVAL  R28 U31      ; R28 := U31
689 [-]: MOVE      R29 R11      ; R29 := R11
690 [-]: MOVE      R30 R0       ; R30 := R0
691 [-]: CALL      R28 3 1      ; R28(R29,R30)
692 [-]: GETUPVAL  R28 U11      ; R28 := U11
693 [-]: SELF      R28 R28 K134 ; R29 := R28; R28 := R28["0x9CD44422"]
694 [-]: MOVE      R30 R11      ; R30 := R11
695 [-]: GETGLOBAL R31 K36      ; R31 := _T
696 [-]: GETTABLE  R31 R31 K135 ; R31 := R31["DisableMiniMap"]
697 [-]: EQ        1 R31 K11    ; if R31 == "0x1" then PC := 700
698 [-]: JMP       700          ; PC := 700
699 [-]: MOVE      R31 R0       ; R31 := R0
700 [-]: MOVE      R31 R1       ; R31 := R1
701 [-]: GETGLOBAL R32 K36      ; R32 := _T
702 [-]: GETTABLE  R32 R32 K135 ; R32 := R32["DisableMiniMap"]
703 [-]: EQ        0 R32 K11    ; if R32 ~= "0x1" then PC := 706
704 [-]: JMP       706          ; PC := 706
705 [-]: MOVE      R32 R0       ; R32 := R0
706 [-]: MOVE      R32 R1       ; R32 := R1
707 [-]: GETGLOBAL R33 K36      ; R33 := _T
708 [-]: GETTABLE  R33 R33 K136 ; R33 := R33["OverlayMapVisible"]
709 [-]: EQ        1 R33 K11    ; if R33 == "0x1" then PC := 712
710 [-]: JMP       712          ; PC := 712
711 [-]: MOVE      R33 R0       ; R33 := R0
712 [-]: MOVE      R33 R1       ; R33 := R1
713 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
714 [-]: GETUPVAL  R28 U11      ; R28 := U11
715 [-]: SELF      R28 R28 K137 ; R29 := R28; R28 := R28["0x143F5162"]
716 [-]: CALL      R28 2 2      ; R28 := R28(R29)
717 [-]: TEST      R28 0        ; if not R28 then PC := 721
718 [-]: JMP       721          ; PC := 721
719 [-]: GETUPVAL  R28 U32      ; R28 := U32
720 [-]: CALL      R28 1 1      ; R28()
721 [-]: GETUPVAL  R28 U33      ; R28 := U33
722 [-]: GETTABLE  R28 R28 K138 ; R28 := R28["PhotoBooth"]
723 [-]: TEST      R28 1        ; if R28 then PC := 737
724 [-]: JMP       737          ; PC := 737
725 [-]: GETGLOBAL R28 K0       ; R28 := 0x400E7765
726 [-]: MOVE      R29 R11      ; R29 := R11
727 [-]: CALL      R28 2 2      ; R28 := R28(R29)
728 [-]: TEST      R28 1        ; if R28 then PC := 737
729 [-]: JMP       737          ; PC := 737
730 [-]: GETUPVAL  R28 U11      ; R28 := U11
731 [-]: SELF      R28 R28 K139 ; R29 := R28; R28 := R28["0xA85C9309"]
732 [-]: MOVE      R30 R11      ; R30 := R11
733 [-]: GETUPVAL  R31 U34      ; R31 := U34
734 [-]: GETGLOBAL R32 K36      ; R32 := _T
735 [-]: GETTABLE  R32 R32 K140 ; R32 := R32["StalkerPlayerAvatar"]
736 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
737 [-]: GETUPVAL  R28 U35      ; R28 := U35
738 [-]: CALL      R28 1 1      ; R28()
739 [-]: GETUPVAL  R28 U36      ; R28 := U36
740 [-]: MOVE      R29 R11      ; R29 := R11
741 [-]: MOVE      R30 R0       ; R30 := R0
742 [-]: CALL      R28 3 1      ; R28(R29,R30)
743 [-]: GETUPVAL  R28 U37      ; R28 := U37
744 [-]: CALL      R28 1 1      ; R28()
745 [-]: GETGLOBAL R28 K0       ; R28 := 0x400E7765
746 [-]: GETUPVAL  R29 U18      ; R29 := U18
747 [-]: CALL      R28 2 2      ; R28 := R28(R29)
748 [-]: TEST      R28 1        ; if R28 then PC := 773
749 [-]: JMP       773          ; PC := 773
750 [-]: GETUPVAL  R28 U27      ; R28 := U27
751 [-]: GETTABLE  R28 R28 K141 ; R28 := R28["isEnabled"]
752 [-]: GETTABLE  R28 R28 K142 ; R28 := R28["mValue"]
753 [-]: TEST      R28 1        ; if R28 then PC := 773
754 [-]: JMP       773          ; PC := 773
755 [-]: GETUPVAL  R28 U18      ; R28 := U18
756 [-]: SELF      R28 R28 K143 ; R29 := R28; R28 := R28["0x327054B8"]
757 [-]: CALL      R28 2 2      ; R28 := R28(R29)
758 [-]: GETUPVAL  R29 U38      ; R29 := U38
759 [-]: GETTABLE  R29 R29 K142 ; R29 := R29["mValue"]
760 [-]: EQ        1 R29 R28    ; if R29 == R28 then PC := 773
761 [-]: JMP       773          ; PC := 773
762 [-]: GETUPVAL  R29 U18      ; R29 := U18
763 [-]: SELF      R29 R29 K144 ; R30 := R29; R29 := R29["0x511DEBA3"]
764 [-]: CALL      R29 2 2      ; R29 := R29(R30)
765 [-]: TEST      R29 0        ; if not R29 then PC := 769
766 [-]: JMP       769          ; PC := 769
767 [-]: GETGLOBAL R29 K36      ; R29 := _T
768 [-]: SETTABLE  R29 K145 K11 ; R29["GenericMessageNoAnimateTyping"] := "0x1"
769 [-]: GETUPVAL  R29 U38      ; R29 := U38
770 [-]: SELF      R29 R29 K126 ; R30 := R29; R29 := R29["0xC022C8A8"]
771 [-]: MOVE      R31 R28      ; R31 := R28
772 [-]: CALL      R29 3 1      ; R29(R30,R31)
773 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 4516
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["SpectatorHudOpen"] := "0x0"
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CLOSURE   R1 0         ; R1 := closure(Function #105.1)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: GETUPVAL  R0 U3        ; R0 := U3
 11 [-]: GETUPVAL  R0 U4        ; R0 := U4
 12 [-]: SETTABLE  R0 K3 R1     ; R0["Update"] := R1
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: GETUPVAL  R1 U5        ; R1 := U5
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x7BEB1B64"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CLOSURE   R3 1         ; R3 := closure(Function #105.2)
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: GETUPVAL  R0 U4        ; R0 := U4
 20 [-]: GETUPVAL  R0 U6        ; R0 := U6
 21 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 22 [-]: SETTABLE  R0 K4 R1     ; R0["isEnabled"] := R1
 23 [-]: RETURN    R0 1         ; return 


; Function #105.1:
;
; Name:            
; Defined at line: 4522
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["isEnabled"]
  3 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mValue"]
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["IsSpectating"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 36
  7 [-]: JMP       36           ; PC := 36
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x7D020899"]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 36
 17 [-]: JMP       36           ; PC := 36
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x33D94CF7"]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: GETUPVAL  R1 U3        ; R1 := U3
 22 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 25 [-]: GETUPVAL  R1 U4        ; R1 := U4
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: TEST      R0 1         ; if R0 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 30 [-]: GETUPVAL  R1 U4        ; R1 := U4
 31 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x80B14403"]
 32 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 33 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 34 [-]: TEST      R0 0         ; if not R0 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["isEnabled"]
 39 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xC022C8A8"]
 40 [-]: GETUPVAL  R2 U1        ; R2 := U1
 41 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["IsSpectating"]
 42 [-]: CALL      R0 3 1       ; R0(R1,R2)
 43 [-]: RETURN    R0 1         ; return 


; Function #105.2:
;
; Name:            
; Defined at line: 4530
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 64
  2 [-]: JMP       64           ; PC := 64
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SecretMiniGameActive"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA9E94DB9"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R3 K4        ; R3 := gFlashMgr
 17 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x616DD092"]
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0xA58BB96C"]
 26 [-]: CALL      R4 2 1       ; R4(R5)
 27 [-]: GETGLOBAL R4 K4        ; R4 := gFlashMgr
 28 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x616DD092"]
 29 [-]: GETGLOBAL R6 K7        ; R6 := buyReviveMovie
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
 32 [-]: GETUPVAL  R6 U1        ; R6 := U1
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
 37 [-]: GETUPVAL  R6 U1        ; R6 := U1
 38 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x80B14403"]
 39 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 40 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 41 [-]: TEST      R5 1         ; if R5 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: GETUPVAL  R5 U2        ; R5 := U2
 44 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0x1D5A1B3A"]
 45 [-]: GETUPVAL  R6 U1        ; R6 := U1
 46 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x80B14403"]
 47 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 48 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 49 [-]: TEST      R5 1         ; if R5 then PC := 64
 50 [-]: JMP       64           ; PC := 64
 51 [-]: GETUPVAL  R5 U1        ; R5 := U1
 52 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x80B14403"]
 53 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 54 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5A115A02"]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: TEST      R5 0         ; if not R5 then PC := 64
 57 [-]: JMP       64           ; PC := 64
 58 [-]: TEST      R4 1         ; if R4 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETGLOBAL R5 K4        ; R5 := gFlashMgr
 61 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x24FF386"]
 62 [-]: GETGLOBAL R7 K7        ; R7 := buyReviveMovie
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4554
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := gRegion
  4 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xD2075696"]
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CLOSURE   R2 0         ; R2 := closure(Function #106.1)
  8 [-]: SETTABLE  R1 K2 R2     ; R1["Update"] := R2
  9 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 11 [-]: LOADK     R3 K5        ; R3 := "MinimapContainer.DefenseTarget"
 12 [-]: LOADK     R4 K6        ; R4 := "_alpha"
 13 [-]: LOADK     R5 K7        ; R5 := 0
 14 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: EQ        0 R1 K8      ; if R1 ~= nil then PC := 47
 17 [-]: JMP       47           ; PC := 47
 18 [-]: GETGLOBAL R1 K9        ; R1 := 0x329BDC44
 19 [-]: LOADK     R2 K10       ; R2 := "Lotus.Interface.Components.PlayerPanelRedux"
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: GETTABLE  R2 R1 K11    ; R2 := R1["0x46FF1A3C"]
 22 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 23 [-]: LOADK     R4 K12       ; R4 := "HealthAndShield.Squad"
 24 [-]: GETGLOBAL R5 K13       ; R5 := playerMarkerIcons
 25 [-]: GETUPVAL  R6 U2        ; R6 := U2
 26 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0xF81722A2"]
 27 [-]: GETUPVAL  R7 U3        ; R7 := U3
 28 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["MissionType"]
 29 [-]: GETGLOBAL R8 K16       ; R8 := Lotus_Game
 30 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["MT_RAID"]
 31 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: MOVE      R7 R0        ; R7 := R0
 34 [-]: MOVE      R7 R1        ; R7 := R1
 35 [-]: GETGLOBAL R8 K18       ; R8 := leaderMarkerIcon
 36 [-]: LOADNIL   R9 R9        ; R9 := nil
 37 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 38 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 39 [-]: MOVE      R2 R1        ; R2 := R1
 40 [-]: GETUPVAL  R2 U1        ; R2 := U1
 41 [-]: SETTABLE  R2 K19 K20   ; R2["mHideVoipWhenInactive"] := "0x1"
 42 [-]: GETUPVAL  R2 U1        ; R2 := U1
 43 [-]: SETTABLE  R2 K21 K22   ; R2["mShowYourself"] := "0x0"
 44 [-]: GETUPVAL  R2 U1        ; R2 := U1
 45 [-]: GETGLOBAL R3 K24       ; R3 := voipTextures
 46 [-]: SETTABLE  R2 K23 R3    ; R2["mVoipTextures"] := R3
 47 [-]: GETUPVAL  R2 U1        ; R2 := U1
 48 [-]: GETGLOBAL R3 K26       ; R3 := railjackSquadStatusIcons
 49 [-]: SETTABLE  R2 K25 R3    ; R2["mStatusIconList"] := R3
 50 [-]: GETGLOBAL R2 K27       ; R2 := gGameRules
 51 [-]: SELF      R2 R2 K28    ; R3 := R2; R2 := R2["0xB8637349"]
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: GETUPVAL  R3 U1        ; R3 := U1
 54 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0xC4C551CB"]
 55 [-]: GETTABLE  R5 R2 K30    ; R5 := R2["missionType"]
 56 [-]: GETGLOBAL R6 K16       ; R6 := Lotus_Game
 57 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["MT_RAILJACK"]
 58 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R5 R0        ; R5 := R0
 61 [-]: MOVE      R5 R1        ; R5 := R1
 62 [-]: CALL      R3 3 1       ; R3(R4,R5)
 63 [-]: GETTABLE  R3 R2 K32    ; R3 := R2["periodicMissionTag"]
 64 [-]: GETUPVAL  R4 U5        ; R4 := U5
 65 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["ELITE_ALERT_PERIODIC_MISSION_TAG"]
 66 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETTABLE  R3 R2 K32    ; R3 := R2["periodicMissionTag"]
 69 [-]: GETUPVAL  R4 U5        ; R4 := U5
 70 [-]: GETTABLE  R4 R4 K34    ; R4 := R4["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
 71 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: MOVE      R3 R0        ; R3 := R0
 74 [-]: MOVE      R3 R1        ; R3 := R1
 75 [-]: MOVE      R3 R4        ; R3 := R4
 76 [-]: GETGLOBAL R3 K0        ; R3 := gRegion
 77 [-]: SELF      R3 R3 K35    ; R4 := R3; R3 := R3["0xB3ABFFBB"]
 78 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 79 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
 80 [-]: MOVE      R5 R3        ; R5 := R3
 81 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 82 [-]: TEST      R4 1         ; if R4 then PC := 96
 83 [-]: JMP       96           ; PC := 96
 84 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
 85 [-]: GETTABLE  R5 R3 K37    ; R5 := R3[1]
 86 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 87 [-]: TEST      R4 1         ; if R4 then PC := 96
 88 [-]: JMP       96           ; PC := 96
 89 [-]: GETGLOBAL R4 K36       ; R4 := 0x400E7765
 90 [-]: GETTABLE  R5 R3 K37    ; R5 := R3[1]
 91 [-]: SELF      R5 R5 K38    ; R6 := R5; R5 := R5["0x80B14403"]
 92 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 93 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 94 [-]: TEST      R4 0         ; if not R4 then PC := 101
 95 [-]: JMP       101          ; PC := 101
 96 [-]: GETUPVAL  R4 U0        ; R4 := U0
 97 [-]: CLOSURE   R5 1         ; R5 := closure(Function #106.2)
 98 [-]: GETUPVAL  R0 U6        ; R0 := U6
 99 [-]: SETTABLE  R4 K2 R5     ; R4["Update"] := R5
100 [-]: RETURN    R0 1         ; return 
101 [-]: GETGLOBAL R4 K39       ; R4 := gPlayerProfileMgr
102 [-]: SELF      R4 R4 K40    ; R5 := R4; R4 := R4["0x21EF7B1A"]
103 [-]: LOADK     R6 K7        ; R6 := 0
104 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
105 [-]: TEST      R4 0         ; if not R4 then PC := 118
106 [-]: JMP       118          ; PC := 118
107 [-]: SELF      R5 R4 K41    ; R6 := R4; R5 := R4["0x3EEB612E"]
108 [-]: CALL      R5 2 2       ; R5 := R5(R6)
109 [-]: TEST      R5 0         ; if not R5 then PC := 118
110 [-]: JMP       118          ; PC := 118
111 [-]: SELF      R6 R5 K42    ; R7 := R5; R6 := R5["0xCDCB0C9"]
112 [-]: CALL      R6 2 2       ; R6 := R6(R7)
113 [-]: TEST      R6 0         ; if not R6 then PC := 118
114 [-]: JMP       118          ; PC := 118
115 [-]: GETUPVAL  R6 U1        ; R6 := U1
116 [-]: SELF      R6 R6 K43    ; R7 := R6; R6 := R6["0x7CC73200"]
117 [-]: CALL      R6 2 1       ; R6(R7)
118 [-]: RETURN    R0 1         ; return 


; Function #106.1:
;
; Name:            
; Defined at line: 4559
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #106.2:
;
; Name:            
; Defined at line: 4584
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4599
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "MinimapContainer.DefenseTarget"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: LOADK     R6 K6        ; R6 := 100
 11 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 12 [-]: LOADK     R6 K7        ; R6 := 0.5
 13 [-]: LOADK     R7 K8        ; R7 := 0
 14 [-]: LOADNIL   R8 R8        ; R8 := nil
 15 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 16 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 17 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0x1C19D966"]
 18 [-]: LOADK     R2 K10       ; R2 := "MinimapContainer.DefenseTarget.Health"
 19 [-]: LOADK     R3 K5        ; R3 := "_alpha"
 20 [-]: LOADK     R4 K11       ; R4 := 50
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 23 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0x1C19D966"]
 24 [-]: LOADK     R2 K12       ; R2 := "MinimapContainer.DefenseTarget.Health.Mover"
 25 [-]: LOADK     R3 K13       ; R3 := "_color"
 26 [-]: LOADK     R4 K14       ; R4 := 16711680
 27 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 28 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 29 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0x1C19D966"]
 30 [-]: LOADK     R2 K15       ; R2 := "MinimapContainer.DefenseTarget.Health.Background"
 31 [-]: LOADK     R3 K13       ; R3 := "_color"
 32 [-]: LOADK     R4 K8        ; R4 := 0
 33 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 34 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4606
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "MinimapContainer.DefenseTarget"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: LOADK     R6 K6        ; R6 := 0
 11 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 12 [-]: LOADK     R6 K7        ; R6 := 0.5
 13 [-]: LOADK     R7 K6        ; R7 := 0
 14 [-]: LOADNIL   R8 R8        ; R8 := nil
 15 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 16 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4610
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "MinimapContainer.DefenseTarget.Name"
  4 [-]: LOADK     R4 K3        ; R4 := "text"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4615
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x6374FD98
  6 [-]: GETGLOBAL R2 K2        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xF7005A7B"]
  8 [-]: MUL       R3 R0 K4     ; R3 := R0 * 100
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LOADK     R3 K5        ; R3 := 0
 11 [-]: LOADK     R4 K4        ; R4 := 100
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 14 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD6A79FE9"]
 15 [-]: LOADK     R4 K8        ; R4 := "MinimapContainer.DefenseTarget.Value"
 16 [-]: LOADK     R5 K9        ; R5 := "text"
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: LOADK     R7 K10       ; R7 := "%"
 19 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 20 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: EQ        0 R2 K11     ; if R2 ~= nil then PC := 47
 23 [-]: JMP       47           ; PC := 47
 24 [-]: GETUPVAL  R2 U1        ; R2 := U1
 25 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0x46FF1A3C"]
 26 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 27 [-]: LOADNIL   R4 R4        ; R4 := nil
 28 [-]: LOADK     R5 K4        ; R5 := 100
 29 [-]: LOADK     R6 K13       ; R6 := "MinimapContainer.DefenseTarget.Target"
 30 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 31 [-]: MOVE      R2 R0        ; R2 := R0
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: CLOSURE   R3 0         ; R3 := closure(Function #110.1)
 34 [-]: SETTABLE  R2 K14 R3    ; R2["mOverrideGetHealth"] := R3
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: CLOSURE   R3 1         ; R3 := closure(Function #110.2)
 37 [-]: SETTABLE  R2 K15 R3    ; R2["mOverrideGetMaxHealth"] := R3
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: CLOSURE   R3 2         ; R3 := closure(Function #110.3)
 40 [-]: SETTABLE  R2 K16 R3    ; R2["mOverrideGetShield"] := R3
 41 [-]: GETUPVAL  R2 U0        ; R2 := U0
 42 [-]: CLOSURE   R3 3         ; R3 := closure(Function #110.4)
 43 [-]: SETTABLE  R2 K17 R3    ; R2["mOverrideGetMaxShield"] := R3
 44 [-]: GETUPVAL  R2 U0        ; R2 := U0
 45 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x62648036"]
 46 [-]: CALL      R2 2 1       ; R2(R3)
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: SETTABLE  R2 K19 R1    ; R2["mProgress"] := R1
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x8C7099E9"]
 51 [-]: CALL      R2 2 1       ; R2(R3)
 52 [-]: RETURN    R0 1         ; return 


; Function #110.1:
;
; Name:            
; Defined at line: 4621
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mProgress"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #110.2:
;
; Name:            
; Defined at line: 4622
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := 100
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #110.3:
;
; Name:            
; Defined at line: 4623
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #110.4:
;
; Name:            
; Defined at line: 4624
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4631
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "ImpactMessage"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_LINEAR"]
  6 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: LOADK     R6 K6        ; R6 := "_xscale"
  9 [-]: LOADK     R7 K7        ; R7 := "_yscale"
 10 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 11 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 12 [-]: LOADK     R6 K8        ; R6 := 0
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mImpactMessageTransitionScale"]
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mImpactMessageTransitionScale"]
 17 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 18 [-]: LOADK     R6 K10       ; R6 := 0.25
 19 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 20 [-]: GETGLOBAL R0 K11       ; R0 := 0x400E7765
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 1         ; if R0 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 26 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x10E0402E"]
 27 [-]: GETUPVAL  R2 U1        ; R2 := U1
 28 [-]: CALL      R0 3 1       ; R0(R1,R2)
 29 [-]: LOADNIL   R0 R0        ; R0 := nil
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4639
; #Upvalues:       8
; #Parameters:     11
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
  2 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
  3 [-]: CALL      R11 2 2      ; R11 := R11(R12)
  4 [-]: TEST      R11 1        ; if R11 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
  7 [-]: GETUPVAL  R12 U0       ; R12 := U0
  8 [-]: CALL      R11 2 2      ; R11 := R11(R12)
  9 [-]: TEST      R11 0        ; if not R11 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: NEWTABLE  R11 0 3      ; R11 := {}
 13 [-]: SETTABLE  R11 K2 R0    ; R11["Message"] := R0
 14 [-]: TESTSET   R12 R5 1     ; if R5 then PC := 17 else R12 := R5
 15 [-]: JMP       17           ; PC := 17
 16 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 17 [-]: SETTABLE  R11 K3 R12   ; R11["Params"] := R12
 18 [-]: SETTABLE  R11 K4 R10   ; R11["InputFilter"] := R10
 19 [-]: MOVE      R11 R1       ; R11 := R1
 20 [-]: GETGLOBAL R11 K5       ; R11 := 0x6A235628
 21 [-]: MOVE      R12 R0       ; R12 := R0
 22 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 23 [-]: EQ        0 R11 K6     ; if R11 ~= "function" then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: MOVE      R11 R0       ; R11 := R0
 26 [-]: CALL      R11 1 2      ; R11 := R11()
 27 [-]: MOVE      R0 R11       ; R0 := R11
 28 [-]: GETUPVAL  R11 U0       ; R11 := U0
 29 [-]: SELF      R11 R11 K7   ; R12 := R11; R11 := R11["0x8B598ED4"]
 30 [-]: GETGLOBAL R13 K8       ; R13 := gLotusBasePvpGameRulesType
 31 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 32 [-]: LE        0 K9 R1      ; if 0 > R1 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETGLOBAL R12 K10      ; R12 := math
 35 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0x8B011038"]
 36 [-]: MOVE      R13 R1       ; R13 := R1
 37 [-]: LOADK     R14 K12      ; R14 := 0.5
 38 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 39 [-]: MOVE      R1 R12       ; R1 := R12
 40 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
 41 [-]: MOVE      R13 R2       ; R13 := R2
 42 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 43 [-]: TEST      R12 0        ; if not R12 then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: MOVE      R2 R1        ; R2 := R1
 46 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
 47 [-]: MOVE      R13 R3       ; R13 := R3
 48 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 49 [-]: TEST      R12 0        ; if not R12 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: GETGLOBAL R3 K13       ; R3 := impactMessageSound
 52 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
 53 [-]: MOVE      R13 R4       ; R13 := R4
 54 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 55 [-]: TEST      R12 0        ; if not R12 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: MOVE      R4 R1        ; R4 := R1
 58 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
 59 [-]: MOVE      R13 R6       ; R13 := R6
 60 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 61 [-]: TEST      R12 0        ; if not R12 then PC := 73
 62 [-]: JMP       73           ; PC := 73
 63 [-]: GETUPVAL  R12 U2       ; R12 := U2
 64 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["0xF81722A2"]
 65 [-]: GETUPVAL  R13 U0       ; R13 := U0
 66 [-]: SELF      R13 R13 K7   ; R14 := R13; R13 := R13["0x8B598ED4"]
 67 [-]: GETGLOBAL R15 K8       ; R15 := gLotusBasePvpGameRulesType
 68 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 69 [-]: LOADK     R14 K15      ; R14 := 2
 70 [-]: LOADK     R15 K16      ; R15 := 1
 71 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 72 [-]: MOVE      R6 R12       ; R6 := R12
 73 [-]: LE        0 K9 R1      ; if 0 > R1 then PC := 79
 74 [-]: JMP       79           ; PC := 79
 75 [-]: GETUPVAL  R12 U2       ; R12 := U2
 76 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["0x25992394"]
 77 [-]: MOVE      R13 R3       ; R13 := R3
 78 [-]: CALL      R12 2 1      ; R12(R13)
 79 [-]: TEST      R4 0         ; if not R4 then PC := 98
 80 [-]: JMP       98           ; PC := 98
 81 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
 82 [-]: GETGLOBAL R13 K18      ; R13 := impactMessageParticleFX
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: TEST      R12 1        ; if R12 then PC := 98
 85 [-]: JMP       98           ; PC := 98
 86 [-]: GETUPVAL  R12 U3       ; R12 := U3
 87 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["0x69B983D"]
 88 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
 89 [-]: LOADK     R14 K20      ; R14 := "ImpactMessage"
 90 [-]: CALL      R12 3 3      ; R12,R13 := R12(R13,R14)
 91 [-]: GETUPVAL  R14 U3       ; R14 := U3
 92 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["0xBB2F7661"]
 93 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
 94 [-]: GETGLOBAL R16 K18      ; R16 := impactMessageParticleFX
 95 [-]: MOVE      R17 R12      ; R17 := R12
 96 [-]: MOVE      R18 R13      ; R18 := R13
 97 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 98 [-]: GETUPVAL  R14 U4       ; R14 := U4
 99 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["mImpactMessageFrame"]
100 [-]: EQ        1 R14 R6     ; if R14 == R6 then PC := 115
101 [-]: JMP       115          ; PC := 115
102 [-]: GETUPVAL  R14 U4       ; R14 := U4
103 [-]: SETTABLE  R14 K22 R6   ; R14["mImpactMessageFrame"] := R6
104 [-]: GETGLOBAL R14 K23      ; R14 := 0x8C64AFA9
105 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
106 [-]: LOADK     R16 K24      ; R16 := "ImpactMessage.gotoAndStop"
107 [-]: MOVE      R17 R6       ; R17 := R6
108 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
109 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
110 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0x1C19D966"]
111 [-]: LOADK     R16 K26      ; R16 := "ImpactMessage.Label"
112 [-]: LOADK     R17 K27      ; R17 := "verticalAlignment"
113 [-]: LOADK     R18 K28      ; R18 := "center"
114 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
115 [-]: LE        0 K9 R1      ; if 0 > R1 then PC := 123
116 [-]: JMP       123          ; PC := 123
117 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
118 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0x1C19D966"]
119 [-]: LOADK     R16 K20      ; R16 := "ImpactMessage"
120 [-]: LOADK     R17 K29      ; R17 := "_alpha"
121 [-]: LOADK     R18 K9       ; R18 := 0
122 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
123 [-]: TEST      R7 0         ; if not R7 then PC := 128
124 [-]: JMP       128          ; PC := 128
125 [-]: GETUPVAL  R14 U4       ; R14 := U4
126 [-]: SETTABLE  R14 K30 R7   ; R14["mImpactMessageScale"] := R7
127 [-]: JMP       129          ; PC := 129
128 [-]: LOADK     R7 K31       ; R7 := 100
129 [-]: TEST      R8 0         ; if not R8 then PC := 134
130 [-]: JMP       134          ; PC := 134
131 [-]: GETUPVAL  R14 U4       ; R14 := U4
132 [-]: SETTABLE  R14 K32 R8   ; R14["mImpactMessageTransitionScale"] := R8
133 [-]: JMP       135          ; PC := 135
134 [-]: LOADK     R8 K31       ; R8 := 100
135 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
136 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x73A6E6CE"]
137 [-]: CALL      R14 2 2      ; R14 := R14(R15)
138 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
139 [-]: MOVE      R16 R9       ; R16 := R9
140 [-]: CALL      R15 2 2      ; R15 := R15(R16)
141 [-]: TEST      R15 1        ; if R15 then PC := 150
142 [-]: JMP       150          ; PC := 150
143 [-]: EQ        1 R14 R9     ; if R14 == R9 then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: MOVE      R14 R5       ; R14 := R5
146 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
147 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0x10E0402E"]
148 [-]: MOVE      R17 R9       ; R17 := R9
149 [-]: CALL      R15 3 1      ; R15(R16,R17)
150 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
151 [-]: SELF      R15 R15 K25  ; R16 := R15; R15 := R15["0x1C19D966"]
152 [-]: LOADK     R17 K20      ; R17 := "ImpactMessage"
153 [-]: LOADK     R18 K35      ; R18 := "_xscale"
154 [-]: MOVE      R19 R8       ; R19 := R8
155 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
156 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
157 [-]: SELF      R15 R15 K25  ; R16 := R15; R15 := R15["0x1C19D966"]
158 [-]: LOADK     R17 K20      ; R17 := "ImpactMessage"
159 [-]: LOADK     R18 K36      ; R18 := "_yscale"
160 [-]: MOVE      R19 R8       ; R19 := R8
161 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
162 [-]: LOADK     R15 K37      ; R15 := ""
163 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
164 [-]: MOVE      R17 R10      ; R17 := R10
165 [-]: CALL      R16 2 2      ; R16 := R16(R17)
166 [-]: TEST      R16 1        ; if R16 then PC := 176
167 [-]: JMP       176          ; PC := 176
168 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
169 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16["0x6724E8D6"]
170 [-]: MOVE      R18 R0       ; R18 := R0
171 [-]: MOVE      R19 R10      ; R19 := R10
172 [-]: MOVE      R20 R5       ; R20 := R5
173 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
174 [-]: MOVE      R15 R16      ; R15 := R16
175 [-]: JMP       183          ; PC := 183
176 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
177 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16["0x5DB0BD4"]
178 [-]: MOVE      R18 R0       ; R18 := R0
179 [-]: MOVE      R19 R1       ; R19 := R1
180 [-]: MOVE      R20 R5       ; R20 := R5
181 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
182 [-]: MOVE      R15 R16      ; R15 := R16
183 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
184 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x1C19D966"]
185 [-]: LOADK     R18 K26      ; R18 := "ImpactMessage.Label"
186 [-]: LOADK     R19 K40      ; R19 := "text"
187 [-]: MOVE      R20 R15      ; R20 := R15
188 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
189 [-]: TEST      R11 0        ; if not R11 then PC := 205
190 [-]: JMP       205          ; PC := 205
191 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
192 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x1C19D966"]
193 [-]: LOADK     R18 K41      ; R18 := "ImpactMessage.Underlay"
194 [-]: LOADK     R19 K42      ; R19 := "_color"
195 [-]: GETUPVAL  R20 U2       ; R20 := U2
196 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["0xF81722A2"]
197 [-]: MOVE      R21 R2       ; R21 := R2
198 [-]: GETGLOBAL R22 K43      ; R22 := _G
199 [-]: GETTABLE  R22 R22 K44  ; R22 := R22["UIColor_Shield"]
200 [-]: GETGLOBAL R23 K43      ; R23 := _G
201 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["UIColor_Health"]
202 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
203 [-]: CALL      R16 0 1      ; R16(R17,...)
204 [-]: JMP       218          ; PC := 218
205 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
206 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x1C19D966"]
207 [-]: LOADK     R18 K20      ; R18 := "ImpactMessage"
208 [-]: LOADK     R19 K42      ; R19 := "_color"
209 [-]: GETUPVAL  R20 U2       ; R20 := U2
210 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["0xF81722A2"]
211 [-]: MOVE      R21 R2       ; R21 := R2
212 [-]: GETGLOBAL R22 K43      ; R22 := _G
213 [-]: GETTABLE  R22 R22 K46  ; R22 := R22["UIColor_White"]
214 [-]: GETGLOBAL R23 K43      ; R23 := _G
215 [-]: GETTABLE  R23 R23 K47  ; R23 := R23["UIColor_Red"]
216 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
217 [-]: CALL      R16 0 1      ; R16(R17,...)
218 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
219 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x1C19D966"]
220 [-]: LOADK     R18 K48      ; R18 := "ImpactMessage.Bg"
221 [-]: LOADK     R19 K49      ; R19 := "_width"
222 [-]: GETGLOBAL R20 K50      ; R20 := 0xF595ADDE
223 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
224 [-]: SELF      R21 R21 K51  ; R22 := R21; R21 := R21["0x6B7B470B"]
225 [-]: LOADK     R23 K26      ; R23 := "ImpactMessage.Label"
226 [-]: LOADK     R24 K52      ; R24 := "textWidth"
227 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
228 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
229 [-]: ADD       R20 R20 K53  ; R20 := R20 + 20
230 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
231 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
232 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x1C19D966"]
233 [-]: LOADK     R18 K48      ; R18 := "ImpactMessage.Bg"
234 [-]: LOADK     R19 K54      ; R19 := "_height"
235 [-]: GETGLOBAL R20 K50      ; R20 := 0xF595ADDE
236 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
237 [-]: SELF      R21 R21 K51  ; R22 := R21; R21 := R21["0x6B7B470B"]
238 [-]: LOADK     R23 K26      ; R23 := "ImpactMessage.Label"
239 [-]: LOADK     R24 K55      ; R24 := "textHeight"
240 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
241 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
242 [-]: ADD       R20 R20 K56  ; R20 := R20 + 8
243 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
244 [-]: GETGLOBAL R16 K57      ; R16 := 0x6374FD98
245 [-]: SUB       R17 R1 K58   ; R17 := R1 - 0.40000000596046
246 [-]: MUL       R17 R17 K59  ; R17 := R17 * 10
247 [-]: LOADK     R18 K9       ; R18 := 0
248 [-]: LOADK     R19 K60      ; R19 := 30
249 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
250 [-]: ADD       R16 K31 R16  ; R16 := 100 + R16
251 [-]: GETGLOBAL R17 K61      ; R17 := 0x52E17A90
252 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
253 [-]: LOADK     R19 K20      ; R19 := "ImpactMessage"
254 [-]: GETGLOBAL R20 K62      ; R20 := UISys
255 [-]: GETTABLE  R20 R20 K63  ; R20 := R20["FlashInstance_LINEAR"]
256 [-]: NEWTABLE  R21 3 0      ; R21 := {}
257 [-]: LOADK     R22 K29      ; R22 := "_alpha"
258 [-]: LOADK     R23 K35      ; R23 := "_xscale"
259 [-]: LOADK     R24 K36      ; R24 := "_yscale"
260 [-]: SETLIST   R21 3 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 3
261 [-]: NEWTABLE  R22 3 0      ; R22 := {}
262 [-]: LOADK     R23 K31      ; R23 := 100
263 [-]: MOVE      R24 R7       ; R24 := R7
264 [-]: MOVE      R25 R7       ; R25 := R7
265 [-]: SETLIST   R22 3 1      ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 3
266 [-]: LOADK     R23 K64      ; R23 := 0.15000000596046
267 [-]: LOADK     R24 K9       ; R24 := 0
268 [-]: CLOSURE   R25 0        ; R25 := closure(Function #112.1)
269 [-]: MOVE      R0 R1        ; R0 := R1
270 [-]: GETUPVAL  R0 U6        ; R0 := U6
271 [-]: GETUPVAL  R0 U7        ; R0 := U7
272 [-]: CALL      R17 9 1      ; R17(R18,R19,R20,R21,R22,R23,R24,R25)
273 [-]: RETURN    R0 1         ; return 


; Function #112.1:
;
; Name:            
; Defined at line: 4726
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LE        0 K0 R0      ; if 0 > R0 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x61494587"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SUB       R2 R2 K2     ; R2 := R2 - 0.40000000596046
  8 [-]: GETUPVAL  R3 U2        ; R3 := U2
  9 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4733
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0xF595ADDE
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: MOVE      R1 R4        ; R1 := R4
  5 [-]: EQ        1 R2 K1      ; if R2 == "true" then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: EQ        1 R3 K1      ; if R3 == "true" then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: MOVE      R7 R2        ; R7 := R2
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: MOVE      R9 R3        ; R9 := R3
 19 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 20 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4741
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R0 K1        ; R0 := 0
  4 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
  6 [-]: LOADK     R3 K4        ; R3 := "ImpactMessage"
  7 [-]: LOADK     R4 K5        ; R4 := "_y"
  8 [-]: GETUPVAL  R5 U0        ; R5 := U0
  9 [-]: ADD       R5 R5 R0     ; R5 := R5 + R0
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4749
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "ImpactMessage"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x7E1F26D7"]
  9 [-]: LOADK     R2 K2        ; R2 := "ImpactMessage"
 10 [-]: GETGLOBAL R3 K6        ; R3 := _G
 11 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UIMaterial_Plain"]
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x8B598ED4"]
 15 [-]: GETGLOBAL R2 K9        ; R2 := gLotusSpeedballGameRulesType
 16 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 17 [-]: TEST      R0 0         ; if not R0 then PC := 46
 18 [-]: JMP       46           ; PC := 46
 19 [-]: LOADK     R0 K10       ; R0 := 180
 20 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 21 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 22 [-]: LOADK     R3 K2        ; R3 := "ImpactMessage"
 23 [-]: LOADK     R4 K11       ; R4 := "_y"
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 26 [-]: GETGLOBAL R1 K12       ; R1 := 0x400E7765
 27 [-]: GETUPVAL  R2 U1        ; R2 := U1
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: LOADK     R1 K13       ; R1 := 1
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["list"]
 34 [-]: LEN       R2 R2        ; R2 := # R2
 35 [-]: LOADK     R3 K13       ; R3 := 1
 36 [-]: FORPREP   R1 45        ; R1 -= R3; PC := 45
 37 [-]: GETUPVAL  R5 U1        ; R5 := U1
 38 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["list"]
 39 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 40 [-]: GETTABLE  R6 R5 K15    ; R6 := R5["clip"]
 41 [-]: EQ        0 R6 K2      ; if R6 ~= "ImpactMessage" then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: SETTABLE  R5 K16 R0    ; R5["originalY"] := R0
 44 [-]: JMP       46           ; PC := 46
 45 [-]: FORLOOP   R1 37        ; R1 += R3; if R1 <= R2 then begin PC := 37; R4 := R1 end
 46 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4769
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xB6E36143"]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4779
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x3EEB612E"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0xCDCB0C9"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 0         ; if not R2 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x7CC73200"]
 24 [-]: CALL      R2 2 1       ; R2(R3)
 25 [-]: JMP       29           ; PC := 29
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x79EA5337"]
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x3EEB612E"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: GETUPVAL  R2 U2        ; R2 := U2
 33 [-]: GETUPVAL  R3 U1        ; R3 := U1
 34 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0xABFD17D3"]
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: SETTABLE  R2 K9 R3     ; R2["HudScale"] := R3
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x6311F57F"]
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: MOVE      R2 R3        ; R2 := R3
 41 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 42 [-]: GETUPVAL  R3 U4        ; R3 := U4
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 1         ; if R2 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: GETUPVAL  R2 U4        ; R2 := U4
 47 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0xB6E36143"]
 48 [-]: GETUPVAL  R4 U5        ; R4 := U5
 49 [-]: CALL      R2 3 1       ; R2(R3,R4)
 50 [-]: GETUPVAL  R2 U6        ; R2 := U6
 51 [-]: CALL      R2 1 1       ; R2()
 52 [-]: GETUPVAL  R2 U7        ; R2 := U7
 53 [-]: CALL      R2 1 1       ; R2()
 54 [-]: GETUPVAL  R2 U8        ; R2 := U8
 55 [-]: CALL      R2 1 1       ; R2()
 56 [-]: GETGLOBAL R2 K13       ; R2 := mMovie
 57 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x17028E8F"]
 58 [-]: LOADK     R4 K15       ; R4 := "AbilityPanel.FocusButton.text"
 59 [-]: LOADK     R5 K16       ; R5 := "<ACTIVATE_ABILITY_MENU_4>"
 60 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 61 [-]: GETGLOBAL R2 K13       ; R2 := mMovie
 62 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x17028E8F"]
 63 [-]: LOADK     R4 K17       ; R4 := "RevivePanel.Callout.text"
 64 [-]: LOADK     R5 K18       ; R5 := "/Lotus/Language/SystemMessages/RevivePrompt"
 65 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 66 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4816
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x6B7B470B"]
  3 [-]: LOADK     R3 K2        ; R3 := "AbilityPanel.ControllerCastingImage"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: EQ        0 R1 K4      ; if R1 ~= "false" then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xBCA7FCAF"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x6B7B470B"]
 15 [-]: LOADK     R3 K6        ; R3 := "AbilityPanel"
 16 [-]: LOADK     R4 K3        ; R4 := "_visible"
 17 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 18 [-]: EQ        0 R1 K7      ; if R1 ~= "true" then PC := 44
 19 [-]: JMP       44           ; PC := 44
 20 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 21 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x1C19D966"]
 22 [-]: LOADK     R3 K9        ; R3 := "WeaponFrame"
 23 [-]: LOADK     R4 K3        ; R4 := "_visible"
 24 [-]: TEST      R0 1         ; if R0 then PC := 41
 25 [-]: JMP       41           ; PC := 41
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["IsOperator"]
 28 [-]: TEST      R5 0         ; if not R5 then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R5 K11       ; R5 := 0x400E7765
 31 [-]: GETUPVAL  R6 U2        ; R6 := U2
 32 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["ptr"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETUPVAL  R5 U2        ; R5 := U2
 37 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["ptr"]
 38 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x3180ADE8"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: JMP       43           ; PC := 43
 41 [-]: MOVE      R5 R0        ; R5 := R0
 42 [-]: MOVE      R5 R1        ; R5 := R1
 43 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 44 [-]: GETUPVAL  R1 U3        ; R1 := U3
 45 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["0xF81722A2"]
 46 [-]: GETUPVAL  R2 U1        ; R2 := U1
 47 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["MissionType"]
 48 [-]: GETGLOBAL R3 K16       ; R3 := Lotus_Game
 49 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["MT_RAILJACK"]
 50 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R2 R0        ; R2 := R0
 53 [-]: MOVE      R2 R1        ; R2 := R1
 54 [-]: LOADK     R3 K18       ; R3 := 100
 55 [-]: LOADK     R4 K19       ; R4 := 0
 56 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 57 [-]: GETGLOBAL R2 K20       ; R2 := 0x52E17A90
 58 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 59 [-]: LOADK     R4 K2        ; R4 := "AbilityPanel.ControllerCastingImage"
 60 [-]: GETGLOBAL R5 K21       ; R5 := UISys
 61 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["FlashInstance_SMOOTH_STEP"]
 62 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 63 [-]: LOADK     R7 K23       ; R7 := "_alpha"
 64 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 65 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 66 [-]: GETUPVAL  R8 U3        ; R8 := U3
 67 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xF81722A2"]
 68 [-]: MOVE      R9 R0        ; R9 := R0
 69 [-]: LOADK     R10 K18      ; R10 := 100
 70 [-]: LOADK     R11 K19      ; R11 := 0
 71 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 72 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 73 [-]: LOADK     R8 K24       ; R8 := 0.15000000596046
 74 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 75 [-]: GETGLOBAL R2 K20       ; R2 := 0x52E17A90
 76 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 77 [-]: LOADK     R4 K25       ; R4 := "AbilityPanel.ControllerCastingButtons"
 78 [-]: GETGLOBAL R5 K21       ; R5 := UISys
 79 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["FlashInstance_SMOOTH_STEP"]
 80 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 81 [-]: LOADK     R7 K23       ; R7 := "_alpha"
 82 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 83 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 84 [-]: GETUPVAL  R8 U3        ; R8 := U3
 85 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xF81722A2"]
 86 [-]: MOVE      R9 R0        ; R9 := R0
 87 [-]: LOADK     R10 K18      ; R10 := 100
 88 [-]: LOADK     R11 K19      ; R11 := 0
 89 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 90 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 91 [-]: LOADK     R8 K24       ; R8 := 0.15000000596046
 92 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 93 [-]: GETGLOBAL R2 K20       ; R2 := 0x52E17A90
 94 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 95 [-]: LOADK     R4 K26       ; R4 := "AbilityPanel.FocusButton"
 96 [-]: GETGLOBAL R5 K21       ; R5 := UISys
 97 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["FlashInstance_SMOOTH_STEP"]
 98 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 99 [-]: LOADK     R7 K23       ; R7 := "_alpha"
100 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
101 [-]: NEWTABLE  R7 0 0       ; R7 := {}
102 [-]: GETUPVAL  R8 U3        ; R8 := U3
103 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xF81722A2"]
104 [-]: MOVE      R9 R0        ; R9 := R0
105 [-]: LOADK     R10 K18      ; R10 := 100
106 [-]: LOADK     R11 K19      ; R11 := 0
107 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
108 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
109 [-]: LOADK     R8 K24       ; R8 := 0.15000000596046
110 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
111 [-]: GETGLOBAL R2 K20       ; R2 := 0x52E17A90
112 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
113 [-]: LOADK     R4 K27       ; R4 := "AbilityPanel.TacticalCallout"
114 [-]: GETGLOBAL R5 K21       ; R5 := UISys
115 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["FlashInstance_SMOOTH_STEP"]
116 [-]: NEWTABLE  R6 1 0       ; R6 := {}
117 [-]: LOADK     R7 K23       ; R7 := "_alpha"
118 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
119 [-]: NEWTABLE  R7 0 0       ; R7 := {}
120 [-]: GETUPVAL  R8 U3        ; R8 := U3
121 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xF81722A2"]
122 [-]: MOVE      R9 R0        ; R9 := R0
123 [-]: MOVE      R10 R1       ; R10 := R1
124 [-]: LOADK     R11 K19      ; R11 := 0
125 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
126 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
127 [-]: LOADK     R8 K24       ; R8 := 0.15000000596046
128 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
129 [-]: LOADNIL   R2 R2        ; R2 := nil
130 [-]: TEST      R0 0         ; if not R0 then PC := 134
131 [-]: JMP       134          ; PC := 134
132 [-]: GETUPVAL  R2 U4        ; R2 := U4
133 [-]: JMP       135          ; PC := 135
134 [-]: GETUPVAL  R2 U5        ; R2 := U5
135 [-]: GETGLOBAL R3 K28       ; R3 := 0xECFDD17
136 [-]: MOVE      R4 R2        ; R4 := R2
137 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
138 [-]: JMP       190          ; PC := 190
139 [-]: LOADNIL   R8 R8        ; R8 := nil
140 [-]: GETTABLE  R9 R7 K29    ; R9 := R7["Ability"]
141 [-]: EQ        0 R9 K30     ; if R9 ~= "ACTIVATE_ABILITY_MENU_0" then PC := 149
142 [-]: JMP       149          ; PC := 149
143 [-]: GETGLOBAL R9 K31       ; R9 := string
144 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0x4B1F4F58"]
145 [-]: LOADK     R10 K33      ; R10 := "AbilityPanel.Ability1"
146 [-]: CALL      R9 2 2       ; R9 := R9(R10)
147 [-]: MOVE      R8 R9        ; R8 := R9
148 [-]: JMP       175          ; PC := 175
149 [-]: GETTABLE  R9 R7 K29    ; R9 := R7["Ability"]
150 [-]: EQ        0 R9 K34     ; if R9 ~= "ACTIVATE_ABILITY_MENU_1" then PC := 158
151 [-]: JMP       158          ; PC := 158
152 [-]: GETGLOBAL R9 K31       ; R9 := string
153 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0x4B1F4F58"]
154 [-]: LOADK     R10 K35      ; R10 := "AbilityPanel.Ability2"
155 [-]: CALL      R9 2 2       ; R9 := R9(R10)
156 [-]: MOVE      R8 R9        ; R8 := R9
157 [-]: JMP       175          ; PC := 175
158 [-]: GETTABLE  R9 R7 K29    ; R9 := R7["Ability"]
159 [-]: EQ        0 R9 K36     ; if R9 ~= "ACTIVATE_ABILITY_MENU_2" then PC := 167
160 [-]: JMP       167          ; PC := 167
161 [-]: GETGLOBAL R9 K31       ; R9 := string
162 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0x4B1F4F58"]
163 [-]: LOADK     R10 K37      ; R10 := "AbilityPanel.Ability3"
164 [-]: CALL      R9 2 2       ; R9 := R9(R10)
165 [-]: MOVE      R8 R9        ; R8 := R9
166 [-]: JMP       175          ; PC := 175
167 [-]: GETTABLE  R9 R7 K29    ; R9 := R7["Ability"]
168 [-]: EQ        0 R9 K38     ; if R9 ~= "ACTIVATE_ABILITY_MENU_3" then PC := 175
169 [-]: JMP       175          ; PC := 175
170 [-]: GETGLOBAL R9 K31       ; R9 := string
171 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0x4B1F4F58"]
172 [-]: LOADK     R10 K39      ; R10 := "AbilityPanel.Ability4"
173 [-]: CALL      R9 2 2       ; R9 := R9(R10)
174 [-]: MOVE      R8 R9        ; R8 := R9
175 [-]: GETGLOBAL R9 K20       ; R9 := 0x52E17A90
176 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
177 [-]: MOVE      R11 R8       ; R11 := R8
178 [-]: GETGLOBAL R12 K21      ; R12 := UISys
179 [-]: GETTABLE  R12 R12 K22  ; R12 := R12["FlashInstance_SMOOTH_STEP"]
180 [-]: NEWTABLE  R13 2 0      ; R13 := {}
181 [-]: LOADK     R14 K40      ; R14 := "_x"
182 [-]: LOADK     R15 K41      ; R15 := "_y"
183 [-]: SETLIST   R13 2 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 2
184 [-]: NEWTABLE  R14 2 0      ; R14 := {}
185 [-]: GETTABLE  R15 R7 K42   ; R15 := R7["X"]
186 [-]: GETTABLE  R16 R7 K43   ; R16 := R7["Y"]
187 [-]: SETLIST   R14 2 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
188 [-]: LOADK     R15 K24      ; R15 := 0.15000000596046
189 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
190 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 139; R5 := R6 end
191 [-]: JMP       139          ; PC := 139
192 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4858
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADK     R0 K3        ; R0 := 9
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: SETTABLE  R1 K4 R2     ; R1["mColumns"] := R2
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mColumns"]
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mRows"]
 23 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 24 [-]: SETTABLE  R1 K5 R2     ; R1["mVisibleElements"] := R2
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x6470BAF4"]
 27 [-]: LOADNIL   R3 R3        ; R3 := nil
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 4872
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.Grid"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["0x9A7B3F36"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  6 [-]: LOADK     R3 K4        ; R3 := "HealthAndShield.StatusEffectItem"
  7 [-]: LOADNIL   R4 R4        ; R4 := nil
  8 [-]: LOADK     R5 K5        ; R5 := 9
  9 [-]: LOADK     R6 K6        ; R6 := 2
 10 [-]: CALL      R1 6 2       ; R1 := R1(R2,R3,R4,R5,R6)
 11 [-]: MOVE      R1 R0        ; R1 := R0
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SETTABLE  R1 K7 K8     ; R1["mColumnSeparation"] := -50
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: SETTABLE  R1 K9 K10    ; R1["mRowSeparation"] := 50
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SETTABLE  R1 K11 K12   ; R1["mVisNameId"] := nil
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SETTABLE  R1 K13 K12   ; R1["mVisNameFadeTimer"] := nil
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SETTABLE  R1 K14 K15   ; R1["mVisNameFadeDuration"] := 1
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETGLOBAL R2 K17       ; R2 := 0xF595ADDE
 24 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 25 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6B7B470B"]
 26 [-]: LOADK     R5 K19       ; R5 := "HealthAndShield.StatusEffectItem.StatName.Name"
 27 [-]: LOADK     R6 K20       ; R6 := "_x"
 28 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 29 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 30 [-]: SETTABLE  R1 K16 R2    ; R1["mOrigStatEffectNameXPos"] := R2
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: GETGLOBAL R2 K22       ; R2 := 0x2C00D429
 33 [-]: LOADK     R3 K23       ; R3 := "/Lotus/Types/PickUps/FocusBoostBuff"
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: SETTABLE  R1 K21 R2    ; R1["mFocusBoostAbilityType"] := R2
 36 [-]: GETUPVAL  R1 U0        ; R1 := U0
 37 [-]: CLOSURE   R2 0         ; R2 := closure(Function #120.1)
 38 [-]: GETUPVAL  R0 U0        ; R0 := U0
 39 [-]: GETUPVAL  R0 U1        ; R0 := U1
 40 [-]: SETTABLE  R1 K24 R2    ; R1["TryToShowStatName"] := R2
 41 [-]: GETUPVAL  R1 U0        ; R1 := U0
 42 [-]: CLOSURE   R2 1         ; R2 := closure(Function #120.2)
 43 [-]: GETUPVAL  R0 U1        ; R0 := U1
 44 [-]: GETUPVAL  R0 U0        ; R0 := U0
 45 [-]: SETTABLE  R1 K25 R2    ; R1["mOnRemovedCallback"] := R2
 46 [-]: GETUPVAL  R1 U0        ; R1 := U0
 47 [-]: CLOSURE   R2 2         ; R2 := closure(Function #120.3)
 48 [-]: SETTABLE  R1 K26 R2    ; R1["mClipCreatedCallback"] := R2
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: CLOSURE   R2 3         ; R2 := closure(Function #120.4)
 51 [-]: GETUPVAL  R0 U2        ; R0 := U2
 52 [-]: GETUPVAL  R0 U0        ; R0 := U0
 53 [-]: GETUPVAL  R0 U3        ; R0 := U3
 54 [-]: SETTABLE  R1 K27 R2    ; R1["mElementDrawCallback"] := R2
 55 [-]: RETURN    R0 1         ; return 


; Function #120.1:
;
; Name:            
; Defined at line: 4883
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mClipName"]
  7 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mVisNameId"]
 12 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Id"]
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xD5274B5D"]
 17 [-]: GETTABLE  R4 R1 K6     ; R4 := R1["mNameTimerId"]
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: SETTABLE  R1 K6 K2     ; R1["mNameTimerId"] := nil
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: SETTABLE  R2 K3 K2     ; R2["mVisNameId"] := nil
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: SETTABLE  R2 K7 K2     ; R2["mVisNameFadeTimer"] := nil
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mVisNameId"]
 26 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 47
 27 [-]: JMP       47           ; PC := 47
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Id"]
 30 [-]: SETTABLE  R2 K3 R3     ; R2["mVisNameId"] := R3
 31 [-]: GETGLOBAL R2 K8        ; R2 := mMovie
 32 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x880196A7"]
 33 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mClipName"]
 34 [-]: LOADK     R5 K10       ; R5 := "StatName"
 35 [-]: LOADK     R6 K11       ; R6 := "_alpha"
 36 [-]: LOADK     R7 K12       ; R7 := 100
 37 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 38 [-]: GETUPVAL  R2 U1        ; R2 := U1
 39 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x61494587"]
 40 [-]: LOADK     R4 K14       ; R4 := 2
 41 [-]: CLOSURE   R5 0         ; R5 := closure(Function #120.1.1)
 42 [-]: MOVE      R0 R1        ; R0 := R1
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 45 [-]: SETTABLE  R1 K6 R2     ; R1["mNameTimerId"] := R2
 46 [-]: JMP       60           ; PC := 60
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mVisNameId"]
 49 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Id"]
 50 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 60
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETUPVAL  R2 U1        ; R2 := U1
 53 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x61494587"]
 54 [-]: LOADK     R4 K15       ; R4 := 1.5
 55 [-]: CLOSURE   R5 1         ; R5 := closure(Function #120.1.2)
 56 [-]: MOVE      R0 R0        ; R0 := R0
 57 [-]: MOVE      R0 R1        ; R0 := R1
 58 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 59 [-]: SETTABLE  R1 K6 R2     ; R1["mNameTimerId"] := R2
 60 [-]: RETURN    R0 1         ; return 


; Function #120.1.1:
;
; Name:            
; Defined at line: 4901
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mClipName"]
  6 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K2 K0     ; R0["mNameTimerId"] := nil
 11 [-]: GETUPVAL  R0 U1        ; R0 := U1
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisNameFadeDuration"]
 14 [-]: SETTABLE  R0 K3 R1     ; R0["mVisNameFadeTimer"] := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #120.1.2:
;
; Name:            
; Defined at line: 4913
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xE4350426"]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #120.2:
;
; Name:            
; Defined at line: 4917
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mClipName"]
  4 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["mNameTimerId"]
  8 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xD5274B5D"]
 12 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mNameTimerId"]
 13 [-]: CALL      R2 3 1       ; R2(R3,R4)
 14 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["Id"]
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mVisNameId"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: SETTABLE  R2 K5 K0     ; R2["mVisNameId"] := nil
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: SETTABLE  R2 K6 K0     ; R2["mVisNameFadeTimer"] := nil
 23 [-]: RETURN    R0 1         ; return 


; Function #120.3:
;
; Name:            
; Defined at line: 4932
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R1 0         ; if not R1 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Change"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: SETTABLE  R1 K0 K1     ; R1["Change"] := nil
  7 [-]: RETURN    R0 1         ; return 


; Function #120.4:
;
; Name:            
; Defined at line: 4938
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mClipName"]
  7 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["Change"]
 11 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 14 [-]: SETTABLE  R0 K4 R1     ; R0["Change"] := R1
 15 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mClipName"]
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 18 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mAbilityType"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 1         ; if R3 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETGLOBAL R3 K6        ; R3 := 0x7C282057
 23 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mAbilityType"]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: MOVE      R2 R3        ; R2 := R3
 26 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mIsDebuff"]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 30 [-]: MOVE      R4 R2        ; R4 := R2
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: TEST      R3 1         ; if R3 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 35 [-]: MOVE      R4 R2        ; R4 := R2
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: TEST      R3 1         ; if R3 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x8B598ED4"]
 40 [-]: GETGLOBAL R5 K9        ; R5 := gLotusInventoryControllerType
 41 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 42 [-]: JMP       45           ; PC := 45
 43 [-]: MOVE      R3 R0        ; R3 := R0
 44 [-]: MOVE      R3 R1        ; R3 := R1
 45 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
 46 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["UseText"]
 47 [-]: EQ        1 R4 R3      ; if R4 == R3 then PC := 63
 48 [-]: JMP       63           ; PC := 63
 49 [-]: GETGLOBAL R4 K11       ; R4 := 0x8C64AFA9
 50 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 51 [-]: MOVE      R6 R1        ; R6 := R1
 52 [-]: LOADK     R7 K12       ; R7 := ".Icon.gotoAndStop"
 53 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 54 [-]: GETUPVAL  R7 U0        ; R7 := U0
 55 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["0xF81722A2"]
 56 [-]: MOVE      R8 R3        ; R8 := R3
 57 [-]: LOADK     R9 K14       ; R9 := 1
 58 [-]: LOADK     R10 K15      ; R10 := 2
 59 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 60 [-]: CALL      R4 0 1       ; R4(R5,...)
 61 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
 62 [-]: SETTABLE  R4 K10 R3    ; R4["UseText"] := R3
 63 [-]: GETTABLE  R4 R0 K16    ; R4 := R0["mColor"]
 64 [-]: EQ        0 R4 K3      ; if R4 ~= nil then PC := 89
 65 [-]: JMP       89           ; PC := 89
 66 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mIsDebuff"]
 67 [-]: TEST      R4 0         ; if not R4 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETGLOBAL R4 K17       ; R4 := _G
 70 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["UIColor_Health"]
 71 [-]: SETTABLE  R0 K16 R4    ; R0["mColor"] := R4
 72 [-]: JMP       89           ; PC := 89
 73 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 74 [-]: MOVE      R5 R2        ; R5 := R2
 75 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 76 [-]: TEST      R4 1         ; if R4 then PC := 86
 77 [-]: JMP       86           ; PC := 86
 78 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2["0x8B598ED4"]
 79 [-]: GETUPVAL  R6 U1        ; R6 := U1
 80 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["mFocusBoostAbilityType"]
 81 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 82 [-]: TEST      R4 0         ; if not R4 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: SETTABLE  R0 K16 K20   ; R0["mColor"] := 15059482
 85 [-]: JMP       89           ; PC := 89
 86 [-]: GETGLOBAL R4 K17       ; R4 := _G
 87 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["UIColor_Shield"]
 88 [-]: SETTABLE  R0 K16 R4    ; R0["mColor"] := R4
 89 [-]: TEST      R3 0         ; if not R3 then PC := 140
 90 [-]: JMP       140          ; PC := 140
 91 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
 92 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["IsDebuff"]
 93 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mIsDebuff"]
 94 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 120
 95 [-]: JMP       120          ; PC := 120
 96 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 97 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0x880196A7"]
 98 [-]: MOVE      R6 R1        ; R6 := R1
 99 [-]: LOADK     R7 K24       ; R7 := "Icon.Icon"
100 [-]: LOADK     R8 K25       ; R8 := "tintIcons"
101 [-]: MOVE      R9 R1        ; R9 := R1
102 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
103 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
104 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0x880196A7"]
105 [-]: MOVE      R6 R1        ; R6 := R1
106 [-]: LOADK     R7 K24       ; R7 := "Icon.Icon"
107 [-]: LOADK     R8 K26       ; R8 := "textColor"
108 [-]: GETUPVAL  R9 U0        ; R9 := U0
109 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0xF81722A2"]
110 [-]: GETTABLE  R10 R0 K7    ; R10 := R0["mIsDebuff"]
111 [-]: GETGLOBAL R11 K17      ; R11 := _G
112 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["UIColor_Health"]
113 [-]: GETGLOBAL R12 K17      ; R12 := _G
114 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["UIColor_Shield"]
115 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
116 [-]: CALL      R4 0 1       ; R4(R5,...)
117 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Change"]
118 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mIsDebuff"]
119 [-]: SETTABLE  R4 K22 R5    ; R4["IsDebuff"] := R5
120 [-]: GETTABLE  R4 R0 K27    ; R4 := R0["mIcon"]
121 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
122 [-]: MOVE      R6 R2        ; R6 := R2
123 [-]: CALL      R5 2 2       ; R5 := R5(R6)
124 [-]: TEST      R5 1         ; if R5 then PC := 132
125 [-]: JMP       132          ; PC := 132
126 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2["0x8B598ED4"]
127 [-]: GETGLOBAL R7 K9        ; R7 := gLotusInventoryControllerType
128 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
129 [-]: TEST      R5 0         ; if not R5 then PC := 132
130 [-]: JMP       132          ; PC := 132
131 [-]: LOADK     R4 K28       ; R4 := "<STEALTH_COMBO>"
132 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
133 [-]: SELF      R5 R5 K29    ; R6 := R5; R5 := R5["0x17028E8F"]
134 [-]: MOVE      R7 R1        ; R7 := R1
135 [-]: LOADK     R8 K30       ; R8 := ".Icon.Icon.text"
136 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
137 [-]: MOVE      R8 R4        ; R8 := R4
138 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
139 [-]: JMP       237          ; PC := 237
140 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Change"]
141 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["IconColorSet"]
142 [-]: TEST      R5 1         ; if R5 then PC := 160
143 [-]: JMP       160          ; PC := 160
144 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
145 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5["0x880196A7"]
146 [-]: MOVE      R7 R1        ; R7 := R1
147 [-]: LOADK     R8 K24       ; R8 := "Icon.Icon"
148 [-]: LOADK     R9 K32       ; R9 := "_color"
149 [-]: GETTABLE  R10 R0 K16   ; R10 := R0["mColor"]
150 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
151 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
152 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5["0x880196A7"]
153 [-]: MOVE      R7 R1        ; R7 := R1
154 [-]: LOADK     R8 K24       ; R8 := "Icon.Icon"
155 [-]: LOADK     R9 K33       ; R9 := "_visible"
156 [-]: MOVE      R10 R1       ; R10 := R1
157 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
158 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["Change"]
159 [-]: SETTABLE  R5 K31 K34   ; R5["IconColorSet"] := "0x1"
160 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
161 [-]: MOVE      R6 R2        ; R6 := R2
162 [-]: CALL      R5 2 2       ; R5 := R5(R6)
163 [-]: TEST      R5 1         ; if R5 then PC := 234
164 [-]: JMP       234          ; PC := 234
165 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2["0x8B598ED4"]
166 [-]: GETGLOBAL R7 K35       ; R7 := gLotusArtifactUpgradeType
167 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
168 [-]: TEST      R5 0         ; if not R5 then PC := 206
169 [-]: JMP       206          ; PC := 206
170 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2["0x8B598ED4"]
171 [-]: GETGLOBAL R7 K36       ; R7 := gLotusFocusUpgradeBaseType
172 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
173 [-]: TEST      R5 1         ; if R5 then PC := 206
174 [-]: JMP       206          ; PC := 206
175 [-]: SELF      R5 R2 K37    ; R6 := R2; R5 := R2["0x509DAAF0"]
176 [-]: CALL      R5 2 2       ; R5 := R5(R6)
177 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["Change"]
178 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["IconTexture"]
179 [-]: EQ        1 R6 R5      ; if R6 == R5 then PC := 237
180 [-]: JMP       237          ; PC := 237
181 [-]: GETUPVAL  R6 U2        ; R6 := U2
182 [-]: MOVE      R7 R5        ; R7 := R5
183 [-]: CALL      R6 2 2       ; R6 := R6(R7)
184 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
185 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7["0x880196A7"]
186 [-]: MOVE      R9 R1        ; R9 := R1
187 [-]: LOADK     R10 K24      ; R10 := "Icon.Icon"
188 [-]: LOADK     R11 K33      ; R11 := "_visible"
189 [-]: MOVE      R12 R6       ; R12 := R6
190 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
191 [-]: TEST      R6 1         ; if R6 then PC := 203
192 [-]: JMP       203          ; PC := 203
193 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
194 [-]: SELF      R7 R7 K39    ; R8 := R7; R7 := R7["0x26581636"]
195 [-]: MOVE      R9 R1        ; R9 := R1
196 [-]: LOADK     R10 K40      ; R10 := ".Icon.Icon"
197 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
198 [-]: MOVE      R10 R5       ; R10 := R5
199 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
200 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["Change"]
201 [-]: SETTABLE  R7 K38 R5    ; R7["IconTexture"] := R5
202 [-]: JMP       237          ; PC := 237
203 [-]: SETTABLE  R0 K41 K34   ; R0["WaitingForIcon"] := "0x1"
204 [-]: SETTABLE  R0 K42 R5    ; R0["Icon"] := R5
205 [-]: JMP       237          ; PC := 237
206 [-]: SELF      R7 R2 K8     ; R8 := R2; R7 := R2["0x8B598ED4"]
207 [-]: GETGLOBAL R9 K43       ; R9 := gItemType
208 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
209 [-]: TEST      R7 0         ; if not R7 then PC := 227
210 [-]: JMP       227          ; PC := 227
211 [-]: SELF      R7 R2 K44    ; R8 := R2; R7 := R2["0xF1A9732E"]
212 [-]: CALL      R7 2 2       ; R7 := R7(R8)
213 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["Change"]
214 [-]: GETTABLE  R8 R8 K38    ; R8 := R8["IconTexture"]
215 [-]: EQ        1 R8 R7      ; if R8 == R7 then PC := 237
216 [-]: JMP       237          ; PC := 237
217 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
218 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x26581636"]
219 [-]: MOVE      R10 R1       ; R10 := R1
220 [-]: LOADK     R11 K40      ; R11 := ".Icon.Icon"
221 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
222 [-]: MOVE      R11 R7       ; R11 := R7
223 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
224 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["Change"]
225 [-]: SETTABLE  R8 K38 R7    ; R8["IconTexture"] := R7
226 [-]: JMP       237          ; PC := 237
227 [-]: GETGLOBAL R8 K45       ; R8 := 0xBE684813
228 [-]: LOADK     R9 K46       ; R9 := "HudRedux abilityRes is not an item and has no icon texture! type: "
229 [-]: SELF      R10 R2 K47   ; R11 := R2; R10 := R2["0x1B252E3C"]
230 [-]: CALL      R10 2 2      ; R10 := R10(R11)
231 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
232 [-]: CALL      R8 2 1       ; R8(R9)
233 [-]: JMP       237          ; PC := 237
234 [-]: GETGLOBAL R8 K48       ; R8 := 0x93B1256B
235 [-]: LOADK     R9 K49       ; R9 := "Tried to create a hud buff notification without an abilityRes!"
236 [-]: CALL      R8 2 1       ; R8(R9)
237 [-]: GETTABLE  R8 R0 K50    ; R8 := R0["mBuffData"]
238 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
239 [-]: GETTABLE  R9 R9 K51    ; R9 := R9["BuffData"]
240 [-]: EQ        0 R9 R8      ; if R9 ~= R8 then PC := 252
241 [-]: JMP       252          ; PC := 252
242 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
243 [-]: GETTABLE  R9 R9 K52    ; R9 := R9["BuffDataExtra"]
244 [-]: GETTABLE  R10 R0 K53   ; R10 := R0["mBuffDataExtra"]
245 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 252
246 [-]: JMP       252          ; PC := 252
247 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
248 [-]: GETTABLE  R9 R9 K54    ; R9 := R9["BuffType"]
249 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
250 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 473
251 [-]: JMP       473          ; PC := 473
252 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
253 [-]: SETTABLE  R9 K51 R8    ; R9["BuffData"] := R8
254 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
255 [-]: GETTABLE  R10 R0 K53   ; R10 := R0["mBuffDataExtra"]
256 [-]: SETTABLE  R9 K52 R10   ; R9["BuffDataExtra"] := R10
257 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["Change"]
258 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
259 [-]: SETTABLE  R9 K54 R10   ; R9["BuffType"] := R10
260 [-]: LOADNIL   R9 R9        ; R9 := nil
261 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
262 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
263 [-]: GETTABLE  R11 R11 K57  ; R11 := R11["BT_PERCENT"]
264 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 274
265 [-]: JMP       274          ; PC := 274
266 [-]: GETUPVAL  R10 U0       ; R10 := U0
267 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["0xB57E56DF"]
268 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffData"]
269 [-]: LOADK     R12 K15      ; R12 := 2
270 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
271 [-]: LOADK     R11 K59      ; R11 := "%"
272 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
273 [-]: JMP       419          ; PC := 419
274 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
275 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
276 [-]: GETTABLE  R11 R11 K60  ; R11 := R11["BT_STACK"]
277 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 283
278 [-]: JMP       283          ; PC := 283
279 [-]: LOADK     R10 K61      ; R10 := "x"
280 [-]: MOVE      R11 R8       ; R11 := R8
281 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
282 [-]: JMP       419          ; PC := 419
283 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
284 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
285 [-]: GETTABLE  R11 R11 K62  ; R11 := R11["BT_STATIC"]
286 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 290
287 [-]: JMP       290          ; PC := 290
288 [-]: LOADK     R8 K63       ; R8 := ""
289 [-]: JMP       419          ; PC := 419
290 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
291 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
292 [-]: GETTABLE  R11 R11 K64  ; R11 := R11["BT_AMOUNT"]
293 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 301
294 [-]: JMP       301          ; PC := 301
295 [-]: GETUPVAL  R10 U0       ; R10 := U0
296 [-]: GETTABLE  R10 R10 K65  ; R10 := R10["0x2822759F"]
297 [-]: MOVE      R11 R8       ; R11 := R8
298 [-]: CALL      R10 2 2      ; R10 := R10(R11)
299 [-]: MOVE      R8 R10       ; R8 := R10
300 [-]: JMP       419          ; PC := 419
301 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
302 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
303 [-]: GETTABLE  R11 R11 K66  ; R11 := R11["BT_AMOUNT_PERCENT"]
304 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 317
305 [-]: JMP       317          ; PC := 317
306 [-]: GETUPVAL  R10 U0       ; R10 := U0
307 [-]: GETTABLE  R10 R10 K65  ; R10 := R10["0x2822759F"]
308 [-]: MOVE      R11 R8       ; R11 := R8
309 [-]: CALL      R10 2 2      ; R10 := R10(R11)
310 [-]: MOVE      R8 R10       ; R8 := R10
311 [-]: GETGLOBAL R10 K67      ; R10 := 0x9FAED6BC
312 [-]: GETTABLE  R11 R0 K53   ; R11 := R0["mBuffDataExtra"]
313 [-]: CALL      R10 2 2      ; R10 := R10(R11)
314 [-]: LOADK     R11 K59      ; R11 := "%"
315 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
316 [-]: JMP       419          ; PC := 419
317 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
318 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
319 [-]: GETTABLE  R11 R11 K68  ; R11 := R11["BT_FLOAT"]
320 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 330
321 [-]: JMP       330          ; PC := 330
322 [-]: GETUPVAL  R10 U0       ; R10 := U0
323 [-]: GETTABLE  R10 R10 K69  ; R10 := R10["0x7E197415"]
324 [-]: MOVE      R11 R8       ; R11 := R8
325 [-]: LOADK     R12 K14      ; R12 := 1
326 [-]: MOVE      R13 R0       ; R13 := R0
327 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
328 [-]: MOVE      R8 R10       ; R8 := R10
329 [-]: JMP       419          ; PC := 419
330 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
331 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
332 [-]: GETTABLE  R11 R11 K70  ; R11 := R11["BT_AMOUNT_STACK"]
333 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 343
334 [-]: JMP       343          ; PC := 343
335 [-]: LOADK     R10 K61      ; R10 := "x"
336 [-]: MOVE      R11 R8       ; R11 := R8
337 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
338 [-]: GETGLOBAL R10 K67      ; R10 := 0x9FAED6BC
339 [-]: GETTABLE  R11 R0 K53   ; R11 := R0["mBuffDataExtra"]
340 [-]: CALL      R10 2 2      ; R10 := R10(R11)
341 [-]: MOVE      R9 R10       ; R9 := R10
342 [-]: JMP       419          ; PC := 419
343 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
344 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
345 [-]: GETTABLE  R11 R11 K71  ; R11 := R11["BT_INT_FLOAT"]
346 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 359
347 [-]: JMP       359          ; PC := 359
348 [-]: GETUPVAL  R10 U0       ; R10 := U0
349 [-]: GETTABLE  R10 R10 K69  ; R10 := R10["0x7E197415"]
350 [-]: GETTABLE  R11 R0 K50   ; R11 := R0["mBuffData"]
351 [-]: LOADK     R12 K14      ; R12 := 1
352 [-]: MOVE      R13 R1       ; R13 := R1
353 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
354 [-]: MOVE      R9 R10       ; R9 := R10
355 [-]: LOADK     R10 K61      ; R10 := "x"
356 [-]: GETTABLE  R11 R0 K53   ; R11 := R0["mBuffDataExtra"]
357 [-]: CONCAT    R8 R10 R11   ; R8 := R10 .. R11
358 [-]: JMP       419          ; PC := 419
359 [-]: GETGLOBAL R10 K56      ; R10 := Lotus_Game
360 [-]: GETTABLE  R10 R10 K72  ; R10 := R10["0x8917176E"]
361 [-]: GETTABLE  R11 R0 K55   ; R11 := R0["mBuffType"]
362 [-]: CALL      R10 2 2      ; R10 := R10(R11)
363 [-]: TEST      R10 0        ; if not R10 then PC := 419
364 [-]: JMP       419          ; PC := 419
365 [-]: LE        0 K73 R8     ; if 0 > R8 then PC := 373
366 [-]: JMP       373          ; PC := 373
367 [-]: GETGLOBAL R10 K74      ; R10 := math
368 [-]: GETTABLE  R10 R10 K75  ; R10 := R10["0xBCF846DF"]
369 [-]: MOVE      R11 R8       ; R11 := R8
370 [-]: CALL      R10 2 2      ; R10 := R10(R11)
371 [-]: MOVE      R8 R10       ; R8 := R10
372 [-]: JMP       379          ; PC := 379
373 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
374 [-]: SELF      R10 R10 K76  ; R11 := R10; R10 := R10["0x5DB0BD4"]
375 [-]: LOADK     R12 K77      ; R12 := "<INFINITY>"
376 [-]: MOVE      R13 R1       ; R13 := R1
377 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
378 [-]: MOVE      R8 R10       ; R8 := R10
379 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
380 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
381 [-]: GETTABLE  R11 R11 K78  ; R11 := R11["BT_STACK_TIMER"]
382 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 389
383 [-]: JMP       389          ; PC := 389
384 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
385 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
386 [-]: GETTABLE  R11 R11 K79  ; R11 := R11["BT_STACK_TIMER_DECAY"]
387 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 398
388 [-]: JMP       398          ; PC := 398
389 [-]: GETTABLE  R10 R0 K53   ; R10 := R0["mBuffDataExtra"]
390 [-]: LT        0 K73 R10    ; if 0 >= R10 then PC := 419
391 [-]: JMP       419          ; PC := 419
392 [-]: LOADK     R10 K61      ; R10 := "x"
393 [-]: GETGLOBAL R11 K67      ; R11 := 0x9FAED6BC
394 [-]: GETTABLE  R12 R0 K53   ; R12 := R0["mBuffDataExtra"]
395 [-]: CALL      R11 2 2      ; R11 := R11(R12)
396 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
397 [-]: JMP       419          ; PC := 419
398 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
399 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
400 [-]: GETTABLE  R11 R11 K80  ; R11 := R11["BT_AMOUNT_TIMER"]
401 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 409
402 [-]: JMP       409          ; PC := 409
403 [-]: GETUPVAL  R10 U0       ; R10 := U0
404 [-]: GETTABLE  R10 R10 K65  ; R10 := R10["0x2822759F"]
405 [-]: GETTABLE  R11 R0 K53   ; R11 := R0["mBuffDataExtra"]
406 [-]: CALL      R10 2 2      ; R10 := R10(R11)
407 [-]: MOVE      R9 R10       ; R9 := R10
408 [-]: JMP       419          ; PC := 419
409 [-]: GETTABLE  R10 R0 K55   ; R10 := R0["mBuffType"]
410 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
411 [-]: GETTABLE  R11 R11 K81  ; R11 := R11["BT_PERCENT_TIMER"]
412 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 419
413 [-]: JMP       419          ; PC := 419
414 [-]: GETGLOBAL R10 K67      ; R10 := 0x9FAED6BC
415 [-]: GETTABLE  R11 R0 K53   ; R11 := R0["mBuffDataExtra"]
416 [-]: CALL      R10 2 2      ; R10 := R10(R11)
417 [-]: LOADK     R11 K59      ; R11 := "%"
418 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
419 [-]: EQ        1 R9 K3      ; if R9 == nil then PC := 455
420 [-]: JMP       455          ; PC := 455
421 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
422 [-]: SELF      R10 R10 K82  ; R11 := R10; R10 := R10["0xD6A79FE9"]
423 [-]: MOVE      R12 R1       ; R12 := R1
424 [-]: LOADK     R13 K83      ; R13 := ".Data2.Desc"
425 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
426 [-]: LOADK     R13 K84      ; R13 := "text"
427 [-]: MOVE      R14 R9       ; R14 := R9
428 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
429 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
430 [-]: SELF      R10 R10 K85  ; R11 := R10; R10 := R10["0x7E1F26D7"]
431 [-]: MOVE      R12 R1       ; R12 := R1
432 [-]: LOADK     R13 K86      ; R13 := ".Data2.Bg"
433 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
434 [-]: GETGLOBAL R13 K17      ; R13 := _G
435 [-]: GETTABLE  R13 R13 K87  ; R13 := R13["UIMaterial_SmoothEdgeNoDepthTest"]
436 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
437 [-]: GETGLOBAL R10 K88      ; R10 := 0xF595ADDE
438 [-]: GETGLOBAL R11 K1       ; R11 := mMovie
439 [-]: SELF      R11 R11 K89  ; R12 := R11; R11 := R11["0x6B7B470B"]
440 [-]: MOVE      R13 R1       ; R13 := R1
441 [-]: LOADK     R14 K83      ; R14 := ".Data2.Desc"
442 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
443 [-]: LOADK     R14 K90      ; R14 := "textwidth"
444 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
445 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
446 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 455
447 [-]: JMP       455          ; PC := 455
448 [-]: GETGLOBAL R11 K1       ; R11 := mMovie
449 [-]: SELF      R11 R11 K23  ; R12 := R11; R11 := R11["0x880196A7"]
450 [-]: MOVE      R13 R1       ; R13 := R1
451 [-]: LOADK     R14 K91      ; R14 := "Data2.Bg"
452 [-]: LOADK     R15 K92      ; R15 := "_width"
453 [-]: ADD       R16 R10 K93  ; R16 := R10 + 6
454 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
455 [-]: GETGLOBAL R11 K1       ; R11 := mMovie
456 [-]: SELF      R11 R11 K82  ; R12 := R11; R11 := R11["0xD6A79FE9"]
457 [-]: MOVE      R13 R1       ; R13 := R1
458 [-]: LOADK     R14 K94      ; R14 := ".Desc"
459 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
460 [-]: LOADK     R14 K84      ; R14 := "text"
461 [-]: MOVE      R15 R8       ; R15 := R8
462 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
463 [-]: GETGLOBAL R11 K1       ; R11 := mMovie
464 [-]: SELF      R11 R11 K23  ; R12 := R11; R11 := R11["0x880196A7"]
465 [-]: MOVE      R13 R1       ; R13 := R1
466 [-]: LOADK     R14 K95      ; R14 := "Data2"
467 [-]: LOADK     R15 K33      ; R15 := "_visible"
468 [-]: EQ        0 R9 K3      ; if R9 ~= nil then PC := 471
469 [-]: JMP       471          ; PC := 471
470 [-]: MOVE      R16 R0       ; R16 := R0
471 [-]: MOVE      R16 R1       ; R16 := R1
472 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
473 [-]: GETUPVAL  R11 U1       ; R11 := U1
474 [-]: GETTABLE  R11 R11 K96  ; R11 := R11["mVisNameId"]
475 [-]: EQ        1 R11 K3     ; if R11 == nil then PC := 482
476 [-]: JMP       482          ; PC := 482
477 [-]: GETTABLE  R11 R0 K97   ; R11 := R0["Id"]
478 [-]: GETUPVAL  R12 U1       ; R12 := U1
479 [-]: GETTABLE  R12 R12 K96  ; R12 := R12["mVisNameId"]
480 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 483
481 [-]: JMP       483          ; PC := 483
482 [-]: MOVE      R11 R0       ; R11 := R0
483 [-]: MOVE      R11 R1       ; R11 := R1
484 [-]: TEST      R11 0        ; if not R11 then PC := 489
485 [-]: JMP       489          ; PC := 489
486 [-]: GETTABLE  R12 R0 K98   ; R12 := R0["mNameTimerId"]
487 [-]: EQ        1 R12 K3     ; if R12 == nil then PC := 507
488 [-]: JMP       507          ; PC := 507
489 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["Change"]
490 [-]: GETTABLE  R12 R12 K99  ; R12 := R12["ShowingName"]
491 [-]: EQ        1 R12 R11    ; if R12 == R11 then PC := 507
492 [-]: JMP       507          ; PC := 507
493 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
494 [-]: SELF      R12 R12 K23  ; R13 := R12; R12 := R12["0x880196A7"]
495 [-]: MOVE      R14 R1       ; R14 := R1
496 [-]: LOADK     R15 K100     ; R15 := "StatName"
497 [-]: LOADK     R16 K101     ; R16 := "_alpha"
498 [-]: GETUPVAL  R17 U0       ; R17 := U0
499 [-]: GETTABLE  R17 R17 K13  ; R17 := R17["0xF81722A2"]
500 [-]: MOVE      R18 R11      ; R18 := R11
501 [-]: LOADK     R19 K102     ; R19 := 100
502 [-]: LOADK     R20 K73      ; R20 := 0
503 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
504 [-]: CALL      R12 0 1      ; R12(R13,...)
505 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["Change"]
506 [-]: SETTABLE  R12 K99 R11  ; R12["ShowingName"] := R11
507 [-]: LOADK     R12 K63      ; R12 := ""
508 [-]: GETTABLE  R13 R0 K7    ; R13 := R0["mIsDebuff"]
509 [-]: TEST      R13 0        ; if not R13 then PC := 516
510 [-]: JMP       516          ; PC := 516
511 [-]: GETTABLE  R13 R0 K103  ; R13 := R0["mDesc"]
512 [-]: EQ        1 R13 K3     ; if R13 == nil then PC := 516
513 [-]: JMP       516          ; PC := 516
514 [-]: GETTABLE  R12 R0 K103  ; R12 := R0["mDesc"]
515 [-]: JMP       571          ; PC := 571
516 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
517 [-]: MOVE      R14 R2       ; R14 := R2
518 [-]: CALL      R13 2 2      ; R13 := R13(R14)
519 [-]: TEST      R13 1        ; if R13 then PC := 571
520 [-]: JMP       571          ; PC := 571
521 [-]: SELF      R13 R2 K8    ; R14 := R2; R13 := R2["0x8B598ED4"]
522 [-]: GETGLOBAL R15 K9       ; R15 := gLotusInventoryControllerType
523 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
524 [-]: TEST      R13 0        ; if not R13 then PC := 528
525 [-]: JMP       528          ; PC := 528
526 [-]: LOADK     R12 K104     ; R12 := "/Lotus/Language/Game/StealthComboBuff"
527 [-]: JMP       533          ; PC := 533
528 [-]: GETGLOBAL R13 K67      ; R13 := 0x9FAED6BC
529 [-]: SELF      R14 R2 K105  ; R15 := R2; R14 := R2["0x616C74B6"]
530 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
531 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
532 [-]: MOVE      R12 R13      ; R12 := R13
533 [-]: GETTABLE  R13 R0 K106  ; R13 := R0["mAugmentType"]
534 [-]: GETGLOBAL R14 K56      ; R14 := Lotus_Game
535 [-]: GETTABLE  R14 R14 K107 ; R14 := R14["PowerSuit_AUGMENT_NONE"]
536 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 571
537 [-]: JMP       571          ; PC := 571
538 [-]: GETTABLE  R13 R0 K106  ; R13 := R0["mAugmentType"]
539 [-]: GETGLOBAL R14 K56      ; R14 := Lotus_Game
540 [-]: GETTABLE  R14 R14 K108 ; R14 := R14["PowerSuit_AUGMENT_PVP_ONE"]
541 [-]: LE        0 R14 R13    ; if R14 > R13 then PC := 560
542 [-]: JMP       560          ; PC := 560
543 [-]: GETGLOBAL R13 K109     ; R13 := string
544 [-]: GETTABLE  R13 R13 K110 ; R13 := R13["0x633C4246"]
545 [-]: MOVE      R14 R12      ; R14 := R12
546 [-]: LOADK     R15 K111     ; R15 := "Ability"
547 [-]: LOADK     R16 K112     ; R16 := "%1Augment"
548 [-]: GETGLOBAL R17 K67      ; R17 := 0x9FAED6BC
549 [-]: GETTABLE  R18 R0 K106  ; R18 := R0["mAugmentType"]
550 [-]: GETGLOBAL R19 K56      ; R19 := Lotus_Game
551 [-]: GETTABLE  R19 R19 K108 ; R19 := R19["PowerSuit_AUGMENT_PVP_ONE"]
552 [-]: SUB       R18 R18 R19  ; R18 := R18 - R19
553 [-]: ADD       R18 R18 K14  ; R18 := R18 + 1
554 [-]: CALL      R17 2 2      ; R17 := R17(R18)
555 [-]: LOADK     R18 K113     ; R18 := "PvP"
556 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
557 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
558 [-]: MOVE      R12 R13      ; R12 := R13
559 [-]: JMP       571          ; PC := 571
560 [-]: GETGLOBAL R13 K109     ; R13 := string
561 [-]: GETTABLE  R13 R13 K110 ; R13 := R13["0x633C4246"]
562 [-]: MOVE      R14 R12      ; R14 := R12
563 [-]: LOADK     R15 K111     ; R15 := "Ability"
564 [-]: LOADK     R16 K112     ; R16 := "%1Augment"
565 [-]: GETGLOBAL R17 K67      ; R17 := 0x9FAED6BC
566 [-]: GETTABLE  R18 R0 K106  ; R18 := R0["mAugmentType"]
567 [-]: CALL      R17 2 2      ; R17 := R17(R18)
568 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
569 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
570 [-]: MOVE      R12 R13      ; R12 := R13
571 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
572 [-]: GETTABLE  R13 R13 K114 ; R13 := R13["StatColorSet"]
573 [-]: TEST      R13 1        ; if R13 then PC := 598
574 [-]: JMP       598          ; PC := 598
575 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
576 [-]: SETTABLE  R13 K114 K34 ; R13["StatColorSet"] := "0x1"
577 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
578 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0x880196A7"]
579 [-]: MOVE      R15 R1       ; R15 := R1
580 [-]: LOADK     R16 K115     ; R16 := "StatName.Arrow"
581 [-]: LOADK     R17 K32      ; R17 := "_color"
582 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mColor"]
583 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
584 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
585 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0x880196A7"]
586 [-]: MOVE      R15 R1       ; R15 := R1
587 [-]: LOADK     R16 K116     ; R16 := "StatName.Name.Tf"
588 [-]: LOADK     R17 K25      ; R17 := "tintIcons"
589 [-]: MOVE      R18 R1       ; R18 := R1
590 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
591 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
592 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0x880196A7"]
593 [-]: MOVE      R15 R1       ; R15 := R1
594 [-]: LOADK     R16 K116     ; R16 := "StatName.Name.Tf"
595 [-]: LOADK     R17 K26      ; R17 := "textColor"
596 [-]: GETTABLE  R18 R0 K16   ; R18 := R0["mColor"]
597 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
598 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
599 [-]: GETTABLE  R13 R13 K117 ; R13 := R13["StatNameTag"]
600 [-]: EQ        1 R13 R12    ; if R13 == R12 then PC := 627
601 [-]: JMP       627          ; PC := 627
602 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
603 [-]: SETTABLE  R13 K117 R12 ; R13["StatNameTag"] := R12
604 [-]: GETGLOBAL R13 K118     ; R13 := 0xE6DC43B0
605 [-]: MOVE      R14 R12      ; R14 := R12
606 [-]: MOVE      R15 R1       ; R15 := R1
607 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
608 [-]: MOVE      R12 R13      ; R12 := R13
609 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
610 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0x880196A7"]
611 [-]: MOVE      R15 R1       ; R15 := R1
612 [-]: LOADK     R16 K116     ; R16 := "StatName.Name.Tf"
613 [-]: LOADK     R17 K84      ; R17 := "text"
614 [-]: MOVE      R18 R12      ; R18 := R12
615 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
616 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
617 [-]: GETGLOBAL R14 K88      ; R14 := 0xF595ADDE
618 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
619 [-]: SELF      R15 R15 K89  ; R16 := R15; R15 := R15["0x6B7B470B"]
620 [-]: MOVE      R17 R1       ; R17 := R1
621 [-]: LOADK     R18 K120     ; R18 := ".StatName.Name.Tf"
622 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
623 [-]: LOADK     R18 K121     ; R18 := "textWidth"
624 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
625 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
626 [-]: SETTABLE  R13 K119 R14 ; R13["StatTextWidth"] := R14
627 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["Change"]
628 [-]: GETTABLE  R13 R13 K119 ; R13 := R13["StatTextWidth"]
629 [-]: GETGLOBAL R14 K0       ; R14 := 0x400E7765
630 [-]: MOVE      R15 R13      ; R15 := R13
631 [-]: CALL      R14 2 2      ; R14 := R14(R15)
632 [-]: TEST      R14 0        ; if not R14 then PC := 635
633 [-]: JMP       635          ; PC := 635
634 [-]: LOADK     R13 K122     ; R13 := 5
635 [-]: GETTABLE  R14 R0 K123  ; R14 := R0["mIndex"]
636 [-]: GETGLOBAL R15 K74      ; R15 := math
637 [-]: GETTABLE  R15 R15 K124 ; R15 := R15["0xF7005A7B"]
638 [-]: GETUPVAL  R16 U1       ; R16 := U1
639 [-]: GETTABLE  R16 R16 K125 ; R16 := R16["mScroll"]
640 [-]: CALL      R15 2 2      ; R15 := R15(R16)
641 [-]: GETGLOBAL R16 K74      ; R16 := math
642 [-]: GETTABLE  R16 R16 K124 ; R16 := R16["0xF7005A7B"]
643 [-]: GETUPVAL  R17 U1       ; R17 := U1
644 [-]: GETTABLE  R17 R17 K126 ; R17 := R17["mColumns"]
645 [-]: CALL      R16 2 2      ; R16 := R16(R17)
646 [-]: MOD       R15 R15 R16  ; R15 := R15 % R16
647 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
648 [-]: ADD       R14 R14 K14  ; R14 := R14 + 1
649 [-]: GETUPVAL  R15 U1       ; R15 := U1
650 [-]: GETTABLE  R15 R15 K126 ; R15 := R15["mColumns"]
651 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 655
652 [-]: JMP       655          ; PC := 655
653 [-]: LOADK     R13 K122     ; R13 := 5
654 [-]: JMP       660          ; PC := 660
655 [-]: EQ        0 R14 K14    ; if R14 ~= 1 then PC := 659
656 [-]: JMP       659          ; PC := 659
657 [-]: SUB       R13 R13 K122 ; R13 := R13 - 5
658 [-]: JMP       660          ; PC := 660
659 [-]: DIV       R13 R13 K15  ; R13 := R13 / 2
660 [-]: GETUPVAL  R15 U1       ; R15 := U1
661 [-]: GETTABLE  R15 R15 K127 ; R15 := R15["mOrigStatEffectNameXPos"]
662 [-]: SUB       R15 R15 R13  ; R15 := R15 - R13
663 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["Change"]
664 [-]: GETTABLE  R16 R16 K128 ; R16 := R16["StatNameX"]
665 [-]: EQ        1 R16 R15    ; if R16 == R15 then PC := 676
666 [-]: JMP       676          ; PC := 676
667 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
668 [-]: SELF      R16 R16 K23  ; R17 := R16; R16 := R16["0x880196A7"]
669 [-]: MOVE      R18 R1       ; R18 := R1
670 [-]: LOADK     R19 K129     ; R19 := "StatName.Name"
671 [-]: LOADK     R20 K130     ; R20 := "_x"
672 [-]: MOVE      R21 R15      ; R21 := R15
673 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
674 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["Change"]
675 [-]: SETTABLE  R16 K128 R15 ; R16["StatNameX"] := R15
676 [-]: GETTABLE  R16 R0 K131  ; R16 := R0["mHasBeenDrawn"]
677 [-]: EQ        1 R16 K3     ; if R16 == nil then PC := 682
678 [-]: JMP       682          ; PC := 682
679 [-]: GETTABLE  R16 R0 K131  ; R16 := R0["mHasBeenDrawn"]
680 [-]: TEST      R16 1        ; if R16 then PC := 687
681 [-]: JMP       687          ; PC := 687
682 [-]: GETUPVAL  R16 U1       ; R16 := U1
683 [-]: SELF      R16 R16 K132 ; R17 := R16; R16 := R16["0xE4350426"]
684 [-]: MOVE      R18 R0       ; R18 := R0
685 [-]: CALL      R16 3 1      ; R16(R17,R18)
686 [-]: SETTABLE  R0 K131 K34  ; R0["mHasBeenDrawn"] := "0x1"
687 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5151
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xF69E35E0"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5159
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SETTABLE  R4 K0 R1     ; R4["Icon"] := R1
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
  5 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x5DB0BD4"]
  6 [-]: MOVE      R7 R0        ; R7 := R0
  7 [-]: MOVE      R8 R1        ; R8 := R1
  8 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
  9 [-]: SETTABLE  R4 K1 R5     ; R4["Message"] := R5
 10 [-]: GETUPVAL  R4 U0        ; R4 := U0
 11 [-]: SETTABLE  R4 K4 R2     ; R4["IconSize"] := R2
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: SETTABLE  R4 K5 R3     ; R4["Tint"] := R3
 14 [-]: GETUPVAL  R4 U0        ; R4 := U0
 15 [-]: SETTABLE  R4 K6 K7     ; R4["UpdateOverrides"] := "0x1"
 16 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5167
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "MiniMapContainer.VoidTearProgress"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K2        ; R3 := "MiniMapContainer.VoidTearProgress"
 10 [-]: LOADK     R4 K4        ; R4 := "_alpha"
 11 [-]: GETUPVAL  R5 U0        ; R5 := U0
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xF81722A2"]
 13 [-]: MOVE      R6 R0        ; R6 := R0
 14 [-]: LOADK     R7 K6        ; R7 := 100
 15 [-]: LOADK     R8 K7        ; R8 := 0
 16 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 17 [-]: CALL      R1 0 1       ; R1(R2,...)
 18 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 5172
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0xF595ADDE
  5 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
  6 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x6B7B470B"]
  7 [-]: LOADK     R7 K4        ; R7 := "MiniMapContainer.MissionCountdown"
  8 [-]: LOADK     R8 K5        ; R8 := "_y"
  9 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 10 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 11 [-]: LOADK     R5 K6        ; R5 := 0
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 14 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x1C19D966"]
 15 [-]: LOADK     R5 K4        ; R5 := "MiniMapContainer.MissionCountdown"
 16 [-]: LOADK     R6 K5        ; R6 := "_y"
 17 [-]: ADD       R7 R2 R0     ; R7 := R2 + R0
 18 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 19 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 5177
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0x2949E4FD"]
  3 [-]: CALL      R3 1 2       ; R3 := R3()
  4 [-]: SETTABLE  R3 K2 R0     ; R3["mTitle"] := R0
  5 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
  6 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x5DB0BD4"]
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: SETTABLE  R3 K3 R4     ; R3["mDescription"] := R4
 11 [-]: SETTABLE  R3 K6 R2     ; R3["mItem"] := R2
 12 [-]: GETGLOBAL R4 K7        ; R4 := 0x400E7765
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0xD4CED360"]
 19 [-]: MOVE      R6 R3        ; R6 := R3
 20 [-]: CALL      R4 3 1       ; R4(R5,R6)
 21 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 5189
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["Enabled"] := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5193
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x880196A7"]
  3 [-]: LOADK     R4 K2        ; R4 := "AbilityPanel.Ability"
  4 [-]: GETGLOBAL R5 K3        ; R5 := 0x9FAED6BC
  5 [-]: ADD       R6 R0 K4     ; R6 := R0 + 1
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  8 [-]: LOADK     R5 K5        ; R5 := "ActiveAnim"
  9 [-]: LOADK     R6 K6        ; R6 := "_visible"
 10 [-]: MOVE      R7 R1        ; R7 := R1
 11 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 12 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5197
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x57A8D2D2"]
  3 [-]: SUB       R4 R0 K1     ; R4 := R0 - 1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5201
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xADE780F8"]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5205
; #Upvalues:       27
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #130.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["ShowWeaponPanel"] := R1
  6 [-]: GETGLOBAL R0 K0        ; R0 := _T
  7 [-]: CLOSURE   R1 1         ; R1 := closure(Function #130.2)
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SETTABLE  R0 K2 R1     ; R0["HideWeaponPanel"] := R1
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: CLOSURE   R1 2         ; R1 := closure(Function #130.3)
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: GETUPVAL  R0 U2        ; R0 := U2
 15 [-]: SETTABLE  R0 K3 R1     ; R0["ShowAbilityPanel"] := R1
 16 [-]: GETGLOBAL R0 K0        ; R0 := _T
 17 [-]: CLOSURE   R1 3         ; R1 := closure(Function #130.4)
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: SETTABLE  R0 K4 R1     ; R0["HideAbilityPanel"] := R1
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: CLOSURE   R1 4         ; R1 := closure(Function #130.5)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R0 U3        ; R0 := U3
 25 [-]: SETTABLE  R0 K5 R1     ; R0["SetEnergyVisibility"] := R1
 26 [-]: GETGLOBAL R0 K0        ; R0 := _T
 27 [-]: GETUPVAL  R1 U4        ; R1 := U4
 28 [-]: SETTABLE  R0 K6 R1     ; R0["SetAbilityTimer"] := R1
 29 [-]: GETGLOBAL R0 K0        ; R0 := _T
 30 [-]: GETUPVAL  R1 U5        ; R1 := U5
 31 [-]: SETTABLE  R0 K7 R1     ; R0["AddAbilityTimer"] := R1
 32 [-]: GETGLOBAL R0 K0        ; R0 := _T
 33 [-]: CLOSURE   R1 5         ; R1 := closure(Function #130.6)
 34 [-]: GETUPVAL  R0 U0        ; R0 := U0
 35 [-]: GETUPVAL  R0 U6        ; R0 := U6
 36 [-]: SETTABLE  R0 K8 R1     ; R0["SetFocusTimer"] := R1
 37 [-]: GETGLOBAL R0 K0        ; R0 := _T
 38 [-]: CLOSURE   R1 6         ; R1 := closure(Function #130.7)
 39 [-]: GETUPVAL  R0 U0        ; R0 := U0
 40 [-]: GETUPVAL  R0 U7        ; R0 := U7
 41 [-]: SETTABLE  R0 K9 R1     ; R0["AddLogMessage"] := R1
 42 [-]: GETGLOBAL R0 K0        ; R0 := _T
 43 [-]: CLOSURE   R1 7         ; R1 := closure(Function #130.8)
 44 [-]: GETUPVAL  R0 U0        ; R0 := U0
 45 [-]: GETUPVAL  R0 U8        ; R0 := U8
 46 [-]: SETTABLE  R0 K10 R1    ; R0["AddPvpKillMessage"] := R1
 47 [-]: GETGLOBAL R0 K0        ; R0 := _T
 48 [-]: CLOSURE   R1 8         ; R1 := closure(Function #130.9)
 49 [-]: GETUPVAL  R0 U0        ; R0 := U0
 50 [-]: GETUPVAL  R0 U9        ; R0 := U9
 51 [-]: SETTABLE  R0 K11 R1    ; R0["ShowImpactMessage"] := R1
 52 [-]: GETGLOBAL R0 K0        ; R0 := _T
 53 [-]: CLOSURE   R1 9         ; R1 := closure(Function #130.10)
 54 [-]: GETUPVAL  R0 U0        ; R0 := U0
 55 [-]: GETUPVAL  R0 U10       ; R0 := U10
 56 [-]: SETTABLE  R0 K12 R1    ; R0["HideImpactMessage"] := R1
 57 [-]: GETGLOBAL R0 K0        ; R0 := _T
 58 [-]: CLOSURE   R1 10        ; R1 := closure(Function #130.11)
 59 [-]: GETUPVAL  R0 U0        ; R0 := U0
 60 [-]: GETUPVAL  R0 U11       ; R0 := U11
 61 [-]: SETTABLE  R0 K13 R1    ; R0["SetImpactMessageDeltaY"] := R1
 62 [-]: GETGLOBAL R0 K0        ; R0 := _T
 63 [-]: CLOSURE   R1 11        ; R1 := closure(Function #130.12)
 64 [-]: GETUPVAL  R0 U0        ; R0 := U0
 65 [-]: GETUPVAL  R0 U12       ; R0 := U12
 66 [-]: SETTABLE  R0 K14 R1    ; R0["VoidTearOverride"] := R1
 67 [-]: GETGLOBAL R0 K0        ; R0 := _T
 68 [-]: CLOSURE   R1 12        ; R1 := closure(Function #130.13)
 69 [-]: GETUPVAL  R0 U0        ; R0 := U0
 70 [-]: GETUPVAL  R0 U13       ; R0 := U13
 71 [-]: SETTABLE  R0 K15 R1    ; R0["SetVoidTearVisible"] := R1
 72 [-]: GETGLOBAL R0 K0        ; R0 := _T
 73 [-]: CLOSURE   R1 13        ; R1 := closure(Function #130.14)
 74 [-]: GETUPVAL  R0 U0        ; R0 := U0
 75 [-]: GETUPVAL  R0 U14       ; R0 := U14
 76 [-]: SETTABLE  R0 K16 R1    ; R0["MissionCountdownApplyOffsetY"] := R1
 77 [-]: GETGLOBAL R0 K0        ; R0 := _T
 78 [-]: CLOSURE   R1 14        ; R1 := closure(Function #130.15)
 79 [-]: GETUPVAL  R0 U0        ; R0 := U0
 80 [-]: GETUPVAL  R0 U15       ; R0 := U15
 81 [-]: SETTABLE  R0 K17 R1    ; R0["AddLevelUp"] := R1
 82 [-]: GETGLOBAL R0 K0        ; R0 := _T
 83 [-]: CLOSURE   R1 15        ; R1 := closure(Function #130.16)
 84 [-]: GETUPVAL  R0 U0        ; R0 := U0
 85 [-]: GETUPVAL  R0 U16       ; R0 := U16
 86 [-]: SETTABLE  R0 K18 R1    ; R0["SetHudPartialFade"] := R1
 87 [-]: GETGLOBAL R0 K0        ; R0 := _T
 88 [-]: CLOSURE   R1 16        ; R1 := closure(Function #130.17)
 89 [-]: GETUPVAL  R0 U0        ; R0 := U0
 90 [-]: GETUPVAL  R0 U17       ; R0 := U17
 91 [-]: SETTABLE  R0 K19 R1    ; R0["SetAbilityActiveAnim"] := R1
 92 [-]: GETGLOBAL R0 K0        ; R0 := _T
 93 [-]: CLOSURE   R1 17        ; R1 := closure(Function #130.18)
 94 [-]: GETUPVAL  R0 U0        ; R0 := U0
 95 [-]: GETUPVAL  R0 U18       ; R0 := U18
 96 [-]: SETTABLE  R0 K20 R1    ; R0["SetAbilityCastable"] := R1
 97 [-]: GETGLOBAL R0 K0        ; R0 := _T
 98 [-]: CLOSURE   R1 18        ; R1 := closure(Function #130.19)
 99 [-]: GETUPVAL  R0 U19       ; R0 := U19
100 [-]: SETTABLE  R0 K21 R1    ; R0["HUD_GetAnchorMgr"] := R1
101 [-]: GETGLOBAL R0 K0        ; R0 := _T
102 [-]: CLOSURE   R1 19        ; R1 := closure(Function #130.20)
103 [-]: GETUPVAL  R0 U0        ; R0 := U0
104 [-]: GETUPVAL  R0 U20       ; R0 := U20
105 [-]: SETTABLE  R0 K22 R1    ; R0["ForceHideMiniMap"] := R1
106 [-]: GETGLOBAL R0 K0        ; R0 := _T
107 [-]: CLOSURE   R1 20        ; R1 := closure(Function #130.21)
108 [-]: GETUPVAL  R0 U0        ; R0 := U0
109 [-]: GETUPVAL  R0 U21       ; R0 := U21
110 [-]: SETTABLE  R0 K23 R1    ; R0["ForceRestoreMiniMap"] := R1
111 [-]: GETGLOBAL R0 K0        ; R0 := _T
112 [-]: CLOSURE   R1 21        ; R1 := closure(Function #130.22)
113 [-]: GETUPVAL  R0 U0        ; R0 := U0
114 [-]: GETUPVAL  R0 U22       ; R0 := U22
115 [-]: SETTABLE  R0 K24 R1    ; R0["RemoveHudTracker"] := R1
116 [-]: GETGLOBAL R0 K0        ; R0 := _T
117 [-]: GETUPVAL  R1 U23       ; R1 := U23
118 [-]: SETTABLE  R0 K25 R1    ; R0["AddHudTracker"] := R1
119 [-]: GETGLOBAL R0 K0        ; R0 := _T
120 [-]: GETUPVAL  R1 U24       ; R1 := U24
121 [-]: SETTABLE  R0 K26 R1    ; R0["GetHudTracker"] := R1
122 [-]: GETGLOBAL R0 K0        ; R0 := _T
123 [-]: CLOSURE   R1 22        ; R1 := closure(Function #130.23)
124 [-]: GETUPVAL  R0 U0        ; R0 := U0
125 [-]: GETUPVAL  R0 U25       ; R0 := U25
126 [-]: SETTABLE  R0 K27 R1    ; R0["SetAbilityCharge"] := R1
127 [-]: GETGLOBAL R0 K0        ; R0 := _T
128 [-]: CLOSURE   R1 23        ; R1 := closure(Function #130.24)
129 [-]: GETUPVAL  R0 U26       ; R0 := U26
130 [-]: SETTABLE  R0 K28 R1    ; R0["GetHudScale"] := R1
131 [-]: RETURN    R0 1         ; return 


; Function #130.1:
;
; Name:            
; Defined at line: 5206
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #130.2:
;
; Name:            
; Defined at line: 5207
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #130.3:
;
; Name:            
; Defined at line: 5208
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #130.4:
;
; Name:            
; Defined at line: 5209
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: VARARG    R4 0         ; R4 := ...
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #130.5:
;
; Name:            
; Defined at line: 5210
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.6:
;
; Name:            
; Defined at line: 5214
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.7:
;
; Name:            
; Defined at line: 5216
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.8:
;
; Name:            
; Defined at line: 5217
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.9:
;
; Name:            
; Defined at line: 5219
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.10:
;
; Name:            
; Defined at line: 5220
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.11:
;
; Name:            
; Defined at line: 5221
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.12:
;
; Name:            
; Defined at line: 5223
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.13:
;
; Name:            
; Defined at line: 5224
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.14:
;
; Name:            
; Defined at line: 5226
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.15:
;
; Name:            
; Defined at line: 5227
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.16:
;
; Name:            
; Defined at line: 5228
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.17:
;
; Name:            
; Defined at line: 5230
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.18:
;
; Name:            
; Defined at line: 5231
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.19:
;
; Name:            
; Defined at line: 5233
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #130.20:
;
; Name:            
; Defined at line: 5235
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.21:
;
; Name:            
; Defined at line: 5236
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.22:
;
; Name:            
; Defined at line: 5238
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.23:
;
; Name:            
; Defined at line: 5242
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       3
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: VARARG    R3 0         ; R3 := ...
  4 [-]: CALL      R1 0 1       ; R1(R2,...)
  5 [-]: RETURN    R0 1         ; return 


; Function #130.24:
;
; Name:            
; Defined at line: 5244
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["HudScale"]
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5247
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xDDA3917C"]
  4 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIStyle_Background1"]
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["Background1"] := R1
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xDDA3917C"]
 12 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UIStyle_FloatingContent"]
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: SETTABLE  R0 K4 R1     ; R0["FloatingContent"] := R1
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xDDA3917C"]
 20 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UIStyle_FloatingContentHighlight"]
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: SETTABLE  R0 K6 R1     ; R0["FloatingContentHighlight"] := R1
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: GETUPVAL  R1 U1        ; R1 := U1
 27 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xDDA3917C"]
 28 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["UIStyle_Negative"]
 30 [-]: MOVE      R3 R1        ; R3 := R1
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: SETTABLE  R0 K8 R1     ; R0["Negative"] := R1
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: GETUPVAL  R1 U2        ; R1 := U2
 35 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["0x93C88E0"]
 36 [-]: GETUPVAL  R2 U0        ; R2 := U0
 37 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["FloatingContent"]
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: SETTABLE  R0 K10 R1    ; R0["FloatingContentHex"] := R1
 40 [-]: GETUPVAL  R0 U0        ; R0 := U0
 41 [-]: GETUPVAL  R1 U2        ; R1 := U2
 42 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["0x93C88E0"]
 43 [-]: GETUPVAL  R2 U0        ; R2 := U0
 44 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["FloatingContentHighlight"]
 45 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 46 [-]: SETTABLE  R0 K12 R1    ; R0["FloatingContentHighlightHex"] := R1
 47 [-]: GETUPVAL  R0 U2        ; R0 := U2
 48 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["0x97B78441"]
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Background1"]
 51 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 52 [-]: GETUPVAL  R1 U2        ; R1 := U2
 53 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["0x97B78441"]
 54 [-]: GETUPVAL  R2 U0        ; R2 := U0
 55 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["FloatingContent"]
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: GETUPVAL  R2 U2        ; R2 := U2
 58 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0x97B78441"]
 59 [-]: GETUPVAL  R3 U0        ; R3 := U0
 60 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["FloatingContentHighlight"]
 61 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 62 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 63 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 64 [-]: LOADK     R5 K16       ; R5 := "RevivePanel.HoldProgress.Backer"
 65 [-]: LOADK     R6 K17       ; R6 := "_color"
 66 [-]: GETUPVAL  R7 U0        ; R7 := U0
 67 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FloatingContent"]
 68 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 69 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 70 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 71 [-]: LOADK     R5 K16       ; R5 := "RevivePanel.HoldProgress.Backer"
 72 [-]: LOADK     R6 K18       ; R6 := "_alpha"
 73 [-]: LOADK     R7 K19       ; R7 := 40
 74 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 75 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 76 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 77 [-]: LOADK     R5 K20       ; R5 := "RevivePanel.HoldProgress.Diamond"
 78 [-]: LOADK     R6 K17       ; R6 := "_color"
 79 [-]: GETUPVAL  R7 U0        ; R7 := U0
 80 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["Background1"]
 81 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 82 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 83 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 84 [-]: LOADK     R5 K20       ; R5 := "RevivePanel.HoldProgress.Diamond"
 85 [-]: LOADK     R6 K18       ; R6 := "_alpha"
 86 [-]: LOADK     R7 K21       ; R7 := 80
 87 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 88 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 89 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 90 [-]: LOADK     R5 K22       ; R5 := "RevivePanel.Shadow"
 91 [-]: LOADK     R6 K17       ; R6 := "_color"
 92 [-]: GETUPVAL  R7 U0        ; R7 := U0
 93 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["Background1"]
 94 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 95 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
 96 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
 97 [-]: LOADK     R5 K23       ; R5 := "RevivePanel.RevivesLeft"
 98 [-]: LOADK     R6 K24       ; R6 := "textColor"
 99 [-]: GETUPVAL  R7 U0        ; R7 := U0
100 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["FloatingContentHighlight"]
101 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
102 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
103 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
104 [-]: LOADK     R5 K25       ; R5 := "RevivePanel.Callout"
105 [-]: LOADK     R6 K17       ; R6 := "_color"
106 [-]: GETUPVAL  R7 U0        ; R7 := U0
107 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FloatingContent"]
108 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
109 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
110 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
111 [-]: LOADK     R5 K23       ; R5 := "RevivePanel.RevivesLeft"
112 [-]: LOADK     R6 K26       ; R6 := "_visible"
113 [-]: MOVE      R7 R1        ; R7 := R1
114 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
115 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
116 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
117 [-]: LOADK     R5 K27       ; R5 := "RevivePanel.HoldProgress.Fill"
118 [-]: LOADK     R6 K17       ; R6 := "_color"
119 [-]: GETUPVAL  R7 U0        ; R7 := U0
120 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["FloatingContentHighlight"]
121 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
122 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
123 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
124 [-]: LOADK     R5 K28       ; R5 := "RevivePanel.HoldProgress.IconContainer.Icon"
125 [-]: LOADK     R6 K17       ; R6 := "_color"
126 [-]: GETUPVAL  R7 U0        ; R7 := U0
127 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["FloatingContentHighlight"]
128 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
129 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
130 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
131 [-]: LOADK     R5 K29       ; R5 := "RevivePanel.HoldProgress.IconContainer.Blur"
132 [-]: LOADK     R6 K17       ; R6 := "_color"
133 [-]: GETUPVAL  R7 U0        ; R7 := U0
134 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["FloatingContentHighlight"]
135 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
136 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
137 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
138 [-]: LOADK     R5 K30       ; R5 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
139 [-]: LOADK     R6 K17       ; R6 := "_color"
140 [-]: GETUPVAL  R7 U0        ; R7 := U0
141 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["Background1"]
142 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
143 [-]: GETGLOBAL R3 K14       ; R3 := mMovie
144 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x1C19D966"]
145 [-]: LOADK     R5 K30       ; R5 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
146 [-]: LOADK     R6 K18       ; R6 := "_alpha"
147 [-]: LOADK     R7 K21       ; R7 := 80
148 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
149 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5277
; #Upvalues:       36
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "_root"
  4 [-]: LOADK     R3 K3        ; R3 := "_alpha"
  5 [-]: LOADK     R4 K4        ; R4 := 0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K5 K6     ; R0["Fade"] := 1
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K7 K8     ; R0["WaitingForProgressMovie"] := "0x1"
 11 [-]: GETGLOBAL R0 K9        ; R0 := 0x8C64AFA9
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: LOADK     R2 K10       ; R2 := "MiniMapContainer.MiniMap.setMask"
 14 [-]: LOADK     R3 K11       ; R3 := "MiniMapContainer.Mask"
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 17 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 18 [-]: LOADK     R2 K12       ; R2 := "TargetStatus.Name"
 19 [-]: LOADK     R3 K13       ; R3 := "_visible"
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 23 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 24 [-]: LOADK     R2 K14       ; R2 := "TargetStatus.Desc"
 25 [-]: LOADK     R3 K13       ; R3 := "_visible"
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 28 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 29 [-]: GETGLOBAL R1 K16       ; R1 := commonResourcesMovie
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: TEST      R0 1         ; if R0 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETGLOBAL R0 K17       ; R0 := gFlashMgr
 34 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0["0x24FF386"]
 35 [-]: GETGLOBAL R2 K16       ; R2 := commonResourcesMovie
 36 [-]: CALL      R0 3 1       ; R0(R1,R2)
 37 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 38 [-]: GETGLOBAL R1 K19       ; R1 := hudMarkersMovie
 39 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 40 [-]: TEST      R0 1         ; if R0 then PC := 73
 41 [-]: JMP       73           ; PC := 73
 42 [-]: GETUPVAL  R0 U1        ; R0 := U1
 43 [-]: GETGLOBAL R1 K17       ; R1 := gFlashMgr
 44 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x616DD092"]
 45 [-]: GETGLOBAL R3 K19       ; R3 := hudMarkersMovie
 46 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 47 [-]: SETTABLE  R0 K20 R1    ; R0["mHudMarkersMovie"] := R1
 48 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 49 [-]: GETUPVAL  R1 U1        ; R1 := U1
 50 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["mHudMarkersMovie"]
 51 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 52 [-]: TEST      R0 0         ; if not R0 then PC := 73
 53 [-]: JMP       73           ; PC := 73
 54 [-]: GETUPVAL  R0 U1        ; R0 := U1
 55 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 56 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1["0x5FF274BB"]
 57 [-]: GETGLOBAL R3 K19       ; R3 := hudMarkersMovie
 58 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 59 [-]: SETTABLE  R0 K20 R1    ; R0["mHudMarkersMovie"] := R1
 60 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 61 [-]: GETUPVAL  R1 U1        ; R1 := U1
 62 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["mHudMarkersMovie"]
 63 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 64 [-]: TEST      R0 1         ; if R0 then PC := 73
 65 [-]: JMP       73           ; PC := 73
 66 [-]: GETUPVAL  R0 U1        ; R0 := U1
 67 [-]: GETTABLE  R0 R0 K20    ; R0 := R0["mHudMarkersMovie"]
 68 [-]: SELF      R0 R0 K23    ; R1 := R0; R0 := R0["0x7669354A"]
 69 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 70 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0x7C1F5A97"]
 71 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 72 [-]: CALL      R0 0 1       ; R0(R1,...)
 73 [-]: GETUPVAL  R0 U1        ; R0 := U1
 74 [-]: GETGLOBAL R1 K17       ; R1 := gFlashMgr
 75 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1["0x1089D053"]
 76 [-]: LOADK     R3 K27       ; R3 := "HUD.UseAlternateHud"
 77 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 78 [-]: SETTABLE  R0 K25 R1    ; R0["IsAlternateHud"] := R1
 79 [-]: GETUPVAL  R0 U1        ; R0 := U1
 80 [-]: GETTABLE  R0 R0 K25    ; R0 := R0["IsAlternateHud"]
 81 [-]: TEST      R0 0         ; if not R0 then PC := 95
 82 [-]: JMP       95           ; PC := 95
 83 [-]: GETGLOBAL R0 K17       ; R0 := gFlashMgr
 84 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0["0x24FF386"]
 85 [-]: GETGLOBAL R2 K28       ; R2 := alternateHudMovie
 86 [-]: CALL      R0 3 1       ; R0(R1,R2)
 87 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 88 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 89 [-]: LOADK     R2 K2        ; R2 := "_root"
 90 [-]: LOADK     R3 K3        ; R3 := "_alpha"
 91 [-]: LOADK     R4 K29       ; R4 := 100
 92 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 93 [-]: GETUPVAL  R0 U0        ; R0 := U0
 94 [-]: SETTABLE  R0 K5 K4     ; R0["Fade"] := 0
 95 [-]: LOADK     R0 K30       ; R0 := 25
 96 [-]: GETUPVAL  R1 U2        ; R1 := U2
 97 [-]: MOVE      R2 R1        ; R2 := R1
 98 [-]: CALL      R1 2 1       ; R1(R2)
 99 [-]: GETUPVAL  R1 U1        ; R1 := U1
100 [-]: GETUPVAL  R2 U3        ; R2 := U3
101 [-]: SELF      R2 R2 K32    ; R3 := R2; R2 := R2["0xFC6AB53F"]
102 [-]: CALL      R2 2 2       ; R2 := R2(R3)
103 [-]: SETTABLE  R1 K31 R2    ; R1["IsInConclave"] := R2
104 [-]: GETUPVAL  R1 U4        ; R1 := U4
105 [-]: CALL      R1 1 1       ; R1()
106 [-]: GETUPVAL  R1 U5        ; R1 := U5
107 [-]: GETTABLE  R1 R1 K33    ; R1 := R1["0x9929BD85"]
108 [-]: CALL      R1 1 1       ; R1()
109 [-]: GETGLOBAL R1 K34       ; R1 := gPlayerProfileMgr
110 [-]: SELF      R1 R1 K35    ; R2 := R1; R1 := R1["0x32D83CC3"]
111 [-]: CALL      R1 2 2       ; R1 := R1(R2)
112 [-]: TEST      R1 0         ; if not R1 then PC := 123
113 [-]: JMP       123          ; PC := 123
114 [-]: GETGLOBAL R1 K36       ; R1 := 0x94BCBD40
115 [-]: GETGLOBAL R2 K34       ; R2 := gPlayerProfileMgr
116 [-]: SELF      R2 R2 K37    ; R3 := R2; R2 := R2["0x21EF7B1A"]
117 [-]: LOADK     R4 K4        ; R4 := 0
118 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
119 [-]: SELF      R2 R2 K38    ; R3 := R2; R2 := R2["0x654F1092"]
120 [-]: CALL      R2 2 2       ; R2 := R2(R3)
121 [-]: LOADK     R3 K39       ; R3 := "OnProfileSaved"
122 [-]: CALL      R1 3 1       ; R1(R2,R3)
123 [-]: NEWTABLE  R1 6 0       ; R1 := {}
124 [-]: LOADK     R2 K40       ; R2 := "ProgressBar"
125 [-]: LOADK     R3 K41       ; R3 := "Timer"
126 [-]: LOADK     R4 K42       ; R4 := "HealthTracker"
127 [-]: LOADK     R5 K43       ; R5 := "OpponentBar"
128 [-]: LOADK     R6 K44       ; R6 := "Label"
129 [-]: LOADK     R7 K45       ; R7 := "IconBar"
130 [-]: SETLIST   R1 6 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 6
131 [-]: GETGLOBAL R2 K46       ; R2 := 0x63B09107
132 [-]: MOVE      R3 R1        ; R3 := R1
133 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
134 [-]: JMP       142          ; PC := 142
135 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
136 [-]: SELF      R7 R7 K47    ; R8 := R7; R7 := R7["0x880196A7"]
137 [-]: LOADK     R9 K48       ; R9 := "HudTracker.Trackers"
138 [-]: MOVE      R10 R6       ; R10 := R6
139 [-]: LOADK     R11 K13      ; R11 := "_visible"
140 [-]: MOVE      R12 R0       ; R12 := R0
141 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
142 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 135; R4 := R5 end
143 [-]: JMP       135          ; PC := 135
144 [-]: GETUPVAL  R7 U6        ; R7 := U6
145 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["TypeInfo"]
146 [-]: GETUPVAL  R8 U5        ; R8 := U5
147 [-]: GETTABLE  R8 R8 K50    ; R8 := R8["HT_PROGRESS_BAR"]
148 [-]: NEWTABLE  R9 0 1       ; R9 := {}
149 [-]: SETTABLE  R9 K51 K40   ; R9["Name"] := "ProgressBar"
150 [-]: SETTABLE  R7 R8 R9     ; R7[R8] := R9
151 [-]: GETUPVAL  R7 U6        ; R7 := U6
152 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["TypeInfo"]
153 [-]: GETUPVAL  R8 U5        ; R8 := U5
154 [-]: GETTABLE  R8 R8 K52    ; R8 := R8["HT_TIMER"]
155 [-]: NEWTABLE  R9 0 1       ; R9 := {}
156 [-]: SETTABLE  R9 K51 K41   ; R9["Name"] := "Timer"
157 [-]: SETTABLE  R7 R8 R9     ; R7[R8] := R9
158 [-]: GETUPVAL  R7 U6        ; R7 := U6
159 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["TypeInfo"]
160 [-]: GETUPVAL  R8 U5        ; R8 := U5
161 [-]: GETTABLE  R8 R8 K53    ; R8 := R8["HT_HEALTH_TRACKER"]
162 [-]: NEWTABLE  R9 0 1       ; R9 := {}
163 [-]: SETTABLE  R9 K51 K42   ; R9["Name"] := "HealthTracker"
164 [-]: SETTABLE  R7 R8 R9     ; R7[R8] := R9
165 [-]: GETUPVAL  R7 U6        ; R7 := U6
166 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["TypeInfo"]
167 [-]: GETUPVAL  R8 U5        ; R8 := U5
168 [-]: GETTABLE  R8 R8 K54    ; R8 := R8["HT_OPPONENT_BAR"]
169 [-]: NEWTABLE  R9 0 1       ; R9 := {}
170 [-]: SETTABLE  R9 K51 K43   ; R9["Name"] := "OpponentBar"
171 [-]: SETTABLE  R7 R8 R9     ; R7[R8] := R9
172 [-]: GETUPVAL  R7 U6        ; R7 := U6
173 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["TypeInfo"]
174 [-]: GETUPVAL  R8 U5        ; R8 := U5
175 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["HT_LABEL"]
176 [-]: NEWTABLE  R9 0 1       ; R9 := {}
177 [-]: SETTABLE  R9 K51 K44   ; R9["Name"] := "Label"
178 [-]: SETTABLE  R7 R8 R9     ; R7[R8] := R9
179 [-]: GETUPVAL  R7 U6        ; R7 := U6
180 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["TypeInfo"]
181 [-]: GETUPVAL  R8 U5        ; R8 := U5
182 [-]: GETTABLE  R8 R8 K56    ; R8 := R8["HT_ICON_BAR"]
183 [-]: NEWTABLE  R9 0 1       ; R9 := {}
184 [-]: SETTABLE  R9 K51 K45   ; R9["Name"] := "IconBar"
185 [-]: SETTABLE  R7 R8 R9     ; R7[R8] := R9
186 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
187 [-]: SELF      R7 R7 K1     ; R8 := R7; R7 := R7["0x1C19D966"]
188 [-]: LOADK     R9 K57       ; R9 := "MiniMapContainer.BroadcastMessage"
189 [-]: LOADK     R10 K13      ; R10 := "_visible"
190 [-]: MOVE      R11 R0       ; R11 := R0
191 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
192 [-]: GETUPVAL  R7 U3        ; R7 := U3
193 [-]: SELF      R7 R7 K58    ; R8 := R7; R7 := R7["0x8B598ED4"]
194 [-]: GETGLOBAL R9 K59       ; R9 := gLotusBaseGameRulesType
195 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
196 [-]: TEST      R7 0         ; if not R7 then PC := 230
197 [-]: JMP       230          ; PC := 230
198 [-]: GETUPVAL  R7 U3        ; R7 := U3
199 [-]: SELF      R7 R7 K60    ; R8 := R7; R7 := R7["0xB8637349"]
200 [-]: CALL      R7 2 2       ; R7 := R7(R8)
201 [-]: GETUPVAL  R8 U7        ; R8 := U7
202 [-]: GETTABLE  R9 R7 K62    ; R9 := R7["location"]
203 [-]: GETUPVAL  R10 U5       ; R10 := U5
204 [-]: GETTABLE  R10 R10 K63  ; R10 := R10["CETUS_NODE_TAG"]
205 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 213
206 [-]: JMP       213          ; PC := 213
207 [-]: GETTABLE  R9 R7 K64    ; R9 := R7["missionType"]
208 [-]: GETGLOBAL R10 K65      ; R10 := Lotus_Game
209 [-]: GETTABLE  R10 R10 K66  ; R10 := R10["MT_LANDSCAPE"]
210 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 213
211 [-]: JMP       213          ; PC := 213
212 [-]: MOVE      R9 R0        ; R9 := R0
213 [-]: MOVE      R9 R1        ; R9 := R1
214 [-]: SETTABLE  R8 K61 R9    ; R8["Active"] := R9
215 [-]: GETUPVAL  R8 U7        ; R8 := U7
216 [-]: GETTABLE  R9 R7 K64    ; R9 := R7["missionType"]
217 [-]: GETGLOBAL R10 K65      ; R10 := Lotus_Game
218 [-]: GETTABLE  R10 R10 K66  ; R10 := R10["MT_LANDSCAPE"]
219 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 222
220 [-]: JMP       222          ; PC := 222
221 [-]: MOVE      R9 R0        ; R9 := R0
222 [-]: MOVE      R9 R1        ; R9 := R1
223 [-]: SETTABLE  R8 K67 R9    ; R8["Landscape"] := R9
224 [-]: GETUPVAL  R8 U7        ; R8 := U7
225 [-]: SETTABLE  R8 K68 K69   ; R8["Visible"] := "0x0"
226 [-]: GETUPVAL  R8 U7        ; R8 := U7
227 [-]: SETTABLE  R8 K70 K4    ; R8["DayCount"] := 0
228 [-]: GETUPVAL  R8 U7        ; R8 := U7
229 [-]: SETTABLE  R8 K71 K4    ; R8["GameTimeAtDusk"] := 0
230 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
231 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x1C19D966"]
232 [-]: LOADK     R10 K72      ; R10 := "MiniMapContainer.Clock"
233 [-]: LOADK     R11 K13      ; R11 := "_visible"
234 [-]: GETUPVAL  R12 U7       ; R12 := U7
235 [-]: GETTABLE  R12 R12 K68  ; R12 := R12["Visible"]
236 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
237 [-]: GETUPVAL  R8 U7        ; R8 := U7
238 [-]: GETTABLE  R8 R8 K68    ; R8 := R8["Visible"]
239 [-]: TEST      R8 0         ; if not R8 then PC := 271
240 [-]: JMP       271          ; PC := 271
241 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
242 [-]: SELF      R8 R8 K73    ; R9 := R8; R8 := R8["0x4443A5E7"]
243 [-]: LOADK     R10 K74      ; R10 := "MiniMapContainer.Clock.Spinner.Day"
244 [-]: GETGLOBAL R11 K75      ; R11 := clockTextures
245 [-]: GETTABLE  R11 R11 K6   ; R11 := R11[1]
246 [-]: GETGLOBAL R12 K76      ; R12 := _G
247 [-]: GETTABLE  R12 R12 K77  ; R12 := R12["UIMaterial_Plain"]
248 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
249 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
250 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x1C19D966"]
251 [-]: LOADK     R10 K74      ; R10 := "MiniMapContainer.Clock.Spinner.Day"
252 [-]: LOADK     R11 K78      ; R11 := "_color"
253 [-]: GETGLOBAL R12 K76      ; R12 := _G
254 [-]: GETTABLE  R12 R12 K79  ; R12 := R12["UIColor_PvpTeamOne"]
255 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
256 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
257 [-]: SELF      R8 R8 K73    ; R9 := R8; R8 := R8["0x4443A5E7"]
258 [-]: LOADK     R10 K80      ; R10 := "MiniMapContainer.Clock.Spinner.Night"
259 [-]: GETGLOBAL R11 K75      ; R11 := clockTextures
260 [-]: GETTABLE  R11 R11 K81  ; R11 := R11[2]
261 [-]: GETGLOBAL R12 K76      ; R12 := _G
262 [-]: GETTABLE  R12 R12 K77  ; R12 := R12["UIMaterial_Plain"]
263 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
264 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
265 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x1C19D966"]
266 [-]: LOADK     R10 K80      ; R10 := "MiniMapContainer.Clock.Spinner.Night"
267 [-]: LOADK     R11 K78      ; R11 := "_color"
268 [-]: GETGLOBAL R12 K76      ; R12 := _G
269 [-]: GETTABLE  R12 R12 K82  ; R12 := R12["UIColor_PvpTeamTwo"]
270 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
271 [-]: GETUPVAL  R8 U8        ; R8 := U8
272 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
273 [-]: SELF      R9 R9 K84    ; R10 := R9; R9 := R9["0x5DB0BD4"]
274 [-]: LOADK     R11 K85      ; R11 := "/Lotus/Language/Menu/VoidTearProgressTitle"
275 [-]: MOVE      R12 R1       ; R12 := R1
276 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
277 [-]: SETTABLE  R8 K83 R9    ; R8["Message"] := R9
278 [-]: GETUPVAL  R8 U8        ; R8 := U8
279 [-]: GETGLOBAL R9 K87       ; R9 := voidTearIcon
280 [-]: SETTABLE  R8 K86 R9    ; R8["Icon"] := R9
281 [-]: GETUPVAL  R8 U8        ; R8 := U8
282 [-]: SETTABLE  R8 K88 K8    ; R8["UpdateOverrides"] := "0x1"
283 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
284 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x1C19D966"]
285 [-]: LOADK     R10 K89      ; R10 := "MiniMapContainer.VoidTearProgress"
286 [-]: LOADK     R11 K3       ; R11 := "_alpha"
287 [-]: LOADK     R12 K4       ; R12 := 0
288 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
289 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
290 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x1C19D966"]
291 [-]: LOADK     R10 K90      ; R10 := "Card"
292 [-]: LOADK     R11 K91      ; R11 := "_y"
293 [-]: LOADK     R12 K92      ; R12 := 360
294 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
295 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
296 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x1C19D966"]
297 [-]: LOADK     R10 K93      ; R10 := "MiniMapContainer.VoidTearProgress.List"
298 [-]: LOADK     R11 K13      ; R11 := "_visible"
299 [-]: MOVE      R12 R0       ; R12 := R0
300 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
301 [-]: GETUPVAL  R8 U9        ; R8 := U9
302 [-]: CALL      R8 1 1       ; R8()
303 [-]: GETUPVAL  R8 U10       ; R8 := U10
304 [-]: CALL      R8 1 1       ; R8()
305 [-]: GETUPVAL  R8 U12       ; R8 := U12
306 [-]: GETTABLE  R8 R8 K94    ; R8 := R8["0x46FF1A3C"]
307 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
308 [-]: CALL      R8 2 2       ; R8 := R8(R9)
309 [-]: MOVE      R8 R11       ; R8 := R11
310 [-]: GETUPVAL  R8 U11       ; R8 := U11
311 [-]: GETUPVAL  R9 U13       ; R9 := U13
312 [-]: GETTABLE  R9 R9 K96    ; R9 := R9["HudScalePadding"]
313 [-]: SETTABLE  R8 K95 R9    ; R8["mHudScalePadding"] := R9
314 [-]: GETUPVAL  R8 U11       ; R8 := U11
315 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
316 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
317 [-]: LOADK     R11 K98      ; R11 := "LogMessageContainer"
318 [-]: NEWTABLE  R12 2 0      ; R12 := {}
319 [-]: GETUPVAL  R13 U11      ; R13 := U11
320 [-]: GETTABLE  R13 R13 K99  ; R13 := R13["ANCHOR_V_BOTTOM"]
321 [-]: GETUPVAL  R14 U11      ; R14 := U11
322 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
323 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
324 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
325 [-]: GETUPVAL  R8 U11       ; R8 := U11
326 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
327 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
328 [-]: LOADK     R11 K90      ; R11 := "Card"
329 [-]: NEWTABLE  R12 2 0      ; R12 := {}
330 [-]: GETUPVAL  R13 U11      ; R13 := U11
331 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
332 [-]: GETUPVAL  R14 U11      ; R14 := U11
333 [-]: GETTABLE  R14 R14 K102 ; R14 := R14["ANCHOR_H_RIGHT"]
334 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
335 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
336 [-]: GETUPVAL  R8 U11       ; R8 := U11
337 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
338 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
339 [-]: LOADK     R11 K103     ; R11 := "HealthAndShield"
340 [-]: NEWTABLE  R12 2 0      ; R12 := {}
341 [-]: GETUPVAL  R13 U11      ; R13 := U11
342 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
343 [-]: GETUPVAL  R14 U11      ; R14 := U11
344 [-]: GETTABLE  R14 R14 K102 ; R14 := R14["ANCHOR_H_RIGHT"]
345 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
346 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
347 [-]: GETUPVAL  R8 U11       ; R8 := U11
348 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
349 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
350 [-]: LOADK     R11 K105     ; R11 := "WeaponFrame"
351 [-]: NEWTABLE  R12 2 0      ; R12 := {}
352 [-]: GETUPVAL  R13 U11      ; R13 := U11
353 [-]: GETTABLE  R13 R13 K99  ; R13 := R13["ANCHOR_V_BOTTOM"]
354 [-]: GETUPVAL  R14 U11      ; R14 := U11
355 [-]: GETTABLE  R14 R14 K102 ; R14 := R14["ANCHOR_H_RIGHT"]
356 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
357 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
358 [-]: GETUPVAL  R8 U11       ; R8 := U11
359 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
360 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
361 [-]: LOADK     R11 K106     ; R11 := "QuestMessage"
362 [-]: NEWTABLE  R12 2 0      ; R12 := {}
363 [-]: GETUPVAL  R13 U11      ; R13 := U11
364 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
365 [-]: GETUPVAL  R14 U11      ; R14 := U11
366 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
367 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
368 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
369 [-]: GETUPVAL  R8 U11       ; R8 := U11
370 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
371 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
372 [-]: LOADK     R11 K107     ; R11 := "AbilityPanel"
373 [-]: NEWTABLE  R12 2 0      ; R12 := {}
374 [-]: GETUPVAL  R13 U11      ; R13 := U11
375 [-]: GETTABLE  R13 R13 K102 ; R13 := R13["ANCHOR_H_RIGHT"]
376 [-]: GETUPVAL  R14 U11      ; R14 := U11
377 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_V_BOTTOM"]
378 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
379 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
380 [-]: GETUPVAL  R8 U11       ; R8 := U11
381 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
382 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
383 [-]: LOADK     R11 K108     ; R11 := "MiniMapContainer"
384 [-]: NEWTABLE  R12 2 0      ; R12 := {}
385 [-]: GETUPVAL  R13 U11      ; R13 := U11
386 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
387 [-]: GETUPVAL  R14 U11      ; R14 := U11
388 [-]: GETTABLE  R14 R14 K109 ; R14 := R14["ANCHOR_H_LEFT"]
389 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
390 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
391 [-]: GETUPVAL  R8 U11       ; R8 := U11
392 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
393 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
394 [-]: LOADK     R11 K110     ; R11 := "MiniMapOverlayMsg"
395 [-]: NEWTABLE  R12 2 0      ; R12 := {}
396 [-]: GETUPVAL  R13 U11      ; R13 := U11
397 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
398 [-]: GETUPVAL  R14 U11      ; R14 := U11
399 [-]: GETTABLE  R14 R14 K109 ; R14 := R14["ANCHOR_H_LEFT"]
400 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
401 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
402 [-]: GETUPVAL  R8 U11       ; R8 := U11
403 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
404 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
405 [-]: LOADK     R11 K111     ; R11 := "HudTracker"
406 [-]: NEWTABLE  R12 2 0      ; R12 := {}
407 [-]: GETUPVAL  R13 U11      ; R13 := U11
408 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
409 [-]: GETUPVAL  R14 U11      ; R14 := U11
410 [-]: GETTABLE  R14 R14 K109 ; R14 := R14["ANCHOR_H_LEFT"]
411 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
412 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
413 [-]: GETUPVAL  R8 U11       ; R8 := U11
414 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
415 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
416 [-]: LOADK     R11 K112     ; R11 := "Reticle"
417 [-]: NEWTABLE  R12 2 0      ; R12 := {}
418 [-]: GETUPVAL  R13 U11      ; R13 := U11
419 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
420 [-]: GETUPVAL  R14 U11      ; R14 := U11
421 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
422 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
423 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
424 [-]: GETUPVAL  R8 U11       ; R8 := U11
425 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
426 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
427 [-]: LOADK     R11 K113     ; R11 := "ReticleCustom"
428 [-]: NEWTABLE  R12 2 0      ; R12 := {}
429 [-]: GETUPVAL  R13 U11      ; R13 := U11
430 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
431 [-]: GETUPVAL  R14 U11      ; R14 := U11
432 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
433 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
434 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
435 [-]: GETUPVAL  R8 U11       ; R8 := U11
436 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
437 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
438 [-]: LOADK     R11 K114     ; R11 := "AbilityDots"
439 [-]: NEWTABLE  R12 2 0      ; R12 := {}
440 [-]: GETUPVAL  R13 U11      ; R13 := U11
441 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
442 [-]: GETUPVAL  R14 U11      ; R14 := U11
443 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
444 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
445 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
446 [-]: GETUPVAL  R8 U11       ; R8 := U11
447 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
448 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
449 [-]: LOADK     R11 K115     ; R11 := "Stamina"
450 [-]: NEWTABLE  R12 2 0      ; R12 := {}
451 [-]: GETUPVAL  R13 U11      ; R13 := U11
452 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
453 [-]: GETUPVAL  R14 U11      ; R14 := U11
454 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
455 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
456 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
457 [-]: GETUPVAL  R8 U11       ; R8 := U11
458 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
459 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
460 [-]: LOADK     R11 K116     ; R11 := "SuccessfulHitNotification"
461 [-]: NEWTABLE  R12 2 0      ; R12 := {}
462 [-]: GETUPVAL  R13 U11      ; R13 := U11
463 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
464 [-]: GETUPVAL  R14 U11      ; R14 := U11
465 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
466 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
467 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
468 [-]: GETUPVAL  R8 U11       ; R8 := U11
469 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
470 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
471 [-]: LOADK     R11 K117     ; R11 := "Notification"
472 [-]: NEWTABLE  R12 2 0      ; R12 := {}
473 [-]: GETUPVAL  R13 U11      ; R13 := U11
474 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
475 [-]: GETUPVAL  R14 U11      ; R14 := U11
476 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
477 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
478 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
479 [-]: GETUPVAL  R8 U11       ; R8 := U11
480 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
481 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
482 [-]: LOADK     R11 K118     ; R11 := "SlamIndicator"
483 [-]: NEWTABLE  R12 2 0      ; R12 := {}
484 [-]: GETUPVAL  R13 U11      ; R13 := U11
485 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
486 [-]: GETUPVAL  R14 U11      ; R14 := U11
487 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
488 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
489 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
490 [-]: GETUPVAL  R8 U11       ; R8 := U11
491 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
492 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
493 [-]: LOADK     R11 K119     ; R11 := "SyndicatePower"
494 [-]: NEWTABLE  R12 2 0      ; R12 := {}
495 [-]: GETUPVAL  R13 U11      ; R13 := U11
496 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
497 [-]: GETUPVAL  R14 U11      ; R14 := U11
498 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
499 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
500 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
501 [-]: GETUPVAL  R8 U11       ; R8 := U11
502 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
503 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
504 [-]: LOADK     R11 K120     ; R11 := "reloadTimer"
505 [-]: NEWTABLE  R12 2 0      ; R12 := {}
506 [-]: GETUPVAL  R13 U11      ; R13 := U11
507 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
508 [-]: GETUPVAL  R14 U11      ; R14 := U11
509 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
510 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
511 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
512 [-]: GETUPVAL  R8 U11       ; R8 := U11
513 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
514 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
515 [-]: LOADK     R11 K121     ; R11 := "AbilityChargeProgress"
516 [-]: NEWTABLE  R12 2 0      ; R12 := {}
517 [-]: GETUPVAL  R13 U11      ; R13 := U11
518 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
519 [-]: GETUPVAL  R14 U11      ; R14 := U11
520 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
521 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
522 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
523 [-]: GETUPVAL  R8 U11       ; R8 := U11
524 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
525 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
526 [-]: LOADK     R11 K122     ; R11 := "DamageIndicator"
527 [-]: NEWTABLE  R12 2 0      ; R12 := {}
528 [-]: GETUPVAL  R13 U11      ; R13 := U11
529 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
530 [-]: GETUPVAL  R14 U11      ; R14 := U11
531 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
532 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
533 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
534 [-]: GETUPVAL  R8 U11       ; R8 := U11
535 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
536 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
537 [-]: LOADK     R11 K123     ; R11 := "Prompt"
538 [-]: NEWTABLE  R12 2 0      ; R12 := {}
539 [-]: GETUPVAL  R13 U11      ; R13 := U11
540 [-]: GETTABLE  R13 R13 K99  ; R13 := R13["ANCHOR_V_BOTTOM"]
541 [-]: GETUPVAL  R14 U11      ; R14 := U11
542 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
543 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
544 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
545 [-]: GETUPVAL  R8 U11       ; R8 := U11
546 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
547 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
548 [-]: LOADK     R11 K124     ; R11 := "BorderBox"
549 [-]: NEWTABLE  R12 2 0      ; R12 := {}
550 [-]: GETUPVAL  R13 U11      ; R13 := U11
551 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
552 [-]: GETUPVAL  R14 U11      ; R14 := U11
553 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
554 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
555 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
556 [-]: GETUPVAL  R8 U11       ; R8 := U11
557 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
558 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
559 [-]: LOADK     R11 K125     ; R11 := "GenericMessage"
560 [-]: NEWTABLE  R12 2 0      ; R12 := {}
561 [-]: GETUPVAL  R13 U11      ; R13 := U11
562 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
563 [-]: GETUPVAL  R14 U11      ; R14 := U11
564 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
565 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
566 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
567 [-]: GETUPVAL  R8 U11       ; R8 := U11
568 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
569 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
570 [-]: LOADK     R11 K126     ; R11 := "ImpactMessage"
571 [-]: NEWTABLE  R12 2 0      ; R12 := {}
572 [-]: GETUPVAL  R13 U11      ; R13 := U11
573 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
574 [-]: GETUPVAL  R14 U11      ; R14 := U11
575 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
576 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
577 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
578 [-]: GETUPVAL  R8 U11       ; R8 := U11
579 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
580 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
581 [-]: LOADK     R11 K127     ; R11 := "GameplayMessage"
582 [-]: NEWTABLE  R12 2 0      ; R12 := {}
583 [-]: GETUPVAL  R13 U11      ; R13 := U11
584 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
585 [-]: GETUPVAL  R14 U11      ; R14 := U11
586 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
587 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
588 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
589 [-]: GETUPVAL  R8 U11       ; R8 := U11
590 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
591 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
592 [-]: LOADK     R11 K128     ; R11 := "MiniGameScore"
593 [-]: NEWTABLE  R12 2 0      ; R12 := {}
594 [-]: GETUPVAL  R13 U11      ; R13 := U11
595 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
596 [-]: GETUPVAL  R14 U11      ; R14 := U11
597 [-]: GETTABLE  R14 R14 K109 ; R14 := R14["ANCHOR_H_LEFT"]
598 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
599 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
600 [-]: GETUPVAL  R8 U11       ; R8 := U11
601 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
602 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
603 [-]: LOADK     R11 K129     ; R11 := "StandingGain"
604 [-]: NEWTABLE  R12 2 0      ; R12 := {}
605 [-]: GETUPVAL  R13 U11      ; R13 := U11
606 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
607 [-]: GETUPVAL  R14 U11      ; R14 := U11
608 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
609 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
610 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
611 [-]: GETUPVAL  R8 U11       ; R8 := U11
612 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
613 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
614 [-]: LOADK     R11 K130     ; R11 := "PvPHeldFlagTimer"
615 [-]: NEWTABLE  R12 2 0      ; R12 := {}
616 [-]: GETUPVAL  R13 U11      ; R13 := U11
617 [-]: GETTABLE  R13 R13 K101 ; R13 := R13["ANCHOR_V_CENTRE"]
618 [-]: GETUPVAL  R14 U11      ; R14 := U11
619 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
620 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
621 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
622 [-]: GETUPVAL  R8 U11       ; R8 := U11
623 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
624 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
625 [-]: LOADK     R11 K131     ; R11 := "RevivePanel"
626 [-]: NEWTABLE  R12 2 0      ; R12 := {}
627 [-]: GETUPVAL  R13 U11      ; R13 := U11
628 [-]: GETTABLE  R13 R13 K99  ; R13 := R13["ANCHOR_V_BOTTOM"]
629 [-]: GETUPVAL  R14 U11      ; R14 := U11
630 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
631 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
632 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
633 [-]: GETUPVAL  R8 U11       ; R8 := U11
634 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
635 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
636 [-]: LOADK     R11 K132     ; R11 := "Spinner"
637 [-]: NEWTABLE  R12 2 0      ; R12 := {}
638 [-]: GETUPVAL  R13 U11      ; R13 := U11
639 [-]: GETTABLE  R13 R13 K109 ; R13 := R13["ANCHOR_H_LEFT"]
640 [-]: GETUPVAL  R14 U11      ; R14 := U11
641 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["ANCHOR_V_BOTTOM"]
642 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
643 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
644 [-]: GETUPVAL  R8 U11       ; R8 := U11
645 [-]: SELF      R8 R8 K97    ; R9 := R8; R8 := R8["0x99AA2516"]
646 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
647 [-]: LOADK     R11 K133     ; R11 := "TargetStatus"
648 [-]: NEWTABLE  R12 2 0      ; R12 := {}
649 [-]: GETUPVAL  R13 U11      ; R13 := U11
650 [-]: GETTABLE  R13 R13 K104 ; R13 := R13["ANCHOR_V_TOP"]
651 [-]: GETUPVAL  R14 U11      ; R14 := U11
652 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["ANCHOR_H_CENTRE"]
653 [-]: SETLIST   R12 2 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
654 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
655 [-]: GETGLOBAL R8 K134      ; R8 := 0x329BDC44
656 [-]: LOADK     R9 K135      ; R9 := "Lotus.Interface.Components.ThemedSpinner"
657 [-]: CALL      R8 2 2       ; R8 := R8(R9)
658 [-]: GETTABLE  R9 R8 K94    ; R9 := R8["0x46FF1A3C"]
659 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
660 [-]: LOADK     R11 K132     ; R11 := "Spinner"
661 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
662 [-]: MOVE      R9 R14       ; R9 := R14
663 [-]: GETUPVAL  R9 U14       ; R9 := U14
664 [-]: SETTABLE  R9 K136 K8   ; R9["mApplyThemes"] := "0x1"
665 [-]: GETGLOBAL R9 K15       ; R9 := 0x400E7765
666 [-]: GETUPVAL  R10 U3       ; R10 := U3
667 [-]: CALL      R9 2 2       ; R9 := R9(R10)
668 [-]: TEST      R9 1         ; if R9 then PC := 702
669 [-]: JMP       702          ; PC := 702
670 [-]: GETUPVAL  R9 U3        ; R9 := U3
671 [-]: SELF      R9 R9 K58    ; R10 := R9; R9 := R9["0x8B598ED4"]
672 [-]: GETGLOBAL R11 K137     ; R11 := gLotusBasePvpGameRulesType
673 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
674 [-]: TEST      R9 1         ; if R9 then PC := 702
675 [-]: JMP       702          ; PC := 702
676 [-]: LOADK     R9 K130      ; R9 := "PvPHeldFlagTimer"
677 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
678 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10["0x1C19D966"]
679 [-]: MOVE      R12 R9       ; R12 := R9
680 [-]: LOADK     R13 K138     ; R13 := "_xscale"
681 [-]: LOADK     R14 K139     ; R14 := 50
682 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
683 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
684 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10["0x1C19D966"]
685 [-]: MOVE      R12 R9       ; R12 := R9
686 [-]: LOADK     R13 K140     ; R13 := "_yscale"
687 [-]: LOADK     R14 K139     ; R14 := 50
688 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
689 [-]: GETUPVAL  R10 U11      ; R10 := U11
690 [-]: SELF      R10 R10 K141 ; R11 := R10; R10 := R10["0x3F76FEED"]
691 [-]: MOVE      R12 R9       ; R12 := R9
692 [-]: LOADK     R13 K142     ; R13 := 612
693 [-]: LOADK     R14 K143     ; R14 := 562
694 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
695 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
696 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10["0x1C19D966"]
697 [-]: MOVE      R12 R9       ; R12 := R9
698 [-]: LOADK     R13 K144     ; R13 := "textColor"
699 [-]: GETGLOBAL R14 K76      ; R14 := _G
700 [-]: GETTABLE  R14 R14 K145 ; R14 := R14["UIColor_White"]
701 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
702 [-]: GETUPVAL  R10 U11      ; R10 := U11
703 [-]: SELF      R10 R10 K146 ; R11 := R10; R10 := R10["0x8C7099E9"]
704 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
705 [-]: SELF      R12 R12 K147 ; R13 := R12; R12 := R12["0xF595D5E1"]
706 [-]: CALL      R12 2 2      ; R12 := R12(R13)
707 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
708 [-]: SELF      R13 R13 K148 ; R14 := R13; R13 := R13["0xEE069D65"]
709 [-]: CALL      R13 2 2      ; R13 := R13(R14)
710 [-]: MOVE      R14 R1       ; R14 := R1
711 [-]: GETUPVAL  R15 U13      ; R15 := U13
712 [-]: GETTABLE  R15 R15 K96  ; R15 := R15["HudScalePadding"]
713 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
714 [-]: GETUPVAL  R10 U15      ; R10 := U15
715 [-]: CALL      R10 1 1      ; R10()
716 [-]: GETGLOBAL R10 K149     ; R10 := 0xF595ADDE
717 [-]: GETGLOBAL R11 K0       ; R11 := mMovie
718 [-]: SELF      R11 R11 K150 ; R12 := R11; R11 := R11["0x6B7B470B"]
719 [-]: LOADK     R13 K126     ; R13 := "ImpactMessage"
720 [-]: LOADK     R14 K91      ; R14 := "_y"
721 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
722 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
723 [-]: MOVE      R10 R16      ; R10 := R16
724 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
725 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10["0x1C19D966"]
726 [-]: LOADK     R12 K119     ; R12 := "SyndicatePower"
727 [-]: LOADK     R13 K13      ; R13 := "_visible"
728 [-]: MOVE      R14 R0       ; R14 := R0
729 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
730 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
731 [-]: SELF      R10 R10 K1   ; R11 := R10; R10 := R10["0x1C19D966"]
732 [-]: LOADK     R12 K115     ; R12 := "Stamina"
733 [-]: LOADK     R13 K13      ; R13 := "_visible"
734 [-]: MOVE      R14 R0       ; R14 := R0
735 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
736 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
737 [-]: SELF      R10 R10 K151 ; R11 := R10; R10 := R10["0x445651FB"]
738 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
739 [-]: SELF      R12 R12 K152 ; R13 := R12; R12 := R12["0xA7FE5515"]
740 [-]: LOADK     R14 K153     ; R14 := "TargetHit1"
741 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
742 [-]: LOADK     R13 K13      ; R13 := "_visible"
743 [-]: MOVE      R14 R0       ; R14 := R0
744 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
745 [-]: GETGLOBAL R10 K15      ; R10 := 0x400E7765
746 [-]: GETGLOBAL R11 K154     ; R11 := contextActionMovie
747 [-]: CALL      R10 2 2      ; R10 := R10(R11)
748 [-]: TEST      R10 1        ; if R10 then PC := 770
749 [-]: JMP       770          ; PC := 770
750 [-]: GETGLOBAL R10 K17      ; R10 := gFlashMgr
751 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10["0x1089D053"]
752 [-]: LOADK     R12 K155     ; R12 := "HUD.ShowInWorldContextActions"
753 [-]: MOVE      R13 R1       ; R13 := R1
754 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
755 [-]: TEST      R10 0        ; if not R10 then PC := 770
756 [-]: JMP       770          ; PC := 770
757 [-]: GETGLOBAL R10 K17      ; R10 := gFlashMgr
758 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10["0x616DD092"]
759 [-]: GETGLOBAL R12 K154     ; R12 := contextActionMovie
760 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
761 [-]: GETGLOBAL R11 K15      ; R11 := 0x400E7765
762 [-]: MOVE      R12 R10      ; R12 := R10
763 [-]: CALL      R11 2 2      ; R11 := R11(R12)
764 [-]: TEST      R11 0        ; if not R11 then PC := 770
765 [-]: JMP       770          ; PC := 770
766 [-]: GETGLOBAL R11 K0       ; R11 := mMovie
767 [-]: SELF      R11 R11 K22  ; R12 := R11; R11 := R11["0x5FF274BB"]
768 [-]: GETGLOBAL R13 K154     ; R13 := contextActionMovie
769 [-]: CALL      R11 3 1      ; R11(R12,R13)
770 [-]: GETUPVAL  R11 U17      ; R11 := U17
771 [-]: CALL      R11 1 1      ; R11()
772 [-]: GETUPVAL  R11 U18      ; R11 := U18
773 [-]: CALL      R11 1 1      ; R11()
774 [-]: LOADK     R11 K6       ; R11 := 1
775 [-]: LOADK     R12 K156     ; R12 := 4
776 [-]: LOADK     R13 K6       ; R13 := 1
777 [-]: FORPREP   R11 787      ; R11 -= R13; PC := 787
778 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
779 [-]: SELF      R15 R15 K47  ; R16 := R15; R15 := R15["0x880196A7"]
780 [-]: LOADK     R17 K157     ; R17 := "AbilityPanel.Ability"
781 [-]: MOVE      R18 R14      ; R18 := R14
782 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
783 [-]: LOADK     R18 K158     ; R18 := "ActiveAnim"
784 [-]: LOADK     R19 K13      ; R19 := "_visible"
785 [-]: MOVE      R20 R0       ; R20 := R0
786 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
787 [-]: FORLOOP   R11 778      ; R11 += R13; if R11 <= R12 then begin PC := 778; R14 := R11 end
788 [-]: GETUPVAL  R15 U20      ; R15 := U20
789 [-]: GETTABLE  R15 R15 K159 ; R15 := R15["0x7BEB1B64"]
790 [-]: LOADNIL   R16 R16      ; R16 := nil
791 [-]: CLOSURE   R17 0        ; R17 := closure(Function #132.1)
792 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
793 [-]: MOVE      R15 R19      ; R15 := R19
794 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
795 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
796 [-]: LOADK     R17 K112     ; R17 := "Reticle"
797 [-]: LOADK     R18 K3       ; R18 := "_alpha"
798 [-]: LOADK     R19 K4       ; R19 := 0
799 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
800 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
801 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
802 [-]: LOADK     R17 K113     ; R17 := "ReticleCustom"
803 [-]: LOADK     R18 K3       ; R18 := "_alpha"
804 [-]: LOADK     R19 K4       ; R19 := 0
805 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
806 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
807 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
808 [-]: LOADK     R17 K118     ; R17 := "SlamIndicator"
809 [-]: LOADK     R18 K3       ; R18 := "_alpha"
810 [-]: LOADK     R19 K4       ; R19 := 0
811 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
812 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
813 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
814 [-]: LOADK     R17 K120     ; R17 := "reloadTimer"
815 [-]: LOADK     R18 K3       ; R18 := "_alpha"
816 [-]: LOADK     R19 K4       ; R19 := 0
817 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
818 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
819 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
820 [-]: LOADK     R17 K121     ; R17 := "AbilityChargeProgress"
821 [-]: LOADK     R18 K3       ; R18 := "_alpha"
822 [-]: LOADK     R19 K4       ; R19 := 0
823 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
824 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
825 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
826 [-]: LOADK     R17 K122     ; R17 := "DamageIndicator"
827 [-]: LOADK     R18 K13      ; R18 := "_visible"
828 [-]: MOVE      R19 R0       ; R19 := R0
829 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
830 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
831 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
832 [-]: LOADK     R17 K160     ; R17 := "MiniMapContainer.StatusEffect"
833 [-]: LOADK     R18 K3       ; R18 := "_alpha"
834 [-]: LOADK     R19 K4       ; R19 := 0
835 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
836 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
837 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
838 [-]: LOADK     R17 K161     ; R17 := "MiniMapContainer.FlareLoader"
839 [-]: LOADK     R18 K13      ; R18 := "_visible"
840 [-]: MOVE      R19 R0       ; R19 := R0
841 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
842 [-]: GETGLOBAL R15 K15      ; R15 := 0x400E7765
843 [-]: GETGLOBAL R16 K162     ; R16 := reviveMaterial
844 [-]: CALL      R15 2 2      ; R15 := R15(R16)
845 [-]: TEST      R15 1        ; if R15 then PC := 857
846 [-]: JMP       857          ; PC := 857
847 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
848 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
849 [-]: LOADK     R17 K108     ; R17 := "MiniMapContainer"
850 [-]: GETGLOBAL R18 K162     ; R18 := reviveMaterial
851 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
852 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
853 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
854 [-]: LOADK     R17 K111     ; R17 := "HudTracker"
855 [-]: GETGLOBAL R18 K162     ; R18 := reviveMaterial
856 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
857 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
858 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
859 [-]: LOADK     R17 K164     ; R17 := "MiniMapContainer.MiniMap"
860 [-]: LOADK     R18 K3       ; R18 := "_alpha"
861 [-]: LOADK     R19 K4       ; R19 := 0
862 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
863 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
864 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
865 [-]: LOADK     R17 K110     ; R17 := "MiniMapOverlayMsg"
866 [-]: LOADK     R18 K3       ; R18 := "_alpha"
867 [-]: LOADK     R19 K4       ; R19 := 0
868 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
869 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
870 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
871 [-]: LOADK     R17 K165     ; R17 := "MiniMapOverlayMsg.Bg"
872 [-]: GETGLOBAL R18 K76      ; R18 := _G
873 [-]: GETTABLE  R18 R18 K166 ; R18 := R18["UIMaterial_RectangleNoDepth"]
874 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
875 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
876 [-]: SELF      R15 R15 K167 ; R16 := R15; R15 := R15["0x302AAB2F"]
877 [-]: LOADK     R17 K165     ; R17 := "MiniMapOverlayMsg.Bg"
878 [-]: LOADK     R18 K168     ; R18 := "RectInnerColor"
879 [-]: GETGLOBAL R19 K76      ; R19 := _G
880 [-]: GETTABLE  R19 R19 K169 ; R19 := R19["UIColorObject_Black"]
881 [-]: GETTABLE  R19 R19 K170 ; R19 := R19["r"]
882 [-]: GETGLOBAL R20 K76      ; R20 := _G
883 [-]: GETTABLE  R20 R20 K169 ; R20 := R20["UIColorObject_Black"]
884 [-]: GETTABLE  R20 R20 K171 ; R20 := R20["g"]
885 [-]: GETGLOBAL R21 K76      ; R21 := _G
886 [-]: GETTABLE  R21 R21 K169 ; R21 := R21["UIColorObject_Black"]
887 [-]: GETTABLE  R21 R21 K172 ; R21 := R21["b"]
888 [-]: LOADK     R22 K173     ; R22 := 0.40000000596046
889 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
890 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
891 [-]: SELF      R15 R15 K167 ; R16 := R15; R15 := R15["0x302AAB2F"]
892 [-]: LOADK     R17 K165     ; R17 := "MiniMapOverlayMsg.Bg"
893 [-]: LOADK     R18 K174     ; R18 := "RectEdgeColor"
894 [-]: GETGLOBAL R19 K76      ; R19 := _G
895 [-]: GETTABLE  R19 R19 K169 ; R19 := R19["UIColorObject_Black"]
896 [-]: GETTABLE  R19 R19 K170 ; R19 := R19["r"]
897 [-]: GETGLOBAL R20 K76      ; R20 := _G
898 [-]: GETTABLE  R20 R20 K169 ; R20 := R20["UIColorObject_Black"]
899 [-]: GETTABLE  R20 R20 K171 ; R20 := R20["g"]
900 [-]: GETGLOBAL R21 K76      ; R21 := _G
901 [-]: GETTABLE  R21 R21 K169 ; R21 := R21["UIColorObject_Black"]
902 [-]: GETTABLE  R21 R21 K172 ; R21 := R21["b"]
903 [-]: LOADK     R22 K173     ; R22 := 0.40000000596046
904 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
905 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
906 [-]: SELF      R15 R15 K175 ; R16 := R15; R15 := R15["0x17028E8F"]
907 [-]: LOADK     R17 K176     ; R17 := "MiniMapOverlayMsg.Label.text"
908 [-]: LOADK     R18 K177     ; R18 := "/Lotus/Language/SystemMessages/MapJammed"
909 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
910 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
911 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
912 [-]: LOADK     R17 K178     ; R17 := "MiniMapContainer.MiniMapMarkers.Marker1"
913 [-]: LOADK     R18 K13      ; R18 := "_visible"
914 [-]: MOVE      R19 R0       ; R19 := R0
915 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
916 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
917 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
918 [-]: LOADK     R17 K179     ; R17 := "MiniMapContainer.Map"
919 [-]: LOADK     R18 K13      ; R18 := "_visible"
920 [-]: MOVE      R19 R0       ; R19 := R0
921 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
922 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
923 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
924 [-]: LOADK     R17 K117     ; R17 := "Notification"
925 [-]: LOADK     R18 K3       ; R18 := "_alpha"
926 [-]: LOADK     R19 K4       ; R19 := 0
927 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
928 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
929 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
930 [-]: LOADK     R17 K180     ; R17 := "WeaponFrame.Rage"
931 [-]: LOADK     R18 K13      ; R18 := "_visible"
932 [-]: MOVE      R19 R0       ; R19 := R0
933 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
934 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
935 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
936 [-]: LOADK     R17 K181     ; R17 := "WeaponFrame.Rage.ComboLabelA"
937 [-]: LOADK     R18 K13      ; R18 := "_visible"
938 [-]: MOVE      R19 R0       ; R19 := R0
939 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
940 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
941 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
942 [-]: LOADK     R17 K182     ; R17 := "WeaponFrame.Rage.ComboLabelB"
943 [-]: LOADK     R18 K13      ; R18 := "_visible"
944 [-]: MOVE      R19 R0       ; R19 := R0
945 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
946 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
947 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
948 [-]: LOADK     R17 K183     ; R17 := "WeaponFrame.Rage.ComboLabelMiddle"
949 [-]: LOADK     R18 K13      ; R18 := "_visible"
950 [-]: MOVE      R19 R0       ; R19 := R0
951 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
952 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
953 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
954 [-]: LOADK     R17 K183     ; R17 := "WeaponFrame.Rage.ComboLabelMiddle"
955 [-]: GETGLOBAL R18 K76      ; R18 := _G
956 [-]: GETTABLE  R18 R18 K184 ; R18 := R18["UIMaterial_SmoothEdgeNoDepthTest"]
957 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
958 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
959 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
960 [-]: LOADK     R17 K185     ; R17 := "WeaponFrame.ComboLabelA"
961 [-]: LOADK     R18 K13      ; R18 := "_visible"
962 [-]: MOVE      R19 R0       ; R19 := R0
963 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
964 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
965 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
966 [-]: LOADK     R17 K186     ; R17 := "WeaponFrame.ComboLabelB"
967 [-]: LOADK     R18 K13      ; R18 := "_visible"
968 [-]: MOVE      R19 R0       ; R19 := R0
969 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
970 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
971 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
972 [-]: LOADK     R17 K187     ; R17 := "WeaponFrame.ComboLabelMiddle"
973 [-]: LOADK     R18 K13      ; R18 := "_visible"
974 [-]: MOVE      R19 R0       ; R19 := R0
975 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
976 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
977 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
978 [-]: LOADK     R17 K188     ; R17 := "WeaponFrame.ComboLabelTimer"
979 [-]: LOADK     R18 K13      ; R18 := "_visible"
980 [-]: MOVE      R19 R0       ; R19 := R0
981 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
982 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
983 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
984 [-]: LOADK     R17 K189     ; R17 := "WeaponFrame.ComboTitle"
985 [-]: LOADK     R18 K13      ; R18 := "_visible"
986 [-]: MOVE      R19 R0       ; R19 := R0
987 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
988 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
989 [-]: SELF      R15 R15 K175 ; R16 := R15; R15 := R15["0x17028E8F"]
990 [-]: LOADK     R17 K190     ; R17 := "WeaponFrame.ComboTitle.text"
991 [-]: LOADK     R18 K191     ; R18 := "/Lotus/Language/Menu/Combo"
992 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
993 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
994 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
995 [-]: LOADK     R17 K192     ; R17 := "WeaponFrame.ComboLabelTimer.Fill"
996 [-]: LOADK     R18 K3       ; R18 := "_alpha"
997 [-]: LOADK     R19 K139     ; R19 := 50
998 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
999 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1000 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1001 [-]: LOADK     R17 K193     ; R17 := "WeaponFrame.LabelTimer.Fill"
1002 [-]: LOADK     R18 K3       ; R18 := "_alpha"
1003 [-]: LOADK     R19 K139     ; R19 := 50
1004 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1005 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1006 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1007 [-]: LOADK     R17 K194     ; R17 := "WeaponFrame.ComboLabelTimer.Bg"
1008 [-]: LOADK     R18 K3       ; R18 := "_alpha"
1009 [-]: LOADK     R19 K195     ; R19 := 30
1010 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1011 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1012 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1013 [-]: LOADK     R17 K196     ; R17 := "WeaponFrame.LabelTimer.Bg"
1014 [-]: LOADK     R18 K3       ; R18 := "_alpha"
1015 [-]: LOADK     R19 K195     ; R19 := 30
1016 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1017 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1018 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1019 [-]: LOADK     R17 K194     ; R17 := "WeaponFrame.ComboLabelTimer.Bg"
1020 [-]: LOADK     R18 K78      ; R18 := "_color"
1021 [-]: LOADK     R19 K4       ; R19 := 0
1022 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1023 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1024 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1025 [-]: LOADK     R17 K196     ; R17 := "WeaponFrame.LabelTimer.Bg"
1026 [-]: LOADK     R18 K78      ; R18 := "_color"
1027 [-]: LOADK     R19 K4       ; R19 := 0
1028 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1029 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1030 [-]: SELF      R15 R15 K197 ; R16 := R15; R15 := R15["0xD6A79FE9"]
1031 [-]: LOADK     R17 K198     ; R17 := "WeaponFrame.Name"
1032 [-]: LOADK     R18 K199     ; R18 := "text"
1033 [-]: LOADK     R19 K200     ; R19 := ""
1034 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1035 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1036 [-]: SELF      R15 R15 K175 ; R16 := R15; R15 := R15["0x17028E8F"]
1037 [-]: LOADK     R17 K201     ; R17 := "Notification.Message.text"
1038 [-]: LOADK     R18 K202     ; R18 := "/Lotus/Language/Menu/LevelUp"
1039 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1040 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1041 [-]: SELF      R15 R15 K203 ; R16 := R15; R15 := R15["0x26581636"]
1042 [-]: LOADK     R17 K116     ; R17 := "SuccessfulHitNotification"
1043 [-]: GETGLOBAL R18 K204     ; R18 := hitNotificationIcon
1044 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1045 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1046 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1047 [-]: LOADK     R17 K116     ; R17 := "SuccessfulHitNotification"
1048 [-]: LOADK     R18 K3       ; R18 := "_alpha"
1049 [-]: LOADK     R19 K4       ; R19 := 0
1050 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1051 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1052 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1053 [-]: LOADK     R17 K205     ; R17 := "reloadTimer.Fill"
1054 [-]: GETGLOBAL R18 K206     ; R18 := radialProgressMaterial
1055 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1056 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1057 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1058 [-]: LOADK     R17 K207     ; R17 := "AbilityChargeProgress.Progress"
1059 [-]: GETGLOBAL R18 K206     ; R18 := radialProgressMaterial
1060 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1061 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1062 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1063 [-]: LOADK     R17 K208     ; R17 := "RevivePanel.HoldProgress.Backer"
1064 [-]: GETGLOBAL R18 K209     ; R18 := diamondMaterial
1065 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1066 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1067 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1068 [-]: LOADK     R17 K210     ; R17 := "RevivePanel.HoldProgress.Fill"
1069 [-]: GETGLOBAL R18 K211     ; R18 := diamondProgressMaterial
1070 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1071 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1072 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1073 [-]: LOADK     R17 K212     ; R17 := "RevivePanel.HoldProgress.IconContainer.Icon"
1074 [-]: GETGLOBAL R18 K213     ; R18 := reviveShineMaterial
1075 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1076 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1077 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1078 [-]: LOADK     R17 K214     ; R17 := "RevivePanel.HoldProgress.Diamond"
1079 [-]: GETGLOBAL R18 K76      ; R18 := _G
1080 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["UIMaterial_Plain"]
1081 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1082 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1083 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1084 [-]: LOADK     R17 K215     ; R17 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
1085 [-]: GETGLOBAL R18 K76      ; R18 := _G
1086 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["UIMaterial_Plain"]
1087 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1088 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1089 [-]: SELF      R15 R15 K163 ; R16 := R15; R15 := R15["0x7E1F26D7"]
1090 [-]: LOADK     R17 K216     ; R17 := "RevivePanel.HoldProgress.IconContainer.Blur"
1091 [-]: GETGLOBAL R18 K76      ; R18 := _G
1092 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["UIMaterial_Plain"]
1093 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
1094 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1095 [-]: SELF      R15 R15 K167 ; R16 := R15; R15 := R15["0x302AAB2F"]
1096 [-]: LOADK     R17 K210     ; R17 := "RevivePanel.HoldProgress.Fill"
1097 [-]: LOADK     R18 K217     ; R18 := "AlphaTestThreshold"
1098 [-]: LOADK     R19 K4       ; R19 := 0
1099 [-]: LOADK     R20 K4       ; R20 := 0
1100 [-]: LOADK     R21 K4       ; R21 := 0
1101 [-]: LOADK     R22 K4       ; R22 := 0
1102 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
1103 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1104 [-]: SELF      R15 R15 K167 ; R16 := R15; R15 := R15["0x302AAB2F"]
1105 [-]: LOADK     R17 K208     ; R17 := "RevivePanel.HoldProgress.Backer"
1106 [-]: LOADK     R18 K218     ; R18 := "CircleSettings"
1107 [-]: LOADK     R19 K219     ; R19 := 0.48500001430511
1108 [-]: LOADK     R20 K220     ; R20 := 0.20000000298023
1109 [-]: LOADK     R21 K221     ; R21 := 0.64999997615814
1110 [-]: LOADK     R22 K4       ; R22 := 0
1111 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
1112 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1113 [-]: SELF      R15 R15 K167 ; R16 := R15; R15 := R15["0x302AAB2F"]
1114 [-]: LOADK     R17 K210     ; R17 := "RevivePanel.HoldProgress.Fill"
1115 [-]: LOADK     R18 K218     ; R18 := "CircleSettings"
1116 [-]: LOADK     R19 K219     ; R19 := 0.48500001430511
1117 [-]: LOADK     R20 K220     ; R20 := 0.20000000298023
1118 [-]: LOADK     R21 K221     ; R21 := 0.64999997615814
1119 [-]: LOADK     R22 K4       ; R22 := 0
1120 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
1121 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1122 [-]: SELF      R15 R15 K1   ; R16 := R15; R15 := R15["0x1C19D966"]
1123 [-]: LOADK     R17 K131     ; R17 := "RevivePanel"
1124 [-]: LOADK     R18 K3       ; R18 := "_alpha"
1125 [-]: LOADK     R19 K4       ; R19 := 0
1126 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
1127 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
1128 [-]: SELF      R15 R15 K24  ; R16 := R15; R15 := R15["0x7C1F5A97"]
1129 [-]: CALL      R15 2 2      ; R15 := R15(R16)
1130 [-]: GETGLOBAL R16 K15      ; R16 := 0x400E7765
1131 [-]: MOVE      R17 R15      ; R17 := R15
1132 [-]: CALL      R16 2 2      ; R16 := R16(R17)
1133 [-]: TEST      R16 1        ; if R16 then PC := 1171
1134 [-]: JMP       1171         ; PC := 1171
1135 [-]: SELF      R16 R15 K222 ; R17 := R15; R16 := R15["0x8109F422"]
1136 [-]: CALL      R16 2 2      ; R16 := R16(R17)
1137 [-]: MOVE      R16 R21      ; R16 := R21
1138 [-]: GETGLOBAL R16 K15      ; R16 := 0x400E7765
1139 [-]: GETUPVAL  R17 U21      ; R17 := U21
1140 [-]: CALL      R16 2 2      ; R16 := R16(R17)
1141 [-]: TEST      R16 1        ; if R16 then PC := 1171
1142 [-]: JMP       1171         ; PC := 1171
1143 [-]: GETUPVAL  R16 U21      ; R16 := U21
1144 [-]: SELF      R16 R16 K223 ; R17 := R16; R16 := R16["0xB6E36143"]
1145 [-]: MOVE      R18 R15      ; R18 := R15
1146 [-]: CALL      R16 3 1      ; R16(R17,R18)
1147 [-]: GETUPVAL  R16 U21      ; R16 := U21
1148 [-]: SELF      R16 R16 K224 ; R17 := R16; R16 := R16["0x20C20AB5"]
1149 [-]: CALL      R16 2 1      ; R16(R17)
1150 [-]: GETUPVAL  R16 U21      ; R16 := U21
1151 [-]: SELF      R16 R16 K225 ; R17 := R16; R16 := R16["0xFB8B923D"]
1152 [-]: GETUPVAL  R18 U11      ; R18 := U11
1153 [-]: SELF      R18 R18 K226 ; R19 := R18; R18 := R18["0xE73374BC"]
1154 [-]: LOADK     R20 K117     ; R20 := "Notification"
1155 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
1156 [-]: GETTABLE  R18 R18 K227 ; R18 := R18["y"]
1157 [-]: CALL      R16 3 1      ; R16(R17,R18)
1158 [-]: GETUPVAL  R16 U1       ; R16 := U1
1159 [-]: GETGLOBAL R17 K76      ; R17 := _G
1160 [-]: GETTABLE  R17 R17 K228 ; R17 := R17["StalkerMode"]
1161 [-]: EQ        0 R17 K229   ; if R17 ~= nil then PC := 1164
1162 [-]: JMP       1164         ; PC := 1164
1163 [-]: MOVE      R17 R0       ; R17 := R0
1164 [-]: MOVE      R17 R1       ; R17 := R1
1165 [-]: SETTABLE  R16 K228 R17 ; R16["StalkerMode"] := R17
1166 [-]: GETUPVAL  R16 U21      ; R16 := U21
1167 [-]: SELF      R16 R16 K230 ; R17 := R16; R16 := R16["0x60C27"]
1168 [-]: GETUPVAL  R18 U1       ; R18 := U1
1169 [-]: GETTABLE  R18 R18 K228 ; R18 := R18["StalkerMode"]
1170 [-]: CALL      R16 3 1      ; R16(R17,R18)
1171 [-]: GETGLOBAL R16 K231     ; R16 := _T
1172 [-]: GETGLOBAL R17 K233     ; R17 := 0x221C9700
1173 [-]: CALL      R17 1 2      ; R17 := R17()
1174 [-]: SETTABLE  R16 K232 R17 ; R16["velocityCoords"] := R17
1175 [-]: CLOSURE   R16 1        ; R16 := closure(Function #132.2)
1176 [-]: GETUPVAL  R0 U11       ; R0 := U11
1177 [-]: GETUPVAL  R0 U22       ; R0 := U22
1178 [-]: GETUPVAL  R0 U21       ; R0 := U21
1179 [-]: GETUPVAL  R0 U23       ; R0 := U23
1180 [-]: GETUPVAL  R0 U13       ; R0 := U13
1181 [-]: GETUPVAL  R0 U24       ; R0 := U24
1182 [-]: GETUPVAL  R0 U25       ; R0 := U25
1183 [-]: CLOSURE   R17 2        ; R17 := closure(Function #132.3)
1184 [-]: GETUPVAL  R0 U11       ; R0 := U11
1185 [-]: GETUPVAL  R0 U21       ; R0 := U21
1186 [-]: CLOSURE   R18 3        ; R18 := closure(Function #132.4)
1187 [-]: GETUPVAL  R0 U21       ; R0 := U21
1188 [-]: GETUPVAL  R0 U22       ; R0 := U22
1189 [-]: GETGLOBAL R19 K231     ; R19 := _T
1190 [-]: SETTABLE  R19 K234 R16 ; R19["HUD_AddMotionClip"] := R16
1191 [-]: GETGLOBAL R19 K231     ; R19 := _T
1192 [-]: SETTABLE  R19 K235 R17 ; R19["HUD_UpdateMotionClip"] := R17
1193 [-]: GETGLOBAL R19 K231     ; R19 := _T
1194 [-]: SETTABLE  R19 K236 R18 ; R19["HUD_RemoveMotionClip"] := R18
1195 [-]: NEWTABLE  R19 3 0      ; R19 := {}
1196 [-]: LOADK     R20 K103     ; R20 := "HealthAndShield"
1197 [-]: LOADK     R21 K105     ; R21 := "WeaponFrame"
1198 [-]: LOADK     R22 K107     ; R22 := "AbilityPanel"
1199 [-]: SETLIST   R19 3 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 3
1200 [-]: GETGLOBAL R20 K46      ; R20 := 0x63B09107
1201 [-]: MOVE      R21 R19      ; R21 := R19
1202 [-]: CALL      R20 2 4      ; R20,R21,R22 := R20(R21)
1203 [-]: JMP       1214         ; PC := 1214
1204 [-]: GETGLOBAL R25 K0       ; R25 := mMovie
1205 [-]: SELF      R25 R25 K1   ; R26 := R25; R25 := R25["0x1C19D966"]
1206 [-]: MOVE      R27 R24      ; R27 := R24
1207 [-]: LOADK     R28 K237     ; R28 := "_heading"
1208 [-]: MOVE      R29 R0       ; R29 := R0
1209 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
1210 [-]: MOVE      R25 R16      ; R25 := R16
1211 [-]: GETGLOBAL R26 K0       ; R26 := mMovie
1212 [-]: MOVE      R27 R24      ; R27 := R24
1213 [-]: CALL      R25 3 1      ; R25(R26,R27)
1214 [-]: TFORLOOP  R20 2        ; R23,R24 :=  R20(R21,R22); if R23 ~= nil then begin PC = 1204; R22 := R23 end
1215 [-]: JMP       1204         ; PC := 1204
1216 [-]: NEWTABLE  R25 3 0      ; R25 := {}
1217 [-]: LOADK     R26 K108     ; R26 := "MiniMapContainer"
1218 [-]: LOADK     R27 K111     ; R27 := "HudTracker"
1219 [-]: LOADK     R28 K110     ; R28 := "MiniMapOverlayMsg"
1220 [-]: SETLIST   R25 3 1      ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 3
1221 [-]: GETGLOBAL R26 K46      ; R26 := 0x63B09107
1222 [-]: MOVE      R27 R25      ; R27 := R25
1223 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
1224 [-]: JMP       1235         ; PC := 1235
1225 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
1226 [-]: SELF      R31 R31 K1   ; R32 := R31; R31 := R31["0x1C19D966"]
1227 [-]: MOVE      R33 R30      ; R33 := R30
1228 [-]: LOADK     R34 K237     ; R34 := "_heading"
1229 [-]: UNM       R35 R0       ; R35 := - R0
1230 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1231 [-]: MOVE      R31 R16      ; R31 := R16
1232 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
1233 [-]: MOVE      R33 R30      ; R33 := R30
1234 [-]: CALL      R31 3 1      ; R31(R32,R33)
1235 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 1225; R28 := R29 end
1236 [-]: JMP       1225         ; PC := 1225
1237 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
1238 [-]: SELF      R31 R31 K197 ; R32 := R31; R31 := R31["0xD6A79FE9"]
1239 [-]: LOADK     R33 K238     ; R33 := "HealthAndShield.SentinelName"
1240 [-]: LOADK     R34 K199     ; R34 := "text"
1241 [-]: LOADK     R35 K200     ; R35 := ""
1242 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1243 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
1244 [-]: SELF      R31 R31 K1   ; R32 := R31; R31 := R31["0x1C19D966"]
1245 [-]: LOADK     R33 K239     ; R33 := "HealthAndShield.SentinelAffinity"
1246 [-]: LOADK     R34 K3       ; R34 := "_alpha"
1247 [-]: LOADK     R35 K4       ; R35 := 0
1248 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1249 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
1250 [-]: SELF      R31 R31 K197 ; R32 := R31; R31 := R31["0xD6A79FE9"]
1251 [-]: LOADK     R33 K240     ; R33 := "HealthAndShield.SentinelHealth"
1252 [-]: LOADK     R34 K199     ; R34 := "text"
1253 [-]: LOADK     R35 K200     ; R35 := ""
1254 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1255 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
1256 [-]: SELF      R31 R31 K1   ; R32 := R31; R31 := R31["0x1C19D966"]
1257 [-]: LOADK     R33 K241     ; R33 := "HealthAndShield.Sentinel"
1258 [-]: LOADK     R34 K13      ; R34 := "_visible"
1259 [-]: MOVE      R35 R0       ; R35 := R0
1260 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1261 [-]: GETGLOBAL R31 K134     ; R31 := 0x329BDC44
1262 [-]: LOADK     R32 K242     ; R32 := "Lotus.Interface.Libs.TimerMgr"
1263 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1264 [-]: GETTABLE  R32 R31 K243 ; R32 := R31["0xC2A7FAC0"]
1265 [-]: CALL      R32 1 2      ; R32 := R32()
1266 [-]: MOVE      R32 R26      ; R32 := R26
1267 [-]: GETGLOBAL R32 K15      ; R32 := 0x400E7765
1268 [-]: GETGLOBAL R33 K231     ; R33 := _T
1269 [-]: GETTABLE  R33 R33 K244 ; R33 := R33["affinity"]
1270 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1271 [-]: TEST      R32 0        ; if not R32 then PC := 1275
1272 [-]: JMP       1275         ; PC := 1275
1273 [-]: GETGLOBAL R32 K231     ; R32 := _T
1274 [-]: SETTABLE  R32 K244 K4  ; R32["affinity"] := 0
1275 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
1276 [-]: SELF      R32 R32 K1   ; R33 := R32; R32 := R32["0x1C19D966"]
1277 [-]: LOADK     R34 K245     ; R34 := "KillNumber1"
1278 [-]: LOADK     R35 K3       ; R35 := "_alpha"
1279 [-]: LOADK     R36 K4       ; R36 := 0
1280 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1281 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
1282 [-]: SELF      R32 R32 K1   ; R33 := R32; R32 := R32["0x1C19D966"]
1283 [-]: LOADK     R34 K106     ; R34 := "QuestMessage"
1284 [-]: LOADK     R35 K3       ; R35 := "_alpha"
1285 [-]: LOADK     R36 K4       ; R36 := 0
1286 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1287 [-]: GETGLOBAL R32 K0       ; R32 := mMovie
1288 [-]: SELF      R32 R32 K1   ; R33 := R32; R32 := R32["0x1C19D966"]
1289 [-]: LOADK     R34 K246     ; R34 := "QuestMessage.Background"
1290 [-]: LOADK     R35 K3       ; R35 := "_alpha"
1291 [-]: LOADK     R36 K4       ; R36 := 0
1292 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1293 [-]: GETGLOBAL R32 K247     ; R32 := gRegion
1294 [-]: SELF      R32 R32 K248 ; R33 := R32; R32 := R32["0xD2075696"]
1295 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1296 [-]: GETTABLE  R32 R32 K249 ; R32 := R32["level"]
1297 [-]: GETGLOBAL R33 K250     ; R33 := gGameConfig
1298 [-]: SELF      R33 R33 K251 ; R34 := R33; R33 := R33["0x6B81A875"]
1299 [-]: MOVE      R35 R32      ; R35 := R32
1300 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
1301 [-]: TEST      R33 1        ; if R33 then PC := 1321
1302 [-]: JMP       1321         ; PC := 1321
1303 [-]: GETGLOBAL R33 K17      ; R33 := gFlashMgr
1304 [-]: SELF      R33 R33 K21  ; R34 := R33; R33 := R33["0x616DD092"]
1305 [-]: GETUPVAL  R35 U20      ; R35 := U20
1306 [-]: GETTABLE  R35 R35 K252 ; R35 := R35["0xBCEEAD81"]
1307 [-]: CALL      R35 1 0      ; R35,... := R35()
1308 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
1309 [-]: GETGLOBAL R34 K15      ; R34 := 0x400E7765
1310 [-]: MOVE      R35 R33      ; R35 := R33
1311 [-]: CALL      R34 2 2      ; R34 := R34(R35)
1312 [-]: TEST      R34 0        ; if not R34 then PC := 1321
1313 [-]: JMP       1321         ; PC := 1321
1314 [-]: GETGLOBAL R34 K17      ; R34 := gFlashMgr
1315 [-]: SELF      R34 R34 K18  ; R35 := R34; R34 := R34["0x24FF386"]
1316 [-]: GETUPVAL  R36 U20      ; R36 := U20
1317 [-]: GETTABLE  R36 R36 K252 ; R36 := R36["0xBCEEAD81"]
1318 [-]: CALL      R36 1 0      ; R36,... := R36()
1319 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
1320 [-]: MOVE      R33 R34      ; R33 := R34
1321 [-]: GETUPVAL  R34 U27      ; R34 := U27
1322 [-]: CALL      R34 1 1      ; R34()
1323 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1324 [-]: SELF      R34 R34 K1   ; R35 := R34; R34 := R34["0x1C19D966"]
1325 [-]: LOADK     R36 K253     ; R36 := "GenericMessage.Text"
1326 [-]: LOADK     R37 K199     ; R37 := "text"
1327 [-]: LOADK     R38 K200     ; R38 := ""
1328 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
1329 [-]: GETUPVAL  R34 U20      ; R34 := U20
1330 [-]: GETTABLE  R34 R34 K159 ; R34 := R34["0x7BEB1B64"]
1331 [-]: LOADK     R35 K200     ; R35 := ""
1332 [-]: GETUPVAL  R36 U29      ; R36 := U29
1333 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
1334 [-]: MOVE      R34 R28      ; R34 := R28
1335 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1336 [-]: SELF      R34 R34 K163 ; R35 := R34; R34 := R34["0x7E1F26D7"]
1337 [-]: LOADK     R36 K254     ; R36 := "PainTop"
1338 [-]: GETGLOBAL R37 K255     ; R37 := painMaterial
1339 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1340 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1341 [-]: SELF      R34 R34 K163 ; R35 := R34; R34 := R34["0x7E1F26D7"]
1342 [-]: LOADK     R36 K256     ; R36 := "PainBottom"
1343 [-]: GETGLOBAL R37 K255     ; R37 := painMaterial
1344 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1345 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1346 [-]: SELF      R34 R34 K163 ; R35 := R34; R34 := R34["0x7E1F26D7"]
1347 [-]: LOADK     R36 K257     ; R36 := "PainLeft"
1348 [-]: GETGLOBAL R37 K255     ; R37 := painMaterial
1349 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1350 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1351 [-]: SELF      R34 R34 K163 ; R35 := R34; R34 := R34["0x7E1F26D7"]
1352 [-]: LOADK     R36 K258     ; R36 := "PainRight"
1353 [-]: GETGLOBAL R37 K255     ; R37 := painMaterial
1354 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1355 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1356 [-]: SELF      R34 R34 K163 ; R35 := R34; R34 := R34["0x7E1F26D7"]
1357 [-]: LOADK     R36 K259     ; R36 := "ReticleSniper.bg"
1358 [-]: GETGLOBAL R37 K255     ; R37 := painMaterial
1359 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
1360 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
1361 [-]: SELF      R34 R34 K1   ; R35 := R34; R34 := R34["0x1C19D966"]
1362 [-]: LOADK     R36 K90      ; R36 := "Card"
1363 [-]: LOADK     R37 K13      ; R37 := "_visible"
1364 [-]: MOVE      R38 R0       ; R38 := R0
1365 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
1366 [-]: GETUPVAL  R34 U30      ; R34 := U30
1367 [-]: LOADK     R35 K260     ; R35 := "LEVEL_ABBREV"
1368 [-]: GETGLOBAL R36 K0       ; R36 := mMovie
1369 [-]: SELF      R36 R36 K84  ; R37 := R36; R36 := R36["0x5DB0BD4"]
1370 [-]: LOADK     R38 K261     ; R38 := "/Lotus/Language/Menu/LevelAbbreviation"
1371 [-]: MOVE      R39 R0       ; R39 := R0
1372 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
1373 [-]: SETTABLE  R34 R35 R36  ; R34[R35] := R36
1374 [-]: GETUPVAL  R34 U31      ; R34 := U31
1375 [-]: CALL      R34 1 1      ; R34()
1376 [-]: LOADK     R34 K6       ; R34 := 1
1377 [-]: GETUPVAL  R35 U32      ; R35 := U32
1378 [-]: LEN       R35 R35      ; R35 := # R35
1379 [-]: LOADK     R36 K6       ; R36 := 1
1380 [-]: FORPREP   R34 1409     ; R34 -= R36; PC := 1409
1381 [-]: GETUPVAL  R38 U32      ; R38 := U32
1382 [-]: NEWTABLE  R39 0 3      ; R39 := {}
1383 [-]: LOADK     R40 K262     ; R40 := "Tag"
1384 [-]: GETUPVAL  R41 U32      ; R41 := U32
1385 [-]: GETTABLE  R41 R41 R37  ; R41 := R41[R37]
1386 [-]: SETTABLE  R39 R40 R41  ; R39[R40] := R41
1387 [-]: LOADK     R40 K263     ; R40 := "NameTag"
1388 [-]: GETGLOBAL R41 K0       ; R41 := mMovie
1389 [-]: SELF      R41 R41 K84  ; R42 := R41; R41 := R41["0x5DB0BD4"]
1390 [-]: LOADK     R43 K264     ; R43 := "/Lotus/Language/Game/"
1391 [-]: GETUPVAL  R44 U32      ; R44 := U32
1392 [-]: GETTABLE  R44 R44 R37  ; R44 := R44[R37]
1393 [-]: LOADK     R45 K265     ; R45 := "_NoIcon"
1394 [-]: CONCAT    R43 R43 R45  ; R43 := R43 .. R44 .. R45
1395 [-]: MOVE      R44 R0       ; R44 := R0
1396 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
1397 [-]: SETTABLE  R39 R40 R41  ; R39[R40] := R41
1398 [-]: GETGLOBAL R40 K0       ; R40 := mMovie
1399 [-]: SELF      R40 R40 K84  ; R41 := R40; R40 := R40["0x5DB0BD4"]
1400 [-]: LOADK     R42 K266     ; R42 := "<"
1401 [-]: GETUPVAL  R43 U32      ; R43 := U32
1402 [-]: GETTABLE  R43 R43 R37  ; R43 := R43[R37]
1403 [-]: LOADK     R44 K267     ; R44 := ">"
1404 [-]: CONCAT    R42 R42 R44  ; R42 := R42 .. R43 .. R44
1405 [-]: MOVE      R43 R1       ; R43 := R1
1406 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
1407 [-]: SETTABLE  R39 K86 R40  ; R39["Icon"] := R40
1408 [-]: SETTABLE  R38 R37 R39  ; R38[R37] := R39
1409 [-]: FORLOOP   R34 1381     ; R34 += R36; if R34 <= R35 then begin PC := 1381; R37 := R34 end
1410 [-]: GETUPVAL  R38 U33      ; R38 := U33
1411 [-]: CALL      R38 1 1      ; R38()
1412 [-]: NEWTABLE  R38 0 0      ; R38 := {}
1413 [-]: GETUPVAL  R39 U1       ; R39 := U1
1414 [-]: LOADK     R40 K268     ; R40 := "UIMode"
1415 [-]: GETTABLE  R39 R39 R40  ; R39 := R39[R40]
1416 [-]: GETUPVAL  R40 U5       ; R40 := U5
1417 [-]: LOADK     R41 K269     ; R41 := "UI_MODE_IN_DOJO"
1418 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
1419 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 1426
1420 [-]: JMP       1426         ; PC := 1426
1421 [-]: GETGLOBAL R39 K231     ; R39 := _T
1422 [-]: LOADK     R40 K270     ; R40 := "SecretMiniGameActive"
1423 [-]: GETTABLE  R39 R39 R40  ; R39 := R39[R40]
1424 [-]: TEST      R39 0        ; if not R39 then PC := 1431
1425 [-]: JMP       1431         ; PC := 1431
1426 [-]: NEWTABLE  R39 2 0      ; R39 := {}
1427 [-]: LOADK     R40 K105     ; R40 := "WeaponFrame"
1428 [-]: LOADK     R41 K107     ; R41 := "AbilityPanel"
1429 [-]: SETLIST   R39 2 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 2
1430 [-]: MOVE      R38 R39      ; R38 := R39
1431 [-]: LOADK     R39 K6       ; R39 := 1
1432 [-]: LEN       R40 R38      ; R40 := # R38
1433 [-]: LOADK     R41 K6       ; R41 := 1
1434 [-]: FORPREP   R39 1441     ; R39 -= R41; PC := 1441
1435 [-]: GETGLOBAL R43 K0       ; R43 := mMovie
1436 [-]: SELF      R43 R43 K1   ; R44 := R43; R43 := R43["0x1C19D966"]
1437 [-]: GETTABLE  R45 R38 R42  ; R45 := R38[R42]
1438 [-]: LOADK     R46 K13      ; R46 := "_visible"
1439 [-]: MOVE      R47 R0       ; R47 := R0
1440 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
1441 [-]: FORLOOP   R39 1435     ; R39 += R41; if R39 <= R40 then begin PC := 1435; R42 := R39 end
1442 [-]: GETGLOBAL R43 K231     ; R43 := _T
1443 [-]: LOADK     R44 K271     ; R44 := "ShowTerritoryProgress"
1444 [-]: MOVE      R45 R1       ; R45 := R1
1445 [-]: SETTABLE  R43 R44 R45  ; R43[R44] := R45
1446 [-]: GETUPVAL  R43 U34      ; R43 := U34
1447 [-]: CALL      R43 1 1      ; R43()
1448 [-]: GETUPVAL  R43 U1       ; R43 := U1
1449 [-]: LOADK     R44 K272     ; R44 := "mTransOnRightSide"
1450 [-]: MOVE      R45 R0       ; R45 := R0
1451 [-]: SETTABLE  R43 R44 R45  ; R43[R44] := R45
1452 [-]: GETUPVAL  R43 U21      ; R43 := U21
1453 [-]: LOADK     R45 K273     ; R45 := "0x774E5789"
1454 [-]: SELF      R43 R43 R45  ; R44 := R43; R43 := R43[R45]
1455 [-]: MOVE      R45 R0       ; R45 := R0
1456 [-]: CALL      R43 3 1      ; R43(R44,R45)
1457 [-]: GETGLOBAL R43 K0       ; R43 := mMovie
1458 [-]: SELF      R43 R43 K1   ; R44 := R43; R43 := R43["0x1C19D966"]
1459 [-]: LOADK     R45 K274     ; R45 := "ArialAnchor"
1460 [-]: LOADK     R46 K13      ; R46 := "_visible"
1461 [-]: MOVE      R47 R0       ; R47 := R0
1462 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
1463 [-]: GETGLOBAL R43 K0       ; R43 := mMovie
1464 [-]: SELF      R43 R43 K1   ; R44 := R43; R43 := R43["0x1C19D966"]
1465 [-]: LOADK     R45 K275     ; R45 := "ImpactMessage.Label"
1466 [-]: LOADK     R46 K199     ; R46 := "text"
1467 [-]: LOADK     R47 K200     ; R47 := ""
1468 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
1469 [-]: GETGLOBAL R43 K276     ; R43 := Engine
1470 [-]: LOADK     R44 K277     ; R44 := "0xE35E176B"
1471 [-]: GETTABLE  R43 R43 R44  ; R43 := R43[R44]
1472 [-]: CALL      R43 1 2      ; R43 := R43()
1473 [-]: TEST      R43 0        ; if not R43 then PC := 1539
1474 [-]: JMP       1539         ; PC := 1539
1475 [-]: GETGLOBAL R43 K0       ; R43 := mMovie
1476 [-]: SELF      R43 R43 K1   ; R44 := R43; R43 := R43["0x1C19D966"]
1477 [-]: LOADK     R45 K275     ; R45 := "ImpactMessage.Label"
1478 [-]: LOADK     R46 K278     ; R46 := "fontName"
1479 [-]: LOADK     R47 K279     ; R47 := "Arial Unicode MS"
1480 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
1481 [-]: GETGLOBAL R43 K0       ; R43 := mMovie
1482 [-]: SELF      R43 R43 K1   ; R44 := R43; R43 := R43["0x1C19D966"]
1483 [-]: LOADK     R45 K275     ; R45 := "ImpactMessage.Label"
1484 [-]: LOADK     R46 K280     ; R46 := "fontSize"
1485 [-]: LOADK     R47 K281     ; R47 := 18
1486 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
1487 [-]: LOADK     R43 K282     ; R43 := 1.5
1488 [-]: GETGLOBAL R44 K149     ; R44 := 0xF595ADDE
1489 [-]: GETGLOBAL R45 K0       ; R45 := mMovie
1490 [-]: SELF      R45 R45 K150 ; R46 := R45; R45 := R45["0x6B7B470B"]
1491 [-]: LOADK     R47 K275     ; R47 := "ImpactMessage.Label"
1492 [-]: LOADK     R48 K283     ; R48 := "_width"
1493 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
1494 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
1495 [-]: MUL       R45 R44 R43  ; R45 := R44 * R43
1496 [-]: GETGLOBAL R46 K149     ; R46 := 0xF595ADDE
1497 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1498 [-]: SELF      R47 R47 K150 ; R48 := R47; R47 := R47["0x6B7B470B"]
1499 [-]: LOADK     R49 K275     ; R49 := "ImpactMessage.Label"
1500 [-]: LOADK     R50 K284     ; R50 := "_x"
1501 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
1502 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
1503 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1504 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1505 [-]: LOADK     R49 K275     ; R49 := "ImpactMessage.Label"
1506 [-]: LOADK     R50 K138     ; R50 := "_xscale"
1507 [-]: LOADK     R51 K29      ; R51 := 100
1508 [-]: MUL       R51 R43 R51  ; R51 := R43 * R51
1509 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1510 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1511 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1512 [-]: LOADK     R49 K275     ; R49 := "ImpactMessage.Label"
1513 [-]: LOADK     R50 K140     ; R50 := "_yscale"
1514 [-]: LOADK     R51 K29      ; R51 := 100
1515 [-]: MUL       R51 R43 R51  ; R51 := R43 * R51
1516 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1517 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1518 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1519 [-]: LOADK     R49 K275     ; R49 := "ImpactMessage.Label"
1520 [-]: LOADK     R50 K284     ; R50 := "_x"
1521 [-]: SUB       R51 R45 R44  ; R51 := R45 - R44
1522 [-]: LOADK     R52 K81      ; R52 := 2
1523 [-]: DIV       R51 R51 R52  ; R51 := R51 / R52
1524 [-]: SUB       R51 R46 R51  ; R51 := R46 - R51
1525 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1526 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1527 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1528 [-]: LOADK     R49 K275     ; R49 := "ImpactMessage.Label"
1529 [-]: LOADK     R50 K91      ; R50 := "_y"
1530 [-]: LOADK     R51 K285     ; R51 := -22
1531 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1532 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1533 [-]: SELF      R47 R47 K163 ; R48 := R47; R47 := R47["0x7E1F26D7"]
1534 [-]: LOADK     R49 K275     ; R49 := "ImpactMessage.Label"
1535 [-]: GETGLOBAL R50 K76      ; R50 := _G
1536 [-]: LOADK     R51 K286     ; R51 := "UIMaterial_FontSharpen"
1537 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
1538 [-]: CALL      R47 4 1      ; R47(R48,R49,R50)
1539 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1540 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1541 [-]: LOADK     R49 K129     ; R49 := "StandingGain"
1542 [-]: LOADK     R50 K3       ; R50 := "_alpha"
1543 [-]: LOADK     R51 K4       ; R51 := 0
1544 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1545 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1546 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1547 [-]: LOADK     R49 K287     ; R49 := "StandingGain.Label"
1548 [-]: LOADK     R50 K288     ; R50 := "tintIcons"
1549 [-]: MOVE      R51 R1       ; R51 := R1
1550 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1551 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
1552 [-]: SELF      R47 R47 K1   ; R48 := R47; R47 := R47["0x1C19D966"]
1553 [-]: LOADK     R49 K130     ; R49 := "PvPHeldFlagTimer"
1554 [-]: LOADK     R50 K3       ; R50 := "_alpha"
1555 [-]: LOADK     R51 K4       ; R51 := 0
1556 [-]: CALL      R47 5 1      ; R47(R48,R49,R50,R51)
1557 [-]: GETUPVAL  R47 U35      ; R47 := U35
1558 [-]: LOADK     R48 K289     ; R48 := "PhotoBooth"
1559 [-]: GETGLOBAL R49 K15      ; R49 := 0x400E7765
1560 [-]: GETUPVAL  R50 U3       ; R50 := U3
1561 [-]: CALL      R49 2 2      ; R49 := R49(R50)
1562 [-]: TEST      R49 1        ; if R49 then PC := 1569
1563 [-]: JMP       1569         ; PC := 1569
1564 [-]: GETUPVAL  R49 U3       ; R49 := U3
1565 [-]: SELF      R49 R49 K58  ; R50 := R49; R49 := R49["0x8B598ED4"]
1566 [-]: GETGLOBAL R51 K290     ; R51 := gLotusPhotoBoothGameRulesType
1567 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
1568 [-]: JMP       1571         ; PC := 1571
1569 [-]: MOVE      R49 R0       ; R49 := R0
1570 [-]: MOVE      R49 R1       ; R49 := R1
1571 [-]: SETTABLE  R47 R48 R49  ; R47[R48] := R49
1572 [-]: GETGLOBAL R47 K231     ; R47 := _T
1573 [-]: LOADK     R48 K291     ; R48 := "LocationTrackerAddedCallbacks"
1574 [-]: NEWTABLE  R49 0 0      ; R49 := {}
1575 [-]: SETTABLE  R47 R48 R49  ; R47[R48] := R49
1576 [-]: GETUPVAL  R47 U1       ; R47 := U1
1577 [-]: LOADK     R48 K292     ; R48 := "Initialized"
1578 [-]: MOVE      R49 R1       ; R49 := R1
1579 [-]: SETTABLE  R47 R48 R49  ; R47[R48] := R49
1580 [-]: MOVE      R47 R0       ; R47 := R0
1581 [-]: TEST      R47 0        ; if not R47 then PC := 1609
1582 [-]: JMP       1609         ; PC := 1609
1583 [-]: GETGLOBAL R47 K15      ; R47 := 0x400E7765
1584 [-]: GETGLOBAL R48 K293     ; R48 := gMatchingService
1585 [-]: LOADK     R50 K294     ; R50 := "0xD5E03646"
1586 [-]: SELF      R48 R48 R50  ; R49 := R48; R48 := R48[R50]
1587 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
1588 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
1589 [-]: TEST      R47 1        ; if R47 then PC := 1609
1590 [-]: JMP       1609         ; PC := 1609
1591 [-]: GETGLOBAL R47 K293     ; R47 := gMatchingService
1592 [-]: LOADK     R49 K294     ; R49 := "0xD5E03646"
1593 [-]: SELF      R47 R47 R49  ; R48 := R47; R47 := R47[R49]
1594 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1595 [-]: LOADK     R49 K295     ; R49 := "0xFCEFF06E"
1596 [-]: SELF      R47 R47 R49  ; R48 := R47; R47 := R47[R49]
1597 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1598 [-]: TEST      R47 0        ; if not R47 then PC := 1609
1599 [-]: JMP       1609         ; PC := 1609
1600 [-]: GETGLOBAL R47 K231     ; R47 := _T
1601 [-]: LOADK     R48 K296     ; R48 := "0xA3639E71"
1602 [-]: GETTABLE  R47 R47 R48  ; R47 := R47[R48]
1603 [-]: LOADK     R48 K297     ; R48 := "PROXY CONNECTION DETECTED\r\n\r\nCheck Network Config"
1604 [-]: LOADK     R49 K298     ; R49 := -1
1605 [-]: MOVE      R50 R0       ; R50 := R0
1606 [-]: LOADNIL   R51 R51      ; R51 := nil
1607 [-]: MOVE      R52 R0       ; R52 := R0
1608 [-]: CALL      R47 6 1      ; R47(R48,R49,R50,R51,R52)
1609 [-]: RETURN    R0 1         ; return 


; Function #132.1:
;
; Name:            
; Defined at line: 5438
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x8D5886B7"]
  7 [-]: LOADK     R4 K2        ; R4 := "Close"
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8D5886B7"]
 15 [-]: LOADK     R4 K3        ; R4 := "Open"
 16 [-]: CALL      R2 3 1       ; R2(R3,R4)
 17 [-]: RETURN    R0 1         ; return 


; Function #132.2:
;
; Name:            
; Defined at line: 5530
; #Upvalues:       7
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SELF      R4 R4 K0     ; R5 := R4; R4 := R4["0xE73374BC"]
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  5 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
  6 [-]: MOVE      R6 R4        ; R6 := R4
  7 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  8 [-]: TEST      R5 1         ; if R5 then PC := 47
  9 [-]: JMP       47           ; PC := 47
 10 [-]: NEWTABLE  R5 0 4       ; R5 := {}
 11 [-]: SETTABLE  R5 K2 R1     ; R5["Clip"] := R1
 12 [-]: SETTABLE  R5 K3 R0     ; R5["Movie"] := R0
 13 [-]: SETTABLE  R5 K4 R2     ; R5["HandleHudScale"] := R2
 14 [-]: SETTABLE  R5 K5 R3     ; R5["ApplyTrackerOffset"] := R3
 15 [-]: GETGLOBAL R6 K6        ; R6 := table
 16 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0xE6450C9D"]
 17 [-]: GETUPVAL  R7 U1        ; R7 := U1
 18 [-]: MOVE      R8 R5        ; R8 := R5
 19 [-]: CALL      R6 3 1       ; R6(R7,R8)
 20 [-]: GETUPVAL  R6 U2        ; R6 := U2
 21 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x348FAF6A"]
 22 [-]: MOVE      R8 R0        ; R8 := R0
 23 [-]: MOVE      R9 R1        ; R9 := R1
 24 [-]: GETTABLE  R10 R4 K9    ; R10 := R4["x"]
 25 [-]: GETTABLE  R11 R4 K10   ; R11 := R4["y"]
 26 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 40
 28 [-]: JMP       40           ; PC := 40
 29 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 30 [-]: MOVE      R7 R0        ; R7 := R0
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: TEST      R6 1         ; if R6 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETUPVAL  R6 U3        ; R6 := U3
 35 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0x7262C22B"]
 36 [-]: MOVE      R7 R0        ; R7 := R0
 37 [-]: GETUPVAL  R8 U4        ; R8 := U4
 38 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["HudScale"]
 39 [-]: CALL      R6 3 1       ; R6(R7,R8)
 40 [-]: TEST      R3 0         ; if not R3 then PC := 53
 41 [-]: JMP       53           ; PC := 53
 42 [-]: LOADK     R6 K13       ; R6 := 0
 43 [-]: MOVE      R6 R5        ; R6 := R5
 44 [-]: GETUPVAL  R6 U6        ; R6 := U6
 45 [-]: CALL      R6 1 1       ; R6()
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETGLOBAL R6 K14       ; R6 := 0x93B1256B
 48 [-]: LOADK     R7 K15       ; R7 := "HUDREDUX::addMotionClip - Could not add "
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: LOADK     R9 K16       ; R9 := " to motion clips, clip not found in AnchorMgr"
 51 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 52 [-]: CALL      R6 2 1       ; R6(R7)
 53 [-]: RETURN    R0 1         ; return 


; Function #132.3:
;
; Name:            
; Defined at line: 5549
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xE73374BC"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x348FAF6A"]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: GETTABLE  R7 R2 K3     ; R7 := R2["x"]
 15 [-]: GETTABLE  R8 R2 K4     ; R8 := R2["y"]
 16 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 19 [-]: LOADK     R4 K6        ; R4 := "HUDREDUX::updateMotionClip - Could not update "
 20 [-]: MOVE      R5 R1        ; R5 := R1
 21 [-]: LOADK     R6 K7        ; R6 := " motion clip, clip not found in AnchorMgr"
 22 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 23 [-]: CALL      R3 2 1       ; R3(R4)
 24 [-]: RETURN    R0 1         ; return 


; Function #132.4:
;
; Name:            
; Defined at line: 5558
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xD695001D"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: LOADK     R2 K2        ; R2 := 1
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: LEN       R3 R3        ; R3 := # R3
 14 [-]: LOADK     R4 K2        ; R4 := 1
 15 [-]: FORPREP   R2 32        ; R2 -= R4; PC := 32
 16 [-]: GETUPVAL  R6 U1        ; R6 := U1
 17 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 18 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Movie"]
 19 [-]: EQ        0 R6 R0      ; if R6 ~= R0 then PC := 32
 20 [-]: JMP       32           ; PC := 32
 21 [-]: GETUPVAL  R6 U1        ; R6 := U1
 22 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 23 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["Clip"]
 24 [-]: EQ        0 R6 R1      ; if R6 ~= R1 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETGLOBAL R6 K5        ; R6 := table
 27 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xCDB1FD5E"]
 28 [-]: GETUPVAL  R7 U1        ; R7 := U1
 29 [-]: MOVE      R8 R5        ; R8 := R5
 30 [-]: CALL      R6 3 1       ; R6(R7,R8)
 31 [-]: JMP       33           ; PC := 33
 32 [-]: FORLOOP   R2 16        ; R2 += R4; if R2 <= R3 then begin PC := 16; R5 := R2 end
 33 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5683
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["mScreenDuck"] := 2
  3 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5687
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["hasCheckedForStatusEffects"] := "0x0"
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SETTABLE  R1 K3 K2     ; R1["effectOverride"] := nil
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: NEWTABLE  R1 4 0       ; R1 := {}
  9 [-]: LOADK     R2 K4        ; R2 := "ShieldDebuffKey"
 10 [-]: LOADK     R3 K5        ; R3 := "HealthDebuffKey"
 11 [-]: LOADK     R4 K6        ; R4 := "SpeedDebuffKey"
 12 [-]: LOADK     R5 K7        ; R5 := "DamageDebuffKey"
 13 [-]: SETLIST   R1 4 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 4
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETGLOBAL R3 K8        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETTABLE  R3 R1 R3     ; R3 := R1[R3]
 19 [-]: SETTABLE  R2 K3 R3     ; R2["effectOverride"] := R3
 20 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5699
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["hasCheckedForStatusEffects"] := "0x0"
  3 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 5704
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisible"]
  6 [-]: TEST      R0 1         ; if R0 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x7CC73200"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x79EA5337"]
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 5714
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 50
  5 [-]: JMP       50           ; PC := 50
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 50
 10 [-]: JMP       50           ; PC := 50
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8C7099E9"]
 13 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xF595D5E1"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 17 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xEE069D65"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: GETUPVAL  R5 U1        ; R5 := U1
 21 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["HudScalePadding"]
 22 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 23 [-]: LOADNIL   R0 R0        ; R0 := nil
 24 [-]: GETGLOBAL R1 K6        ; R1 := 0xECFDD17
 25 [-]: GETUPVAL  R2 U2        ; R2 := U2
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: JMP       40           ; PC := 40
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0xE73374BC"]
 30 [-]: GETTABLE  R8 R5 K8     ; R8 := R5["Clip"]
 31 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 32 [-]: MOVE      R0 R6        ; R0 := R6
 33 [-]: GETUPVAL  R6 U3        ; R6 := U3
 34 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x348FAF6A"]
 35 [-]: GETTABLE  R8 R5 K10    ; R8 := R5["Movie"]
 36 [-]: GETTABLE  R9 R5 K8     ; R9 := R5["Clip"]
 37 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["x"]
 38 [-]: GETTABLE  R11 R0 K12   ; R11 := R0["y"]
 39 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 40 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
 41 [-]: JMP       28           ; PC := 28
 42 [-]: GETUPVAL  R6 U3        ; R6 := U3
 43 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6["0xFB8B923D"]
 44 [-]: GETUPVAL  R8 U0        ; R8 := U0
 45 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8["0xE73374BC"]
 46 [-]: LOADK     R10 K14      ; R10 := "Notification"
 47 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 48 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["y"]
 49 [-]: CALL      R6 3 1       ; R6(R7,R8)
 50 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 5728
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: LOADK     R0 K1        ; R0 := 1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["list"]
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 K1        ; R2 := 1
 11 [-]: FORPREP   R0 30        ; R0 -= R2; PC := 30
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["list"]
 14 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 15 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["clip"]
 16 [-]: EQ        1 R5 K4      ; if R5 == "ImpactMessage" then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 19 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x1C19D966"]
 20 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["clip"]
 21 [-]: LOADK     R8 K7        ; R8 := "_visible"
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 24 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 25 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x1C19D966"]
 26 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["clip"]
 27 [-]: LOADK     R8 K8        ; R8 := "_xscale"
 28 [-]: LOADK     R9 K9        ; R9 := 0.0099999997764826
 29 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 30 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 31 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 5740
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := comboDownParticleFX
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0xF595ADDE
  3 [-]: MOVE      R5 R0        ; R5 := R0
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: MOVE      R0 R4        ; R0 := R4
  6 [-]: LT        0 K2 R0      ; if 0 >= R0 then PC := 61
  7 [-]: JMP       61           ; PC := 61
  8 [-]: GETGLOBAL R3 K3        ; R3 := comboUpParticleFX
  9 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 10 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x1C19D966"]
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: LOADK     R7 K6        ; R7 := "_xscale"
 13 [-]: LOADK     R8 K7        ; R8 := 400
 14 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 15 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x1C19D966"]
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: LOADK     R7 K8        ; R7 := "_yscale"
 19 [-]: LOADK     R8 K7        ; R8 := 400
 20 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 21 [-]: GETGLOBAL R4 K9        ; R4 := 0x52E17A90
 22 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: GETGLOBAL R7 K10       ; R7 := UISys
 25 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["FlashInstance_EASE_IN_OUT_BACK"]
 26 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 27 [-]: LOADK     R9 K6        ; R9 := "_xscale"
 28 [-]: LOADK     R10 K8       ; R10 := "_yscale"
 29 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 30 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 31 [-]: LOADK     R10 K12      ; R10 := 100
 32 [-]: LOADK     R11 K12      ; R11 := 100
 33 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 34 [-]: LOADK     R10 K13      ; R10 := 0.5
 35 [-]: LOADK     R11 K2       ; R11 := 0
 36 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 37 [-]: GETGLOBAL R4 K14       ; R4 := math
 38 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["0xF7005A7B"]
 39 [-]: MOVE      R5 R0        ; R5 := R0
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: EQ        0 R4 R0      ; if R4 ~= R0 then PC := 59
 42 [-]: JMP       59           ; PC := 59
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 59
 45 [-]: JMP       59           ; PC := 59
 46 [-]: GETGLOBAL R5 K14       ; R5 := math
 47 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["0x65F9712A"]
 48 [-]: MOVE      R6 R4        ; R6 := R4
 49 [-]: GETGLOBAL R7 K17       ; R7 := comboSounds
 50 [-]: LEN       R7 R7        ; R7 := # R7
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: GETGLOBAL R6 K17       ; R6 := comboSounds
 53 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 54 [-]: GETUPVAL  R7 U2        ; R7 := U2
 55 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["0x25992394"]
 56 [-]: MOVE      R8 R6        ; R8 := R6
 57 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 58 [-]: MOVE      R7 R1        ; R7 := R1
 59 [-]: MOVE      R4 R0        ; R4 := R0
 60 [-]: JMP       79           ; PC := 79
 61 [-]: GETGLOBAL R7 K19       ; R7 := 0x400E7765
 62 [-]: GETUPVAL  R8 U1        ; R8 := U1
 63 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 64 [-]: TEST      R7 1         ; if R7 then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R7 U1        ; R7 := U1
 67 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7["0x2842784A"]
 68 [-]: MOVE      R9 R1        ; R9 := R1
 69 [-]: CALL      R7 3 1       ; R7(R8,R9)
 70 [-]: GETUPVAL  R7 U0        ; R7 := U0
 71 [-]: LT        0 K2 R7      ; if 0 >= R7 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETUPVAL  R7 U2        ; R7 := U2
 74 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["0x25992394"]
 75 [-]: GETGLOBAL R8 K21       ; R8 := comboLostSound
 76 [-]: CALL      R7 2 1       ; R7(R8)
 77 [-]: LOADK     R7 K2        ; R7 := 0
 78 [-]: MOVE      R7 R0        ; R7 := R0
 79 [-]: GETUPVAL  R7 U3        ; R7 := U3
 80 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["0x69B983D"]
 81 [-]: GETGLOBAL R8 K4        ; R8 := mMovie
 82 [-]: MOVE      R9 R2        ; R9 := R2
 83 [-]: CALL      R7 3 3       ; R7,R8 := R7(R8,R9)
 84 [-]: GETUPVAL  R9 U3        ; R9 := U3
 85 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["0xBB2F7661"]
 86 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
 87 [-]: MOVE      R11 R3       ; R11 := R3
 88 [-]: SUB       R12 R7 K24   ; R12 := R7 - 35
 89 [-]: MOVE      R13 R8       ; R13 := R8
 90 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 91 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 5775
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 5779
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xA58BB96C"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: LOADNIL   R0 R0        ; R0 := nil
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 5786
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x93B1256B
  2 [-]: LOADK     R2 K1        ; R2 := "HUD_OnFindExternalSessionComplete("
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0x9FAED6BC
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: LOADK     R4 K3        ; R4 := ")"
  7 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xA0FB763C"]
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 14 [-]: GETGLOBAL R6 K5        ; R6 := mMovie
 15 [-]: LOADK     R7 K6        ; R7 := "HUD_OnFindExternalSessionComplete"
 16 [-]: CALL      R1 7 3       ; R1,R2 := R1(R2,R3,R4,R5,R6,R7)
 17 [-]: GETGLOBAL R3 K7        ; R3 := 0x6A235628
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: EQ        0 R3 K8      ; if R3 ~= "string" then PC := 43
 21 [-]: JMP       43           ; PC := 43
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: CALL      R3 1 1       ; R3()
 24 [-]: TEST      R2 0         ; if not R2 then PC := 35
 25 [-]: JMP       35           ; PC := 35
 26 [-]: GETTABLE  R3 R2 K9     ; R3 := R2["0x56FA6BED"]
 27 [-]: CALL      R3 1 2       ; R3 := R3()
 28 [-]: TEST      R3 0         ; if not R3 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETTABLE  R3 R2 K9     ; R3 := R2["0x56FA6BED"]
 31 [-]: CALL      R3 1 1       ; R3()
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: MOVE      R3 R2        ; R3 := R2
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETUPVAL  R3 U3        ; R3 := U3
 36 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0xB11F032"]
 37 [-]: MOVE      R4 R1        ; R4 := R1
 38 [-]: LOADK     R5 K11       ; R5 := "Close_Dialog"
 39 [-]: GETGLOBAL R6 K12       ; R6 := Engine
 40 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Accept"]
 41 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETGLOBAL R3 K14       ; R3 := 0x400E7765
 44 [-]: GETGLOBAL R4 K15       ; R4 := gRegion
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: TEST      R3 1         ; if R3 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: GETGLOBAL R3 K16       ; R3 := gGameRules
 49 [-]: GETGLOBAL R4 K0        ; R4 := 0x93B1256B
 50 [-]: LOADK     R5 K17       ; R5 := "HudRedux.lua - OnFindSessionComplete, connect to lobby"
 51 [-]: CALL      R4 2 1       ; R4(R5)
 52 [-]: SELF      R4 R3 K18    ; R5 := R3; R4 := R3["0xE769C72C"]
 53 [-]: SELF      R6 R1 K19    ; R7 := R1; R6 := R1["0xA57F2EB3"]
 54 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 55 [-]: CALL      R4 0 1       ; R4(R5,...)
 56 [-]: JMP       59           ; PC := 59
 57 [-]: GETUPVAL  R4 U1        ; R4 := U1
 58 [-]: CALL      R4 1 1       ; R4()
 59 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 5814
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x93B1256B
  2 [-]: LOADK     R1 K1        ; R1 := "HUD - External game ready"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  6 [-]: LOADK     R2 K4        ; R2 := 0
  7 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  8 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 32
 12 [-]: JMP       32           ; PC := 32
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: TEST      R1 1         ; if R1 then PC := 32
 15 [-]: JMP       32           ; PC := 32
 16 [-]: GETGLOBAL R1 K6        ; R1 := Engine
 17 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0xF271473D"]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: SETTABLE  R1 K8 K9     ; R1["locString"] := "/Lotus/Language/Menu/NavBar_QuickMatchPleaseWait"
 20 [-]: GETUPVAL  R2 U2        ; R2 := U2
 21 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0x82F0B112"]
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: MOVE      R2 R1        ; R2 := R1
 25 [-]: MOVE      R2 R1        ; R2 := R1
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: GETGLOBAL R2 K11       ; R2 := gMatchingService
 28 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x32785E10"]
 29 [-]: MOVE      R4 R0        ; R4 := R0
 30 [-]: LOADK     R5 K13       ; R5 := "HUD_OnFindExternalSessionComplete"
 31 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 32 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 5830
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CameraController"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETGLOBAL R2 K2        ; R2 := gRegion
 10 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x48FBE19F"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: LEN       R3 R2        ; R3 := # R2
 13 [-]: LT        0 R3 K4      ; if R3 >= 3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: LOADK     R3 K5        ; R3 := 1
 17 [-]: LEN       R4 R2        ; R4 := # R2
 18 [-]: LOADK     R5 K5        ; R5 := 1
 19 [-]: FORPREP   R3 45        ; R3 -= R5; PC := 45
 20 [-]: GETUPVAL  R7 U0        ; R7 := U0
 21 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["CameraController"]
 22 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7["0x58C50BA3"]
 23 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 24 [-]: TEST      R1 1         ; if R1 then PC := 44
 25 [-]: JMP       44           ; PC := 44
 26 [-]: TEST      R7 0         ; if not R7 then PC := 44
 27 [-]: JMP       44           ; PC := 44
 28 [-]: SELF      R8 R7 K7     ; R9 := R7; R8 := R7["0xDE5882DD"]
 29 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 30 [-]: TEST      R8 0         ; if not R8 then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: SELF      R8 R7 K7     ; R9 := R7; R8 := R7["0xDE5882DD"]
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8["0x144A28F9"]
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: EQ        1 R8 R0      ; if R8 == R0 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETUPVAL  R8 U0        ; R8 := U0
 39 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["CameraController"]
 40 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x56EA6BE6"]
 41 [-]: LOADK     R10 K5       ; R10 := 1
 42 [-]: CALL      R8 3 1       ; R8(R9,R10)
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R1 R1        ; R1 := R1
 45 [-]: FORLOOP   R3 20        ; R3 += R5; if R3 <= R4 then begin PC := 20; R6 := R3 end
 46 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 5850
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x17028E8F"]
  3 [-]: LOADK     R3 K2        ; R3 := "MiniGameScore.Score.text"
  4 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/MiniGameScore"
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: GETGLOBAL R6 K5        ; R6 := 0x9FAED6BC
  7 [-]: MOVE      R7 R0        ; R7 := R0
  8 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  9 [-]: SETTABLE  R5 K4 R6     ; R5["SCORE"] := R6
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 5854
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "AbilityDots"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K4        ; R3 := "Stamina"
 10 [-]: LOADK     R4 K3        ; R4 := "_visible"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "HealthAndShield.SuitName"
 16 [-]: LOADK     R4 K3        ; R4 := "_visible"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 20 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 21 [-]: LOADK     R3 K6        ; R3 := "HealthAndShield.MarkerID"
 22 [-]: LOADK     R4 K3        ; R4 := "_visible"
 23 [-]: MOVE      R5 R0        ; R5 := R0
 24 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 25 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 27 [-]: LOADK     R3 K7        ; R3 := "HealthAndShield.SuitAffinity"
 28 [-]: LOADK     R4 K3        ; R4 := "_visible"
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 32 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 33 [-]: LOADK     R3 K8        ; R3 := "MiniMapContainer"
 34 [-]: LOADK     R4 K3        ; R4 := "_visible"
 35 [-]: MOVE      R5 R0        ; R5 := R0
 36 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 37 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 38 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 39 [-]: LOADK     R3 K9        ; R3 := "MiniMapOverlayMsg"
 40 [-]: LOADK     R4 K3        ; R4 := "_visible"
 41 [-]: MOVE      R5 R0        ; R5 := R0
 42 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 43 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 44 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 45 [-]: LOADK     R3 K10       ; R3 := "HealthAndShield"
 46 [-]: LOADK     R4 K3        ; R4 := "_visible"
 47 [-]: MOVE      R5 R0        ; R5 := R0
 48 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xC8890AC0"]
 51 [-]: MOVE      R3 R0        ; R3 := R0
 52 [-]: CALL      R1 3 1       ; R1(R2,R3)
 53 [-]: EQ        1 R0 K12     ; if R0 == "wareframe" then PC := 79
 54 [-]: JMP       79           ; PC := 79
 55 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 56 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 57 [-]: LOADK     R3 K13       ; R3 := "AbilityPanel.EnergyBar.Flare"
 58 [-]: LOADK     R4 K3        ; R4 := "_visible"
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 61 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 62 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 63 [-]: LOADK     R3 K14       ; R3 := "HudTracker"
 64 [-]: LOADK     R4 K3        ; R4 := "_visible"
 65 [-]: MOVE      R5 R0        ; R5 := R0
 66 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 67 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 68 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 69 [-]: LOADK     R3 K15       ; R3 := "Reticle"
 70 [-]: LOADK     R4 K3        ; R4 := "_visible"
 71 [-]: MOVE      R5 R0        ; R5 := R0
 72 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 73 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 74 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 75 [-]: LOADK     R3 K16       ; R3 := "ReticleSniper"
 76 [-]: LOADK     R4 K3        ; R4 := "_visible"
 77 [-]: MOVE      R5 R0        ; R5 := R0
 78 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 79 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 5873
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 5877
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["isEnabled"]
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 5881
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 R0     ; R1["ForceOpenScreen"] := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 5885
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["RailjackHud_Movie"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["RailjackHud_Movie"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 10 [-]: LOADK     R3 K4        ; R3 := "OnPowerModifierHeld"
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R1 K5        ; R1 := gFlashMgr
 15 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x616DD092"]
 16 [-]: GETGLOBAL R3 K7        ; R3 := subGearHudMovie
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0x458F27A9"]
 24 [-]: LOADK     R4 K4        ; R4 := "OnPowerModifierHeld"
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: EQ        1 R0 K8      ; if R0 == "true" then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 1       ; R2(R3)
 34 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 5898
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["InHub"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 30
  4 [-]: JMP       30           ; PC := 30
  5 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
  6 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  7 [-]: LOADK     R2 K4        ; R2 := 0
  8 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x654F1092"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: GETGLOBAL R1 K6        ; R1 := gGameRules
 12 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0xFDF2F5AC"]
 13 [-]: GETGLOBAL R4 K8        ; R4 := Engine
 14 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["GameRules_GS_INTERRUPTED"]
 15 [-]: LOADK     R5 K4        ; R5 := 0
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: SELF      R2 R1 K10    ; R3 := R1; R2 := R1["0x81645750"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 0         ; if not R2 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: SELF      R2 R0 K11    ; R3 := R0; R2 := R0["0xE8518372"]
 22 [-]: GETGLOBAL R4 K12       ; R4 := Lotus_Game
 23 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["HUB_SPAWN_TRADE"]
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: JMP       30           ; PC := 30
 26 [-]: SELF      R2 R0 K11    ; R3 := R0; R2 := R0["0xE8518372"]
 27 [-]: GETGLOBAL R4 K12       ; R4 := Lotus_Game
 28 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["HUB_SPAWN_DEFAULT"]
 29 [-]: CALL      R2 3 1       ; R2(R3,R4)
 30 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 5911
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x464AF503"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 90
  8 [-]: JMP       90           ; PC := 90
  9 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mActive"]
 10 [-]: TEST      R1 0         ; if not R1 then PC := 90
 11 [-]: JMP       90           ; PC := 90
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["valid"]
 14 [-]: TEST      R1 0         ; if not R1 then PC := 90
 15 [-]: JMP       90           ; PC := 90
 16 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mAvatar"]
 17 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 90
 21 [-]: JMP       90           ; PC := 90
 22 [-]: LOADNIL   R2 R2        ; R2 := nil
 23 [-]: GETUPVAL  R3 U2        ; R3 := U2
 24 [-]: CALL      R3 1 2       ; R3 := R3()
 25 [-]: TEST      R3 1         ; if R3 then PC := 33
 26 [-]: JMP       33           ; PC := 33
 27 [-]: GETUPVAL  R3 U3        ; R3 := U3
 28 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMode"]
 29 [-]: GETUPVAL  R4 U4        ; R4 := U4
 30 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["UI_MODE_IN_DOJO"]
 31 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 47
 32 [-]: JMP       47           ; PC := 47
 33 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mName"]
 34 [-]: EQ        1 R3 K8      ; if R3 == "" then PC := 47
 35 [-]: JMP       47           ; PC := 47
 36 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1["0x8B598ED4"]
 37 [-]: GETGLOBAL R5 K10       ; R5 := gLotusSentinelAvatarType
 38 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 39 [-]: TEST      R3 1         ; if R3 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETUPVAL  R3 U5        ; R3 := U5
 42 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x51DEB7DB"]
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 45 [-]: MOVE      R2 R3        ; R2 := R3
 46 [-]: JMP       58           ; PC := 58
 47 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 48 [-]: SELF      R4 R1 K12    ; R5 := R1; R4 := R1["0xDE5882DD"]
 49 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 50 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 51 [-]: TEST      R3 1         ; if R3 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: SELF      R3 R1 K12    ; R4 := R1; R3 := R1["0xDE5882DD"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x8F535238"]
 56 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 57 [-]: MOVE      R2 R3        ; R2 := R3
 58 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 59 [-]: GETGLOBAL R4 K14       ; R4 := _T
 60 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["OpenScreen"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: TEST      R3 1         ; if R3 then PC := 90
 63 [-]: JMP       90           ; PC := 90
 64 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 65 [-]: MOVE      R4 R2        ; R4 := R2
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: TEST      R3 1         ; if R3 then PC := 90
 68 [-]: JMP       90           ; PC := 90
 69 [-]: EQ        1 R2 K8      ; if R2 == "" then PC := 90
 70 [-]: JMP       90           ; PC := 90
 71 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mName"]
 72 [-]: GETUPVAL  R4 U4        ; R4 := U4
 73 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["HIDDEN_PLAYER_NAME"]
 74 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETGLOBAL R3 K14       ; R3 := _T
 77 [-]: SETTABLE  R3 K17 K18   ; R3["SelectedIsGuild"] := "0x0"
 78 [-]: GETGLOBAL R3 K14       ; R3 := _T
 79 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mName"]
 80 [-]: SETTABLE  R3 K19 R4    ; R3["SelectedProfileName"] := R4
 81 [-]: GETGLOBAL R3 K14       ; R3 := _T
 82 [-]: SETTABLE  R3 K20 R2    ; R3["SelectedProfileId"] := R2
 83 [-]: GETUPVAL  R3 U3        ; R3 := U3
 84 [-]: GETGLOBAL R4 K14       ; R4 := _T
 85 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["0x10F7E690"]
 86 [-]: LOADK     R5 K23       ; R5 := "Profile"
 87 [-]: GETGLOBAL R6 K24       ; R6 := mMovie
 88 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 89 [-]: SETTABLE  R3 K21 R4    ; R3["mProfileMovie"] := R4
 90 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 5933
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "SyndicatePower"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_SMOOTH_STEP"]
  6 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_xscale"
  8 [-]: LOADK     R6 K6        ; R6 := "_yscale"
  9 [-]: LOADK     R7 K7        ; R7 := "_alpha"
 10 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 11 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 12 [-]: LOADK     R6 K8        ; R6 := 500
 13 [-]: LOADK     R7 K8        ; R7 := 500
 14 [-]: LOADK     R8 K9        ; R8 := 0
 15 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 16 [-]: LOADK     R6 K10       ; R6 := 0.5
 17 [-]: LOADK     R7 K9        ; R7 := 0
 18 [-]: CLOSURE   R8 0         ; R8 := closure(Function #153.1)
 19 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 20 [-]: RETURN    R0 1         ; return 


; Function #153.1:
;
; Name:            
; Defined at line: 5935
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "SyndicatePower"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 5941
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x69B983D"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := "WeaponFrame.SyndicatePower.Back"
  5 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xBB2F7661"]
  8 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  9 [-]: GETGLOBAL R4 K4        ; R4 := syndicatePowerFX
 10 [-]: ADD       R5 R0 K5     ; R5 := R0 + 10
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 13 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 5946
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "SyndicatePower"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0x69B983D"]
  9 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 10 [-]: LOADK     R2 K5        ; R2 := "WeaponFrame.SyndicatePower.Back"
 11 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xBB2F7661"]
 14 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 15 [-]: GETGLOBAL R4 K7        ; R4 := syndicatePowerActivateFX
 16 [-]: ADD       R5 R0 K8     ; R5 := R0 + 10
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 19 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
 21 [-]: LOADK     R4 K2        ; R4 := "SyndicatePower"
 22 [-]: LOADK     R5 K9        ; R5 := "_alpha"
 23 [-]: LOADK     R6 K10       ; R6 := 0
 24 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 25 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 26 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
 27 [-]: LOADK     R4 K2        ; R4 := "SyndicatePower"
 28 [-]: LOADK     R5 K11       ; R5 := "_xscale"
 29 [-]: LOADK     R6 K12       ; R6 := 500
 30 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 31 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 32 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
 33 [-]: LOADK     R4 K2        ; R4 := "SyndicatePower"
 34 [-]: LOADK     R5 K13       ; R5 := "_yscale"
 35 [-]: LOADK     R6 K12       ; R6 := 500
 36 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 37 [-]: GETGLOBAL R2 K14       ; R2 := 0x52E17A90
 38 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 39 [-]: LOADK     R4 K2        ; R4 := "SyndicatePower"
 40 [-]: GETGLOBAL R5 K15       ; R5 := UISys
 41 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["FlashInstance_SMOOTH_STEP"]
 42 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 43 [-]: LOADK     R7 K11       ; R7 := "_xscale"
 44 [-]: LOADK     R8 K13       ; R8 := "_yscale"
 45 [-]: LOADK     R9 K9        ; R9 := "_alpha"
 46 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 47 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 48 [-]: LOADK     R8 K17       ; R8 := 200
 49 [-]: LOADK     R9 K17       ; R9 := 200
 50 [-]: LOADK     R10 K18      ; R10 := 30
 51 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 52 [-]: LOADK     R8 K19       ; R8 := 0.34999999403954
 53 [-]: LOADK     R9 K20       ; R9 := 0.75
 54 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 55 [-]: GETUPVAL  R2 U1        ; R2 := U1
 56 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x61494587"]
 57 [-]: LOADK     R4 K22       ; R4 := 3
 58 [-]: GETUPVAL  R5 U2        ; R5 := U2
 59 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 60 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 5959
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: LOADK     R5 K2        ; R5 := "_alpha"
  5 [-]: LOADK     R6 K3        ; R6 := 0
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: LOADK     R5 K4        ; R5 := "_xscale"
 11 [-]: LOADK     R6 K5        ; R6 := 200
 12 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 13 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 14 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
 15 [-]: MOVE      R4 R0        ; R4 := R0
 16 [-]: LOADK     R5 K6        ; R5 := "_yscale"
 17 [-]: LOADK     R6 K5        ; R6 := 200
 18 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 19 [-]: GETGLOBAL R2 K7        ; R2 := 0x52E17A90
 20 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: GETGLOBAL R5 K8        ; R5 := UISys
 23 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["FlashInstance_EASE_OUT"]
 24 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 25 [-]: LOADK     R7 K2        ; R7 := "_alpha"
 26 [-]: LOADK     R8 K4        ; R8 := "_xscale"
 27 [-]: LOADK     R9 K6        ; R9 := "_yscale"
 28 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 29 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 30 [-]: LOADK     R8 K10       ; R8 := 100
 31 [-]: LOADK     R9 K10       ; R9 := 100
 32 [-]: LOADK     R10 K10      ; R10 := 100
 33 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 34 [-]: LOADK     R8 K11       ; R8 := 0.15000000596046
 35 [-]: LOADK     R9 K3        ; R9 := 0
 36 [-]: CLOSURE   R10 0        ; R10 := closure(Function #156.1)
 37 [-]: MOVE      R0 R0        ; R0 := R0
 38 [-]: MOVE      R0 R1        ; R0 := R1
 39 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 40 [-]: RETURN    R0 1         ; return 


; Function #156.1:
;
; Name:            
; Defined at line: 5965
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETGLOBAL R3 K2        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FlashInstance_EASE_OUT"]
  6 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  7 [-]: LOADK     R5 K4        ; R5 := "_alpha"
  8 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: LOADK     R6 K5        ; R6 := 0
 11 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 12 [-]: LOADK     R6 K6        ; R6 := 1
 13 [-]: GETUPVAL  R7 U1        ; R7 := U1
 14 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 15 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 5970
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETGLOBAL R2 K2        ; R2 := gGameRules
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 20
  6 [-]: JMP       20           ; PC := 20
  7 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x8B598ED4"]
  9 [-]: GETGLOBAL R3 K4        ; R3 := gLotusGameRulesType
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
 14 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xE4A1648"]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: GETGLOBAL R2 K6        ; R2 := Lotus_Game
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["LotusBaseGameRules_CT_CAPTURED"]
 18 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 30
 19 [-]: JMP       30           ; PC := 30
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0x201191EA
 21 [-]: LOADK     R2 K0        ; R2 := 0
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: GETGLOBAL R1 K9        ; R1 := 0x4CDEF9FF
 24 [-]: CALL      R1 1 2       ; R1 := R1()
 25 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 26 [-]: LT        0 K10 R0     ; if 5 >= R0 then PC := 2
 27 [-]: JMP       2            ; PC := 2
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: JMP       2            ; PC := 2
 30 [-]: GETGLOBAL R1 K11       ; R1 := _T
 31 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["SimarisScanChallengeHack"]
 32 [-]: TEST      R1 0         ; if not R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: GETGLOBAL R1 K11       ; R1 := _T
 36 [-]: SETTABLE  R1 K12 K13   ; R1["SimarisScanChallengeHack"] := "0x1"
 37 [-]: GETGLOBAL R1 K14       ; R1 := gChallengeMgr
 38 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0x83829B2"]
 39 [-]: GETGLOBAL R3 K16       ; R3 := gRegion
 40 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x372CB914"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: GETGLOBAL R4 K18       ; R4 := 0xEC274B1A
 43 [-]: LOADK     R5 K19       ; R5 := "SIMARIS_TARGET_SCANNED"
 44 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 45 [-]: CALL      R1 0 1       ; R1(R2,...)
 46 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 5989
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: MOVE      R0 R3        ; R0 := R3
  5 [-]: LOADK     R3 K1        ; R3 := ""
  6 [-]: TEST      R2 1         ; if R2 then PC := 55
  7 [-]: JMP       55           ; PC := 55
  8 [-]: GETGLOBAL R4 K2        ; R4 := gPlayerProfileMgr
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x21EF7B1A"]
 10 [-]: LOADK     R6 K4        ; R6 := 0
 11 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 12 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 55
 16 [-]: JMP       55           ; PC := 55
 17 [-]: SELF      R5 R4 K6     ; R6 := R4; R5 := R4["0x654F1092"]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K5        ; R6 := 0x400E7765
 20 [-]: MOVE      R7 R5        ; R7 := R5
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: TEST      R6 1         ; if R6 then PC := 55
 23 [-]: JMP       55           ; PC := 55
 24 [-]: GETGLOBAL R6 K7        ; R6 := gRegion
 25 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x3E2F6BF"]
 26 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 27 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 28 [-]: MOVE      R8 R6        ; R8 := R6
 29 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 30 [-]: TEST      R7 1         ; if R7 then PC := 55
 31 [-]: JMP       55           ; PC := 55
 32 [-]: SELF      R7 R5 K9     ; R8 := R5; R7 := R5["0x79B173F7"]
 33 [-]: GETGLOBAL R9 K10       ; R9 := Lotus_Game
 34 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["STANDING_LIMIT_BIN_LIBRARY"]
 35 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 36 [-]: SELF      R8 R6 K12    ; R9 := R6; R8 := R6["0x8DB5D01F"]
 37 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 38 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8["0xD78A53BB"]
 39 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 40 [-]: ADD       R9 R8 R0     ; R9 := R8 + R0
 41 [-]: LE        0 R7 R9      ; if R7 > R9 then PC := 55
 42 [-]: JMP       55           ; PC := 55
 43 [-]: LT        0 R8 R7      ; if R8 >= R7 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: SUB       R0 R7 R8     ; R0 := R7 - R8
 46 [-]: JMP       48           ; PC := 48
 47 [-]: LOADK     R0 K4        ; R0 := 0
 48 [-]: LOADK     R9 K14       ; R9 := " - "
 49 [-]: GETGLOBAL R10 K15      ; R10 := mMovie
 50 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10["0x5DB0BD4"]
 51 [-]: LOADK     R12 K17      ; R12 := "/Lotus/Language/Syndicates/DailyAffiliationReached"
 52 [-]: MOVE      R13 R0       ; R13 := R0
 53 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 54 [-]: CONCAT    R3 R9 R10    ; R3 := R9 .. R10
 55 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 56 [-]: GETGLOBAL R10 K18      ; R10 := gGameRules
 57 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 58 [-]: TEST      R9 1         ; if R9 then PC := 86
 59 [-]: JMP       86           ; PC := 86
 60 [-]: GETGLOBAL R9 K18       ; R9 := gGameRules
 61 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9["0x8B598ED4"]
 62 [-]: GETGLOBAL R11 K20      ; R11 := gLotusGameRulesType
 63 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 64 [-]: TEST      R9 0         ; if not R9 then PC := 86
 65 [-]: JMP       86           ; PC := 86
 66 [-]: GETGLOBAL R9 K21       ; R9 := _T
 67 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["SimarisScanChallengeHack"]
 68 [-]: TEST      R9 1         ; if R9 then PC := 86
 69 [-]: JMP       86           ; PC := 86
 70 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 71 [-]: GETGLOBAL R10 K7       ; R10 := gRegion
 72 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0x3E2F6BF"]
 73 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 74 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 75 [-]: TEST      R9 1         ; if R9 then PC := 86
 76 [-]: JMP       86           ; PC := 86
 77 [-]: GETGLOBAL R9 K7        ; R9 := gRegion
 78 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0x3E2F6BF"]
 79 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 80 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9["0xB26452A2"]
 81 [-]: GETGLOBAL R11 K24      ; R11 := 0xEC274B1A
 82 [-]: LOADK     R12 K22      ; R12 := "SimarisScanChallengeHack"
 83 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 84 [-]: MOVE      R12 R0       ; R12 := R0
 85 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 86 [-]: GETGLOBAL R9 K15       ; R9 := mMovie
 87 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 88 [-]: LOADK     R11 K25      ; R11 := "<REPUTATION>"
 89 [-]: MOVE      R12 R1       ; R12 := R1
 90 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 91 [-]: GETGLOBAL R10 K15      ; R10 := mMovie
 92 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10["0xD6A79FE9"]
 93 [-]: LOADK     R12 K27      ; R12 := "StandingGain.Label"
 94 [-]: LOADK     R13 K28      ; R13 := "text"
 95 [-]: LOADK     R14 K29      ; R14 := "+"
 96 [-]: MOVE      R15 R9       ; R15 := R9
 97 [-]: GETUPVAL  R16 U0       ; R16 := U0
 98 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["0x7E197415"]
 99 [-]: MOVE      R17 R0       ; R17 := R0
100 [-]: LOADK     R18 K4       ; R18 := 0
101 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
102 [-]: MOVE      R17 R3       ; R17 := R3
103 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
104 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
105 [-]: GETGLOBAL R10 K5       ; R10 := 0x400E7765
106 [-]: MOVE      R11 R1       ; R11 := R1
107 [-]: CALL      R10 2 2      ; R10 := R10(R11)
108 [-]: TEST      R10 0        ; if not R10 then PC := 112
109 [-]: JMP       112          ; PC := 112
110 [-]: LOADK     R1 K31       ; R1 := 1
111 [-]: JMP       116          ; PC := 116
112 [-]: GETGLOBAL R10 K0       ; R10 := 0xF595ADDE
113 [-]: MOVE      R11 R1       ; R11 := R1
114 [-]: CALL      R10 2 2      ; R10 := R10(R11)
115 [-]: MOVE      R1 R10       ; R1 := R10
116 [-]: GETUPVAL  R10 U1       ; R10 := U1
117 [-]: LOADK     R11 K32      ; R11 := "StandingGain"
118 [-]: MOVE      R12 R1       ; R12 := R1
119 [-]: CALL      R10 3 1      ; R10(R11,R12)
120 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 6031
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 24        ; R0 -= R2; PC := 24
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Tag"]
  9 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 24
 10 [-]: JMP       24           ; PC := 24
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 13 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 14 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 15 [-]: LOADK     R7 K6        ; R7 := "<"
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R8 R8 R3     ; R8 := R8[R3]
 18 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Tag"]
 19 [-]: LOADK     R9 K7        ; R9 := ">"
 20 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 23 [-]: SETTABLE  R4 K3 R5     ; R4["Icon"] := R5
 24 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 25 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 26 [-]: TEST      R4 0         ; if not R4 then PC := 61
 27 [-]: JMP       61           ; PC := 61
 28 [-]: GETUPVAL  R4 U1        ; R4 := U1
 29 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mSpaceMode"]
 30 [-]: TEST      R4 0         ; if not R4 then PC := 61
 31 [-]: JMP       61           ; PC := 61
 32 [-]: GETUPVAL  R4 U2        ; R4 := U2
 33 [-]: TEST      R4 0         ; if not R4 then PC := 44
 34 [-]: JMP       44           ; PC := 44
 35 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 36 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0xD6A79FE9"]
 37 [-]: LOADK     R6 K10       ; R6 := "HealthAndShield.SuitName"
 38 [-]: LOADK     R7 K11       ; R7 := "text"
 39 [-]: GETUPVAL  R8 U3        ; R8 := U3
 40 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0xCA0021ED"]
 41 [-]: GETUPVAL  R10 U2       ; R10 := U2
 42 [-]: CALL      R8 3 0       ; R8,... := R8(R9,R10)
 43 [-]: CALL      R4 0 1       ; R4(R5,...)
 44 [-]: GETUPVAL  R4 U4        ; R4 := U4
 45 [-]: TEST      R4 0         ; if not R4 then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: GETUPVAL  R4 U4        ; R4 := U4
 48 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ptr"]
 49 [-]: TEST      R4 0         ; if not R4 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 52 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4["0x1C19D966"]
 53 [-]: LOADK     R6 K15       ; R6 := "WeaponFrame.Name"
 54 [-]: LOADK     R7 K11       ; R7 := "text"
 55 [-]: GETUPVAL  R8 U3        ; R8 := U3
 56 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0xCA0021ED"]
 57 [-]: GETUPVAL  R10 U4       ; R10 := U4
 58 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["ptr"]
 59 [-]: CALL      R8 3 0       ; R8,... := R8(R9,R10)
 60 [-]: CALL      R4 0 1       ; R4(R5,...)
 61 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 6049
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LOADK     R3 K1        ; R3 := "TreasureHuntTimer"
  4 [-]: GETUPVAL  R4 U2        ; R4 := U2
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HT_TIMER"]
  6 [-]: LOADK     R5 K3        ; R5 := 0.25
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 10 [-]: SETTABLE  R1 K0 R2     ; R1["TreasureHuntTracker"] := R2
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["TreasureHuntTracker"]
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xB11F032"]
 14 [-]: LOADK     R2 K5        ; R2 := "/Lotus/Language/Game/TreasureHuntTimeLimit"
 15 [-]: LOADK     R3 K6        ; R3 := 5
 16 [-]: CALL      R1 3 1       ; R1(R2,R3)
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["TreasureHuntTracker"]
 19 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0xCFF953A5"]
 20 [-]: GETGLOBAL R2 K8        ; R2 := 0xF595ADDE
 21 [-]: MOVE      R3 R0        ; R3 := R0
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: MOVE      R3 R0        ; R3 := R0
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 6055
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := "TreasureHuntTimer"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SETTABLE  R0 K1 K2     ; R0["TreasureHuntTracker"] := nil
  6 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 6060
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R0 K0        ; R0 := gRegion
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3E2F6BF"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x8DB5D01F"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0x1A701618"]
  7 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
  8 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["LOT_NORMAL"]
  9 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 10 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["SUIT_SLOT"]
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 13 [-]: SELF      R3 R1 K3     ; R4 := R1; R3 := R1["0x1A701618"]
 14 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 15 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LOT_NORMAL"]
 16 [-]: GETGLOBAL R6 K4        ; R6 := Lotus_Game
 17 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["PISTOL_SLOT"]
 18 [-]: MOVE      R7 R0        ; R7 := R0
 19 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 20 [-]: SELF      R4 R1 K3     ; R5 := R1; R4 := R1["0x1A701618"]
 21 [-]: GETGLOBAL R6 K4        ; R6 := Lotus_Game
 22 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["LOT_NORMAL"]
 23 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 24 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["LONG_GUN_SLOT"]
 25 [-]: MOVE      R8 R0        ; R8 := R0
 26 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 27 [-]: SELF      R5 R1 K3     ; R6 := R1; R5 := R1["0x1A701618"]
 28 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 29 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["LOT_NORMAL"]
 30 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["MELEE_SLOT"]
 32 [-]: MOVE      R9 R0        ; R9 := R0
 33 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 34 [-]: SELF      R6 R1 K10    ; R7 := R1; R6 := R1["0x4DA4190"]
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 37 [-]: SELF      R7 R1 K11    ; R8 := R1; R7 := R1["0xC12EB4E3"]
 38 [-]: MOVE      R9 R0        ; R9 := R0
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: SELF      R8 R1 K3     ; R9 := R1; R8 := R1["0x1A701618"]
 41 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 42 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["LOT_ARCHWING"]
 43 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 44 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["SUIT_SLOT"]
 45 [-]: MOVE      R12 R0       ; R12 := R0
 46 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 47 [-]: SELF      R9 R1 K3     ; R10 := R1; R9 := R1["0x1A701618"]
 48 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 49 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["LOT_ARCHWING"]
 50 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 51 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["LONG_GUN_SLOT"]
 52 [-]: MOVE      R13 R0       ; R13 := R0
 53 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 54 [-]: SELF      R10 R1 K3    ; R11 := R1; R10 := R1["0x1A701618"]
 55 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 56 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["LOT_ARCHWING"]
 57 [-]: GETGLOBAL R13 K4       ; R13 := Lotus_Game
 58 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["MELEE_SLOT"]
 59 [-]: MOVE      R14 R0       ; R14 := R0
 60 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 61 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 62 [-]: ADD       R11 R11 R4   ; R11 := R11 + R4
 63 [-]: ADD       R11 R11 R5   ; R11 := R11 + R5
 64 [-]: ADD       R11 R11 R6   ; R11 := R11 + R6
 65 [-]: ADD       R11 R11 R7   ; R11 := R11 + R7
 66 [-]: ADD       R11 R11 R8   ; R11 := R11 + R8
 67 [-]: ADD       R11 R11 R9   ; R11 := R11 + R9
 68 [-]: ADD       R11 R11 R10  ; R11 := R11 + R10
 69 [-]: SELF      R12 R0 K2    ; R13 := R0; R12 := R0["0x8DB5D01F"]
 70 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 71 [-]: SELF      R12 R12 K13  ; R13 := R12; R12 := R12["0xD8995784"]
 72 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 73 [-]: GETGLOBAL R13 K14      ; R13 := mMovie
 74 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13["0x5DB0BD4"]
 75 [-]: LOADK     R15 K16      ; R15 := "/Lotus/Language/SystemMessages/AffinityCostInfo"
 76 [-]: MOVE      R16 R0       ; R16 := R0
 77 [-]: NEWTABLE  R17 0 4      ; R17 := {}
 78 [-]: LOADK     R18 K18      ; R18 := "<font color=\""
 79 [-]: GETUPVAL  R19 U0       ; R19 := U0
 80 [-]: GETTABLE  R19 R19 K19  ; R19 := R19["FloatingContentHighlightHex"]
 81 [-]: LOADK     R20 K20      ; R20 := "\">"
 82 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
 83 [-]: SETTABLE  R17 K17 R18  ; R17["OPEN_COLOR"] := R18
 84 [-]: SETTABLE  R17 K21 K22  ; R17["CLOSE_COLOR"] := "</font>"
 85 [-]: GETUPVAL  R18 U1       ; R18 := U1
 86 [-]: GETTABLE  R18 R18 K24  ; R18 := R18["0x7E197415"]
 87 [-]: MOVE      R19 R12      ; R19 := R12
 88 [-]: LOADK     R20 K25      ; R20 := 0
 89 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 90 [-]: SETTABLE  R17 K23 R18  ; R17["COST"] := R18
 91 [-]: GETUPVAL  R18 U1       ; R18 := U1
 92 [-]: GETTABLE  R18 R18 K24  ; R18 := R18["0x7E197415"]
 93 [-]: MOVE      R19 R11      ; R19 := R11
 94 [-]: LOADK     R20 K25      ; R20 := 0
 95 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 96 [-]: SETTABLE  R17 K26 R18  ; R17["TOTAL"] := R18
 97 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
 98 [-]: LOADK     R14 K27      ; R14 := "<p><font color=\""
 99 [-]: GETUPVAL  R15 U0       ; R15 := U0
100 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["FloatingContentHex"]
101 [-]: LOADK     R16 K20      ; R16 := "\">"
102 [-]: MOVE      R17 R13      ; R17 := R13
103 [-]: LOADK     R18 K22      ; R18 := "</font>"
104 [-]: CONCAT    R14 R14 R18  ; R14 := R14 .. R15 .. R16 .. R17 .. R18
105 [-]: GETUPVAL  R15 U2       ; R15 := U2
106 [-]: LEN       R15 R15      ; R15 := # R15
107 [-]: LT        0 K29 R15    ; if 1 >= R15 then PC := 122
108 [-]: JMP       122          ; PC := 122
109 [-]: GETGLOBAL R15 K14      ; R15 := mMovie
110 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15["0x5DB0BD4"]
111 [-]: LOADK     R17 K30      ; R17 := "/Lotus/Language/SystemMessages/NoReviveHint"
112 [-]: MOVE      R18 R0       ; R18 := R0
113 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
114 [-]: MOVE      R16 R14      ; R16 := R14
115 [-]: LOADK     R17 K18      ; R17 := "<font color=\""
116 [-]: GETUPVAL  R18 U0       ; R18 := U0
117 [-]: GETTABLE  R18 R18 K19  ; R18 := R18["FloatingContentHighlightHex"]
118 [-]: LOADK     R19 K31      ; R19 := "\"><br>"
119 [-]: MOVE      R20 R15      ; R20 := R15
120 [-]: LOADK     R21 K22      ; R21 := "</font>"
121 [-]: CONCAT    R14 R16 R21  ; R14 := R16 .. R17 .. R18 .. R19 .. R20 .. R21
122 [-]: MOVE      R16 R14      ; R16 := R14
123 [-]: LOADK     R17 K32      ; R17 := "</p>"
124 [-]: CONCAT    R14 R16 R17  ; R14 := R16 .. R17
125 [-]: GETGLOBAL R16 K14      ; R16 := mMovie
126 [-]: SELF      R16 R16 K33  ; R17 := R16; R16 := R16["0xD6A79FE9"]
127 [-]: LOADK     R18 K34      ; R18 := "RevivePanel.Status"
128 [-]: LOADK     R19 K35      ; R19 := "text"
129 [-]: MOVE      R20 R14      ; R20 := R14
130 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
131 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 6092
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3823ED12"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 21
 13 [-]: JMP       21           ; PC := 21
 14 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x458F27A9"]
 15 [-]: LOADK     R3 K3        ; R3 := "HandleHudScale"
 16 [-]: GETGLOBAL R4 K4        ; R4 := 0x9FAED6BC
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["HudScale"]
 19 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 6101
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R1 1 1       ; R1()
  7 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x17028E8F"]
  9 [-]: LOADK     R3 K3        ; R3 := "RevivePanel.Callout.text"
 10 [-]: LOADK     R4 K4        ; R4 := "/Lotus/Language/SystemMessages/RevivePrompt"
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 6108
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CLOSURE   R3 0         ; R3 := closure(Function #165.1)
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #165.1:
;
; Name:            
; Defined at line: 6109
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "GenericMessage"
  4 [-]: LOADK     R3 K3        ; R3 := "_xscale"
  5 [-]: GETGLOBAL R4 K4        ; R4 := 0xF595ADDE
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  8 [-]: CALL      R0 0 1       ; R0(R1,...)
  9 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 10 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 11 [-]: LOADK     R2 K2        ; R2 := "GenericMessage"
 12 [-]: LOADK     R3 K5        ; R3 := "_yscale"
 13 [-]: GETGLOBAL R4 K4        ; R4 := 0xF595ADDE
 14 [-]: GETUPVAL  R5 U1        ; R5 := U1
 15 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 16 [-]: CALL      R0 0 1       ; R0(R1,...)
 17 [-]: RETURN    R0 1         ; return 


