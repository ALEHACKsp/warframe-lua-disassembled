code size: 1922
code size: 13
code size: 31
code size: 21
code size: 95
code size: 62
code size: 271
code size: 27
code size: 5
code size: 19
code size: 7
code size: 86
code size: 66
code size: 5
code size: 64
code size: 5
code size: 10
code size: 29
code size: 4
code size: 15
code size: 4
code size: 25
code size: 129
code size: 11
code size: 9
code size: 30
code size: 557
code size: 27
code size: 1
code size: 19
code size: 12
code size: 44
code size: 94
code size: 35
code size: 42
code size: 19
code size: 47
code size: 25
code size: 15
code size: 70
code size: 16
code size: 23
code size: 27
code size: 24
code size: 38
code size: 6
code size: 8
code size: 7
code size: 12
code size: 91
code size: 88
code size: 23
code size: 42
code size: 4
code size: 3
code size: 19
code size: 76
code size: 30
code size: 215
code size: 5
code size: 29
code size: 30
code size: 37
code size: 10
code size: 17
code size: 4
code size: 17
code size: 4
code size: 17
code size: 4
code size: 17
code size: 40
code size: 27
code size: 61
code size: 4
code size: 28
code size: 4
code size: 31
code size: 4
code size: 4
code size: 4
code size: 12
code size: 5
code size: 24
code size: 337
code size: 7
code size: 94
code size: 7
code size: 3
code size: 7
code size: 3
code size: 7
code size: 10
code size: 5
code size: 12
code size: 5
code size: 12
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 17
code size: 17
code size: 5
code size: 17
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 17
code size: 17
code size: 5
code size: 11
code size: 17
code size: 5
code size: 17
code size: 5
code size: 23
code size: 17
code size: 5
code size: 48
code size: 9
code size: 11
code size: 219
code size: 5
code size: 114
code size: 35
code size: 20
code size: 5
code size: 44
code size: 36
code size: 59
code size: 19
code size: 49
code size: 34
code size: 36
code size: 4
code size: 12
code size: 16
code size: 55
code size: 4
code size: 43
code size: 5
code size: 103
code size: 4
code size: 12
code size: 4
code size: 87
code size: 5
code size: 8
code size: 5
code size: 2
code size: 6
code size: 6
code size: 62
code size: 8
code size: 7
code size: 20
code size: 7
code size: 3
code size: 285
code size: 10
code size: 5
code size: 8
code size: 100
code size: 5
code size: 156
code size: 5
code size: 71
code size: 137
code size: 23
code size: 110
code size: 149
code size: 20
code size: 47
code size: 5
code size: 79
code size: 159
code size: 12
code size: 26
code size: 38
code size: 31
code size: 4
code size: 24
code size: 38
code size: 32
code size: 42
code size: 53
code size: 128
code size: 14
code size: 22
code size: 33
code size: 5
code size: 8
code size: 5
code size: 8
code size: 5
code size: 25
code size: 5
code size: 28
code size: 5
code size: 33
code size: 5
code size: 304
code size: 8
code size: 56
code size: 5
code size: 867
code size: 19
code size: 158
code size: 39
code size: 105
code size: 106
code size: 7
code size: 33
code size: 5
code size: 184
code size: 8
code size: 132
code size: 55
code size: 104
code size: 60
code size: 99
code size: 14
code size: 13
code size: 55
code size: 3
code size: 15
code size: 29
code size: 43
code size: 115
code size: 8
code size: 47
code size: 52
code size: 43
code size: 108
code size: 53
code size: 3
code size: 4
code size: 183
code size: 12
code size: 57
code size: 48
code size: 20
code size: 5
code size: 212
code size: 3
code size: 4
code size: 29
code size: 68
code size: 126
code size: 20
code size: 38
code size: 26
code size: 8
code size: 28
code size: 7
code size: 6
code size: 30
code size: 94
code size: 5
code size: 97
code size: 7
code size: 58
code size: 25
code size: 5
code size: 31
code size: 301
code size: 49
code size: 111
code size: 28
code size: 26
code size: 40
code size: 89
code size: 4
code size: 76
code size: 232
code size: 27
code size: 97
code size: 108
code size: 71
code size: 27
code size: 87
code size: 25
code size: 65
code size: 8
code size: 9
code size: 4
code size: 9
code size: 4
code size: 9
code size: 4
code size: 9
code size: 157
code size: 43
code size: 4
code size: 29
code size: 4
code size: 13
code size: 5
code size: 25
code size: 7
code size: 7
code size: 54
code size: 55
code size: 19
code size: 175
code size: 159
code size: 220
code size: 9
code size: 14
code size: 83
code size: 101
code size: 87
code size: 123
code size: 72
code size: 30
code size: 12
code size: 15
code size: 15
code size: 62
code size: 5
code size: 43
code size: 11
code size: 67
code size: 38
code size: 313
code size: 23
code size: 10
code size: 9
code size: 197
code size: 67
code size: 24
code size: 24
code size: 24
code size: 24
code size: 42
code size: 31
code size: 63
code size: 8
code size: 38
code size: 24
code size: 25
code size: 16
code size: 11
code size: 58
code size: 49
code size: 370
code size: 53
code size: 48
code size: 10
code size: 10
code size: 41
code size: 82
code size: 32
code size: 50
code size: 19
code size: 108
code size: 47
code size: 31
code size: 25
code size: 39
code size: 6
code size: 17
code size: 49
code size: 19
code size: 9
code size: 59
code size: 74
code size: 20
code size: 31
code size: 15
code size: 75
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\lua\Lotus\Interface\LotusUtilities.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  130

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x38E3A30F
  2 [-]: VARARG    R1 R2        ; R1 := R2 := ...
  3 [-]: GETGLOBAL R2 K1        ; R2 := package
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["seeall"]
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: NEWTABLE  R0 21 0      ; R0 := {}
  7 [-]: LOADK     R1 K3        ; R1 := "DT_IMPACT"
  8 [-]: LOADK     R2 K4        ; R2 := "DT_PUNCTURE"
  9 [-]: LOADK     R3 K5        ; R3 := "DT_SLASH"
 10 [-]: LOADK     R4 K6        ; R4 := "DT_FIRE"
 11 [-]: LOADK     R5 K7        ; R5 := "DT_FREEZE"
 12 [-]: LOADK     R6 K8        ; R6 := "DT_ELECTRICITY"
 13 [-]: LOADK     R7 K9        ; R7 := "DT_POISON"
 14 [-]: LOADK     R8 K10       ; R8 := "DT_EXPLOSION"
 15 [-]: LOADK     R9 K11       ; R9 := "DT_RADIATION"
 16 [-]: LOADK     R10 K12      ; R10 := "DT_GAS"
 17 [-]: LOADK     R11 K13      ; R11 := "DT_MAGNETIC"
 18 [-]: LOADK     R12 K14      ; R12 := "DT_VIRAL"
 19 [-]: LOADK     R13 K15      ; R13 := "DT_CORROSIVE"
 20 [-]: LOADK     R14 K16      ; R14 := "DT_RADIANT"
 21 [-]: LOADK     R15 K17      ; R15 := "DT_SENTIENT"
 22 [-]: LOADK     R16 K18      ; R16 := "DT_CINEMATIC"
 23 [-]: LOADK     R17 K19      ; R17 := "DT_SHIELD_DRAIN"
 24 [-]: LOADK     R18 K20      ; R18 := "DT_HEALTH_DRAIN"
 25 [-]: LOADK     R19 K21      ; R19 := "DT_ENERGY_DRAIN"
 26 [-]: LOADK     R20 K22      ; R20 := "DT_FINISHER"
 27 [-]: LOADK     R21 K23      ; R21 := "DT_SUICIDE"
 28 [-]: LOADK     R22 K24      ; R22 := "DT_PHYSICAL"
 29 [-]: LOADK     R23 K25      ; R23 := "DT_INVALID"
 30 [-]: LOADK     R24 K26      ; R24 := "DT_BASE_ELEMENTAL"
 31 [-]: LOADK     R25 K27      ; R25 := "DT_COMPOUND_ELEMENTAL"
 32 [-]: LOADK     R26 K28      ; R26 := "DT_ANY"
 33 [-]: SETLIST   R0 26 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 26
 34 [-]: GETGLOBAL R1 K29       ; R1 := 0x12F3CEFA
 35 [-]: LEN       R2 R0        ; R2 := # R0
 36 [-]: GETGLOBAL R3 K30       ; R3 := Engine
 37 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["DT_ANY"]
 38 [-]: ADD       R3 R3 K31    ; R3 := R3 + 1
 39 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R2 R0        ; R2 := R0
 42 [-]: MOVE      R2 R1        ; R2 := R1
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETGLOBAL R1 K32       ; R1 := 0x2C00D429
 45 [-]: LOADK     R2 K33       ; R2 := "/Lotus/Types/StoreItems/SuitCustomizations/ColourPickerDefaultsItemA"
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: GETGLOBAL R2 K32       ; R2 := 0x2C00D429
 48 [-]: LOADK     R3 K34       ; R3 := "/Lotus/Upgrades/Mods/Fusers/UncommonModFuser"
 49 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 50 [-]: GETGLOBAL R3 K32       ; R3 := 0x2C00D429
 51 [-]: LOADK     R4 K35       ; R4 := "/Lotus/Upgrades/Mods/Fusers/RareModFuser"
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: GETGLOBAL R4 K32       ; R4 := 0x2C00D429
 54 [-]: LOADK     R5 K36       ; R5 := "/Lotus/Types/Game/OrokinGoldenMawAvatar"
 55 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 56 [-]: GETGLOBAL R5 K32       ; R5 := 0x2C00D429
 57 [-]: LOADK     R6 K37       ; R6 := "/Lotus/Types/Items/MiscItems/PhotoboothTile"
 58 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 59 [-]: GETGLOBAL R6 K32       ; R6 := 0x2C00D429
 60 [-]: LOADK     R7 K38       ; R7 := "/Lotus/Types/Items/ShipFeatureItems/ShipFeatureItem"
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: GETGLOBAL R7 K32       ; R7 := 0x2C00D429
 63 [-]: LOADK     R8 K39       ; R8 := "/Lotus/Types/Restoratives/LisetBaseAirSupportPower"
 64 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 65 [-]: LOADK     R8 K31       ; R8 := 1
 66 [-]: SETGLOBAL R8 K40       ; UI_MODE_IN_SPACE_SHIP := R8
 67 [-]: LOADK     R8 K42       ; R8 := 2
 68 [-]: SETGLOBAL R8 K41       ; UI_MODE_IN_SPACE_HUB := R8
 69 [-]: LOADK     R8 K44       ; R8 := 3
 70 [-]: SETGLOBAL R8 K43       ; UI_MODE_IN_DOJO := R8
 71 [-]: LOADK     R8 K46       ; R8 := 4
 72 [-]: SETGLOBAL R8 K45       ; UI_MODE_IN_GAME := R8
 73 [-]: LOADK     R8 K48       ; R8 := 101
 74 [-]: SETGLOBAL R8 K47       ; REGION_ID_SIMULACRUM := R8
 75 [-]: LOADK     R8 K50       ; R8 := 100
 76 [-]: SETGLOBAL R8 K49       ; REGION_ID_PHOTOBOOTH := R8
 77 [-]: LOADK     R8 K52       ; R8 := 99
 78 [-]: SETGLOBAL R8 K51       ; REGION_ID_PVP := R8
 79 [-]: LOADK     R8 K54       ; R8 := 98
 80 [-]: SETGLOBAL R8 K53       ; REGION_ID_CLAN_DOJO := R8
 81 [-]: LOADK     R8 K56       ; R8 := 97
 82 [-]: SETGLOBAL R8 K55       ; REGION_ID_DOJO_DUEL := R8
 83 [-]: LOADK     R8 K31       ; R8 := 1
 84 [-]: SETGLOBAL R8 K57       ; SLIDER := R8
 85 [-]: LOADK     R8 K42       ; R8 := 2
 86 [-]: SETGLOBAL R8 K58       ; CHECKBOX := R8
 87 [-]: LOADK     R8 K44       ; R8 := 3
 88 [-]: SETGLOBAL R8 K59       ; TOGGLE := R8
 89 [-]: LOADK     R8 K46       ; R8 := 4
 90 [-]: SETGLOBAL R8 K60       ; BUTTON := R8
 91 [-]: LOADK     R8 K62       ; R8 := 5
 92 [-]: SETGLOBAL R8 K61       ; TITLE := R8
 93 [-]: LOADK     R8 K64       ; R8 := 6
 94 [-]: SETGLOBAL R8 K63       ; INPUTBOX := R8
 95 [-]: LOADK     R8 K66       ; R8 := 7
 96 [-]: SETGLOBAL R8 K65       ; SPACER := R8
 97 [-]: LOADK     R8 K68       ; R8 := 8
 98 [-]: SETGLOBAL R8 K67       ; INPUTCOUNT := R8
 99 [-]: LOADK     R8 K70       ; R8 := 9
100 [-]: SETGLOBAL R8 K69       ; ICONBUTTON := R8
101 [-]: LOADK     R8 K72       ; R8 := 10
102 [-]: SETGLOBAL R8 K71       ; CHOICE := R8
103 [-]: LOADK     R8 K74       ; R8 := 11
104 [-]: SETGLOBAL R8 K73       ; COLOR := R8
105 [-]: NEWTABLE  R8 3 0       ; R8 := {}
106 [-]: NEWTABLE  R9 0 2       ; R9 := {}
107 [-]: GETGLOBAL R10 K77      ; R10 := 0xEC274B1A
108 [-]: LOADK     R11 K78      ; R11 := "OperatorChamberRoom"
109 [-]: CALL      R10 2 2      ; R10 := R10(R11)
110 [-]: SETTABLE  R9 K76 R10   ; R9["Name"] := R10
111 [-]: SETTABLE  R9 K79 K80   ; R9["LocTag"] := "/Lotus/Language/Menu/ShipOperatorChamberRoom"
112 [-]: NEWTABLE  R10 0 2      ; R10 := {}
113 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
114 [-]: LOADK     R12 K81      ; R12 := "AlchemyRoom"
115 [-]: CALL      R11 2 2      ; R11 := R11(R12)
116 [-]: SETTABLE  R10 K76 R11  ; R10["Name"] := R11
117 [-]: SETTABLE  R10 K79 K82  ; R10["LocTag"] := "/Lotus/Language/Menu/ShipAlchemyRoom"
118 [-]: NEWTABLE  R11 0 2      ; R11 := {}
119 [-]: GETGLOBAL R12 K77      ; R12 := 0xEC274B1A
120 [-]: LOADK     R13 K83      ; R13 := "PersonalQuartersRoom"
121 [-]: CALL      R12 2 2      ; R12 := R12(R13)
122 [-]: SETTABLE  R11 K76 R12  ; R11["Name"] := R12
123 [-]: SETTABLE  R11 K79 K84  ; R11["LocTag"] := "/Lotus/Language/Menu/ShipPersonalQuartersRoom"
124 [-]: SETLIST   R8 3 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 3
125 [-]: SETGLOBAL R8 K75       ; SHIP_ROOMS := R8
126 [-]: NEWTABLE  R8 0 2       ; R8 := {}
127 [-]: GETGLOBAL R9 K77       ; R9 := 0xEC274B1A
128 [-]: LOADK     R10 K86      ; R10 := "BridgeRoom"
129 [-]: CALL      R9 2 2       ; R9 := R9(R10)
130 [-]: SETTABLE  R8 K76 R9    ; R8["Name"] := R9
131 [-]: SETTABLE  R8 K79 K87   ; R8["LocTag"] := "/Lotus/Language/Menu/ShipBridgeRoom"
132 [-]: SETGLOBAL R8 K85       ; BRIDGE_ROOM := R8
133 [-]: LOADK     R8 K31       ; R8 := 1
134 [-]: SETGLOBAL R8 K88       ; SOUND_SET_EIDOLON := R8
135 [-]: LOADK     R8 K42       ; R8 := 2
136 [-]: SETGLOBAL R8 K89       ; SOUND_SET_FORTUNA := R8
137 [-]: LOADK     R8 K44       ; R8 := 3
138 [-]: SETGLOBAL R8 K90       ; SOUND_SET_ORB_VALLIS := R8
139 [-]: LOADK     R8 K46       ; R8 := 4
140 [-]: SETGLOBAL R8 K91       ; SOUND_SET_RAILJACK := R8
141 [-]: LOADK     R8 K62       ; R8 := 5
142 [-]: SETGLOBAL R8 K92       ; SOUND_SET_OROKIN_TOWER := R8
143 [-]: LOADK     R8 K50       ; R8 := 100
144 [-]: LOADK     R9 K93       ; R9 := 1000
145 [-]: LOADK     R10 K94      ; R10 := 100000
146 [-]: LOADK     R11 K96      ; R11 := "_"
147 [-]: SETGLOBAL R11 K95      ; TAG_SEPERATOR := R11
148 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
149 [-]: LOADK     R12 K98      ; R12 := "Alert"
150 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
151 [-]: SETGLOBAL R11 K97      ; ALERT_TAG := R11
152 [-]: MUL       R11 K31 R10  ; R11 := 1 * R10
153 [-]: SETGLOBAL R11 K99      ; ALERT_FLAG := R11
154 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
155 [-]: LOADK     R12 K101     ; R12 := "Nightmare"
156 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
157 [-]: SETGLOBAL R11 K100     ; NIGHTMARE_TAG := R11
158 [-]: MUL       R11 K42 R10  ; R11 := 2 * R10
159 [-]: SETGLOBAL R11 K102     ; NIGHTMARE_FLAG := R11
160 [-]: LOADK     R11 K104     ; R11 := 28800
161 [-]: SETGLOBAL R11 K103     ; NIGHTMARE_MISSION_INTERVAL := R11
162 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
163 [-]: LOADK     R12 K106     ; R12 := "Event"
164 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
165 [-]: SETGLOBAL R11 K105     ; EVENT_TAG := R11
166 [-]: MUL       R11 K44 R10  ; R11 := 3 * R10
167 [-]: SETGLOBAL R11 K107     ; EVENT_FLAG := R11
168 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
169 [-]: LOADK     R12 K109     ; R12 := "PVP"
170 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
171 [-]: SETGLOBAL R11 K108     ; PVP_TAG := R11
172 [-]: MUL       R11 K46 R10  ; R11 := 4 * R10
173 [-]: SETGLOBAL R11 K110     ; PVP_FLAG := R11
174 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
175 [-]: LOADK     R12 K112     ; R12 := "InvasionAttacker"
176 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
177 [-]: SETGLOBAL R11 K111     ; INVASION_ATTACKER_TAG := R11
178 [-]: MUL       R11 K62 R10  ; R11 := 5 * R10
179 [-]: SETGLOBAL R11 K113     ; INVASION_ATTACKER_FLAG := R11
180 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
181 [-]: LOADK     R12 K115     ; R12 := "InvasionDefender"
182 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
183 [-]: SETGLOBAL R11 K114     ; INVASION_DEFENDER_TAG := R11
184 [-]: MUL       R11 K64 R10  ; R11 := 6 * R10
185 [-]: SETGLOBAL R11 K116     ; INVASION_DEFENDER_FLAG := R11
186 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
187 [-]: LOADK     R12 K118     ; R12 := "HUB"
188 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
189 [-]: SETGLOBAL R11 K117     ; HUB_TAG := R11
190 [-]: MUL       R11 K66 R10  ; R11 := 7 * R10
191 [-]: SETGLOBAL R11 K119     ; HUB_FLAG := R11
192 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
193 [-]: LOADK     R12 K121     ; R12 := "BadlandMission"
194 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
195 [-]: SETGLOBAL R11 K120     ; BADLAND_MISSION_TAG := R11
196 [-]: MUL       R11 K72 R10  ; R11 := 10 * R10
197 [-]: SETGLOBAL R11 K122     ; BADLAND_MISSION_FLAG := R11
198 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
199 [-]: LOADK     R12 K124     ; R12 := "Syndicate"
200 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
201 [-]: SETGLOBAL R11 K123     ; SYNDICATE_MISSION_TAG := R11
202 [-]: MUL       R11 K74 R10  ; R11 := 11 * R10
203 [-]: SETGLOBAL R11 K125     ; SYNDICATE_MISSION_FLAG := R11
204 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
205 [-]: LOADK     R12 K127     ; R12 := "Key"
206 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
207 [-]: SETGLOBAL R11 K126     ; KEY_TAG := R11
208 [-]: MUL       R11 K129 R10 ; R11 := 12 * R10
209 [-]: SETGLOBAL R11 K128     ; KEY_FLAG := R11
210 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
211 [-]: LOADK     R12 K131     ; R12 := "Sortie"
212 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
213 [-]: SETGLOBAL R11 K130     ; SORTIE_MISSION_TAG := R11
214 [-]: MUL       R11 K133 R10 ; R11 := 13 * R10
215 [-]: SETGLOBAL R11 K132     ; SORTIE_MISSION_FLAG := R11
216 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
217 [-]: LOADK     R12 K135     ; R12 := "ActiveMission"
218 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
219 [-]: SETGLOBAL R11 K134     ; ACTIVE_MISSION_TAG := R11
220 [-]: MUL       R11 K137 R10 ; R11 := 14 * R10
221 [-]: SETGLOBAL R11 K136     ; ACTIVE_MISSION_FLAG := R11
222 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
223 [-]: LOADK     R12 K139     ; R12 := "GhostTower"
224 [-]: CALL      R11 2 2      ; R11 := R11(R12)
225 [-]: SETGLOBAL R11 K138     ; KUVA_TOWER_GOAL_TAG := R11
226 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
227 [-]: LOADK     R12 K139     ; R12 := "GhostTower"
228 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
229 [-]: SETGLOBAL R11 K140     ; KUVA_TOWER_MISSION_TAG := R11
230 [-]: MUL       R11 K142 R10 ; R11 := 15 * R10
231 [-]: SETGLOBAL R11 K141     ; KUVA_TOWER_MISSION_FLAG := R11
232 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
233 [-]: LOADK     R12 K144     ; R12 := "JUNCTION"
234 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
235 [-]: SETGLOBAL R11 K143     ; JUNCTION_TAG := R11
236 [-]: MUL       R11 K146 R10 ; R11 := 16 * R10
237 [-]: SETGLOBAL R11 K145     ; JUNCTION_FLAG := R11
238 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
239 [-]: LOADK     R12 K148     ; R12 := "Nemesis"
240 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
241 [-]: SETGLOBAL R11 K147     ; NEMESIS_MISSION_TAG := R11
242 [-]: MUL       R11 K150 R10 ; R11 := 17 * R10
243 [-]: SETGLOBAL R11 K149     ; NEMESIS_MISSION_FLAG := R11
244 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
245 [-]: LOADK     R12 K152     ; R12 := "EliteAlert"
246 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
247 [-]: SETGLOBAL R11 K151     ; ELITE_ALERT_TAG := R11
248 [-]: MUL       R11 K154 R10 ; R11 := 18 * R10
249 [-]: SETGLOBAL R11 K153     ; ELITE_ALERT_FLAG := R11
250 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
251 [-]: LOADK     R12 K152     ; R12 := "EliteAlert"
252 [-]: CALL      R11 2 2      ; R11 := R11(R12)
253 [-]: SETGLOBAL R11 K155     ; ELITE_ALERT_PERIODIC_MISSION_TAG := R11
254 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
255 [-]: LOADK     R12 K157     ; R12 := "EliteAlertB"
256 [-]: CALL      R11 2 2      ; R11 := R11(R12)
257 [-]: SETGLOBAL R11 K156     ; ELITE_ALERT_PERIODIC_MISSION_TAG_ALT := R11
258 [-]: LOADK     R11 K159     ; R11 := 3600
259 [-]: SETGLOBAL R11 K158     ; ELITE_ALERT_MISSION_INTERVAL := R11
260 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
261 [-]: LOADK     R12 K161     ; R12 := "Scenario"
262 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
263 [-]: SETGLOBAL R11 K160     ; SCENARIO_BEACON_TAG := R11
264 [-]: MUL       R11 K163 R10 ; R11 := 19 * R10
265 [-]: SETGLOBAL R11 K162     ; SCENARIO_BEACON_FLAG := R11
266 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
267 [-]: LOADK     R12 K165     ; R12 := "Hard"
268 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
269 [-]: SETGLOBAL R11 K164     ; HARD_MODE_TAG := R11
270 [-]: MUL       R11 K167 R10 ; R11 := 20 * R10
271 [-]: SETGLOBAL R11 K166     ; HARD_MODE_FLAG := R11
272 [-]: LOADK     R11 K50      ; R11 := 100
273 [-]: SETGLOBAL R11 K168     ; HARD_MODE_LEVEL_MODIFIER := R11
274 [-]: GETGLOBAL R11 K95      ; R11 := TAG_SEPERATOR
275 [-]: LOADK     R12 K170     ; R12 := "UltraHard"
276 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
277 [-]: SETGLOBAL R11 K169     ; ULTRA_HARD_MODE_TAG := R11
278 [-]: MUL       R11 K172 R10 ; R11 := 21 * R10
279 [-]: SETGLOBAL R11 K171     ; ULTRA_HARD_MODE_FLAG := R11
280 [-]: LOADK     R11 K174     ; R11 := 200
281 [-]: SETGLOBAL R11 K173     ; ULTRA_HARD_MODE_LEVEL_MODIFIER := R11
282 [-]: LOADK     R11 K159     ; R11 := 3600
283 [-]: SETGLOBAL R11 K175     ; KUVA_TOWER_MISSION_INTERVAL := R11
284 [-]: LOADK     R11 K177     ; R11 := "OptionalGoal"
285 [-]: SETGLOBAL R11 K176     ; OPTIONAL_GOAL_PREFIX := R11
286 [-]: LOADK     R11 K179     ; R11 := "AnyNode"
287 [-]: SETGLOBAL R11 K178     ; ANY_NODE_PREFIX := R11
288 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
289 [-]: LOADK     R12 K181     ; R12 := "CetusHub4"
290 [-]: CALL      R11 2 2      ; R11 := R11(R12)
291 [-]: SETGLOBAL R11 K180     ; CETUS_NODE_TAG := R11
292 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
293 [-]: LOADK     R12 K183     ; R12 := "SolNode228"
294 [-]: CALL      R11 2 2      ; R11 := R11(R12)
295 [-]: SETGLOBAL R11 K182     ; PLAINS_NODE_TAG := R11
296 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
297 [-]: LOADK     R12 K185     ; R12 := "IronwakeHUB3"
298 [-]: CALL      R11 2 2      ; R11 := R11(R12)
299 [-]: SETGLOBAL R11 K184     ; IRON_WAKE_NODE_TAG := R11
300 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
301 [-]: LOADK     R12 K187     ; R12 := "SolarisUnitedHub1"
302 [-]: CALL      R11 2 2      ; R11 := R11(R12)
303 [-]: SETGLOBAL R11 K186     ; FORTUNA_NODE_TAG := R11
304 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
305 [-]: LOADK     R12 K189     ; R12 := "SolNode129"
306 [-]: CALL      R11 2 2      ; R11 := R11(R12)
307 [-]: SETGLOBAL R11 K188     ; ORB_VALLIS_NODE_TAG := R11
308 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
309 [-]: LOADK     R12 K191     ; R12 := "ErisHUB2"
310 [-]: CALL      R11 2 2      ; R11 := R11(R12)
311 [-]: SETGLOBAL R11 K190     ; OROKIN_TOWER_NODE_TAG := R11
312 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
313 [-]: LOADK     R12 K193     ; R12 := "ScenarioEventHub5"
314 [-]: CALL      R11 2 2      ; R11 := R11(R12)
315 [-]: SETGLOBAL R11 K192     ; SCENARIO_EVENT_HUB_TAG := R11
316 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
317 [-]: LOADK     R12 K195     ; R12 := "/Lotus/Types/Keys/TestKeyForestOpLinkFragment"
318 [-]: CALL      R11 2 2      ; R11 := R11(R12)
319 [-]: SETGLOBAL R11 K194     ; SCENARIO_EVENT_GROUND_TAG := R11
320 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
321 [-]: LOADK     R12 K197     ; R12 := "/Lotus/Types/Keys/TestKeyCrewBattleSentientSquadLink"
322 [-]: CALL      R11 2 2      ; R11 := R11(R12)
323 [-]: SETGLOBAL R11 K196     ; SCENARIO_EVENT_SPACE_TAG := R11
324 [-]: LOADK     R11 K199     ; R11 := 0
325 [-]: SETGLOBAL R11 K198     ; PLAINS_ELO_IN_LISET := R11
326 [-]: LOADK     R11 K31      ; R11 := 1
327 [-]: SETGLOBAL R11 K200     ; PLAINS_ELO_INSIDE_SAFE_ZONE := R11
328 [-]: LOADK     R11 K42      ; R11 := 2
329 [-]: SETGLOBAL R11 K201     ; PLAINS_ELO_OUTSIDE_SAFE_ZONE := R11
330 [-]: LOADK     R11 K44      ; R11 := 3
331 [-]: SETGLOBAL R11 K202     ; PLAINS_ELO_BOUNTY_ACTIVE := R11
332 [-]: GETGLOBAL R11 K77      ; R11 := 0xEC274B1A
333 [-]: LOADK     R12 K203     ; R12 := "Darvo"
334 [-]: CALL      R11 2 2      ; R11 := R11(R12)
335 [-]: NEWTABLE  R12 6 0      ; R12 := {}
336 [-]: LOADK     R13 K205     ; R13 := "/Lotus/Language/Game/Faction_GrineerUC"
337 [-]: LOADK     R14 K206     ; R14 := "/Lotus/Language/Game/Faction_CorpusUC"
338 [-]: LOADK     R15 K207     ; R15 := "/Lotus/Language/Game/Faction_InfestationUC"
339 [-]: LOADK     R16 K208     ; R16 := "/Lotus/Language/Game/Faction_OrokinUC"
340 [-]: LOADK     R17 K209     ; R17 := ""
341 [-]: LOADK     R18 K210     ; R18 := "/Lotus/Language/Enemies/RopalolystName"
342 [-]: SETLIST   R12 6 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 6
343 [-]: SETGLOBAL R12 K204     ; FactionNames := R12
344 [-]: LOADK     R12 K212     ; R12 := "???"
345 [-]: SETGLOBAL R12 K211     ; HIDDEN_PLAYER_NAME := R12
346 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
347 [-]: LOADK     R13 K214     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/AlertsFeatureItem"
348 [-]: CALL      R12 2 2      ; R12 := R12(R13)
349 [-]: SETGLOBAL R12 K213     ; SF_ALERTS := R12
350 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
351 [-]: LOADK     R13 K216     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/ArsenalFeatureItem"
352 [-]: CALL      R12 2 2      ; R12 := R12(R13)
353 [-]: SETGLOBAL R12 K215     ; SF_ARSENAL := R12
354 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
355 [-]: LOADK     R13 K218     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
356 [-]: CALL      R12 2 2      ; R12 := R12(R13)
357 [-]: SETGLOBAL R12 K217     ; SF_CLAN := R12
358 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
359 [-]: LOADK     R13 K220     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/FoundryFeatureItem"
360 [-]: CALL      R12 2 2      ; R12 := R12(R13)
361 [-]: SETGLOBAL R12 K219     ; SF_FOUNDRY := R12
362 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
363 [-]: LOADK     R13 K222     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/FoundryVesselUpgradeFeatureItem"
364 [-]: CALL      R12 2 2      ; R12 := R12(R13)
365 [-]: SETGLOBAL R12 K221     ; SF_FOUNDRY_VESSEL_UPGRADE := R12
366 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
367 [-]: LOADK     R13 K224     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryFeatureItem"
368 [-]: CALL      R12 2 2      ; R12 := R12(R13)
369 [-]: SETGLOBAL R12 K223     ; SF_GENETIC_FOUNDRY := R12
370 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
371 [-]: LOADK     R13 K226     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryUpgradeFeatureItem"
372 [-]: CALL      R12 2 2      ; R12 := R12(R13)
373 [-]: SETGLOBAL R12 K225     ; SF_GENETIC_FOUNDRY_UPGRADE := R12
374 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
375 [-]: LOADK     R13 K218     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
376 [-]: CALL      R12 2 2      ; R12 := R12(R13)
377 [-]: SETGLOBAL R12 K227     ; SF_MARKET_TIER_ONE := R12
378 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
379 [-]: LOADK     R13 K218     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
380 [-]: CALL      R12 2 2      ; R12 := R12(R13)
381 [-]: SETGLOBAL R12 K228     ; SF_MARKET_TIER_TWO := R12
382 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
383 [-]: LOADK     R13 K230     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
384 [-]: CALL      R12 2 2      ; R12 := R12(R13)
385 [-]: SETGLOBAL R12 K229     ; SF_MODS := R12
386 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
387 [-]: LOADK     R13 K230     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
388 [-]: CALL      R12 2 2      ; R12 := R12(R13)
389 [-]: SETGLOBAL R12 K231     ; SF_MODS_FUSION := R12
390 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
391 [-]: LOADK     R13 K230     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
392 [-]: CALL      R12 2 2      ; R12 := R12(R13)
393 [-]: SETGLOBAL R12 K232     ; SF_MODS_TRANSMUTE := R12
394 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
395 [-]: LOADK     R13 K218     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
396 [-]: CALL      R12 2 2      ; R12 := R12(R13)
397 [-]: SETGLOBAL R12 K233     ; SF_CONCLAVE := R12
398 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
399 [-]: LOADK     R13 K218     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
400 [-]: CALL      R12 2 2      ; R12 := R12(R13)
401 [-]: SETGLOBAL R12 K234     ; SF_SOCIAL_MENU := R12
402 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
403 [-]: LOADK     R13 K236     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/MercuryNavigationFeatureItem"
404 [-]: CALL      R12 2 2      ; R12 := R12(R13)
405 [-]: SETGLOBAL R12 K235     ; SF_SOLAR_CHART := R12
406 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
407 [-]: LOADK     R13 K238     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/VoidProjectionFeatureItem"
408 [-]: CALL      R12 2 2      ; R12 := R12(R13)
409 [-]: SETGLOBAL R12 K237     ; SF_VOID_PROJECTION := R12
410 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
411 [-]: LOADK     R13 K240     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/PersonalQuartersFeatureItem"
412 [-]: CALL      R12 2 2      ; R12 := R12(R13)
413 [-]: SETGLOBAL R12 K239     ; SF_PERSONAL_QUARTERS := R12
414 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
415 [-]: LOADK     R13 K242     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/RailjackCephalonShipFeatureItem"
416 [-]: CALL      R12 2 2      ; R12 := R12(R13)
417 [-]: SETGLOBAL R12 K241     ; SF_RAILJACK_CEPHALON := R12
418 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
419 [-]: LOADK     R13 K244     ; R13 := "/Lotus/Types/Items/ShipFeatureItems/RailjackKeyShipFeatureItem"
420 [-]: CALL      R12 2 2      ; R12 := R12(R13)
421 [-]: SETGLOBAL R12 K243     ; SF_RAILJACK_KEY := R12
422 [-]: LOADK     R12 K167     ; R12 := 20
423 [-]: SETGLOBAL R12 K245     ; MAX_PVE_EXTRA_LOADOUTS := R12
424 [-]: LOADK     R12 K167     ; R12 := 20
425 [-]: SETGLOBAL R12 K246     ; MAX_PVP_LOADOUTS := R12
426 [-]: NEWTABLE  R12 0 5      ; R12 := {}
427 [-]: GETGLOBAL R13 K32      ; R13 := 0x2C00D429
428 [-]: LOADK     R14 K249     ; R14 := "/Lotus/Types/Game/Projections/T1VoidProjection"
429 [-]: CALL      R13 2 2      ; R13 := R13(R14)
430 [-]: SETTABLE  R12 K248 R13 ; R12["VoidT1"] := R13
431 [-]: GETGLOBAL R13 K32      ; R13 := 0x2C00D429
432 [-]: LOADK     R14 K251     ; R14 := "/Lotus/Types/Game/Projections/T2VoidProjection"
433 [-]: CALL      R13 2 2      ; R13 := R13(R14)
434 [-]: SETTABLE  R12 K250 R13 ; R12["VoidT2"] := R13
435 [-]: GETGLOBAL R13 K32      ; R13 := 0x2C00D429
436 [-]: LOADK     R14 K253     ; R14 := "/Lotus/Types/Game/Projections/T3VoidProjection"
437 [-]: CALL      R13 2 2      ; R13 := R13(R14)
438 [-]: SETTABLE  R12 K252 R13 ; R12["VoidT3"] := R13
439 [-]: GETGLOBAL R13 K32      ; R13 := 0x2C00D429
440 [-]: LOADK     R14 K255     ; R14 := "/Lotus/Types/Game/Projections/T4VoidProjection"
441 [-]: CALL      R13 2 2      ; R13 := R13(R14)
442 [-]: SETTABLE  R12 K254 R13 ; R12["VoidT4"] := R13
443 [-]: LOADK     R13 K256     ; R13 := "VoidT5"
444 [-]: GETGLOBAL R14 K32      ; R14 := 0x2C00D429
445 [-]: LOADK     R15 K257     ; R15 := "/Lotus/Types/Game/Projections/T5VoidProjectionImmortal"
446 [-]: CALL      R14 2 2      ; R14 := R14(R15)
447 [-]: SETTABLE  R12 R13 R14  ; R12[R13] := R14
448 [-]: SETGLOBAL R12 K247     ; VOID_PROJECTION_ITEMS := R12
449 [-]: LOADK     R12 K31      ; R12 := 1
450 [-]: SETGLOBAL R12 K258     ; HT_PROGRESS_BAR := R12
451 [-]: LOADK     R12 K42      ; R12 := 2
452 [-]: SETGLOBAL R12 K259     ; HT_TIMER := R12
453 [-]: LOADK     R12 K44      ; R12 := 3
454 [-]: SETGLOBAL R12 K260     ; HT_HEALTH_TRACKER := R12
455 [-]: LOADK     R12 K46      ; R12 := 4
456 [-]: SETGLOBAL R12 K261     ; HT_ICON_BAR := R12
457 [-]: LOADK     R12 K62      ; R12 := 5
458 [-]: SETGLOBAL R12 K262     ; HT_OPPONENT_BAR := R12
459 [-]: LOADK     R12 K64      ; R12 := 6
460 [-]: SETGLOBAL R12 K263     ; HT_LABEL := R12
461 [-]: NEWTABLE  R12 8 0      ; R12 := {}
462 [-]: GETGLOBAL R13 K265     ; R13 := gDecorationType
463 [-]: GETGLOBAL R14 K266     ; R14 := gDynamicCoverType
464 [-]: GETGLOBAL R15 K267     ; R15 := gEmplacementType
465 [-]: GETGLOBAL R16 K268     ; R16 := gDevourerType
466 [-]: MOVE      R17 R4       ; R17 := R4
467 [-]: GETGLOBAL R18 K269     ; R18 := gBaseAvatarType
468 [-]: GETGLOBAL R19 K270     ; R19 := gHitProxyType
469 [-]: GETGLOBAL R20 K271     ; R20 := gPickUpType
470 [-]: SETLIST   R12 8 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 8
471 [-]: SETGLOBAL R12 K264     ; SCAN_ENTITY_TYPES := R12
472 [-]: NEWTABLE  R12 3 0      ; R12 := {}
473 [-]: GETGLOBAL R13 K77      ; R13 := 0xEC274B1A
474 [-]: LOADK     R14 K272     ; R14 := "GAME_L1_ARM2"
475 [-]: CALL      R13 2 2      ; R13 := R13(R14)
476 [-]: GETGLOBAL R14 K77      ; R14 := 0xEC274B1A
477 [-]: LOADK     R15 K273     ; R15 := "GAME_C1_HEAD1"
478 [-]: CALL      R14 2 2      ; R14 := R14(R15)
479 [-]: GETGLOBAL R15 K77      ; R15 := 0xEC274B1A
480 [-]: LOADK     R16 K274     ; R16 := "GAME_R1_LEG1"
481 [-]: CALL      R15 2 2      ; R15 := R15(R16)
482 [-]: GETGLOBAL R16 K77      ; R16 := 0xEC274B1A
483 [-]: LOADK     R17 K275     ; R17 := "GAME_L1_LEG2"
484 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
485 [-]: SETLIST   R12 0 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 0
486 [-]: GETGLOBAL R13 K276     ; R13 := 0x329BDC44
487 [-]: LOADK     R14 K277     ; R14 := "EE.Interface.Utilities"
488 [-]: CALL      R13 2 2      ; R13 := R13(R14)
489 [-]: GETGLOBAL R14 K276     ; R14 := 0x329BDC44
490 [-]: LOADK     R15 K278     ; R15 := "Lotus.Interface.UIStyleUtilities"
491 [-]: CALL      R14 2 2      ; R14 := R14(R15)
492 [-]: NEWTABLE  R15 4 0      ; R15 := {}
493 [-]: LOADK     R16 K279     ; R16 := "#FFFFFF"
494 [-]: LOADK     R17 K280     ; R17 := "#24D628"
495 [-]: LOADK     R18 K281     ; R18 := "#238DFF"
496 [-]: LOADK     R19 K282     ; R19 := "#C724D6"
497 [-]: SETLIST   R15 4 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 4
498 [-]: NEWTABLE  R16 4 0      ; R16 := {}
499 [-]: LOADK     R17 K283     ; R17 := 16777215
500 [-]: LOADK     R18 K284     ; R18 := 2414120
501 [-]: LOADK     R19 K285     ; R19 := 2330111
502 [-]: LOADK     R20 K286     ; R20 := 13051094
503 [-]: SETLIST   R16 4 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 4
504 [-]: LOADK     R17 K199     ; R17 := 0
505 [-]: LOADK     R18 K199     ; R18 := 0
506 [-]: LOADK     R19 K287     ; R19 := 3289650
507 [-]: MOVE      R20 R0       ; R20 := R0
508 [-]: GETGLOBAL R21 K32      ; R21 := 0x2C00D429
509 [-]: LOADK     R22 K288     ; R22 := "/Lotus/Types/Game/LotusPvpGameRules"
510 [-]: CALL      R21 2 2      ; R21 := R21(R22)
511 [-]: GETGLOBAL R22 K77      ; R22 := 0xEC274B1A
512 [-]: LOADK     R23 K289     ; R23 := "ScanPoint"
513 [-]: CALL      R22 2 2      ; R22 := R22(R23)
514 [-]: GETGLOBAL R23 K77      ; R23 := 0xEC274B1A
515 [-]: LOADK     R24 K290     ; R24 := "KuvaSurvival"
516 [-]: CALL      R23 2 2      ; R23 := R23(R24)
517 [-]: LOADNIL   R24 R29      ; R24 := R25 := R26 := R27 := R28 := R29 := nil
518 [-]: NEWTABLE  R30 0 6      ; R30 := {}
519 [-]: LOADK     R31 K291     ; R31 := "HOURS_PER_SECOND_EIDOLON"
520 [-]: LOADK     R32 K292     ; R32 := 0.0026670000515878
521 [-]: SETTABLE  R30 R31 R32  ; R30[R31] := R32
522 [-]: LOADK     R31 K293     ; R31 := "HOURS_PER_SECOND_VENUS"
523 [-]: LOADK     R32 K294     ; R32 := 0.014999999664724
524 [-]: SETTABLE  R30 R31 R32  ; R30[R31] := R32
525 [-]: LOADK     R31 K295     ; R31 := "TIME_OF_DAY_LABEL_NIGHT"
526 [-]: LOADK     R32 K296     ; R32 := "/Lotus/Language/Game/TimeOfDay_Night"
527 [-]: SETTABLE  R30 R31 R32  ; R30[R31] := R32
528 [-]: LOADK     R31 K297     ; R31 := "TIME_OF_DAY_LABEL_DAY"
529 [-]: LOADK     R32 K298     ; R32 := "/Lotus/Language/Game/TimeOfDay_Day"
530 [-]: SETTABLE  R30 R31 R32  ; R30[R31] := R32
531 [-]: LOADK     R31 K299     ; R31 := "TIME_OF_DAY_LABEL_WARM"
532 [-]: LOADK     R32 K300     ; R32 := "/Lotus/Language/Game/TimeOfDay_Warm"
533 [-]: SETTABLE  R30 R31 R32  ; R30[R31] := R32
534 [-]: LOADK     R31 K301     ; R31 := "TIME_OF_DAY_LABEL_COLD"
535 [-]: LOADK     R32 K302     ; R32 := "/Lotus/Language/Game/TimeOfDay_Cold"
536 [-]: SETTABLE  R30 R31 R32  ; R30[R31] := R32
537 [-]: CLOSURE   R31 0        ; R31 := closure(Function #1)
538 [-]: SETGLOBAL R31 K303     ; GetWarframeFromOperator := R31
539 [-]: SETGLOBAL R31 K304     ; 0x4C021CA9 := R31
540 [-]: CLOSURE   R31 1        ; R31 := closure(Function #2)
541 [-]: MOVE      R0 R13       ; R0 := R13
542 [-]: CLOSURE   R32 2        ; R32 := closure(Function #3)
543 [-]: SETGLOBAL R32 K305     ; ShouldBlockForTutorial := R32
544 [-]: SETGLOBAL R32 K306     ; 0xE2200111 := R32
545 [-]: CLOSURE   R32 3        ; R32 := closure(Function #4)
546 [-]: SETGLOBAL R32 K307     ; GetPhotoshopDefaultSwatches := R32
547 [-]: SETGLOBAL R32 K308     ; 0xC74F331A := R32
548 [-]: CLOSURE   R32 4        ; R32 := closure(Function #5)
549 [-]: SETGLOBAL R32 K309     ; GetKubrowTypesTable := R32
550 [-]: SETGLOBAL R32 K310     ; 0x15C6A9FF := R32
551 [-]: CLOSURE   R32 5        ; R32 := closure(Function #6)
552 [-]: MOVE      R0 R13       ; R0 := R13
553 [-]: CLOSURE   R33 6        ; R33 := closure(Function #7)
554 [-]: CLOSURE   R34 7        ; R34 := closure(Function #8)
555 [-]: MOVE      R0 R33       ; R0 := R33
556 [-]: SETGLOBAL R34 K311     ; GetSecondElements := R34
557 [-]: SETGLOBAL R34 K312     ; 0x3AF4EBA5 := R34
558 [-]: CLOSURE   R34 8        ; R34 := closure(Function #9)
559 [-]: MOVE      R0 R33       ; R0 := R33
560 [-]: MOVE      R0 R32       ; R0 := R32
561 [-]: CLOSURE   R35 9        ; R35 := closure(Function #10)
562 [-]: MOVE      R0 R34       ; R0 := R34
563 [-]: SETGLOBAL R35 K313     ; SecondsToFormattedTime := R35
564 [-]: SETGLOBAL R35 K314     ; 0xC65D09DD := R35
565 [-]: CLOSURE   R35 10       ; R35 := closure(Function #11)
566 [-]: MOVE      R0 R33       ; R0 := R33
567 [-]: SETGLOBAL R35 K315     ; GetTwitterStyleTime := R35
568 [-]: SETGLOBAL R35 K316     ; 0xE5892312 := R35
569 [-]: CLOSURE   R35 11       ; R35 := closure(Function #12)
570 [-]: MOVE      R0 R33       ; R0 := R33
571 [-]: CLOSURE   R36 12       ; R36 := closure(Function #13)
572 [-]: MOVE      R0 R35       ; R0 := R35
573 [-]: SETGLOBAL R36 K317     ; GetStoreTime := R36
574 [-]: SETGLOBAL R36 K318     ; 0x9E1A1D26 := R36
575 [-]: CLOSURE   R36 13       ; R36 := closure(Function #14)
576 [-]: MOVE      R0 R33       ; R0 := R33
577 [-]: CLOSURE   R37 14       ; R37 := closure(Function #15)
578 [-]: MOVE      R0 R36       ; R0 := R36
579 [-]: SETGLOBAL R37 K319     ; GetFullTime := R37
580 [-]: SETGLOBAL R37 K320     ; 0xE233A311 := R37
581 [-]: CLOSURE   R37 15       ; R37 := closure(Function #16)
582 [-]: SETGLOBAL R37 K321     ; GetPlayerAvatar := R37
583 [-]: SETGLOBAL R37 K322     ; 0x6C682A30 := R37
584 [-]: CLOSURE   R37 16       ; R37 := closure(Function #17)
585 [-]: CLOSURE   R38 17       ; R38 := closure(Function #18)
586 [-]: MOVE      R0 R37       ; R0 := R37
587 [-]: SETGLOBAL R38 K323     ; GetMainMenuSuitAvatar := R38
588 [-]: SETGLOBAL R38 K324     ; 0xC8003594 := R38
589 [-]: CLOSURE   R38 18       ; R38 := closure(Function #19)
590 [-]: MOVE      R0 R37       ; R0 := R37
591 [-]: CLOSURE   R39 19       ; R39 := closure(Function #20)
592 [-]: MOVE      R0 R38       ; R0 := R38
593 [-]: SETGLOBAL R39 K325     ; GetMainMenuSentinelAvatar := R39
594 [-]: SETGLOBAL R39 K326     ; 0xC58B8390 := R39
595 [-]: CLOSURE   R39 20       ; R39 := closure(Function #21)
596 [-]: MOVE      R0 R18       ; R0 := R18
597 [-]: MOVE      R0 R19       ; R0 := R19
598 [-]: MOVE      R0 R13       ; R0 := R13
599 [-]: CLOSURE   R40 21       ; R40 := closure(Function #22)
600 [-]: MOVE      R0 R39       ; R0 := R39
601 [-]: MOVE      R0 R15       ; R0 := R15
602 [-]: CLOSURE   R41 22       ; R41 := closure(Function #23)
603 [-]: MOVE      R0 R40       ; R0 := R40
604 [-]: SETGLOBAL R41 K327     ; GetItemToolTipText := R41
605 [-]: SETGLOBAL R41 K328     ; 0x58755417 := R41
606 [-]: CLOSURE   R41 23       ; R41 := closure(Function #24)
607 [-]: MOVE      R0 R16       ; R0 := R16
608 [-]: SETGLOBAL R41 K329     ; GetItemRarityColor := R41
609 [-]: SETGLOBAL R41 K330     ; 0x5C54B62F := R41
610 [-]: CLOSURE   R41 24       ; R41 := closure(Function #25)
611 [-]: SETGLOBAL R41 K331     ; OpenColorPicker := R41
612 [-]: SETGLOBAL R41 K332     ; 0x4F1E0655 := R41
613 [-]: CLOSURE   R41 25       ; R41 := closure(Function #26)
614 [-]: MOVE      R0 R37       ; R0 := R37
615 [-]: MOVE      R0 R17       ; R0 := R17
616 [-]: MOVE      R0 R13       ; R0 := R13
617 [-]: SETGLOBAL R41 K333     ; UpdateSuit := R41
618 [-]: SETGLOBAL R41 K334     ; 0x535B496D := R41
619 [-]: CLOSURE   R41 26       ; R41 := closure(Function #27)
620 [-]: SETGLOBAL R41 K335     ; UpdateMiniGameHeadTracking := R41
621 [-]: SETGLOBAL R41 K336     ; 0xED7C58B6 := R41
622 [-]: CLOSURE   R41 27       ; R41 := closure(Function #28)
623 [-]: SETGLOBAL R41 K337     ; OnAvatarImageSet := R41
624 [-]: SETGLOBAL R41 K338     ; 0x31EC8DC9 := R41
625 [-]: CLOSURE   R41 28       ; R41 := closure(Function #29)
626 [-]: SETGLOBAL R41 K339     ; InitializeProfileIconList := R41
627 [-]: SETGLOBAL R41 K340     ; 0x9929BD85 := R41
628 [-]: CLOSURE   R41 29       ; R41 := closure(Function #30)
629 [-]: SETGLOBAL R41 K341     ; UnregisterProfileIcon := R41
630 [-]: SETGLOBAL R41 K342     ; 0xA3CEE3CA := R41
631 [-]: CLOSURE   R41 30       ; R41 := closure(Function #31)
632 [-]: SETGLOBAL R41 K343     ; RegisterProfileIcon := R41
633 [-]: SETGLOBAL R41 K344     ; 0xE45C64A9 := R41
634 [-]: CLOSURE   R41 31       ; R41 := closure(Function #32)
635 [-]: CLOSURE   R42 32       ; R42 := closure(Function #33)
636 [-]: CLOSURE   R43 33       ; R43 := closure(Function #34)
637 [-]: MOVE      R0 R31       ; R0 := R31
638 [-]: MOVE      R0 R13       ; R0 := R13
639 [-]: MOVE      R0 R41       ; R0 := R41
640 [-]: MOVE      R0 R42       ; R0 := R42
641 [-]: SETGLOBAL R43 K345     ; ShowReportMenu := R43
642 [-]: SETGLOBAL R43 K346     ; 0x87F83DE1 := R43
643 [-]: CLOSURE   R43 34       ; R43 := closure(Function #35)
644 [-]: MOVE      R0 R13       ; R0 := R13
645 [-]: SETGLOBAL R43 K347     ; ToRad := R43
646 [-]: SETGLOBAL R43 K348     ; 0x10FB851 := R43
647 [-]: CLOSURE   R43 35       ; R43 := closure(Function #36)
648 [-]: MOVE      R0 R13       ; R0 := R13
649 [-]: SETGLOBAL R43 K349     ; TransformPixelToViewportCoordinates := R43
650 [-]: SETGLOBAL R43 K350     ; 0x4F6BF2C8 := R43
651 [-]: CLOSURE   R43 36       ; R43 := closure(Function #37)
652 [-]: MOVE      R0 R13       ; R0 := R13
653 [-]: SETGLOBAL R43 K351     ; GetRootBasedPosition := R43
654 [-]: SETGLOBAL R43 K352     ; 0x69B983D := R43
655 [-]: CLOSURE   R43 37       ; R43 := closure(Function #38)
656 [-]: MOVE      R0 R13       ; R0 := R13
657 [-]: SETGLOBAL R43 K353     ; CreateScreenParticles := R43
658 [-]: SETGLOBAL R43 K354     ; 0xBB2F7661 := R43
659 [-]: CLOSURE   R43 38       ; R43 := closure(Function #39)
660 [-]: SETGLOBAL R43 K355     ; SetupAbilityUIBySuitType := R43
661 [-]: SETGLOBAL R43 K356     ; 0x1812B162 := R43
662 [-]: CLOSURE   R43 39       ; R43 := closure(Function #40)
663 [-]: SETGLOBAL R43 K357     ; SetupAbilityUIBySuitInstance := R43
664 [-]: SETGLOBAL R43 K358     ; 0xC37CC1B1 := R43
665 [-]: CLOSURE   R43 40       ; R43 := closure(Function #41)
666 [-]: MOVE      R0 R13       ; R0 := R13
667 [-]: SETGLOBAL R43 K359     ; InitializeContextMenu := R43
668 [-]: SETGLOBAL R43 K360     ; 0x41CFD523 := R43
669 [-]: CLOSURE   R43 41       ; R43 := closure(Function #42)
670 [-]: SETGLOBAL R43 K361     ; GetPointsRemainingForItem := R43
671 [-]: SETGLOBAL R43 K362     ; 0xAFFFF94F := R43
672 [-]: CLOSURE   R43 42       ; R43 := closure(Function #43)
673 [-]: MOVE      R0 R43       ; R0 := R43
674 [-]: MOVE      R0 R6        ; R0 := R6
675 [-]: MOVE      R0 R5        ; R0 := R5
676 [-]: CLOSURE   R44 43       ; R44 := closure(Function #44)
677 [-]: MOVE      R0 R43       ; R0 := R43
678 [-]: SETGLOBAL R44 K363     ; CanPurchaseIfAlreadyOwned := R44
679 [-]: SETGLOBAL R44 K364     ; 0xF205C975 := R44
680 [-]: CLOSURE   R44 44       ; R44 := closure(Function #45)
681 [-]: SETGLOBAL R44 K365     ; HaveEnoughSlots := R44
682 [-]: SETGLOBAL R44 K366     ; 0xF2D7B92 := R44
683 [-]: CLOSURE   R44 45       ; R44 := closure(Function #46)
684 [-]: SETGLOBAL R44 K367     ; IsXPLocked := R44
685 [-]: SETGLOBAL R44 K368     ; 0x29844C14 := R44
686 [-]: CLOSURE   R44 46       ; R44 := closure(Function #47)
687 [-]: SETGLOBAL R44 K369     ; IsPVPLocked := R44
688 [-]: SETGLOBAL R44 K370     ; 0x8E59BE68 := R44
689 [-]: CLOSURE   R44 47       ; R44 := closure(Function #48)
690 [-]: MOVE      R0 R13       ; R0 := R13
691 [-]: SETGLOBAL R44 K371     ; CreateParticles := R44
692 [-]: SETGLOBAL R44 K372     ; 0xD1BD9D6 := R44
693 [-]: CLOSURE   R44 48       ; R44 := closure(Function #49)
694 [-]: CLOSURE   R45 49       ; R45 := closure(Function #50)
695 [-]: MOVE      R0 R44       ; R0 := R44
696 [-]: SETGLOBAL R45 K373     ; IsDevServer := R45
697 [-]: SETGLOBAL R45 K374     ; 0x699874A1 := R45
698 [-]: CLOSURE   R45 50       ; R45 := closure(Function #51)
699 [-]: CLOSURE   R46 51       ; R46 := closure(Function #52)
700 [-]: MOVE      R0 R45       ; R0 := R45
701 [-]: SETGLOBAL R46 K375     ; IsTestServer := R46
702 [-]: SETGLOBAL R46 K376     ; 0x2F65C181 := R46
703 [-]: CLOSURE   R46 52       ; R46 := closure(Function #53)
704 [-]: CLOSURE   R47 53       ; R47 := closure(Function #54)
705 [-]: MOVE      R0 R46       ; R0 := R46
706 [-]: SETGLOBAL R47 K377     ; IsLocalServer := R47
707 [-]: SETGLOBAL R47 K378     ; 0x81B52309 := R47
708 [-]: CLOSURE   R47 54       ; R47 := closure(Function #55)
709 [-]: MOVE      R0 R44       ; R0 := R44
710 [-]: MOVE      R0 R45       ; R0 := R45
711 [-]: MOVE      R0 R46       ; R0 := R46
712 [-]: SETGLOBAL R47 K379     ; IsRetailServer := R47
713 [-]: SETGLOBAL R47 K380     ; 0x1EE43D04 := R47
714 [-]: CLOSURE   R47 55       ; R47 := closure(Function #56)
715 [-]: CLOSURE   R48 56       ; R48 := closure(Function #57)
716 [-]: MOVE      R0 R47       ; R0 := R47
717 [-]: CLOSURE   R49 57       ; R49 := closure(Function #58)
718 [-]: MOVE      R0 R48       ; R0 := R48
719 [-]: CLOSURE   R50 58       ; R50 := closure(Function #59)
720 [-]: MOVE      R0 R47       ; R0 := R47
721 [-]: SETGLOBAL R50 K381     ; IsInGamePlay := R50
722 [-]: SETGLOBAL R50 K382     ; 0xF24EF75 := R50
723 [-]: CLOSURE   R50 59       ; R50 := closure(Function #60)
724 [-]: CLOSURE   R51 60       ; R51 := closure(Function #61)
725 [-]: MOVE      R0 R50       ; R0 := R50
726 [-]: SETGLOBAL R51 K383     ; IsInMissionOrDojo := R51
727 [-]: SETGLOBAL R51 K384     ; 0x917774C := R51
728 [-]: CLOSURE   R51 61       ; R51 := closure(Function #62)
729 [-]: CLOSURE   R52 62       ; R52 := closure(Function #63)
730 [-]: MOVE      R0 R51       ; R0 := R51
731 [-]: SETGLOBAL R52 K385     ; IsInMission := R52
732 [-]: SETGLOBAL R52 K386     ; 0x87D2274C := R52
733 [-]: CLOSURE   R52 63       ; R52 := closure(Function #64)
734 [-]: MOVE      R0 R48       ; R0 := R48
735 [-]: SETGLOBAL R52 K387     ; GetStarChart := R52
736 [-]: SETGLOBAL R52 K388     ; 0xBB3AACF2 := R52
737 [-]: CLOSURE   R52 64       ; R52 := closure(Function #65)
738 [-]: MOVE      R0 R49       ; R0 := R49
739 [-]: SETGLOBAL R52 K389     ; GetStarChartNodes := R52
740 [-]: SETGLOBAL R52 K390     ; 0x7DE1BCCB := R52
741 [-]: CLOSURE   R52 65       ; R52 := closure(Function #66)
742 [-]: CLOSURE   R53 66       ; R53 := closure(Function #67)
743 [-]: MOVE      R0 R52       ; R0 := R52
744 [-]: SETGLOBAL R53 K391     ; RegionIsAKey := R53
745 [-]: SETGLOBAL R53 K392     ; 0x25E52949 := R53
746 [-]: CLOSURE   R53 67       ; R53 := closure(Function #68)
747 [-]: SETGLOBAL R53 K393     ; ResourceDronesEnabledForRegion := R53
748 [-]: SETGLOBAL R53 K394     ; 0xBE7EEB28 := R53
749 [-]: CLOSURE   R53 68       ; R53 := closure(Function #69)
750 [-]: MOVE      R0 R48       ; R0 := R48
751 [-]: MOVE      R0 R52       ; R0 := R52
752 [-]: CLOSURE   R54 69       ; R54 := closure(Function #70)
753 [-]: MOVE      R0 R53       ; R0 := R53
754 [-]: SETGLOBAL R54 K395     ; GetNodeInfo := R54
755 [-]: SETGLOBAL R54 K396     ; 0xA104474E := R54
756 [-]: CLOSURE   R54 70       ; R54 := closure(Function #71)
757 [-]: MOVE      R0 R48       ; R0 := R48
758 [-]: MOVE      R0 R53       ; R0 := R53
759 [-]: MOVE      R0 R13       ; R0 := R13
760 [-]: MOVE      R0 R9        ; R0 := R9
761 [-]: CLOSURE   R55 71       ; R55 := closure(Function #72)
762 [-]: MOVE      R0 R54       ; R0 := R54
763 [-]: SETGLOBAL R55 K397     ; BuildGameModeIdForNode := R55
764 [-]: SETGLOBAL R55 K398     ; 0xE4E5932F := R55
765 [-]: CLOSURE   R55 72       ; R55 := closure(Function #73)
766 [-]: SETGLOBAL R55 K399     ; BuildGameModeIdForSimulacrum := R55
767 [-]: SETGLOBAL R55 K400     ; 0x32551E6B := R55
768 [-]: CLOSURE   R55 73       ; R55 := closure(Function #74)
769 [-]: SETGLOBAL R55 K401     ; IsSimulacrumGameModeId := R55
770 [-]: SETGLOBAL R55 K402     ; 0x7CBB0A6D := R55
771 [-]: CLOSURE   R55 74       ; R55 := closure(Function #75)
772 [-]: SETGLOBAL R55 K403     ; BuildGameModeIdForPhotobooth := R55
773 [-]: SETGLOBAL R55 K404     ; 0xC3CDD2F4 := R55
774 [-]: CLOSURE   R55 75       ; R55 := closure(Function #76)
775 [-]: SETGLOBAL R55 K405     ; IsPhotoboothGameModeId := R55
776 [-]: SETGLOBAL R55 K406     ; 0xA6F22122 := R55
777 [-]: CLOSURE   R55 76       ; R55 := closure(Function #77)
778 [-]: MOVE      R0 R9        ; R0 := R9
779 [-]: SETGLOBAL R55 K407     ; BuildGameModeIdForPVP := R55
780 [-]: SETGLOBAL R55 K408     ; 0xE814F70B := R55
781 [-]: CLOSURE   R55 77       ; R55 := closure(Function #78)
782 [-]: MOVE      R0 R9        ; R0 := R9
783 [-]: SETGLOBAL R55 K409     ; BuildGameModeIdForClanDojo := R55
784 [-]: SETGLOBAL R55 K410     ; 0x3CA84701 := R55
785 [-]: CLOSURE   R55 78       ; R55 := closure(Function #79)
786 [-]: MOVE      R0 R9        ; R0 := R9
787 [-]: SETGLOBAL R55 K411     ; IsClanDojoGameModeId := R55
788 [-]: SETGLOBAL R55 K412     ; 0x791AAA70 := R55
789 [-]: CLOSURE   R55 79       ; R55 := closure(Function #80)
790 [-]: MOVE      R0 R9        ; R0 := R9
791 [-]: SETGLOBAL R55 K413     ; BuildGameModeIdForDojoDuel := R55
792 [-]: SETGLOBAL R55 K414     ; 0x67C55C27 := R55
793 [-]: CLOSURE   R55 80       ; R55 := closure(Function #81)
794 [-]: MOVE      R0 R9        ; R0 := R9
795 [-]: SETGLOBAL R55 K415     ; IsDojoDuelGameModeId := R55
796 [-]: SETGLOBAL R55 K416     ; 0xB1D7A672 := R55
797 [-]: CLOSURE   R55 81       ; R55 := closure(Function #82)
798 [-]: MOVE      R0 R10       ; R0 := R10
799 [-]: CLOSURE   R56 82       ; R56 := closure(Function #83)
800 [-]: MOVE      R0 R55       ; R0 := R55
801 [-]: SETGLOBAL R56 K417     ; IsAlertGameModeId := R56
802 [-]: SETGLOBAL R56 K418     ; 0xB237827A := R56
803 [-]: CLOSURE   R56 83       ; R56 := closure(Function #84)
804 [-]: MOVE      R0 R10       ; R0 := R10
805 [-]: CLOSURE   R57 84       ; R57 := closure(Function #85)
806 [-]: MOVE      R0 R56       ; R0 := R56
807 [-]: SETGLOBAL R57 K419     ; IsNightmareGameModeId := R57
808 [-]: SETGLOBAL R57 K420     ; 0x373A6D66 := R57
809 [-]: CLOSURE   R57 85       ; R57 := closure(Function #86)
810 [-]: MOVE      R0 R10       ; R0 := R10
811 [-]: CLOSURE   R58 86       ; R58 := closure(Function #87)
812 [-]: MOVE      R0 R57       ; R0 := R57
813 [-]: SETGLOBAL R58 K421     ; IsEventGameModeId := R58
814 [-]: SETGLOBAL R58 K422     ; 0x9B7FE040 := R58
815 [-]: CLOSURE   R58 87       ; R58 := closure(Function #88)
816 [-]: MOVE      R0 R10       ; R0 := R10
817 [-]: CLOSURE   R59 88       ; R59 := closure(Function #89)
818 [-]: MOVE      R0 R10       ; R0 := R10
819 [-]: CLOSURE   R60 89       ; R60 := closure(Function #90)
820 [-]: MOVE      R0 R10       ; R0 := R10
821 [-]: CLOSURE   R61 90       ; R61 := closure(Function #91)
822 [-]: MOVE      R0 R60       ; R0 := R60
823 [-]: SETGLOBAL R61 K423     ; IsPvpGameModeId := R61
824 [-]: SETGLOBAL R61 K424     ; 0xECB8288E := R61
825 [-]: CLOSURE   R61 91       ; R61 := closure(Function #92)
826 [-]: MOVE      R0 R10       ; R0 := R10
827 [-]: CLOSURE   R62 92       ; R62 := closure(Function #93)
828 [-]: MOVE      R0 R10       ; R0 := R10
829 [-]: CLOSURE   R63 93       ; R63 := closure(Function #94)
830 [-]: MOVE      R0 R61       ; R0 := R61
831 [-]: SETGLOBAL R63 K425     ; IsBadlandGameModeId := R63
832 [-]: SETGLOBAL R63 K426     ; 0x34923227 := R63
833 [-]: CLOSURE   R63 94       ; R63 := closure(Function #95)
834 [-]: MOVE      R0 R10       ; R0 := R10
835 [-]: CLOSURE   R64 95       ; R64 := closure(Function #96)
836 [-]: MOVE      R0 R63       ; R0 := R63
837 [-]: SETGLOBAL R64 K427     ; IsSyndicateGameModeId := R64
838 [-]: SETGLOBAL R64 K428     ; 0x682737B9 := R64
839 [-]: CLOSURE   R64 96       ; R64 := closure(Function #97)
840 [-]: MOVE      R0 R10       ; R0 := R10
841 [-]: CLOSURE   R65 97       ; R65 := closure(Function #98)
842 [-]: MOVE      R0 R64       ; R0 := R64
843 [-]: SETGLOBAL R65 K429     ; IsSortieGameModeId := R65
844 [-]: SETGLOBAL R65 K430     ; 0x8C4BFA87 := R65
845 [-]: CLOSURE   R65 98       ; R65 := closure(Function #99)
846 [-]: MOVE      R0 R10       ; R0 := R10
847 [-]: CLOSURE   R66 99       ; R66 := closure(Function #100)
848 [-]: MOVE      R0 R65       ; R0 := R65
849 [-]: SETGLOBAL R66 K431     ; IsHubGameModeId := R66
850 [-]: SETGLOBAL R66 K432     ; 0x4E0951F2 := R66
851 [-]: CLOSURE   R66 100      ; R66 := closure(Function #101)
852 [-]: MOVE      R0 R10       ; R0 := R10
853 [-]: CLOSURE   R67 101      ; R67 := closure(Function #102)
854 [-]: MOVE      R0 R10       ; R0 := R10
855 [-]: CLOSURE   R68 102      ; R68 := closure(Function #103)
856 [-]: MOVE      R0 R10       ; R0 := R10
857 [-]: CLOSURE   R69 103      ; R69 := closure(Function #104)
858 [-]: MOVE      R0 R68       ; R0 := R68
859 [-]: SETGLOBAL R69 K433     ; IsJunctionGameModeId := R69
860 [-]: SETGLOBAL R69 K434     ; 0x2F49B682 := R69
861 [-]: CLOSURE   R69 104      ; R69 := closure(Function #105)
862 [-]: CLOSURE   R70 105      ; R70 := closure(Function #106)
863 [-]: MOVE      R0 R10       ; R0 := R10
864 [-]: CLOSURE   R71 106      ; R71 := closure(Function #107)
865 [-]: MOVE      R0 R70       ; R0 := R70
866 [-]: SETGLOBAL R71 K435     ; IsKeyGameModeId := R71
867 [-]: SETGLOBAL R71 K436     ; 0x50C33563 := R71
868 [-]: CLOSURE   R71 107      ; R71 := closure(Function #108)
869 [-]: MOVE      R0 R10       ; R0 := R10
870 [-]: CLOSURE   R72 108      ; R72 := closure(Function #109)
871 [-]: MOVE      R0 R71       ; R0 := R71
872 [-]: SETGLOBAL R72 K437     ; IsHardGameModeId := R72
873 [-]: SETGLOBAL R72 K438     ; 0xB5C61F5D := R72
874 [-]: CLOSURE   R72 109      ; R72 := closure(Function #110)
875 [-]: SETGLOBAL R72 K439     ; IsPlayingHardGameModeMission := R72
876 [-]: SETGLOBAL R72 K440     ; 0xE7BEBC16 := R72
877 [-]: CLOSURE   R72 110      ; R72 := closure(Function #111)
878 [-]: MOVE      R0 R10       ; R0 := R10
879 [-]: CLOSURE   R73 111      ; R73 := closure(Function #112)
880 [-]: MOVE      R0 R72       ; R0 := R72
881 [-]: SETGLOBAL R73 K441     ; IsUltraHardGameModeId := R73
882 [-]: SETGLOBAL R73 K442     ; 0x65909E78 := R73
883 [-]: CLOSURE   R73 112      ; R73 := closure(Function #113)
884 [-]: MOVE      R0 R48       ; R0 := R48
885 [-]: MOVE      R0 R54       ; R0 := R54
886 [-]: SETGLOBAL R73 K443     ; IsScenarioGameModeId := R73
887 [-]: SETGLOBAL R73 K444     ; 0x84A43DD4 := R73
888 [-]: CLOSURE   R73 113      ; R73 := closure(Function #114)
889 [-]: MOVE      R0 R9        ; R0 := R9
890 [-]: MOVE      R0 R8        ; R0 := R8
891 [-]: SETGLOBAL R73 K445     ; GetRegionFromGameModeId := R73
892 [-]: SETGLOBAL R73 K446     ; 0x3D9B0320 := R73
893 [-]: CLOSURE   R73 114      ; R73 := closure(Function #115)
894 [-]: SETGLOBAL R73 K447     ; GetNodeFromGameModeId := R73
895 [-]: SETGLOBAL R73 K448     ; 0xACF150E4 := R73
896 [-]: CLOSURE   R73 115      ; R73 := closure(Function #116)
897 [-]: MOVE      R0 R9        ; R0 := R9
898 [-]: MOVE      R0 R8        ; R0 := R8
899 [-]: MOVE      R0 R60       ; R0 := R60
900 [-]: MOVE      R0 R57       ; R0 := R57
901 [-]: MOVE      R0 R61       ; R0 := R61
902 [-]: MOVE      R0 R63       ; R0 := R63
903 [-]: MOVE      R0 R64       ; R0 := R64
904 [-]: MOVE      R0 R65       ; R0 := R65
905 [-]: MOVE      R0 R69       ; R0 := R69
906 [-]: MOVE      R0 R70       ; R0 := R70
907 [-]: MOVE      R0 R48       ; R0 := R48
908 [-]: CLOSURE   R74 116      ; R74 := closure(Function #117)
909 [-]: MOVE      R0 R73       ; R0 := R73
910 [-]: SETGLOBAL R74 K449     ; GetNodeNameFromGameModeId := R74
911 [-]: SETGLOBAL R74 K450     ; 0xDF08A502 := R74
912 [-]: CLOSURE   R74 117      ; R74 := closure(Function #118)
913 [-]: MOVE      R0 R55       ; R0 := R55
914 [-]: MOVE      R0 R57       ; R0 := R57
915 [-]: MOVE      R0 R58       ; R0 := R58
916 [-]: MOVE      R0 R59       ; R0 := R59
917 [-]: MOVE      R0 R63       ; R0 := R63
918 [-]: MOVE      R0 R64       ; R0 := R64
919 [-]: MOVE      R0 R65       ; R0 := R65
920 [-]: MOVE      R0 R62       ; R0 := R62
921 [-]: MOVE      R0 R66       ; R0 := R66
922 [-]: MOVE      R0 R67       ; R0 := R67
923 [-]: MOVE      R0 R70       ; R0 := R70
924 [-]: MOVE      R0 R56       ; R0 := R56
925 [-]: MOVE      R0 R71       ; R0 := R71
926 [-]: MOVE      R0 R72       ; R0 := R72
927 [-]: SETGLOBAL R74 K451     ; GetNodeModifierTagFromGameModeId := R74
928 [-]: SETGLOBAL R74 K452     ; 0x6D23E6 := R74
929 [-]: CLOSURE   R74 118      ; R74 := closure(Function #119)
930 [-]: MOVE      R0 R48       ; R0 := R48
931 [-]: MOVE      R0 R73       ; R0 := R73
932 [-]: MOVE      R0 R21       ; R0 := R21
933 [-]: CLOSURE   R75 119      ; R75 := closure(Function #120)
934 [-]: MOVE      R0 R74       ; R0 := R74
935 [-]: CLOSURE   R76 120      ; R76 := closure(Function #121)
936 [-]: MOVE      R0 R75       ; R0 := R75
937 [-]: SETGLOBAL R76 K453     ; CanMergeSquad := R76
938 [-]: SETGLOBAL R76 K454     ; 0xA3185C53 := R76
939 [-]: CLOSURE   R76 121      ; R76 := closure(Function #122)
940 [-]: MOVE      R0 R63       ; R0 := R63
941 [-]: MOVE      R0 R64       ; R0 := R64
942 [-]: MOVE      R0 R9        ; R0 := R9
943 [-]: MOVE      R0 R8        ; R0 := R8
944 [-]: MOVE      R0 R13       ; R0 := R13
945 [-]: MOVE      R0 R73       ; R0 := R73
946 [-]: SETGLOBAL R76 K455     ; GetDisplayedNodeNameFromGameModeId := R76
947 [-]: SETGLOBAL R76 K456     ; 0x31A24130 := R76
948 [-]: CLOSURE   R76 122      ; R76 := closure(Function #123)
949 [-]: SETGLOBAL R76 K457     ; GetAlertExpiryforNode := R76
950 [-]: SETGLOBAL R76 K458     ; 0x39B759B := R76
951 [-]: CLOSURE   R76 123      ; R76 := closure(Function #124)
952 [-]: MOVE      R0 R48       ; R0 := R48
953 [-]: SETGLOBAL R76 K459     ; IsRegionUnlocked := R76
954 [-]: SETGLOBAL R76 K460     ; 0x4D691FA9 := R76
955 [-]: CLOSURE   R76 124      ; R76 := closure(Function #125)
956 [-]: MOVE      R0 R13       ; R0 := R13
957 [-]: SETGLOBAL R76 K461     ; IsChatTextActive := R76
958 [-]: SETGLOBAL R76 K462     ; 0xD076C1F0 := R76
959 [-]: CLOSURE   R76 125      ; R76 := closure(Function #126)
960 [-]: MOVE      R0 R55       ; R0 := R55
961 [-]: SETGLOBAL R76 K463     ; IsSessionExpired := R76
962 [-]: SETGLOBAL R76 K464     ; 0x8F119F2D := R76
963 [-]: CLOSURE   R76 126      ; R76 := closure(Function #127)
964 [-]: SETGLOBAL R76 K465     ; CheckShowTutorial := R76
965 [-]: SETGLOBAL R76 K466     ; 0xE11DD5C8 := R76
966 [-]: CLOSURE   R76 127      ; R76 := closure(Function #128)
967 [-]: CLOSURE   R77 128      ; R77 := closure(Function #129)
968 [-]: MOVE      R0 R76       ; R0 := R76
969 [-]: SETGLOBAL R77 K467     ; CreateHudlessTransmission := R77
970 [-]: SETGLOBAL R77 K468     ; 0x36414212 := R77
971 [-]: CLOSURE   R77 129      ; R77 := closure(Function #130)
972 [-]: SETGLOBAL R77 K469     ; IsTransmissionPlaying := R77
973 [-]: SETGLOBAL R77 K470     ; 0x69E8B767 := R77
974 [-]: CLOSURE   R77 130      ; R77 := closure(Function #131)
975 [-]: SETGLOBAL R77 K471     ; GetActualPlayerRank := R77
976 [-]: SETGLOBAL R77 K472     ; 0x56DB34FD := R77
977 [-]: CLOSURE   R77 131      ; R77 := closure(Function #132)
978 [-]: CLOSURE   R78 132      ; R78 := closure(Function #133)
979 [-]: MOVE      R0 R77       ; R0 := R77
980 [-]: SETGLOBAL R78 K473     ; HasCompletedVorsPrize := R78
981 [-]: SETGLOBAL R78 K474     ; 0x38F05760 := R78
982 [-]: CLOSURE   R78 133      ; R78 := closure(Function #134)
983 [-]: MOVE      R0 R77       ; R0 := R77
984 [-]: CLOSURE   R79 134      ; R79 := closure(Function #135)
985 [-]: MOVE      R0 R78       ; R0 := R78
986 [-]: SETGLOBAL R79 K475     ; HasCompletedQuest := R79
987 [-]: SETGLOBAL R79 K476     ; 0x2AAC7A8C := R79
988 [-]: CLOSURE   R79 135      ; R79 := closure(Function #136)
989 [-]: MOVE      R0 R48       ; R0 := R48
990 [-]: CLOSURE   R80 136      ; R80 := closure(Function #137)
991 [-]: MOVE      R0 R79       ; R0 := R79
992 [-]: SETGLOBAL R80 K477     ; GetStarChartProgress := R80
993 [-]: SETGLOBAL R80 K478     ; 0xB38BE6D7 := R80
994 [-]: CLOSURE   R80 137      ; R80 := closure(Function #138)
995 [-]: MOVE      R0 R79       ; R0 := R79
996 [-]: CLOSURE   R81 138      ; R81 := closure(Function #139)
997 [-]: MOVE      R0 R80       ; R0 := R80
998 [-]: SETGLOBAL R81 K479     ; HasCompletedStarChart := R81
999 [-]: SETGLOBAL R81 K480     ; 0xA8C840EC := R81
1000 [-]: CLOSURE   R81 139      ; R81 := closure(Function #140)
1001 [-]: CLOSURE   R82 140      ; R82 := closure(Function #141)
1002 [-]: MOVE      R0 R81       ; R0 := R81
1003 [-]: SETGLOBAL R82 K481     ; GetSaleInfo := R82
1004 [-]: SETGLOBAL R82 K482     ; 0xF6769A9 := R82
1005 [-]: NEWTABLE  R82 0 0      ; R82 := {}
1006 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1007 [-]: LOADK     R84 K483     ; R84 := "Item_Suits"
1008 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1009 [-]: MOVE      R84 R1       ; R84 := R1
1010 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1011 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1012 [-]: LOADK     R84 K484     ; R84 := "Item_LongGuns"
1013 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1014 [-]: MOVE      R84 R1       ; R84 := R1
1015 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1016 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1017 [-]: LOADK     R84 K485     ; R84 := "Item_Pistols"
1018 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1019 [-]: MOVE      R84 R1       ; R84 := R1
1020 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1021 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1022 [-]: LOADK     R84 K486     ; R84 := "Item_Melee"
1023 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1024 [-]: MOVE      R84 R1       ; R84 := R1
1025 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1026 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1027 [-]: LOADK     R84 K487     ; R84 := "Item_Sentinels"
1028 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1029 [-]: MOVE      R84 R1       ; R84 := R1
1030 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1031 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1032 [-]: LOADK     R84 K488     ; R84 := "Item_SentinelWeapons"
1033 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1034 [-]: MOVE      R84 R1       ; R84 := R1
1035 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1036 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1037 [-]: LOADK     R84 K489     ; R84 := "Item_WeaponSkins"
1038 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1039 [-]: MOVE      R84 R1       ; R84 := R1
1040 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1041 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1042 [-]: LOADK     R84 K490     ; R84 := "Item_FlavourItems"
1043 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1044 [-]: MOVE      R84 R1       ; R84 := R1
1045 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1046 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1047 [-]: LOADK     R84 K491     ; R84 := "Item_SpaceSuits"
1048 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1049 [-]: MOVE      R84 R1       ; R84 := R1
1050 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1051 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1052 [-]: LOADK     R84 K492     ; R84 := "Item_SpaceGuns"
1053 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1054 [-]: MOVE      R84 R1       ; R84 := R1
1055 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1056 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1057 [-]: LOADK     R84 K493     ; R84 := "Item_SpaceMelee"
1058 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1059 [-]: MOVE      R84 R1       ; R84 := R1
1060 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1061 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1062 [-]: LOADK     R84 K494     ; R84 := "Item_Recipes"
1063 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1064 [-]: MOVE      R84 R1       ; R84 := R1
1065 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1066 [-]: CLOSURE   R83 141      ; R83 := closure(Function #142)
1067 [-]: MOVE      R0 R82       ; R0 := R82
1068 [-]: CLOSURE   R84 142      ; R84 := closure(Function #143)
1069 [-]: MOVE      R0 R83       ; R0 := R83
1070 [-]: SETGLOBAL R84 K495     ; IsProratedPackageCategory := R84
1071 [-]: SETGLOBAL R84 K496     ; 0x74DF12BA := R84
1072 [-]: CLOSURE   R84 143      ; R84 := closure(Function #144)
1073 [-]: CLOSURE   R85 144      ; R85 := closure(Function #145)
1074 [-]: CLOSURE   R86 145      ; R86 := closure(Function #146)
1075 [-]: CLOSURE   R87 146      ; R87 := closure(Function #147)
1076 [-]: MOVE      R0 R84       ; R0 := R84
1077 [-]: MOVE      R0 R86       ; R0 := R86
1078 [-]: MOVE      R0 R85       ; R0 := R85
1079 [-]: CLOSURE   R88 147      ; R88 := closure(Function #148)
1080 [-]: MOVE      R0 R87       ; R0 := R87
1081 [-]: SETGLOBAL R88 K497     ; BinarySearch := R88
1082 [-]: SETGLOBAL R88 K498     ; 0x8DDCFB59 := R88
1083 [-]: CLOSURE   R88 148      ; R88 := closure(Function #149)
1084 [-]: CLOSURE   R89 149      ; R89 := closure(Function #150)
1085 [-]: MOVE      R0 R83       ; R0 := R83
1086 [-]: MOVE      R0 R87       ; R0 := R87
1087 [-]: MOVE      R0 R88       ; R0 := R88
1088 [-]: CLOSURE   R90 150      ; R90 := closure(Function #151)
1089 [-]: MOVE      R0 R89       ; R0 := R89
1090 [-]: SETGLOBAL R90 K499     ; ShouldGiveFromPackage := R90
1091 [-]: SETGLOBAL R90 K500     ; 0xC6B90DAD := R90
1092 [-]: CLOSURE   R90 151      ; R90 := closure(Function #152)
1093 [-]: MOVE      R0 R20       ; R0 := R20
1094 [-]: SETGLOBAL R90 K501     ; ProratedBundlesEnabled := R90
1095 [-]: SETGLOBAL R90 K502     ; 0x32D02883 := R90
1096 [-]: CLOSURE   R90 152      ; R90 := closure(Function #153)
1097 [-]: MOVE      R0 R6        ; R0 := R6
1098 [-]: MOVE      R0 R28       ; R0 := R28
1099 [-]: MOVE      R0 R29       ; R0 := R29
1100 [-]: MOVE      R0 R81       ; R0 := R81
1101 [-]: MOVE      R0 R20       ; R0 := R20
1102 [-]: MOVE      R0 R89       ; R0 := R89
1103 [-]: MOVE      R0 R90       ; R0 := R90
1104 [-]: CLOSURE   R91 153      ; R91 := closure(Function #154)
1105 [-]: MOVE      R0 R90       ; R0 := R90
1106 [-]: SETGLOBAL R91 K503     ; GetStoreItemPrice := R91
1107 [-]: SETGLOBAL R91 K504     ; 0xC5BE56F := R91
1108 [-]: NEWTABLE  R91 8 0      ; R91 := {}
1109 [-]: LOADK     R92 K505     ; R92 := "/Lotus/Language/Menu/AP_UNIVERSAL"
1110 [-]: LOADK     R93 K506     ; R93 := "/Lotus/Language/Menu/AP_ATTACK"
1111 [-]: LOADK     R94 K507     ; R94 := "/Lotus/Language/Menu/AP_DEFENSE"
1112 [-]: LOADK     R95 K508     ; R95 := "/Lotus/Language/Menu/AP_TACTIC"
1113 [-]: LOADK     R96 K509     ; R96 := "/Lotus/Language/Menu/AP_POWER"
1114 [-]: LOADK     R97 K510     ; R97 := "/Lotus/Language/Menu/AP_PRECEPT"
1115 [-]: LOADK     R98 K511     ; R98 := "/Lotus/Language/Menu/AP_FUSION"
1116 [-]: LOADK     R99 K512     ; R99 := "/Lotus/Language/Menu/AP_WARD"
1117 [-]: SETLIST   R91 8 1      ; R91[(1-1)*FPF+i] := R(91+i), 1 <= i <= 8
1118 [-]: CLOSURE   R92 154      ; R92 := closure(Function #155)
1119 [-]: MOVE      R0 R91       ; R0 := R91
1120 [-]: SETGLOBAL R92 K513     ; GetPolarityName := R92
1121 [-]: SETGLOBAL R92 K514     ; 0xCB51F14 := R92
1122 [-]: CLOSURE   R92 155      ; R92 := closure(Function #156)
1123 [-]: SETGLOBAL R92 K515     ; GetPVPEloRatingForRank := R92
1124 [-]: SETGLOBAL R92 K516     ; 0x16FF1D4B := R92
1125 [-]: CLOSURE   R92 156      ; R92 := closure(Function #157)
1126 [-]: MOVE      R0 R37       ; R0 := R37
1127 [-]: CLOSURE   R93 157      ; R93 := closure(Function #158)
1128 [-]: MOVE      R0 R92       ; R0 := R92
1129 [-]: SETGLOBAL R93 K517     ; GetPlayerEloRating := R93
1130 [-]: SETGLOBAL R93 K518     ; 0xDE3B6CC2 := R93
1131 [-]: CLOSURE   R93 158      ; R93 := closure(Function #159)
1132 [-]: MOVE      R0 R22       ; R0 := R22
1133 [-]: MOVE      R0 R4        ; R0 := R4
1134 [-]: MOVE      R0 R93       ; R0 := R93
1135 [-]: CLOSURE   R94 159      ; R94 := closure(Function #160)
1136 [-]: MOVE      R0 R93       ; R0 := R93
1137 [-]: SETGLOBAL R94 K519     ; FilterStatusEntity := R94
1138 [-]: SETGLOBAL R94 K520     ; 0xABC89504 := R94
1139 [-]: CLOSURE   R94 160      ; R94 := closure(Function #161)
1140 [-]: MOVE      R0 R13       ; R0 := R13
1141 [-]: CLOSURE   R95 161      ; R95 := closure(Function #162)
1142 [-]: MOVE      R0 R94       ; R0 := R94
1143 [-]: SETGLOBAL R95 K521     ; GetAllPurchasedItems := R95
1144 [-]: SETGLOBAL R95 K522     ; 0x807BEC79 := R95
1145 [-]: CLOSURE   R95 162      ; R95 := closure(Function #163)
1146 [-]: MOVE      R0 R13       ; R0 := R13
1147 [-]: MOVE      R0 R2        ; R0 := R2
1148 [-]: MOVE      R0 R3        ; R0 := R3
1149 [-]: CLOSURE   R96 163      ; R96 := closure(Function #164)
1150 [-]: MOVE      R0 R13       ; R0 := R13
1151 [-]: MOVE      R0 R95       ; R0 := R95
1152 [-]: SETGLOBAL R96 K523     ; GetRewardDesc := R96
1153 [-]: SETGLOBAL R96 K524     ; 0xF030C338 := R96
1154 [-]: CLOSURE   R96 164      ; R96 := closure(Function #165)
1155 [-]: CLOSURE   R97 165      ; R97 := closure(Function #166)
1156 [-]: MOVE      R0 R96       ; R0 := R96
1157 [-]: SETGLOBAL R97 K525     ; GetRecipeIconTexture := R97
1158 [-]: SETGLOBAL R97 K526     ; 0xBCAEB02 := R97
1159 [-]: CLOSURE   R97 166      ; R97 := closure(Function #167)
1160 [-]: MOVE      R0 R96       ; R0 := R96
1161 [-]: SETGLOBAL R97 K527     ; GetRewardIcon := R97
1162 [-]: SETGLOBAL R97 K528     ; 0x7B442AEF := R97
1163 [-]: CLOSURE   R97 167      ; R97 := closure(Function #168)
1164 [-]: MOVE      R0 R96       ; R0 := R96
1165 [-]: SETGLOBAL R97 K529     ; GetRewardIcons := R97
1166 [-]: SETGLOBAL R97 K530     ; 0xD24950E2 := R97
1167 [-]: CLOSURE   R97 168      ; R97 := closure(Function #169)
1168 [-]: MOVE      R0 R0        ; R0 := R0
1169 [-]: SETGLOBAL R97 K531     ; GetDamageTypeTag := R97
1170 [-]: SETGLOBAL R97 K532     ; 0xF02938BA := R97
1171 [-]: CLOSURE   R97 169      ; R97 := closure(Function #170)
1172 [-]: SETGLOBAL R97 K533     ; GetRecoveryMissionInfo := R97
1173 [-]: SETGLOBAL R97 K534     ; 0x61B8E52A := R97
1174 [-]: CLOSURE   R97 170      ; R97 := closure(Function #171)
1175 [-]: SETGLOBAL R97 K535     ; FormatGoalPercentage := R97
1176 [-]: SETGLOBAL R97 K536     ; 0x90BB414A := R97
1177 [-]: CLOSURE   R97 171      ; R97 := closure(Function #172)
1178 [-]: MOVE      R0 R13       ; R0 := R13
1179 [-]: CLOSURE   R98 172      ; R98 := closure(Function #173)
1180 [-]: MOVE      R0 R97       ; R0 := R97
1181 [-]: SETGLOBAL R98 K537     ; AvatarLight := R98
1182 [-]: SETGLOBAL R98 K538     ; 0x3FA0ED79 := R98
1183 [-]: CLOSURE   R98 173      ; R98 := closure(Function #174)
1184 [-]: MOVE      R0 R37       ; R0 := R37
1185 [-]: MOVE      R0 R97       ; R0 := R97
1186 [-]: SETGLOBAL R98 K539     ; MakeMainMenuAvatarKneel := R98
1187 [-]: SETGLOBAL R98 K540     ; 0x41EE5D76 := R98
1188 [-]: CLOSURE   R98 174      ; R98 := closure(Function #175)
1189 [-]: MOVE      R0 R92       ; R0 := R92
1190 [-]: SETGLOBAL R98 K541     ; OnSaveLoadOutCompleteCommon := R98
1191 [-]: SETGLOBAL R98 K542     ; 0x7E7C6700 := R98
1192 [-]: CLOSURE   R98 175      ; R98 := closure(Function #176)
1193 [-]: SETGLOBAL R98 K543     ; MakeLevelItemString := R98
1194 [-]: SETGLOBAL R98 K544     ; 0xCA0021ED := R98
1195 [-]: CLOSURE   R98 176      ; R98 := closure(Function #177)
1196 [-]: SETGLOBAL R98 K545     ; IsHarvestedOrBranded := R98
1197 [-]: SETGLOBAL R98 K546     ; 0x1D5A1B3A := R98
1198 [-]: LOADNIL   R98 R98      ; R98 := nil
1199 [-]: CLOSURE   R99 177      ; R99 := closure(Function #178)
1200 [-]: MOVE      R0 R98       ; R0 := R98
1201 [-]: SETGLOBAL R99 K547     ; GetUIMode := R99
1202 [-]: SETGLOBAL R99 K548     ; 0x84DCC428 := R99
1203 [-]: CLOSURE   R99 178      ; R99 := closure(Function #179)
1204 [-]: CLOSURE   R100 179     ; R100 := closure(Function #180)
1205 [-]: MOVE      R0 R99       ; R0 := R99
1206 [-]: SETGLOBAL R100 K549    ; ShowInputDialog := R100
1207 [-]: SETGLOBAL R100 K550    ; 0x3F74D42B := R100
1208 [-]: CLOSURE   R100 180     ; R100 := closure(Function #181)
1209 [-]: SETGLOBAL R100 K551    ; GetMaxAllianceMemberCount := R100
1210 [-]: SETGLOBAL R100 K552    ; 0x6248034 := R100
1211 [-]: CLOSURE   R100 181     ; R100 := closure(Function #182)
1212 [-]: CLOSURE   R101 182     ; R101 := closure(Function #183)
1213 [-]: MOVE      R0 R100      ; R0 := R100
1214 [-]: SETGLOBAL R101 K553    ; GetNodeAlertMissionInfo := R101
1215 [-]: SETGLOBAL R101 K554    ; 0xCC771CB3 := R101
1216 [-]: CLOSURE   R101 183     ; R101 := closure(Function #184)
1217 [-]: CLOSURE   R102 184     ; R102 := closure(Function #185)
1218 [-]: MOVE      R0 R101      ; R0 := R101
1219 [-]: SETGLOBAL R102 K555    ; GetInvasionInfo := R102
1220 [-]: SETGLOBAL R102 K556    ; 0x18FE37C1 := R102
1221 [-]: CLOSURE   R102 185     ; R102 := closure(Function #186)
1222 [-]: CLOSURE   R103 186     ; R103 := closure(Function #187)
1223 [-]: MOVE      R0 R102      ; R0 := R102
1224 [-]: SETGLOBAL R103 K557    ; GetGoalInfo := R103
1225 [-]: SETGLOBAL R103 K558    ; 0x6025593A := R103
1226 [-]: CLOSURE   R103 187     ; R103 := closure(Function #188)
1227 [-]: CLOSURE   R104 188     ; R104 := closure(Function #189)
1228 [-]: MOVE      R0 R103      ; R0 := R103
1229 [-]: SETGLOBAL R104 K559    ; GetEventTexture := R104
1230 [-]: SETGLOBAL R104 K560    ; 0xC192E91A := R104
1231 [-]: CLOSURE   R104 189     ; R104 := closure(Function #190)
1232 [-]: MOVE      R0 R23       ; R0 := R23
1233 [-]: CLOSURE   R105 190     ; R105 := closure(Function #191)
1234 [-]: MOVE      R0 R104      ; R0 := R104
1235 [-]: SETGLOBAL R105 K561    ; GetMissionTypeName := R105
1236 [-]: SETGLOBAL R105 K562    ; 0x87B2D555 := R105
1237 [-]: CLOSURE   R105 191     ; R105 := closure(Function #192)
1238 [-]: CLOSURE   R106 192     ; R106 := closure(Function #193)
1239 [-]: MOVE      R0 R105      ; R0 := R105
1240 [-]: SETGLOBAL R106 K563    ; GetLocalizedFactionName := R106
1241 [-]: SETGLOBAL R106 K564    ; 0x6DE11B4D := R106
1242 [-]: CLOSURE   R106 193     ; R106 := closure(Function #194)
1243 [-]: MOVE      R0 R103      ; R0 := R103
1244 [-]: CLOSURE   R107 194     ; R107 := closure(Function #195)
1245 [-]: MOVE      R0 R106      ; R0 := R106
1246 [-]: SETGLOBAL R107 K565    ; GetLocationTexture := R107
1247 [-]: SETGLOBAL R107 K566    ; 0x4DC7A4B9 := R107
1248 [-]: CLOSURE   R107 195     ; R107 := closure(Function #196)
1249 [-]: MOVE      R0 R105      ; R0 := R105
1250 [-]: CLOSURE   R108 196     ; R108 := closure(Function #197)
1251 [-]: MOVE      R0 R107      ; R0 := R107
1252 [-]: SETGLOBAL R108 K567    ; TryGetCrossfireDesc := R108
1253 [-]: SETGLOBAL R108 K568    ; 0x3BF74548 := R108
1254 [-]: CLOSURE   R108 197     ; R108 := closure(Function #198)
1255 [-]: MOVE      R0 R31       ; R0 := R31
1256 [-]: MOVE      R0 R100      ; R0 := R100
1257 [-]: MOVE      R0 R102      ; R0 := R102
1258 [-]: MOVE      R0 R11       ; R0 := R11
1259 [-]: MOVE      R0 R104      ; R0 := R104
1260 [-]: MOVE      R0 R101      ; R0 := R101
1261 [-]: MOVE      R0 R13       ; R0 := R13
1262 [-]: MOVE      R0 R106      ; R0 := R106
1263 [-]: MOVE      R0 R107      ; R0 := R107
1264 [-]: SETGLOBAL R108 K569    ; GetMissionInfo := R108
1265 [-]: SETGLOBAL R108 K570    ; 0x4A4041CA := R108
1266 [-]: CLOSURE   R108 198     ; R108 := closure(Function #199)
1267 [-]: SETGLOBAL R108 K571    ; ShowCombos := R108
1268 [-]: SETGLOBAL R108 K572    ; 0xB830D275 := R108
1269 [-]: CLOSURE   R108 199     ; R108 := closure(Function #200)
1270 [-]: SETGLOBAL R108 K573    ; GetMeleeStanceUpgradeInfo := R108
1271 [-]: SETGLOBAL R108 K574    ; 0x2CD7A8E8 := R108
1272 [-]: CLOSURE   R108 200     ; R108 := closure(Function #201)
1273 [-]: SETGLOBAL R108 K575    ; RemoveModsFromWeapon := R108
1274 [-]: SETGLOBAL R108 K576    ; 0x197C6456 := R108
1275 [-]: CLOSURE   R108 201     ; R108 := closure(Function #202)
1276 [-]: SETGLOBAL R108 K577    ; GetGameModeTexture := R108
1277 [-]: SETGLOBAL R108 K578    ; 0x19CF2844 := R108
1278 [-]: CLOSURE   R108 202     ; R108 := closure(Function #203)
1279 [-]: CLOSURE   R109 203     ; R109 := closure(Function #204)
1280 [-]: MOVE      R0 R108      ; R0 := R108
1281 [-]: SETGLOBAL R109 K579    ; GetQuestInfo := R109
1282 [-]: SETGLOBAL R109 K580    ; 0x68C19111 := R109
1283 [-]: CLOSURE   R27 204      ; R27 := closure(Function #205)
1284 [-]: MOVE      R0 R108      ; R0 := R108
1285 [-]: CLOSURE   R109 205     ; R109 := closure(Function #206)
1286 [-]: MOVE      R0 R27       ; R0 := R27
1287 [-]: SETGLOBAL R109 K581    ; GetActiveQuest := R109
1288 [-]: SETGLOBAL R109 K582    ; 0x52C8784B := R109
1289 [-]: CLOSURE   R109 206     ; R109 := closure(Function #207)
1290 [-]: MOVE      R0 R13       ; R0 := R13
1291 [-]: MOVE      R0 R40       ; R0 := R40
1292 [-]: SETGLOBAL R109 K583    ; GetAllKeys := R109
1293 [-]: SETGLOBAL R109 K584    ; 0x7B440FBB := R109
1294 [-]: CLOSURE   R109 207     ; R109 := closure(Function #208)
1295 [-]: MOVE      R0 R13       ; R0 := R13
1296 [-]: MOVE      R0 R76       ; R0 := R76
1297 [-]: SETGLOBAL R109 K585    ; UpdateUIConsoleTriggers := R109
1298 [-]: SETGLOBAL R109 K586    ; 0xB0E29C2B := R109
1299 [-]: CLOSURE   R109 208     ; R109 := closure(Function #209)
1300 [-]: SETGLOBAL R109 K587    ; DoesStringContainAllDigits := R109
1301 [-]: SETGLOBAL R109 K588    ; 0x7F92A1F1 := R109
1302 [-]: CLOSURE   R109 209     ; R109 := closure(Function #210)
1303 [-]: SETGLOBAL R109 K589    ; UpdateHeadTracking := R109
1304 [-]: SETGLOBAL R109 K590    ; 0x7D9577DB := R109
1305 [-]: CLOSURE   R109 210     ; R109 := closure(Function #211)
1306 [-]: MOVE      R0 R48       ; R0 := R48
1307 [-]: SETGLOBAL R109 K591    ; GetUnlockedNavFeatures := R109
1308 [-]: SETGLOBAL R109 K592    ; 0x8217C048 := R109
1309 [-]: CLOSURE   R109 211     ; R109 := closure(Function #212)
1310 [-]: MOVE      R0 R13       ; R0 := R13
1311 [-]: SETGLOBAL R109 K593    ; SetUpInWorldPanel := R109
1312 [-]: SETGLOBAL R109 K594    ; 0xFED4DB22 := R109
1313 [-]: CLOSURE   R109 212     ; R109 := closure(Function #213)
1314 [-]: SETGLOBAL R109 K595    ; LinearToSRGB := R109
1315 [-]: SETGLOBAL R109 K596    ; 0x16076AC5 := R109
1316 [-]: CLOSURE   R109 213     ; R109 := closure(Function #214)
1317 [-]: SETGLOBAL R109 K597    ; SRGBToLinear := R109
1318 [-]: SETGLOBAL R109 K598    ; 0x767F3616 := R109
1319 [-]: LOADNIL   R109 R109    ; R109 := nil
1320 [-]: CLOSURE   R110 214     ; R110 := closure(Function #215)
1321 [-]: MOVE      R0 R31       ; R0 := R31
1322 [-]: MOVE      R0 R109      ; R0 := R109
1323 [-]: CLOSURE   R111 215     ; R111 := closure(Function #216)
1324 [-]: MOVE      R0 R110      ; R0 := R110
1325 [-]: SETGLOBAL R111 K599    ; LocalizePolarities := R111
1326 [-]: SETGLOBAL R111 K600    ; 0xA141F573 := R111
1327 [-]: CLOSURE   R111 216     ; R111 := closure(Function #217)
1328 [-]: MOVE      R0 R109      ; R0 := R109
1329 [-]: MOVE      R0 R110      ; R0 := R110
1330 [-]: SETGLOBAL R111 K601    ; GetTagForPolarity := R111
1331 [-]: SETGLOBAL R111 K602    ; 0x4E0FA551 := R111
1332 [-]: CLOSURE   R111 217     ; R111 := closure(Function #218)
1333 [-]: SETGLOBAL R111 K603    ; ShowQuestCompleted := R111
1334 [-]: SETGLOBAL R111 K604    ; 0x5473C024 := R111
1335 [-]: CLOSURE   R111 218     ; R111 := closure(Function #219)
1336 [-]: MOVE      R0 R13       ; R0 := R13
1337 [-]: SETGLOBAL R111 K605    ; ApplyGenericBackerMaterial := R111
1338 [-]: SETGLOBAL R111 K606    ; 0xA539AE46 := R111
1339 [-]: CLOSURE   R111 219     ; R111 := closure(Function #220)
1340 [-]: MOVE      R0 R13       ; R0 := R13
1341 [-]: CLOSURE   R112 220     ; R112 := closure(Function #221)
1342 [-]: MOVE      R0 R111      ; R0 := R111
1343 [-]: SETGLOBAL R112 K607    ; GetReputationInfoForSyndicate := R112
1344 [-]: SETGLOBAL R112 K608    ; 0x171EF3D3 := R112
1345 [-]: CLOSURE   R112 221     ; R112 := closure(Function #222)
1346 [-]: MOVE      R0 R111      ; R0 := R111
1347 [-]: CLOSURE   R113 222     ; R113 := closure(Function #223)
1348 [-]: MOVE      R0 R13       ; R0 := R13
1349 [-]: SETGLOBAL R113 K609    ; DrawItem := R113
1350 [-]: SETGLOBAL R113 K610    ; 0x323C4EEF := R113
1351 [-]: CLOSURE   R113 223     ; R113 := closure(Function #224)
1352 [-]: SETGLOBAL R113 K611    ; GetDailyDeal := R113
1353 [-]: SETGLOBAL R113 K612    ; 0x88466559 := R113
1354 [-]: CLOSURE   R113 224     ; R113 := closure(Function #225)
1355 [-]: SETGLOBAL R113 K613    ; GetLocalizedItemName := R113
1356 [-]: SETGLOBAL R113 K614    ; 0xE0E8215D := R113
1357 [-]: CLOSURE   R113 225     ; R113 := closure(Function #226)
1358 [-]: SETGLOBAL R113 K615    ; OpenTrainingMission := R113
1359 [-]: SETGLOBAL R113 K616    ; 0xE5BC9072 := R113
1360 [-]: CLOSURE   R113 226     ; R113 := closure(Function #227)
1361 [-]: CLOSURE   R114 227     ; R114 := closure(Function #228)
1362 [-]: MOVE      R0 R113      ; R0 := R113
1363 [-]: SETGLOBAL R114 K617    ; GetTrainingRetryPlatinumCost := R114
1364 [-]: SETGLOBAL R114 K618    ; 0x6652B1E1 := R114
1365 [-]: CLOSURE   R114 228     ; R114 := closure(Function #229)
1366 [-]: MOVE      R0 R34       ; R0 := R34
1367 [-]: MOVE      R0 R113      ; R0 := R113
1368 [-]: SETGLOBAL R114 K619    ; CanRankUp := R114
1369 [-]: SETGLOBAL R114 K620    ; 0x419A9335 := R114
1370 [-]: CLOSURE   R114 229     ; R114 := closure(Function #230)
1371 [-]: CLOSURE   R115 230     ; R115 := closure(Function #231)
1372 [-]: MOVE      R0 R13       ; R0 := R13
1373 [-]: MOVE      R0 R114      ; R0 := R114
1374 [-]: SETGLOBAL R115 K621    ; OnChallengePassed := R115
1375 [-]: SETGLOBAL R115 K622    ; 0xA083E74B := R115
1376 [-]: CLOSURE   R115 231     ; R115 := closure(Function #232)
1377 [-]: SETGLOBAL R115 K623    ; GetFriendlyPlayers := R115
1378 [-]: SETGLOBAL R115 K624    ; 0xFFE2E560 := R115
1379 [-]: CLOSURE   R115 232     ; R115 := closure(Function #233)
1380 [-]: CLOSURE   R116 233     ; R116 := closure(Function #234)
1381 [-]: MOVE      R0 R115      ; R0 := R115
1382 [-]: SETGLOBAL R116 K625    ; GetLoadoutPresetName := R116
1383 [-]: SETGLOBAL R116 K626    ; 0xF9C9C5E0 := R116
1384 [-]: CLOSURE   R116 234     ; R116 := closure(Function #235)
1385 [-]: MOVE      R0 R27       ; R0 := R27
1386 [-]: MOVE      R0 R47       ; R0 := R47
1387 [-]: MOVE      R0 R48       ; R0 := R48
1388 [-]: SETGLOBAL R116 K627    ; UpdateQuests := R116
1389 [-]: SETGLOBAL R116 K628    ; 0xAC374B10 := R116
1390 [-]: CLOSURE   R116 235     ; R116 := closure(Function #236)
1391 [-]: MOVE      R0 R12       ; R0 := R12
1392 [-]: SETGLOBAL R116 K629    ; GetScanPointBones := R116
1393 [-]: SETGLOBAL R116 K630    ; 0x22AFC053 := R116
1394 [-]: CLOSURE   R116 236     ; R116 := closure(Function #237)
1395 [-]: MOVE      R0 R12       ; R0 := R12
1396 [-]: SETGLOBAL R116 K631    ; MaxScanPointBones := R116
1397 [-]: SETGLOBAL R116 K632    ; 0x103D4551 := R116
1398 [-]: CLOSURE   R116 237     ; R116 := closure(Function #238)
1399 [-]: SETGLOBAL R116 K633    ; RayCastForScanPoints := R116
1400 [-]: SETGLOBAL R116 K634    ; 0x48D69274 := R116
1401 [-]: CLOSURE   R116 238     ; R116 := closure(Function #239)
1402 [-]: CLOSURE   R117 239     ; R117 := closure(Function #240)
1403 [-]: MOVE      R0 R116      ; R0 := R116
1404 [-]: SETGLOBAL R117 K635    ; HasPvpCompatibleGear := R117
1405 [-]: SETGLOBAL R117 K636    ; 0xFD8F5603 := R117
1406 [-]: CLOSURE   R117 240     ; R117 := closure(Function #241)
1407 [-]: MOVE      R0 R13       ; R0 := R13
1408 [-]: SETGLOBAL R117 K637    ; AdjustBluerSize := R117
1409 [-]: SETGLOBAL R117 K638    ; 0xBB4CFBEF := R117
1410 [-]: CLOSURE   R117 241     ; R117 := closure(Function #242)
1411 [-]: SETGLOBAL R117 K639    ; GetInputCameraRotation := R117
1412 [-]: SETGLOBAL R117 K640    ; 0xA28A41D := R117
1413 [-]: CLOSURE   R117 242     ; R117 := closure(Function #243)
1414 [-]: MOVE      R0 R31       ; R0 := R31
1415 [-]: SETGLOBAL R117 K641    ; ViewConsoleProfile := R117
1416 [-]: SETGLOBAL R117 K642    ; 0xB0D93769 := R117
1417 [-]: CLOSURE   R117 243     ; R117 := closure(Function #244)
1418 [-]: SETGLOBAL R117 K643    ; GetCurrentPurchaseSource := R117
1419 [-]: SETGLOBAL R117 K644    ; 0xC30DEA7B := R117
1420 [-]: CLOSURE   R29 244      ; R29 := closure(Function #245)
1421 [-]: CLOSURE   R117 245     ; R117 := closure(Function #246)
1422 [-]: MOVE      R0 R29       ; R0 := R29
1423 [-]: SETGLOBAL R117 K645    ; GetPriceWithCoupon := R117
1424 [-]: SETGLOBAL R117 K646    ; 0x4077344E := R117
1425 [-]: CLOSURE   R117 246     ; R117 := closure(Function #247)
1426 [-]: SETGLOBAL R117 K647    ; GetCouponName := R117
1427 [-]: SETGLOBAL R117 K648    ; 0x5E05D17A := R117
1428 [-]: CLOSURE   R28 247      ; R28 := closure(Function #248)
1429 [-]: CLOSURE   R117 248     ; R117 := closure(Function #249)
1430 [-]: MOVE      R0 R28       ; R0 := R28
1431 [-]: SETGLOBAL R117 K649    ; PopulateCouponInfo := R117
1432 [-]: SETGLOBAL R117 K650    ; 0x38523E08 := R117
1433 [-]: CLOSURE   R117 249     ; R117 := closure(Function #250)
1434 [-]: MOVE      R0 R1        ; R0 := R1
1435 [-]: CLOSURE   R118 250     ; R118 := closure(Function #251)
1436 [-]: MOVE      R0 R117      ; R0 := R117
1437 [-]: SETGLOBAL R118 K651    ; GetAvailableColourPickers := R118
1438 [-]: SETGLOBAL R118 K652    ; 0x2F28E7A1 := R118
1439 [-]: CLOSURE   R118 251     ; R118 := closure(Function #252)
1440 [-]: MOVE      R0 R117      ; R0 := R117
1441 [-]: SETGLOBAL R118 K653    ; GetRandomColorPalette := R118
1442 [-]: SETGLOBAL R118 K654    ; 0x6925D1CA := R118
1443 [-]: CLOSURE   R118 252     ; R118 := closure(Function #253)
1444 [-]: MOVE      R0 R111      ; R0 := R111
1445 [-]: CLOSURE   R119 253     ; R119 := closure(Function #254)
1446 [-]: MOVE      R0 R118      ; R0 := R118
1447 [-]: SETGLOBAL R119 K655    ; GetPvPLoadoutCapacity := R119
1448 [-]: SETGLOBAL R119 K656    ; 0x54387620 := R119
1449 [-]: CLOSURE   R119 254     ; R119 := closure(Function #255)
1450 [-]: MOVE      R0 R87       ; R0 := R87
1451 [-]: MOVE      R0 R88       ; R0 := R88
1452 [-]: SETGLOBAL R119 K657    ; GetRecipesOwned := R119
1453 [-]: SETGLOBAL R119 K658    ; 0x60DD7E3F := R119
1454 [-]: CLOSURE   R119 255     ; R119 := closure(Function #256)
1455 [-]: MOVE      R0 R83       ; R0 := R83
1456 [-]: MOVE      R0 R89       ; R0 := R89
1457 [-]: MOVE      R0 R20       ; R0 := R20
1458 [-]: MOVE      R0 R90       ; R0 := R90
1459 [-]: MOVE      R0 R87       ; R0 := R87
1460 [-]: MOVE      R0 R88       ; R0 := R88
1461 [-]: MOVE      R0 R6        ; R0 := R6
1462 [-]: MOVE      R0 R118      ; R0 := R118
1463 [-]: SETGLOBAL R119 K659    ; GetNumOwned := R119
1464 [-]: SETGLOBAL R119 K660    ; 0xEEECC310 := R119
1465 [-]: CLOSURE   R119 256     ; R119 := closure(Function #257)
1466 [-]: SETGLOBAL R119 K661    ; GetImageDimansionsFromName := R119
1467 [-]: SETGLOBAL R119 K662    ; 0xA4DBD566 := R119
1468 [-]: CLOSURE   R119 257     ; R119 := closure(Function #258)
1469 [-]: SETGLOBAL R119 K663    ; VerifyInventorySlots := R119
1470 [-]: SETGLOBAL R119 K664    ; 0x32D8500E := R119
1471 [-]: CLOSURE   R119 258     ; R119 := closure(Function #259)
1472 [-]: MOVE      R0 R13       ; R0 := R13
1473 [-]: SETGLOBAL R119 K665    ; ShowInvalidBinError := R119
1474 [-]: SETGLOBAL R119 K666    ; 0x9EAA2F2A := R119
1475 [-]: CLOSURE   R119 259     ; R119 := closure(Function #260)
1476 [-]: SETGLOBAL R119 K667    ; GetProductTimeLeft := R119
1477 [-]: SETGLOBAL R119 K668    ; 0xC698B2E2 := R119
1478 [-]: CLOSURE   R119 260     ; R119 := closure(Function #261)
1479 [-]: SETGLOBAL R119 K669    ; IsProductExpired := R119
1480 [-]: SETGLOBAL R119 K670    ; 0x6FF3E228 := R119
1481 [-]: NEWTABLE  R119 0 10    ; R119 := {}
1482 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1483 [-]: LOADK     R121 K672    ; R121 := "AP_UNIVERSAL"
1484 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1485 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1486 [-]: SETTABLE  R121 K76 K209; R121["Name"] := ""
1487 [-]: LOADK     R122 K673    ; R122 := "Icon"
1488 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1489 [-]: LOADK     R122 K674    ; R122 := "Ability"
1490 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1491 [-]: LOADK     R122 K675    ; R122 := "Lens"
1492 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1493 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1494 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1495 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1496 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1497 [-]: LOADK     R121 K677    ; R121 := "AP_ATTACK"
1498 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1499 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1500 [-]: LOADK     R122 K678    ; R122 := "TennoWay_Madurai"
1501 [-]: SETTABLE  R121 K76 R122; R121["Name"] := R122
1502 [-]: LOADK     R122 K673    ; R122 := "Icon"
1503 [-]: LOADK     R123 K679    ; R123 := "FocusLensMadurai.png"
1504 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1505 [-]: LOADK     R122 K674    ; R122 := "Ability"
1506 [-]: LOADK     R123 K680    ; R123 := "/Lotus/Upgrades/Focus/Attack/AttackFocusAbility"
1507 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1508 [-]: LOADK     R122 K675    ; R122 := "Lens"
1509 [-]: LOADK     R123 K681    ; R123 := "MADURAI"
1510 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1511 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1512 [-]: LOADK     R123 K682    ; R123 := "/Lotus/Language/Game/TennoWay_Madurai"
1513 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1514 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1515 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1516 [-]: LOADK     R121 K683    ; R121 := "AP_DEFENSE"
1517 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1518 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1519 [-]: LOADK     R122 K684    ; R122 := "TennoWay_Vazarin"
1520 [-]: SETTABLE  R121 K76 R122; R121["Name"] := R122
1521 [-]: LOADK     R122 K673    ; R122 := "Icon"
1522 [-]: LOADK     R123 K685    ; R123 := "FocusLensVazarin.png"
1523 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1524 [-]: LOADK     R122 K674    ; R122 := "Ability"
1525 [-]: LOADK     R123 K686    ; R123 := "/Lotus/Upgrades/Focus/Defense/DefenseFocusAbility"
1526 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1527 [-]: LOADK     R122 K675    ; R122 := "Lens"
1528 [-]: LOADK     R123 K687    ; R123 := "VAZARIN"
1529 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1530 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1531 [-]: LOADK     R123 K688    ; R123 := "/Lotus/Language/Game/TennoWay_Vazarin"
1532 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1533 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1534 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1535 [-]: LOADK     R121 K689    ; R121 := "AP_TACTIC"
1536 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1537 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1538 [-]: LOADK     R122 K690    ; R122 := "TennoWay_Naramon"
1539 [-]: SETTABLE  R121 K76 R122; R121["Name"] := R122
1540 [-]: LOADK     R122 K673    ; R122 := "Icon"
1541 [-]: LOADK     R123 K691    ; R123 := "FocusLensNaramon.png"
1542 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1543 [-]: LOADK     R122 K674    ; R122 := "Ability"
1544 [-]: LOADK     R123 K692    ; R123 := "/Lotus/Upgrades/Focus/Tactic/TacticFocusAbility"
1545 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1546 [-]: LOADK     R122 K675    ; R122 := "Lens"
1547 [-]: LOADK     R123 K693    ; R123 := "NARAMON"
1548 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1549 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1550 [-]: LOADK     R123 K694    ; R123 := "/Lotus/Language/Game/TennoWay_Naramon"
1551 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1552 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1553 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1554 [-]: LOADK     R121 K695    ; R121 := "AP_POWER"
1555 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1556 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1557 [-]: LOADK     R122 K696    ; R122 := "TennoWay_Zenurik"
1558 [-]: SETTABLE  R121 K76 R122; R121["Name"] := R122
1559 [-]: LOADK     R122 K673    ; R122 := "Icon"
1560 [-]: LOADK     R123 K697    ; R123 := "FocusLensZenurik.png"
1561 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1562 [-]: LOADK     R122 K674    ; R122 := "Ability"
1563 [-]: LOADK     R123 K698    ; R123 := "/Lotus/Upgrades/Focus/Power/PowerFocusAbility"
1564 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1565 [-]: LOADK     R122 K675    ; R122 := "Lens"
1566 [-]: LOADK     R123 K699    ; R123 := "ZENURIK"
1567 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1568 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1569 [-]: LOADK     R123 K700    ; R123 := "/Lotus/Language/Game/TennoWay_Zenurik"
1570 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1571 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1572 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1573 [-]: LOADK     R121 K701    ; R121 := "AP_PRECEPT"
1574 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1575 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1576 [-]: SETTABLE  R121 K76 K209; R121["Name"] := ""
1577 [-]: LOADK     R122 K673    ; R122 := "Icon"
1578 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1579 [-]: LOADK     R122 K674    ; R122 := "Ability"
1580 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1581 [-]: LOADK     R122 K675    ; R122 := "Lens"
1582 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1583 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1584 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1585 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1586 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1587 [-]: LOADK     R121 K702    ; R121 := "AP_FUSION"
1588 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1589 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1590 [-]: SETTABLE  R121 K76 K209; R121["Name"] := ""
1591 [-]: LOADK     R122 K673    ; R122 := "Icon"
1592 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1593 [-]: LOADK     R122 K674    ; R122 := "Ability"
1594 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1595 [-]: LOADK     R122 K675    ; R122 := "Lens"
1596 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1597 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1598 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1599 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1600 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1601 [-]: LOADK     R121 K703    ; R121 := "AP_WARD"
1602 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1603 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1604 [-]: LOADK     R122 K704    ; R122 := "TennoWay_Unairu"
1605 [-]: SETTABLE  R121 K76 R122; R121["Name"] := R122
1606 [-]: LOADK     R122 K673    ; R122 := "Icon"
1607 [-]: LOADK     R123 K705    ; R123 := "FocusLensUnairu.png"
1608 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1609 [-]: LOADK     R122 K674    ; R122 := "Ability"
1610 [-]: LOADK     R123 K706    ; R123 := "/Lotus/Upgrades/Focus/Ward/WardFocusAbility"
1611 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1612 [-]: LOADK     R122 K675    ; R122 := "Lens"
1613 [-]: LOADK     R123 K707    ; R123 := "UNAIRU"
1614 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1615 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1616 [-]: LOADK     R123 K708    ; R123 := "/Lotus/Language/Game/TennoWay_Unairu"
1617 [-]: SETTABLE  R121 R122 R123; R121[R122] := R123
1618 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1619 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1620 [-]: LOADK     R121 K709    ; R121 := "AP_UMBRA"
1621 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1622 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1623 [-]: SETTABLE  R121 K76 K209; R121["Name"] := ""
1624 [-]: LOADK     R122 K673    ; R122 := "Icon"
1625 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1626 [-]: LOADK     R122 K674    ; R122 := "Ability"
1627 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1628 [-]: LOADK     R122 K675    ; R122 := "Lens"
1629 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1630 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1631 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1632 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1633 [-]: GETGLOBAL R120 K671    ; R120 := Lotus_Game
1634 [-]: LOADK     R121 K710    ; R121 := "AP_ANY"
1635 [-]: GETTABLE  R120 R120 R121; R120 := R120[R121]
1636 [-]: NEWTABLE  R121 0 5     ; R121 := {}
1637 [-]: SETTABLE  R121 K76 K209; R121["Name"] := ""
1638 [-]: LOADK     R122 K673    ; R122 := "Icon"
1639 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1640 [-]: LOADK     R122 K674    ; R122 := "Ability"
1641 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1642 [-]: LOADK     R122 K675    ; R122 := "Lens"
1643 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1644 [-]: LOADK     R122 K676    ; R122 := "Polarity"
1645 [-]: SETTABLE  R121 R122 K209; R121[R122] := ""
1646 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1647 [-]: CLOSURE   R120 261     ; R120 := closure(Function #262)
1648 [-]: MOVE      R0 R13       ; R0 := R13
1649 [-]: MOVE      R0 R119      ; R0 := R119
1650 [-]: SETGLOBAL R120 K711    ; GetPolarityInfoForLens := R120
1651 [-]: SETGLOBAL R120 K712    ; 0xC919C32B := R120
1652 [-]: CLOSURE   R120 262     ; R120 := closure(Function #263)
1653 [-]: MOVE      R0 R119      ; R0 := R119
1654 [-]: SETGLOBAL R120 K713    ; GetWayInfo := R120
1655 [-]: SETGLOBAL R120 K714    ; 0xC389B1EE := R120
1656 [-]: CLOSURE   R120 263     ; R120 := closure(Function #264)
1657 [-]: SETGLOBAL R120 K715    ; ClearOperatorLookAt := R120
1658 [-]: SETGLOBAL R120 K716    ; 0x16DE506A := R120
1659 [-]: CLOSURE   R120 264     ; R120 := closure(Function #265)
1660 [-]: SETGLOBAL R120 K717    ; UpdateOperatorLookAt := R120
1661 [-]: SETGLOBAL R120 K718    ; 0xADEB49A2 := R120
1662 [-]: CLOSURE   R120 265     ; R120 := closure(Function #266)
1663 [-]: SETGLOBAL R120 K719    ; IsDeluxeSkin := R120
1664 [-]: SETGLOBAL R120 K720    ; 0x9D00A93D := R120
1665 [-]: CLOSURE   R120 266     ; R120 := closure(Function #267)
1666 [-]: MOVE      R0 R13       ; R0 := R13
1667 [-]: SETGLOBAL R120 K721    ; SetupThreeColorText := R120
1668 [-]: SETGLOBAL R120 K722    ; 0xD106B633 := R120
1669 [-]: CLOSURE   R120 267     ; R120 := closure(Function #268)
1670 [-]: SETGLOBAL R120 K723    ; SetEnergyToTeamColor := R120
1671 [-]: SETGLOBAL R120 K724    ; 0xD6CCEE85 := R120
1672 [-]: CLOSURE   R120 268     ; R120 := closure(Function #269)
1673 [-]: SETGLOBAL R120 K725    ; InterruptTransmission := R120
1674 [-]: SETGLOBAL R120 K726    ; 0xD66C1755 := R120
1675 [-]: CLOSURE   R120 269     ; R120 := closure(Function #270)
1676 [-]: SETGLOBAL R120 K727    ; GetProductId := R120
1677 [-]: SETGLOBAL R120 K728    ; 0xC0822C0B := R120
1678 [-]: CLOSURE   R120 270     ; R120 := closure(Function #271)
1679 [-]: SETGLOBAL R120 K729    ; CheckSteamPurchaseAvailability := R120
1680 [-]: SETGLOBAL R120 K730    ; 0x9611A506 := R120
1681 [-]: CLOSURE   R120 271     ; R120 := closure(Function #272)
1682 [-]: SETGLOBAL R120 K731    ; CheckDiscordPurchaseAvailability := R120
1683 [-]: SETGLOBAL R120 K732    ; 0xCD7C310D := R120
1684 [-]: CLOSURE   R120 272     ; R120 := closure(Function #273)
1685 [-]: MOVE      R0 R13       ; R0 := R13
1686 [-]: SETGLOBAL R120 K733    ; GetTreasureName := R120
1687 [-]: SETGLOBAL R120 K734    ; 0x5D44A5BB := R120
1688 [-]: CLOSURE   R120 273     ; R120 := closure(Function #274)
1689 [-]: SETGLOBAL R120 K735    ; GetSecondCount := R120
1690 [-]: SETGLOBAL R120 K736    ; 0x4C78FB5D := R120
1691 [-]: CLOSURE   R120 274     ; R120 := closure(Function #275)
1692 [-]: CLOSURE   R121 275     ; R121 := closure(Function #276)
1693 [-]: MOVE      R0 R120      ; R0 := R120
1694 [-]: SETGLOBAL R121 K737    ; GetMinuteCount := R121
1695 [-]: SETGLOBAL R121 K738    ; 0x70CE4131 := R121
1696 [-]: CLOSURE   R121 276     ; R121 := closure(Function #277)
1697 [-]: CLOSURE   R122 277     ; R122 := closure(Function #278)
1698 [-]: MOVE      R0 R121      ; R0 := R121
1699 [-]: SETGLOBAL R122 K739    ; GetHourCount := R122
1700 [-]: SETGLOBAL R122 K740    ; 0xD79ED180 := R122
1701 [-]: CLOSURE   R122 278     ; R122 := closure(Function #279)
1702 [-]: CLOSURE   R123 279     ; R123 := closure(Function #280)
1703 [-]: MOVE      R0 R122      ; R0 := R122
1704 [-]: SETGLOBAL R123 K741    ; GetDayCount := R123
1705 [-]: SETGLOBAL R123 K742    ; 0x3CDA77B3 := R123
1706 [-]: CLOSURE   R123 280     ; R123 := closure(Function #281)
1707 [-]: SETGLOBAL R123 K743    ; GetWeekCount := R123
1708 [-]: SETGLOBAL R123 K744    ; 0xB831F903 := R123
1709 [-]: CLOSURE   R123 281     ; R123 := closure(Function #282)
1710 [-]: MOVE      R0 R122      ; R0 := R122
1711 [-]: SETGLOBAL R123 K745    ; RollForNightmareMutators := R123
1712 [-]: SETGLOBAL R123 K746    ; 0xECD82119 := R123
1713 [-]: CLOSURE   R24 282      ; R24 := closure(Function #283)
1714 [-]: CLOSURE   R123 283     ; R123 := closure(Function #284)
1715 [-]: MOVE      R0 R24       ; R0 := R24
1716 [-]: SETGLOBAL R123 K747    ; GetOmegaCards := R123
1717 [-]: SETGLOBAL R123 K748    ; 0x6E9EB0BA := R123
1718 [-]: CLOSURE   R25 284      ; R25 := closure(Function #285)
1719 [-]: MOVE      R0 R24       ; R0 := R24
1720 [-]: MOVE      R0 R26       ; R0 := R26
1721 [-]: CLOSURE   R123 285     ; R123 := closure(Function #286)
1722 [-]: MOVE      R0 R25       ; R0 := R25
1723 [-]: SETGLOBAL R123 K749    ; IsOverOmegaLimit := R123
1724 [-]: SETGLOBAL R123 K750    ; 0x10731BBC := R123
1725 [-]: CLOSURE   R26 286      ; R26 := closure(Function #287)
1726 [-]: CLOSURE   R123 287     ; R123 := closure(Function #288)
1727 [-]: MOVE      R0 R26       ; R0 := R26
1728 [-]: SETGLOBAL R123 K751    ; GetMaxOmegaCapacity := R123
1729 [-]: SETGLOBAL R123 K752    ; 0x7FBD8638 := R123
1730 [-]: CLOSURE   R123 288     ; R123 := closure(Function #289)
1731 [-]: CLOSURE   R124 289     ; R124 := closure(Function #290)
1732 [-]: MOVE      R0 R123      ; R0 := R123
1733 [-]: SETGLOBAL R124 K753    ; IsCurrentSuitInfestedEnoughToHeal := R124
1734 [-]: SETGLOBAL R124 K754    ; 0xDEF08D02 := R124
1735 [-]: CLOSURE   R124 290     ; R124 := closure(Function #291)
1736 [-]: MOVE      R0 R123      ; R0 := R123
1737 [-]: SETGLOBAL R124 K755    ; IsCurrentSuitFullyInfested := R124
1738 [-]: SETGLOBAL R124 K756    ; 0x844C0E68 := R124
1739 [-]: CLOSURE   R124 291     ; R124 := closure(Function #292)
1740 [-]: SETGLOBAL R124 K757    ; ShowTradeUI := R124
1741 [-]: SETGLOBAL R124 K758    ; 0x2AA3C899 := R124
1742 [-]: CLOSURE   R124 292     ; R124 := closure(Function #293)
1743 [-]: SETGLOBAL R124 K759    ; UpdateScannerInfo := R124
1744 [-]: SETGLOBAL R124 K760    ; 0x6C965031 := R124
1745 [-]: CLOSURE   R124 293     ; R124 := closure(Function #294)
1746 [-]: SETGLOBAL R124 K761    ; SetFlashlightDimness := R124
1747 [-]: SETGLOBAL R124 K762    ; 0xC3F8AC06 := R124
1748 [-]: CLOSURE   R124 294     ; R124 := closure(Function #295)
1749 [-]: MOVE      R0 R13       ; R0 := R13
1750 [-]: SETGLOBAL R124 K763    ; GetRewardTextForMastery := R124
1751 [-]: SETGLOBAL R124 K764    ; 0x33E3EE5C := R124
1752 [-]: CLOSURE   R124 295     ; R124 := closure(Function #296)
1753 [-]: CLOSURE   R125 296     ; R125 := closure(Function #297)
1754 [-]: MOVE      R0 R39       ; R0 := R39
1755 [-]: MOVE      R0 R13       ; R0 := R13
1756 [-]: MOVE      R0 R124      ; R0 := R124
1757 [-]: CLOSURE   R126 297     ; R126 := closure(Function #298)
1758 [-]: MOVE      R0 R125      ; R0 := R125
1759 [-]: SETGLOBAL R126 K765    ; GetPresetInfo := R126
1760 [-]: SETGLOBAL R126 K766    ; 0xC03359B1 := R126
1761 [-]: CLOSURE   R126 298     ; R126 := closure(Function #299)
1762 [-]: SETGLOBAL R126 K767    ; GetClanEmblemPath := R126
1763 [-]: SETGLOBAL R126 K768    ; 0x71ACF9C := R126
1764 [-]: CLOSURE   R126 299     ; R126 := closure(Function #300)
1765 [-]: SETGLOBAL R126 K769    ; GetPersonalGoalProgress := R126
1766 [-]: SETGLOBAL R126 K770    ; 0x94A9020 := R126
1767 [-]: CLOSURE   R126 300     ; R126 := closure(Function #301)
1768 [-]: MOVE      R0 R48       ; R0 := R48
1769 [-]: SETGLOBAL R126 K771    ; HasRelayReconstructionEnemy := R126
1770 [-]: SETGLOBAL R126 K772    ; 0x4D87EDFA := R126
1771 [-]: CLOSURE   R126 301     ; R126 := closure(Function #302)
1772 [-]: SETGLOBAL R126 K773    ; ApplyWeaponRestriction := R126
1773 [-]: SETGLOBAL R126 K774    ; 0x77633D95 := R126
1774 [-]: CLOSURE   R126 302     ; R126 := closure(Function #303)
1775 [-]: SETGLOBAL R126 K775    ; ApplyModlessLoadout := R126
1776 [-]: SETGLOBAL R126 K776    ; 0xD1A36B88 := R126
1777 [-]: CLOSURE   R126 303     ; R126 := closure(Function #304)
1778 [-]: SETGLOBAL R126 K777    ; IsNoModsMode := R126
1779 [-]: SETGLOBAL R126 K778    ; 0xA88E08E0 := R126
1780 [-]: CLOSURE   R126 304     ; R126 := closure(Function #305)
1781 [-]: SETGLOBAL R126 K779    ; IsFirstTimeInNode := R126
1782 [-]: SETGLOBAL R126 K780    ; 0x83723959 := R126
1783 [-]: CLOSURE   R126 305     ; R126 := closure(Function #306)
1784 [-]: SETGLOBAL R126 K781    ; SetEquippingGearItem := R126
1785 [-]: SETGLOBAL R126 K782    ; 0xEFA456DB := R126
1786 [-]: CLOSURE   R126 306     ; R126 := closure(Function #307)
1787 [-]: SETGLOBAL R126 K783    ; IsEquippingGearItem := R126
1788 [-]: SETGLOBAL R126 K784    ; 0x228ADE := R126
1789 [-]: CLOSURE   R126 307     ; R126 := closure(Function #308)
1790 [-]: CLOSURE   R127 308     ; R127 := closure(Function #309)
1791 [-]: MOVE      R0 R126      ; R0 := R126
1792 [-]: SETGLOBAL R127 K785    ; GetShipDecoRoom := R127
1793 [-]: SETGLOBAL R127 K786    ; 0xCEC72B1B := R127
1794 [-]: CLOSURE   R127 309     ; R127 := closure(Function #310)
1795 [-]: SETGLOBAL R127 K787    ; ShowLoadoutSelectionMenu := R127
1796 [-]: SETGLOBAL R127 K788    ; 0xB4473481 := R127
1797 [-]: CLOSURE   R127 310     ; R127 := closure(Function #311)
1798 [-]: MOVE      R0 R30       ; R0 := R30
1799 [-]: SETGLOBAL R127 K789    ; GetTimeOfDayLabel := R127
1800 [-]: SETGLOBAL R127 K790    ; 0x447FCC2F := R127
1801 [-]: CLOSURE   R127 311     ; R127 := closure(Function #312)
1802 [-]: MOVE      R0 R30       ; R0 := R30
1803 [-]: SETGLOBAL R127 K791    ; CalculateTimeOfDay := R127
1804 [-]: SETGLOBAL R127 K792    ; 0x555EFA5 := R127
1805 [-]: CLOSURE   R127 312     ; R127 := closure(Function #313)
1806 [-]: MOVE      R0 R13       ; R0 := R13
1807 [-]: SETGLOBAL R127 K793    ; GetSquadMemberLoadoutInfo := R127
1808 [-]: SETGLOBAL R127 K794    ; 0x49473D0D := R127
1809 [-]: CLOSURE   R127 313     ; R127 := closure(Function #314)
1810 [-]: MOVE      R0 R112      ; R0 := R112
1811 [-]: SETGLOBAL R127 K795    ; CreateVendorConversationFunctions := R127
1812 [-]: SETGLOBAL R127 K796    ; 0x3E68ADB := R127
1813 [-]: CLOSURE   R127 314     ; R127 := closure(Function #315)
1814 [-]: MOVE      R0 R13       ; R0 := R13
1815 [-]: SETGLOBAL R127 K797    ; RegisterHideHud := R127
1816 [-]: SETGLOBAL R127 K798    ; 0xB4BBB185 := R127
1817 [-]: CLOSURE   R127 315     ; R127 := closure(Function #316)
1818 [-]: MOVE      R0 R13       ; R0 := R13
1819 [-]: SETGLOBAL R127 K799    ; RegisterHideNotifications := R127
1820 [-]: SETGLOBAL R127 K800    ; 0xC780BE92 := R127
1821 [-]: CLOSURE   R127 316     ; R127 := closure(Function #317)
1822 [-]: MOVE      R0 R13       ; R0 := R13
1823 [-]: SETGLOBAL R127 K801    ; RegisterHideStarChart := R127
1824 [-]: SETGLOBAL R127 K802    ; 0x9AFB3CDC := R127
1825 [-]: CLOSURE   R127 317     ; R127 := closure(Function #318)
1826 [-]: MOVE      R0 R13       ; R0 := R13
1827 [-]: SETGLOBAL R127 K803    ; RegisterHideSquadOverlay := R127
1828 [-]: SETGLOBAL R127 K804    ; 0xC4B4002C := R127
1829 [-]: CLOSURE   R127 318     ; R127 := closure(Function #319)
1830 [-]: SETGLOBAL R127 K805    ; GetEntityUnderCursor := R127
1831 [-]: SETGLOBAL R127 K806    ; 0x898EC37D := R127
1832 [-]: CLOSURE   R127 319     ; R127 := closure(Function #320)
1833 [-]: SETGLOBAL R127 K807    ; HasDojoArchitectPermission := R127
1834 [-]: SETGLOBAL R127 K808    ; 0x8E1620BC := R127
1835 [-]: CLOSURE   R127 320     ; R127 := closure(Function #321)
1836 [-]: SETGLOBAL R127 K809    ; GetDojoConsole := R127
1837 [-]: SETGLOBAL R127 K810    ; 0x935EFBD := R127
1838 [-]: CLOSURE   R127 321     ; R127 := closure(Function #322)
1839 [-]: SETGLOBAL R127 K811    ; IsWarlordRank := R127
1840 [-]: SETGLOBAL R127 K812    ; 0x7F6E10CD := R127
1841 [-]: CLOSURE   R127 322     ; R127 := closure(Function #323)
1842 [-]: MOVE      R0 R99       ; R0 := R99
1843 [-]: MOVE      R0 R31       ; R0 := R31
1844 [-]: MOVE      R0 R13       ; R0 := R13
1845 [-]: SETGLOBAL R127 K813    ; ShowConditionalWordConfirm := R127
1846 [-]: SETGLOBAL R127 K814    ; 0x24966011 := R127
1847 [-]: CLOSURE   R127 323     ; R127 := closure(Function #324)
1848 [-]: SETGLOBAL R127 K815    ; GetActiveSoundSet := R127
1849 [-]: SETGLOBAL R127 K816    ; 0xAA806419 := R127
1850 [-]: CLOSURE   R127 324     ; R127 := closure(Function #325)
1851 [-]: SETGLOBAL R127 K817    ; InitializeTitleBookends := R127
1852 [-]: SETGLOBAL R127 K818    ; 0xFBAA11B5 := R127
1853 [-]: CLOSURE   R127 325     ; R127 := closure(Function #326)
1854 [-]: MOVE      R0 R13       ; R0 := R13
1855 [-]: MOVE      R0 R120      ; R0 := R120
1856 [-]: SETGLOBAL R127 K819    ; GetEliteAlertCustomUpgrades := R127
1857 [-]: SETGLOBAL R127 K820    ; 0xBD29F827 := R127
1858 [-]: CLOSURE   R127 326     ; R127 := closure(Function #327)
1859 [-]: SETGLOBAL R127 K821    ; AppendItemRank := R127
1860 [-]: SETGLOBAL R127 K822    ; 0xBE88CED0 := R127
1861 [-]: CLOSURE   R127 327     ; R127 := closure(Function #328)
1862 [-]: MOVE      R0 R13       ; R0 := R13
1863 [-]: MOVE      R0 R14       ; R0 := R14
1864 [-]: SETGLOBAL R127 K823    ; ApplyParticleThemeColors := R127
1865 [-]: SETGLOBAL R127 K824    ; 0xAD77D9E5 := R127
1866 [-]: CLOSURE   R127 328     ; R127 := closure(Function #329)
1867 [-]: MOVE      R0 R14       ; R0 := R14
1868 [-]: SETGLOBAL R127 K825    ; ReplaceTextColors := R127
1869 [-]: SETGLOBAL R127 K826    ; 0xF2C00D17 := R127
1870 [-]: CLOSURE   R127 329     ; R127 := closure(Function #330)
1871 [-]: SETGLOBAL R127 K827    ; UpdateMailbox := R127
1872 [-]: SETGLOBAL R127 K828    ; 0xCF95CFF8 := R127
1873 [-]: CLOSURE   R127 330     ; R127 := closure(Function #331)
1874 [-]: MOVE      R0 R77       ; R0 := R77
1875 [-]: SETGLOBAL R127 K829    ; IsSeasonActive := R127
1876 [-]: SETGLOBAL R127 K830    ; 0x5B8EB241 := R127
1877 [-]: CLOSURE   R127 331     ; R127 := closure(Function #332)
1878 [-]: MOVE      R0 R48       ; R0 := R48
1879 [-]: SETGLOBAL R127 K831    ; BuildNemesisMission := R127
1880 [-]: SETGLOBAL R127 K832    ; 0x88CA299E := R127
1881 [-]: CLOSURE   R127 332     ; R127 := closure(Function #333)
1882 [-]: SETGLOBAL R127 K833    ; ShouldHideRecipe := R127
1883 [-]: SETGLOBAL R127 K834    ; 0x7BC9A377 := R127
1884 [-]: CLOSURE   R127 333     ; R127 := closure(Function #334)
1885 [-]: SETGLOBAL R127 K835    ; CheckLetterSpacing := R127
1886 [-]: SETGLOBAL R127 K836    ; 0x1E1D306E := R127
1887 [-]: CLOSURE   R127 334     ; R127 := closure(Function #335)
1888 [-]: SETGLOBAL R127 K837    ; ServerSideSettings := R127
1889 [-]: SETGLOBAL R127 K838    ; 0x27744EB6 := R127
1890 [-]: CLOSURE   R127 335     ; R127 := closure(Function #336)
1891 [-]: MOVE      R0 R13       ; R0 := R13
1892 [-]: CLOSURE   R128 336     ; R128 := closure(Function #337)
1893 [-]: MOVE      R0 R127      ; R0 := R127
1894 [-]: SETGLOBAL R128 K839    ; FriendLimitReached := R128
1895 [-]: SETGLOBAL R128 K840    ; 0x89BAF394 := R128
1896 [-]: CLOSURE   R128 337     ; R128 := closure(Function #338)
1897 [-]: MOVE      R0 R31       ; R0 := R31
1898 [-]: MOVE      R0 R13       ; R0 := R13
1899 [-]: CLOSURE   R129 338     ; R129 := closure(Function #339)
1900 [-]: MOVE      R0 R128      ; R0 := R128
1901 [-]: MOVE      R0 R127      ; R0 := R127
1902 [-]: MOVE      R0 R99       ; R0 := R99
1903 [-]: SETGLOBAL R129 K841    ; AddFriend := R129
1904 [-]: SETGLOBAL R129 K842    ; 0x5FBAC3D := R129
1905 [-]: CLOSURE   R129 339     ; R129 := closure(Function #340)
1906 [-]: SETGLOBAL R129 K843    ; GetSyndicateBackgroundAlignments := R129
1907 [-]: SETGLOBAL R129 K844    ; 0xF4165F1F := R129
1908 [-]: CLOSURE   R129 340     ; R129 := closure(Function #341)
1909 [-]: SETGLOBAL R129 K845    ; ForceCloseTransmission := R129
1910 [-]: SETGLOBAL R129 K846    ; 0x7BD10FF7 := R129
1911 [-]: CLOSURE   R129 341     ; R129 := closure(Function #342)
1912 [-]: SETGLOBAL R129 K847    ; AvatarHasActiveActions := R129
1913 [-]: SETGLOBAL R129 K848    ; 0xC2033AF7 := R129
1914 [-]: CLOSURE   R129 342     ; R129 := closure(Function #343)
1915 [-]: MOVE      R0 R7        ; R0 := R7
1916 [-]: SETGLOBAL R129 K849    ; ShouldHideConsumable := R129
1917 [-]: SETGLOBAL R129 K850    ; 0xE9518D65 := R129
1918 [-]: CLOSURE   R129 343     ; R129 := closure(Function #344)
1919 [-]: MOVE      R0 R126      ; R0 := R126
1920 [-]: SETGLOBAL R129 K851    ; ShouldShowRoomDecorationReset := R129
1921 [-]: SETGLOBAL R129 K852    ; 0x5F5B4130 := R129
1922 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 296
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x96D4FC9C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0x93E76705"]
  9 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 10 [-]: RETURN    R2 0         ; return R2,...
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 304
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R3 R0        ; R3 := R0
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: LOADK     R5 K2        ; R5 := 2
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x6B695579
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETTABLE  R4 R3 K4     ; R4 := R3["mMovie"]
 14 [-]: TEST      R4 0         ; if not R4 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETTABLE  R4 R3 K4     ; R4 := R3["mMovie"]
 22 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: ADD       R2 R2 K6     ; R2 := R2 + 1
 25 [-]: GETGLOBAL R4 K3        ; R4 := 0x6B695579
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: MOVE      R3 R4        ; R3 := R4
 29 [-]: JMP       13           ; PC := 13
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 314
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["hasCheckedTutorial"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["hasCheckedTutorial"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["tutorialActive"]
 13 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETGLOBAL R0 K0        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["tutorialActive"]
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 322
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: NEWTABLE  R0 36 0      ; R0 := {}
  2 [-]: LOADK     R1 K0        ; R1 := 4591633
  3 [-]: LOADK     R2 K1        ; R2 := 6756120
  4 [-]: LOADK     R3 K2        ; R3 := 9773092
  5 [-]: LOADK     R4 K3        ; R4 := 12265515
  6 [-]: LOADK     R5 K4        ; R5 := 13708851
  7 [-]: LOADK     R6 K5        ; R6 := 4003870
  8 [-]: LOADK     R7 K6        ; R7 := 5775914
  9 [-]: LOADK     R8 K7        ; R8 := 8663871
 10 [-]: LOADK     R9 K8        ; R9 := 11421784
 11 [-]: LOADK     R10 K9       ; R10 := 13260653
 12 [-]: LOADK     R11 K10      ; R11 := 2100501
 13 [-]: LOADK     R12 K11      ; R12 := 3873573
 14 [-]: LOADK     R13 K12      ; R13 := 7419972
 15 [-]: LOADK     R14 K13      ; R14 := 11428207
 16 [-]: LOADK     R15 K14      ; R15 := 13928599
 17 [-]: LOADK     R16 K15      ; R16 := 2492950
 18 [-]: LOADK     R17 K16      ; R17 := 4067364
 19 [-]: LOADK     R18 K17      ; R18 := 7216189
 20 [-]: LOADK     R19 K18      ; R19 := 10299227
 21 [-]: LOADK     R20 K19      ; R20 := 12464506
 22 [-]: LOADK     R21 K20      ; R21 := 987681
 23 [-]: LOADK     R22 K21      ; R22 := 1448500
 24 [-]: LOADK     R23 K22      ; R23 := 2502747
 25 [-]: LOADK     R24 K23      ; R24 := 3950990
 26 [-]: LOADK     R25 K24      ; R25 := 5334711
 27 [-]: LOADK     R26 K25      ; R26 := 530470
 28 [-]: LOADK     R27 K26      ; R27 := 797252
 29 [-]: LOADK     R28 K27      ; R28 := 1460087
 30 [-]: LOADK     R29 K28      ; R29 := 1994408
 31 [-]: LOADK     R30 K29      ; R30 := 2396358
 32 [-]: LOADK     R31 K30      ; R31 := 930629
 33 [-]: LOADK     R32 K31      ; R32 := 1526113
 34 [-]: LOADK     R33 K32      ; R33 := 2716301
 35 [-]: LOADK     R34 K33      ; R34 := 4169655
 36 [-]: LOADK     R35 K34      ; R35 := 5619666
 37 [-]: LOADK     R36 K35      ; R36 := 1650218
 38 [-]: LOADK     R37 K36      ; R37 := 2442557
 39 [-]: LOADK     R38 K37      ; R38 := 3828063
 40 [-]: LOADK     R39 K38      ; R39 := 5543563
 41 [-]: LOADK     R40 K39      ; R40 := 7388337
 42 [-]: LOADK     R41 K40      ; R41 := 1125400
 43 [-]: LOADK     R42 K41      ; R42 := 1721894
 44 [-]: LOADK     R43 K42      ; R43 := 2914624
 45 [-]: LOADK     R44 K43      ; R44 := 4303198
 46 [-]: LOADK     R45 K44      ; R45 := 5491068
 47 [-]: LOADK     R46 K45      ; R46 := 3816203
 48 [-]: LOADK     R47 K46      ; R47 := 6317074
 49 [-]: LOADK     R48 K47      ; R48 := 9409055
 50 [-]: LOADK     R49 K48      ; R49 := 12106284
 51 [-]: LOADK     R50 K49      ; R50 := 13750327
 52 [-]: SETLIST   R0 50 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 50
 53 [-]: LOADK     R1 K50       ; R1 := 5916201
 54 [-]: LOADK     R2 K51       ; R2 := 8347962
 55 [-]: LOADK     R3 K52       ; R3 := 11111504
 56 [-]: LOADK     R4 K53       ; R4 := 13546858
 57 [-]: LOADK     R5 K54       ; R5 := 15126918
 58 [-]: LOADK     R6 K55       ; R6 := 8143131
 59 [-]: LOADK     R7 K56       ; R7 := 9589797
 60 [-]: LOADK     R8 K57       ; R8 := 11366711
 61 [-]: LOADK     R9 K58       ; R9 := 13014608
 62 [-]: LOADK     R10 K59      ; R10 := 14530158
 63 [-]: LOADK     R11 K60      ; R11 := 10107422
 64 [-]: LOADK     R12 K61      ; R12 := 11751209
 65 [-]: LOADK     R13 K62      ; R13 := 13529661
 66 [-]: LOADK     R14 K63      ; R14 := 14786650
 67 [-]: LOADK     R15 K64      ; R15 := 15254401
 68 [-]: LOADK     R16 K65      ; R16 := 3282697
 69 [-]: LOADK     R17 K66      ; R17 := 6301969
 70 [-]: LOADK     R18 K67      ; R18 := 10767646
 71 [-]: LOADK     R19 K68      ; R19 := 13726758
 72 [-]: LOADK     R20 K69      ; R20 := 14127655
 73 [-]: LOADK     R21 K70      ; R21 := 2694428
 74 [-]: LOADK     R22 K71      ; R22 := 4994866
 75 [-]: LOADK     R23 K72      ; R23 := 9398364
 76 [-]: LOADK     R24 K73      ; R24 := 13213582
 77 [-]: LOADK     R25 K74      ; R25 := 14991277
 78 [-]: LOADK     R26 K75      ; R26 := 2631460
 79 [-]: LOADK     R27 K76      ; R27 := 6117971
 80 [-]: LOADK     R28 K77      ; R28 := 12499631
 81 [-]: LOADK     R29 K78      ; R29 := 16118763
 82 [-]: LOADK     R30 K79      ; R30 := 16777215
 83 [-]: LOADK     R31 K80      ; R31 := 2106148
 84 [-]: LOADK     R32 K81      ; R32 := 4673359
 85 [-]: LOADK     R33 K82      ; R33 := 9872548
 86 [-]: LOADK     R34 K83      ; R34 := 14082529
 87 [-]: LOADK     R35 K84      ; R35 := 15989754
 88 [-]: LOADK     R36 K85      ; R36 := 1908258
 89 [-]: LOADK     R37 K86      ; R37 := 4145995
 90 [-]: LOADK     R38 K87      ; R38 := 9080479
 91 [-]: LOADK     R39 K88      ; R39 := 13225437
 92 [-]: LOADK     R40 K89      ; R40 := 15199223
 93 [-]: SETLIST   R0 40 2      ; R0[(2-1)*FPF+i] := R(0+i), 1 <= i <= 40
 94 [-]: RETURN    R0 2         ; return R0
 95 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 347
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: NEWTABLE  R0 8 0       ; R0 := {}
  2 [-]: NEWTABLE  R1 0 2       ; R1 := {}
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x2C00D429
  4 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Types/Game/KubrowPet/AdventurerKubrowPetPowerSuit"
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: SETTABLE  R1 K0 R2     ; R1["Type"] := R2
  7 [-]: SETTABLE  R1 K3 K4     ; R1["Name"] := "/Lotus/Language/Items/AdventurerKubrowName"
  8 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  9 [-]: GETGLOBAL R3 K1        ; R3 := 0x2C00D429
 10 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Types/Game/KubrowPet/FurtiveKubrowPetPowerSuit"
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: SETTABLE  R2 K0 R3     ; R2["Type"] := R3
 13 [-]: SETTABLE  R2 K3 K6     ; R2["Name"] := "/Lotus/Language/Items/FurtiveKubrowName"
 14 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 15 [-]: GETGLOBAL R4 K1        ; R4 := 0x2C00D429
 16 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Types/Game/KubrowPet/GuardKubrowPetPowerSuit"
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SETTABLE  R3 K0 R4     ; R3["Type"] := R4
 19 [-]: SETTABLE  R3 K3 K8     ; R3["Name"] := "/Lotus/Language/Items/GuardKubrowName"
 20 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 21 [-]: GETGLOBAL R5 K1        ; R5 := 0x2C00D429
 22 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Types/Game/KubrowPet/HunterKubrowPetPowerSuit"
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: SETTABLE  R4 K0 R5     ; R4["Type"] := R5
 25 [-]: SETTABLE  R4 K3 K10    ; R4["Name"] := "/Lotus/Language/Items/HunterKubrowName"
 26 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 27 [-]: GETGLOBAL R6 K1        ; R6 := 0x2C00D429
 28 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Types/Game/KubrowPet/RetrieverKubrowPetPowerSuit"
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: SETTABLE  R5 K0 R6     ; R5["Type"] := R6
 31 [-]: SETTABLE  R5 K3 K12    ; R5["Name"] := "/Lotus/Language/Items/RetrieverKubrowName"
 32 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 33 [-]: GETGLOBAL R7 K1        ; R7 := 0x2C00D429
 34 [-]: LOADK     R8 K13       ; R8 := "/Lotus/Types/Game/KubrowPet/ChargerKubrowPetPowerSuit"
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: SETTABLE  R6 K0 R7     ; R6["Type"] := R7
 37 [-]: SETTABLE  R6 K3 K14    ; R6["Name"] := "/Lotus/Language/Items/InfestedKubrowName"
 38 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 39 [-]: GETGLOBAL R8 K1        ; R8 := 0x2C00D429
 40 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Types/Game/CatbrowPet/MirrorCatbrowPetPowerSuit"
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: SETTABLE  R7 K0 R8     ; R7["Type"] := R8
 43 [-]: SETTABLE  R7 K3 K16    ; R7["Name"] := "/Lotus/Language/Items/MirrorCatbrowName"
 44 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 45 [-]: GETGLOBAL R9 K1        ; R9 := 0x2C00D429
 46 [-]: LOADK     R10 K17      ; R10 := "/Lotus/Types/Game/CatbrowPet/CheshireCatbrowPetPowerSuit"
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R8 K0 R9     ; R8["Type"] := R9
 49 [-]: SETTABLE  R8 K3 K18    ; R8["Name"] := "/Lotus/Language/Items/CheshireCatbrowName"
 50 [-]: SETLIST   R0 8 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 8
 51 [-]: LOADK     R1 K19       ; R1 := 1
 52 [-]: LEN       R2 R0        ; R2 := # R0
 53 [-]: LOADK     R3 K19       ; R3 := 1
 54 [-]: FORPREP   R1 60        ; R1 -= R3; PC := 60
 55 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 56 [-]: GETGLOBAL R6 K21       ; R6 := _G
 57 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["UITexture_CompanionIcons"]
 58 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 59 [-]: SETTABLE  R5 K20 R6    ; R5["Icon"] := R6
 60 [-]: FORLOOP   R1 55        ; R1 += R3; if R1 <= R2 then begin PC := 55; R4 := R1 end
 61 [-]: RETURN    R0 2         ; return R0
 62 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 369
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0xE6DC43B0
  2 [-]: LOADK     R8 K1        ; R8 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R9 R0        ; R9 := R0
  4 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
  5 [-]: GETGLOBAL R8 K0        ; R8 := 0xE6DC43B0
  6 [-]: LOADK     R9 K2        ; R9 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R10 R0       ; R10 := R0
  8 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
  9 [-]: GETGLOBAL R9 K0        ; R9 := 0xE6DC43B0
 10 [-]: LOADK     R10 K3       ; R10 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R11 R0       ; R11 := R0
 12 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 13 [-]: GETGLOBAL R10 K0       ; R10 := 0xE6DC43B0
 14 [-]: LOADK     R11 K4       ; R11 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R12 R0       ; R12 := R0
 16 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 17 [-]: TEST      R5 0         ; if not R5 then PC := 233
 18 [-]: JMP       233          ; PC := 233
 19 [-]: EQ        1 R5 K5      ; if R5 == "Compact" then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: EQ        1 R5 K6      ; if R5 == "CompactTwoMax" then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 164
 24 [-]: JMP       164          ; PC := 164
 25 [-]: LT        0 K8 R1      ; if 0 >= R1 then PC := 76
 26 [-]: JMP       76           ; PC := 76
 27 [-]: EQ        0 R5 K6      ; if R5 ~= "CompactTwoMax" then PC := 43
 28 [-]: JMP       43           ; PC := 43
 29 [-]: MOVE      R11 R6       ; R11 := R6
 30 [-]: GETGLOBAL R12 K9       ; R12 := string
 31 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 32 [-]: LOADK     R13 K11      ; R13 := "%d"
 33 [-]: MOVE      R14 R7       ; R14 := R7
 34 [-]: LOADK     R15 K12      ; R15 := " %d"
 35 [-]: MOVE      R16 R8       ; R16 := R8
 36 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 37 [-]: MOVE      R14 R1       ; R14 := R1
 38 [-]: MOVE      R15 R2       ; R15 := R2
 39 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 40 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 41 [-]: RETURN    R11 2        ; return R11
 42 [-]: JMP       271          ; PC := 271
 43 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: MOVE      R11 R6       ; R11 := R6
 46 [-]: GETGLOBAL R12 K9       ; R12 := string
 47 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 48 [-]: LOADK     R13 K11      ; R13 := "%d"
 49 [-]: MOVE      R14 R7       ; R14 := R7
 50 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 51 [-]: MOVE      R14 R1       ; R14 := R1
 52 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 53 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 54 [-]: RETURN    R11 2        ; return R11
 55 [-]: JMP       271          ; PC := 271
 56 [-]: MOVE      R11 R6       ; R11 := R6
 57 [-]: GETGLOBAL R12 K9       ; R12 := string
 58 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 59 [-]: LOADK     R13 K11      ; R13 := "%d"
 60 [-]: MOVE      R14 R7       ; R14 := R7
 61 [-]: LOADK     R15 K12      ; R15 := " %d"
 62 [-]: MOVE      R16 R8       ; R16 := R8
 63 [-]: LOADK     R17 K12      ; R17 := " %d"
 64 [-]: MOVE      R18 R9       ; R18 := R9
 65 [-]: LOADK     R19 K12      ; R19 := " %d"
 66 [-]: MOVE      R20 R10      ; R20 := R10
 67 [-]: CONCAT    R13 R13 R20  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20
 68 [-]: MOVE      R14 R1       ; R14 := R1
 69 [-]: MOVE      R15 R2       ; R15 := R2
 70 [-]: MOVE      R16 R3       ; R16 := R3
 71 [-]: MOVE      R17 R4       ; R17 := R4
 72 [-]: CALL      R12 6 2      ; R12 := R12(R13,R14,R15,R16,R17)
 73 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 74 [-]: RETURN    R11 2        ; return R11
 75 [-]: JMP       271          ; PC := 271
 76 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 124
 77 [-]: JMP       124          ; PC := 124
 78 [-]: EQ        0 R5 K6      ; if R5 ~= "CompactTwoMax" then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: MOVE      R11 R6       ; R11 := R6
 81 [-]: GETGLOBAL R12 K9       ; R12 := string
 82 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 83 [-]: LOADK     R13 K11      ; R13 := "%d"
 84 [-]: MOVE      R14 R8       ; R14 := R8
 85 [-]: LOADK     R15 K12      ; R15 := " %d"
 86 [-]: MOVE      R16 R9       ; R16 := R9
 87 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 88 [-]: MOVE      R14 R2       ; R14 := R2
 89 [-]: MOVE      R15 R3       ; R15 := R3
 90 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 91 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 92 [-]: RETURN    R11 2        ; return R11
 93 [-]: JMP       271          ; PC := 271
 94 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 107
 95 [-]: JMP       107          ; PC := 107
 96 [-]: MOVE      R11 R6       ; R11 := R6
 97 [-]: GETGLOBAL R12 K9       ; R12 := string
 98 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 99 [-]: LOADK     R13 K11      ; R13 := "%d"
100 [-]: MOVE      R14 R8       ; R14 := R8
101 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
102 [-]: MOVE      R14 R2       ; R14 := R2
103 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
104 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
105 [-]: RETURN    R11 2        ; return R11
106 [-]: JMP       271          ; PC := 271
107 [-]: MOVE      R11 R6       ; R11 := R6
108 [-]: GETGLOBAL R12 K9       ; R12 := string
109 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
110 [-]: LOADK     R13 K11      ; R13 := "%d"
111 [-]: MOVE      R14 R8       ; R14 := R8
112 [-]: LOADK     R15 K12      ; R15 := " %d"
113 [-]: MOVE      R16 R9       ; R16 := R9
114 [-]: LOADK     R17 K12      ; R17 := " %d"
115 [-]: MOVE      R18 R10      ; R18 := R10
116 [-]: CONCAT    R13 R13 R18  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
117 [-]: MOVE      R14 R2       ; R14 := R2
118 [-]: MOVE      R15 R3       ; R15 := R3
119 [-]: MOVE      R16 R4       ; R16 := R4
120 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
121 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
122 [-]: RETURN    R11 2        ; return R11
123 [-]: JMP       271          ; PC := 271
124 [-]: LT        0 K8 R3      ; if 0 >= R3 then PC := 153
125 [-]: JMP       153          ; PC := 153
126 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: MOVE      R11 R6       ; R11 := R6
129 [-]: GETGLOBAL R12 K9       ; R12 := string
130 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
131 [-]: LOADK     R13 K11      ; R13 := "%d"
132 [-]: MOVE      R14 R9       ; R14 := R9
133 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
134 [-]: MOVE      R14 R3       ; R14 := R3
135 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
136 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
137 [-]: RETURN    R11 2        ; return R11
138 [-]: JMP       271          ; PC := 271
139 [-]: MOVE      R11 R6       ; R11 := R6
140 [-]: GETGLOBAL R12 K9       ; R12 := string
141 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
142 [-]: LOADK     R13 K11      ; R13 := "%d"
143 [-]: MOVE      R14 R9       ; R14 := R9
144 [-]: LOADK     R15 K12      ; R15 := " %d"
145 [-]: MOVE      R16 R10      ; R16 := R10
146 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
147 [-]: MOVE      R14 R3       ; R14 := R3
148 [-]: MOVE      R15 R4       ; R15 := R4
149 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
150 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
151 [-]: RETURN    R11 2        ; return R11
152 [-]: JMP       271          ; PC := 271
153 [-]: MOVE      R11 R6       ; R11 := R6
154 [-]: GETGLOBAL R12 K9       ; R12 := string
155 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
156 [-]: LOADK     R13 K11      ; R13 := "%d"
157 [-]: MOVE      R14 R10      ; R14 := R10
158 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
159 [-]: MOVE      R14 R4       ; R14 := R4
160 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
161 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
162 [-]: RETURN    R11 2        ; return R11
163 [-]: JMP       271          ; PC := 271
164 [-]: EQ        0 R5 K13     ; if R5 ~= "HoursOrMinutes" then PC := 193
165 [-]: JMP       193          ; PC := 193
166 [-]: EQ        0 R1 K8      ; if R1 ~= 0 then PC := 193
167 [-]: JMP       193          ; PC := 193
168 [-]: EQ        0 R2 K8      ; if R2 ~= 0 then PC := 193
169 [-]: JMP       193          ; PC := 193
170 [-]: GETUPVAL  R11 U0       ; R11 := U0
171 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["0xF81722A2"]
172 [-]: LT        1 K15 R3     ; if 1 < R3 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: MOVE      R12 R0       ; R12 := R0
175 [-]: MOVE      R12 R1       ; R12 := R1
176 [-]: LOADK     R13 K16      ; R13 := "/Lotus/Language/Menu/TimeFormat_Minutes"
177 [-]: LOADK     R14 K17      ; R14 := "/Lotus/Language/Menu/TimeFormat_Minute"
178 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
179 [-]: MOVE      R12 R6       ; R12 := R6
180 [-]: GETGLOBAL R13 K0       ; R13 := 0xE6DC43B0
181 [-]: MOVE      R14 R11      ; R14 := R11
182 [-]: NEWTABLE  R15 0 1      ; R15 := {}
183 [-]: GETGLOBAL R16 K9       ; R16 := string
184 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["0x4B1F4F58"]
185 [-]: LOADK     R17 K11      ; R17 := "%d"
186 [-]: MOVE      R18 R3       ; R18 := R3
187 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
188 [-]: SETTABLE  R15 K18 R16  ; R15["TIME"] := R16
189 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
190 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
191 [-]: RETURN    R12 2        ; return R12
192 [-]: JMP       271          ; PC := 271
193 [-]: EQ        0 R5 K19     ; if R5 ~= "CompactHours" then PC := 207
194 [-]: JMP       207          ; PC := 207
195 [-]: MOVE      R12 R6       ; R12 := R6
196 [-]: GETGLOBAL R13 K9       ; R13 := string
197 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["0x4B1F4F58"]
198 [-]: LOADK     R14 K20      ; R14 := "%d "
199 [-]: MOVE      R15 R8       ; R15 := R8
200 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
201 [-]: MUL       R15 R1 K21   ; R15 := R1 * 24
202 [-]: ADD       R15 R15 R2   ; R15 := R15 + R2
203 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
204 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
205 [-]: RETURN    R12 2        ; return R12
206 [-]: JMP       271          ; PC := 271
207 [-]: GETUPVAL  R12 U0       ; R12 := U0
208 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["0xF81722A2"]
209 [-]: LT        1 K15 R2     ; if 1 < R2 then PC := 214
210 [-]: JMP       214          ; PC := 214
211 [-]: LT        1 K8 R1      ; if 0 < R1 then PC := 214
212 [-]: JMP       214          ; PC := 214
213 [-]: MOVE      R13 R0       ; R13 := R0
214 [-]: MOVE      R13 R1       ; R13 := R1
215 [-]: LOADK     R14 K22      ; R14 := "/Lotus/Language/Menu/TimeFormat_Hours"
216 [-]: LOADK     R15 K23      ; R15 := "/Lotus/Language/Menu/TimeFormat_Hour"
217 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
218 [-]: MOVE      R13 R6       ; R13 := R6
219 [-]: GETGLOBAL R14 K0       ; R14 := 0xE6DC43B0
220 [-]: MOVE      R15 R12      ; R15 := R12
221 [-]: NEWTABLE  R16 0 1      ; R16 := {}
222 [-]: GETGLOBAL R17 K9       ; R17 := string
223 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["0x4B1F4F58"]
224 [-]: LOADK     R18 K11      ; R18 := "%d"
225 [-]: MUL       R19 R1 K21   ; R19 := R1 * 24
226 [-]: ADD       R19 R19 R2   ; R19 := R19 + R2
227 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
228 [-]: SETTABLE  R16 K18 R17  ; R16["TIME"] := R17
229 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
230 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
231 [-]: RETURN    R13 2        ; return R13
232 [-]: JMP       271          ; PC := 271
233 [-]: LT        0 K8 R1      ; if 0 >= R1 then PC := 255
234 [-]: JMP       255          ; PC := 255
235 [-]: MOVE      R13 R6       ; R13 := R6
236 [-]: GETGLOBAL R14 K9       ; R14 := string
237 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x4B1F4F58"]
238 [-]: LOADK     R15 K11      ; R15 := "%d"
239 [-]: MOVE      R16 R7       ; R16 := R7
240 [-]: LOADK     R17 K12      ; R17 := " %d"
241 [-]: MOVE      R18 R8       ; R18 := R8
242 [-]: LOADK     R19 K12      ; R19 := " %d"
243 [-]: MOVE      R20 R9       ; R20 := R9
244 [-]: LOADK     R21 K12      ; R21 := " %d"
245 [-]: MOVE      R22 R10      ; R22 := R10
246 [-]: CONCAT    R15 R15 R22  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22
247 [-]: MOVE      R16 R1       ; R16 := R1
248 [-]: MOVE      R17 R2       ; R17 := R2
249 [-]: MOVE      R18 R3       ; R18 := R3
250 [-]: MOVE      R19 R4       ; R19 := R4
251 [-]: CALL      R14 6 2      ; R14 := R14(R15,R16,R17,R18,R19)
252 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
253 [-]: RETURN    R13 2        ; return R13
254 [-]: JMP       271          ; PC := 271
255 [-]: MOVE      R13 R6       ; R13 := R6
256 [-]: GETGLOBAL R14 K9       ; R14 := string
257 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x4B1F4F58"]
258 [-]: LOADK     R15 K11      ; R15 := "%d"
259 [-]: MOVE      R16 R8       ; R16 := R8
260 [-]: LOADK     R17 K12      ; R17 := " %d"
261 [-]: MOVE      R18 R9       ; R18 := R9
262 [-]: LOADK     R19 K12      ; R19 := " %d"
263 [-]: MOVE      R20 R10      ; R20 := R10
264 [-]: CONCAT    R15 R15 R20  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20
265 [-]: MOVE      R16 R2       ; R16 := R2
266 [-]: MOVE      R17 R3       ; R17 := R3
267 [-]: MOVE      R18 R4       ; R18 := R4
268 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
269 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
270 [-]: RETURN    R13 2        ; return R13
271 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 418
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R1 K0        ; R1 := 60
  2 [-]: LOADK     R2 K1        ; R2 := 3600
  3 [-]: LOADK     R3 K2        ; R3 := 86400
  4 [-]: GETGLOBAL R4 K3        ; R4 := math
  5 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xF7005A7B"]
  6 [-]: DIV       R5 R0 R3     ; R5 := R0 / R3
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: MUL       R5 R4 R3     ; R5 := R4 * R3
  9 [-]: SUB       R0 R0 R5     ; R0 := R0 - R5
 10 [-]: GETGLOBAL R5 K3        ; R5 := math
 11 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0xF7005A7B"]
 12 [-]: DIV       R6 R0 R2     ; R6 := R0 / R2
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: MUL       R6 R5 R2     ; R6 := R5 * R2
 15 [-]: SUB       R0 R0 R6     ; R0 := R0 - R6
 16 [-]: GETGLOBAL R6 K3        ; R6 := math
 17 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["0xF7005A7B"]
 18 [-]: DIV       R7 R0 R1     ; R7 := R0 / R1
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: MUL       R7 R6 R1     ; R7 := R6 * R1
 21 [-]: SUB       R7 R0 R7     ; R7 := R0 - R7
 22 [-]: MOVE      R8 R4        ; R8 := R4
 23 [-]: MOVE      R9 R5        ; R9 := R5
 24 [-]: MOVE      R10 R6       ; R10 := R6
 25 [-]: MOVE      R11 R7       ; R11 := R7
 26 [-]: RETURN    R8 5         ; return R8,R9,R10,R11
 27 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 433
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 437
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: LOADK     R3 K0        ; R3 := ""
  2 [-]: LT        0 R1 K1      ; if R1 >= 0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: UNM       R1 R1        ; R1 := - R1
  5 [-]: LOADK     R3 K2        ; R3 := "-"
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 5       ; R4,R5,R6,R7 := R4(R5)
  9 [-]: GETUPVAL  R8 U1        ; R8 := U1
 10 [-]: MOVE      R9 R0        ; R9 := R0
 11 [-]: MOVE      R10 R4       ; R10 := R4
 12 [-]: MOVE      R11 R5       ; R11 := R5
 13 [-]: MOVE      R12 R6       ; R12 := R6
 14 [-]: MOVE      R13 R7       ; R13 := R7
 15 [-]: MOVE      R14 R2       ; R14 := R2
 16 [-]: MOVE      R15 R3       ; R15 := R3
 17 [-]: TAILCALL  R8 8 0       ; R8,... := R8(R9,R10,R11,R12,R13,R14,R15)
 18 [-]: RETURN    R8 0         ; return R8,...
 19 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 448
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 452
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
  2 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R5 R0        ; R5 := R0
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
  6 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  9 [-]: GETGLOBAL R5 K0        ; R5 := 0xE6DC43B0
 10 [-]: LOADK     R6 K3        ; R6 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R7 R0        ; R7 := R0
 12 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 13 [-]: GETGLOBAL R6 K0        ; R6 := 0xE6DC43B0
 14 [-]: LOADK     R7 K4        ; R7 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R8 R0        ; R8 := R0
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: GETUPVAL  R7 U0        ; R7 := U0
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R7 2 5       ; R7,R8,R9,R10 := R7(R8)
 20 [-]: LOADK     R11 K5       ; R11 := ""
 21 [-]: GETGLOBAL R12 K6       ; R12 := math
 22 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 23 [-]: MOVE      R13 R7       ; R13 := R7
 24 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 25 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: MOVE      R12 R7       ; R12 := R7
 28 [-]: MOVE      R13 R3       ; R13 := R3
 29 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 30 [-]: EQ        1 R1 K9      ; if R1 == "0x0" then PC := 85
 31 [-]: JMP       85           ; PC := 85
 32 [-]: MOVE      R12 R11      ; R12 := R11
 33 [-]: LOADK     R13 K10      ; R13 := " "
 34 [-]: MOVE      R14 R8       ; R14 := R8
 35 [-]: MOVE      R15 R4       ; R15 := R4
 36 [-]: CONCAT    R11 R12 R15  ; R11 := R12 .. R13 .. R14 .. R15
 37 [-]: JMP       85           ; PC := 85
 38 [-]: GETGLOBAL R12 K6       ; R12 := math
 39 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 40 [-]: MOVE      R13 R8       ; R13 := R8
 41 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 42 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 65
 43 [-]: JMP       65           ; PC := 65
 44 [-]: MOVE      R12 R8       ; R12 := R8
 45 [-]: MOVE      R13 R4       ; R13 := R4
 46 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 47 [-]: TEST      R2 0         ; if not R2 then PC := 85
 48 [-]: JMP       85           ; PC := 85
 49 [-]: GETGLOBAL R12 K6       ; R12 := math
 50 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 51 [-]: MOVE      R13 R9       ; R13 := R9
 52 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 53 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 85
 54 [-]: JMP       85           ; PC := 85
 55 [-]: MOVE      R12 R11      ; R12 := R11
 56 [-]: LOADK     R13 K10      ; R13 := " "
 57 [-]: GETGLOBAL R14 K6       ; R14 := math
 58 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0x65F9712A"]
 59 [-]: ADD       R15 R9 K12   ; R15 := R9 + 1
 60 [-]: LOADK     R16 K13      ; R16 := 59
 61 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 62 [-]: MOVE      R15 R5       ; R15 := R5
 63 [-]: CONCAT    R11 R12 R15  ; R11 := R12 .. R13 .. R14 .. R15
 64 [-]: JMP       85           ; PC := 85
 65 [-]: GETGLOBAL R12 K6       ; R12 := math
 66 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 67 [-]: MOVE      R13 R9       ; R13 := R9
 68 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 69 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 79
 70 [-]: JMP       79           ; PC := 79
 71 [-]: GETGLOBAL R12 K6       ; R12 := math
 72 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0x65F9712A"]
 73 [-]: ADD       R13 R9 K12   ; R13 := R9 + 1
 74 [-]: LOADK     R14 K13      ; R14 := 59
 75 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 76 [-]: MOVE      R13 R5       ; R13 := R5
 77 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 78 [-]: JMP       85           ; PC := 85
 79 [-]: GETGLOBAL R12 K6       ; R12 := math
 80 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["0xBCF846DF"]
 81 [-]: MOVE      R13 R0       ; R13 := R0
 82 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 83 [-]: MOVE      R13 R6       ; R13 := R6
 84 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 85 [-]: RETURN    R11 2        ; return R11
 86 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 477
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xE6DC43B0
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xE6DC43B0
  6 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
 10 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
 14 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: MOVE      R6 R0        ; R6 := R0
 19 [-]: CALL      R5 2 5       ; R5,R6,R7,R8 := R5(R6)
 20 [-]: LOADK     R9 K5        ; R9 := ""
 21 [-]: GETGLOBAL R10 K6       ; R10 := math
 22 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF93F7CC8"]
 23 [-]: MOVE      R11 R5       ; R11 := R5
 24 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 25 [-]: LT        0 K8 R10     ; if 0 >= R10 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: MOVE      R10 R5       ; R10 := R5
 28 [-]: MOVE      R11 R1       ; R11 := R1
 29 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
 30 [-]: JMP       65           ; PC := 65
 31 [-]: GETGLOBAL R10 K6       ; R10 := math
 32 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF93F7CC8"]
 33 [-]: MOVE      R11 R6       ; R11 := R6
 34 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 35 [-]: LT        0 K8 R10     ; if 0 >= R10 then PC := 50
 36 [-]: JMP       50           ; PC := 50
 37 [-]: MOVE      R10 R6       ; R10 := R6
 38 [-]: MOVE      R11 R2       ; R11 := R2
 39 [-]: LOADK     R12 K9       ; R12 := " "
 40 [-]: MOVE      R13 R7       ; R13 := R7
 41 [-]: MOVE      R14 R3       ; R14 := R3
 42 [-]: LOADK     R15 K9       ; R15 := " "
 43 [-]: GETGLOBAL R16 K6       ; R16 := math
 44 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["0xF7005A7B"]
 45 [-]: ADD       R17 R8 K11   ; R17 := R8 + 0.5
 46 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 47 [-]: MOVE      R17 R4       ; R17 := R4
 48 [-]: CONCAT    R9 R10 R17   ; R9 := R10 .. R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17
 49 [-]: JMP       65           ; PC := 65
 50 [-]: GETGLOBAL R10 K6       ; R10 := math
 51 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF93F7CC8"]
 52 [-]: MOVE      R11 R7       ; R11 := R7
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: LE        0 K8 R10     ; if 0 > R10 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: MOVE      R10 R7       ; R10 := R7
 57 [-]: MOVE      R11 R3       ; R11 := R3
 58 [-]: LOADK     R12 K9       ; R12 := " "
 59 [-]: GETGLOBAL R13 K6       ; R13 := math
 60 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["0xF7005A7B"]
 61 [-]: ADD       R14 R8 K11   ; R14 := R8 + 0.5
 62 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 63 [-]: MOVE      R14 R4       ; R14 := R4
 64 [-]: CONCAT    R9 R10 R14   ; R9 := R10 .. R11 .. R12 .. R13 .. R14
 65 [-]: RETURN    R9 2         ; return R9
 66 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 494
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 498
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xE6DC43B0
  2 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
  6 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
 10 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 13 [-]: GETGLOBAL R5 K0        ; R5 := 0xE6DC43B0
 14 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R7 R0        ; R7 := R0
 16 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: MOVE      R7 R0        ; R7 := R0
 19 [-]: CALL      R6 2 5       ; R6,R7,R8,R9 := R6(R7)
 20 [-]: LOADK     R10 K5       ; R10 := ""
 21 [-]: GETGLOBAL R11 K6       ; R11 := math
 22 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF93F7CC8"]
 23 [-]: MOVE      R12 R6       ; R12 := R6
 24 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 25 [-]: LT        0 K8 R11     ; if 0 >= R11 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: MOVE      R11 R6       ; R11 := R6
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: LOADK     R13 K9       ; R13 := " "
 30 [-]: CONCAT    R10 R11 R13  ; R10 := R11 .. R12 .. R13
 31 [-]: GETGLOBAL R11 K6       ; R11 := math
 32 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF93F7CC8"]
 33 [-]: MOVE      R12 R7       ; R12 := R7
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: LT        0 K8 R11     ; if 0 >= R11 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: MOVE      R11 R10      ; R11 := R10
 38 [-]: MOVE      R12 R7       ; R12 := R7
 39 [-]: MOVE      R13 R3       ; R13 := R3
 40 [-]: LOADK     R14 K9       ; R14 := " "
 41 [-]: CONCAT    R10 R11 R14  ; R10 := R11 .. R12 .. R13 .. R14
 42 [-]: GETGLOBAL R11 K6       ; R11 := math
 43 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF93F7CC8"]
 44 [-]: MOVE      R12 R8       ; R12 := R8
 45 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 46 [-]: LE        0 K8 R11     ; if 0 > R11 then PC := 53
 47 [-]: JMP       53           ; PC := 53
 48 [-]: MOVE      R11 R10      ; R11 := R10
 49 [-]: MOVE      R12 R8       ; R12 := R8
 50 [-]: MOVE      R13 R4       ; R13 := R4
 51 [-]: LOADK     R14 K9       ; R14 := " "
 52 [-]: CONCAT    R10 R11 R14  ; R10 := R11 .. R12 .. R13 .. R14
 53 [-]: MOVE      R11 R10      ; R11 := R10
 54 [-]: GETGLOBAL R12 K6       ; R12 := math
 55 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0xF7005A7B"]
 56 [-]: ADD       R13 R9 K11   ; R13 := R9 + 0.5
 57 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 58 [-]: MOVE      R13 R5       ; R13 := R5
 59 [-]: CONCAT    R10 R11 R13  ; R10 := R11 .. R12 .. R13
 60 [-]: LT        0 R6 K8      ; if R6 >= 0 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: LOADK     R10 K12      ; R10 := "-1"
 63 [-]: RETURN    R10 2        ; return R10
 64 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 521
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 525
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0xC6911558"]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x80B14403"]
  8 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
  9 [-]: RETURN    R2 0         ; return R2,...
 10 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 532
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADNIL   R1 R1        ; R1 := nil
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x93E76705"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 0         ; if not R2 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x80B14403"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: MOVE      R1 R2        ; R1 := R2
 28 [-]: RETURN    R1 2         ; return R1
 29 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 549
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 553
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8DB5D01F"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x30DABA98"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 563
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 567
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ToolTipUpdateColors"]
  5 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 16
  6 [-]: JMP       16           ; PC := 16
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x4124CC2F"]
  9 [-]: CALL      R2 1 1       ; R2()
 10 [-]: GETGLOBAL R2 K0        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ToolTipColors"]
 12 [-]: GETTABLE  R0 R2 K5     ; R0 := R2["Title"]
 13 [-]: GETGLOBAL R2 K0        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ToolTipColors"]
 15 [-]: GETTABLE  R1 R2 K6     ; R1 := R2["Content"]
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0x93C88E0"]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x93C88E0"]
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 24 [-]: RETURN    R2 0         ; return R2,...
 25 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 582
; #Upvalues:       2
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: LOADK     R7 K0        ; R7 := ""
  2 [-]: MOVE      R8 R1        ; R8 := R1
  3 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
  4 [-]: MOVE      R10 R4       ; R10 := R4
  5 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  6 [-]: TEST      R9 1         ; if R9 then PC := 20
  7 [-]: JMP       20           ; PC := 20
  8 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
  9 [-]: GETTABLE  R10 R4 K2    ; R10 := R4["endLineTag"]
 10 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 11 [-]: TEST      R9 1         ; if R9 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: GETTABLE  R7 R4 K2     ; R7 := R4["endLineTag"]
 14 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 15 [-]: GETTABLE  R10 R4 K3    ; R10 := R4["includeParagraphTag"]
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: TEST      R9 1         ; if R9 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: GETTABLE  R8 R4 K3     ; R8 := R4["includeParagraphTag"]
 20 [-]: GETUPVAL  R9 U0        ; R9 := U0
 21 [-]: CALL      R9 1 3       ; R9,R10 := R9()
 22 [-]: EQ        0 R5 K4      ; if R5 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R5 R9        ; R5 := R9
 25 [-]: EQ        0 R6 K4      ; if R6 ~= nil then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R6 R10       ; R6 := R10
 28 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETUPVAL  R11 U1       ; R11 := U1
 31 [-]: GETTABLE  R12 R2 K5    ; R12 := R2["rarity"]
 32 [-]: ADD       R12 R12 K6   ; R12 := R12 + 1
 33 [-]: GETTABLE  R5 R11 R12   ; R5 := R11[R12]
 34 [-]: LOADK     R11 K7       ; R11 := "<br>"
 35 [-]: LOADK     R12 K0       ; R12 := ""
 36 [-]: TEST      R8 0         ; if not R8 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: MOVE      R13 R12      ; R13 := R12
 39 [-]: LOADK     R14 K8       ; R14 := "<p>"
 40 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 41 [-]: MOVE      R13 R12      ; R13 := R12
 42 [-]: LOADK     R14 K9       ; R14 := "<font color=\""
 43 [-]: MOVE      R15 R5       ; R15 := R5
 44 [-]: LOADK     R16 K10      ; R16 := "\">"
 45 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 46 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 52
 47 [-]: JMP       52           ; PC := 52
 48 [-]: MOVE      R13 R12      ; R13 := R12
 49 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["localizedTitle"]
 50 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 51 [-]: JMP       66           ; PC := 66
 52 [-]: GETGLOBAL R13 K1       ; R13 := 0x400E7765
 53 [-]: MOVE      R14 R1       ; R14 := R1
 54 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 55 [-]: TEST      R13 1        ; if R13 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: MOVE      R13 R12      ; R13 := R12
 58 [-]: GETGLOBAL R14 K12      ; R14 := 0xE6DC43B0
 59 [-]: GETGLOBAL R15 K13      ; R15 := 0x9FAED6BC
 60 [-]: SELF      R16 R1 K14   ; R17 := R1; R16 := R1["0x616C74B6"]
 61 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
 62 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 63 [-]: MOVE      R16 R0       ; R16 := R0
 64 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 65 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 66 [-]: MOVE      R13 R12      ; R13 := R12
 67 [-]: MOVE      R14 R11      ; R14 := R11
 68 [-]: LOADK     R15 K15      ; R15 := "</font>"
 69 [-]: CONCAT    R12 R13 R15  ; R12 := R13 .. R14 .. R15
 70 [-]: MOVE      R13 R12      ; R13 := R12
 71 [-]: LOADK     R14 K9       ; R14 := "<font color=\""
 72 [-]: MOVE      R15 R6       ; R15 := R6
 73 [-]: LOADK     R16 K10      ; R16 := "\">"
 74 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 75 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 106
 76 [-]: JMP       106          ; PC := 106
 77 [-]: MOVE      R13 R12      ; R13 := R12
 78 [-]: GETTABLE  R14 R2 K16   ; R14 := R2["localizedDescription"]
 79 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 80 [-]: GETTABLE  R13 R2 K17   ; R13 := R2["affixes"]
 81 [-]: EQ        1 R13 K4     ; if R13 == nil then PC := 120
 82 [-]: JMP       120          ; PC := 120
 83 [-]: LOADK     R13 K6       ; R13 := 1
 84 [-]: GETTABLE  R14 R2 K17   ; R14 := R2["affixes"]
 85 [-]: LEN       R14 R14      ; R14 := # R14
 86 [-]: LOADK     R15 K6       ; R15 := 1
 87 [-]: FORPREP   R13 104      ; R13 -= R15; PC := 104
 88 [-]: MOVE      R17 R12      ; R17 := R12
 89 [-]: MOVE      R18 R11      ; R18 := R11
 90 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
 91 [-]: MOVE      R17 R12      ; R17 := R12
 92 [-]: LOADK     R18 K18      ; R18 := "<font color=\"#FFFFFF\">"
 93 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
 94 [-]: MOVE      R17 R12      ; R17 := R12
 95 [-]: GETTABLE  R18 R2 K17   ; R18 := R2["affixes"]
 96 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 97 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
 98 [-]: MOVE      R17 R12      ; R17 := R12
 99 [-]: LOADK     R18 K15      ; R18 := "</font>"
100 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
101 [-]: MOVE      R17 R12      ; R17 := R12
102 [-]: MOVE      R18 R7       ; R18 := R7
103 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
104 [-]: FORLOOP   R13 88       ; R13 += R15; if R13 <= R14 then begin PC := 88; R16 := R13 end
105 [-]: JMP       120          ; PC := 120
106 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
107 [-]: MOVE      R18 R1       ; R18 := R1
108 [-]: CALL      R17 2 2      ; R17 := R17(R18)
109 [-]: TEST      R17 1        ; if R17 then PC := 120
110 [-]: JMP       120          ; PC := 120
111 [-]: MOVE      R17 R12      ; R17 := R12
112 [-]: GETGLOBAL R18 K12      ; R18 := 0xE6DC43B0
113 [-]: GETGLOBAL R19 K13      ; R19 := 0x9FAED6BC
114 [-]: SELF      R20 R1 K19   ; R21 := R1; R20 := R1["0x42300EB5"]
115 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
116 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
117 [-]: MOVE      R20 R0       ; R20 := R0
118 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
119 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
120 [-]: MOVE      R17 R12      ; R17 := R12
121 [-]: LOADK     R18 K15      ; R18 := "</font>"
122 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
123 [-]: TEST      R8 0         ; if not R8 then PC := 128
124 [-]: JMP       128          ; PC := 128
125 [-]: MOVE      R17 R12      ; R17 := R12
126 [-]: LOADK     R18 K20      ; R18 := "</p>"
127 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
128 [-]: RETURN    R12 2        ; return R12
129 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 642
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: MOVE      R8 R0        ; R8 := R0
  3 [-]: MOVE      R9 R1        ; R9 := R1
  4 [-]: MOVE      R10 R2       ; R10 := R2
  5 [-]: MOVE      R11 R3       ; R11 := R3
  6 [-]: MOVE      R12 R4       ; R12 := R4
  7 [-]: MOVE      R13 R5       ; R13 := R5
  8 [-]: MOVE      R14 R6       ; R14 := R6
  9 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 10 [-]: RETURN    R7 0         ; return R7,...
 11 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 646
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LOADK     R1 K0        ; R1 := 16777215
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["rarity"]
  6 [-]: ADD       R3 R3 K3     ; R3 := R3 + 1
  7 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 656
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R5 K0        ; R5 := _T
  2 [-]: TEST      R1 0         ; if not R1 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R6 K2        ; R6 := string
  5 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["0x4B1F4F58"]
  6 [-]: LOADK     R7 K4        ; R7 := "0x%08X"
  7 [-]: MOVE      R8 R1        ; R8 := R1
  8 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  9 [-]: TEST      R6 1         ; if R6 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADNIL   R6 R6        ; R6 := nil
 12 [-]: SETTABLE  R5 K1 R6     ; R5["ColorPickerCurrentColor"] := R6
 13 [-]: GETGLOBAL R5 K0        ; R5 := _T
 14 [-]: SETTABLE  R5 K5 R2     ; R5["ColorPickerCallback"] := R2
 15 [-]: GETGLOBAL R5 K0        ; R5 := _T
 16 [-]: SETTABLE  R5 K6 R3     ; R5["ColorPickerOnCloseCallback"] := R3
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: SETTABLE  R5 K7 R4     ; R5["ColorPickerSpecificColorsInfo"] := R4
 19 [-]: GETGLOBAL R5 K0        ; R5 := _T
 20 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["InSimulacrum"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETGLOBAL R5 K0        ; R5 := _T
 24 [-]: SETTABLE  R5 K9 K10    ; R5["ColorPickerUseCustomBg"] := "0x1"
 25 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0["0x5FF274BB"]
 26 [-]: GETGLOBAL R7 K12       ; R7 := _G
 27 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["UIMovie_ColorPicker"]
 28 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 29 [-]: RETURN    R5 2         ; return R5
 30 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 668
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  2 [-]: MOVE      R6 R1        ; R6 := R1
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 0         ; if not R5 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: CALL      R5 1 2       ; R5 := R5()
  8 [-]: MOVE      R1 R5        ; R1 := R5
  9 [-]: GETGLOBAL R5 K1        ; R5 := _T
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mSpecialSuitMode"]
 11 [-]: TEST      R5 0         ; if not R5 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R5 K1        ; R5 := _T
 14 [-]: GETTABLE  R4 R5 K3     ; R4 := R5["SpecialSuitAvatar"]
 15 [-]: JMP       39           ; PC := 39
 16 [-]: GETGLOBAL R5 K1        ; R5 := _T
 17 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mSentinelMode"]
 18 [-]: TEST      R5 0         ; if not R5 then PC := 38
 19 [-]: JMP       38           ; PC := 38
 20 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: TEST      R5 1         ; if R5 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: SELF      R5 R1 K5     ; R6 := R1; R5 := R1["0x8B598ED4"]
 26 [-]: GETGLOBAL R7 K6        ; R7 := gLotusSentinelAvatarType
 27 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 28 [-]: TEST      R5 0         ; if not R5 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: JMP       39           ; PC := 39
 32 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1["0x8DB5D01F"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x30DABA98"]
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: MOVE      R4 R5        ; R4 := R5
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: TEST      R5 0         ; if not R5 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R5 K1        ; R5 := _T
 46 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 47 [-]: EQ        0 R5 K10     ; if R5 ~= nil then PC := 66
 48 [-]: JMP       66           ; PC := 66
 49 [-]: GETGLOBAL R5 K1        ; R5 := _T
 50 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 51 [-]: SETTABLE  R5 K9 R6     ; R5["suitTable"] := R6
 52 [-]: GETGLOBAL R5 K1        ; R5 := _T
 53 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 54 [-]: SETTABLE  R5 K11 K12   ; R5["desiredRot"] := -90
 55 [-]: GETGLOBAL R5 K1        ; R5 := _T
 56 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 57 [-]: GETGLOBAL R6 K1        ; R6 := _T
 58 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["suitTable"]
 59 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["desiredRot"]
 60 [-]: SETTABLE  R5 K13 R6    ; R5["lerpRot"] := R6
 61 [-]: GETGLOBAL R5 K1        ; R5 := _T
 62 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 63 [-]: GETGLOBAL R6 K15       ; R6 := 0x1E4F6281
 64 [-]: CALL      R6 1 2       ; R6 := R6()
 65 [-]: SETTABLE  R5 K14 R6    ; R5["lerpHead"] := R6
 66 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 67 [-]: MOVE      R6 R0        ; R6 := R0
 68 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 69 [-]: TEST      R5 1         ; if R5 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 72 [-]: MOVE      R6 R4        ; R6 := R4
 73 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 74 [-]: TEST      R5 0         ; if not R5 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: RETURN    R0 1         ; return 
 77 [-]: SELF      R5 R0 K16    ; R6 := R0; R5 := R0["0x8C1ACCEF"]
 78 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 79 [-]: TEST      R5 1         ; if R5 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: RETURN    R0 1         ; return 
 82 [-]: GETGLOBAL R5 K17       ; R5 := 0xF595ADDE
 83 [-]: SELF      R6 R0 K18    ; R7 := R0; R6 := R0["0x6B7B470B"]
 84 [-]: LOADK     R8 K19       ; R8 := "_root"
 85 [-]: LOADK     R9 K20       ; R9 := "_xmouse"
 86 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 87 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 88 [-]: GETGLOBAL R6 K17       ; R6 := 0xF595ADDE
 89 [-]: SELF      R7 R0 K18    ; R8 := R0; R7 := R0["0x6B7B470B"]
 90 [-]: LOADK     R9 K19       ; R9 := "_root"
 91 [-]: LOADK     R10 K21      ; R10 := "_ymouse"
 92 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 93 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 94 [-]: GETGLOBAL R7 K22       ; R7 := Engine
 95 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["0x9490FE70"]
 96 [-]: CALL      R7 1 2       ; R7 := R7()
 97 [-]: EQ        0 R5 K24     ; if R5 ~= -1000 then PC := 117
 98 [-]: JMP       117          ; PC := 117
 99 [-]: EQ        0 R6 K24     ; if R6 ~= -1000 then PC := 117
100 [-]: JMP       117          ; PC := 117
101 [-]: GETGLOBAL R8 K1        ; R8 := _T
102 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
103 [-]: GETTABLE  R5 R8 K25    ; R5 := R8["lastMX"]
104 [-]: GETGLOBAL R8 K1        ; R8 := _T
105 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
106 [-]: GETTABLE  R6 R8 K26    ; R6 := R8["lastMY"]
107 [-]: EQ        1 R5 K10     ; if R5 == nil then PC := 111
108 [-]: JMP       111          ; PC := 111
109 [-]: EQ        0 R6 K10     ; if R6 ~= nil then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: LOADK     R5 K27       ; R5 := 0
112 [-]: LOADK     R6 K27       ; R6 := 0
113 [-]: GETGLOBAL R8 K1        ; R8 := _T
114 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
115 [-]: SETTABLE  R8 K28 K29   ; R8["mouseOffScreen"] := "0x1"
116 [-]: JMP       133          ; PC := 133
117 [-]: GETGLOBAL R8 K1        ; R8 := _T
118 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
119 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["mouseOffScreen"]
120 [-]: TEST      R8 0         ; if not R8 then PC := 133
121 [-]: JMP       133          ; PC := 133
122 [-]: TEST      R7 1         ; if R7 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETGLOBAL R8 K1        ; R8 := _T
125 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
126 [-]: SETTABLE  R8 K25 R5    ; R8["lastMX"] := R5
127 [-]: GETGLOBAL R8 K1        ; R8 := _T
128 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
129 [-]: SETTABLE  R8 K26 R6    ; R8["lastMY"] := R6
130 [-]: GETGLOBAL R8 K1        ; R8 := _T
131 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
132 [-]: SETTABLE  R8 K28 K30   ; R8["mouseOffScreen"] := "0x0"
133 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0["0x6B7B470B"]
134 [-]: LOADK     R10 K19      ; R10 := "_root"
135 [-]: LOADK     R11 K31      ; R11 := "suitRotationX"
136 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
137 [-]: TEST      R7 1         ; if R7 then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: TEST      R3 0         ; if not R3 then PC := 164
140 [-]: JMP       164          ; PC := 164
141 [-]: TEST      R2 0         ; if not R2 then PC := 164
142 [-]: JMP       164          ; PC := 164
143 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
144 [-]: MOVE      R10 R8       ; R10 := R8
145 [-]: CALL      R9 2 2       ; R9 := R9(R10)
146 [-]: TEST      R9 1         ; if R9 then PC := 164
147 [-]: JMP       164          ; PC := 164
148 [-]: GETGLOBAL R9 K17       ; R9 := 0xF595ADDE
149 [-]: MOVE      R10 R8       ; R10 := R8
150 [-]: CALL      R9 2 2       ; R9 := R9(R10)
151 [-]: EQ        1 R9 K10     ; if R9 == nil then PC := 164
152 [-]: JMP       164          ; PC := 164
153 [-]: GETUPVAL  R9 U1        ; R9 := U1
154 [-]: GETGLOBAL R10 K17      ; R10 := 0xF595ADDE
155 [-]: MOVE      R11 R8       ; R11 := R8
156 [-]: CALL      R10 2 2      ; R10 := R10(R11)
157 [-]: MUL       R10 R10 K32  ; R10 := R10 * 1000
158 [-]: GETGLOBAL R11 K33      ; R11 := 0x4CDEF9FF
159 [-]: CALL      R11 1 2      ; R11 := R11()
160 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
161 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
162 [-]: MOVE      R9 R1        ; R9 := R1
163 [-]: GETUPVAL  R5 U1        ; R5 := U1
164 [-]: GETGLOBAL R9 K1        ; R9 := _T
165 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
166 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["wasUsingController"]
167 [-]: EQ        1 R9 R7      ; if R9 == R7 then PC := 178
168 [-]: JMP       178          ; PC := 178
169 [-]: GETGLOBAL R9 K1        ; R9 := _T
170 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
171 [-]: SETTABLE  R9 K34 R7    ; R9["wasUsingController"] := R7
172 [-]: GETGLOBAL R9 K1        ; R9 := _T
173 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
174 [-]: SETTABLE  R9 K25 R5    ; R9["lastMX"] := R5
175 [-]: GETGLOBAL R9 K1        ; R9 := _T
176 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
177 [-]: SETTABLE  R9 K26 R6    ; R9["lastMY"] := R6
178 [-]: GETUPVAL  R9 U2        ; R9 := U2
179 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["0xF81722A2"]
180 [-]: MOVE      R10 R3       ; R10 := R3
181 [-]: LOADK     R11 K36      ; R11 := ""
182 [-]: SELF      R12 R0 K37   ; R13 := R0; R12 := R0["0xE297FA96"]
183 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
184 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
185 [-]: EQ        0 R9 K36     ; if R9 ~= "" then PC := 206
186 [-]: JMP       206          ; PC := 206
187 [-]: TEST      R2 0         ; if not R2 then PC := 206
188 [-]: JMP       206          ; PC := 206
189 [-]: GETGLOBAL R10 K1       ; R10 := _T
190 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
191 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["lastMX"]
192 [-]: EQ        1 R10 K10    ; if R10 == nil then PC := 206
193 [-]: JMP       206          ; PC := 206
194 [-]: GETGLOBAL R10 K1       ; R10 := _T
195 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
196 [-]: GETGLOBAL R11 K1       ; R11 := _T
197 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["suitTable"]
198 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["desiredRot"]
199 [-]: GETGLOBAL R12 K1       ; R12 := _T
200 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
201 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["lastMX"]
202 [-]: SUB       R12 R12 R5   ; R12 := R12 - R5
203 [-]: MUL       R12 R12 K38  ; R12 := R12 * 0.5
204 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
205 [-]: SETTABLE  R10 K11 R11  ; R10["desiredRot"] := R11
206 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
207 [-]: GETGLOBAL R11 K1       ; R11 := _T
208 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["suitTable"]
209 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["lerpRot"]
210 [-]: CALL      R10 2 2      ; R10 := R10(R11)
211 [-]: TEST      R10 0        ; if not R10 then PC := 216
212 [-]: JMP       216          ; PC := 216
213 [-]: GETGLOBAL R10 K1       ; R10 := _T
214 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
215 [-]: SETTABLE  R10 K13 K27  ; R10["lerpRot"] := 0
216 [-]: GETGLOBAL R10 K1       ; R10 := _T
217 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
218 [-]: GETGLOBAL R11 K39      ; R11 := 0x93034B55
219 [-]: GETGLOBAL R12 K1       ; R12 := _T
220 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
221 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
222 [-]: GETGLOBAL R13 K1       ; R13 := _T
223 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
224 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["desiredRot"]
225 [-]: GETGLOBAL R14 K33      ; R14 := 0x4CDEF9FF
226 [-]: CALL      R14 1 2      ; R14 := R14()
227 [-]: MUL       R14 R14 K40  ; R14 := R14 * 4
228 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
229 [-]: SETTABLE  R10 K13 R11  ; R10["lerpRot"] := R11
230 [-]: LOADK     R10 K27      ; R10 := 0
231 [-]: GETGLOBAL R11 K1       ; R11 := _T
232 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["suitTable"]
233 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["lerpRot"]
234 [-]: GETGLOBAL R12 K1       ; R12 := _T
235 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
236 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["desiredRot"]
237 [-]: LE        0 R11 R12    ; if R11 > R12 then PC := 248
238 [-]: JMP       248          ; PC := 248
239 [-]: GETGLOBAL R11 K41      ; R11 := math
240 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["0xF93F7CC8"]
241 [-]: GETGLOBAL R12 K1       ; R12 := _T
242 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
243 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
244 [-]: MOD       R12 R12 K43  ; R12 := R12 % 360
245 [-]: CALL      R11 2 2      ; R11 := R11(R12)
246 [-]: SUB       R10 K43 R11  ; R10 := 360 - R11
247 [-]: JMP       256          ; PC := 256
248 [-]: GETGLOBAL R11 K41      ; R11 := math
249 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["0xF93F7CC8"]
250 [-]: GETGLOBAL R12 K1       ; R12 := _T
251 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
252 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
253 [-]: MOD       R12 R12 K43  ; R12 := R12 % 360
254 [-]: CALL      R11 2 2      ; R11 := R11(R12)
255 [-]: MOVE      R10 R11      ; R10 := R11
256 [-]: GETGLOBAL R11 K41      ; R11 := math
257 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["0xF93F7CC8"]
258 [-]: GETGLOBAL R12 K1       ; R12 := _T
259 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
260 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["desiredRot"]
261 [-]: GETGLOBAL R13 K1       ; R13 := _T
262 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
263 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["lerpRot"]
264 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
265 [-]: CALL      R11 2 2      ; R11 := R11(R12)
266 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 282
267 [-]: JMP       282          ; PC := 282
268 [-]: GETGLOBAL R12 K1       ; R12 := _T
269 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
270 [-]: GETGLOBAL R13 K1       ; R13 := _T
271 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
272 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["lerpRot"]
273 [-]: MOD       R13 R13 K43  ; R13 := R13 % 360
274 [-]: SETTABLE  R12 K13 R13  ; R12["lerpRot"] := R13
275 [-]: GETGLOBAL R12 K1       ; R12 := _T
276 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
277 [-]: GETGLOBAL R13 K1       ; R13 := _T
278 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
279 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["desiredRot"]
280 [-]: MOD       R13 R13 K43  ; R13 := R13 % 360
281 [-]: SETTABLE  R12 K11 R13  ; R12["desiredRot"] := R13
282 [-]: GETGLOBAL R12 K1       ; R12 := _T
283 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
284 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
285 [-]: GETGLOBAL R13 K1       ; R13 := _T
286 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["mSentinelMode"]
287 [-]: TEST      R13 0        ; if not R13 then PC := 297
288 [-]: JMP       297          ; PC := 297
289 [-]: GETGLOBAL R13 K1       ; R13 := _T
290 [-]: GETTABLE  R13 R13 K44  ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
291 [-]: EQ        1 R13 K10    ; if R13 == nil then PC := 297
292 [-]: JMP       297          ; PC := 297
293 [-]: GETGLOBAL R13 K1       ; R13 := _T
294 [-]: GETTABLE  R13 R13 K44  ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
295 [-]: ADD       R13 R12 R13  ; R13 := R12 + R13
296 [-]: MOD       R12 R13 K43  ; R12 := R13 % 360
297 [-]: MOD       R12 R12 K43  ; R12 := R12 % 360
298 [-]: LE        0 R12 K45    ; if R12 > -180 then PC := 302
299 [-]: JMP       302          ; PC := 302
300 [-]: ADD       R12 R12 K43  ; R12 := R12 + 360
301 [-]: JMP       305          ; PC := 305
302 [-]: LE        0 K46 R12    ; if 180 > R12 then PC := 305
303 [-]: JMP       305          ; PC := 305
304 [-]: SUB       R12 R12 K43  ; R12 := R12 - 360
305 [-]: SELF      R13 R4 K47   ; R14 := R4; R13 := R4["0xAB2C2F12"]
306 [-]: GETGLOBAL R15 K15      ; R15 := 0x1E4F6281
307 [-]: MOVE      R16 R12      ; R16 := R12
308 [-]: LOADK     R17 K27      ; R17 := 0
309 [-]: LOADK     R18 K27      ; R18 := 0
310 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
311 [-]: CALL      R13 0 1      ; R13(R14,...)
312 [-]: SELF      R13 R4 K48   ; R14 := R4; R13 := R4["0x6DA72501"]
313 [-]: CALL      R13 2 2      ; R13 := R13(R14)
314 [-]: SELF      R14 R4 K49   ; R15 := R4; R14 := R4["0xDBEF0FB6"]
315 [-]: CALL      R14 2 2      ; R14 := R14(R15)
316 [-]: GETGLOBAL R15 K1       ; R15 := _T
317 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["suitTable"]
318 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["positions"]
319 [-]: TEST      R15 0        ; if not R15 then PC := 325
320 [-]: JMP       325          ; PC := 325
321 [-]: GETGLOBAL R15 K1       ; R15 := _T
322 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["suitTable"]
323 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["positions"]
324 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
325 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
326 [-]: MOVE      R17 R15      ; R17 := R15
327 [-]: CALL      R16 2 2      ; R16 := R16(R17)
328 [-]: TEST      R16 1        ; if R16 then PC := 332
329 [-]: JMP       332          ; PC := 332
330 [-]: MOVE      R13 R15      ; R13 := R15
331 [-]: JMP       352          ; PC := 352
332 [-]: GETGLOBAL R16 K1       ; R16 := _T
333 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["suitTable"]
334 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["desiredPos"]
335 [-]: EQ        1 R16 K10    ; if R16 == nil then PC := 352
336 [-]: JMP       352          ; PC := 352
337 [-]: SELF      R16 R4 K5    ; R17 := R4; R16 := R4["0x8B598ED4"]
338 [-]: GETGLOBAL R18 K52      ; R18 := gPetAvatarType
339 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
340 [-]: TEST      R16 1        ; if R16 then PC := 352
341 [-]: JMP       352          ; PC := 352
342 [-]: GETGLOBAL R16 K53      ; R16 := 0xE0C881B4
343 [-]: MOVE      R17 R13      ; R17 := R13
344 [-]: GETGLOBAL R18 K1       ; R18 := _T
345 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["suitTable"]
346 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["desiredPos"]
347 [-]: GETGLOBAL R19 K33      ; R19 := 0x4CDEF9FF
348 [-]: CALL      R19 1 2      ; R19 := R19()
349 [-]: MUL       R19 R19 K40  ; R19 := R19 * 4
350 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
351 [-]: MOVE      R13 R16      ; R13 := R16
352 [-]: GETGLOBAL R16 K1       ; R16 := _T
353 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["suitTable"]
354 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["queuedTeleport"]
355 [-]: EQ        0 R16 K10    ; if R16 ~= nil then PC := 446
356 [-]: JMP       446          ; PC := 446
357 [-]: LOADK     R16 K27      ; R16 := 0
358 [-]: LOADK     R17 K27      ; R17 := 0
359 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
360 [-]: GETGLOBAL R19 K1       ; R19 := _T
361 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
362 [-]: GETTABLE  R19 R19 K55  ; R19 := R19["lerpRotZ"]
363 [-]: CALL      R18 2 2      ; R18 := R18(R19)
364 [-]: TEST      R18 1        ; if R18 then PC := 369
365 [-]: JMP       369          ; PC := 369
366 [-]: GETGLOBAL R18 K1       ; R18 := _T
367 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["suitTable"]
368 [-]: GETTABLE  R17 R18 K55  ; R17 := R18["lerpRotZ"]
369 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
370 [-]: GETGLOBAL R19 K1       ; R19 := _T
371 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
372 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["lerpRotY"]
373 [-]: CALL      R18 2 2      ; R18 := R18(R19)
374 [-]: TEST      R18 1        ; if R18 then PC := 379
375 [-]: JMP       379          ; PC := 379
376 [-]: GETGLOBAL R18 K1       ; R18 := _T
377 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["suitTable"]
378 [-]: GETTABLE  R16 R18 K56  ; R16 := R18["lerpRotY"]
379 [-]: SELF      R18 R4 K57   ; R19 := R4; R18 := R4["0x39D7F449"]
380 [-]: MOVE      R20 R13      ; R20 := R13
381 [-]: GETGLOBAL R21 K15      ; R21 := 0x1E4F6281
382 [-]: MOVE      R22 R12      ; R22 := R12
383 [-]: MOVE      R23 R16      ; R23 := R16
384 [-]: MOVE      R24 R17      ; R24 := R17
385 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
386 [-]: CALL      R18 0 1      ; R18(R19,...)
387 [-]: LOADNIL   R18 R18      ; R18 := nil
388 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
389 [-]: GETGLOBAL R20 K58      ; R20 := gRegion
390 [-]: CALL      R19 2 2      ; R19 := R19(R20)
391 [-]: TEST      R19 1        ; if R19 then PC := 397
392 [-]: JMP       397          ; PC := 397
393 [-]: GETGLOBAL R19 K58      ; R19 := gRegion
394 [-]: SELF      R19 R19 K59  ; R20 := R19; R19 := R19["0x3E2F6BF"]
395 [-]: CALL      R19 2 2      ; R19 := R19(R20)
396 [-]: MOVE      R18 R19      ; R18 := R19
397 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
398 [-]: MOVE      R20 R18      ; R20 := R18
399 [-]: CALL      R19 2 2      ; R19 := R19(R20)
400 [-]: TEST      R19 1        ; if R19 then PC := 463
401 [-]: JMP       463          ; PC := 463
402 [-]: SELF      R19 R18 K5   ; R20 := R18; R19 := R18["0x8B598ED4"]
403 [-]: GETGLOBAL R21 K60      ; R21 := gLotusOperatorAvatarType
404 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
405 [-]: TEST      R19 1        ; if R19 then PC := 463
406 [-]: JMP       463          ; PC := 463
407 [-]: GETGLOBAL R19 K1       ; R19 := _T
408 [-]: GETTABLE  R19 R19 K61  ; R19 := R19["MenuSuitAvatar"]
409 [-]: EQ        1 R4 R19     ; if R4 == R19 then PC := 415
410 [-]: JMP       415          ; PC := 415
411 [-]: GETGLOBAL R19 K1       ; R19 := _T
412 [-]: GETTABLE  R19 R19 K62  ; R19 := R19["KDriveAvatar"]
413 [-]: EQ        0 R4 R19     ; if R4 ~= R19 then PC := 463
414 [-]: JMP       463          ; PC := 463
415 [-]: EQ        1 R18 R4     ; if R18 == R4 then PC := 463
416 [-]: JMP       463          ; PC := 463
417 [-]: SELF      R19 R18 K57  ; R20 := R18; R19 := R18["0x39D7F449"]
418 [-]: MOVE      R21 R13      ; R21 := R13
419 [-]: GETGLOBAL R22 K15      ; R22 := 0x1E4F6281
420 [-]: MOVE      R23 R12      ; R23 := R12
421 [-]: LOADK     R24 K27      ; R24 := 0
422 [-]: LOADK     R25 K27      ; R25 := 0
423 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
424 [-]: CALL      R19 0 1      ; R19(R20,...)
425 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
426 [-]: GETGLOBAL R20 K1       ; R20 := _T
427 [-]: GETTABLE  R20 R20 K61  ; R20 := R20["MenuSuitAvatar"]
428 [-]: CALL      R19 2 2      ; R19 := R19(R20)
429 [-]: TEST      R19 1        ; if R19 then PC := 463
430 [-]: JMP       463          ; PC := 463
431 [-]: GETGLOBAL R19 K1       ; R19 := _T
432 [-]: GETTABLE  R19 R19 K62  ; R19 := R19["KDriveAvatar"]
433 [-]: EQ        0 R4 R19     ; if R4 ~= R19 then PC := 463
434 [-]: JMP       463          ; PC := 463
435 [-]: GETGLOBAL R19 K1       ; R19 := _T
436 [-]: GETTABLE  R19 R19 K61  ; R19 := R19["MenuSuitAvatar"]
437 [-]: SELF      R19 R19 K57  ; R20 := R19; R19 := R19["0x39D7F449"]
438 [-]: MOVE      R21 R13      ; R21 := R13
439 [-]: GETGLOBAL R22 K15      ; R22 := 0x1E4F6281
440 [-]: MOVE      R23 R12      ; R23 := R12
441 [-]: LOADK     R24 K27      ; R24 := 0
442 [-]: LOADK     R25 K27      ; R25 := 0
443 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
444 [-]: CALL      R19 0 1      ; R19(R20,...)
445 [-]: JMP       463          ; PC := 463
446 [-]: GETGLOBAL R19 K1       ; R19 := _T
447 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
448 [-]: GETGLOBAL R20 K1       ; R20 := _T
449 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["suitTable"]
450 [-]: GETTABLE  R20 R20 K54  ; R20 := R20["queuedTeleport"]
451 [-]: GETGLOBAL R21 K63      ; R21 := 0x6306558E
452 [-]: CALL      R21 1 2      ; R21 := R21()
453 [-]: SUB       R20 R20 R21  ; R20 := R20 - R21
454 [-]: SETTABLE  R19 K54 R20  ; R19["queuedTeleport"] := R20
455 [-]: GETGLOBAL R19 K1       ; R19 := _T
456 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
457 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["queuedTeleport"]
458 [-]: LE        0 R19 K27    ; if R19 > 0 then PC := 463
459 [-]: JMP       463          ; PC := 463
460 [-]: GETGLOBAL R19 K1       ; R19 := _T
461 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
462 [-]: SETTABLE  R19 K54 K10  ; R19["queuedTeleport"] := nil
463 [-]: GETGLOBAL R19 K64      ; R19 := 0x221C9700
464 [-]: MOVE      R20 R5       ; R20 := R5
465 [-]: MOVE      R21 R6       ; R21 := R6
466 [-]: LOADK     R22 K65      ; R22 := -200
467 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
468 [-]: SELF      R20 R4 K66   ; R21 := R4; R20 := R4["0xA7003AD9"]
469 [-]: CALL      R20 2 2      ; R20 := R20(R21)
470 [-]: SELF      R21 R0 K67   ; R22 := R0; R21 := R0["0xAF296C52"]
471 [-]: MOVE      R23 R20      ; R23 := R20
472 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
473 [-]: SETTABLE  R21 K68 K27  ; R21["z"] := 0
474 [-]: GETGLOBAL R22 K69      ; R22 := 0xEDD2EBFF
475 [-]: MOVE      R23 R21      ; R23 := R21
476 [-]: MOVE      R24 R19      ; R24 := R19
477 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
478 [-]: GETGLOBAL R23 K70      ; R23 := 0xA0DB3B89
479 [-]: MOVE      R24 R22      ; R24 := R22
480 [-]: CALL      R23 2 2      ; R23 := R23(R24)
481 [-]: GETTABLE  R24 R23 K68  ; R24 := R23["z"]
482 [-]: LT        0 K27 R24    ; if 0 >= R24 then PC := 487
483 [-]: JMP       487          ; PC := 487
484 [-]: GETTABLE  R24 R23 K68  ; R24 := R23["z"]
485 [-]: UNM       R24 R24      ; R24 := - R24
486 [-]: SETTABLE  R23 K68 R24  ; R23["z"] := R24
487 [-]: GETGLOBAL R24 K71      ; R24 := 0x4CBE9A09
488 [-]: MOVE      R25 R23      ; R25 := R23
489 [-]: GETGLOBAL R26 K15      ; R26 := 0x1E4F6281
490 [-]: SUB       R27 K72 R12  ; R27 := 90 - R12
491 [-]: LOADK     R28 K27      ; R28 := 0
492 [-]: LOADK     R29 K27      ; R29 := 0
493 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
494 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
495 [-]: MOVE      R23 R24      ; R23 := R24
496 [-]: GETGLOBAL R24 K69      ; R24 := 0xEDD2EBFF
497 [-]: GETGLOBAL R25 K73      ; R25 := ZERO_VECTOR
498 [-]: MOVE      R26 R23      ; R26 := R23
499 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
500 [-]: MOVE      R22 R24      ; R22 := R24
501 [-]: SETTABLE  R22 K74 K27  ; R22["bank"] := 0
502 [-]: GETTABLE  R24 R22 K75  ; R24 := R22["pitch"]
503 [-]: UNM       R24 R24      ; R24 := - R24
504 [-]: SETTABLE  R22 K75 R24  ; R22["pitch"] := R24
505 [-]: GETGLOBAL R24 K77      ; R24 := 0x6374FD98
506 [-]: GETTABLE  R25 R22 K76  ; R25 := R22["heading"]
507 [-]: LOADK     R26 K78      ; R26 := -70
508 [-]: LOADK     R27 K79      ; R27 := 70
509 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
510 [-]: SETTABLE  R22 K76 R24  ; R22["heading"] := R24
511 [-]: GETGLOBAL R24 K77      ; R24 := 0x6374FD98
512 [-]: GETTABLE  R25 R22 K75  ; R25 := R22["pitch"]
513 [-]: LOADK     R26 K80      ; R26 := -30
514 [-]: LOADK     R27 K81      ; R27 := 20
515 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
516 [-]: SETTABLE  R22 K75 R24  ; R22["pitch"] := R24
517 [-]: GETGLOBAL R24 K1       ; R24 := _T
518 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
519 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["lerpHead"]
520 [-]: GETGLOBAL R25 K39      ; R25 := 0x93034B55
521 [-]: GETGLOBAL R26 K1       ; R26 := _T
522 [-]: GETTABLE  R26 R26 K9   ; R26 := R26["suitTable"]
523 [-]: GETTABLE  R26 R26 K14  ; R26 := R26["lerpHead"]
524 [-]: GETTABLE  R26 R26 K76  ; R26 := R26["heading"]
525 [-]: GETTABLE  R27 R22 K76  ; R27 := R22["heading"]
526 [-]: GETGLOBAL R28 K33      ; R28 := 0x4CDEF9FF
527 [-]: CALL      R28 1 2      ; R28 := R28()
528 [-]: MUL       R28 R28 K82  ; R28 := R28 * 8
529 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
530 [-]: SETTABLE  R24 K76 R25  ; R24["heading"] := R25
531 [-]: GETGLOBAL R24 K1       ; R24 := _T
532 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
533 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["lerpHead"]
534 [-]: GETGLOBAL R25 K39      ; R25 := 0x93034B55
535 [-]: GETGLOBAL R26 K1       ; R26 := _T
536 [-]: GETTABLE  R26 R26 K9   ; R26 := R26["suitTable"]
537 [-]: GETTABLE  R26 R26 K14  ; R26 := R26["lerpHead"]
538 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["pitch"]
539 [-]: GETTABLE  R27 R22 K75  ; R27 := R22["pitch"]
540 [-]: GETGLOBAL R28 K33      ; R28 := 0x4CDEF9FF
541 [-]: CALL      R28 1 2      ; R28 := R28()
542 [-]: MUL       R28 R28 K82  ; R28 := R28 * 8
543 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
544 [-]: SETTABLE  R24 K75 R25  ; R24["pitch"] := R25
545 [-]: GETGLOBAL R24 K1       ; R24 := _T
546 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
547 [-]: SETTABLE  R24 K25 R5   ; R24["lastMX"] := R5
548 [-]: GETGLOBAL R24 K1       ; R24 := _T
549 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
550 [-]: SETTABLE  R24 K26 R6   ; R24["lastMY"] := R6
551 [-]: TEST      R7 0         ; if not R7 then PC := 557
552 [-]: JMP       557          ; PC := 557
553 [-]: GETGLOBAL R24 K1       ; R24 := _T
554 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
555 [-]: GETUPVAL  R25 U1       ; R25 := U1
556 [-]: SETTABLE  R24 K25 R25  ; R24["lastMX"] := R25
557 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 862
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3E2F6BF"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x93034B55
  5 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["heading"]
  6 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["heading"]
  7 [-]: GETGLOBAL R6 K4        ; R6 := 0x4CDEF9FF
  8 [-]: CALL      R6 1 2       ; R6 := R6()
  9 [-]: MUL       R6 R6 K5     ; R6 := R6 * 8
 10 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 11 [-]: SETTABLE  R1 K2 R3     ; R1["heading"] := R3
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x93034B55
 13 [-]: GETTABLE  R4 R1 K6     ; R4 := R1["pitch"]
 14 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["pitch"]
 15 [-]: GETGLOBAL R6 K4        ; R6 := 0x4CDEF9FF
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: MUL       R6 R6 K5     ; R6 := R6 * 8
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: SETTABLE  R1 K6 R3     ; R1["pitch"] := R3
 20 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0x42C8B968"]
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0xEC274B1A
 22 [-]: LOADK     R6 K9        ; R6 := "GAME_C1_HEAD1"
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: MOVE      R6 R1        ; R6 := R1
 25 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 871
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 874
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["profileIconList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  9 [-]: SETTABLE  R0 K2 R1     ; R0["profileIconList"] := R1
 10 [-]: GETGLOBAL R0 K1        ; R0 := _T
 11 [-]: CLOSURE   R1 0         ; R1 := closure(Function #29.1)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["GetLocalLoadout"] := R1
 13 [-]: GETGLOBAL R0 K1        ; R0 := _T
 14 [-]: CLOSURE   R1 1         ; R1 := closure(Function #29.2)
 15 [-]: SETTABLE  R0 K4 R1     ; R0["SetProfileIcon"] := R1
 16 [-]: GETGLOBAL R0 K1        ; R0 := _T
 17 [-]: CLOSURE   R1 2         ; R1 := closure(Function #29.3)
 18 [-]: SETTABLE  R0 K5 R1     ; R0["UpdateProfileIconList"] := R1
 19 [-]: RETURN    R0 1         ; return 


; Function #29.1:
;
; Name:            
; Defined at line: 878
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x30BDE7F"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #29.2:
;
; Name:            
; Defined at line: 887
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3B14805C"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R3 K3        ; R3 := gGameData
 11 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x99830BB2"]
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: LOADK     R7 K5        ; R7 := "OnAvatarImageSet"
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: SELF      R4 R2 K4     ; R5 := R2; R4 := R2["0x99830BB2"]
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R4 3 1       ; R4(R5,R6)
 23 [-]: GETGLOBAL R4 K6        ; R4 := gMatchingService
 24 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0xD5E03646"]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
 27 [-]: MOVE      R6 R4        ; R6 := R4
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: TEST      R5 1         ; if R5 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R5 R4 K8     ; R6 := R4; R5 := R4["0x4DEA50F4"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R5 K9        ; R5 := 0x93B1256B
 36 [-]: LOADK     R6 K10       ; R6 := "SetProfileIcon - SendLobbyLoadout"
 37 [-]: CALL      R5 2 1       ; R5(R6)
 38 [-]: GETGLOBAL R5 K11       ; R5 := gGameRules
 39 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5["0x931066AE"]
 40 [-]: CALL      R5 2 1       ; R5(R6)
 41 [-]: GETGLOBAL R5 K0        ; R5 := _T
 42 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0xB84C5A80"]
 43 [-]: CALL      R5 2 1       ; R5(R6)
 44 [-]: RETURN    R0 1         ; return 


; Function #29.3:
;
; Name:            
; Defined at line: 910
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["profileIconList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := _T
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0x3B14805C"]
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 12 [-]: GETGLOBAL R2 K1        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["profileIconList"]
 14 [-]: LEN       R2 R2        ; R2 := # R2
 15 [-]: LOADK     R3 K4        ; R3 := 1
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: LOADK     R5 K4        ; R5 := 1
 18 [-]: FORPREP   R3 91        ; R3 -= R5; PC := 91
 19 [-]: GETGLOBAL R7 K1        ; R7 := _T
 20 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 21 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 22 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
 23 [-]: GETTABLE  R9 R7 K5     ; R9 := R7["Movie"]
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: TEST      R8 1         ; if R8 then PC := 91
 26 [-]: JMP       91           ; PC := 91
 27 [-]: MOVE      R8 R0        ; R8 := R0
 28 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 29 [-]: GETTABLE  R10 R7 K6    ; R10 := R7["HumanPlayer"]
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: TEST      R9 1         ; if R9 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETTABLE  R9 R7 K6     ; R9 := R7["HumanPlayer"]
 34 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9["0x8F6EA7B6"]
 35 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 36 [-]: TEST      R9 1         ; if R9 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETTABLE  R9 R7 K6     ; R9 := R7["HumanPlayer"]
 39 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0x30BDE7F"]
 40 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 41 [-]: MOVE      R8 R9        ; R8 := R9
 42 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 43 [-]: MOVE      R10 R8       ; R10 := R8
 44 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 45 [-]: TEST      R9 1         ; if R9 then PC := 91
 46 [-]: JMP       91           ; PC := 91
 47 [-]: SELF      R9 R8 K9     ; R10 := R8; R9 := R8["0xC07C8194"]
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 50 [-]: MOVE      R11 R9       ; R11 := R9
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: TEST      R10 1        ; if R10 then PC := 71
 53 [-]: JMP       71           ; PC := 71
 54 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 55 [-]: GETTABLE  R11 R9 K10   ; R11 := R9["mItemType"]
 56 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 57 [-]: TEST      R10 1        ; if R10 then PC := 71
 58 [-]: JMP       71           ; PC := 71
 59 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 60 [-]: GETTABLE  R11 R9 K10   ; R11 := R9["mItemType"]
 61 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 62 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 63 [-]: MOVE      R12 R10      ; R12 := R10
 64 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 65 [-]: TEST      R11 1        ; if R11 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: SELF      R11 R10 K12  ; R12 := R10; R11 := R10["0xF1A9732E"]
 68 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 69 [-]: MOVE      R9 R11       ; R9 := R11
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETGLOBAL R11 K13      ; R11 := _G
 72 [-]: GETTABLE  R9 R11 K14   ; R9 := R11["UITexture_ProfilePlaceHolder"]
 73 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 74 [-]: MOVE      R12 R9       ; R12 := R9
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: TEST      R11 1        ; if R11 then PC := 88
 77 [-]: JMP       88           ; PC := 88
 78 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 79 [-]: GETTABLE  R12 R7 K5    ; R12 := R7["Movie"]
 80 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 81 [-]: TEST      R11 1        ; if R11 then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETTABLE  R11 R7 K5    ; R11 := R7["Movie"]
 84 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x26581636"]
 85 [-]: GETTABLE  R13 R7 K16   ; R13 := R7["Clip"]
 86 [-]: MOVE      R14 R9       ; R14 := R9
 87 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 88 [-]: LEN       R11 R1       ; R11 := # R1
 89 [-]: ADD       R11 R11 K4   ; R11 := R11 + 1
 90 [-]: SETTABLE  R1 R11 R7    ; R1[R11] := R7
 91 [-]: FORLOOP   R3 19        ; R3 += R5; if R3 <= R4 then begin PC := 19; R6 := R3 end
 92 [-]: GETGLOBAL R11 K1       ; R11 := _T
 93 [-]: SETTABLE  R11 K2 R1    ; R11["profileIconList"] := R1
 94 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 949
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["profileIconList"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K1        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["profileIconList"]
 10 [-]: LEN       R2 R2        ; R2 := # R2
 11 [-]: LOADK     R3 K3        ; R3 := 1
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: LOADK     R5 K3        ; R5 := 1
 14 [-]: FORPREP   R3 34        ; R3 -= R5; PC := 34
 15 [-]: GETGLOBAL R7 K1        ; R7 := _T
 16 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 17 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 18 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["Movie"]
 19 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETGLOBAL R7 K1        ; R7 := _T
 22 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 23 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 24 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["Clip"]
 25 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R7 K6        ; R7 := table
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0xCDB1FD5E"]
 29 [-]: GETGLOBAL R8 K1        ; R8 := _T
 30 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["profileIconList"]
 31 [-]: MOVE      R9 R6        ; R9 := R6
 32 [-]: CALL      R7 3 1       ; R7(R8,R9)
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 35 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 962
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETGLOBAL R4 K1        ; R4 := _T
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["profileIconList"]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  9 [-]: SETTABLE  R3 K3 R0     ; R3["Movie"] := R0
 10 [-]: SETTABLE  R3 K4 R1     ; R3["Clip"] := R1
 11 [-]: SETTABLE  R3 K5 R2     ; R3["HumanPlayer"] := R2
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: GETGLOBAL R5 K1        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["profileIconList"]
 15 [-]: LEN       R5 R5        ; R5 := # R5
 16 [-]: LOADK     R6 K6        ; R6 := 1
 17 [-]: MOVE      R7 R5        ; R7 := R5
 18 [-]: LOADK     R8 K6        ; R8 := 1
 19 [-]: FORPREP   R6 32        ; R6 -= R8; PC := 32
 20 [-]: GETGLOBAL R10 K1       ; R10 := _T
 21 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 22 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 23 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["Clip"]
 24 [-]: GETTABLE  R11 R3 K4    ; R11 := R3["Clip"]
 25 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: GETGLOBAL R10 K1       ; R10 := _T
 29 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 30 [-]: SETTABLE  R10 R9 R3    ; R10[R9] := R3
 31 [-]: JMP       33           ; PC := 33
 32 [-]: FORLOOP   R6 20        ; R6 += R8; if R6 <= R7 then begin PC := 20; R9 := R6 end
 33 [-]: TEST      R4 1         ; if R4 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R10 K1       ; R10 := _T
 36 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 37 [-]: ADD       R11 R5 K6    ; R11 := R5 + 1
 38 [-]: SETTABLE  R10 R11 R3   ; R10[R11] := R3
 39 [-]: GETGLOBAL R10 K1       ; R10 := _T
 40 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0xB84C5A80"]
 41 [-]: CALL      R10 2 1      ; R10(R11)
 42 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 985
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETGLOBAL R5 K1        ; R5 := gGameData
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R4 K1        ; R4 := gGameData
  8 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0xAC11F58D"]
  9 [-]: MOVE      R6 R0        ; R6 := R0
 10 [-]: GETGLOBAL R7 K3        ; R7 := gRegion
 11 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7["0x372CB914"]
 12 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 13 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x144A28F9"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: MOVE      R8 R1        ; R8 := R1
 16 [-]: MOVE      R9 R2        ; R9 := R2
 17 [-]: MOVE      R10 R3       ; R10 := R3
 18 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 19 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 993
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETGLOBAL R3 K1        ; R3 := _G
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["UIMovie_GenericSettings"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x5FF274BB"]
 14 [-]: GETGLOBAL R4 K1        ; R4 := _G
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_GenericSettings"]
 16 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 24 [-]: LOADK     R5 K5        ; R5 := "SetTitle"
 25 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/ReportPlayer_DetailsTitle"
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 28 [-]: LOADK     R5 K7        ; R5 := "SetConfirmButtonActive"
 29 [-]: LOADK     R6 K8        ; R6 := "true"
 30 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 31 [-]: GETGLOBAL R3 K9        ; R3 := _T
 32 [-]: CLOSURE   R4 0         ; R4 := closure(Function #33.1)
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: SETTABLE  R3 K10 R4    ; R3["ReportReason_Done"] := R4
 36 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 37 [-]: LOADK     R5 K11       ; R5 := "SetCallBack"
 38 [-]: LOADK     R6 K10       ; R6 := "ReportReason_Done"
 39 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 40 [-]: GETGLOBAL R3 K9        ; R3 := _T
 41 [-]: CLOSURE   R4 1         ; R4 := closure(Function #33.2)
 42 [-]: SETTABLE  R3 K12 R4    ; R3["ReportReason_GetSettings"] := R4
 43 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 44 [-]: LOADK     R5 K13       ; R5 := "SetElementsFunction"
 45 [-]: LOADK     R6 K12       ; R6 := "ReportReason_GetSettings"
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: RETURN    R0 1         ; return 


; Function #33.1:
;
; Name:            
; Defined at line: 1006
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["ReportReason_Done"] := nil
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K3 K2     ; R2["ReportReason_GetSettings"] := nil
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x458F27A9"]
 21 [-]: LOADK     R4 K6        ; R4 := "ConfirmReportPlayer"
 22 [-]: GETTABLE  R5 R0 K7     ; R5 := R0[1]
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mContent"]
 24 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 25 [-]: RETURN    R0 1         ; return 


; Function #33.2:
;
; Name:            
; Defined at line: 1023
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 6       ; R3 := {}
  6 [-]: SETTABLE  R3 K2 K3     ; R3["mLabel"] := "/Lotus/Language/CrashHandler/STRING_DETAILS"
  7 [-]: GETGLOBAL R4 K5        ; R4 := INPUTBOX
  8 [-]: SETTABLE  R3 K4 R4     ; R3["mType"] := R4
  9 [-]: SETTABLE  R3 K6 K7     ; R3["mMaxChars"] := 200
 10 [-]: SETTABLE  R3 K8 K9     ; R3["mWidth"] := 500
 11 [-]: SETTABLE  R3 K10 K11   ; R3["mHeight"] := 210
 12 [-]: SETTABLE  R3 K12 K13   ; R3["mMultiLine"] := "0x1"
 13 [-]: CALL      R1 3 1       ; R1(R2,R3)
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1041
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: GETGLOBAL R4 K1        ; R4 := _G
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_GenericMenu"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R3 R3        ; R3 := nil
 13 [-]: RETURN    R3 2         ; return R3
 14 [-]: LOADK     R3 K3        ; R3 := ""
 15 [-]: LOADK     R4 K3        ; R4 := ""
 16 [-]: GETUPVAL  R5 U0        ; R5 := U0
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K4        ; R7 := 1
 19 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 20 [-]: CLOSURE   R6 0         ; R6 := closure(Function #34.1)
 21 [-]: MOVE      R0 R4        ; R0 := R4
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: SETTABLE  R5 K5 R6     ; R5["ConfirmReportPlayer"] := R6
 24 [-]: CLOSURE   R6 1         ; R6 := closure(Function #34.2)
 25 [-]: GETUPVAL  R0 U2        ; R0 := U2
 26 [-]: MOVE      R0 R1        ; R0 := R1
 27 [-]: MOVE      R0 R3        ; R0 := R3
 28 [-]: MOVE      R0 R4        ; R0 := R4
 29 [-]: MOVE      R0 R2        ; R0 := R2
 30 [-]: SETTABLE  R5 K6 R6     ; R5["OnConfirmReportPlayer"] := R6
 31 [-]: CLOSURE   R6 2         ; R6 := closure(Function #34.3)
 32 [-]: GETUPVAL  R0 U1        ; R0 := U1
 33 [-]: MOVE      R0 R3        ; R0 := R3
 34 [-]: MOVE      R0 R2        ; R0 := R2
 35 [-]: MOVE      R0 R5        ; R0 := R5
 36 [-]: SETTABLE  R5 K7 R6     ; R5["OnPlayerReported"] := R6
 37 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x5FF274BB"]
 38 [-]: GETGLOBAL R8 K1        ; R8 := _G
 39 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["UIMovie_GenericMenu"]
 40 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 41 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x458F27A9"]
 42 [-]: LOADK     R9 K10       ; R9 := "SetTitle"
 43 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0["0x5DB0BD4"]
 44 [-]: LOADK     R12 K12      ; R12 := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
 45 [-]: MOVE      R13 R0       ; R13 := R0
 46 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 47 [-]: LOADK     R11 K13      ; R11 := " "
 48 [-]: MOVE      R12 R1       ; R12 := R1
 49 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 50 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 51 [-]: GETGLOBAL R7 K14       ; R7 := _T
 52 [-]: CLOSURE   R8 3         ; R8 := closure(Function #34.4)
 53 [-]: MOVE      R0 R3        ; R0 := R3
 54 [-]: GETUPVAL  R0 U3        ; R0 := U3
 55 [-]: MOVE      R0 R0        ; R0 := R0
 56 [-]: MOVE      R0 R2        ; R0 := R2
 57 [-]: SETTABLE  R7 K15 R8    ; R7["ReportSelectionDone"] := R8
 58 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x458F27A9"]
 59 [-]: LOADK     R9 K16       ; R9 := "SetCallBack"
 60 [-]: LOADK     R10 K15      ; R10 := "ReportSelectionDone"
 61 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 62 [-]: GETGLOBAL R7 K14       ; R7 := _T
 63 [-]: CLOSURE   R8 4         ; R8 := closure(Function #34.5)
 64 [-]: SETTABLE  R7 K17 R8    ; R7["GetReportOptions"] := R8
 65 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x458F27A9"]
 66 [-]: LOADK     R9 K18       ; R9 := "SetElementsFunction"
 67 [-]: LOADK     R10 K17      ; R10 := "GetReportOptions"
 68 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 69 [-]: RETURN    R6 2         ; return R6
 70 [-]: RETURN    R0 1         ; return 


; Function #34.1:
;
; Name:            
; Defined at line: 1050
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U1        ; R1 := U1
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: LOADK     R3 K2        ; R3 := ""
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x1C988750"]
 13 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Language/Menu/ReportPlayer_ConfirmText"
 14 [-]: LOADK     R3 K5        ; R3 := "OnConfirmReportPlayer"
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: RETURN    R0 1         ; return 


; Function #34.2:
;
; Name:            
; Defined at line: 1057
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETUPVAL  R3 U2        ; R3 := U2
 11 [-]: GETUPVAL  R4 U3        ; R4 := U3
 12 [-]: LOADK     R5 K3        ; R5 := "OnPlayerReported"
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U4        ; R2 := U4
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETUPVAL  R1 U4        ; R1 := U4
 21 [-]: LOADNIL   R2 R2        ; R2 := nil
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: RETURN    R0 1         ; return 


; Function #34.3:
;
; Name:            
; Defined at line: 1066
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0xB11F032"]
  5 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/ReportPlayerSuccess"
  6 [-]: CALL      R3 2 1       ; R3(R4)
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0x38ECFE60"]
 11 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/ReportPlayerFailed"
 12 [-]: CALL      R3 2 1       ; R3(R4)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 14 [-]: GETUPVAL  R4 U2        ; R4 := U2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETUPVAL  R3 U3        ; R3 := U3
 22 [-]: SETTABLE  R3 K5 K6     ; R3["ConfirmReportPlayer"] := nil
 23 [-]: GETUPVAL  R3 U3        ; R3 := U3
 24 [-]: SETTABLE  R3 K7 K6     ; R3["OnConfirmReportPlayer"] := nil
 25 [-]: GETUPVAL  R3 U3        ; R3 := U3
 26 [-]: SETTABLE  R3 K8 K6     ; R3["OnPlayerReported"] := nil
 27 [-]: RETURN    R0 1         ; return 


; Function #34.4:
;
; Name:            
; Defined at line: 1088
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ReportSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetReportOptions"] := nil
  5 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  6 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  9 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mReason"]
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETUPVAL  R3 U3        ; R3 := U3
 14 [-]: CALL      R1 3 1       ; R1(R2,R3)
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U3        ; R2 := U3
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R1 U3        ; R1 := U3
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #34.5:
;
; Name:            
; Defined at line: 1103
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 2       ; R3 := {}
  6 [-]: SETTABLE  R3 K2 K3     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_Spam"
  7 [-]: SETTABLE  R3 K4 K5     ; R3["mReason"] := "Spam"
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: GETGLOBAL R1 K0        ; R1 := table
 10 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 13 [-]: SETTABLE  R3 K2 K6     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_OffensiveLanguage"
 14 [-]: SETTABLE  R3 K4 K7     ; R3["mReason"] := "OffensiveLangauge"
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: GETGLOBAL R1 K0        ; R1 := table
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 20 [-]: SETTABLE  R3 K2 K8     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_OffensiveName"
 21 [-]: SETTABLE  R3 K4 K9     ; R3["mReason"] := "OffensiveName"
 22 [-]: CALL      R1 3 1       ; R1(R2,R3)
 23 [-]: GETGLOBAL R1 K0        ; R1 := table
 24 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 27 [-]: SETTABLE  R3 K2 K10    ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_Harassment"
 28 [-]: SETTABLE  R3 K4 K11    ; R3["mReason"] := "Harassment"
 29 [-]: CALL      R1 3 1       ; R1(R2,R3)
 30 [-]: GETGLOBAL R1 K0        ; R1 := table
 31 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 32 [-]: MOVE      R2 R0        ; R2 := R0
 33 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 34 [-]: SETTABLE  R3 K2 K12    ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_RealLifeThreat"
 35 [-]: SETTABLE  R3 K4 K13    ; R3["mReason"] := "RealLifeThreat"
 36 [-]: CALL      R1 3 1       ; R1(R2,R3)
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1119
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x10FB851"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1123
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0x4F6BF2C8"]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: MOVE      R6 R2        ; R6 := R2
  6 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  7 [-]: RETURN    R3 2         ; return R3
  8 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1127
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0x69B983D"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: RETURN    R2 0         ; return R2,...
  7 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1131
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["0xBB2F7661"]
  3 [-]: MOVE      R8 R0        ; R8 := R0
  4 [-]: MOVE      R9 R1        ; R9 := R1
  5 [-]: MOVE      R10 R2       ; R10 := R2
  6 [-]: MOVE      R11 R3       ; R11 := R3
  7 [-]: MOVE      R12 R4       ; R12 := R4
  8 [-]: MOVE      R13 R5       ; R13 := R5
  9 [-]: MOVE      R14 R6       ; R14 := R6
 10 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 11 [-]: RETURN    R7 0         ; return R7,...
 12 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1136
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADK     R5 K0        ; R5 := 1
  3 [-]: LOADK     R6 K1        ; R6 := 4
  4 [-]: LOADK     R7 K0        ; R7 := 1
  5 [-]: FORPREP   R5 89        ; R5 -= R7; PC := 89
  6 [-]: LOADNIL   R9 R9        ; R9 := nil
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
  8 [-]: MOVE      R11 R2       ; R11 := R2
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: TEST      R10 1        ; if R10 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R10 R2 K3    ; R11 := R2; R10 := R2["0x96FB4CEE"]
 13 [-]: SUB       R12 R8 K0    ; R12 := R8 - 1
 14 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 15 [-]: MOVE      R9 R10       ; R9 := R10
 16 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 17 [-]: MOVE      R11 R9       ; R11 := R9
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: TEST      R10 1        ; if R10 then PC := 64
 20 [-]: JMP       64           ; PC := 64
 21 [-]: GETGLOBAL R10 K4       ; R10 := 0x7C282057
 22 [-]: MOVE      R11 R9       ; R11 := R9
 23 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 24 [-]: SETTABLE  R4 R8 R10    ; R4[R8] := R10
 25 [-]: SELF      R11 R10 K5   ; R12 := R10; R11 := R10["0x616C74B6"]
 26 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 27 [-]: SELF      R12 R0 K6    ; R13 := R0; R12 := R0["0x17028E8F"]
 28 [-]: MOVE      R14 R1       ; R14 := R1
 29 [-]: LOADK     R15 K7       ; R15 := ".Ability"
 30 [-]: MOVE      R16 R8       ; R16 := R8
 31 [-]: LOADK     R17 K8       ; R17 := ".Name.text"
 32 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 33 [-]: SELF      R15 R11 K9   ; R16 := R11; R15 := R11["0x5EC7A3D2"]
 34 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 35 [-]: CALL      R12 0 1      ; R12(R13,...)
 36 [-]: SELF      R12 R10 K10  ; R13 := R10; R12 := R10["0xF1A9732E"]
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: GETGLOBAL R13 K2       ; R13 := 0x400E7765
 39 [-]: MOVE      R14 R12      ; R14 := R12
 40 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 41 [-]: TEST      R13 1        ; if R13 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: SELF      R13 R0 K11   ; R14 := R0; R13 := R0["0x26581636"]
 44 [-]: MOVE      R15 R1       ; R15 := R1
 45 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 46 [-]: MOVE      R17 R8       ; R17 := R8
 47 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 48 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 49 [-]: MOVE      R16 R12      ; R16 := R12
 50 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 51 [-]: SELF      R13 R0 K13   ; R14 := R0; R13 := R0["0x1C19D966"]
 52 [-]: MOVE      R15 R1       ; R15 := R1
 53 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 54 [-]: MOVE      R17 R8       ; R17 := R8
 55 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 56 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 57 [-]: LOADK     R16 K14      ; R16 := "_visible"
 58 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
 59 [-]: MOVE      R18 R12      ; R18 := R12
 60 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 61 [-]: MOVE      R17 R17      ; R17 := R17
 62 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 63 [-]: JMP       89           ; PC := 89
 64 [-]: SELF      R13 R0 K6    ; R14 := R0; R13 := R0["0x17028E8F"]
 65 [-]: MOVE      R15 R1       ; R15 := R1
 66 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 67 [-]: MOVE      R17 R8       ; R17 := R8
 68 [-]: LOADK     R18 K8       ; R18 := ".Name.text"
 69 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 70 [-]: LOADK     R16 K15      ; R16 := ""
 71 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 72 [-]: SELF      R13 R0 K11   ; R14 := R0; R13 := R0["0x26581636"]
 73 [-]: MOVE      R15 R1       ; R15 := R1
 74 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 75 [-]: MOVE      R17 R8       ; R17 := R8
 76 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 77 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 78 [-]: LOADNIL   R16 R16      ; R16 := nil
 79 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 80 [-]: SELF      R13 R0 K13   ; R14 := R0; R13 := R0["0x1C19D966"]
 81 [-]: MOVE      R15 R1       ; R15 := R1
 82 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 83 [-]: MOVE      R17 R8       ; R17 := R8
 84 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 85 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 86 [-]: LOADK     R16 K14      ; R16 := "_visible"
 87 [-]: MOVE      R17 R0       ; R17 := R0
 88 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 89 [-]: FORLOOP   R5 6         ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
 90 [-]: RETURN    R4 2         ; return R4
 91 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1166
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADK     R5 K0        ; R5 := 1
  3 [-]: LOADK     R6 K1        ; R6 := 4
  4 [-]: LOADK     R7 K0        ; R7 := 1
  5 [-]: FORPREP   R5 86        ; R5 -= R7; PC := 86
  6 [-]: LOADNIL   R9 R9        ; R9 := nil
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
  8 [-]: MOVE      R11 R2       ; R11 := R2
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: TEST      R10 1        ; if R10 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R10 R2 K3    ; R11 := R2; R10 := R2["0xEA55C538"]
 13 [-]: SUB       R12 R8 K0    ; R12 := R8 - 1
 14 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 15 [-]: MOVE      R9 R10       ; R9 := R10
 16 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 17 [-]: MOVE      R11 R9       ; R11 := R9
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: TEST      R10 1        ; if R10 then PC := 61
 20 [-]: JMP       61           ; PC := 61
 21 [-]: SETTABLE  R4 R8 R9     ; R4[R8] := R9
 22 [-]: SELF      R10 R9 K4    ; R11 := R9; R10 := R9["0x616C74B6"]
 23 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 24 [-]: SELF      R11 R0 K5    ; R12 := R0; R11 := R0["0x17028E8F"]
 25 [-]: MOVE      R13 R1       ; R13 := R1
 26 [-]: LOADK     R14 K6       ; R14 := ".Ability"
 27 [-]: MOVE      R15 R8       ; R15 := R8
 28 [-]: LOADK     R16 K7       ; R16 := ".Name.text"
 29 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 30 [-]: SELF      R14 R10 K8   ; R15 := R10; R14 := R10["0x5EC7A3D2"]
 31 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 32 [-]: CALL      R11 0 1      ; R11(R12,...)
 33 [-]: SELF      R11 R9 K9    ; R12 := R9; R11 := R9["0xF1A9732E"]
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 36 [-]: MOVE      R13 R11      ; R13 := R11
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: TEST      R12 1        ; if R12 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: SELF      R12 R0 K10   ; R13 := R0; R12 := R0["0x26581636"]
 41 [-]: MOVE      R14 R1       ; R14 := R1
 42 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 43 [-]: MOVE      R16 R8       ; R16 := R8
 44 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 45 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 46 [-]: MOVE      R15 R11      ; R15 := R11
 47 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 48 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0x1C19D966"]
 49 [-]: MOVE      R14 R1       ; R14 := R1
 50 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 51 [-]: MOVE      R16 R8       ; R16 := R8
 52 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 53 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 54 [-]: LOADK     R15 K13      ; R15 := "_visible"
 55 [-]: GETGLOBAL R16 K2       ; R16 := 0x400E7765
 56 [-]: MOVE      R17 R11      ; R17 := R11
 57 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 58 [-]: MOVE      R16 R16      ; R16 := R16
 59 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 60 [-]: JMP       86           ; PC := 86
 61 [-]: SELF      R12 R0 K5    ; R13 := R0; R12 := R0["0x17028E8F"]
 62 [-]: MOVE      R14 R1       ; R14 := R1
 63 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 64 [-]: MOVE      R16 R8       ; R16 := R8
 65 [-]: LOADK     R17 K7       ; R17 := ".Name.text"
 66 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 67 [-]: LOADK     R15 K14      ; R15 := "/Lotus/Language/Menu/Empty_Precept"
 68 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 69 [-]: SELF      R12 R0 K10   ; R13 := R0; R12 := R0["0x26581636"]
 70 [-]: MOVE      R14 R1       ; R14 := R1
 71 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 72 [-]: MOVE      R16 R8       ; R16 := R8
 73 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 74 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 75 [-]: LOADNIL   R15 R15      ; R15 := nil
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0x1C19D966"]
 78 [-]: MOVE      R14 R1       ; R14 := R1
 79 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 80 [-]: MOVE      R16 R8       ; R16 := R8
 81 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 82 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 83 [-]: LOADK     R15 K13      ; R15 := "_visible"
 84 [-]: MOVE      R16 R0       ; R16 := R0
 85 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 86 [-]: FORLOOP   R5 6         ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
 87 [-]: RETURN    R4 2         ; return R4
 88 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1195
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: NEWTABLE  R1 0 9       ; R1 := {}
  2 [-]: SETTABLE  R1 K0 K1     ; R1["mIndex"] := 0
  3 [-]: SETTABLE  R1 K2 K3     ; R1["mMovie"] := nil
  4 [-]: SETTABLE  R1 K4 K5     ; R1["mIsShowing"] := "0x0"
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: SETTABLE  R1 K6 R2     ; R1["mListItems"] := R2
  7 [-]: CLOSURE   R2 0         ; R2 := closure(Function #41.1)
  8 [-]: SETTABLE  R1 K7 R2     ; R1["Add"] := R2
  9 [-]: CLOSURE   R2 1         ; R2 := closure(Function #41.2)
 10 [-]: SETTABLE  R1 K8 R2     ; R1["Clear"] := R2
 11 [-]: CLOSURE   R2 2         ; R2 := closure(Function #41.3)
 12 [-]: SETTABLE  R1 K9 R2     ; R1["IsShowing"] := R2
 13 [-]: CLOSURE   R2 3         ; R2 := closure(Function #41.4)
 14 [-]: SETTABLE  R1 K10 R2    ; R1["Hide"] := R2
 15 [-]: CLOSURE   R2 4         ; R2 := closure(Function #41.5)
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: SETTABLE  R1 K11 R2    ; R1["Show"] := R2
 18 [-]: GETGLOBAL R2 K12       ; R2 := _T
 19 [-]: SETTABLE  R2 K13 R1    ; R2["ContextMenu"] := R1
 20 [-]: GETGLOBAL R2 K12       ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["ContextMenu"]
 22 [-]: SETTABLE  R2 K2 R0     ; R2["mMovie"] := R0
 23 [-]: RETURN    R0 1         ; return 


; Function #41.1:
;
; Name:            
; Defined at line: 1203
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIndex"]
  2 [-]: ADD       R3 R3 K1     ; R3 := R3 + 1
  3 [-]: SETTABLE  R0 K0 R3     ; R0["mIndex"] := R3
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
  5 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x1C19D966"]
  6 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
  7 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
  8 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  9 [-]: LOADK     R6 K5        ; R6 := "enabled"
 10 [-]: MOVE      R7 R1        ; R7 := R1
 11 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 12 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x1C19D966"]
 14 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 15 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 16 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 17 [-]: LOADK     R6 K6        ; R6 := "_visible"
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 21 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x1C19D966"]
 22 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 23 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 24 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 25 [-]: LOADK     R6 K7        ; R6 := "Id"
 26 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mIndex"]
 27 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 28 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 29 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x17028E8F"]
 30 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 31 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 32 [-]: LOADK     R7 K9        ; R7 := ".Label.text"
 33 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mListItems"]
 37 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIndex"]
 38 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 39 [-]: SETTABLE  R5 K11 R1    ; R5["Label"] := R1
 40 [-]: SETTABLE  R5 K12 R2    ; R5["PressedCallback"] := R2
 41 [-]: SETTABLE  R3 R4 R5     ; R3[R4] := R5
 42 [-]: RETURN    R0 1         ; return 


; Function #41.2:
;
; Name:            
; Defined at line: 1212
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIndex"] := 0
  2 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x7CC73200"]
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #41.3:
;
; Name:            
; Defined at line: 1217
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsShowing"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #41.4:
;
; Name:            
; Defined at line: 1221
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x4D8B7CE8"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: TEST      R1 1         ; if R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: SETTABLE  R0 K1 K2     ; R0["mIsShowing"] := "0x0"
  7 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mMovie"]
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 10 [-]: LOADK     R4 K6        ; R4 := "enabled"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mMovie"]
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 16 [-]: LOADK     R4 K7        ; R4 := "_visible"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #41.5:
;
; Name:            
; Defined at line: 1230
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIsShowing"] := "0x1"
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mIndex"]
  3 [-]: LT        0 K3 R1      ; if 0 >= R1 then PC := 43
  4 [-]: JMP       43           ; PC := 43
  5 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
  6 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x1C19D966"]
  7 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
  8 [-]: LOADK     R4 K7        ; R4 := "enabled"
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
 14 [-]: LOADK     R4 K8        ; R4 := "_visible"
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 17 [-]: GETGLOBAL R1 K9        ; R1 := 0xF595ADDE
 18 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mMovie"]
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x6B7B470B"]
 20 [-]: LOADK     R4 K11       ; R4 := "_xmouse"
 21 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 22 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 23 [-]: ADD       R1 R1 K12    ; R1 := R1 + 60
 24 [-]: GETGLOBAL R2 K9        ; R2 := 0xF595ADDE
 25 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 26 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x6B7B470B"]
 27 [-]: LOADK     R5 K13       ; R5 := "_ymouse"
 28 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 29 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 30 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x1C19D966"]
 32 [-]: LOADK     R5 K6        ; R5 := "ContextMenu"
 33 [-]: LOADK     R6 K14       ; R6 := "_x"
 34 [-]: MOVE      R7 R1        ; R7 := R1
 35 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 36 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 37 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x1C19D966"]
 38 [-]: LOADK     R5 K6        ; R5 := "ContextMenu"
 39 [-]: LOADK     R6 K15       ; R6 := "_y"
 40 [-]: MOVE      R7 R2        ; R7 := R2
 41 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 42 [-]: JMP       45           ; PC := 45
 43 [-]: SELF      R3 R0 K16    ; R4 := R0; R3 := R0["0x79EA5337"]
 44 [-]: CALL      R3 2 1       ; R3(R4)
 45 [-]: LOADK     R3 K17       ; R3 := 1
 46 [-]: LOADK     R4 K18       ; R4 := 8
 47 [-]: LOADK     R5 K17       ; R5 := 1
 48 [-]: FORPREP   R3 75        ; R3 -= R5; PC := 75
 49 [-]: GETUPVAL  R7 U0        ; R7 := U0
 50 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["0xF81722A2"]
 51 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mIndex"]
 52 [-]: LE        1 R6 R8      ; if R6 <= R8 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: MOVE      R8 R0        ; R8 := R0
 55 [-]: MOVE      R8 R1        ; R8 := R1
 56 [-]: MOVE      R9 R1        ; R9 := R1
 57 [-]: MOVE      R10 R0       ; R10 := R0
 58 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 59 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mMovie"]
 60 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x1C19D966"]
 61 [-]: LOADK     R10 K20      ; R10 := "ContextMenu.Btn"
 62 [-]: MOVE      R11 R6       ; R11 := R6
 63 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 64 [-]: LOADK     R11 K7       ; R11 := "enabled"
 65 [-]: MOVE      R12 R7       ; R12 := R7
 66 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 67 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mMovie"]
 68 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x1C19D966"]
 69 [-]: LOADK     R10 K20      ; R10 := "ContextMenu.Btn"
 70 [-]: MOVE      R11 R6       ; R11 := R6
 71 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 72 [-]: LOADK     R11 K8       ; R11 := "_visible"
 73 [-]: MOVE      R12 R7       ; R12 := R7
 74 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 75 [-]: FORLOOP   R3 49        ; R3 += R5; if R3 <= R4 then begin PC := 49; R6 := R3 end
 76 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1256
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K1        ; R1 := 0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mItemType"]
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADK     R2 K1        ; R2 := 0
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mUpgradeVer"]
 17 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x827B763F"]
 19 [-]: CALL      R3 1 2       ; R3 := R3()
 20 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R2 K1        ; R2 := 0
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: GETGLOBAL R2 K6        ; R2 := gGameConfig
 25 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x9E8E66BA"]
 26 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mXP"]
 27 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemType"]
 28 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 29 [-]: RETURN    R2 2         ; return R2
 30 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1276
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  2 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x3077BE70"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: SELF      R3 R0 K2     ; R4 := R0; R3 := R0["0x8292A1EF"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETGLOBAL R4 K3        ; R4 := Engine
  7 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Item_Packages"]
  8 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: GETGLOBAL R5 K3        ; R5 := Engine
 13 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Item_FlavourItems"]
 14 [-]: EQ        1 R3 R5      ; if R3 == R5 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: GETGLOBAL R6 K3        ; R6 := Engine
 19 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Item_WeaponSkins"]
 20 [-]: EQ        1 R3 R6      ; if R3 == R6 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R6 R0        ; R6 := R0
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: GETGLOBAL R7 K3        ; R7 := Engine
 25 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Item_Ships"]
 26 [-]: EQ        1 R3 R7      ; if R3 == R7 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: MOVE      R7 R1        ; R7 := R1
 30 [-]: MOVE      R8 R0        ; R8 := R0
 31 [-]: GETGLOBAL R9 K3        ; R9 := Engine
 32 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["Item_Recipes"]
 33 [-]: EQ        0 R3 R9      ; if R3 ~= R9 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: SELF      R9 R0 K9     ; R10 := R0; R9 := R0["0x49F6C90A"]
 36 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 37 [-]: MOVE      R9 R9        ; R9 := R9
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R9 R0        ; R9 := R0
 40 [-]: MOVE      R9 R1        ; R9 := R1
 41 [-]: TEST      R9 1         ; if R9 then PC := 66
 42 [-]: JMP       66           ; PC := 66
 43 [-]: SELF      R10 R0 K10   ; R11 := R0; R10 := R0["0x8B598ED4"]
 44 [-]: GETGLOBAL R12 K11      ; R12 := gRecipeStoreItemType
 45 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 46 [-]: TEST      R10 0        ; if not R10 then PC := 66
 47 [-]: JMP       66           ; PC := 66
 48 [-]: SELF      R10 R0 K12   ; R11 := R0; R10 := R0["0xCF3F0AF8"]
 49 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 50 [-]: GETGLOBAL R11 K13      ; R11 := 0x400E7765
 51 [-]: MOVE      R12 R10      ; R12 := R10
 52 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 53 [-]: TEST      R11 1        ; if R11 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETUPVAL  R11 U0       ; R11 := U0
 56 [-]: MOVE      R12 R10      ; R12 := R10
 57 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 58 [-]: TEST      R11 1        ; if R11 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: SELF      R11 R0 K14   ; R12 := R0; R11 := R0["0xA1B9383F"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: TEST      R11 1        ; if R11 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R11 R0       ; R11 := R0
 65 [-]: RETURN    R11 2        ; return R11
 66 [-]: GETGLOBAL R11 K3       ; R11 := Engine
 67 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Item_Recipes"]
 68 [-]: EQ        0 R3 R11     ; if R3 ~= R11 then PC := 76
 69 [-]: JMP       76           ; PC := 76
 70 [-]: SELF      R11 R0 K15   ; R12 := R0; R11 := R0["0x99575BC7"]
 71 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 72 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11["0x8B598ED4"]
 73 [-]: GETGLOBAL R13 K16      ; R13 := gKeyChainItemType
 74 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 75 [-]: JMP       78           ; PC := 78
 76 [-]: MOVE      R11 R0       ; R11 := R0
 77 [-]: MOVE      R11 R1       ; R11 := R1
 78 [-]: GETGLOBAL R12 K3       ; R12 := Engine
 79 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["Item_Recipes"]
 80 [-]: EQ        0 R3 R12     ; if R3 ~= R12 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: SELF      R12 R0 K15   ; R13 := R0; R12 := R0["0x99575BC7"]
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12["0x8B598ED4"]
 85 [-]: GETGLOBAL R14 K17      ; R14 := gShipItemType
 86 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 87 [-]: JMP       90           ; PC := 90
 88 [-]: MOVE      R12 R0       ; R12 := R0
 89 [-]: MOVE      R12 R1       ; R12 := R1
 90 [-]: GETGLOBAL R13 K3       ; R13 := Engine
 91 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["Item_Recipes"]
 92 [-]: EQ        0 R3 R13     ; if R3 ~= R13 then PC := 100
 93 [-]: JMP       100          ; PC := 100
 94 [-]: SELF      R13 R0 K15   ; R14 := R0; R13 := R0["0x99575BC7"]
 95 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 96 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x8B598ED4"]
 97 [-]: GETUPVAL  R15 U1       ; R15 := U1
 98 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 99 [-]: JMP       102          ; PC := 102
100 [-]: MOVE      R13 R0       ; R13 := R0
101 [-]: MOVE      R13 R1       ; R13 := R1
102 [-]: NEWTABLE  R14 14 0     ; R14 := {}
103 [-]: GETGLOBAL R15 K18      ; R15 := 0x2C00D429
104 [-]: LOADK     R16 K19      ; R16 := "/Lotus/Types/Items/MiscItems/LibraryScannerUpgrade"
105 [-]: CALL      R15 2 2      ; R15 := R15(R16)
106 [-]: GETGLOBAL R16 K18      ; R16 := 0x2C00D429
107 [-]: LOADK     R17 K20      ; R17 := "/Lotus/Types/Items/MiscItems/SolarisMiningToolUpgrade"
108 [-]: CALL      R16 2 2      ; R16 := R16(R17)
109 [-]: GETGLOBAL R17 K18      ; R17 := 0x2C00D429
110 [-]: LOADK     R18 K21      ; R18 := "/Lotus/Types/Restoratives/Consumable/GlyphConsumableNoCharges"
111 [-]: CALL      R17 2 2      ; R17 := R17(R18)
112 [-]: GETGLOBAL R18 K18      ; R18 := 0x2C00D429
113 [-]: LOADK     R19 K22      ; R19 := "/Lotus/Types/Items/MiscItems/DangerRoomKey"
114 [-]: CALL      R18 2 2      ; R18 := R18(R19)
115 [-]: GETUPVAL  R19 U1       ; R19 := U1
116 [-]: GETGLOBAL R20 K16      ; R20 := gKeyChainItemType
117 [-]: GETGLOBAL R21 K18      ; R21 := 0x2C00D429
118 [-]: LOADK     R22 K23      ; R22 := "/Lotus/Types/Items/ShipDecos/HarrowQuestKeyOrnament"
119 [-]: CALL      R21 2 2      ; R21 := R21(R22)
120 [-]: GETGLOBAL R22 K18      ; R22 := 0x2C00D429
121 [-]: LOADK     R23 K24      ; R23 := "/Lotus/Types/Restoratives/Consumable/MiningLaser"
122 [-]: CALL      R22 2 2      ; R22 := R22(R23)
123 [-]: GETGLOBAL R23 K18      ; R23 := 0x2C00D429
124 [-]: LOADK     R24 K25      ; R24 := "/Lotus/Types/Restoratives/Consumable/BaseSpearFishingSpear"
125 [-]: CALL      R23 2 2      ; R23 := R23(R24)
126 [-]: GETGLOBAL R24 K18      ; R24 := 0x2C00D429
127 [-]: LOADK     R25 K26      ; R25 := "/Lotus/Types/Restoratives/Conservation/AnimalLureGearItem"
128 [-]: CALL      R24 2 2      ; R24 := R24(R25)
129 [-]: GETGLOBAL R25 K18      ; R25 := 0x2C00D429
130 [-]: LOADK     R26 K27      ; R26 := "/Lotus/Types/Restoratives/Conservation/TranqRifleGearItem"
131 [-]: CALL      R25 2 2      ; R25 := R25(R26)
132 [-]: GETGLOBAL R26 K18      ; R26 := 0x2C00D429
133 [-]: LOADK     R27 K28      ; R27 := "/Lotus/Types/BoosterPacks/RivenModPack"
134 [-]: CALL      R26 2 2      ; R26 := R26(R27)
135 [-]: GETGLOBAL R27 K18      ; R27 := 0x2C00D429
136 [-]: LOADK     R28 K29      ; R28 := "/Lotus/Types/Restoratives/ScenarioBeacon"
137 [-]: CALL      R27 2 2      ; R27 := R27(R28)
138 [-]: GETGLOBAL R28 K18      ; R28 := 0x2C00D429
139 [-]: LOADK     R29 K30      ; R29 := "/Lotus/Types/Game/DangerRoomTileItem"
140 [-]: CALL      R28 2 2      ; R28 := R28(R29)
141 [-]: GETGLOBAL R29 K18      ; R29 := 0x2C00D429
142 [-]: LOADK     R30 K31      ; R30 := "/Lotus/Types/Items/ShipDecos/Plushies/PlushyKoala"
143 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
144 [-]: SETLIST   R14 0 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 0
145 [-]: MOVE      R15 R0       ; R15 := R0
146 [-]: GETGLOBAL R16 K13      ; R16 := 0x400E7765
147 [-]: MOVE      R17 R2       ; R17 := R2
148 [-]: CALL      R16 2 2      ; R16 := R16(R17)
149 [-]: TEST      R16 1        ; if R16 then PC := 167
150 [-]: JMP       167          ; PC := 167
151 [-]: LOADK     R16 K32      ; R16 := 1
152 [-]: LEN       R17 R14      ; R17 := # R14
153 [-]: LOADK     R18 K32      ; R18 := 1
154 [-]: FORPREP   R16 162      ; R16 -= R18; PC := 162
155 [-]: SELF      R20 R2 K10   ; R21 := R2; R20 := R2["0x8B598ED4"]
156 [-]: GETTABLE  R22 R14 R19  ; R22 := R14[R19]
157 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
158 [-]: TEST      R20 0        ; if not R20 then PC := 162
159 [-]: JMP       162          ; PC := 162
160 [-]: MOVE      R15 R1       ; R15 := R1
161 [-]: JMP       163          ; PC := 163
162 [-]: FORLOOP   R16 155      ; R16 += R18; if R16 <= R17 then begin PC := 155; R19 := R16 end
163 [-]: SELF      R20 R2 K10   ; R21 := R2; R20 := R2["0x8B598ED4"]
164 [-]: GETUPVAL  R22 U2       ; R22 := U2
165 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
166 [-]: MOVE      R8 R20       ; R8 := R20
167 [-]: TEST      R4 0         ; if not R4 then PC := 183
168 [-]: JMP       183          ; PC := 183
169 [-]: SELF      R20 R0 K33   ; R21 := R0; R20 := R0["0x6139ADFF"]
170 [-]: CALL      R20 2 2      ; R20 := R20(R21)
171 [-]: GETGLOBAL R21 K3       ; R21 := Engine
172 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["Item_DC_NITRO"]
173 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 183
174 [-]: JMP       183          ; PC := 183
175 [-]: SELF      R20 R1 K35   ; R21 := R1; R20 := R1["0x9C8CCF19"]
176 [-]: SELF      R22 R0 K36   ; R23 := R0; R22 := R0["0x1170584F"]
177 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
178 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
179 [-]: TEST      R20 1        ; if R20 then PC := 183
180 [-]: JMP       183          ; PC := 183
181 [-]: MOVE      R20 R1       ; R20 := R1
182 [-]: RETURN    R20 2        ; return R20
183 [-]: TEST      R4 1         ; if R4 then PC := 211
184 [-]: JMP       211          ; PC := 211
185 [-]: TEST      R5 1         ; if R5 then PC := 211
186 [-]: JMP       211          ; PC := 211
187 [-]: TEST      R6 1         ; if R6 then PC := 211
188 [-]: JMP       211          ; PC := 211
189 [-]: TEST      R9 1         ; if R9 then PC := 211
190 [-]: JMP       211          ; PC := 211
191 [-]: TEST      R11 0        ; if not R11 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: SELF      R20 R0 K14   ; R21 := R0; R20 := R0["0xA1B9383F"]
194 [-]: CALL      R20 2 2      ; R20 := R20(R21)
195 [-]: TEST      R20 0        ; if not R20 then PC := 211
196 [-]: JMP       211          ; PC := 211
197 [-]: TEST      R8 0         ; if not R8 then PC := 203
198 [-]: JMP       203          ; PC := 203
199 [-]: SELF      R20 R0 K14   ; R21 := R0; R20 := R0["0xA1B9383F"]
200 [-]: CALL      R20 2 2      ; R20 := R20(R21)
201 [-]: TEST      R20 0        ; if not R20 then PC := 211
202 [-]: JMP       211          ; PC := 211
203 [-]: TEST      R12 1        ; if R12 then PC := 211
204 [-]: JMP       211          ; PC := 211
205 [-]: TEST      R13 1        ; if R13 then PC := 211
206 [-]: JMP       211          ; PC := 211
207 [-]: TEST      R7 1         ; if R7 then PC := 211
208 [-]: JMP       211          ; PC := 211
209 [-]: TEST      R15 0        ; if not R15 then PC := 213
210 [-]: JMP       213          ; PC := 213
211 [-]: MOVE      R20 R0       ; R20 := R0
212 [-]: RETURN    R20 2        ; return R20
213 [-]: MOVE      R20 R1       ; R20 := R1
214 [-]: RETURN    R20 2        ; return R20
215 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1353
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1358
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gGameData
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADK     R1 K2        ; R1 := 1
  5 [-]: GETGLOBAL R3 K3        ; R3 := gGameConfig
  6 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xD463EC86"]
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K5        ; R4 := Lotus_Game
 10 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["MiscBin"]
 11 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETGLOBAL R4 K5        ; R4 := Lotus_Game
 14 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["InvalidBin"]
 15 [-]: LT        0 R3 R4      ; if R3 >= R4 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2["0x6F2E05FD"]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x81609708"]
 20 [-]: MOVE      R6 R3        ; R6 := R3
 21 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 22 [-]: LE        1 R1 R4      ; if R1 <= R4 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: RETURN    R4 2         ; return R4
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: RETURN    R4 2         ; return R4
 29 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1373
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0xB03F791E"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 11 [-]: GETGLOBAL R3 K2        ; R3 := gGameData
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETGLOBAL R2 K3        ; R2 := 0x93B1256B
 16 [-]: LOADK     R3 K4        ; R3 := "IsXPLocked: gGameData was nil"
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: GETGLOBAL R2 K2        ; R2 := gGameData
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x3155222A"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: LT        1 R2 R1      ; if R2 < R1 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: MOVE      R4 R3        ; R4 := R3
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: RETURN    R4 3         ; return R4,R5
 30 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1391
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B5FE505"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: LT        0 K2 R1      ; if 0 >= R1 then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: GETGLOBAL R3 K3        ; R3 := gGameData
 14 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x30BDE7F"]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0xD2E7CB95"]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: LT        1 R4 R1      ; if R4 < R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R2 R0        ; R2 := R0
 21 [-]: MOVE      R2 R1        ; R2 := R1
 22 [-]: TEST      R2 0         ; if not R2 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: SELF      R5 R3 K6     ; R6 := R3; R5 := R3["0xC3C8CCC"]
 25 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0["0x99575BC7"]
 26 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 27 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 28 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 29 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["mSuit"]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: TEST      R6 1         ; if R6 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: MOVE      R6 R2        ; R6 := R2
 35 [-]: MOVE      R7 R1        ; R7 := R1
 36 [-]: RETURN    R6 3         ; return R6,R7
 37 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1415
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["0xD1BD9D6"]
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: MOVE      R7 R1        ; R7 := R1
  5 [-]: MOVE      R8 R2        ; R8 := R2
  6 [-]: MOVE      R9 R3        ; R9 := R3
  7 [-]: MOVE      R10 R4       ; R10 := R4
  8 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  9 [-]: RETURN    R5 0         ; return R5,...
 10 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1419
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xBDD0D625"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameConfig
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x902F7420"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := string
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE44F664"]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "api.dev."
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1423
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1427
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xBDD0D625"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameConfig
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x902F7420"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := string
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE44F664"]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "api.test."
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1431
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1435
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xBDD0D625"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameConfig
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x902F7420"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := string
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE44F664"]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "/localhost/"
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1439
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1443
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 1         ; if R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: TEST      R0 1         ; if R0 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: TEST      R0 0         ; if not R0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: MOVE      R0 R1        ; R0 := R1
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1452
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 38
  5 [-]: JMP       38           ; PC := 38
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 36
 11 [-]: JMP       36           ; PC := 36
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusDojoGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 36
 17 [-]: JMP       36           ; PC := 36
 18 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 19 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 20 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: TEST      R0 1         ; if R0 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 25 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 26 [-]: GETGLOBAL R2 K6        ; R2 := gLotusHubGameRulesType
 27 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 28 [-]: TEST      R0 1         ; if R0 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 31 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 32 [-]: GETGLOBAL R2 K7        ; R2 := gLotusDuelGameRulesType
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: TEST      R0 0         ; if not R0 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: RETURN    R0 2         ; return R0
 40 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1467
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: JMP       23           ; PC := 23
  9 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 11 [-]: GETGLOBAL R2 K3        ; R2 := gLotusHubGameRulesType
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: TEST      R0 0         ; if not R0 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 20 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xD03B997F"]
 21 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
 22 [-]: RETURN    R0 0         ; return R0,...
 23 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 24 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xBB3AACF2"]
 25 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
 26 [-]: RETURN    R0 0         ; return R0,...
 27 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 1476
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SELF      R2 R1 K0     ; R3 := R1; R2 := R1["0x5B0E7439"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: LOADK     R3 K1        ; R3 := 1
  7 [-]: LEN       R4 R2        ; R4 := # R2
  8 [-]: LOADK     R5 K1        ; R5 := 1
  9 [-]: FORPREP   R3 59        ; R3 -= R5; PC := 59
 10 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 11 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["name"]
 12 [-]: LOADK     R9 K1        ; R9 := 1
 13 [-]: GETTABLE  R10 R7 K3    ; R10 := R7["sectors"]
 14 [-]: LEN       R10 R10      ; R10 := # R10
 15 [-]: LOADK     R11 K1       ; R11 := 1
 16 [-]: FORPREP   R9 58        ; R9 -= R11; PC := 58
 17 [-]: GETGLOBAL R13 K4       ; R13 := 0x1BF588C6
 18 [-]: LOADK     R14 K5       ; R14 := 0
 19 [-]: CALL      R13 2 1      ; R13(R14)
 20 [-]: GETTABLE  R13 R7 K3    ; R13 := R7["sectors"]
 21 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 22 [-]: GETTABLE  R14 R13 K6   ; R14 := R13["nodeType"]
 23 [-]: GETGLOBAL R15 K7       ; R15 := Lotus_Game
 24 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["NT_MISSION"]
 25 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 37
 26 [-]: JMP       37           ; PC := 37
 27 [-]: GETTABLE  R14 R13 K6   ; R14 := R13["nodeType"]
 28 [-]: GETGLOBAL R15 K7       ; R15 := Lotus_Game
 29 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["NT_CLAN"]
 30 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETTABLE  R14 R13 K6   ; R14 := R13["nodeType"]
 33 [-]: GETGLOBAL R15 K7       ; R15 := Lotus_Game
 34 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["NT_BONUS_MISSION"]
 35 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 58
 36 [-]: JMP       58           ; PC := 58
 37 [-]: GETTABLE  R14 R13 K11  ; R14 := R13["mission"]
 38 [-]: GETTABLE  R15 R14 K12  ; R15 := R14["missionReward"]
 39 [-]: GETTABLE  R16 R15 K13  ; R16 := R15["randomizedItems"]
 40 [-]: GETTABLE  R17 R14 K14  ; R17 := R14["enemyCacheOverride"]
 41 [-]: NEWTABLE  R18 0 5      ; R18 := {}
 42 [-]: GETTABLE  R19 R13 K2   ; R19 := R13["name"]
 43 [-]: SELF      R19 R19 K15  ; R20 := R19; R19 := R19["0x5EC7A3D2"]
 44 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 45 [-]: SETTABLE  R18 K2 R19   ; R18["name"] := R19
 46 [-]: GETTABLE  R19 R13 K16  ; R19 := R13["locTag"]
 47 [-]: SELF      R19 R19 K15  ; R20 := R19; R19 := R19["0x5EC7A3D2"]
 48 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 49 [-]: SETTABLE  R18 K16 R19  ; R18["locTag"] := R19
 50 [-]: SETTABLE  R18 K17 R8   ; R18["regionLocTag"] := R8
 51 [-]: SETTABLE  R18 K13 R16  ; R18["randomizedItems"] := R16
 52 [-]: SETTABLE  R18 K14 R17  ; R18["enemyCacheOverride"] := R17
 53 [-]: GETGLOBAL R19 K18      ; R19 := table
 54 [-]: GETTABLE  R19 R19 K19  ; R19 := R19["0xE6450C9D"]
 55 [-]: MOVE      R20 R0       ; R20 := R0
 56 [-]: MOVE      R21 R18      ; R21 := R18
 57 [-]: CALL      R19 3 1      ; R19(R20,R21)
 58 [-]: FORLOOP   R9 17        ; R9 += R11; if R9 <= R10 then begin PC := 17; R12 := R9 end
 59 [-]: FORLOOP   R3 10        ; R3 += R5; if R3 <= R4 then begin PC := 10; R6 := R3 end
 60 [-]: RETURN    R0 2         ; return R0
 61 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 1511
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 1515
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusDojoGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 19 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 20 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: TEST      R0 0         ; if not R0 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: MOVE      R0 R1        ; R0 := R1
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: MOVE      R0 R0        ; R0 := R0
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 1523
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 1527
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPhotoBoothGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 17 [-]: GETGLOBAL R2 K4        ; R2 := gLotusGameRulesType
 18 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 19 [-]: TEST      R0 1         ; if R0 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 23 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 24 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 25 [-]: TEST      R0 0         ; if not R0 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: MOVE      R0 R0        ; R0 := R0
 30 [-]: RETURN    R0 2         ; return R0
 31 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 1539
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 1543
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 1547
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 1551
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["REGION_ID_DOJO"]
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["REGION_ID_DERELICT"]
  7 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 1555
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 1559
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["REGION_ID_VOID"]
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
  4 [-]: JMP       21           ; PC := 21
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["REGION_ID_DERELICT"]
  7 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETGLOBAL R1 K0        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["REGION_ID_DOJO"]
 11 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["REGION_ID_DARK_SECTOR"]
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R1 K0        ; R1 := _T
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["REGION_ID_DEEP_SPACE"]
 19 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R1 R0        ; R1 := R0
 22 [-]: MOVE      R1 R1        ; R1 := R1
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 1563
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: TEST      R1 1         ; if R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R3 1 2       ; R3 := R3()
  5 [-]: MOVE      R1 R3        ; R1 := R3
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 333
 10 [-]: JMP       333          ; PC := 333
 11 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 333
 12 [-]: JMP       333          ; PC := 333
 13 [-]: EQ        1 R0 K2      ; if R0 == "" then PC := 333
 14 [-]: JMP       333          ; PC := 333
 15 [-]: LOADK     R3 K3        ; R3 := 0
 16 [-]: LOADK     R4 K3        ; R4 := 0
 17 [-]: GETGLOBAL R5 K4        ; R5 := string
 18 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xDE44F664"]
 19 [-]: MOVE      R6 R0        ; R6 := R0
 20 [-]: GETGLOBAL R7 K6        ; R7 := KEY_TAG
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: EQ        1 R5 K1      ; if R5 == nil then PC := 60
 23 [-]: JMP       60           ; PC := 60
 24 [-]: GETGLOBAL R3 K7        ; R3 := KEY_FLAG
 25 [-]: GETGLOBAL R6 K8        ; R6 := _T
 26 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["gSelectedRegionId"]
 27 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETGLOBAL R6 K8        ; R6 := _T
 30 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["gSelectedRegionId"]
 31 [-]: LT        0 K3 R6      ; if 0 >= R6 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: GETGLOBAL R6 K8        ; R6 := _T
 34 [-]: GETTABLE  R4 R6 K9     ; R4 := R6["gSelectedRegionId"]
 35 [-]: GETUPVAL  R6 U1        ; R6 := U1
 36 [-]: MOVE      R7 R4        ; R7 := R4
 37 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 38 [-]: TEST      R6 1         ; if R6 then PC := 60
 39 [-]: JMP       60           ; PC := 60
 40 [-]: GETGLOBAL R6 K10       ; R6 := 0x7C282057
 41 [-]: GETGLOBAL R7 K4        ; R7 := string
 42 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x7B782033"]
 43 [-]: MOVE      R8 R0        ; R8 := R0
 44 [-]: LOADK     R9 K12       ; R9 := 1
 45 [-]: SUB       R10 R5 K12   ; R10 := R5 - 1
 46 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 47 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 48 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 49 [-]: MOVE      R8 R6        ; R8 := R6
 50 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 51 [-]: TEST      R7 1         ; if R7 then PC := 60
 52 [-]: JMP       60           ; PC := 60
 53 [-]: GETGLOBAL R7 K13       ; R7 := 0x9FAED6BC
 54 [-]: SELF      R8 R6 K14    ; R9 := R6; R8 := R6["0x625DA4BB"]
 55 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 56 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 57 [-]: EQ        1 R7 K2      ; if R7 == "" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R0 R7        ; R0 := R7
 60 [-]: GETGLOBAL R8 K4        ; R8 := string
 61 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["0xDE44F664"]
 62 [-]: MOVE      R9 R0        ; R9 := R0
 63 [-]: GETGLOBAL R10 K15      ; R10 := ALERT_TAG
 64 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 65 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R9 K4        ; R9 := string
 68 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["0x7B782033"]
 69 [-]: MOVE      R10 R0       ; R10 := R0
 70 [-]: LOADK     R11 K12      ; R11 := 1
 71 [-]: SUB       R12 R8 K12   ; R12 := R8 - 1
 72 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 73 [-]: MOVE      R0 R9        ; R0 := R9
 74 [-]: GETGLOBAL R3 K16       ; R3 := ALERT_FLAG
 75 [-]: GETGLOBAL R9 K4        ; R9 := string
 76 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["0xDE44F664"]
 77 [-]: MOVE      R10 R0       ; R10 := R0
 78 [-]: GETGLOBAL R11 K17      ; R11 := NIGHTMARE_TAG
 79 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 80 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 90
 81 [-]: JMP       90           ; PC := 90
 82 [-]: GETGLOBAL R10 K4       ; R10 := string
 83 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0x7B782033"]
 84 [-]: MOVE      R11 R0       ; R11 := R0
 85 [-]: LOADK     R12 K12      ; R12 := 1
 86 [-]: SUB       R13 R9 K12   ; R13 := R9 - 1
 87 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 88 [-]: MOVE      R0 R10       ; R0 := R10
 89 [-]: GETGLOBAL R3 K18       ; R3 := NIGHTMARE_FLAG
 90 [-]: GETGLOBAL R10 K4       ; R10 := string
 91 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["0xDE44F664"]
 92 [-]: MOVE      R11 R0       ; R11 := R0
 93 [-]: GETGLOBAL R12 K19      ; R12 := EVENT_TAG
 94 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 95 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: GETGLOBAL R11 K4       ; R11 := string
 98 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["0x7B782033"]
 99 [-]: MOVE      R12 R0       ; R12 := R0
100 [-]: LOADK     R13 K12      ; R13 := 1
101 [-]: SUB       R14 R10 K12  ; R14 := R10 - 1
102 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
103 [-]: MOVE      R0 R11       ; R0 := R11
104 [-]: GETGLOBAL R3 K20       ; R3 := EVENT_FLAG
105 [-]: GETGLOBAL R11 K4       ; R11 := string
106 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0xDE44F664"]
107 [-]: MOVE      R12 R0       ; R12 := R0
108 [-]: GETGLOBAL R13 K21      ; R13 := PVP_TAG
109 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
110 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 120
111 [-]: JMP       120          ; PC := 120
112 [-]: GETGLOBAL R12 K4       ; R12 := string
113 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0x7B782033"]
114 [-]: MOVE      R13 R0       ; R13 := R0
115 [-]: LOADK     R14 K12      ; R14 := 1
116 [-]: SUB       R15 R11 K12  ; R15 := R11 - 1
117 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
118 [-]: MOVE      R0 R12       ; R0 := R12
119 [-]: GETGLOBAL R3 K22       ; R3 := PVP_FLAG
120 [-]: GETGLOBAL R12 K4       ; R12 := string
121 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["0xDE44F664"]
122 [-]: MOVE      R13 R0       ; R13 := R0
123 [-]: GETGLOBAL R14 K23      ; R14 := INVASION_ATTACKER_TAG
124 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
125 [-]: EQ        1 R12 K1     ; if R12 == nil then PC := 135
126 [-]: JMP       135          ; PC := 135
127 [-]: GETGLOBAL R13 K4       ; R13 := string
128 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0x7B782033"]
129 [-]: MOVE      R14 R0       ; R14 := R0
130 [-]: LOADK     R15 K12      ; R15 := 1
131 [-]: SUB       R16 R12 K12  ; R16 := R12 - 1
132 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
133 [-]: MOVE      R0 R13       ; R0 := R13
134 [-]: GETGLOBAL R3 K24       ; R3 := INVASION_ATTACKER_FLAG
135 [-]: GETGLOBAL R13 K4       ; R13 := string
136 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["0xDE44F664"]
137 [-]: MOVE      R14 R0       ; R14 := R0
138 [-]: GETGLOBAL R15 K25      ; R15 := INVASION_DEFENDER_TAG
139 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
140 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 150
141 [-]: JMP       150          ; PC := 150
142 [-]: GETGLOBAL R14 K4       ; R14 := string
143 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0x7B782033"]
144 [-]: MOVE      R15 R0       ; R15 := R0
145 [-]: LOADK     R16 K12      ; R16 := 1
146 [-]: SUB       R17 R13 K12  ; R17 := R13 - 1
147 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
148 [-]: MOVE      R0 R14       ; R0 := R14
149 [-]: GETGLOBAL R3 K26       ; R3 := INVASION_DEFENDER_FLAG
150 [-]: GETGLOBAL R14 K4       ; R14 := string
151 [-]: GETTABLE  R14 R14 K5   ; R14 := R14["0xDE44F664"]
152 [-]: MOVE      R15 R0       ; R15 := R0
153 [-]: GETGLOBAL R16 K27      ; R16 := BADLAND_MISSION_TAG
154 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
155 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 165
156 [-]: JMP       165          ; PC := 165
157 [-]: GETGLOBAL R15 K4       ; R15 := string
158 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["0x7B782033"]
159 [-]: MOVE      R16 R0       ; R16 := R0
160 [-]: LOADK     R17 K12      ; R17 := 1
161 [-]: SUB       R18 R14 K12  ; R18 := R14 - 1
162 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
163 [-]: MOVE      R0 R15       ; R0 := R15
164 [-]: GETGLOBAL R3 K28       ; R3 := BADLAND_MISSION_FLAG
165 [-]: GETGLOBAL R15 K4       ; R15 := string
166 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["0xDE44F664"]
167 [-]: MOVE      R16 R0       ; R16 := R0
168 [-]: GETGLOBAL R17 K29      ; R17 := SYNDICATE_MISSION_TAG
169 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
170 [-]: EQ        1 R15 K1     ; if R15 == nil then PC := 180
171 [-]: JMP       180          ; PC := 180
172 [-]: GETGLOBAL R16 K4       ; R16 := string
173 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["0x7B782033"]
174 [-]: MOVE      R17 R0       ; R17 := R0
175 [-]: LOADK     R18 K12      ; R18 := 1
176 [-]: SUB       R19 R15 K12  ; R19 := R15 - 1
177 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
178 [-]: MOVE      R0 R16       ; R0 := R16
179 [-]: GETGLOBAL R3 K30       ; R3 := SYNDICATE_MISSION_FLAG
180 [-]: GETGLOBAL R16 K4       ; R16 := string
181 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["0xDE44F664"]
182 [-]: MOVE      R17 R0       ; R17 := R0
183 [-]: GETGLOBAL R18 K31      ; R18 := SORTIE_MISSION_TAG
184 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
185 [-]: EQ        1 R16 K1     ; if R16 == nil then PC := 195
186 [-]: JMP       195          ; PC := 195
187 [-]: GETGLOBAL R17 K4       ; R17 := string
188 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["0x7B782033"]
189 [-]: MOVE      R18 R0       ; R18 := R0
190 [-]: LOADK     R19 K12      ; R19 := 1
191 [-]: SUB       R20 R16 K12  ; R20 := R16 - 1
192 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
193 [-]: MOVE      R0 R17       ; R0 := R17
194 [-]: GETGLOBAL R3 K32       ; R3 := SORTIE_MISSION_FLAG
195 [-]: GETGLOBAL R17 K4       ; R17 := string
196 [-]: GETTABLE  R17 R17 K5   ; R17 := R17["0xDE44F664"]
197 [-]: MOVE      R18 R0       ; R18 := R0
198 [-]: GETGLOBAL R19 K33      ; R19 := HUB_TAG
199 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
200 [-]: EQ        1 R17 K1     ; if R17 == nil then PC := 210
201 [-]: JMP       210          ; PC := 210
202 [-]: GETGLOBAL R18 K4       ; R18 := string
203 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["0x7B782033"]
204 [-]: MOVE      R19 R0       ; R19 := R0
205 [-]: LOADK     R20 K12      ; R20 := 1
206 [-]: SUB       R21 R17 K12  ; R21 := R17 - 1
207 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
208 [-]: MOVE      R0 R18       ; R0 := R18
209 [-]: GETGLOBAL R3 K34       ; R3 := HUB_FLAG
210 [-]: GETGLOBAL R18 K4       ; R18 := string
211 [-]: GETTABLE  R18 R18 K5   ; R18 := R18["0xDE44F664"]
212 [-]: MOVE      R19 R0       ; R19 := R0
213 [-]: GETGLOBAL R20 K35      ; R20 := ACTIVE_MISSION_TAG
214 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
215 [-]: EQ        1 R18 K1     ; if R18 == nil then PC := 225
216 [-]: JMP       225          ; PC := 225
217 [-]: GETGLOBAL R19 K4       ; R19 := string
218 [-]: GETTABLE  R19 R19 K11  ; R19 := R19["0x7B782033"]
219 [-]: MOVE      R20 R0       ; R20 := R0
220 [-]: LOADK     R21 K12      ; R21 := 1
221 [-]: SUB       R22 R18 K12  ; R22 := R18 - 1
222 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
223 [-]: MOVE      R0 R19       ; R0 := R19
224 [-]: GETGLOBAL R3 K36       ; R3 := ACTIVE_MISSION_FLAG
225 [-]: GETGLOBAL R19 K4       ; R19 := string
226 [-]: GETTABLE  R19 R19 K5   ; R19 := R19["0xDE44F664"]
227 [-]: MOVE      R20 R0       ; R20 := R0
228 [-]: GETGLOBAL R21 K37      ; R21 := KUVA_TOWER_MISSION_TAG
229 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
230 [-]: EQ        1 R19 K1     ; if R19 == nil then PC := 240
231 [-]: JMP       240          ; PC := 240
232 [-]: GETGLOBAL R20 K4       ; R20 := string
233 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["0x7B782033"]
234 [-]: MOVE      R21 R0       ; R21 := R0
235 [-]: LOADK     R22 K12      ; R22 := 1
236 [-]: SUB       R23 R19 K12  ; R23 := R19 - 1
237 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
238 [-]: MOVE      R0 R20       ; R0 := R20
239 [-]: GETGLOBAL R3 K38       ; R3 := KUVA_TOWER_MISSION_FLAG
240 [-]: GETGLOBAL R20 K4       ; R20 := string
241 [-]: GETTABLE  R20 R20 K5   ; R20 := R20["0xDE44F664"]
242 [-]: MOVE      R21 R0       ; R21 := R0
243 [-]: GETGLOBAL R22 K39      ; R22 := NEMESIS_MISSION_TAG
244 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
245 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 255
246 [-]: JMP       255          ; PC := 255
247 [-]: GETGLOBAL R21 K4       ; R21 := string
248 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["0x7B782033"]
249 [-]: MOVE      R22 R0       ; R22 := R0
250 [-]: LOADK     R23 K12      ; R23 := 1
251 [-]: SUB       R24 R20 K12  ; R24 := R20 - 1
252 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
253 [-]: MOVE      R0 R21       ; R0 := R21
254 [-]: GETGLOBAL R3 K40       ; R3 := NEMESIS_MISSION_FLAG
255 [-]: GETGLOBAL R21 K4       ; R21 := string
256 [-]: GETTABLE  R21 R21 K5   ; R21 := R21["0xDE44F664"]
257 [-]: MOVE      R22 R0       ; R22 := R0
258 [-]: GETGLOBAL R23 K41      ; R23 := ELITE_ALERT_TAG
259 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
260 [-]: EQ        1 R21 K1     ; if R21 == nil then PC := 270
261 [-]: JMP       270          ; PC := 270
262 [-]: GETGLOBAL R22 K4       ; R22 := string
263 [-]: GETTABLE  R22 R22 K11  ; R22 := R22["0x7B782033"]
264 [-]: MOVE      R23 R0       ; R23 := R0
265 [-]: LOADK     R24 K12      ; R24 := 1
266 [-]: SUB       R25 R21 K12  ; R25 := R21 - 1
267 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
268 [-]: MOVE      R0 R22       ; R0 := R22
269 [-]: GETGLOBAL R3 K42       ; R3 := ELITE_ALERT_FLAG
270 [-]: GETGLOBAL R22 K4       ; R22 := string
271 [-]: GETTABLE  R22 R22 K5   ; R22 := R22["0xDE44F664"]
272 [-]: GETGLOBAL R23 K4       ; R23 := string
273 [-]: GETTABLE  R23 R23 K43  ; R23 := R23["0xBDD0D625"]
274 [-]: MOVE      R24 R0       ; R24 := R0
275 [-]: CALL      R23 2 2      ; R23 := R23(R24)
276 [-]: LOADK     R24 K44      ; R24 := "junction"
277 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
278 [-]: EQ        1 R22 K1     ; if R22 == nil then PC := 288
279 [-]: JMP       288          ; PC := 288
280 [-]: GETGLOBAL R23 K4       ; R23 := string
281 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["0x7B782033"]
282 [-]: MOVE      R24 R0       ; R24 := R0
283 [-]: LOADK     R25 K12      ; R25 := 1
284 [-]: SUB       R26 R22 K12  ; R26 := R22 - 1
285 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
286 [-]: MOVE      R0 R23       ; R0 := R23
287 [-]: GETGLOBAL R3 K45       ; R3 := JUNCTION_FLAG
288 [-]: GETGLOBAL R23 K4       ; R23 := string
289 [-]: GETTABLE  R23 R23 K5   ; R23 := R23["0xDE44F664"]
290 [-]: MOVE      R24 R0       ; R24 := R0
291 [-]: GETGLOBAL R25 K46      ; R25 := HARD_MODE_TAG
292 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
293 [-]: EQ        1 R23 K1     ; if R23 == nil then PC := 303
294 [-]: JMP       303          ; PC := 303
295 [-]: GETGLOBAL R24 K4       ; R24 := string
296 [-]: GETTABLE  R24 R24 K11  ; R24 := R24["0x7B782033"]
297 [-]: MOVE      R25 R0       ; R25 := R0
298 [-]: LOADK     R26 K12      ; R26 := 1
299 [-]: SUB       R27 R23 K12  ; R27 := R23 - 1
300 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
301 [-]: MOVE      R0 R24       ; R0 := R24
302 [-]: GETGLOBAL R3 K47       ; R3 := HARD_MODE_FLAG
303 [-]: GETGLOBAL R24 K4       ; R24 := string
304 [-]: GETTABLE  R24 R24 K5   ; R24 := R24["0xDE44F664"]
305 [-]: MOVE      R25 R0       ; R25 := R0
306 [-]: GETGLOBAL R26 K48      ; R26 := ULTRA_HARD_MODE_TAG
307 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
308 [-]: EQ        1 R24 K1     ; if R24 == nil then PC := 318
309 [-]: JMP       318          ; PC := 318
310 [-]: GETGLOBAL R25 K4       ; R25 := string
311 [-]: GETTABLE  R25 R25 K11  ; R25 := R25["0x7B782033"]
312 [-]: MOVE      R26 R0       ; R26 := R0
313 [-]: LOADK     R27 K12      ; R27 := 1
314 [-]: SUB       R28 R24 K12  ; R28 := R24 - 1
315 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
316 [-]: MOVE      R0 R25       ; R0 := R25
317 [-]: GETGLOBAL R3 K49       ; R3 := ULTRA_HARD_MODE_FLAG
318 [-]: GETGLOBAL R25 K0       ; R25 := 0x400E7765
319 [-]: MOVE      R26 R2       ; R26 := R2
320 [-]: CALL      R25 2 2      ; R25 := R25(R26)
321 [-]: TEST      R25 0        ; if not R25 then PC := 329
322 [-]: JMP       329          ; PC := 329
323 [-]: SELF      R25 R1 K50   ; R26 := R1; R25 := R1["0xDF213CE1"]
324 [-]: GETGLOBAL R27 K51      ; R27 := 0xEC274B1A
325 [-]: MOVE      R28 R0       ; R28 := R0
326 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
327 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
328 [-]: MOVE      R2 R25       ; R2 := R25
329 [-]: MOVE      R25 R2       ; R25 := R2
330 [-]: MOVE      R26 R3       ; R26 := R3
331 [-]: MOVE      R27 R4       ; R27 := R4
332 [-]: RETURN    R25 4        ; return R25,R26,R27
333 [-]: LOADNIL   R25 R25      ; R25 := nil
334 [-]: LOADK     R26 K3       ; R26 := 0
335 [-]: LOADK     R27 K3       ; R27 := 0
336 [-]: RETURN    R25 4        ; return R25,R26,R27
337 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 1704
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 1708
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: TEST      R1 1         ; if R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R3 1 2       ; R3 := R3()
  5 [-]: MOVE      R1 R3        ; R1 := R3
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: MOVE      R6 R2        ; R6 := R2
 10 [-]: CALL      R3 4 4       ; R3,R4,R5 := R3(R4,R5,R6)
 11 [-]: GETGLOBAL R6 K0        ; R6 := string
 12 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["0xDE44F664"]
 13 [-]: MOVE      R7 R0        ; R7 := R0
 14 [-]: GETGLOBAL R8 K2        ; R8 := TAG_SEPERATOR
 15 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 16 [-]: LOADNIL   R7 R7        ; R7 := nil
 17 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETGLOBAL R8 K0        ; R8 := string
 20 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["0x7B782033"]
 21 [-]: MOVE      R9 R0        ; R9 := R0
 22 [-]: LOADK     R10 K5       ; R10 := 1
 23 [-]: SUB       R11 R6 K5    ; R11 := R6 - 1
 24 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 25 [-]: MOVE      R7 R8        ; R7 := R8
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R7 R0        ; R7 := R0
 28 [-]: GETGLOBAL R8 K6        ; R8 := 0x400E7765
 29 [-]: MOVE      R9 R3        ; R9 := R3
 30 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 31 [-]: TEST      R8 1         ; if R8 then PC := 84
 32 [-]: JMP       84           ; PC := 84
 33 [-]: GETUPVAL  R8 U2        ; R8 := U2
 34 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xF81722A2"]
 35 [-]: LT        1 K8 R5      ; if 0 < R5 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: MOVE      R9 R0        ; R9 := R0
 38 [-]: MOVE      R9 R1        ; R9 := R1
 39 [-]: MOVE      R10 R5       ; R10 := R5
 40 [-]: GETTABLE  R11 R3 K9    ; R11 := R3["region"]
 41 [-]: ADD       R11 R11 K5   ; R11 := R11 + 1
 42 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 43 [-]: GETUPVAL  R9 U3        ; R9 := U3
 44 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
 45 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 84
 46 [-]: JMP       84           ; PC := 84
 47 [-]: LOADK     R9 K8        ; R9 := 0
 48 [-]: LOADK     R10 K5       ; R10 := 1
 49 [-]: GETGLOBAL R11 K0       ; R11 := string
 50 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["0xC6772A8A"]
 51 [-]: MOVE      R12 R7       ; R12 := R7
 52 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 53 [-]: LOADK     R12 K5       ; R12 := 1
 54 [-]: LOADK     R13 K11      ; R13 := -1
 55 [-]: FORPREP   R11 71       ; R11 -= R13; PC := 71
 56 [-]: GETGLOBAL R15 K12      ; R15 := 0xF595ADDE
 57 [-]: GETGLOBAL R16 K0       ; R16 := string
 58 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["0x7B782033"]
 59 [-]: MOVE      R17 R7       ; R17 := R7
 60 [-]: MOVE      R18 R14      ; R18 := R14
 61 [-]: MOVE      R19 R14      ; R19 := R14
 62 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
 63 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 64 [-]: EQ        1 R15 K3     ; if R15 == nil then PC := 72
 65 [-]: JMP       72           ; PC := 72
 66 [-]: MUL       R16 R15 R10  ; R16 := R15 * R10
 67 [-]: ADD       R9 R9 R16    ; R9 := R9 + R16
 68 [-]: MUL       R10 R10 K13  ; R10 := R10 * 10
 69 [-]: JMP       71           ; PC := 71
 70 [-]: JMP       72           ; PC := 72
 71 [-]: FORLOOP   R11 56       ; R11 += R13; if R11 <= R12 then begin PC := 56; R14 := R11 end
 72 [-]: EQ        0 R9 K8      ; if R9 ~= 0 then PC := 81
 73 [-]: JMP       81           ; PC := 81
 74 [-]: GETGLOBAL R16 K14      ; R16 := KEY_FLAG
 75 [-]: EQ        0 R4 R16     ; if R4 ~= R16 then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: SELF      R16 R1 K15   ; R17 := R1; R16 := R1["0x7D8DA1EB"]
 78 [-]: MOVE      R18 R7       ; R18 := R7
 79 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 80 [-]: MOVE      R9 R16       ; R9 := R16
 81 [-]: ADD       R16 R8 R9    ; R16 := R8 + R9
 82 [-]: ADD       R16 R16 R4   ; R16 := R16 + R4
 83 [-]: RETURN    R16 2        ; return R16
 84 [-]: GETGLOBAL R16 K16      ; R16 := _T
 85 [-]: GETTABLE  R16 R16 K17  ; R16 := R16["gSelectedRegionId"]
 86 [-]: EQ        1 R16 K3     ; if R16 == nil then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: LE        0 R16 K8     ; if R16 > 0 then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: LOADK     R16 K5       ; R16 := 1
 91 [-]: GETUPVAL  R17 U3       ; R17 := U3
 92 [-]: MUL       R17 R16 R17  ; R17 := R16 * R17
 93 [-]: RETURN    R17 2        ; return R17
 94 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 1763
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 1767
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_SIMULACRUM
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 1771
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_SIMULACRUM
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R1 R0        ; R1 := R0
  5 [-]: MOVE      R1 R1        ; R1 := R1
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 1775
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_PHOTOBOOTH
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 1779
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_PHOTOBOOTH
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R1 R0        ; R1 := R0
  5 [-]: MOVE      R1 R1        ; R1 := R1
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 1783
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := REGION_ID_PVP
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
  8 [-]: ADD       R1 R1 R0     ; R1 := R1 + R0
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 1788
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_CLAN_DOJO
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 1792
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K2        ; R2 := REGION_ID_CLAN_DOJO
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 1796
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_DOJO_DUEL
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 1800
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K2        ; R2 := REGION_ID_DOJO_DUEL
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 1804
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ALERT_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 1808
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 1812
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := NIGHTMARE_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 1816
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 1820
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := EVENT_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 1824
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 1828
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := INVASION_ATTACKER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 1832
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := INVASION_DEFENDER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 1836
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := PVP_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 1840
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 1844
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 1852
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 1857
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 1861
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := SYNDICATE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 1866
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 1870
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := SORTIE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 1875
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 1879
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := HUB_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 1884
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 1888
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ACTIVE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 1893
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := KUVA_TOWER_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 1898
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := JUNCTION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 1903
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 1907
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: DIV       R2 R0 K2     ; R2 := R0 / 100
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: MOD       R1 R1 K3     ; R1 := R1 % 10
  6 [-]: EQ        1 R1 K4      ; if R1 == 5 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: MOVE      R1 R1        ; R1 := R1
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 1913
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := KEY_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 1918
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 1922
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := HARD_MODE_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 1927
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 1931
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xB8637349"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["tier"]
 16 [-]: LT        1 K6 R0      ; if 0 < R0 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: MOVE      R0 R0        ; R0 := R0
 22 [-]: RETURN    R0 2         ; return R0
 23 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 1938
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ULTRA_HARD_MODE_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 1943
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 1947
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedScenarioGameModeIds"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 35
  4 [-]: JMP       35           ; PC := 35
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  9 [-]: GETUPVAL  R4 U1        ; R4 := U1
 10 [-]: GETGLOBAL R5 K2        ; R5 := 0x9FAED6BC
 11 [-]: GETGLOBAL R6 K3        ; R6 := SCENARIO_EVENT_HUB_TAG
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: GETGLOBAL R6 K4        ; R6 := HUB_TAG
 14 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETGLOBAL R6 K2        ; R6 := 0x9FAED6BC
 19 [-]: GETGLOBAL R7 K5        ; R7 := SCENARIO_EVENT_GROUND_TAG
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: GETGLOBAL R7 K6        ; R7 := KEY_TAG
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: GETGLOBAL R7 K2        ; R7 := 0x9FAED6BC
 27 [-]: GETGLOBAL R8 K7        ; R8 := SCENARIO_EVENT_SPACE_TAG
 28 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 29 [-]: GETGLOBAL R8 K6        ; R8 := KEY_TAG
 30 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 31 [-]: MOVE      R8 R1        ; R8 := R1
 32 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 33 [-]: SETLIST   R3 0 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 0
 34 [-]: SETTABLE  R2 K1 R3     ; R2["CachedScenarioGameModeIds"] := R3
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0xECFDD17
 36 [-]: GETGLOBAL R3 K0        ; R3 := _T
 37 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedScenarioGameModeIds"]
 38 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 39 [-]: JMP       44           ; PC := 44
 40 [-]: EQ        0 R0 R6      ; if R0 ~= R6 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R7 R1        ; R7 := R1
 43 [-]: RETURN    R7 2         ; return R7
 44 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 40; R4 := R5 end
 45 [-]: JMP       40           ; PC := 40
 46 [-]: MOVE      R7 R0        ; R7 := R0
 47 [-]: RETURN    R7 2         ; return R7
 48 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 1968
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 1972
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: GETGLOBAL R2 K1        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x7B782033"]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: LOADK     R4 K4        ; R4 := -3
  8 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  9 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
 10 [-]: RETURN    R1 0         ; return R1,...
 11 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 1976
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
  9 [-]: GETGLOBAL R3 K3        ; R3 := string
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 11 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: LOADK     R5 K6        ; R5 := -3
 15 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: GETUPVAL  R3 U2        ; R3 := U2
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: LOADK     R3 K7        ; R3 := "PvpNode"
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 25 [-]: RETURN    R3 2         ; return R3
 26 [-]: JMP       219          ; PC := 219
 27 [-]: GETUPVAL  R3 U3        ; R3 := U3
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 0         ; if not R3 then PC := 73
 31 [-]: JMP       73           ; PC := 73
 32 [-]: GETGLOBAL R3 K8        ; R3 := _G
 33 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["CachedGoalInfo"]
 34 [-]: TEST      R3 0         ; if not R3 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETGLOBAL R3 K8        ; R3 := _G
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["CachedGoalInfo"]
 38 [-]: LOADK     R4 K10       ; R4 := "EventNode"
 39 [-]: MOVE      R5 R2        ; R5 := R2
 40 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 41 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 42 [-]: TEST      R3 1         ; if R3 then PC := 68
 43 [-]: JMP       68           ; PC := 68
 44 [-]: GETGLOBAL R3 K8        ; R3 := _G
 45 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MergedGoalNodes"]
 46 [-]: TEST      R3 0         ; if not R3 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETGLOBAL R3 K8        ; R3 := _G
 49 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MergedGoalNodes"]
 50 [-]: LOADK     R4 K10       ; R4 := "EventNode"
 51 [-]: MOVE      R5 R2        ; R5 := R2
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 54 [-]: TEST      R3 1         ; if R3 then PC := 68
 55 [-]: JMP       68           ; PC := 68
 56 [-]: GETGLOBAL R3 K12       ; R3 := _T
 57 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["LockedGoalList"]
 58 [-]: TEST      R3 0         ; if not R3 then PC := 73
 59 [-]: JMP       73           ; PC := 73
 60 [-]: GETGLOBAL R3 K12       ; R3 := _T
 61 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["LockedGoalList"]
 62 [-]: LOADK     R4 K10       ; R4 := "EventNode"
 63 [-]: MOVE      R5 R2        ; R5 := R2
 64 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 65 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 66 [-]: TEST      R3 0         ; if not R3 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: LOADK     R3 K10       ; R3 := "EventNode"
 69 [-]: MOVE      R4 R2        ; R4 := R2
 70 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 71 [-]: RETURN    R3 2         ; return R3
 72 [-]: JMP       219          ; PC := 219
 73 [-]: GETUPVAL  R3 U4        ; R3 := U4
 74 [-]: MOVE      R4 R0        ; R4 := R0
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: TEST      R3 0         ; if not R3 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: LOADK     R3 K14       ; R3 := "ClanNode"
 79 [-]: MOVE      R4 R2        ; R4 := R2
 80 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 81 [-]: RETURN    R3 2         ; return R3
 82 [-]: JMP       219          ; PC := 219
 83 [-]: GETUPVAL  R3 U5        ; R3 := U5
 84 [-]: MOVE      R4 R0        ; R4 := R0
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: TEST      R3 0         ; if not R3 then PC := 93
 87 [-]: JMP       93           ; PC := 93
 88 [-]: LOADK     R3 K15       ; R3 := "SyndicateNode"
 89 [-]: MOVE      R4 R2        ; R4 := R2
 90 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 91 [-]: RETURN    R3 2         ; return R3
 92 [-]: JMP       219          ; PC := 219
 93 [-]: GETUPVAL  R3 U6        ; R3 := U6
 94 [-]: MOVE      R4 R0        ; R4 := R0
 95 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 96 [-]: TEST      R3 0         ; if not R3 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: LOADK     R3 K16       ; R3 := "SortieNode"
 99 [-]: MOVE      R4 R2        ; R4 := R2
100 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
101 [-]: RETURN    R3 2         ; return R3
102 [-]: JMP       219          ; PC := 219
103 [-]: GETUPVAL  R3 U7        ; R3 := U7
104 [-]: MOVE      R4 R0        ; R4 := R0
105 [-]: CALL      R3 2 2       ; R3 := R3(R4)
106 [-]: TEST      R3 0         ; if not R3 then PC := 179
107 [-]: JMP       179          ; PC := 179
108 [-]: NEWTABLE  R3 14 0      ; R3 := {}
109 [-]: LOADK     R4 K17       ; R4 := "MercuryHUB"
110 [-]: LOADK     R5 K18       ; R5 := "VenusHUB"
111 [-]: LOADK     R6 K19       ; R6 := "EarthHUB"
112 [-]: LOADK     R7 K20       ; R7 := "TradeHUB1"
113 [-]: LOADK     R8 K21       ; R8 := "JupiterHUB"
114 [-]: LOADK     R9 K22       ; R9 := "SaturnHUB"
115 [-]: LOADK     R10 K23      ; R10 := "UranusHUB"
116 [-]: LOADK     R11 K24      ; R11 := "NeptuneHUB"
117 [-]: LOADK     R12 K25      ; R12 := "PlutoHUB"
118 [-]: LOADK     R13 K26      ; R13 := "CeresHUB"
119 [-]: LOADK     R14 K27      ; R14 := "ErisHUB"
120 [-]: LOADK     R15 K28      ; R15 := "SednaHUB"
121 [-]: LOADK     R16 K29      ; R16 := "EuropaHUB"
122 [-]: LOADK     R17 K30      ; R17 := "PhobosHUB"
123 [-]: SETLIST   R3 14 1      ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 14
124 [-]: GETGLOBAL R4 K31       ; R4 := 0x6374FD98
125 [-]: MOVE      R5 R1        ; R5 := R1
126 [-]: LOADK     R6 K32       ; R6 := 1
127 [-]: LEN       R7 R3        ; R7 := # R3
128 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
129 [-]: MOVE      R1 R4        ; R1 := R4
130 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 138
131 [-]: JMP       138          ; PC := 138
132 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
133 [-]: EQ        0 R4 K35     ; if R4 ~= 2 then PC := 138
134 [-]: JMP       138          ; PC := 138
135 [-]: LOADK     R4 K36       ; R4 := "TennoConHUB2"
136 [-]: RETURN    R4 2         ; return R4
137 [-]: JMP       219          ; PC := 219
138 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 146
139 [-]: JMP       146          ; PC := 146
140 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
141 [-]: EQ        0 R4 K33     ; if R4 ~= 3 then PC := 146
142 [-]: JMP       146          ; PC := 146
143 [-]: LOADK     R4 K37       ; R4 := "IronwakeHUB3"
144 [-]: RETURN    R4 2         ; return R4
145 [-]: JMP       219          ; PC := 219
146 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 156
147 [-]: JMP       156          ; PC := 156
148 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
149 [-]: EQ        0 R4 K38     ; if R4 ~= 4 then PC := 156
150 [-]: JMP       156          ; PC := 156
151 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
152 [-]: GETGLOBAL R5 K39       ; R5 := CETUS_NODE_TAG
153 [-]: TAILCALL  R4 2 0       ; R4,... := R4(R5)
154 [-]: RETURN    R4 0         ; return R4,...
155 [-]: JMP       219          ; PC := 219
156 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
159 [-]: EQ        0 R4 K40     ; if R4 ~= 5 then PC := 166
160 [-]: JMP       166          ; PC := 166
161 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
162 [-]: GETGLOBAL R5 K41       ; R5 := SCENARIO_EVENT_HUB_TAG
163 [-]: TAILCALL  R4 2 0       ; R4,... := R4(R5)
164 [-]: RETURN    R4 0         ; return R4,...
165 [-]: JMP       219          ; PC := 219
166 [-]: EQ        0 R1 K35     ; if R1 ~= 2 then PC := 176
167 [-]: JMP       176          ; PC := 176
168 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
169 [-]: EQ        0 R4 K32     ; if R4 ~= 1 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
172 [-]: GETGLOBAL R5 K42       ; R5 := FORTUNA_NODE_TAG
173 [-]: TAILCALL  R4 2 0       ; R4,... := R4(R5)
174 [-]: RETURN    R4 0         ; return R4,...
175 [-]: JMP       219          ; PC := 219
176 [-]: GETTABLE  R4 R3 R1     ; R4 := R3[R1]
177 [-]: RETURN    R4 2         ; return R4
178 [-]: JMP       219          ; PC := 219
179 [-]: GETUPVAL  R4 U8        ; R4 := U8
180 [-]: MOVE      R5 R0        ; R5 := R0
181 [-]: CALL      R4 2 2       ; R4 := R4(R5)
182 [-]: TEST      R4 0         ; if not R4 then PC := 189
183 [-]: JMP       189          ; PC := 189
184 [-]: LOADK     R4 K43       ; R4 := "CrewBattleNode"
185 [-]: MOVE      R5 R2        ; R5 := R2
186 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
187 [-]: RETURN    R4 2         ; return R4
188 [-]: JMP       219          ; PC := 219
189 [-]: GETUPVAL  R4 U9        ; R4 := U9
190 [-]: MOVE      R5 R0        ; R5 := R0
191 [-]: CALL      R4 2 2       ; R4 := R4(R5)
192 [-]: TEST      R4 0         ; if not R4 then PC := 203
193 [-]: JMP       203          ; PC := 203
194 [-]: GETUPVAL  R4 U0        ; R4 := U0
195 [-]: MOD       R4 R0 R4     ; R4 := R0 % R4
196 [-]: GETUPVAL  R5 U10       ; R5 := U10
197 [-]: CALL      R5 1 2       ; R5 := R5()
198 [-]: SELF      R5 R5 K44    ; R6 := R5; R5 := R5["0xD13A9332"]
199 [-]: MOVE      R7 R4        ; R7 := R4
200 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
201 [-]: RETURN    R5 2         ; return R5
202 [-]: JMP       219          ; PC := 219
203 [-]: EQ        0 R1 K45     ; if R1 ~= 16 then PC := 210
204 [-]: JMP       210          ; PC := 210
205 [-]: LOADK     R6 K46       ; R6 := "SettlementNode"
206 [-]: MOVE      R7 R2        ; R7 := R2
207 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
208 [-]: RETURN    R6 2         ; return R6
209 [-]: JMP       219          ; PC := 219
210 [-]: LT        0 K47 R2     ; if 0 >= R2 then PC := 217
211 [-]: JMP       217          ; PC := 217
212 [-]: LOADK     R6 K48       ; R6 := "SolNode"
213 [-]: MOVE      R7 R2        ; R7 := R2
214 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
215 [-]: RETURN    R6 2         ; return R6
216 [-]: JMP       219          ; PC := 219
217 [-]: LOADNIL   R6 R6        ; R6 := nil
218 [-]: RETURN    R6 2         ; return R6
219 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 2025
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 2029
; #Upvalues:       14
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K0        ; R1 := ALERT_TAG
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: JMP       112          ; PC := 112
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K1        ; R1 := EVENT_TAG
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       112          ; PC := 112
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETGLOBAL R1 K2        ; R1 := INVASION_ATTACKER_TAG
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       112          ; PC := 112
 25 [-]: GETUPVAL  R1 U3        ; R1 := U3
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETGLOBAL R1 K3        ; R1 := INVASION_DEFENDER_TAG
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: JMP       112          ; PC := 112
 33 [-]: GETUPVAL  R1 U4        ; R1 := U4
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 36 [-]: TEST      R1 0         ; if not R1 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETGLOBAL R1 K4        ; R1 := SYNDICATE_MISSION_TAG
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: JMP       112          ; PC := 112
 41 [-]: GETUPVAL  R1 U5        ; R1 := U5
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 0         ; if not R1 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R1 K5        ; R1 := SORTIE_MISSION_TAG
 47 [-]: RETURN    R1 2         ; return R1
 48 [-]: JMP       112          ; PC := 112
 49 [-]: GETUPVAL  R1 U6        ; R1 := U6
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 0         ; if not R1 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETGLOBAL R1 K6        ; R1 := HUB_TAG
 55 [-]: RETURN    R1 2         ; return R1
 56 [-]: JMP       112          ; PC := 112
 57 [-]: GETUPVAL  R1 U7        ; R1 := U7
 58 [-]: MOVE      R2 R0        ; R2 := R0
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: TEST      R1 0         ; if not R1 then PC := 65
 61 [-]: JMP       65           ; PC := 65
 62 [-]: GETGLOBAL R1 K7        ; R1 := BADLAND_MISSION_TAG
 63 [-]: RETURN    R1 2         ; return R1
 64 [-]: JMP       112          ; PC := 112
 65 [-]: GETUPVAL  R1 U8        ; R1 := U8
 66 [-]: MOVE      R2 R0        ; R2 := R0
 67 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 68 [-]: TEST      R1 0         ; if not R1 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETGLOBAL R1 K8        ; R1 := ACTIVE_MISSION_TAG
 71 [-]: RETURN    R1 2         ; return R1
 72 [-]: JMP       112          ; PC := 112
 73 [-]: GETUPVAL  R1 U9        ; R1 := U9
 74 [-]: MOVE      R2 R0        ; R2 := R0
 75 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 76 [-]: TEST      R1 0         ; if not R1 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETGLOBAL R1 K9        ; R1 := KUVA_TOWER_MISSION_TAG
 79 [-]: RETURN    R1 2         ; return R1
 80 [-]: JMP       112          ; PC := 112
 81 [-]: GETUPVAL  R1 U10       ; R1 := U10
 82 [-]: MOVE      R2 R0        ; R2 := R0
 83 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 84 [-]: TEST      R1 0         ; if not R1 then PC := 89
 85 [-]: JMP       89           ; PC := 89
 86 [-]: GETGLOBAL R1 K10       ; R1 := KEY_TAG
 87 [-]: RETURN    R1 2         ; return R1
 88 [-]: JMP       112          ; PC := 112
 89 [-]: GETUPVAL  R1 U11       ; R1 := U11
 90 [-]: MOVE      R2 R0        ; R2 := R0
 91 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 92 [-]: TEST      R1 0         ; if not R1 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R1 K11       ; R1 := NIGHTMARE_TAG
 95 [-]: RETURN    R1 2         ; return R1
 96 [-]: JMP       112          ; PC := 112
 97 [-]: GETUPVAL  R1 U12       ; R1 := U12
 98 [-]: MOVE      R2 R0        ; R2 := R0
 99 [-]: CALL      R1 2 2       ; R1 := R1(R2)
100 [-]: TEST      R1 0         ; if not R1 then PC := 105
101 [-]: JMP       105          ; PC := 105
102 [-]: GETGLOBAL R1 K12       ; R1 := HARD_MODE_TAG
103 [-]: RETURN    R1 2         ; return R1
104 [-]: JMP       112          ; PC := 112
105 [-]: GETUPVAL  R1 U13       ; R1 := U13
106 [-]: MOVE      R2 R0        ; R2 := R0
107 [-]: CALL      R1 2 2       ; R1 := R1(R2)
108 [-]: TEST      R1 0         ; if not R1 then PC := 112
109 [-]: JMP       112          ; PC := 112
110 [-]: GETGLOBAL R1 K13       ; R1 := ULTRA_HARD_MODE_TAG
111 [-]: RETURN    R1 2         ; return R1
112 [-]: LOADK     R1 K14       ; R1 := ""
113 [-]: RETURN    R1 2         ; return R1
114 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 2063
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: LOADNIL   R3 R3        ; R3 := nil
  7 [-]: TEST      R2 0         ; if not R2 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: SELF      R4 R1 K0     ; R5 := R1; R4 := R1["0x4B93F65B"]
 10 [-]: GETGLOBAL R6 K1        ; R6 := 0xEC274B1A
 11 [-]: MOVE      R7 R2        ; R7 := R2
 12 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 13 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 14 [-]: MOVE      R3 R4        ; R3 := R4
 15 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 30
 19 [-]: JMP       30           ; PC := 30
 20 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 21 [-]: GETTABLE  R5 R3 K3     ; R5 := R3["gameRules"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETTABLE  R4 R3 K3     ; R4 := R3["gameRules"]
 26 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x8B598ED4"]
 27 [-]: GETUPVAL  R6 U2        ; R6 := U2
 28 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: GETGLOBAL R5 K5        ; R5 := _T
 33 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["CachedPvpNodes"]
 34 [-]: SETTABLE  R5 R0 R4     ; R5[R0] := R4
 35 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 2075
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: SETTABLE  R1 K1 R2     ; R1["CachedPvpNodes"] := R2
  8 [-]: GETGLOBAL R1 K0        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
 10 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 11 [-]: TEST      R1 1         ; if R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K0        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
 18 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 2088
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 2092
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 40
 10 [-]: JMP       40           ; PC := 40
 11 [-]: GETGLOBAL R1 K0        ; R1 := math
 12 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
 19 [-]: GETGLOBAL R3 K3        ; R3 := string
 20 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: LOADK     R5 K6        ; R5 := -3
 25 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 26 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xF81722A2"]
 29 [-]: EQ        1 R1 K8      ; if R1 == 16 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: LOADK     R5 K9        ; R5 := "SettlementNode"
 34 [-]: LOADK     R6 K10       ; R6 := "SolNode"
 35 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 36 [-]: MOVE      R4 R2        ; R4 := R2
 37 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 38 [-]: RETURN    R3 2         ; return R3
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETUPVAL  R3 U5        ; R3 := U5
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: RETURN    R3 2         ; return R3
 44 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 2102
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  2 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x2D0B8A86"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := string
  5 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0xDE44F664"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETGLOBAL R5 K4        ; R5 := ALERT_TAG
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETGLOBAL R4 K2        ; R4 := string
 12 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x7B782033"]
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: LOADK     R6 K7        ; R6 := 1
 15 [-]: SUB       R7 R3 K7     ; R7 := R3 - 1
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: MOVE      R0 R4        ; R0 := R4
 18 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mAlerts"]
 19 [-]: LOADK     R5 K7        ; R5 := 1
 20 [-]: LEN       R6 R4        ; R6 := # R4
 21 [-]: LOADK     R7 K7        ; R7 := 1
 22 [-]: FORPREP   R5 33        ; R5 -= R7; PC := 33
 23 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 24 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mMissionInfo"]
 25 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["location"]
 26 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9["0x5EC7A3D2"]
 27 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 28 [-]: EQ        0 R9 R0      ; if R9 ~= R0 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 31 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mExpiry"]
 32 [-]: RETURN    R9 2         ; return R9
 33 [-]: FORLOOP   R5 23        ; R5 += R7; if R5 <= R6 then begin PC := 23; R8 := R5 end
 34 [-]: LOADNIL   R9 R9        ; R9 := nil
 35 [-]: RETURN    R9 2         ; return R9
 36 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 2121
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R3 R0        ; R3 := R0
  2 [-]: TEST      R3 0         ; if not R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: RETURN    R3 2         ; return R3
  6 [-]: GETGLOBAL R3 K0        ; R3 := _T
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
  8 [-]: TEST      R3 0         ; if not R3 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R3 K0        ; R3 := _T
 11 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
 12 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 13 [-]: TEST      R3 0         ; if not R3 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R3 K0        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
 17 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 18 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["goal"]
 19 [-]: EQ        0 R3 K3      ; if R3 ~= "0x1" then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: RETURN    R3 2         ; return R3
 23 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: CALL      R3 1 2       ; R3 := R3()
 30 [-]: MOVE      R0 R3        ; R0 := R3
 31 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 0         ; if not R3 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R3 R0        ; R3 := R0
 37 [-]: RETURN    R3 2         ; return R3
 38 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x5B0E7439"]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 41 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 42 [-]: MOVE      R5 R3        ; R5 := R3
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: TEST      R4 1         ; if R4 then PC := 56
 45 [-]: JMP       56           ; PC := 56
 46 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0x80A80EEB"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 49 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["RadialRegion_RCS_LOCKED"]
 50 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x79FEB0D"]
 53 [-]: MOVE      R6 R2        ; R6 := R2
 54 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 55 [-]: JMP       58           ; PC := 58
 56 [-]: MOVE      R4 R0        ; R4 := R0
 57 [-]: MOVE      R4 R1        ; R4 := R1
 58 [-]: RETURN    R4 2         ; return R4
 59 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 2143
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x616DD092"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xBCEEAD81"]
  5 [-]: CALL      R2 1 0       ; R2,... := R2()
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x458F27A9"]
 13 [-]: LOADK     R3 K5        ; R3 := "IsMaximized"
 14 [-]: LOADK     R4 K6        ; R4 := ""
 15 [-]: TAILCALL  R1 4 0       ; R1,... := R1(R2,R3,R4)
 16 [-]: RETURN    R1 0         ; return R1,...
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 2153
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0xEB3F45BE"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["gameModeId"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 47
 14 [-]: JMP       47           ; PC := 47
 15 [-]: LOADK     R2 K3        ; R2 := ""
 16 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1["0x3F0F411C"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: LEN       R4 R3        ; R4 := # R3
 24 [-]: LE        0 R4 K5      ; if R4 > 0 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: RETURN    R4 2         ; return R4
 28 [-]: GETTABLE  R2 R3 K6     ; R2 := R3[1]
 29 [-]: GETGLOBAL R4 K7        ; R4 := string
 30 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xC6772A8A"]
 31 [-]: MOVE      R5 R2        ; R5 := R2
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: LT        0 K5 R4      ; if 0 >= R4 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0x41AF6EE8
 36 [-]: CALL      R4 1 2       ; R4 := R4()
 37 [-]: SETTABLE  R4 K10 R2    ; R4["sec"] := R2
 38 [-]: GETGLOBAL R5 K11       ; R5 := Engine
 39 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["0xD09D7910"]
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: LE        1 R5 K5      ; if R5 <= 0 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R6 R0        ; R6 := R0
 45 [-]: MOVE      R6 R1        ; R6 := R1
 46 [-]: RETURN    R6 2         ; return R6
 47 [-]: MOVE      R6 R0        ; R6 := R0
 48 [-]: RETURN    R6 2         ; return R6
 49 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 2181
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0x38DEBF71"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0xEC274B1A
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: LOADK     R4 K4        ; R4 := 1
 15 [-]: LEN       R5 R2        ; R5 := # R2
 16 [-]: LOADK     R6 K4        ; R6 := 1
 17 [-]: FORPREP   R4 24        ; R4 -= R6; PC := 24
 18 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 19 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["node"]
 20 [-]: EQ        0 R8 R3      ; if R8 ~= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R8 R0        ; R8 := R0
 23 [-]: RETURN    R8 2         ; return R8
 24 [-]: FORLOOP   R4 18        ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
 25 [-]: SELF      R8 R1 K6     ; R9 := R1; R8 := R1["0xDFE95148"]
 26 [-]: MOVE      R10 R3       ; R10 := R3
 27 [-]: CALL      R8 3 1       ; R8(R9,R10)
 28 [-]: GETGLOBAL R8 K7        ; R8 := gPlayerProfileMgr
 29 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8["0xDB37C67"]
 30 [-]: LOADK     R10 K9       ; R10 := 0
 31 [-]: CALL      R8 3 1       ; R8(R9,R10)
 32 [-]: MOVE      R8 R1        ; R8 := R1
 33 [-]: RETURN    R8 2         ; return R8
 34 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 2200
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["QueuedTransmissions"]
  9 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETGLOBAL R1 K1        ; R1 := _T
 12 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 13 [-]: SETTABLE  R1 K2 R2     ; R1["QueuedTransmissions"] := R2
 14 [-]: GETGLOBAL R1 K4        ; R1 := table
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xE6450C9D"]
 16 [-]: GETGLOBAL R2 K1        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["QueuedTransmissions"]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: GETGLOBAL R1 K6        ; R1 := gFlashMgr
 21 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x616DD092"]
 22 [-]: GETGLOBAL R3 K8        ; R3 := _G
 23 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UIMovie_TransmissionMovie"]
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 0         ; if not R2 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 31 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x24FF386"]
 32 [-]: GETGLOBAL R4 K8        ; R4 := _G
 33 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UIMovie_TransmissionMovie"]
 34 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 35 [-]: MOVE      R1 R2        ; R1 := R2
 36 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 2217
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 2221
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xCC01AE7A"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 2228
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0xB8F6F4F3"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K4        ; R3 := gGameConfig
 11 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x92A7D29D"]
 12 [-]: MOVE      R5 R2        ; R5 := R2
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: MOVE      R0 R3        ; R0 := R3
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 2240
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HasCompletedVorsPrize"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0x2C00D429
  8 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x2C00D429
 11 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 14 [-]: GETGLOBAL R3 K6        ; R3 := gGameData
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 53
 17 [-]: JMP       53           ; PC := 53
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 19 [-]: GETGLOBAL R3 K6        ; R3 := gGameData
 20 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 21 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 22 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 23 [-]: TEST      R2 1         ; if R2 then PC := 53
 24 [-]: JMP       53           ; PC := 53
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0xECFDD17
 26 [-]: GETGLOBAL R3 K6        ; R3 := gGameData
 27 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x70666039"]
 30 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 31 [-]: CALL      R2 0 4       ; R2,R3,R4 := R2(R3,...)
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 34 [-]: MOVE      R8 R6        ; R8 := R6
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: TEST      R7 1         ; if R7 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: GETTABLE  R7 R6 K10    ; R7 := R6["mItemType"]
 39 [-]: EQ        1 R7 R1      ; if R7 == R1 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETTABLE  R7 R6 K10    ; R7 := R6["mItemType"]
 42 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETTABLE  R7 R6 K11    ; R7 := R6["mCompleted"]
 45 [-]: TEST      R7 0         ; if not R7 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETGLOBAL R7 K0        ; R7 := _T
 48 [-]: SETTABLE  R7 K1 K12    ; R7["HasCompletedVorsPrize"] := "0x1"
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: RETURN    R7 2         ; return R7
 51 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 33; R4 := R5 end
 52 [-]: JMP       33           ; PC := 33
 53 [-]: MOVE      R7 R0        ; R7 := R0
 54 [-]: RETURN    R7 2         ; return R7
 55 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 2261
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 2265
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x2C00D429
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CALL      R2 1 2       ; R2 := R2()
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETGLOBAL R2 K2        ; R2 := gGameData
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 41
 14 [-]: JMP       41           ; PC := 41
 15 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x6F2E05FD"]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: TEST      R4 1         ; if R4 then PC := 41
 21 [-]: JMP       41           ; PC := 41
 22 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3["0x70666039"]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: LOADK     R5 K6        ; R5 := 1
 25 [-]: LEN       R6 R4        ; R6 := # R4
 26 [-]: LOADK     R7 K6        ; R7 := 1
 27 [-]: FORPREP   R5 40        ; R5 -= R7; PC := 40
 28 [-]: GETGLOBAL R9 K3        ; R9 := 0x400E7765
 29 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: TEST      R9 1         ; if R9 then PC := 40
 32 [-]: JMP       40           ; PC := 40
 33 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 34 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["mItemType"]
 35 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 38 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mCompleted"]
 39 [-]: RETURN    R9 2         ; return R9
 40 [-]: FORLOOP   R5 28        ; R5 += R7; if R5 <= R6 then begin PC := 28; R8 := R5 end
 41 [-]: MOVE      R9 R0        ; R9 := R0
 42 [-]: RETURN    R9 2         ; return R9
 43 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 2288
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 2292
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xC92135A6"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: JMP       13           ; PC := 13
 11 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xECFDD17
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mTag"]
 20 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x315E860F"]
 21 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 22 [-]: TEST      R8 0         ; if not R8 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: GETGLOBAL R8 K6        ; R8 := 0x9FAED6BC
 25 [-]: GETTABLE  R9 R7 K4     ; R9 := R7["mTag"]
 26 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 27 [-]: SETTABLE  R1 R8 K7     ; R1[R8] := "0x1"
 28 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 19; R5 := R6 end
 29 [-]: JMP       19           ; PC := 19
 30 [-]: GETUPVAL  R8 U0        ; R8 := U0
 31 [-]: CALL      R8 1 2       ; R8 := R8()
 32 [-]: SELF      R9 R8 K8     ; R10 := R8; R9 := R8["0x7E6E6726"]
 33 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 34 [-]: LOADK     R10 K9       ; R10 := 0
 35 [-]: LOADK     R11 K9       ; R11 := 0
 36 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 37 [-]: GETGLOBAL R13 K3       ; R13 := 0xECFDD17
 38 [-]: MOVE      R14 R9       ; R14 := R9
 39 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 40 [-]: JMP       97           ; PC := 97
 41 [-]: GETTABLE  R18 R17 K10  ; R18 := R17["mission"]
 42 [-]: GETTABLE  R19 R17 K11  ; R19 := R17["name"]
 43 [-]: SELF      R19 R19 K5   ; R20 := R19; R19 := R19["0x315E860F"]
 44 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 45 [-]: TEST      R19 0        ; if not R19 then PC := 97
 46 [-]: JMP       97           ; PC := 97
 47 [-]: GETTABLE  R19 R17 K12  ; R19 := R17["nodeType"]
 48 [-]: GETGLOBAL R20 K13      ; R20 := Lotus_Game
 49 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["NT_MISSION"]
 50 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETTABLE  R19 R17 K12  ; R19 := R17["nodeType"]
 53 [-]: GETGLOBAL R20 K13      ; R20 := Lotus_Game
 54 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["NT_CLAN"]
 55 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 97
 56 [-]: JMP       97           ; PC := 97
 57 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
 58 [-]: GETTABLE  R20 R18 K16  ; R20 := R18["levelOverride"]
 59 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 60 [-]: TEST      R19 1        ; if R19 then PC := 97
 61 [-]: JMP       97           ; PC := 97
 62 [-]: GETTABLE  R19 R18 K17  ; R19 := R18["missionType"]
 63 [-]: GETGLOBAL R20 K13      ; R20 := Lotus_Game
 64 [-]: GETTABLE  R20 R20 K18  ; R20 := R20["MT_ANY"]
 65 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 97
 66 [-]: JMP       97           ; PC := 97
 67 [-]: GETTABLE  R19 R18 K17  ; R19 := R18["missionType"]
 68 [-]: GETGLOBAL R20 K13      ; R20 := Lotus_Game
 69 [-]: GETTABLE  R20 R20 K19  ; R20 := R20["MT_ENDLESS_EXTERMINATION"]
 70 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 97
 71 [-]: JMP       97           ; PC := 97
 72 [-]: GETTABLE  R19 R18 K17  ; R19 := R18["missionType"]
 73 [-]: GETGLOBAL R20 K13      ; R20 := Lotus_Game
 74 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["MT_RAILJACK"]
 75 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 97
 76 [-]: JMP       97           ; PC := 97
 77 [-]: ADD       R10 R10 K21  ; R10 := R10 + 1
 78 [-]: GETGLOBAL R19 K6       ; R19 := 0x9FAED6BC
 79 [-]: GETTABLE  R20 R17 K11  ; R20 := R17["name"]
 80 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 81 [-]: GETTABLE  R19 R1 R19   ; R19 := R1[R19]
 82 [-]: EQ        0 R19 K22    ; if R19 ~= nil then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: TEST      R2 0         ; if not R2 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: ADD       R11 R11 K21  ; R11 := R11 + 1
 87 [-]: JMP       97           ; PC := 97
 88 [-]: GETGLOBAL R19 K23      ; R19 := table
 89 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["0xE6450C9D"]
 90 [-]: MOVE      R20 R12      ; R20 := R12
 91 [-]: NEWTABLE  R21 0 2      ; R21 := {}
 92 [-]: GETTABLE  R22 R17 K11  ; R22 := R17["name"]
 93 [-]: SETTABLE  R21 K11 R22  ; R21["name"] := R22
 94 [-]: GETTABLE  R22 R17 K25  ; R22 := R17["locTag"]
 95 [-]: SETTABLE  R21 K25 R22  ; R21["locTag"] := R22
 96 [-]: CALL      R19 3 1      ; R19(R20,R21)
 97 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 41; R15 := R16 end
 98 [-]: JMP       41           ; PC := 41
 99 [-]: MOVE      R19 R11      ; R19 := R11
100 [-]: MOVE      R20 R10      ; R20 := R10
101 [-]: MOVE      R21 R12      ; R21 := R12
102 [-]: RETURN    R19 4        ; return R19,R20,R21
103 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 2338
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 2342
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 4       ; R0,R1,R2 := R0()
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R3 R0        ; R3 := R0
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: MOVE      R4 R3        ; R4 := R3
 10 [-]: MOVE      R5 R2        ; R5 := R2
 11 [-]: RETURN    R4 3         ; return R4,R5
 12 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 2348
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 2352
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETGLOBAL R2 K2        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["CachedFlashSales"]
 11 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x2D0B8A86"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mFlashSales"]
 16 [-]: GETGLOBAL R4 K2        ; R4 := _T
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: SETTABLE  R4 K3 R5     ; R4["CachedFlashSales"] := R5
 19 [-]: GETGLOBAL R4 K7        ; R4 := 0x63B09107
 20 [-]: MOVE      R5 R3        ; R5 := R3
 21 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 24 [-]: GETTABLE  R10 R8 K8    ; R10 := R8["mTypeName"]
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: TEST      R9 1         ; if R9 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R9 K2        ; R9 := _T
 29 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["CachedFlashSales"]
 30 [-]: GETTABLE  R10 R8 K8    ; R10 := R8["mTypeName"]
 31 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x1B252E3C"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: SETTABLE  R9 R10 R8    ; R9[R10] := R8
 34 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 23; R6 := R7 end
 35 [-]: JMP       23           ; PC := 23
 36 [-]: GETGLOBAL R9 K2        ; R9 := _T
 37 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["CachedFlashSales"]
 38 [-]: EQ        0 R9 K4      ; if R9 ~= nil then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: LOADNIL   R9 R9        ; R9 := nil
 41 [-]: RETURN    R9 2         ; return R9
 42 [-]: LOADNIL   R9 R9        ; R9 := nil
 43 [-]: SELF      R10 R0 K10   ; R11 := R0; R10 := R0["0xC5349ED"]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: TEST      R10 0        ; if not R10 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: MOVE      R9 R0        ; R9 := R0
 48 [-]: JMP       59           ; PC := 59
 49 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0["0x3077BE70"]
 50 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 51 [-]: MOVE      R9 R10       ; R9 := R10
 52 [-]: GETGLOBAL R10 K1       ; R10 := 0x400E7765
 53 [-]: MOVE      R11 R9       ; R11 := R9
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: TEST      R10 0        ; if not R10 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: LOADNIL   R10 R10      ; R10 := nil
 58 [-]: RETURN    R10 2        ; return R10
 59 [-]: GETGLOBAL R10 K2       ; R10 := _T
 60 [-]: GETTABLE  R10 R10 K3   ; R10 := R10["CachedFlashSales"]
 61 [-]: SELF      R11 R9 K9    ; R12 := R9; R11 := R9["0x1B252E3C"]
 62 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 63 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
 64 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 65 [-]: MOVE      R12 R10      ; R12 := R10
 66 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 67 [-]: TEST      R11 1        ; if R11 then PC := 85
 68 [-]: JMP       85           ; PC := 85
 69 [-]: GETGLOBAL R11 K12      ; R11 := Engine
 70 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xD09D7910"]
 71 [-]: GETTABLE  R12 R10 K14  ; R12 := R10["mStartDate"]
 72 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 73 [-]: LT        0 R11 K15    ; if R11 >= 0 then PC := 85
 74 [-]: JMP       85           ; PC := 85
 75 [-]: GETGLOBAL R11 K12      ; R11 := Engine
 76 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0xD09D7910"]
 77 [-]: GETTABLE  R12 R10 K16  ; R12 := R10["mEndDate"]
 78 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 79 [-]: LT        0 K15 R11    ; if 0 >= R11 then PC := 85
 80 [-]: JMP       85           ; PC := 85
 81 [-]: GETTABLE  R11 R10 K17  ; R11 := R10["mShowInMarket"]
 82 [-]: TEST      R11 0        ; if not R11 then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: RETURN    R10 2        ; return R10
 85 [-]: LOADNIL   R11 R11      ; R11 := nil
 86 [-]: RETURN    R11 2        ; return R11
 87 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 2395
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 2413
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 2417
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 2422
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 2423
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 2424
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 2426
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: TEST      R2 1         ; if R2 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: TEST      R3 0         ; if not R3 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R4 U1        ; R4 := U1
  7 [-]: TEST      R4 1         ; if R4 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETUPVAL  R4 U2        ; R4 := U2
 10 [-]: LOADK     R5 K0        ; R5 := 1
 11 [-]: LEN       R6 R0        ; R6 := # R0
 12 [-]: LOADK     R7 K1        ; R7 := 0
 13 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 62
 14 [-]: JMP       62           ; PC := 62
 15 [-]: GETGLOBAL R8 K2        ; R8 := math
 16 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["0xF7005A7B"]
 17 [-]: ADD       R9 R5 R6     ; R9 := R5 + R6
 18 [-]: DIV       R9 R9 K4     ; R9 := R9 / 2
 19 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 20 [-]: MOVE      R7 R8        ; R7 := R8
 21 [-]: MOVE      R8 R2        ; R8 := R2
 22 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
 23 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 24 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 52
 25 [-]: JMP       52           ; PC := 52
 26 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 27 [-]: MOVE      R10 R7       ; R10 := R7
 28 [-]: MOVE      R11 R7       ; R11 := R7
 29 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 30 [-]: SUB       R10 R7 K0    ; R10 := R7 - 1
 31 [-]: MOVE      R11 R2       ; R11 := R2
 32 [-]: GETTABLE  R12 R0 R10   ; R12 := R0[R10]
 33 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 34 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: MOVE      R11 R10      ; R11 := R10
 37 [-]: SUB       R10 R10 K0   ; R10 := R10 - 1
 38 [-]: SETTABLE  R9 K0 R11    ; R9[1] := R11
 39 [-]: JMP       31           ; PC := 31
 40 [-]: ADD       R10 R7 K0    ; R10 := R7 + 1
 41 [-]: MOVE      R11 R2       ; R11 := R2
 42 [-]: GETTABLE  R12 R0 R10   ; R12 := R0[R10]
 43 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 44 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: MOVE      R11 R10      ; R11 := R10
 47 [-]: ADD       R10 R10 K0   ; R10 := R10 + 1
 48 [-]: SETTABLE  R9 K4 R11    ; R9[2] := R11
 49 [-]: JMP       41           ; PC := 41
 50 [-]: RETURN    R9 2         ; return R9
 51 [-]: JMP       13           ; PC := 13
 52 [-]: MOVE      R11 R4       ; R11 := R4
 53 [-]: MOVE      R12 R1       ; R12 := R1
 54 [-]: MOVE      R13 R8       ; R13 := R8
 55 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 56 [-]: TEST      R11 0        ; if not R11 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: SUB       R6 R7 K0     ; R6 := R7 - 1
 59 [-]: JMP       13           ; PC := 13
 60 [-]: ADD       R5 R7 K0     ; R5 := R7 + 1
 61 [-]: JMP       13           ; PC := 13
 62 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 2458
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 2462
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["type"]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 2469
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R2 1         ; if R2 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0["0x8292A1EF"]
  5 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  6 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 18
  8 [-]: JMP       18           ; PC := 18
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x966E7851"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: MOVE      R6 R3        ; R6 := R3
 14 [-]: GETUPVAL  R7 U2        ; R7 := U2
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: MOVE      R5 R4        ; R5 := R4
 17 [-]: RETURN    R5 2         ; return R5
 18 [-]: MOVE      R5 R1        ; R5 := R1
 19 [-]: RETURN    R5 2         ; return R5
 20 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 2479
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 2483
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 2487
; #Upvalues:       7
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
  2 [-]: MOVE      R7 R0        ; R7 := R0
  3 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  4 [-]: TEST      R6 0         ; if not R6 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: LOADK     R6 K1        ; R6 := 0
  7 [-]: LOADK     R7 K1        ; R7 := 0
  8 [-]: RETURN    R6 3         ; return R6,R7
  9 [-]: LOADNIL   R6 R9        ; R6 := R7 := R8 := R9 := nil
 10 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 11 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 35
 12 [-]: JMP       35           ; PC := 35
 13 [-]: LOADK     R11 K1       ; R11 := 0
 14 [-]: GETGLOBAL R12 K3       ; R12 := Lotus_Game
 15 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["LEGENDARY"]
 16 [-]: LOADK     R13 K5       ; R13 := 1
 17 [-]: FORPREP   R11 33       ; R11 -= R13; PC := 33
 18 [-]: SELF      R15 R0 K6    ; R16 := R0; R15 := R0["0x41604216"]
 19 [-]: MOVE      R17 R14      ; R17 := R14
 20 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 21 [-]: SELF      R16 R0 K7    ; R17 := R0; R16 := R0["0xE5B2203D"]
 22 [-]: MOVE      R18 R14      ; R18 := R14
 23 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 24 [-]: LT        1 K1 R15     ; if 0 < R15 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: LT        1 K1 R16     ; if 0 < R16 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: EQ        0 R6 K2      ; if R6 ~= nil then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: MOVE      R6 R15       ; R6 := R15
 31 [-]: MOVE      R7 R16       ; R7 := R16
 32 [-]: MOVE      R8 R14       ; R8 := R14
 33 [-]: FORLOOP   R11 18       ; R11 += R13; if R11 <= R12 then begin PC := 18; R14 := R11 end
 34 [-]: JMP       43           ; PC := 43
 35 [-]: SELF      R17 R0 K6    ; R18 := R0; R17 := R0["0x41604216"]
 36 [-]: MOVE      R19 R1       ; R19 := R1
 37 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 38 [-]: MOVE      R6 R17       ; R6 := R17
 39 [-]: SELF      R17 R0 K7    ; R18 := R0; R17 := R0["0xE5B2203D"]
 40 [-]: MOVE      R19 R1       ; R19 := R1
 41 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 42 [-]: MOVE      R7 R17       ; R7 := R17
 43 [-]: SELF      R17 R0 K8    ; R18 := R0; R17 := R0["0x964C009B"]
 44 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 45 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
 46 [-]: MOVE      R19 R17      ; R19 := R17
 47 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 48 [-]: TEST      R18 1        ; if R18 then PC := 69
 49 [-]: JMP       69           ; PC := 69
 50 [-]: MOVE      R18 R0       ; R18 := R0
 51 [-]: GETGLOBAL R19 K9       ; R19 := gGameData
 52 [-]: SELF      R20 R17 K10  ; R21 := R17; R20 := R17["0x8B598ED4"]
 53 [-]: GETUPVAL  R22 U0       ; R22 := U0
 54 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 55 [-]: TEST      R20 0        ; if not R20 then PC := 61
 56 [-]: JMP       61           ; PC := 61
 57 [-]: SELF      R20 R19 K11  ; R21 := R19; R20 := R19["0xB451D706"]
 58 [-]: MOVE      R22 R17      ; R22 := R17
 59 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 60 [-]: MOVE      R18 R20      ; R18 := R20
 61 [-]: TEST      R18 0        ; if not R18 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: SELF      R20 R0 K12   ; R21 := R0; R20 := R0["0xBFBC3D2F"]
 64 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 65 [-]: MOVE      R6 R20       ; R6 := R20
 66 [-]: SELF      R20 R0 K13   ; R21 := R0; R20 := R0["0xA0579411"]
 67 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 68 [-]: MOVE      R7 R20       ; R7 := R20
 69 [-]: TEST      R4 0         ; if not R4 then PC := 102
 70 [-]: JMP       102          ; PC := 102
 71 [-]: SETTABLE  R10 K14 R0   ; R10["StoreItem"] := R0
 72 [-]: GETUPVAL  R20 U1       ; R20 := U1
 73 [-]: MOVE      R21 R10      ; R21 := R10
 74 [-]: CALL      R20 2 1      ; R20(R21)
 75 [-]: GETTABLE  R20 R10 K15  ; R20 := R10["Coupon"]
 76 [-]: EQ        1 R20 K2     ; if R20 == nil then PC := 102
 77 [-]: JMP       102          ; PC := 102
 78 [-]: GETTABLE  R20 R10 K15  ; R20 := R10["Coupon"]
 79 [-]: GETTABLE  R20 R20 K16  ; R20 := R20["mAmount"]
 80 [-]: EQ        1 R20 K2     ; if R20 == nil then PC := 102
 81 [-]: JMP       102          ; PC := 102
 82 [-]: GETTABLE  R20 R10 K15  ; R20 := R10["Coupon"]
 83 [-]: GETTABLE  R20 R20 K16  ; R20 := R20["mAmount"]
 84 [-]: EQ        1 R20 K1     ; if R20 == 0 then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: EQ        1 R6 K2      ; if R6 == nil then PC := 94
 87 [-]: JMP       94           ; PC := 94
 88 [-]: GETUPVAL  R20 U2       ; R20 := U2
 89 [-]: MOVE      R21 R6       ; R21 := R6
 90 [-]: GETTABLE  R22 R10 K15  ; R22 := R10["Coupon"]
 91 [-]: GETTABLE  R22 R22 K16  ; R22 := R22["mAmount"]
 92 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 93 [-]: MOVE      R6 R20       ; R6 := R20
 94 [-]: EQ        1 R7 K2      ; if R7 == nil then PC := 102
 95 [-]: JMP       102          ; PC := 102
 96 [-]: GETUPVAL  R20 U2       ; R20 := U2
 97 [-]: MOVE      R21 R7       ; R21 := R7
 98 [-]: GETTABLE  R22 R10 K15  ; R22 := R10["Coupon"]
 99 [-]: GETTABLE  R22 R22 K16  ; R22 := R22["mAmount"]
100 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
101 [-]: MOVE      R7 R20       ; R7 := R20
102 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 106
103 [-]: JMP       106          ; PC := 106
104 [-]: EQ        0 R2 K17     ; if R2 ~= "0x1" then PC := 183
105 [-]: JMP       183          ; PC := 183
106 [-]: GETTABLE  R20 R10 K15  ; R20 := R10["Coupon"]
107 [-]: EQ        1 R20 K2     ; if R20 == nil then PC := 113
108 [-]: JMP       113          ; PC := 113
109 [-]: GETTABLE  R20 R10 K15  ; R20 := R10["Coupon"]
110 [-]: GETTABLE  R20 R20 K16  ; R20 := R20["mAmount"]
111 [-]: EQ        0 R20 K1     ; if R20 ~= 0 then PC := 183
112 [-]: JMP       183          ; PC := 183
113 [-]: GETUPVAL  R20 U3       ; R20 := U3
114 [-]: MOVE      R21 R0       ; R21 := R0
115 [-]: CALL      R20 2 2      ; R20 := R20(R21)
116 [-]: MOVE      R9 R20       ; R9 := R20
117 [-]: EQ        1 R9 K2      ; if R9 == nil then PC := 183
118 [-]: JMP       183          ; PC := 183
119 [-]: SELF      R20 R0 K18   ; R21 := R0; R20 := R0["0xE62F9771"]
120 [-]: CALL      R20 2 2      ; R20 := R20(R21)
121 [-]: TEST      R20 0        ; if not R20 then PC := 181
122 [-]: JMP       181          ; PC := 181
123 [-]: GETTABLE  R20 R9 K19   ; R20 := R9["mTieredPremiumOverrides"]
124 [-]: LEN       R20 R20      ; R20 := # R20
125 [-]: LT        1 K1 R20     ; if 0 < R20 then PC := 131
126 [-]: JMP       131          ; PC := 131
127 [-]: GETTABLE  R20 R9 K20   ; R20 := R9["mTieredRegularOverrides"]
128 [-]: LEN       R20 R20      ; R20 := # R20
129 [-]: LT        0 K1 R20     ; if 0 >= R20 then PC := 181
130 [-]: JMP       181          ; PC := 181
131 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 166
132 [-]: JMP       166          ; PC := 166
133 [-]: LOADK     R20 K1       ; R20 := 0
134 [-]: LOADK     R21 K5       ; R21 := 1
135 [-]: GETTABLE  R22 R9 K20   ; R22 := R9["mTieredRegularOverrides"]
136 [-]: LEN       R22 R22      ; R22 := # R22
137 [-]: LOADK     R23 K5       ; R23 := 1
138 [-]: FORPREP   R21 145      ; R21 -= R23; PC := 145
139 [-]: GETTABLE  R25 R9 K20   ; R25 := R9["mTieredRegularOverrides"]
140 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
141 [-]: LT        0 R20 R25    ; if R20 >= R25 then PC := 145
142 [-]: JMP       145          ; PC := 145
143 [-]: GETTABLE  R25 R9 K20   ; R25 := R9["mTieredRegularOverrides"]
144 [-]: GETTABLE  R20 R25 R24  ; R20 := R25[R24]
145 [-]: FORLOOP   R21 139      ; R21 += R23; if R21 <= R22 then begin PC := 139; R24 := R21 end
146 [-]: LT        0 K1 R20     ; if 0 >= R20 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: MOVE      R6 R20       ; R6 := R20
149 [-]: LOADK     R25 K1       ; R25 := 0
150 [-]: LOADK     R26 K5       ; R26 := 1
151 [-]: GETTABLE  R27 R9 K19   ; R27 := R9["mTieredPremiumOverrides"]
152 [-]: LEN       R27 R27      ; R27 := # R27
153 [-]: LOADK     R28 K5       ; R28 := 1
154 [-]: FORPREP   R26 161      ; R26 -= R28; PC := 161
155 [-]: GETTABLE  R30 R9 K19   ; R30 := R9["mTieredPremiumOverrides"]
156 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
157 [-]: LT        0 R25 R30    ; if R25 >= R30 then PC := 161
158 [-]: JMP       161          ; PC := 161
159 [-]: GETTABLE  R30 R9 K19   ; R30 := R9["mTieredPremiumOverrides"]
160 [-]: GETTABLE  R25 R30 R29  ; R25 := R30[R29]
161 [-]: FORLOOP   R26 155      ; R26 += R28; if R26 <= R27 then begin PC := 155; R29 := R26 end
162 [-]: LT        0 K1 R25     ; if 0 >= R25 then PC := 183
163 [-]: JMP       183          ; PC := 183
164 [-]: MOVE      R7 R25       ; R7 := R25
165 [-]: JMP       183          ; PC := 183
166 [-]: GETTABLE  R30 R9 K20   ; R30 := R9["mTieredRegularOverrides"]
167 [-]: LEN       R30 R30      ; R30 := # R30
168 [-]: LT        0 K1 R30     ; if 0 >= R30 then PC := 173
169 [-]: JMP       173          ; PC := 173
170 [-]: GETTABLE  R30 R9 K20   ; R30 := R9["mTieredRegularOverrides"]
171 [-]: ADD       R31 R1 K5    ; R31 := R1 + 1
172 [-]: GETTABLE  R6 R30 R31   ; R6 := R30[R31]
173 [-]: GETTABLE  R30 R9 K19   ; R30 := R9["mTieredPremiumOverrides"]
174 [-]: LEN       R30 R30      ; R30 := # R30
175 [-]: LT        0 K1 R30     ; if 0 >= R30 then PC := 183
176 [-]: JMP       183          ; PC := 183
177 [-]: GETTABLE  R30 R9 K19   ; R30 := R9["mTieredPremiumOverrides"]
178 [-]: ADD       R31 R1 K5    ; R31 := R1 + 1
179 [-]: GETTABLE  R7 R30 R31   ; R7 := R30[R31]
180 [-]: JMP       183          ; PC := 183
181 [-]: GETTABLE  R6 R9 K21    ; R6 := R9["mRegularOverride"]
182 [-]: GETTABLE  R7 R9 K22    ; R7 := R9["mPremiumOverride"]
183 [-]: EQ        0 R9 K2      ; if R9 ~= nil then PC := 214
184 [-]: JMP       214          ; PC := 214
185 [-]: SELF      R30 R0 K23   ; R31 := R0; R30 := R0["0x7D5774ED"]
186 [-]: CALL      R30 2 2      ; R30 := R30(R31)
187 [-]: TEST      R30 1        ; if R30 then PC := 214
188 [-]: JMP       214          ; PC := 214
189 [-]: TEST      R5 1         ; if R5 then PC := 214
190 [-]: JMP       214          ; PC := 214
191 [-]: LOADNIL   R30 R30      ; R30 := nil
192 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
193 [-]: GETGLOBAL R32 K24      ; R32 := gGameRules
194 [-]: CALL      R31 2 2      ; R31 := R31(R32)
195 [-]: TEST      R31 1        ; if R31 then PC := 201
196 [-]: JMP       201          ; PC := 201
197 [-]: GETGLOBAL R31 K24      ; R31 := gGameRules
198 [-]: SELF      R31 R31 K25  ; R32 := R31; R31 := R31["0xC17093D6"]
199 [-]: CALL      R31 2 2      ; R31 := R31(R32)
200 [-]: MOVE      R30 R31      ; R30 := R31
201 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
202 [-]: MOVE      R32 R30      ; R32 := R30
203 [-]: CALL      R31 2 2      ; R31 := R31(R32)
204 [-]: TEST      R31 1        ; if R31 then PC := 211
205 [-]: JMP       211          ; PC := 211
206 [-]: SELF      R31 R30 K26  ; R32 := R30; R31 := R30["0xE815038B"]
207 [-]: MOVE      R33 R0       ; R33 := R0
208 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
209 [-]: EQ        0 R31 K2     ; if R31 ~= nil then PC := 214
210 [-]: JMP       214          ; PC := 214
211 [-]: LOADK     R31 K1       ; R31 := 0
212 [-]: LOADK     R32 K1       ; R32 := 0
213 [-]: RETURN    R31 3        ; return R31,R32
214 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 280
215 [-]: JMP       280          ; PC := 280
216 [-]: SELF      R31 R0 K27   ; R32 := R0; R31 := R0["0xC5349ED"]
217 [-]: CALL      R31 2 2      ; R31 := R31(R32)
218 [-]: TEST      R31 0        ; if not R31 then PC := 280
219 [-]: JMP       280          ; PC := 280
220 [-]: SELF      R31 R0 K28   ; R32 := R0; R31 := R0["0xE2FCFD11"]
221 [-]: CALL      R31 2 2      ; R31 := R31(R32)
222 [-]: SELF      R32 R0 K29   ; R33 := R0; R32 := R0["0x22DE1AAB"]
223 [-]: CALL      R32 2 2      ; R32 := R32(R33)
224 [-]: LOADK     R33 K1       ; R33 := 0
225 [-]: LOADK     R34 K1       ; R34 := 0
226 [-]: SELF      R35 R0 K30   ; R36 := R0; R35 := R0["0xEC2A2A3C"]
227 [-]: CALL      R35 2 2      ; R35 := R35(R36)
228 [-]: LOADK     R36 K5       ; R36 := 1
229 [-]: LEN       R37 R35      ; R37 := # R35
230 [-]: LOADK     R38 K5       ; R38 := 1
231 [-]: FORPREP   R36 263      ; R36 -= R38; PC := 263
232 [-]: GETGLOBAL R40 K31      ; R40 := 0x1BF588C6
233 [-]: CALL      R40 1 1      ; R40()
234 [-]: GETTABLE  R40 R35 R39  ; R40 := R35[R39]
235 [-]: GETTABLE  R40 R40 K32  ; R40 := R40["mTypeName"]
236 [-]: GETGLOBAL R41 K0       ; R41 := 0x400E7765
237 [-]: MOVE      R42 R40      ; R42 := R40
238 [-]: CALL      R41 2 2      ; R41 := R41(R42)
239 [-]: TEST      R41 1        ; if R41 then PC := 263
240 [-]: JMP       263          ; PC := 263
241 [-]: GETUPVAL  R41 U4       ; R41 := U4
242 [-]: TEST      R41 0        ; if not R41 then PC := 263
243 [-]: JMP       263          ; PC := 263
244 [-]: GETUPVAL  R41 U5       ; R41 := U5
245 [-]: MOVE      R42 R40      ; R42 := R40
246 [-]: MOVE      R43 R3       ; R43 := R3
247 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
248 [-]: TEST      R41 1        ; if R41 then PC := 263
249 [-]: JMP       263          ; PC := 263
250 [-]: GETUPVAL  R41 U6       ; R41 := U6
251 [-]: MOVE      R42 R40      ; R42 := R40
252 [-]: GETTABLE  R43 R35 R39  ; R43 := R35[R39]
253 [-]: GETTABLE  R43 R43 K33  ; R43 := R43["mDurability"]
254 [-]: MOVE      R44 R2       ; R44 := R2
255 [-]: MOVE      R45 R3       ; R45 := R3
256 [-]: CALL      R41 5 3      ; R41,R42 := R41(R42,R43,R44,R45)
257 [-]: DIV       R43 R41 R31  ; R43 := R41 / R31
258 [-]: MUL       R43 R43 R6   ; R43 := R43 * R6
259 [-]: ADD       R33 R33 R43  ; R33 := R33 + R43
260 [-]: DIV       R43 R42 R32  ; R43 := R42 / R32
261 [-]: MUL       R43 R43 R7   ; R43 := R43 * R7
262 [-]: ADD       R34 R34 R43  ; R34 := R34 + R43
263 [-]: FORLOOP   R36 232      ; R36 += R38; if R36 <= R37 then begin PC := 232; R39 := R36 end
264 [-]: SUB       R6 R6 R33    ; R6 := R6 - R33
265 [-]: SUB       R7 R7 R34    ; R7 := R7 - R34
266 [-]: LT        1 R6 K1      ; if R6 < 0 then PC := 272
267 [-]: JMP       272          ; PC := 272
268 [-]: SELF      R43 R0 K34   ; R44 := R0; R43 := R0["0x6139ADFF"]
269 [-]: CALL      R43 2 2      ; R43 := R43(R44)
270 [-]: LT        0 K1 R43     ; if 0 >= R43 then PC := 273
271 [-]: JMP       273          ; PC := 273
272 [-]: LOADK     R6 K1        ; R6 := 0
273 [-]: LT        1 R7 K1      ; if R7 < 0 then PC := 279
274 [-]: JMP       279          ; PC := 279
275 [-]: SELF      R43 R0 K34   ; R44 := R0; R43 := R0["0x6139ADFF"]
276 [-]: CALL      R43 2 2      ; R43 := R43(R44)
277 [-]: LT        0 K1 R43     ; if 0 >= R43 then PC := 280
278 [-]: JMP       280          ; PC := 280
279 [-]: LOADK     R7 K1        ; R7 := 0
280 [-]: MOVE      R43 R6       ; R43 := R6
281 [-]: MOVE      R44 R7       ; R44 := R7
282 [-]: MOVE      R45 R8       ; R45 := R8
283 [-]: MOVE      R46 R9       ; R46 := R9
284 [-]: RETURN    R43 5        ; return R43,R44,R45,R46
285 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 2627
; #Upvalues:       1
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: MOVE      R7 R0        ; R7 := R0
  3 [-]: MOVE      R8 R1        ; R8 := R1
  4 [-]: MOVE      R9 R2        ; R9 := R2
  5 [-]: MOVE      R10 R3       ; R10 := R3
  6 [-]: MOVE      R11 R4       ; R11 := R4
  7 [-]: MOVE      R12 R5       ; R12 := R5
  8 [-]: TAILCALL  R6 7 0       ; R6,... := R6(R7,R8,R9,R10,R11,R12)
  9 [-]: RETURN    R6 0         ; return R6,...
 10 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 2642
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: ADD       R2 R0 K0     ; R2 := R0 + 1
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 2646
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LT        0 R0 K0      ; if R0 >= 3 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: LOADK     R1 K1        ; R1 := 0
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K2        ; R1 := 2
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 2654
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: TEST      R0 0         ; if not R0 then PC := 17
  2 [-]: JMP       17           ; PC := 17
  3 [-]: LOADNIL   R1 R1        ; R1 := nil
  4 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x9375ADC7"]
  6 [-]: GETGLOBAL R3 K2        ; R3 := gPlayerProfileMgr
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x21EF7B1A"]
  8 [-]: LOADK     R5 K4        ; R5 := 0
  9 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: TEST      R2 0         ; if not R2 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K4        ; R1 := 0
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADK     R1 K5        ; R1 := 2
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: GETGLOBAL R2 K6        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["gPendingMission"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 52
 20 [-]: JMP       52           ; PC := 52
 21 [-]: GETGLOBAL R2 K8        ; R2 := gMatchingService
 22 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0xE1C847EF"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 52
 25 [-]: JMP       52           ; PC := 52
 26 [-]: GETGLOBAL R2 K10       ; R2 := 0x9FAED6BC
 27 [-]: GETGLOBAL R3 K6        ; R3 := _T
 28 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["gPendingMission"]
 29 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["name"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETGLOBAL R3 K12       ; R3 := string
 32 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["0xDE44F664"]
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETGLOBAL R5 K14       ; R5 := TAG_SEPERATOR
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: TEST      R3 0         ; if not R3 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETGLOBAL R4 K12       ; R4 := string
 39 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["0x7B782033"]
 40 [-]: MOVE      R5 R2        ; R5 := R2
 41 [-]: LOADK     R6 K16       ; R6 := 1
 42 [-]: SUB       R7 R3 K16    ; R7 := R3 - 1
 43 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 44 [-]: MOVE      R2 R4        ; R2 := R4
 45 [-]: GETGLOBAL R4 K10       ; R4 := 0x9FAED6BC
 46 [-]: GETGLOBAL R5 K17       ; R5 := PLAINS_NODE_TAG
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: GETGLOBAL R4 K18       ; R4 := PLAINS_ELO_IN_LISET
 51 [-]: RETURN    R4 2         ; return R4
 52 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 53 [-]: GETGLOBAL R5 K19       ; R5 := Engine
 54 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["SLOT_1"]
 55 [-]: GETGLOBAL R6 K19       ; R6 := Engine
 56 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["SLOT_2"]
 57 [-]: GETGLOBAL R7 K19       ; R7 := Engine
 58 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["SLOT_4"]
 59 [-]: GETGLOBAL R8 K19       ; R8 := Engine
 60 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["SLOT_6"]
 61 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 62 [-]: LOADK     R5 K4        ; R5 := 0
 63 [-]: LOADK     R6 K4        ; R6 := 0
 64 [-]: GETUPVAL  R7 U0        ; R7 := U0
 65 [-]: CALL      R7 1 2       ; R7 := R7()
 66 [-]: GETGLOBAL R8 K24       ; R8 := 0x400E7765
 67 [-]: MOVE      R9 R7        ; R9 := R7
 68 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 69 [-]: TEST      R8 1         ; if R8 then PC := 95
 70 [-]: JMP       95           ; PC := 95
 71 [-]: SELF      R8 R7 K25    ; R9 := R7; R8 := R7["0x8DB5D01F"]
 72 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 73 [-]: GETGLOBAL R9 K24       ; R9 := 0x400E7765
 74 [-]: MOVE      R10 R8       ; R10 := R8
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: TEST      R9 1         ; if R9 then PC := 95
 77 [-]: JMP       95           ; PC := 95
 78 [-]: LOADK     R9 K16       ; R9 := 1
 79 [-]: LEN       R10 R4       ; R10 := # R4
 80 [-]: LOADK     R11 K16      ; R11 := 1
 81 [-]: FORPREP   R9 94        ; R9 -= R11; PC := 94
 82 [-]: SELF      R13 R8 K26   ; R14 := R8; R13 := R8["0x63D63C30"]
 83 [-]: GETTABLE  R15 R4 R12   ; R15 := R4[R12]
 84 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 85 [-]: GETGLOBAL R14 K24      ; R14 := 0x400E7765
 86 [-]: MOVE      R15 R13      ; R15 := R13
 87 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 88 [-]: TEST      R14 1        ; if R14 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: ADD       R5 R5 K16    ; R5 := R5 + 1
 91 [-]: SELF      R14 R13 K27  ; R15 := R13; R14 := R13["0x4A8D7E2A"]
 92 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 93 [-]: ADD       R6 R6 R14    ; R6 := R6 + R14
 94 [-]: FORLOOP   R9 82        ; R9 += R11; if R9 <= R10 then begin PC := 82; R12 := R9 end
 95 [-]: LT        0 R5 K16     ; if R5 >= 1 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: LOADK     R5 K16       ; R5 := 1
 98 [-]: DIV       R14 R6 R5    ; R14 := R6 / R5
 99 [-]: RETURN    R14 2        ; return R14
100 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 2708
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 2712
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R4 R1        ; R4 := R1
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 151
  6 [-]: JMP       151          ; PC := 151
  7 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R7 K2        ; R7 := gDecorationType
  9 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 10 [-]: TEST      R5 0         ; if not R5 then PC := 30
 11 [-]: JMP       30           ; PC := 30
 12 [-]: SELF      R5 R0 K3     ; R6 := R0; R5 := R0["0xB0761E05"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x315E860F"]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: TEST      R5 0         ; if not R5 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x76B0242D"]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0xCE832AFF"]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: MOVE      R1 R0        ; R1 := R0
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: JMP       151          ; PC := 151
 30 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 31 [-]: GETGLOBAL R7 K7        ; R7 := gDynamicCoverType
 32 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 33 [-]: TEST      R5 1         ; if R5 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 36 [-]: GETGLOBAL R7 K8        ; R7 := gEmplacementType
 37 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 38 [-]: TEST      R5 1         ; if R5 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 41 [-]: GETGLOBAL R7 K9        ; R7 := gDevourerType
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R1 R0        ; R1 := R0
 46 [-]: JMP       151          ; PC := 151
 47 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 48 [-]: GETUPVAL  R7 U1        ; R7 := U1
 49 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 50 [-]: TEST      R5 0         ; if not R5 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: LOADNIL   R5 R5        ; R5 := nil
 53 [-]: RETURN    R5 2         ; return R5
 54 [-]: JMP       151          ; PC := 151
 55 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 56 [-]: GETGLOBAL R7 K10       ; R7 := gBaseAvatarType
 57 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 58 [-]: TEST      R5 0         ; if not R5 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: JMP       151          ; PC := 151
 62 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 63 [-]: GETGLOBAL R7 K11       ; R7 := gHitProxyType
 64 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 65 [-]: TEST      R5 0         ; if not R5 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0["0xB1627322"]
 68 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 69 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0["0x7C5C9389"]
 70 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 71 [-]: TEST      R5 0         ; if not R5 then PC := 80
 72 [-]: JMP       80           ; PC := 80
 73 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 74 [-]: GETGLOBAL R9 K10       ; R9 := gBaseAvatarType
 75 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 76 [-]: TEST      R7 0         ; if not R7 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: MOVE      R2 R6        ; R2 := R6
 79 [-]: JMP       151          ; PC := 151
 80 [-]: TEST      R5 0         ; if not R5 then PC := 107
 81 [-]: JMP       107          ; PC := 107
 82 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 83 [-]: GETGLOBAL R9 K2        ; R9 := gDecorationType
 84 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 85 [-]: TEST      R7 0         ; if not R7 then PC := 93
 86 [-]: JMP       93           ; PC := 93
 87 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6["0xB0761E05"]
 88 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 89 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7["0x315E860F"]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: TEST      R7 1         ; if R7 then PC := 103
 92 [-]: JMP       103          ; PC := 103
 93 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 94 [-]: GETGLOBAL R9 K7        ; R9 := gDynamicCoverType
 95 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 96 [-]: TEST      R7 1         ; if R7 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 99 [-]: GETGLOBAL R9 K8        ; R9 := gEmplacementType
100 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
101 [-]: TEST      R7 0         ; if not R7 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: MOVE      R1 R6        ; R1 := R6
104 [-]: MOVE      R3 R0        ; R3 := R0
105 [-]: MOVE      R4 R0        ; R4 := R0
106 [-]: JMP       151          ; PC := 151
107 [-]: TEST      R5 0         ; if not R5 then PC := 117
108 [-]: JMP       117          ; PC := 117
109 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
110 [-]: GETGLOBAL R9 K9        ; R9 := gDevourerType
111 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
112 [-]: TEST      R7 0         ; if not R7 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: MOVE      R1 R6        ; R1 := R6
115 [-]: MOVE      R3 R0        ; R3 := R0
116 [-]: JMP       151          ; PC := 151
117 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0["0x8B598ED4"]
118 [-]: GETGLOBAL R9 K14       ; R9 := gPickUpType
119 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
120 [-]: TEST      R7 0         ; if not R7 then PC := 140
121 [-]: JMP       140          ; PC := 140
122 [-]: SELF      R7 R0 K15    ; R8 := R0; R7 := R0["0xD332219D"]
123 [-]: CALL      R7 2 2       ; R7 := R7(R8)
124 [-]: TEST      R7 0         ; if not R7 then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: SELF      R7 R0 K16    ; R8 := R0; R7 := R0["0x4E4D0C1B"]
127 [-]: CALL      R7 2 2       ; R7 := R7(R8)
128 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
129 [-]: MOVE      R9 R7        ; R9 := R7
130 [-]: CALL      R8 2 2       ; R8 := R8(R9)
131 [-]: TEST      R8 1         ; if R8 then PC := 151
132 [-]: JMP       151          ; PC := 151
133 [-]: SELF      R8 R7 K1     ; R9 := R7; R8 := R7["0x8B598ED4"]
134 [-]: GETGLOBAL R10 K17      ; R10 := gFusionTreasureType
135 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
136 [-]: TEST      R8 0         ; if not R8 then PC := 151
137 [-]: JMP       151          ; PC := 151
138 [-]: MOVE      R1 R0        ; R1 := R0
139 [-]: JMP       151          ; PC := 151
140 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0["0x907C463B"]
141 [-]: CALL      R8 2 2       ; R8 := R8(R9)
142 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
143 [-]: MOVE      R10 R8       ; R10 := R8
144 [-]: CALL      R9 2 2       ; R9 := R9(R10)
145 [-]: TEST      R9 1         ; if R9 then PC := 151
146 [-]: JMP       151          ; PC := 151
147 [-]: GETUPVAL  R9 U2        ; R9 := U2
148 [-]: MOVE      R10 R8       ; R10 := R8
149 [-]: TAILCALL  R9 2 0       ; R9,... := R9(R10)
150 [-]: RETURN    R9 0         ; return R9,...
151 [-]: MOVE      R9 R1        ; R9 := R1
152 [-]: MOVE      R10 R2       ; R10 := R2
153 [-]: MOVE      R11 R3       ; R11 := R3
154 [-]: MOVE      R12 R4       ; R12 := R4
155 [-]: RETURN    R9 5         ; return R9,R10,R11,R12
156 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 2755
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 2759
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 71
  2 [-]: JMP       71           ; PC := 71
  3 [-]: LOADK     R3 K1        ; R3 := 1
  4 [-]: LEN       R4 R1        ; R4 := # R1
  5 [-]: LOADK     R5 K1        ; R5 := 1
  6 [-]: FORPREP   R3 70        ; R3 -= R5; PC := 70
  7 [-]: GETGLOBAL R7 K2        ; R7 := 0x1BF588C6
  8 [-]: LOADK     R8 K3        ; R8 := 0
  9 [-]: CALL      R7 2 1       ; R7(R8)
 10 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 11 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mItemType"]
 12 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x1B252E3C"]
 13 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 14 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
 15 [-]: MOVE      R10 R2       ; R10 := R2
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: TEST      R9 1         ; if R9 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: MOVE      R9 R2        ; R9 := R2
 20 [-]: MOVE      R10 R7       ; R10 := R7
 21 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 22 [-]: TEST      R9 0         ; if not R9 then PC := 70
 23 [-]: JMP       70           ; PC := 70
 24 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
 25 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 59
 26 [-]: JMP       59           ; PC := 59
 27 [-]: GETTABLE  R10 R9 K7    ; R10 := R9["Count"]
 28 [-]: EQ        1 R10 K0     ; if R10 == nil then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R10 R9 K7    ; R10 := R9["Count"]
 31 [-]: EQ        0 R10 K3     ; if R10 ~= 0 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETUPVAL  R10 U0       ; R10 := U0
 34 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["0xF81722A2"]
 35 [-]: GETTABLE  R11 R7 K9    ; R11 := R7["mItemCount"]
 36 [-]: EQ        1 R11 K0     ; if R11 == nil then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R11 R0       ; R11 := R0
 39 [-]: MOVE      R11 R1       ; R11 := R1
 40 [-]: LOADK     R12 K1       ; R12 := 1
 41 [-]: GETTABLE  R13 R7 K9    ; R13 := R7["mItemCount"]
 42 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 43 [-]: SETTABLE  R9 K7 R10    ; R9["Count"] := R10
 44 [-]: JMP       70           ; PC := 70
 45 [-]: GETTABLE  R10 R9 K7    ; R10 := R9["Count"]
 46 [-]: GETUPVAL  R11 U0       ; R11 := U0
 47 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["0xF81722A2"]
 48 [-]: GETTABLE  R12 R7 K9    ; R12 := R7["mItemCount"]
 49 [-]: EQ        1 R12 K0     ; if R12 == nil then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: MOVE      R12 R0       ; R12 := R0
 52 [-]: MOVE      R12 R1       ; R12 := R1
 53 [-]: LOADK     R13 K1       ; R13 := 1
 54 [-]: GETTABLE  R14 R7 K9    ; R14 := R7["mItemCount"]
 55 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 56 [-]: ADD       R10 R10 R11  ; R10 := R10 + R11
 57 [-]: SETTABLE  R9 K7 R10    ; R9["Count"] := R10
 58 [-]: JMP       70           ; PC := 70
 59 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 60 [-]: GETTABLE  R11 R7 K4    ; R11 := R7["mItemType"]
 61 [-]: SETTABLE  R10 K10 R11  ; R10["Type"] := R11
 62 [-]: GETTABLE  R11 R7 K9    ; R11 := R7["mItemCount"]
 63 [-]: SETTABLE  R10 K7 R11   ; R10["Count"] := R11
 64 [-]: SETTABLE  R10 K11 R7   ; R10["Item"] := R7
 65 [-]: GETTABLE  R11 R10 K7   ; R11 := R10["Count"]
 66 [-]: EQ        0 R11 K0     ; if R11 ~= nil then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: SETTABLE  R10 K7 K1    ; R10["Count"] := 1
 69 [-]: SETTABLE  R0 R8 R10    ; R0[R8] := R10
 70 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 71 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 2789
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 136
  7 [-]: JMP       136          ; PC := 136
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0x6F2E05FD"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 136
 14 [-]: JMP       136          ; PC := 136
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: SELF      R5 R2 K3     ; R6 := R2; R5 := R2["0x1D216770"]
 18 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 19 [-]: CALL      R3 0 1       ; R3(R4,...)
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: SELF      R5 R2 K4     ; R6 := R2; R5 := R2["0xB5D66AE"]
 23 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 24 [-]: CALL      R3 0 1       ; R3(R4,...)
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: SELF      R5 R2 K5     ; R6 := R2; R5 := R2["0xD3A6CE65"]
 28 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 29 [-]: CALL      R3 0 1       ; R3(R4,...)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: SELF      R5 R2 K6     ; R6 := R2; R5 := R2["0xA82A3D30"]
 33 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 34 [-]: CALL      R3 0 1       ; R3(R4,...)
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2["0x4ADC73C2"]
 38 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 39 [-]: CALL      R3 0 1       ; R3(R4,...)
 40 [-]: GETUPVAL  R3 U0        ; R3 := U0
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2["0x213E1D36"]
 43 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 44 [-]: CALL      R3 0 1       ; R3(R4,...)
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: SELF      R5 R2 K9     ; R6 := R2; R5 := R2["0xA5FC09FD"]
 48 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 49 [-]: CALL      R3 0 1       ; R3(R4,...)
 50 [-]: GETUPVAL  R3 U0        ; R3 := U0
 51 [-]: MOVE      R4 R0        ; R4 := R0
 52 [-]: SELF      R5 R2 K10    ; R6 := R2; R5 := R2["0xC119AB7B"]
 53 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 54 [-]: CALL      R3 0 1       ; R3(R4,...)
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: MOVE      R4 R0        ; R4 := R0
 57 [-]: SELF      R5 R2 K11    ; R6 := R2; R5 := R2["0xEA75EFF7"]
 58 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 59 [-]: CALL      R3 0 1       ; R3(R4,...)
 60 [-]: GETGLOBAL R3 K12       ; R3 := 0x2C00D429
 61 [-]: LOADK     R4 K13       ; R4 := "/Lotus/Upgrades/Mods/Immortal/ImmortalBaseMod"
 62 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 63 [-]: GETUPVAL  R4 U0        ; R4 := U0
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: SELF      R6 R2 K14    ; R7 := R2; R6 := R2["0x85D4CA1C"]
 66 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 67 [-]: CLOSURE   R7 0         ; R7 := closure(Function #162.1)
 68 [-]: MOVE      R0 R3        ; R0 := R3
 69 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 70 [-]: GETUPVAL  R4 U0        ; R4 := U0
 71 [-]: MOVE      R5 R0        ; R5 := R0
 72 [-]: SELF      R6 R2 K15    ; R7 := R2; R6 := R2["0x640AA7E"]
 73 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 74 [-]: CALL      R4 0 1       ; R4(R5,...)
 75 [-]: GETUPVAL  R4 U0        ; R4 := U0
 76 [-]: MOVE      R5 R0        ; R5 := R0
 77 [-]: SELF      R6 R2 K16    ; R7 := R2; R6 := R2["0x63A03B31"]
 78 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 79 [-]: CALL      R4 0 1       ; R4(R5,...)
 80 [-]: GETUPVAL  R4 U0        ; R4 := U0
 81 [-]: MOVE      R5 R0        ; R5 := R0
 82 [-]: SELF      R6 R2 K17    ; R7 := R2; R6 := R2["0x6E1FFCCD"]
 83 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 84 [-]: CALL      R4 0 1       ; R4(R5,...)
 85 [-]: GETUPVAL  R4 U0        ; R4 := U0
 86 [-]: MOVE      R5 R0        ; R5 := R0
 87 [-]: SELF      R6 R2 K18    ; R7 := R2; R6 := R2["0x3329FBFF"]
 88 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 89 [-]: CALL      R4 0 1       ; R4(R5,...)
 90 [-]: GETUPVAL  R4 U0        ; R4 := U0
 91 [-]: MOVE      R5 R0        ; R5 := R0
 92 [-]: SELF      R6 R2 K19    ; R7 := R2; R6 := R2["0x4FA1109B"]
 93 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 94 [-]: CALL      R4 0 1       ; R4(R5,...)
 95 [-]: GETUPVAL  R4 U0        ; R4 := U0
 96 [-]: MOVE      R5 R0        ; R5 := R0
 97 [-]: SELF      R6 R2 K20    ; R7 := R2; R6 := R2["0xAB4E6F2A"]
 98 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 99 [-]: CALL      R4 0 1       ; R4(R5,...)
100 [-]: GETUPVAL  R4 U0        ; R4 := U0
101 [-]: MOVE      R5 R0        ; R5 := R0
102 [-]: SELF      R6 R2 K21    ; R7 := R2; R6 := R2["0x70666039"]
103 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
104 [-]: CALL      R4 0 1       ; R4(R5,...)
105 [-]: GETUPVAL  R4 U0        ; R4 := U0
106 [-]: MOVE      R5 R0        ; R5 := R0
107 [-]: SELF      R6 R2 K22    ; R7 := R2; R6 := R2["0xC7873095"]
108 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
109 [-]: CALL      R4 0 1       ; R4(R5,...)
110 [-]: GETUPVAL  R4 U0        ; R4 := U0
111 [-]: MOVE      R5 R0        ; R5 := R0
112 [-]: SELF      R6 R2 K23    ; R7 := R2; R6 := R2["0x44384E3E"]
113 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
114 [-]: CALL      R4 0 1       ; R4(R5,...)
115 [-]: GETUPVAL  R4 U0        ; R4 := U0
116 [-]: MOVE      R5 R0        ; R5 := R0
117 [-]: SELF      R6 R2 K24    ; R7 := R2; R6 := R2["0xC814E302"]
118 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
119 [-]: CALL      R4 0 1       ; R4(R5,...)
120 [-]: GETUPVAL  R4 U0        ; R4 := U0
121 [-]: MOVE      R5 R0        ; R5 := R0
122 [-]: SELF      R6 R2 K25    ; R7 := R2; R6 := R2["0xC6486483"]
123 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
124 [-]: CALL      R4 0 1       ; R4(R5,...)
125 [-]: GETUPVAL  R4 U0        ; R4 := U0
126 [-]: MOVE      R5 R0        ; R5 := R0
127 [-]: SELF      R6 R2 K26    ; R7 := R2; R6 := R2["0x60AB1682"]
128 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
129 [-]: CALL      R4 0 1       ; R4(R5,...)
130 [-]: GETUPVAL  R4 U0        ; R4 := U0
131 [-]: MOVE      R5 R0        ; R5 := R0
132 [-]: SELF      R6 R2 K27    ; R7 := R2; R6 := R2["0x613232C3"]
133 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
134 [-]: CALL      R4 0 1       ; R4(R5,...)
135 [-]: CLOSE     R3           ; SAVE R3,...
136 [-]: RETURN    R0 2         ; return R0
137 [-]: RETURN    R0 1         ; return 


; Function #162.1:
;
; Name:            
; Defined at line: 2806
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mItemType"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8B598ED4"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 21
  6 [-]: JMP       21           ; PC := 21
  7 [-]: GETGLOBAL R1 K2        ; R1 := cjson
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x8A2E8315"]
  9 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mUpgradeFingerprint"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["lvl"]
 17 [-]: EQ        0 R2 K7      ; if R2 ~= 3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: MOVE      R2 R1        ; R2 := R1
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 2834
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0["0x5DB0BD4"]
  2 [-]: GETGLOBAL R6 K1        ; R6 := 0x9FAED6BC
  3 [-]: SELF      R7 R1 K2     ; R8 := R1; R7 := R1["0x616C74B6"]
  4 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
  5 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
  6 [-]: MOVE      R7 R0        ; R7 := R0
  7 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  8 [-]: SELF      R5 R1 K3     ; R6 := R1; R5 := R1["0x3077BE70"]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 11 [-]: MOVE      R7 R5        ; R7 := R5
 12 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 13 [-]: TEST      R6 1         ; if R6 then PC := 27
 14 [-]: JMP       27           ; PC := 27
 15 [-]: SELF      R6 R5 K5     ; R7 := R5; R6 := R5["0x8B598ED4"]
 16 [-]: GETGLOBAL R8 K6        ; R8 := gRecipeItemType
 17 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 18 [-]: TEST      R6 0         ; if not R6 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: SELF      R6 R0 K0     ; R7 := R0; R6 := R0["0x5DB0BD4"]
 21 [-]: LOADK     R8 K7        ; R8 := "/Lotus/Language/Items/BlueprintAndItem"
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 24 [-]: SETTABLE  R10 K8 R4    ; R10["ITEM"] := R4
 25 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 26 [-]: MOVE      R4 R6        ; R4 := R6
 27 [-]: SELF      R6 R1 K9     ; R7 := R1; R6 := R1["0x8292A1EF"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: GETGLOBAL R7 K10       ; R7 := Engine
 30 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["Item_FusionBundles"]
 31 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: SELF      R6 R1 K12    ; R7 := R1; R6 := R1["0x41604216"]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: UNM       R6 R6        ; R6 := - R6
 36 [-]: LOADK     R7 K13       ; R7 := "<FUSION_POINTS>"
 37 [-]: TEST      R3 1         ; if R3 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: SELF      R8 R0 K0     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 40 [-]: LOADK     R10 K13      ; R10 := "<FUSION_POINTS>"
 41 [-]: MOVE      R11 R1       ; R11 := R1
 42 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 43 [-]: MOVE      R7 R8        ; R7 := R8
 44 [-]: MOVE      R8 R7        ; R8 := R7
 45 [-]: GETUPVAL  R9 U0        ; R9 := U0
 46 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["0x7E197415"]
 47 [-]: SELF      R10 R1 K15   ; R11 := R1; R10 := R1["0xE10719C5"]
 48 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 49 [-]: MUL       R10 R6 R10   ; R10 := R6 * R10
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: CONCAT    R4 R8 R9     ; R4 := R8 .. R9
 52 [-]: JMP       60           ; PC := 60
 53 [-]: LT        0 K16 R2     ; if 1 >= R2 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: MOVE      R8 R4        ; R8 := R4
 56 [-]: LOADK     R9 K17       ; R9 := " ("
 57 [-]: MOVE      R10 R2       ; R10 := R2
 58 [-]: LOADK     R11 K18      ; R11 := ")"
 59 [-]: CONCAT    R4 R8 R11    ; R4 := R8 .. R9 .. R10 .. R11
 60 [-]: GETGLOBAL R8 K4        ; R8 := 0x400E7765
 61 [-]: MOVE      R9 R5        ; R9 := R5
 62 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 63 [-]: TEST      R8 1         ; if R8 then PC := 109
 64 [-]: JMP       109          ; PC := 109
 65 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 68 [-]: TEST      R8 0         ; if not R8 then PC := 81
 69 [-]: JMP       81           ; PC := 81
 70 [-]: LOADK     R8 K19       ; R8 := "U"
 71 [-]: GETGLOBAL R9 K20       ; R9 := 0x7C282057
 72 [-]: MOVE      R10 R5       ; R10 := R5
 73 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 74 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0x6F399EDE"]
 75 [-]: LOADK     R11 K22      ; R11 := ""
 76 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 77 [-]: LOADK     R10 K23      ; R10 := " "
 78 [-]: MOVE      R11 R4       ; R11 := R4
 79 [-]: CONCAT    R4 R8 R11    ; R4 := R8 .. R9 .. R10 .. R11
 80 [-]: JMP       109          ; PC := 109
 81 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 82 [-]: GETUPVAL  R10 U2       ; R10 := U2
 83 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 84 [-]: TEST      R8 0         ; if not R8 then PC := 97
 85 [-]: JMP       97           ; PC := 97
 86 [-]: LOADK     R8 K24       ; R8 := "R"
 87 [-]: GETGLOBAL R9 K20       ; R9 := 0x7C282057
 88 [-]: MOVE      R10 R5       ; R10 := R5
 89 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 90 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0x6F399EDE"]
 91 [-]: LOADK     R11 K22      ; R11 := ""
 92 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 93 [-]: LOADK     R10 K23      ; R10 := " "
 94 [-]: MOVE      R11 R4       ; R11 := R4
 95 [-]: CONCAT    R4 R8 R11    ; R4 := R8 .. R9 .. R10 .. R11
 96 [-]: JMP       109          ; PC := 109
 97 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 98 [-]: GETGLOBAL R10 K25      ; R10 := gKeyChainItemType
 99 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
100 [-]: TEST      R8 0         ; if not R8 then PC := 109
101 [-]: JMP       109          ; PC := 109
102 [-]: SELF      R8 R0 K0     ; R9 := R0; R8 := R0["0x5DB0BD4"]
103 [-]: LOADK     R10 K26      ; R10 := "/Lotus/Language/Menu/MissionReward_Quest"
104 [-]: MOVE      R11 R0       ; R11 := R0
105 [-]: NEWTABLE  R12 0 1      ; R12 := {}
106 [-]: SETTABLE  R12 K27 R4   ; R12["QUEST"] := R4
107 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
108 [-]: MOVE      R4 R8        ; R4 := R8
109 [-]: RETURN    R4 2         ; return R4
110 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 2866
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  2 [-]: CLOSURE   R6 0         ; R6 := closure(Function #164.1)
  3 [-]: MOVE      R0 R2        ; R0 := R2
  4 [-]: MOVE      R0 R5        ; R0 := R5
  5 [-]: MOVE      R0 R4        ; R0 := R4
  6 [-]: GETTABLE  R7 R1 K0     ; R7 := R1["credits"]
  7 [-]: LT        0 K1 R7      ; if 0 >= R7 then PC := 25
  8 [-]: JMP       25           ; PC := 25
  9 [-]: LOADK     R7 K2        ; R7 := "<CREDITS>"
 10 [-]: TEST      R3 1         ; if R3 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R8 R0 K3     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 13 [-]: LOADK     R10 K2       ; R10 := "<CREDITS>"
 14 [-]: MOVE      R11 R1       ; R11 := R1
 15 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 16 [-]: MOVE      R7 R8        ; R7 := R8
 17 [-]: MOVE      R8 R6        ; R8 := R6
 18 [-]: MOVE      R9 R7        ; R9 := R7
 19 [-]: GETUPVAL  R10 U0       ; R10 := U0
 20 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0x7E197415"]
 21 [-]: GETTABLE  R11 R1 K0    ; R11 := R1["credits"]
 22 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 23 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 24 [-]: CALL      R8 2 1       ; R8(R9)
 25 [-]: GETTABLE  R8 R1 K5     ; R8 := R1["items"]
 26 [-]: LOADK     R9 K6        ; R9 := 1
 27 [-]: LEN       R10 R8       ; R10 := # R8
 28 [-]: LOADK     R11 K6       ; R11 := 1
 29 [-]: FORPREP   R9 45        ; R9 -= R11; PC := 45
 30 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 31 [-]: GETGLOBAL R14 K7       ; R14 := 0x400E7765
 32 [-]: MOVE      R15 R13      ; R15 := R13
 33 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 34 [-]: TEST      R14 1        ; if R14 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETUPVAL  R14 U1       ; R14 := U1
 37 [-]: MOVE      R15 R0       ; R15 := R0
 38 [-]: MOVE      R16 R13      ; R16 := R13
 39 [-]: LOADK     R17 K6       ; R17 := 1
 40 [-]: MOVE      R18 R3       ; R18 := R3
 41 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 42 [-]: MOVE      R15 R6       ; R15 := R6
 43 [-]: MOVE      R16 R14      ; R16 := R14
 44 [-]: CALL      R15 2 1      ; R15(R16)
 45 [-]: FORLOOP   R9 30        ; R9 += R11; if R9 <= R10 then begin PC := 30; R12 := R9 end
 46 [-]: GETTABLE  R15 R1 K8    ; R15 := R1["countedStoreItems"]
 47 [-]: LOADK     R16 K6       ; R16 := 1
 48 [-]: LEN       R17 R15      ; R17 := # R15
 49 [-]: LOADK     R18 K6       ; R18 := 1
 50 [-]: FORPREP   R16 67       ; R16 -= R18; PC := 67
 51 [-]: GETTABLE  R20 R15 R19  ; R20 := R15[R19]
 52 [-]: GETTABLE  R21 R20 K9   ; R21 := R20["mStoreItem"]
 53 [-]: GETGLOBAL R22 K7       ; R22 := 0x400E7765
 54 [-]: MOVE      R23 R21      ; R23 := R21
 55 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 56 [-]: TEST      R22 1        ; if R22 then PC := 67
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETUPVAL  R22 U1       ; R22 := U1
 59 [-]: MOVE      R23 R0       ; R23 := R0
 60 [-]: MOVE      R24 R21      ; R24 := R21
 61 [-]: GETTABLE  R25 R20 K10  ; R25 := R20["mItemCount"]
 62 [-]: MOVE      R26 R3       ; R26 := R3
 63 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
 64 [-]: MOVE      R23 R6       ; R23 := R6
 65 [-]: MOVE      R24 R22      ; R24 := R22
 66 [-]: CALL      R23 2 1      ; R23(R24)
 67 [-]: FORLOOP   R16 51       ; R16 += R18; if R16 <= R17 then begin PC := 51; R19 := R16 end
 68 [-]: GETTABLE  R23 R1 K11   ; R23 := R1["countedItems"]
 69 [-]: LOADK     R24 K6       ; R24 := 1
 70 [-]: LEN       R25 R23      ; R25 := # R23
 71 [-]: LOADK     R26 K6       ; R26 := 1
 72 [-]: FORPREP   R24 138      ; R24 -= R26; PC := 138
 73 [-]: GETTABLE  R28 R1 K11   ; R28 := R1["countedItems"]
 74 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
 75 [-]: GETGLOBAL R29 K7       ; R29 := 0x400E7765
 76 [-]: GETTABLE  R30 R28 K12  ; R30 := R28["mItemType"]
 77 [-]: CALL      R29 2 2      ; R29 := R29(R30)
 78 [-]: TEST      R29 1        ; if R29 then PC := 138
 79 [-]: JMP       138          ; PC := 138
 80 [-]: LOADK     R29 K13      ; R29 := ""
 81 [-]: GETTABLE  R30 R28 K12  ; R30 := R28["mItemType"]
 82 [-]: SELF      R30 R30 K14  ; R31 := R30; R30 := R30["0x8B598ED4"]
 83 [-]: GETGLOBAL R32 K15      ; R32 := gRecipeItemType
 84 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
 85 [-]: TEST      R30 0        ; if not R30 then PC := 104
 86 [-]: JMP       104          ; PC := 104
 87 [-]: GETGLOBAL R30 K16      ; R30 := 0x7C282057
 88 [-]: GETTABLE  R31 R28 K12  ; R31 := R28["mItemType"]
 89 [-]: CALL      R30 2 2      ; R30 := R30(R31)
 90 [-]: GETGLOBAL R31 K7       ; R31 := 0x400E7765
 91 [-]: MOVE      R32 R30      ; R32 := R30
 92 [-]: CALL      R31 2 2      ; R31 := R31(R32)
 93 [-]: TEST      R31 1        ; if R31 then PC := 112
 94 [-]: JMP       112          ; PC := 112
 95 [-]: SELF      R31 R0 K3    ; R32 := R0; R31 := R0["0x5DB0BD4"]
 96 [-]: GETGLOBAL R33 K17      ; R33 := 0x9FAED6BC
 97 [-]: SELF      R34 R30 K18  ; R35 := R30; R34 := R30["0x616C74B6"]
 98 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
 99 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
100 [-]: MOVE      R34 R0       ; R34 := R0
101 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
102 [-]: MOVE      R29 R31      ; R29 := R31
103 [-]: JMP       112          ; PC := 112
104 [-]: SELF      R31 R0 K3    ; R32 := R0; R31 := R0["0x5DB0BD4"]
105 [-]: GETGLOBAL R33 K17      ; R33 := 0x9FAED6BC
106 [-]: SELF      R34 R28 K19  ; R35 := R28; R34 := R28["0x208D01AA"]
107 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
108 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
109 [-]: MOVE      R34 R0       ; R34 := R0
110 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
111 [-]: MOVE      R29 R31      ; R29 := R31
112 [-]: GETTABLE  R31 R28 K12  ; R31 := R28["mItemType"]
113 [-]: SELF      R31 R31 K14  ; R32 := R31; R31 := R31["0x8B598ED4"]
114 [-]: GETGLOBAL R33 K20      ; R33 := gFusionBundleType
115 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
116 [-]: TEST      R31 0        ; if not R31 then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: SELF      R31 R28 K21  ; R32 := R28; R31 := R28["0x8F2E28E1"]
119 [-]: CALL      R31 2 2      ; R31 := R31(R32)
120 [-]: UNM       R31 R31      ; R31 := - R31
121 [-]: GETTABLE  R32 R28 K10  ; R32 := R28["mItemCount"]
122 [-]: MUL       R32 R31 R32  ; R32 := R31 * R32
123 [-]: LOADK     R33 K22      ; R33 := " "
124 [-]: MOVE      R34 R29      ; R34 := R29
125 [-]: CONCAT    R29 R32 R34  ; R29 := R32 .. R33 .. R34
126 [-]: JMP       135          ; PC := 135
127 [-]: GETTABLE  R32 R28 K10  ; R32 := R28["mItemCount"]
128 [-]: LT        0 K6 R32     ; if 1 >= R32 then PC := 135
129 [-]: JMP       135          ; PC := 135
130 [-]: MOVE      R32 R29      ; R32 := R29
131 [-]: LOADK     R33 K23      ; R33 := " ("
132 [-]: GETTABLE  R34 R28 K10  ; R34 := R28["mItemCount"]
133 [-]: LOADK     R35 K24      ; R35 := ")"
134 [-]: CONCAT    R29 R32 R35  ; R29 := R32 .. R33 .. R34 .. R35
135 [-]: MOVE      R32 R6       ; R32 := R6
136 [-]: MOVE      R33 R29      ; R33 := R29
137 [-]: CALL      R32 2 1      ; R32(R33)
138 [-]: FORLOOP   R24 73       ; R24 += R26; if R24 <= R25 then begin PC := 73; R27 := R24 end
139 [-]: EQ        0 R4 K25     ; if R4 ~= nil then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: LOADK     R4 K13       ; R4 := ""
142 [-]: GETUPVAL  R32 U0       ; R32 := U0
143 [-]: GETTABLE  R32 R32 K26  ; R32 := R32["0xF81722A2"]
144 [-]: MOVE      R33 R2       ; R33 := R2
145 [-]: MOVE      R34 R5       ; R34 := R5
146 [-]: MOVE      R35 R4       ; R35 := R4
147 [-]: TAILCALL  R32 4 0      ; R32,... := R32(R33,R34,R35)
148 [-]: RETURN    R32 0        ; return R32,...
149 [-]: RETURN    R0 1         ; return 


; Function #164.1:
;
; Name:            
; Defined at line: 2870
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R1 K0        ; R1 := table
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R0 R2        ; R0 := R2
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: LOADK     R2 K3        ; R2 := " + "
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 19 [-]: MOVE      R1 R2        ; R1 := R2
 20 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 2945
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x8B598ED4"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gStoreItemType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xF1A9732E"]
  7 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  8 [-]: RETURN    R1 0         ; return R1,...
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0xEAC5E738
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x12F3CEFA
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x105AB39B"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: LT        0 K6 R1      ; if 1 >= R1 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xF1A9732E"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xF1A9732E"]
 26 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 27 [-]: RETURN    R1 0         ; return R1,...
 28 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0["0xCF3F0AF8"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 44
 34 [-]: JMP       44           ; PC := 44
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 36 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1["0xF1A9732E"]
 37 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 38 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 39 [-]: TEST      R2 1         ; if R2 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0xF1A9732E"]
 42 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 43 [-]: RETURN    R2 0         ; return R2,...
 44 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0xF1A9732E"]
 45 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 46 [-]: RETURN    R2 0         ; return R2,...
 47 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 2974
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 2980
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: MOVE      R5 R0        ; R5 := R0
  2 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["items"]
  3 [-]: LEN       R6 R6        ; R6 := # R6
  4 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["items"]
  7 [-]: GETTABLE  R2 R6 K2     ; R2 := R6[1]
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["countedItems"]
 10 [-]: LEN       R6 R6        ; R6 := # R6
 11 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["countedItems"]
 14 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[1]
 15 [-]: GETTABLE  R3 R6 K4     ; R3 := R6["mItemType"]
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["countedStoreItems"]
 18 [-]: LEN       R6 R6        ; R6 := # R6
 19 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["countedStoreItems"]
 22 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[1]
 23 [-]: GETTABLE  R3 R6 K6     ; R3 := R6["mStoreItem"]
 24 [-]: EQ        1 R2 K7      ; if R2 == nil then PC := 48
 25 [-]: JMP       48           ; PC := 48
 26 [-]: SELF      R6 R2 K8     ; R7 := R2; R6 := R2["0x3077BE70"]
 27 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 28 [-]: MOVE      R4 R6        ; R4 := R6
 29 [-]: SELF      R6 R2 K9     ; R7 := R2; R6 := R2["0xF1A9732E"]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: MOVE      R1 R6        ; R1 := R6
 32 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 33 [-]: SELF      R7 R2 K8     ; R8 := R2; R7 := R2["0x3077BE70"]
 34 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 35 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 36 [-]: TEST      R6 1         ; if R6 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: SELF      R6 R2 K8     ; R7 := R2; R6 := R2["0x3077BE70"]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0x8B598ED4"]
 41 [-]: GETGLOBAL R8 K12       ; R8 := gRecipeItemType
 42 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 43 [-]: MOVE      R5 R6        ; R5 := R6
 44 [-]: JMP       75           ; PC := 75
 45 [-]: MOVE      R5 R0        ; R5 := R0
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: JMP       75           ; PC := 75
 48 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 70
 49 [-]: JMP       70           ; PC := 70
 50 [-]: MOVE      R4 R3        ; R4 := R3
 51 [-]: GETGLOBAL R6 K13       ; R6 := 0x7C282057
 52 [-]: MOVE      R7 R3        ; R7 := R3
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: MOVE      R3 R6        ; R3 := R6
 55 [-]: SELF      R6 R3 K11    ; R7 := R3; R6 := R3["0x8B598ED4"]
 56 [-]: GETGLOBAL R8 K12       ; R8 := gRecipeItemType
 57 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 58 [-]: MOVE      R5 R6        ; R5 := R6
 59 [-]: TEST      R5 0         ; if not R5 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: GETUPVAL  R6 U0        ; R6 := U0
 62 [-]: MOVE      R7 R3        ; R7 := R3
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: MOVE      R1 R6        ; R1 := R6
 65 [-]: JMP       75           ; PC := 75
 66 [-]: SELF      R6 R3 K9     ; R7 := R3; R6 := R3["0xF1A9732E"]
 67 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 68 [-]: MOVE      R1 R6        ; R1 := R6
 69 [-]: JMP       75           ; PC := 75
 70 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["credits"]
 71 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: GETGLOBAL R6 K15       ; R6 := _G
 74 [-]: GETTABLE  R1 R6 K16    ; R1 := R6["UITexture_CreditsIcon"]
 75 [-]: MOVE      R6 R1        ; R6 := R1
 76 [-]: MOVE      R7 R5        ; R7 := R5
 77 [-]: MOVE      R8 R4        ; R8 := R4
 78 [-]: RETURN    R6 4         ; return R6,R7,R8
 79 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 3016
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["credits"]
  3 [-]: LT        0 K1 R2      ; if 0 >= R2 then PC := 14
  4 [-]: JMP       14           ; PC := 14
  5 [-]: GETGLOBAL R2 K2        ; R2 := table
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xE6450C9D"]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: NEWTABLE  R4 0 2       ; R4 := {}
  9 [-]: GETGLOBAL R5 K5        ; R5 := _G
 10 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UITexture_CreditsIcon"]
 11 [-]: SETTABLE  R4 K4 R5     ; R4["Icon"] := R5
 12 [-]: SETTABLE  R4 K7 K8     ; R4["IsRecipe"] := "0x0"
 13 [-]: CALL      R2 3 1       ; R2(R3,R4)
 14 [-]: LOADK     R2 K9        ; R2 := 1
 15 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["items"]
 16 [-]: LEN       R3 R3        ; R3 := # R3
 17 [-]: LOADK     R4 K9        ; R4 := 1
 18 [-]: FORPREP   R2 72        ; R2 -= R4; PC := 72
 19 [-]: GETGLOBAL R6 K11       ; R6 := 0x400E7765
 20 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["items"]
 21 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 22 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x3077BE70"]
 23 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 24 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 25 [-]: TEST      R6 1         ; if R6 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["items"]
 28 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 29 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x3077BE70"]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6["0x8B598ED4"]
 32 [-]: GETGLOBAL R8 K14       ; R8 := gRecipeItemType
 33 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 34 [-]: JMP       37           ; PC := 37
 35 [-]: MOVE      R6 R0        ; R6 := R0
 36 [-]: MOVE      R6 R1        ; R6 := R1
 37 [-]: GETGLOBAL R7 K11       ; R7 := 0x400E7765
 38 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["items"]
 39 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 40 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x3077BE70"]
 41 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 42 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 43 [-]: TEST      R7 1         ; if R7 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["items"]
 46 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 47 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x3077BE70"]
 48 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 49 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x8B598ED4"]
 50 [-]: GETGLOBAL R9 K15       ; R9 := gLotusArtifactUpgradeType
 51 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 52 [-]: JMP       55           ; PC := 55
 53 [-]: MOVE      R7 R0        ; R7 := R0
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: GETGLOBAL R8 K2        ; R8 := table
 56 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["0xE6450C9D"]
 57 [-]: MOVE      R9 R1        ; R9 := R1
 58 [-]: NEWTABLE  R10 0 4      ; R10 := {}
 59 [-]: GETTABLE  R11 R0 K10   ; R11 := R0["items"]
 60 [-]: GETTABLE  R11 R11 R5   ; R11 := R11[R5]
 61 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0xF1A9732E"]
 62 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 63 [-]: SETTABLE  R10 K4 R11   ; R10["Icon"] := R11
 64 [-]: SETTABLE  R10 K7 R6    ; R10["IsRecipe"] := R6
 65 [-]: SETTABLE  R10 K17 R7   ; R10["IsMod"] := R7
 66 [-]: GETTABLE  R11 R0 K10   ; R11 := R0["items"]
 67 [-]: GETTABLE  R11 R11 R5   ; R11 := R11[R5]
 68 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x3077BE70"]
 69 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 70 [-]: SETTABLE  R10 K18 R11  ; R10["ItemType"] := R11
 71 [-]: CALL      R8 3 1       ; R8(R9,R10)
 72 [-]: FORLOOP   R2 19        ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
 73 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["countedStoreItems"]
 74 [-]: LOADK     R9 K9        ; R9 := 1
 75 [-]: LEN       R10 R8       ; R10 := # R8
 76 [-]: LOADK     R11 K9       ; R11 := 1
 77 [-]: FORPREP   R9 120       ; R9 -= R11; PC := 120
 78 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 79 [-]: GETTABLE  R14 R13 K20  ; R14 := R13["mStoreItem"]
 80 [-]: GETGLOBAL R15 K11      ; R15 := 0x400E7765
 81 [-]: MOVE      R16 R14      ; R16 := R14
 82 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 83 [-]: TEST      R15 1        ; if R15 then PC := 120
 84 [-]: JMP       120          ; PC := 120
 85 [-]: SELF      R15 R14 K12  ; R16 := R14; R15 := R14["0x3077BE70"]
 86 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 87 [-]: GETGLOBAL R16 K11      ; R16 := 0x400E7765
 88 [-]: MOVE      R17 R15      ; R17 := R15
 89 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 90 [-]: TEST      R16 1        ; if R16 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: SELF      R16 R15 K13  ; R17 := R15; R16 := R15["0x8B598ED4"]
 93 [-]: GETGLOBAL R18 K14      ; R18 := gRecipeItemType
 94 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 95 [-]: JMP       98           ; PC := 98
 96 [-]: MOVE      R16 R0       ; R16 := R0
 97 [-]: MOVE      R16 R1       ; R16 := R1
 98 [-]: GETGLOBAL R17 K11      ; R17 := 0x400E7765
 99 [-]: MOVE      R18 R15      ; R18 := R15
100 [-]: CALL      R17 2 2      ; R17 := R17(R18)
101 [-]: TEST      R17 1        ; if R17 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: SELF      R17 R15 K13  ; R18 := R15; R17 := R15["0x8B598ED4"]
104 [-]: GETGLOBAL R19 K15      ; R19 := gLotusArtifactUpgradeType
105 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
106 [-]: JMP       109          ; PC := 109
107 [-]: MOVE      R17 R0       ; R17 := R0
108 [-]: MOVE      R17 R1       ; R17 := R1
109 [-]: GETGLOBAL R18 K2       ; R18 := table
110 [-]: GETTABLE  R18 R18 K3   ; R18 := R18["0xE6450C9D"]
111 [-]: MOVE      R19 R1       ; R19 := R1
112 [-]: NEWTABLE  R20 0 4      ; R20 := {}
113 [-]: SELF      R21 R14 K16  ; R22 := R14; R21 := R14["0xF1A9732E"]
114 [-]: CALL      R21 2 2      ; R21 := R21(R22)
115 [-]: SETTABLE  R20 K4 R21   ; R20["Icon"] := R21
116 [-]: SETTABLE  R20 K7 R16   ; R20["IsRecipe"] := R16
117 [-]: SETTABLE  R20 K17 R17  ; R20["IsMod"] := R17
118 [-]: SETTABLE  R20 K18 R15  ; R20["ItemType"] := R15
119 [-]: CALL      R18 3 1      ; R18(R19,R20)
120 [-]: FORLOOP   R9 78        ; R9 += R11; if R9 <= R10 then begin PC := 78; R12 := R9 end
121 [-]: LOADK     R18 K9       ; R18 := 1
122 [-]: GETTABLE  R19 R0 K21   ; R19 := R0["countedItems"]
123 [-]: LEN       R19 R19      ; R19 := # R19
124 [-]: LOADK     R20 K9       ; R20 := 1
125 [-]: FORPREP   R18 157      ; R18 -= R20; PC := 157
126 [-]: GETGLOBAL R22 K22      ; R22 := 0x7C282057
127 [-]: GETTABLE  R23 R0 K21   ; R23 := R0["countedItems"]
128 [-]: GETTABLE  R23 R23 R21  ; R23 := R23[R21]
129 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["mItemType"]
130 [-]: CALL      R22 2 2      ; R22 := R22(R23)
131 [-]: SELF      R23 R22 K13  ; R24 := R22; R23 := R22["0x8B598ED4"]
132 [-]: GETGLOBAL R25 K14      ; R25 := gRecipeItemType
133 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
134 [-]: SELF      R24 R22 K13  ; R25 := R22; R24 := R22["0x8B598ED4"]
135 [-]: GETGLOBAL R26 K15      ; R26 := gLotusArtifactUpgradeType
136 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
137 [-]: LOADNIL   R25 R25      ; R25 := nil
138 [-]: TEST      R23 0        ; if not R23 then PC := 145
139 [-]: JMP       145          ; PC := 145
140 [-]: GETUPVAL  R26 U0       ; R26 := U0
141 [-]: MOVE      R27 R22      ; R27 := R22
142 [-]: CALL      R26 2 2      ; R26 := R26(R27)
143 [-]: MOVE      R25 R26      ; R25 := R26
144 [-]: JMP       148          ; PC := 148
145 [-]: SELF      R26 R22 K16  ; R27 := R22; R26 := R22["0xF1A9732E"]
146 [-]: CALL      R26 2 2      ; R26 := R26(R27)
147 [-]: MOVE      R25 R26      ; R25 := R26
148 [-]: GETGLOBAL R26 K2       ; R26 := table
149 [-]: GETTABLE  R26 R26 K3   ; R26 := R26["0xE6450C9D"]
150 [-]: MOVE      R27 R1       ; R27 := R1
151 [-]: NEWTABLE  R28 0 4      ; R28 := {}
152 [-]: SETTABLE  R28 K4 R25   ; R28["Icon"] := R25
153 [-]: SETTABLE  R28 K7 R23   ; R28["IsRecipe"] := R23
154 [-]: SETTABLE  R28 K17 R24  ; R28["IsMod"] := R24
155 [-]: SETTABLE  R28 K18 R22  ; R28["ItemType"] := R22
156 [-]: CALL      R26 3 1      ; R26(R27,R28)
157 [-]: FORLOOP   R18 126      ; R18 += R20; if R18 <= R19 then begin PC := 126; R21 := R18 end
158 [-]: RETURN    R1 2         ; return R1
159 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 3062
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: ADD       R3 R0 K0     ; R3 := R0 + 1
  3 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  4 [-]: TEST      R1 0         ; if not R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: LE        0 R0 K1      ; if R0 > 6 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: MOVE      R3 R2        ; R3 := R2
  9 [-]: LOADK     R4 K2        ; R4 := "_SPACE"
 10 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 3070
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := Lotus_Game
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xA866E1C8"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["MT_RECOVERY"]
  6 [-]: SETTABLE  R0 K2 R1     ; R0["missionType"] := R1
  7 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  8 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["FC_CORPUS"]
  9 [-]: SETTABLE  R0 K4 R1     ; R0["faction"] := R1
 10 [-]: LOADK     R1 K6        ; R1 := "/Lotus/Levels/Proc/Corpus/CorpusGasCityHarvester"
 11 [-]: LOADK     R2 K7        ; R2 := "/Lotus/Types/Game/EnemySpecs/CorpusSquadA"
 12 [-]: GETGLOBAL R3 K9        ; R3 := 0x2C00D429
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SETTABLE  R0 K8 R3     ; R0["levelOverride"] := R3
 16 [-]: GETGLOBAL R3 K11       ; R3 := 0x7C282057
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: SETTABLE  R0 K10 R3    ; R0["enemySpec"] := R3
 20 [-]: SETTABLE  R0 K12 K13   ; R0["soloMode"] := "0x1"
 21 [-]: GETGLOBAL R3 K15       ; R3 := 0xEC274B1A
 22 [-]: LOADK     R4 K16       ; R4 := "/Lotus/Language/Game/Jupiter"
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: SETTABLE  R0 K14 R3    ; R0["location"] := R3
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 3091
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6374FD98
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R3 K1        ; R3 := 0
  4 [-]: LOADK     R4 K2        ; R4 := 100
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K3        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xF7005A7B"]
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K3        ; R3 := math
 11 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0xF93F7CC8"]
 12 [-]: GETGLOBAL R4 K3        ; R4 := math
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xF7005A7B"]
 14 [-]: MUL       R5 R1 K6     ; R5 := R1 * 10
 15 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 16 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 17 [-]: MOD       R3 R3 K6     ; R3 := R3 % 10
 18 [-]: EQ        0 R2 K1      ; if R2 ~= 0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: EQ        0 R3 K1      ; if R3 ~= 0 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: EQ        1 R1 K1      ; if R1 == 0 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R3 K7        ; R3 := 1
 25 [-]: GETGLOBAL R4 K8        ; R4 := 0x9FAED6BC
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: EQ        1 R3 K1      ; if R3 == 0 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: MOVE      R5 R4        ; R5 := R4
 31 [-]: LOADK     R6 K9        ; R6 := "."
 32 [-]: MOVE      R7 R3        ; R7 := R3
 33 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 34 [-]: MOVE      R5 R4        ; R5 := R4
 35 [-]: LOADK     R6 K10       ; R6 := "%"
 36 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 37 [-]: RETURN    R4 2         ; return R4
 38 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 3111
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x930EC5CF"]
  3 [-]: LOADK     R2 K1        ; R2 := "AvatarLight"
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xF81722A2"]
  6 [-]: GETGLOBAL R4 K3        ; R4 := _T
  7 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["InHub"]
  8 [-]: GETGLOBAL R5 K5        ; R5 := gBackgroundRegion
  9 [-]: LOADNIL   R6 R6        ; R6 := nil
 10 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 31
 16 [-]: JMP       31           ; PC := 31
 17 [-]: TEST      R0 0         ; if not R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0xEF5C4E85"]
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: GETGLOBAL R2 K8        ; R2 := gFlashMgr
 22 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x1089D053"]
 23 [-]: LOADK     R4 K10       ; R4 := "Graphics.DynamicLighting"
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: SELF      R3 R1 K11    ; R4 := R1; R3 := R1["0x11C1A43E"]
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: JMP       31           ; PC := 31
 29 [-]: SELF      R3 R1 K12    ; R4 := R1; R3 := R1["0x59052138"]
 30 [-]: CALL      R3 2 1       ; R3(R4)
 31 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 3124
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 3129
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["BackgroundMovie"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 24
  6 [-]: JMP       24           ; PC := 24
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x28609C89"]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xEC274B1A
 11 [-]: LOADK     R4 K5        ; R4 := "Kneel"
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K6        ; R1 := gRegion
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xA933C036"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETTABLE  R2 R1 K8     ; R2 := R1["postProcess"]
 21 [-]: SETTABLE  R2 K9 K10    ; R2["horizonDOF"] := 0
 22 [-]: GETGLOBAL R2 K1        ; R2 := _T
 23 [-]: SETTABLE  R2 K11 K12   ; R2["SelectedLoadOutPart"] := nil
 24 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 3142
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x93B1256B
  2 [-]: LOADK     R2 K1        ; R2 := "OnSaveLoadOutCompleteCommon"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: GETGLOBAL R2 K3        ; R2 := gGameRules
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x931066AE"]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: GETGLOBAL R1 K5        ; R1 := gMatchingService
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xD5E03646"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 35
 19 [-]: JMP       35           ; PC := 35
 20 [-]: GETGLOBAL R2 K5        ; R2 := gMatchingService
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xE1C847EF"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 0         ; if not R2 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1["0xEB3F45BE"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: CALL      R3 1 2       ; R3 := R3()
 29 [-]: SETTABLE  R2 K9 R3     ; R2["eloRating"] := R3
 30 [-]: GETGLOBAL R3 K5        ; R3 := gMatchingService
 31 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0xA6A77FF7"]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: GETGLOBAL R3 K5        ; R3 := gMatchingService
 36 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x9068148C"]
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 3161
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K1        ; R1 := ""
  4 [-]: JMP       8            ; PC := 8
  5 [-]: LOADK     R2 K2        ; R2 := " "
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
  8 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x4A8D7E2A"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xE6DC43B0
 11 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0["0x616C74B6"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x5EC7A3D2"]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: LOADNIL   R5 R5        ; R5 := nil
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: LOADK     R4 K7        ; R4 := "<p><font face=\"Noto Sans\"><b>"
 18 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 19 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/Menu/LevelAbbreviation"
 20 [-]: LOADNIL   R7 R7        ; R7 := nil
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: LOADK     R6 K2        ; R6 := " "
 23 [-]: GETGLOBAL R7 K9        ; R7 := 0x9FAED6BC
 24 [-]: MOVE      R8 R2        ; R8 := R2
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LOADK     R8 K10       ; R8 := " </b>"
 27 [-]: MOVE      R9 R3        ; R9 := R3
 28 [-]: MOVE      R10 R1       ; R10 := R1
 29 [-]: LOADK     R11 K11      ; R11 := "</font></p>"
 30 [-]: CONCAT    R4 R4 R11    ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11
 31 [-]: RETURN    R4 2         ; return R4
 32 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 3172
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gCorpusHarvesterFinisherVictim"]
  3 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R1 R1        ; R1 := R1
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 40
 11 [-]: JMP       40           ; PC := 40
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 13 [-]: GETGLOBAL R2 K3        ; R2 := gGameRules
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 40
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 18 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x48685460"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 40
 24 [-]: JMP       40           ; PC := 40
 25 [-]: LOADK     R2 K5        ; R2 := 1
 26 [-]: LEN       R3 R1        ; R3 := # R1
 27 [-]: LOADK     R4 K5        ; R4 := 1
 28 [-]: FORPREP   R2 39        ; R2 -= R4; PC := 39
 29 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 30 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["playerName"]
 31 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0["0xDE5882DD"]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x144A28F9"]
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R6 R1        ; R6 := R1
 38 [-]: RETURN    R6 2         ; return R6
 39 [-]: FORLOOP   R2 29        ; R2 += R4; if R2 <= R3 then begin PC := 29; R5 := R2 end
 40 [-]: MOVE      R6 R0        ; R6 := R0
 41 [-]: RETURN    R6 2         ; return R6
 42 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 3195
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := UI_MODE_IN_GAME
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K3        ; R2 := gClient
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R1 K3        ; R1 := gClient
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xAA6BC1F3"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 16 [-]: GETGLOBAL R2 K5        ; R2 := gGameRules
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 52
 19 [-]: JMP       52           ; PC := 52
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETGLOBAL R0 K7        ; R0 := UI_MODE_IN_SPACE_SHIP
 30 [-]: JMP       52           ; PC := 52
 31 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 32 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 33 [-]: GETGLOBAL R3 K8        ; R3 := gLotusDojoGameRulesType
 34 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 35 [-]: TEST      R1 1         ; if R1 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 38 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 39 [-]: GETGLOBAL R3 K9        ; R3 := gLotusDuelGameRulesType
 40 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 41 [-]: TEST      R1 0         ; if not R1 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: GETGLOBAL R0 K10       ; R0 := UI_MODE_IN_DOJO
 44 [-]: JMP       52           ; PC := 52
 45 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 46 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 47 [-]: GETGLOBAL R3 K11       ; R3 := gLotusHubGameRulesType
 48 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: GETGLOBAL R0 K12       ; R0 := UI_MODE_IN_SPACE_HUB
 52 [-]: RETURN    R0 2         ; return R0
 53 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 3220
; #Upvalues:       0
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R10 K0       ; R10 := Engine
  2 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["0x9490FE70"]
  3 [-]: CALL      R10 1 2      ; R10 := R10()
  4 [-]: TEST      R10 1        ; if R10 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R10 K0       ; R10 := Engine
  7 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["0x212137BC"]
  8 [-]: CALL      R10 1 2      ; R10 := R10()
  9 [-]: TEST      R10 0        ; if not R10 then PC := 51
 10 [-]: JMP       51           ; PC := 51
 11 [-]: GETGLOBAL R10 K0       ; R10 := Engine
 12 [-]: GETTABLE  R10 R10 K3   ; R10 := R10["0xC5E0B002"]
 13 [-]: CALL      R10 1 2      ; R10 := R10()
 14 [-]: TEST      R10 0        ; if not R10 then PC := 51
 15 [-]: JMP       51           ; PC := 51
 16 [-]: GETGLOBAL R10 K4       ; R10 := 0xE6DC43B0
 17 [-]: MOVE      R11 R1       ; R11 := R1
 18 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 19 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 20 [-]: MOVE      R1 R10       ; R1 := R10
 21 [-]: TEST      R8 1         ; if R8 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: EQ        1 R3 K5      ; if R3 == 0 then PC := 39
 25 [-]: JMP       39           ; PC := 39
 26 [-]: GETGLOBAL R10 K6       ; R10 := gRegion
 27 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x134B434E"]
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: MOVE      R13 R1       ; R13 := R1
 30 [-]: MOVE      R14 R1       ; R14 := R1
 31 [-]: MOVE      R15 R0       ; R15 := R0
 32 [-]: MOVE      R16 R0       ; R16 := R0
 33 [-]: MOVE      R17 R8       ; R17 := R8
 34 [-]: MOVE      R18 R5       ; R18 := R5
 35 [-]: MOVE      R19 R3       ; R19 := R3
 36 [-]: TAILCALL  R10 10 0     ; R10,... := R10(R11,R12,R13,R14,R15,R16,R17,R18,R19)
 37 [-]: RETURN    R10 0        ; return R10,...
 38 [-]: JMP       128          ; PC := 128
 39 [-]: GETGLOBAL R10 K6       ; R10 := gRegion
 40 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0xA502DAE1"]
 41 [-]: MOVE      R12 R2       ; R12 := R2
 42 [-]: MOVE      R13 R1       ; R13 := R1
 43 [-]: MOVE      R14 R1       ; R14 := R1
 44 [-]: MOVE      R15 R0       ; R15 := R0
 45 [-]: MOVE      R16 R0       ; R16 := R0
 46 [-]: MOVE      R17 R8       ; R17 := R8
 47 [-]: MOVE      R18 R5       ; R18 := R5
 48 [-]: TAILCALL  R10 9 0      ; R10,... := R10(R11,R12,R13,R14,R15,R16,R17,R18)
 49 [-]: RETURN    R10 0        ; return R10,...
 50 [-]: JMP       128          ; PC := 128
 51 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
 52 [-]: GETGLOBAL R11 K10      ; R11 := _G
 53 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["UIMovie_InputDialogMovie"]
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: TEST      R10 1        ; if R10 then PC := 128
 56 [-]: JMP       128          ; PC := 128
 57 [-]: LOADNIL   R10 R10      ; R10 := nil
 58 [-]: GETGLOBAL R11 K9       ; R11 := 0x400E7765
 59 [-]: MOVE      R12 R0       ; R12 := R0
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: TEST      R11 1        ; if R11 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: SELF      R11 R0 K12   ; R12 := R0; R11 := R0["0x5FF274BB"]
 64 [-]: GETGLOBAL R13 K10      ; R13 := _G
 65 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["UIMovie_InputDialogMovie"]
 66 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 67 [-]: MOVE      R10 R11      ; R10 := R11
 68 [-]: JMP       75           ; PC := 75
 69 [-]: GETGLOBAL R11 K13      ; R11 := gFlashMgr
 70 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x7548923C"]
 71 [-]: GETGLOBAL R13 K10      ; R13 := _G
 72 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["UIMovie_InputDialogMovie"]
 73 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 74 [-]: MOVE      R10 R11      ; R10 := R11
 75 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
 76 [-]: LOADK     R13 K16      ; R13 := "SetYesTag"
 77 [-]: LOADK     R14 K17      ; R14 := "/Menu/Confirm_Item_Ok"
 78 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 79 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
 80 [-]: LOADK     R13 K18      ; R13 := "SetNoTag"
 81 [-]: LOADK     R14 K19      ; R14 := "/Menu/Confirm_Item_Cancel"
 82 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 83 [-]: TEST      R7 0         ; if not R7 then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
 86 [-]: LOADK     R13 K20      ; R13 := "SetCancelEnable"
 87 [-]: LOADK     R14 K21      ; R14 := "false"
 88 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 89 [-]: SELF      R11 R10 K22  ; R12 := R10; R11 := R10["0xB9C96BA0"]
 90 [-]: LOADK     R13 K23      ; R13 := "SetCaption"
 91 [-]: NEWTABLE  R14 1 0      ; R14 := {}
 92 [-]: MOVE      R15 R1       ; R15 := R1
 93 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
 94 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 95 [-]: EQ        1 R9 K24     ; if R9 == nil then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: SELF      R11 R10 K22  ; R12 := R10; R11 := R10["0xB9C96BA0"]
 98 [-]: LOADK     R13 K25      ; R13 := "SetText"
 99 [-]: NEWTABLE  R14 1 0      ; R14 := {}
100 [-]: MOVE      R15 R9       ; R15 := R9
101 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
102 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
103 [-]: TEST      R6 0         ; if not R6 then PC := 109
104 [-]: JMP       109          ; PC := 109
105 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
106 [-]: LOADK     R13 K26      ; R13 := "SetMultiline"
107 [-]: LOADK     R14 K27      ; R14 := ""
108 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
109 [-]: SELF      R11 R10 K22  ; R12 := R10; R11 := R10["0xB9C96BA0"]
110 [-]: LOADK     R13 K28      ; R13 := "SetContent"
111 [-]: NEWTABLE  R14 1 0      ; R14 := {}
112 [-]: MOVE      R15 R2       ; R15 := R2
113 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
114 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
115 [-]: EQ        1 R3 K5      ; if R3 == 0 then PC := 121
116 [-]: JMP       121          ; PC := 121
117 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
118 [-]: LOADK     R13 K29      ; R13 := "SetMaxChars"
119 [-]: MOVE      R14 R3       ; R14 := R3
120 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
121 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
122 [-]: LOADK     R13 K30      ; R13 := "SetCallback"
123 [-]: MOVE      R14 R4       ; R14 := R4
124 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
125 [-]: MOVE      R11 R1       ; R11 := R1
126 [-]: MOVE      R12 R10      ; R12 := R10
127 [-]: RETURN    R11 3        ; return R11,R12
128 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 3259
; #Upvalues:       1
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R10 U0       ; R10 := U0
  2 [-]: MOVE      R11 R0       ; R11 := R0
  3 [-]: MOVE      R12 R1       ; R12 := R1
  4 [-]: MOVE      R13 R2       ; R13 := R2
  5 [-]: MOVE      R14 R3       ; R14 := R3
  6 [-]: MOVE      R15 R4       ; R15 := R4
  7 [-]: MOVE      R16 R5       ; R16 := R5
  8 [-]: MOVE      R17 R6       ; R17 := R6
  9 [-]: MOVE      R18 R7       ; R18 := R7
 10 [-]: MOVE      R19 R8       ; R19 := R8
 11 [-]: MOVE      R20 R9       ; R20 := R9
 12 [-]: TAILCALL  R10 11 0     ; R10,... := R10(R11,R12,R13,R14,R15,R16,R17,R18,R19,R20)
 13 [-]: RETURN    R10 0        ; return R10,...
 14 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 3263
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0x37E9308C"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LOADK     R3 K4        ; R3 := 1
 11 [-]: LEN       R4 R2        ; R4 := # R2
 12 [-]: LOADK     R5 K4        ; R5 := 1
 13 [-]: FORPREP   R3 20        ; R3 -= R5; PC := 20
 14 [-]: GETGLOBAL R7 K5        ; R7 := gGameConfig
 15 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7["0x915FC77"]
 16 [-]: GETTABLE  R9 R2 R6     ; R9 := R2[R6]
 17 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["mTier"]
 18 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 19 [-]: ADD       R0 R0 R7     ; R0 := R0 + R7
 20 [-]: FORLOOP   R3 14        ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
 21 [-]: RETURN    R0 2         ; return R0
 22 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 3276
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 31
  4 [-]: JMP       31           ; PC := 31
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 11 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisible"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R1 K0        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
 24 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 28 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mAlertInfo"]
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mMissionInfo"]
 30 [-]: RETURN    R1 2         ; return R1
 31 [-]: LOADNIL   R1 R1        ; R1 := nil
 32 [-]: RETURN    R1 2         ; return R1
 33 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 3283
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 3287
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedInvasionInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 3291
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 3295
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _G
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedGoalInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 3299
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 3303
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := _G
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedGoalInfo"]
  6 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 10 [-]: GETGLOBAL R3 K1        ; R3 := _G
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["CachedGoalInfo"]
 12 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mIcon"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R2 K1        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedGoalInfo"]
 19 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 20 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mIcon"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: GETGLOBAL R2 K1        ; R2 := _G
 23 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UITexture_Event"]
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 3311
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 3315
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K0        ; R1 := ""
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x94A890AA"]
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: LOADNIL   R2 R2        ; R2 := nil
 10 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K0        ; R1 := ""
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["forceAllyFaction"]
 15 [-]: TEST      R3 0         ; if not R3 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: LOADK     R1 K6        ; R1 := "Crossfire"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["goalTag"]
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R1 K8        ; R1 := "KuvaSurvival"
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: MOVE      R4 R2        ; R4 := R2
 27 [-]: RETURN    R3 3         ; return R3,R4
 28 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 3335
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 3339
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["FC_GRINEER"]
  4 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K3        ; R1 := "Grineer"
  7 [-]: JMP       25           ; PC := 25
  8 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["FC_CORPUS"]
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K5        ; R1 := "Corpus"
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["FC_INFESTATION"]
 16 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R1 K7        ; R1 := "Infestation"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 21 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["FC_OROKIN"]
 22 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R1 K9        ; R1 := "Orokin"
 25 [-]: GETGLOBAL R2 K10       ; R2 := 0xE6DC43B0
 26 [-]: LOADK     R3 K11       ; R3 := "/Lotus/Language/Game/Faction_"
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: LOADK     R5 K12       ; R5 := "UC"
 29 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 30 [-]: LOADNIL   R4 R4        ; R4 := nil
 31 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 32 [-]: RETURN    R2 0         ; return R2,...
 33 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 3353
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 3357
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R4 K0        ; R4 := ""
  2 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
  3 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["levelOverride"]
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["levelOverride"]
  8 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x1B252E3C"]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: MOVE      R4 R5        ; R4 := R5
 11 [-]: LOADNIL   R5 R5        ; R5 := nil
 12 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 13 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["icon"]
 14 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 15 [-]: TEST      R6 1         ; if R6 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R2        ; R7 := R2
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: GETTABLE  R5 R2 K4     ; R5 := R2["icon"]
 23 [-]: JMP       303          ; PC := 303
 24 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["icon"]
 25 [-]: JMP       303          ; PC := 303
 26 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["missionType"]
 27 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["MT_ARENA"]
 29 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETGLOBAL R6 K8        ; R6 := _G
 32 [-]: GETTABLE  R5 R6 K9     ; R5 := R6["UITextures_ArenaLocation"]
 33 [-]: JMP       303          ; PC := 303
 34 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["missionType"]
 35 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
 36 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["MT_JUNCTION"]
 37 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: GETGLOBAL R6 K8        ; R6 := _G
 40 [-]: GETTABLE  R5 R6 K11    ; R5 := R6["UITextures_JunctionLocation"]
 41 [-]: JMP       303          ; PC := 303
 42 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["missionType"]
 43 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
 44 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["MT_LANDSCAPE"]
 45 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETGLOBAL R6 K8        ; R6 := _G
 48 [-]: GETTABLE  R5 R6 K13    ; R5 := R6["UITextures_EidolonPlains"]
 49 [-]: JMP       303          ; PC := 303
 50 [-]: GETGLOBAL R6 K14       ; R6 := string
 51 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
 52 [-]: MOVE      R7 R4        ; R7 := R4
 53 [-]: LOADK     R8 K16       ; R8 := "Asteroid"
 54 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 55 [-]: TEST      R6 0         ; if not R6 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETGLOBAL R6 K8        ; R6 := _G
 58 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["UITextures_GrineerAsteroid"]
 59 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
 60 [-]: LOADK     R8 K19       ; R8 := 1
 61 [-]: GETGLOBAL R9 K8        ; R9 := _G
 62 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["UITextures_GrineerAsteroid"]
 63 [-]: LEN       R9 R9        ; R9 := # R9
 64 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 65 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
 66 [-]: JMP       303          ; PC := 303
 67 [-]: GETGLOBAL R6 K14       ; R6 := string
 68 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
 69 [-]: MOVE      R7 R4        ; R7 := R4
 70 [-]: LOADK     R8 K20       ; R8 := "GasCity"
 71 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 72 [-]: TEST      R6 0         ; if not R6 then PC := 84
 73 [-]: JMP       84           ; PC := 84
 74 [-]: GETGLOBAL R6 K8        ; R6 := _G
 75 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["UITextures_GasCity"]
 76 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
 77 [-]: LOADK     R8 K19       ; R8 := 1
 78 [-]: GETGLOBAL R9 K8        ; R9 := _G
 79 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["UITextures_GasCity"]
 80 [-]: LEN       R9 R9        ; R9 := # R9
 81 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 82 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
 83 [-]: JMP       303          ; PC := 303
 84 [-]: GETGLOBAL R6 K14       ; R6 := string
 85 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
 86 [-]: MOVE      R7 R4        ; R7 := R4
 87 [-]: LOADK     R8 K22       ; R8 := "Galleon"
 88 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 89 [-]: TEST      R6 0         ; if not R6 then PC := 101
 90 [-]: JMP       101          ; PC := 101
 91 [-]: GETGLOBAL R6 K8        ; R6 := _G
 92 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["UITextures_GrineerShip"]
 93 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
 94 [-]: LOADK     R8 K19       ; R8 := 1
 95 [-]: GETGLOBAL R9 K8        ; R9 := _G
 96 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["UITextures_GrineerShip"]
 97 [-]: LEN       R9 R9        ; R9 := # R9
 98 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 99 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
100 [-]: JMP       303          ; PC := 303
101 [-]: GETGLOBAL R6 K14       ; R6 := string
102 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
103 [-]: MOVE      R7 R4        ; R7 := R4
104 [-]: LOADK     R8 K24       ; R8 := "Outpost"
105 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
106 [-]: TEST      R6 0         ; if not R6 then PC := 118
107 [-]: JMP       118          ; PC := 118
108 [-]: GETGLOBAL R6 K8        ; R6 := _G
109 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["UITextures_Outpost"]
110 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
111 [-]: LOADK     R8 K19       ; R8 := 1
112 [-]: GETGLOBAL R9 K8        ; R9 := _G
113 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["UITextures_Outpost"]
114 [-]: LEN       R9 R9        ; R9 := # R9
115 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
116 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
117 [-]: JMP       303          ; PC := 303
118 [-]: GETGLOBAL R6 K14       ; R6 := string
119 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
120 [-]: MOVE      R7 R4        ; R7 := R4
121 [-]: LOADK     R8 K26       ; R8 := "InfestedCorpus"
122 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
123 [-]: TEST      R6 1         ; if R6 then PC := 132
124 [-]: JMP       132          ; PC := 132
125 [-]: GETGLOBAL R6 K14       ; R6 := string
126 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
127 [-]: MOVE      R7 R4        ; R7 := R4
128 [-]: LOADK     R8 K27       ; R8 := "InfestedHive"
129 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
130 [-]: TEST      R6 0         ; if not R6 then PC := 142
131 [-]: JMP       142          ; PC := 142
132 [-]: GETGLOBAL R6 K8        ; R6 := _G
133 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["UITextures_InfestedCorpusShip"]
134 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
135 [-]: LOADK     R8 K19       ; R8 := 1
136 [-]: GETGLOBAL R9 K8        ; R9 := _G
137 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["UITextures_InfestedCorpusShip"]
138 [-]: LEN       R9 R9        ; R9 := # R9
139 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
140 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
141 [-]: JMP       303          ; PC := 303
142 [-]: GETGLOBAL R6 K14       ; R6 := string
143 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
144 [-]: MOVE      R7 R4        ; R7 := R4
145 [-]: LOADK     R8 K29       ; R8 := "IcePlanet"
146 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
147 [-]: TEST      R6 0         ; if not R6 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: GETGLOBAL R6 K8        ; R6 := _G
150 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["UITextures_IcePlanet"]
151 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
152 [-]: LOADK     R8 K19       ; R8 := 1
153 [-]: GETGLOBAL R9 K8        ; R9 := _G
154 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["UITextures_IcePlanet"]
155 [-]: LEN       R9 R9        ; R9 := # R9
156 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
157 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
158 [-]: JMP       303          ; PC := 303
159 [-]: GETGLOBAL R6 K14       ; R6 := string
160 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
161 [-]: MOVE      R7 R4        ; R7 := R4
162 [-]: LOADK     R8 K31       ; R8 := "Corpus"
163 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
164 [-]: TEST      R6 0         ; if not R6 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETGLOBAL R6 K8        ; R6 := _G
167 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["UITextures_CorpusShip"]
168 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
169 [-]: LOADK     R8 K19       ; R8 := 1
170 [-]: GETGLOBAL R9 K8        ; R9 := _G
171 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["UITextures_CorpusShip"]
172 [-]: LEN       R9 R9        ; R9 := # R9
173 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
174 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
175 [-]: JMP       303          ; PC := 303
176 [-]: GETGLOBAL R6 K14       ; R6 := string
177 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
178 [-]: MOVE      R7 R4        ; R7 := R4
179 [-]: LOADK     R8 K33       ; R8 := "Settlement"
180 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
181 [-]: TEST      R6 0         ; if not R6 then PC := 193
182 [-]: JMP       193          ; PC := 193
183 [-]: GETGLOBAL R6 K8        ; R6 := _G
184 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["UITextures_Settlement"]
185 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
186 [-]: LOADK     R8 K19       ; R8 := 1
187 [-]: GETGLOBAL R9 K8        ; R9 := _G
188 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["UITextures_Settlement"]
189 [-]: LEN       R9 R9        ; R9 := # R9
190 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
191 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
192 [-]: JMP       303          ; PC := 303
193 [-]: GETGLOBAL R6 K14       ; R6 := string
194 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
195 [-]: MOVE      R7 R4        ; R7 := R4
196 [-]: LOADK     R8 K35       ; R8 := "Forest"
197 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
198 [-]: TEST      R6 0         ; if not R6 then PC := 210
199 [-]: JMP       210          ; PC := 210
200 [-]: GETGLOBAL R6 K8        ; R6 := _G
201 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["UITextures_GrineerForest"]
202 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
203 [-]: LOADK     R8 K19       ; R8 := 1
204 [-]: GETGLOBAL R9 K8        ; R9 := _G
205 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["UITextures_GrineerForest"]
206 [-]: LEN       R9 R9        ; R9 := # R9
207 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
208 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
209 [-]: JMP       303          ; PC := 303
210 [-]: GETGLOBAL R6 K14       ; R6 := string
211 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
212 [-]: MOVE      R7 R4        ; R7 := R4
213 [-]: LOADK     R8 K37       ; R8 := "Shipyard"
214 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
215 [-]: TEST      R6 0         ; if not R6 then PC := 227
216 [-]: JMP       227          ; PC := 227
217 [-]: GETGLOBAL R6 K8        ; R6 := _G
218 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["UITextures_GrineerShipyard"]
219 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
220 [-]: LOADK     R8 K19       ; R8 := 1
221 [-]: GETGLOBAL R9 K8        ; R9 := _G
222 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["UITextures_GrineerShipyard"]
223 [-]: LEN       R9 R9        ; R9 := # R9
224 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
225 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
226 [-]: JMP       303          ; PC := 303
227 [-]: GETGLOBAL R6 K14       ; R6 := string
228 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
229 [-]: MOVE      R7 R4        ; R7 := R4
230 [-]: LOADK     R8 K39       ; R8 := "SpaceBattles/"
231 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
232 [-]: TEST      R6 0         ; if not R6 then PC := 237
233 [-]: JMP       237          ; PC := 237
234 [-]: GETGLOBAL R6 K8        ; R6 := _G
235 [-]: GETTABLE  R5 R6 K40    ; R5 := R6["UITextures_ArchwingTrench"]
236 [-]: JMP       303          ; PC := 303
237 [-]: GETGLOBAL R6 K14       ; R6 := string
238 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
239 [-]: MOVE      R7 R4        ; R7 := R4
240 [-]: LOADK     R8 K41       ; R8 := "GrineerOcean"
241 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
242 [-]: TEST      R6 0         ; if not R6 then PC := 247
243 [-]: JMP       247          ; PC := 247
244 [-]: GETGLOBAL R6 K8        ; R6 := _G
245 [-]: GETTABLE  R5 R6 K42    ; R5 := R6["UITextures_GrineerOcean"]
246 [-]: JMP       303          ; PC := 303
247 [-]: GETGLOBAL R6 K14       ; R6 := string
248 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
249 [-]: MOVE      R7 R4        ; R7 := R4
250 [-]: LOADK     R8 K43       ; R8 := "OrokinMoon"
251 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
252 [-]: TEST      R6 0         ; if not R6 then PC := 257
253 [-]: JMP       257          ; PC := 257
254 [-]: GETGLOBAL R6 K8        ; R6 := _G
255 [-]: GETTABLE  R5 R6 K44    ; R5 := R6["UITextures_OrokinMoon"]
256 [-]: JMP       303          ; PC := 303
257 [-]: GETGLOBAL R6 K14       ; R6 := string
258 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
259 [-]: MOVE      R7 R4        ; R7 := R4
260 [-]: LOADK     R8 K45       ; R8 := "OrokinTower"
261 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
262 [-]: TEST      R6 0         ; if not R6 then PC := 267
263 [-]: JMP       267          ; PC := 267
264 [-]: GETGLOBAL R6 K8        ; R6 := _G
265 [-]: GETTABLE  R5 R6 K46    ; R5 := R6["UITextures_OrokinTower"]
266 [-]: JMP       303          ; PC := 303
267 [-]: GETGLOBAL R6 K14       ; R6 := string
268 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
269 [-]: MOVE      R7 R4        ; R7 := R4
270 [-]: LOADK     R8 K47       ; R8 := "Space/"
271 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
272 [-]: TEST      R6 0         ; if not R6 then PC := 277
273 [-]: JMP       277          ; PC := 277
274 [-]: GETGLOBAL R6 K8        ; R6 := _G
275 [-]: GETTABLE  R5 R6 K48    ; R5 := R6["UITextures_ArchwingFreeFlight"]
276 [-]: JMP       303          ; PC := 303
277 [-]: GETGLOBAL R6 K14       ; R6 := string
278 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
279 [-]: MOVE      R7 R4        ; R7 := R4
280 [-]: LOADK     R8 K49       ; R8 := "Fortress"
281 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
282 [-]: TEST      R6 0         ; if not R6 then PC := 287
283 [-]: JMP       287          ; PC := 287
284 [-]: GETGLOBAL R6 K8        ; R6 := _G
285 [-]: GETTABLE  R5 R6 K50    ; R5 := R6["UITextures_GrineerFortress"]
286 [-]: JMP       303          ; PC := 303
287 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
288 [-]: MOVE      R7 R1        ; R7 := R1
289 [-]: CALL      R6 2 2       ; R6 := R6(R7)
290 [-]: TEST      R6 1         ; if R6 then PC := 297
291 [-]: JMP       297          ; PC := 297
292 [-]: GETTABLE  R6 R1 K51    ; R6 := R1["nodeType"]
293 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
294 [-]: GETTABLE  R7 R7 K52    ; R7 := R7["NT_EVENT"]
295 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 299
296 [-]: JMP       299          ; PC := 299
297 [-]: EQ        1 R3 K53     ; if R3 == nil then PC := 303
298 [-]: JMP       303          ; PC := 303
299 [-]: GETUPVAL  R6 U0        ; R6 := U0
300 [-]: GETTABLE  R7 R1 K54    ; R7 := R1["name"]
301 [-]: CALL      R6 2 2       ; R6 := R6(R7)
302 [-]: MOVE      R5 R6        ; R5 := R6
303 [-]: RETURN    R5 2         ; return R5
304 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 3415
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 3419
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["levelOverride"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x9FAED6BC
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["levelOverride"]
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1B252E3C"]
  9 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 10 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 11 [-]: EQ        1 R1 K4      ; if R1 == "/Lotus/Levels/Proc/Orokin/OrokinMoonSpy" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["forceAllyFaction"]
 16 [-]: TEST      R2 1         ; if R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: TEST      R1 0         ; if not R1 then PC := 56
 19 [-]: JMP       56           ; PC := 56
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["invasionAllyFaction"]
 21 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 22 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["FC_OROKIN"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: TEST      R1 0         ; if not R1 then PC := 37
 26 [-]: JMP       37           ; PC := 37
 27 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["faction"]
 28 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 29 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["FC_GRINEER"]
 30 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 33 [-]: GETTABLE  R2 R3 K11    ; R2 := R3["FC_CORPUS"]
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 36 [-]: GETTABLE  R2 R3 K10    ; R2 := R3["FC_GRINEER"]
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["faction"]
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: GETGLOBAL R5 K12       ; R5 := string
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["0x639C642A"]
 45 [-]: MOVE      R6 R3        ; R6 := R3
 46 [-]: LOADK     R7 K14       ; R7 := " "
 47 [-]: GETGLOBAL R8 K15       ; R8 := 0xE6DC43B0
 48 [-]: LOADK     R9 K16       ; R9 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
 49 [-]: LOADNIL   R10 R10      ; R10 := nil
 50 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 51 [-]: LOADK     R9 K14       ; R9 := " "
 52 [-]: MOVE      R10 R4       ; R10 := R4
 53 [-]: CONCAT    R6 R6 R10    ; R6 := R6 .. R7 .. R8 .. R9 .. R10
 54 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 55 [-]: RETURN    R5 2         ; return R5
 56 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 3440
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 3444
; #Upvalues:       9
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  56

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: CALL      R3 1 2       ; R3 := R3()
  3 [-]: GETTABLE  R4 R3 K0     ; R4 := R3["mMovie"]
  4 [-]: LOADNIL   R5 R5        ; R5 := nil
  5 [-]: GETUPVAL  R6 U1        ; R6 := U1
  6 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["name"]
  7 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  8 [-]: GETUPVAL  R7 U2        ; R7 := U2
  9 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["name"]
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: LOADNIL   R8 R12       ; R8 := R9 := R10 := R11 := R12 := nil
 12 [-]: GETGLOBAL R13 K2       ; R13 := 0x9FAED6BC
 13 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["name"]
 14 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 15 [-]: MOVE      R14 R0       ; R14 := R0
 16 [-]: LOADNIL   R15 R15      ; R15 := nil
 17 [-]: GETGLOBAL R16 K3       ; R16 := 0x400E7765
 18 [-]: MOVE      R17 R0       ; R17 := R0
 19 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 20 [-]: TEST      R16 1        ; if R16 then PC := 36
 21 [-]: JMP       36           ; PC := 36
 22 [-]: GETGLOBAL R16 K3       ; R16 := 0x400E7765
 23 [-]: GETTABLE  R17 R0 K4    ; R17 := R0["radialSector"]
 24 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 25 [-]: TEST      R16 1        ; if R16 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETGLOBAL R16 K3       ; R16 := 0x400E7765
 28 [-]: GETTABLE  R17 R0 K4    ; R17 := R0["radialSector"]
 29 [-]: GETTABLE  R17 R17 K5   ; R17 := R17["keyChain"]
 30 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 31 [-]: TEST      R16 1        ; if R16 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: MOVE      R14 R1       ; R14 := R1
 34 [-]: GETTABLE  R16 R0 K4    ; R16 := R0["radialSector"]
 35 [-]: GETTABLE  R15 R16 K5   ; R15 := R16["keyChain"]
 36 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["reconstructionProgress"]
 37 [-]: TEST      R16 0        ; if not R16 then PC := 61
 38 [-]: JMP       61           ; PC := 61
 39 [-]: LOADNIL   R16 R16      ; R16 := nil
 40 [-]: GETGLOBAL R17 K7       ; R17 := _T
 41 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["CachedConstructionProjects"]
 42 [-]: LOADK     R18 K9       ; R18 := 1
 43 [-]: LEN       R19 R17      ; R19 := # R17
 44 [-]: LOADK     R20 K9       ; R20 := 1
 45 [-]: FORPREP   R18 54       ; R18 -= R20; PC := 54
 46 [-]: GETTABLE  R22 R17 R21  ; R22 := R17[R21]
 47 [-]: GETTABLE  R23 R22 K10  ; R23 := R22["info"]
 48 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["mNode"]
 49 [-]: GETTABLE  R24 R0 K1    ; R24 := R0["name"]
 50 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R16 R22      ; R16 := R22
 53 [-]: JMP       55           ; PC := 55
 54 [-]: FORLOOP   R18 46       ; R18 += R20; if R18 <= R19 then begin PC := 46; R21 := R18 end
 55 [-]: TEST      R16 0        ; if not R16 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETTABLE  R24 R0 K6    ; R24 := R0["reconstructionProgress"]
 58 [-]: EQ        1 R24 K9     ; if R24 == 1 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADNIL   R7 R7        ; R7 := nil
 61 [-]: GETTABLE  R24 R0 K12   ; R24 := R0["locked"]
 62 [-]: MOVE      R24 R24      ; R24 := R24
 63 [-]: TEST      R14 0        ; if not R14 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: MOVE      R5 R1        ; R5 := R1
 66 [-]: JMP       245          ; PC := 245
 67 [-]: TEST      R24 0        ; if not R24 then PC := 98
 68 [-]: JMP       98           ; PC := 98
 69 [-]: GETGLOBAL R25 K3       ; R25 := 0x400E7765
 70 [-]: MOVE      R26 R6       ; R26 := R6
 71 [-]: CALL      R25 2 2      ; R25 := R25(R26)
 72 [-]: TEST      R25 1        ; if R25 then PC := 98
 73 [-]: JMP       98           ; PC := 98
 74 [-]: MOVE      R5 R6        ; R5 := R6
 75 [-]: GETGLOBAL R25 K7       ; R25 := _T
 76 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["CachedAlerts"]
 77 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
 78 [-]: TEST      R25 0        ; if not R25 then PC := 245
 79 [-]: JMP       245          ; PC := 245
 80 [-]: GETGLOBAL R25 K7       ; R25 := _T
 81 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["CachedAlerts"]
 82 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
 83 [-]: GETTABLE  R25 R25 K14  ; R25 := R25["mVisible"]
 84 [-]: TEST      R25 0        ; if not R25 then PC := 245
 85 [-]: JMP       245          ; PC := 245
 86 [-]: GETGLOBAL R25 K7       ; R25 := _T
 87 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["CachedAlerts"]
 88 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
 89 [-]: GETTABLE  R25 R25 K15  ; R25 := R25["mAlertInfo"]
 90 [-]: GETTABLE  R25 R25 K16  ; R25 := R25["mTag"]
 91 [-]: GETUPVAL  R26 U3       ; R26 := U3
 92 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 245
 93 [-]: JMP       245          ; PC := 245
 94 [-]: GETGLOBAL R25 K18      ; R25 := _G
 95 [-]: GETTABLE  R25 R25 K19  ; R25 := R25["UITexture_Darvo"]
 96 [-]: SETTABLE  R5 K17 R25   ; R5["icon"] := R25
 97 [-]: JMP       245          ; PC := 245
 98 [-]: TEST      R7 0         ; if not R7 then PC := 102
 99 [-]: JMP       102          ; PC := 102
100 [-]: GETTABLE  R5 R7 K20    ; R5 := R7["mMissionInfo"]
101 [-]: JMP       245          ; PC := 245
102 [-]: TEST      R24 0        ; if not R24 then PC := 133
103 [-]: JMP       133          ; PC := 133
104 [-]: GETGLOBAL R25 K7       ; R25 := _T
105 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["CachedGhostTowerMissions"]
106 [-]: TEST      R25 0        ; if not R25 then PC := 133
107 [-]: JMP       133          ; PC := 133
108 [-]: GETGLOBAL R25 K7       ; R25 := _T
109 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["CachedGhostTowerMissions"]
110 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
111 [-]: TEST      R25 0        ; if not R25 then PC := 133
112 [-]: JMP       133          ; PC := 133
113 [-]: GETGLOBAL R25 K7       ; R25 := _T
114 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["CachedGhostTowerMissions"]
115 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
116 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["mUnlocked"]
117 [-]: TEST      R25 0        ; if not R25 then PC := 133
118 [-]: JMP       133          ; PC := 133
119 [-]: GETGLOBAL R25 K7       ; R25 := _T
120 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["CachedGhostTowerMissions"]
121 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
122 [-]: GETTABLE  R25 R25 K23  ; R25 := R25["mShowInStarChart"]
123 [-]: TEST      R25 0        ; if not R25 then PC := 133
124 [-]: JMP       133          ; PC := 133
125 [-]: GETGLOBAL R25 K7       ; R25 := _T
126 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["CachedGhostTowerMissions"]
127 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
128 [-]: GETTABLE  R5 R25 K20   ; R5 := R25["mMissionInfo"]
129 [-]: GETGLOBAL R25 K7       ; R25 := _T
130 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["CachedGhostTowerMissions"]
131 [-]: GETTABLE  R11 R25 R13  ; R11 := R25[R13]
132 [-]: JMP       245          ; PC := 245
133 [-]: TEST      R24 0        ; if not R24 then PC := 154
134 [-]: JMP       154          ; PC := 154
135 [-]: GETGLOBAL R25 K7       ; R25 := _T
136 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["CachedSyndicateMissions"]
137 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
138 [-]: TEST      R25 0        ; if not R25 then PC := 154
139 [-]: JMP       154          ; PC := 154
140 [-]: GETGLOBAL R25 K7       ; R25 := _T
141 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["CachedSyndicateMissions"]
142 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
143 [-]: GETTABLE  R25 R25 K14  ; R25 := R25["mVisible"]
144 [-]: TEST      R25 0        ; if not R25 then PC := 154
145 [-]: JMP       154          ; PC := 154
146 [-]: GETGLOBAL R25 K7       ; R25 := _T
147 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["CachedSyndicateMissions"]
148 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
149 [-]: GETTABLE  R5 R25 K20   ; R5 := R25["mMissionInfo"]
150 [-]: GETGLOBAL R25 K7       ; R25 := _T
151 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["CachedSyndicateMissions"]
152 [-]: GETTABLE  R8 R25 R13   ; R8 := R25[R13]
153 [-]: JMP       245          ; PC := 245
154 [-]: TEST      R24 0        ; if not R24 then PC := 175
155 [-]: JMP       175          ; PC := 175
156 [-]: GETGLOBAL R25 K7       ; R25 := _T
157 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["CachedSortieMissions"]
158 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
159 [-]: TEST      R25 0        ; if not R25 then PC := 175
160 [-]: JMP       175          ; PC := 175
161 [-]: GETGLOBAL R25 K7       ; R25 := _T
162 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["CachedSortieMissions"]
163 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
164 [-]: GETTABLE  R25 R25 K23  ; R25 := R25["mShowInStarChart"]
165 [-]: TEST      R25 0        ; if not R25 then PC := 175
166 [-]: JMP       175          ; PC := 175
167 [-]: GETGLOBAL R25 K7       ; R25 := _T
168 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["CachedSortieMissions"]
169 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
170 [-]: GETTABLE  R5 R25 K20   ; R5 := R25["mMissionInfo"]
171 [-]: GETGLOBAL R25 K7       ; R25 := _T
172 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["CachedSortieMissions"]
173 [-]: GETTABLE  R9 R25 R13   ; R9 := R25[R13]
174 [-]: JMP       245          ; PC := 245
175 [-]: TEST      R24 0        ; if not R24 then PC := 194
176 [-]: JMP       194          ; PC := 194
177 [-]: GETGLOBAL R25 K7       ; R25 := _T
178 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["CachedInvasionInfo"]
179 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
180 [-]: TEST      R25 0        ; if not R25 then PC := 194
181 [-]: JMP       194          ; PC := 194
182 [-]: GETGLOBAL R25 K7       ; R25 := _T
183 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["CachedInvasionInfo"]
184 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
185 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["mEventTag"]
186 [-]: GETGLOBAL R26 K28      ; R26 := EMPTY_SYMBOL
187 [-]: EQ        1 R25 R26    ; if R25 == R26 then PC := 194
188 [-]: JMP       194          ; PC := 194
189 [-]: GETGLOBAL R25 K7       ; R25 := _T
190 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["CachedInvasionInfo"]
191 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
192 [-]: GETTABLE  R5 R25 K29   ; R5 := R25["mAttackerMissionInfo"]
193 [-]: JMP       245          ; PC := 245
194 [-]: TEST      R24 0        ; if not R24 then PC := 213
195 [-]: JMP       213          ; PC := 213
196 [-]: GETGLOBAL R25 K7       ; R25 := _T
197 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["CachedActiveMissions"]
198 [-]: TEST      R25 0        ; if not R25 then PC := 213
199 [-]: JMP       213          ; PC := 213
200 [-]: GETGLOBAL R25 K7       ; R25 := _T
201 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["CachedActiveMissions"]
202 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
203 [-]: TEST      R25 0        ; if not R25 then PC := 213
204 [-]: JMP       213          ; PC := 213
205 [-]: GETGLOBAL R25 K7       ; R25 := _T
206 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["CachedActiveMissions"]
207 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
208 [-]: GETTABLE  R5 R25 K20   ; R5 := R25["mMissionInfo"]
209 [-]: GETGLOBAL R25 K7       ; R25 := _T
210 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["CachedActiveMissions"]
211 [-]: GETTABLE  R10 R25 R13  ; R10 := R25[R13]
212 [-]: JMP       245          ; PC := 245
213 [-]: TEST      R24 0        ; if not R24 then PC := 244
214 [-]: JMP       244          ; PC := 244
215 [-]: GETGLOBAL R25 K7       ; R25 := _T
216 [-]: GETTABLE  R25 R25 K31  ; R25 := R25["CachedEliteAlertMissions"]
217 [-]: TEST      R25 0        ; if not R25 then PC := 244
218 [-]: JMP       244          ; PC := 244
219 [-]: GETGLOBAL R25 K7       ; R25 := _T
220 [-]: GETTABLE  R25 R25 K31  ; R25 := R25["CachedEliteAlertMissions"]
221 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
222 [-]: TEST      R25 0        ; if not R25 then PC := 244
223 [-]: JMP       244          ; PC := 244
224 [-]: GETGLOBAL R25 K7       ; R25 := _T
225 [-]: GETTABLE  R25 R25 K31  ; R25 := R25["CachedEliteAlertMissions"]
226 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
227 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["mUnlocked"]
228 [-]: TEST      R25 0        ; if not R25 then PC := 244
229 [-]: JMP       244          ; PC := 244
230 [-]: GETGLOBAL R25 K7       ; R25 := _T
231 [-]: GETTABLE  R25 R25 K31  ; R25 := R25["CachedEliteAlertMissions"]
232 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
233 [-]: GETTABLE  R25 R25 K23  ; R25 := R25["mShowInStarChart"]
234 [-]: TEST      R25 0        ; if not R25 then PC := 244
235 [-]: JMP       244          ; PC := 244
236 [-]: GETGLOBAL R25 K7       ; R25 := _T
237 [-]: GETTABLE  R25 R25 K31  ; R25 := R25["CachedEliteAlertMissions"]
238 [-]: GETTABLE  R25 R25 R13  ; R25 := R25[R13]
239 [-]: GETTABLE  R5 R25 K20   ; R5 := R25["mMissionInfo"]
240 [-]: GETGLOBAL R25 K7       ; R25 := _T
241 [-]: GETTABLE  R25 R25 K31  ; R25 := R25["CachedEliteAlertMissions"]
242 [-]: GETTABLE  R12 R25 R13  ; R12 := R25[R13]
243 [-]: JMP       245          ; PC := 245
244 [-]: MOVE      R5 R1        ; R5 := R1
245 [-]: GETUPVAL  R25 U4       ; R25 := U4
246 [-]: MOVE      R26 R5       ; R26 := R5
247 [-]: CALL      R25 2 3      ; R25,R26 := R25(R26)
248 [-]: SELF      R27 R4 K32   ; R28 := R4; R27 := R4["0x5DB0BD4"]
249 [-]: LOADK     R29 K33      ; R29 := "/Lotus/Language/Game/MissionName_"
250 [-]: MOVE      R30 R25      ; R30 := R25
251 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
252 [-]: MOVE      R30 R0       ; R30 := R0
253 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
254 [-]: TEST      R26 0        ; if not R26 then PC := 265
255 [-]: JMP       265          ; PC := 265
256 [-]: MOVE      R28 R27      ; R28 := R27
257 [-]: LOADK     R29 K34      ; R29 := " "
258 [-]: SELF      R30 R4 K32   ; R31 := R4; R30 := R4["0x5DB0BD4"]
259 [-]: LOADK     R32 K33      ; R32 := "/Lotus/Language/Game/MissionName_"
260 [-]: MOVE      R33 R26      ; R33 := R26
261 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
262 [-]: MOVE      R33 R0       ; R33 := R0
263 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
264 [-]: CONCAT    R27 R28 R30  ; R27 := R28 .. R29 .. R30
265 [-]: LOADNIL   R28 R28      ; R28 := nil
266 [-]: TEST      R14 1        ; if R14 then PC := 277
267 [-]: JMP       277          ; PC := 277
268 [-]: GETGLOBAL R29 K3       ; R29 := 0x400E7765
269 [-]: MOVE      R30 R6       ; R30 := R6
270 [-]: CALL      R29 2 2      ; R29 := R29(R30)
271 [-]: TEST      R29 0        ; if not R29 then PC := 277
272 [-]: JMP       277          ; PC := 277
273 [-]: GETUPVAL  R29 U5       ; R29 := U5
274 [-]: GETTABLE  R30 R0 K1    ; R30 := R0["name"]
275 [-]: CALL      R29 2 2      ; R29 := R29(R30)
276 [-]: MOVE      R28 R29      ; R28 := R29
277 [-]: LOADK     R29 K9       ; R29 := 1
278 [-]: GETTABLE  R30 R5 K17   ; R30 := R5["icon"]
279 [-]: LOADK     R31 K35      ; R31 := ""
280 [-]: GETTABLE  R32 R5 K36   ; R32 := R5["descText"]
281 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x5EC7A3D2"]
282 [-]: CALL      R32 2 2      ; R32 := R32(R33)
283 [-]: GETTABLE  R33 R5 K38   ; R33 := R5["difficulty"]
284 [-]: GETTABLE  R34 R5 K39   ; R34 := R5["minEnemyLevel"]
285 [-]: GETTABLE  R35 R5 K40   ; R35 := R5["maxEnemyLevel"]
286 [-]: GETTABLE  R36 R5 K41   ; R36 := R5["uniqueName"]
287 [-]: GETTABLE  R37 R5 K42   ; R37 := R5["rarity"]
288 [-]: GETTABLE  R38 R5 K43   ; R38 := R5["tag"]
289 [-]: LOADNIL   R39 R39      ; R39 := nil
290 [-]: GETTABLE  R40 R0 K44   ; R40 := R0["nodeType"]
291 [-]: GETGLOBAL R41 K45      ; R41 := Lotus_Game
292 [-]: GETTABLE  R41 R41 K46  ; R41 := R41["NT_HUB"]
293 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 296
294 [-]: JMP       296          ; PC := 296
295 [-]: MOVE      R40 R0       ; R40 := R0
296 [-]: MOVE      R40 R1       ; R40 := R1
297 [-]: GETGLOBAL R41 K47      ; R41 := string
298 [-]: GETTABLE  R41 R41 K48  ; R41 := R41["0xDE44F664"]
299 [-]: GETGLOBAL R42 K2       ; R42 := 0x9FAED6BC
300 [-]: GETTABLE  R43 R0 K1    ; R43 := R0["name"]
301 [-]: CALL      R42 2 2      ; R42 := R42(R43)
302 [-]: LOADK     R43 K49      ; R43 := "Dojo"
303 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
304 [-]: EQ        0 R41 K50    ; if R41 ~= nil then PC := 307
305 [-]: JMP       307          ; PC := 307
306 [-]: MOVE      R41 R0       ; R41 := R0
307 [-]: MOVE      R41 R1       ; R41 := R1
308 [-]: TEST      R14 0        ; if not R14 then PC := 319
309 [-]: JMP       319          ; PC := 319
310 [-]: GETGLOBAL R42 K47      ; R42 := string
311 [-]: GETTABLE  R42 R42 K51  ; R42 := R42["0x639C642A"]
312 [-]: SELF      R43 R5 K52   ; R44 := R5; R43 := R5["0xEFC448EC"]
313 [-]: CALL      R43 2 2      ; R43 := R43(R44)
314 [-]: SELF      R43 R43 K37  ; R44 := R43; R43 := R43["0x5EC7A3D2"]
315 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
316 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
317 [-]: MOVE      R31 R42      ; R31 := R42
318 [-]: JMP       657          ; PC := 657
319 [-]: TEST      R40 0        ; if not R40 then PC := 344
320 [-]: JMP       344          ; PC := 344
321 [-]: SELF      R42 R4 K32   ; R43 := R4; R42 := R4["0x5DB0BD4"]
322 [-]: LOADK     R44 K53      ; R44 := "/Lotus/Language/Menu/Chat_HubTitle"
323 [-]: MOVE      R45 R0       ; R45 := R0
324 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
325 [-]: MOVE      R27 R42      ; R27 := R42
326 [-]: SELF      R42 R4 K32   ; R43 := R4; R42 := R4["0x5DB0BD4"]
327 [-]: LOADK     R44 K54      ; R44 := "/Lotus/Language/Bosses/Tenno"
328 [-]: MOVE      R45 R0       ; R45 := R0
329 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
330 [-]: MOVE      R31 R42      ; R31 := R42
331 [-]: GETGLOBAL R42 K18      ; R42 := _G
332 [-]: GETTABLE  R30 R42 K55  ; R30 := R42["UITexture_Hub"]
333 [-]: GETGLOBAL R42 K47      ; R42 := string
334 [-]: GETTABLE  R42 R42 K51  ; R42 := R42["0x639C642A"]
335 [-]: MOVE      R43 R27      ; R43 := R27
336 [-]: CALL      R42 2 2      ; R42 := R42(R43)
337 [-]: MOVE      R27 R42      ; R27 := R42
338 [-]: GETGLOBAL R42 K47      ; R42 := string
339 [-]: GETTABLE  R42 R42 K51  ; R42 := R42["0x639C642A"]
340 [-]: MOVE      R43 R31      ; R43 := R31
341 [-]: CALL      R42 2 2      ; R42 := R42(R43)
342 [-]: MOVE      R31 R42      ; R31 := R42
343 [-]: JMP       657          ; PC := 657
344 [-]: TEST      R41 0        ; if not R41 then PC := 368
345 [-]: JMP       368          ; PC := 368
346 [-]: GETGLOBAL R42 K56      ; R42 := gGameData
347 [-]: SELF      R43 R4 K32   ; R44 := R4; R43 := R4["0x5DB0BD4"]
348 [-]: LOADK     R45 K57      ; R45 := "/Lotus/Language/Clan/Clan_DOJO"
349 [-]: MOVE      R46 R0       ; R46 := R0
350 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
351 [-]: MOVE      R27 R43      ; R27 := R43
352 [-]: SELF      R43 R42 K58  ; R44 := R42; R43 := R42["0x6D176768"]
353 [-]: CALL      R43 2 2      ; R43 := R43(R44)
354 [-]: MOVE      R31 R43      ; R31 := R43
355 [-]: GETGLOBAL R43 K18      ; R43 := _G
356 [-]: GETTABLE  R30 R43 K59  ; R30 := R43["UITexture_DefaultClan"]
357 [-]: GETGLOBAL R43 K47      ; R43 := string
358 [-]: GETTABLE  R43 R43 K51  ; R43 := R43["0x639C642A"]
359 [-]: MOVE      R44 R27      ; R44 := R27
360 [-]: CALL      R43 2 2      ; R43 := R43(R44)
361 [-]: MOVE      R27 R43      ; R27 := R43
362 [-]: GETGLOBAL R43 K47      ; R43 := string
363 [-]: GETTABLE  R43 R43 K51  ; R43 := R43["0x639C642A"]
364 [-]: MOVE      R44 R31      ; R44 := R31
365 [-]: CALL      R43 2 2      ; R43 := R43(R44)
366 [-]: MOVE      R31 R43      ; R31 := R43
367 [-]: JMP       657          ; PC := 657
368 [-]: GETTABLE  R43 R0 K44   ; R43 := R0["nodeType"]
369 [-]: GETGLOBAL R44 K45      ; R44 := Lotus_Game
370 [-]: GETTABLE  R44 R44 K60  ; R44 := R44["NT_PVP"]
371 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 391
372 [-]: JMP       391          ; PC := 391
373 [-]: SELF      R43 R4 K32   ; R44 := R4; R43 := R4["0x5DB0BD4"]
374 [-]: LOADK     R45 K61      ; R45 := "/Lotus/Language/Menu/MissionIntro_PVP"
375 [-]: MOVE      R46 R0       ; R46 := R0
376 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
377 [-]: MOVE      R27 R43      ; R27 := R43
378 [-]: SELF      R43 R4 K32   ; R44 := R4; R43 := R4["0x5DB0BD4"]
379 [-]: LOADK     R45 K62      ; R45 := "/Lotus/Language/Menu/Codex_Tenno"
380 [-]: MOVE      R46 R0       ; R46 := R0
381 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
382 [-]: MOVE      R31 R43      ; R31 := R43
383 [-]: GETGLOBAL R43 K18      ; R43 := _G
384 [-]: GETTABLE  R30 R43 K63  ; R30 := R43["UITexture_Pvp"]
385 [-]: GETGLOBAL R43 K47      ; R43 := string
386 [-]: GETTABLE  R43 R43 K51  ; R43 := R43["0x639C642A"]
387 [-]: MOVE      R44 R31      ; R44 := R31
388 [-]: CALL      R43 2 2      ; R43 := R43(R44)
389 [-]: MOVE      R31 R43      ; R31 := R43
390 [-]: JMP       657          ; PC := 657
391 [-]: EQ        1 R28 K50    ; if R28 == nil then PC := 471
392 [-]: JMP       471          ; PC := 471
393 [-]: GETTABLE  R43 R28 K64  ; R43 := R28["mFaction"]
394 [-]: GETGLOBAL R44 K45      ; R44 := Lotus_Game
395 [-]: GETTABLE  R44 R44 K65  ; R44 := R44["FC_INFESTATION"]
396 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 410
397 [-]: JMP       410          ; PC := 410
398 [-]: GETUPVAL  R43 U4       ; R43 := U4
399 [-]: GETTABLE  R44 R28 K66  ; R44 := R28["mDefenderMissionInfo"]
400 [-]: CALL      R43 2 2      ; R43 := R43(R44)
401 [-]: MOVE      R25 R43      ; R25 := R43
402 [-]: SELF      R43 R4 K32   ; R44 := R4; R43 := R4["0x5DB0BD4"]
403 [-]: LOADK     R45 K33      ; R45 := "/Lotus/Language/Game/MissionName_"
404 [-]: MOVE      R46 R25      ; R46 := R25
405 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
406 [-]: MOVE      R46 R0       ; R46 := R0
407 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
408 [-]: MOVE      R27 R43      ; R27 := R43
409 [-]: JMP       419          ; PC := 419
410 [-]: GETTABLE  R43 R28 K27  ; R43 := R28["mEventTag"]
411 [-]: GETGLOBAL R44 K28      ; R44 := EMPTY_SYMBOL
412 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 419
413 [-]: JMP       419          ; PC := 419
414 [-]: SELF      R43 R4 K32   ; R44 := R4; R43 := R4["0x5DB0BD4"]
415 [-]: LOADK     R45 K67      ; R45 := "/Lotus/Language/Menu/MissionIntro_Invasion"
416 [-]: MOVE      R46 R0       ; R46 := R0
417 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
418 [-]: MOVE      R27 R43      ; R27 := R43
419 [-]: GETTABLE  R43 R28 K66  ; R43 := R28["mDefenderMissionInfo"]
420 [-]: SELF      R43 R43 K52  ; R44 := R43; R43 := R43["0xEFC448EC"]
421 [-]: CALL      R43 2 2      ; R43 := R43(R44)
422 [-]: SELF      R43 R43 K37  ; R44 := R43; R43 := R43["0x5EC7A3D2"]
423 [-]: CALL      R43 2 2      ; R43 := R43(R44)
424 [-]: MOVE      R31 R43      ; R31 := R43
425 [-]: GETGLOBAL R43 K18      ; R43 := _G
426 [-]: GETTABLE  R30 R43 K68  ; R30 := R43["UITexture_Invasion"]
427 [-]: GETGLOBAL R43 K47      ; R43 := string
428 [-]: GETTABLE  R43 R43 K51  ; R43 := R43["0x639C642A"]
429 [-]: MOVE      R44 R31      ; R44 := R31
430 [-]: CALL      R43 2 2      ; R43 := R43(R44)
431 [-]: MOVE      R31 R43      ; R31 := R43
432 [-]: LOADK     R36 K35      ; R36 := ""
433 [-]: GETTABLE  R43 R28 K29  ; R43 := R28["mAttackerMissionInfo"]
434 [-]: GETTABLE  R34 R43 K39  ; R34 := R43["minEnemyLevel"]
435 [-]: GETTABLE  R43 R28 K29  ; R43 := R28["mAttackerMissionInfo"]
436 [-]: GETTABLE  R35 R43 K40  ; R35 := R43["maxEnemyLevel"]
437 [-]: GETGLOBAL R43 K3       ; R43 := 0x400E7765
438 [-]: MOVE      R44 R2       ; R44 := R2
439 [-]: CALL      R43 2 2      ; R43 := R43(R44)
440 [-]: TEST      R43 1        ; if R43 then PC := 657
441 [-]: JMP       657          ; PC := 657
442 [-]: GETGLOBAL R43 K3       ; R43 := 0x400E7765
443 [-]: GETTABLE  R44 R28 K66  ; R44 := R28["mDefenderMissionInfo"]
444 [-]: GETTABLE  R44 R44 K69  ; R44 := R44["vipAgent"]
445 [-]: CALL      R43 2 2      ; R43 := R43(R44)
446 [-]: TEST      R43 1        ; if R43 then PC := 657
447 [-]: JMP       657          ; PC := 657
448 [-]: GETTABLE  R43 R28 K27  ; R43 := R28["mEventTag"]
449 [-]: GETGLOBAL R44 K28      ; R44 := EMPTY_SYMBOL
450 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 657
451 [-]: JMP       657          ; PC := 657
452 [-]: SELF      R43 R2 K70   ; R44 := R2; R43 := R2["0xF37AEF8E"]
453 [-]: GETTABLE  R45 R28 K66  ; R45 := R28["mDefenderMissionInfo"]
454 [-]: GETTABLE  R45 R45 K69  ; R45 := R45["vipAgent"]
455 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
456 [-]: MOVE      R39 R43      ; R39 := R43
457 [-]: GETTABLE  R43 R39 K71  ; R43 := R39["locName"]
458 [-]: GETGLOBAL R44 K28      ; R44 := EMPTY_SYMBOL
459 [-]: EQ        1 R43 R44    ; if R43 == R44 then PC := 657
460 [-]: JMP       657          ; PC := 657
461 [-]: SELF      R43 R4 K32   ; R44 := R4; R43 := R4["0x5DB0BD4"]
462 [-]: GETTABLE  R45 R39 K71  ; R45 := R39["locName"]
463 [-]: SELF      R45 R45 K37  ; R46 := R45; R45 := R45["0x5EC7A3D2"]
464 [-]: CALL      R45 2 2      ; R45 := R45(R46)
465 [-]: MOVE      R46 R0       ; R46 := R0
466 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
467 [-]: MOVE      R31 R43      ; R31 := R43
468 [-]: GETTABLE  R30 R39 K17  ; R30 := R39["icon"]
469 [-]: LOADK     R36 K35      ; R36 := ""
470 [-]: JMP       657          ; PC := 657
471 [-]: EQ        1 R7 K50     ; if R7 == nil then PC := 562
472 [-]: JMP       562          ; PC := 562
473 [-]: GETGLOBAL R43 K3       ; R43 := 0x400E7765
474 [-]: GETTABLE  R44 R7 K72   ; R44 := R7["mMissionKeyName"]
475 [-]: CALL      R43 2 2      ; R43 := R43(R44)
476 [-]: TEST      R43 1        ; if R43 then PC := 532
477 [-]: JMP       532          ; PC := 532
478 [-]: GETGLOBAL R43 K73      ; R43 := 0x7C282057
479 [-]: GETTABLE  R44 R7 K72   ; R44 := R7["mMissionKeyName"]
480 [-]: CALL      R43 2 2      ; R43 := R43(R44)
481 [-]: GETGLOBAL R44 K3       ; R44 := 0x400E7765
482 [-]: MOVE      R45 R43      ; R45 := R43
483 [-]: CALL      R44 2 2      ; R44 := R44(R45)
484 [-]: TEST      R44 1        ; if R44 then PC := 537
485 [-]: JMP       537          ; PC := 537
486 [-]: SELF      R44 R43 K74  ; R45 := R43; R44 := R43["0xB8637349"]
487 [-]: CALL      R44 2 2      ; R44 := R44(R45)
488 [-]: MOVE      R5 R44       ; R5 := R44
489 [-]: GETTABLE  R44 R7 K20   ; R44 := R7["mMissionInfo"]
490 [-]: GETTABLE  R44 R44 K39  ; R44 := R44["minEnemyLevel"]
491 [-]: LT        0 K9 R44     ; if 1 >= R44 then PC := 496
492 [-]: JMP       496          ; PC := 496
493 [-]: GETTABLE  R44 R7 K20   ; R44 := R7["mMissionInfo"]
494 [-]: GETTABLE  R44 R44 K39  ; R44 := R44["minEnemyLevel"]
495 [-]: SETTABLE  R5 K39 R44   ; R5["minEnemyLevel"] := R44
496 [-]: GETTABLE  R44 R7 K20   ; R44 := R7["mMissionInfo"]
497 [-]: GETTABLE  R44 R44 K40  ; R44 := R44["maxEnemyLevel"]
498 [-]: LT        0 K9 R44     ; if 1 >= R44 then PC := 503
499 [-]: JMP       503          ; PC := 503
500 [-]: GETTABLE  R44 R7 K20   ; R44 := R7["mMissionInfo"]
501 [-]: GETTABLE  R44 R44 K40  ; R44 := R44["maxEnemyLevel"]
502 [-]: SETTABLE  R5 K40 R44   ; R5["maxEnemyLevel"] := R44
503 [-]: GETGLOBAL R44 K3       ; R44 := 0x400E7765
504 [-]: GETTABLE  R45 R7 K20   ; R45 := R7["mMissionInfo"]
505 [-]: GETTABLE  R45 R45 K75  ; R45 := R45["enemySpec"]
506 [-]: CALL      R44 2 2      ; R44 := R44(R45)
507 [-]: TEST      R44 1        ; if R44 then PC := 512
508 [-]: JMP       512          ; PC := 512
509 [-]: GETTABLE  R44 R7 K20   ; R44 := R7["mMissionInfo"]
510 [-]: GETTABLE  R44 R44 K75  ; R44 := R44["enemySpec"]
511 [-]: SETTABLE  R5 K75 R44   ; R5["enemySpec"] := R44
512 [-]: GETTABLE  R34 R5 K39   ; R34 := R5["minEnemyLevel"]
513 [-]: GETTABLE  R35 R5 K40   ; R35 := R5["maxEnemyLevel"]
514 [-]: SELF      R44 R5 K52   ; R45 := R5; R44 := R5["0xEFC448EC"]
515 [-]: CALL      R44 2 2      ; R44 := R44(R45)
516 [-]: SELF      R44 R44 K37  ; R45 := R44; R44 := R44["0x5EC7A3D2"]
517 [-]: CALL      R44 2 2      ; R44 := R44(R45)
518 [-]: MOVE      R31 R44      ; R31 := R44
519 [-]: GETUPVAL  R44 U4       ; R44 := U4
520 [-]: MOVE      R45 R5       ; R45 := R5
521 [-]: CALL      R44 2 2      ; R44 := R44(R45)
522 [-]: MOVE      R25 R44      ; R25 := R44
523 [-]: SELF      R44 R4 K32   ; R45 := R4; R44 := R4["0x5DB0BD4"]
524 [-]: LOADK     R46 K33      ; R46 := "/Lotus/Language/Game/MissionName_"
525 [-]: MOVE      R47 R25      ; R47 := R25
526 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
527 [-]: MOVE      R47 R0       ; R47 := R0
528 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
529 [-]: MOVE      R27 R44      ; R27 := R44
530 [-]: LOADK     R36 K35      ; R36 := ""
531 [-]: JMP       537          ; PC := 537
532 [-]: SELF      R44 R4 K32   ; R45 := R4; R44 := R4["0x5DB0BD4"]
533 [-]: GETTABLE  R46 R7 K76   ; R46 := R7["mDesc"]
534 [-]: MOVE      R47 R0       ; R47 := R0
535 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
536 [-]: MOVE      R27 R44      ; R27 := R44
537 [-]: GETGLOBAL R44 K3       ; R44 := 0x400E7765
538 [-]: GETTABLE  R45 R5 K75   ; R45 := R5["enemySpec"]
539 [-]: CALL      R44 2 2      ; R44 := R44(R45)
540 [-]: TEST      R44 1        ; if R44 then PC := 551
541 [-]: JMP       551          ; PC := 551
542 [-]: GETGLOBAL R44 K2       ; R44 := 0x9FAED6BC
543 [-]: GETTABLE  R45 R5 K75   ; R45 := R5["enemySpec"]
544 [-]: SELF      R45 R45 K77  ; R46 := R45; R45 := R45["0x1B252E3C"]
545 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
546 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
547 [-]: EQ        0 R44 K78    ; if R44 ~= "/Lotus/Types/Game/EnemySpecs/GrineerEventSquadM" then PC := 551
548 [-]: JMP       551          ; PC := 551
549 [-]: LOADK     R31 K35      ; R31 := ""
550 [-]: JMP       556          ; PC := 556
551 [-]: SELF      R44 R5 K52   ; R45 := R5; R44 := R5["0xEFC448EC"]
552 [-]: CALL      R44 2 2      ; R44 := R44(R45)
553 [-]: SELF      R44 R44 K37  ; R45 := R44; R44 := R44["0x5EC7A3D2"]
554 [-]: CALL      R44 2 2      ; R44 := R44(R45)
555 [-]: MOVE      R31 R44      ; R31 := R44
556 [-]: GETGLOBAL R44 K47      ; R44 := string
557 [-]: GETTABLE  R44 R44 K51  ; R44 := R44["0x639C642A"]
558 [-]: MOVE      R45 R31      ; R45 := R31
559 [-]: CALL      R44 2 2      ; R44 := R44(R45)
560 [-]: MOVE      R31 R44      ; R31 := R44
561 [-]: JMP       657          ; PC := 657
562 [-]: GETTABLE  R44 R5 K79   ; R44 := R5["missionType"]
563 [-]: GETGLOBAL R45 K45      ; R45 := Lotus_Game
564 [-]: GETTABLE  R45 R45 K80  ; R45 := R45["MT_ASSASSINATION"]
565 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 603
566 [-]: JMP       603          ; PC := 603
567 [-]: GETGLOBAL R44 K3       ; R44 := 0x400E7765
568 [-]: MOVE      R45 R2       ; R45 := R2
569 [-]: CALL      R44 2 2      ; R44 := R44(R45)
570 [-]: TEST      R44 1        ; if R44 then PC := 594
571 [-]: JMP       594          ; PC := 594
572 [-]: GETGLOBAL R44 K3       ; R44 := 0x400E7765
573 [-]: GETTABLE  R45 R5 K69   ; R45 := R5["vipAgent"]
574 [-]: CALL      R44 2 2      ; R44 := R44(R45)
575 [-]: TEST      R44 1        ; if R44 then PC := 594
576 [-]: JMP       594          ; PC := 594
577 [-]: SELF      R44 R2 K70   ; R45 := R2; R44 := R2["0xF37AEF8E"]
578 [-]: GETTABLE  R46 R5 K69   ; R46 := R5["vipAgent"]
579 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
580 [-]: MOVE      R39 R44      ; R39 := R44
581 [-]: GETTABLE  R44 R39 K71  ; R44 := R39["locName"]
582 [-]: GETGLOBAL R45 K28      ; R45 := EMPTY_SYMBOL
583 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 594
584 [-]: JMP       594          ; PC := 594
585 [-]: SELF      R44 R4 K32   ; R45 := R4; R44 := R4["0x5DB0BD4"]
586 [-]: GETTABLE  R46 R39 K71  ; R46 := R39["locName"]
587 [-]: SELF      R46 R46 K37  ; R47 := R46; R46 := R46["0x5EC7A3D2"]
588 [-]: CALL      R46 2 2      ; R46 := R46(R47)
589 [-]: MOVE      R47 R0       ; R47 := R0
590 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
591 [-]: MOVE      R31 R44      ; R31 := R44
592 [-]: GETTABLE  R30 R39 K17  ; R30 := R39["icon"]
593 [-]: LOADK     R36 K35      ; R36 := ""
594 [-]: TEST      R39 1        ; if R39 then PC := 657
595 [-]: JMP       657          ; PC := 657
596 [-]: SELF      R44 R4 K32   ; R45 := R4; R44 := R4["0x5DB0BD4"]
597 [-]: GETTABLE  R46 R5 K41   ; R46 := R5["uniqueName"]
598 [-]: MOVE      R47 R0       ; R47 := R0
599 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
600 [-]: MOVE      R31 R44      ; R31 := R44
601 [-]: GETTABLE  R30 R5 K17   ; R30 := R5["icon"]
602 [-]: JMP       657          ; PC := 657
603 [-]: GETGLOBAL R44 K7       ; R44 := _T
604 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["CachedAlerts"]
605 [-]: GETTABLE  R45 R0 K1    ; R45 := R0["name"]
606 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
607 [-]: TEST      R44 0        ; if not R44 then PC := 641
608 [-]: JMP       641          ; PC := 641
609 [-]: GETGLOBAL R44 K7       ; R44 := _T
610 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["CachedAlerts"]
611 [-]: GETTABLE  R45 R0 K1    ; R45 := R0["name"]
612 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
613 [-]: GETTABLE  R44 R44 K15  ; R44 := R44["mAlertInfo"]
614 [-]: GETTABLE  R44 R44 K16  ; R44 := R44["mTag"]
615 [-]: GETGLOBAL R45 K28      ; R45 := EMPTY_SYMBOL
616 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 641
617 [-]: JMP       641          ; PC := 641
618 [-]: GETGLOBAL R44 K7       ; R44 := _T
619 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["CachedAlerts"]
620 [-]: GETTABLE  R45 R0 K1    ; R45 := R0["name"]
621 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
622 [-]: GETTABLE  R44 R44 K15  ; R44 := R44["mAlertInfo"]
623 [-]: GETTABLE  R44 R44 K20  ; R44 := R44["mMissionInfo"]
624 [-]: GETTABLE  R44 R44 K36  ; R44 := R44["descText"]
625 [-]: GETGLOBAL R45 K28      ; R45 := EMPTY_SYMBOL
626 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 641
627 [-]: JMP       641          ; PC := 641
628 [-]: GETGLOBAL R44 K81      ; R44 := 0xE6DC43B0
629 [-]: GETGLOBAL R45 K2       ; R45 := 0x9FAED6BC
630 [-]: GETGLOBAL R46 K7       ; R46 := _T
631 [-]: GETTABLE  R46 R46 K13  ; R46 := R46["CachedAlerts"]
632 [-]: GETTABLE  R47 R0 K1    ; R47 := R0["name"]
633 [-]: GETTABLE  R46 R46 R47  ; R46 := R46[R47]
634 [-]: GETTABLE  R46 R46 K15  ; R46 := R46["mAlertInfo"]
635 [-]: GETTABLE  R46 R46 K20  ; R46 := R46["mMissionInfo"]
636 [-]: GETTABLE  R46 R46 K36  ; R46 := R46["descText"]
637 [-]: CALL      R45 2 2      ; R45 := R45(R46)
638 [-]: MOVE      R46 R0       ; R46 := R0
639 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
640 [-]: MOVE      R36 R44      ; R36 := R44
641 [-]: SELF      R44 R5 K52   ; R45 := R5; R44 := R5["0xEFC448EC"]
642 [-]: CALL      R44 2 2      ; R44 := R44(R45)
643 [-]: SELF      R44 R44 K37  ; R45 := R44; R44 := R44["0x5EC7A3D2"]
644 [-]: CALL      R44 2 2      ; R44 := R44(R45)
645 [-]: MOVE      R31 R44      ; R31 := R44
646 [-]: GETGLOBAL R44 K3       ; R44 := 0x400E7765
647 [-]: MOVE      R45 R30      ; R45 := R30
648 [-]: CALL      R44 2 2      ; R44 := R44(R45)
649 [-]: TEST      R44 0        ; if not R44 then PC := 652
650 [-]: JMP       652          ; PC := 652
651 [-]: LOADNIL   R30 R30      ; R30 := nil
652 [-]: GETGLOBAL R44 K47      ; R44 := string
653 [-]: GETTABLE  R44 R44 K51  ; R44 := R44["0x639C642A"]
654 [-]: MOVE      R45 R31      ; R45 := R31
655 [-]: CALL      R44 2 2      ; R44 := R44(R45)
656 [-]: MOVE      R31 R44      ; R31 := R44
657 [-]: GETGLOBAL R44 K47      ; R44 := string
658 [-]: GETTABLE  R44 R44 K82  ; R44 := R44["0xC6772A8A"]
659 [-]: MOVE      R45 R36      ; R45 := R36
660 [-]: CALL      R44 2 2      ; R44 := R44(R45)
661 [-]: LT        0 K83 R44    ; if 0 >= R44 then PC := 668
662 [-]: JMP       668          ; PC := 668
663 [-]: SELF      R44 R4 K32   ; R45 := R4; R44 := R4["0x5DB0BD4"]
664 [-]: MOVE      R46 R36      ; R46 := R36
665 [-]: MOVE      R47 R0       ; R47 := R0
666 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
667 [-]: MOVE      R31 R44      ; R31 := R44
668 [-]: GETUPVAL  R44 U6       ; R44 := U6
669 [-]: GETTABLE  R44 R44 K84  ; R44 := R44["0xF81722A2"]
670 [-]: GETGLOBAL R45 K85      ; R45 := Engine
671 [-]: GETTABLE  R45 R45 K86  ; R45 := R45["0xE35E176B"]
672 [-]: CALL      R45 1 2      ; R45 := R45()
673 [-]: LOADK     R46 K35      ; R46 := ""
674 [-]: GETTABLE  R47 R0 K87   ; R47 := R0["founders"]
675 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
676 [-]: LOADNIL   R45 R45      ; R45 := nil
677 [-]: GETGLOBAL R46 K3       ; R46 := 0x400E7765
678 [-]: GETTABLE  R47 R5 K88   ; R47 := R5["levelOverride"]
679 [-]: CALL      R46 2 2      ; R46 := R46(R47)
680 [-]: TEST      R46 1        ; if R46 then PC := 692
681 [-]: JMP       692          ; PC := 692
682 [-]: GETGLOBAL R46 K89      ; R46 := 0x9B21739C
683 [-]: GETTABLE  R47 R5 K90   ; R47 := R5["seed"]
684 [-]: CALL      R46 2 1      ; R46(R47)
685 [-]: GETUPVAL  R46 U7       ; R46 := U7
686 [-]: MOVE      R47 R5       ; R47 := R5
687 [-]: MOVE      R48 R0       ; R48 := R0
688 [-]: MOVE      R49 R39      ; R49 := R39
689 [-]: MOVE      R50 R7       ; R50 := R7
690 [-]: CALL      R46 5 2      ; R46 := R46(R47,R48,R49,R50)
691 [-]: MOVE      R45 R46      ; R45 := R46
692 [-]: LOADNIL   R46 R46      ; R46 := nil
693 [-]: EQ        0 R31 K91    ; if R31 ~= "GRINEER" then PC := 702
694 [-]: JMP       702          ; PC := 702
695 [-]: MOVE      R46 R31      ; R46 := R31
696 [-]: SELF      R47 R4 K32   ; R48 := R4; R47 := R4["0x5DB0BD4"]
697 [-]: LOADK     R49 K92      ; R49 := "/Lotus/Language/Game/Faction_GrineerUC"
698 [-]: MOVE      R50 R0       ; R50 := R0
699 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
700 [-]: MOVE      R31 R47      ; R31 := R47
701 [-]: JMP       750          ; PC := 750
702 [-]: EQ        0 R31 K93    ; if R31 ~= "CORPUS" then PC := 711
703 [-]: JMP       711          ; PC := 711
704 [-]: MOVE      R46 R31      ; R46 := R31
705 [-]: SELF      R47 R4 K32   ; R48 := R4; R47 := R4["0x5DB0BD4"]
706 [-]: LOADK     R49 K94      ; R49 := "/Lotus/Language/Game/Faction_CorpusUC"
707 [-]: MOVE      R50 R0       ; R50 := R0
708 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
709 [-]: MOVE      R31 R47      ; R31 := R47
710 [-]: JMP       750          ; PC := 750
711 [-]: EQ        0 R31 K95    ; if R31 ~= "INFESTATION" then PC := 720
712 [-]: JMP       720          ; PC := 720
713 [-]: MOVE      R46 R31      ; R46 := R31
714 [-]: SELF      R47 R4 K32   ; R48 := R4; R47 := R4["0x5DB0BD4"]
715 [-]: LOADK     R49 K96      ; R49 := "/Lotus/Language/Game/Faction_InfestationUC"
716 [-]: MOVE      R50 R0       ; R50 := R0
717 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
718 [-]: MOVE      R31 R47      ; R31 := R47
719 [-]: JMP       750          ; PC := 750
720 [-]: EQ        0 R31 K97    ; if R31 ~= "WILD" then PC := 728
721 [-]: JMP       728          ; PC := 728
722 [-]: SELF      R47 R4 K32   ; R48 := R4; R47 := R4["0x5DB0BD4"]
723 [-]: LOADK     R49 K98      ; R49 := "/Lotus/Language/Game/Faction_WildUC"
724 [-]: MOVE      R50 R0       ; R50 := R0
725 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
726 [-]: MOVE      R31 R47      ; R31 := R47
727 [-]: JMP       750          ; PC := 750
728 [-]: EQ        0 R31 K99    ; if R31 ~= "OROKIN" then PC := 737
729 [-]: JMP       737          ; PC := 737
730 [-]: MOVE      R46 R31      ; R46 := R31
731 [-]: SELF      R47 R4 K32   ; R48 := R4; R47 := R4["0x5DB0BD4"]
732 [-]: LOADK     R49 K100     ; R49 := "/Lotus/Language/Game/Faction_OrokinUC"
733 [-]: MOVE      R50 R0       ; R50 := R0
734 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
735 [-]: MOVE      R31 R47      ; R31 := R47
736 [-]: JMP       750          ; PC := 750
737 [-]: EQ        0 R31 K101   ; if R31 ~= "REDVEIL" then PC := 745
738 [-]: JMP       745          ; PC := 745
739 [-]: SELF      R47 R4 K32   ; R48 := R4; R47 := R4["0x5DB0BD4"]
740 [-]: LOADK     R49 K102     ; R49 := "/Lotus/Language/Game/Faction_RedVeilUC"
741 [-]: MOVE      R50 R0       ; R50 := R0
742 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
743 [-]: MOVE      R31 R47      ; R31 := R47
744 [-]: JMP       750          ; PC := 750
745 [-]: GETGLOBAL R47 K47      ; R47 := string
746 [-]: GETTABLE  R47 R47 K51  ; R47 := R47["0x639C642A"]
747 [-]: MOVE      R48 R31      ; R48 := R31
748 [-]: CALL      R47 2 2      ; R47 := R47(R48)
749 [-]: MOVE      R31 R47      ; R31 := R47
750 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["radialSector"]
751 [-]: EQ        1 R47 K50    ; if R47 == nil then PC := 773
752 [-]: JMP       773          ; PC := 773
753 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["radialSector"]
754 [-]: GETTABLE  R47 R47 K1   ; R47 := R47["name"]
755 [-]: GETGLOBAL R48 K103     ; R48 := CETUS_NODE_TAG
756 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 760
757 [-]: JMP       760          ; PC := 760
758 [-]: LOADK     R46 K104     ; R46 := "ostron"
759 [-]: JMP       773          ; PC := 773
760 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["radialSector"]
761 [-]: GETTABLE  R47 R47 K1   ; R47 := R47["name"]
762 [-]: GETGLOBAL R48 K105     ; R48 := FORTUNA_NODE_TAG
763 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 767
764 [-]: JMP       767          ; PC := 767
765 [-]: LOADK     R46 K106     ; R46 := "solaris"
766 [-]: JMP       773          ; PC := 773
767 [-]: GETTABLE  R47 R0 K4    ; R47 := R0["radialSector"]
768 [-]: GETTABLE  R47 R47 K1   ; R47 := R47["name"]
769 [-]: GETGLOBAL R48 K107     ; R48 := IRON_WAKE_NODE_TAG
770 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 773
771 [-]: JMP       773          ; PC := 773
772 [-]: LOADK     R46 K108     ; R46 := "tenno"
773 [-]: TEST      R40 1        ; if R40 then PC := 777
774 [-]: JMP       777          ; PC := 777
775 [-]: TEST      R41 0        ; if not R41 then PC := 778
776 [-]: JMP       778          ; PC := 778
777 [-]: LOADK     R46 K108     ; R46 := "tenno"
778 [-]: GETUPVAL  R47 U8       ; R47 := U8
779 [-]: MOVE      R48 R5       ; R48 := R5
780 [-]: CALL      R47 2 2      ; R47 := R47(R48)
781 [-]: TEST      R47 0        ; if not R47 then PC := 784
782 [-]: JMP       784          ; PC := 784
783 [-]: MOVE      R31 R47      ; R31 := R47
784 [-]: GETTABLE  R48 R5 K79   ; R48 := R5["missionType"]
785 [-]: GETGLOBAL R49 K45      ; R49 := Lotus_Game
786 [-]: GETTABLE  R49 R49 K109 ; R49 := R49["MT_RAILJACK"]
787 [-]: EQ        0 R48 R49    ; if R48 ~= R49 then PC := 803
788 [-]: JMP       803          ; PC := 803
789 [-]: SELF      R48 R4 K32   ; R49 := R4; R48 := R4["0x5DB0BD4"]
790 [-]: LOADK     R50 K110     ; R50 := "<RAILJACK>"
791 [-]: MOVE      R51 R1       ; R51 := R1
792 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
793 [-]: LOADK     R49 K34      ; R49 := " "
794 [-]: MOVE      R50 R27      ; R50 := R27
795 [-]: LOADK     R51 K111     ; R51 := " ("
796 [-]: SELF      R52 R4 K32   ; R53 := R4; R52 := R4["0x5DB0BD4"]
797 [-]: LOADK     R54 K112     ; R54 := "/Lotus/Language/Menu/RailjackTitle"
798 [-]: MOVE      R55 R0       ; R55 := R0
799 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
800 [-]: LOADK     R53 K113     ; R53 := ")"
801 [-]: CONCAT    R27 R48 R53  ; R27 := R48 .. R49 .. R50 .. R51 .. R52 .. R53
802 [-]: JMP       836          ; PC := 836
803 [-]: GETTABLE  R48 R5 K114  ; R48 := R5["isSharkwingMission"]
804 [-]: TEST      R48 1        ; if R48 then PC := 823
805 [-]: JMP       823          ; PC := 823
806 [-]: GETTABLE  R48 R5 K115  ; R48 := R5["archwingRequired"]
807 [-]: TEST      R48 0        ; if not R48 then PC := 836
808 [-]: JMP       836          ; PC := 836
809 [-]: SELF      R48 R4 K32   ; R49 := R4; R48 := R4["0x5DB0BD4"]
810 [-]: LOADK     R50 K116     ; R50 := "<ARCHWING>"
811 [-]: MOVE      R51 R1       ; R51 := R1
812 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
813 [-]: LOADK     R49 K34      ; R49 := " "
814 [-]: MOVE      R50 R27      ; R50 := R27
815 [-]: LOADK     R51 K111     ; R51 := " ("
816 [-]: SELF      R52 R4 K32   ; R53 := R4; R52 := R4["0x5DB0BD4"]
817 [-]: LOADK     R54 K117     ; R54 := "/Lotus/Language/Menu/Loadout_Archwing"
818 [-]: MOVE      R55 R0       ; R55 := R0
819 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
820 [-]: LOADK     R53 K113     ; R53 := ")"
821 [-]: CONCAT    R27 R48 R53  ; R27 := R48 .. R49 .. R50 .. R51 .. R52 .. R53
822 [-]: JMP       836          ; PC := 836
823 [-]: SELF      R48 R4 K32   ; R49 := R4; R48 := R4["0x5DB0BD4"]
824 [-]: LOADK     R50 K116     ; R50 := "<ARCHWING>"
825 [-]: MOVE      R51 R1       ; R51 := R1
826 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
827 [-]: LOADK     R49 K34      ; R49 := " "
828 [-]: MOVE      R50 R27      ; R50 := R27
829 [-]: LOADK     R51 K111     ; R51 := " ("
830 [-]: SELF      R52 R4 K32   ; R53 := R4; R52 := R4["0x5DB0BD4"]
831 [-]: LOADK     R54 K118     ; R54 := "/Lotus/Language/Menu/Sharkwing"
832 [-]: MOVE      R55 R0       ; R55 := R0
833 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
834 [-]: LOADK     R53 K113     ; R53 := ")"
835 [-]: CONCAT    R27 R48 R53  ; R27 := R48 .. R49 .. R50 .. R51 .. R52 .. R53
836 [-]: NEWTABLE  R48 0 21     ; R48 := {}
837 [-]: SETTABLE  R48 K119 R5  ; R48["mMission"] := R5
838 [-]: SETTABLE  R48 K120 R44 ; R48["mFounders"] := R44
839 [-]: SETTABLE  R48 K121 R30 ; R48["mTexture"] := R30
840 [-]: SETTABLE  R48 K122 R45 ; R48["mLocationTexture"] := R45
841 [-]: SETTABLE  R48 K15 R6   ; R48["mAlertInfo"] := R6
842 [-]: SETTABLE  R48 K123 R8  ; R48["mSyndicateInfo"] := R8
843 [-]: SETTABLE  R48 K124 R28 ; R48["mInvasionInfo"] := R28
844 [-]: SETTABLE  R48 K125 R7  ; R48["mGoalInfo"] := R7
845 [-]: SETTABLE  R48 K126 R9  ; R48["mSortieInfo"] := R9
846 [-]: SETTABLE  R48 K127 R10 ; R48["mActiveMissionInfo"] := R10
847 [-]: SETTABLE  R48 K128 R11 ; R48["mGhostTowerMissionInfo"] := R11
848 [-]: SETTABLE  R48 K129 R12 ; R48["mEliteAlertMissionInfo"] := R12
849 [-]: SETTABLE  R48 K130 R38 ; R48["mCardTag"] := R38
850 [-]: SETTABLE  R48 K131 R27 ; R48["mName"] := R27
851 [-]: SETTABLE  R48 K132 R37 ; R48["mRarity"] := R37
852 [-]: SETTABLE  R48 K76 R31  ; R48["mDesc"] := R31
853 [-]: SETTABLE  R48 K133 R32 ; R48["mDescText"] := R32
854 [-]: SETTABLE  R48 K134 R36 ; R48["mNameText"] := R36
855 [-]: SETTABLE  R48 K135 R29 ; R48["mNumMissions"] := R29
856 [-]: SETTABLE  R48 K136 R33 ; R48["mDifficulty"] := R33
857 [-]: SETTABLE  R48 K137 R34 ; R48["mLevelMin"] := R34
858 [-]: SETTABLE  R48 K138 R35 ; R48["mLevelMax"] := R35
859 [-]: GETTABLE  R49 R5 K140  ; R49 := R5["conclaveRange"]
860 [-]: GETTABLE  R49 R49 K141 ; R49 := R49["minValue"]
861 [-]: SETTABLE  R48 K139 R49 ; R48["mConclaveMin"] := R49
862 [-]: GETTABLE  R49 R5 K140  ; R49 := R5["conclaveRange"]
863 [-]: GETTABLE  R49 R49 K143 ; R49 := R49["maxValue"]
864 [-]: SETTABLE  R48 K142 R49 ; R48["mConclaveMax"] := R49
865 [-]: SETTABLE  R48 K144 R46 ; R48["mFactionTag"] := R46
866 [-]: RETURN    R48 2        ; return R48
867 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 3711
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x5FF274BB"]
  2 [-]: GETGLOBAL R4 K1        ; R4 := _G
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_MeleeCombosMovie"]
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R3 K4        ; R3 := _T
 11 [-]: SETTABLE  R3 K5 R1     ; R3["StanceUpgradeInfo"] := R1
 12 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x458F27A9"]
 13 [-]: LOADK     R5 K7        ; R5 := "SetStanceUpgradeInfo"
 14 [-]: LOADK     R6 K5        ; R6 := "StanceUpgradeInfo"
 15 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 16 [-]: GETGLOBAL R3 K4        ; R3 := _T
 17 [-]: SETTABLE  R3 K5 K8     ; R3["StanceUpgradeInfo"] := nil
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 3721
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 73
  5 [-]: JMP       73           ; PC := 73
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 73
 11 [-]: JMP       73           ; PC := 73
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 13 [-]: GETGLOBAL R1 K4        ; R1 := gGameData
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 73
 16 [-]: JMP       73           ; PC := 73
 17 [-]: GETGLOBAL R0 K4        ; R0 := gGameData
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x6F2E05FD"]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 156
 24 [-]: JMP       156          ; PC := 156
 25 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x5A67CD40"]
 26 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LOT_NORMAL"]
 28 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0["0x413E14F1"]
 29 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 30 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["LOT_NORMAL"]
 31 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 32 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 33 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 1         ; if R2 then PC := 156
 37 [-]: JMP       156          ; PC := 156
 38 [-]: SELF      R2 R1 K10    ; R3 := R1; R2 := R1["0xA81C4B63"]
 39 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 40 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["MELEE_SLOT"]
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mItemId"]
 43 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1["0xA81C4B63"]
 44 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 45 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["MELEE_SLOT"]
 46 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 47 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mModSlot"]
 48 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x177B1956"]
 49 [-]: GETTABLE  R6 R2 K15    ; R6 := R2["mId"]
 50 [-]: MOVE      R7 R3        ; R7 := R3
 51 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 52 [-]: LOADK     R5 K16       ; R5 := 1
 53 [-]: LEN       R6 R4        ; R6 := # R4
 54 [-]: LOADK     R7 K16       ; R7 := 1
 55 [-]: FORPREP   R5 71        ; R5 -= R7; PC := 71
 56 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 57 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 58 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["mItemType"]
 59 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 60 [-]: TEST      R9 1         ; if R9 then PC := 71
 61 [-]: JMP       71           ; PC := 71
 62 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 63 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mItemType"]
 64 [-]: SELF      R9 R9 K2     ; R10 := R9; R9 := R9["0x8B598ED4"]
 65 [-]: GETGLOBAL R11 K18      ; R11 := gMeleeTreeType
 66 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 67 [-]: TEST      R9 0         ; if not R9 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 70 [-]: RETURN    R9 2         ; return R9
 71 [-]: FORLOOP   R5 56        ; R5 += R7; if R5 <= R6 then begin PC := 56; R8 := R5 end
 72 [-]: JMP       156          ; PC := 156
 73 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 74 [-]: GETGLOBAL R10 K19      ; R10 := gRegion
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: TEST      R9 1         ; if R9 then PC := 156
 77 [-]: JMP       156          ; PC := 156
 78 [-]: GETGLOBAL R9 K19       ; R9 := gRegion
 79 [-]: SELF      R9 R9 K20    ; R10 := R9; R9 := R9["0x3E2F6BF"]
 80 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 81 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 82 [-]: MOVE      R11 R9       ; R11 := R9
 83 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 84 [-]: TEST      R10 1        ; if R10 then PC := 156
 85 [-]: JMP       156          ; PC := 156
 86 [-]: SELF      R10 R9 K21   ; R11 := R9; R10 := R9["0x8DB5D01F"]
 87 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 88 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10["0x70627EFF"]
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 91 [-]: MOVE      R12 R10      ; R12 := R10
 92 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 93 [-]: TEST      R11 1        ; if R11 then PC := 156
 94 [-]: JMP       156          ; PC := 156
 95 [-]: SELF      R11 R10 K23  ; R12 := R10; R11 := R10["0x3061149"]
 96 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 97 [-]: LOADK     R12 K16      ; R12 := 1
 98 [-]: MOVE      R13 R11      ; R13 := R11
 99 [-]: LOADK     R14 K16      ; R14 := 1
100 [-]: FORPREP   R12 124      ; R12 -= R14; PC := 124
101 [-]: SELF      R16 R10 K24  ; R17 := R10; R16 := R10["0x38F325B8"]
102 [-]: SUB       R18 R15 K16  ; R18 := R15 - 1
103 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
104 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
105 [-]: MOVE      R18 R16      ; R18 := R16
106 [-]: CALL      R17 2 2      ; R17 := R17(R18)
107 [-]: TEST      R17 1        ; if R17 then PC := 124
108 [-]: JMP       124          ; PC := 124
109 [-]: SELF      R17 R16 K2   ; R18 := R16; R17 := R16["0x8B598ED4"]
110 [-]: GETGLOBAL R19 K18      ; R19 := gMeleeTreeType
111 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
112 [-]: TEST      R17 0        ; if not R17 then PC := 124
113 [-]: JMP       124          ; PC := 124
114 [-]: GETGLOBAL R17 K7       ; R17 := Lotus_Game
115 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["0xA9D5605B"]
116 [-]: CALL      R17 1 2      ; R17 := R17()
117 [-]: SELF      R18 R16 K26  ; R19 := R16; R18 := R16["0xE2B32C65"]
118 [-]: CALL      R18 2 2      ; R18 := R18(R19)
119 [-]: SETTABLE  R17 K17 R18  ; R17["mItemType"] := R18
120 [-]: SELF      R18 R16 K28  ; R19 := R16; R18 := R16["0x952C658E"]
121 [-]: CALL      R18 2 2      ; R18 := R18(R19)
122 [-]: SETTABLE  R17 K27 R18  ; R17["mUpgradeFingerprint"] := R18
123 [-]: RETURN    R17 2        ; return R17
124 [-]: FORLOOP   R12 101      ; R12 += R14; if R12 <= R13 then begin PC := 101; R15 := R12 end
125 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
126 [-]: GETGLOBAL R19 K1       ; R19 := gGameRules
127 [-]: CALL      R18 2 2      ; R18 := R18(R19)
128 [-]: TEST      R18 1        ; if R18 then PC := 156
129 [-]: JMP       156          ; PC := 156
130 [-]: GETGLOBAL R18 K1       ; R18 := gGameRules
131 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x8B598ED4"]
132 [-]: GETGLOBAL R20 K29      ; R20 := gLotusPvpGameRulesType
133 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
134 [-]: TEST      R18 0        ; if not R18 then PC := 141
135 [-]: JMP       141          ; PC := 141
136 [-]: GETGLOBAL R18 K1       ; R18 := gGameRules
137 [-]: SELF      R18 R18 K30  ; R19 := R18; R18 := R18["0x3740FA61"]
138 [-]: CALL      R18 2 2      ; R18 := R18(R19)
139 [-]: TEST      R18 1        ; if R18 then PC := 147
140 [-]: JMP       147          ; PC := 147
141 [-]: GETGLOBAL R18 K1       ; R18 := gGameRules
142 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x8B598ED4"]
143 [-]: GETGLOBAL R20 K31      ; R20 := gLotusFightingGameRulesType
144 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
145 [-]: TEST      R18 0        ; if not R18 then PC := 156
146 [-]: JMP       156          ; PC := 156
147 [-]: GETGLOBAL R18 K7       ; R18 := Lotus_Game
148 [-]: GETTABLE  R18 R18 K25  ; R18 := R18["0xA9D5605B"]
149 [-]: CALL      R18 1 2      ; R18 := R18()
150 [-]: SELF      R19 R10 K32  ; R20 := R10; R19 := R10["0x98CC31EA"]
151 [-]: CALL      R19 2 2      ; R19 := R19(R20)
152 [-]: SELF      R19 R19 K26  ; R20 := R19; R19 := R19["0xE2B32C65"]
153 [-]: CALL      R19 2 2      ; R19 := R19(R20)
154 [-]: SETTABLE  R18 K17 R19  ; R18["mItemType"] := R19
155 [-]: RETURN    R18 2        ; return R18
156 [-]: LOADNIL   R19 R19      ; R19 := nil
157 [-]: RETURN    R19 2        ; return R19
158 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 3770
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x2C00D429
  2 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Types/LotusMeleeTree/LotusMeleeTree"
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 39
  8 [-]: JMP       39           ; PC := 39
  9 [-]: LOADK     R3 K3        ; R3 := 0
 10 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 11 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0["0x38F325B8"]
 12 [-]: MOVE      R7 R3        ; R7 := R3
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 15 [-]: TEST      R4 1         ; if R4 then PC := 39
 16 [-]: JMP       39           ; PC := 39
 17 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x38F325B8"]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 20 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4["0x8B598ED4"]
 21 [-]: GETGLOBAL R7 K6        ; R7 := gLotusArtifactUpgradeType
 22 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 23 [-]: SELF      R6 R4 K5     ; R7 := R4; R6 := R4["0x8B598ED4"]
 24 [-]: MOVE      R8 R2        ; R8 := R2
 25 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 26 [-]: TEST      R5 0         ; if not R5 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: TEST      R6 0         ; if not R6 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: TEST      R1 1         ; if R1 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0["0xF21555A7"]
 33 [-]: MOVE      R9 R4        ; R9 := R4
 34 [-]: MOVE      R10 R1       ; R10 := R1
 35 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 36 [-]: JMP       10           ; PC := 10
 37 [-]: ADD       R3 R3 K8     ; R3 := R3 + 1
 38 [-]: JMP       10           ; PC := 10
 39 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 3789
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "Assassination" then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R2 K1        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[1]
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       101          ; PC := 101
  8 [-]: EQ        0 R0 K4      ; if R0 ~= "Capture" then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K1        ; R2 := _G
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[2]
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       101          ; PC := 101
 15 [-]: EQ        0 R0 K6      ; if R0 ~= "PVP" then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R2 K1        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[3]
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: JMP       101          ; PC := 101
 22 [-]: EQ        0 R0 K8      ; if R0 ~= "Deception" then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R2 K1        ; R2 := _G
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[4]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       101          ; PC := 101
 29 [-]: EQ        0 R0 K10     ; if R0 ~= "Defense" then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R2 K1        ; R2 := _G
 32 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 33 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[6]
 34 [-]: RETURN    R2 2         ; return R2
 35 [-]: JMP       101          ; PC := 101
 36 [-]: EQ        0 R0 K12     ; if R0 ~= "Exterminate" then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: EQ        1 R1 K13     ; if R1 == nil then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETGLOBAL R2 K1        ; R2 := _G
 41 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 42 [-]: ADD       R3 K14 R1    ; R3 := 7 + R1
 43 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: JMP       101          ; PC := 101
 46 [-]: EQ        0 R0 K15     ; if R0 ~= "Hijack" then PC := 53
 47 [-]: JMP       53           ; PC := 53
 48 [-]: GETGLOBAL R2 K1        ; R2 := _G
 49 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 50 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[10]
 51 [-]: RETURN    R2 2         ; return R2
 52 [-]: JMP       101          ; PC := 101
 53 [-]: EQ        0 R0 K17     ; if R0 ~= "Territory" then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R2 K1        ; R2 := _G
 56 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 57 [-]: GETTABLE  R2 R2 K18    ; R2 := R2[11]
 58 [-]: RETURN    R2 2         ; return R2
 59 [-]: JMP       101          ; PC := 101
 60 [-]: EQ        0 R0 K19     ; if R0 ~= "MobileDefense" then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R2 K1        ; R2 := _G
 63 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 64 [-]: GETTABLE  R2 R2 K20    ; R2 := R2[12]
 65 [-]: RETURN    R2 2         ; return R2
 66 [-]: JMP       101          ; PC := 101
 67 [-]: EQ        0 R0 K21     ; if R0 ~= "Rescue" then PC := 74
 68 [-]: JMP       74           ; PC := 74
 69 [-]: GETGLOBAL R2 K1        ; R2 := _G
 70 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 71 [-]: GETTABLE  R2 R2 K22    ; R2 := R2[13]
 72 [-]: RETURN    R2 2         ; return R2
 73 [-]: JMP       101          ; PC := 101
 74 [-]: EQ        0 R0 K23     ; if R0 ~= "Sabotage" then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: GETGLOBAL R2 K1        ; R2 := _G
 77 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 78 [-]: GETTABLE  R2 R2 K24    ; R2 := R2[14]
 79 [-]: RETURN    R2 2         ; return R2
 80 [-]: JMP       101          ; PC := 101
 81 [-]: EQ        0 R0 K25     ; if R0 ~= "Spy" then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETGLOBAL R2 K1        ; R2 := _G
 84 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 85 [-]: GETTABLE  R2 R2 K26    ; R2 := R2[15]
 86 [-]: RETURN    R2 2         ; return R2
 87 [-]: JMP       101          ; PC := 101
 88 [-]: EQ        0 R0 K27     ; if R0 ~= "Survival" then PC := 95
 89 [-]: JMP       95           ; PC := 95
 90 [-]: GETGLOBAL R2 K1        ; R2 := _G
 91 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 92 [-]: GETTABLE  R2 R2 K28    ; R2 := R2[16]
 93 [-]: RETURN    R2 2         ; return R2
 94 [-]: JMP       101          ; PC := 101
 95 [-]: EQ        0 R0 K29     ; if R0 ~= "Void" then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETGLOBAL R2 K1        ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 99 [-]: GETTABLE  R2 R2 K30    ; R2 := R2[17]
100 [-]: RETURN    R2 2         ; return R2
101 [-]: GETGLOBAL R2 K1        ; R2 := _G
102 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
103 [-]: GETTABLE  R2 R2 K31    ; R2 := R2[5]
104 [-]: RETURN    R2 2         ; return R2
105 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 3823
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 0         ; if not R3 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADNIL   R3 R6        ; R3 := R4 := R5 := R6 := nil
 12 [-]: RETURN    R3 5         ; return R3,R4,R5,R6
 13 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x6F2E05FD"]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SELF      R4 R3 K2     ; R5 := R3; R4 := R3["0x70666039"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 18 [-]: MOVE      R6 R4        ; R6 := R4
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 0         ; if not R5 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADNIL   R5 R8        ; R5 := R6 := R7 := R8 := nil
 23 [-]: RETURN    R5 5         ; return R5,R6,R7,R8
 24 [-]: SELF      R5 R1 K3     ; R6 := R1; R5 := R1["0x52E65D47"]
 25 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 26 [-]: GETGLOBAL R6 K4        ; R6 := 0x63B09107
 27 [-]: MOVE      R7 R4        ; R7 := R4
 28 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 29 [-]: JMP       102          ; PC := 102
 30 [-]: GETTABLE  R11 R10 K5   ; R11 := R10["mItemType"]
 31 [-]: EQ        0 R11 R1     ; if R11 ~= R1 then PC := 102
 32 [-]: JMP       102          ; PC := 102
 33 [-]: LOADK     R11 K6       ; R11 := -1
 34 [-]: GETTABLE  R12 R10 K7   ; R12 := R10["mProgress"]
 35 [-]: LEN       R13 R12      ; R13 := # R12
 36 [-]: LT        0 K8 R13     ; if 0 >= R13 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: GETTABLE  R13 R12 K9   ; R13 := R12[1]
 39 [-]: GETTABLE  R11 R13 K10  ; R11 := R13["mCompletion"]
 40 [-]: LOADK     R13 K8       ; R13 := 0
 41 [-]: LE        0 K8 R11     ; if 0 > R11 then PC := 75
 42 [-]: JMP       75           ; PC := 75
 43 [-]: LEN       R14 R12      ; R14 := # R12
 44 [-]: LT        0 R14 R5     ; if R14 >= R5 then PC := 60
 45 [-]: JMP       60           ; PC := 60
 46 [-]: GETGLOBAL R14 K4       ; R14 := 0x63B09107
 47 [-]: MOVE      R15 R12      ; R15 := R12
 48 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R19 R18 K10  ; R19 := R18["mCompletion"]
 51 [-]: LT        0 K6 R19     ; if -1 >= R19 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: MOVE      R13 R17      ; R13 := R17
 54 [-]: JMP       56           ; PC := 56
 55 [-]: JMP       58           ; PC := 58
 56 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 50; R16 := R17 end
 57 [-]: JMP       50           ; PC := 50
 58 [-]: ADD       R13 R13 K9   ; R13 := R13 + 1
 59 [-]: JMP       75           ; PC := 75
 60 [-]: LOADK     R19 K9       ; R19 := 1
 61 [-]: GETGLOBAL R20 K11      ; R20 := math
 62 [-]: GETTABLE  R20 R20 K12  ; R20 := R20["0x65F9712A"]
 63 [-]: LEN       R21 R12      ; R21 := # R12
 64 [-]: MOVE      R22 R5       ; R22 := R5
 65 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 66 [-]: LOADK     R21 K9       ; R21 := 1
 67 [-]: FORPREP   R19 74       ; R19 -= R21; PC := 74
 68 [-]: GETTABLE  R23 R12 R22  ; R23 := R12[R22]
 69 [-]: GETTABLE  R23 R23 K10  ; R23 := R23["mCompletion"]
 70 [-]: LT        0 R23 R11    ; if R23 >= R11 then PC := 74
 71 [-]: JMP       74           ; PC := 74
 72 [-]: MOVE      R13 R22      ; R13 := R22
 73 [-]: JMP       75           ; PC := 75
 74 [-]: FORLOOP   R19 68       ; R19 += R21; if R19 <= R20 then begin PC := 68; R22 := R19 end
 75 [-]: LT        0 R11 K8     ; if R11 >= 0 then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: LOADK     R13 K9       ; R13 := 1
 78 [-]: LOADK     R11 K8       ; R11 := 0
 79 [-]: JMP       84           ; PC := 84
 80 [-]: EQ        0 R13 K8     ; if R13 ~= 0 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: ADD       R11 R11 K9   ; R11 := R11 + 1
 83 [-]: LOADK     R13 K9       ; R13 := 1
 84 [-]: LOADNIL   R23 R23      ; R23 := nil
 85 [-]: TEST      R2 0         ; if not R2 then PC := 97
 86 [-]: JMP       97           ; PC := 97
 87 [-]: SELF      R24 R1 K13   ; R25 := R1; R24 := R1["0xC94BFA6B"]
 88 [-]: SUB       R26 R13 K9   ; R26 := R13 - 1
 89 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
 90 [-]: TEST      R24 0        ; if not R24 then PC := 97
 91 [-]: JMP       97           ; PC := 97
 92 [-]: SELF      R24 R1 K14   ; R25 := R1; R24 := R1["0x6C207447"]
 93 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 94 [-]: GETTABLE  R24 R24 R13  ; R24 := R24[R13]
 95 [-]: GETTABLE  R24 R24 K15  ; R24 := R24["mMainMission"]
 96 [-]: GETTABLE  R23 R24 K16  ; R23 := R24["mKey"]
 97 [-]: MOVE      R24 R13      ; R24 := R13
 98 [-]: MOVE      R25 R11      ; R25 := R11
 99 [-]: GETTABLE  R26 R10 K17  ; R26 := R10["mCanProgressQuest"]
100 [-]: MOVE      R27 R23      ; R27 := R23
101 [-]: RETURN    R24 5        ; return R24,R25,R26,R27
102 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 30; R8 := R9 end
103 [-]: JMP       30           ; PC := 30
104 [-]: LOADNIL   R24 R27      ; R24 := R25 := R26 := R27 := nil
105 [-]: RETURN    R24 5        ; return R24,R25,R26,R27
106 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 3893
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 3897
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  7 [-]: RETURN    R1 5         ; return R1,R2,R3,R4
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x6F2E05FD"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["ActiveQuestLoaded"]
 12 [-]: TEST      R2 1         ; if R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADNIL   R2 R5        ; R2 := R3 := R4 := R5 := nil
 15 [-]: RETURN    R2 5         ; return R2,R3,R4,R5
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x7C282057
 17 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1["0x52C8784B"]
 18 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 0         ; if not R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADNIL   R3 R6        ; R3 := R4 := R5 := R6 := nil
 26 [-]: RETURN    R3 5         ; return R3,R4,R5,R6
 27 [-]: MOVE      R3 R2        ; R3 := R2
 28 [-]: GETUPVAL  R4 U0        ; R4 := U0
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: MOVE      R6 R2        ; R6 := R2
 31 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 32 [-]: RETURN    R3 0         ; return R3,...
 33 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 3916
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 3920
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R3 K0        ; R3 := gGameData
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
  3 [-]: MOVE      R5 R3        ; R5 := R3
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 0         ; if not R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: SELF      R4 R3 K2     ; R5 := R3; R4 := R3["0x6F2E05FD"]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xAB4E6F2A"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 184
 16 [-]: JMP       184          ; PC := 184
 17 [-]: SELF      R5 R3 K4     ; R6 := R3; R5 := R3["0x2D0B8A86"]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: LOADK     R6 K5        ; R6 := 1
 20 [-]: LEN       R7 R4        ; R7 := # R4
 21 [-]: LOADK     R8 K5        ; R8 := 1
 22 [-]: FORPREP   R6 178       ; R6 -= R8; PC := 178
 23 [-]: GETTABLE  R10 R4 R9    ; R10 := R4[R9]
 24 [-]: MOVE      R11 R0       ; R11 := R0
 25 [-]: GETUPVAL  R12 U0       ; R12 := U0
 26 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["0x36BA5F48"]
 27 [-]: CALL      R12 1 2      ; R12 := R12()
 28 [-]: TEST      R12 0        ; if not R12 then PC := 64
 29 [-]: JMP       64           ; PC := 64
 30 [-]: GETGLOBAL R12 K1       ; R12 := 0x400E7765
 31 [-]: GETGLOBAL R13 K7       ; R13 := _G
 32 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["UITypes_UGCKeys"]
 33 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 34 [-]: TEST      R12 1        ; if R12 then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: LOADK     R12 K5       ; R12 := 1
 37 [-]: GETGLOBAL R13 K7       ; R13 := _G
 38 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["UITypes_UGCKeys"]
 39 [-]: LEN       R13 R13      ; R13 := # R13
 40 [-]: LOADK     R14 K5       ; R14 := 1
 41 [-]: FORPREP   R12 63       ; R12 -= R14; PC := 63
 42 [-]: GETGLOBAL R16 K1       ; R16 := 0x400E7765
 43 [-]: GETTABLE  R17 R10 K9   ; R17 := R10["mItemType"]
 44 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 45 [-]: TEST      R16 1        ; if R16 then PC := 63
 46 [-]: JMP       63           ; PC := 63
 47 [-]: GETGLOBAL R16 K1       ; R16 := 0x400E7765
 48 [-]: GETGLOBAL R17 K7       ; R17 := _G
 49 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["UITypes_UGCKeys"]
 50 [-]: GETTABLE  R17 R17 R15  ; R17 := R17[R15]
 51 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 52 [-]: TEST      R16 1        ; if R16 then PC := 63
 53 [-]: JMP       63           ; PC := 63
 54 [-]: GETTABLE  R16 R10 K9   ; R16 := R10["mItemType"]
 55 [-]: SELF      R16 R16 K10  ; R17 := R16; R16 := R16["0x8B598ED4"]
 56 [-]: GETGLOBAL R18 K7       ; R18 := _G
 57 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["UITypes_UGCKeys"]
 58 [-]: GETTABLE  R18 R18 R15  ; R18 := R18[R15]
 59 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 60 [-]: TEST      R16 0        ; if not R16 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: MOVE      R11 R1       ; R11 := R1
 63 [-]: FORLOOP   R12 42       ; R12 += R14; if R12 <= R13 then begin PC := 42; R15 := R12 end
 64 [-]: GETGLOBAL R16 K11      ; R16 := 0x7C282057
 65 [-]: GETTABLE  R17 R10 K9   ; R17 := R10["mItemType"]
 66 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 67 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
 68 [-]: MOVE      R18 R16      ; R18 := R16
 69 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 70 [-]: TEST      R17 1        ; if R17 then PC := 178
 71 [-]: JMP       178          ; PC := 178
 72 [-]: MOVE      R17 R0       ; R17 := R0
 73 [-]: GETTABLE  R18 R10 K9   ; R18 := R10["mItemType"]
 74 [-]: SELF      R18 R18 K10  ; R19 := R18; R18 := R18["0x8B598ED4"]
 75 [-]: GETGLOBAL R20 K12      ; R20 := gKeyItemType
 76 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 77 [-]: TEST      R18 0        ; if not R18 then PC := 106
 78 [-]: JMP       106          ; PC := 106
 79 [-]: SELF      R19 R16 K13  ; R20 := R16; R19 := R16["0xCDC5A063"]
 80 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 81 [-]: TEST      R19 0        ; if not R19 then PC := 106
 82 [-]: JMP       106          ; PC := 106
 83 [-]: MOVE      R17 R1       ; R17 := R1
 84 [-]: LOADK     R19 K5       ; R19 := 1
 85 [-]: GETTABLE  R20 R5 K14   ; R20 := R5["mGoals"]
 86 [-]: LEN       R20 R20      ; R20 := # R20
 87 [-]: LOADK     R21 K5       ; R21 := 1
 88 [-]: FORPREP   R19 105      ; R19 -= R21; PC := 105
 89 [-]: SELF      R23 R3 K15   ; R24 := R3; R23 := R3["0x4C365F64"]
 90 [-]: SUB       R25 R22 K5   ; R25 := R22 - 1
 91 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 92 [-]: TEST      R23 0        ; if not R23 then PC := 105
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETTABLE  R23 R5 K14   ; R23 := R5["mGoals"]
 95 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 96 [-]: GETTABLE  R24 R10 K9   ; R24 := R10["mItemType"]
 97 [-]: GETTABLE  R25 R23 K16  ; R25 := R23["mKeyRequired"]
 98 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 105
 99 [-]: JMP       105          ; PC := 105
100 [-]: GETTABLE  R24 R23 K17  ; R24 := R23["mSuccess"]
101 [-]: EQ        0 R24 K18    ; if R24 ~= 0 then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: MOVE      R17 R0       ; R17 := R0
104 [-]: JMP       106          ; PC := 106
105 [-]: FORLOOP   R19 89       ; R19 += R21; if R19 <= R20 then begin PC := 89; R22 := R19 end
106 [-]: GETTABLE  R24 R10 K19  ; R24 := R10["mItemCount"]
107 [-]: LT        0 K18 R24    ; if 0 >= R24 then PC := 178
108 [-]: JMP       178          ; PC := 178
109 [-]: TEST      R11 1        ; if R11 then PC := 178
110 [-]: JMP       178          ; PC := 178
111 [-]: TEST      R17 1        ; if R17 then PC := 178
112 [-]: JMP       178          ; PC := 178
113 [-]: NEWTABLE  R24 0 6      ; R24 := {}
114 [-]: SETTABLE  R24 K20 R10  ; R24["Key"] := R10
115 [-]: SETTABLE  R24 K21 R16  ; R24["Type"] := R16
116 [-]: GETGLOBAL R25 K23      ; R25 := 0xCAA43ABB
117 [-]: MOVE      R26 R16      ; R26 := R16
118 [-]: CALL      R25 2 2      ; R25 := R25(R26)
119 [-]: SETTABLE  R24 K22 R25  ; R24["Anchor"] := R25
120 [-]: GETGLOBAL R25 K25      ; R25 := 0xE6DC43B0
121 [-]: GETGLOBAL R26 K26      ; R26 := 0x9FAED6BC
122 [-]: SELF      R27 R16 K27  ; R28 := R16; R27 := R16["0x616C74B6"]
123 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
124 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
125 [-]: MOVE      R27 R0       ; R27 := R0
126 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
127 [-]: SETTABLE  R24 K24 R25  ; R24["Name"] := R25
128 [-]: GETGLOBAL R25 K25      ; R25 := 0xE6DC43B0
129 [-]: GETGLOBAL R26 K26      ; R26 := 0x9FAED6BC
130 [-]: SELF      R27 R16 K29  ; R28 := R16; R27 := R16["0x42300EB5"]
131 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
132 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
133 [-]: MOVE      R27 R0       ; R27 := R0
134 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
135 [-]: SETTABLE  R24 K28 R25  ; R24["Description"] := R25
136 [-]: GETUPVAL  R25 U1       ; R25 := U1
137 [-]: LOADNIL   R26 R26      ; R26 := nil
138 [-]: MOVE      R27 R16      ; R27 := R16
139 [-]: LOADNIL   R28 R29      ; R28 := R29 := nil
140 [-]: CALL      R25 5 2      ; R25 := R25(R26,R27,R28,R29)
141 [-]: SETTABLE  R24 K30 R25  ; R24["ToolTip"] := R25
142 [-]: GETGLOBAL R25 K1       ; R25 := 0x400E7765
143 [-]: MOVE      R26 R2       ; R26 := R2
144 [-]: CALL      R25 2 2      ; R25 := R25(R26)
145 [-]: TEST      R25 1        ; if R25 then PC := 159
146 [-]: JMP       159          ; PC := 159
147 [-]: SELF      R25 R2 K31   ; R26 := R2; R25 := R2["0x62FBC1B8"]
148 [-]: GETTABLE  R27 R10 K9   ; R27 := R10["mItemType"]
149 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
150 [-]: GETGLOBAL R26 K1       ; R26 := 0x400E7765
151 [-]: MOVE      R27 R25      ; R27 := R25
152 [-]: CALL      R26 2 2      ; R26 := R26(R27)
153 [-]: TEST      R26 1        ; if R26 then PC := 159
154 [-]: JMP       159          ; PC := 159
155 [-]: SETTABLE  R24 K32 R25  ; R24["StoreItem"] := R25
156 [-]: SELF      R26 R25 K34  ; R27 := R25; R26 := R25["0xF1A9732E"]
157 [-]: CALL      R26 2 2      ; R26 := R26(R27)
158 [-]: SETTABLE  R24 K33 R26  ; R24["Icon"] := R26
159 [-]: TEST      R18 0        ; if not R18 then PC := 178
160 [-]: JMP       178          ; PC := 178
161 [-]: SELF      R26 R16 K35  ; R27 := R16; R26 := R16["0x49F6C90A"]
162 [-]: CALL      R26 2 2      ; R26 := R26(R27)
163 [-]: TEST      R26 0        ; if not R26 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: GETTABLE  R26 R10 K19  ; R26 := R10["mItemCount"]
166 [-]: SETTABLE  R24 K36 R26  ; R24["Count"] := R26
167 [-]: EQ        1 R1 K37     ; if R1 == nil then PC := 173
168 [-]: JMP       173          ; PC := 173
169 [-]: SELF      R26 R16 K38  ; R27 := R16; R26 := R16["0x9B16E6AD"]
170 [-]: CALL      R26 2 2      ; R26 := R26(R27)
171 [-]: EQ        0 R26 R1     ; if R26 ~= R1 then PC := 178
172 [-]: JMP       178          ; PC := 178
173 [-]: GETGLOBAL R26 K39      ; R26 := table
174 [-]: GETTABLE  R26 R26 K40  ; R26 := R26["0xE6450C9D"]
175 [-]: MOVE      R27 R0       ; R27 := R0
176 [-]: MOVE      R28 R24      ; R28 := R24
177 [-]: CALL      R26 3 1      ; R26(R27,R28)
178 [-]: FORLOOP   R6 23        ; R6 += R8; if R6 <= R7 then begin PC := 23; R9 := R6 end
179 [-]: GETGLOBAL R26 K39      ; R26 := table
180 [-]: GETTABLE  R26 R26 K41  ; R26 := R26["0xA5C58010"]
181 [-]: MOVE      R27 R0       ; R27 := R0
182 [-]: CLOSURE   R28 0        ; R28 := closure(Function #207.1)
183 [-]: CALL      R26 3 1      ; R26(R27,R28)
184 [-]: RETURN    R0 1         ; return 


; Function #207.1:
;
; Name:            
; Defined at line: 3997
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Name"]
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["Name"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 4002
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x32D83CC3"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 129
  5 [-]: JMP       129          ; PC := 129
  6 [-]: GETGLOBAL R1 K2        ; R1 := gRegion
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x9139A00"]
  8 [-]: GETGLOBAL R3 K4        ; R3 := gUIConsoleTriggerType
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: GETGLOBAL R2 K5        ; R2 := gGameData
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: LOADK     R4 K6        ; R4 := 1
 13 [-]: LOADK     R5 K7        ; R5 := 2
 14 [-]: LOADK     R6 K6        ; R6 := 1
 15 [-]: FORPREP   R4 125       ; R4 -= R6; PC := 125
 16 [-]: LOADK     R8 K6        ; R8 := 1
 17 [-]: LEN       R9 R1        ; R9 := # R1
 18 [-]: LOADK     R10 K6       ; R10 := 1
 19 [-]: FORPREP   R8 124       ; R8 -= R10; PC := 124
 20 [-]: GETGLOBAL R12 K8       ; R12 := 0x400E7765
 21 [-]: MOVE      R13 R2       ; R13 := R2
 22 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 23 [-]: MOVE      R12 R12      ; R12 := R12
 24 [-]: GETGLOBAL R13 K9       ; R13 := 0xDA39688E
 25 [-]: CALL      R13 1 2      ; R13 := R13()
 26 [-]: TEST      R13 0        ; if not R13 then PC := 42
 27 [-]: JMP       42           ; PC := 42
 28 [-]: GETGLOBAL R13 K10      ; R13 := Engine
 29 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0x1398DAFB"]
 30 [-]: CALL      R13 1 2      ; R13 := R13()
 31 [-]: TEST      R13 1        ; if R13 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 34 [-]: SELF      R13 R13 K12  ; R14 := R13; R13 := R13["0xCE832AFF"]
 35 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 36 [-]: GETGLOBAL R14 K13      ; R14 := 0xEC274B1A
 37 [-]: LOADK     R15 K14      ; R15 := "News"
 38 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 39 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R12 R0       ; R12 := R0
 42 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 43 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13["0x4B66A3E4"]
 44 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 45 [-]: TEST      R13 1        ; if R13 then PC := 124
 46 [-]: JMP       124          ; PC := 124
 47 [-]: TEST      R12 0        ; if not R12 then PC := 124
 48 [-]: JMP       124          ; PC := 124
 49 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 50 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13["0x827C6A77"]
 51 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 52 [-]: LEN       R14 R13      ; R14 := # R13
 53 [-]: EQ        1 R14 K17    ; if R14 == 0 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: MOVE      R14 R0       ; R14 := R0
 56 [-]: MOVE      R14 R1       ; R14 := R1
 57 [-]: GETUPVAL  R15 U0       ; R15 := U0
 58 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0xF81722A2"]
 59 [-]: EQ        1 R7 K6      ; if R7 == 1 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R16 R0       ; R16 := R0
 62 [-]: MOVE      R16 R1       ; R16 := R1
 63 [-]: GETGLOBAL R17 K19      ; R17 := math
 64 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["0x65F9712A"]
 65 [-]: LOADK     R18 K6       ; R18 := 1
 66 [-]: LEN       R19 R13      ; R19 := # R13
 67 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 68 [-]: LEN       R18 R13      ; R18 := # R13
 69 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 70 [-]: LOADK     R16 K6       ; R16 := 1
 71 [-]: MOVE      R17 R15      ; R17 := R15
 72 [-]: LOADK     R18 K6       ; R18 := 1
 73 [-]: FORPREP   R16 114      ; R16 -= R18; PC := 114
 74 [-]: GETTABLE  R20 R13 R19  ; R20 := R13[R19]
 75 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["mFeatureItem"]
 76 [-]: SELF      R21 R2 K22   ; R22 := R2; R21 := R2["0xB451D706"]
 77 [-]: MOVE      R23 R20      ; R23 := R20
 78 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 79 [-]: TEST      R21 0        ; if not R21 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
 82 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21["0xF5F261FF"]
 83 [-]: MOVE      R23 R20      ; R23 := R20
 84 [-]: CALL      R21 3 1      ; R21(R22,R23)
 85 [-]: MOVE      R14 R1       ; R14 := R1
 86 [-]: JMP       114          ; PC := 114
 87 [-]: TEST      R3 1         ; if R3 then PC := 114
 88 [-]: JMP       114          ; PC := 114
 89 [-]: SELF      R21 R2 K24   ; R22 := R2; R21 := R2["0xADADED3A"]
 90 [-]: MOVE      R23 R20      ; R23 := R20
 91 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 92 [-]: TEST      R21 0        ; if not R21 then PC := 114
 93 [-]: JMP       114          ; PC := 114
 94 [-]: GETTABLE  R21 R13 R19  ; R21 := R13[R19]
 95 [-]: GETTABLE  R21 R21 K25  ; R21 := R21["mRequiresMainUpgrade"]
 96 [-]: TEST      R21 0        ; if not R21 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
 99 [-]: SELF      R21 R21 K26  ; R22 := R21; R21 := R21["0x5FB1261A"]
100 [-]: CALL      R21 2 2      ; R21 := R21(R22)
101 [-]: TEST      R21 0        ; if not R21 then PC := 114
102 [-]: JMP       114          ; PC := 114
103 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
104 [-]: SELF      R21 R21 K27  ; R22 := R21; R21 := R21["0x49D6937E"]
105 [-]: MOVE      R23 R20      ; R23 := R20
106 [-]: CALL      R21 3 1      ; R21(R22,R23)
107 [-]: MOVE      R14 R1       ; R14 := R1
108 [-]: GETUPVAL  R21 U1       ; R21 := U1
109 [-]: GETTABLE  R22 R13 R19  ; R22 := R13[R19]
110 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["mInstallNowTransmission"]
111 [-]: CALL      R21 2 1      ; R21(R22)
112 [-]: MOVE      R3 R1        ; R3 := R1
113 [-]: JMP       115          ; PC := 115
114 [-]: FORLOOP   R16 74       ; R16 += R18; if R16 <= R17 then begin PC := 74; R19 := R16 end
115 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
116 [-]: SELF      R21 R21 K29  ; R22 := R21; R21 := R21["0x38CD82F1"]
117 [-]: MOVE      R23 R14      ; R23 := R14
118 [-]: CALL      R21 3 1      ; R21(R22,R23)
119 [-]: TEST      R0 0         ; if not R0 then PC := 124
120 [-]: JMP       124          ; PC := 124
121 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
122 [-]: SELF      R21 R21 K30  ; R22 := R21; R21 := R21["0x6F5A2238"]
123 [-]: CALL      R21 2 1      ; R21(R22)
124 [-]: FORLOOP   R8 20        ; R8 += R10; if R8 <= R9 then begin PC := 20; R11 := R8 end
125 [-]: FORLOOP   R4 16        ; R4 += R6; if R4 <= R5 then begin PC := 16; R7 := R4 end
126 [-]: GETGLOBAL R21 K31      ; R21 := _T
127 [-]: SETTABLE  R21 K32 K33  ; R21["uiConsoleTriggersInitialized"] := "0x1"
128 [-]: JMP       132          ; PC := 132
129 [-]: GETGLOBAL R21 K34      ; R21 := 0x93B1256B
130 [-]: LOADK     R22 K35      ; R22 := "Warning: called UpdateUIConsoleTriggers but the player isn't logged in yet!"
131 [-]: CALL      R21 2 1      ; R21(R22)
132 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 4055
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xC6772A8A"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: EQ        0 R2 K2      ; if R2 ~= 0 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: GETGLOBAL R3 K0        ; R3 := string
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0x7B782033"]
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: LOADK     R5 K4        ; R5 := 1
 14 [-]: LOADK     R6 K4        ; R6 := 1
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: GETGLOBAL R4 K0        ; R4 := string
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x7B782033"]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: MOVE      R6 R2        ; R6 := R2
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: LOADK     R5 K2        ; R5 := 0
 23 [-]: LOADK     R6 K5        ; R6 := 9
 24 [-]: LOADK     R7 K4        ; R7 := 1
 25 [-]: FORPREP   R5 35        ; R5 -= R7; PC := 35
 26 [-]: GETGLOBAL R9 K0        ; R9 := string
 27 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0x633C4246"]
 28 [-]: MOVE      R10 R1       ; R10 := R1
 29 [-]: GETGLOBAL R11 K7       ; R11 := 0x9FAED6BC
 30 [-]: MOVE      R12 R8       ; R12 := R8
 31 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 32 [-]: LOADK     R12 K8       ; R12 := ""
 33 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 34 [-]: MOVE      R1 R9        ; R1 := R9
 35 [-]: FORLOOP   R5 26        ; R5 += R7; if R5 <= R6 then begin PC := 26; R8 := R5 end
 36 [-]: EQ        1 R1 K8      ; if R1 == "" then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: EQ        1 R1 K9      ; if R1 == "." then PC := 50
 39 [-]: JMP       50           ; PC := 50
 40 [-]: EQ        0 R1 K10     ; if R1 ~= " " then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: EQ        1 R3 K10     ; if R3 == " " then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: EQ        1 R4 K10     ; if R4 == " " then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: EQ        1 R1 K11     ; if R1 == ". " then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: EQ        0 R1 K12     ; if R1 ~= " ." then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: MOVE      R9 R1        ; R9 := R1
 51 [-]: RETURN    R9 2         ; return R9
 52 [-]: JMP       55           ; PC := 55
 53 [-]: MOVE      R9 R0        ; R9 := R0
 54 [-]: RETURN    R9 2         ; return R9
 55 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 4074
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["GetTopScreen"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETGLOBAL R3 K3        ; R3 := gRegion
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: GETGLOBAL R2 K0        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x8E1FE5E2"]
 19 [-]: CALL      R2 1 3       ; R2,R3 := R2()
 20 [-]: GETGLOBAL R4 K3        ; R4 := gRegion
 21 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x7B2F8B2F"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x8DB5D01F"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5["0x6EA0928F"]
 26 [-]: GETGLOBAL R8 K8        ; R8 := Engine
 27 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["MAIN_HAND"]
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: GETGLOBAL R7 K0        ; R7 := _T
 30 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["DisableHeadTracking"]
 31 [-]: TEST      R7 1         ; if R7 then PC := 83
 32 [-]: JMP       83           ; PC := 83
 33 [-]: EQ        1 R3 K11     ; if R3 == "LoadOut" then PC := 83
 34 [-]: JMP       83           ; PC := 83
 35 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 36 [-]: MOVE      R8 R4        ; R8 := R4
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: TEST      R7 0         ; if not R7 then PC := 83
 39 [-]: JMP       83           ; PC := 83
 40 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0["0xF8FD58BD"]
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 83
 43 [-]: JMP       83           ; PC := 83
 44 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0["0x44299779"]
 45 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 46 [-]: TEST      R7 1         ; if R7 then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: SELF      R7 R0 K14    ; R8 := R0; R7 := R0["0xF3340665"]
 49 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 50 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PM_AIM"]
 51 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 52 [-]: TEST      R7 1         ; if R7 then PC := 83
 53 [-]: JMP       83           ; PC := 83
 54 [-]: SELF      R7 R0 K14    ; R8 := R0; R7 := R0["0xF3340665"]
 55 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 56 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["PM_FREE_FIRED"]
 57 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 58 [-]: TEST      R7 1         ; if R7 then PC := 83
 59 [-]: JMP       83           ; PC := 83
 60 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 61 [-]: MOVE      R8 R6        ; R8 := R6
 62 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 63 [-]: TEST      R7 1         ; if R7 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: SELF      R7 R6 K17    ; R8 := R6; R7 := R6["0xC06ED429"]
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: TEST      R7 1         ; if R7 then PC := 83
 68 [-]: JMP       83           ; PC := 83
 69 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 70 [-]: MOVE      R8 R6        ; R8 := R6
 71 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 72 [-]: TEST      R7 1         ; if R7 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETGLOBAL R7 K18       ; R7 := 0x2C00D429
 75 [-]: LOADK     R8 K19       ; R8 := "/Lotus/Weapons/Tenno/HackingDevices/TnHackingDevice/TnHackingDeviceWeapon"
 76 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 77 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 83
 78 [-]: JMP       83           ; PC := 83
 79 [-]: SELF      R7 R0 K20    ; R8 := R0; R7 := R0["0xE555AC5C"]
 80 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 81 [-]: TEST      R7 0         ; if not R7 then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: SELF      R7 R0 K21    ; R8 := R0; R7 := R0["0xAC259BD9"]
 84 [-]: CALL      R7 2 1       ; R7(R8)
 85 [-]: JMP       102          ; PC := 102
 86 [-]: LOADNIL   R7 R7        ; R7 := nil
 87 [-]: GETGLOBAL R8 K0        ; R8 := _T
 88 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["DiegeticPosition"]
 89 [-]: TEST      R8 0         ; if not R8 then PC := 96
 90 [-]: JMP       96           ; PC := 96
 91 [-]: EQ        1 R1 K23     ; if R1 == "0x1" then PC := 96
 92 [-]: JMP       96           ; PC := 96
 93 [-]: GETGLOBAL R8 K0        ; R8 := _T
 94 [-]: GETTABLE  R7 R8 K22    ; R7 := R8["DiegeticPosition"]
 95 [-]: JMP       99           ; PC := 99
 96 [-]: SELF      R8 R5 K24    ; R9 := R5; R8 := R5["0x84096397"]
 97 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 98 [-]: MOVE      R7 R8        ; R7 := R8
 99 [-]: SELF      R8 R0 K25    ; R9 := R0; R8 := R0["0x589BE75B"]
100 [-]: MOVE      R10 R7       ; R10 := R7
101 [-]: CALL      R8 3 1       ; R8(R9,R10)
102 [-]: MOVE      R8 R1        ; R8 := R1
103 [-]: RETURN    R8 2         ; return R8
104 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 4110
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: CALL      R3 1 2       ; R3 := R3()
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0xC92135A6"]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: LOADK     R6 K2        ; R6 := 1
 14 [-]: LEN       R7 R5        ; R7 := # R5
 15 [-]: LOADK     R8 K2        ; R8 := 1
 16 [-]: FORPREP   R6 23        ; R6 -= R8; PC := 23
 17 [-]: SELF      R10 R3 K3    ; R11 := R3; R10 := R3["0xF64198FD"]
 18 [-]: GETTABLE  R12 R5 R9    ; R12 := R5[R9]
 19 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["mTag"]
 20 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 21 [-]: GETTABLE  R11 R10 K5   ; R11 := R10["name"]
 22 [-]: SETTABLE  R4 R11 K6    ; R4[R11] := "0x1"
 23 [-]: FORLOOP   R6 17        ; R6 += R8; if R6 <= R7 then begin PC := 17; R9 := R6 end
 24 [-]: SELF      R11 R1 K7    ; R12 := R1; R11 := R1["0xB68BBE7C"]
 25 [-]: GETGLOBAL R13 K8       ; R13 := gNavigationFeatureItemType
 26 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 27 [-]: LOADK     R12 K2       ; R12 := 1
 28 [-]: LEN       R13 R11      ; R13 := # R11
 29 [-]: LOADK     R14 K2       ; R14 := 1
 30 [-]: FORPREP   R12 58       ; R12 -= R14; PC := 58
 31 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
 32 [-]: SELF      R16 R16 K9   ; R17 := R16; R16 := R16["0x3077BE70"]
 33 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 34 [-]: GETGLOBAL R17 K10      ; R17 := 0x7C282057
 35 [-]: MOVE      R18 R16      ; R18 := R16
 36 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 37 [-]: SELF      R18 R17 K11  ; R19 := R17; R18 := R17["0xEEFE7983"]
 38 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 39 [-]: LOADK     R19 K2       ; R19 := 1
 40 [-]: LEN       R20 R18      ; R20 := # R18
 41 [-]: LOADK     R21 K2       ; R21 := 1
 42 [-]: FORPREP   R19 57       ; R19 -= R21; PC := 57
 43 [-]: SELF      R23 R3 K3    ; R24 := R3; R23 := R3["0xF64198FD"]
 44 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
 45 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 46 [-]: GETTABLE  R24 R23 K5   ; R24 := R23["name"]
 47 [-]: GETTABLE  R24 R4 R24   ; R24 := R4[R24]
 48 [-]: TEST      R24 0        ; if not R24 then PC := 57
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETTABLE  R24 R23 K5   ; R24 := R23["name"]
 51 [-]: SETTABLE  R4 R24 K12   ; R4[R24] := "0x0"
 52 [-]: GETGLOBAL R24 K13      ; R24 := table
 53 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["0xE6450C9D"]
 54 [-]: MOVE      R25 R2       ; R25 := R2
 55 [-]: MOVE      R26 R16      ; R26 := R16
 56 [-]: CALL      R24 3 1      ; R24(R25,R26)
 57 [-]: FORLOOP   R19 43       ; R19 += R21; if R19 <= R20 then begin PC := 43; R22 := R19 end
 58 [-]: FORLOOP   R12 31       ; R12 += R14; if R12 <= R13 then begin PC := 31; R15 := R12 end
 59 [-]: RETURN    R2 2         ; return R2
 60 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 4145
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0x97B78441"]
  3 [-]: GETGLOBAL R4 K1        ; R4 := _G
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIColor_DarkGrey"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0xF81722A2"]
  8 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: GETGLOBAL R6 K1        ; R6 := _G
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIMaterial_Rectangle"]
 14 [-]: MOVE      R7 R2        ; R7 := R2
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: GETGLOBAL R5 K6        ; R5 := 0x63B09107
 17 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: LOADK     R8 K7        ; R8 := ".Foreground"
 20 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: LOADK     R9 K8        ; R9 := ".Shadow"
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: MOVE      R9 R1        ; R9 := R1
 25 [-]: LOADK     R10 K9       ; R10 := ".BackShadow"
 26 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 27 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 28 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 29 [-]: JMP       56           ; PC := 56
 30 [-]: SELF      R10 R0 K10   ; R11 := R0; R10 := R0["0x7E1F26D7"]
 31 [-]: MOVE      R12 R9       ; R12 := R9
 32 [-]: MOVE      R13 R4       ; R13 := R4
 33 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 34 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0["0x302AAB2F"]
 35 [-]: MOVE      R12 R9       ; R12 := R9
 36 [-]: LOADK     R13 K12      ; R13 := "RectInnerColor"
 37 [-]: GETTABLE  R14 R3 K13   ; R14 := R3["r"]
 38 [-]: GETTABLE  R15 R3 K14   ; R15 := R3["g"]
 39 [-]: GETTABLE  R16 R3 K15   ; R16 := R3["b"]
 40 [-]: LOADK     R17 K16      ; R17 := 0.34999999403954
 41 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
 42 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0["0x302AAB2F"]
 43 [-]: MOVE      R12 R9       ; R12 := R9
 44 [-]: LOADK     R13 K17      ; R13 := "RectEdgeColor"
 45 [-]: GETGLOBAL R14 K1       ; R14 := _G
 46 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["UIColorObject_White"]
 47 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["r"]
 48 [-]: GETGLOBAL R15 K1       ; R15 := _G
 49 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["UIColorObject_White"]
 50 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["g"]
 51 [-]: GETGLOBAL R16 K1       ; R16 := _G
 52 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["UIColorObject_White"]
 53 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["b"]
 54 [-]: LOADK     R17 K19      ; R17 := 1
 55 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
 56 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 30; R7 := R8 end
 57 [-]: JMP       30           ; PC := 30
 58 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 59 [-]: MOVE      R12 R1       ; R12 := R1
 60 [-]: LOADK     R13 K21      ; R13 := "Foreground"
 61 [-]: LOADK     R14 K22      ; R14 := "_z"
 62 [-]: LOADK     R15 K23      ; R15 := 0
 63 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 64 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 65 [-]: MOVE      R12 R1       ; R12 := R1
 66 [-]: LOADK     R13 K24      ; R13 := "Shadow"
 67 [-]: LOADK     R14 K22      ; R14 := "_z"
 68 [-]: LOADK     R15 K25      ; R15 := 200
 69 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 70 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 71 [-]: MOVE      R12 R1       ; R12 := R1
 72 [-]: LOADK     R13 K26      ; R13 := "BackShadow"
 73 [-]: LOADK     R14 K22      ; R14 := "_z"
 74 [-]: LOADK     R15 K27      ; R15 := 400
 75 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 76 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 77 [-]: MOVE      R12 R1       ; R12 := R1
 78 [-]: LOADK     R13 K21      ; R13 := "Foreground"
 79 [-]: LOADK     R14 K28      ; R14 := "_alpha"
 80 [-]: LOADK     R15 K29      ; R15 := 75
 81 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 82 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 83 [-]: MOVE      R12 R1       ; R12 := R1
 84 [-]: LOADK     R13 K24      ; R13 := "Shadow"
 85 [-]: LOADK     R14 K28      ; R14 := "_alpha"
 86 [-]: LOADK     R15 K30      ; R15 := 45
 87 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 88 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 89 [-]: MOVE      R12 R1       ; R12 := R1
 90 [-]: LOADK     R13 K26      ; R13 := "BackShadow"
 91 [-]: LOADK     R14 K28      ; R14 := "_alpha"
 92 [-]: LOADK     R15 K31      ; R15 := 25
 93 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 94 [-]: GETGLOBAL R10 K32      ; R10 := 0x400E7765
 95 [-]: MOVE      R11 R4       ; R11 := R4
 96 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 97 [-]: MOVE      R10 R10      ; R10 := R10
 98 [-]: RETURN    R10 2        ; return R10
 99 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 4166
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LE        0 R0 K0      ; if R0 > 0.0031308000907302 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: MUL       R1 R0 K1     ; R1 := R0 * 12.920000076294
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K2        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xD6F2D811"]
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: LOADK     R3 K4        ; R3 := 0.41666665673256
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: MUL       R1 K5 R1     ; R1 := 1.0549999475479 * R1
 12 [-]: SUB       R1 R1 K6     ; R1 := R1 - 0.054999999701977
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 4174
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LE        0 R0 K0      ; if R0 > 0.039280001074076 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: DIV       R1 R0 K1     ; R1 := R0 / 12.920000076294
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K2        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xD6F2D811"]
  8 [-]: ADD       R2 R0 K4     ; R2 := R0 + 0.054999999701977
  9 [-]: DIV       R2 R2 K5     ; R2 := R2 / 1.0549999475479
 10 [-]: LOADK     R3 K6        ; R3 := 2.4000000953674
 11 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 12 [-]: RETURN    R1 0         ; return R1,...
 13 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 4184
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["AP_ATTACK"]
  8 [-]: SETTABLE  R1 R2 K2     ; R1[R2] := "<POLARITY_ATTACK>"
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["AP_DEFENSE"]
 12 [-]: SETTABLE  R1 R2 K4     ; R1[R2] := "<POLARITY_DEFENSE>"
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["AP_TACTIC"]
 16 [-]: SETTABLE  R1 R2 K6     ; R1[R2] := "<POLARITY_TACTIC>"
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["AP_POWER"]
 20 [-]: SETTABLE  R1 R2 K8     ; R1[R2] := "<POLARITY_POWER>"
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 23 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["AP_PRECEPT"]
 24 [-]: SETTABLE  R1 R2 K10    ; R1[R2] := "<POLARITY_PRECEPT>"
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 27 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AP_FUSION"]
 28 [-]: SETTABLE  R1 R2 K12    ; R1[R2] := "<POLARITY_FUSION>"
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 31 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["AP_WARD"]
 32 [-]: SETTABLE  R1 R2 K14    ; R1[R2] := "<POLARITY_WARD>"
 33 [-]: GETUPVAL  R1 U1        ; R1 := U1
 34 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 35 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["AP_UMBRA"]
 36 [-]: SETTABLE  R1 R2 K16    ; R1[R2] := "<POLARITY_UMBRA>"
 37 [-]: GETUPVAL  R1 U1        ; R1 := U1
 38 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 39 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["AP_ANY"]
 40 [-]: SETTABLE  R1 R2 K18    ; R1[R2] := "<POLARITY_ANY>"
 41 [-]: LOADK     R1 K19       ; R1 := 1
 42 [-]: GETUPVAL  R2 U1        ; R2 := U1
 43 [-]: LEN       R2 R2        ; R2 := # R2
 44 [-]: LOADK     R3 K19       ; R3 := 1
 45 [-]: FORPREP   R1 54        ; R1 -= R3; PC := 54
 46 [-]: GETUPVAL  R5 U1        ; R5 := U1
 47 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["mMovie"]
 48 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 49 [-]: GETUPVAL  R8 U1        ; R8 := U1
 50 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 51 [-]: MOVE      R9 R1        ; R9 := R1
 52 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 53 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 54 [-]: FORLOOP   R1 46        ; R1 += R3; if R1 <= R2 then begin PC := 46; R4 := R1 end
 55 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 4202
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 4206
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADK     R1 K1        ; R1 := ""
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 4217
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6A235628
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R1 K1      ; if R1 == "string" then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x1B252E3C"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 10 [-]: GETGLOBAL R2 K4        ; R2 := _G
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R1 K6        ; R1 := gFlashMgr
 16 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x7548923C"]
 17 [-]: GETGLOBAL R3 K4        ; R3 := _G
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 19 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 20 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1["0x458F27A9"]
 26 [-]: LOADK     R4 K9        ; R4 := "SetQuestType"
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 4229
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x7E1F26D7"]
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["0xF81722A2"]
  8 [-]: MOVE      R7 R2        ; R7 := R2
  9 [-]: GETGLOBAL R8 K3        ; R8 := _G
 10 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["UIMaterial_RectangleNoDepth"]
 11 [-]: GETGLOBAL R9 K3        ; R9 := _G
 12 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["UIMaterial_Rectangle"]
 13 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 14 [-]: CALL      R3 0 1       ; R3(R4,...)
 15 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0["0x302AAB2F"]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K7        ; R6 := "RectInnerColor"
 18 [-]: GETGLOBAL R7 K3        ; R7 := _G
 19 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["UIColorObject_DarkBlue"]
 20 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["r"]
 21 [-]: GETGLOBAL R8 K3        ; R8 := _G
 22 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UIColorObject_DarkBlue"]
 23 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["g"]
 24 [-]: GETGLOBAL R9 K3        ; R9 := _G
 25 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["UIColorObject_DarkBlue"]
 26 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["b"]
 27 [-]: LOADK     R10 K12      ; R10 := 0.20000000298023
 28 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 29 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0["0x302AAB2F"]
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: LOADK     R6 K13       ; R6 := "RectEdgeColor"
 32 [-]: GETGLOBAL R7 K3        ; R7 := _G
 33 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIColorObject_White"]
 34 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["r"]
 35 [-]: GETGLOBAL R8 K3        ; R8 := _G
 36 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["UIColorObject_White"]
 37 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["g"]
 38 [-]: GETGLOBAL R9 K3        ; R9 := _G
 39 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["UIColorObject_White"]
 40 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["b"]
 41 [-]: LOADK     R10 K15      ; R10 := 0
 42 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 43 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 4238
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R4 K0        ; R4 := gGameData
  2 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
  3 [-]: MOVE      R6 R4        ; R6 := R4
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 109
  6 [-]: JMP       109          ; PC := 109
  7 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0["0xE6F0FF83"]
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: SELF      R6 R4 K3     ; R7 := R4; R6 := R4["0xDB2548DF"]
 10 [-]: MOVE      R8 R5        ; R8 := R5
 11 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["0xF81722A2"]
 14 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R8 R0        ; R8 := R0
 17 [-]: MOVE      R8 R1        ; R8 := R1
 18 [-]: MOVE      R9 R3        ; R9 := R3
 19 [-]: GETTABLE  R10 R6 K6    ; R10 := R6["mTitle"]
 20 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 21 [-]: GETGLOBAL R8 K7        ; R8 := 0xF595ADDE
 22 [-]: GETUPVAL  R9 U0        ; R9 := U0
 23 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["0xF81722A2"]
 24 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R10 R0       ; R10 := R0
 27 [-]: MOVE      R10 R1       ; R10 := R1
 28 [-]: MOVE      R11 R2       ; R11 := R2
 29 [-]: GETTABLE  R12 R6 K8    ; R12 := R6["mStanding"]
 30 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 31 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 32 [-]: GETUPVAL  R9 U0        ; R9 := U0
 33 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["0xF81722A2"]
 34 [-]: SELF      R10 R0 K9    ; R11 := R0; R10 := R0["0xF4A5D323"]
 35 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 36 [-]: GETGLOBAL R11 K10      ; R11 := gGameConfig
 37 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0xA96A5D94"]
 38 [-]: MOVE      R13 R5       ; R13 := R5
 39 [-]: MOVE      R14 R7       ; R14 := R7
 40 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 41 [-]: LOADK     R12 K12      ; R12 := 0
 42 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 43 [-]: GETUPVAL  R10 U0       ; R10 := U0
 44 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0xF81722A2"]
 45 [-]: SELF      R11 R0 K9    ; R12 := R0; R11 := R0["0xF4A5D323"]
 46 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 47 [-]: GETGLOBAL R12 K10      ; R12 := gGameConfig
 48 [-]: SELF      R12 R12 K13  ; R13 := R12; R12 := R12["0xFA65888C"]
 49 [-]: MOVE      R14 R5       ; R14 := R5
 50 [-]: MOVE      R15 R7       ; R15 := R7
 51 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 52 [-]: SELF      R13 R0 K14   ; R14 := R0; R13 := R0["0x14B9772E"]
 53 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 54 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 55 [-]: SUB       R11 R10 R8   ; R11 := R10 - R8
 56 [-]: SELF      R12 R0 K15   ; R13 := R0; R12 := R0["0xFFA83251"]
 57 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 58 [-]: GETGLOBAL R13 K16      ; R13 := Lotus_Game
 59 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["STANDING_LIMIT_BIN_NONE"]
 60 [-]: LT        0 R13 R12    ; if R13 >= R12 then PC := 75
 61 [-]: JMP       75           ; PC := 75
 62 [-]: GETGLOBAL R13 K16      ; R13 := Lotus_Game
 63 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["MAX_DailyStandingLimitBin"]
 64 [-]: LT        0 R12 R13    ; if R12 >= R13 then PC := 75
 65 [-]: JMP       75           ; PC := 75
 66 [-]: SELF      R13 R4 K19   ; R14 := R4; R13 := R4["0x79B173F7"]
 67 [-]: MOVE      R15 R12      ; R15 := R12
 68 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 69 [-]: GETGLOBAL R14 K20      ; R14 := math
 70 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["0x65F9712A"]
 71 [-]: MOVE      R15 R11      ; R15 := R11
 72 [-]: MOVE      R16 R13      ; R16 := R13
 73 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 74 [-]: MOVE      R11 R14      ; R11 := R14
 75 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETGLOBAL R14 K7       ; R14 := 0xF595ADDE
 78 [-]: MOVE      R15 R1       ; R15 := R1
 79 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 80 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
 81 [-]: SUB       R14 R8 R9    ; R14 := R8 - R9
 82 [-]: SUB       R15 R10 R9   ; R15 := R10 - R9
 83 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MOVE      R16 R0       ; R16 := R0
 86 [-]: MOVE      R16 R1       ; R16 := R1
 87 [-]: SELF      R17 R0 K9    ; R18 := R0; R17 := R0["0xF4A5D323"]
 88 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 89 [-]: TEST      R17 0        ; if not R17 then PC := 103
 90 [-]: JMP       103          ; PC := 103
 91 [-]: EQ        0 R7 K12     ; if R7 ~= 0 then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: DIV       R15 R15 K22  ; R15 := R15 / 2
 94 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
 95 [-]: LT        0 R14 K12    ; if R14 >= 0 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: UNM       R15 R15      ; R15 := - R15
 98 [-]: JMP       103          ; PC := 103
 99 [-]: LT        0 R7 K12     ; if R7 >= 0 then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
102 [-]: UNM       R15 R15      ; R15 := - R15
103 [-]: MOVE      R17 R7       ; R17 := R7
104 [-]: MOVE      R18 R14      ; R18 := R14
105 [-]: MOVE      R19 R15      ; R19 := R15
106 [-]: MOVE      R20 R16      ; R20 := R16
107 [-]: MOVE      R21 R11      ; R21 := R11
108 [-]: RETURN    R17 6        ; return R17,R18,R19,R20,R21
109 [-]: LOADK     R17 K12      ; R17 := 0
110 [-]: LOADK     R18 K12      ; R18 := 0
111 [-]: LOADK     R19 K23      ; R19 := 1
112 [-]: MOVE      R20 R0       ; R20 := R0
113 [-]: LOADK     R21 K12      ; R21 := 0
114 [-]: RETURN    R17 6        ; return R17,R18,R19,R20,R21
115 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 4285
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 4289
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSpeakerSyndicate"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mSpeakerSyndicate"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 10 [-]: SETTABLE  R1 K5 R6     ; R1["HasEnoughReputationForSacrifice"] := R6
 11 [-]: SETTABLE  R1 K4 R5     ; R1["ReputationRequired"] := R5
 12 [-]: SETTABLE  R1 K3 R4     ; R1["Reputation"] := R4
 13 [-]: SETTABLE  R1 K2 R3     ; R1["Level"] := R3
 14 [-]: LOADK     R3 K6        ; R3 := 3
 15 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0xF56D15AF"]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Level"]
 24 [-]: LE        1 R3 R4      ; if R3 <= R4 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: SETTABLE  R1 K8 R4     ; R1["Loved"] := R4
 29 [-]: GETGLOBAL R4 K9        ; R4 := gPlayerProfileMgr
 30 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x21EF7B1A"]
 31 [-]: LOADK     R6 K11       ; R6 := 0
 32 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 33 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: TEST      R5 1         ; if R5 then PC := 47
 37 [-]: JMP       47           ; PC := 47
 38 [-]: SELF      R5 R4 K12    ; R6 := R4; R5 := R4["0x3EEB612E"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETTABLE  R6 R1 K8     ; R6 := R1["Loved"]
 41 [-]: TEST      R6 0         ; if not R6 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: SELF      R6 R5 K13    ; R7 := R5; R6 := R5["0xD481AC59"]
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: MOVE      R6 R6        ; R6 := R6
 46 [-]: SETTABLE  R1 K8 R6     ; R1["Loved"] := R6
 47 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 4310
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x880196A7"]
  2 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mClipName"]
  3 [-]: LOADK     R5 K2        ; R5 := "Image"
  4 [-]: LOADK     R6 K3        ; R6 := "_alpha"
  5 [-]: GETUPVAL  R7 U0        ; R7 := U0
  6 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["0xF81722A2"]
  7 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
  8 [-]: GETTABLE  R9 R1 K6     ; R9 := R1["Icon"]
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: LOADK     R9 K7        ; R9 := 0
 11 [-]: LOADK     R10 K8       ; R10 := 100
 12 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 15 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["Icon"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K9        ; R2 := 0x2C00D429
 21 [-]: LOADK     R3 K10       ; R3 := "/Lotus/Types/Game/LotusSigil"
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 24 [-]: SELF      R4 R0 K12    ; R5 := R0; R4 := R0["0x6B7B470B"]
 25 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 26 [-]: LOADK     R7 K13       ; R7 := ".Image"
 27 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 28 [-]: LOADK     R7 K14       ; R7 := "_height"
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: GETUPVAL  R4 U0        ; R4 := U0
 32 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xF81722A2"]
 33 [-]: GETTABLE  R5 R1 K15    ; R5 := R1["Type"]
 34 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x8B598ED4"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 37 [-]: MOVE      R6 R3        ; R6 := R3
 38 [-]: MUL       R7 R3 K17    ; R7 := R3 * 1.444000005722
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: SELF      R5 R0 K18    ; R6 := R0; R5 := R0["0x26581636"]
 41 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mClipName"]
 42 [-]: LOADK     R8 K13       ; R8 := ".Image"
 43 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 44 [-]: GETTABLE  R8 R1 K6     ; R8 := R1["Icon"]
 45 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 46 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0["0x880196A7"]
 47 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mClipName"]
 48 [-]: LOADK     R8 K2        ; R8 := "Image"
 49 [-]: LOADK     R9 K19       ; R9 := "_width"
 50 [-]: MOVE      R10 R4       ; R10 := R4
 51 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 52 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 4325
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x2D0B8A86"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x63B09107
 19 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mDailyDeals"]
 20 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 21 [-]: JMP       39           ; PC := 39
 22 [-]: GETGLOBAL R7 K5        ; R7 := Engine
 23 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xD09D7910"]
 24 [-]: GETTABLE  R8 R6 K7     ; R8 := R6["mActivation"]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LE        0 R7 K8      ; if R7 > 0 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETGLOBAL R7 K5        ; R7 := Engine
 29 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xD09D7910"]
 30 [-]: GETTABLE  R8 R6 K9     ; R8 := R6["mExpiry"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: LT        0 K8 R7      ; if 0 >= R7 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 35 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xF6C45762"]
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: TAILCALL  R7 2 0       ; R7,... := R7(R8)
 38 [-]: RETURN    R7 0         ; return R7,...
 39 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 22; R4 := R5 end
 40 [-]: JMP       22           ; PC := 22
 41 [-]: LOADNIL   R7 R7        ; R7 := nil
 42 [-]: RETURN    R7 2         ; return R7
 43 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 4345
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  3 [-]: SELF      R4 R1 K2     ; R5 := R1; R4 := R1["0x3077BE70"]
  4 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  5 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  6 [-]: TEST      R3 1         ; if R3 then PC := 72
  7 [-]: JMP       72           ; PC := 72
  8 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1["0x3077BE70"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x8B598ED4"]
 11 [-]: GETGLOBAL R5 K4        ; R5 := gRecipeItemType
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: TEST      R3 0         ; if not R3 then PC := 72
 14 [-]: JMP       72           ; PC := 72
 15 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x5DB0BD4"]
 16 [-]: GETGLOBAL R5 K6        ; R5 := 0x9FAED6BC
 17 [-]: SELF      R6 R1 K7     ; R7 := R1; R6 := R1["0xFF82B3D"]
 18 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 19 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 20 [-]: MOVE      R6 R1        ; R6 := R1
 21 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 22 [-]: EQ        1 R3 K0      ; if R3 == "" then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 69
 25 [-]: JMP       69           ; PC := 69
 26 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0xCF3F0AF8"]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: TEST      R5 1         ; if R5 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x5DB0BD4"]
 34 [-]: GETGLOBAL R7 K6        ; R7 := 0x9FAED6BC
 35 [-]: SELF      R8 R4 K10    ; R9 := R4; R8 := R4["0x616C74B6"]
 36 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 37 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 38 [-]: MOVE      R8 R1        ; R8 := R1
 39 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 40 [-]: MOVE      R2 R5        ; R2 := R5
 41 [-]: JMP       50           ; PC := 50
 42 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x5DB0BD4"]
 43 [-]: GETGLOBAL R7 K6        ; R7 := 0x9FAED6BC
 44 [-]: SELF      R8 R1 K10    ; R9 := R1; R8 := R1["0x616C74B6"]
 45 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 46 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R2 R5        ; R2 := R5
 50 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 51 [-]: SETTABLE  R5 K11 R2    ; R5["ITEM"] := R2
 52 [-]: MOVE      R3 R5        ; R3 := R5
 53 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Items/BlueprintAndItem"
 54 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1["0x105AB39B"]
 55 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 56 [-]: LT        0 K14 R6     ; if 1 >= R6 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1["0x105AB39B"]
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: SETTABLE  R3 K15 R6    ; R3["NUM"] := R6
 61 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Items/LargeBatchBlueprintAndItem"
 62 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x5DB0BD4"]
 63 [-]: MOVE      R8 R5        ; R8 := R5
 64 [-]: MOVE      R9 R1        ; R9 := R1
 65 [-]: MOVE      R10 R3       ; R10 := R3
 66 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 67 [-]: MOVE      R2 R6        ; R2 := R6
 68 [-]: JMP       70           ; PC := 70
 69 [-]: MOVE      R2 R3        ; R2 := R3
 70 [-]: RETURN    R2 2         ; return R2
 71 [-]: JMP       103          ; PC := 103
 72 [-]: SELF      R6 R1 K17    ; R7 := R1; R6 := R1["0x8292A1EF"]
 73 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 74 [-]: GETGLOBAL R7 K18       ; R7 := Engine
 75 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["Item_FusionBundles"]
 76 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 92
 77 [-]: JMP       92           ; PC := 92
 78 [-]: SELF      R6 R1 K20    ; R7 := R1; R6 := R1["0x41604216"]
 79 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 80 [-]: UNM       R6 R6        ; R6 := - R6
 81 [-]: MOVE      R7 R6        ; R7 := R6
 82 [-]: LOADK     R8 K21       ; R8 := " "
 83 [-]: SELF      R9 R0 K5     ; R10 := R0; R9 := R0["0x5DB0BD4"]
 84 [-]: GETGLOBAL R11 K6       ; R11 := 0x9FAED6BC
 85 [-]: SELF      R12 R1 K10   ; R13 := R1; R12 := R1["0x616C74B6"]
 86 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 87 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 88 [-]: MOVE      R12 R1       ; R12 := R1
 89 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 90 [-]: CONCAT    R2 R7 R9     ; R2 := R7 .. R8 .. R9
 91 [-]: JMP       103          ; PC := 103
 92 [-]: SELF      R7 R1 K17    ; R8 := R1; R7 := R1["0x8292A1EF"]
 93 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 94 [-]: GETGLOBAL R8 K18       ; R8 := Engine
 95 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["Item_AvatarImage"]
 96 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: GETGLOBAL R7 K6        ; R7 := 0x9FAED6BC
 99 [-]: SELF      R8 R1 K10    ; R9 := R1; R8 := R1["0x616C74B6"]
100 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
101 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
102 [-]: MOVE      R2 R7        ; R2 := R7
103 [-]: SELF      R7 R0 K5     ; R8 := R0; R7 := R0["0x5DB0BD4"]
104 [-]: MOVE      R9 R2        ; R9 := R2
105 [-]: MOVE      R10 R1       ; R10 := R1
106 [-]: TAILCALL  R7 4 0       ; R7,... := R7(R8,R9,R10)
107 [-]: RETURN    R7 0         ; return R7,...
108 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 4378
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R2 K0        ; R2 := _G
  2 [-]: SETTABLE  R2 K1 R0     ; R2["TrainingMissionRank"] := R0
  3 [-]: GETGLOBAL R2 K2        ; R2 := gGameConfig
  4 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x7DDA95FC"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETGLOBAL R3 K4        ; R3 := math
  7 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x65F9712A"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: SUB       R5 R2 K6     ; R5 := R2 - 1
 10 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 11 [-]: MOVE      R0 R3        ; R0 := R3
 12 [-]: GETGLOBAL R3 K0        ; R3 := _G
 13 [-]: SETTABLE  R3 K7 R1     ; R3["IsTrainingMissionPractise"] := R1
 14 [-]: GETGLOBAL R3 K2        ; R3 := gGameConfig
 15 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x5360CCB0"]
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETTABLE  R4 R3 K9     ; R4 := R3["missionReward"]
 21 [-]: SETTABLE  R4 K10 K11   ; R4["credits"] := 0
 22 [-]: GETGLOBAL R4 K12       ; R4 := Engine
 23 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["0x8661A01"]
 24 [-]: CALL      R4 1 2       ; R4 := R4()
 25 [-]: SELF      R5 R3 K14    ; R6 := R3; R5 := R3["0x22B1F84A"]
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: SELF      R6 R3 K15    ; R7 := R3; R6 := R3["0x70C51B59"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LOADK     R7 K6        ; R7 := 1
 30 [-]: LEN       R8 R6        ; R8 := # R6
 31 [-]: LOADK     R9 K6        ; R9 := 1
 32 [-]: FORPREP   R7 37        ; R7 -= R9; PC := 37
 33 [-]: SELF      R11 R4 K16   ; R12 := R4; R11 := R4["0x8D25D081"]
 34 [-]: GETTABLE  R13 R6 R10   ; R13 := R6[R10]
 35 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["agent"]
 36 [-]: CALL      R11 3 1      ; R11(R12,R13)
 37 [-]: FORLOOP   R7 33        ; R7 += R9; if R7 <= R8 then begin PC := 33; R10 := R7 end
 38 [-]: SELF      R11 R4 K18   ; R12 := R4; R11 := R4["0x26103FF"]
 39 [-]: MOVE      R13 R5       ; R13 := R5
 40 [-]: CALL      R11 3 1      ; R11(R12,R13)
 41 [-]: SELF      R11 R4 K19   ; R12 := R4; R11 := R4["0xE96B2E8E"]
 42 [-]: GETTABLE  R13 R3 K20   ; R13 := R3["levelOverride"]
 43 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13["0x1B252E3C"]
 44 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 45 [-]: CALL      R11 0 1      ; R11(R12,...)
 46 [-]: GETTABLE  R11 R3 K22   ; R11 := R3["gameRules"]
 47 [-]: SETTABLE  R4 K22 R11   ; R4["gameRules"] := R11
 48 [-]: SETTABLE  R4 K23 K24   ; R4["migrateServer"] := "0x0"
 49 [-]: GETGLOBAL R11 K12      ; R11 := Engine
 50 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["0x56DF865D"]
 51 [-]: MOVE      R12 R4       ; R12 := R4
 52 [-]: CALL      R11 2 1      ; R11(R12)
 53 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 4409
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := 10
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 4413
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 4417
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: MOVE      R2 R1        ; R2 := R1
  2 [-]: LOADK     R3 K0        ; R3 := ""
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: TEST      R5 0         ; if not R5 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: MOVE      R5 R0        ; R5 := R0
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: RETURN    R5 3         ; return R5,R6
 12 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0["0x30BDE7F"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: SELF      R6 R5 K3     ; R7 := R5; R6 := R5["0x6200B095"]
 15 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["LOT_NORMAL"]
 17 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
 18 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["PISTOL_SLOT"]
 19 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 20 [-]: SELF      R7 R5 K3     ; R8 := R5; R7 := R5["0x6200B095"]
 21 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
 22 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["LOT_NORMAL"]
 23 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 24 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["LONG_GUN_SLOT"]
 25 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 26 [-]: SELF      R8 R5 K3     ; R9 := R5; R8 := R5["0x6200B095"]
 27 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 28 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["LOT_NORMAL"]
 29 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 30 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["MELEE_SLOT"]
 31 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 32 [-]: GETTABLE  R9 R6 K9     ; R9 := R6["mItemId"]
 33 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 34 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 35 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["InvalidItemID"]
 36 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETTABLE  R9 R7 K9     ; R9 := R7["mItemId"]
 39 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 40 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 41 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["InvalidItemID"]
 42 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETTABLE  R9 R8 K9     ; R9 := R8["mItemId"]
 45 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 46 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 47 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["InvalidItemID"]
 48 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: LOADK     R3 K12       ; R3 := "/Lotus/Language/Menu/IncompleteLoadout"
 52 [-]: GETGLOBAL R9 K13       ; R9 := gGameData
 53 [-]: SELF      R10 R9 K14   ; R11 := R9; R10 := R9["0x3155222A"]
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: GETGLOBAL R11 K15      ; R11 := gGameConfig
 56 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x7DDA95FC"]
 57 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 58 [-]: GETGLOBAL R12 K17      ; R12 := math
 59 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["0x65F9712A"]
 60 [-]: ADD       R13 R10 K19  ; R13 := R10 + 1
 61 [-]: SUB       R14 R11 K19  ; R14 := R11 - 1
 62 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 63 [-]: GETGLOBAL R13 K15      ; R13 := gGameConfig
 64 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x5360CCB0"]
 65 [-]: MOVE      R15 R12      ; R15 := R12
 66 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 67 [-]: GETTABLE  R14 R13 K21  ; R14 := R13["archwingRequired"]
 68 [-]: TEST      R14 0        ; if not R14 then PC := 123
 69 [-]: JMP       123          ; PC := 123
 70 [-]: SELF      R14 R9 K22   ; R15 := R9; R14 := R9["0x6F2E05FD"]
 71 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 72 [-]: SELF      R15 R14 K23  ; R16 := R14; R15 := R14["0x5A67CD40"]
 73 [-]: GETGLOBAL R17 K4       ; R17 := Lotus_Game
 74 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["LOT_ARCHWING"]
 75 [-]: SELF      R18 R14 K25  ; R19 := R14; R18 := R14["0x413E14F1"]
 76 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
 77 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["LOT_ARCHWING"]
 78 [-]: CALL      R18 3 0      ; R18,... := R18(R19,R20)
 79 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 80 [-]: SELF      R16 R15 K26  ; R17 := R15; R16 := R15["0xA81C4B63"]
 81 [-]: GETGLOBAL R18 K4       ; R18 := Lotus_Game
 82 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["SUIT_SLOT"]
 83 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 84 [-]: SELF      R17 R15 K26  ; R18 := R15; R17 := R15["0xA81C4B63"]
 85 [-]: GETGLOBAL R19 K4       ; R19 := Lotus_Game
 86 [-]: GETTABLE  R19 R19 K7   ; R19 := R19["LONG_GUN_SLOT"]
 87 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 88 [-]: SELF      R18 R15 K26  ; R19 := R15; R18 := R15["0xA81C4B63"]
 89 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
 90 [-]: GETTABLE  R20 R20 K8   ; R20 := R20["MELEE_SLOT"]
 91 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 92 [-]: GETTABLE  R19 R16 K9   ; R19 := R16["mItemId"]
 93 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["mId"]
 94 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
 95 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["InvalidItemID"]
 96 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 110
 97 [-]: JMP       110          ; PC := 110
 98 [-]: GETTABLE  R19 R17 K9   ; R19 := R17["mItemId"]
 99 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["mId"]
100 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
101 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["InvalidItemID"]
102 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 110
103 [-]: JMP       110          ; PC := 110
104 [-]: GETTABLE  R19 R18 K9   ; R19 := R18["mItemId"]
105 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["mId"]
106 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
107 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["InvalidItemID"]
108 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 111
109 [-]: JMP       111          ; PC := 111
110 [-]: MOVE      R19 R0       ; R19 := R0
111 [-]: MOVE      R19 R1       ; R19 := R1
112 [-]: SELF      R20 R9 K28   ; R21 := R9; R20 := R9["0x95FCF4A0"]
113 [-]: CALL      R20 2 2      ; R20 := R20(R21)
114 [-]: TEST      R20 1        ; if R20 then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: MOVE      R20 R0       ; R20 := R0
117 [-]: TEST      R19 0        ; if not R19 then PC := 121
118 [-]: JMP       121          ; PC := 121
119 [-]: TEST      R20 1        ; if R20 then PC := 123
120 [-]: JMP       123          ; PC := 123
121 [-]: MOVE      R2 R0        ; R2 := R0
122 [-]: LOADK     R3 K29       ; R3 := "/Lotus/Language/Menu/ArchwingFailureSolo"
123 [-]: TEST      R2 0         ; if not R2 then PC := 161
124 [-]: JMP       161          ; PC := 161
125 [-]: SELF      R21 R0 K30   ; R22 := R0; R21 := R0["0x99FA94A5"]
126 [-]: CALL      R21 2 2      ; R21 := R21(R22)
127 [-]: LT        0 K31 R21    ; if 0 >= R21 then PC := 161
128 [-]: JMP       161          ; PC := 161
129 [-]: TEST      R1 1         ; if R1 then PC := 161
130 [-]: JMP       161          ; PC := 161
131 [-]: GETUPVAL  R22 U0       ; R22 := U0
132 [-]: LOADNIL   R23 R23      ; R23 := nil
133 [-]: MOVE      R24 R21      ; R24 := R21
134 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
135 [-]: SELF      R23 R0 K32   ; R24 := R0; R23 := R0["0xAE27D172"]
136 [-]: CALL      R23 2 2      ; R23 := R23(R24)
137 [-]: LT        0 K31 R23    ; if 0 >= R23 then PC := 150
138 [-]: JMP       150          ; PC := 150
139 [-]: GETGLOBAL R23 K33      ; R23 := 0xE6DC43B0
140 [-]: LOADK     R24 K34      ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpRetry"
141 [-]: NEWTABLE  R25 0 2      ; R25 := {}
142 [-]: SETTABLE  R25 K35 R22  ; R25["TIME_REMAINING"] := R22
143 [-]: GETUPVAL  R26 U1       ; R26 := U1
144 [-]: CALL      R26 1 2      ; R26 := R26()
145 [-]: SETTABLE  R25 K36 R26  ; R25["COST"] := R26
146 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
147 [-]: MOVE      R3 R23       ; R3 := R23
148 [-]: MOVE      R4 R1        ; R4 := R1
149 [-]: JMP       160          ; PC := 160
150 [-]: GETGLOBAL R23 K33      ; R23 := 0xE6DC43B0
151 [-]: LOADK     R24 K37      ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
152 [-]: MOVE      R25 R0       ; R25 := R0
153 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
154 [-]: GETGLOBAL R24 K38      ; R24 := string
155 [-]: GETTABLE  R24 R24 K39  ; R24 := R24["0x4B1F4F58"]
156 [-]: MOVE      R25 R23      ; R25 := R23
157 [-]: MOVE      R26 R22      ; R26 := R22
158 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
159 [-]: MOVE      R3 R24       ; R3 := R24
160 [-]: MOVE      R2 R0        ; R2 := R0
161 [-]: TEST      R2 0         ; if not R2 then PC := 179
162 [-]: JMP       179          ; PC := 179
163 [-]: GETGLOBAL R24 K1       ; R24 := 0x400E7765
164 [-]: GETGLOBAL R25 K40      ; R25 := gMatchingService
165 [-]: SELF      R25 R25 K41  ; R26 := R25; R25 := R25["0xD5E03646"]
166 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
167 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
168 [-]: TEST      R24 1        ; if R24 then PC := 179
169 [-]: JMP       179          ; PC := 179
170 [-]: GETGLOBAL R24 K40      ; R24 := gMatchingService
171 [-]: SELF      R24 R24 K41  ; R25 := R24; R24 := R24["0xD5E03646"]
172 [-]: CALL      R24 2 2      ; R24 := R24(R25)
173 [-]: SELF      R24 R24 K42  ; R25 := R24; R24 := R24["0x65BE14FA"]
174 [-]: CALL      R24 2 2      ; R24 := R24(R25)
175 [-]: LT        0 K19 R24    ; if 1 >= R24 then PC := 179
176 [-]: JMP       179          ; PC := 179
177 [-]: MOVE      R2 R0        ; R2 := R0
178 [-]: LOADK     R3 K43       ; R3 := "/Lotus/Language/Menu/Foreground_LevelUpSessionActive"
179 [-]: MOVE      R24 R2       ; R24 := R2
180 [-]: MOVE      R25 R3       ; R25 := R3
181 [-]: MOVE      R26 R4       ; R26 := R4
182 [-]: RETURN    R24 4        ; return R24,R25,R26
183 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 4486
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: LOADK     R3 K1        ; R3 := "Dojo: OnTrainingResultUploaded result="
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", body="
  7 [-]: GETGLOBAL R6 K2        ; R6 := 0x9FAED6BC
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 10 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 4490
; #Upvalues:       2
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["0xF81722A2"]
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
  4 [-]: GETGLOBAL R7 K2        ; R7 := _G
  5 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["IsTrainingMissionPractise"]
  6 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  7 [-]: MOVE      R7 R1        ; R7 := R1
  8 [-]: GETGLOBAL R8 K2        ; R8 := _G
  9 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["IsTrainingMissionPractise"]
 10 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 11 [-]: GETGLOBAL R6 K4        ; R6 := 0x329BDC44
 12 [-]: LOADK     R7 K5        ; R7 := "Lotus.Scripts.ChallengeRooms.BaseChallengeRoom"
 13 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 14 [-]: TEST      R5 1         ; if R5 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETGLOBAL R7 K6        ; R7 := gGameData
 17 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0x21179974"]
 18 [-]: LOADK     R9 K8        ; R9 := 1
 19 [-]: GETUPVAL  R10 U1       ; R10 := U1
 20 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 21 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
 22 [-]: MOVE      R8 R0        ; R8 := R0
 23 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 24 [-]: TEST      R7 0         ; if not R7 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETGLOBAL R7 K9        ; R7 := gRegion
 27 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x6C682A30"]
 28 [-]: LOADK     R9 K11       ; R9 := 0
 29 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 30 [-]: MOVE      R0 R7        ; R0 := R7
 31 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
 32 [-]: MOVE      R8 R0        ; R8 := R0
 33 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 34 [-]: TEST      R7 1         ; if R7 then PC := 49
 35 [-]: JMP       49           ; PC := 49
 36 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0["0x868E646A"]
 37 [-]: MOVE      R9 R1        ; R9 := R1
 38 [-]: MOVE      R10 R1       ; R10 := R1
 39 [-]: GETGLOBAL R11 K13      ; R11 := Engine
 40 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["ATMM_PHYSICS_DRIVEN"]
 41 [-]: GETGLOBAL R12 K13      ; R12 := Engine
 42 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["PRT_FREEZE"]
 43 [-]: MOVE      R13 R1       ; R13 := R1
 44 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 45 [-]: SELF      R7 R0 K16    ; R8 := R0; R7 := R0["0x58347F07"]
 46 [-]: MOVE      R9 R2        ; R9 := R2
 47 [-]: MOVE      R10 R1       ; R10 := R1
 48 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 49 [-]: GETGLOBAL R7 K17       ; R7 := 0x201191EA
 50 [-]: LOADK     R8 K18       ; R8 := 3
 51 [-]: CALL      R7 2 1       ; R7(R8)
 52 [-]: GETTABLE  R7 R6 K19    ; R7 := R6["0x1849C790"]
 53 [-]: MOVE      R8 R3        ; R8 := R3
 54 [-]: MOVE      R9 R4        ; R9 := R4
 55 [-]: MOVE      R10 R5       ; R10 := R5
 56 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 57 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 4511
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameRules
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8B598ED4"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := gLotusBasePvpGameRulesType
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: GETGLOBAL R3 K3        ; R3 := gRegion
  7 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x48FBE19F"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K5        ; R4 := 0x63B09107
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 12 [-]: JMP       45           ; PC := 45
 13 [-]: TEST      R1 0         ; if not R1 then PC := 35
 14 [-]: JMP       35           ; PC := 35
 15 [-]: SELF      R9 R0 K6     ; R10 := R0; R9 := R0["0x62914D1F"]
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: SELF      R10 R8 K6    ; R11 := R8; R10 := R8["0x62914D1F"]
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 45
 20 [-]: JMP       45           ; PC := 45
 21 [-]: GETGLOBAL R9 K7        ; R9 := _T
 22 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 23 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: GETGLOBAL R9 K7        ; R9 := _T
 26 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 27 [-]: TEST      R9 0         ; if not R9 then PC := 45
 28 [-]: JMP       45           ; PC := 45
 29 [-]: GETGLOBAL R9 K7        ; R9 := _T
 30 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 31 [-]: GETGLOBAL R10 K10      ; R10 := Lotus_Game
 32 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["PVPMODE_DEATHMATCH"]
 33 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: SELF      R9 R8 K12    ; R10 := R8; R9 := R8["0x144A28F9"]
 36 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 37 [-]: GETGLOBAL R10 K13      ; R10 := HIDDEN_PLAYER_NAME
 38 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: GETGLOBAL R9 K14       ; R9 := table
 41 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["0xE6450C9D"]
 42 [-]: MOVE      R10 R2       ; R10 := R2
 43 [-]: MOVE      R11 R8       ; R11 := R8
 44 [-]: CALL      R9 3 1       ; R9(R10,R11)
 45 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 13; R6 := R7 end
 46 [-]: JMP       13           ; PC := 13
 47 [-]: RETURN    R2 2         ; return R2
 48 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 4527
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= "" then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0xE6DC43B0
  5 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/Loadout_Default"
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: MOVE      R1 R2        ; R1 := R2
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x86466050
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: TEST      R2 0         ; if not R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0xF5BEE61A
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: GETGLOBAL R4 K5        ; R4 := Script
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["TSC_NAME"]
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: MOVE      R1 R2        ; R1 := R2
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 4541
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 4545
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: LOADK     R2 K2        ; R2 := ""
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: RETURN    R2 3         ; return R2,R3
 10 [-]: GETGLOBAL R2 K3        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ActiveQuestLoaded"]
 12 [-]: TEST      R2 1         ; if R2 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: LOADK     R2 K2        ; R2 := ""
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: RETURN    R2 3         ; return R2,R3
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 5       ; R2,R3,R4,R5 := R2(R3)
 20 [-]: LOADK     R6 K2        ; R6 := ""
 21 [-]: GETGLOBAL R7 K3        ; R7 := _T
 22 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["questInfo"]
 23 [-]: EQ        1 R7 K6      ; if R7 == nil then PC := 47
 24 [-]: JMP       47           ; PC := 47
 25 [-]: GETGLOBAL R7 K3        ; R7 := _T
 26 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["questInfo"]
 27 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["activeQuest"]
 28 [-]: EQ        1 R7 K6      ; if R7 == nil then PC := 47
 29 [-]: JMP       47           ; PC := 47
 30 [-]: GETGLOBAL R7 K3        ; R7 := _T
 31 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["questInfo"]
 32 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["activeQuest"]
 33 [-]: EQ        0 R7 R2      ; if R7 ~= R2 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: GETGLOBAL R7 K3        ; R7 := _T
 36 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["questInfo"]
 37 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["stage"]
 38 [-]: EQ        0 R7 R3      ; if R7 ~= R3 then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETGLOBAL R7 K3        ; R7 := _T
 41 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["questInfo"]
 42 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["gameRules"]
 43 [-]: GETGLOBAL R8 K10       ; R8 := gGameRules
 44 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: MOVE      R7 R0        ; R7 := R0
 47 [-]: MOVE      R7 R1        ; R7 := R1
 48 [-]: GETGLOBAL R8 K3        ; R8 := _T
 49 [-]: NEWTABLE  R9 0 5       ; R9 := {}
 50 [-]: SETTABLE  R9 K7 R2     ; R9["activeQuest"] := R2
 51 [-]: SETTABLE  R9 K8 R3     ; R9["stage"] := R3
 52 [-]: SETTABLE  R9 K11 R4    ; R9["difficulty"] := R4
 53 [-]: SETTABLE  R9 K12 R5    ; R9["canProgress"] := R5
 54 [-]: GETGLOBAL R10 K10      ; R10 := gGameRules
 55 [-]: SETTABLE  R9 K9 R10    ; R9["gameRules"] := R10
 56 [-]: SETTABLE  R8 K5 R9     ; R8["questInfo"] := R9
 57 [-]: GETGLOBAL R8 K13       ; R8 := _G
 58 [-]: GETGLOBAL R9 K3        ; R9 := _T
 59 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["questInfo"]
 60 [-]: SETTABLE  R8 K5 R9     ; R8["questInfo"] := R9
 61 [-]: GETGLOBAL R8 K1        ; R8 := 0x400E7765
 62 [-]: MOVE      R9 R2        ; R9 := R2
 63 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 64 [-]: TEST      R8 0         ; if not R8 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: TEST      R0 0         ; if not R0 then PC := 193
 67 [-]: JMP       193          ; PC := 193
 68 [-]: TEST      R3 0         ; if not R3 then PC := 185
 69 [-]: JMP       185          ; PC := 185
 70 [-]: GETGLOBAL R8 K1        ; R8 := 0x400E7765
 71 [-]: MOVE      R9 R2        ; R9 := R2
 72 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 73 [-]: TEST      R8 1         ; if R8 then PC := 185
 74 [-]: JMP       185          ; PC := 185
 75 [-]: GETGLOBAL R8 K14       ; R8 := 0xE6DC43B0
 76 [-]: GETGLOBAL R9 K15       ; R9 := 0x9FAED6BC
 77 [-]: SELF      R10 R2 K16   ; R11 := R2; R10 := R2["0x616C74B6"]
 78 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 79 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 80 [-]: MOVE      R10 R0       ; R10 := R0
 81 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 82 [-]: MOVE      R6 R8        ; R6 := R8
 83 [-]: SELF      R8 R2 K17    ; R9 := R2; R8 := R2["0xDBE456AD"]
 84 [-]: SUB       R10 R3 K18   ; R10 := R3 - 1
 85 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 86 [-]: GETGLOBAL R9 K19       ; R9 := EMPTY_SYMBOL
 87 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 98
 88 [-]: JMP       98           ; PC := 98
 89 [-]: MOVE      R9 R6        ; R9 := R6
 90 [-]: LOADK     R10 K20      ; R10 := "\r\n"
 91 [-]: GETGLOBAL R11 K14      ; R11 := 0xE6DC43B0
 92 [-]: GETGLOBAL R12 K15      ; R12 := 0x9FAED6BC
 93 [-]: MOVE      R13 R8       ; R13 := R8
 94 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 95 [-]: MOVE      R13 R0       ; R13 := R0
 96 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 97 [-]: CONCAT    R6 R9 R11    ; R6 := R9 .. R10 .. R11
 98 [-]: TEST      R7 0         ; if not R7 then PC := 185
 99 [-]: JMP       185          ; PC := 185
100 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
101 [-]: GETGLOBAL R10 K21      ; R10 := gRegion
102 [-]: CALL      R9 2 2       ; R9 := R9(R10)
103 [-]: TEST      R9 1         ; if R9 then PC := 185
104 [-]: JMP       185          ; PC := 185
105 [-]: LOADK     R9 K18       ; R9 := 1
106 [-]: GETGLOBAL R10 K3       ; R10 := _T
107 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["QuestResetVars"]
108 [-]: LEN       R10 R10      ; R10 := # R10
109 [-]: LOADK     R11 K18      ; R11 := 1
110 [-]: FORPREP   R9 116       ; R9 -= R11; PC := 116
111 [-]: GETGLOBAL R13 K3       ; R13 := _T
112 [-]: GETGLOBAL R14 K3       ; R14 := _T
113 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["QuestResetVars"]
114 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
115 [-]: SETTABLE  R13 R14 K6   ; R13[R14] := nil
116 [-]: FORLOOP   R9 111       ; R9 += R11; if R9 <= R10 then begin PC := 111; R12 := R9 end
117 [-]: GETGLOBAL R13 K3       ; R13 := _T
118 [-]: NEWTABLE  R14 0 0      ; R14 := {}
119 [-]: SETTABLE  R13 K22 R14  ; R13["QuestResetVars"] := R14
120 [-]: GETGLOBAL R13 K21      ; R13 := gRegion
121 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0x372CB914"]
122 [-]: CALL      R13 2 2      ; R13 := R13(R14)
123 [-]: GETGLOBAL R14 K1       ; R14 := 0x400E7765
124 [-]: MOVE      R15 R13      ; R15 := R13
125 [-]: CALL      R14 2 2      ; R14 := R14(R15)
126 [-]: TEST      R14 0        ; if not R14 then PC := 138
127 [-]: JMP       138          ; PC := 138
128 [-]: GETGLOBAL R14 K24      ; R14 := 0x93B1256B
129 [-]: LOADK     R15 K25      ; R15 := "No local player yet, and this is kinda important"
130 [-]: CALL      R14 2 1      ; R14(R15)
131 [-]: GETGLOBAL R14 K3       ; R14 := _T
132 [-]: SETTABLE  R14 K5 K6    ; R14["questInfo"] := nil
133 [-]: GETGLOBAL R14 K13      ; R14 := _G
134 [-]: SETTABLE  R14 K5 K6    ; R14["questInfo"] := nil
135 [-]: LOADK     R14 K2       ; R14 := ""
136 [-]: MOVE      R15 R0       ; R15 := R0
137 [-]: RETURN    R14 3        ; return R14,R15
138 [-]: GETGLOBAL R14 K3       ; R14 := _T
139 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["InHub"]
140 [-]: TEST      R14 1        ; if R14 then PC := 147
141 [-]: JMP       147          ; PC := 147
142 [-]: GETGLOBAL R14 K10      ; R14 := gGameRules
143 [-]: SELF      R14 R14 K27  ; R15 := R14; R14 := R14["0x7C138DEF"]
144 [-]: CALL      R14 2 2      ; R14 := R14(R15)
145 [-]: TEST      R14 1        ; if R14 then PC := 185
146 [-]: JMP       185          ; PC := 185
147 [-]: GETGLOBAL R14 K3       ; R14 := _T
148 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["InHub"]
149 [-]: TEST      R14 0        ; if not R14 then PC := 162
150 [-]: JMP       162          ; PC := 162
151 [-]: GETGLOBAL R14 K10      ; R14 := gGameRules
152 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14["0x8B598ED4"]
153 [-]: GETGLOBAL R16 K29      ; R16 := gLotusHubGameRulesType
154 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
155 [-]: TEST      R14 0        ; if not R14 then PC := 162
156 [-]: JMP       162          ; PC := 162
157 [-]: GETGLOBAL R14 K10      ; R14 := gGameRules
158 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14["0xDA28574"]
159 [-]: MOVE      R16 R13      ; R16 := R13
160 [-]: CALL      R14 3 1      ; R14(R15,R16)
161 [-]: JMP       176          ; PC := 176
162 [-]: GETUPVAL  R14 U1       ; R14 := U1
163 [-]: CALL      R14 1 2      ; R14 := R14()
164 [-]: TEST      R14 1        ; if R14 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETGLOBAL R14 K10      ; R14 := gGameRules
167 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14["0x8B598ED4"]
168 [-]: GETGLOBAL R16 K31      ; R16 := gLotusAttractModeGameRulesType
169 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
170 [-]: TEST      R14 0        ; if not R14 then PC := 176
171 [-]: JMP       176          ; PC := 176
172 [-]: GETGLOBAL R14 K10      ; R14 := gGameRules
173 [-]: SELF      R14 R14 K32  ; R15 := R14; R14 := R14["0xDB0D333E"]
174 [-]: MOVE      R16 R13      ; R16 := R13
175 [-]: CALL      R14 3 1      ; R14(R15,R16)
176 [-]: GETUPVAL  R14 U2       ; R14 := U2
177 [-]: CALL      R14 1 2      ; R14 := R14()
178 [-]: GETGLOBAL R15 K1       ; R15 := 0x400E7765
179 [-]: MOVE      R16 R14      ; R16 := R14
180 [-]: CALL      R15 2 2      ; R15 := R15(R16)
181 [-]: TEST      R15 1        ; if R15 then PC := 185
182 [-]: JMP       185          ; PC := 185
183 [-]: SELF      R15 R14 K33  ; R16 := R14; R15 := R14["0x58475636"]
184 [-]: CALL      R15 2 1      ; R15(R16)
185 [-]: GETGLOBAL R15 K34      ; R15 := gFlashMgr
186 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15["0xE3A8ABAA"]
187 [-]: LOADK     R17 K36      ; R17 := "OnQuestsChanged"
188 [-]: LOADK     R18 K2       ; R18 := ""
189 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
190 [-]: MOVE      R15 R6       ; R15 := R6
191 [-]: MOVE      R16 R1       ; R16 := R1
192 [-]: RETURN    R15 3        ; return R15,R16
193 [-]: SELF      R15 R1 K37   ; R16 := R1; R15 := R1["0x6F2E05FD"]
194 [-]: CALL      R15 2 2      ; R15 := R15(R16)
195 [-]: SELF      R16 R15 K38  ; R17 := R15; R16 := R15["0x70666039"]
196 [-]: CALL      R16 2 2      ; R16 := R16(R17)
197 [-]: GETGLOBAL R17 K39      ; R17 := 0x63B09107
198 [-]: MOVE      R18 R16      ; R18 := R16
199 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
200 [-]: JMP       207          ; PC := 207
201 [-]: GETTABLE  R22 R21 K40  ; R22 := R21["completed"]
202 [-]: TEST      R22 1        ; if R22 then PC := 207
203 [-]: JMP       207          ; PC := 207
204 [-]: LOADK     R22 K41      ; R22 := "New quests are available!"
205 [-]: MOVE      R23 R1       ; R23 := R1
206 [-]: RETURN    R22 3        ; return R22,R23
207 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 201; R19 := R20 end
208 [-]: JMP       201          ; PC := 201
209 [-]: LOADK     R22 K2       ; R22 := ""
210 [-]: MOVE      R23 R1       ; R23 := R1
211 [-]: RETURN    R22 3        ; return R22,R23
212 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 4616
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 4620
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LEN       R0 R0        ; R0 := # R0
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 4624
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R2 K0        ; R2 := 3
  2 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x2C00D429
  4 [-]: LOADK     R5 K2        ; R5 := "/EE/Types/Physics/FullBody"
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: GETGLOBAL R5 K3        ; R5 := gBaseAvatarType
  7 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
  8 [-]: GETGLOBAL R4 K4        ; R4 := 0x221C9700
  9 [-]: CALL      R4 1 2       ; R4 := R4()
 10 [-]: GETGLOBAL R5 K5        ; R5 := 0xA0DB3B89
 11 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0["0x7EEA994C"]
 12 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 13 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 14 [-]: SELF      R6 R0 K7     ; R7 := R0; R6 := R0["0x8DB5D01F"]
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x84096397"]
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: MUL       R7 R5 R2     ; R7 := R5 * R2
 19 [-]: ADD       R7 R6 R7     ; R7 := R6 + R7
 20 [-]: GETGLOBAL R8 K9        ; R8 := gRegion
 21 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8["0x31444607"]
 22 [-]: MOVE      R10 R6       ; R10 := R6
 23 [-]: MOVE      R11 R7       ; R11 := R7
 24 [-]: MOVE      R12 R3       ; R12 := R3
 25 [-]: MOVE      R13 R1       ; R13 := R1
 26 [-]: MOVE      R14 R4       ; R14 := R4
 27 [-]: TAILCALL  R8 7 0       ; R8,... := R8(R9,R10,R11,R12,R13,R14)
 28 [-]: RETURN    R8 0         ; return R8,...
 29 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 4636
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  3 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
  4 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["SUIT_SLOT"]
  5 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: SELF      R5 R1 K2     ; R6 := R1; R5 := R1["0xD3A6CE65"]
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: MOVE      R3 R5        ; R3 := R5
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
 12 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["MELEE_SLOT"]
 13 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: SELF      R5 R1 K4     ; R6 := R1; R5 := R1["0xA82A3D30"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: MOVE      R3 R5        ; R3 := R5
 18 [-]: JMP       34           ; PC := 34
 19 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LONG_GUN_SLOT"]
 21 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R5 R1 K6     ; R6 := R1; R5 := R1["0x1D216770"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: MOVE      R3 R5        ; R3 := R5
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["PISTOL_SLOT"]
 29 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0xB5D66AE"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: MOVE      R3 R5        ; R3 := R5
 34 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 35 [-]: MOVE      R6 R3        ; R6 := R3
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: TEST      R5 1         ; if R5 then PC := 67
 38 [-]: JMP       67           ; PC := 67
 39 [-]: LEN       R5 R3        ; R5 := # R3
 40 [-]: LT        0 K10 R5     ; if 0 >= R5 then PC := 67
 41 [-]: JMP       67           ; PC := 67
 42 [-]: LOADK     R5 K11       ; R5 := 1
 43 [-]: LEN       R6 R3        ; R6 := # R3
 44 [-]: LOADK     R7 K11       ; R7 := 1
 45 [-]: FORPREP   R5 66        ; R5 -= R7; PC := 66
 46 [-]: GETGLOBAL R9 K9        ; R9 := 0x400E7765
 47 [-]: GETTABLE  R10 R3 R8    ; R10 := R3[R8]
 48 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["mItemType"]
 49 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 50 [-]: TEST      R9 1         ; if R9 then PC := 66
 51 [-]: JMP       66           ; PC := 66
 52 [-]: SELF      R9 R2 K13    ; R10 := R2; R9 := R2["0x62FBC1B8"]
 53 [-]: GETTABLE  R11 R3 R8    ; R11 := R3[R8]
 54 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["mItemType"]
 55 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 56 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
 57 [-]: MOVE      R11 R9       ; R11 := R9
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: TEST      R10 1        ; if R10 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: GETGLOBAL R10 K14      ; R10 := table
 62 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0xE6450C9D"]
 63 [-]: MOVE      R11 R4       ; R11 := R4
 64 [-]: MOVE      R12 R9       ; R12 := R9
 65 [-]: CALL      R10 3 1      ; R10(R11,R12)
 66 [-]: FORLOOP   R5 46        ; R5 += R7; if R5 <= R6 then begin PC := 46; R8 := R5 end
 67 [-]: RETURN    R4 2         ; return R4
 68 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 4666
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: LOADK     R3 K1        ; R3 := ""
 13 [-]: RETURN    R2 3         ; return R2,R3
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: LOADK     R5 K1        ; R5 := ""
 18 [-]: NEWTABLE  R6 4 0       ; R6 := {}
 19 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 20 [-]: GETGLOBAL R8 K3        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["SUIT_SLOT"]
 22 [-]: SETTABLE  R7 K2 R8     ; R7["Cat"] := R8
 23 [-]: SETTABLE  R7 K5 K6     ; R7["isSuit"] := "0x1"
 24 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 25 [-]: GETGLOBAL R9 K3        ; R9 := Lotus_Game
 26 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["LONG_GUN_SLOT"]
 27 [-]: SETTABLE  R8 K2 R9     ; R8["Cat"] := R9
 28 [-]: SETTABLE  R8 K5 K8     ; R8["isSuit"] := "0x0"
 29 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 30 [-]: GETGLOBAL R10 K3       ; R10 := Lotus_Game
 31 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["PISTOL_SLOT"]
 32 [-]: SETTABLE  R9 K2 R10    ; R9["Cat"] := R10
 33 [-]: SETTABLE  R9 K5 K8     ; R9["isSuit"] := "0x0"
 34 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 35 [-]: GETGLOBAL R11 K3       ; R11 := Lotus_Game
 36 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["MELEE_SLOT"]
 37 [-]: SETTABLE  R10 K2 R11   ; R10["Cat"] := R11
 38 [-]: SETTABLE  R10 K5 K8    ; R10["isSuit"] := "0x0"
 39 [-]: SETLIST   R6 4 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
 40 [-]: GETGLOBAL R7 K11       ; R7 := 0x63B09107
 41 [-]: MOVE      R8 R6        ; R8 := R6
 42 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 43 [-]: JMP       89           ; PC := 89
 44 [-]: GETTABLE  R12 R11 K5   ; R12 := R11["isSuit"]
 45 [-]: TEST      R12 0        ; if not R12 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: TEST      R2 0         ; if not R2 then PC := 54
 48 [-]: JMP       54           ; PC := 54
 49 [-]: GETTABLE  R12 R11 K5   ; R12 := R11["isSuit"]
 50 [-]: TEST      R12 1        ; if R12 then PC := 83
 51 [-]: JMP       83           ; PC := 83
 52 [-]: TEST      R3 1         ; if R3 then PC := 83
 53 [-]: JMP       83           ; PC := 83
 54 [-]: GETUPVAL  R12 U0       ; R12 := U0
 55 [-]: GETTABLE  R13 R11 K2   ; R13 := R11["Cat"]
 56 [-]: MOVE      R14 R0       ; R14 := R0
 57 [-]: MOVE      R15 R1       ; R15 := R1
 58 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 59 [-]: GETGLOBAL R13 K11      ; R13 := 0x63B09107
 60 [-]: MOVE      R14 R12      ; R14 := R12
 61 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 62 [-]: JMP       81           ; PC := 81
 63 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
 64 [-]: MOVE      R19 R17      ; R19 := R17
 65 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 66 [-]: TEST      R18 1        ; if R18 then PC := 81
 67 [-]: JMP       81           ; PC := 81
 68 [-]: SELF      R18 R17 K12  ; R19 := R17; R18 := R17["0xA2BAA519"]
 69 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 70 [-]: TEST      R18 0        ; if not R18 then PC := 81
 71 [-]: JMP       81           ; PC := 81
 72 [-]: GETTABLE  R18 R11 K2   ; R18 := R11["Cat"]
 73 [-]: GETGLOBAL R19 K3       ; R19 := Lotus_Game
 74 [-]: GETTABLE  R19 R19 K4   ; R19 := R19["SUIT_SLOT"]
 75 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: MOVE      R2 R1        ; R2 := R1
 78 [-]: JMP       83           ; PC := 83
 79 [-]: MOVE      R3 R1        ; R3 := R1
 80 [-]: JMP       83           ; PC := 83
 81 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 63; R15 := R16 end
 82 [-]: JMP       63           ; PC := 63
 83 [-]: TESTSET   R4 R2 0      ; if not R2 then PC := 86 else R4 := R2
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MOVE      R4 R3        ; R4 := R3
 86 [-]: TEST      R4 0         ; if not R4 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: JMP       91           ; PC := 91
 89 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 44; R9 := R10 end
 90 [-]: JMP       44           ; PC := 44
 91 [-]: TEST      R4 1         ; if R4 then PC := 123
 92 [-]: JMP       123          ; PC := 123
 93 [-]: LOADK     R18 K1       ; R18 := ""
 94 [-]: TEST      R2 1         ; if R2 then PC := 108
 95 [-]: JMP       108          ; PC := 108
 96 [-]: MOVE      R19 R18      ; R19 := R18
 97 [-]: LOADK     R20 K13      ; R20 := "1x "
 98 [-]: GETGLOBAL R21 K14      ; R21 := 0xE6DC43B0
 99 [-]: LOADK     R22 K15      ; R22 := "/Lotus/Language/Menu/Global_ProductCategory_Suit"
100 [-]: MOVE      R23 R0       ; R23 := R0
101 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
102 [-]: CONCAT    R18 R19 R21  ; R18 := R19 .. R20 .. R21
103 [-]: TEST      R3 1         ; if R3 then PC := 108
104 [-]: JMP       108          ; PC := 108
105 [-]: MOVE      R19 R18      ; R19 := R18
106 [-]: LOADK     R20 K16      ; R20 := " + "
107 [-]: CONCAT    R18 R19 R20  ; R18 := R19 .. R20
108 [-]: TEST      R3 1         ; if R3 then PC := 117
109 [-]: JMP       117          ; PC := 117
110 [-]: MOVE      R19 R18      ; R19 := R18
111 [-]: LOADK     R20 K13      ; R20 := "1x "
112 [-]: GETGLOBAL R21 K14      ; R21 := 0xE6DC43B0
113 [-]: LOADK     R22 K17      ; R22 := "/Lotus/Language/Menu/Loadout_PVPCompatibleWeapon"
114 [-]: MOVE      R23 R0       ; R23 := R0
115 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
116 [-]: CONCAT    R18 R19 R21  ; R18 := R19 .. R20 .. R21
117 [-]: GETGLOBAL R19 K14      ; R19 := 0xE6DC43B0
118 [-]: LOADK     R20 K18      ; R20 := "/Lotus/Language/Menu/Loadout_PVPNeedCompatibleGear"
119 [-]: NEWTABLE  R21 0 1      ; R21 := {}
120 [-]: SETTABLE  R21 K19 R18  ; R21["REQ_GEAR"] := R18
121 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
122 [-]: MOVE      R5 R19       ; R5 := R19
123 [-]: MOVE      R19 R4       ; R19 := R4
124 [-]: MOVE      R20 R5       ; R20 := R5
125 [-]: RETURN    R19 3        ; return R19,R20
126 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 4719
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xEA569929"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
  5 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0x1C19D966"]
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: LOADK     R7 K2        ; R7 := "_width"
  8 [-]: MOVE      R8 R2        ; R8 := R2
  9 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 10 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0x1C19D966"]
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: LOADK     R7 K3        ; R7 := "_height"
 13 [-]: MOVE      R8 R3        ; R8 := R3
 14 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 15 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x7E1F26D7"]
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: GETGLOBAL R7 K5        ; R7 := _G
 18 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIMaterial_Bluer"]
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 4728
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gPlayerProfileMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x21EF7B1A"]
  3 [-]: LOADK     R4 K2        ; R4 := 0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 34
  9 [-]: JMP       34           ; PC := 34
 10 [-]: LOADK     R3 K4        ; R3 := 0.30000001192093
 11 [-]: GETGLOBAL R4 K5        ; R4 := Engine
 12 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x9490FE70"]
 13 [-]: CALL      R4 1 2       ; R4 := R4()
 14 [-]: TEST      R4 0         ; if not R4 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0x3EEB612E"]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0xA0E6A036"]
 19 [-]: GETGLOBAL R6 K5        ; R6 := Engine
 20 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["IST_CONTROLLER"]
 21 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 22 [-]: MUL       R3 K10 R4    ; R3 := 13 * R4
 23 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0x3EEB612E"]
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x386648A7"]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: TEST      R4 0         ; if not R4 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: UNM       R1 R1        ; R1 := - R1
 30 [-]: MUL       R4 R0 R3     ; R4 := R0 * R3
 31 [-]: MUL       R5 R1 R3     ; R5 := R1 * R3
 32 [-]: LOADK     R6 K2        ; R6 := 0
 33 [-]: RETURN    R4 4         ; return R4,R5,R6
 34 [-]: LOADK     R4 K2        ; R4 := 0
 35 [-]: LOADK     R5 K2        ; R5 := 0
 36 [-]: LOADK     R6 K2        ; R6 := 0
 37 [-]: RETURN    R4 4         ; return R4,R5,R6
 38 [-]: RETURN    R0 1         ; return 


; Function #243:
;
; Name:            
; Defined at line: 4747
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: CLOSURE   R2 0         ; R2 := closure(Function #243.1)
 10 [-]: SETTABLE  R1 K1 R2     ; R1["ViewConsoleCallback"] := R2
 11 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x695D4229"]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: TEST      R2 0         ; if not R2 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R2 K4        ; R2 := gGameData
 17 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0xDD467D6D"]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: LOADK     R6 K1        ; R6 := "ViewConsoleCallback"
 20 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETGLOBAL R3 K6        ; R3 := gMatchingService
 23 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x3E49F77"]
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R3 3 1       ; R3(R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #243.1:
;
; Name:            
; Defined at line: 4753
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := gMatchingService
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3E49F77"]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #244:
;
; Name:            
; Defined at line: 4769
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ArsenalOpen"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["ArsenalUpgradeOpen"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ModScreenOpen"]
 11 [-]: GETGLOBAL R1 K0        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["AppearancePreviewOpen"]
 13 [-]: TEST      R1 0         ; if not R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K5        ; R1 := Lotus_Game
 16 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["PurchaseParams_PURCHASE_APPEARANCE_PREVIEW"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: JMP       28           ; PC := 28
 19 [-]: TEST      R0 0         ; if not R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R1 K5        ; R1 := Lotus_Game
 22 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["PurchaseParams_PURCHASE_ARSENAL"]
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R1 K5        ; R1 := Lotus_Game
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["PurchaseParams_PURCHASE_MARKET"]
 27 [-]: RETURN    R1 2         ; return R1
 28 [-]: RETURN    R0 1         ; return 


; Function #245:
;
; Name:            
; Defined at line: 4780
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := math
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xBCF846DF"]
  3 [-]: MUL       R3 R0 R1     ; R3 := R0 * R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SUB       R3 R0 R2     ; R3 := R0 - R2
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #246:
;
; Name:            
; Defined at line: 4785
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #247:
;
; Name:            
; Defined at line: 4790
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Coupon_Generic"
  2 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Item_Suits"]
  4 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/Coupon_Warframe"
  7 [-]: JMP       25           ; PC := 25
  8 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Item_LongGuns"]
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K5        ; R1 := "/Lotus/Language/Menu/Coupon_LongGun"
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Item_Pistols"]
 16 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R1 K7        ; R1 := "/Lotus/Language/Menu/Coupon_Pistol"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 21 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Item_Melee"]
 22 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R1 K9        ; R1 := "/Lotus/Language/Menu/Coupon_Melee"
 25 [-]: GETGLOBAL R2 K10       ; R2 := 0xE6DC43B0
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 29 [-]: RETURN    R2 0         ; return R2,...
 30 [-]: RETURN    R0 1         ; return 


; Function #248:
;
; Name:            
; Defined at line: 4806
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["StoreItem"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: NEWTABLE  R1 0 1       ; R1 := {}
 18 [-]: SETTABLE  R1 K4 K5     ; R1["mAmount"] := 0
 19 [-]: SETTABLE  R0 K3 R1     ; R0["Coupon"] := R1
 20 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xE088419A"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: LOADK     R2 K7        ; R2 := 1
 24 [-]: LEN       R3 R1        ; R3 := # R1
 25 [-]: LOADK     R4 K7        ; R4 := 1
 26 [-]: FORPREP   R2 57        ; R2 -= R4; PC := 57
 27 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 28 [-]: GETGLOBAL R7 K8        ; R7 := Engine
 29 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xD09D7910"]
 30 [-]: GETTABLE  R8 R6 K10    ; R8 := R6["mExpiryDate"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: LT        0 K5 R7      ; if 0 >= R7 then PC := 57
 33 [-]: JMP       57           ; PC := 57
 34 [-]: SELF      R8 R6 K11    ; R9 := R6; R8 := R6["0x689E4214"]
 35 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["StoreItem"]
 36 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 37 [-]: TEST      R8 0         ; if not R8 then PC := 57
 38 [-]: JMP       57           ; PC := 57
 39 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 40 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x10ECB0C4"]
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: TEST      R8 1         ; if R8 then PC := 57
 43 [-]: JMP       57           ; PC := 57
 44 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 45 [-]: GETTABLE  R9 R6 K13    ; R9 := R6["mId"]
 46 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["mId"]
 47 [-]: SETTABLE  R8 K13 R9    ; R8["mId"] := R9
 48 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 49 [-]: GETTABLE  R9 R6 K4     ; R9 := R6["mAmount"]
 50 [-]: DIV       R9 R9 K14    ; R9 := R9 / 100
 51 [-]: SETTABLE  R8 K4 R9     ; R8["mAmount"] := R9
 52 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 53 [-]: GETTABLE  R9 R6 K10    ; R9 := R6["mExpiryDate"]
 54 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["sec"]
 55 [-]: SETTABLE  R8 K15 R9    ; R8["mExpiry"] := R9
 56 [-]: JMP       58           ; PC := 58
 57 [-]: FORLOOP   R2 27        ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
 58 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 59 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x6139ADFF"]
 60 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 61 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 62 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["Item_DC_NONE"]
 63 [-]: LT        0 R9 R8      ; if R9 >= R8 then PC := 94
 64 [-]: JMP       94           ; PC := 94
 65 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 66 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8["0x8292A1EF"]
 67 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 68 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 69 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["Item_MiscItems"]
 70 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 94
 71 [-]: JMP       94           ; PC := 94
 72 [-]: GETGLOBAL R8 K1        ; R8 := gGameData
 73 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8["0x41010993"]
 74 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 75 [-]: TEST      R8 0         ; if not R8 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 78 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["0xD09D7910"]
 79 [-]: GETTABLE  R10 R8 K15   ; R10 := R8["mExpiry"]
 80 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 81 [-]: LT        0 K5 R9      ; if 0 >= R9 then PC := 94
 82 [-]: JMP       94           ; PC := 94
 83 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 84 [-]: SETTABLE  R10 K13 K22  ; R10["mId"] := nil
 85 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 86 [-]: GETTABLE  R11 R8 K23   ; R11 := R8["mDiscount"]
 87 [-]: DIV       R11 R11 K14  ; R11 := R11 / 100
 88 [-]: SETTABLE  R10 K4 R11   ; R10["mAmount"] := R11
 89 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 90 [-]: GETTABLE  R11 R8 K15   ; R11 := R8["mExpiry"]
 91 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["sec"]
 92 [-]: SETTABLE  R10 K15 R11  ; R10["mExpiry"] := R11
 93 [-]: SETTABLE  R0 K24 K25   ; R0["IsDiscordPlat"] := "0x1"
 94 [-]: RETURN    R0 1         ; return 


; Function #249:
;
; Name:            
; Defined at line: 4841
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #250:
;
; Name:            
; Defined at line: 4845
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: LOADNIL   R5 R5        ; R5 := nil
  4 [-]: GETGLOBAL R6 K0        ; R6 := gGameData
  5 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
  6 [-]: MOVE      R8 R6        ; R8 := R6
  7 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  8 [-]: TEST      R7 1         ; if R7 then PC := 24
  9 [-]: JMP       24           ; PC := 24
 10 [-]: SELF      R7 R6 K2     ; R8 := R6; R7 := R6["0x6F2E05FD"]
 11 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 12 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0x4FA1109B"]
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: MOVE      R5 R7        ; R5 := R7
 15 [-]: LOADK     R7 K4        ; R7 := 1
 16 [-]: LEN       R8 R5        ; R8 := # R5
 17 [-]: LOADK     R9 K4        ; R9 := 1
 18 [-]: FORPREP   R7 23        ; R7 -= R9; PC := 23
 19 [-]: GETUPVAL  R11 U0       ; R11 := U0
 20 [-]: EQ        0 R5 R11     ; if R5 ~= R11 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: FORLOOP   R7 19        ; R7 += R9; if R7 <= R8 then begin PC := 19; R10 := R7 end
 24 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 25 [-]: MOVE      R12 R0       ; R12 := R0
 26 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 27 [-]: TEST      R11 1        ; if R11 then PC := 94
 28 [-]: JMP       94           ; PC := 94
 29 [-]: SELF      R11 R0 K5    ; R12 := R0; R11 := R0["0xB68BBE7C"]
 30 [-]: GETGLOBAL R13 K6       ; R13 := gColorPickerItemType
 31 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 32 [-]: GETGLOBAL R12 K7       ; R12 := 0x63B09107
 33 [-]: MOVE      R13 R11      ; R13 := R11
 34 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 35 [-]: JMP       92           ; PC := 92
 36 [-]: GETGLOBAL R17 K8       ; R17 := 0x1BF588C6
 37 [-]: LOADK     R18 K9       ; R18 := 0
 38 [-]: CALL      R17 2 1      ; R17(R18)
 39 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
 40 [-]: MOVE      R18 R16      ; R18 := R16
 41 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 42 [-]: TEST      R17 1        ; if R17 then PC := 92
 43 [-]: JMP       92           ; PC := 92
 44 [-]: SELF      R17 R16 K10  ; R18 := R16; R17 := R16["0x3077BE70"]
 45 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 46 [-]: GETGLOBAL R18 K1       ; R18 := 0x400E7765
 47 [-]: MOVE      R19 R17      ; R19 := R17
 48 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 49 [-]: TEST      R18 1        ; if R18 then PC := 92
 50 [-]: JMP       92           ; PC := 92
 51 [-]: SELF      R18 R16 K11  ; R19 := R16; R18 := R16["0x8292A1EF"]
 52 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 53 [-]: GETGLOBAL R19 K12      ; R19 := Engine
 54 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["Item_FlavourItems"]
 55 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 92
 56 [-]: JMP       92           ; PC := 92
 57 [-]: SELF      R18 R16 K14  ; R19 := R16; R18 := R16["0x8EE9CD07"]
 58 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 59 [-]: GETGLOBAL R19 K1       ; R19 := 0x400E7765
 60 [-]: MOVE      R20 R5       ; R20 := R5
 61 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 62 [-]: TEST      R19 1        ; if R19 then PC := 75
 63 [-]: JMP       75           ; PC := 75
 64 [-]: LOADK     R19 K4       ; R19 := 1
 65 [-]: LEN       R20 R5       ; R20 := # R5
 66 [-]: LOADK     R21 K4       ; R21 := 1
 67 [-]: FORPREP   R19 74       ; R19 -= R21; PC := 74
 68 [-]: GETTABLE  R23 R5 R22   ; R23 := R5[R22]
 69 [-]: GETTABLE  R23 R23 K15  ; R23 := R23["mItemType"]
 70 [-]: EQ        0 R23 R17    ; if R23 ~= R17 then PC := 74
 71 [-]: JMP       74           ; PC := 74
 72 [-]: MOVE      R18 R1       ; R18 := R1
 73 [-]: JMP       75           ; PC := 75
 74 [-]: FORLOOP   R19 68       ; R19 += R21; if R19 <= R20 then begin PC := 68; R22 := R19 end
 75 [-]: TEST      R18 1        ; if R18 then PC := 85
 76 [-]: JMP       85           ; PC := 85
 77 [-]: SELF      R23 R16 K16  ; R24 := R16; R23 := R16["0x7D5774ED"]
 78 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 79 [-]: TEST      R23 1        ; if R23 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: TEST      R2 0         ; if not R2 then PC := 92
 82 [-]: JMP       92           ; PC := 92
 83 [-]: TEST      R1 1         ; if R1 then PC := 92
 84 [-]: JMP       92           ; PC := 92
 85 [-]: GETGLOBAL R23 K17      ; R23 := table
 86 [-]: GETTABLE  R23 R23 K18  ; R23 := R23["0xE6450C9D"]
 87 [-]: MOVE      R24 R3       ; R24 := R3
 88 [-]: NEWTABLE  R25 0 2      ; R25 := {}
 89 [-]: SETTABLE  R25 K19 R16  ; R25["mStoreItem"] := R16
 90 [-]: SETTABLE  R25 K20 R18  ; R25["mOwned"] := R18
 91 [-]: CALL      R23 3 1      ; R23(R24,R25)
 92 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 36; R14 := R15 end
 93 [-]: JMP       36           ; PC := 36
 94 [-]: MOVE      R23 R3       ; R23 := R3
 95 [-]: MOVE      R24 R4       ; R24 := R4
 96 [-]: RETURN    R23 3        ; return R23,R24
 97 [-]: RETURN    R0 1         ; return 


; Function #251:
;
; Name:            
; Defined at line: 4892
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #252:
;
; Name:            
; Defined at line: 4896
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 12 [-]: LEN       R5 R3        ; R5 := # R3
 13 [-]: TEST      R4 1         ; if R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: ADD       R5 R5 K1     ; R5 := R5 + 1
 16 [-]: GETGLOBAL R6 K2        ; R6 := 0x7FD4B57D
 17 [-]: LOADK     R7 K1        ; R7 := 1
 18 [-]: MOVE      R8 R5        ; R8 := R5
 19 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 20 [-]: LOADNIL   R7 R7        ; R7 := nil
 21 [-]: LEN       R8 R3        ; R8 := # R3
 22 [-]: LE        0 R6 R8      ; if R6 > R8 then PC := 35
 23 [-]: JMP       35           ; PC := 35
 24 [-]: GETGLOBAL R8 K3        ; R8 := 0x7C282057
 25 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 26 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["mStoreItem"]
 27 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9["0x3077BE70"]
 28 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 29 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 30 [-]: SELF      R9 R8 K6     ; R10 := R8; R9 := R8["0x7696CE30"]
 31 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 32 [-]: MOVE      R2 R9        ; R2 := R9
 33 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 34 [-]: GETTABLE  R7 R9 K4     ; R7 := R9["mStoreItem"]
 35 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 38 [-]: MOVE      R2 R9        ; R2 := R9
 39 [-]: LEN       R9 R2        ; R9 := # R2
 40 [-]: EQ        0 R9 K8      ; if R9 ~= 0 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: SELF      R9 R1 K6     ; R10 := R1; R9 := R1["0x7696CE30"]
 43 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 44 [-]: LOADK     R10 K9       ; R10 := 3
 45 [-]: LEN       R11 R9       ; R11 := # R9
 46 [-]: LOADK     R12 K10      ; R12 := 5
 47 [-]: FORPREP   R10 53       ; R10 -= R12; PC := 53
 48 [-]: GETGLOBAL R14 K11      ; R14 := table
 49 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["0xE6450C9D"]
 50 [-]: MOVE      R15 R2       ; R15 := R2
 51 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
 52 [-]: CALL      R14 3 1      ; R14(R15,R16)
 53 [-]: FORLOOP   R10 48       ; R10 += R12; if R10 <= R11 then begin PC := 48; R13 := R10 end
 54 [-]: LOADNIL   R7 R7        ; R7 := nil
 55 [-]: MOVE      R14 R2       ; R14 := R2
 56 [-]: MOVE      R15 R7       ; R15 := R7
 57 [-]: RETURN    R14 3        ; return R14,R15
 58 [-]: RETURN    R0 1         ; return 


; Function #253:
;
; Name:            
; Defined at line: 4939
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LOADK     R2 K0        ; R2 := 0
  5 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  6 [-]: GETGLOBAL R4 K2        ; R4 := gGameData
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R3 K2        ; R3 := gGameData
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xBF12F696"]
 14 [-]: GETGLOBAL R5 K5        ; R5 := Lotus_Game
 15 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["PvpBonusLoadoutBin"]
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: MOVE      R2 R3        ; R2 := R3
 18 [-]: GETGLOBAL R3 K7        ; R3 := math
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x65F9712A"]
 20 [-]: ADD       R4 R1 K9     ; R4 := R1 + 1
 21 [-]: ADD       R4 R4 R2     ; R4 := R4 + R2
 22 [-]: GETGLOBAL R5 K10       ; R5 := MAX_PVP_LOADOUTS
 23 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 24 [-]: RETURN    R3 0         ; return R3,...
 25 [-]: RETURN    R0 1         ; return 


; Function #254:
;
; Name:            
; Defined at line: 4949
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #255:
;
; Name:            
; Defined at line: 4953
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x1B252E3C"]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: LOADK     R3 K1        ; R3 := 0
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: MOVE      R6 R2        ; R6 := R2
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 30
 10 [-]: JMP       30           ; PC := 30
 11 [-]: GETTABLE  R5 R4 K2     ; R5 := R4[1]
 12 [-]: GETTABLE  R6 R4 K3     ; R6 := R4[2]
 13 [-]: LOADK     R7 K2        ; R7 := 1
 14 [-]: FORPREP   R5 29        ; R5 -= R7; PC := 29
 15 [-]: GETTABLE  R9 R1 R8     ; R9 := R1[R8]
 16 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["count"]
 17 [-]: TEST      R9 0         ; if not R9 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETTABLE  R9 R1 R8     ; R9 := R1[R8]
 20 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["count"]
 21 [-]: ADD       R3 R3 R9     ; R3 := R3 + R9
 22 [-]: JMP       24           ; PC := 24
 23 [-]: ADD       R3 R3 K2     ; R3 := R3 + 1
 24 [-]: GETTABLE  R9 R4 K2     ; R9 := R4[1]
 25 [-]: GETTABLE  R10 R4 K3    ; R10 := R4[2]
 26 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: JMP       30           ; PC := 30
 29 [-]: FORLOOP   R5 15        ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #256:
;
; Name:            
; Defined at line: 4973
; #Upvalues:       8
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  45

  1 [-]: LOADK     R4 K0        ; R4 := 0
  2 [-]: SELF      R5 R2 K1     ; R6 := R2; R5 := R2["0x8292A1EF"]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: SELF      R6 R2 K2     ; R7 := R2; R6 := R2["0xC5349ED"]
  5 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  6 [-]: SELF      R7 R2 K3     ; R8 := R2; R7 := R2["0x3077BE70"]
  7 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  8 [-]: TEST      R6 0         ; if not R6 then PC := 126
  9 [-]: JMP       126          ; PC := 126
 10 [-]: MOVE      R8 R0        ; R8 := R0
 11 [-]: MOVE      R9 R0        ; R9 := R0
 12 [-]: SELF      R10 R2 K4    ; R11 := R2; R10 := R2["0xEC2A2A3C"]
 13 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 14 [-]: LOADK     R11 K5       ; R11 := 1
 15 [-]: LEN       R12 R10      ; R12 := # R10
 16 [-]: LOADK     R13 K5       ; R13 := 1
 17 [-]: FORPREP   R11 41       ; R11 -= R13; PC := 41
 18 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 19 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["mTypeName"]
 20 [-]: GETGLOBAL R16 K7       ; R16 := 0x400E7765
 21 [-]: MOVE      R17 R15      ; R17 := R15
 22 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 23 [-]: TEST      R16 1        ; if R16 then PC := 41
 24 [-]: JMP       41           ; PC := 41
 25 [-]: GETUPVAL  R16 U0       ; R16 := U0
 26 [-]: SELF      R17 R15 K1   ; R18 := R15; R17 := R15["0x8292A1EF"]
 27 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
 28 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 29 [-]: TEST      R16 0        ; if not R16 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: MOVE      R8 R1        ; R8 := R1
 32 [-]: GETUPVAL  R16 U1       ; R16 := U1
 33 [-]: MOVE      R17 R15      ; R17 := R15
 34 [-]: MOVE      R18 R3       ; R18 := R3
 35 [-]: MOVE      R19 R1       ; R19 := R1
 36 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 37 [-]: TEST      R16 0        ; if not R16 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R9 R1        ; R9 := R1
 40 [-]: JMP       42           ; PC := 42
 41 [-]: FORLOOP   R11 18       ; R11 += R13; if R11 <= R12 then begin PC := 18; R14 := R11 end
 42 [-]: SELF      R16 R2 K8    ; R17 := R2; R16 := R2["0x6139ADFF"]
 43 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 44 [-]: GETGLOBAL R17 K9       ; R17 := Engine
 45 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["Item_DC_NITRO"]
 46 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETGLOBAL R16 K11      ; R16 := gGameData
 49 [-]: SELF      R16 R16 K12  ; R17 := R16; R16 := R16["0x9C8CCF19"]
 50 [-]: SELF      R18 R2 K13   ; R19 := R2; R18 := R2["0x1170584F"]
 51 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
 52 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 53 [-]: EQ        1 R16 K14    ; if R16 == "0x0" then PC := 71
 54 [-]: JMP       71           ; PC := 71
 55 [-]: GETGLOBAL R16 K9       ; R16 := Engine
 56 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["0x1398DAFB"]
 57 [-]: CALL      R16 1 2      ; R16 := R16()
 58 [-]: TEST      R16 0        ; if not R16 then PC := 73
 59 [-]: JMP       73           ; PC := 73
 60 [-]: SELF      R16 R2 K13   ; R17 := R2; R16 := R2["0x1170584F"]
 61 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 62 [-]: EQ        1 R16 K16    ; if R16 == "" then PC := 73
 63 [-]: JMP       73           ; PC := 73
 64 [-]: GETGLOBAL R16 K11      ; R16 := gGameData
 65 [-]: SELF      R16 R16 K17  ; R17 := R16; R16 := R16["0xBFA9E4F4"]
 66 [-]: SELF      R18 R2 K13   ; R19 := R2; R18 := R2["0x1170584F"]
 67 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
 68 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 69 [-]: TEST      R16 1        ; if R16 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: LOADK     R4 K0        ; R4 := 0
 72 [-]: JMP       92           ; PC := 92
 73 [-]: TEST      R8 0         ; if not R8 then PC := 79
 74 [-]: JMP       79           ; PC := 79
 75 [-]: TEST      R9 1         ; if R9 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: LOADK     R4 K5        ; R4 := 1
 78 [-]: JMP       92           ; PC := 92
 79 [-]: GETUPVAL  R16 U2       ; R16 := U2
 80 [-]: TEST      R16 0        ; if not R16 then PC := 92
 81 [-]: JMP       92           ; PC := 92
 82 [-]: GETUPVAL  R16 U3       ; R16 := U3
 83 [-]: MOVE      R17 R2       ; R17 := R2
 84 [-]: LOADNIL   R18 R19      ; R18 := R19 := nil
 85 [-]: MOVE      R20 R3       ; R20 := R3
 86 [-]: CALL      R16 5 3      ; R16,R17 := R16(R17,R18,R19,R20)
 87 [-]: EQ        0 R16 K0     ; if R16 ~= 0 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: EQ        0 R17 K0     ; if R17 ~= 0 then PC := 92
 90 [-]: JMP       92           ; PC := 92
 91 [-]: LOADK     R4 K5        ; R4 := 1
 92 [-]: GETGLOBAL R18 K9       ; R18 := Engine
 93 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["0x536FC07E"]
 94 [-]: CALL      R18 1 2      ; R18 := R18()
 95 [-]: TEST      R18 0        ; if not R18 then PC := 220
 96 [-]: JMP       220          ; PC := 220
 97 [-]: GETGLOBAL R18 K19      ; R18 := gPlayerProfileMgr
 98 [-]: SELF      R18 R18 K20  ; R19 := R18; R18 := R18["0x21EF7B1A"]
 99 [-]: LOADK     R20 K0       ; R20 := 0
100 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
101 [-]: SELF      R18 R18 K21  ; R19 := R18; R18 := R18["0x278AF238"]
102 [-]: LOADK     R20 K22      ; R20 := "steam_market"
103 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
104 [-]: TEST      R18 0        ; if not R18 then PC := 220
105 [-]: JMP       220          ; PC := 220
106 [-]: SELF      R18 R2 K23   ; R19 := R2; R18 := R2["0xA681A3A2"]
107 [-]: CALL      R18 2 2      ; R18 := R18(R19)
108 [-]: EQ        1 R18 K16    ; if R18 == "" then PC := 220
109 [-]: JMP       220          ; PC := 220
110 [-]: GETGLOBAL R18 K11      ; R18 := gGameData
111 [-]: SELF      R18 R18 K24  ; R19 := R18; R18 := R18["0x5C7ECD57"]
112 [-]: CALL      R18 2 2      ; R18 := R18(R19)
113 [-]: LOADK     R19 K5       ; R19 := 1
114 [-]: LEN       R20 R18      ; R20 := # R18
115 [-]: LOADK     R21 K5       ; R21 := 1
116 [-]: FORPREP   R19 124      ; R19 -= R21; PC := 124
117 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
118 [-]: SELF      R24 R2 K23   ; R25 := R2; R24 := R2["0xA681A3A2"]
119 [-]: CALL      R24 2 2      ; R24 := R24(R25)
120 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 124
121 [-]: JMP       124          ; PC := 124
122 [-]: LOADK     R4 K5        ; R4 := 1
123 [-]: JMP       220          ; PC := 220
124 [-]: FORLOOP   R19 117      ; R19 += R21; if R19 <= R20 then begin PC := 117; R22 := R19 end
125 [-]: JMP       220          ; PC := 220
126 [-]: GETGLOBAL R23 K25      ; R23 := 0x1BF588C6
127 [-]: CALL      R23 1 1      ; R23()
128 [-]: SELF      R23 R2 K26   ; R24 := R2; R23 := R2["0x966E7851"]
129 [-]: CALL      R23 2 2      ; R23 := R23(R24)
130 [-]: GETGLOBAL R24 K7       ; R24 := 0x400E7765
131 [-]: MOVE      R25 R7       ; R25 := R7
132 [-]: CALL      R24 2 2      ; R24 := R24(R25)
133 [-]: TEST      R24 1        ; if R24 then PC := 185
134 [-]: JMP       185          ; PC := 185
135 [-]: SELF      R24 R7 K27   ; R25 := R7; R24 := R7["0x8B598ED4"]
136 [-]: GETGLOBAL R26 K28      ; R26 := gVoidProjectionItemType
137 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
138 [-]: TEST      R24 0        ; if not R24 then PC := 185
139 [-]: JMP       185          ; PC := 185
140 [-]: MOVE      R24 R23      ; R24 := R23
141 [-]: GETGLOBAL R25 K29      ; R25 := string
142 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["0x633C4246"]
143 [-]: MOVE      R26 R24      ; R26 := R24
144 [-]: LOADK     R27 K31      ; R27 := "Bronze"
145 [-]: LOADK     R28 K16      ; R28 := ""
146 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
147 [-]: MOVE      R24 R25      ; R24 := R25
148 [-]: GETGLOBAL R25 K29      ; R25 := string
149 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["0x633C4246"]
150 [-]: MOVE      R26 R24      ; R26 := R24
151 [-]: LOADK     R27 K32      ; R27 := "Silver"
152 [-]: LOADK     R28 K16      ; R28 := ""
153 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
154 [-]: MOVE      R24 R25      ; R24 := R25
155 [-]: GETGLOBAL R25 K29      ; R25 := string
156 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["0x633C4246"]
157 [-]: MOVE      R26 R24      ; R26 := R24
158 [-]: LOADK     R27 K33      ; R27 := "Gold"
159 [-]: LOADK     R28 K16      ; R28 := ""
160 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
161 [-]: MOVE      R24 R25      ; R24 := R25
162 [-]: GETGLOBAL R25 K29      ; R25 := string
163 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["0x633C4246"]
164 [-]: MOVE      R26 R24      ; R26 := R24
165 [-]: LOADK     R27 K34      ; R27 := "Platinum"
166 [-]: LOADK     R28 K16      ; R28 := ""
167 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
168 [-]: MOVE      R24 R25      ; R24 := R25
169 [-]: NEWTABLE  R25 4 0      ; R25 := {}
170 [-]: MOVE      R26 R24      ; R26 := R24
171 [-]: LOADK     R27 K31      ; R27 := "Bronze"
172 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
173 [-]: MOVE      R27 R24      ; R27 := R24
174 [-]: LOADK     R28 K32      ; R28 := "Silver"
175 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
176 [-]: MOVE      R28 R24      ; R28 := R24
177 [-]: LOADK     R29 K33      ; R29 := "Gold"
178 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
179 [-]: MOVE      R29 R24      ; R29 := R24
180 [-]: LOADK     R30 K34      ; R30 := "Platinum"
181 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
182 [-]: SETLIST   R25 4 1      ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 4
183 [-]: MOVE      R23 R25      ; R23 := R25
184 [-]: JMP       189          ; PC := 189
185 [-]: NEWTABLE  R25 1 0      ; R25 := {}
186 [-]: MOVE      R26 R23      ; R26 := R23
187 [-]: SETLIST   R25 1 1      ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 1
188 [-]: MOVE      R23 R25      ; R23 := R25
189 [-]: LOADK     R25 K5       ; R25 := 1
190 [-]: LEN       R26 R23      ; R26 := # R23
191 [-]: LOADK     R27 K5       ; R27 := 1
192 [-]: FORPREP   R25 219      ; R25 -= R27; PC := 219
193 [-]: GETUPVAL  R29 U4       ; R29 := U4
194 [-]: MOVE      R30 R3       ; R30 := R3
195 [-]: GETTABLE  R31 R23 R28  ; R31 := R23[R28]
196 [-]: GETUPVAL  R32 U5       ; R32 := U5
197 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
198 [-]: TEST      R29 0        ; if not R29 then PC := 219
199 [-]: JMP       219          ; PC := 219
200 [-]: GETTABLE  R30 R29 K5   ; R30 := R29[1]
201 [-]: GETTABLE  R31 R29 K35  ; R31 := R29[2]
202 [-]: LOADK     R32 K5       ; R32 := 1
203 [-]: FORPREP   R30 218      ; R30 -= R32; PC := 218
204 [-]: GETTABLE  R34 R3 R33   ; R34 := R3[R33]
205 [-]: GETTABLE  R34 R34 K36  ; R34 := R34["count"]
206 [-]: TEST      R34 0        ; if not R34 then PC := 212
207 [-]: JMP       212          ; PC := 212
208 [-]: GETTABLE  R34 R3 R33   ; R34 := R3[R33]
209 [-]: GETTABLE  R34 R34 K36  ; R34 := R34["count"]
210 [-]: ADD       R4 R4 R34    ; R4 := R4 + R34
211 [-]: JMP       213          ; PC := 213
212 [-]: ADD       R4 R4 K5     ; R4 := R4 + 1
213 [-]: GETTABLE  R34 R29 K5   ; R34 := R29[1]
214 [-]: GETTABLE  R35 R29 K35  ; R35 := R29[2]
215 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 218
216 [-]: JMP       218          ; PC := 218
217 [-]: JMP       219          ; PC := 219
218 [-]: FORLOOP   R30 204      ; R30 += R32; if R30 <= R31 then begin PC := 204; R33 := R30 end
219 [-]: FORLOOP   R25 193      ; R25 += R27; if R25 <= R26 then begin PC := 193; R28 := R25 end
220 [-]: EQ        0 R4 K0      ; if R4 ~= 0 then PC := 256
221 [-]: JMP       256          ; PC := 256
222 [-]: GETGLOBAL R34 K9       ; R34 := Engine
223 [-]: GETTABLE  R34 R34 K37  ; R34 := R34["Item_Recipes"]
224 [-]: EQ        0 R5 R34     ; if R5 ~= R34 then PC := 256
225 [-]: JMP       256          ; PC := 256
226 [-]: SELF      R34 R2 K38   ; R35 := R2; R34 := R2["0x99575BC7"]
227 [-]: CALL      R34 2 2      ; R34 := R34(R35)
228 [-]: GETGLOBAL R35 K7       ; R35 := 0x400E7765
229 [-]: MOVE      R36 R34      ; R36 := R34
230 [-]: CALL      R35 2 2      ; R35 := R35(R36)
231 [-]: TEST      R35 1        ; if R35 then PC := 256
232 [-]: JMP       256          ; PC := 256
233 [-]: SELF      R35 R34 K27  ; R36 := R34; R35 := R34["0x8B598ED4"]
234 [-]: GETGLOBAL R37 K39      ; R37 := gKeyChainItemType
235 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
236 [-]: TEST      R35 0        ; if not R35 then PC := 256
237 [-]: JMP       256          ; PC := 256
238 [-]: SELF      R35 R1 K40   ; R36 := R1; R35 := R1["0x70666039"]
239 [-]: CALL      R35 2 2      ; R35 := R35(R36)
240 [-]: LOADK     R36 K5       ; R36 := 1
241 [-]: LEN       R37 R35      ; R37 := # R35
242 [-]: LOADK     R38 K5       ; R38 := 1
243 [-]: FORPREP   R36 255      ; R36 -= R38; PC := 255
244 [-]: GETGLOBAL R40 K7       ; R40 := 0x400E7765
245 [-]: GETTABLE  R41 R35 R39  ; R41 := R35[R39]
246 [-]: CALL      R40 2 2      ; R40 := R40(R41)
247 [-]: TEST      R40 1        ; if R40 then PC := 255
248 [-]: JMP       255          ; PC := 255
249 [-]: GETTABLE  R40 R35 R39  ; R40 := R35[R39]
250 [-]: GETTABLE  R40 R40 K41  ; R40 := R40["mItemType"]
251 [-]: EQ        0 R40 R34    ; if R40 ~= R34 then PC := 255
252 [-]: JMP       255          ; PC := 255
253 [-]: LOADK     R4 K5        ; R4 := 1
254 [-]: JMP       256          ; PC := 256
255 [-]: FORLOOP   R36 244      ; R36 += R38; if R36 <= R37 then begin PC := 244; R39 := R36 end
256 [-]: GETGLOBAL R40 K7       ; R40 := 0x400E7765
257 [-]: MOVE      R41 R7       ; R41 := R7
258 [-]: CALL      R40 2 2      ; R40 := R40(R41)
259 [-]: TEST      R40 1        ; if R40 then PC := 300
260 [-]: JMP       300          ; PC := 300
261 [-]: EQ        0 R4 K0      ; if R4 ~= 0 then PC := 288
262 [-]: JMP       288          ; PC := 288
263 [-]: GETGLOBAL R40 K7       ; R40 := 0x400E7765
264 [-]: GETGLOBAL R41 K11      ; R41 := gGameData
265 [-]: CALL      R40 2 2      ; R40 := R40(R41)
266 [-]: TEST      R40 1        ; if R40 then PC := 288
267 [-]: JMP       288          ; PC := 288
268 [-]: GETGLOBAL R40 K9       ; R40 := Engine
269 [-]: GETTABLE  R40 R40 K42  ; R40 := R40["Item_MiscItems"]
270 [-]: EQ        1 R5 R40     ; if R5 == R40 then PC := 273
271 [-]: JMP       273          ; PC := 273
272 [-]: MOVE      R40 R0       ; R40 := R0
273 [-]: MOVE      R40 R1       ; R40 := R1
274 [-]: TEST      R40 0        ; if not R40 then PC := 288
275 [-]: JMP       288          ; PC := 288
276 [-]: SELF      R41 R7 K27   ; R42 := R7; R41 := R7["0x8B598ED4"]
277 [-]: GETUPVAL  R43 U6       ; R43 := U6
278 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
279 [-]: TEST      R41 0        ; if not R41 then PC := 288
280 [-]: JMP       288          ; PC := 288
281 [-]: GETGLOBAL R41 K11      ; R41 := gGameData
282 [-]: SELF      R41 R41 K43  ; R42 := R41; R41 := R41["0xB451D706"]
283 [-]: MOVE      R43 R7       ; R43 := R7
284 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
285 [-]: TEST      R41 0        ; if not R41 then PC := 288
286 [-]: JMP       288          ; PC := 288
287 [-]: LOADK     R4 K5        ; R4 := 1
288 [-]: SELF      R41 R7 K27   ; R42 := R7; R41 := R7["0x8B598ED4"]
289 [-]: GETGLOBAL R43 K44      ; R43 := 0x2C00D429
290 [-]: LOADK     R44 K45      ; R44 := "/Lotus/Types/StoreItems/SlotItems/PvPLoadoutSlotItem"
291 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
292 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
293 [-]: TEST      R41 0        ; if not R41 then PC := 300
294 [-]: JMP       300          ; PC := 300
295 [-]: GETUPVAL  R41 U7       ; R41 := U7
296 [-]: GETGLOBAL R42 K46      ; R42 := _T
297 [-]: GETTABLE  R42 R42 K47  ; R42 := R42["ShowSyndicate"]
298 [-]: CALL      R41 2 2      ; R41 := R41(R42)
299 [-]: MOVE      R4 R41       ; R4 := R41
300 [-]: RETURN    R4 2         ; return R4
301 [-]: RETURN    R0 1         ; return 


; Function #257:
;
; Name:            
; Defined at line: 5089
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x1B252E3C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := string
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: LOADK     R4 K3        ; R4 := "_"
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K1        ; R3 := string
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xDE44F664"]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: LOADK     R5 K4        ; R5 := "x"
 12 [-]: MOVE      R6 R2        ; R6 := R2
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: GETGLOBAL R4 K1        ; R4 := string
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xDE44F664"]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K5        ; R6 := "%."
 18 [-]: MOVE      R7 R3        ; R7 := R3
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: LOADK     R5 K6        ; R5 := 1
 21 [-]: LOADK     R6 K6        ; R6 := 1
 22 [-]: TEST      R2 0         ; if not R2 then PC := 46
 23 [-]: JMP       46           ; PC := 46
 24 [-]: TEST      R3 0         ; if not R3 then PC := 46
 25 [-]: JMP       46           ; PC := 46
 26 [-]: TEST      R4 0         ; if not R4 then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: LT        0 R3 R4      ; if R3 >= R4 then PC := 46
 29 [-]: JMP       46           ; PC := 46
 30 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R7 K1        ; R7 := string
 33 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x7B782033"]
 34 [-]: MOVE      R8 R1        ; R8 := R1
 35 [-]: ADD       R9 R2 K6     ; R9 := R2 + 1
 36 [-]: SUB       R10 R3 K6    ; R10 := R3 - 1
 37 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 38 [-]: MOVE      R5 R7        ; R5 := R7
 39 [-]: GETGLOBAL R7 K1        ; R7 := string
 40 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x7B782033"]
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: ADD       R9 R3 K6     ; R9 := R3 + 1
 43 [-]: SUB       R10 R4 K6    ; R10 := R4 - 1
 44 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 45 [-]: MOVE      R6 R7        ; R6 := R7
 46 [-]: MOVE      R7 R5        ; R7 := R5
 47 [-]: MOVE      R8 R6        ; R8 := R6
 48 [-]: RETURN    R7 3         ; return R7,R8
 49 [-]: RETURN    R0 1         ; return 


; Function #258:
;
; Name:            
; Defined at line: 5103
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: MOVE      R2 R1        ; R2 := R1
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: RETURN    R3 2         ; return R3
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xBF12F696"]
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 12 [-]: LOADK     R4 K2        ; R4 := 0
 13 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 14 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["SuitBin"]
 15 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0xD3A6CE65"]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: LEN       R4 R5        ; R4 := # R5
 20 [-]: JMP       106          ; PC := 106
 21 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 22 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["WeaponBin"]
 23 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0["0x1D216770"]
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: LEN       R5 R5        ; R5 := # R5
 28 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0xB5D66AE"]
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: LEN       R6 R6        ; R6 := # R6
 31 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 32 [-]: SELF      R6 R0 K9     ; R7 := R0; R6 := R0["0xA82A3D30"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: LEN       R6 R6        ; R6 := # R6
 35 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 36 [-]: JMP       106          ; PC := 106
 37 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 38 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["SentinelBin"]
 39 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 57
 40 [-]: JMP       57           ; PC := 57
 41 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0["0xC119AB7B"]
 42 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 43 [-]: LEN       R5 R5        ; R5 := # R5
 44 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0["0x2485CEF6"]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: LEN       R6 R6        ; R6 := # R6
 47 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 48 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0["0xC4F6B9B9"]
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: LEN       R6 R6        ; R6 := # R6
 51 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 52 [-]: SELF      R6 R0 K14    ; R7 := R0; R6 := R0["0x3534C3F3"]
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: LEN       R6 R6        ; R6 := # R6
 55 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 56 [-]: JMP       106          ; PC := 106
 57 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 58 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["SpaceSuitBin"]
 59 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 65
 60 [-]: JMP       65           ; PC := 65
 61 [-]: SELF      R5 R0 K16    ; R6 := R0; R5 := R0["0x4ADC73C2"]
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: LEN       R4 R5        ; R4 := # R5
 64 [-]: JMP       106          ; PC := 106
 65 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 66 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["SpaceWeaponBin"]
 67 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 77
 68 [-]: JMP       77           ; PC := 77
 69 [-]: SELF      R5 R0 K18    ; R6 := R0; R5 := R0["0x213E1D36"]
 70 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 71 [-]: LEN       R5 R5        ; R5 := # R5
 72 [-]: SELF      R6 R0 K19    ; R7 := R0; R6 := R0["0xA5FC09FD"]
 73 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 74 [-]: LEN       R6 R6        ; R6 := # R6
 75 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 76 [-]: JMP       106          ; PC := 106
 77 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 78 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["OperatorAmpBin"]
 79 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 85
 80 [-]: JMP       85           ; PC := 85
 81 [-]: SELF      R5 R0 K21    ; R6 := R0; R5 := R0["0x67D14622"]
 82 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 83 [-]: LEN       R4 R5        ; R4 := # R5
 84 [-]: JMP       106          ; PC := 106
 85 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 86 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["CrewShipSalvageBin"]
 87 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 97
 88 [-]: JMP       97           ; PC := 97
 89 [-]: SELF      R5 R0 K23    ; R6 := R0; R5 := R0["0xC6486483"]
 90 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 91 [-]: LEN       R5 R5        ; R5 := # R5
 92 [-]: SELF      R6 R0 K24    ; R7 := R0; R6 := R0["0x60AB1682"]
 93 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 94 [-]: LEN       R6 R6        ; R6 := # R6
 95 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 96 [-]: JMP       106          ; PC := 106
 97 [-]: GETGLOBAL R5 K25       ; R5 := 0x93B1256B
 98 [-]: LOADK     R6 K26       ; R6 := "Unsupported bin type!"
 99 [-]: GETGLOBAL R7 K27       ; R7 := 0x9FAED6BC
100 [-]: MOVE      R8 R1        ; R8 := R1
101 [-]: CALL      R7 2 2       ; R7 := R7(R8)
102 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
103 [-]: CALL      R5 2 1       ; R5(R6)
104 [-]: MOVE      R5 R0        ; R5 := R0
105 [-]: RETURN    R5 2         ; return R5
106 [-]: SUB       R5 R3 R4     ; R5 := R3 - R4
107 [-]: LT        0 R5 K2      ; if R5 >= 0 then PC := 110
108 [-]: JMP       110          ; PC := 110
109 [-]: MOVE      R2 R0        ; R2 := R0
110 [-]: RETURN    R2 2         ; return R2
111 [-]: RETURN    R0 1         ; return 


; Function #259:
;
; Name:            
; Defined at line: 5139
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF271473D"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xF81722A2"]
  6 [-]: GETGLOBAL R3 K0        ; R3 := Engine
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x9490FE70"]
  8 [-]: CALL      R3 1 2       ; R3 := R3()
  9 [-]: GETGLOBAL R4 K0        ; R4 := Engine
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Accept"]
 11 [-]: GETGLOBAL R5 K0        ; R5 := Engine
 12 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["OkCancel"]
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: SETTABLE  R1 K2 R2     ; R1["dialogType"] := R2
 15 [-]: SETTABLE  R1 K7 K8     ; R1["locString"] := "/Lotus/Language/Menu/Slot_InvalidBinError"
 16 [-]: SETTABLE  R1 K9 K10    ; R1["secondString"] := "/Lotus/Language/Menu/ContactSupport"
 17 [-]: EQ        1 R0 K11     ; if R0 == nil then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1["0x69A4A158"]
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: CALL      R2 3 1       ; R2(R3,R4)
 22 [-]: GETGLOBAL R2 K13       ; R2 := gClient
 23 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x68567799"]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x4027211E"]
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: CALL      R2 3 1       ; R2(R3,R4)
 28 [-]: RETURN    R0 1         ; return 


; Function #260:
;
; Name:            
; Defined at line: 5151
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["sec"]
 11 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Sale"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mProductExpiryOverride"]
 17 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 18 [-]: RETURN    R1 0         ; return R1,...
 19 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 20 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 21 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["StoreItem"]
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x42286714"]
 23 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 24 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
 25 [-]: RETURN    R1 0         ; return R1,...
 26 [-]: RETURN    R0 1         ; return 


; Function #261:
;
; Name:            
; Defined at line: 5159
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["sec"]
 11 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Sale"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mProductExpiryOverride"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: LT        1 R1 K7      ; if R1 < 0 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R1 R0        ; R1 := R0
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["StoreItem"]
 24 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x42286714"]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: EQ        1 R1 K7      ; if R1 == 0 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 30 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["StoreItem"]
 31 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x42286714"]
 32 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 33 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 34 [-]: LE        0 R1 K7      ; if R1 > 0 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R1 R1        ; R1 := R1
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: MOVE      R1 R0        ; R1 := R0
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: RETURN    R0 1         ; return 


; Function #262:
;
; Name:            
; Defined at line: 5205
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["AP_UNIVERSAL"]
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 0         ; if not R4 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 10 [-]: MOVE      R5 R2        ; R5 := R2
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 0         ; if not R4 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: GETGLOBAL R4 K3        ; R4 := _G
 16 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["UIMaterial_FocusLens"]
 17 [-]: TEST      R1 0         ; if not R1 then PC := 28
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xF81722A2"]
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: GETGLOBAL R7 K3        ; R7 := _G
 23 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIMaterial_FocusLensStoreDepth"]
 24 [-]: GETGLOBAL R8 K3        ; R8 := _G
 25 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["UIMaterial_FocusLensStore"]
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: MOVE      R4 R5        ; R4 := R5
 28 [-]: MOVE      R5 R0        ; R5 := R0
 29 [-]: GETGLOBAL R6 K8        ; R6 := 0xEAC5E738
 30 [-]: MOVE      R7 R5        ; R7 := R5
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: TEST      R6 0         ; if not R6 then PC := 38
 33 [-]: JMP       38           ; PC := 38
 34 [-]: GETGLOBAL R6 K9        ; R6 := 0x7C282057
 35 [-]: MOVE      R7 R5        ; R7 := R5
 36 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 37 [-]: MOVE      R5 R6        ; R5 := R6
 38 [-]: LOADK     R6 K10       ; R6 := ""
 39 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 40 [-]: MOVE      R8 R5        ; R8 := R5
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 74
 43 [-]: JMP       74           ; PC := 74
 44 [-]: SELF      R7 R5 K11    ; R8 := R5; R7 := R5["0x1435C2FC"]
 45 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 46 [-]: LOADK     R8 K12       ; R8 := 1
 47 [-]: GETGLOBAL R9 K13       ; R9 := math
 48 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["0x65F9712A"]
 49 [-]: GETUPVAL  R10 U1       ; R10 := U1
 50 [-]: LEN       R10 R10      ; R10 := # R10
 51 [-]: LEN       R11 R7       ; R11 := # R7
 52 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 53 [-]: LOADK     R10 K12      ; R10 := 1
 54 [-]: FORPREP   R8 60        ; R8 -= R10; PC := 60
 55 [-]: GETTABLE  R12 R7 R11   ; R12 := R7[R11]
 56 [-]: LT        0 K15 R12    ; if 0 >= R12 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: SUB       R3 R11 K12   ; R3 := R11 - 1
 59 [-]: JMP       61           ; PC := 61
 60 [-]: FORLOOP   R8 55        ; R8 += R10; if R8 <= R9 then begin PC := 55; R11 := R8 end
 61 [-]: SELF      R12 R5 K16   ; R13 := R5; R12 := R5["0x824F51E5"]
 62 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 63 [-]: EQ        0 R12 K17    ; if R12 ~= 0.34999999403954 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: LOADK     R6 K18       ; R6 := "_GREATER"
 66 [-]: JMP       74           ; PC := 74
 67 [-]: EQ        0 R12 K19    ; if R12 ~= 0.44999998807907 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADK     R6 K20       ; R6 := "_EIDOLON"
 70 [-]: JMP       74           ; PC := 74
 71 [-]: EQ        0 R12 K21    ; if R12 ~= 0.64999997615814 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: LOADK     R6 K22       ; R6 := "_LUA"
 74 [-]: GETUPVAL  R13 U1       ; R13 := U1
 75 [-]: GETTABLE  R13 R13 R3   ; R13 := R13[R3]
 76 [-]: LOADK     R14 K23      ; R14 := "<"
 77 [-]: GETTABLE  R15 R13 K24  ; R15 := R13["Lens"]
 78 [-]: MOVE      R16 R6       ; R16 := R6
 79 [-]: LOADK     R17 K25      ; R17 := ">"
 80 [-]: CONCAT    R6 R14 R17   ; R6 := R14 .. R15 .. R16 .. R17
 81 [-]: NEWTABLE  R14 0 4      ; R14 := {}
 82 [-]: GETTABLE  R15 R13 K27  ; R15 := R13["Polarity"]
 83 [-]: SETTABLE  R14 K26 R15  ; R14["PolarityTag"] := R15
 84 [-]: SETTABLE  R14 K28 R6   ; R14["LensTag"] := R6
 85 [-]: GETTABLE  R15 R4 R3    ; R15 := R4[R3]
 86 [-]: SETTABLE  R14 K29 R15  ; R14["Material"] := R15
 87 [-]: SETTABLE  R14 K30 R3   ; R14["PolarityType"] := R3
 88 [-]: RETURN    R14 2        ; return R14
 89 [-]: RETURN    R0 1         ; return 


; Function #263:
;
; Name:            
; Defined at line: 5254
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #264:
;
; Name:            
; Defined at line: 5258
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x8F7453D9"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 0         ; if not R2 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R2 K4        ; R2 := 0xEC274B1A
 25 [-]: LOADK     R3 K5        ; R3 := "GAME_R1_EYE1"
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETGLOBAL R3 K4        ; R3 := 0xEC274B1A
 28 [-]: LOADK     R4 K6        ; R4 := "GAME_L1_EYE1"
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K4        ; R4 := 0xEC274B1A
 31 [-]: LOADK     R5 K7        ; R5 := "GAME_C1_HEAD1"
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0xAD018312"]
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 37 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0xAD018312"]
 38 [-]: MOVE      R7 R3        ; R7 := R3
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 41 [-]: GETGLOBAL R5 K9        ; R5 := _T
 42 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["OperatorEyeTrack"]
 43 [-]: EQ        1 R5 K11     ; if R5 == nil then PC := 72
 44 [-]: JMP       72           ; PC := 72
 45 [-]: GETGLOBAL R6 K13       ; R6 := math
 46 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0x8B011038"]
 47 [-]: LOADK     R7 K15       ; R7 := 0
 48 [-]: GETTABLE  R8 R5 K12    ; R8 := R5["LerpAmount"]
 49 [-]: GETGLOBAL R9 K16       ; R9 := 0x4CDEF9FF
 50 [-]: CALL      R9 1 2       ; R9 := R9()
 51 [-]: MUL       R9 R9 K17    ; R9 := R9 * 3
 52 [-]: SUB       R8 R8 R9     ; R8 := R8 - R9
 53 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 54 [-]: SETTABLE  R5 K12 R6    ; R5["LerpAmount"] := R6
 55 [-]: GETGLOBAL R6 K18       ; R6 := 0xDB3504BA
 56 [-]: GETTABLE  R7 R5 K19    ; R7 := R5["InitialRot"]
 57 [-]: GETTABLE  R8 R5 K20    ; R8 := R5["FinalRot"]
 58 [-]: GETTABLE  R9 R5 K12    ; R9 := R5["LerpAmount"]
 59 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 60 [-]: SELF      R7 R1 K21    ; R8 := R1; R7 := R1["0x42C8B968"]
 61 [-]: MOVE      R9 R4        ; R9 := R4
 62 [-]: MOVE      R10 R6       ; R10 := R6
 63 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 64 [-]: GETTABLE  R7 R5 K12    ; R7 := R5["LerpAmount"]
 65 [-]: EQ        0 R7 K15     ; if R7 ~= 0 then PC := 76
 66 [-]: JMP       76           ; PC := 76
 67 [-]: SELF      R7 R1 K8     ; R8 := R1; R7 := R1["0xAD018312"]
 68 [-]: MOVE      R9 R4        ; R9 := R4
 69 [-]: MOVE      R10 R0       ; R10 := R0
 70 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 71 [-]: JMP       76           ; PC := 76
 72 [-]: SELF      R7 R1 K8     ; R8 := R1; R7 := R1["0xAD018312"]
 73 [-]: MOVE      R9 R4        ; R9 := R4
 74 [-]: MOVE      R10 R0       ; R10 := R0
 75 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 76 [-]: RETURN    R0 1         ; return 


; Function #265:
;
; Name:            
; Defined at line: 5293
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := gRegion
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := gRegion
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x372CB914"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 0         ; if not R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0x8F7453D9"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 0         ; if not R4 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R4 K4        ; R4 := 0xEC274B1A
 25 [-]: LOADK     R5 K5        ; R5 := "GAME_R1_EYE1"
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: GETGLOBAL R5 K4        ; R5 := 0xEC274B1A
 28 [-]: LOADK     R6 K5        ; R6 := "GAME_R1_EYE1"
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: GETGLOBAL R6 K4        ; R6 := 0xEC274B1A
 31 [-]: LOADK     R7 K6        ; R7 := "GAME_L1_EYE1"
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: GETGLOBAL R7 K4        ; R7 := 0xEC274B1A
 34 [-]: LOADK     R8 K7        ; R8 := "GAME_C1_HEAD1"
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: GETGLOBAL R8 K8        ; R8 := _T
 37 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OperatorEyeTrack"]
 38 [-]: EQ        0 R8 K10     ; if R8 ~= nil then PC := 70
 39 [-]: JMP       70           ; PC := 70
 40 [-]: GETGLOBAL R8 K8        ; R8 := _T
 41 [-]: NEWTABLE  R9 0 5       ; R9 := {}
 42 [-]: GETGLOBAL R10 K12      ; R10 := 0x70D42C02
 43 [-]: LOADK     R11 K13      ; R11 := 0
 44 [-]: LOADK     R12 K14      ; R12 := 0.15000000596046
 45 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 46 [-]: SETTABLE  R9 K11 R10   ; R9["X"] := R10
 47 [-]: GETGLOBAL R10 K12      ; R10 := 0x70D42C02
 48 [-]: LOADK     R11 K13      ; R11 := 0
 49 [-]: LOADK     R12 K14      ; R12 := 0.15000000596046
 50 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 51 [-]: SETTABLE  R9 K15 R10   ; R9["Y"] := R10
 52 [-]: SELF      R10 R3 K17   ; R11 := R3; R10 := R3["0xB0C9CED1"]
 53 [-]: MOVE      R12 R4       ; R12 := R4
 54 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 55 [-]: SETTABLE  R9 K16 R10   ; R9["InitialRot"] := R10
 56 [-]: GETGLOBAL R10 K19      ; R10 := 0x1E4F6281
 57 [-]: CALL      R10 1 2      ; R10 := R10()
 58 [-]: SETTABLE  R9 K18 R10   ; R9["FinalRot"] := R10
 59 [-]: SETTABLE  R9 K20 K13   ; R9["LerpAmount"] := 0
 60 [-]: SETTABLE  R8 K9 R9     ; R8["OperatorEyeTrack"] := R9
 61 [-]: GETGLOBAL R8 K8        ; R8 := _T
 62 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OperatorEyeTrack"]
 63 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["InitialRot"]
 64 [-]: GETGLOBAL R9 K8        ; R9 := _T
 65 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["OperatorEyeTrack"]
 66 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["InitialRot"]
 67 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["pitch"]
 68 [-]: SUB       R9 R9 K22    ; R9 := R9 - 12
 69 [-]: SETTABLE  R8 K21 R9    ; R8["pitch"] := R9
 70 [-]: GETGLOBAL R8 K1        ; R8 := gRegion
 71 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8["0xF7C1BE25"]
 72 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 73 [-]: SELF      R9 R0 K24    ; R10 := R0; R9 := R0["0xBAE5F929"]
 74 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 75 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: GETTABLE  R9 R1 K25    ; R9 := R1["x"]
 78 [-]: SELF      R10 R0 K26   ; R11 := R0; R10 := R0["0x6ACD1B87"]
 79 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 80 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: GETTABLE  R10 R1 K27   ; R10 := R1["y"]
 83 [-]: SELF      R11 R0 K28   ; R12 := R0; R11 := R0["0xF595D5E1"]
 84 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 85 [-]: DIV       R11 R9 R11   ; R11 := R9 / R11
 86 [-]: MUL       R11 R11 K29  ; R11 := R11 * 2
 87 [-]: SUB       R11 R11 K30  ; R11 := R11 - 1
 88 [-]: SELF      R12 R0 K31   ; R13 := R0; R12 := R0["0xEE069D65"]
 89 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 90 [-]: DIV       R12 R10 R12  ; R12 := R10 / R12
 91 [-]: MUL       R12 R12 K29  ; R12 := R12 * 2
 92 [-]: SUB       R12 R12 K30  ; R12 := R12 - 1
 93 [-]: GETGLOBAL R13 K32      ; R13 := 0x49D2F3F2
 94 [-]: GETGLOBAL R14 K33      ; R14 := 0x58E5C2DB
 95 [-]: CALL      R14 1 2      ; R14 := R14()
 96 [-]: MUL       R14 R14 K34  ; R14 := R14 * 0.10000000149012
 97 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 98 [-]: MUL       R13 R13 K34  ; R13 := R13 * 0.10000000149012
 99 [-]: ADD       R11 R11 R13  ; R11 := R11 + R13
100 [-]: GETGLOBAL R13 K32      ; R13 := 0x49D2F3F2
101 [-]: GETGLOBAL R14 K33      ; R14 := 0x58E5C2DB
102 [-]: CALL      R14 1 2      ; R14 := R14()
103 [-]: MUL       R14 R14 K34  ; R14 := R14 * 0.10000000149012
104 [-]: ADD       R14 K35 R14  ; R14 := 7 + R14
105 [-]: CALL      R13 2 2      ; R13 := R13(R14)
106 [-]: MUL       R13 R13 K34  ; R13 := R13 * 0.10000000149012
107 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
108 [-]: GETGLOBAL R13 K8       ; R13 := _T
109 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["OperatorEyeTrack"]
110 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["X"]
111 [-]: SELF      R13 R13 K36  ; R14 := R13; R13 := R13["0xDB349344"]
112 [-]: MOVE      R15 R11      ; R15 := R11
113 [-]: CALL      R13 3 1      ; R13(R14,R15)
114 [-]: GETGLOBAL R13 K8       ; R13 := _T
115 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["OperatorEyeTrack"]
116 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["Y"]
117 [-]: SELF      R13 R13 K36  ; R14 := R13; R13 := R13["0xDB349344"]
118 [-]: MOVE      R15 R12      ; R15 := R12
119 [-]: CALL      R13 3 1      ; R13(R14,R15)
120 [-]: GETGLOBAL R13 K8       ; R13 := _T
121 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["OperatorEyeTrack"]
122 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["X"]
123 [-]: SELF      R13 R13 K37  ; R14 := R13; R13 := R13["0x8C7099E9"]
124 [-]: GETGLOBAL R15 K38      ; R15 := 0x4CDEF9FF
125 [-]: CALL      R15 1 0      ; R15,... := R15()
126 [-]: CALL      R13 0 1      ; R13(R14,...)
127 [-]: GETGLOBAL R13 K8       ; R13 := _T
128 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["OperatorEyeTrack"]
129 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["Y"]
130 [-]: SELF      R13 R13 K37  ; R14 := R13; R13 := R13["0x8C7099E9"]
131 [-]: GETGLOBAL R15 K38      ; R15 := 0x4CDEF9FF
132 [-]: CALL      R15 1 0      ; R15,... := R15()
133 [-]: CALL      R13 0 1      ; R13(R14,...)
134 [-]: SELF      R13 R8 K39   ; R14 := R8; R13 := R8["0x6DA72501"]
135 [-]: CALL      R13 2 2      ; R13 := R13(R14)
136 [-]: GETGLOBAL R14 K40      ; R14 := 0x221C9700
137 [-]: GETGLOBAL R15 K8       ; R15 := _T
138 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["OperatorEyeTrack"]
139 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["X"]
140 [-]: SELF      R15 R15 K41  ; R16 := R15; R15 := R15["0xC4E503B0"]
141 [-]: CALL      R15 2 2      ; R15 := R15(R16)
142 [-]: MUL       R15 R15 K42  ; R15 := R15 * 0.30000001192093
143 [-]: GETGLOBAL R16 K8       ; R16 := _T
144 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["OperatorEyeTrack"]
145 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["Y"]
146 [-]: SELF      R16 R16 K41  ; R17 := R16; R16 := R16["0xC4E503B0"]
147 [-]: CALL      R16 2 2      ; R16 := R16(R17)
148 [-]: MUL       R16 R16 K34  ; R16 := R16 * 0.10000000149012
149 [-]: ADD       R16 K43 R16  ; R16 := 0.025000000372529 + R16
150 [-]: LOADK     R17 K13      ; R17 := 0
151 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
152 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
153 [-]: SELF      R14 R3 K44   ; R15 := R3; R14 := R3["0xA2B01604"]
154 [-]: MOVE      R16 R4       ; R16 := R4
155 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
156 [-]: GETGLOBAL R15 K45      ; R15 := 0xEDD2EBFF
157 [-]: MOVE      R16 R14      ; R16 := R14
158 [-]: MOVE      R17 R13      ; R17 := R13
159 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
160 [-]: GETGLOBAL R16 K45      ; R16 := 0xEDD2EBFF
161 [-]: MOVE      R17 R14      ; R17 := R14
162 [-]: MOVE      R18 R13      ; R18 := R13
163 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
164 [-]: GETGLOBAL R17 K47      ; R17 := 0x6374FD98
165 [-]: GETTABLE  R18 R16 K46  ; R18 := R16["heading"]
166 [-]: LOADK     R19 K48      ; R19 := -10
167 [-]: LOADK     R20 K49      ; R20 := 10
168 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
169 [-]: SETTABLE  R16 K46 R17  ; R16["heading"] := R17
170 [-]: SELF      R17 R3 K50   ; R18 := R3; R17 := R3["0xBA14BA66"]
171 [-]: MOVE      R19 R5       ; R19 := R5
172 [-]: MOVE      R20 R16      ; R20 := R16
173 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
174 [-]: SELF      R17 R3 K50   ; R18 := R3; R17 := R3["0xBA14BA66"]
175 [-]: MOVE      R19 R6       ; R19 := R6
176 [-]: MOVE      R20 R16      ; R20 := R16
177 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
178 [-]: SELF      R17 R3 K51   ; R18 := R3; R17 := R3["0xAD018312"]
179 [-]: MOVE      R19 R5       ; R19 := R5
180 [-]: MOVE      R20 R1       ; R20 := R1
181 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
182 [-]: SELF      R17 R3 K51   ; R18 := R3; R17 := R3["0xAD018312"]
183 [-]: MOVE      R19 R6       ; R19 := R6
184 [-]: MOVE      R20 R1       ; R20 := R1
185 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
186 [-]: SELF      R17 R3 K51   ; R18 := R3; R17 := R3["0xAD018312"]
187 [-]: MOVE      R19 R7       ; R19 := R7
188 [-]: MOVE      R20 R1       ; R20 := R1
189 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
190 [-]: GETTABLE  R17 R15 K21  ; R17 := R15["pitch"]
191 [-]: SUB       R17 R17 K52  ; R17 := R17 - 15
192 [-]: SETTABLE  R15 K21 R17  ; R15["pitch"] := R17
193 [-]: GETGLOBAL R17 K8       ; R17 := _T
194 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["OperatorEyeTrack"]
195 [-]: GETGLOBAL R18 K53      ; R18 := math
196 [-]: GETTABLE  R18 R18 K54  ; R18 := R18["0x65F9712A"]
197 [-]: LOADK     R19 K30      ; R19 := 1
198 [-]: GETGLOBAL R20 K8       ; R20 := _T
199 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["OperatorEyeTrack"]
200 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["LerpAmount"]
201 [-]: GETGLOBAL R21 K38      ; R21 := 0x4CDEF9FF
202 [-]: CALL      R21 1 2      ; R21 := R21()
203 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
204 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
205 [-]: SETTABLE  R17 K20 R18  ; R17["LerpAmount"] := R18
206 [-]: GETGLOBAL R17 K55      ; R17 := 0xDB3504BA
207 [-]: GETGLOBAL R18 K8       ; R18 := _T
208 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["OperatorEyeTrack"]
209 [-]: GETTABLE  R18 R18 K16  ; R18 := R18["InitialRot"]
210 [-]: MOVE      R19 R15      ; R19 := R15
211 [-]: GETGLOBAL R20 K8       ; R20 := _T
212 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["OperatorEyeTrack"]
213 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["LerpAmount"]
214 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
215 [-]: GETGLOBAL R18 K8       ; R18 := _T
216 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["OperatorEyeTrack"]
217 [-]: SETTABLE  R18 K18 R17  ; R18["FinalRot"] := R17
218 [-]: SELF      R18 R3 K56   ; R19 := R3; R18 := R3["0x42C8B968"]
219 [-]: MOVE      R20 R7       ; R20 := R7
220 [-]: MOVE      R21 R17      ; R21 := R17
221 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
222 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
223 [-]: GETGLOBAL R19 K8       ; R19 := _T
224 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["TennoSpeaking"]
225 [-]: CALL      R18 2 2      ; R18 := R18(R19)
226 [-]: TEST      R18 1        ; if R18 then PC := 232
227 [-]: JMP       232          ; PC := 232
228 [-]: SELF      R18 R3 K58   ; R19 := R3; R18 := R3["0x7BC634B1"]
229 [-]: GETGLOBAL R20 K8       ; R20 := _T
230 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["TennoSpeaking"]
231 [-]: CALL      R18 3 1      ; R18(R19,R20)
232 [-]: RETURN    R0 1         ; return 


; Function #266:
;
; Name:            
; Defined at line: 5369
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x1B252E3C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := string
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: LOADK     R4 K3        ; R4 := "Deluxe"
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 25
  9 [-]: JMP       25           ; PC := 25
 10 [-]: GETGLOBAL R2 K1        ; R2 := string
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: LOADK     R4 K5        ; R4 := "ExcaliburProtoSuit"
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R2 K1        ; R2 := string
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K6        ; R4 := "NyxNemesisSuit"
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: MOVE      R2 R1        ; R2 := R1
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: RETURN    R0 1         ; return 


; Function #267:
;
; Name:            
; Defined at line: 5376
; #Upvalues:       1
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: SELF      R10 R0 K0    ; R11 := R0; R10 := R0["0x1C19D966"]
  2 [-]: MOVE      R12 R2       ; R12 := R2
  3 [-]: LOADK     R13 K1       ; R13 := "text"
  4 [-]: MOVE      R14 R1       ; R14 := R1
  5 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
  6 [-]: SELF      R10 R0 K0    ; R11 := R0; R10 := R0["0x1C19D966"]
  7 [-]: MOVE      R12 R3       ; R12 := R3
  8 [-]: LOADK     R13 K1       ; R13 := "text"
  9 [-]: MOVE      R14 R1       ; R14 := R1
 10 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 11 [-]: GETGLOBAL R10 K2       ; R10 := 0x8C64AFA9
 12 [-]: MOVE      R11 R0       ; R11 := R0
 13 [-]: MOVE      R12 R2       ; R12 := R2
 14 [-]: LOADK     R13 K3       ; R13 := ".setVertexColors"
 15 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 16 [-]: MOVE      R13 R4       ; R13 := R4
 17 [-]: MOVE      R14 R4       ; R14 := R4
 18 [-]: MOVE      R15 R6       ; R15 := R6
 19 [-]: MOVE      R16 R6       ; R16 := R6
 20 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
 21 [-]: GETUPVAL  R10 U0       ; R10 := U0
 22 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0x69B983D"]
 23 [-]: MOVE      R11 R0       ; R11 := R0
 24 [-]: MOVE      R12 R3       ; R12 := R3
 25 [-]: CALL      R10 3 3      ; R10,R11 := R10(R11,R12)
 26 [-]: GETGLOBAL R12 K5       ; R12 := 0xF595ADDE
 27 [-]: SELF      R13 R0 K6    ; R14 := R0; R13 := R0["0x6B7B470B"]
 28 [-]: MOVE      R15 R3       ; R15 := R3
 29 [-]: LOADK     R16 K7       ; R16 := "_height"
 30 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 31 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 32 [-]: DIV       R12 R12 K8   ; R12 := R12 / 2
 33 [-]: ADD       R12 R11 R12  ; R12 := R11 + R12
 34 [-]: GETUPVAL  R13 U0       ; R13 := U0
 35 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["0x4F6BF2C8"]
 36 [-]: MOVE      R14 R0       ; R14 := R0
 37 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 38 [-]: SETTABLE  R15 K10 K11  ; R15["x"] := 0
 39 [-]: ADD       R16 R12 R7   ; R16 := R12 + R7
 40 [-]: SETTABLE  R15 K12 R16  ; R15["y"] := R16
 41 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 42 [-]: GETTABLE  R12 R13 K12  ; R12 := R13["y"]
 43 [-]: SELF      R13 R0 K13   ; R14 := R0; R13 := R0["0xF595D5E1"]
 44 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 45 [-]: SELF      R14 R0 K14   ; R15 := R0; R14 := R0["0xEE069D65"]
 46 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 47 [-]: SELF      R15 R0 K15   ; R16 := R0; R15 := R0["0xF3E132E0"]
 48 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 49 [-]: LT        1 R13 R15    ; if R13 < R15 then PC := 55
 50 [-]: JMP       55           ; PC := 55
 51 [-]: SELF      R15 R0 K16   ; R16 := R0; R15 := R0["0x68998E7D"]
 52 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 53 [-]: LT        0 R14 R15    ; if R14 >= R15 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETGLOBAL R15 K17      ; R15 := Engine
 56 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0x1398DAFB"]
 57 [-]: CALL      R15 1 2      ; R15 := R15()
 58 [-]: TEST      R15 1        ; if R15 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: SELF      R15 R0 K15   ; R16 := R0; R15 := R0["0xF3E132E0"]
 61 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 62 [-]: MOVE      R13 R15      ; R13 := R15
 63 [-]: SELF      R15 R0 K16   ; R16 := R0; R15 := R0["0x68998E7D"]
 64 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 65 [-]: MOVE      R14 R15      ; R14 := R15
 66 [-]: DIV       R8 R8 R14    ; R8 := R8 / R14
 67 [-]: DIV       R9 R9 R14    ; R9 := R9 / R14
 68 [-]: SELF      R15 R0 K19   ; R16 := R0; R15 := R0["0x7E1F26D7"]
 69 [-]: MOVE      R17 R3       ; R17 := R3
 70 [-]: GETGLOBAL R18 K20      ; R18 := _G
 71 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["UIMaterial_VerticalVisibilityRangeText"]
 72 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 73 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0["0x302AAB2F"]
 74 [-]: MOVE      R17 R3       ; R17 := R3
 75 [-]: LOADK     R18 K23      ; R18 := "VisibilityCenter"
 76 [-]: MOVE      R19 R12      ; R19 := R12
 77 [-]: LOADK     R20 K11      ; R20 := 0
 78 [-]: LOADK     R21 K11      ; R21 := 0
 79 [-]: LOADK     R22 K11      ; R22 := 0
 80 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 81 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0["0x302AAB2F"]
 82 [-]: MOVE      R17 R3       ; R17 := R3
 83 [-]: LOADK     R18 K24      ; R18 := "VisibilitySize"
 84 [-]: MOVE      R19 R8       ; R19 := R8
 85 [-]: LOADK     R20 K11      ; R20 := 0
 86 [-]: LOADK     R21 K11      ; R21 := 0
 87 [-]: LOADK     R22 K11      ; R22 := 0
 88 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 89 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0["0x302AAB2F"]
 90 [-]: MOVE      R17 R3       ; R17 := R3
 91 [-]: LOADK     R18 K25      ; R18 := "VisibilityFadeSize"
 92 [-]: MOVE      R19 R9       ; R19 := R9
 93 [-]: LOADK     R20 K11      ; R20 := 0
 94 [-]: LOADK     R21 K11      ; R21 := 0
 95 [-]: LOADK     R22 K11      ; R22 := 0
 96 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 97 [-]: RETURN    R0 1         ; return 


; Function #268:
;
; Name:            
; Defined at line: 5401
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xB5A59043
  2 [-]: LOADK     R3 K1        ; R3 := 232
  3 [-]: LOADK     R4 K2        ; R4 := 145
  4 [-]: LOADK     R5 K3        ; R5 := 58
  5 [-]: LOADK     R6 K4        ; R6 := 255
  6 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
  7 [-]: EQ        0 R1 K5      ; if R1 ~= 2 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xB5A59043
 10 [-]: LOADK     R4 K6        ; R4 := 62
 11 [-]: LOADK     R5 K7        ; R5 := 196
 12 [-]: LOADK     R6 K8        ; R6 := 221
 13 [-]: LOADK     R7 K4        ; R7 := 255
 14 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 15 [-]: MOVE      R2 R3        ; R2 := R3
 16 [-]: SELF      R3 R0 K9     ; R4 := R0; R3 := R0["0x8DB5D01F"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 19 [-]: GETGLOBAL R5 K10       ; R5 := table
 20 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 21 [-]: MOVE      R6 R4        ; R6 := R4
 22 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x63D63C30"]
 23 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 24 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["SLOT_2"]
 25 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 26 [-]: CALL      R5 0 1       ; R5(R6,...)
 27 [-]: GETGLOBAL R5 K10       ; R5 := table
 28 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x63D63C30"]
 31 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 32 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["SLOT_1"]
 33 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 34 [-]: CALL      R5 0 1       ; R5(R6,...)
 35 [-]: GETGLOBAL R5 K10       ; R5 := table
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 37 [-]: MOVE      R6 R4        ; R6 := R4
 38 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x63D63C30"]
 39 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 40 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["SLOT_6"]
 41 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 42 [-]: CALL      R5 0 1       ; R5(R6,...)
 43 [-]: GETGLOBAL R5 K10       ; R5 := table
 44 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 45 [-]: MOVE      R6 R4        ; R6 := R4
 46 [-]: SELF      R7 R3 K17    ; R8 := R3; R7 := R3["0x6978AC59"]
 47 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 48 [-]: CALL      R5 0 1       ; R5(R6,...)
 49 [-]: GETGLOBAL R5 K18       ; R5 := 0x63B09107
 50 [-]: MOVE      R6 R4        ; R6 := R4
 51 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 52 [-]: JMP       106          ; PC := 106
 53 [-]: GETGLOBAL R10 K19      ; R10 := 0x400E7765
 54 [-]: MOVE      R11 R9       ; R11 := R9
 55 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 56 [-]: TEST      R10 1        ; if R10 then PC := 106
 57 [-]: JMP       106          ; PC := 106
 58 [-]: SELF      R10 R9 K20   ; R11 := R9; R10 := R9["0xAFA67B2D"]
 59 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 60 [-]: SELF      R11 R10 K21  ; R12 := R10; R11 := R10["0xE36D0FC5"]
 61 [-]: GETGLOBAL R13 K22      ; R13 := Lotus_Game
 62 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["PrimaryColors"]
 63 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 64 [-]: SELF      R12 R11 K24  ; R13 := R11; R12 := R11["0x8FD31352"]
 65 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 66 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["EnergyColor"]
 67 [-]: MOVE      R15 R2       ; R15 := R2
 68 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 69 [-]: SELF      R12 R11 K26  ; R13 := R11; R12 := R11["0xC22391BF"]
 70 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 71 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["EnergyColor"]
 72 [-]: MOVE      R15 R1       ; R15 := R1
 73 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 74 [-]: SELF      R12 R10 K27  ; R13 := R10; R12 := R10["0x9A246B08"]
 75 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 76 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["PrimaryColors"]
 77 [-]: MOVE      R15 R11      ; R15 := R11
 78 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 79 [-]: SELF      R12 R9 K28   ; R13 := R9; R12 := R9["0x8B598ED4"]
 80 [-]: GETGLOBAL R14 K29      ; R14 := gPowerSuitType
 81 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 82 [-]: TEST      R12 0        ; if not R12 then PC := 103
 83 [-]: JMP       103          ; PC := 103
 84 [-]: SELF      R12 R10 K21  ; R13 := R10; R12 := R10["0xE36D0FC5"]
 85 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 86 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["Attachments"]
 87 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 88 [-]: SELF      R13 R12 K24  ; R14 := R12; R13 := R12["0x8FD31352"]
 89 [-]: GETGLOBAL R15 K22      ; R15 := Lotus_Game
 90 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["EnergyColor"]
 91 [-]: MOVE      R16 R2       ; R16 := R2
 92 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 93 [-]: SELF      R13 R12 K26  ; R14 := R12; R13 := R12["0xC22391BF"]
 94 [-]: GETGLOBAL R15 K22      ; R15 := Lotus_Game
 95 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["EnergyColor"]
 96 [-]: MOVE      R16 R1       ; R16 := R1
 97 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 98 [-]: SELF      R13 R10 K27  ; R14 := R10; R13 := R10["0x9A246B08"]
 99 [-]: GETGLOBAL R15 K22      ; R15 := Lotus_Game
100 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["Attachments"]
101 [-]: MOVE      R16 R12      ; R16 := R12
102 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
103 [-]: SELF      R13 R9 K31   ; R14 := R9; R13 := R9["0xC2123CF5"]
104 [-]: MOVE      R15 R10      ; R15 := R10
105 [-]: CALL      R13 3 1      ; R13(R14,R15)
106 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 53; R7 := R8 end
107 [-]: JMP       53           ; PC := 53
108 [-]: RETURN    R0 1         ; return 


; Function #269:
;
; Name:            
; Defined at line: 5432
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gFlashMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x616DD092"]
  3 [-]: GETGLOBAL R4 K2        ; R4 := _G
  4 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 71
 10 [-]: JMP       71           ; PC := 71
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 71
 15 [-]: JMP       71           ; PC := 71
 16 [-]: GETGLOBAL R3 K5        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 18 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: TEST      R1 0         ; if not R1 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R3 K5        ; R3 := _T
 23 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 24 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x8B598ED4"]
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: TEST      R3 0         ; if not R3 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x458F27A9"]
 30 [-]: LOADK     R5 K9        ; R5 := "QueueClose"
 31 [-]: LOADK     R6 K10       ; R6 := ""
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: JMP       71           ; PC := 71
 34 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 35 [-]: GETGLOBAL R4 K5        ; R4 := _T
 36 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: TEST      R3 1         ; if R3 then PC := 71
 39 [-]: JMP       71           ; PC := 71
 40 [-]: LOADK     R3 K12       ; R3 := 1
 41 [-]: GETGLOBAL R4 K5        ; R4 := _T
 42 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 43 [-]: LEN       R4 R4        ; R4 := # R4
 44 [-]: LE        0 R3 R4      ; if R3 > R4 then PC := 71
 45 [-]: JMP       71           ; PC := 71
 46 [-]: GETGLOBAL R4 K5        ; R4 := _T
 47 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 48 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 49 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: TEST      R1 0         ; if not R1 then PC := 69
 52 [-]: JMP       69           ; PC := 69
 53 [-]: GETGLOBAL R4 K5        ; R4 := _T
 54 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 55 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 56 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x8B598ED4"]
 57 [-]: MOVE      R6 R0        ; R6 := R0
 58 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 59 [-]: TEST      R4 0         ; if not R4 then PC := 69
 60 [-]: JMP       69           ; PC := 69
 61 [-]: GETGLOBAL R4 K13       ; R4 := table
 62 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["0xCDB1FD5E"]
 63 [-]: GETGLOBAL R5 K5        ; R5 := _T
 64 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["QueuedTransmissions"]
 65 [-]: MOVE      R6 R3        ; R6 := R3
 66 [-]: CALL      R4 3 1       ; R4(R5,R6)
 67 [-]: JMP       71           ; PC := 71
 68 [-]: JMP       41           ; PC := 41
 69 [-]: ADD       R3 R3 K12    ; R3 := R3 + 1
 70 [-]: JMP       41           ; PC := 41
 71 [-]: RETURN    R0 1         ; return 


; Function #270:
;
; Name:            
; Defined at line: 5455
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K1        ; R1 := Engine
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x536FC07E"]
 10 [-]: CALL      R1 1 2       ; R1 := R1()
 11 [-]: TEST      R1 0         ; if not R1 then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x10ECB0C4"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0xA681A3A2"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: EQ        1 R1 K5      ; if R1 == "" then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0xA681A3A2"]
 22 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 23 [-]: RETURN    R1 0         ; return R1,...
 24 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x1170584F"]
 25 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 26 [-]: RETURN    R1 0         ; return R1,...
 27 [-]: RETURN    R0 1         ; return 


; Function #271:
;
; Name:            
; Defined at line: 5467
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x10ECB0C4"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETGLOBAL R1 K2        ; R1 := Engine
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x536FC07E"]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: TEST      R1 0         ; if not R1 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETGLOBAL R1 K4        ; R1 := gPlayerProfileMgr
 18 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x21EF7B1A"]
 19 [-]: LOADK     R3 K6        ; R3 := 0
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x278AF238"]
 22 [-]: LOADK     R3 K8        ; R3 := "steam_market"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 1         ; if R1 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: SELF      R1 R0 K9     ; R2 := R0; R1 := R0["0xA681A3A2"]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: EQ        0 R1 K10     ; if R1 ~= "" then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETGLOBAL R1 K2        ; R1 := Engine
 31 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x536FC07E"]
 32 [-]: CALL      R1 1 2       ; R1 := R1()
 33 [-]: TEST      R1 1         ; if R1 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: SELF      R1 R0 K9     ; R2 := R0; R1 := R0["0xA681A3A2"]
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: EQ        1 R1 K10     ; if R1 == "" then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADNIL   R1 R1        ; R1 := nil
 40 [-]: RETURN    R1 2         ; return R1
 41 [-]: GETGLOBAL R1 K2        ; R1 := Engine
 42 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["0x47916128"]
 43 [-]: CALL      R1 1 2       ; R1 := R1()
 44 [-]: TEST      R1 0         ; if not R1 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: SELF      R1 R0 K12    ; R2 := R0; R1 := R0["0x88DECBBC"]
 47 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 48 [-]: MOVE      R1 R1        ; R1 := R1
 49 [-]: SELF      R2 R0 K13    ; R3 := R0; R2 := R0["0xC5349ED"]
 50 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 51 [-]: TEST      R2 0         ; if not R2 then PC := 62
 52 [-]: JMP       62           ; PC := 62
 53 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 54 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x1398DAFB"]
 55 [-]: CALL      R2 1 2       ; R2 := R2()
 56 [-]: TEST      R2 0         ; if not R2 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: TEST      R1 1         ; if R1 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: LOADK     R2 K15       ; R2 := "MARKET"
 61 [-]: RETURN    R2 2         ; return R2
 62 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 63 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x536FC07E"]
 64 [-]: CALL      R2 1 2       ; R2 := R2()
 65 [-]: TEST      R2 0         ; if not R2 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: LOADK     R2 K16       ; R2 := "EXTERNAL"
 68 [-]: RETURN    R2 2         ; return R2
 69 [-]: SELF      R2 R0 K17    ; R3 := R0; R2 := R0["0xE5B2203D"]
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: LT        0 K6 R2      ; if 0 >= R2 then PC := 85
 72 [-]: JMP       85           ; PC := 85
 73 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 74 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x1398DAFB"]
 75 [-]: CALL      R2 1 2       ; R2 := R2()
 76 [-]: TEST      R2 1         ; if R2 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 79 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0xE35E176B"]
 80 [-]: CALL      R2 1 2       ; R2 := R2()
 81 [-]: TEST      R2 0         ; if not R2 then PC := 85
 82 [-]: JMP       85           ; PC := 85
 83 [-]: LOADK     R2 K15       ; R2 := "MARKET"
 84 [-]: RETURN    R2 2         ; return R2
 85 [-]: LOADK     R2 K19       ; R2 := "UNAVAILABLE"
 86 [-]: RETURN    R2 2         ; return R2
 87 [-]: RETURN    R0 1         ; return 


; Function #272:
;
; Name:            
; Defined at line: 5504
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x6139ADFF"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Item_DC_NONE"]
 12 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADNIL   R1 R1        ; R1 := nil
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: GETGLOBAL R1 K2        ; R1 := Engine
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0x79E04C26"]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADK     R1 K5        ; R1 := "EXTERNAL"
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: LOADK     R1 K6        ; R1 := "UNAVAILABLE"
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #273:
;
; Name:            
; Defined at line: 5522
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: MOVE      R5 R2        ; R5 := R2
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R3 2         ; return R3
 12 [-]: MOVE      R4 R3        ; R4 := R3
 13 [-]: SELF      R5 R1 K1     ; R6 := R1; R5 := R1["0xA87158DF"]
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: LEN       R6 R5        ; R6 := # R5
 16 [-]: LT        0 K2 R6      ; if 0 >= R6 then PC := 64
 17 [-]: JMP       64           ; PC := 64
 18 [-]: LOADK     R6 K3        ; R6 := ""
 19 [-]: MOVE      R7 R0        ; R7 := R0
 20 [-]: LOADK     R8 K4        ; R8 := 1
 21 [-]: LEN       R9 R5        ; R9 := # R5
 22 [-]: LOADK     R10 K4       ; R10 := 1
 23 [-]: FORPREP   R8 40        ; R8 -= R10; PC := 40
 24 [-]: SELF      R12 R2 K5    ; R13 := R2; R12 := R2["0x4F2FB14C"]
 25 [-]: SUB       R14 R11 K4   ; R14 := R11 - 1
 26 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 27 [-]: MOVE      R12 R12      ; R12 := R12
 28 [-]: TEST      R7 1         ; if R7 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R7 R12       ; R7 := R12
 31 [-]: MOVE      R13 R6       ; R13 := R6
 32 [-]: GETUPVAL  R14 U0       ; R14 := U0
 33 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["0xF81722A2"]
 34 [-]: MOVE      R15 R12      ; R15 := R12
 35 [-]: LOADK     R16 K7       ; R16 := "<TREASURE_GEM_OUTLINE>"
 36 [-]: LOADK     R17 K8       ; R17 := "<TREASURE_GEM>"
 37 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 38 [-]: LOADK     R15 K3       ; R15 := ""
 39 [-]: CONCAT    R6 R13 R15   ; R6 := R13 .. R14 .. R15
 40 [-]: FORLOOP   R8 24        ; R8 += R10; if R8 <= R9 then begin PC := 24; R11 := R8 end
 41 [-]: TEST      R7 0         ; if not R7 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: LOADK     R13 K3       ; R13 := ""
 44 [-]: GETGLOBAL R14 K0       ; R14 := 0x400E7765
 45 [-]: MOVE      R15 R0       ; R15 := R0
 46 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 47 [-]: TEST      R14 1        ; if R14 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: SELF      R14 R0 K9    ; R15 := R0; R14 := R0["0x5DB0BD4"]
 50 [-]: MOVE      R16 R6       ; R16 := R6
 51 [-]: MOVE      R17 R1       ; R17 := R1
 52 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 53 [-]: MOVE      R13 R14      ; R13 := R14
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R14 K10      ; R14 := 0xE6DC43B0
 56 [-]: MOVE      R15 R6       ; R15 := R6
 57 [-]: MOVE      R16 R1       ; R16 := R1
 58 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 59 [-]: MOVE      R13 R14      ; R13 := R14
 60 [-]: MOVE      R14 R4       ; R14 := R4
 61 [-]: LOADK     R15 K11      ; R15 := "   "
 62 [-]: MOVE      R16 R13      ; R16 := R13
 63 [-]: CONCAT    R4 R14 R16   ; R4 := R14 .. R15 .. R16
 64 [-]: RETURN    R4 2         ; return R4
 65 [-]: RETURN    R0 1         ; return 


; Function #274:
;
; Name:            
; Defined at line: 5552
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: RETURN    R0 1         ; return 


; Function #275:
;
; Name:            
; Defined at line: 5556
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 60
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #276:
;
; Name:            
; Defined at line: 5560
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #277:
;
; Name:            
; Defined at line: 5564
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 3600
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #278:
;
; Name:            
; Defined at line: 5568
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #279:
;
; Name:            
; Defined at line: 5572
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 86400
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #280:
;
; Name:            
; Defined at line: 5576
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #281:
;
; Name:            
; Defined at line: 5580
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 604800
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #282:
;
; Name:            
; Defined at line: 5584
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["missionType"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["MT_RAID"]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  8 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["LotusBaseGameRules_NM_CUSTOM"]
 10 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/NightmareModeName"
 11 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
 12 [-]: RETURN    R3 2         ; return R3
 13 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 14 [-]: GETGLOBAL R4 K5        ; R4 := table
 15 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 18 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 19 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["LotusBaseGameRules_NM_VAMPIRE"]
 20 [-]: LOADK     R8 K8        ; R8 := "/Lotus/Language/Game/NightmareModeVampire"
 21 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 22 [-]: CALL      R4 3 1       ; R4(R5,R6)
 23 [-]: GETGLOBAL R4 K5        ; R4 := table
 24 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 25 [-]: MOVE      R5 R3        ; R5 := R3
 26 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 27 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 28 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["LotusBaseGameRules_NM_ENERGY_DRAIN"]
 29 [-]: LOADK     R8 K10       ; R8 := "/Lotus/Language/Game/NightmareModeEnergyDrain"
 30 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 31 [-]: CALL      R4 3 1       ; R4(R5,R6)
 32 [-]: GETGLOBAL R4 K5        ; R4 := table
 33 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 34 [-]: MOVE      R5 R3        ; R5 := R3
 35 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 36 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 37 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["LotusBaseGameRules_NM_EXPLODING_CORPSES"]
 38 [-]: LOADK     R8 K12       ; R8 := "/Lotus/Language/Game/NightmareModeExplodingCorpses"
 39 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 40 [-]: CALL      R4 3 1       ; R4(R5,R6)
 41 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 42 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["MT_DEFENSE"]
 43 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 44 [-]: JMP       82           ; PC := 82
 45 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 46 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["MT_MOBILE_DEFENSE"]
 47 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 48 [-]: JMP       82           ; PC := 82
 49 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 50 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["MT_SURVIVAL"]
 51 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 52 [-]: JMP       82           ; PC := 82
 53 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 54 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["MT_ARTIFACT"]
 55 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 56 [-]: JMP       82           ; PC := 82
 57 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 58 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["MT_SABOTAGE"]
 59 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 60 [-]: JMP       82           ; PC := 82
 61 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 62 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["MT_RESCUE"]
 63 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 66 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["MT_ASSASSINATION"]
 67 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 68 [-]: JMP       82           ; PC := 82
 69 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 70 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["MT_ARTIFACT"]
 71 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETGLOBAL R4 K5        ; R4 := table
 74 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 75 [-]: MOVE      R5 R3        ; R5 := R3
 76 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 77 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 78 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["LotusBaseGameRules_NM_TIMED"]
 79 [-]: LOADK     R8 K21       ; R8 := "/Lotus/Language/Game/NightmareModeTimed"
 80 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 81 [-]: CALL      R4 3 1       ; R4(R5,R6)
 82 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 83 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["MT_ASSASSINATION"]
 84 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 86
 85 [-]: JMP       86           ; PC := 86
 86 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 87 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["MT_RETRIEVAL"]
 88 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 99
 89 [-]: JMP       99           ; PC := 99
 90 [-]: GETGLOBAL R4 K5        ; R4 := table
 91 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 92 [-]: MOVE      R5 R3        ; R5 := R3
 93 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 94 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 95 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["LotusBaseGameRules_NM_NO_SHIELD"]
 96 [-]: LOADK     R8 K24       ; R8 := "/Lotus/Language/Game/NightmareModeNoShield"
 97 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 98 [-]: CALL      R4 3 1       ; R4(R5,R6)
 99 [-]: GETGLOBAL R4 K25       ; R4 := 0x77EE484C
100 [-]: CALL      R4 1 2       ; R4 := R4()
101 [-]: GETGLOBAL R5 K26       ; R5 := 0xCD597D99
102 [-]: GETGLOBAL R6 K27       ; R6 := 0x12513525
103 [-]: GETGLOBAL R7 K28       ; R7 := 0x9FAED6BC
104 [-]: GETTABLE  R8 R0 K29    ; R8 := R0["location"]
105 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
106 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
107 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
108 [-]: GETGLOBAL R6 K30       ; R6 := 0xB3FEE6A
109 [-]: MOVE      R7 R5        ; R7 := R5
110 [-]: GETUPVAL  R8 U0        ; R8 := U0
111 [-]: CALL      R8 1 2       ; R8 := R8()
112 [-]: MOD       R8 R8 K31    ; R8 := R8 % 365
113 [-]: CALL      R6 3 1       ; R6(R7,R8)
114 [-]: GETGLOBAL R6 K32       ; R6 := 0x290116D3
115 [-]: LOADK     R7 K33       ; R7 := 1
116 [-]: LEN       R8 R3        ; R8 := # R3
117 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
118 [-]: GETGLOBAL R7 K5        ; R7 := table
119 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
120 [-]: MOVE      R8 R1        ; R8 := R1
121 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
122 [-]: CALL      R7 3 1       ; R7(R8,R9)
123 [-]: GETGLOBAL R7 K32       ; R7 := 0x290116D3
124 [-]: LOADK     R8 K34       ; R8 := 0
125 [-]: LOADK     R9 K35       ; R9 := 2
126 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
127 [-]: EQ        0 R7 K36     ; if R7 ~= -1 then PC := 138
128 [-]: JMP       138          ; PC := 138
129 [-]: GETGLOBAL R7 K5        ; R7 := table
130 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
131 [-]: MOVE      R8 R1        ; R8 := R1
132 [-]: NEWTABLE  R9 2 0       ; R9 := {}
133 [-]: GETGLOBAL R10 K1       ; R10 := Lotus_Game
134 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["LotusBaseGameRules_NM_NO_HUD"]
135 [-]: LOADK     R11 K38      ; R11 := "/Lotus/Language/Game/NightmareModeNoHud"
136 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
137 [-]: CALL      R7 3 1       ; R7(R8,R9)
138 [-]: GETGLOBAL R7 K32       ; R7 := 0x290116D3
139 [-]: LOADK     R8 K34       ; R8 := 0
140 [-]: LOADK     R9 K39       ; R9 := 3
141 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
142 [-]: EQ        0 R7 K33     ; if R7 ~= 1 then PC := 153
143 [-]: JMP       153          ; PC := 153
144 [-]: GETGLOBAL R7 K5        ; R7 := table
145 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
146 [-]: MOVE      R8 R1        ; R8 := R1
147 [-]: NEWTABLE  R9 2 0       ; R9 := {}
148 [-]: GETGLOBAL R10 K1       ; R10 := Lotus_Game
149 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["LotusBaseGameRules_NM_LOW_GRAVITY"]
150 [-]: LOADK     R11 K41      ; R11 := "/Lotus/Language/Game/NightmareModeLowGrav"
151 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
152 [-]: CALL      R7 3 1       ; R7(R8,R9)
153 [-]: GETGLOBAL R7 K42       ; R7 := 0x9B21739C
154 [-]: MOVE      R8 R4        ; R8 := R4
155 [-]: CALL      R7 2 1       ; R7(R8)
156 [-]: RETURN    R1 2         ; return R1
157 [-]: RETURN    R0 1         ; return 


; Function #283:
;
; Name:            
; Defined at line: 5644
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 0         ; if not R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0x6F2E05FD"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0x85D4CA1C"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K4        ; R4 := gRandomizedArtifactUpgradeType
 20 [-]: LOADK     R5 K5        ; R5 := 1
 21 [-]: LEN       R6 R3        ; R6 := # R3
 22 [-]: LOADK     R7 K5        ; R7 := 1
 23 [-]: FORPREP   R5 41        ; R5 -= R7; PC := 41
 24 [-]: GETTABLE  R9 R3 R8     ; R9 := R3[R8]
 25 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mItemType"]
 26 [-]: GETGLOBAL R10 K1       ; R10 := 0x400E7765
 27 [-]: MOVE      R11 R9       ; R11 := R9
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: TEST      R10 1        ; if R10 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R10 R9 K7    ; R11 := R9; R10 := R9["0x8B598ED4"]
 32 [-]: MOVE      R12 R4       ; R12 := R4
 33 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 34 [-]: TEST      R10 0        ; if not R10 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R10 K8       ; R10 := table
 37 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["0xE6450C9D"]
 38 [-]: MOVE      R11 R0       ; R11 := R0
 39 [-]: GETTABLE  R12 R3 R8    ; R12 := R3[R8]
 40 [-]: CALL      R10 3 1      ; R10(R11,R12)
 41 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
 42 [-]: RETURN    R0 2         ; return R0
 43 [-]: RETURN    R0 1         ; return 


; Function #284:
;
; Name:            
; Defined at line: 5669
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #285:
;
; Name:            
; Defined at line: 5673
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x6F2E05FD"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: LEN       R2 R2        ; R2 := # R2
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: MOVE      R2 R1        ; R2 := R1
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: RETURN    R0 1         ; return 


; Function #286:
;
; Name:            
; Defined at line: 5687
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #287:
;
; Name:            
; Defined at line: 5691
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K1        ; R1 := 0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xBF12F696"]
  9 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["RandomModBin"]
 11 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 12 [-]: RETURN    R1 0         ; return R1,...
 13 [-]: RETURN    R0 1         ; return 


; Function #288:
;
; Name:            
; Defined at line: 5699
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #289:
;
; Name:            
; Defined at line: 5703
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x6200B095"]
  2 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["LOT_NORMAL"]
  4 [-]: GETGLOBAL R5 K1        ; R5 := Lotus_Game
  5 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["SUIT_SLOT"]
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mInfestationDate"]
  8 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x315E860F"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 23
 11 [-]: JMP       23           ; PC := 23
 12 [-]: LOADK     R3 K6        ; R3 := -86400
 13 [-]: GETGLOBAL R4 K7        ; R4 := Engine
 14 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xD09D7910"]
 15 [-]: MOVE      R5 R2        ; R5 := R2
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: MUL       R5 R3 R1     ; R5 := R3 * R1
 18 [-]: LE        1 R4 R5      ; if R4 <= R5 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: RETURN    R5 2         ; return R5
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: RETURN    R6 2         ; return R6
 25 [-]: RETURN    R0 1         ; return 


; Function #290:
;
; Name:            
; Defined at line: 5718
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: RETURN    R2 0         ; return R2,...
  7 [-]: RETURN    R0 1         ; return 


; Function #291:
;
; Name:            
; Defined at line: 5723
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := 7
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: RETURN    R2 0         ; return R2,...
  7 [-]: RETURN    R0 1         ; return 


; Function #292:
;
; Name:            
; Defined at line: 5728
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE35E176B"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R0 K3        ; R0 := gGameData
 14 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R1 R0        ; R1 := R0
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x4A4B6CEE"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: MOVE      R1 R0        ; R1 := R0
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: GETGLOBAL R1 K5        ; R1 := gRegion
 28 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x3E2F6BF"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 0         ; if not R2 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: RETURN    R2 2         ; return R2
 37 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x8DB5D01F"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x6978AC59"]
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2["0xBC9B028A"]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: TEST      R3 0         ; if not R3 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: MOVE      R3 R0        ; R3 := R0
 51 [-]: RETURN    R3 2         ; return R3
 52 [-]: MOVE      R3 R1        ; R3 := R1
 53 [-]: RETURN    R3 2         ; return R3
 54 [-]: RETURN    R0 1         ; return 


; Function #293:
;
; Name:            
; Defined at line: 5759
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 55
  5 [-]: JMP       55           ; PC := 55
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 55
 10 [-]: JMP       55           ; PC := 55
 11 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x58A4A786"]
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x4CDEF9FF
 13 [-]: CALL      R4 1 2       ; R4 := R4()
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: SELF      R7 R0 K3     ; R8 := R0; R7 := R0["0x26739FE5"]
 17 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x3823ED12"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 55
 25 [-]: JMP       55           ; PC := 55
 26 [-]: GETGLOBAL R3 K5        ; R3 := 0xB09F286F
 27 [-]: SELF      R4 R0 K6     ; R5 := R0; R4 := R0["0x8DB5D01F"]
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x84096397"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0xA7003AD9"]
 32 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 33 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 34 [-]: GETGLOBAL R4 K9        ; R4 := math
 35 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["0xF7005A7B"]
 36 [-]: MOVE      R5 R3        ; R5 := R3
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: GETGLOBAL R5 K9        ; R5 := math
 39 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0xF7005A7B"]
 40 [-]: MUL       R6 R3 K11    ; R6 := R3 * 10
 41 [-]: MUL       R7 R4 K11    ; R7 := R4 * 10
 42 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: SELF      R6 R2 K12    ; R7 := R2; R6 := R2["0x458F27A9"]
 45 [-]: LOADK     R8 K13       ; R8 := "UpdateRangeFinder"
 46 [-]: GETGLOBAL R9 K14       ; R9 := 0x9FAED6BC
 47 [-]: MOVE      R10 R4       ; R10 := R4
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: LOADK     R10 K15      ; R10 := ","
 50 [-]: GETGLOBAL R11 K14      ; R11 := 0x9FAED6BC
 51 [-]: MOVE      R12 R5       ; R12 := R5
 52 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 53 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 54 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 55 [-]: RETURN    R0 1         ; return 


; Function #294:
;
; Name:            
; Defined at line: 5772
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x9F1DC568"]
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x2C00D429
  8 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Types/Player/PlayerFlashLight"
  9 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0xAC5ABE40"]
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #295:
;
; Name:            
; Defined at line: 5781
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R4 K1        ; R4 := ""
  7 [-]: RETURN    R4 2         ; return R4
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xF81722A2"]
 10 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R5 R1        ; R5 := R1
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: LOADK     R7 K4        ; R7 := "#FFFFFF"
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xF81722A2"]
 19 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R6 R0        ; R6 := R0
 22 [-]: MOVE      R6 R1        ; R6 := R1
 23 [-]: MOVE      R7 R3        ; R7 := R3
 24 [-]: LOADK     R8 K4        ; R8 := "#FFFFFF"
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: LOADK     R6 K5        ; R6 := "<p><font color=\""
 27 [-]: MOVE      R7 R5        ; R7 := R5
 28 [-]: LOADK     R8 K6        ; R8 := "\">"
 29 [-]: CONCAT    R6 R6 R8     ; R6 := R6 .. R7 .. R8
 30 [-]: EQ        0 R1 K7      ; if R1 ~= 2 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: SELF      R7 R0 K8     ; R8 := R0; R7 := R0["0x5DB0BD4"]
 33 [-]: LOADK     R9 K9        ; R9 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpTrading"
 34 [-]: MOVE      R10 R0       ; R10 := R0
 35 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: MOVE      R9 R7        ; R9 := R7
 38 [-]: LOADK     R10 K10      ; R10 := "<br>"
 39 [-]: CONCAT    R6 R8 R10    ; R6 := R8 .. R9 .. R10
 40 [-]: JMP       75           ; PC := 75
 41 [-]: EQ        0 R1 K11     ; if R1 ~= 3 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: SELF      R8 R0 K8     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 44 [-]: LOADK     R10 K12      ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpSyndicates"
 45 [-]: MOVE      R11 R0       ; R11 := R0
 46 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 47 [-]: MOVE      R9 R6        ; R9 := R6
 48 [-]: MOVE      R10 R8       ; R10 := R8
 49 [-]: LOADK     R11 K10      ; R11 := "<br>"
 50 [-]: CONCAT    R6 R9 R11    ; R6 := R9 .. R10 .. R11
 51 [-]: JMP       75           ; PC := 75
 52 [-]: EQ        1 R1 K13     ; if R1 == 5 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: EQ        0 R1 K14     ; if R1 ~= 10 then PC := 75
 55 [-]: JMP       75           ; PC := 75
 56 [-]: SELF      R9 R0 K8     ; R10 := R0; R9 := R0["0x5DB0BD4"]
 57 [-]: LOADK     R11 K15      ; R11 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpExtraDroneSlot"
 58 [-]: MOVE      R12 R0       ; R12 := R0
 59 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 60 [-]: LOADK     R14 K17      ; R14 := "</font><font color=\""
 61 [-]: MOVE      R15 R4       ; R15 := R4
 62 [-]: LOADK     R16 K6       ; R16 := "\">"
 63 [-]: CONCAT    R14 R14 R16  ; R14 := R14 .. R15 .. R16
 64 [-]: SETTABLE  R13 K16 R14  ; R13["OPEN_COLOR"] := R14
 65 [-]: LOADK     R14 K17      ; R14 := "</font><font color=\""
 66 [-]: MOVE      R15 R5       ; R15 := R5
 67 [-]: LOADK     R16 K6       ; R16 := "\">"
 68 [-]: CONCAT    R14 R14 R16  ; R14 := R14 .. R15 .. R16
 69 [-]: SETTABLE  R13 K18 R14  ; R13["CLOSE_COLOR"] := R14
 70 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 71 [-]: MOVE      R10 R6       ; R10 := R6
 72 [-]: MOVE      R11 R9       ; R11 := R9
 73 [-]: LOADK     R12 K10      ; R12 := "<br>"
 74 [-]: CONCAT    R6 R10 R12   ; R6 := R10 .. R11 .. R12
 75 [-]: MOD       R10 R1 K7    ; R10 := R1 % 2
 76 [-]: EQ        0 R10 K19    ; if R10 ~= 0 then PC := 97
 77 [-]: JMP       97           ; PC := 97
 78 [-]: SELF      R10 R0 K8    ; R11 := R0; R10 := R0["0x5DB0BD4"]
 79 [-]: LOADK     R12 K20      ; R12 := "/Lotus/Language/Menu/EndOfMatch_LoadOutSlot"
 80 [-]: MOVE      R13 R0       ; R13 := R0
 81 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 82 [-]: LOADK     R15 K17      ; R15 := "</font><font color=\""
 83 [-]: MOVE      R16 R4       ; R16 := R4
 84 [-]: LOADK     R17 K6       ; R17 := "\">"
 85 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
 86 [-]: SETTABLE  R14 K16 R15  ; R14["OPEN_COLOR"] := R15
 87 [-]: LOADK     R15 K17      ; R15 := "</font><font color=\""
 88 [-]: MOVE      R16 R5       ; R16 := R5
 89 [-]: LOADK     R17 K6       ; R17 := "\">"
 90 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
 91 [-]: SETTABLE  R14 K18 R15  ; R14["CLOSE_COLOR"] := R15
 92 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 93 [-]: MOVE      R11 R6       ; R11 := R6
 94 [-]: MOVE      R12 R10      ; R12 := R10
 95 [-]: LOADK     R13 K10      ; R13 := "<br>"
 96 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
 97 [-]: MOVE      R11 R6       ; R11 := R6
 98 [-]: SELF      R12 R0 K8    ; R13 := R0; R12 := R0["0x5DB0BD4"]
 99 [-]: LOADK     R14 K21      ; R14 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpStanding"
100 [-]: MOVE      R15 R1       ; R15 := R1
101 [-]: NEWTABLE  R16 0 3      ; R16 := {}
102 [-]: SETTABLE  R16 K22 K23  ; R16["NUM"] := 1000
103 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
104 [-]: MOVE      R18 R4       ; R18 := R4
105 [-]: LOADK     R19 K6       ; R19 := "\">"
106 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
107 [-]: SETTABLE  R16 K16 R17  ; R16["OPEN_COLOR"] := R17
108 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
109 [-]: MOVE      R18 R5       ; R18 := R5
110 [-]: LOADK     R19 K6       ; R19 := "\">"
111 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
112 [-]: SETTABLE  R16 K18 R17  ; R16["CLOSE_COLOR"] := R17
113 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
114 [-]: LOADK     R13 K10      ; R13 := "<br>"
115 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
116 [-]: MOVE      R11 R6       ; R11 := R6
117 [-]: SELF      R12 R0 K8    ; R13 := R0; R12 := R0["0x5DB0BD4"]
118 [-]: LOADK     R14 K24      ; R14 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpFocusCapacity"
119 [-]: MOVE      R15 R1       ; R15 := R1
120 [-]: NEWTABLE  R16 0 3      ; R16 := {}
121 [-]: SETTABLE  R16 K22 K23  ; R16["NUM"] := 1000
122 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
123 [-]: MOVE      R18 R4       ; R18 := R4
124 [-]: LOADK     R19 K6       ; R19 := "\">"
125 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
126 [-]: SETTABLE  R16 K16 R17  ; R16["OPEN_COLOR"] := R17
127 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
128 [-]: MOVE      R18 R5       ; R18 := R5
129 [-]: LOADK     R19 K6       ; R19 := "\">"
130 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
131 [-]: SETTABLE  R16 K18 R17  ; R16["CLOSE_COLOR"] := R17
132 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
133 [-]: LOADK     R13 K10      ; R13 := "<br>"
134 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
135 [-]: MOVE      R11 R6       ; R11 := R6
136 [-]: SELF      R12 R0 K8    ; R13 := R0; R12 := R0["0x5DB0BD4"]
137 [-]: LOADK     R14 K25      ; R14 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpCapacity"
138 [-]: MOVE      R15 R0       ; R15 := R0
139 [-]: NEWTABLE  R16 0 2      ; R16 := {}
140 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
141 [-]: MOVE      R18 R4       ; R18 := R4
142 [-]: LOADK     R19 K6       ; R19 := "\">"
143 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
144 [-]: SETTABLE  R16 K16 R17  ; R16["OPEN_COLOR"] := R17
145 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
146 [-]: MOVE      R18 R5       ; R18 := R5
147 [-]: LOADK     R19 K6       ; R19 := "\">"
148 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
149 [-]: SETTABLE  R16 K18 R17  ; R16["CLOSE_COLOR"] := R17
150 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
151 [-]: LOADK     R13 K10      ; R13 := "<br>"
152 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
153 [-]: MOVE      R11 R6       ; R11 := R6
154 [-]: SELF      R12 R0 K8    ; R13 := R0; R12 := R0["0x5DB0BD4"]
155 [-]: LOADK     R14 K26      ; R14 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpReactant"
156 [-]: MOVE      R15 R1       ; R15 := R1
157 [-]: NEWTABLE  R16 0 3      ; R16 := {}
158 [-]: SETTABLE  R16 K22 K27  ; R16["NUM"] := 50
159 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
160 [-]: MOVE      R18 R4       ; R18 := R4
161 [-]: LOADK     R19 K6       ; R19 := "\">"
162 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
163 [-]: SETTABLE  R16 K16 R17  ; R16["OPEN_COLOR"] := R17
164 [-]: LOADK     R17 K17      ; R17 := "</font><font color=\""
165 [-]: MOVE      R18 R5       ; R18 := R5
166 [-]: LOADK     R19 K6       ; R19 := "\">"
167 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
168 [-]: SETTABLE  R16 K18 R17  ; R16["CLOSE_COLOR"] := R17
169 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
170 [-]: CONCAT    R6 R11 R12   ; R6 := R11 .. R12
171 [-]: MOVE      R11 R6       ; R11 := R6
172 [-]: LOADK     R12 K28      ; R12 := "</font></p>"
173 [-]: CONCAT    R6 R11 R12   ; R6 := R11 .. R12
174 [-]: RETURN    R6 2         ; return R6
175 [-]: RETURN    R0 1         ; return 


; Function #296:
;
; Name:            
; Defined at line: 5817
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
  3 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["LOT_NORMAL"]
  4 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["LOT_NORMAL_PVP"]
  8 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 42
  9 [-]: JMP       42           ; PC := 42
 10 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 11 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 12 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: SELF      R4 R2 K4     ; R5 := R2; R4 := R2["0xD3A6CE65"]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: MOVE      R3 R4        ; R3 := R4
 17 [-]: JMP       158          ; PC := 158
 18 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 19 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["MELEE_SLOT"]
 20 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2["0xA82A3D30"]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: MOVE      R3 R4        ; R3 := R4
 25 [-]: JMP       158          ; PC := 158
 26 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 27 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LONG_GUN_SLOT"]
 28 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2["0x1D216770"]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: MOVE      R3 R4        ; R3 := R4
 33 [-]: JMP       158          ; PC := 158
 34 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 35 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["PISTOL_SLOT"]
 36 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 158
 37 [-]: JMP       158          ; PC := 158
 38 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2["0xB5D66AE"]
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: MOVE      R3 R4        ; R3 := R4
 41 [-]: JMP       158          ; PC := 158
 42 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 43 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["LOT_ARCHWING"]
 44 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 70
 45 [-]: JMP       70           ; PC := 70
 46 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 47 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 48 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: SELF      R4 R2 K12    ; R5 := R2; R4 := R2["0x4ADC73C2"]
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: MOVE      R3 R4        ; R3 := R4
 53 [-]: JMP       158          ; PC := 158
 54 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 55 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["MELEE_SLOT"]
 56 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: SELF      R4 R2 K13    ; R5 := R2; R4 := R2["0xA5FC09FD"]
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: MOVE      R3 R4        ; R3 := R4
 61 [-]: JMP       158          ; PC := 158
 62 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 63 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LONG_GUN_SLOT"]
 64 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 158
 65 [-]: JMP       158          ; PC := 158
 66 [-]: SELF      R4 R2 K14    ; R5 := R2; R4 := R2["0x213E1D36"]
 67 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 68 [-]: MOVE      R3 R4        ; R3 := R4
 69 [-]: JMP       158          ; PC := 158
 70 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 71 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["LOT_KDRIVE"]
 72 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 82
 73 [-]: JMP       82           ; PC := 82
 74 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 75 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 76 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 158
 77 [-]: JMP       158          ; PC := 158
 78 [-]: SELF      R4 R2 K16    ; R5 := R2; R4 := R2["0x613232C3"]
 79 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 80 [-]: MOVE      R3 R4        ; R3 := R4
 81 [-]: JMP       158          ; PC := 158
 82 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 83 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["LOT_SENTINEL"]
 84 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 147
 85 [-]: JMP       147          ; PC := 147
 86 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 87 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 88 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 143
 89 [-]: JMP       143          ; PC := 143
 90 [-]: SELF      R4 R2 K18    ; R5 := R2; R4 := R2["0xC119AB7B"]
 91 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 92 [-]: MOVE      R3 R4        ; R3 := R4
 93 [-]: TEST      R3 1         ; if R3 then PC := 97
 94 [-]: JMP       97           ; PC := 97
 95 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 96 [-]: MOVE      R3 R4        ; R3 := R4
 97 [-]: SELF      R4 R2 K19    ; R5 := R2; R4 := R2["0xC4F6B9B9"]
 98 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 99 [-]: LOADK     R5 K20       ; R5 := 1
100 [-]: LEN       R6 R4        ; R6 := # R4
101 [-]: LOADK     R7 K20       ; R7 := 1
102 [-]: FORPREP   R5 108       ; R5 -= R7; PC := 108
103 [-]: GETGLOBAL R9 K21       ; R9 := table
104 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["0xE6450C9D"]
105 [-]: MOVE      R10 R3       ; R10 := R3
106 [-]: GETTABLE  R11 R4 R8    ; R11 := R4[R8]
107 [-]: CALL      R9 3 1       ; R9(R10,R11)
108 [-]: FORLOOP   R5 103       ; R5 += R7; if R5 <= R6 then begin PC := 103; R8 := R5 end
109 [-]: SELF      R9 R2 K23    ; R10 := R2; R9 := R2["0x3534C3F3"]
110 [-]: CALL      R9 2 2       ; R9 := R9(R10)
111 [-]: LOADK     R10 K20      ; R10 := 1
112 [-]: LEN       R11 R9       ; R11 := # R9
113 [-]: LOADK     R12 K20      ; R12 := 1
114 [-]: FORPREP   R10 141      ; R10 -= R12; PC := 141
115 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
116 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mDetails"]
117 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["mStatus"]
118 [-]: GETGLOBAL R15 K0       ; R15 := Lotus_Game
119 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["KubrowPetInfoDetails_STATUS_STASIS"]
120 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 141
121 [-]: JMP       141          ; PC := 141
122 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
123 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mDetails"]
124 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["mStatus"]
125 [-]: GETGLOBAL R15 K0       ; R15 := Lotus_Game
126 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["KubrowPetInfoDetails_STATUS_INCUBATING"]
127 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 141
128 [-]: JMP       141          ; PC := 141
129 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
130 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mDetails"]
131 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["mStatus"]
132 [-]: GETGLOBAL R15 K0       ; R15 := Lotus_Game
133 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["KubrowPetInfoDetails_STATUS_INCUBATED"]
134 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 141
135 [-]: JMP       141          ; PC := 141
136 [-]: GETGLOBAL R14 K21      ; R14 := table
137 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["0xE6450C9D"]
138 [-]: MOVE      R15 R3       ; R15 := R3
139 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
140 [-]: CALL      R14 3 1      ; R14(R15,R16)
141 [-]: FORLOOP   R10 115      ; R10 += R12; if R10 <= R11 then begin PC := 115; R13 := R10 end
142 [-]: JMP       158          ; PC := 158
143 [-]: SELF      R14 R2 K29   ; R15 := R2; R14 := R2["0x2485CEF6"]
144 [-]: CALL      R14 2 2      ; R14 := R14(R15)
145 [-]: MOVE      R3 R14       ; R3 := R14
146 [-]: JMP       158          ; PC := 158
147 [-]: GETGLOBAL R14 K0       ; R14 := Lotus_Game
148 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["LOT_DATAKNIFE"]
149 [-]: EQ        0 R0 R14     ; if R0 ~= R14 then PC := 158
150 [-]: JMP       158          ; PC := 158
151 [-]: GETGLOBAL R14 K0       ; R14 := Lotus_Game
152 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["SUIT_SLOT"]
153 [-]: EQ        0 R1 R14     ; if R1 ~= R14 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: SELF      R14 R2 K31   ; R15 := R2; R14 := R2["0x12E94700"]
156 [-]: CALL      R14 2 2      ; R14 := R14(R15)
157 [-]: MOVE      R3 R14       ; R3 := R14
158 [-]: RETURN    R3 2         ; return R3
159 [-]: RETURN    R0 1         ; return 


; Function #297:
;
; Name:            
; Defined at line: 5877
; #Upvalues:       3
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: LOADK     R5 K0        ; R5 := 3
  2 [-]: NEWTABLE  R6 3 0       ; R6 := {}
  3 [-]: NEWTABLE  R7 0 2       ; R7 := {}
  4 [-]: SETTABLE  R7 K1 K2     ; R7["IsSentinel"] := "0x0"
  5 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
  6 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["SUIT_SLOT"]
  7 [-]: SETTABLE  R7 K3 R8     ; R7["Id"] := R8
  8 [-]: NEWTABLE  R8 0 2       ; R8 := {}
  9 [-]: SETTABLE  R8 K1 K2     ; R8["IsSentinel"] := "0x0"
 10 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
 11 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["LONG_GUN_SLOT"]
 12 [-]: SETTABLE  R8 K3 R9     ; R8["Id"] := R9
 13 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 14 [-]: SETTABLE  R9 K1 K2     ; R9["IsSentinel"] := "0x0"
 15 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 16 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["MELEE_SLOT"]
 17 [-]: SETTABLE  R9 K3 R10    ; R9["Id"] := R10
 18 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 19 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 20 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["LOT_NORMAL"]
 21 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 24 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["LOT_NORMAL_PVP"]
 25 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETGLOBAL R7 K10       ; R7 := table
 28 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xE6450C9D"]
 29 [-]: MOVE      R8 R6        ; R8 := R6
 30 [-]: LOADK     R9 K0        ; R9 := 3
 31 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 32 [-]: SETTABLE  R10 K1 K2    ; R10["IsSentinel"] := "0x0"
 33 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 34 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["PISTOL_SLOT"]
 35 [-]: SETTABLE  R10 K3 R11   ; R10["Id"] := R11
 36 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 37 [-]: LOADK     R5 K13       ; R5 := 4
 38 [-]: EQ        1 R1 K14     ; if R1 == nil then PC := 58
 39 [-]: JMP       58           ; PC := 58
 40 [-]: GETGLOBAL R7 K10       ; R7 := table
 41 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xE6450C9D"]
 42 [-]: MOVE      R8 R6        ; R8 := R6
 43 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 44 [-]: SETTABLE  R9 K1 K15    ; R9["IsSentinel"] := "0x1"
 45 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 46 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["SUIT_SLOT"]
 47 [-]: SETTABLE  R9 K3 R10    ; R9["Id"] := R10
 48 [-]: CALL      R7 3 1       ; R7(R8,R9)
 49 [-]: GETGLOBAL R7 K10       ; R7 := table
 50 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0xE6450C9D"]
 51 [-]: MOVE      R8 R6        ; R8 := R6
 52 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 53 [-]: SETTABLE  R9 K1 K15    ; R9["IsSentinel"] := "0x1"
 54 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 55 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["LONG_GUN_SLOT"]
 56 [-]: SETTABLE  R9 K3 R10    ; R9["Id"] := R10
 57 [-]: CALL      R7 3 1       ; R7(R8,R9)
 58 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 59 [-]: LOADNIL   R8 R8        ; R8 := nil
 60 [-]: GETGLOBAL R9 K16       ; R9 := 0x400E7765
 61 [-]: MOVE      R10 R4       ; R10 := R4
 62 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 63 [-]: TEST      R9 1         ; if R9 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: LOADK     R8 K17       ; R8 := "<p>"
 66 [-]: GETUPVAL  R9 U0        ; R9 := U0
 67 [-]: CALL      R9 1 3       ; R9,R10 := R9()
 68 [-]: LOADK     R11 K18      ; R11 := 1
 69 [-]: LEN       R12 R6       ; R12 := # R6
 70 [-]: LOADK     R13 K18      ; R13 := 1
 71 [-]: FORPREP   R11 211      ; R11 -= R13; PC := 211
 72 [-]: GETUPVAL  R15 U1       ; R15 := U1
 73 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["0xF81722A2"]
 74 [-]: EQ        1 R14 R5     ; if R14 == R5 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: MOVE      R16 R0       ; R16 := R0
 77 [-]: MOVE      R16 R1       ; R16 := R1
 78 [-]: LOADK     R17 K20      ; R17 := ""
 79 [-]: LOADK     R18 K21      ; R18 := "<br>"
 80 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 81 [-]: GETUPVAL  R16 U1       ; R16 := U1
 82 [-]: GETTABLE  R16 R16 K19  ; R16 := R16["0xF81722A2"]
 83 [-]: GETTABLE  R17 R6 R14   ; R17 := R6[R14]
 84 [-]: GETTABLE  R17 R17 K1   ; R17 := R17["IsSentinel"]
 85 [-]: MOVE      R18 R1       ; R18 := R1
 86 [-]: MOVE      R19 R0       ; R19 := R0
 87 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 88 [-]: GETGLOBAL R17 K16      ; R17 := 0x400E7765
 89 [-]: MOVE      R18 R16      ; R18 := R16
 90 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 91 [-]: TEST      R17 1        ; if R17 then PC := 211
 92 [-]: JMP       211          ; PC := 211
 93 [-]: SELF      R17 R16 K22  ; R18 := R16; R17 := R16["0xA81C4B63"]
 94 [-]: GETTABLE  R19 R6 R14   ; R19 := R6[R14]
 95 [-]: GETTABLE  R19 R19 K3   ; R19 := R19["Id"]
 96 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 97 [-]: GETTABLE  R18 R17 K23  ; R18 := R17["mItemId"]
 98 [-]: GETTABLE  R18 R18 K24  ; R18 := R18["mId"]
 99 [-]: GETGLOBAL R19 K4       ; R19 := Lotus_Game
100 [-]: GETTABLE  R19 R19 K25  ; R19 := R19["InvalidItemID"]
101 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 194
102 [-]: JMP       194          ; PC := 194
103 [-]: GETUPVAL  R18 U2       ; R18 := U2
104 [-]: GETUPVAL  R19 U1       ; R19 := U1
105 [-]: GETTABLE  R19 R19 K19  ; R19 := R19["0xF81722A2"]
106 [-]: GETTABLE  R20 R6 R14   ; R20 := R6[R14]
107 [-]: GETTABLE  R20 R20 K1   ; R20 := R20["IsSentinel"]
108 [-]: GETGLOBAL R21 K4       ; R21 := Lotus_Game
109 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["LOT_SENTINEL"]
110 [-]: MOVE      R22 R2       ; R22 := R2
111 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
112 [-]: GETTABLE  R20 R6 R14   ; R20 := R6[R14]
113 [-]: GETTABLE  R20 R20 K3   ; R20 := R20["Id"]
114 [-]: MOVE      R21 R3       ; R21 := R3
115 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
116 [-]: LOADK     R19 K18      ; R19 := 1
117 [-]: LEN       R20 R18      ; R20 := # R18
118 [-]: LOADK     R21 K18      ; R21 := 1
119 [-]: FORPREP   R19 192      ; R19 -= R21; PC := 192
120 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
121 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["mItemId"]
122 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["mId"]
123 [-]: GETTABLE  R24 R17 K23  ; R24 := R17["mItemId"]
124 [-]: GETTABLE  R24 R24 K24  ; R24 := R24["mId"]
125 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 192
126 [-]: JMP       192          ; PC := 192
127 [-]: GETGLOBAL R23 K10      ; R23 := table
128 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["0xE6450C9D"]
129 [-]: MOVE      R24 R7       ; R24 := R7
130 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
131 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["mItemType"]
132 [-]: CALL      R23 3 1      ; R23(R24,R25)
133 [-]: GETGLOBAL R23 K16      ; R23 := 0x400E7765
134 [-]: MOVE      R24 R4       ; R24 := R4
135 [-]: CALL      R23 2 2      ; R23 := R23(R24)
136 [-]: TEST      R23 1        ; if R23 then PC := 211
137 [-]: JMP       211          ; PC := 211
138 [-]: GETTABLE  R23 R6 R14   ; R23 := R6[R14]
139 [-]: GETTABLE  R23 R23 K1   ; R23 := R23["IsSentinel"]
140 [-]: TEST      R23 1        ; if R23 then PC := 211
141 [-]: JMP       211          ; PC := 211
142 [-]: SELF      R23 R4 K28   ; R24 := R4; R23 := R4["0x62FBC1B8"]
143 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
144 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["mItemType"]
145 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
146 [-]: GETGLOBAL R24 K16      ; R24 := 0x400E7765
147 [-]: MOVE      R25 R23      ; R25 := R23
148 [-]: CALL      R24 2 2      ; R24 := R24(R25)
149 [-]: TEST      R24 1        ; if R24 then PC := 184
150 [-]: JMP       184          ; PC := 184
151 [-]: LOADK     R24 K29      ; R24 := 0
152 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
153 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["mXP"]
154 [-]: EQ        1 R25 K14    ; if R25 == nil then PC := 164
155 [-]: JMP       164          ; PC := 164
156 [-]: GETGLOBAL R25 K31      ; R25 := gGameConfig
157 [-]: SELF      R25 R25 K32  ; R26 := R25; R25 := R25["0x9E8E66BA"]
158 [-]: GETTABLE  R27 R18 R22  ; R27 := R18[R22]
159 [-]: GETTABLE  R27 R27 K30  ; R27 := R27["mXP"]
160 [-]: GETTABLE  R28 R18 R22  ; R28 := R18[R22]
161 [-]: GETTABLE  R28 R28 K27  ; R28 := R28["mItemType"]
162 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
163 [-]: MOVE      R24 R25      ; R24 := R25
164 [-]: MOVE      R25 R8       ; R25 := R8
165 [-]: LOADK     R26 K33      ; R26 := "<font color=\""
166 [-]: MOVE      R27 R10      ; R27 := R10
167 [-]: LOADK     R28 K34      ; R28 := "\">"
168 [-]: GETGLOBAL R29 K35      ; R29 := 0xE6DC43B0
169 [-]: SELF      R30 R23 K36  ; R31 := R23; R30 := R23["0x616C74B6"]
170 [-]: CALL      R30 2 2      ; R30 := R30(R31)
171 [-]: SELF      R30 R30 K37  ; R31 := R30; R30 := R30["0x5EC7A3D2"]
172 [-]: CALL      R30 2 2      ; R30 := R30(R31)
173 [-]: NEWTABLE  R31 0 0      ; R31 := {}
174 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
175 [-]: LOADK     R30 K38      ; R30 := " ["
176 [-]: GETGLOBAL R31 K39      ; R31 := 0x9FAED6BC
177 [-]: MOVE      R32 R24      ; R32 := R24
178 [-]: CALL      R31 2 2      ; R31 := R31(R32)
179 [-]: LOADK     R32 K40      ; R32 := "]"
180 [-]: MOVE      R33 R15      ; R33 := R15
181 [-]: LOADK     R34 K41      ; R34 := "</font>"
182 [-]: CONCAT    R8 R25 R34   ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32 .. R33 .. R34
183 [-]: JMP       211          ; PC := 211
184 [-]: MOVE      R25 R8       ; R25 := R8
185 [-]: LOADK     R26 K33      ; R26 := "<font color=\""
186 [-]: MOVE      R27 R10      ; R27 := R10
187 [-]: LOADK     R28 K42      ; R28 := "\">---"
188 [-]: MOVE      R29 R15      ; R29 := R15
189 [-]: LOADK     R30 K41      ; R30 := "</font>"
190 [-]: CONCAT    R8 R25 R30   ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30
191 [-]: JMP       211          ; PC := 211
192 [-]: FORLOOP   R19 120      ; R19 += R21; if R19 <= R20 then begin PC := 120; R22 := R19 end
193 [-]: JMP       211          ; PC := 211
194 [-]: EQ        1 R8 K14     ; if R8 == nil then PC := 211
195 [-]: JMP       211          ; PC := 211
196 [-]: GETTABLE  R25 R6 R14   ; R25 := R6[R14]
197 [-]: GETTABLE  R25 R25 K1   ; R25 := R25["IsSentinel"]
198 [-]: TEST      R25 1        ; if R25 then PC := 211
199 [-]: JMP       211          ; PC := 211
200 [-]: MOVE      R25 R8       ; R25 := R8
201 [-]: LOADK     R26 K33      ; R26 := "<font color=\""
202 [-]: MOVE      R27 R9       ; R27 := R9
203 [-]: LOADK     R28 K34      ; R28 := "\">"
204 [-]: GETGLOBAL R29 K35      ; R29 := 0xE6DC43B0
205 [-]: LOADK     R30 K43      ; R30 := "/Lotus/Language/Menu/Cosmetics_None"
206 [-]: NEWTABLE  R31 0 0      ; R31 := {}
207 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
208 [-]: MOVE      R30 R15      ; R30 := R15
209 [-]: LOADK     R31 K41      ; R31 := "</font>"
210 [-]: CONCAT    R8 R25 R31   ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
211 [-]: FORLOOP   R11 72       ; R11 += R13; if R11 <= R12 then begin PC := 72; R14 := R11 end
212 [-]: EQ        1 R8 K14     ; if R8 == nil then PC := 217
213 [-]: JMP       217          ; PC := 217
214 [-]: MOVE      R25 R8       ; R25 := R8
215 [-]: LOADK     R26 K44      ; R26 := "</p>"
216 [-]: CONCAT    R8 R25 R26   ; R8 := R25 .. R26
217 [-]: MOVE      R25 R7       ; R25 := R7
218 [-]: MOVE      R26 R8       ; R26 := R8
219 [-]: RETURN    R25 3        ; return R25,R26
220 [-]: RETURN    R0 1         ; return 


; Function #298:
;
; Name:            
; Defined at line: 5941
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: MOVE      R7 R1        ; R7 := R1
  4 [-]: MOVE      R8 R2        ; R8 := R2
  5 [-]: MOVE      R9 R3        ; R9 := R3
  6 [-]: MOVE      R10 R4       ; R10 := R4
  7 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  8 [-]: RETURN    R5 0         ; return R5,...
  9 [-]: RETURN    R0 1         ; return 


; Function #299:
;
; Name:            
; Defined at line: 5945
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x7B782033"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := -1
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: LOADK     R2 K3        ; R2 := "/"
  7 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  8 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Interface/ClanEmblems/"
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: LOADK     R5 K5        ; R5 := "_em.png"
 12 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #300:
;
; Name:            
; Defined at line: 5951
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mCount"]
  2 [-]: LOADK     R2 K1        ; R2 := 0
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mGoal"]
  4 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mPersonal"]
  5 [-]: TEST      R4 1         ; if R4 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mInvasion"]
  8 [-]: TEST      R4 0         ; if not R4 then PC := 79
  9 [-]: JMP       79           ; PC := 79
 10 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mTag"]
 11 [-]: GETGLOBAL R5 K6        ; R5 := 0xEC274B1A
 12 [-]: LOADK     R6 K7        ; R6 := "HeatFissure"
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADK     R1 K1        ; R1 := 0
 17 [-]: GETGLOBAL R4 K8        ; R4 := gGameData
 18 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 19 [-]: MOVE      R6 R4        ; R6 := R4
 20 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 21 [-]: TEST      R5 1         ; if R5 then PC := 76
 22 [-]: JMP       76           ; PC := 76
 23 [-]: LOADNIL   R5 R5        ; R5 := nil
 24 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["mClanGoal"]
 25 [-]: LEN       R6 R6        ; R6 := # R6
 26 [-]: LT        1 K1 R6      ; if 0 < R6 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: MOVE      R6 R0        ; R6 := R0
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: TEST      R6 0         ; if not R6 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: SELF      R7 R4 K11    ; R8 := R4; R7 := R4["0x15793965"]
 33 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 34 [-]: EQ        1 R7 K12     ; if R7 == "" then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SELF      R7 R4 K13    ; R8 := R4; R7 := R4["0xF969266B"]
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: MOVE      R5 R7        ; R5 := R7
 39 [-]: JMP       43           ; PC := 43
 40 [-]: SELF      R7 R4 K14    ; R8 := R4; R7 := R4["0x94A9020"]
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: MOVE      R5 R7        ; R5 := R7
 43 [-]: LOADK     R7 K15       ; R7 := 1
 44 [-]: LEN       R8 R5        ; R8 := # R5
 45 [-]: LOADK     R9 K15       ; R9 := 1
 46 [-]: FORPREP   R7 74        ; R7 -= R9; PC := 74
 47 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 48 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["mId"]
 49 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["mId"]
 50 [-]: GETTABLE  R12 R0 K16   ; R12 := R0["mId"]
 51 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["mId"]
 52 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 74
 53 [-]: JMP       74           ; PC := 74
 54 [-]: GETTABLE  R11 R0 K17   ; R11 := R0["mBest"]
 55 [-]: TEST      R11 0        ; if not R11 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 58 [-]: GETTABLE  R1 R11 K17   ; R1 := R11["mBest"]
 59 [-]: JMP       71           ; PC := 71
 60 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 61 [-]: GETTABLE  R11 R11 K0   ; R11 := R11["mCount"]
 62 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["mGoal"]
 63 [-]: LT        0 R12 R11    ; if R12 >= R11 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETTABLE  R11 R0 K18   ; R11 := R0["mBonusGoal"]
 66 [-]: LT        0 K1 R11     ; if 0 >= R11 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: GETTABLE  R3 R0 K18    ; R3 := R0["mBonusGoal"]
 69 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 70 [-]: GETTABLE  R1 R11 K0    ; R1 := R11["mCount"]
 71 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 72 [-]: GETTABLE  R2 R11 K17   ; R2 := R11["mBest"]
 73 [-]: JMP       79           ; PC := 79
 74 [-]: FORLOOP   R7 47        ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
 75 [-]: JMP       79           ; PC := 79
 76 [-]: GETGLOBAL R11 K19      ; R11 := 0x93B1256B
 77 [-]: LOADK     R12 K20      ; R12 := "GetPersonalGoalProgress: profile or gamedata is nil"
 78 [-]: CALL      R11 2 1      ; R11(R12)
 79 [-]: MOVE      R11 R1       ; R11 := R1
 80 [-]: MOVE      R12 R2       ; R12 := R2
 81 [-]: MOVE      R13 R3       ; R13 := R3
 82 [-]: RETURN    R11 4        ; return R11,R12,R13
 83 [-]: RETURN    R0 1         ; return 


; Function #301:
;
; Name:            
; Defined at line: 5997
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETGLOBAL R3 K3        ; R3 := string
  4 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xBDD0D625"]
  5 [-]: GETGLOBAL R4 K5        ; R4 := gFlashMgr
  6 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6402F397"]
  7 [-]: LOADK     R6 K7        ; R6 := "LotusGameRules.ForceElementalCarrier"
  8 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: SETTABLE  R2 K2 R3     ; R2["DebugElementalCarrier"] := R3
 11 [-]: GETGLOBAL R2 K1        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["DebugElementalCarrier"]
 13 [-]: EQ        1 R2 K8      ; if R2 == "" then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: LOADK     R3 K9        ; R3 := 0
 17 [-]: RETURN    R2 3         ; return R2,R3
 18 [-]: JMP       99           ; PC := 99
 19 [-]: EQ        1 R0 K10     ; if R0 == nil then PC := 99
 20 [-]: JMP       99           ; PC := 99
 21 [-]: GETGLOBAL R2 K11       ; R2 := 0x400E7765
 22 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["keyChainName"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 99
 25 [-]: JMP       99           ; PC := 99
 26 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["missionType"]
 27 [-]: GETGLOBAL R3 K14       ; R3 := Lotus_Game
 28 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["MT_RAID"]
 29 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 99
 30 [-]: JMP       99           ; PC := 99
 31 [-]: GETGLOBAL R2 K16       ; R2 := gGameConfig
 32 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0xCFE64B82"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: GETGLOBAL R3 K18       ; R3 := gGameData
 35 [-]: GETGLOBAL R4 K11       ; R4 := 0x400E7765
 36 [-]: MOVE      R5 R3        ; R5 := R3
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: TEST      R4 1         ; if R4 then PC := 99
 39 [-]: JMP       99           ; PC := 99
 40 [-]: GETGLOBAL R4 K19       ; R4 := 0x63B09107
 41 [-]: SELF      R5 R3 K20    ; R6 := R3; R5 := R3["0x2D0B8A86"]
 42 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 43 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["mGoals"]
 44 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 45 [-]: JMP       97           ; PC := 97
 46 [-]: GETTABLE  R9 R8 K22    ; R9 := R8["mTag"]
 47 [-]: EQ        0 R9 R2      ; if R9 ~= R2 then PC := 97
 48 [-]: JMP       97           ; PC := 97
 49 [-]: GETGLOBAL R9 K23       ; R9 := Engine
 50 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["0xD09D7910"]
 51 [-]: GETTABLE  R10 R8 K25   ; R10 := R8["mActivation"]
 52 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 53 [-]: LT        0 R9 K9      ; if R9 >= 0 then PC := 97
 54 [-]: JMP       97           ; PC := 97
 55 [-]: GETGLOBAL R9 K23       ; R9 := Engine
 56 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["0xD09D7910"]
 57 [-]: GETTABLE  R10 R8 K26   ; R10 := R8["mExpiry"]
 58 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 59 [-]: LT        0 K9 R9      ; if 0 >= R9 then PC := 97
 60 [-]: JMP       97           ; PC := 97
 61 [-]: GETTABLE  R9 R0 K27    ; R9 := R0["location"]
 62 [-]: GETGLOBAL R10 K28      ; R10 := EMPTY_SYMBOL
 63 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 97
 64 [-]: JMP       97           ; PC := 97
 65 [-]: GETUPVAL  R10 U0       ; R10 := U0
 66 [-]: CALL      R10 1 2      ; R10 := R10()
 67 [-]: SELF      R10 R10 K29  ; R11 := R10; R10 := R10["0xDF213CE1"]
 68 [-]: GETTABLE  R12 R0 K27   ; R12 := R0["location"]
 69 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 70 [-]: GETTABLE  R11 R10 K30  ; R11 := R10["nodeType"]
 71 [-]: GETGLOBAL R12 K14      ; R12 := Lotus_Game
 72 [-]: GETTABLE  R12 R12 K31  ; R12 := R12["NT_JUNCTION"]
 73 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 81
 74 [-]: JMP       81           ; PC := 81
 75 [-]: GETTABLE  R11 R0 K27   ; R11 := R0["location"]
 76 [-]: GETGLOBAL R12 K32      ; R12 := 0xEC274B1A
 77 [-]: GETTABLE  R13 R8 K33   ; R13 := R8["mNode"]
 78 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 79 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: MOVE      R11 R0       ; R11 := R0
 82 [-]: RETURN    R11 2        ; return R11
 83 [-]: GETTABLE  R11 R10 K34  ; R11 := R10["region"]
 84 [-]: GETTABLE  R12 R8 K35   ; R12 := R8["mRegions"]
 85 [-]: GETGLOBAL R13 K19      ; R13 := 0x63B09107
 86 [-]: MOVE      R14 R12      ; R14 := R12
 87 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 88 [-]: JMP       94           ; PC := 94
 89 [-]: EQ        0 R11 R17    ; if R11 ~= R17 then PC := 94
 90 [-]: JMP       94           ; PC := 94
 91 [-]: MOVE      R18 R1       ; R18 := R1
 92 [-]: MOVE      R19 R1       ; R19 := R1
 93 [-]: RETURN    R18 3        ; return R18,R19
 94 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 89; R15 := R16 end
 95 [-]: JMP       89           ; PC := 89
 96 [-]: JMP       99           ; PC := 99
 97 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 46; R6 := R7 end
 98 [-]: JMP       46           ; PC := 46
 99 [-]: MOVE      R18 R0       ; R18 := R0
100 [-]: RETURN    R18 2        ; return R18
101 [-]: RETURN    R0 1         ; return 


; Function #302:
;
; Name:            
; Defined at line: 6061
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xA559F558"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x8DB5D01F"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETGLOBAL R3 K4        ; R3 := Engine
 21 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SLOT_1"]
 22 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 23 [-]: SELF      R5 R2 K6     ; R6 := R2; R5 := R2["0x6EA0928F"]
 24 [-]: GETGLOBAL R7 K4        ; R7 := Engine
 25 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["MAIN_HAND"]
 26 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 27 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 28 [-]: TEST      R4 0         ; if not R4 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETGLOBAL R4 K8        ; R4 := 0x201191EA
 31 [-]: LOADK     R5 K9        ; R5 := 0
 32 [-]: CALL      R4 2 1       ; R4(R5)
 33 [-]: JMP       22           ; PC := 22
 34 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 35 [-]: GETGLOBAL R5 K4        ; R5 := Engine
 36 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["SLOT_1"]
 37 [-]: GETGLOBAL R6 K4        ; R6 := Engine
 38 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["SLOT_2"]
 39 [-]: GETGLOBAL R7 K4        ; R7 := Engine
 40 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["SLOT_6"]
 41 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 42 [-]: GETGLOBAL R5 K12       ; R5 := 0xECFDD17
 43 [-]: MOVE      R6 R4        ; R6 := R4
 44 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 45 [-]: JMP       76           ; PC := 76
 46 [-]: SELF      R10 R2 K13   ; R11 := R2; R10 := R2["0x63D63C30"]
 47 [-]: MOVE      R12 R9       ; R12 := R9
 48 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 49 [-]: GETGLOBAL R11 K2       ; R11 := 0x400E7765
 50 [-]: MOVE      R12 R10      ; R12 := R10
 51 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 52 [-]: TEST      R11 1        ; if R11 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: SELF      R11 R10 K14  ; R12 := R10; R11 := R10["0x8B598ED4"]
 55 [-]: MOVE      R13 R1       ; R13 := R1
 56 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 57 [-]: TEST      R11 0        ; if not R11 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R3 R9        ; R3 := R9
 60 [-]: JMP       76           ; PC := 76
 61 [-]: SELF      R11 R2 K15   ; R12 := R2; R11 := R2["0xA23F6C57"]
 62 [-]: MOVE      R13 R9       ; R13 := R9
 63 [-]: CALL      R11 3 1      ; R11(R12,R13)
 64 [-]: GETGLOBAL R11 K0       ; R11 := gRegion
 65 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x9B0A3887"]
 66 [-]: MOVE      R13 R10      ; R13 := R10
 67 [-]: CALL      R11 3 1      ; R11(R12,R13)
 68 [-]: GETGLOBAL R11 K4       ; R11 := Engine
 69 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["SLOT_6"]
 70 [-]: EQ        0 R9 R11     ; if R9 ~= R11 then PC := 76
 71 [-]: JMP       76           ; PC := 76
 72 [-]: SELF      R11 R2 K17   ; R12 := R2; R11 := R2["0x8F04DB34"]
 73 [-]: GETGLOBAL R13 K4       ; R13 := Engine
 74 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["SLOT_8"]
 75 [-]: CALL      R11 3 1      ; R11(R12,R13)
 76 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 46; R7 := R8 end
 77 [-]: JMP       46           ; PC := 46
 78 [-]: SELF      R11 R2 K19   ; R12 := R2; R11 := R2["0x290DDD35"]
 79 [-]: MOVE      R13 R3       ; R13 := R3
 80 [-]: GETGLOBAL R14 K4       ; R14 := Engine
 81 [-]: GETTABLE  R14 R14 K7   ; R14 := R14["MAIN_HAND"]
 82 [-]: GETGLOBAL R15 K4       ; R15 := Engine
 83 [-]: GETTABLE  R15 R15 K20  ; R15 := R15["InventoryControllerBase_ES_INSTANT_EQUIP"]
 84 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 85 [-]: GETGLOBAL R11 K21      ; R11 := _T
 86 [-]: SETTABLE  R11 K22 R3   ; R11["ExclusiveWeaponSlot"] := R3
 87 [-]: RETURN    R0 1         ; return 


; Function #303:
;
; Name:            
; Defined at line: 6098
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8DB5D01F"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R3 K2        ; R3 := gGameRules
 16 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x970BA12"]
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: CLOSURE   R3 0         ; R3 := closure(Function #303.1)
 20 [-]: MOVE      R4 R3        ; R4 := R3
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: CALL      R4 2 1       ; R4(R5)
 23 [-]: GETGLOBAL R4 K2        ; R4 := gGameRules
 24 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5F122093"]
 25 [-]: GETGLOBAL R6 K5        ; R6 := gLotusAuraUpgradeType
 26 [-]: MOVE      R7 R0        ; R7 := R0
 27 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0xECFDD17
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R10 K7       ; R10 := gRegion
 33 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0x9B0A3887"]
 34 [-]: MOVE      R12 R9       ; R12 := R9
 35 [-]: CALL      R10 3 1      ; R10(R11,R12)
 36 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 32; R7 := R8 end
 37 [-]: JMP       32           ; PC := 32
 38 [-]: SELF      R10 R0 K9    ; R11 := R0; R10 := R0["0xA3F6069B"]
 39 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 40 [-]: SELF      R11 R10 K10  ; R12 := R10; R11 := R10["0x8938B1C9"]
 41 [-]: SELF      R13 R10 K11  ; R14 := R10; R13 := R10["0xF27096B7"]
 42 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 43 [-]: CALL      R11 0 1      ; R11(R12,...)
 44 [-]: LOADNIL   R11 R11      ; R11 := nil
 45 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0x96D4FC9C"]
 46 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 47 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
 48 [-]: MOVE      R14 R12      ; R14 := R12
 49 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 50 [-]: TEST      R13 1        ; if R13 then PC := 112
 51 [-]: JMP       112          ; PC := 112
 52 [-]: SELF      R13 R12 K13  ; R14 := R12; R13 := R12["0x30BDE7F"]
 53 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 54 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["mPetType"]
 55 [-]: GETGLOBAL R14 K15      ; R14 := Lotus_Game
 56 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["MAX_PetType"]
 57 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 112
 58 [-]: JMP       112          ; PC := 112
 59 [-]: GETGLOBAL R14 K2       ; R14 := gGameRules
 60 [-]: SELF      R14 R14 K17  ; R15 := R14; R14 := R14["0x211CFAC2"]
 61 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 62 [-]: TEST      R14 0        ; if not R14 then PC := 112
 63 [-]: JMP       112          ; PC := 112
 64 [-]: MOVE      R14 R0       ; R14 := R0
 65 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
 66 [-]: MOVE      R16 R11      ; R16 := R11
 67 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 68 [-]: TEST      R15 0        ; if not R15 then PC := 103
 69 [-]: JMP       103          ; PC := 103
 70 [-]: TEST      R14 1        ; if R14 then PC := 103
 71 [-]: JMP       103          ; PC := 103
 72 [-]: SELF      R15 R12 K13  ; R16 := R12; R15 := R12["0x30BDE7F"]
 73 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 74 [-]: SELF      R15 R15 K18  ; R16 := R15; R15 := R15["0xF3640469"]
 75 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 76 [-]: TESTSET   R14 R15 0    ; if not R15 then PC := 90 else R14 := R15
 77 [-]: JMP       90           ; PC := 90
 78 [-]: GETGLOBAL R15 K2       ; R15 := gGameRules
 79 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x3D64BDEF"]
 80 [-]: SELF      R17 R0 K20   ; R18 := R0; R17 := R0["0xFA66CF82"]
 81 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 82 [-]: MOVE      R18 R1       ; R18 := R1
 83 [-]: SELF      R19 R12 K13  ; R20 := R12; R19 := R12["0x30BDE7F"]
 84 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 85 [-]: SELF      R19 R19 K18  ; R20 := R19; R19 := R19["0xF3640469"]
 86 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 87 [-]: MOVE      R20 R1       ; R20 := R1
 88 [-]: CALL      R15 6 2      ; R15 := R15(R16,R17,R18,R19,R20)
 89 [-]: MOVE      R14 R15      ; R14 := R15
 90 [-]: SELF      R15 R2 K21   ; R16 := R2; R15 := R2["0x30DABA98"]
 91 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 92 [-]: MOVE      R11 R15      ; R11 := R15
 93 [-]: EQ        1 R1 K22     ; if R1 == "0x1" then PC := 97
 94 [-]: JMP       97           ; PC := 97
 95 [-]: EQ        0 R1 K23     ; if R1 ~= nil then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETGLOBAL R15 K24      ; R15 := 0x201191EA
 98 [-]: LOADK     R16 K25      ; R16 := 0
 99 [-]: CALL      R15 2 1      ; R15(R16)
100 [-]: JMP       65           ; PC := 65
101 [-]: JMP       103          ; PC := 103
102 [-]: JMP       65           ; PC := 65
103 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
104 [-]: MOVE      R16 R11      ; R16 := R11
105 [-]: CALL      R15 2 2      ; R15 := R15(R16)
106 [-]: TEST      R15 1        ; if R15 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: MOVE      R15 R3       ; R15 := R3
109 [-]: SELF      R16 R11 K1   ; R17 := R11; R16 := R11["0x8DB5D01F"]
110 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
111 [-]: CALL      R15 0 1      ; R15(R16,...)
112 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
113 [-]: MOVE      R16 R11      ; R16 := R11
114 [-]: CALL      R15 2 2      ; R15 := R15(R16)
115 [-]: TEST      R15 1        ; if R15 then PC := 123
116 [-]: JMP       123          ; PC := 123
117 [-]: SELF      R15 R11 K9   ; R16 := R11; R15 := R11["0xA3F6069B"]
118 [-]: CALL      R15 2 2      ; R15 := R15(R16)
119 [-]: SELF      R16 R15 K10  ; R17 := R15; R16 := R15["0x8938B1C9"]
120 [-]: SELF      R18 R15 K11  ; R19 := R15; R18 := R15["0xF27096B7"]
121 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
122 [-]: CALL      R16 0 1      ; R16(R17,...)
123 [-]: RETURN    R0 1         ; return 


; Function #303.1:
;
; Name:            
; Defined at line: 6112
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x2C00D429
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Types/Game/SentinelPrecept"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SLOT_1"]
  6 [-]: GETGLOBAL R3 K2        ; R3 := Engine
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["SLOT_12"]
  8 [-]: LOADK     R4 K5        ; R4 := 1
  9 [-]: FORPREP   R2 71        ; R2 -= R4; PC := 71
 10 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0["0x63D63C30"]
 11 [-]: MOVE      R8 R5        ; R8 := R5
 12 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 13 [-]: GETGLOBAL R7 K7        ; R7 := 0x400E7765
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: TEST      R7 1         ; if R7 then PC := 71
 17 [-]: JMP       71           ; PC := 71
 18 [-]: LOADK     R7 K8        ; R7 := 0
 19 [-]: GETGLOBAL R8 K7        ; R8 := 0x400E7765
 20 [-]: SELF      R9 R6 K9     ; R10 := R6; R9 := R6["0x38F325B8"]
 21 [-]: MOVE      R11 R7       ; R11 := R7
 22 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
 23 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 24 [-]: TEST      R8 1         ; if R8 then PC := 71
 25 [-]: JMP       71           ; PC := 71
 26 [-]: SELF      R8 R6 K9     ; R9 := R6; R8 := R6["0x38F325B8"]
 27 [-]: MOVE      R10 R7       ; R10 := R7
 28 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 29 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0x8B598ED4"]
 30 [-]: GETGLOBAL R11 K11      ; R11 := gLotusArtifactUpgradeType
 31 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 32 [-]: SELF      R10 R8 K10   ; R11 := R8; R10 := R8["0x8B598ED4"]
 33 [-]: MOVE      R12 R1       ; R12 := R1
 34 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 35 [-]: SELF      R11 R8 K10   ; R12 := R8; R11 := R8["0x8B598ED4"]
 36 [-]: GETGLOBAL R13 K12      ; R13 := gLotusSuitCustomizationType
 37 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 38 [-]: TEST      R11 0        ; if not R11 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: SELF      R11 R8 K13   ; R12 := R8; R11 := R8["0x3061149"]
 41 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 42 [-]: LT        1 K8 R11     ; if 0 < R11 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R11 R0       ; R11 := R0
 45 [-]: MOVE      R11 R1       ; R11 := R1
 46 [-]: TEST      R9 0         ; if not R9 then PC := 64
 47 [-]: JMP       64           ; PC := 64
 48 [-]: TEST      R10 0        ; if not R10 then PC := 59
 49 [-]: JMP       59           ; PC := 59
 50 [-]: SELF      R12 R8 K14   ; R13 := R8; R12 := R8["0xE2DA2DE5"]
 51 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 52 [-]: TEST      R12 0        ; if not R12 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: SELF      R13 R12 K15  ; R14 := R12; R13 := R12["0xADAA022C"]
 55 [-]: MOVE      R15 R1       ; R15 := R1
 56 [-]: CALL      R13 3 1      ; R13(R14,R15)
 57 [-]: SELF      R13 R12 K16  ; R14 := R12; R13 := R12["0x1FDB8A0"]
 58 [-]: CALL      R13 2 1      ; R13(R14)
 59 [-]: SELF      R13 R6 K17   ; R14 := R6; R13 := R6["0xF21555A7"]
 60 [-]: MOVE      R15 R8       ; R15 := R8
 61 [-]: MOVE      R16 R1       ; R16 := R1
 62 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 63 [-]: JMP       19           ; PC := 19
 64 [-]: TEST      R11 0        ; if not R11 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: SELF      R13 R6 K18   ; R14 := R6; R13 := R6["0x43CA1968"]
 67 [-]: MOVE      R15 R8       ; R15 := R8
 68 [-]: CALL      R13 3 1      ; R13(R14,R15)
 69 [-]: ADD       R7 R7 K5     ; R7 := R7 + 1
 70 [-]: JMP       19           ; PC := 19
 71 [-]: FORLOOP   R2 10        ; R2 += R4; if R2 <= R3 then begin PC := 10; R5 := R2 end
 72 [-]: RETURN    R0 1         ; return 


; Function #304:
;
; Name:            
; Defined at line: 6185
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 28
 11 [-]: JMP       28           ; PC := 28
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xB8637349"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 28
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["goalTag"]
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0xEC274B1A
 22 [-]: LOADK     R3 K7        ; R3 := "NoMods"
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R1 R1        ; R1 := R1
 27 [-]: RETURN    R1 2         ; return R1
 28 [-]: MOVE      R1 R0        ; R1 := R0
 29 [-]: RETURN    R1 2         ; return R1
 30 [-]: RETURN    R0 1         ; return 


; Function #305:
;
; Name:            
; Defined at line: 6196
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x30BDE7F"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mIsFirstTimeInNode"]
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #306:
;
; Name:            
; Defined at line: 6204
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["PendingEquippingGearItem"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R2 K1        ; R2 := _T
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: SETTABLE  R2 K2 R3     ; R2["PendingEquippingGearItem"] := R3
 10 [-]: GETGLOBAL R2 K1        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["PendingEquippingGearItem"]
 12 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xDBEF0FB6"]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: SETTABLE  R2 R3 R1     ; R2[R3] := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #307:
;
; Name:            
; Defined at line: 6211
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["PendingEquippingGearItem"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PendingEquippingGearItem"]
 11 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0xDBEF0FB6"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #308:
;
; Name:            
; Defined at line: 6219
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x6DA72501"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: LOADK     R2 K1        ; R2 := 1
  4 [-]: GETGLOBAL R3 K2        ; R3 := SHIP_ROOMS
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LOADK     R4 K1        ; R4 := 1
  7 [-]: FORPREP   R2 56        ; R2 -= R4; PC := 56
  8 [-]: GETGLOBAL R6 K3        ; R6 := gRegion
  9 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xA76F0612"]
 10 [-]: GETGLOBAL R8 K2        ; R8 := SHIP_ROOMS
 11 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 12 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["Name"]
 13 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 14 [-]: LOADK     R7 K1        ; R7 := 1
 15 [-]: LEN       R8 R6        ; R8 := # R6
 16 [-]: LOADK     R9 K1        ; R9 := 1
 17 [-]: FORPREP   R7 55        ; R7 -= R9; PC := 55
 18 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 19 [-]: SELF      R11 R11 K6   ; R12 := R11; R11 := R11["0x3D6ED718"]
 20 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 21 [-]: GETTABLE  R12 R6 R10   ; R12 := R6[R10]
 22 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12["0xEFE96608"]
 23 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 24 [-]: GETTABLE  R13 R12 K8   ; R13 := R12["x"]
 25 [-]: GETTABLE  R14 R1 K8    ; R14 := R1["x"]
 26 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 27 [-]: JMP       55           ; PC := 55
 28 [-]: GETTABLE  R13 R12 K9   ; R13 := R12["y"]
 29 [-]: GETTABLE  R14 R1 K9    ; R14 := R1["y"]
 30 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 31 [-]: JMP       55           ; PC := 55
 32 [-]: GETTABLE  R13 R12 K10  ; R13 := R12["z"]
 33 [-]: GETTABLE  R14 R1 K10   ; R14 := R1["z"]
 34 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETTABLE  R13 R1 K8    ; R13 := R1["x"]
 37 [-]: GETTABLE  R14 R11 K8   ; R14 := R11["x"]
 38 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 39 [-]: JMP       55           ; PC := 55
 40 [-]: GETTABLE  R13 R1 K9    ; R13 := R1["y"]
 41 [-]: GETTABLE  R14 R11 K9   ; R14 := R11["y"]
 42 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 43 [-]: JMP       55           ; PC := 55
 44 [-]: GETTABLE  R13 R1 K10   ; R13 := R1["z"]
 45 [-]: GETTABLE  R14 R11 K10  ; R14 := R11["z"]
 46 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETGLOBAL R13 K2       ; R13 := SHIP_ROOMS
 49 [-]: GETTABLE  R13 R13 R5   ; R13 := R13[R5]
 50 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["Name"]
 51 [-]: GETGLOBAL R14 K2       ; R14 := SHIP_ROOMS
 52 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
 53 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["LocTag"]
 54 [-]: RETURN    R13 3        ; return R13,R14
 55 [-]: FORLOOP   R7 18        ; R7 += R9; if R7 <= R8 then begin PC := 18; R10 := R7 end
 56 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 57 [-]: GETGLOBAL R13 K12      ; R13 := BRIDGE_ROOM
 58 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["Name"]
 59 [-]: GETGLOBAL R14 K12      ; R14 := BRIDGE_ROOM
 60 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["LocTag"]
 61 [-]: RETURN    R13 3        ; return R13,R14
 62 [-]: RETURN    R0 1         ; return 


; Function #309:
;
; Name:            
; Defined at line: 6239
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #310:
;
; Name:            
; Defined at line: 6243
; #Upvalues:       0
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
  2 [-]: GETGLOBAL R8 K1        ; R8 := _G
  3 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["UIMovie_LoadoutSelectMovie"]
  4 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  5 [-]: TEST      R7 1         ; if R7 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
  8 [-]: MOVE      R8 R2        ; R8 := R2
  9 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 10 [-]: TEST      R7 0         ; if not R7 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: RETURN    R7 2         ; return R7
 14 [-]: LOADNIL   R7 R7        ; R7 := nil
 15 [-]: GETGLOBAL R8 K3        ; R8 := _T
 16 [-]: SETTABLE  R8 K4 R3     ; R8["SelectLoadOutType"] := R3
 17 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
 18 [-]: MOVE      R9 R0        ; R9 := R0
 19 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 20 [-]: TEST      R8 1         ; if R8 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: SELF      R8 R0 K5     ; R9 := R0; R8 := R0["0x5FF274BB"]
 23 [-]: GETGLOBAL R10 K1       ; R10 := _G
 24 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["UIMovie_LoadoutSelectMovie"]
 25 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 26 [-]: MOVE      R7 R8        ; R7 := R8
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R8 K6        ; R8 := gFlashMgr
 29 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8["0x7548923C"]
 30 [-]: GETGLOBAL R10 K1       ; R10 := _G
 31 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["UIMovie_LoadoutSelectMovie"]
 32 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 33 [-]: MOVE      R7 R8        ; R7 := R8
 34 [-]: GETGLOBAL R8 K3        ; R8 := _T
 35 [-]: CLOSURE   R9 0         ; R9 := closure(Function #310.1)
 36 [-]: MOVE      R0 R4        ; R0 := R4
 37 [-]: SETTABLE  R8 K8 R9     ; R8["LoadoutSelectionDone"] := R9
 38 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7["0x458F27A9"]
 39 [-]: LOADK     R10 K10      ; R10 := "SetCallBack"
 40 [-]: LOADK     R11 K8       ; R11 := "LoadoutSelectionDone"
 41 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 42 [-]: RETURN    R7 2         ; return R7
 43 [-]: RETURN    R0 1         ; return 


; Function #310.1:
;
; Name:            
; Defined at line: 6256
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["LoadoutSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #311:
;
; Name:            
; Defined at line: 6268
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: LOADK     R3 K0        ; R3 := ""
  3 [-]: LOADK     R4 K1        ; R4 := 0
  4 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R5 K3        ; R5 := FORTUNA_NODE_TAG
  7 [-]: EQ        1 R1 R5      ; if R1 == R5 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R5 K4        ; R5 := ORB_VALLIS_NODE_TAG
 10 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["HOURS_PER_SECOND_VENUS"]
 14 [-]: LT        0 R0 K6      ; if R0 >= 12 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETUPVAL  R6 U0        ; R6 := U0
 17 [-]: GETTABLE  R2 R6 K7     ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: GETTABLE  R3 R6 K8     ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
 20 [-]: SUB       R6 K6 R0     ; R6 := 12 - R0
 21 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 22 [-]: JMP       63           ; PC := 63
 23 [-]: LT        0 R0 K9      ; if R0 >= 18 then PC := 32
 24 [-]: JMP       32           ; PC := 32
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R2 R6 K8     ; R2 := R6["TIME_OF_DAY_LABEL_WARM"]
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: GETTABLE  R3 R6 K7     ; R3 := R6["TIME_OF_DAY_LABEL_COLD"]
 29 [-]: SUB       R6 K9 R0     ; R6 := 18 - R0
 30 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 31 [-]: JMP       63           ; PC := 63
 32 [-]: GETUPVAL  R6 U0        ; R6 := U0
 33 [-]: GETTABLE  R2 R6 K7     ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: GETTABLE  R3 R6 K8     ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
 36 [-]: SUB       R6 K10 R0    ; R6 := 36 - R0
 37 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 38 [-]: JMP       63           ; PC := 63
 39 [-]: GETUPVAL  R6 U0        ; R6 := U0
 40 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["HOURS_PER_SECOND_EIDOLON"]
 41 [-]: LE        1 K12 R0     ; if 22 <= R0 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: LT        0 R0 K13     ; if R0 >= 6 then PC := 57
 44 [-]: JMP       57           ; PC := 57
 45 [-]: GETUPVAL  R7 U0        ; R7 := U0
 46 [-]: GETTABLE  R2 R7 K14    ; R2 := R7["TIME_OF_DAY_LABEL_NIGHT"]
 47 [-]: GETUPVAL  R7 U0        ; R7 := U0
 48 [-]: GETTABLE  R3 R7 K15    ; R3 := R7["TIME_OF_DAY_LABEL_DAY"]
 49 [-]: LE        0 K12 R0     ; if 22 > R0 then PC := 54
 50 [-]: JMP       54           ; PC := 54
 51 [-]: SUB       R7 K16 R0    ; R7 := 30 - R0
 52 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 53 [-]: JMP       63           ; PC := 63
 54 [-]: SUB       R7 K13 R0    ; R7 := 6 - R0
 55 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 56 [-]: JMP       63           ; PC := 63
 57 [-]: GETUPVAL  R7 U0        ; R7 := U0
 58 [-]: GETTABLE  R2 R7 K15    ; R2 := R7["TIME_OF_DAY_LABEL_DAY"]
 59 [-]: GETUPVAL  R7 U0        ; R7 := U0
 60 [-]: GETTABLE  R3 R7 K14    ; R3 := R7["TIME_OF_DAY_LABEL_NIGHT"]
 61 [-]: SUB       R7 K12 R0    ; R7 := 22 - R0
 62 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 63 [-]: MOVE      R7 R2        ; R7 := R2
 64 [-]: MOVE      R8 R3        ; R8 := R3
 65 [-]: MOVE      R9 R4        ; R9 := R4
 66 [-]: RETURN    R7 4         ; return R7,R8,R9
 67 [-]: RETURN    R0 1         ; return 


; Function #312:
;
; Name:            
; Defined at line: 6307
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: GETGLOBAL R3 K2        ; R3 := gGameData
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  8 [-]: GETGLOBAL R3 K3        ; R3 := gGameRules
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: GETGLOBAL R2 K2        ; R2 := gGameData
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x2D0B8A86"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 0         ; if not R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R1 2         ; return R1
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["HOURS_PER_SECOND_EIDOLON"]
 24 [-]: GETGLOBAL R4 K6        ; R4 := FORTUNA_NODE_TAG
 25 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETGLOBAL R4 K7        ; R4 := ORB_VALLIS_NODE_TAG
 28 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: GETUPVAL  R4 U0        ; R4 := U0
 31 [-]: GETTABLE  R3 R4 K8     ; R3 := R4["HOURS_PER_SECOND_VENUS"]
 32 [-]: GETGLOBAL R4 K3        ; R4 := gGameRules
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x555EFA5"]
 34 [-]: MOVE      R6 R3        ; R6 := R3
 35 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 36 [-]: MOVE      R1 R4        ; R1 := R4
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: RETURN    R0 1         ; return 


; Function #313:
;
; Name:            
; Defined at line: 6328
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: NEWTABLE  R3 0 5       ; R3 := {}
  2 [-]: SETTABLE  R3 K0 K1     ; R3["Name"] := nil
  3 [-]: SETTABLE  R3 K2 K1     ; R3["NameWithRank"] := nil
  4 [-]: SETTABLE  R3 K3 K1     ; R3["WeaponInfo"] := nil
  5 [-]: SETTABLE  R3 K4 K1     ; R3["CompanionInfo"] := nil
  6 [-]: SETTABLE  R3 K5 K1     ; R3["AuraInfo"] := nil
  7 [-]: GETGLOBAL R4 K6        ; R4 := 0x400E7765
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 1         ; if R4 then PC := 312
 11 [-]: JMP       312          ; PC := 312
 12 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["name"]
 13 [-]: GETGLOBAL R5 K8        ; R5 := cjson
 14 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0x8A2E8315"]
 15 [-]: GETTABLE  R6 R1 K10    ; R6 := R1["loadout"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R4        ; R7 := R4
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 312
 21 [-]: JMP       312          ; PC := 312
 22 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 23 [-]: MOVE      R7 R5        ; R7 := R5
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: TEST      R6 1         ; if R6 then PC := 312
 26 [-]: JMP       312          ; PC := 312
 27 [-]: EQ        1 R4 K11     ; if R4 == "" then PC := 312
 28 [-]: JMP       312          ; PC := 312
 29 [-]: LOADK     R6 K12       ; R6 := "0"
 30 [-]: GETGLOBAL R7 K6        ; R7 := 0x400E7765
 31 [-]: GETTABLE  R8 R5 K13    ; R8 := R5["PlayerLevel"]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: TEST      R7 1         ; if R7 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETTABLE  R7 R5 K13    ; R7 := R5["PlayerLevel"]
 36 [-]: EQ        1 R7 K11     ; if R7 == "" then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETTABLE  R6 R5 K13    ; R6 := R5["PlayerLevel"]
 39 [-]: MOVE      R7 R4        ; R7 := R4
 40 [-]: SELF      R8 R0 K14    ; R9 := R0; R8 := R0["0x5DB0BD4"]
 41 [-]: LOADK     R10 K15      ; R10 := "<RANK_"
 42 [-]: MOVE      R11 R6       ; R11 := R6
 43 [-]: LOADK     R12 K16      ; R12 := ">"
 44 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 45 [-]: MOVE      R11 R1       ; R11 := R1
 46 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 47 [-]: MOVE      R9 R6        ; R9 := R6
 48 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 49 [-]: MOVE      R9 R7        ; R9 := R7
 50 [-]: LOADK     R10 K17      ; R10 := " "
 51 [-]: MOVE      R11 R8       ; R11 := R8
 52 [-]: CONCAT    R7 R9 R11    ; R7 := R9 .. R10 .. R11
 53 [-]: SETTABLE  R3 K0 R4     ; R3["Name"] := R4
 54 [-]: SETTABLE  R3 K2 R7     ; R3["NameWithRank"] := R7
 55 [-]: LOADNIL   R9 R10       ; R9 := R10 := nil
 56 [-]: GETUPVAL  R11 U0       ; R11 := U0
 57 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["0xF81722A2"]
 58 [-]: GETTABLE  R12 R5 K19   ; R12 := R5["NORMAL_PVP"]
 59 [-]: EQ        0 R12 K1     ; if R12 ~= nil then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R12 R0       ; R12 := R0
 62 [-]: MOVE      R12 R1       ; R12 := R1
 63 [-]: GETTABLE  R13 R5 K19   ; R13 := R5["NORMAL_PVP"]
 64 [-]: GETTABLE  R14 R5 K20   ; R14 := R5["NORMAL"]
 65 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 66 [-]: MOVE      R9 R11       ; R9 := R11
 67 [-]: GETUPVAL  R11 U0       ; R11 := U0
 68 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["0xF81722A2"]
 69 [-]: GETTABLE  R12 R5 K19   ; R12 := R5["NORMAL_PVP"]
 70 [-]: EQ        0 R12 K1     ; if R12 ~= nil then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: MOVE      R12 R0       ; R12 := R0
 73 [-]: MOVE      R12 R1       ; R12 := R1
 74 [-]: GETGLOBAL R13 K21      ; R13 := Lotus_Game
 75 [-]: GETTABLE  R13 R13 K22  ; R13 := R13["LOT_NORMAL_PVP"]
 76 [-]: GETGLOBAL R14 K21      ; R14 := Lotus_Game
 77 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["LOT_NORMAL"]
 78 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 79 [-]: MOVE      R10 R11      ; R10 := R11
 80 [-]: NEWTABLE  R11 5 0      ; R11 := {}
 81 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 82 [-]: GETTABLE  R13 R9 K25   ; R13 := R9[1]
 83 [-]: SETTABLE  R12 K24 R13  ; R12["Type"] := R13
 84 [-]: SETTABLE  R12 K26 K27  ; R12["isWeapon"] := "0x1"
 85 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 86 [-]: GETTABLE  R14 R5 K28   ; R14 := R5["DragonKey"]
 87 [-]: SETTABLE  R13 K24 R14  ; R13["Type"] := R14
 88 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 89 [-]: GETTABLE  R15 R9 K29   ; R15 := R9[3]
 90 [-]: SETTABLE  R14 K24 R15  ; R14["Type"] := R15
 91 [-]: SETTABLE  R14 K26 K27  ; R14["isWeapon"] := "0x1"
 92 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 93 [-]: GETTABLE  R16 R9 K30   ; R16 := R9[2]
 94 [-]: SETTABLE  R15 K24 R16  ; R15["Type"] := R16
 95 [-]: SETTABLE  R15 K26 K27  ; R15["isWeapon"] := "0x1"
 96 [-]: NEWTABLE  R16 0 2      ; R16 := {}
 97 [-]: GETTABLE  R17 R9 K31   ; R17 := R9[4]
 98 [-]: SETTABLE  R16 K24 R17  ; R16["Type"] := R17
 99 [-]: SETTABLE  R16 K26 K27  ; R16["isWeapon"] := "0x1"
100 [-]: SETLIST   R11 5 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 5
101 [-]: CLOSURE   R12 0        ; R12 := closure(Function #313.1)
102 [-]: CLOSURE   R13 1        ; R13 := closure(Function #313.2)
103 [-]: MOVE      R14 R13      ; R14 := R13
104 [-]: MOVE      R15 R2       ; R15 := R2
105 [-]: CALL      R14 2 2      ; R14 := R14(R15)
106 [-]: TEST      R14 1        ; if R14 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: MOVE      R14 R12      ; R14 := R12
109 [-]: MOVE      R15 R2       ; R15 := R2
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: TEST      R14 0        ; if not R14 then PC := 137
112 [-]: JMP       137          ; PC := 137
113 [-]: GETTABLE  R14 R5 K32   ; R14 := R5["ARCHWING"]
114 [-]: TEST      R14 0        ; if not R14 then PC := 137
115 [-]: JMP       137          ; PC := 137
116 [-]: GETTABLE  R14 R5 K33   ; R14 := R5["HasArchwing"]
117 [-]: TEST      R14 0        ; if not R14 then PC := 137
118 [-]: JMP       137          ; PC := 137
119 [-]: LOADK     R14 K25      ; R14 := 1
120 [-]: GETTABLE  R15 R5 K32   ; R15 := R5["ARCHWING"]
121 [-]: LEN       R15 R15      ; R15 := # R15
122 [-]: LOADK     R16 K25      ; R16 := 1
123 [-]: FORPREP   R14 136      ; R14 -= R16; PC := 136
124 [-]: GETGLOBAL R18 K34      ; R18 := table
125 [-]: GETTABLE  R18 R18 K35  ; R18 := R18["0xE6450C9D"]
126 [-]: MOVE      R19 R11      ; R19 := R11
127 [-]: NEWTABLE  R20 0 2      ; R20 := {}
128 [-]: GETTABLE  R21 R5 K32   ; R21 := R5["ARCHWING"]
129 [-]: GETGLOBAL R22 K21      ; R22 := Lotus_Game
130 [-]: GETTABLE  R22 R22 K36  ; R22 := R22["SUIT_SLOT"]
131 [-]: ADD       R22 R22 R17  ; R22 := R22 + R17
132 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
133 [-]: SETTABLE  R20 K24 R21  ; R20["Type"] := R21
134 [-]: SETTABLE  R20 K26 K27  ; R20["isWeapon"] := "0x1"
135 [-]: CALL      R18 3 1      ; R18(R19,R20)
136 [-]: FORLOOP   R14 124      ; R14 += R16; if R14 <= R15 then begin PC := 124; R17 := R14 end
137 [-]: GETGLOBAL R18 K6       ; R18 := 0x400E7765
138 [-]: MOVE      R19 R9       ; R19 := R9
139 [-]: CALL      R18 2 2      ; R18 := R18(R19)
140 [-]: TEST      R18 1        ; if R18 then PC := 241
141 [-]: JMP       241          ; PC := 241
142 [-]: GETGLOBAL R18 K6       ; R18 := 0x400E7765
143 [-]: MOVE      R19 R11      ; R19 := R11
144 [-]: CALL      R18 2 2      ; R18 := R18(R19)
145 [-]: TEST      R18 1        ; if R18 then PC := 241
146 [-]: JMP       241          ; PC := 241
147 [-]: LOADK     R18 K11      ; R18 := ""
148 [-]: LOADK     R19 K25      ; R19 := 1
149 [-]: LEN       R20 R11      ; R20 := # R11
150 [-]: LOADK     R21 K25      ; R21 := 1
151 [-]: FORPREP   R19 239      ; R19 -= R21; PC := 239
152 [-]: GETTABLE  R23 R11 R22  ; R23 := R11[R22]
153 [-]: GETGLOBAL R24 K6       ; R24 := 0x400E7765
154 [-]: MOVE      R25 R23      ; R25 := R23
155 [-]: CALL      R24 2 2      ; R24 := R24(R25)
156 [-]: TEST      R24 1        ; if R24 then PC := 239
157 [-]: JMP       239          ; PC := 239
158 [-]: GETTABLE  R24 R23 K24  ; R24 := R23["Type"]
159 [-]: TEST      R24 0        ; if not R24 then PC := 239
160 [-]: JMP       239          ; PC := 239
161 [-]: GETTABLE  R24 R23 K24  ; R24 := R23["Type"]
162 [-]: GETTABLE  R24 R24 K37  ; R24 := R24["LocTag"]
163 [-]: TEST      R24 0        ; if not R24 then PC := 239
164 [-]: JMP       239          ; PC := 239
165 [-]: GETTABLE  R24 R23 K26  ; R24 := R23["isWeapon"]
166 [-]: TEST      R24 0        ; if not R24 then PC := 201
167 [-]: JMP       201          ; PC := 201
168 [-]: GETGLOBAL R24 K38      ; R24 := 0x9FAED6BC
169 [-]: GETTABLE  R25 R23 K24  ; R25 := R23["Type"]
170 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["LocTag"]
171 [-]: CALL      R24 2 2      ; R24 := R24(R25)
172 [-]: GETGLOBAL R25 K21      ; R25 := Lotus_Game
173 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["0x94792F09"]
174 [-]: MOVE      R26 R24      ; R26 := R24
175 [-]: CALL      R25 2 2      ; R25 := R25(R26)
176 [-]: EQ        1 R25 K11    ; if R25 == "" then PC := 179
177 [-]: JMP       179          ; PC := 179
178 [-]: MOVE      R24 R25      ; R24 := R25
179 [-]: EQ        1 R24 K11    ; if R24 == "" then PC := 239
180 [-]: JMP       239          ; PC := 239
181 [-]: LT        0 K25 R22    ; if 1 >= R22 then PC := 186
182 [-]: JMP       186          ; PC := 186
183 [-]: MOVE      R26 R18      ; R26 := R18
184 [-]: LOADK     R27 K40      ; R27 := "\n\r"
185 [-]: CONCAT    R18 R26 R27  ; R18 := R26 .. R27
186 [-]: GETTABLE  R26 R23 K24  ; R26 := R23["Type"]
187 [-]: GETTABLE  R26 R26 K41  ; R26 := R26["Level"]
188 [-]: MOVE      R27 R18      ; R27 := R18
189 [-]: GETGLOBAL R28 K42      ; R28 := string
190 [-]: GETTABLE  R28 R28 K43  ; R28 := R28["0x639C642A"]
191 [-]: SELF      R29 R0 K14   ; R30 := R0; R29 := R0["0x5DB0BD4"]
192 [-]: MOVE      R31 R24      ; R31 := R24
193 [-]: MOVE      R32 R1       ; R32 := R1
194 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
195 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
196 [-]: LOADK     R29 K44      ; R29 := " ["
197 [-]: MOVE      R30 R26      ; R30 := R26
198 [-]: LOADK     R31 K45      ; R31 := "]"
199 [-]: CONCAT    R18 R27 R31  ; R18 := R27 .. R28 .. R29 .. R30 .. R31
200 [-]: JMP       239          ; PC := 239
201 [-]: GETGLOBAL R27 K6       ; R27 := 0x400E7765
202 [-]: GETTABLE  R28 R23 K24  ; R28 := R23["Type"]
203 [-]: CALL      R27 2 2      ; R27 := R27(R28)
204 [-]: TEST      R27 1        ; if R27 then PC := 239
205 [-]: JMP       239          ; PC := 239
206 [-]: GETGLOBAL R27 K46      ; R27 := 0x2C00D429
207 [-]: GETTABLE  R28 R23 K24  ; R28 := R23["Type"]
208 [-]: CALL      R27 2 2      ; R27 := R27(R28)
209 [-]: SELF      R27 R27 K47  ; R28 := R27; R27 := R27["0x8B598ED4"]
210 [-]: GETGLOBAL R29 K46      ; R29 := 0x2C00D429
211 [-]: LOADK     R30 K48      ; R30 := "/Lotus/Types/Restoratives/Upgraded/CorruptedKey"
212 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
213 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
214 [-]: TEST      R27 0        ; if not R27 then PC := 239
215 [-]: JMP       239          ; PC := 239
216 [-]: GETGLOBAL R27 K49      ; R27 := 0x7C282057
217 [-]: GETTABLE  R28 R23 K24  ; R28 := R23["Type"]
218 [-]: CALL      R27 2 2      ; R27 := R27(R28)
219 [-]: GETGLOBAL R28 K6       ; R28 := 0x400E7765
220 [-]: MOVE      R29 R27      ; R29 := R27
221 [-]: CALL      R28 2 2      ; R28 := R28(R29)
222 [-]: TEST      R28 1        ; if R28 then PC := 239
223 [-]: JMP       239          ; PC := 239
224 [-]: LT        0 K25 R22    ; if 1 >= R22 then PC := 229
225 [-]: JMP       229          ; PC := 229
226 [-]: MOVE      R28 R18      ; R28 := R18
227 [-]: LOADK     R29 K40      ; R29 := "\n\r"
228 [-]: CONCAT    R18 R28 R29  ; R18 := R28 .. R29
229 [-]: SELF      R28 R27 K50  ; R29 := R27; R28 := R27["0x616C74B6"]
230 [-]: CALL      R28 2 2      ; R28 := R28(R29)
231 [-]: MOVE      R29 R18      ; R29 := R18
232 [-]: SELF      R30 R0 K14   ; R31 := R0; R30 := R0["0x5DB0BD4"]
233 [-]: GETGLOBAL R32 K38      ; R32 := 0x9FAED6BC
234 [-]: MOVE      R33 R28      ; R33 := R28
235 [-]: CALL      R32 2 2      ; R32 := R32(R33)
236 [-]: MOVE      R33 R0       ; R33 := R0
237 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
238 [-]: CONCAT    R18 R29 R30  ; R18 := R29 .. R30
239 [-]: FORLOOP   R19 152      ; R19 += R21; if R19 <= R20 then begin PC := 152; R22 := R19 end
240 [-]: SETTABLE  R3 K3 R18    ; R3["WeaponInfo"] := R18
241 [-]: LOADK     R29 K11      ; R29 := ""
242 [-]: GETTABLE  R30 R5 K51   ; R30 := R5["KubrowName"]
243 [-]: EQ        1 R30 K11    ; if R30 == "" then PC := 258
244 [-]: JMP       258          ; PC := 258
245 [-]: GETUPVAL  R30 U0       ; R30 := U0
246 [-]: GETTABLE  R30 R30 K52  ; R30 := R30["0x36BA5F48"]
247 [-]: CALL      R30 1 2      ; R30 := R30()
248 [-]: TEST      R30 0        ; if not R30 then PC := 256
249 [-]: JMP       256          ; PC := 256
250 [-]: SELF      R30 R0 K14   ; R31 := R0; R30 := R0["0x5DB0BD4"]
251 [-]: LOADK     R32 K53      ; R32 := "/Lotus/Language/Menu/CategoryKubrow"
252 [-]: MOVE      R33 R0       ; R33 := R0
253 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
254 [-]: MOVE      R29 R30      ; R29 := R30
255 [-]: JMP       280          ; PC := 280
256 [-]: GETTABLE  R29 R5 K51   ; R29 := R5["KubrowName"]
257 [-]: JMP       280          ; PC := 280
258 [-]: GETGLOBAL R30 K6       ; R30 := 0x400E7765
259 [-]: GETTABLE  R31 R5 K54   ; R31 := R5["SENTINEL"]
260 [-]: CALL      R30 2 2      ; R30 := R30(R31)
261 [-]: TEST      R30 1        ; if R30 then PC := 280
262 [-]: JMP       280          ; PC := 280
263 [-]: GETGLOBAL R30 K38      ; R30 := 0x9FAED6BC
264 [-]: GETTABLE  R31 R5 K54   ; R31 := R5["SENTINEL"]
265 [-]: GETTABLE  R31 R31 K25  ; R31 := R31[1]
266 [-]: GETTABLE  R31 R31 K37  ; R31 := R31["LocTag"]
267 [-]: CALL      R30 2 2      ; R30 := R30(R31)
268 [-]: GETGLOBAL R31 K6       ; R31 := 0x400E7765
269 [-]: MOVE      R32 R30      ; R32 := R30
270 [-]: CALL      R31 2 2      ; R31 := R31(R32)
271 [-]: TEST      R31 1        ; if R31 then PC := 280
272 [-]: JMP       280          ; PC := 280
273 [-]: SELF      R31 R0 K14   ; R32 := R0; R31 := R0["0x5DB0BD4"]
274 [-]: GETGLOBAL R33 K38      ; R33 := 0x9FAED6BC
275 [-]: MOVE      R34 R30      ; R34 := R30
276 [-]: CALL      R33 2 2      ; R33 := R33(R34)
277 [-]: MOVE      R34 R0       ; R34 := R0
278 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
279 [-]: MOVE      R29 R31      ; R29 := R31
280 [-]: EQ        1 R29 K11    ; if R29 == "" then PC := 296
281 [-]: JMP       296          ; PC := 296
282 [-]: GETGLOBAL R31 K6       ; R31 := 0x400E7765
283 [-]: GETTABLE  R32 R5 K54   ; R32 := R5["SENTINEL"]
284 [-]: CALL      R31 2 2      ; R31 := R31(R32)
285 [-]: TEST      R31 1        ; if R31 then PC := 296
286 [-]: JMP       296          ; PC := 296
287 [-]: GETTABLE  R31 R5 K54   ; R31 := R5["SENTINEL"]
288 [-]: GETTABLE  R31 R31 K25  ; R31 := R31[1]
289 [-]: GETTABLE  R31 R31 K41  ; R31 := R31["Level"]
290 [-]: LOADK     R32 K40      ; R32 := "\n\r"
291 [-]: MOVE      R33 R29      ; R33 := R29
292 [-]: LOADK     R34 K44      ; R34 := " ["
293 [-]: MOVE      R35 R31      ; R35 := R31
294 [-]: LOADK     R36 K45      ; R36 := "]"
295 [-]: CONCAT    R29 R32 R36  ; R29 := R32 .. R33 .. R34 .. R35 .. R36
296 [-]: SETTABLE  R3 K4 R29    ; R3["CompanionInfo"] := R29
297 [-]: SELF      R32 R0 K14   ; R33 := R0; R32 := R0["0x5DB0BD4"]
298 [-]: GETGLOBAL R34 K38      ; R34 := 0x9FAED6BC
299 [-]: GETTABLE  R35 R5 K55   ; R35 := R5["AuraName"]
300 [-]: CALL      R34 2 2      ; R34 := R34(R35)
301 [-]: MOVE      R35 R0       ; R35 := R0
302 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
303 [-]: EQ        1 R32 K11    ; if R32 == "" then PC := 311
304 [-]: JMP       311          ; PC := 311
305 [-]: LOADK     R33 K40      ; R33 := "\n\r"
306 [-]: GETGLOBAL R34 K42      ; R34 := string
307 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["0x639C642A"]
308 [-]: MOVE      R35 R32      ; R35 := R32
309 [-]: CALL      R34 2 2      ; R34 := R34(R35)
310 [-]: CONCAT    R32 R33 R34  ; R32 := R33 .. R34
311 [-]: SETTABLE  R3 K5 R32    ; R3["AuraInfo"] := R32
312 [-]: RETURN    R3 2         ; return R3
313 [-]: RETURN    R0 1         ; return 


; Function #313.1:
;
; Name:            
; Defined at line: 6364
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
  9 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MT_LANDSCAPE"]
 11 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["sortieId"]
 14 [-]: EQ        0 R1 K5      ; if R1 ~= "" then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["goalTag"]
 17 [-]: GETGLOBAL R2 K7        ; R2 := EMPTY_SYMBOL
 18 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R1 R0        ; R1 := R0
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: RETURN    R0 1         ; return 


; Function #313.2:
;
; Name:            
; Defined at line: 6372
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["archwingRequired"]
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #314:
;
; Name:            
; Defined at line: 6454
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #314.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K1 R1     ; R0["OnVendorConversationStarted"] := R1
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: CLOSURE   R1 1         ; R1 := closure(Function #314.2)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K2 R1     ; R0["OnVendorConversationEnded"] := R1
  9 [-]: RETURN    R0 1         ; return 


; Function #314.1:
;
; Name:            
; Defined at line: 6456
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SkipVendorDialog"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SkipVendorDialog"]
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mSpeakerName"]
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x6A235628
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        0 R2 K4      ; if R2 ~= "function" then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 19 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTransmissionSet"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: TEST      R1 0         ; if not R1 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: MOVE      R5 R2        ; R5 := R2
 30 [-]: CALL      R3 3 1       ; R3(R4,R5)
 31 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTransmissionSet"]
 32 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0xD168273F"]
 33 [-]: GETGLOBAL R5 K8        ; R5 := 0xEC274B1A
 34 [-]: LOADK     R6 K9        ; R6 := "FirstVisit"
 35 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 36 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 37 [-]: GETGLOBAL R4 K8        ; R4 := 0xEC274B1A
 38 [-]: LOADK     R5 K10       ; R5 := "FirstVisitIntro"
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mSpeakerName"]
 41 [-]: GETGLOBAL R6 K5        ; R6 := 0x400E7765
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: TEST      R6 1         ; if R6 then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: GETGLOBAL R6 K11       ; R6 := gGameData
 47 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x8572D26E"]
 48 [-]: GETGLOBAL R8 K8        ; R8 := 0xEC274B1A
 49 [-]: MOVE      R9 R5        ; R9 := R5
 50 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 51 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 52 [-]: MOVE      R6 R6        ; R6 := R6
 53 [-]: JMP       56           ; PC := 56
 54 [-]: MOVE      R6 R0        ; R6 := R0
 55 [-]: MOVE      R6 R1        ; R6 := R1
 56 [-]: GETTABLE  R7 R2 K13    ; R7 := R2["Loved"]
 57 [-]: TEST      R7 0         ; if not R7 then PC := 103
 58 [-]: JMP       103          ; PC := 103
 59 [-]: TEST      R6 1         ; if R6 then PC := 87
 60 [-]: JMP       87           ; PC := 87
 61 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
 62 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
 63 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
 64 [-]: LOADK     R10 K14      ; R10 := "FirstLoved"
 65 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 66 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 67 [-]: MOVE      R3 R7        ; R3 := R7
 68 [-]: LOADNIL   R4 R4        ; R4 := nil
 69 [-]: MOVE      R7 R5        ; R7 := R5
 70 [-]: LOADK     R8 K13       ; R8 := "Loved"
 71 [-]: CONCAT    R5 R7 R8     ; R5 := R7 .. R8
 72 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 73 [-]: MOVE      R8 R3        ; R8 := R3
 74 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 75 [-]: TEST      R7 1         ; if R7 then PC := 85
 76 [-]: JMP       85           ; PC := 85
 77 [-]: GETGLOBAL R7 K11       ; R7 := gGameData
 78 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x8572D26E"]
 79 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
 80 [-]: MOVE      R10 R5       ; R10 := R5
 81 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 82 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 83 [-]: MOVE      R6 R7        ; R6 := R7
 84 [-]: JMP       87           ; PC := 87
 85 [-]: MOVE      R6 R0        ; R6 := R0
 86 [-]: MOVE      R6 R1        ; R6 := R1
 87 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 88 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["mHubNpc"]
 89 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 90 [-]: TEST      R7 1         ; if R7 then PC := 103
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mHubNpc"]
 93 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0x58DAD0C5"]
 94 [-]: MOVE      R9 R0        ; R9 := R0
 95 [-]: CALL      R7 3 1       ; R7(R8,R9)
 96 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mHubNpc"]
 97 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7["0x966DE7DB"]
 98 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
 99 [-]: LOADK     R10 K18      ; R10 := "LovedIntro"
100 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
101 [-]: CALL      R7 0 1       ; R7(R8,...)
102 [-]: SETTABLE  R0 K19 K20   ; R0["IsUnmasked"] := "0x1"
103 [-]: TEST      R6 1         ; if R6 then PC := 138
104 [-]: JMP       138          ; PC := 138
105 [-]: GETTABLE  R7 R2 K21    ; R7 := R2["Level"]
106 [-]: EQ        0 R7 K22     ; if R7 ~= 0 then PC := 119
107 [-]: JMP       119          ; PC := 119
108 [-]: GETTABLE  R7 R2 K23    ; R7 := R2["Reputation"]
109 [-]: EQ        0 R7 K22     ; if R7 ~= 0 then PC := 119
110 [-]: JMP       119          ; PC := 119
111 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
112 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
113 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
114 [-]: LOADK     R10 K24      ; R10 := "Intro"
115 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
116 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
117 [-]: MOVE      R3 R7        ; R3 := R7
118 [-]: JMP       137          ; PC := 137
119 [-]: GETTABLE  R7 R2 K13    ; R7 := R2["Loved"]
120 [-]: TEST      R7 1         ; if R7 then PC := 130
121 [-]: JMP       130          ; PC := 130
122 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
123 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
124 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
125 [-]: LOADK     R10 K25      ; R10 := "Welcome"
126 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
127 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
128 [-]: MOVE      R3 R7        ; R3 := R7
129 [-]: JMP       137          ; PC := 137
130 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
131 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
132 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
133 [-]: LOADK     R10 K13      ; R10 := "Loved"
134 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
135 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
136 [-]: MOVE      R3 R7        ; R3 := R7
137 [-]: LOADNIL   R4 R4        ; R4 := nil
138 [-]: GETTABLE  R7 R0 K26    ; R7 := R0["mEventStageTag"]
139 [-]: GETGLOBAL R8 K27       ; R8 := EMPTY_SYMBOL
140 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 177
141 [-]: JMP       177          ; PC := 177
142 [-]: GETTABLE  R7 R0 K28    ; R7 := R0["mEventTransmissionTag"]
143 [-]: GETGLOBAL R8 K27       ; R8 := EMPTY_SYMBOL
144 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 177
145 [-]: JMP       177          ; PC := 177
146 [-]: GETGLOBAL R7 K11       ; R7 := gGameData
147 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7["0x2D0B8A86"]
148 [-]: CALL      R7 2 2       ; R7 := R7(R8)
149 [-]: GETTABLE  R8 R7 K30    ; R8 := R7["mGoals"]
150 [-]: LOADK     R9 K31       ; R9 := 1
151 [-]: LEN       R10 R8       ; R10 := # R8
152 [-]: LOADK     R11 K31      ; R11 := 1
153 [-]: FORPREP   R9 176       ; R9 -= R11; PC := 176
154 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
155 [-]: GETGLOBAL R14 K32      ; R14 := Engine
156 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["0xD09D7910"]
157 [-]: GETTABLE  R15 R13 K34  ; R15 := R13["mActivation"]
158 [-]: CALL      R14 2 2      ; R14 := R14(R15)
159 [-]: LE        0 R14 K22    ; if R14 > 0 then PC := 176
160 [-]: JMP       176          ; PC := 176
161 [-]: GETGLOBAL R14 K32      ; R14 := Engine
162 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["0xD09D7910"]
163 [-]: GETTABLE  R15 R13 K35  ; R15 := R13["mExpiry"]
164 [-]: CALL      R14 2 2      ; R14 := R14(R15)
165 [-]: LT        0 K22 R14    ; if 0 >= R14 then PC := 176
166 [-]: JMP       176          ; PC := 176
167 [-]: GETTABLE  R14 R13 K36  ; R14 := R13["mTag"]
168 [-]: GETTABLE  R15 R0 K26   ; R15 := R0["mEventStageTag"]
169 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETTABLE  R14 R0 K6    ; R14 := R0["mTransmissionSet"]
172 [-]: SELF      R14 R14 K7   ; R15 := R14; R14 := R14["0xD168273F"]
173 [-]: GETTABLE  R16 R0 K28   ; R16 := R0["mEventTransmissionTag"]
174 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
175 [-]: MOVE      R3 R14       ; R3 := R14
176 [-]: FORLOOP   R9 154       ; R9 += R11; if R9 <= R10 then begin PC := 154; R12 := R9 end
177 [-]: GETGLOBAL R14 K5       ; R14 := 0x400E7765
178 [-]: MOVE      R15 R3       ; R15 := R3
179 [-]: CALL      R14 2 2      ; R14 := R14(R15)
180 [-]: TEST      R14 1        ; if R14 then PC := 197
181 [-]: JMP       197          ; PC := 197
182 [-]: SELF      R14 R0 K37   ; R15 := R0; R14 := R0["0xA59699C7"]
183 [-]: MOVE      R16 R3       ; R16 := R3
184 [-]: LOADNIL   R17 R17      ; R17 := nil
185 [-]: MOVE      R18 R6       ; R18 := R6
186 [-]: MOVE      R19 R1       ; R19 := R1
187 [-]: MOVE      R20 R4       ; R20 := R4
188 [-]: CALL      R14 7 1      ; R14(R15,R16,R17,R18,R19,R20)
189 [-]: TEST      R6 0         ; if not R6 then PC := 197
190 [-]: JMP       197          ; PC := 197
191 [-]: GETGLOBAL R14 K11      ; R14 := gGameData
192 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0xA0BAE468"]
193 [-]: GETGLOBAL R16 K8       ; R16 := 0xEC274B1A
194 [-]: MOVE      R17 R5       ; R17 := R5
195 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
196 [-]: CALL      R14 0 1      ; R14(R15,...)
197 [-]: RETURN    R0 1         ; return 


; Function #314.2:
;
; Name:            
; Defined at line: 6521
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Loved"]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 30
  8 [-]: JMP       30           ; PC := 30
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mHubNpc"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 30
 13 [-]: JMP       30           ; PC := 30
 14 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["IsUnmasked"]
 15 [-]: TEST      R2 0         ; if not R2 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mHubNpc"]
 18 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x966DE7DB"]
 19 [-]: GETGLOBAL R4 K5        ; R4 := 0xEC274B1A
 20 [-]: LOADK     R5 K6        ; R5 := "LovedOutro"
 21 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 22 [-]: CALL      R2 0 1       ; R2(R3,...)
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x201191EA
 24 [-]: LOADK     R3 K8        ; R3 := 0.5
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mHubNpc"]
 27 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x58DAD0C5"]
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: CALL      R2 3 1       ; R2(R3,R4)
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 31 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mTransmissionSet"]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mSkipEndTrans"]
 36 [-]: TEST      R2 1         ; if R2 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: GETGLOBAL R2 K12       ; R2 := _T
 39 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["SkipVendorDialog"]
 40 [-]: TEST      R2 0         ; if not R2 then PC := 50
 41 [-]: JMP       50           ; PC := 50
 42 [-]: GETGLOBAL R2 K12       ; R2 := _T
 43 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["SkipVendorDialog"]
 44 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mSpeakerName"]
 45 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 46 [-]: TEST      R2 0         ; if not R2 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: SETTABLE  R0 K11 K15   ; R0["mSkipEndTrans"] := "0x0"
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mTransmissionSet"]
 51 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0xD168273F"]
 52 [-]: GETGLOBAL R4 K5        ; R4 := 0xEC274B1A
 53 [-]: LOADK     R5 K17       ; R5 := "Bye"
 54 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 55 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 56 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 57 [-]: MOVE      R4 R2        ; R4 := R2
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: TEST      R3 1         ; if R3 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: SELF      R3 R0 K18    ; R4 := R0; R3 := R0["0xA59699C7"]
 62 [-]: MOVE      R5 R2        ; R5 := R2
 63 [-]: LOADNIL   R6 R6        ; R6 := nil
 64 [-]: MOVE      R7 R0        ; R7 := R0
 65 [-]: MOVE      R8 R1        ; R8 := R1
 66 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 67 [-]: RETURN    R0 1         ; return 


; Function #315:
;
; Name:            
; Defined at line: 6547
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideHud"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideHud"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideHud"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideHud"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #316:
;
; Name:            
; Defined at line: 6555
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideNotifications"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideNotifications"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideNotifications"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideNotifications"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #317:
;
; Name:            
; Defined at line: 6563
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideMapRedux"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideMapRedux"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideMapRedux"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideMapRedux"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #318:
;
; Name:            
; Defined at line: 6571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideSquadOverlay"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideSquadOverlay"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideSquadOverlay"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideSquadOverlay"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #319:
;
; Name:            
; Defined at line: 6579
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1["0x3E2F6BF"]
  3 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  4 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  5 [-]: TEST      R3 1         ; if R3 then PC := 40
  6 [-]: JMP       40           ; PC := 40
  7 [-]: SELF      R3 R1 K1     ; R4 := R1; R3 := R1["0x3E2F6BF"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x5AF30A19"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0xD425D6BD"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 40
 17 [-]: JMP       40           ; PC := 40
 18 [-]: SELF      R4 R1 K4     ; R5 := R1; R4 := R1["0x10DE083B"]
 19 [-]: SELF      R6 R3 K5     ; R7 := R3; R6 := R3["0x6DA72501"]
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3["0x6DA72501"]
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: SELF      R8 R0 K6     ; R9 := R0; R8 := R0["0x7F595CA7"]
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: MUL       R8 R8 K7     ; R8 := R8 * 200
 26 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 27 [-]: LOADNIL   R8 R8        ; R8 := nil
 28 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 29 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 30 [-]: MOVE      R6 R4        ; R6 := R4
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: SELF      R5 R4 K8     ; R6 := R4; R5 := R4["0x8B598ED4"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 37 [-]: TEST      R5 0         ; if not R5 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: RETURN    R4 2         ; return R4
 40 [-]: LOADNIL   R5 R5        ; R5 := nil
 41 [-]: RETURN    R5 2         ; return R5
 42 [-]: RETURN    R0 1         ; return 


; Function #320:
;
; Name:            
; Defined at line: 6592
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := table
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: GETGLOBAL R4 K2        ; R4 := Lotus_Game
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["ARCHITECT"]
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: TEST      R0 0         ; if not R0 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R2 K0        ; R2 := table
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: GETGLOBAL R4 K2        ; R4 := Lotus_Game
 14 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["DECORATOR"]
 15 [-]: CALL      R2 3 1       ; R2(R3,R4)
 16 [-]: LOADK     R2 K5        ; R2 := 1
 17 [-]: LEN       R3 R1        ; R3 := # R1
 18 [-]: LOADK     R4 K5        ; R4 := 1
 19 [-]: FORPREP   R2 28        ; R2 -= R4; PC := 28
 20 [-]: GETGLOBAL R6 K6        ; R6 := gGameData
 21 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0x8E3B3DA2"]
 22 [-]: GETTABLE  R8 R1 R5     ; R8 := R1[R5]
 23 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 24 [-]: TEST      R6 0         ; if not R6 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: RETURN    R6 2         ; return R6
 28 [-]: FORLOOP   R2 20        ; R2 += R4; if R2 <= R3 then begin PC := 20; R5 := R2 end
 29 [-]: MOVE      R6 R0        ; R6 := R0
 30 [-]: RETURN    R6 2         ; return R6
 31 [-]: RETURN    R0 1         ; return 


; Function #321:
;
; Name:            
; Defined at line: 6610
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := _T
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["DojoMgr"]
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  4 [-]: MOVE      R5 R3        ; R5 := R3
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 0         ; if not R4 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: LOADNIL   R4 R4        ; R4 := nil
 10 [-]: LOADK     R5 K3        ; R5 := 1000000
 11 [-]: GETGLOBAL R6 K4        ; R6 := gRegion
 12 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xA76F0612"]
 13 [-]: GETGLOBAL R8 K6        ; R8 := 0xEC274B1A
 14 [-]: MOVE      R9 R0        ; R9 := R0
 15 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 16 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 17 [-]: LOADK     R7 K7        ; R7 := 1
 18 [-]: LEN       R8 R6        ; R8 := # R6
 19 [-]: LOADK     R9 K7        ; R9 := 1
 20 [-]: FORPREP   R7 61        ; R7 -= R9; PC := 61
 21 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 22 [-]: SELF      R12 R3 K8    ; R13 := R3; R12 := R3["0xBF9A2C88"]
 23 [-]: MOVE      R14 R11      ; R14 := R11
 24 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 25 [-]: LOADNIL   R13 R13      ; R13 := nil
 26 [-]: GETTABLE  R14 R12 K9   ; R14 := R12["id"]
 27 [-]: EQ        1 R14 K10    ; if R14 == "" then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETTABLE  R14 R3 K11   ; R14 := R3["mDojo"]
 30 [-]: SELF      R14 R14 K12  ; R15 := R14; R14 := R14["0x5F61A27F"]
 31 [-]: MOVE      R16 R12      ; R16 := R12
 32 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 33 [-]: MOVE      R13 R14      ; R13 := R14
 34 [-]: EQ        1 R13 K13    ; if R13 == nil then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SELF      R14 R13 K14  ; R15 := R13; R14 := R13["0x315E860F"]
 37 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 38 [-]: TEST      R14 1        ; if R14 then PC := 50
 39 [-]: JMP       50           ; PC := 50
 40 [-]: TEST      R2 1         ; if R2 then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: SELF      R14 R11 K15  ; R15 := R11; R14 := R11["0xAC8F6523"]
 43 [-]: MOVE      R16 R1       ; R16 := R1
 44 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 45 [-]: LT        0 R14 R5     ; if R14 >= R5 then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: MOVE      R4 R11       ; R4 := R11
 48 [-]: MOVE      R5 R14       ; R5 := R14
 49 [-]: JMP       61           ; PC := 61
 50 [-]: SELF      R15 R13 K16  ; R16 := R13; R15 := R13["0xDEC8B170"]
 51 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 52 [-]: TEST      R15 0        ; if not R15 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: SELF      R15 R11 K15  ; R16 := R11; R15 := R11["0xAC8F6523"]
 55 [-]: MOVE      R17 R1       ; R17 := R1
 56 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 57 [-]: LT        0 R15 R5     ; if R15 >= R5 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R4 R11       ; R4 := R11
 60 [-]: MOVE      R5 R15       ; R5 := R15
 61 [-]: FORLOOP   R7 21        ; R7 += R9; if R7 <= R8 then begin PC := 21; R10 := R7 end
 62 [-]: RETURN    R4 2         ; return R4
 63 [-]: RETURN    R0 1         ; return 


; Function #322:
;
; Name:            
; Defined at line: 6653
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == 0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: EQ        1 R0 K1      ; if R0 == 1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #323:
;
; Name:            
; Defined at line: 6657
; #Upvalues:       3
; #Parameters:     9
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: CLOSURE   R9 0         ; R9 := closure(Function #323.1)
  2 [-]: GETUPVAL  R0 U0        ; R0 := U0
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R8        ; R0 := R8
  6 [-]: GETUPVAL  R10 U1       ; R10 := U1
  7 [-]: CALL      R10 1 2      ; R10 := R10()
  8 [-]: CLOSURE   R11 1        ; R11 := closure(Function #323.2)
  9 [-]: MOVE      R0 R7        ; R0 := R7
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R5        ; R0 := R5
 12 [-]: SETTABLE  R10 K0 R11   ; R10["ConfirmConditionalWord"] := R11
 13 [-]: CLOSURE   R11 2        ; R11 := closure(Function #323.3)
 14 [-]: MOVE      R0 R7        ; R0 := R7
 15 [-]: MOVE      R0 R0        ; R0 := R0
 16 [-]: MOVE      R0 R5        ; R0 := R5
 17 [-]: SETTABLE  R10 K1 R11   ; R10["OSKConfirmConditionalWord"] := R11
 18 [-]: CLOSURE   R11 3        ; R11 := closure(Function #323.4)
 19 [-]: MOVE      R0 R9        ; R0 := R9
 20 [-]: MOVE      R0 R4        ; R0 := R4
 21 [-]: SETTABLE  R10 K2 R11   ; R10["ConditionalFirstConfirm"] := R11
 22 [-]: GETGLOBAL R11 K3       ; R11 := Engine
 23 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["0x1398DAFB"]
 24 [-]: CALL      R11 1 2      ; R11 := R11()
 25 [-]: TEST      R11 0        ; if not R11 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETUPVAL  R11 U2       ; R11 := U2
 28 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0x5AE6E363"]
 29 [-]: MOVE      R12 R3       ; R12 := R3
 30 [-]: LOADK     R13 K2       ; R13 := "ConditionalFirstConfirm"
 31 [-]: LOADK     R14 K6       ; R14 := 3
 32 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 33 [-]: JMP       38           ; PC := 38
 34 [-]: MOVE      R11 R9       ; R11 := R9
 35 [-]: MOVE      R12 R2       ; R12 := R2
 36 [-]: MOVE      R13 R6       ; R13 := R6
 37 [-]: CALL      R11 3 1      ; R11(R12,R13)
 38 [-]: RETURN    R0 1         ; return 


; Function #323.1:
;
; Name:            
; Defined at line: 6659
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: LOADK     R5 K0        ; R5 := ""
  5 [-]: LOADK     R6 K1        ; R6 := 20
  6 [-]: LOADK     R7 K2        ; R7 := "ConfirmConditionalWord"
  7 [-]: LOADK     R8 K3        ; R8 := "OSKConfirmConditionalWord"
  8 [-]: LOADNIL   R9 R11       ; R9 := R10 := R11 := nil
  9 [-]: MOVE      R12 R1       ; R12 := R1
 10 [-]: CALL      R2 11 3      ; R2,R3 := R2(R3,R4,R5,R6,R7,R8,R9,R10,R11,R12)
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3["0x458F27A9"]
 17 [-]: LOADK     R6 K6        ; R6 := "SetConditionalWord"
 18 [-]: GETUPVAL  R7 U2        ; R7 := U2
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3["0x458F27A9"]
 21 [-]: LOADK     R6 K7        ; R6 := "SetDialogWidth"
 22 [-]: GETUPVAL  R7 U3        ; R7 := U3
 23 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 24 [-]: RETURN    R0 1         ; return 


; Function #323.2:
;
; Name:            
; Defined at line: 6668
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K1        ; R4 := Engine
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["CI_SELECT"]
  6 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: TEST      R3 1         ; if R3 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: TEST      R4 0         ; if not R4 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETUPVAL  R4 U1        ; R4 := U1
 16 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xB9C96BA0"]
 17 [-]: GETUPVAL  R6 U2        ; R6 := U2
 18 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 19 [-]: MOVE      R8 R0        ; R8 := R0
 20 [-]: GETGLOBAL R9 K4        ; R9 := 0x9FAED6BC
 21 [-]: MOVE      R10 R3       ; R10 := R3
 22 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 23 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 24 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 25 [-]: RETURN    R0 1         ; return 


; Function #323.3:
;
; Name:            
; Defined at line: 6675
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 0         ; if not R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: TEST      R2 0         ; if not R2 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xB9C96BA0"]
  8 [-]: GETUPVAL  R4 U2        ; R4 := U2
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: GETGLOBAL R7 K1        ; R7 := 0x9FAED6BC
 12 [-]: MOVE      R8 R0        ; R8 := R0
 13 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 14 [-]: SETLIST   R5 0 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 0
 15 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #323.4:
;
; Name:            
; Defined at line: 6681
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #324:
;
; Name:            
; Defined at line: 6695
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameRules
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 54
  5 [-]: JMP       54           ; PC := 54
  6 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8B598ED4"]
  8 [-]: GETGLOBAL R3 K3        ; R3 := gLotusBaseGameRulesType
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 54
 11 [-]: JMP       54           ; PC := 54
 12 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xF3423E4E"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETGLOBAL R2 K5        ; R2 := Lotus_Game
 16 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["MT_RAILJACK"]
 17 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETGLOBAL R0 K7        ; R0 := SOUND_SET_RAILJACK
 20 [-]: JMP       54           ; PC := 54
 21 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 22 [-]: GETGLOBAL R2 K8        ; R2 := 0x9FAED6BC
 23 [-]: GETGLOBAL R3 K9        ; R3 := CETUS_NODE_TAG
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: GETGLOBAL R3 K10       ; R3 := SOUND_SET_EIDOLON
 26 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 27 [-]: GETGLOBAL R2 K8        ; R2 := 0x9FAED6BC
 28 [-]: GETGLOBAL R3 K11       ; R3 := PLAINS_NODE_TAG
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: GETGLOBAL R3 K10       ; R3 := SOUND_SET_EIDOLON
 31 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 32 [-]: GETGLOBAL R2 K8        ; R2 := 0x9FAED6BC
 33 [-]: GETGLOBAL R3 K12       ; R3 := ORB_VALLIS_NODE_TAG
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: GETGLOBAL R3 K13       ; R3 := SOUND_SET_ORB_VALLIS
 36 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 37 [-]: GETGLOBAL R2 K8        ; R2 := 0x9FAED6BC
 38 [-]: GETGLOBAL R3 K14       ; R3 := FORTUNA_NODE_TAG
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: GETGLOBAL R3 K15       ; R3 := SOUND_SET_FORTUNA
 41 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 42 [-]: GETGLOBAL R2 K8        ; R2 := 0x9FAED6BC
 43 [-]: GETGLOBAL R3 K16       ; R3 := OROKIN_TOWER_NODE_TAG
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: GETGLOBAL R3 K17       ; R3 := SOUND_SET_OROKIN_TOWER
 46 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 47 [-]: GETGLOBAL R2 K8        ; R2 := 0x9FAED6BC
 48 [-]: GETGLOBAL R3 K1        ; R3 := gGameRules
 49 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0xB8637349"]
 50 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 51 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["location"]
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: GETTABLE  R0 R1 R2     ; R0 := R1[R2]
 54 [-]: EQ        0 R0 K20     ; if R0 ~= nil then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: GETGLOBAL R0 K10       ; R0 := SOUND_SET_EIDOLON
 57 [-]: RETURN    R0 2         ; return R0
 58 [-]: RETURN    R0 1         ; return 


; Function #325:
;
; Name:            
; Defined at line: 6716
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R2 1         ; if R2 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R2 K0        ; R2 := 0
  4 [-]: LOADK     R3 K1        ; R3 := 64
  5 [-]: SELF      R4 R1 K2     ; R5 := R1; R4 := R1["0x11FF52EA"]
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["x"]
  8 [-]: GETTABLE  R6 R4 K4     ; R6 := R4["y"]
  9 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 10 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
 11 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x26581636"]
 12 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 13 [-]: MOVE      R9 R1        ; R9 := R1
 14 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 15 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x26581636"]
 16 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 17 [-]: MOVE      R9 R1        ; R9 := R1
 18 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 19 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 20 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 21 [-]: LOADK     R9 K9        ; R9 := "_width"
 22 [-]: MOVE      R10 R5       ; R10 := R5
 23 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 24 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 25 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 26 [-]: LOADK     R9 K10       ; R9 := "_height"
 27 [-]: MOVE      R10 R3       ; R10 := R3
 28 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 29 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 30 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 31 [-]: LOADK     R9 K11       ; R9 := "_y"
 32 [-]: ADD       R10 K12 R2   ; R10 := 22 + R2
 33 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 34 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 35 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 36 [-]: LOADK     R9 K9        ; R9 := "_width"
 37 [-]: MOVE      R10 R5       ; R10 := R5
 38 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 39 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 40 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 41 [-]: LOADK     R9 K10       ; R9 := "_height"
 42 [-]: MOVE      R10 R3       ; R10 := R3
 43 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 44 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 45 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 46 [-]: LOADK     R9 K11       ; R9 := "_y"
 47 [-]: ADD       R10 K12 R2   ; R10 := 22 + R2
 48 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 49 [-]: RETURN    R0 1         ; return 


; Function #326:
;
; Name:            
; Defined at line: 6731
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R3 K0        ; R3 := _G
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
  3 [-]: TEST      R3 1         ; if R3 then PC := 221
  4 [-]: JMP       221          ; PC := 221
  5 [-]: GETGLOBAL R3 K0        ; R3 := _G
  6 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  7 [-]: SETTABLE  R3 K1 R4     ; R3["EliteAlertTypeNameCache"] := R4
  8 [-]: GETGLOBAL R3 K0        ; R3 := _G
  9 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SETTABLE  R3 K2 R4     ; R3["suits"] := R4
 12 [-]: GETGLOBAL R3 K0        ; R3 := _G
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
 14 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 15 [-]: SETTABLE  R3 K3 R4     ; R3["weapons"] := R4
 16 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 17 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xC17093D6"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K6        ; R4 := 0x400E7765
 20 [-]: MOVE      R5 R3        ; R5 := R3
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: TEST      R4 0         ; if not R4 then PC := 38
 23 [-]: JMP       38           ; PC := 38
 24 [-]: LOADK     R4 K7        ; R4 := ""
 25 [-]: GETGLOBAL R5 K8        ; R5 := 0x2C00D429
 26 [-]: CALL      R5 1 2       ; R5 := R5()
 27 [-]: GETGLOBAL R6 K8        ; R6 := 0x2C00D429
 28 [-]: CALL      R6 1 2       ; R6 := R6()
 29 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 30 [-]: LOADK     R8 K7        ; R8 := ""
 31 [-]: GETGLOBAL R9 K8        ; R9 := 0x2C00D429
 32 [-]: CALL      R9 1 2       ; R9 := R9()
 33 [-]: GETGLOBAL R10 K8       ; R10 := 0x2C00D429
 34 [-]: CALL      R10 1 2      ; R10 := R10()
 35 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 36 [-]: LOADK     R12 K9       ; R12 := 0
 37 [-]: RETURN    R4 10        ; return R4,R5,R6,R7,R8,R9,R10,R11,R12
 38 [-]: SELF      R4 R3 K10    ; R5 := R3; R4 := R3["0xB68BBE7C"]
 39 [-]: GETGLOBAL R6 K8        ; R6 := 0x2C00D429
 40 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
 41 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 42 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 43 [-]: GETGLOBAL R5 K12       ; R5 := 0xECFDD17
 44 [-]: MOVE      R6 R4        ; R6 := R4
 45 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 46 [-]: JMP       98           ; PC := 98
 47 [-]: SELF      R10 R9 K13   ; R11 := R9; R10 := R9["0x8292A1EF"]
 48 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 49 [-]: GETGLOBAL R11 K14      ; R11 := Engine
 50 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["Item_Suits"]
 51 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 98
 52 [-]: JMP       98           ; PC := 98
 53 [-]: SELF      R10 R9 K16   ; R11 := R9; R10 := R9["0x820C2921"]
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: TEST      R10 1        ; if R10 then PC := 98
 56 [-]: JMP       98           ; PC := 98
 57 [-]: SELF      R10 R9 K17   ; R11 := R9; R10 := R9["0x7D5774ED"]
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: TEST      R10 0        ; if not R10 then PC := 98
 60 [-]: JMP       98           ; PC := 98
 61 [-]: SELF      R10 R9 K18   ; R11 := R9; R10 := R9["0x1B252E3C"]
 62 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 63 [-]: GETGLOBAL R11 K19      ; R11 := string
 64 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0xDE44F664"]
 65 [-]: MOVE      R12 R10      ; R12 := R10
 66 [-]: LOADK     R13 K21      ; R13 := "Prime"
 67 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 68 [-]: TEST      R11 1        ; if R11 then PC := 98
 69 [-]: JMP       98           ; PC := 98
 70 [-]: GETGLOBAL R11 K19      ; R11 := string
 71 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0xDE44F664"]
 72 [-]: MOVE      R12 R10      ; R12 := R10
 73 [-]: LOADK     R13 K22      ; R13 := "Operator"
 74 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 75 [-]: TEST      R11 1        ; if R11 then PC := 98
 76 [-]: JMP       98           ; PC := 98
 77 [-]: GETGLOBAL R11 K19      ; R11 := string
 78 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0xDE44F664"]
 79 [-]: MOVE      R12 R10      ; R12 := R10
 80 [-]: LOADK     R13 K23      ; R13 := "Umbra"
 81 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 82 [-]: TEST      R11 1        ; if R11 then PC := 98
 83 [-]: JMP       98           ; PC := 98
 84 [-]: GETGLOBAL R11 K19      ; R11 := string
 85 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0xDE44F664"]
 86 [-]: MOVE      R12 R10      ; R12 := R10
 87 [-]: LOADK     R13 K24      ; R13 := "PlayerPowerSuit"
 88 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 89 [-]: TEST      R11 1        ; if R11 then PC := 98
 90 [-]: JMP       98           ; PC := 98
 91 [-]: GETGLOBAL R11 K25      ; R11 := table
 92 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["0xE6450C9D"]
 93 [-]: GETGLOBAL R12 K0       ; R12 := _G
 94 [-]: GETTABLE  R12 R12 K1   ; R12 := R12["EliteAlertTypeNameCache"]
 95 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["suits"]
 96 [-]: MOVE      R13 R10      ; R13 := R10
 97 [-]: CALL      R11 3 1      ; R11(R12,R13)
 98 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 47; R7 := R8 end
 99 [-]: JMP       47           ; PC := 47
100 [-]: SELF      R11 R3 K10   ; R12 := R3; R11 := R3["0xB68BBE7C"]
101 [-]: GETGLOBAL R13 K27      ; R13 := gLotusWeaponType
102 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
103 [-]: GETGLOBAL R12 K12      ; R12 := 0xECFDD17
104 [-]: MOVE      R13 R11      ; R13 := R11
105 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
106 [-]: JMP       219          ; PC := 219
107 [-]: SELF      R17 R16 K13  ; R18 := R16; R17 := R16["0x8292A1EF"]
108 [-]: CALL      R17 2 2      ; R17 := R17(R18)
109 [-]: GETGLOBAL R18 K14      ; R18 := Engine
110 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["Item_Pistols"]
111 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 121
112 [-]: JMP       121          ; PC := 121
113 [-]: GETGLOBAL R18 K14      ; R18 := Engine
114 [-]: GETTABLE  R18 R18 K29  ; R18 := R18["Item_LongGuns"]
115 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 121
116 [-]: JMP       121          ; PC := 121
117 [-]: GETGLOBAL R18 K14      ; R18 := Engine
118 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["Item_Melee"]
119 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 219
120 [-]: JMP       219          ; PC := 219
121 [-]: SELF      R18 R16 K31  ; R19 := R16; R18 := R16["0x42300EB5"]
122 [-]: CALL      R18 2 2      ; R18 := R18(R19)
123 [-]: GETGLOBAL R19 K32      ; R19 := EMPTY_SYMBOL
124 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 219
125 [-]: JMP       219          ; PC := 219
126 [-]: SELF      R18 R16 K33  ; R19 := R16; R18 := R16["0x5AAE9A6D"]
127 [-]: CALL      R18 2 2      ; R18 := R18(R19)
128 [-]: TEST      R18 0        ; if not R18 then PC := 219
129 [-]: JMP       219          ; PC := 219
130 [-]: SELF      R18 R16 K16  ; R19 := R16; R18 := R16["0x820C2921"]
131 [-]: CALL      R18 2 2      ; R18 := R18(R19)
132 [-]: TEST      R18 1        ; if R18 then PC := 219
133 [-]: JMP       219          ; PC := 219
134 [-]: SELF      R18 R16 K17  ; R19 := R16; R18 := R16["0x7D5774ED"]
135 [-]: CALL      R18 2 2      ; R18 := R18(R19)
136 [-]: TEST      R18 0        ; if not R18 then PC := 219
137 [-]: JMP       219          ; PC := 219
138 [-]: SELF      R18 R16 K18  ; R19 := R16; R18 := R16["0x1B252E3C"]
139 [-]: CALL      R18 2 2      ; R18 := R18(R19)
140 [-]: GETGLOBAL R19 K19      ; R19 := string
141 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
142 [-]: MOVE      R20 R18      ; R20 := R18
143 [-]: LOADK     R21 K21      ; R21 := "Prime"
144 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
145 [-]: TEST      R19 1        ; if R19 then PC := 219
146 [-]: JMP       219          ; PC := 219
147 [-]: GETGLOBAL R19 K19      ; R19 := string
148 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
149 [-]: MOVE      R20 R18      ; R20 := R18
150 [-]: LOADK     R21 K34      ; R21 := "MK1"
151 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
152 [-]: TEST      R19 1        ; if R19 then PC := 219
153 [-]: JMP       219          ; PC := 219
154 [-]: GETGLOBAL R19 K19      ; R19 := string
155 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
156 [-]: MOVE      R20 R18      ; R20 := R18
157 [-]: LOADK     R21 K35      ; R21 := "Gear"
158 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
159 [-]: TEST      R19 1        ; if R19 then PC := 219
160 [-]: JMP       219          ; PC := 219
161 [-]: GETGLOBAL R19 K19      ; R19 := string
162 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
163 [-]: MOVE      R20 R18      ; R20 := R18
164 [-]: LOADK     R21 K36      ; R21 := "Wraith"
165 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
166 [-]: TEST      R19 1        ; if R19 then PC := 219
167 [-]: JMP       219          ; PC := 219
168 [-]: GETGLOBAL R19 K19      ; R19 := string
169 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
170 [-]: MOVE      R20 R18      ; R20 := R18
171 [-]: LOADK     R21 K37      ; R21 := "Vandal"
172 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
173 [-]: TEST      R19 1        ; if R19 then PC := 219
174 [-]: JMP       219          ; PC := 219
175 [-]: GETGLOBAL R19 K19      ; R19 := string
176 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
177 [-]: MOVE      R20 R18      ; R20 := R18
178 [-]: LOADK     R21 K38      ; R21 := "Modular"
179 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
180 [-]: TEST      R19 1        ; if R19 then PC := 219
181 [-]: JMP       219          ; PC := 219
182 [-]: GETGLOBAL R19 K19      ; R19 := string
183 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
184 [-]: MOVE      R20 R18      ; R20 := R18
185 [-]: LOADK     R21 K39      ; R21 := "Prisma"
186 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
187 [-]: TEST      R19 1        ; if R19 then PC := 219
188 [-]: JMP       219          ; PC := 219
189 [-]: GETGLOBAL R19 K19      ; R19 := string
190 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
191 [-]: MOVE      R20 R18      ; R20 := R18
192 [-]: LOADK     R21 K40      ; R21 := "Syndicate"
193 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
194 [-]: TEST      R19 1        ; if R19 then PC := 219
195 [-]: JMP       219          ; PC := 219
196 [-]: GETGLOBAL R19 K19      ; R19 := string
197 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
198 [-]: MOVE      R20 R18      ; R20 := R18
199 [-]: LOADK     R21 K41      ; R21 := " "
200 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
201 [-]: TEST      R19 1        ; if R19 then PC := 219
202 [-]: JMP       219          ; PC := 219
203 [-]: GETGLOBAL R19 K19      ; R19 := string
204 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["0xDE44F664"]
205 [-]: MOVE      R20 R18      ; R20 := R18
206 [-]: LOADK     R21 K42      ; R21 := "StartingRifle"
207 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
208 [-]: TEST      R19 1        ; if R19 then PC := 219
209 [-]: JMP       219          ; PC := 219
210 [-]: GETGLOBAL R19 K25      ; R19 := table
211 [-]: GETTABLE  R19 R19 K26  ; R19 := R19["0xE6450C9D"]
212 [-]: GETGLOBAL R20 K0       ; R20 := _G
213 [-]: GETTABLE  R20 R20 K1   ; R20 := R20["EliteAlertTypeNameCache"]
214 [-]: GETTABLE  R20 R20 K3   ; R20 := R20["weapons"]
215 [-]: NEWTABLE  R21 0 2      ; R21 := {}
216 [-]: SETTABLE  R21 K43 R18  ; R21["itemName"] := R18
217 [-]: SETTABLE  R21 K44 R17  ; R21["category"] := R17
218 [-]: CALL      R19 3 1      ; R19(R20,R21)
219 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 107; R14 := R15 end
220 [-]: JMP       107          ; PC := 107
221 [-]: GETGLOBAL R19 K45      ; R19 := 0x77EE484C
222 [-]: CALL      R19 1 2      ; R19 := R19()
223 [-]: GETUPVAL  R20 U0       ; R20 := U0
224 [-]: GETTABLE  R20 R20 K46  ; R20 := R20["0xF81722A2"]
225 [-]: EQ        0 R2 K47     ; if R2 ~= nil then PC := 228
226 [-]: JMP       228          ; PC := 228
227 [-]: MOVE      R21 R0       ; R21 := R0
228 [-]: MOVE      R21 R1       ; R21 := R1
229 [-]: MOVE      R22 R2       ; R22 := R2
230 [-]: GETGLOBAL R23 K48      ; R23 := math
231 [-]: GETTABLE  R23 R23 K49  ; R23 := R23["0xF7005A7B"]
232 [-]: GETUPVAL  R24 U1       ; R24 := U1
233 [-]: CALL      R24 1 2      ; R24 := R24()
234 [-]: GETGLOBAL R25 K50      ; R25 := ELITE_ALERT_MISSION_INTERVAL
235 [-]: DIV       R25 R25 K51  ; R25 := R25 / 60
236 [-]: DIV       R24 R24 R25  ; R24 := R24 / R25
237 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
238 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
239 [-]: GETGLOBAL R21 K52      ; R21 := 0x9B21739C
240 [-]: GETGLOBAL R22 K53      ; R22 := 0xCD597D99
241 [-]: MOVE      R23 R20      ; R23 := R20
242 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
243 [-]: CALL      R21 0 1      ; R21(R22,...)
244 [-]: GETGLOBAL R21 K54      ; R21 := 0x290116D3
245 [-]: LOADK     R22 K55      ; R22 := 1
246 [-]: LOADK     R23 K56      ; R23 := 1000000
247 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
248 [-]: GETGLOBAL R22 K57      ; R22 := 0x12513525
249 [-]: MOVE      R23 R0       ; R23 := R0
250 [-]: CALL      R22 2 2      ; R22 := R22(R23)
251 [-]: GETGLOBAL R23 K52      ; R23 := 0x9B21739C
252 [-]: GETGLOBAL R24 K53      ; R24 := 0xCD597D99
253 [-]: ADD       R25 R22 R21  ; R25 := R22 + R21
254 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
255 [-]: CALL      R23 0 1      ; R23(R24,...)
256 [-]: GETGLOBAL R23 K0       ; R23 := _G
257 [-]: GETTABLE  R23 R23 K1   ; R23 := R23["EliteAlertTypeNameCache"]
258 [-]: GETTABLE  R23 R23 K2   ; R23 := R23["suits"]
259 [-]: GETGLOBAL R24 K54      ; R24 := 0x290116D3
260 [-]: LOADK     R25 K55      ; R25 := 1
261 [-]: GETGLOBAL R26 K0       ; R26 := _G
262 [-]: GETTABLE  R26 R26 K1   ; R26 := R26["EliteAlertTypeNameCache"]
263 [-]: GETTABLE  R26 R26 K2   ; R26 := R26["suits"]
264 [-]: LEN       R26 R26      ; R26 := # R26
265 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
266 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
267 [-]: GETGLOBAL R24 K19      ; R24 := string
268 [-]: GETTABLE  R24 R24 K58  ; R24 := R24["0x633C4246"]
269 [-]: MOVE      R25 R23      ; R25 := R23
270 [-]: LOADK     R26 K59      ; R26 := "/StoreItems"
271 [-]: LOADK     R27 K7       ; R27 := ""
272 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
273 [-]: GETGLOBAL R25 K8       ; R25 := 0x2C00D429
274 [-]: MOVE      R26 R24      ; R26 := R24
275 [-]: CALL      R25 2 2      ; R25 := R25(R26)
276 [-]: GETGLOBAL R26 K19      ; R26 := string
277 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["0xDE44F664"]
278 [-]: MOVE      R27 R24      ; R27 := R24
279 [-]: LOADK     R28 K60      ; R28 := "/Anti"
280 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
281 [-]: TEST      R26 0        ; if not R26 then PC := 295
282 [-]: JMP       295          ; PC := 295
283 [-]: GETGLOBAL R26 K19      ; R26 := string
284 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["0x7B782033"]
285 [-]: MOVE      R27 R24      ; R27 := R24
286 [-]: LOADK     R28 K55      ; R28 := 1
287 [-]: GETGLOBAL R29 K19      ; R29 := string
288 [-]: GETTABLE  R29 R29 K62  ; R29 := R29["0xC6772A8A"]
289 [-]: MOVE      R30 R24      ; R30 := R24
290 [-]: CALL      R29 2 2      ; R29 := R29(R30)
291 [-]: SUB       R29 R29 K63  ; R29 := R29 - 4
292 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
293 [-]: LOADK     R27 K64      ; R27 := "Nova"
294 [-]: CONCAT    R24 R26 R27  ; R24 := R26 .. R27
295 [-]: GETGLOBAL R26 K8       ; R26 := 0x2C00D429
296 [-]: MOVE      R27 R24      ; R27 := R24
297 [-]: LOADK     R28 K65      ; R28 := "BaseSuit"
298 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
299 [-]: CALL      R26 2 2      ; R26 := R26(R27)
300 [-]: NEWTABLE  R27 0 2      ; R27 := {}
301 [-]: GETGLOBAL R28 K67      ; R28 := Game
302 [-]: GETTABLE  R28 R28 K68  ; R28 := R28["AVATAR_ABILITY_STRENGTH"]
303 [-]: SETTABLE  R27 K66 R28  ; R27["value"] := R28
304 [-]: SETTABLE  R27 K69 K70  ; R27["label"] := "/Lotus/Language/Labels/AVATAR_ABILITY_STRENGTH"
305 [-]: GETGLOBAL R28 K0       ; R28 := _G
306 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["EliteAlertTypeNameCache"]
307 [-]: GETTABLE  R28 R28 K3   ; R28 := R28["weapons"]
308 [-]: GETGLOBAL R29 K54      ; R29 := 0x290116D3
309 [-]: LOADK     R30 K55      ; R30 := 1
310 [-]: GETGLOBAL R31 K0       ; R31 := _G
311 [-]: GETTABLE  R31 R31 K1   ; R31 := R31["EliteAlertTypeNameCache"]
312 [-]: GETTABLE  R31 R31 K3   ; R31 := R31["weapons"]
313 [-]: LEN       R31 R31      ; R31 := # R31
314 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
315 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
316 [-]: GETTABLE  R29 R28 K43  ; R29 := R28["itemName"]
317 [-]: GETGLOBAL R30 K19      ; R30 := string
318 [-]: GETTABLE  R30 R30 K58  ; R30 := R30["0x633C4246"]
319 [-]: MOVE      R31 R29      ; R31 := R29
320 [-]: LOADK     R32 K59      ; R32 := "/StoreItems"
321 [-]: LOADK     R33 K7       ; R33 := ""
322 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
323 [-]: GETGLOBAL R31 K8       ; R31 := 0x2C00D429
324 [-]: MOVE      R32 R30      ; R32 := R30
325 [-]: CALL      R31 2 2      ; R31 := R31(R32)
326 [-]: GETGLOBAL R32 K8       ; R32 := 0x2C00D429
327 [-]: MOVE      R33 R30      ; R33 := R30
328 [-]: LOADK     R34 K21      ; R34 := "Prime"
329 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
330 [-]: CALL      R32 2 2      ; R32 := R32(R33)
331 [-]: NEWTABLE  R33 0 2      ; R33 := {}
332 [-]: GETUPVAL  R34 U0       ; R34 := U0
333 [-]: GETTABLE  R34 R34 K46  ; R34 := R34["0xF81722A2"]
334 [-]: GETTABLE  R35 R28 K44  ; R35 := R28["category"]
335 [-]: GETGLOBAL R36 K14      ; R36 := Engine
336 [-]: GETTABLE  R36 R36 K30  ; R36 := R36["Item_Melee"]
337 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 340
338 [-]: JMP       340          ; PC := 340
339 [-]: MOVE      R35 R0       ; R35 := R0
340 [-]: MOVE      R35 R1       ; R35 := R1
341 [-]: GETGLOBAL R36 K67      ; R36 := Game
342 [-]: GETTABLE  R36 R36 K71  ; R36 := R36["WEAPON_MELEE_DAMAGE"]
343 [-]: GETGLOBAL R37 K67      ; R37 := Game
344 [-]: GETTABLE  R37 R37 K72  ; R37 := R37["WEAPON_DAMAGE_AMOUNT"]
345 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
346 [-]: SETTABLE  R33 K66 R34  ; R33["value"] := R34
347 [-]: SETTABLE  R33 K69 K73  ; R33["label"] := "/Lotus/Language/Labels/WEAPON_DAMAGE_AMOUNT"
348 [-]: GETGLOBAL R34 K52      ; R34 := 0x9B21739C
349 [-]: MOVE      R35 R19      ; R35 := R19
350 [-]: CALL      R34 2 1      ; R34(R35)
351 [-]: GETGLOBAL R34 K74      ; R34 := 0x93B1256B
352 [-]: LOADK     R35 K75      ; R35 := "EliteAlert: generated boosts for "
353 [-]: MOVE      R36 R0       ; R36 := R0
354 [-]: LOADK     R37 K76      ; R37 := ": suitType="
355 [-]: MOVE      R38 R24      ; R38 := R24
356 [-]: LOADK     R39 K77      ; R39 := " wepType="
357 [-]: MOVE      R40 R30      ; R40 := R30
358 [-]: CONCAT    R35 R35 R40  ; R35 := R35 .. R36 .. R37 .. R38 .. R39 .. R40
359 [-]: CALL      R34 2 1      ; R34(R35)
360 [-]: MOVE      R34 R23      ; R34 := R23
361 [-]: MOVE      R35 R25      ; R35 := R25
362 [-]: MOVE      R36 R26      ; R36 := R26
363 [-]: MOVE      R37 R27      ; R37 := R27
364 [-]: MOVE      R38 R29      ; R38 := R29
365 [-]: MOVE      R39 R31      ; R39 := R31
366 [-]: MOVE      R40 R32      ; R40 := R32
367 [-]: MOVE      R41 R33      ; R41 := R33
368 [-]: MOVE      R42 R20      ; R42 := R20
369 [-]: RETURN    R34 10       ; return R34,R35,R36,R37,R38,R39,R40,R41,R42
370 [-]: RETURN    R0 1         ; return 


; Function #327:
;
; Name:            
; Defined at line: 6805
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Rank"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 53
  5 [-]: JMP       53           ; PC := 53
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["ResultItemType"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["Type"]
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 53
 14 [-]: JMP       53           ; PC := 53
 15 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 16 [-]: GETGLOBAL R3 K4        ; R3 := gGameData
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R2 K4        ; R2 := gGameData
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x6F2E05FD"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADNIL   R2 R2        ; R2 := nil
 26 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 53
 30 [-]: JMP       53           ; PC := 53
 31 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mXPInfo"]
 32 [-]: LOADK     R4 K7        ; R4 := 1
 33 [-]: LEN       R5 R3        ; R5 := # R3
 34 [-]: LOADK     R6 K7        ; R6 := 1
 35 [-]: FORPREP   R4 52        ; R4 -= R6; PC := 52
 36 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 37 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mItemType"]
 38 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 39 [-]: MOVE      R10 R8       ; R10 := R8
 40 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 41 [-]: TEST      R9 1         ; if R9 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: EQ        0 R8 R1      ; if R8 ~= R1 then PC := 52
 44 [-]: JMP       52           ; PC := 52
 45 [-]: GETGLOBAL R9 K9        ; R9 := gGameConfig
 46 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9["0x9E8E66BA"]
 47 [-]: GETTABLE  R11 R3 R7    ; R11 := R3[R7]
 48 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["mXP"]
 49 [-]: MOVE      R12 R8       ; R12 := R8
 50 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 51 [-]: SETTABLE  R0 K1 R9     ; R0["Rank"] := R9
 52 [-]: FORLOOP   R4 36        ; R4 += R6; if R4 <= R5 then begin PC := 36; R7 := R4 end
 53 [-]: RETURN    R0 1         ; return 


; Function #328:
;
; Name:            
; Defined at line: 6823
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 48
  5 [-]: JMP       48           ; PC := 48
  6 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
  9 [-]: GETTABLE  R1 R3 K3     ; R1 := R3["UIStyle_FloatingContentHighlight"]
 10 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
 13 [-]: GETTABLE  R2 R3 K4     ; R2 := R3["UIStyle_Background1"]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0xBBAE08CF"]
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xDDA3917C"]
 18 [-]: MOVE      R5 R1        ; R5 := R1
 19 [-]: MOVE      R6 R1        ; R6 := R1
 20 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 21 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xBBAE08CF"]
 24 [-]: GETUPVAL  R5 U1        ; R5 := U1
 25 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xDDA3917C"]
 26 [-]: MOVE      R6 R2        ; R6 := R2
 27 [-]: MOVE      R7 R1        ; R7 := R1
 28 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 29 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 30 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0["0x8B598ED4"]
 31 [-]: GETGLOBAL R7 K8        ; R7 := gParticleSysType
 32 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 40
 34 [-]: JMP       40           ; PC := 40
 35 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0["0x408A179A"]
 36 [-]: MOVE      R7 R3        ; R7 := R3
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 39 [-]: JMP       48           ; PC := 48
 40 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0["0x8B598ED4"]
 41 [-]: GETGLOBAL R7 K10       ; R7 := gLensFlareType
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0["0xA20F64C0"]
 46 [-]: MOVE      R7 R3        ; R7 := R3
 47 [-]: CALL      R5 3 1       ; R5(R6,R7)
 48 [-]: RETURN    R0 1         ; return 


; Function #329:
;
; Name:            
; Defined at line: 6843
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := string
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x633C4246"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := "\"#.-\""
  5 [-]: CLOSURE   R5 0         ; R5 := closure(Function #329.1)
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
  9 [-]: RETURN    R2 0         ; return R2,...
 10 [-]: RETURN    R0 1         ; return 


; Function #329.1:
;
; Name:            
; Defined at line: 6846
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x633C4246"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := "%a+"
  5 [-]: CLOSURE   R4 0         ; R4 := closure(Function #329.1.1)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: TAILCALL  R1 4 0       ; R1,... := R1(R2,R3,R4)
  9 [-]: RETURN    R1 0         ; return R1,...
 10 [-]: RETURN    R0 1         ; return 


; Function #329.1.1:
;
; Name:            
; Defined at line: 6849
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: LOADK     R2 K1        ; R2 := "UIStyle_"
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  6 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x93B1256B
  9 [-]: LOADK     R3 K4        ; R3 := "Attempted to use broken color: "
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 12 [-]: CALL      R2 2 1       ; R2(R3)
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADK     R2 K5        ; R2 := ""
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
 20 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["UIStyle_FloatingContent"]
 21 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 25 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETUPVAL  R2 U0        ; R2 := U0
 28 [-]: GETGLOBAL R3 K7        ; R3 := string
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x4B1F4F58"]
 30 [-]: LOADK     R4 K9        ; R4 := "%X"
 31 [-]: GETUPVAL  R5 U1        ; R5 := U1
 32 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0xDDA3917C"]
 33 [-]: MOVE      R6 R1        ; R6 := R1
 34 [-]: MOVE      R7 R1        ; R7 := R1
 35 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 36 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 37 [-]: SETTABLE  R2 R1 R3     ; R2[R1] := R3
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 40 [-]: RETURN    R2 2         ; return R2
 41 [-]: RETURN    R0 1         ; return 


; Function #330:
;
; Name:            
; Defined at line: 6871
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: CLOSURE   R1 0         ; R1 := closure(Function #330.1)
  2 [-]: MOVE      R2 R1        ; R2 := R1
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: TEST      R2 1         ; if R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  8 [-]: GETGLOBAL R3 K1        ; R3 := gGameData
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 78
 11 [-]: JMP       78           ; PC := 78
 12 [-]: GETGLOBAL R2 K2        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["ShowNotification"]
 14 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 78
 15 [-]: JMP       78           ; PC := 78
 16 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xA7D57555"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K2        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["SkipMailNotification"]
 21 [-]: TEST      R3 1         ; if R3 then PC := 45
 22 [-]: JMP       45           ; PC := 45
 23 [-]: GETGLOBAL R3 K7        ; R3 := string
 24 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xBDD0D625"]
 25 [-]: GETGLOBAL R4 K9        ; R4 := 0xE6DC43B0
 26 [-]: EQ        0 R2 K10     ; if R2 ~= 1 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: LOADK     R5 K11       ; R5 := "/Lotus/Language/Menu/Message"
 29 [-]: TEST      R5 1         ; if R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Menu/Messages"
 32 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 33 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 34 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 35 [-]: GETGLOBAL R4 K2        ; R4 := _T
 36 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["0x761CAD7D"]
 37 [-]: GETGLOBAL R5 K9        ; R5 := 0xE6DC43B0
 38 [-]: LOADK     R6 K14       ; R6 := "/Lotus/Language/Menu/Mailbox_NewMessagesNotification"
 39 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 40 [-]: SETTABLE  R7 K15 R2    ; R7["COUNT"] := R2
 41 [-]: SETTABLE  R7 K16 R3    ; R7["MESSAGES"] := R3
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: LOADK     R6 K17       ; R6 := "Mail"
 44 [-]: CALL      R4 3 1       ; R4(R5,R6)
 45 [-]: GETGLOBAL R4 K1        ; R4 := gGameData
 46 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x716FDD3E"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: LT        0 K19 R4     ; if 0 >= R4 then PC := 78
 49 [-]: JMP       78           ; PC := 78
 50 [-]: GETGLOBAL R4 K2        ; R4 := _T
 51 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["GetScreenRes"]
 52 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 78
 53 [-]: JMP       78           ; PC := 78
 54 [-]: GETGLOBAL R4 K2        ; R4 := _T
 55 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["0x4AFC37AA"]
 56 [-]: LOADK     R5 K22       ; R5 := "Inbox"
 57 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 58 [-]: GETGLOBAL R5 K23       ; R5 := gFlashMgr
 59 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x616DD092"]
 60 [-]: MOVE      R7 R4        ; R7 := R4
 61 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 62 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 63 [-]: MOVE      R7 R5        ; R7 := R5
 64 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 65 [-]: TEST      R6 0         ; if not R6 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 68 [-]: MOVE      R7 R0        ; R7 := R0
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: TEST      R6 1         ; if R6 then PC := 78
 71 [-]: JMP       78           ; PC := 78
 72 [-]: GETGLOBAL R6 K2        ; R6 := _T
 73 [-]: SETTABLE  R6 K25 K26   ; R6["OpeningMailbox"] := "0x1"
 74 [-]: SELF      R6 R0 K27    ; R7 := R0; R6 := R0["0x61494587"]
 75 [-]: LOADK     R8 K10       ; R8 := 1
 76 [-]: CLOSURE   R9 1         ; R9 := closure(Function #330.2)
 77 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 78 [-]: GETGLOBAL R6 K2        ; R6 := _T
 79 [-]: SETTABLE  R6 K6 K28    ; R6["SkipMailNotification"] := "0x0"
 80 [-]: GETGLOBAL R6 K2        ; R6 := _T
 81 [-]: SETTABLE  R6 K29 K28   ; R6["gQueueMailbox"] := "0x0"
 82 [-]: RETURN    R0 1         ; return 


; Function #330.1:
;
; Name:            
; Defined at line: 6872
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gQueueMailbox"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= "0x1" then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R0 K3        ; R0 := 0xE83D0CFD
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 12 [-]: GETGLOBAL R1 K6        ; R1 := gGameData
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 30
 15 [-]: JMP       30           ; PC := 30
 16 [-]: GETGLOBAL R0 K6        ; R0 := gGameData
 17 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x3D1A6885"]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: LEN       R0 R0        ; R0 := # R0
 20 [-]: LT        1 K8 R0      ; if 0 < R0 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R0 K6        ; R0 := gGameData
 23 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0xC6AB8F7"]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: LEN       R0 R0        ; R0 := # R0
 26 [-]: LT        0 K8 R0      ; if 0 >= R0 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R0 R0        ; R0 := R0
 29 [-]: RETURN    R0 2         ; return R0
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: RETURN    R0 2         ; return R0
 32 [-]: RETURN    R0 1         ; return 


; Function #330.2:
;
; Name:            
; Defined at line: 6903
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIInputEnabled"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 17
  4 [-]: JMP       17           ; PC := 17
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["RadialSolarMapOpen"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["TeleportingToConsole"]
 11 [-]: TEST      R0 1         ; if R0 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R0 K0        ; R0 := _T
 14 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["QuestPickerOpen"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: SETTABLE  R0 K5 K6     ; R0["SkipMailNotification"] := "0x1"
 19 [-]: GETGLOBAL R0 K0        ; R0 := _T
 20 [-]: SETTABLE  R0 K7 K6     ; R0["gQueueMailbox"] := "0x1"
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: SETTABLE  R0 K8 K9     ; R0["OpeningMailbox"] := nil
 23 [-]: JMP       50           ; PC := 50
 24 [-]: GETGLOBAL R0 K0        ; R0 := _T
 25 [-]: SETTABLE  R0 K10 K11   ; R0["ForceOpenScreen"] := "Inbox"
 26 [-]: GETGLOBAL R0 K12       ; R0 := 0x400E7765
 27 [-]: GETGLOBAL R1 K13       ; R1 := gGameRules
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 1         ; if R0 then PC := 48
 30 [-]: JMP       48           ; PC := 48
 31 [-]: GETGLOBAL R0 K12       ; R0 := 0x400E7765
 32 [-]: GETGLOBAL R1 K14       ; R1 := gRegion
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 48
 35 [-]: JMP       48           ; PC := 48
 36 [-]: GETGLOBAL R0 K13       ; R0 := gGameRules
 37 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0["0x4824F866"]
 38 [-]: GETGLOBAL R2 K14       ; R2 := gRegion
 39 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x3E2F6BF"]
 40 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 41 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 42 [-]: TEST      R0 0         ; if not R0 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R0 K13       ; R0 := gGameRules
 45 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0["0xC5926499"]
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R0 K0        ; R0 := _T
 49 [-]: SETTABLE  R0 K8 K9     ; R0["OpeningMailbox"] := nil
 50 [-]: RETURN    R0 1         ; return 


; Function #331:
;
; Name:            
; Defined at line: 6932
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameData
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x2D0B8A86"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x5B8EB241"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: JMP       18           ; PC := 18
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #332:
;
; Name:            
; Defined at line: 6936
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: CALL      R3 1 2       ; R3 := R3()
  3 [-]: SELF      R3 R3 K0     ; R4 := R3; R3 := R3["0xE29D2BBB"]
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: GETGLOBAL R6 K1        ; R6 := Lotus_Game
  6 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["FC_GRINEER"]
  7 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  8 [-]: LOADNIL   R4 R4        ; R4 := nil
  9 [-]: TEST      R2 0         ; if not R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETTABLE  R4 R2 K3     ; R4 := R2["mName"]
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 14 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Kingpins/NemesisViewer_Title"
 15 [-]: LOADNIL   R7 R7        ; R7 := nil
 16 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 17 [-]: MOVE      R4 R5        ; R4 := R5
 18 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 19 [-]: LOADK     R6 K7        ; R6 := "/Lotus/Language/Kingpins/NemesisControlledTerritory"
 20 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 21 [-]: SETTABLE  R7 K8 R4     ; R7["LICH_NAME"] := R4
 22 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 23 [-]: SETTABLE  R3 K6 R5     ; R3["uniqueName"] := R5
 24 [-]: LOADK     R5 K9        ; R5 := 1
 25 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 26 [-]: MOVE      R7 R1        ; R7 := R1
 27 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 28 [-]: TEST      R6 1         ; if R6 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: GETTABLE  R5 R1 K11    ; R5 := R1["mRank"]
 31 [-]: LOADK     R6 K12       ; R6 := 55
 32 [-]: LOADK     R7 K13       ; R7 := 75
 33 [-]: EQ        0 R5 K9      ; if R5 ~= 1 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: LOADK     R6 K14       ; R6 := 50
 36 [-]: LOADK     R7 K15       ; R7 := 60
 37 [-]: JMP       52           ; PC := 52
 38 [-]: EQ        0 R5 K16     ; if R5 ~= 2 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADK     R6 K12       ; R6 := 55
 41 [-]: LOADK     R7 K17       ; R7 := 70
 42 [-]: JMP       52           ; PC := 52
 43 [-]: EQ        0 R5 K18     ; if R5 ~= 3 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: LOADK     R6 K13       ; R6 := 75
 46 [-]: LOADK     R7 K19       ; R7 := 90
 47 [-]: JMP       52           ; PC := 52
 48 [-]: LE        0 K20 R5     ; if 4 > R5 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: LOADK     R6 K19       ; R6 := 90
 51 [-]: LOADK     R7 K21       ; R7 := 110
 52 [-]: GETGLOBAL R8 K23       ; R8 := math
 53 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["0x8B011038"]
 54 [-]: GETTABLE  R9 R3 K22    ; R9 := R3["minEnemyLevel"]
 55 [-]: MOVE      R10 R6       ; R10 := R6
 56 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 57 [-]: SETTABLE  R3 K22 R8    ; R3["minEnemyLevel"] := R8
 58 [-]: GETGLOBAL R8 K23       ; R8 := math
 59 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["0x8B011038"]
 60 [-]: GETTABLE  R9 R3 K25    ; R9 := R3["maxEnemyLevel"]
 61 [-]: MOVE      R10 R7       ; R10 := R7
 62 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 63 [-]: SETTABLE  R3 K25 R8    ; R3["maxEnemyLevel"] := R8
 64 [-]: SETTABLE  R3 K26 K9    ; R3["difficulty"] := 1
 65 [-]: GETTABLE  R8 R3 K27    ; R8 := R3["missionType"]
 66 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 67 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["MT_DEFENSE"]
 68 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 72
 69 [-]: JMP       72           ; PC := 72
 70 [-]: SETTABLE  R3 K29 K30   ; R3["maxWaveNum"] := 5
 71 [-]: JMP       107          ; PC := 107
 72 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 73 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["MT_TERRITORY"]
 74 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 78
 75 [-]: JMP       78           ; PC := 78
 76 [-]: SETTABLE  R3 K29 K9    ; R3["maxWaveNum"] := 1
 77 [-]: JMP       107          ; PC := 107
 78 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 79 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["MT_SURVIVAL"]
 80 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: SETTABLE  R3 K29 K30   ; R3["maxWaveNum"] := 5
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 85 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["MT_EXCAVATE"]
 86 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: SETTABLE  R3 K29 K30   ; R3["maxWaveNum"] := 5
 89 [-]: JMP       107          ; PC := 107
 90 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 91 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["MT_INTEL"]
 92 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: SETTABLE  R3 K29 K16   ; R3["maxWaveNum"] := 2
 95 [-]: JMP       107          ; PC := 107
 96 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 97 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["MT_SABOTAGE"]
 98 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 102
 99 [-]: JMP       102          ; PC := 102
100 [-]: SETTABLE  R3 K29 K16   ; R3["maxWaveNum"] := 2
101 [-]: JMP       107          ; PC := 107
102 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
103 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["MT_ARTIFACT"]
104 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 107
105 [-]: JMP       107          ; PC := 107
106 [-]: SETTABLE  R3 K29 K20   ; R3["maxWaveNum"] := 4
107 [-]: RETURN    R3 2         ; return R3
108 [-]: RETURN    R0 1         ; return 


; Function #333:
;
; Name:            
; Defined at line: 6994
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x921D870C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["RecipeItem_RV_HIDDEN"]
  5 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["RecipeItem_RV_EXCLUDED"]
  9 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: MOVE      R2 R1        ; R2 := R1
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: JMP       45           ; PC := 45
 14 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["RecipeItem_RV_VISIBLE_IF_CREWSHIP_UNOWNED"]
 16 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R2 K5        ; R2 := gGameData
 19 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x6F2E05FD"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x43947903"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: LEN       R2 R2        ; R2 := # R2
 24 [-]: LT        1 K8 R2      ; if 0 < R2 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: MOVE      R2 R1        ; R2 := R1
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: JMP       45           ; PC := 45
 30 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 31 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["RecipeItem_RV_VISIBLE_IF_CREWSHIP_OWNED"]
 32 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETGLOBAL R2 K5        ; R2 := gGameData
 35 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x6F2E05FD"]
 36 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 37 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x43947903"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: LEN       R2 R2        ; R2 := # R2
 40 [-]: EQ        1 R2 K8      ; if R2 == 0 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: MOVE      R2 R1        ; R2 := R1
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: MOVE      R2 R0        ; R2 := R0
 46 [-]: RETURN    R2 2         ; return R2
 47 [-]: RETURN    R0 1         ; return 


; Function #334:
;
; Name:            
; Defined at line: 7007
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R2 0 6       ; R2 := {}
  2 [-]: SETTABLE  R2 K0 K1     ; R2["_uk"] := "0x1"
  3 [-]: SETTABLE  R2 K2 K1     ; R2["_ru"] := "0x1"
  4 [-]: SETTABLE  R2 K3 K1     ; R2["_ja"] := "0x1"
  5 [-]: SETTABLE  R2 K4 K1     ; R2["_zh"] := "0x1"
  6 [-]: SETTABLE  R2 K5 K1     ; R2["_tc"] := "0x1"
  7 [-]: SETTABLE  R2 K6 K1     ; R2["_ko"] := "0x1"
  8 [-]: GETGLOBAL R3 K7        ; R3 := 0xB3DD1645
  9 [-]: CALL      R3 1 2       ; R3 := R3()
 10 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x5EC7A3D2"]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: GETTABLE  R4 R2 R3     ; R4 := R2[R3]
 13 [-]: TEST      R4 0         ; if not R4 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R4 K9        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: SELF      R4 R0 K11    ; R5 := R0; R4 := R0["0x1C19D966"]
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: LOADK     R7 K12       ; R7 := "letterSpacing"
 25 [-]: LOADK     R8 K13       ; R8 := 0
 26 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: RETURN    R4 2         ; return R4
 29 [-]: MOVE      R4 R1        ; R4 := R1
 30 [-]: RETURN    R4 2         ; return R4
 31 [-]: RETURN    R0 1         ; return 


; Function #335:
;
; Name:            
; Defined at line: 7019
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := Lotus_Game
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x27744EB6"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K3        ; R1 := gGameData
  5 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x59C1D6BA"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K2 R1     ; R0["mGiftMode"] := R1
  8 [-]: GETGLOBAL R1 K3        ; R1 := gGameData
  9 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xD51DA97F"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: SETTABLE  R0 K5 R1     ; R0["mFriendInvRestriction"] := R1
 12 [-]: GETGLOBAL R1 K3        ; R1 := gGameData
 13 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0xF5303166"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: SETTABLE  R0 K7 R1     ; R0["mGuildInvRestriction"] := R1
 16 [-]: GETGLOBAL R1 K3        ; R1 := gGameData
 17 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xA7502E91"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: SETTABLE  R0 K9 R1     ; R0["mShowFriendInvNotifications"] := R1
 20 [-]: GETGLOBAL R1 K3        ; R1 := gGameData
 21 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x532DE1E0"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SETTABLE  R0 K11 R1    ; R0["mTradingRulesConfirmed"] := R1
 24 [-]: RETURN    R0 2         ; return R0
 25 [-]: RETURN    R0 1         ; return 


; Function #336:
;
; Name:            
; Defined at line: 7029
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := 1000
  2 [-]: GETGLOBAL R3 K1        ; R3 := gGameData
  3 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0xEFBD95B0"]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LE        0 R2 R3      ; if R2 > R3 then PC := 37
  7 [-]: JMP       37           ; PC := 37
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0xE6DC43B0
  9 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendLimitError"
 10 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 11 [-]: SETTABLE  R6 K5 R3     ; R6["NUM_FRIENDS"] := R3
 12 [-]: SETTABLE  R6 K6 R2     ; R6["MAX_FRIENDS"] := R2
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: TEST      R5 1         ; if R5 then PC := 31
 18 [-]: JMP       31           ; PC := 31
 19 [-]: LEN       R5 R1        ; R5 := # R1
 20 [-]: EQ        1 R5 K8      ; if R5 == 0 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0["0xB9C96BA0"]
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 25 [-]: LOADK     R9 K10       ; R9 := "false"
 26 [-]: MOVE      R10 R4       ; R10 := R4
 27 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 28 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 29 [-]: TEST      R5 1         ; if R5 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xB11F032"]
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CALL      R5 2 1       ; R5(R6)
 35 [-]: MOVE      R5 R1        ; R5 := R1
 36 [-]: RETURN    R5 2         ; return R5
 37 [-]: MOVE      R5 R0        ; R5 := R0
 38 [-]: RETURN    R5 2         ; return R5
 39 [-]: RETURN    R0 1         ; return 


; Function #337:
;
; Name:            
; Defined at line: 7042
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #338:
;
; Name:            
; Defined at line: 7046
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: CLOSURE   R3 0         ; R3 := closure(Function #338.1)
  4 [-]: MOVE      R0 R2        ; R0 := R2
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: SETTABLE  R2 K0 R3     ; R2["UtilOnAddFriend"] := R3
  9 [-]: CLOSURE   R3 1         ; R3 := closure(Function #338.2)
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: SETTABLE  R2 K1 R3     ; R2["UtilAddFriendMessage"] := R3
 12 [-]: CLOSURE   R3 2         ; R3 := closure(Function #338.3)
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: SETTABLE  R2 K2 R3     ; R2["UtilAddFriendMessageOSK"] := R3
 15 [-]: GETTABLE  R3 R2 K3     ; R3 := R2["mMovie"]
 16 [-]: RETURN    R3 2         ; return R3
 17 [-]: RETURN    R0 1         ; return 


; Function #338.1:
;
; Name:            
; Defined at line: 7049
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mMovie"]
  5 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x5DB0BD4"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0x254FB3E6"]
  8 [-]: MOVE      R6 R1        ; R6 := R1
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 12 [-]: MOVE      R2 R3        ; R2 := R3
 13 [-]: JMP       24           ; PC := 24
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mMovie"]
 16 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 17 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendAddConfirm"
 18 [-]: MOVE      R6 R1        ; R6 := R1
 19 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 20 [-]: GETUPVAL  R8 U2        ; R8 := U2
 21 [-]: SETTABLE  R7 K4 R8     ; R7["NAME"] := R8
 22 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 23 [-]: MOVE      R2 R3        ; R2 := R3
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETUPVAL  R4 U3        ; R4 := U3
 26 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 49
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETUPVAL  R3 U0        ; R3 := U0
 30 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mMovie"]
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xB9C96BA0"]
 32 [-]: GETUPVAL  R5 U3        ; R5 := U3
 33 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 34 [-]: TEST      R0 0         ; if not R0 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: LOADK     R7 K6        ; R7 := "true"
 37 [-]: TEST      R7 1         ; if R7 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADK     R7 K7        ; R7 := "false"
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: TEST      R3 1         ; if R3 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETUPVAL  R3 U1        ; R3 := U1
 46 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xB11F032"]
 47 [-]: MOVE      R4 R2        ; R4 := R2
 48 [-]: CALL      R3 2 1       ; R3(R4)
 49 [-]: RETURN    R0 1         ; return 


; Function #338.2:
;
; Name:            
; Defined at line: 7064
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K2        ; R4 := Engine
 10 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["CI_SELECT"]
 11 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R3 K4        ; R3 := gGameData
 14 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x5FBAC3D"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: MOVE      R6 R0        ; R6 := R0
 17 [-]: LOADK     R7 K6        ; R7 := "UtilOnAddFriend"
 18 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 19 [-]: RETURN    R0 1         ; return 


; Function #338.3:
;
; Name:            
; Defined at line: 7070
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETGLOBAL R2 K0        ; R2 := gGameData
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x5FBAC3D"]
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: LOADK     R6 K2        ; R6 := "UtilOnAddFriend"
  8 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  9 [-]: RETURN    R0 1         ; return 


; Function #339:
;
; Name:            
; Defined at line: 7078
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETGLOBAL R4 K1        ; R4 := gGameData
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: TESTSET   R5 R1 1      ; if R1 then PC := 12 else R5 := R1
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R5 K2        ; R5 := "OnAddFriend"
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: TEST      R4 0         ; if not R4 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R4 K3        ; R4 := Engine
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0x695D4229"]
 22 [-]: CALL      R4 1 2       ; R4 := R4()
 23 [-]: TEST      R4 0         ; if not R4 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3["0xB9C96BA0"]
 26 [-]: LOADK     R6 K6        ; R6 := "UtilAddFriendMessage"
 27 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 28 [-]: LOADK     R8 K7        ; R8 := ""
 29 [-]: LOADK     R9 K7        ; R9 := ""
 30 [-]: GETGLOBAL R10 K3       ; R10 := Engine
 31 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["CI_SELECT"]
 32 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 33 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 34 [-]: JMP       59           ; PC := 59
 35 [-]: LEN       R4 R2        ; R4 := # R2
 36 [-]: EQ        0 R4 K9      ; if R4 ~= 0 then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3["0xB9C96BA0"]
 39 [-]: LOADK     R6 K6        ; R6 := "UtilAddFriendMessage"
 40 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 41 [-]: TESTSET   R8 R2 1      ; if R2 then PC := 44 else R8 := R2
 42 [-]: JMP       44           ; PC := 44
 43 [-]: LOADK     R8 K7        ; R8 := ""
 44 [-]: LOADK     R9 K7        ; R9 := ""
 45 [-]: GETGLOBAL R10 K3       ; R10 := Engine
 46 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["CI_SELECT"]
 47 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 48 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 49 [-]: JMP       59           ; PC := 59
 50 [-]: GETUPVAL  R4 U2        ; R4 := U2
 51 [-]: MOVE      R5 R3        ; R5 := R3
 52 [-]: LOADK     R6 K10       ; R6 := "/Lotus/Language/Menu/Message"
 53 [-]: LOADK     R7 K7        ; R7 := ""
 54 [-]: LOADK     R8 K11       ; R8 := 200
 55 [-]: LOADK     R9 K6        ; R9 := "UtilAddFriendMessage"
 56 [-]: LOADK     R10 K12      ; R10 := "UtilAddFriendMessageOSK"
 57 [-]: MOVE      R11 R1       ; R11 := R1
 58 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 59 [-]: RETURN    R0 1         ; return 


; Function #340:
;
; Name:            
; Defined at line: 7099
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 13      ; R0 := {}
  2 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  3 [-]: SETTABLE  R1 K1 K2     ; R1["Scale"] := 2000
  4 [-]: SETTABLE  R1 K3 K4     ; R1["X"] := 40
  5 [-]: SETTABLE  R1 K5 K6     ; R1["Y"] := -40
  6 [-]: SETTABLE  R0 K0 R1     ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilRebels.png"] := R1
  7 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  8 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
  9 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 10 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 11 [-]: SETTABLE  R0 K7 R1     ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilJudge.png"] := R1
 12 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 13 [-]: SETTABLE  R1 K1 K11    ; R1["Scale"] := 1000
 14 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 15 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 16 [-]: SETTABLE  R1 K12 K13   ; R1["Alpha"] := 8
 17 [-]: SETTABLE  R0 K10 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilOracle.png"] := R1
 18 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 19 [-]: SETTABLE  R1 K1 K15    ; R1["Scale"] := 2400
 20 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 21 [-]: SETTABLE  R1 K5 K16    ; R1["Y"] := 20
 22 [-]: SETTABLE  R0 K14 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilBusiness.png"] := R1
 23 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 24 [-]: SETTABLE  R1 K1 K18    ; R1["Scale"] := 1300
 25 [-]: SETTABLE  R1 K3 K19    ; R1["X"] := -50
 26 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 27 [-]: SETTABLE  R0 K17 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilAssassins.png"] := R1
 28 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 29 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
 30 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 31 [-]: SETTABLE  R1 K5 K21    ; R1["Y"] := 60
 32 [-]: SETTABLE  R0 K20 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilChurch.png"] := R1
 33 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 34 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
 35 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 36 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 37 [-]: SETTABLE  R0 K22 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonCetusElder.png"] := R1
 38 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 39 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
 40 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 41 [-]: SETTABLE  R1 K5 K4     ; R1["Y"] := 40
 42 [-]: SETTABLE  R1 K12 K24   ; R1["Alpha"] := 15
 43 [-]: SETTABLE  R0 K23 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonHunter.png"] := R1
 44 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 45 [-]: SETTABLE  R1 K1 K11    ; R1["Scale"] := 1000
 46 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 47 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 48 [-]: SETTABLE  R1 K12 K13   ; R1["Alpha"] := 8
 49 [-]: SETTABLE  R0 K25 R1    ; R0["/Lotus/Interface/Graphics/Fortuna/FortunaTitleIcon.png"] := R1
 50 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 51 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
 52 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 53 [-]: SETTABLE  R1 K5 K4     ; R1["Y"] := 40
 54 [-]: SETTABLE  R1 K12 K13   ; R1["Alpha"] := 8
 55 [-]: SETTABLE  R0 K26 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionVentKidz.png"] := R1
 56 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 57 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
 58 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 59 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 60 [-]: SETTABLE  R1 K12 K24   ; R1["Alpha"] := 15
 61 [-]: SETTABLE  R0 K27 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilSolarisUnited.png"] := R1
 62 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 63 [-]: SETTABLE  R1 K1 K18    ; R1["Scale"] := 1300
 64 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 65 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 66 [-]: SETTABLE  R1 K12 K29   ; R1["Alpha"] := 7
 67 [-]: SETTABLE  R0 K28 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilConclave.png"] := R1
 68 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 69 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500
 70 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0
 71 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0
 72 [-]: SETTABLE  R0 K30 R1    ; R0["/Lotus/Interface/Icons/Categories/IconLibrarian256.png"] := R1
 73 [-]: RETURN    R0 2         ; return R0
 74 [-]: RETURN    R0 1         ; return 


; Function #341:
;
; Name:            
; Defined at line: 7118
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := gFlashMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x616DD092"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := _G
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x458F27A9"]
 12 [-]: LOADK     R4 K6        ; R4 := "PreviewClose"
 13 [-]: LOADK     R5 K7        ; R5 := ""
 14 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R2 K8        ; R2 := _T
 18 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 19 [-]: SETTABLE  R2 K9 R3     ; R2["QueuedTransmissions"] := R3
 20 [-]: RETURN    R0 1         ; return 


; Function #342:
;
; Name:            
; Defined at line: 7129
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x44299779"]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: TEST      R2 0         ; if not R2 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       31           ; PC := 31
  8 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x25D68A52"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x75EB3F77"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: MOVE      R3 R3        ; R3 := R3
 16 [-]: TEST      R3 0         ; if not R3 then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: TEST      R1 0         ; if not R1 then PC := 30
 19 [-]: JMP       30           ; PC := 30
 20 [-]: SELF      R4 R2 K4     ; R5 := R2; R4 := R2["0x8B598ED4"]
 21 [-]: GETGLOBAL R6 K5        ; R6 := gEmplacementType
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: TEST      R4 0         ; if not R4 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2["0x2DB1272F"]
 26 [-]: CALL      R4 2 1       ; R4(R5)
 27 [-]: JMP       30           ; PC := 30
 28 [-]: SELF      R4 R0 K7     ; R5 := R0; R4 := R0["0xEB8686D7"]
 29 [-]: CALL      R4 2 1       ; R4(R5)
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #343:
;
; Name:            
; Defined at line: 7146
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B598ED4"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R1 R1        ; R1 := R1
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #344:
;
; Name:            
; Defined at line: 7154
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1106FFC3"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := gRegion
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x3E2F6BF"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETGLOBAL R3 K2        ; R3 := gRegion
  9 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x3E2F6BF"]
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: TEST      R3 1         ; if R3 then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 18 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0["0xA0CEF191"]
 19 [-]: SELF      R6 R1 K6     ; R7 := R1; R6 := R1["0x72E5DB62"]
 20 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 21 [-]: CALL      R4 0 0       ; R4,... := R4(R5,...)
 22 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 23 [-]: MOVE      R3 R3        ; R3 := R3
 24 [-]: JMP       27           ; PC := 27
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: TEST      R3 1         ; if R3 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R4 K0        ; R4 := gGameRules
 30 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x7C138DEF"]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: TEST      R4 0         ; if not R4 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: RETURN    R4 2         ; return R4
 36 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 37 [-]: GETGLOBAL R5 K8        ; R5 := gGameData
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: TEST      R4 1         ; if R4 then PC := 69
 40 [-]: JMP       69           ; PC := 69
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: GETGLOBAL R5 K8        ; R5 := gGameData
 43 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x143DE652"]
 44 [-]: MOVE      R7 R1        ; R7 := R1
 45 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 46 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mRooms"]
 47 [-]: LOADK     R6 K11       ; R6 := 1
 48 [-]: LEN       R7 R5        ; R7 := # R5
 49 [-]: LOADK     R8 K11       ; R8 := 1
 50 [-]: FORPREP   R6 64        ; R6 -= R8; PC := 64
 51 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 52 [-]: GETTABLE  R11 R10 K12  ; R11 := R10["mName"]
 53 [-]: EQ        0 R11 R2     ; if R11 ~= R2 then PC := 64
 54 [-]: JMP       64           ; PC := 64
 55 [-]: GETTABLE  R11 R5 R9    ; R11 := R5[R9]
 56 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["mPlacedDecos"]
 57 [-]: LEN       R11 R11      ; R11 := # R11
 58 [-]: EQ        0 R11 K14    ; if R11 ~= 0 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: MOVE      R11 R0       ; R11 := R0
 61 [-]: RETURN    R11 2        ; return R11
 62 [-]: MOVE      R4 R1        ; R4 := R1
 63 [-]: JMP       65           ; PC := 65
 64 [-]: FORLOOP   R6 51        ; R6 += R8; if R6 <= R7 then begin PC := 51; R9 := R6 end
 65 [-]: TEST      R4 1         ; if R4 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: MOVE      R11 R0       ; R11 := R0
 68 [-]: RETURN    R11 2        ; return R11
 69 [-]: GETGLOBAL R11 K0       ; R11 := gGameRules
 70 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x8B598ED4"]
 71 [-]: GETGLOBAL R13 K16      ; R13 := gLotusConclaveGameRulesType
 72 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 73 [-]: MOVE      R11 R11      ; R11 := R11
 74 [-]: RETURN    R11 2        ; return R11
 75 [-]: RETURN    R0 1         ; return 


