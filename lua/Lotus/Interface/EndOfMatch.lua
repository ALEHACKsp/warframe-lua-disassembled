code size: 1156
code size: 2
code size: 2
code size: 184
code size: 14
code size: 14
code size: 14
code size: 15
code size: 53
code size: 12
code size: 27
code size: 124
code size: 8
code size: 23
code size: 32
code size: 122
code size: 38
code size: 21
code size: 25
code size: 18
code size: 18
code size: 20
code size: 11
code size: 152
code size: 205
code size: 19
code size: 10
code size: 9
code size: 15
code size: 66
code size: 64
code size: 3
code size: 10
code size: 57
code size: 11
code size: 92
code size: 6
code size: 46
code size: 14
code size: 15
code size: 109
code size: 60
code size: 12
code size: 12
code size: 16
code size: 87
code size: 48
code size: 168
code size: 459
code size: 16
code size: 11
code size: 10
code size: 122
code size: 349
code size: 12
code size: 380
code size: 8
code size: 10
code size: 25
code size: 58
code size: 36
code size: 47
code size: 55
code size: 41
code size: 11
code size: 11
code size: 53
code size: 11
code size: 11
code size: 11
code size: 11
code size: 11
code size: 15
code size: 513
code size: 10
code size: 59
code size: 34
code size: 11
code size: 57
code size: 178
code size: 916
code size: 3
code size: 103
code size: 89
code size: 1865
code size: 42
code size: 8
code size: 39
code size: 309
code size: 102
code size: 22
code size: 649
code size: 66
code size: 19
code size: 29
code size: 125
code size: 20
code size: 60
code size: 3
code size: 318
code size: 106
code size: 145
code size: 1
code size: 888
code size: 13
code size: 302
code size: 33
code size: 65
code size: 16
code size: 428
code size: 11
code size: 184
code size: 673
code size: 25
code size: 16
code size: 14
code size: 82
code size: 883
code size: 20
code size: 8
code size: 157
code size: 137
code size: 191
code size: 48
code size: 31
code size: 14
code size: 6
code size: 7
code size: 12
code size: 4
code size: 375
code size: 24
code size: 53
code size: 237
code size: 14
code size: 16
code size: 16
code size: 20
code size: 3
code size: 144
code size: 21
code size: 37
code size: 129
code size: 8
code size: 73
code size: 31
code size: 3
code size: 16
code size: 1696
code size: 3
code size: 6
code size: 35
code size: 18
code size: 22
code size: 37
code size: 44
code size: 40
code size: 892
code size: 3
code size: 10
code size: 6
code size: 83
code size: 806
code size: 1
code size: 3
code size: 71
code size: 16
code size: 13
code size: 66
code size: 17
code size: 11
code size: 11
code size: 11
code size: 10
code size: 9
code size: 9
code size: 9
code size: 51
code size: 23
code size: 6
code size: 60
code size: 3
code size: 6
code size: 5
code size: 83
code size: 12
code size: 12
code size: 16
code size: 170
code size: 5
code size: 6
code size: 6
code size: 6
code size: 6
code size: 24
code size: 24
code size: 54
code size: 26
code size: 16
code size: 16
code size: 12
code size: 12
code size: 15
code size: 14
code size: 9
code size: 27
code size: 13
code size: 42
code size: 7
code size: 42
code size: 37
code size: 40
code size: 10
code size: 3
code size: 8
code size: 3
code size: 3
code size: 52
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\B.Font.cache_extracted\Lotus\Interface\EndOfMatch.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  212

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Utilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x329BDC44
  5 [-]: LOADK     R2 K2        ; R2 := "Lotus.Interface.LotusUtilities"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x329BDC44
  8 [-]: LOADK     R3 K3        ; R3 := "Lotus.Interface.CardUtilitiesRedux"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x329BDC44
 11 [-]: LOADK     R4 K4        ; R4 := "Lotus.Interface.RewardUtilities"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x329BDC44
 14 [-]: LOADK     R5 K5        ; R5 := "Lotus.Interface.StoreItemUtilities"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K0        ; R5 := 0x329BDC44
 17 [-]: LOADK     R6 K6        ; R6 := "Lotus.Scripts.Nemesis.NemesisGenerator"
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K0        ; R6 := 0x329BDC44
 20 [-]: LOADK     R7 K7        ; R7 := "Lotus.Scripts.Libs.TransmissionSet"
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: GETGLOBAL R7 K0        ; R7 := 0x329BDC44
 23 [-]: LOADK     R8 K8        ; R8 := "Lotus.Scripts.PVP.PVPHelper"
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: MOVE      R8 R1        ; R8 := R1
 26 [-]: LOADNIL   R9 R9        ; R9 := nil
 27 [-]: LOADK     R10 K9       ; R10 := 0
 28 [-]: LOADNIL   R11 R11      ; R11 := nil
 29 [-]: MOVE      R12 R0       ; R12 := R0
 30 [-]: LOADNIL   R13 R13      ; R13 := nil
 31 [-]: LOADK     R14 K10      ; R14 := ""
 32 [-]: LOADK     R15 K10      ; R15 := ""
 33 [-]: LOADK     R16 K11      ; R16 := "/Lotus/Language/Game/IdentifiedItem"
 34 [-]: GETGLOBAL R17 K12      ; R17 := 0x2C00D429
 35 [-]: LOADK     R18 K13      ; R18 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
 36 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 37 [-]: GETGLOBAL R18 K12      ; R18 := 0x2C00D429
 38 [-]: LOADK     R19 K14      ; R19 := "/Lotus/Upgrades/Mods/Railjack/RailjackBaseMod"
 39 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 40 [-]: GETGLOBAL R19 K12      ; R19 := 0x2C00D429
 41 [-]: LOADK     R20 K15      ; R20 := "/Lotus/Types/Game/LotusSigil"
 42 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 43 [-]: GETGLOBAL R20 K12      ; R20 := 0x2C00D429
 44 [-]: LOADK     R21 K16      ; R21 := "/Lotus/Types/Items/MiscItems/VoidTearDrop"
 45 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 46 [-]: GETGLOBAL R21 K12      ; R21 := 0x2C00D429
 47 [-]: LOADK     R22 K17      ; R22 := "/Lotus/Types/Game/KubrowPet/KubrowPetPowerSuit"
 48 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 49 [-]: GETGLOBAL R22 K12      ; R22 := 0x2C00D429
 50 [-]: LOADK     R23 K18      ; R23 := "/Lotus/Types/Game/CatbrowPet/CatbrowPetPowerSuit"
 51 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 52 [-]: GETGLOBAL R23 K12      ; R23 := 0x2C00D429
 53 [-]: LOADK     R24 K19      ; R24 := "/Lotus/Types/Items/MiscItems/TransientMiscItem"
 54 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 55 [-]: GETGLOBAL R24 K12      ; R24 := 0x2C00D429
 56 [-]: LOADK     R25 K20      ; R25 := "/Lotus/Types/Items/MiscItems/Kuva"
 57 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 58 [-]: GETGLOBAL R25 K12      ; R25 := 0x2C00D429
 59 [-]: LOADK     R26 K21      ; R26 := "/Lotus/Types/Items/Events/OperationsCredits"
 60 [-]: CALL      R25 2 2      ; R25 := R25(R26)
 61 [-]: LOADNIL   R26 R26      ; R26 := nil
 62 [-]: NEWTABLE  R27 0 0      ; R27 := {}
 63 [-]: MOVE      R28 R0       ; R28 := R0
 64 [-]: LOADK     R29 K22      ; R29 := "DD1111"
 65 [-]: LOADK     R30 K23      ; R30 := "3895D3"
 66 [-]: LOADNIL   R31 R32      ; R31 := R32 := nil
 67 [-]: MOVE      R33 R0       ; R33 := R0
 68 [-]: MOVE      R34 R0       ; R34 := R0
 69 [-]: MOVE      R35 R0       ; R35 := R0
 70 [-]: MOVE      R36 R0       ; R36 := R0
 71 [-]: MOVE      R37 R0       ; R37 := R0
 72 [-]: LOADK     R38 K24      ; R38 := -1
 73 [-]: LOADNIL   R39 R40      ; R39 := R40 := nil
 74 [-]: LOADK     R41 K25      ; R41 := 1
 75 [-]: MOVE      R42 R0       ; R42 := R0
 76 [-]: LOADK     R43 K9       ; R43 := 0
 77 [-]: LOADNIL   R44 R44      ; R44 := nil
 78 [-]: LOADK     R45 K24      ; R45 := -1
 79 [-]: MOVE      R46 R0       ; R46 := R0
 80 [-]: LOADNIL   R47 R48      ; R47 := R48 := nil
 81 [-]: MOVE      R49 R0       ; R49 := R0
 82 [-]: LOADK     R50 K9       ; R50 := 0
 83 [-]: LOADK     R51 K26      ; R51 := 10
 84 [-]: LOADK     R52 K27      ; R52 := 0.25
 85 [-]: LOADK     R53 K28      ; R53 := 0.15000000596046
 86 [-]: LOADK     R54 K29      ; R54 := 1.25
 87 [-]: LOADK     R55 K30      ; R55 := 100
 88 [-]: MOVE      R56 R0       ; R56 := R0
 89 [-]: NEWTABLE  R57 0 7      ; R57 := {}
 90 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
 91 [-]: LOADK     R59 K33      ; R59 := "Wave"
 92 [-]: CALL      R58 2 2      ; R58 := R58(R59)
 93 [-]: SETTABLE  R57 K31 R58  ; R57["WAVE_NUMBER"] := R58
 94 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
 95 [-]: LOADK     R59 K35      ; R59 := "TimeElapsed"
 96 [-]: CALL      R58 2 2      ; R58 := R58(R59)
 97 [-]: SETTABLE  R57 K34 R58  ; R57["TIME_ELAPSED"] := R58
 98 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
 99 [-]: LOADK     R59 K37      ; R59 := "Score"
100 [-]: CALL      R58 2 2      ; R58 := R58(R59)
101 [-]: SETTABLE  R57 K36 R58  ; R57["MISSION_SCORE"] := R58
102 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
103 [-]: LOADK     R59 K39      ; R59 := "RescueEventScore"
104 [-]: CALL      R58 2 2      ; R58 := R58(R59)
105 [-]: SETTABLE  R57 K38 R58  ; R57["RESCUE_SCORE"] := R58
106 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
107 [-]: LOADK     R59 K41      ; R59 := "HiveEventScore"
108 [-]: CALL      R58 2 2      ; R58 := R58(R59)
109 [-]: SETTABLE  R57 K40 R58  ; R57["HIVE_SCORE"] := R58
110 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
111 [-]: LOADK     R59 K43      ; R59 := "FactionHunterSpawned"
112 [-]: CALL      R58 2 2      ; R58 := R58(R59)
113 [-]: SETTABLE  R57 K42 R58  ; R57["FACTION_HUNTER_SPAWNED"] := R58
114 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
115 [-]: LOADK     R59 K45      ; R59 := "NumDeathSquadVictims"
116 [-]: CALL      R58 2 2      ; R58 := R58(R59)
117 [-]: SETTABLE  R57 K44 R58  ; R57["NUM_DEATH_SQUAD_VICTIMS"] := R58
118 [-]: GETGLOBAL R58 K32      ; R58 := 0xEC274B1A
119 [-]: LOADK     R59 K46      ; R59 := "MoonEarth"
120 [-]: CALL      R58 2 2      ; R58 := R58(R59)
121 [-]: GETGLOBAL R59 K32      ; R59 := 0xEC274B1A
122 [-]: LOADK     R60 K47      ; R60 := "MoonVoid"
123 [-]: CALL      R59 2 2      ; R59 := R59(R60)
124 [-]: LOADK     R60 K48      ; R60 := "SolNode802"
125 [-]: GETGLOBAL R61 K32      ; R61 := 0xEC274B1A
126 [-]: LOADK     R62 K49      ; R62 := "EARNED_ITEM"
127 [-]: CALL      R61 2 2      ; R61 := R61(R62)
128 [-]: MOVE      R62 R0       ; R62 := R0
129 [-]: MOVE      R63 R0       ; R63 := R0
130 [-]: LOADNIL   R64 R64      ; R64 := nil
131 [-]: MOVE      R65 R0       ; R65 := R0
132 [-]: LOADNIL   R66 R68      ; R66 := R67 := R68 := nil
133 [-]: NEWTABLE  R69 0 0      ; R69 := {}
134 [-]: NEWTABLE  R70 0 0      ; R70 := {}
135 [-]: LOADNIL   R71 R73      ; R71 := R72 := R73 := nil
136 [-]: NEWTABLE  R74 0 0      ; R74 := {}
137 [-]: NEWTABLE  R75 0 0      ; R75 := {}
138 [-]: LOADK     R76 K50      ; R76 := 5
139 [-]: NEWTABLE  R77 0 0      ; R77 := {}
140 [-]: NEWTABLE  R78 0 4      ; R78 := {}
141 [-]: SETTABLE  R78 K51 K25  ; R78["Stats"] := 1
142 [-]: SETTABLE  R78 K52 K53  ; R78["Rewards"] := 2
143 [-]: SETTABLE  R78 K54 K55  ; R78["Log"] := 3
144 [-]: SETTABLE  R78 K56 K57  ; R78["Medals"] := 4
145 [-]: MOVE      R79 R0       ; R79 := R0
146 [-]: MOVE      R80 R0       ; R80 := R0
147 [-]: LOADK     R81 K58      ; R81 := 13421772
148 [-]: LOADK     R82 K59      ; R82 := 16750848
149 [-]: LOADK     R83 K60      ; R83 := 16777215
150 [-]: MOVE      R84 R1       ; R84 := R1
151 [-]: LOADK     R85 K61      ; R85 := 8
152 [-]: LOADK     R86 K24      ; R86 := -1
153 [-]: LOADK     R87 K62      ; R87 := 9
154 [-]: NEWTABLE  R88 0 5      ; R88 := {}
155 [-]: SETTABLE  R88 K63 K9   ; R88["Affinity"] := 0
156 [-]: SETTABLE  R88 K52 K9   ; R88["Rewards"] := 0
157 [-]: SETTABLE  R88 K64 K9   ; R88["Mods"] := 0
158 [-]: SETTABLE  R88 K51 K9   ; R88["Stats"] := 0
159 [-]: SETTABLE  R88 K65 K9   ; R88["Title"] := 0
160 [-]: LOADNIL   R89 R94      ; R89 := R90 := R91 := R92 := R93 := R94 := nil
161 [-]: LOADK     R95 K9       ; R95 := 0
162 [-]: LOADK     R96 K66      ; R96 := 116
163 [-]: NEWTABLE  R97 0 4      ; R97 := {}
164 [-]: SETTABLE  R97 K67 K25  ; R97["ITEMS"] := 1
165 [-]: SETTABLE  R97 K68 K53  ; R97["REP"] := 2
166 [-]: SETTABLE  R97 K69 K55  ; R97["SCOREBOARD"] := 3
167 [-]: SETTABLE  R97 K70 K57  ; R97["MASTERY"] := 4
168 [-]: GETTABLE  R98 R97 K68  ; R98 := R97["REP"]
169 [-]: MOVE      R99 R0       ; R99 := R0
170 [-]: LOADK     R100 K9      ; R100 := 0
171 [-]: MOVE      R101 R0      ; R101 := R0
172 [-]: LOADNIL   R102 R102    ; R102 := nil
173 [-]: NEWTABLE  R103 0 5     ; R103 := {}
174 [-]: SETTABLE  R103 K71 K72 ; R103["isPvp"] := "0x0"
175 [-]: SETTABLE  R103 K73 K72 ; R103["allPlayersCommitted"] := "0x0"
176 [-]: GETGLOBAL R104 K75     ; R104 := Lotus_Game
177 [-]: GETTABLE  R104 R104 K76; R104 := R104["PVPMODE_CAPTURETHEFLAG"]
178 [-]: SETTABLE  R103 K74 R104; R103["pvpType"] := R104
179 [-]: SETTABLE  R103 K77 K78 ; R103["CurrMapVoteId"] := nil
180 [-]: SETTABLE  R103 K79 K72 ; R103["MapVoteInProgress"] := "0x0"
181 [-]: NEWTABLE  R104 0 0     ; R104 := {}
182 [-]: NEWTABLE  R105 0 0     ; R105 := {}
183 [-]: NEWTABLE  R106 0 0     ; R106 := {}
184 [-]: NEWTABLE  R107 0 0     ; R107 := {}
185 [-]: MOVE      R108 R0      ; R108 := R0
186 [-]: LOADK     R109 K10     ; R109 := ""
187 [-]: NEWTABLE  R110 0 3     ; R110 := {}
188 [-]: SETTABLE  R110 K80 K25 ; R110["QUICK_PREVIEW"] := 1
189 [-]: SETTABLE  R110 K81 K53 ; R110["DETAILED_PREVIEW"] := 2
190 [-]: SETTABLE  R110 K82 K55 ; R110["ACTUAL_EOM"] := 3
191 [-]: MOVE      R111 R0      ; R111 := R0
192 [-]: NEWTABLE  R112 0 0     ; R112 := {}
193 [-]: MOVE      R113 R0      ; R113 := R0
194 [-]: MOVE      R114 R0      ; R114 := R0
195 [-]: LOADNIL   R115 R120    ; R115 := R116 := R117 := R118 := R119 := R120 := nil
196 [-]: LOADK     R121 K9      ; R121 := 0
197 [-]: MOVE      R122 R0      ; R122 := R0
198 [-]: MOVE      R123 R0      ; R123 := R0
199 [-]: MOVE      R124 R0      ; R124 := R0
200 [-]: CLOSURE   R125 0       ; R125 := closure(Function #1)
201 [-]: SETGLOBAL R125 K83     ; GetCards := R125
202 [-]: SETGLOBAL R125 K84     ; 0xD11BEB25 := R125
203 [-]: CLOSURE   R125 1       ; R125 := closure(Function #2)
204 [-]: SETGLOBAL R125 K85     ; GetSelectedCards := R125
205 [-]: SETGLOBAL R125 K86     ; 0x444C64CA := R125
206 [-]: CLOSURE   R125 2       ; R125 := closure(Function #3)
207 [-]: MOVE      R0 R1        ; R0 := R1
208 [-]: MOVE      R0 R98       ; R0 := R98
209 [-]: MOVE      R0 R97       ; R0 := R97
210 [-]: MOVE      R0 R114      ; R0 := R114
211 [-]: MOVE      R0 R110      ; R0 := R110
212 [-]: MOVE      R0 R91       ; R0 := R91
213 [-]: MOVE      R0 R48       ; R0 := R48
214 [-]: MOVE      R0 R108      ; R0 := R108
215 [-]: MOVE      R0 R73       ; R0 := R73
216 [-]: MOVE      R0 R0        ; R0 := R0
217 [-]: MOVE      R0 R113      ; R0 := R113
218 [-]: SETGLOBAL R125 K87     ; Shutdown := R125
219 [-]: SETGLOBAL R125 K88     ; 0x3C577FA3 := R125
220 [-]: CLOSURE   R125 3       ; R125 := closure(Function #4)
221 [-]: CLOSURE   R126 4       ; R126 := closure(Function #5)
222 [-]: CLOSURE   R127 5       ; R127 := closure(Function #6)
223 [-]: CLOSURE   R128 6       ; R128 := closure(Function #7)
224 [-]: MOVE      R0 R127      ; R0 := R127
225 [-]: CLOSURE   R129 7       ; R129 := closure(Function #8)
226 [-]: CLOSURE   R130 8       ; R130 := closure(Function #9)
227 [-]: MOVE      R0 R117      ; R0 := R117
228 [-]: MOVE      R0 R103      ; R0 := R103
229 [-]: MOVE      R0 R7        ; R0 := R7
230 [-]: CLOSURE   R120 9       ; R120 := closure(Function #10)
231 [-]: MOVE      R0 R17       ; R0 := R17
232 [-]: MOVE      R0 R18       ; R0 := R18
233 [-]: CLOSURE   R131 10      ; R131 := closure(Function #11)
234 [-]: MOVE      R0 R1        ; R0 := R1
235 [-]: MOVE      R0 R73       ; R0 := R73
236 [-]: MOVE      R0 R125      ; R0 := R125
237 [-]: MOVE      R0 R126      ; R0 := R126
238 [-]: CLOSURE   R132 11      ; R132 := closure(Function #12)
239 [-]: MOVE      R0 R131      ; R0 := R131
240 [-]: MOVE      R0 R93       ; R0 := R93
241 [-]: MOVE      R0 R0        ; R0 := R0
242 [-]: CLOSURE   R133 12      ; R133 := closure(Function #13)
243 [-]: MOVE      R0 R93       ; R0 := R93
244 [-]: MOVE      R0 R132      ; R0 := R132
245 [-]: MOVE      R0 R131      ; R0 := R131
246 [-]: CLOSURE   R134 13      ; R134 := closure(Function #14)
247 [-]: MOVE      R0 R97       ; R0 := R97
248 [-]: MOVE      R0 R103      ; R0 := R103
249 [-]: MOVE      R0 R48       ; R0 := R48
250 [-]: MOVE      R0 R98       ; R0 := R98
251 [-]: CLOSURE   R119 14      ; R119 := closure(Function #15)
252 [-]: MOVE      R0 R1        ; R0 := R1
253 [-]: CLOSURE   R135 15      ; R135 := closure(Function #16)
254 [-]: MOVE      R0 R40       ; R0 := R40
255 [-]: MOVE      R0 R101      ; R0 := R101
256 [-]: CLOSURE   R136 16      ; R136 := closure(Function #17)
257 [-]: MOVE      R0 R117      ; R0 := R117
258 [-]: CLOSURE   R137 17      ; R137 := closure(Function #18)
259 [-]: MOVE      R0 R117      ; R0 := R117
260 [-]: CLOSURE   R138 18      ; R138 := closure(Function #19)
261 [-]: MOVE      R0 R117      ; R0 := R117
262 [-]: CLOSURE   R139 19      ; R139 := closure(Function #20)
263 [-]: MOVE      R0 R136      ; R0 := R136
264 [-]: CLOSURE   R140 20      ; R140 := closure(Function #21)
265 [-]: MOVE      R0 R117      ; R0 := R117
266 [-]: CLOSURE   R141 21      ; R141 := closure(Function #22)
267 [-]: MOVE      R0 R73       ; R0 := R73
268 [-]: MOVE      R0 R103      ; R0 := R103
269 [-]: MOVE      R0 R139      ; R0 := R139
270 [-]: MOVE      R0 R101      ; R0 := R101
271 [-]: MOVE      R0 R135      ; R0 := R135
272 [-]: MOVE      R0 R138      ; R0 := R138
273 [-]: MOVE      R0 R0        ; R0 := R0
274 [-]: MOVE      R142 R0      ; R142 := R0
275 [-]: CLOSURE   R143 22      ; R143 := closure(Function #23)
276 [-]: MOVE      R0 R73       ; R0 := R73
277 [-]: MOVE      R0 R1        ; R0 := R1
278 [-]: MOVE      R0 R117      ; R0 := R117
279 [-]: MOVE      R0 R110      ; R0 := R110
280 [-]: MOVE      R0 R28       ; R0 := R28
281 [-]: MOVE      R0 R126      ; R0 := R126
282 [-]: MOVE      R0 R127      ; R0 := R127
283 [-]: MOVE      R0 R94       ; R0 := R94
284 [-]: MOVE      R0 R97       ; R0 := R97
285 [-]: MOVE      R0 R92       ; R0 := R92
286 [-]: MOVE      R0 R140      ; R0 := R140
287 [-]: MOVE      R0 R80       ; R0 := R80
288 [-]: MOVE      R0 R103      ; R0 := R103
289 [-]: MOVE      R0 R129      ; R0 := R129
290 [-]: MOVE      R0 R0        ; R0 := R0
291 [-]: MOVE      R0 R72       ; R0 := R72
292 [-]: MOVE      R0 R60       ; R0 := R60
293 [-]: MOVE      R0 R142      ; R0 := R142
294 [-]: CLOSURE   R144 23      ; R144 := closure(Function #24)
295 [-]: MOVE      R0 R110      ; R0 := R110
296 [-]: MOVE      R0 R94       ; R0 := R94
297 [-]: CLOSURE   R145 24      ; R145 := closure(Function #25)
298 [-]: MOVE      R0 R94       ; R0 := R94
299 [-]: MOVE      R0 R0        ; R0 := R0
300 [-]: MOVE      R0 R144      ; R0 := R144
301 [-]: MOVE      R0 R134      ; R0 := R134
302 [-]: MOVE      R0 R143      ; R0 := R143
303 [-]: CLOSURE   R146 25      ; R146 := closure(Function #26)
304 [-]: MOVE      R0 R94       ; R0 := R94
305 [-]: SETGLOBAL R146 K89     ; LoadOutFocused := R146
306 [-]: SETGLOBAL R146 K90     ; 0xCA4F1F29 := R146
307 [-]: CLOSURE   R146 26      ; R146 := closure(Function #27)
308 [-]: MOVE      R0 R94       ; R0 := R94
309 [-]: SETGLOBAL R146 K91     ; LoadOutUnfocused := R146
310 [-]: SETGLOBAL R146 K92     ; 0x33EDAC59 := R146
311 [-]: CLOSURE   R146 27      ; R146 := closure(Function #28)
312 [-]: MOVE      R0 R84       ; R0 := R84
313 [-]: MOVE      R0 R94       ; R0 := R94
314 [-]: SETGLOBAL R146 K93     ; LoadOutPressed := R146
315 [-]: SETGLOBAL R146 K94     ; 0x411D72C1 := R146
316 [-]: CLOSURE   R146 28      ; R146 := closure(Function #29)
317 [-]: CLOSURE   R147 29      ; R147 := closure(Function #30)
318 [-]: MOVE      R0 R64       ; R0 := R64
319 [-]: CLOSURE   R148 30      ; R148 := closure(Function #31)
320 [-]: MOVE      R0 R1        ; R0 := R1
321 [-]: MOVE      R0 R0        ; R0 := R0
322 [-]: MOVE      R0 R97       ; R0 := R97
323 [-]: MOVE      R0 R100      ; R0 := R100
324 [-]: CLOSURE   R149 31      ; R149 := closure(Function #32)
325 [-]: MOVE      R0 R146      ; R0 := R146
326 [-]: MOVE      R0 R73       ; R0 := R73
327 [-]: MOVE      R0 R129      ; R0 := R129
328 [-]: MOVE      R0 R0        ; R0 := R0
329 [-]: CLOSURE   R150 32      ; R150 := closure(Function #33)
330 [-]: SETGLOBAL R150 K95     ; OnOnslaughtBackgroundReady := R150
331 [-]: SETGLOBAL R150 K96     ; 0x82F11B9B := R150
332 [-]: CLOSURE   R150 33      ; R150 := closure(Function #34)
333 [-]: MOVE      R0 R0        ; R0 := R0
334 [-]: SETGLOBAL R150 K97     ; OnOnslaughtTransmissionReady := R150
335 [-]: SETGLOBAL R150 K98     ; 0x53E0C197 := R150
336 [-]: CLOSURE   R150 34      ; R150 := closure(Function #35)
337 [-]: MOVE      R0 R0        ; R0 := R0
338 [-]: SETGLOBAL R150 K99     ; OnOnslaughtMusicReady := R150
339 [-]: SETGLOBAL R150 K100    ; 0xD5DB3CD0 := R150
340 [-]: CLOSURE   R150 35      ; R150 := closure(Function #36)
341 [-]: CLOSURE   R151 36      ; R151 := closure(Function #37)
342 [-]: MOVE      R0 R99       ; R0 := R99
343 [-]: MOVE      R0 R1        ; R0 := R1
344 [-]: MOVE      R0 R73       ; R0 := R73
345 [-]: MOVE      R0 R146      ; R0 := R146
346 [-]: MOVE      R0 R150      ; R0 := R150
347 [-]: MOVE      R0 R0        ; R0 := R0
348 [-]: CLOSURE   R152 37      ; R152 := closure(Function #38)
349 [-]: MOVE      R0 R140      ; R0 := R140
350 [-]: MOVE      R0 R151      ; R0 := R151
351 [-]: MOVE      R0 R99       ; R0 := R99
352 [-]: MOVE      R0 R146      ; R0 := R146
353 [-]: MOVE      R0 R73       ; R0 := R73
354 [-]: MOVE      R0 R0        ; R0 := R0
355 [-]: MOVE      R0 R148      ; R0 := R148
356 [-]: CLOSURE   R153 38      ; R153 := closure(Function #39)
357 [-]: MOVE      R0 R149      ; R0 := R149
358 [-]: MOVE      R0 R152      ; R0 := R152
359 [-]: CLOSURE   R154 39      ; R154 := closure(Function #40)
360 [-]: MOVE      R0 R125      ; R0 := R125
361 [-]: CLOSURE   R155 40      ; R155 := closure(Function #41)
362 [-]: MOVE      R0 R70       ; R0 := R70
363 [-]: CLOSURE   R156 41      ; R156 := closure(Function #42)
364 [-]: MOVE      R0 R84       ; R0 := R84
365 [-]: MOVE      R0 R11       ; R0 := R11
366 [-]: MOVE      R0 R9        ; R0 := R9
367 [-]: MOVE      R0 R12       ; R0 := R12
368 [-]: CLOSURE   R157 42      ; R157 := closure(Function #43)
369 [-]: MOVE      R0 R13       ; R0 := R13
370 [-]: MOVE      R0 R11       ; R0 := R11
371 [-]: CLOSURE   R158 43      ; R158 := closure(Function #44)
372 [-]: MOVE      R0 R157      ; R0 := R157
373 [-]: MOVE      R0 R9        ; R0 := R9
374 [-]: MOVE      R0 R10       ; R0 := R10
375 [-]: MOVE      R0 R84       ; R0 := R84
376 [-]: MOVE      R0 R13       ; R0 := R13
377 [-]: CLOSURE   R117 44      ; R117 := closure(Function #45)
378 [-]: MOVE      R0 R72       ; R0 := R72
379 [-]: MOVE      R0 R1        ; R0 := R1
380 [-]: CLOSURE   R159 45      ; R159 := closure(Function #46)
381 [-]: MOVE      R0 R117      ; R0 := R117
382 [-]: CLOSURE   R160 46      ; R160 := closure(Function #47)
383 [-]: MOVE      R0 R117      ; R0 := R117
384 [-]: CLOSURE   R161 47      ; R161 := closure(Function #48)
385 [-]: MOVE      R0 R117      ; R0 := R117
386 [-]: CLOSURE   R162 48      ; R162 := closure(Function #49)
387 [-]: MOVE      R0 R117      ; R0 := R117
388 [-]: CLOSURE   R163 49      ; R163 := closure(Function #50)
389 [-]: MOVE      R0 R117      ; R0 := R117
390 [-]: CLOSURE   R164 50      ; R164 := closure(Function #51)
391 [-]: MOVE      R0 R117      ; R0 := R117
392 [-]: CLOSURE   R165 51      ; R165 := closure(Function #52)
393 [-]: MOVE      R0 R117      ; R0 := R117
394 [-]: CLOSURE   R166 52      ; R166 := closure(Function #53)
395 [-]: MOVE      R0 R117      ; R0 := R117
396 [-]: CLOSURE   R167 53      ; R167 := closure(Function #54)
397 [-]: MOVE      R0 R117      ; R0 := R117
398 [-]: CLOSURE   R168 54      ; R168 := closure(Function #55)
399 [-]: MOVE      R0 R110      ; R0 := R110
400 [-]: MOVE      R0 R112      ; R0 := R112
401 [-]: MOVE      R0 R6        ; R0 := R6
402 [-]: MOVE      R0 R0        ; R0 := R0
403 [-]: MOVE      R0 R140      ; R0 := R140
404 [-]: CLOSURE   R169 55      ; R169 := closure(Function #56)
405 [-]: MOVE      R0 R71       ; R0 := R71
406 [-]: CLOSURE   R170 56      ; R170 := closure(Function #57)
407 [-]: CLOSURE   R171 57      ; R171 := closure(Function #58)
408 [-]: CLOSURE   R172 58      ; R172 := closure(Function #59)
409 [-]: CLOSURE   R173 59      ; R173 := closure(Function #60)
410 [-]: MOVE      R0 R117      ; R0 := R117
411 [-]: MOVE      R0 R73       ; R0 := R73
412 [-]: MOVE      R0 R167      ; R0 := R167
413 [-]: MOVE      R0 R140      ; R0 := R140
414 [-]: CLOSURE   R174 60      ; R174 := closure(Function #61)
415 [-]: MOVE      R0 R117      ; R0 := R117
416 [-]: MOVE      R0 R167      ; R0 := R167
417 [-]: MOVE      R0 R162      ; R0 := R162
418 [-]: MOVE      R0 R161      ; R0 := R161
419 [-]: MOVE      R0 R73       ; R0 := R73
420 [-]: MOVE      R0 R159      ; R0 := R159
421 [-]: MOVE      R0 R160      ; R0 := R160
422 [-]: MOVE      R0 R166      ; R0 := R166
423 [-]: MOVE      R0 R140      ; R0 := R140
424 [-]: MOVE      R0 R1        ; R0 := R1
425 [-]: CLOSURE   R175 61      ; R175 := closure(Function #62)
426 [-]: MOVE      R0 R73       ; R0 := R73
427 [-]: MOVE      R0 R1        ; R0 := R1
428 [-]: MOVE      R0 R117      ; R0 := R117
429 [-]: MOVE      R0 R125      ; R0 := R125
430 [-]: MOVE      R0 R131      ; R0 := R131
431 [-]: MOVE      R0 R27       ; R0 := R27
432 [-]: MOVE      R0 R77       ; R0 := R77
433 [-]: MOVE      R0 R78       ; R0 := R78
434 [-]: MOVE      R0 R80       ; R0 := R80
435 [-]: MOVE      R0 R171      ; R0 := R171
436 [-]: MOVE      R0 R170      ; R0 := R170
437 [-]: MOVE      R0 R0        ; R0 := R0
438 [-]: MOVE      R0 R174      ; R0 := R174
439 [-]: MOVE      R0 R74       ; R0 := R74
440 [-]: MOVE      R0 R173      ; R0 := R173
441 [-]: MOVE      R0 R172      ; R0 := R172
442 [-]: MOVE      R0 R75       ; R0 := R75
443 [-]: MOVE      R0 R76       ; R0 := R76
444 [-]: MOVE      R0 R104      ; R0 := R104
445 [-]: MOVE      R0 R106      ; R0 := R106
446 [-]: MOVE      R0 R105      ; R0 := R105
447 [-]: MOVE      R0 R146      ; R0 := R146
448 [-]: MOVE      R0 R85       ; R0 := R85
449 [-]: MOVE      R0 R133      ; R0 := R133
450 [-]: MOVE      R0 R93       ; R0 := R93
451 [-]: MOVE      R0 R86       ; R0 := R86
452 [-]: MOVE      R0 R79       ; R0 := R79
453 [-]: CLOSURE   R176 62      ; R176 := closure(Function #63)
454 [-]: MOVE      R0 R175      ; R0 := R175
455 [-]: SETGLOBAL R176 K101    ; OnStatsReady := R176
456 [-]: SETGLOBAL R176 K102    ; 0x5C7E4B53 := R176
457 [-]: CLOSURE   R176 63      ; R176 := closure(Function #64)
458 [-]: MOVE      R0 R73       ; R0 := R73
459 [-]: MOVE      R0 R1        ; R0 := R1
460 [-]: MOVE      R0 R110      ; R0 := R110
461 [-]: MOVE      R0 R40       ; R0 := R40
462 [-]: MOVE      R0 R129      ; R0 := R129
463 [-]: MOVE      R0 R103      ; R0 := R103
464 [-]: MOVE      R0 R153      ; R0 := R153
465 [-]: MOVE      R0 R140      ; R0 := R140
466 [-]: MOVE      R0 R151      ; R0 := R151
467 [-]: MOVE      R0 R92       ; R0 := R92
468 [-]: CLOSURE   R177 64      ; R177 := closure(Function #65)
469 [-]: MOVE      R0 R117      ; R0 := R117
470 [-]: MOVE      R0 R110      ; R0 := R110
471 [-]: MOVE      R0 R3        ; R0 := R3
472 [-]: MOVE      R0 R140      ; R0 := R140
473 [-]: MOVE      R0 R137      ; R0 := R137
474 [-]: MOVE      R0 R73       ; R0 := R73
475 [-]: CLOSURE   R178 65      ; R178 := closure(Function #66)
476 [-]: MOVE      R0 R73       ; R0 := R73
477 [-]: MOVE      R0 R110      ; R0 := R110
478 [-]: MOVE      R0 R117      ; R0 := R117
479 [-]: MOVE      R0 R0        ; R0 := R0
480 [-]: MOVE      R0 R125      ; R0 := R125
481 [-]: MOVE      R0 R126      ; R0 := R126
482 [-]: MOVE      R0 R118      ; R0 := R118
483 [-]: MOVE      R0 R161      ; R0 := R161
484 [-]: MOVE      R0 R40       ; R0 := R40
485 [-]: MOVE      R0 R103      ; R0 := R103
486 [-]: MOVE      R0 R164      ; R0 := R164
487 [-]: MOVE      R0 R57       ; R0 := R57
488 [-]: MOVE      R0 R163      ; R0 := R163
489 [-]: MOVE      R0 R159      ; R0 := R159
490 [-]: MOVE      R0 R162      ; R0 := R162
491 [-]: MOVE      R0 R166      ; R0 := R166
492 [-]: MOVE      R0 R140      ; R0 := R140
493 [-]: MOVE      R0 R167      ; R0 := R167
494 [-]: MOVE      R0 R137      ; R0 := R137
495 [-]: MOVE      R0 R1        ; R0 := R1
496 [-]: MOVE      R0 R119      ; R0 := R119
497 [-]: MOVE      R0 R102      ; R0 := R102
498 [-]: MOVE      R0 R129      ; R0 := R129
499 [-]: MOVE      R0 R176      ; R0 := R176
500 [-]: MOVE      R0 R124      ; R0 := R124
501 [-]: MOVE      R0 R36       ; R0 := R36
502 [-]: MOVE      R0 R8        ; R0 := R8
503 [-]: MOVE      R0 R115      ; R0 := R115
504 [-]: MOVE      R0 R69       ; R0 := R69
505 [-]: CLOSURE   R179 66      ; R179 := closure(Function #67)
506 [-]: MOVE      R0 R1        ; R0 := R1
507 [-]: MOVE      R0 R43       ; R0 := R43
508 [-]: MOVE      R0 R44       ; R0 := R44
509 [-]: MOVE      R0 R0        ; R0 := R0
510 [-]: CLOSURE   R180 67      ; R180 := closure(Function #68)
511 [-]: MOVE      R0 R43       ; R0 := R43
512 [-]: MOVE      R0 R179      ; R0 := R179
513 [-]: CLOSURE   R181 68      ; R181 := closure(Function #69)
514 [-]: MOVE      R0 R0        ; R0 := R0
515 [-]: CLOSURE   R182 69      ; R182 := closure(Function #70)
516 [-]: MOVE      R0 R64       ; R0 := R64
517 [-]: MOVE      R0 R1        ; R0 := R1
518 [-]: MOVE      R0 R40       ; R0 := R40
519 [-]: MOVE      R0 R181      ; R0 := R181
520 [-]: MOVE      R0 R179      ; R0 := R179
521 [-]: MOVE      R0 R98       ; R0 := R98
522 [-]: MOVE      R0 R97       ; R0 := R97
523 [-]: MOVE      R0 R180      ; R0 := R180
524 [-]: MOVE      R0 R55       ; R0 := R55
525 [-]: MOVE      R0 R53       ; R0 := R53
526 [-]: MOVE      R0 R54       ; R0 := R54
527 [-]: MOVE      R0 R0        ; R0 := R0
528 [-]: CLOSURE   R183 70      ; R183 := closure(Function #71)
529 [-]: MOVE      R0 R14       ; R0 := R14
530 [-]: MOVE      R0 R15       ; R0 := R15
531 [-]: MOVE      R0 R0        ; R0 := R0
532 [-]: MOVE      R0 R154      ; R0 := R154
533 [-]: MOVE      R0 R1        ; R0 := R1
534 [-]: MOVE      R0 R32       ; R0 := R32
535 [-]: MOVE      R0 R110      ; R0 := R110
536 [-]: MOVE      R0 R182      ; R0 := R182
537 [-]: MOVE      R0 R179      ; R0 := R179
538 [-]: MOVE      R0 R98       ; R0 := R98
539 [-]: MOVE      R0 R97       ; R0 := R97
540 [-]: MOVE      R0 R180      ; R0 := R180
541 [-]: MOVE      R0 R55       ; R0 := R55
542 [-]: MOVE      R0 R53       ; R0 := R53
543 [-]: MOVE      R0 R54       ; R0 := R54
544 [-]: CLOSURE   R184 71      ; R184 := closure(Function #72)
545 [-]: MOVE      R0 R0        ; R0 := R0
546 [-]: MOVE      R0 R73       ; R0 := R73
547 [-]: MOVE      R0 R40       ; R0 := R40
548 [-]: MOVE      R0 R110      ; R0 := R110
549 [-]: MOVE      R0 R102      ; R0 := R102
550 [-]: MOVE      R0 R179      ; R0 := R179
551 [-]: MOVE      R0 R1        ; R0 := R1
552 [-]: MOVE      R0 R180      ; R0 := R180
553 [-]: MOVE      R0 R55       ; R0 := R55
554 [-]: MOVE      R0 R53       ; R0 := R53
555 [-]: MOVE      R0 R54       ; R0 := R54
556 [-]: CLOSURE   R185 72      ; R185 := closure(Function #73)
557 [-]: MOVE      R0 R64       ; R0 := R64
558 [-]: MOVE      R0 R137      ; R0 := R137
559 [-]: MOVE      R0 R1        ; R0 := R1
560 [-]: MOVE      R0 R119      ; R0 := R119
561 [-]: MOVE      R0 R102      ; R0 := R102
562 [-]: MOVE      R0 R40       ; R0 := R40
563 [-]: MOVE      R0 R95       ; R0 := R95
564 [-]: CLOSURE   R186 73      ; R186 := closure(Function #74)
565 [-]: MOVE      R0 R1        ; R0 := R1
566 [-]: MOVE      R0 R119      ; R0 := R119
567 [-]: MOVE      R0 R146      ; R0 := R146
568 [-]: MOVE      R0 R95       ; R0 := R95
569 [-]: MOVE      R0 R87       ; R0 := R87
570 [-]: MOVE      R0 R40       ; R0 := R40
571 [-]: MOVE      R0 R125      ; R0 := R125
572 [-]: MOVE      R0 R0        ; R0 := R0
573 [-]: MOVE      R0 R103      ; R0 := R103
574 [-]: MOVE      R0 R21       ; R0 := R21
575 [-]: MOVE      R0 R22       ; R0 := R22
576 [-]: MOVE      R0 R73       ; R0 := R73
577 [-]: MOVE      R0 R4        ; R0 := R4
578 [-]: MOVE      R0 R14       ; R0 := R14
579 [-]: MOVE      R0 R139      ; R0 := R139
580 [-]: MOVE      R0 R135      ; R0 := R135
581 [-]: MOVE      R0 R117      ; R0 := R117
582 [-]: MOVE      R0 R102      ; R0 := R102
583 [-]: MOVE      R0 R184      ; R0 := R184
584 [-]: MOVE      R0 R183      ; R0 := R183
585 [-]: MOVE      R0 R138      ; R0 := R138
586 [-]: MOVE      R0 R15       ; R0 := R15
587 [-]: CLOSURE   R115 74      ; R115 := closure(Function #75)
588 [-]: MOVE      R0 R40       ; R0 := R40
589 [-]: CLOSURE   R187 75      ; R187 := closure(Function #76)
590 [-]: MOVE      R0 R1        ; R0 := R1
591 [-]: MOVE      R0 R125      ; R0 := R125
592 [-]: MOVE      R0 R103      ; R0 := R103
593 [-]: MOVE      R0 R107      ; R0 := R107
594 [-]: MOVE      R0 R104      ; R0 := R104
595 [-]: MOVE      R0 R106      ; R0 := R106
596 [-]: MOVE      R0 R177      ; R0 := R177
597 [-]: MOVE      R0 R105      ; R0 := R105
598 [-]: MOVE      R0 R110      ; R0 := R110
599 [-]: MOVE      R0 R23       ; R0 := R23
600 [-]: MOVE      R0 R40       ; R0 := R40
601 [-]: MOVE      R0 R174      ; R0 := R174
602 [-]: MOVE      R0 R74       ; R0 := R74
603 [-]: MOVE      R0 R173      ; R0 := R173
604 [-]: MOVE      R0 R115      ; R0 := R115
605 [-]: MOVE      R0 R76       ; R0 := R76
606 [-]: MOVE      R0 R75       ; R0 := R75
607 [-]: CLOSURE   R188 76      ; R188 := closure(Function #77)
608 [-]: MOVE      R0 R95       ; R0 := R95
609 [-]: CLOSURE   R189 77      ; R189 := closure(Function #78)
610 [-]: MOVE      R0 R188      ; R0 := R188
611 [-]: MOVE      R0 R147      ; R0 := R147
612 [-]: MOVE      R0 R96       ; R0 := R96
613 [-]: MOVE      R0 R66       ; R0 := R66
614 [-]: MOVE      R0 R0        ; R0 := R0
615 [-]: MOVE      R0 R95       ; R0 := R95
616 [-]: MOVE      R0 R4        ; R0 := R4
617 [-]: MOVE      R0 R1        ; R0 := R1
618 [-]: MOVE      R0 R29       ; R0 := R29
619 [-]: MOVE      R0 R30       ; R0 := R30
620 [-]: CLOSURE   R190 78      ; R190 := closure(Function #79)
621 [-]: MOVE      R0 R105      ; R0 := R105
622 [-]: CLOSURE   R191 79      ; R191 := closure(Function #80)
623 [-]: MOVE      R0 R66       ; R0 := R66
624 [-]: MOVE      R0 R69       ; R0 := R69
625 [-]: MOVE      R0 R124      ; R0 := R124
626 [-]: MOVE      R0 R4        ; R0 := R4
627 [-]: MOVE      R0 R120      ; R0 := R120
628 [-]: MOVE      R0 R74       ; R0 := R74
629 [-]: MOVE      R0 R110      ; R0 := R110
630 [-]: MOVE      R0 R1        ; R0 := R1
631 [-]: MOVE      R0 R73       ; R0 := R73
632 [-]: MOVE      R0 R40       ; R0 := R40
633 [-]: MOVE      R0 R106      ; R0 := R106
634 [-]: MOVE      R0 R19       ; R0 := R19
635 [-]: MOVE      R0 R16       ; R0 := R16
636 [-]: MOVE      R0 R17       ; R0 := R17
637 [-]: MOVE      R0 R61       ; R0 := R61
638 [-]: MOVE      R0 R107      ; R0 := R107
639 [-]: MOVE      R0 R190      ; R0 := R190
640 [-]: MOVE      R0 R75       ; R0 := R75
641 [-]: MOVE      R0 R105      ; R0 := R105
642 [-]: MOVE      R0 R161      ; R0 := R161
643 [-]: MOVE      R0 R24       ; R0 := R24
644 [-]: MOVE      R0 R117      ; R0 := R117
645 [-]: MOVE      R0 R25       ; R0 := R25
646 [-]: MOVE      R0 R104      ; R0 := R104
647 [-]: MOVE      R0 R146      ; R0 := R146
648 [-]: MOVE      R0 R89       ; R0 := R89
649 [-]: CLOSURE   R192 80      ; R192 := closure(Function #81)
650 [-]: MOVE      R0 R188      ; R0 := R188
651 [-]: MOVE      R0 R147      ; R0 := R147
652 [-]: MOVE      R0 R96       ; R0 := R96
653 [-]: MOVE      R0 R67       ; R0 := R67
654 [-]: MOVE      R0 R0        ; R0 := R0
655 [-]: MOVE      R0 R95       ; R0 := R95
656 [-]: MOVE      R0 R2        ; R0 := R2
657 [-]: MOVE      R0 R29       ; R0 := R29
658 [-]: MOVE      R0 R30       ; R0 := R30
659 [-]: MOVE      R0 R32       ; R0 := R32
660 [-]: CLOSURE   R193 81      ; R193 := closure(Function #82)
661 [-]: MOVE      R0 R67       ; R0 := R67
662 [-]: MOVE      R0 R70       ; R0 := R70
663 [-]: MOVE      R0 R40       ; R0 := R40
664 [-]: MOVE      R0 R106      ; R0 := R106
665 [-]: MOVE      R0 R120      ; R0 := R120
666 [-]: MOVE      R0 R19       ; R0 := R19
667 [-]: MOVE      R0 R155      ; R0 := R155
668 [-]: MOVE      R0 R110      ; R0 := R110
669 [-]: MOVE      R0 R104      ; R0 := R104
670 [-]: MOVE      R0 R1        ; R0 := R1
671 [-]: MOVE      R0 R2        ; R0 := R2
672 [-]: MOVE      R0 R16       ; R0 := R16
673 [-]: MOVE      R0 R146      ; R0 := R146
674 [-]: CLOSURE   R194 82      ; R194 := closure(Function #83)
675 [-]: MOVE      R0 R188      ; R0 := R188
676 [-]: MOVE      R0 R147      ; R0 := R147
677 [-]: MOVE      R0 R96       ; R0 := R96
678 [-]: MOVE      R0 R85       ; R0 := R85
679 [-]: MOVE      R0 R132      ; R0 := R132
680 [-]: MOVE      R0 R93       ; R0 := R93
681 [-]: MOVE      R0 R71       ; R0 := R71
682 [-]: MOVE      R0 R0        ; R0 := R0
683 [-]: MOVE      R0 R77       ; R0 := R77
684 [-]: MOVE      R0 R78       ; R0 := R78
685 [-]: MOVE      R0 R121      ; R0 := R121
686 [-]: MOVE      R0 R1        ; R0 := R1
687 [-]: MOVE      R0 R146      ; R0 := R146
688 [-]: CLOSURE   R195 83      ; R195 := closure(Function #84)
689 [-]: MOVE      R0 R81       ; R0 := R81
690 [-]: MOVE      R0 R77       ; R0 := R77
691 [-]: MOVE      R0 R86       ; R0 := R86
692 [-]: MOVE      R0 R85       ; R0 := R85
693 [-]: MOVE      R0 R133      ; R0 := R133
694 [-]: MOVE      R0 R82       ; R0 := R82
695 [-]: MOVE      R0 R83       ; R0 := R83
696 [-]: MOVE      R0 R78       ; R0 := R78
697 [-]: MOVE      R0 R169      ; R0 := R169
698 [-]: MOVE      R0 R71       ; R0 := R71
699 [-]: CLOSURE   R196 84      ; R196 := closure(Function #85)
700 [-]: MOVE      R0 R88       ; R0 := R88
701 [-]: MOVE      R0 R100      ; R0 := R100
702 [-]: CLOSURE   R197 85      ; R197 := closure(Function #86)
703 [-]: MOVE      R0 R165      ; R0 := R165
704 [-]: MOVE      R0 R103      ; R0 := R103
705 [-]: MOVE      R0 R127      ; R0 := R127
706 [-]: MOVE      R0 R128      ; R0 := R128
707 [-]: MOVE      R0 R117      ; R0 := R117
708 [-]: MOVE      R0 R140      ; R0 := R140
709 [-]: MOVE      R0 R1        ; R0 := R1
710 [-]: MOVE      R0 R0        ; R0 := R0
711 [-]: CLOSURE   R198 86      ; R198 := closure(Function #87)
712 [-]: SETGLOBAL R198 K103    ; SetupInitializeParams := R198
713 [-]: SETGLOBAL R198 K104    ; 0x82BE51F1 := R198
714 [-]: CLOSURE   R198 87      ; R198 := closure(Function #88)
715 [-]: MOVE      R0 R122      ; R0 := R122
716 [-]: MOVE      R0 R34       ; R0 := R34
717 [-]: MOVE      R0 R36       ; R0 := R36
718 [-]: MOVE      R0 R84       ; R0 := R84
719 [-]: MOVE      R0 R48       ; R0 := R48
720 [-]: MOVE      R0 R45       ; R0 := R45
721 [-]: MOVE      R0 R110      ; R0 := R110
722 [-]: MOVE      R0 R113      ; R0 := R113
723 [-]: MOVE      R0 R9        ; R0 := R9
724 [-]: MOVE      R0 R35       ; R0 := R35
725 [-]: MOVE      R0 R90       ; R0 := R90
726 [-]: SETGLOBAL R198 K105    ; ReturnedToShip := R198
727 [-]: SETGLOBAL R198 K106    ; 0x52445BFB := R198
728 [-]: CLOSURE   R198 88      ; R198 := closure(Function #89)
729 [-]: MOVE      R0 R31       ; R0 := R31
730 [-]: MOVE      R0 R0        ; R0 := R0
731 [-]: CLOSURE   R199 89      ; R199 := closure(Function #90)
732 [-]: MOVE      R0 R198      ; R0 := R198
733 [-]: SETGLOBAL R199 K107    ; onViewportSizeChanged := R199
734 [-]: SETGLOBAL R199 K108    ; 0x3A900427 := R199
735 [-]: CLOSURE   R199 90      ; R199 := closure(Function #91)
736 [-]: MOVE      R0 R31       ; R0 := R31
737 [-]: MOVE      R0 R198      ; R0 := R198
738 [-]: MOVE      R0 R32       ; R0 := R32
739 [-]: CLOSURE   R200 91      ; R200 := closure(Function #92)
740 [-]: MOVE      R0 R48       ; R0 := R48
741 [-]: MOVE      R0 R1        ; R0 := R1
742 [-]: MOVE      R0 R33       ; R0 := R33
743 [-]: MOVE      R0 R122      ; R0 := R122
744 [-]: MOVE      R0 R28       ; R0 := R28
745 [-]: MOVE      R0 R199      ; R0 := R199
746 [-]: MOVE      R0 R50       ; R0 := R50
747 [-]: MOVE      R0 R117      ; R0 := R117
748 [-]: MOVE      R0 R101      ; R0 := R101
749 [-]: MOVE      R0 R103      ; R0 := R103
750 [-]: MOVE      R0 R73       ; R0 := R73
751 [-]: MOVE      R0 R109      ; R0 := R109
752 [-]: MOVE      R0 R110      ; R0 := R110
753 [-]: MOVE      R0 R8        ; R0 := R8
754 [-]: MOVE      R0 R130      ; R0 := R130
755 [-]: MOVE      R0 R51       ; R0 := R51
756 [-]: MOVE      R0 R0        ; R0 := R0
757 [-]: MOVE      R0 R140      ; R0 := R140
758 [-]: MOVE      R0 R137      ; R0 := R137
759 [-]: MOVE      R0 R39       ; R0 := R39
760 [-]: MOVE      R0 R196      ; R0 := R196
761 [-]: MOVE      R0 R126      ; R0 := R126
762 [-]: MOVE      R0 R88       ; R0 := R88
763 [-]: MOVE      R0 R84       ; R0 := R84
764 [-]: MOVE      R0 R9        ; R0 := R9
765 [-]: MOVE      R0 R77       ; R0 := R77
766 [-]: MOVE      R0 R78       ; R0 := R78
767 [-]: MOVE      R0 R195      ; R0 := R195
768 [-]: MOVE      R0 R90       ; R0 := R90
769 [-]: MOVE      R0 R40       ; R0 := R40
770 [-]: MOVE      R0 R112      ; R0 := R112
771 [-]: MOVE      R0 R57       ; R0 := R57
772 [-]: MOVE      R0 R32       ; R0 := R32
773 [-]: MOVE      R0 R168      ; R0 := R168
774 [-]: MOVE      R0 R197      ; R0 := R197
775 [-]: MOVE      R0 R125      ; R0 := R125
776 [-]: MOVE      R0 R127      ; R0 := R127
777 [-]: MOVE      R0 R178      ; R0 := R178
778 [-]: MOVE      R0 R176      ; R0 := R176
779 [-]: MOVE      R0 R95       ; R0 := R95
780 [-]: MOVE      R0 R141      ; R0 := R141
781 [-]: MOVE      R0 R185      ; R0 := R185
782 [-]: MOVE      R0 R186      ; R0 := R186
783 [-]: MOVE      R0 R187      ; R0 := R187
784 [-]: MOVE      R0 R189      ; R0 := R189
785 [-]: MOVE      R0 R191      ; R0 := R191
786 [-]: MOVE      R0 R192      ; R0 := R192
787 [-]: MOVE      R0 R193      ; R0 := R193
788 [-]: MOVE      R0 R194      ; R0 := R194
789 [-]: MOVE      R0 R175      ; R0 := R175
790 [-]: MOVE      R0 R98       ; R0 := R98
791 [-]: MOVE      R0 R97       ; R0 := R97
792 [-]: MOVE      R0 R80       ; R0 := R80
793 [-]: MOVE      R0 R134      ; R0 := R134
794 [-]: MOVE      R0 R116      ; R0 := R116
795 [-]: MOVE      R0 R156      ; R0 := R156
796 [-]: MOVE      R0 R145      ; R0 := R145
797 [-]: MOVE      R0 R47       ; R0 := R47
798 [-]: MOVE      R0 R113      ; R0 := R113
799 [-]: MOVE      R0 R114      ; R0 := R114
800 [-]: SETGLOBAL R200 K109    ; Initialize := R200
801 [-]: SETGLOBAL R200 K110    ; 0x62648036 := R200
802 [-]: CLOSURE   R200 92      ; R200 := closure(Function #93)
803 [-]: MOVE      R0 R38       ; R0 := R38
804 [-]: MOVE      R0 R34       ; R0 := R34
805 [-]: MOVE      R0 R110      ; R0 := R110
806 [-]: MOVE      R0 R8        ; R0 := R8
807 [-]: CLOSURE   R201 93      ; R201 := closure(Function #94)
808 [-]: MOVE      R0 R51       ; R0 := R51
809 [-]: MOVE      R0 R38       ; R0 := R38
810 [-]: SETGLOBAL R201 K111    ; AutoClose := R201
811 [-]: SETGLOBAL R201 K112    ; 0xD24AD26F := R201
812 [-]: CLOSURE   R201 94      ; R201 := closure(Function #95)
813 [-]: MOVE      R0 R50       ; R0 := R50
814 [-]: MOVE      R0 R126      ; R0 := R126
815 [-]: MOVE      R0 R127      ; R0 := R127
816 [-]: MOVE      R0 R109      ; R0 := R109
817 [-]: CLOSURE   R116 95      ; R116 := closure(Function #96)
818 [-]: MOVE      R0 R48       ; R0 := R48
819 [-]: MOVE      R0 R50       ; R0 := R50
820 [-]: MOVE      R0 R1        ; R0 := R1
821 [-]: MOVE      R0 R32       ; R0 := R32
822 [-]: MOVE      R0 R201      ; R0 := R201
823 [-]: MOVE      R0 R84       ; R0 := R84
824 [-]: CLOSURE   R202 96      ; R202 := closure(Function #97)
825 [-]: MOVE      R0 R1        ; R0 := R1
826 [-]: MOVE      R0 R110      ; R0 := R110
827 [-]: MOVE      R0 R94       ; R0 := R94
828 [-]: MOVE      R0 R98       ; R0 := R98
829 [-]: MOVE      R0 R97       ; R0 := R97
830 [-]: CLOSURE   R203 97      ; R203 := closure(Function #98)
831 [-]: CLOSURE   R204 98      ; R204 := closure(Function #99)
832 [-]: MOVE      R0 R33       ; R0 := R33
833 [-]: MOVE      R0 R142      ; R0 := R142
834 [-]: MOVE      R0 R26       ; R0 := R26
835 [-]: MOVE      R0 R123      ; R0 := R123
836 [-]: MOVE      R0 R1        ; R0 := R1
837 [-]: MOVE      R0 R136      ; R0 := R136
838 [-]: MOVE      R0 R137      ; R0 := R137
839 [-]: MOVE      R0 R110      ; R0 := R110
840 [-]: MOVE      R0 R49       ; R0 := R49
841 [-]: MOVE      R0 R84       ; R0 := R84
842 [-]: MOVE      R0 R47       ; R0 := R47
843 [-]: MOVE      R0 R62       ; R0 := R62
844 [-]: MOVE      R0 R103      ; R0 := R103
845 [-]: MOVE      R0 R45       ; R0 := R45
846 [-]: MOVE      R0 R8        ; R0 := R8
847 [-]: MOVE      R0 R35       ; R0 := R35
848 [-]: MOVE      R0 R36       ; R0 := R36
849 [-]: MOVE      R0 R38       ; R0 := R38
850 [-]: MOVE      R0 R200      ; R0 := R200
851 [-]: MOVE      R0 R34       ; R0 := R34
852 [-]: MOVE      R0 R117      ; R0 := R117
853 [-]: MOVE      R0 R73       ; R0 := R73
854 [-]: MOVE      R0 R59       ; R0 := R59
855 [-]: MOVE      R0 R58       ; R0 := R58
856 [-]: MOVE      R0 R125      ; R0 := R125
857 [-]: MOVE      R0 R0        ; R0 := R0
858 [-]: MOVE      R0 R56       ; R0 := R56
859 [-]: MOVE      R0 R32       ; R0 := R32
860 [-]: MOVE      R0 R39       ; R0 := R39
861 [-]: MOVE      R0 R63       ; R0 := R63
862 [-]: MOVE      R0 R51       ; R0 := R51
863 [-]: MOVE      R0 R203      ; R0 := R203
864 [-]: MOVE      R0 R37       ; R0 := R37
865 [-]: MOVE      R0 R122      ; R0 := R122
866 [-]: MOVE      R0 R41       ; R0 := R41
867 [-]: MOVE      R0 R52       ; R0 := R52
868 [-]: MOVE      R0 R42       ; R0 := R42
869 [-]: MOVE      R0 R50       ; R0 := R50
870 [-]: MOVE      R0 R88       ; R0 := R88
871 [-]: MOVE      R0 R90       ; R0 := R90
872 [-]: MOVE      R0 R91       ; R0 := R91
873 [-]: MOVE      R0 R158      ; R0 := R158
874 [-]: MOVE      R0 R65       ; R0 := R65
875 [-]: MOVE      R0 R176      ; R0 := R176
876 [-]: MOVE      R0 R67       ; R0 := R67
877 [-]: MOVE      R0 R2        ; R0 := R2
878 [-]: MOVE      R0 R43       ; R0 := R43
879 [-]: MOVE      R0 R202      ; R0 := R202
880 [-]: MOVE      R0 R179      ; R0 := R179
881 [-]: MOVE      R0 R146      ; R0 := R146
882 [-]: SETGLOBAL R204 K113    ; Update := R204
883 [-]: SETGLOBAL R204 K114    ; 0x8C7099E9 := R204
884 [-]: CLOSURE   R204 99      ; R204 := closure(Function #100)
885 [-]: MOVE      R0 R106      ; R0 := R106
886 [-]: CLOSURE   R205 100     ; R205 := closure(Function #101)
887 [-]: MOVE      R0 R36       ; R0 := R36
888 [-]: MOVE      R0 R73       ; R0 := R73
889 [-]: MOVE      R0 R204      ; R0 := R204
890 [-]: MOVE      R0 R106      ; R0 := R106
891 [-]: MOVE      R0 R40       ; R0 := R40
892 [-]: MOVE      R0 R5        ; R0 := R5
893 [-]: MOVE      R0 R121      ; R0 := R121
894 [-]: MOVE      R0 R20       ; R0 := R20
895 [-]: MOVE      R0 R105      ; R0 := R105
896 [-]: MOVE      R0 R48       ; R0 := R48
897 [-]: MOVE      R0 R126      ; R0 := R126
898 [-]: MOVE      R0 R103      ; R0 := R103
899 [-]: MOVE      R0 R117      ; R0 := R117
900 [-]: MOVE      R0 R74       ; R0 := R74
901 [-]: MOVE      R0 R25       ; R0 := R25
902 [-]: MOVE      R0 R137      ; R0 := R137
903 [-]: MOVE      R0 R1        ; R0 := R1
904 [-]: MOVE      R0 R119      ; R0 := R119
905 [-]: MOVE      R0 R102      ; R0 := R102
906 [-]: MOVE      R0 R176      ; R0 := R176
907 [-]: MOVE      R0 R115      ; R0 := R115
908 [-]: MOVE      R0 R172      ; R0 := R172
909 [-]: MOVE      R0 R76       ; R0 := R76
910 [-]: MOVE      R0 R75       ; R0 := R75
911 [-]: MOVE      R0 R191      ; R0 := R191
912 [-]: MOVE      R0 R193      ; R0 := R193
913 [-]: MOVE      R0 R140      ; R0 := R140
914 [-]: MOVE      R0 R37       ; R0 := R37
915 [-]: MOVE      R0 R200      ; R0 := R200
916 [-]: SETGLOBAL R205 K115    ; DbUpdateComplete := R205
917 [-]: SETGLOBAL R205 K116    ; 0xB58E0B8A := R205
918 [-]: CLOSURE   R205 101     ; R205 := closure(Function #102)
919 [-]: SETGLOBAL R205 K117    ; MainMenu := R205
920 [-]: SETGLOBAL R205 K118    ; 0xFE463B19 := R205
921 [-]: CLOSURE   R205 102     ; R205 := closure(Function #103)
922 [-]: MOVE      R0 R56       ; R0 := R56
923 [-]: SETGLOBAL R205 K119    ; DisconnectWhenDone := R205
924 [-]: SETGLOBAL R205 K120    ; 0xC698D11 := R205
925 [-]: CLOSURE   R205 103     ; R205 := closure(Function #104)
926 [-]: MOVE      R0 R42       ; R0 := R42
927 [-]: MOVE      R0 R43       ; R0 := R43
928 [-]: MOVE      R0 R36       ; R0 := R36
929 [-]: MOVE      R0 R38       ; R0 := R38
930 [-]: MOVE      R0 R110      ; R0 := R110
931 [-]: MOVE      R0 R52       ; R0 := R52
932 [-]: SETGLOBAL R205 K121    ; onRawInputEvent := R205
933 [-]: SETGLOBAL R205 K122    ; 0x11563913 := R205
934 [-]: CLOSURE   R205 104     ; R205 := closure(Function #105)
935 [-]: CLOSURE   R206 105     ; R206 := closure(Function #106)
936 [-]: MOVE      R0 R110      ; R0 := R110
937 [-]: MOVE      R0 R205      ; R0 := R205
938 [-]: MOVE      R0 R1        ; R0 := R1
939 [-]: MOVE      R0 R73       ; R0 := R73
940 [-]: MOVE      R0 R33       ; R0 := R33
941 [-]: MOVE      R0 R84       ; R0 := R84
942 [-]: CLOSURE   R207 106     ; R207 := closure(Function #107)
943 [-]: MOVE      R0 R11       ; R0 := R11
944 [-]: MOVE      R0 R13       ; R0 := R13
945 [-]: MOVE      R0 R157      ; R0 := R157
946 [-]: MOVE      R0 R206      ; R0 := R206
947 [-]: SETGLOBAL R207 K123    ; TransitionOut := R207
948 [-]: SETGLOBAL R207 K124    ; 0x7097B1B4 := R207
949 [-]: CLOSURE   R207 107     ; R207 := closure(Function #108)
950 [-]: MOVE      R0 R48       ; R0 := R48
951 [-]: SETGLOBAL R207 K125    ; PvpUpdateMapVoteCount := R207
952 [-]: SETGLOBAL R207 K126    ; 0xA0529A33 := R207
953 [-]: CLOSURE   R207 108     ; R207 := closure(Function #109)
954 [-]: MOVE      R0 R48       ; R0 := R48
955 [-]: SETGLOBAL R207 K127    ; PvpSetNextMapsInfo := R207
956 [-]: SETGLOBAL R207 K128    ; 0xBA4254C2 := R207
957 [-]: CLOSURE   R207 109     ; R207 := closure(Function #110)
958 [-]: MOVE      R0 R48       ; R0 := R48
959 [-]: SETGLOBAL R207 K129    ; PvpShowWinningMap := R207
960 [-]: SETGLOBAL R207 K130    ; 0xA2CC636E := R207
961 [-]: CLOSURE   R207 110     ; R207 := closure(Function #111)
962 [-]: MOVE      R0 R103      ; R0 := R103
963 [-]: MOVE      R0 R38       ; R0 := R38
964 [-]: MOVE      R0 R206      ; R0 := R206
965 [-]: SETGLOBAL R207 K131    ; PvpAllPlayersCommitted := R207
966 [-]: SETGLOBAL R207 K132    ; 0xAE5D06FB := R207
967 [-]: CLOSURE   R207 111     ; R207 := closure(Function #112)
968 [-]: MOVE      R0 R68       ; R0 := R68
969 [-]: SETGLOBAL R207 K133    ; ScrubStartDrag1 := R207
970 [-]: SETGLOBAL R207 K134    ; 0xF7E2D70F := R207
971 [-]: CLOSURE   R207 112     ; R207 := closure(Function #113)
972 [-]: MOVE      R0 R68       ; R0 := R68
973 [-]: SETGLOBAL R207 K135    ; ScrubStopDrag1 := R207
974 [-]: SETGLOBAL R207 K136    ; 0xA564370B := R207
975 [-]: CLOSURE   R207 113     ; R207 := closure(Function #114)
976 [-]: MOVE      R0 R68       ; R0 := R68
977 [-]: SETGLOBAL R207 K137    ; ScrollBarClick1 := R207
978 [-]: SETGLOBAL R207 K138    ; 0xC542B039 := R207
979 [-]: CLOSURE   R207 114     ; R207 := closure(Function #115)
980 [-]: MOVE      R0 R84       ; R0 := R84
981 [-]: MOVE      R0 R68       ; R0 := R68
982 [-]: MOVE      R0 R95       ; R0 := R95
983 [-]: MOVE      R0 R64       ; R0 := R64
984 [-]: MOVE      R0 R66       ; R0 := R66
985 [-]: MOVE      R0 R67       ; R0 := R67
986 [-]: MOVE      R0 R71       ; R0 := R71
987 [-]: SETGLOBAL R207 K139    ; onKeyDown_MENU_MOUSE_Z := R207
988 [-]: SETGLOBAL R207 K140    ; 0x56EAD3A9 := R207
989 [-]: CLOSURE   R207 115     ; R207 := closure(Function #116)
990 [-]: SETGLOBAL R207 K141    ; ExitPvpAtEOM := R207
991 [-]: SETGLOBAL R207 K142    ; 0xFE41876D := R207
992 [-]: CLOSURE   R207 116     ; R207 := closure(Function #117)
993 [-]: MOVE      R0 R0        ; R0 := R0
994 [-]: CLOSURE   R26 117      ; R26 := closure(Function #118)
995 [-]: MOVE      R0 R84       ; R0 := R84
996 [-]: MOVE      R0 R1        ; R0 := R1
997 [-]: MOVE      R0 R46       ; R0 := R46
998 [-]: MOVE      R0 R206      ; R0 := R206
999 [-]: MOVE      R0 R110      ; R0 := R110
1000 [-]: MOVE      R0 R0        ; R0 := R0
1001 [-]: CLOSURE   R208 118     ; R208 := closure(Function #119)
1002 [-]: MOVE      R0 R26       ; R0 := R26
1003 [-]: SETGLOBAL R208 K143    ; ExitScreen := R208
1004 [-]: SETGLOBAL R208 K144    ; 0xDFB70305 := R208
1005 [-]: CLOSURE   R208 119     ; R208 := closure(Function #120)
1006 [-]: MOVE      R0 R84       ; R0 := R84
1007 [-]: MOVE      R0 R26       ; R0 := R26
1008 [-]: SETGLOBAL R208 K145    ; OnDoneButton := R208
1009 [-]: SETGLOBAL R208 K146    ; 0x3894F7EF := R208
1010 [-]: CLOSURE   R208 120     ; R208 := closure(Function #121)
1011 [-]: MOVE      R0 R108      ; R0 := R108
1012 [-]: MOVE      R0 R26       ; R0 := R26
1013 [-]: CLOSURE   R209 121     ; R209 := closure(Function #122)
1014 [-]: MOVE      R0 R126      ; R0 := R126
1015 [-]: MOVE      R0 R1        ; R0 := R1
1016 [-]: MOVE      R0 R110      ; R0 := R110
1017 [-]: MOVE      R0 R207      ; R0 := R207
1018 [-]: MOVE      R0 R136      ; R0 := R136
1019 [-]: MOVE      R0 R137      ; R0 := R137
1020 [-]: MOVE      R0 R35       ; R0 := R35
1021 [-]: MOVE      R0 R34       ; R0 := R34
1022 [-]: MOVE      R0 R38       ; R0 := R38
1023 [-]: MOVE      R0 R84       ; R0 := R84
1024 [-]: MOVE      R0 R36       ; R0 := R36
1025 [-]: MOVE      R0 R26       ; R0 := R26
1026 [-]: SETGLOBAL R209 K147    ; onKeyDown_MENU_CANCEL := R209
1027 [-]: SETGLOBAL R209 K148    ; 0x5B2C0B28 := R209
1028 [-]: CLOSURE   R209 122     ; R209 := closure(Function #123)
1029 [-]: MOVE      R0 R67       ; R0 := R67
1030 [-]: SETGLOBAL R209 K149    ; ModItemFocused := R209
1031 [-]: SETGLOBAL R209 K150    ; 0x2B719325 := R209
1032 [-]: CLOSURE   R209 123     ; R209 := closure(Function #124)
1033 [-]: MOVE      R0 R67       ; R0 := R67
1034 [-]: SETGLOBAL R209 K151    ; ModItemUnfocused := R209
1035 [-]: SETGLOBAL R209 K152    ; 0xBAA973D := R209
1036 [-]: CLOSURE   R209 124     ; R209 := closure(Function #125)
1037 [-]: MOVE      R0 R84       ; R0 := R84
1038 [-]: MOVE      R0 R67       ; R0 := R67
1039 [-]: SETGLOBAL R209 K153    ; ModItemSelected := R209
1040 [-]: SETGLOBAL R209 K154    ; 0x468DC5F8 := R209
1041 [-]: CLOSURE   R90 125      ; R90 := closure(Function #126)
1042 [-]: MOVE      R0 R65       ; R0 := R65
1043 [-]: MOVE      R0 R109      ; R0 := R109
1044 [-]: MOVE      R0 R0        ; R0 := R0
1045 [-]: MOVE      R0 R1        ; R0 := R1
1046 [-]: MOVE      R0 R73       ; R0 := R73
1047 [-]: MOVE      R0 R117      ; R0 := R117
1048 [-]: MOVE      R0 R208      ; R0 := R208
1049 [-]: MOVE      R0 R110      ; R0 := R110
1050 [-]: MOVE      R0 R136      ; R0 := R136
1051 [-]: MOVE      R0 R137      ; R0 := R137
1052 [-]: MOVE      R0 R126      ; R0 := R126
1053 [-]: MOVE      R0 R98       ; R0 := R98
1054 [-]: MOVE      R0 R97       ; R0 := R97
1055 [-]: CLOSURE   R209 126     ; R209 := closure(Function #127)
1056 [-]: MOVE      R0 R84       ; R0 := R84
1057 [-]: SETGLOBAL R209 K155    ; RollOverGearItem := R209
1058 [-]: SETGLOBAL R209 K156    ; 0xBB720B70 := R209
1059 [-]: CLOSURE   R209 127     ; R209 := closure(Function #128)
1060 [-]: MOVE      R0 R84       ; R0 := R84
1061 [-]: SETGLOBAL R209 K157    ; RollOutGearItem := R209
1062 [-]: SETGLOBAL R209 K158    ; 0xD6CC6DD := R209
1063 [-]: CLOSURE   R209 128     ; R209 := closure(Function #129)
1064 [-]: MOVE      R0 R84       ; R0 := R84
1065 [-]: MOVE      R0 R27       ; R0 := R27
1066 [-]: SETGLOBAL R209 K159    ; RollOverPlayer := R209
1067 [-]: SETGLOBAL R209 K160    ; 0x578D7559 := R209
1068 [-]: CLOSURE   R209 129     ; R209 := closure(Function #130)
1069 [-]: MOVE      R0 R84       ; R0 := R84
1070 [-]: SETGLOBAL R209 K161    ; RollOutPlayer := R209
1071 [-]: SETGLOBAL R209 K162    ; 0xE5C7FB7D := R209
1072 [-]: CLOSURE   R209 130     ; R209 := closure(Function #131)
1073 [-]: MOVE      R0 R84       ; R0 := R84
1074 [-]: MOVE      R0 R94       ; R0 := R94
1075 [-]: MOVE      R0 R0        ; R0 := R0
1076 [-]: SETGLOBAL R209 K163    ; onKeyDown_MENU_LTRIGGER2 := R209
1077 [-]: SETGLOBAL R209 K164    ; 0x9BD896E0 := R209
1078 [-]: CLOSURE   R209 131     ; R209 := closure(Function #132)
1079 [-]: MOVE      R0 R84       ; R0 := R84
1080 [-]: MOVE      R0 R94       ; R0 := R94
1081 [-]: MOVE      R0 R0        ; R0 := R0
1082 [-]: SETGLOBAL R209 K165    ; onKeyDown_MENU_RTRIGGER2 := R209
1083 [-]: SETGLOBAL R209 K166    ; 0xFE4FF8B := R209
1084 [-]: CLOSURE   R209 132     ; R209 := closure(Function #133)
1085 [-]: MOVE      R0 R94       ; R0 := R94
1086 [-]: SETGLOBAL R209 K167    ; EntryFocused := R209
1087 [-]: SETGLOBAL R209 K168    ; 0x381FBE06 := R209
1088 [-]: CLOSURE   R209 133     ; R209 := closure(Function #134)
1089 [-]: MOVE      R0 R94       ; R0 := R94
1090 [-]: SETGLOBAL R209 K169    ; EntryUnfocused := R209
1091 [-]: SETGLOBAL R209 K170    ; 0x698CC3D4 := R209
1092 [-]: CLOSURE   R209 134     ; R209 := closure(Function #135)
1093 [-]: MOVE      R0 R84       ; R0 := R84
1094 [-]: MOVE      R0 R94       ; R0 := R94
1095 [-]: SETGLOBAL R209 K171    ; EntryPressed := R209
1096 [-]: SETGLOBAL R209 K172    ; 0x5204B69A := R209
1097 [-]: CLOSURE   R209 135     ; R209 := closure(Function #136)
1098 [-]: MOVE      R0 R0        ; R0 := R0
1099 [-]: SETGLOBAL R209 K173    ; RollOverArrow := R209
1100 [-]: SETGLOBAL R209 K174    ; 0xDCF1A7AF := R209
1101 [-]: CLOSURE   R209 136     ; R209 := closure(Function #137)
1102 [-]: SETGLOBAL R209 K175    ; RollOutArrow := R209
1103 [-]: SETGLOBAL R209 K176    ; 0x31336B08 := R209
1104 [-]: CLOSURE   R209 137     ; R209 := closure(Function #138)
1105 [-]: MOVE      R0 R94       ; R0 := R94
1106 [-]: MOVE      R0 R98       ; R0 := R98
1107 [-]: CLOSURE   R210 138     ; R210 := closure(Function #139)
1108 [-]: MOVE      R0 R84       ; R0 := R84
1109 [-]: MOVE      R0 R209      ; R0 := R209
1110 [-]: SETGLOBAL R210 K177    ; PressArrow := R210
1111 [-]: SETGLOBAL R210 K178    ; 0x6430B6E0 := R210
1112 [-]: CLOSURE   R118 139     ; R118 := closure(Function #140)
1113 [-]: MOVE      R0 R119      ; R0 := R119
1114 [-]: CLOSURE   R210 140     ; R210 := closure(Function #141)
1115 [-]: MOVE      R0 R39       ; R0 := R39
1116 [-]: SETGLOBAL R210 K179    ; SetCountdownMessage := R210
1117 [-]: SETGLOBAL R210 K180    ; 0xCECC0482 := R210
1118 [-]: CLOSURE   R210 141     ; R210 := closure(Function #142)
1119 [-]: MOVE      R0 R111      ; R0 := R111
1120 [-]: MOVE      R0 R1        ; R0 := R1
1121 [-]: MOVE      R0 R64       ; R0 := R64
1122 [-]: MOVE      R0 R181      ; R0 := R181
1123 [-]: MOVE      R0 R66       ; R0 := R66
1124 [-]: MOVE      R0 R191      ; R0 := R191
1125 [-]: MOVE      R0 R67       ; R0 := R67
1126 [-]: MOVE      R0 R2        ; R0 := R2
1127 [-]: MOVE      R0 R16       ; R0 := R16
1128 [-]: CLOSURE   R211 142     ; R211 := closure(Function #143)
1129 [-]: MOVE      R0 R47       ; R0 := R47
1130 [-]: MOVE      R0 R123      ; R0 := R123
1131 [-]: MOVE      R0 R49       ; R0 := R49
1132 [-]: MOVE      R0 R84       ; R0 := R84
1133 [-]: MOVE      R0 R90       ; R0 := R90
1134 [-]: SETGLOBAL R211 K181    ; HaveClosedAccoladeVoting := R211
1135 [-]: SETGLOBAL R211 K182    ; 0x692258B8 := R211
1136 [-]: CLOSURE   R211 143     ; R211 := closure(Function #144)
1137 [-]: MOVE      R0 R210      ; R0 := R210
1138 [-]: SETGLOBAL R211 K183    ; IconCacheFlushed := R211
1139 [-]: SETGLOBAL R211 K184    ; 0x5C92AF6F := R211
1140 [-]: CLOSURE   R211 144     ; R211 := closure(Function #145)
1141 [-]: MOVE      R0 R111      ; R0 := R111
1142 [-]: MOVE      R0 R210      ; R0 := R210
1143 [-]: SETGLOBAL R211 K185    ; CommonResourcesReady := R211
1144 [-]: SETGLOBAL R211 K186    ; 0x3E480C13 := R211
1145 [-]: CLOSURE   R211 145     ; R211 := closure(Function #146)
1146 [-]: MOVE      R0 R46       ; R0 := R46
1147 [-]: SETGLOBAL R211 K187    ; OpenedFromPauseMenu := R211
1148 [-]: SETGLOBAL R211 K188    ; 0x7363BED9 := R211
1149 [-]: CLOSURE   R211 146     ; R211 := closure(Function #147)
1150 [-]: MOVE      R0 R206      ; R0 := R206
1151 [-]: SETGLOBAL R211 K189    ; OnLevelStreaming := R211
1152 [-]: SETGLOBAL R211 K190    ; 0x15D0E62A := R211
1153 [-]: CLOSURE   R211 147     ; R211 := closure(Function #148)
1154 [-]: SETGLOBAL R211 K191    ; OnGamepadTransition := R211
1155 [-]: SETGLOBAL R211 K192    ; 0x98E4F633 := R211
1156 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 227
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 231
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 235
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["EOMOpen"] := nil
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xB4BBB185"]
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: CALL      R0 2 1       ; R0(R1)
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: SETTABLE  R0 K4 K2     ; R0["gToolTip"] := nil
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MASTERY"]
 12 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0xC780BE92"]
 16 [-]: MOVE      R1 R0        ; R1 := R0
 17 [-]: CALL      R0 2 1       ; R0(R1)
 18 [-]: GETUPVAL  R0 U3        ; R0 := U3
 19 [-]: TEST      R0 0         ; if not R0 then PC := 36
 20 [-]: JMP       36           ; PC := 36
 21 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 22 [-]: GETGLOBAL R1 K8        ; R1 := gGameRules
 23 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 24 [-]: TEST      R0 1         ; if R0 then PC := 36
 25 [-]: JMP       36           ; PC := 36
 26 [-]: GETGLOBAL R0 K0        ; R0 := _T
 27 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["eomScreenMode"]
 28 [-]: GETUPVAL  R1 U4        ; R1 := U4
 29 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["ACTUAL_EOM"]
 30 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R0 K8        ; R0 := gGameRules
 33 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0["0x6EF24057"]
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: CALL      R0 3 1       ; R0(R1,R2)
 36 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 37 [-]: GETUPVAL  R1 U5        ; R1 := U5
 38 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 39 [-]: TEST      R0 1         ; if R0 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETUPVAL  R0 U5        ; R0 := U5
 42 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0xD4C2743F"]
 43 [-]: CALL      R0 2 1       ; R0(R1)
 44 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 45 [-]: GETUPVAL  R1 U6        ; R1 := U6
 46 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 47 [-]: TEST      R0 1         ; if R0 then PC := 52
 48 [-]: JMP       52           ; PC := 52
 49 [-]: GETUPVAL  R0 U6        ; R0 := U6
 50 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0xA58BB96C"]
 51 [-]: CALL      R0 2 1       ; R0(R1)
 52 [-]: GETUPVAL  R0 U7        ; R0 := U7
 53 [-]: TEST      R0 0         ; if not R0 then PC := 132
 54 [-]: JMP       132          ; PC := 132
 55 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 56 [-]: GETUPVAL  R1 U8        ; R1 := U8
 57 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 58 [-]: TEST      R0 1         ; if R0 then PC := 100
 59 [-]: JMP       100          ; PC := 100
 60 [-]: GETGLOBAL R0 K0        ; R0 := _T
 61 [-]: GETUPVAL  R1 U8        ; R1 := U8
 62 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0x256B18D6"]
 63 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 64 [-]: SETTABLE  R0 K14 R1    ; R0["DesiredGoToNode"] := R1
 65 [-]: GETUPVAL  R0 U8        ; R0 := U8
 66 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x6C602C14"]
 67 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 68 [-]: GETUPVAL  R1 U0        ; R1 := U0
 69 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["0x6D23E6"]
 70 [-]: MOVE      R2 R0        ; R2 := R0
 71 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 72 [-]: GETUPVAL  R2 U0        ; R2 := U0
 73 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["INVASION_ATTACKER_TAG"]
 74 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 88
 75 [-]: JMP       88           ; PC := 88
 76 [-]: GETUPVAL  R2 U0        ; R2 := U0
 77 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["INVASION_DEFENDER_TAG"]
 78 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 88
 79 [-]: JMP       88           ; PC := 88
 80 [-]: GETUPVAL  R2 U0        ; R2 := U0
 81 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["ACTIVE_MISSION_TAG"]
 82 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 88
 83 [-]: JMP       88           ; PC := 88
 84 [-]: GETUPVAL  R2 U0        ; R2 := U0
 85 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["BADLAND_MISSION_TAG"]
 86 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: GETGLOBAL R2 K0        ; R2 := _T
 89 [-]: SETTABLE  R2 K22 R1    ; R2["DesiredGoToNodeTag"] := R1
 90 [-]: GETUPVAL  R2 U8        ; R2 := U8
 91 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2["0xA728F80"]
 92 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 93 [-]: EQ        1 R2 K24     ; if R2 == "" then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETGLOBAL R3 K0        ; R3 := _T
 96 [-]: SETTABLE  R3 K25 R2    ; R3["MissionToSkipTo"] := R2
 97 [-]: JMP       100          ; PC := 100
 98 [-]: GETGLOBAL R3 K0        ; R3 := _T
 99 [-]: SETTABLE  R3 K25 K2    ; R3["MissionToSkipTo"] := nil
100 [-]: GETGLOBAL R3 K0        ; R3 := _T
101 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["TopMenuOpen"]
102 [-]: TEST      R3 0         ; if not R3 then PC := 118
103 [-]: JMP       118          ; PC := 118
104 [-]: GETGLOBAL R3 K27       ; R3 := gFlashMgr
105 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3["0x616DD092"]
106 [-]: GETGLOBAL R5 K29       ; R5 := topMenuMovie
107 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
108 [-]: GETGLOBAL R4 K7        ; R4 := 0x400E7765
109 [-]: MOVE      R5 R3        ; R5 := R3
110 [-]: CALL      R4 2 2       ; R4 := R4(R5)
111 [-]: TEST      R4 1         ; if R4 then PC := 149
112 [-]: JMP       149          ; PC := 149
113 [-]: SELF      R4 R3 K30    ; R5 := R3; R4 := R3["0x458F27A9"]
114 [-]: LOADK     R6 K31       ; R6 := "TriggerConsole"
115 [-]: LOADK     R7 K32       ; R7 := "SolarMapOrigin"
116 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
117 [-]: JMP       149          ; PC := 149
118 [-]: GETGLOBAL R4 K0        ; R4 := _T
119 [-]: SETTABLE  R4 K33 K32   ; R4["triggeredConsoleTag"] := "SolarMapOrigin"
120 [-]: GETUPVAL  R4 U9        ; R4 := U9
121 [-]: GETTABLE  R4 R4 K34    ; R4 := R4["0x930EC5CF"]
122 [-]: LOADK     R5 K35       ; R5 := "ConsoleTeleportAndActivate"
123 [-]: CALL      R4 2 2       ; R4 := R4(R5)
124 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
125 [-]: MOVE      R6 R4        ; R6 := R4
126 [-]: CALL      R5 2 2       ; R5 := R5(R6)
127 [-]: TEST      R5 1         ; if R5 then PC := 149
128 [-]: JMP       149          ; PC := 149
129 [-]: SELF      R5 R4 K36    ; R6 := R4; R5 := R4["0xDA085F65"]
130 [-]: CALL      R5 2 1       ; R5(R6)
131 [-]: JMP       149          ; PC := 149
132 [-]: GETUPVAL  R5 U0        ; R5 := U0
133 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["0x87D2274C"]
134 [-]: CALL      R5 1 2       ; R5 := R5()
135 [-]: TEST      R5 1         ; if R5 then PC := 149
136 [-]: JMP       149          ; PC := 149
137 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
138 [-]: GETUPVAL  R6 U8        ; R6 := U8
139 [-]: CALL      R5 2 2       ; R5 := R5(R6)
140 [-]: TEST      R5 1         ; if R5 then PC := 149
141 [-]: JMP       149          ; PC := 149
142 [-]: GETGLOBAL R5 K0        ; R5 := _T
143 [-]: GETGLOBAL R6 K39       ; R6 := 0xEC274B1A
144 [-]: GETUPVAL  R7 U8        ; R7 := U8
145 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x256B18D6"]
146 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
147 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
148 [-]: SETTABLE  R5 K38 R6    ; R5["LastMissionResultNode"] := R6
149 [-]: GETGLOBAL R5 K0        ; R5 := _T
150 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["TopMenuOpen"]
151 [-]: TEST      R5 0         ; if not R5 then PC := 170
152 [-]: JMP       170          ; PC := 170
153 [-]: GETUPVAL  R5 U10       ; R5 := U10
154 [-]: TEST      R5 0         ; if not R5 then PC := 170
155 [-]: JMP       170          ; PC := 170
156 [-]: GETGLOBAL R5 K27       ; R5 := gFlashMgr
157 [-]: SELF      R5 R5 K28    ; R6 := R5; R5 := R5["0x616DD092"]
158 [-]: GETGLOBAL R7 K29       ; R7 := topMenuMovie
159 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
160 [-]: GETGLOBAL R6 K7        ; R6 := 0x400E7765
161 [-]: MOVE      R7 R5        ; R7 := R5
162 [-]: CALL      R6 2 2       ; R6 := R6(R7)
163 [-]: TEST      R6 1         ; if R6 then PC := 184
164 [-]: JMP       184          ; PC := 184
165 [-]: SELF      R6 R5 K30    ; R7 := R5; R6 := R5["0x458F27A9"]
166 [-]: LOADK     R8 K40       ; R8 := "SetWasUIEnabled"
167 [-]: LOADK     R9 K41       ; R9 := "false"
168 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
169 [-]: JMP       184          ; PC := 184
170 [-]: GETGLOBAL R6 K0        ; R6 := _T
171 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["TopMenuOpen"]
172 [-]: TEST      R6 1         ; if R6 then PC := 184
173 [-]: JMP       184          ; PC := 184
174 [-]: GETUPVAL  R6 U10       ; R6 := U10
175 [-]: TEST      R6 0         ; if not R6 then PC := 184
176 [-]: JMP       184          ; PC := 184
177 [-]: GETGLOBAL R6 K0        ; R6 := _T
178 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["DisableUIInput"]
179 [-]: TEST      R6 0         ; if not R6 then PC := 184
180 [-]: JMP       184          ; PC := 184
181 [-]: GETGLOBAL R6 K0        ; R6 := _T
182 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["0x45CBC39B"]
183 [-]: CALL      R6 1 1       ; R6()
184 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 301
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusSectorGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R0 R0        ; R0 := R0
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 305
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPvpGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R0 R0        ; R0 := R0
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 309
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPveDeathmatchGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R0 R0        ; R0 := R0
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 313
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 0         ; if not R0 then PC := 14
  4 [-]: JMP       14           ; PC := 14
  5 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  6 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB979C9EC"]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: GETGLOBAL R1 K2        ; R1 := Lotus_Game
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["LotusPveDeathmatchGameRules_GV_GREED"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 318
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x232D0973"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 51
 10 [-]: JMP       51           ; PC := 51
 11 [-]: GETGLOBAL R0 K3        ; R0 := gRegion
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x372CB914"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 51
 18 [-]: JMP       51           ; PC := 51
 19 [-]: LOADK     R1 K5        ; R1 := 0
 20 [-]: GETGLOBAL R2 K6        ; R2 := gChallengeMgr
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x9172BF84"]
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: SUB       R2 R2 K8     ; R2 := R2 - 1
 25 [-]: LOADK     R3 K8        ; R3 := 1
 26 [-]: FORPREP   R1 50        ; R1 -= R3; PC := 50
 27 [-]: GETGLOBAL R5 K6        ; R5 := gChallengeMgr
 28 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x1933B96D"]
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: MOVE      R8 R4        ; R8 := R4
 31 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 32 [-]: GETGLOBAL R6 K10       ; R6 := gGameData
 33 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0x2D0B8A86"]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0xED61E190"]
 36 [-]: MOVE      R8 R5        ; R8 := R5
 37 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 38 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 39 [-]: MOVE      R8 R6        ; R8 := R6
 40 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 41 [-]: TEST      R7 1         ; if R7 then PC := 50
 42 [-]: JMP       50           ; PC := 50
 43 [-]: GETTABLE  R7 R6 K13    ; R7 := R6["mCategory"]
 44 [-]: GETGLOBAL R8 K14       ; R8 := Lotus_Game
 45 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["PVPChallengeTypeCategory_DAILY"]
 46 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: RETURN    R7 2         ; return R7
 50 [-]: FORLOOP   R1 27        ; R1 += R3; if R1 <= R2 then begin PC := 27; R4 := R1 end
 51 [-]: MOVE      R7 R0        ; R7 := R0
 52 [-]: RETURN    R7 2         ; return R7
 53 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 338
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["location"]
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5EC7A3D2"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETUPVAL  R3 U2        ; R3 := U2
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0xDCB989B0"]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: SETTABLE  R2 K2 R3     ; R2["pvpType"] := R3
 12 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 345
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B598ED4"]
  7 [-]: GETGLOBAL R3 K2        ; R3 := gLotusArtifactUpgradeType
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 1         ; if R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R1 R0        ; R1 := R0
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B598ED4"]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: TEST      R1 1         ; if R1 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B598ED4"]
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: MOVE      R1 R0        ; R1 := R0
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 358
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x87D2274C"]
  4 [-]: CALL      R1 1 2       ; R1 := R1()
  5 [-]: TEST      R1 1         ; if R1 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xCA086799"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: LOADNIL   R1 R1        ; R1 := nil
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: CALL      R2 1 2       ; R2 := R2()
 21 [-]: TEST      R2 0         ; if not R2 then PC := 48
 22 [-]: JMP       48           ; PC := 48
 23 [-]: TEST      R0 1         ; if R0 then PC := 48
 24 [-]: JMP       48           ; PC := 48
 25 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 26 [-]: MOVE      R1 R2        ; R1 := R2
 27 [-]: GETGLOBAL R2 K3        ; R2 := gMatchingService
 28 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x89A90137"]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: GETGLOBAL R3 K3        ; R3 := gMatchingService
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xC6E873C7"]
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: LOADK     R4 K6        ; R4 := 1
 34 [-]: LEN       R5 R2        ; R5 := # R2
 35 [-]: LOADK     R6 K6        ; R6 := 1
 36 [-]: FORPREP   R4 46        ; R4 -= R6; PC := 46
 37 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 38 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["teamId"]
 39 [-]: EQ        0 R8 R3      ; if R8 ~= R3 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETGLOBAL R8 K8        ; R8 := table
 42 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0xE6450C9D"]
 43 [-]: MOVE      R9 R1        ; R9 := R1
 44 [-]: GETTABLE  R10 R2 R7    ; R10 := R2[R7]
 45 [-]: CALL      R8 3 1       ; R8(R9,R10)
 46 [-]: FORLOOP   R4 37        ; R4 += R6; if R4 <= R5 then begin PC := 37; R7 := R4 end
 47 [-]: JMP       83           ; PC := 83
 48 [-]: TEST      R0 1         ; if R0 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETGLOBAL R8 K3        ; R8 := gMatchingService
 51 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0x89A90137"]
 52 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 53 [-]: MOVE      R1 R8        ; R1 := R8
 54 [-]: JMP       83           ; PC := 83
 55 [-]: GETUPVAL  R8 U1        ; R8 := U1
 56 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8["0xD11FBDB8"]
 57 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 58 [-]: MOVE      R1 R8        ; R1 := R8
 59 [-]: EQ        0 R1 K11     ; if R1 ~= nil then PC := 83
 60 [-]: JMP       83           ; PC := 83
 61 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 62 [-]: MOVE      R1 R8        ; R1 := R8
 63 [-]: GETGLOBAL R8 K12       ; R8 := gPlayerProfileMgr
 64 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8["0x21EF7B1A"]
 65 [-]: LOADK     R10 K14      ; R10 := 0
 66 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 67 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 68 [-]: MOVE      R10 R8       ; R10 := R8
 69 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 70 [-]: TEST      R9 1         ; if R9 then PC := 83
 71 [-]: JMP       83           ; PC := 83
 72 [-]: GETGLOBAL R9 K15       ; R9 := Lotus_Game
 73 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["0xD5B6B006"]
 74 [-]: CALL      R9 1 2       ; R9 := R9()
 75 [-]: SELF      R10 R8 K18   ; R11 := R8; R10 := R8["0x144A28F9"]
 76 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 77 [-]: SETTABLE  R9 K17 R10   ; R9["name"] := R10
 78 [-]: GETGLOBAL R10 K8       ; R10 := table
 79 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["0xE6450C9D"]
 80 [-]: MOVE      R11 R1       ; R11 := R1
 81 [-]: MOVE      R12 R9       ; R12 := R9
 82 [-]: CALL      R10 3 1      ; R10(R11,R12)
 83 [-]: GETGLOBAL R10 K19      ; R10 := 0x63B09107
 84 [-]: MOVE      R11 R1       ; R11 := R1
 85 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 86 [-]: JMP       98           ; PC := 98
 87 [-]: GETTABLE  R15 R14 K17  ; R15 := R14["name"]
 88 [-]: GETUPVAL  R16 U0       ; R16 := U0
 89 [-]: GETTABLE  R16 R16 K20  ; R16 := R16["HIDDEN_PLAYER_NAME"]
 90 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 98
 91 [-]: JMP       98           ; PC := 98
 92 [-]: GETGLOBAL R15 K8       ; R15 := table
 93 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["0xCDB1FD5E"]
 94 [-]: MOVE      R16 R1       ; R16 := R1
 95 [-]: MOVE      R17 R13      ; R17 := R13
 96 [-]: CALL      R15 3 1      ; R15(R16,R17)
 97 [-]: JMP       100          ; PC := 100
 98 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 87; R12 := R13 end
 99 [-]: JMP       87           ; PC := 87
100 [-]: GETUPVAL  R15 U3       ; R15 := U3
101 [-]: CALL      R15 1 2      ; R15 := R15()
102 [-]: TEST      R15 0        ; if not R15 then PC := 123
103 [-]: JMP       123          ; PC := 123
104 [-]: TEST      R1 0         ; if not R1 then PC := 123
105 [-]: JMP       123          ; PC := 123
106 [-]: NEWTABLE  R15 0 0      ; R15 := {}
107 [-]: GETGLOBAL R16 K19      ; R16 := 0x63B09107
108 [-]: MOVE      R17 R1       ; R17 := R1
109 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
110 [-]: JMP       116          ; PC := 116
111 [-]: GETGLOBAL R21 K8       ; R21 := table
112 [-]: GETTABLE  R21 R21 K9   ; R21 := R21["0xE6450C9D"]
113 [-]: MOVE      R22 R15      ; R22 := R15
114 [-]: MOVE      R23 R20      ; R23 := R20
115 [-]: CALL      R21 3 1      ; R21(R22,R23)
116 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 111; R18 := R19 end
117 [-]: JMP       111          ; PC := 111
118 [-]: GETGLOBAL R21 K8       ; R21 := table
119 [-]: GETTABLE  R21 R21 K22  ; R21 := R21["0xA5C58010"]
120 [-]: MOVE      R22 R1       ; R22 := R1
121 [-]: CLOSURE   R23 0        ; R23 := closure(Function #11.1)
122 [-]: CALL      R21 3 1      ; R21(R22,R23)
123 [-]: RETURN    R1 2         ; return R1
124 [-]: RETURN    R0 1         ; return 


; Function #11.1:
;
; Name:            
; Defined at line: 409
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["teamId"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["teamId"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 417
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: LEN       R1 R0        ; R1 := # R0
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  5 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  6 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
  7 [-]: LOADK     R5 K3        ; R5 := "StatsPanel.PanelBG"
  8 [-]: LOADK     R6 K4        ; R6 := "_width"
  9 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: SUB       R2 R2 K5     ; R2 := R2 - 30
 12 [-]: LOADK     R3 K6        ; R3 := 4
 13 [-]: GETUPVAL  R4 U2        ; R4 := U2
 14 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0xB57E56DF"]
 15 [-]: GETGLOBAL R5 K8        ; R5 := math
 16 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0x8B011038"]
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: MOVE      R7 R3        ; R7 := R3
 19 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 20 [-]: DIV       R5 R2 R5     ; R5 := R2 / R5
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 427
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: LEN       R2 R1        ; R2 := # R1
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: MUL       R3 R3 K1     ; R3 := R3 * 0.5
 11 [-]: ADD       R3 R3 K2     ; R3 := R3 + 10
 12 [-]: LT        0 R2 K3      ; if R2 >= 4 then PC := 27
 13 [-]: JMP       27           ; PC := 27
 14 [-]: GETGLOBAL R4 K4        ; R4 := 0xF595ADDE
 15 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 16 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x6B7B470B"]
 17 [-]: LOADK     R7 K7        ; R7 := "StatsPanel.PanelBG"
 18 [-]: LOADK     R8 K8        ; R8 := "_width"
 19 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 20 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 21 [-]: MUL       R4 R4 K1     ; R4 := R4 * 0.5
 22 [-]: SUB       R5 R2 K9     ; R5 := R2 - 1
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: MUL       R5 R5 R6     ; R5 := R5 * R6
 25 [-]: MUL       R5 R5 K1     ; R5 := R5 * 0.5
 26 [-]: SUB       R3 R4 R5     ; R3 := R4 - R5
 27 [-]: SUB       R5 R0 K9     ; R5 := R0 - 1
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: MUL       R5 R5 R6     ; R5 := R5 * R6
 30 [-]: ADD       R5 R3 R5     ; R5 := R3 + R5
 31 [-]: RETURN    R5 2         ; return R5
 32 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 443
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "Title"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["MASTERY"]
  7 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R5 R0        ; R5 := R0
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K5        ; R3 := "MenuBar"
 15 [-]: LOADK     R4 K3        ; R4 := "_visible"
 16 [-]: GETUPVAL  R5 U0        ; R5 := U0
 17 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["MASTERY"]
 18 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 23 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 25 [-]: LOADK     R3 K6        ; R3 := "Tile"
 26 [-]: LOADK     R4 K3        ; R4 := "_visible"
 27 [-]: GETUPVAL  R5 U0        ; R5 := U0
 28 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["MASTERY"]
 29 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: MOVE      R5 R1        ; R5 := R1
 33 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 34 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 35 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 36 [-]: LOADK     R3 K7        ; R3 := "AffinityPanel"
 37 [-]: LOADK     R4 K3        ; R4 := "_visible"
 38 [-]: GETUPVAL  R5 U0        ; R5 := U0
 39 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["ITEMS"]
 40 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 45 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 46 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 47 [-]: LOADK     R3 K9        ; R3 := "RewardsPanel"
 48 [-]: LOADK     R4 K3        ; R4 := "_visible"
 49 [-]: GETUPVAL  R5 U0        ; R5 := U0
 50 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["ITEMS"]
 51 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: MOVE      R5 R0        ; R5 := R0
 54 [-]: MOVE      R5 R1        ; R5 := R1
 55 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 56 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 57 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 58 [-]: LOADK     R3 K10       ; R3 := "ModsPanel"
 59 [-]: LOADK     R4 K3        ; R4 := "_visible"
 60 [-]: GETUPVAL  R5 U0        ; R5 := U0
 61 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["ITEMS"]
 62 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: MOVE      R5 R1        ; R5 := R1
 66 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 67 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 68 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 69 [-]: LOADK     R3 K11       ; R3 := "StatsPanel"
 70 [-]: LOADK     R4 K3        ; R4 := "_visible"
 71 [-]: GETUPVAL  R5 U0        ; R5 := U0
 72 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["ITEMS"]
 73 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: MOVE      R5 R0        ; R5 := R0
 76 [-]: MOVE      R5 R1        ; R5 := R1
 77 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 78 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 79 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 80 [-]: LOADK     R3 K12       ; R3 := "RepPanel"
 81 [-]: LOADK     R4 K3        ; R4 := "_visible"
 82 [-]: GETUPVAL  R5 U0        ; R5 := U0
 83 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["REP"]
 84 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 90
 85 [-]: JMP       90           ; PC := 90
 86 [-]: GETUPVAL  R5 U1        ; R5 := U1
 87 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["isPvp"]
 88 [-]: MOVE      R5 R5        ; R5 := R5
 89 [-]: JMP       92           ; PC := 92
 90 [-]: MOVE      R5 R0        ; R5 := R0
 91 [-]: MOVE      R5 R1        ; R5 := R1
 92 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 93 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 94 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 95 [-]: LOADK     R3 K15       ; R3 := "RepPanelPVP"
 96 [-]: LOADK     R4 K3        ; R4 := "_visible"
 97 [-]: GETUPVAL  R5 U0        ; R5 := U0
 98 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["REP"]
 99 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 104
100 [-]: JMP       104          ; PC := 104
101 [-]: GETUPVAL  R5 U1        ; R5 := U1
102 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["isPvp"]
103 [-]: JMP       106          ; PC := 106
104 [-]: MOVE      R5 R0        ; R5 := R0
105 [-]: MOVE      R5 R1        ; R5 := R1
106 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
107 [-]: GETGLOBAL R1 K16       ; R1 := 0x400E7765
108 [-]: GETUPVAL  R2 U2        ; R2 := U2
109 [-]: CALL      R1 2 2       ; R1 := R1(R2)
110 [-]: TEST      R1 1         ; if R1 then PC := 121
111 [-]: JMP       121          ; PC := 121
112 [-]: GETUPVAL  R1 U2        ; R1 := U2
113 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1["0x625791A8"]
114 [-]: GETUPVAL  R3 U0        ; R3 := U0
115 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["SCOREBOARD"]
116 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 119
117 [-]: JMP       119          ; PC := 119
118 [-]: MOVE      R3 R0        ; R3 := R0
119 [-]: MOVE      R3 R1        ; R3 := R1
120 [-]: CALL      R1 3 1       ; R1(R2,R3)
121 [-]: MOVE      R0 R3        ; R0 := R3
122 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 461
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LOADNIL   R1 R1        ; R1 := nil
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 37
 16 [-]: JMP       37           ; PC := 37
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x87D2274C"]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 0         ; if not R2 then PC := 33
 21 [-]: JMP       33           ; PC := 33
 22 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x80B14403"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: MOVE      R1 R2        ; R1 := R2
 25 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0["0x8F7453D9"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0["0x93E76705"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: MOVE      R1 R2        ; R1 := R2
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xC8003594"]
 35 [-]: CALL      R2 1 2       ; R2 := R2()
 36 [-]: MOVE      R1 R2        ; R1 := R2
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 480
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R2 R1        ; R2 := R1
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: TEST      R3 0         ; if not R3 then PC := 20
  7 [-]: JMP       20           ; PC := 20
  8 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["LOT_ARCHWING"]
 10 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x70B145D3"]
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 17 [-]: EQ        0 R3 K4      ; if R3 ~= 0 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 488
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
 11 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MT_LANDSCAPE"]
 13 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["sortieId"]
 16 [-]: EQ        0 R1 K5      ; if R1 ~= "" then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["goalTag"]
 19 [-]: GETGLOBAL R2 K7        ; R2 := EMPTY_SYMBOL
 20 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R1 R0        ; R1 := R0
 23 [-]: MOVE      R1 R1        ; R1 := R1
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 497
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
 11 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MT_RAILJACK"]
 13 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R1 R0        ; R1 := R0
 16 [-]: MOVE      R1 R1        ; R1 := R1
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 506
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
 11 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MT_LANDSCAPE"]
 13 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R1 R0        ; R1 := R0
 16 [-]: MOVE      R1 R1        ; R1 := R1
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 515
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 0         ; if not R1 then PC := 19
  4 [-]: JMP       19           ; PC := 19
  5 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x6200B095"]
  6 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["LOT_ARCHWING"]
  8 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mItemId"]
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mId"]
 13 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 14 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["InvalidItemID"]
 15 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: MOVE      R1 R1        ; R1 := R1
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 519
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_ENDLESS_EXTERMINATION"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 523
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x30BDE7F"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: LOADK     R1 K1        ; R1 := 0
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["isPvp"]
  8 [-]: TEST      R3 0         ; if not R3 then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R3 K3        ; R3 := table
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: GETGLOBAL R5 K5        ; R5 := Lotus_Game
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["LOT_NORMAL_PVP"]
 15 [-]: CALL      R3 3 1       ; R3(R4,R5)
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R3 K3        ; R3 := table
 18 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: GETGLOBAL R5 K5        ; R5 := Lotus_Game
 21 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["LOT_NORMAL"]
 22 [-]: CALL      R3 3 1       ; R3(R4,R5)
 23 [-]: GETUPVAL  R3 U2        ; R3 := U2
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETUPVAL  R4 U3        ; R4 := U3
 27 [-]: TEST      R4 1         ; if R4 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: TEST      R3 0         ; if not R3 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETGLOBAL R4 K3        ; R4 := table
 32 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xE6450C9D"]
 33 [-]: MOVE      R5 R2        ; R5 := R2
 34 [-]: GETGLOBAL R6 K5        ; R6 := Lotus_Game
 35 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["LOT_ARCHWING"]
 36 [-]: CALL      R4 3 1       ; R4(R5,R6)
 37 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0["0x6200B095"]
 38 [-]: GETGLOBAL R6 K5        ; R6 := Lotus_Game
 39 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LOT_SENTINEL"]
 40 [-]: GETGLOBAL R7 K5        ; R7 := Lotus_Game
 41 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["SUIT_SLOT"]
 42 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 43 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mItemId"]
 44 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mId"]
 45 [-]: GETGLOBAL R5 K5        ; R5 := Lotus_Game
 46 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["InvalidItemID"]
 47 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R4 K3        ; R4 := table
 50 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xE6450C9D"]
 51 [-]: MOVE      R5 R2        ; R5 := R2
 52 [-]: GETGLOBAL R6 K5        ; R6 := Lotus_Game
 53 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LOT_SENTINEL"]
 54 [-]: CALL      R4 3 1       ; R4(R5,R6)
 55 [-]: GETUPVAL  R4 U0        ; R4 := U0
 56 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0x968DA9B9"]
 57 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 58 [-]: GETGLOBAL R5 K5        ; R5 := Lotus_Game
 59 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["OT_COMBAT"]
 60 [-]: LE        0 R5 R4      ; if R5 > R4 then PC := 88
 61 [-]: JMP       88           ; PC := 88
 62 [-]: GETGLOBAL R4 K17       ; R4 := 0x400E7765
 63 [-]: GETGLOBAL R5 K18       ; R5 := gRegion
 64 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 65 [-]: TEST      R4 1         ; if R4 then PC := 88
 66 [-]: JMP       88           ; PC := 88
 67 [-]: GETGLOBAL R4 K18       ; R4 := gRegion
 68 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4["0x372CB914"]
 69 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 70 [-]: GETGLOBAL R5 K17       ; R5 := 0x400E7765
 71 [-]: MOVE      R6 R4        ; R6 := R4
 72 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 73 [-]: TEST      R5 1         ; if R5 then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: SELF      R5 R4 K20    ; R6 := R4; R5 := R4["0x8F7453D9"]
 76 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 77 [-]: GETGLOBAL R6 K17       ; R6 := 0x400E7765
 78 [-]: MOVE      R7 R5        ; R7 := R5
 79 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 80 [-]: TEST      R6 1         ; if R6 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETGLOBAL R6 K3        ; R6 := table
 83 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["0xE6450C9D"]
 84 [-]: MOVE      R7 R2        ; R7 := R2
 85 [-]: GETGLOBAL R8 K5        ; R8 := Lotus_Game
 86 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["LOT_OPERATOR"]
 87 [-]: CALL      R6 3 1       ; R6(R7,R8)
 88 [-]: GETGLOBAL R6 K22       ; R6 := 0x63B09107
 89 [-]: MOVE      R7 R2        ; R7 := R2
 90 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 91 [-]: JMP       124          ; PC := 124
 92 [-]: LOADK     R11 K1       ; R11 := 0
 93 [-]: GETGLOBAL R12 K5       ; R12 := Lotus_Game
 94 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["MAX_LoadOutSlot"]
 95 [-]: SUB       R12 R12 K24  ; R12 := R12 - 1
 96 [-]: LOADK     R13 K24      ; R13 := 1
 97 [-]: FORPREP   R11 123      ; R11 -= R13; PC := 123
 98 [-]: SELF      R15 R0 K9    ; R16 := R0; R15 := R0["0x6200B095"]
 99 [-]: MOVE      R17 R10      ; R17 := R10
100 [-]: MOVE      R18 R14      ; R18 := R14
101 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
102 [-]: GETTABLE  R16 R15 K12  ; R16 := R15["mItemId"]
103 [-]: GETTABLE  R16 R16 K13  ; R16 := R16["mId"]
104 [-]: GETGLOBAL R17 K5       ; R17 := Lotus_Game
105 [-]: GETTABLE  R17 R17 K14  ; R17 := R17["InvalidItemID"]
106 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 123
107 [-]: JMP       123          ; PC := 123
108 [-]: GETGLOBAL R16 K5       ; R16 := Lotus_Game
109 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["LOT_ARCHWING"]
110 [-]: EQ        1 R10 R16    ; if R10 == R16 then PC := 120
111 [-]: JMP       120          ; PC := 120
112 [-]: GETUPVAL  R16 U4       ; R16 := U4
113 [-]: MOVE      R17 R10      ; R17 := R10
114 [-]: MOVE      R18 R14      ; R18 := R14
115 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
116 [-]: TEST      R16 0        ; if not R16 then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: ADD       R1 R1 K24    ; R1 := R1 + 1
119 [-]: JMP       123          ; PC := 123
120 [-]: TEST      R3 1         ; if R3 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: ADD       R1 R1 K24    ; R1 := R1 + 1
123 [-]: FORLOOP   R11 98       ; R11 += R13; if R11 <= R12 then begin PC := 98; R14 := R11 end
124 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 92; R8 := R9 end
125 [-]: JMP       92           ; PC := 92
126 [-]: TEST      R3 0         ; if not R3 then PC := 129
127 [-]: JMP       129          ; PC := 129
128 [-]: ADD       R1 R1 K24    ; R1 := R1 + 1
129 [-]: GETUPVAL  R16 U5       ; R16 := U5
130 [-]: CALL      R16 1 2      ; R16 := R16()
131 [-]: TEST      R16 0        ; if not R16 then PC := 134
132 [-]: JMP       134          ; PC := 134
133 [-]: ADD       R1 R1 K24    ; R1 := R1 + 1
134 [-]: GETUPVAL  R16 U6       ; R16 := U6
135 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["0xF81722A2"]
136 [-]: LT        1 R1 K26     ; if R1 < 6 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: MOVE      R17 R0       ; R17 := R0
139 [-]: MOVE      R17 R1       ; R17 := R1
140 [-]: GETUPVAL  R18 U6       ; R18 := U6
141 [-]: GETTABLE  R18 R18 K25  ; R18 := R18["0xF81722A2"]
142 [-]: LT        1 K27 R1     ; if 3 < R1 then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: MOVE      R19 R0       ; R19 := R0
145 [-]: MOVE      R19 R1       ; R19 := R1
146 [-]: LOADK     R20 K26      ; R20 := 6
147 [-]: LOADK     R21 K27      ; R21 := 3
148 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
149 [-]: MOVE      R19 R1       ; R19 := R1
150 [-]: TAILCALL  R16 4 0      ; R16,... := R16(R17,R18,R19)
151 [-]: RETURN    R16 0        ; return R16,...
152 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 583
; #Upvalues:       18
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADNIL   R0 R0        ; R0 := nil
  8 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0x87D2274C"]
 12 [-]: CALL      R3 1 2       ; R3 := R3()
 13 [-]: TEST      R3 0         ; if not R3 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R4 K2        ; R4 := gGameRules
 16 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xA2CB3BC5"]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: MOVE      R2 R4        ; R2 := R4
 19 [-]: TESTSET   R4 R3 0      ; if not R3 then PC := 46 else R4 := R3
 20 [-]: JMP       46           ; PC := 46
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: CALL      R4 1 2       ; R4 := R4()
 23 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["missionType"]
 24 [-]: GETGLOBAL R5 K5        ; R5 := Lotus_Game
 25 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["MT_MASTERY"]
 26 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 44
 27 [-]: JMP       44           ; PC := 44
 28 [-]: GETGLOBAL R4 K7        ; R4 := _T
 29 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["InParkourTutorial"]
 30 [-]: TEST      R4 1         ; if R4 then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: GETGLOBAL R4 K9        ; R4 := _G
 33 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["IsTrainingMissionPractise"]
 34 [-]: TEST      R4 1         ; if R4 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: TEST      R2 1         ; if R2 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETGLOBAL R4 K7        ; R4 := _T
 39 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["eomScreenMode"]
 40 [-]: GETUPVAL  R5 U3        ; R5 := U3
 41 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["ACTUAL_EOM"]
 42 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R4 R0        ; R4 := R0
 45 [-]: MOVE      R4 R1        ; R4 := R1
 46 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 47 [-]: CLOSURE   R6 0         ; R6 := closure(Function #23.1)
 48 [-]: GETUPVAL  R0 U4        ; R0 := U4
 49 [-]: MOVE      R0 R4        ; R0 := R4
 50 [-]: GETUPVAL  R0 U5        ; R0 := U5
 51 [-]: GETUPVAL  R0 U6        ; R0 := U6
 52 [-]: SETTABLE  R5 K13 R6    ; R5["shouldShow"] := R6
 53 [-]: CLOSURE   R6 1         ; R6 := closure(Function #23.2)
 54 [-]: GETUPVAL  R0 U7        ; R0 := U7
 55 [-]: GETUPVAL  R0 U8        ; R0 := U8
 56 [-]: SETTABLE  R5 K14 R6    ; R5["doShow"] := R6
 57 [-]: SETTABLE  R1 K15 R5    ; R1[1] := R5
 58 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 59 [-]: CLOSURE   R7 2         ; R7 := closure(Function #23.3)
 60 [-]: GETUPVAL  R0 U4        ; R0 := U4
 61 [-]: MOVE      R0 R4        ; R0 := R4
 62 [-]: SETTABLE  R6 K13 R7    ; R6["shouldShow"] := R7
 63 [-]: CLOSURE   R7 3         ; R7 := closure(Function #23.4)
 64 [-]: GETUPVAL  R0 U7        ; R0 := U7
 65 [-]: GETUPVAL  R0 U8        ; R0 := U8
 66 [-]: SETTABLE  R6 K14 R7    ; R6["doShow"] := R7
 67 [-]: SETTABLE  R1 K16 R6    ; R1[2] := R6
 68 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 69 [-]: CLOSURE   R8 4         ; R8 := closure(Function #23.5)
 70 [-]: MOVE      R0 R4        ; R0 := R4
 71 [-]: GETUPVAL  R0 U9        ; R0 := U9
 72 [-]: GETUPVAL  R0 U2        ; R0 := U2
 73 [-]: GETUPVAL  R0 U10       ; R0 := U10
 74 [-]: GETUPVAL  R0 U11       ; R0 := U11
 75 [-]: GETUPVAL  R0 U1        ; R0 := U1
 76 [-]: GETUPVAL  R0 U3        ; R0 := U3
 77 [-]: GETUPVAL  R0 U12       ; R0 := U12
 78 [-]: GETUPVAL  R0 U13       ; R0 := U13
 79 [-]: SETTABLE  R7 K13 R8    ; R7["shouldShow"] := R8
 80 [-]: CLOSURE   R8 5         ; R8 := closure(Function #23.6)
 81 [-]: GETUPVAL  R0 U12       ; R0 := U12
 82 [-]: GETUPVAL  R0 U10       ; R0 := U10
 83 [-]: GETUPVAL  R0 U14       ; R0 := U14
 84 [-]: GETUPVAL  R0 U15       ; R0 := U15
 85 [-]: GETUPVAL  R0 U16       ; R0 := U16
 86 [-]: GETUPVAL  R0 U7        ; R0 := U7
 87 [-]: GETUPVAL  R0 U8        ; R0 := U8
 88 [-]: SETTABLE  R7 K14 R8    ; R7["doShow"] := R8
 89 [-]: SETTABLE  R1 K17 R7    ; R1[3] := R7
 90 [-]: GETGLOBAL R8 K18       ; R8 := mMovie
 91 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8["0x1C19D966"]
 92 [-]: LOADK     R10 K20      ; R10 := "RepPanelPVP"
 93 [-]: LOADK     R11 K21      ; R11 := "_visible"
 94 [-]: MOVE      R12 R0       ; R12 := R0
 95 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 96 [-]: GETGLOBAL R8 K18       ; R8 := mMovie
 97 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8["0x1C19D966"]
 98 [-]: LOADK     R10 K22      ; R10 := "RepPanel"
 99 [-]: LOADK     R11 K21      ; R11 := "_visible"
100 [-]: MOVE      R12 R0       ; R12 := R0
101 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
102 [-]: NEWTABLE  R8 0 2       ; R8 := {}
103 [-]: CLOSURE   R9 6         ; R9 := closure(Function #23.7)
104 [-]: MOVE      R0 R4        ; R0 := R4
105 [-]: SETTABLE  R8 K13 R9    ; R8["shouldShow"] := R9
106 [-]: CLOSURE   R9 7         ; R9 := closure(Function #23.8)
107 [-]: GETUPVAL  R0 U7        ; R0 := U7
108 [-]: GETUPVAL  R0 U8        ; R0 := U8
109 [-]: SETTABLE  R8 K14 R9    ; R8["doShow"] := R9
110 [-]: SETTABLE  R1 K23 R8    ; R1[4] := R8
111 [-]: MOVE      R9 R0        ; R9 := R0
112 [-]: LOADK     R10 K15      ; R10 := 1
113 [-]: LEN       R11 R1       ; R11 := # R1
114 [-]: LOADK     R12 K15      ; R12 := 1
115 [-]: FORPREP   R10 131      ; R10 -= R12; PC := 131
116 [-]: GETTABLE  R14 R1 R13   ; R14 := R1[R13]
117 [-]: GETTABLE  R15 R14 K24  ; R15 := R14["0xA11EA1F2"]
118 [-]: CALL      R15 1 2      ; R15 := R15()
119 [-]: TEST      R15 0        ; if not R15 then PC := 131
120 [-]: JMP       131          ; PC := 131
121 [-]: GETTABLE  R15 R14 K25  ; R15 := R14["0xD70CBF55"]
122 [-]: CALL      R15 1 1      ; R15()
123 [-]: MOVE      R9 R1        ; R9 := R1
124 [-]: GETGLOBAL R15 K7       ; R15 := _T
125 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["eomScreenMode"]
126 [-]: GETUPVAL  R16 U3       ; R16 := U3
127 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["QUICK_PREVIEW"]
128 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 131
129 [-]: JMP       131          ; PC := 131
130 [-]: JMP       132          ; PC := 132
131 [-]: FORLOOP   R10 116      ; R10 += R12; if R10 <= R11 then begin PC := 116; R13 := R10 end
132 [-]: TEST      R9 1         ; if R9 then PC := 137
133 [-]: JMP       137          ; PC := 137
134 [-]: MOVE      R15 R1       ; R15 := R1
135 [-]: MOVE      R15 R17      ; R15 := R17
136 [-]: RETURN    R0 1         ; return 
137 [-]: GETUPVAL  R15 U7       ; R15 := U7
138 [-]: SELF      R15 R15 K27  ; R16 := R15; R15 := R15["0x6470BAF4"]
139 [-]: LOADNIL   R17 R17      ; R17 := nil
140 [-]: MOVE      R18 R1       ; R18 := R1
141 [-]: MOVE      R19 R1       ; R19 := R1
142 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
143 [-]: GETUPVAL  R15 U7       ; R15 := U7
144 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15["0xF09FAAA4"]
145 [-]: CALL      R15 2 1      ; R15(R16)
146 [-]: GETUPVAL  R15 U7       ; R15 := U7
147 [-]: SELF      R15 R15 K29  ; R16 := R15; R15 := R15["0xC51A5C9D"]
148 [-]: CALL      R15 2 2      ; R15 := R15(R16)
149 [-]: EQ        0 R0 K30     ; if R0 ~= nil then PC := 168
150 [-]: JMP       168          ; PC := 168
151 [-]: LT        0 K31 R15    ; if 0 >= R15 then PC := 168
152 [-]: JMP       168          ; PC := 168
153 [-]: GETUPVAL  R16 U10      ; R16 := U10
154 [-]: CALL      R16 1 2      ; R16 := R16()
155 [-]: TEST      R16 0        ; if not R16 then PC := 167
156 [-]: JMP       167          ; PC := 167
157 [-]: GETGLOBAL R16 K7       ; R16 := _T
158 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["eomScreenMode"]
159 [-]: GETUPVAL  R17 U3       ; R17 := U3
160 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["ACTUAL_EOM"]
161 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 167
162 [-]: JMP       167          ; PC := 167
163 [-]: LE        0 K16 R15    ; if 2 > R15 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: LOADK     R0 K16       ; R0 := 2
166 [-]: JMP       168          ; PC := 168
167 [-]: LOADK     R0 K15       ; R0 := 1
168 [-]: EQ        1 R0 K30     ; if R0 == nil then PC := 177
169 [-]: JMP       177          ; PC := 177
170 [-]: GETUPVAL  R16 U7       ; R16 := U7
171 [-]: SELF      R16 R16 K32  ; R17 := R16; R16 := R16["0x5B1DCC65"]
172 [-]: MOVE      R18 R0       ; R18 := R0
173 [-]: CALL      R16 3 1      ; R16(R17,R18)
174 [-]: GETUPVAL  R16 U7       ; R16 := U7
175 [-]: SELF      R16 R16 K33  ; R17 := R16; R16 := R16["0xF41D5FCC"]
176 [-]: CALL      R16 2 1      ; R16(R17)
177 [-]: GETGLOBAL R16 K18      ; R16 := mMovie
178 [-]: SELF      R16 R16 K19  ; R17 := R16; R16 := R16["0x1C19D966"]
179 [-]: LOADK     R18 K34      ; R18 := "MenuBar.RightArrow"
180 [-]: LOADK     R19 K21      ; R19 := "_visible"
181 [-]: GETGLOBAL R20 K35      ; R20 := Engine
182 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["0x9490FE70"]
183 [-]: CALL      R20 1 2      ; R20 := R20()
184 [-]: TEST      R20 1        ; if R20 then PC := 188
185 [-]: JMP       188          ; PC := 188
186 [-]: LT        1 K15 R15    ; if 1 < R15 then PC := 189
187 [-]: JMP       189          ; PC := 189
188 [-]: MOVE      R20 R0       ; R20 := R0
189 [-]: MOVE      R20 R1       ; R20 := R1
190 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
191 [-]: GETGLOBAL R16 K18      ; R16 := mMovie
192 [-]: SELF      R16 R16 K19  ; R17 := R16; R16 := R16["0x1C19D966"]
193 [-]: LOADK     R18 K37      ; R18 := "MenuBar.LeftArrow"
194 [-]: LOADK     R19 K21      ; R19 := "_visible"
195 [-]: GETGLOBAL R20 K35      ; R20 := Engine
196 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["0x9490FE70"]
197 [-]: CALL      R20 1 2      ; R20 := R20()
198 [-]: TEST      R20 1        ; if R20 then PC := 202
199 [-]: JMP       202          ; PC := 202
200 [-]: LT        1 K15 R15    ; if 1 < R15 then PC := 203
201 [-]: JMP       203          ; PC := 203
202 [-]: MOVE      R20 R0       ; R20 := R0
203 [-]: MOVE      R20 R1       ; R20 := R1
204 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
205 [-]: RETURN    R0 1         ; return 


; Function #23.1:
;
; Name:            
; Defined at line: 599
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: RETURN    R0 2         ; return R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: TEST      R0 1         ; if R0 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: TEST      R0 1         ; if R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: JMP       18           ; PC := 18
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #23.2:
;
; Name:            
; Defined at line: 607
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xA77DA8EE"]
  3 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["SCOREBOARD"]
  6 [-]: SETTABLE  R2 K1 R3     ; R2["Id"] := R3
  7 [-]: SETTABLE  R2 K3 K4     ; R2["Name"] := "/Lotus/Language/Menu/EndOfMatch_Game_Summary"
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #23.3:
;
; Name:            
; Defined at line: 614
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: RETURN    R0 2         ; return R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #23.4:
;
; Name:            
; Defined at line: 622
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: LOADK     R2 K2        ; R2 := "/Lotus/Language/Menu/Progress_and_Rewards"
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xA77DA8EE"]
  8 [-]: NEWTABLE  R3 0 2       ; R3 := {}
  9 [-]: GETUPVAL  R4 U1        ; R4 := U1
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["ITEMS"]
 11 [-]: SETTABLE  R3 K4 R4     ; R3["Id"] := R4
 12 [-]: SETTABLE  R3 K6 R0     ; R3["Name"] := R0
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #23.5:
;
; Name:            
; Defined at line: 630
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: RETURN    R0 2         ; return R0
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 32
 11 [-]: JMP       32           ; PC := 32
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["affMods"]
 14 [-]: LEN       R1 R1        ; R1 := # R1
 15 [-]: LT        0 K2 R1      ; if 0 >= R1 then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: LOADK     R1 K3        ; R1 := 1
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["affMods"]
 20 [-]: LEN       R2 R2        ; R2 := # R2
 21 [-]: LOADK     R3 K3        ; R3 := 1
 22 [-]: FORPREP   R1 31        ; R1 -= R3; PC := 31
 23 [-]: GETUPVAL  R5 U1        ; R5 := U1
 24 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["affMods"]
 25 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 26 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStanding"]
 27 [-]: LT        0 K2 R5      ; if 0 >= R5 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: MOVE      R0 R1        ; R0 := R1
 30 [-]: JMP       32           ; PC := 32
 31 [-]: FORLOOP   R1 23        ; R1 += R3; if R1 <= R2 then begin PC := 23; R4 := R1 end
 32 [-]: GETUPVAL  R5 U2        ; R5 := U2
 33 [-]: CALL      R5 1 2       ; R5 := R5()
 34 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["syndicateXP"]
 35 [-]: GETUPVAL  R6 U3        ; R6 := U3
 36 [-]: CALL      R6 1 2       ; R6 := R6()
 37 [-]: TEST      R6 0         ; if not R6 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R0 R1        ; R0 := R1
 40 [-]: JMP       58           ; PC := 58
 41 [-]: LT        0 K2 R5      ; if 0 >= R5 then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETUPVAL  R6 U4        ; R6 := U4
 44 [-]: TEST      R6 0         ; if not R6 then PC := 58
 45 [-]: JMP       58           ; PC := 58
 46 [-]: GETUPVAL  R6 U5        ; R6 := U5
 47 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0x87D2274C"]
 48 [-]: CALL      R6 1 2       ; R6 := R6()
 49 [-]: TEST      R6 0         ; if not R6 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETGLOBAL R6 K7        ; R6 := _T
 52 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["eomScreenMode"]
 53 [-]: GETUPVAL  R7 U6        ; R7 := U6
 54 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["ACTUAL_EOM"]
 55 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: MOVE      R0 R1        ; R0 := R1
 58 [-]: GETUPVAL  R6 U7        ; R6 := U7
 59 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["isPvp"]
 60 [-]: TEST      R6 0         ; if not R6 then PC := 65
 61 [-]: JMP       65           ; PC := 65
 62 [-]: GETUPVAL  R6 U8        ; R6 := U8
 63 [-]: CALL      R6 1 2       ; R6 := R6()
 64 [-]: MOVE      R0 R6        ; R0 := R6
 65 [-]: RETURN    R0 2         ; return R0
 66 [-]: RETURN    R0 1         ; return 


; Function #23.6:
;
; Name:            
; Defined at line: 662
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "RepPanelPVP"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  9 [-]: LOADK     R2 K4        ; R2 := "RepPanel"
 10 [-]: LOADK     R3 K3        ; R3 := "_visible"
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: LOADK     R0 K5        ; R0 := ""
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["isPvp"]
 16 [-]: TEST      R1 0         ; if not R1 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 20 [-]: LOADK     R3 K8        ; R3 := "/Lotus/Language/Menu/Challenges"
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 23 [-]: MOVE      R0 R1        ; R0 := R1
 24 [-]: JMP       55           ; PC := 55
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: CALL      R1 1 2       ; R1 := R1()
 27 [-]: TEST      R1 0         ; if not R1 then PC := 49
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 30 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xF81722A2"]
 33 [-]: GETGLOBAL R4 K10       ; R4 := 0x9FAED6BC
 34 [-]: GETUPVAL  R5 U3        ; R5 := U3
 35 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["location"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETUPVAL  R5 U4        ; R5 := U4
 38 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: MOVE      R4 R0        ; R4 := R0
 41 [-]: MOVE      R4 R1        ; R4 := R1
 42 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Onslaught/SanctuaryEliteOnslaughtScoreSummary"
 43 [-]: LOADK     R6 K13       ; R6 := "/Lotus/Language/Onslaught/SanctuaryOnslaughtScoreSummary"
 44 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 45 [-]: MOVE      R4 R0        ; R4 := R0
 46 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 47 [-]: MOVE      R0 R1        ; R0 := R1
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 50 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 51 [-]: LOADK     R3 K14       ; R3 := "/Lotus/Language/Menu/Syndicate_Reputation"
 52 [-]: MOVE      R4 R0        ; R4 := R0
 53 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 54 [-]: MOVE      R0 R1        ; R0 := R1
 55 [-]: GETUPVAL  R1 U5        ; R1 := U5
 56 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0xA77DA8EE"]
 57 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 58 [-]: GETUPVAL  R4 U6        ; R4 := U6
 59 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["REP"]
 60 [-]: SETTABLE  R3 K16 R4    ; R3["Id"] := R4
 61 [-]: SETTABLE  R3 K18 R0    ; R3["Name"] := R0
 62 [-]: MOVE      R4 R1        ; R4 := R1
 63 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 64 [-]: RETURN    R0 1         ; return 


; Function #23.7:
;
; Name:            
; Defined at line: 682
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #23.8:
;
; Name:            
; Defined at line: 685
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xA77DA8EE"]
  3 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["MASTERY"]
  6 [-]: SETTABLE  R2 K1 R3     ; R2["Id"] := R3
  7 [-]: SETTABLE  R2 K3 K4     ; R2["Name"] := ""
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 730
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xF3E132E0"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MUL       R1 R1 K2     ; R1 := R1 * 0.5
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xF595ADDE
  6 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
  7 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
  8 [-]: LOADK     R5 K5        ; R5 := "MenuBar"
  9 [-]: LOADK     R6 K6        ; R6 := "_x"
 10 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 11 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 12 [-]: SUB       R1 R1 R2     ; R1 := R1 - R2
 13 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 14 [-]: GETGLOBAL R1 K7        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["eomScreenMode"]
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["QUICK_PREVIEW"]
 18 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 52
 19 [-]: JMP       52           ; PC := 52
 20 [-]: GETUPVAL  R1 U1        ; R1 := U1
 21 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["mInitialX"]
 22 [-]: CLOSURE   R2 0         ; R2 := closure(Function #24.1)
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: MOVE      R0 R1        ; R0 := R1
 25 [-]: MOVE      R0 R0        ; R0 := R0
 26 [-]: GETGLOBAL R3 K11       ; R3 := math
 27 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xF93F7CC8"]
 28 [-]: SUB       R4 R0 R1     ; R4 := R0 - R1
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: DIV       R3 R3 K13    ; R3 := R3 / 1000
 31 [-]: GETGLOBAL R4 K11       ; R4 := math
 32 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["0x8B011038"]
 33 [-]: MOVE      R5 R3        ; R5 := R3
 34 [-]: LOADK     R6 K15       ; R6 := 0.25
 35 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 36 [-]: MOVE      R3 R4        ; R3 := R4
 37 [-]: GETGLOBAL R4 K16       ; R4 := 0x52E17A90
 38 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 39 [-]: LOADK     R6 K5        ; R6 := "MenuBar"
 40 [-]: GETGLOBAL R7 K17       ; R7 := UISys
 41 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["FlashInstance_SMOOTH_STEP"]
 42 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 43 [-]: MOVE      R9 R2        ; R9 := R2
 44 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 45 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 46 [-]: LOADK     R10 K19      ; R10 := 1
 47 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 48 [-]: MOVE      R10 R3       ; R10 := R3
 49 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 50 [-]: CLOSE     R1           ; SAVE R1,...
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETUPVAL  R1 U1        ; R1 := U1
 53 [-]: SETTABLE  R1 K10 R0    ; R1["mInitialX"] := R0
 54 [-]: GETUPVAL  R1 U1        ; R1 := U1
 55 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1["0xF09FAAA4"]
 56 [-]: CALL      R1 2 1       ; R1(R2)
 57 [-]: RETURN    R0 1         ; return 


; Function #24.1:
;
; Name:            
; Defined at line: 735
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x93034B55
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETUPVAL  R4 U2        ; R4 := U2
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: SETTABLE  R1 K0 R2     ; R1["mInitialX"] := R2
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF09FAAA4"]
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 749
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x17028E8F"]
  8 [-]: LOADK     R2 K4        ; R2 := "MenuBar.Right.Tf.text"
  9 [-]: LOADK     R3 K5        ; R3 := "<MENU_RTRIGGER2>"
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 12 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x17028E8F"]
 13 [-]: LOADK     R2 K6        ; R2 := "MenuBar.Left.Tf.text"
 14 [-]: LOADK     R3 K7        ; R3 := "<MENU_LTRIGGER2>"
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 17 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x1C19D966"]
 18 [-]: LOADK     R2 K9        ; R2 := "MenuBar.RightArrow"
 19 [-]: LOADK     R3 K10       ; R3 := "_visible"
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 23 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x1C19D966"]
 24 [-]: LOADK     R2 K11       ; R2 := "MenuBar.LeftArrow"
 25 [-]: LOADK     R3 K10       ; R3 := "_visible"
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 28 [-]: JMP       51           ; PC := 51
 29 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 30 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x1C19D966"]
 31 [-]: LOADK     R2 K12       ; R2 := "MenuBar.Right"
 32 [-]: LOADK     R3 K10       ; R3 := "_visible"
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 35 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 36 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x1C19D966"]
 37 [-]: LOADK     R2 K13       ; R2 := "MenuBar.Left"
 38 [-]: LOADK     R3 K10       ; R3 := "_visible"
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 41 [-]: GETGLOBAL R0 K14       ; R0 := 0x8C64AFA9
 42 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 43 [-]: LOADK     R2 K15       ; R2 := "MenuBar.LeftArrow.swapDepths"
 44 [-]: LOADK     R3 K16       ; R3 := 8001
 45 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 46 [-]: GETGLOBAL R0 K14       ; R0 := 0x8C64AFA9
 47 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 48 [-]: LOADK     R2 K17       ; R2 := "MenuBar.RightArrow.swapDepths"
 49 [-]: LOADK     R3 K18       ; R3 := 8002
 50 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 51 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 52 [-]: SELF      R0 R0 K19    ; R1 := R0; R0 := R0["0x7E1F26D7"]
 53 [-]: LOADK     R2 K20       ; R2 := "MenuBar.Bg"
 54 [-]: GETGLOBAL R3 K21       ; R3 := _G
 55 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["UIMaterial_SmoothEdgeNoDepthTest"]
 56 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 57 [-]: GETGLOBAL R0 K23       ; R0 := 0x329BDC44
 58 [-]: LOADK     R1 K24       ; R1 := "EE.Interface.Components.List"
 59 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 60 [-]: GETTABLE  R1 R0 K25    ; R1 := R0["0xB40DEC3F"]
 61 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 62 [-]: LOADK     R3 K26       ; R3 := "MenuBar.MenuEntry"
 63 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 64 [-]: MOVE      R1 R0        ; R1 := R0
 65 [-]: GETUPVAL  R1 U0        ; R1 := U0
 66 [-]: SETTABLE  R1 K27 K28   ; R1["mForcedVerticalSeparation"] := 0
 67 [-]: GETUPVAL  R1 U0        ; R1 := U0
 68 [-]: CLOSURE   R2 0         ; R2 := closure(Function #25.1)
 69 [-]: SETTABLE  R1 K29 R2    ; R1["Print"] := R2
 70 [-]: GETUPVAL  R1 U0        ; R1 := U0
 71 [-]: CLOSURE   R2 1         ; R2 := closure(Function #25.2)
 72 [-]: SETTABLE  R1 K30 R2    ; R1["mElementDrawCallback"] := R2
 73 [-]: GETUPVAL  R1 U0        ; R1 := U0
 74 [-]: CLOSURE   R2 2         ; R2 := closure(Function #25.3)
 75 [-]: GETUPVAL  R0 U1        ; R0 := U1
 76 [-]: SETTABLE  R1 K31 R2    ; R1["mOnFocusedCallback"] := R2
 77 [-]: GETUPVAL  R1 U0        ; R1 := U0
 78 [-]: CLOSURE   R2 3         ; R2 := closure(Function #25.4)
 79 [-]: GETUPVAL  R0 U0        ; R0 := U0
 80 [-]: SETTABLE  R1 K32 R2    ; R1["mOnUnfocusedCallback"] := R2
 81 [-]: GETUPVAL  R1 U0        ; R1 := U0
 82 [-]: CLOSURE   R2 4         ; R2 := closure(Function #25.5)
 83 [-]: GETUPVAL  R0 U0        ; R0 := U0
 84 [-]: GETUPVAL  R0 U2        ; R0 := U2
 85 [-]: GETUPVAL  R0 U3        ; R0 := U3
 86 [-]: SETTABLE  R1 K33 R2    ; R1["mOnSelectedCallback"] := R2
 87 [-]: GETUPVAL  R1 U0        ; R1 := U0
 88 [-]: CLOSURE   R2 5         ; R2 := closure(Function #25.6)
 89 [-]: SETTABLE  R1 K34 R2    ; R1["RepositionElements"] := R2
 90 [-]: GETUPVAL  R1 U4        ; R1 := U4
 91 [-]: CALL      R1 1 1       ; R1()
 92 [-]: RETURN    R0 1         ; return 


; Function #25.1:
;
; Name:            
; Defined at line: 768
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mPrefix"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #25.2:
;
; Name:            
; Defined at line: 772
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x17028E8F"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".Label.text"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Name"]
  7 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  8 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x880196A7"]
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K6        ; R4 := "Label"
 12 [-]: LOADK     R5 K7        ; R5 := "textColor"
 13 [-]: GETGLOBAL R6 K8        ; R6 := _G
 14 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["UIColor_White"]
 15 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 16 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 17 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x880196A7"]
 18 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 19 [-]: LOADK     R4 K10       ; R4 := "Bg"
 20 [-]: LOADK     R5 K11       ; R5 := "_alpha"
 21 [-]: LOADK     R6 K12       ; R6 := 0
 22 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 23 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x880196A7"]
 25 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 26 [-]: LOADK     R4 K13       ; R4 := "Bg.SubLine"
 27 [-]: LOADK     R5 K14       ; R5 := "_height"
 28 [-]: LOADK     R6 K15       ; R6 := 0.0099999997764826
 29 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 30 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 31 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x7E1F26D7"]
 32 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 33 [-]: LOADK     R4 K17       ; R4 := ".Bg.Back"
 34 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 35 [-]: GETGLOBAL R4 K8        ; R4 := _G
 36 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["UIMaterial_SmoothEdgeNoDepthTest"]
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 39 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x7E1F26D7"]
 40 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 41 [-]: LOADK     R4 K19       ; R4 := ".Bg.SubLine"
 42 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 43 [-]: GETGLOBAL R4 K8        ; R4 := _G
 44 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["UIMaterial_SmoothEdgeNoDepthTest"]
 45 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 46 [-]: RETURN    R0 1         ; return 


; Function #25.3:
;
; Name:            
; Defined at line: 783
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x25992394"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UISound_Focus"]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K6        ; R4 := "Label"
 10 [-]: LOADK     R5 K7        ; R5 := "textColor"
 11 [-]: GETGLOBAL R6 K1        ; R6 := _G
 12 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["UIColor_Yellow"]
 13 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #25.4:
;
; Name:            
; Defined at line: 788
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mFocusedMenuElement"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mClipName"]
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  5 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
  9 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 10 [-]: LOADK     R4 K4        ; R4 := "Label"
 11 [-]: LOADK     R5 K5        ; R5 := "textColor"
 12 [-]: GETGLOBAL R6 K6        ; R6 := _G
 13 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["UIColor_White"]
 14 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 15 [-]: RETURN    R0 1         ; return 


; Function #25.5:
;
; Name:            
; Defined at line: 794
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mFocusedMenuElement"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 47
  6 [-]: JMP       47           ; PC := 47
  7 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 11 [-]: LOADK     R4 K4        ; R4 := "Btn"
 12 [-]: LOADK     R5 K5        ; R5 := "enabled"
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 15 [-]: GETGLOBAL R1 K6        ; R1 := 0x52E17A90
 16 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 19 [-]: LOADK     R4 K7        ; R4 := ".Bg"
 20 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 21 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 23 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 24 [-]: LOADK     R6 K10       ; R6 := "_alpha"
 25 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 26 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 27 [-]: LOADK     R7 K11       ; R7 := 0
 28 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 29 [-]: LOADK     R7 K12       ; R7 := 0.15000000596046
 30 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 31 [-]: GETGLOBAL R1 K6        ; R1 := 0x52E17A90
 32 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 33 [-]: GETUPVAL  R3 U0        ; R3 := U0
 34 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 35 [-]: LOADK     R4 K13       ; R4 := ".Bg.SubLine"
 36 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 37 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 38 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 39 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 40 [-]: LOADK     R6 K14       ; R6 := "_height"
 41 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 42 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 43 [-]: LOADK     R7 K15       ; R7 := 0.0099999997764826
 44 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 45 [-]: LOADK     R7 K12       ; R7 := 0.15000000596046
 46 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 47 [-]: GETUPVAL  R1 U0        ; R1 := U0
 48 [-]: GETTABLE  R2 R0 K16    ; R2 := R0["mClipName"]
 49 [-]: SETTABLE  R1 K1 R2     ; R1["mFocusedMenuElement"] := R2
 50 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 51 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 52 [-]: GETUPVAL  R3 U0        ; R3 := U0
 53 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 54 [-]: LOADK     R4 K17       ; R4 := "Label"
 55 [-]: LOADK     R5 K18       ; R5 := "textColor"
 56 [-]: GETGLOBAL R6 K19       ; R6 := _G
 57 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["UIColor_White"]
 58 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 59 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 60 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 61 [-]: GETUPVAL  R3 U0        ; R3 := U0
 62 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 63 [-]: LOADK     R4 K4        ; R4 := "Btn"
 64 [-]: LOADK     R5 K5        ; R5 := "enabled"
 65 [-]: MOVE      R6 R0        ; R6 := R0
 66 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 67 [-]: GETGLOBAL R1 K6        ; R1 := 0x52E17A90
 68 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 71 [-]: LOADK     R4 K7        ; R4 := ".Bg"
 72 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 73 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 74 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 75 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 76 [-]: LOADK     R6 K10       ; R6 := "_alpha"
 77 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 78 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 79 [-]: LOADK     R7 K21       ; R7 := 100
 80 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 81 [-]: LOADK     R7 K22       ; R7 := 0.25
 82 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 83 [-]: GETGLOBAL R1 K6        ; R1 := 0x52E17A90
 84 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 85 [-]: GETUPVAL  R3 U0        ; R3 := U0
 86 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mFocusedMenuElement"]
 87 [-]: LOADK     R4 K13       ; R4 := ".Bg.SubLine"
 88 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 89 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 90 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 91 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 92 [-]: LOADK     R6 K14       ; R6 := "_height"
 93 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 94 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 95 [-]: LOADK     R7 K23       ; R7 := 4
 96 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 97 [-]: LOADK     R7 K22       ; R7 := 0.25
 98 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 99 [-]: GETUPVAL  R1 U1        ; R1 := U1
100 [-]: GETTABLE  R2 R0 K24    ; R2 := R0["NewX"]
101 [-]: UNM       R2 R2        ; R2 := - R2
102 [-]: GETTABLE  R3 R0 K25    ; R3 := R0["BgWidth"]
103 [-]: MUL       R3 R3 K26    ; R3 := R3 * 0.5
104 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
105 [-]: CALL      R1 2 1       ; R1(R2)
106 [-]: GETUPVAL  R1 U2        ; R1 := U2
107 [-]: GETTABLE  R2 R0 K27    ; R2 := R0["Id"]
108 [-]: CALL      R1 2 1       ; R1(R2)
109 [-]: RETURN    R0 1         ; return 


; Function #25.6:
;
; Name:            
; Defined at line: 814
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0xC51A5C9D"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: LOADK     R3 K2        ; R3 := 20
  5 [-]: LOADK     R4 K3        ; R4 := 1
  6 [-]: MOVE      R5 R2        ; R5 := R2
  7 [-]: LOADK     R6 K3        ; R6 := 1
  8 [-]: FORPREP   R4 42        ; R4 -= R6; PC := 42
  9 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0["0xD75E681A"]
 10 [-]: MOVE      R10 R7       ; R10 := R7
 11 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 12 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mClipName"]
 13 [-]: SETTABLE  R8 K6 R1     ; R8["NewX"] := R1
 14 [-]: GETGLOBAL R10 K8       ; R10 := 0xF595ADDE
 15 [-]: GETGLOBAL R11 K9       ; R11 := mMovie
 16 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11["0x6B7B470B"]
 17 [-]: MOVE      R13 R9       ; R13 := R9
 18 [-]: LOADK     R14 K11      ; R14 := ".Label"
 19 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 20 [-]: LOADK     R14 K12      ; R14 := "textWidth"
 21 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 22 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 23 [-]: ADD       R10 R10 K2   ; R10 := R10 + 20
 24 [-]: SETTABLE  R8 K7 R10    ; R8["BgWidth"] := R10
 25 [-]: GETTABLE  R10 R8 K7    ; R10 := R8["BgWidth"]
 26 [-]: ADD       R10 R1 R10   ; R10 := R1 + R10
 27 [-]: ADD       R1 R10 R3    ; R1 := R10 + R3
 28 [-]: GETGLOBAL R10 K9       ; R10 := mMovie
 29 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x880196A7"]
 30 [-]: MOVE      R12 R9       ; R12 := R9
 31 [-]: LOADK     R13 K14      ; R13 := "Btn"
 32 [-]: LOADK     R14 K15      ; R14 := "_width"
 33 [-]: GETTABLE  R15 R8 K7    ; R15 := R8["BgWidth"]
 34 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 35 [-]: GETGLOBAL R10 K9       ; R10 := mMovie
 36 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x880196A7"]
 37 [-]: MOVE      R12 R9       ; R12 := R9
 38 [-]: LOADK     R13 K16      ; R13 := "Bg"
 39 [-]: LOADK     R14 K15      ; R14 := "_width"
 40 [-]: GETTABLE  R15 R8 K7    ; R15 := R8["BgWidth"]
 41 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 42 [-]: FORLOOP   R4 9         ; R4 += R6; if R4 <= R5 then begin PC := 9; R7 := R4 end
 43 [-]: LOADK     R10 K3       ; R10 := 1
 44 [-]: MOVE      R11 R2       ; R11 := R2
 45 [-]: LOADK     R12 K3       ; R12 := 1
 46 [-]: FORPREP   R10 59       ; R10 -= R12; PC := 59
 47 [-]: SELF      R14 R0 K4    ; R15 := R0; R14 := R0["0xD75E681A"]
 48 [-]: MOVE      R16 R13      ; R16 := R13
 49 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 50 [-]: GETTABLE  R15 R14 K5   ; R15 := R14["mClipName"]
 51 [-]: GETGLOBAL R16 K9       ; R16 := mMovie
 52 [-]: SELF      R16 R16 K17  ; R17 := R16; R16 := R16["0x1C19D966"]
 53 [-]: MOVE      R18 R15      ; R18 := R15
 54 [-]: LOADK     R19 K18      ; R19 := "_x"
 55 [-]: GETTABLE  R20 R0 K19   ; R20 := R0["mInitialX"]
 56 [-]: GETTABLE  R21 R14 K6   ; R21 := R14["NewX"]
 57 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
 58 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
 59 [-]: FORLOOP   R10 47       ; R10 += R12; if R10 <= R11 then begin PC := 47; R13 := R10 end
 60 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 836
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 842
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2176B11E"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 848
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 16
  3 [-]: JMP       16           ; PC := 16
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x3BC31182"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 854
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: MOVE      R3 R2        ; R3 := R2
  2 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  5 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: LOADK     R7 K3        ; R7 := "_width"
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: MOVE      R3 R4        ; R3 := R4
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0xF595ADDE
 11 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 12 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 13 [-]: MOVE      R7 R0        ; R7 := R0
 14 [-]: LOADK     R8 K5        ; R8 := ".LeftTopCap.BookEndL"
 15 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 16 [-]: LOADK     R8 K3        ; R8 := "_width"
 17 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 18 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 19 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 20 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xD6A79FE9"]
 21 [-]: MOVE      R7 R0        ; R7 := R0
 22 [-]: LOADK     R8 K7        ; R8 := ".Label"
 23 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 24 [-]: LOADK     R8 K8        ; R8 := "text"
 25 [-]: MOVE      R9 R1        ; R9 := R1
 26 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 27 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 28 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: LOADK     R8 K7        ; R8 := ".Label"
 31 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 32 [-]: LOADK     R8 K9        ; R8 := "textWidth"
 33 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 34 [-]: MUL       R6 R4 K10    ; R6 := R4 * 2
 35 [-]: ADD       R6 R6 R5     ; R6 := R6 + R5
 36 [-]: SUB       R6 R3 R6     ; R6 := R3 - R6
 37 [-]: MUL       R6 R6 K11    ; R6 := R6 * 0.5
 38 [-]: SUB       R6 R6 K12    ; R6 := R6 - 10
 39 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 40 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x880196A7"]
 41 [-]: MOVE      R9 R0        ; R9 := R0
 42 [-]: LOADK     R10 K14      ; R10 := "LeftTopCap.LeftLine"
 43 [-]: LOADK     R11 K3       ; R11 := "_width"
 44 [-]: MOVE      R12 R6       ; R12 := R6
 45 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 46 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 47 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x880196A7"]
 48 [-]: MOVE      R9 R0        ; R9 := R0
 49 [-]: LOADK     R10 K15      ; R10 := "RightTopCap.RightLine"
 50 [-]: LOADK     R11 K3       ; R11 := "_width"
 51 [-]: MOVE      R12 R6       ; R12 := R6
 52 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 53 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 54 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x880196A7"]
 55 [-]: MOVE      R9 R0        ; R9 := R0
 56 [-]: LOADK     R10 K16      ; R10 := "LeftTopCap.BookEndL"
 57 [-]: LOADK     R11 K17      ; R11 := "_x"
 58 [-]: GETGLOBAL R12 K4       ; R12 := 0xF595ADDE
 59 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
 60 [-]: SELF      R13 R13 K2   ; R14 := R13; R13 := R13["0x6B7B470B"]
 61 [-]: MOVE      R15 R0       ; R15 := R0
 62 [-]: LOADK     R16 K18      ; R16 := ".LeftTopCap.LeftLine"
 63 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 64 [-]: LOADK     R16 K17      ; R16 := "_x"
 65 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 66 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 67 [-]: ADD       R12 R12 R6   ; R12 := R12 + R6
 68 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 69 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 70 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x880196A7"]
 71 [-]: MOVE      R9 R0        ; R9 := R0
 72 [-]: LOADK     R10 K19      ; R10 := "RightTopCap.BookEndR"
 73 [-]: LOADK     R11 K17      ; R11 := "_x"
 74 [-]: GETGLOBAL R12 K4       ; R12 := 0xF595ADDE
 75 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
 76 [-]: SELF      R13 R13 K2   ; R14 := R13; R13 := R13["0x6B7B470B"]
 77 [-]: MOVE      R15 R0       ; R15 := R0
 78 [-]: LOADK     R16 K20      ; R16 := ".RightTopCap.RightLine"
 79 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 80 [-]: LOADK     R16 K17      ; R16 := "_x"
 81 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 82 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 83 [-]: SUB       R12 R12 R6   ; R12 := R12 - R6
 84 [-]: SUB       R12 R12 R4   ; R12 := R12 - R4
 85 [-]: ADD       R12 R12 K21  ; R12 := R12 + 5
 86 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 87 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 871
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mRowSeparation"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MUL       R2 R2 K1     ; R2 := R2 * 2
  6 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x6B7B470B"]
  8 [-]: MOVE      R5 R0        ; R5 := R0
  9 [-]: LOADK     R6 K4        ; R6 := ".LeftTopCap"
 10 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 11 [-]: LOADK     R6 K5        ; R6 := "_y"
 12 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 13 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 14 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x6B7B470B"]
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: LOADK     R7 K6        ; R7 := ".RightTopCap"
 17 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 18 [-]: LOADK     R7 K5        ; R7 := "_y"
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
 21 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x6B7B470B"]
 22 [-]: MOVE      R7 R0        ; R7 := R0
 23 [-]: LOADK     R8 K7        ; R8 := ".Label"
 24 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 25 [-]: LOADK     R8 K5        ; R8 := "_y"
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: GETGLOBAL R6 K2        ; R6 := mMovie
 28 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x880196A7"]
 29 [-]: MOVE      R8 R0        ; R8 := R0
 30 [-]: LOADK     R9 K9        ; R9 := "LeftTopCap"
 31 [-]: LOADK     R10 K5       ; R10 := "_y"
 32 [-]: SUB       R11 R3 R2    ; R11 := R3 - R2
 33 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 34 [-]: GETGLOBAL R6 K2        ; R6 := mMovie
 35 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x880196A7"]
 36 [-]: MOVE      R8 R0        ; R8 := R0
 37 [-]: LOADK     R9 K10       ; R9 := "RightTopCap"
 38 [-]: LOADK     R10 K5       ; R10 := "_y"
 39 [-]: SUB       R11 R4 R2    ; R11 := R4 - R2
 40 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 41 [-]: GETGLOBAL R6 K2        ; R6 := mMovie
 42 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x880196A7"]
 43 [-]: MOVE      R8 R0        ; R8 := R0
 44 [-]: LOADK     R9 K11       ; R9 := "Label"
 45 [-]: LOADK     R10 K5       ; R10 := "_y"
 46 [-]: SUB       R11 R5 R2    ; R11 := R5 - R2
 47 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 48 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 884
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: LOADK     R4 K0        ; R4 := 0
  2 [-]: LOADK     R5 K0        ; R5 := 0
  3 [-]: LOADK     R6 K0        ; R6 := 0
  4 [-]: MOVE      R7 R0        ; R7 := R0
  5 [-]: GETGLOBAL R8 K1        ; R8 := _T
  6 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["MissionEnded"]
  7 [-]: TEST      R8 0         ; if not R8 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R3 K0        ; R3 := 0
 10 [-]: GETUPVAL  R8 U0        ; R8 := U0
 11 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["0x171EF3D3"]
 12 [-]: MOVE      R9 R0        ; R9 := R0
 13 [-]: GETUPVAL  R10 U1       ; R10 := U1
 14 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0xF81722A2"]
 15 [-]: GETUPVAL  R11 U0       ; R11 := U0
 16 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0x87D2274C"]
 17 [-]: CALL      R11 1 2      ; R11 := R11()
 18 [-]: TEST      R11 0        ; if not R11 then PC := 28
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETGLOBAL R11 K1       ; R11 := _T
 21 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["eomScreenMode"]
 22 [-]: GETUPVAL  R12 U2       ; R12 := U2
 23 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["ACTUAL_EOM"]
 24 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R11 R0       ; R11 := R0
 27 [-]: MOVE      R11 R1       ; R11 := R1
 28 [-]: MOVE      R12 R3       ; R12 := R3
 29 [-]: LOADK     R13 K0       ; R13 := 0
 30 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 31 [-]: CALL      R8 0 5       ; R8,R9,R10,R11 := R8(R9,...)
 32 [-]: MOVE      R7 R11       ; R7 := R11
 33 [-]: MOVE      R6 R10       ; R6 := R10
 34 [-]: MOVE      R5 R9        ; R5 := R9
 35 [-]: MOVE      R4 R8        ; R4 := R8
 36 [-]: LOADK     R8 K8        ; R8 := "RepPanel.RepBar"
 37 [-]: MOVE      R9 R1        ; R9 := R1
 38 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 39 [-]: GETGLOBAL R9 K9        ; R9 := 0xF595ADDE
 40 [-]: GETGLOBAL R10 K10      ; R10 := mMovie
 41 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0x6B7B470B"]
 42 [-]: MOVE      R12 R8       ; R12 := R8
 43 [-]: LOADK     R13 K12      ; R13 := "_width"
 44 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 45 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 46 [-]: SUB       R9 R9 K13    ; R9 := R9 - 2
 47 [-]: GETGLOBAL R10 K14      ; R10 := 0x6374FD98
 48 [-]: GETGLOBAL R11 K15      ; R11 := math
 49 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0xF93F7CC8"]
 50 [-]: DIV       R12 R5 R6    ; R12 := R5 / R6
 51 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 52 [-]: MUL       R11 R11 R9   ; R11 := R11 * R9
 53 [-]: LOADK     R12 K17      ; R12 := 0.0010000000474975
 54 [-]: MOVE      R13 R9       ; R13 := R9
 55 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 56 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 57 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
 58 [-]: MOVE      R13 R8       ; R13 := R8
 59 [-]: LOADK     R14 K19      ; R14 := "Fill"
 60 [-]: LOADK     R15 K12      ; R15 := "_width"
 61 [-]: MOVE      R16 R10      ; R16 := R10
 62 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 63 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 64 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
 65 [-]: MOVE      R13 R8       ; R13 := R8
 66 [-]: LOADK     R14 K19      ; R14 := "Fill"
 67 [-]: LOADK     R15 K20      ; R15 := "_visible"
 68 [-]: MOVE      R16 R1       ; R16 := R1
 69 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 70 [-]: LT        0 R6 K0      ; if R6 >= 0 then PC := 97
 71 [-]: JMP       97           ; PC := 97
 72 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 73 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
 74 [-]: MOVE      R13 R8       ; R13 := R8
 75 [-]: LOADK     R14 K19      ; R14 := "Fill"
 76 [-]: LOADK     R15 K12      ; R15 := "_width"
 77 [-]: MOVE      R16 R10      ; R16 := R10
 78 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 79 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 80 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
 81 [-]: MOVE      R13 R8       ; R13 := R8
 82 [-]: LOADK     R14 K19      ; R14 := "Fill"
 83 [-]: LOADK     R15 K21      ; R15 := "_x"
 84 [-]: GETUPVAL  R16 U3       ; R16 := U3
 85 [-]: SUB       R17 R9 R10   ; R17 := R9 - R10
 86 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
 87 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 88 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 89 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
 90 [-]: MOVE      R13 R8       ; R13 := R8
 91 [-]: LOADK     R14 K19      ; R14 := "Fill"
 92 [-]: LOADK     R15 K22      ; R15 := "_color"
 93 [-]: GETGLOBAL R16 K23      ; R16 := _G
 94 [-]: GETTABLE  R16 R16 K24  ; R16 := R16["UIColor_NegativeReputation"]
 95 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 96 [-]: JMP       112          ; PC := 112
 97 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 98 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
 99 [-]: MOVE      R13 R8       ; R13 := R8
100 [-]: LOADK     R14 K19      ; R14 := "Fill"
101 [-]: LOADK     R15 K21      ; R15 := "_x"
102 [-]: GETUPVAL  R16 U3       ; R16 := U3
103 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
104 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
105 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
106 [-]: MOVE      R13 R8       ; R13 := R8
107 [-]: LOADK     R14 K19      ; R14 := "Fill"
108 [-]: LOADK     R15 K22      ; R15 := "_color"
109 [-]: GETGLOBAL R16 K23      ; R16 := _G
110 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["UIColor_PositiveReputation"]
111 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
112 [-]: GETGLOBAL R11 K26      ; R11 := 0x9FAED6BC
113 [-]: SELF      R12 R0 K27   ; R13 := R0; R12 := R0["0x748988E0"]
114 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
115 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
116 [-]: EQ        1 R11 K28    ; if R11 == "" then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: GETGLOBAL R12 K10      ; R12 := mMovie
119 [-]: SELF      R12 R12 K29  ; R13 := R12; R12 := R12["0x5DB0BD4"]
120 [-]: LOADK     R14 K30      ; R14 := "<"
121 [-]: MOVE      R15 R11      ; R15 := R11
122 [-]: LOADK     R16 K31      ; R16 := ">"
123 [-]: CONCAT    R14 R14 R16  ; R14 := R14 .. R15 .. R16
124 [-]: MOVE      R15 R1       ; R15 := R1
125 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
126 [-]: MOVE      R11 R12      ; R11 := R12
127 [-]: GETGLOBAL R12 K10      ; R12 := mMovie
128 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12["0xD6A79FE9"]
129 [-]: LOADK     R14 K33      ; R14 := "RepPanel.RepTitle"
130 [-]: MOVE      R15 R1       ; R15 := R1
131 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
132 [-]: LOADK     R15 K34      ; R15 := "text"
133 [-]: GETGLOBAL R16 K35      ; R16 := string
134 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["0x639C642A"]
135 [-]: MOVE      R17 R2       ; R17 := R2
136 [-]: CALL      R16 2 2      ; R16 := R16(R17)
137 [-]: LOADK     R17 K37      ; R17 := " ("
138 [-]: GETUPVAL  R18 U1       ; R18 := U1
139 [-]: GETTABLE  R18 R18 K38  ; R18 := R18["0x7E197415"]
140 [-]: MOVE      R19 R5       ; R19 := R5
141 [-]: CALL      R18 2 2      ; R18 := R18(R19)
142 [-]: MOVE      R19 R11      ; R19 := R11
143 [-]: LOADK     R20 K39      ; R20 := ")"
144 [-]: CONCAT    R16 R16 R20  ; R16 := R16 .. R17 .. R18 .. R19 .. R20
145 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
146 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 168
147 [-]: JMP       168          ; PC := 168
148 [-]: LT        0 K0 R6      ; if 0 >= R6 then PC := 168
149 [-]: JMP       168          ; PC := 168
150 [-]: GETGLOBAL R12 K10      ; R12 := mMovie
151 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12["0xD6A79FE9"]
152 [-]: LOADK     R14 K33      ; R14 := "RepPanel.RepTitle"
153 [-]: MOVE      R15 R1       ; R15 := R1
154 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
155 [-]: LOADK     R15 K34      ; R15 := "text"
156 [-]: GETGLOBAL R16 K10      ; R16 := mMovie
157 [-]: SELF      R16 R16 K29  ; R17 := R16; R16 := R16["0x5DB0BD4"]
158 [-]: LOADK     R18 K40      ; R18 := "/Lotus/Language/Syndicates/Max_Rep_For_Title_Reached"
159 [-]: MOVE      R19 R0       ; R19 := R0
160 [-]: NEWTABLE  R20 0 1      ; R20 := {}
161 [-]: GETGLOBAL R21 K35      ; R21 := string
162 [-]: GETTABLE  R21 R21 K36  ; R21 := R21["0x639C642A"]
163 [-]: MOVE      R22 R2       ; R22 := R2
164 [-]: CALL      R21 2 2      ; R21 := R21(R22)
165 [-]: SETTABLE  R20 K41 R21  ; R20["TITLE"] := R21
166 [-]: CALL      R16 5 0      ; R16,... := R16(R17,R18,R19,R20)
167 [-]: CALL      R12 0 1      ; R12(R13,...)
168 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 922
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  45

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/Challenges"
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: LOADK     R2 K3        ; R2 := "RepPanelPVP"
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: LOADK     R1 K4        ; R1 := 0
 12 [-]: GETGLOBAL R2 K5        ; R2 := gRegion
 13 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x372CB914"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETGLOBAL R3 K7        ; R3 := 0x400E7765
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R3 K8        ; R3 := gChallengeMgr
 21 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x6C6ACE40"]
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: MOVE      R1 R3        ; R1 := R3
 26 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 27 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x1C19D966"]
 28 [-]: LOADK     R5 K11       ; R5 := "RepPanelPVP.RepBG1"
 29 [-]: LOADK     R6 K12       ; R6 := "_visible"
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 32 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 33 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x1C19D966"]
 34 [-]: LOADK     R5 K13       ; R5 := "RepPanelPVP.RepName1"
 35 [-]: LOADK     R6 K12       ; R6 := "_visible"
 36 [-]: MOVE      R7 R1        ; R7 := R1
 37 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 38 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 39 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x1C19D966"]
 40 [-]: LOADK     R5 K14       ; R5 := "RepPanelPVP.RepIcon1"
 41 [-]: LOADK     R6 K12       ; R6 := "_visible"
 42 [-]: MOVE      R7 R1        ; R7 := R1
 43 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 44 [-]: LOADNIL   R3 R3        ; R3 := nil
 45 [-]: GETGLOBAL R4 K15       ; R4 := 0xEC274B1A
 46 [-]: LOADK     R5 K16       ; R5 := "ConclaveSyndicate"
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: MOVE      R3 R4        ; R3 := R4
 49 [-]: GETUPVAL  R4 U1        ; R4 := U1
 50 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0xDB2548DF"]
 51 [-]: MOVE      R6 R3        ; R6 := R3
 52 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 53 [-]: GETGLOBAL R5 K18       ; R5 := 0x2C00D429
 54 [-]: LOADK     R6 K19       ; R6 := "/Lotus/Syndicates/"
 55 [-]: SELF      R7 R3 K20    ; R8 := R3; R7 := R3["0x5EC7A3D2"]
 56 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 57 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 58 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 59 [-]: GETGLOBAL R6 K21       ; R6 := 0x7C282057
 60 [-]: MOVE      R7 R5        ; R7 := R5
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 63 [-]: SELF      R7 R7 K1     ; R8 := R7; R7 := R7["0x5DB0BD4"]
 64 [-]: SELF      R9 R6 K22    ; R10 := R6; R9 := R6["0xFA66CF82"]
 65 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 66 [-]: SELF      R9 R9 K20    ; R10 := R9; R9 := R9["0x5EC7A3D2"]
 67 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 68 [-]: MOVE      R10 R0       ; R10 := R0
 69 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 70 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 71 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8["0xD6A79FE9"]
 72 [-]: LOADK     R10 K13      ; R10 := "RepPanelPVP.RepName1"
 73 [-]: LOADK     R11 K24      ; R11 := "text"
 74 [-]: GETGLOBAL R12 K25      ; R12 := string
 75 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["0x639C642A"]
 76 [-]: MOVE      R13 R7       ; R13 := R7
 77 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 78 [-]: CALL      R8 0 1       ; R8(R9,...)
 79 [-]: SELF      R8 R6 K27    ; R9 := R6; R8 := R6["0xF1A9732E"]
 80 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 81 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
 82 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9["0x4443A5E7"]
 83 [-]: LOADK     R11 K14      ; R11 := "RepPanelPVP.RepIcon1"
 84 [-]: MOVE      R12 R8       ; R12 := R8
 85 [-]: GETGLOBAL R13 K29      ; R13 := _G
 86 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["UIMaterial_Smooth"]
 87 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 88 [-]: LOADK     R9 K31       ; R9 := 1
 89 [-]: LOADK     R10 K32      ; R10 := 2
 90 [-]: LOADK     R11 K31      ; R11 := 1
 91 [-]: FORPREP   R9 458       ; R9 -= R11; PC := 458
 92 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
 93 [-]: SELF      R13 R13 K28  ; R14 := R13; R13 := R13["0x4443A5E7"]
 94 [-]: LOADK     R15 K33      ; R15 := "RepPanelPVP.RepBannerIcon"
 95 [-]: MOVE      R16 R12      ; R16 := R12
 96 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 97 [-]: GETGLOBAL R16 K34      ; R16 := reputationIcon
 98 [-]: GETGLOBAL R17 K29      ; R17 := _G
 99 [-]: GETTABLE  R17 R17 K35  ; R17 := R17["UIMaterial_SmoothEdgeNoDepthTest"]
100 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
101 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
102 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x1C19D966"]
103 [-]: LOADK     R15 K36      ; R15 := "RepPanelPVP.RepValue"
104 [-]: MOVE      R16 R12      ; R16 := R12
105 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
106 [-]: LOADK     R16 K12      ; R16 := "_visible"
107 [-]: MOVE      R17 R0       ; R17 := R0
108 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
109 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
110 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x1C19D966"]
111 [-]: LOADK     R15 K37      ; R15 := "RepPanelPVP.RepTitle"
112 [-]: MOVE      R16 R12      ; R16 := R12
113 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
114 [-]: LOADK     R16 K12      ; R16 := "_visible"
115 [-]: MOVE      R17 R0       ; R17 := R0
116 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
117 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
118 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x1C19D966"]
119 [-]: LOADK     R15 K33      ; R15 := "RepPanelPVP.RepBannerIcon"
120 [-]: MOVE      R16 R12      ; R16 := R12
121 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
122 [-]: LOADK     R16 K12      ; R16 := "_visible"
123 [-]: MOVE      R17 R0       ; R17 := R0
124 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
125 [-]: GETGLOBAL R13 K0       ; R13 := mMovie
126 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x1C19D966"]
127 [-]: LOADK     R15 K38      ; R15 := "RepPanelPVP.RepExtraDesc"
128 [-]: MOVE      R16 R12      ; R16 := R12
129 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
130 [-]: LOADK     R16 K12      ; R16 := "_visible"
131 [-]: MOVE      R17 R0       ; R17 := R0
132 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
133 [-]: LOADNIL   R13 R15      ; R13 := R14 := R15 := nil
134 [-]: LOADK     R16 K39      ; R16 := 100
135 [-]: LOADK     R13 K4       ; R13 := 0
136 [-]: GETGLOBAL R17 K40      ; R17 := gPlayerProfileMgr
137 [-]: SELF      R17 R17 K41  ; R18 := R17; R17 := R17["0x21EF7B1A"]
138 [-]: LOADK     R19 K4       ; R19 := 0
139 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
140 [-]: SELF      R17 R17 K42  ; R18 := R17; R17 := R17["0x654F1092"]
141 [-]: CALL      R17 2 2      ; R17 := R17(R18)
142 [-]: GETUPVAL  R18 U2       ; R18 := U2
143 [-]: CALL      R18 1 2      ; R18 := R18()
144 [-]: TEST      R18 0        ; if not R18 then PC := 458
145 [-]: JMP       458          ; PC := 458
146 [-]: GETGLOBAL R18 K43      ; R18 := 0x33D97CD3
147 [-]: CALL      R18 1 2      ; R18 := R18()
148 [-]: GETGLOBAL R19 K7       ; R19 := 0x400E7765
149 [-]: MOVE      R20 R2       ; R20 := R2
150 [-]: CALL      R19 2 2      ; R19 := R19(R20)
151 [-]: TEST      R19 1        ; if R19 then PC := 188
152 [-]: JMP       188          ; PC := 188
153 [-]: LOADK     R19 K4       ; R19 := 0
154 [-]: LOADK     R20 K4       ; R20 := 0
155 [-]: GETGLOBAL R21 K8       ; R21 := gChallengeMgr
156 [-]: SELF      R21 R21 K44  ; R22 := R21; R21 := R21["0x9172BF84"]
157 [-]: MOVE      R23 R2       ; R23 := R2
158 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
159 [-]: SUB       R21 R21 K31  ; R21 := R21 - 1
160 [-]: LOADK     R22 K31      ; R22 := 1
161 [-]: FORPREP   R20 187      ; R20 -= R22; PC := 187
162 [-]: GETGLOBAL R24 K8       ; R24 := gChallengeMgr
163 [-]: SELF      R24 R24 K45  ; R25 := R24; R24 := R24["0x1933B96D"]
164 [-]: MOVE      R26 R2       ; R26 := R2
165 [-]: MOVE      R27 R23      ; R27 := R23
166 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
167 [-]: SELF      R25 R17 K46  ; R26 := R17; R25 := R17["0x2D0B8A86"]
168 [-]: CALL      R25 2 2      ; R25 := R25(R26)
169 [-]: SELF      R25 R25 K47  ; R26 := R25; R25 := R25["0xED61E190"]
170 [-]: MOVE      R27 R24      ; R27 := R24
171 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
172 [-]: GETGLOBAL R26 K7       ; R26 := 0x400E7765
173 [-]: MOVE      R27 R25      ; R27 := R25
174 [-]: CALL      R26 2 2      ; R26 := R26(R27)
175 [-]: TEST      R26 1        ; if R26 then PC := 187
176 [-]: JMP       187          ; PC := 187
177 [-]: GETTABLE  R26 R25 K48  ; R26 := R25["mCategory"]
178 [-]: GETGLOBAL R27 K49      ; R27 := Lotus_Game
179 [-]: GETTABLE  R27 R27 K50  ; R27 := R27["PVPChallengeTypeCategory_DAILY"]
180 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 187
181 [-]: JMP       187          ; PC := 187
182 [-]: SUB       R26 R12 K31  ; R26 := R12 - 1
183 [-]: EQ        0 R19 R26    ; if R19 ~= R26 then PC := 186
184 [-]: JMP       186          ; PC := 186
185 [-]: MOVE      R18 R24      ; R18 := R24
186 [-]: ADD       R19 R19 K31  ; R19 := R19 + 1
187 [-]: FORLOOP   R20 162      ; R20 += R22; if R20 <= R21 then begin PC := 162; R23 := R20 end
188 [-]: SELF      R26 R17 K46  ; R27 := R17; R26 := R17["0x2D0B8A86"]
189 [-]: CALL      R26 2 2      ; R26 := R26(R27)
190 [-]: SELF      R26 R26 K47  ; R27 := R26; R26 := R26["0xED61E190"]
191 [-]: MOVE      R28 R18      ; R28 := R18
192 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
193 [-]: GETGLOBAL R27 K7       ; R27 := 0x400E7765
194 [-]: MOVE      R28 R26      ; R28 := R26
195 [-]: CALL      R27 2 2      ; R27 := R27(R28)
196 [-]: TEST      R27 1        ; if R27 then PC := 458
197 [-]: JMP       458          ; PC := 458
198 [-]: GETGLOBAL R27 K21      ; R27 := 0x7C282057
199 [-]: GETTABLE  R28 R26 K51  ; R28 := R26["mChallengeTypeRefID"]
200 [-]: CALL      R27 2 2      ; R27 := R27(R28)
201 [-]: SELF      R28 R17 K52  ; R29 := R17; R28 := R17["0x434433E0"]
202 [-]: MOVE      R30 R18      ; R30 := R18
203 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
204 [-]: LOADK     R29 K4       ; R29 := 0
205 [-]: GETGLOBAL R30 K7       ; R30 := 0x400E7765
206 [-]: MOVE      R31 R28      ; R31 := R28
207 [-]: CALL      R30 2 2      ; R30 := R30(R31)
208 [-]: TEST      R30 1        ; if R30 then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: SELF      R30 R28 K53  ; R31 := R28; R30 := R28["0xF934701F"]
211 [-]: CALL      R30 2 2      ; R30 := R30(R31)
212 [-]: MOVE      R29 R30      ; R29 := R30
213 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
214 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30["0x1C19D966"]
215 [-]: LOADK     R32 K36      ; R32 := "RepPanelPVP.RepValue"
216 [-]: MOVE      R33 R12      ; R33 := R12
217 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
218 [-]: LOADK     R33 K12      ; R33 := "_visible"
219 [-]: MOVE      R34 R1       ; R34 := R1
220 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
221 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
222 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30["0x1C19D966"]
223 [-]: LOADK     R32 K37      ; R32 := "RepPanelPVP.RepTitle"
224 [-]: MOVE      R33 R12      ; R33 := R12
225 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
226 [-]: LOADK     R33 K12      ; R33 := "_visible"
227 [-]: MOVE      R34 R1       ; R34 := R1
228 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
229 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
230 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30["0x1C19D966"]
231 [-]: LOADK     R32 K33      ; R32 := "RepPanelPVP.RepBannerIcon"
232 [-]: MOVE      R33 R12      ; R33 := R12
233 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
234 [-]: LOADK     R33 K12      ; R33 := "_visible"
235 [-]: MOVE      R34 R1       ; R34 := R1
236 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
237 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
238 [-]: SELF      R30 R30 K10  ; R31 := R30; R30 := R30["0x1C19D966"]
239 [-]: LOADK     R32 K38      ; R32 := "RepPanelPVP.RepExtraDesc"
240 [-]: MOVE      R33 R12      ; R33 := R12
241 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
242 [-]: LOADK     R33 K12      ; R33 := "_visible"
243 [-]: MOVE      R34 R1       ; R34 := R1
244 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
245 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
246 [-]: SELF      R30 R30 K23  ; R31 := R30; R30 := R30["0xD6A79FE9"]
247 [-]: LOADK     R32 K38      ; R32 := "RepPanelPVP.RepExtraDesc"
248 [-]: MOVE      R33 R12      ; R33 := R12
249 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
250 [-]: LOADK     R33 K24      ; R33 := "text"
251 [-]: SELF      R34 R26 K54  ; R35 := R26; R34 := R26["0x88F6DB61"]
252 [-]: GETGLOBAL R36 K55      ; R36 := 0x9FAED6BC
253 [-]: GETTABLE  R37 R27 K56  ; R37 := R27["mLocName"]
254 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
255 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
256 [-]: LOADK     R35 K57      ; R35 := ": "
257 [-]: SELF      R36 R26 K54  ; R37 := R26; R36 := R26["0x88F6DB61"]
258 [-]: GETGLOBAL R38 K55      ; R38 := 0x9FAED6BC
259 [-]: GETTABLE  R39 R27 K58  ; R39 := R27["mLocDescription"]
260 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
261 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
262 [-]: CONCAT    R34 R34 R36  ; R34 := R34 .. R35 .. R36
263 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
264 [-]: GETGLOBAL R30 K59      ; R30 := 0xF595ADDE
265 [-]: SELF      R31 R26 K60  ; R32 := R26; R31 := R26["0xA26EBCBA"]
266 [-]: MOVE      R33 R27      ; R33 := R27
267 [-]: CALL      R31 3 0      ; R31,... := R31(R32,R33)
268 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
269 [-]: MOVE      R13 R30      ; R13 := R30
270 [-]: GETGLOBAL R30 K7       ; R30 := 0x400E7765
271 [-]: MOVE      R31 R28      ; R31 := R28
272 [-]: CALL      R30 2 2      ; R30 := R30(R31)
273 [-]: TEST      R30 1        ; if R30 then PC := 286
274 [-]: JMP       286          ; PC := 286
275 [-]: SELF      R30 R28 K61  ; R31 := R28; R30 := R28["0xBCBBABA8"]
276 [-]: CALL      R30 2 2      ; R30 := R30(R31)
277 [-]: TEST      R30 0        ; if not R30 then PC := 286
278 [-]: JMP       286          ; PC := 286
279 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
280 [-]: SELF      R30 R30 K1   ; R31 := R30; R30 := R30["0x5DB0BD4"]
281 [-]: LOADK     R32 K62      ; R32 := "/Lotus/Language/Actions/CompleteXP"
282 [-]: MOVE      R33 R0       ; R33 := R0
283 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
284 [-]: MOVE      R14 R30      ; R14 := R30
285 [-]: JMP       299          ; PC := 299
286 [-]: LOADK     R16 K63      ; R16 := 20
287 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
288 [-]: SELF      R30 R30 K1   ; R31 := R30; R30 := R30["0x5DB0BD4"]
289 [-]: LOADK     R32 K64      ; R32 := "/Lotus/Language/Menu/Category_IN_PROGRESS"
290 [-]: MOVE      R33 R0       ; R33 := R0
291 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
292 [-]: LOADK     R31 K65      ; R31 := " ("
293 [-]: GETGLOBAL R32 K66      ; R32 := math
294 [-]: GETTABLE  R32 R32 K67  ; R32 := R32["0xF7005A7B"]
295 [-]: MUL       R33 R29 K39  ; R33 := R29 * 100
296 [-]: CALL      R32 2 2      ; R32 := R32(R33)
297 [-]: LOADK     R33 K68      ; R33 := "%)"
298 [-]: CONCAT    R14 R30 R33  ; R14 := R30 .. R31 .. R32 .. R33
299 [-]: EQ        0 R14 K69    ; if R14 ~= nil then PC := 320
300 [-]: JMP       320          ; PC := 320
301 [-]: GETGLOBAL R30 K0       ; R30 := mMovie
302 [-]: SELF      R30 R30 K1   ; R31 := R30; R30 := R30["0x5DB0BD4"]
303 [-]: LOADK     R32 K70      ; R32 := "/Lotus/Language/Syndicates/Neutral"
304 [-]: MOVE      R33 R0       ; R33 := R0
305 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
306 [-]: MOVE      R14 R30      ; R14 := R30
307 [-]: GETTABLE  R30 R4 K71   ; R30 := R4["mTitle"]
308 [-]: EQ        1 R30 K4     ; if R30 == 0 then PC := 320
309 [-]: JMP       320          ; PC := 320
310 [-]: SELF      R30 R6 K72   ; R31 := R6; R30 := R6["0xED874845"]
311 [-]: GETTABLE  R32 R4 K71   ; R32 := R4["mTitle"]
312 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
313 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
314 [-]: SELF      R31 R31 K1   ; R32 := R31; R31 := R31["0x5DB0BD4"]
315 [-]: SELF      R33 R30 K20  ; R34 := R30; R33 := R30["0x5EC7A3D2"]
316 [-]: CALL      R33 2 2      ; R33 := R33(R34)
317 [-]: MOVE      R34 R0       ; R34 := R0
318 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
319 [-]: MOVE      R14 R31      ; R14 := R31
320 [-]: GETGLOBAL R31 K0       ; R31 := mMovie
321 [-]: SELF      R31 R31 K23  ; R32 := R31; R31 := R31["0xD6A79FE9"]
322 [-]: LOADK     R33 K37      ; R33 := "RepPanelPVP.RepTitle"
323 [-]: MOVE      R34 R12      ; R34 := R12
324 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
325 [-]: LOADK     R34 K24      ; R34 := "text"
326 [-]: GETGLOBAL R35 K25      ; R35 := string
327 [-]: GETTABLE  R35 R35 K26  ; R35 := R35["0x639C642A"]
328 [-]: MOVE      R36 R14      ; R36 := R14
329 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
330 [-]: CALL      R31 0 1      ; R31(R32,...)
331 [-]: GETUPVAL  R31 U3       ; R31 := U3
332 [-]: GETTABLE  R31 R31 K73  ; R31 := R31["0xF81722A2"]
333 [-]: LT        1 R13 K4     ; if R13 < 0 then PC := 336
334 [-]: JMP       336          ; PC := 336
335 [-]: MOVE      R32 R0       ; R32 := R0
336 [-]: MOVE      R32 R1       ; R32 := R1
337 [-]: MOVE      R33 R13      ; R33 := R13
338 [-]: GETGLOBAL R34 K55      ; R34 := 0x9FAED6BC
339 [-]: LOADK     R35 K74      ; R35 := "+"
340 [-]: MOVE      R36 R13      ; R36 := R13
341 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
342 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
343 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
344 [-]: MOVE      R32 R0       ; R32 := R0
345 [-]: EQ        0 R13 K4     ; if R13 ~= 0 then PC := 351
346 [-]: JMP       351          ; PC := 351
347 [-]: GETTABLE  R33 R4 K75   ; R33 := R4["mStanding"]
348 [-]: LT        0 R33 K4     ; if R33 >= 0 then PC := 351
349 [-]: JMP       351          ; PC := 351
350 [-]: MOVE      R32 R1       ; R32 := R1
351 [-]: LT        0 R13 K4     ; if R13 >= 0 then PC := 354
352 [-]: JMP       354          ; PC := 354
353 [-]: MOVE      R32 R1       ; R32 := R1
354 [-]: GETGLOBAL R33 K0       ; R33 := mMovie
355 [-]: SELF      R33 R33 K23  ; R34 := R33; R33 := R33["0xD6A79FE9"]
356 [-]: LOADK     R35 K36      ; R35 := "RepPanelPVP.RepValue"
357 [-]: MOVE      R36 R12      ; R36 := R12
358 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
359 [-]: LOADK     R36 K24      ; R36 := "text"
360 [-]: GETGLOBAL R37 K55      ; R37 := 0x9FAED6BC
361 [-]: MOVE      R38 R31      ; R38 := R31
362 [-]: CALL      R37 2 0      ; R37,... := R37(R38)
363 [-]: CALL      R33 0 1      ; R33(R34,...)
364 [-]: GETGLOBAL R33 K0       ; R33 := mMovie
365 [-]: SELF      R33 R33 K76  ; R34 := R33; R33 := R33["0x6B7B470B"]
366 [-]: LOADK     R35 K33      ; R35 := "RepPanelPVP.RepBannerIcon"
367 [-]: MOVE      R36 R12      ; R36 := R12
368 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
369 [-]: LOADK     R36 K77      ; R36 := "_width"
370 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
371 [-]: GETGLOBAL R34 K0       ; R34 := mMovie
372 [-]: SELF      R34 R34 K76  ; R35 := R34; R34 := R34["0x6B7B470B"]
373 [-]: LOADK     R36 K36      ; R36 := "RepPanelPVP.RepValue"
374 [-]: MOVE      R37 R12      ; R37 := R12
375 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
376 [-]: LOADK     R37 K78      ; R37 := "textWidth"
377 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
378 [-]: GETGLOBAL R35 K0       ; R35 := mMovie
379 [-]: SELF      R35 R35 K76  ; R36 := R35; R35 := R35["0x6B7B470B"]
380 [-]: LOADK     R37 K11      ; R37 := "RepPanelPVP.RepBG1"
381 [-]: LOADK     R38 K79      ; R38 := "_x"
382 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
383 [-]: GETGLOBAL R36 K0       ; R36 := mMovie
384 [-]: SELF      R36 R36 K76  ; R37 := R36; R36 := R36["0x6B7B470B"]
385 [-]: LOADK     R38 K11      ; R38 := "RepPanelPVP.RepBG1"
386 [-]: LOADK     R39 K77      ; R39 := "_width"
387 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
388 [-]: GETGLOBAL R37 K59      ; R37 := 0xF595ADDE
389 [-]: MOVE      R38 R36      ; R38 := R36
390 [-]: CALL      R37 2 2      ; R37 := R37(R38)
391 [-]: MUL       R37 R37 K80  ; R37 := R37 * 0.5
392 [-]: ADD       R37 R35 R37  ; R37 := R35 + R37
393 [-]: EQ        0 R12 K31    ; if R12 ~= 1 then PC := 413
394 [-]: JMP       413          ; PC := 413
395 [-]: GETGLOBAL R38 K0       ; R38 := mMovie
396 [-]: SELF      R38 R38 K10  ; R39 := R38; R38 := R38["0x1C19D966"]
397 [-]: LOADK     R40 K33      ; R40 := "RepPanelPVP.RepBannerIcon"
398 [-]: MOVE      R41 R12      ; R41 := R12
399 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
400 [-]: LOADK     R41 K79      ; R41 := "_x"
401 [-]: GETGLOBAL R42 K59      ; R42 := 0xF595ADDE
402 [-]: MOVE      R43 R34      ; R43 := R34
403 [-]: CALL      R42 2 2      ; R42 := R42(R43)
404 [-]: MUL       R42 R42 K80  ; R42 := R42 * 0.5
405 [-]: ADD       R42 R37 R42  ; R42 := R37 + R42
406 [-]: GETGLOBAL R43 K59      ; R43 := 0xF595ADDE
407 [-]: MOVE      R44 R33      ; R44 := R33
408 [-]: CALL      R43 2 2      ; R43 := R43(R44)
409 [-]: MUL       R43 R43 K80  ; R43 := R43 * 0.5
410 [-]: ADD       R42 R42 R43  ; R42 := R42 + R43
411 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
412 [-]: JMP       431          ; PC := 431
413 [-]: GETGLOBAL R38 K0       ; R38 := mMovie
414 [-]: SELF      R38 R38 K10  ; R39 := R38; R38 := R38["0x1C19D966"]
415 [-]: LOADK     R40 K33      ; R40 := "RepPanelPVP.RepBannerIcon"
416 [-]: MOVE      R41 R12      ; R41 := R12
417 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
418 [-]: LOADK     R41 K79      ; R41 := "_x"
419 [-]: GETGLOBAL R42 K59      ; R42 := 0xF595ADDE
420 [-]: MOVE      R43 R34      ; R43 := R34
421 [-]: CALL      R42 2 2      ; R42 := R42(R43)
422 [-]: MUL       R42 R42 K80  ; R42 := R42 * 0.5
423 [-]: ADD       R42 R37 R42  ; R42 := R37 + R42
424 [-]: GETGLOBAL R43 K59      ; R43 := 0xF595ADDE
425 [-]: MOVE      R44 R33      ; R44 := R33
426 [-]: CALL      R43 2 2      ; R43 := R43(R44)
427 [-]: MUL       R43 R43 K80  ; R43 := R43 * 0.5
428 [-]: ADD       R42 R42 R43  ; R42 := R42 + R43
429 [-]: SUB       R42 R42 K81  ; R42 := R42 - 12
430 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
431 [-]: EQ        0 R15 K69    ; if R15 ~= nil then PC := 442
432 [-]: JMP       442          ; PC := 442
433 [-]: GETUPVAL  R38 U3       ; R38 := U3
434 [-]: GETTABLE  R38 R38 K73  ; R38 := R38["0xF81722A2"]
435 [-]: MOVE      R39 R32      ; R39 := R32
436 [-]: GETGLOBAL R40 K29      ; R40 := _G
437 [-]: GETTABLE  R40 R40 K82  ; R40 := R40["UIColor_NegativeReputation"]
438 [-]: GETGLOBAL R41 K29      ; R41 := _G
439 [-]: GETTABLE  R41 R41 K83  ; R41 := R41["UIColor_PositiveReputation"]
440 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
441 [-]: MOVE      R15 R38      ; R15 := R38
442 [-]: GETGLOBAL R38 K0       ; R38 := mMovie
443 [-]: SELF      R38 R38 K10  ; R39 := R38; R38 := R38["0x1C19D966"]
444 [-]: LOADK     R40 K36      ; R40 := "RepPanelPVP.RepValue"
445 [-]: MOVE      R41 R12      ; R41 := R12
446 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
447 [-]: LOADK     R41 K84      ; R41 := "textColor"
448 [-]: MOVE      R42 R15      ; R42 := R15
449 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
450 [-]: GETGLOBAL R38 K0       ; R38 := mMovie
451 [-]: SELF      R38 R38 K10  ; R39 := R38; R38 := R38["0x1C19D966"]
452 [-]: LOADK     R40 K36      ; R40 := "RepPanelPVP.RepValue"
453 [-]: MOVE      R41 R12      ; R41 := R12
454 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
455 [-]: LOADK     R41 K85      ; R41 := "_alpha"
456 [-]: MOVE      R42 R16      ; R42 := R16
457 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
458 [-]: FORLOOP   R9 92        ; R9 += R11; if R9 <= R10 then begin PC := 92; R12 := R9 end
459 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1063
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 16
  2 [-]: JMP       16           ; PC := 16
  3 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x26581636"]
  5 [-]: LOADK     R4 K2        ; R4 := "RepPanel.RepBG1"
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x7C282057
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
  9 [-]: CALL      R2 0 1       ; R2(R3,...)
 10 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 11 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x1C19D966"]
 12 [-]: LOADK     R4 K2        ; R4 := "RepPanel.RepBG1"
 13 [-]: LOADK     R5 K5        ; R5 := "_alpha"
 14 [-]: LOADK     R6 K6        ; R6 := 60
 15 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 16 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1070
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 0         ; if not R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7C282057
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0x25992394"]
  8 [-]: SELF      R4 R2 K2     ; R5 := R2; R4 := R2["0xF5D5FF1"]
  9 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 10 [-]: CALL      R3 0 1       ; R3(R4,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1077
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7C282057
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0x25992394"]
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 1       ; R3(R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1084
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xF595ADDE
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  4 [-]: LOADK     R3 K3        ; R3 := "RepPanel.RepBG2"
  5 [-]: LOADK     R4 K4        ; R4 := "_y"
  6 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
  7 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  9 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 10 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
 11 [-]: LOADK     R4 K5        ; R4 := "RepPanel.RepBG4"
 12 [-]: LOADK     R5 K4        ; R5 := "_y"
 13 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 14 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 15 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
 16 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 17 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
 18 [-]: LOADK     R5 K5        ; R5 := "RepPanel.RepBG4"
 19 [-]: LOADK     R6 K6        ; R6 := "_height"
 20 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 21 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 22 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 23 [-]: SUB       R2 R1 R0     ; R2 := R1 - R0
 24 [-]: DIV       R2 R2 K7     ; R2 := R2 / 4
 25 [-]: SUB       R2 R2 K8     ; R2 := R2 - 8
 26 [-]: MOVE      R3 R0        ; R3 := R0
 27 [-]: LOADK     R4 K9        ; R4 := 2
 28 [-]: LOADK     R5 K10       ; R5 := 5
 29 [-]: LOADK     R6 K11       ; R6 := 1
 30 [-]: FORPREP   R4 97        ; R4 -= R6; PC := 97
 31 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 32 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 33 [-]: LOADK     R10 K13      ; R10 := "RepPanel.RepIcon"
 34 [-]: MOVE      R11 R7       ; R11 := R7
 35 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 36 [-]: LOADK     R11 K14      ; R11 := "_visible"
 37 [-]: MOVE      R12 R0       ; R12 := R0
 38 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 39 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 40 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 41 [-]: LOADK     R10 K15      ; R10 := "RepPanel.RepBannerIcon"
 42 [-]: MOVE      R11 R7       ; R11 := R7
 43 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 44 [-]: LOADK     R11 K14      ; R11 := "_visible"
 45 [-]: MOVE      R12 R0       ; R12 := R0
 46 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 47 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 48 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 49 [-]: LOADK     R10 K16      ; R10 := "RepPanel.RepBar"
 50 [-]: MOVE      R11 R7       ; R11 := R7
 51 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 52 [-]: LOADK     R11 K14      ; R11 := "_visible"
 53 [-]: MOVE      R12 R0       ; R12 := R0
 54 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 55 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 56 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 57 [-]: LOADK     R10 K17      ; R10 := "RepPanel.RepBG"
 58 [-]: MOVE      R11 R7       ; R11 := R7
 59 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 60 [-]: LOADK     R11 K6       ; R11 := "_height"
 61 [-]: MOVE      R12 R2       ; R12 := R2
 62 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 63 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 64 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 65 [-]: LOADK     R10 K17      ; R10 := "RepPanel.RepBG"
 66 [-]: MOVE      R11 R7       ; R11 := R7
 67 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 68 [-]: LOADK     R11 K4       ; R11 := "_y"
 69 [-]: MOVE      R12 R3       ; R12 := R3
 70 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 71 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 72 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 73 [-]: LOADK     R10 K18      ; R10 := "RepPanel.RepName"
 74 [-]: MOVE      R11 R7       ; R11 := R7
 75 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 76 [-]: LOADK     R11 K4       ; R11 := "_y"
 77 [-]: ADD       R12 R3 K19   ; R12 := R3 + 40
 78 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 79 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 80 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 81 [-]: LOADK     R10 K20      ; R10 := "RepPanel.RepValue"
 82 [-]: MOVE      R11 R7       ; R11 := R7
 83 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 84 [-]: LOADK     R11 K4       ; R11 := "_y"
 85 [-]: ADD       R12 R3 K21   ; R12 := R3 + 78
 86 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 87 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 88 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
 89 [-]: LOADK     R10 K22      ; R10 := "RepPanel.RepTitle"
 90 [-]: MOVE      R11 R7       ; R11 := R7
 91 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 92 [-]: LOADK     R11 K4       ; R11 := "_y"
 93 [-]: ADD       R12 R3 K23   ; R12 := R3 + 125
 94 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 95 [-]: ADD       R8 R3 R2     ; R8 := R3 + R2
 96 [-]: ADD       R3 R8 K24    ; R3 := R8 + 11
 97 [-]: FORLOOP   R4 31        ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
 98 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
 99 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
100 [-]: LOADK     R10 K25      ; R10 := "RepPanel.RepName5"
101 [-]: LOADK     R11 K14      ; R11 := "_visible"
102 [-]: MOVE      R12 R1       ; R12 := R1
103 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
104 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
105 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
106 [-]: LOADK     R10 K26      ; R10 := "RepPanel.RepValue5"
107 [-]: LOADK     R11 K14      ; R11 := "_visible"
108 [-]: MOVE      R12 R1       ; R12 := R1
109 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
110 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
111 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
112 [-]: LOADK     R10 K27      ; R10 := "RepPanel.RepTitle5"
113 [-]: LOADK     R11 K14      ; R11 := "_visible"
114 [-]: MOVE      R12 R1       ; R12 := R1
115 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
116 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
117 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x1C19D966"]
118 [-]: LOADK     R10 K28      ; R10 := "RepPanel.RepBG5"
119 [-]: LOADK     R11 K14      ; R11 := "_visible"
120 [-]: MOVE      R12 R1       ; R12 := R1
121 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
122 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1108
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: NEWTABLE  R0 10 0      ; R0 := {}
  6 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Onslaught/RankS"
  7 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Onslaught/RankAP"
  8 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Onslaught/RankA"
  9 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Onslaught/RankAM"
 10 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Onslaught/RankBP"
 11 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Onslaught/RankB"
 12 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Onslaught/RankBM"
 13 [-]: LOADK     R8 K7        ; R8 := "/Lotus/Language/Onslaught/RankCP"
 14 [-]: LOADK     R9 K8        ; R9 := "/Lotus/Language/Onslaught/RankC"
 15 [-]: LOADK     R10 K9       ; R10 := "/Lotus/Language/Onslaught/RankCM"
 16 [-]: SETLIST   R0 10 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 10
 17 [-]: GETGLOBAL R1 K10       ; R1 := 0xEC274B1A
 18 [-]: LOADK     R2 K11       ; R2 := "AvgWaveRank"
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K10       ; R2 := 0xEC274B1A
 21 [-]: LOADK     R3 K12       ; R3 := "Kills"
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K10       ; R3 := 0xEC274B1A
 24 [-]: LOADK     R4 K13       ; R4 := "VIPKills"
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K10       ; R4 := 0xEC274B1A
 27 [-]: LOADK     R5 K14       ; R5 := "Score"
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: GETGLOBAL R5 K10       ; R5 := 0xEC274B1A
 30 [-]: LOADK     R6 K15       ; R6 := "WaveClearScore"
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
 33 [-]: LOADK     R7 K16       ; R7 := "Wave"
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: LOADK     R7 K17       ; R7 := 10
 36 [-]: LOADK     R8 K18       ; R8 := 1000
 37 [-]: GETGLOBAL R9 K19       ; R9 := gGameConfig
 38 [-]: SELF      R9 R9 K20    ; R10 := R9; R9 := R9["0xAAB5C920"]
 39 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
 40 [-]: LOADK     R12 K21      ; R12 := "LibrarySyndicate"
 41 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 42 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 43 [-]: SELF      R10 R9 K22   ; R11 := R9; R10 := R9["0xF1A9732E"]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: GETGLOBAL R11 K23      ; R11 := 0xE6DC43B0
 46 [-]: LOADK     R12 K24      ; R12 := "/Lotus/Language/Menu/MenuGotoSimaris"
 47 [-]: LOADNIL   R13 R13      ; R13 := nil
 48 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 49 [-]: LOADK     R12 K25      ; R12 := 16744196
 50 [-]: LOADK     R13 K17      ; R13 := 10
 51 [-]: LOADK     R14 K26      ; R14 := 0
 52 [-]: LOADK     R15 K26      ; R15 := 0
 53 [-]: LOADK     R16 K26      ; R16 := 0
 54 [-]: LOADK     R17 K26      ; R17 := 0
 55 [-]: LOADK     R18 K27      ; R18 := 1
 56 [-]: GETUPVAL  R19 U1       ; R19 := U1
 57 [-]: GETTABLE  R19 R19 K28  ; R19 := R19["0x87D2274C"]
 58 [-]: CALL      R19 1 2      ; R19 := R19()
 59 [-]: TEST      R19 0        ; if not R19 then PC := 98
 60 [-]: JMP       98           ; PC := 98
 61 [-]: GETGLOBAL R19 K29      ; R19 := gGameRules
 62 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xED0EE7FB"]
 63 [-]: MOVE      R21 R1       ; R21 := R1
 64 [-]: LOADK     R22 K17      ; R22 := 10
 65 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 66 [-]: MOVE      R13 R19      ; R13 := R19
 67 [-]: GETGLOBAL R19 K29      ; R19 := gGameRules
 68 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xED0EE7FB"]
 69 [-]: MOVE      R21 R2       ; R21 := R2
 70 [-]: LOADK     R22 K26      ; R22 := 0
 71 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 72 [-]: MOVE      R14 R19      ; R14 := R19
 73 [-]: GETGLOBAL R19 K29      ; R19 := gGameRules
 74 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xED0EE7FB"]
 75 [-]: MOVE      R21 R3       ; R21 := R3
 76 [-]: LOADK     R22 K26      ; R22 := 0
 77 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 78 [-]: MOVE      R15 R19      ; R15 := R19
 79 [-]: GETGLOBAL R19 K29      ; R19 := gGameRules
 80 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xED0EE7FB"]
 81 [-]: MOVE      R21 R5       ; R21 := R5
 82 [-]: LOADK     R22 K26      ; R22 := 0
 83 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 84 [-]: MOVE      R16 R19      ; R16 := R19
 85 [-]: GETGLOBAL R19 K29      ; R19 := gGameRules
 86 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xED0EE7FB"]
 87 [-]: MOVE      R21 R4       ; R21 := R4
 88 [-]: LOADK     R22 K26      ; R22 := 0
 89 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 90 [-]: MOVE      R17 R19      ; R17 := R19
 91 [-]: GETGLOBAL R19 K29      ; R19 := gGameRules
 92 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0xED0EE7FB"]
 93 [-]: MOVE      R21 R6       ; R21 := R6
 94 [-]: LOADK     R22 K26      ; R22 := 0
 95 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 96 [-]: ADD       R18 R19 K27  ; R18 := R19 + 1
 97 [-]: JMP       161          ; PC := 161
 98 [-]: LOADNIL   R19 R19      ; R19 := nil
 99 [-]: GETUPVAL  R20 U2       ; R20 := U2
100 [-]: SELF      R20 R20 K31  ; R21 := R20; R20 := R20["0xFA1F022C"]
101 [-]: CALL      R20 2 2      ; R20 := R20(R21)
102 [-]: GETGLOBAL R21 K32      ; R21 := gPlayerProfileMgr
103 [-]: SELF      R21 R21 K33  ; R22 := R21; R21 := R21["0x21EF7B1A"]
104 [-]: LOADK     R23 K26      ; R23 := 0
105 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
106 [-]: SELF      R21 R21 K34  ; R22 := R21; R21 := R21["0x144A28F9"]
107 [-]: CALL      R21 2 2      ; R21 := R21(R22)
108 [-]: LOADK     R22 K27      ; R22 := 1
109 [-]: LEN       R23 R20      ; R23 := # R20
110 [-]: LOADK     R24 K27      ; R24 := 1
111 [-]: FORPREP   R22 118      ; R22 -= R24; PC := 118
112 [-]: GETTABLE  R26 R20 R25  ; R26 := R20[R25]
113 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["playerName"]
114 [-]: EQ        0 R26 R21    ; if R26 ~= R21 then PC := 118
115 [-]: JMP       118          ; PC := 118
116 [-]: GETTABLE  R19 R20 R25  ; R19 := R20[R25]
117 [-]: JMP       119          ; PC := 119
118 [-]: FORLOOP   R22 112      ; R22 += R24; if R22 <= R23 then begin PC := 112; R25 := R22 end
119 [-]: GETGLOBAL R26 K36      ; R26 := 0x400E7765
120 [-]: MOVE      R27 R19      ; R27 := R19
121 [-]: CALL      R26 2 2      ; R26 := R26(R27)
122 [-]: TEST      R26 1        ; if R26 then PC := 161
123 [-]: JMP       161          ; PC := 161
124 [-]: LOADK     R26 K27      ; R26 := 1
125 [-]: GETTABLE  R27 R19 K37  ; R27 := R19["extraStats"]
126 [-]: LEN       R27 R27      ; R27 := # R27
127 [-]: LOADK     R28 K27      ; R28 := 1
128 [-]: FORPREP   R26 160      ; R26 -= R28; PC := 160
129 [-]: GETTABLE  R30 R19 K37  ; R30 := R19["extraStats"]
130 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
131 [-]: GETTABLE  R31 R30 K38  ; R31 := R30["name"]
132 [-]: EQ        0 R31 K39    ; if R31 ~= "EEFinalRank" then PC := 136
133 [-]: JMP       136          ; PC := 136
134 [-]: GETTABLE  R13 R30 K40  ; R13 := R30["value"]
135 [-]: JMP       160          ; PC := 160
136 [-]: GETTABLE  R31 R30 K38  ; R31 := R30["name"]
137 [-]: EQ        0 R31 K41    ; if R31 ~= "EEKills" then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: GETTABLE  R14 R30 K40  ; R14 := R30["value"]
140 [-]: JMP       160          ; PC := 160
141 [-]: GETTABLE  R31 R30 K38  ; R31 := R30["name"]
142 [-]: EQ        0 R31 K42    ; if R31 ~= "EEVipKills" then PC := 146
143 [-]: JMP       146          ; PC := 146
144 [-]: GETTABLE  R15 R30 K40  ; R15 := R30["value"]
145 [-]: JMP       160          ; PC := 160
146 [-]: GETTABLE  R31 R30 K38  ; R31 := R30["name"]
147 [-]: EQ        0 R31 K43    ; if R31 ~= "EETotal" then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: GETTABLE  R17 R30 K40  ; R17 := R30["value"]
150 [-]: JMP       160          ; PC := 160
151 [-]: GETTABLE  R31 R30 K38  ; R31 := R30["name"]
152 [-]: EQ        0 R31 K44    ; if R31 ~= "EEWaveScore" then PC := 156
153 [-]: JMP       156          ; PC := 156
154 [-]: GETTABLE  R16 R30 K40  ; R16 := R30["value"]
155 [-]: JMP       160          ; PC := 160
156 [-]: GETTABLE  R31 R30 K38  ; R31 := R30["name"]
157 [-]: EQ        0 R31 K45    ; if R31 ~= "EEWaveReached" then PC := 160
158 [-]: JMP       160          ; PC := 160
159 [-]: GETTABLE  R18 R30 K40  ; R18 := R30["value"]
160 [-]: FORLOOP   R26 129      ; R26 += R28; if R26 <= R27 then begin PC := 129; R29 := R26 end
161 [-]: GETGLOBAL R31 K46      ; R31 := mMovie
162 [-]: SELF      R31 R31 K47  ; R32 := R31; R31 := R31["0x5DB0BD4"]
163 [-]: LOADK     R33 K24      ; R33 := "/Lotus/Language/Menu/MenuGotoSimaris"
164 [-]: MOVE      R34 R1       ; R34 := R1
165 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
166 [-]: GETUPVAL  R32 U3       ; R32 := U3
167 [-]: LOADK     R33 K48      ; R33 := "RepPanel"
168 [-]: MOVE      R34 R31      ; R34 := R31
169 [-]: CALL      R32 3 1      ; R32(R33,R34)
170 [-]: GETGLOBAL R32 K46      ; R32 := mMovie
171 [-]: SELF      R32 R32 K49  ; R33 := R32; R32 := R32["0x1C19D966"]
172 [-]: LOADK     R34 K50      ; R34 := "RepPanel.Label"
173 [-]: LOADK     R35 K51      ; R35 := "text"
174 [-]: MOVE      R36 R11      ; R36 := R11
175 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
176 [-]: GETGLOBAL R32 K46      ; R32 := mMovie
177 [-]: SELF      R32 R32 K49  ; R33 := R32; R32 := R32["0x1C19D966"]
178 [-]: LOADK     R34 K52      ; R34 := "RepPanel.RepName1"
179 [-]: LOADK     R35 K53      ; R35 := "_visible"
180 [-]: MOVE      R36 R0       ; R36 := R0
181 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
182 [-]: GETGLOBAL R32 K46      ; R32 := mMovie
183 [-]: SELF      R32 R32 K54  ; R33 := R32; R32 := R32["0x4443A5E7"]
184 [-]: LOADK     R34 K55      ; R34 := "RepPanel.RepIcon1"
185 [-]: MOVE      R35 R10      ; R35 := R10
186 [-]: GETGLOBAL R36 K56      ; R36 := _G
187 [-]: GETTABLE  R36 R36 K57  ; R36 := R36["UIMaterial_Smooth"]
188 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
189 [-]: GETGLOBAL R32 K46      ; R32 := mMovie
190 [-]: SELF      R32 R32 K47  ; R33 := R32; R32 := R32["0x5DB0BD4"]
191 [-]: GETTABLE  R34 R0 R13   ; R34 := R0[R13]
192 [-]: MOVE      R35 R0       ; R35 := R0
193 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
194 [-]: GETUPVAL  R33 U4       ; R33 := U4
195 [-]: CALL      R33 1 1      ; R33()
196 [-]: CLOSURE   R33 0        ; R33 := closure(Function #37.1)
197 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
198 [-]: SELF      R34 R34 K58  ; R35 := R34; R34 := R34["0x17028E8F"]
199 [-]: LOADK     R36 K59      ; R36 := "Title.text"
200 [-]: LOADK     R37 K60      ; R37 := "/Lotus/Language/Onslaught/EndOfMatchWaves"
201 [-]: NEWTABLE  R38 0 1      ; R38 := {}
202 [-]: SETTABLE  R38 K61 R18  ; R38["VALUE"] := R18
203 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
204 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
205 [-]: SELF      R34 R34 K62  ; R35 := R34; R34 := R34["0xD6A79FE9"]
206 [-]: LOADK     R36 K63      ; R36 := "RepPanel.RepValue1"
207 [-]: LOADK     R37 K51      ; R37 := "text"
208 [-]: LOADK     R38 K64      ; R38 := "<p><font face=\"Roboto\" size=\"180\"><b>"
209 [-]: MOVE      R39 R32      ; R39 := R32
210 [-]: LOADK     R40 K65      ; R40 := "</b></font></p>"
211 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
212 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
213 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
214 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
215 [-]: LOADK     R36 K63      ; R36 := "RepPanel.RepValue1"
216 [-]: LOADK     R37 K66      ; R37 := "_y"
217 [-]: LOADK     R38 K67      ; R38 := 270
218 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
219 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
220 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
221 [-]: LOADK     R36 K63      ; R36 := "RepPanel.RepValue1"
222 [-]: LOADK     R37 K68      ; R37 := "_color"
223 [-]: MOVE      R38 R12      ; R38 := R12
224 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
225 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
226 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
227 [-]: LOADK     R36 K69      ; R36 := "RepPanel.RepBannerIcon1"
228 [-]: LOADK     R37 K53      ; R37 := "_visible"
229 [-]: MOVE      R38 R0       ; R38 := R0
230 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
231 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
232 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
233 [-]: LOADK     R36 K70      ; R36 := "RepPanel.RepTitle1"
234 [-]: LOADK     R37 K53      ; R37 := "_visible"
235 [-]: MOVE      R38 R0       ; R38 := R0
236 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
237 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
238 [-]: SELF      R34 R34 K58  ; R35 := R34; R34 := R34["0x17028E8F"]
239 [-]: LOADK     R36 K71      ; R36 := "RepPanel.RepName2.text"
240 [-]: LOADK     R37 K72      ; R37 := "/Lotus/Language/Onslaught/EndOfMatchKills"
241 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
242 [-]: MOVE      R34 R33      ; R34 := R33
243 [-]: LOADK     R35 K73      ; R35 := 2
244 [-]: GETUPVAL  R36 U5       ; R36 := U5
245 [-]: GETTABLE  R36 R36 K74  ; R36 := R36["0x7E197415"]
246 [-]: MUL       R37 R14 R7   ; R37 := R14 * R7
247 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
248 [-]: CALL      R34 0 1      ; R34(R35,...)
249 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
250 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
251 [-]: LOADK     R36 K75      ; R36 := "RepPanel.RepValue2"
252 [-]: LOADK     R37 K68      ; R37 := "_color"
253 [-]: MOVE      R38 R12      ; R38 := R12
254 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
255 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
256 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
257 [-]: LOADK     R36 K76      ; R36 := "RepPanel.RepTitle2"
258 [-]: LOADK     R37 K51      ; R37 := "text"
259 [-]: GETGLOBAL R38 K77      ; R38 := 0x9FAED6BC
260 [-]: MOVE      R39 R14      ; R39 := R14
261 [-]: CALL      R38 2 2      ; R38 := R38(R39)
262 [-]: LOADK     R39 K78      ; R39 := " x "
263 [-]: GETGLOBAL R40 K77      ; R40 := 0x9FAED6BC
264 [-]: MOVE      R41 R7       ; R41 := R7
265 [-]: CALL      R40 2 2      ; R40 := R40(R41)
266 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
267 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
268 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
269 [-]: SELF      R34 R34 K58  ; R35 := R34; R34 := R34["0x17028E8F"]
270 [-]: LOADK     R36 K79      ; R36 := "RepPanel.RepName3.text"
271 [-]: LOADK     R37 K80      ; R37 := "/Lotus/Language/Onslaught/EndOfMatchVIPKills"
272 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
273 [-]: MOVE      R34 R33      ; R34 := R33
274 [-]: LOADK     R35 K81      ; R35 := 3
275 [-]: GETUPVAL  R36 U5       ; R36 := U5
276 [-]: GETTABLE  R36 R36 K74  ; R36 := R36["0x7E197415"]
277 [-]: MUL       R37 R15 R8   ; R37 := R15 * R8
278 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
279 [-]: CALL      R34 0 1      ; R34(R35,...)
280 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
281 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
282 [-]: LOADK     R36 K82      ; R36 := "RepPanel.RepValue3"
283 [-]: LOADK     R37 K68      ; R37 := "_color"
284 [-]: MOVE      R38 R12      ; R38 := R12
285 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
286 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
287 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
288 [-]: LOADK     R36 K83      ; R36 := "RepPanel.RepTitle3"
289 [-]: LOADK     R37 K51      ; R37 := "text"
290 [-]: GETGLOBAL R38 K77      ; R38 := 0x9FAED6BC
291 [-]: MOVE      R39 R15      ; R39 := R15
292 [-]: CALL      R38 2 2      ; R38 := R38(R39)
293 [-]: LOADK     R39 K78      ; R39 := " x "
294 [-]: GETGLOBAL R40 K77      ; R40 := 0x9FAED6BC
295 [-]: MOVE      R41 R8       ; R41 := R8
296 [-]: CALL      R40 2 2      ; R40 := R40(R41)
297 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
298 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
299 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
300 [-]: SELF      R34 R34 K58  ; R35 := R34; R34 := R34["0x17028E8F"]
301 [-]: LOADK     R36 K84      ; R36 := "RepPanel.RepName4.text"
302 [-]: LOADK     R37 K85      ; R37 := "/Lotus/Language/Onslaught/EndOfMatchClearBonus"
303 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
304 [-]: MOVE      R34 R33      ; R34 := R33
305 [-]: LOADK     R35 K86      ; R35 := 4
306 [-]: GETUPVAL  R36 U5       ; R36 := U5
307 [-]: GETTABLE  R36 R36 K74  ; R36 := R36["0x7E197415"]
308 [-]: MOVE      R37 R16      ; R37 := R16
309 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
310 [-]: CALL      R34 0 1      ; R34(R35,...)
311 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
312 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
313 [-]: LOADK     R36 K87      ; R36 := "RepPanel.RepValue4"
314 [-]: LOADK     R37 K68      ; R37 := "_color"
315 [-]: MOVE      R38 R12      ; R38 := R12
316 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
317 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
318 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
319 [-]: LOADK     R36 K88      ; R36 := "RepPanel.RepTitle4"
320 [-]: LOADK     R37 K53      ; R37 := "_visible"
321 [-]: MOVE      R38 R0       ; R38 := R0
322 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
323 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
324 [-]: SELF      R34 R34 K58  ; R35 := R34; R34 := R34["0x17028E8F"]
325 [-]: LOADK     R36 K89      ; R36 := "RepPanel.RepName5.text"
326 [-]: LOADK     R37 K90      ; R37 := "/Lotus/Language/Onslaught/EndOfMatchTotal"
327 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
328 [-]: MOVE      R34 R33      ; R34 := R33
329 [-]: LOADK     R35 K91      ; R35 := 5
330 [-]: GETUPVAL  R36 U5       ; R36 := U5
331 [-]: GETTABLE  R36 R36 K74  ; R36 := R36["0x7E197415"]
332 [-]: MOVE      R37 R17      ; R37 := R17
333 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
334 [-]: CALL      R34 0 1      ; R34(R35,...)
335 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
336 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
337 [-]: LOADK     R36 K92      ; R36 := "RepPanel.RepValue5"
338 [-]: LOADK     R37 K68      ; R37 := "_color"
339 [-]: MOVE      R38 R12      ; R38 := R12
340 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
341 [-]: GETGLOBAL R34 K46      ; R34 := mMovie
342 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34["0x1C19D966"]
343 [-]: LOADK     R36 K93      ; R36 := "RepPanel.RepTitle5"
344 [-]: LOADK     R37 K53      ; R37 := "_visible"
345 [-]: MOVE      R38 R0       ; R38 := R0
346 [-]: CALL      R34 5 1      ; R34(R35,R36,R37,R38)
347 [-]: MOVE      R34 R1       ; R34 := R1
348 [-]: MOVE      R34 R0       ; R34 := R0
349 [-]: RETURN    R0 1         ; return 


; Function #37.1:
;
; Name:            
; Defined at line: 1190
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xD6A79FE9"]
  3 [-]: LOADK     R4 K2        ; R4 := "RepPanel.RepValue"
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  6 [-]: LOADK     R5 K3        ; R5 := "text"
  7 [-]: LOADK     R6 K4        ; R6 := "<p><font face=\"Roboto\" size=\"45\"><b>"
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: LOADK     R8 K5        ; R8 := "</b></font></p>"
 10 [-]: CONCAT    R6 R6 R8     ; R6 := R6 .. R7 .. R8
 11 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 12 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1225
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 0         ; if not R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R1 1 1       ; R1()
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LEN       R1 R0        ; R1 := # R0
  9 [-]: EQ        1 R1 K0      ; if R1 == 0 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: LOADNIL   R1 R1        ; R1 := nil
 16 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x5DB0BD4"]
 18 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/Syndicate_Reputation"
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 21 [-]: MOVE      R1 R2        ; R1 := R2
 22 [-]: GETUPVAL  R2 U3        ; R2 := U3
 23 [-]: LOADK     R3 K4        ; R3 := "RepPanel"
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: LOADK     R2 K5        ; R2 := 1
 27 [-]: LOADK     R3 K6        ; R3 := 4
 28 [-]: LOADK     R4 K5        ; R4 := 1
 29 [-]: FORPREP   R2 39        ; R2 -= R4; PC := 39
 30 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 31 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0x4443A5E7"]
 32 [-]: LOADK     R8 K8        ; R8 := "RepPanel.RepBannerIcon"
 33 [-]: MOVE      R9 R5        ; R9 := R5
 34 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 35 [-]: GETGLOBAL R9 K9        ; R9 := reputationIcon
 36 [-]: GETGLOBAL R10 K10      ; R10 := _G
 37 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["UIMaterial_SmoothEdgeNoDepthTest"]
 38 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 39 [-]: FORLOOP   R2 30        ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
 40 [-]: LOADNIL   R6 R8        ; R6 := R7 := R8 := nil
 41 [-]: LOADK     R9 K12       ; R9 := ""
 42 [-]: LOADK     R10 K5       ; R10 := 1
 43 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 44 [-]: LOADK     R12 K5       ; R12 := 1
 45 [-]: LEN       R13 R0       ; R13 := # R0
 46 [-]: LOADK     R14 K5       ; R14 := 1
 47 [-]: FORPREP   R12 54       ; R12 -= R14; PC := 54
 48 [-]: GETTABLE  R16 R0 R15   ; R16 := R0[R15]
 49 [-]: GETGLOBAL R17 K13      ; R17 := table
 50 [-]: GETTABLE  R17 R17 K14  ; R17 := R17["0xE6450C9D"]
 51 [-]: MOVE      R18 R11      ; R18 := R11
 52 [-]: MOVE      R19 R16      ; R19 := R16
 53 [-]: CALL      R17 3 1      ; R17(R18,R19)
 54 [-]: FORLOOP   R12 48       ; R12 += R14; if R12 <= R13 then begin PC := 48; R15 := R12 end
 55 [-]: GETGLOBAL R17 K13      ; R17 := table
 56 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["0xA5C58010"]
 57 [-]: MOVE      R18 R11      ; R18 := R11
 58 [-]: CLOSURE   R19 0        ; R19 := closure(Function #38.1)
 59 [-]: CALL      R17 3 1      ; R17(R18,R19)
 60 [-]: LEN       R17 R11      ; R17 := # R11
 61 [-]: LOADK     R18 K5       ; R18 := 1
 62 [-]: LEN       R19 R11      ; R19 := # R11
 63 [-]: LOADK     R20 K5       ; R20 := 1
 64 [-]: FORPREP   R18 80       ; R18 -= R20; PC := 80
 65 [-]: GETTABLE  R22 R11 R21  ; R22 := R11[R21]
 66 [-]: GETTABLE  R22 R22 K16  ; R22 := R22["mStanding"]
 67 [-]: LT        0 R22 K0     ; if R22 >= 0 then PC := 80
 68 [-]: JMP       80           ; PC := 80
 69 [-]: GETGLOBAL R22 K13      ; R22 := table
 70 [-]: GETTABLE  R22 R22 K14  ; R22 := R22["0xE6450C9D"]
 71 [-]: MOVE      R23 R11      ; R23 := R11
 72 [-]: MOVE      R24 R21      ; R24 := R21
 73 [-]: GETTABLE  R25 R11 R17  ; R25 := R11[R17]
 74 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
 75 [-]: GETGLOBAL R22 K13      ; R22 := table
 76 [-]: GETTABLE  R22 R22 K17  ; R22 := R22["0xCDB1FD5E"]
 77 [-]: MOVE      R23 R11      ; R23 := R11
 78 [-]: ADD       R24 R17 K5   ; R24 := R17 + 1
 79 [-]: CALL      R22 3 1      ; R22(R23,R24)
 80 [-]: FORLOOP   R18 65       ; R18 += R20; if R18 <= R19 then begin PC := 65; R21 := R18 end
 81 [-]: LOADK     R22 K5       ; R22 := 1
 82 [-]: LOADK     R23 K6       ; R23 := 4
 83 [-]: LOADK     R24 K5       ; R24 := 1
 84 [-]: FORPREP   R22 377      ; R22 -= R24; PC := 377
 85 [-]: LEN       R26 R0       ; R26 := # R0
 86 [-]: LT        0 R26 R25    ; if R26 >= R25 then PC := 137
 87 [-]: JMP       137          ; PC := 137
 88 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
 89 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1C19D966"]
 90 [-]: LOADK     R28 K19      ; R28 := "RepPanel.RepName"
 91 [-]: MOVE      R29 R10      ; R29 := R10
 92 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
 93 [-]: LOADK     R29 K20      ; R29 := "_visible"
 94 [-]: MOVE      R30 R0       ; R30 := R0
 95 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
 96 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
 97 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1C19D966"]
 98 [-]: LOADK     R28 K21      ; R28 := "RepPanel.RepIcon"
 99 [-]: MOVE      R29 R10      ; R29 := R10
100 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
101 [-]: LOADK     R29 K20      ; R29 := "_visible"
102 [-]: MOVE      R30 R0       ; R30 := R0
103 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
104 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
105 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1C19D966"]
106 [-]: LOADK     R28 K22      ; R28 := "RepPanel.RepValue"
107 [-]: MOVE      R29 R10      ; R29 := R10
108 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
109 [-]: LOADK     R29 K20      ; R29 := "_visible"
110 [-]: MOVE      R30 R0       ; R30 := R0
111 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
112 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
113 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1C19D966"]
114 [-]: LOADK     R28 K23      ; R28 := "RepPanel.RepTitle"
115 [-]: MOVE      R29 R10      ; R29 := R10
116 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
117 [-]: LOADK     R29 K20      ; R29 := "_visible"
118 [-]: MOVE      R30 R0       ; R30 := R0
119 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
120 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
121 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1C19D966"]
122 [-]: LOADK     R28 K24      ; R28 := "RepPanel.RepBar"
123 [-]: MOVE      R29 R10      ; R29 := R10
124 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
125 [-]: LOADK     R29 K20      ; R29 := "_visible"
126 [-]: MOVE      R30 R0       ; R30 := R0
127 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
128 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
129 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x1C19D966"]
130 [-]: LOADK     R28 K8       ; R28 := "RepPanel.RepBannerIcon"
131 [-]: MOVE      R29 R10      ; R29 := R10
132 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
133 [-]: LOADK     R29 K20      ; R29 := "_visible"
134 [-]: MOVE      R30 R0       ; R30 := R0
135 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
136 [-]: JMP       376          ; PC := 376
137 [-]: LOADNIL   R26 R29      ; R26 := R27 := R28 := R29 := nil
138 [-]: LOADK     R30 K25      ; R30 := 100
139 [-]: GETTABLE  R31 R11 R25  ; R31 := R11[R25]
140 [-]: GETTABLE  R26 R31 K26  ; R26 := R31["mTag"]
141 [-]: GETTABLE  R31 R11 R25  ; R31 := R11[R25]
142 [-]: GETTABLE  R27 R31 K16  ; R27 := R31["mStanding"]
143 [-]: GETGLOBAL R31 K27      ; R31 := 0xEC274B1A
144 [-]: LOADK     R32 K28      ; R32 := "CetusSyndicate"
145 [-]: CALL      R31 2 2      ; R31 := R31(R32)
146 [-]: GETGLOBAL R32 K27      ; R32 := 0xEC274B1A
147 [-]: LOADK     R33 K29      ; R33 := "QuillSyndicate"
148 [-]: CALL      R32 2 2      ; R32 := R32(R33)
149 [-]: GETGLOBAL R33 K27      ; R33 := 0xEC274B1A
150 [-]: LOADK     R34 K30      ; R34 := "VentKidsSyndicate"
151 [-]: CALL      R33 2 2      ; R33 := R33(R34)
152 [-]: GETUPVAL  R34 U4       ; R34 := U4
153 [-]: SELF      R34 R34 K31  ; R35 := R34; R34 := R34["0xDB2548DF"]
154 [-]: MOVE      R36 R26      ; R36 := R26
155 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
156 [-]: LOADK     R35 K32      ; R35 := "/Lotus/Syndicates/"
157 [-]: EQ        1 R26 R31    ; if R26 == R31 then PC := 161
158 [-]: JMP       161          ; PC := 161
159 [-]: EQ        0 R26 R32    ; if R26 ~= R32 then PC := 165
160 [-]: JMP       165          ; PC := 165
161 [-]: MOVE      R36 R35      ; R36 := R35
162 [-]: LOADK     R37 K33      ; R37 := "Ostron/"
163 [-]: CONCAT    R35 R36 R37  ; R35 := R36 .. R37
164 [-]: JMP       175          ; PC := 175
165 [-]: EQ        1 R26 R33    ; if R26 == R33 then PC := 172
166 [-]: JMP       172          ; PC := 172
167 [-]: GETGLOBAL R36 K27      ; R36 := 0xEC274B1A
168 [-]: LOADK     R37 K34      ; R37 := "SolarisSyndicate"
169 [-]: CALL      R36 2 2      ; R36 := R36(R37)
170 [-]: EQ        0 R26 R36    ; if R26 ~= R36 then PC := 175
171 [-]: JMP       175          ; PC := 175
172 [-]: MOVE      R36 R35      ; R36 := R35
173 [-]: LOADK     R37 K35      ; R37 := "Solaris/"
174 [-]: CONCAT    R35 R36 R37  ; R35 := R36 .. R37
175 [-]: GETGLOBAL R36 K36      ; R36 := 0x2C00D429
176 [-]: MOVE      R37 R35      ; R37 := R35
177 [-]: SELF      R38 R26 K37  ; R39 := R26; R38 := R26["0x5EC7A3D2"]
178 [-]: CALL      R38 2 2      ; R38 := R38(R39)
179 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
180 [-]: CALL      R36 2 2      ; R36 := R36(R37)
181 [-]: MOVE      R6 R36       ; R6 := R36
182 [-]: GETGLOBAL R36 K38      ; R36 := 0x7C282057
183 [-]: MOVE      R37 R6       ; R37 := R6
184 [-]: CALL      R36 2 2      ; R36 := R36(R37)
185 [-]: MOVE      R7 R36       ; R7 := R36
186 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
187 [-]: SELF      R36 R36 K2   ; R37 := R36; R36 := R36["0x5DB0BD4"]
188 [-]: SELF      R38 R7 K39   ; R39 := R7; R38 := R7["0xFA66CF82"]
189 [-]: CALL      R38 2 2      ; R38 := R38(R39)
190 [-]: SELF      R38 R38 K37  ; R39 := R38; R38 := R38["0x5EC7A3D2"]
191 [-]: CALL      R38 2 2      ; R38 := R38(R39)
192 [-]: MOVE      R39 R0       ; R39 := R0
193 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
194 [-]: MOVE      R9 R36       ; R9 := R36
195 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
196 [-]: SELF      R36 R36 K40  ; R37 := R36; R36 := R36["0xD6A79FE9"]
197 [-]: LOADK     R38 K19      ; R38 := "RepPanel.RepName"
198 [-]: MOVE      R39 R10      ; R39 := R10
199 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
200 [-]: LOADK     R39 K41      ; R39 := "text"
201 [-]: GETGLOBAL R40 K42      ; R40 := string
202 [-]: GETTABLE  R40 R40 K43  ; R40 := R40["0x639C642A"]
203 [-]: MOVE      R41 R9       ; R41 := R9
204 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
205 [-]: CALL      R36 0 1      ; R36(R37,...)
206 [-]: SELF      R36 R7 K44   ; R37 := R7; R36 := R7["0xF1A9732E"]
207 [-]: CALL      R36 2 2      ; R36 := R36(R37)
208 [-]: MOVE      R8 R36       ; R8 := R36
209 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
210 [-]: SELF      R36 R36 K7   ; R37 := R36; R36 := R36["0x4443A5E7"]
211 [-]: LOADK     R38 K21      ; R38 := "RepPanel.RepIcon"
212 [-]: MOVE      R39 R10      ; R39 := R10
213 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
214 [-]: MOVE      R39 R8       ; R39 := R8
215 [-]: GETGLOBAL R40 K10      ; R40 := _G
216 [-]: GETTABLE  R40 R40 K45  ; R40 := R40["UIMaterial_Smooth"]
217 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
218 [-]: EQ        0 R28 K46    ; if R28 ~= nil then PC := 239
219 [-]: JMP       239          ; PC := 239
220 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
221 [-]: SELF      R36 R36 K2   ; R37 := R36; R36 := R36["0x5DB0BD4"]
222 [-]: LOADK     R38 K47      ; R38 := "/Lotus/Language/Syndicates/Neutral"
223 [-]: MOVE      R39 R0       ; R39 := R0
224 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
225 [-]: MOVE      R28 R36      ; R28 := R36
226 [-]: GETTABLE  R36 R34 K48  ; R36 := R34["mTitle"]
227 [-]: EQ        1 R36 K0     ; if R36 == 0 then PC := 239
228 [-]: JMP       239          ; PC := 239
229 [-]: SELF      R36 R7 K49   ; R37 := R7; R36 := R7["0xED874845"]
230 [-]: GETTABLE  R38 R34 K48  ; R38 := R34["mTitle"]
231 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
232 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
233 [-]: SELF      R37 R37 K2   ; R38 := R37; R37 := R37["0x5DB0BD4"]
234 [-]: SELF      R39 R36 K37  ; R40 := R36; R39 := R36["0x5EC7A3D2"]
235 [-]: CALL      R39 2 2      ; R39 := R39(R40)
236 [-]: MOVE      R40 R0       ; R40 := R0
237 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
238 [-]: MOVE      R28 R37      ; R28 := R37
239 [-]: GETUPVAL  R37 U5       ; R37 := U5
240 [-]: GETTABLE  R37 R37 K50  ; R37 := R37["0xF81722A2"]
241 [-]: LT        1 R27 K0     ; if R27 < 0 then PC := 244
242 [-]: JMP       244          ; PC := 244
243 [-]: MOVE      R38 R0       ; R38 := R0
244 [-]: MOVE      R38 R1       ; R38 := R1
245 [-]: MOVE      R39 R27      ; R39 := R27
246 [-]: GETGLOBAL R40 K51      ; R40 := 0x9FAED6BC
247 [-]: LOADK     R41 K52      ; R41 := "+"
248 [-]: MOVE      R42 R27      ; R42 := R27
249 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
250 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
251 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
252 [-]: MOVE      R38 R0       ; R38 := R0
253 [-]: EQ        0 R27 K0     ; if R27 ~= 0 then PC := 259
254 [-]: JMP       259          ; PC := 259
255 [-]: GETTABLE  R39 R34 K16  ; R39 := R34["mStanding"]
256 [-]: LT        0 R39 K0     ; if R39 >= 0 then PC := 259
257 [-]: JMP       259          ; PC := 259
258 [-]: MOVE      R38 R1       ; R38 := R1
259 [-]: LT        0 R27 K0     ; if R27 >= 0 then PC := 262
260 [-]: JMP       262          ; PC := 262
261 [-]: MOVE      R38 R1       ; R38 := R1
262 [-]: GETGLOBAL R39 K1       ; R39 := mMovie
263 [-]: SELF      R39 R39 K40  ; R40 := R39; R39 := R39["0xD6A79FE9"]
264 [-]: LOADK     R41 K22      ; R41 := "RepPanel.RepValue"
265 [-]: MOVE      R42 R10      ; R42 := R10
266 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
267 [-]: LOADK     R42 K41      ; R42 := "text"
268 [-]: GETGLOBAL R43 K51      ; R43 := 0x9FAED6BC
269 [-]: MOVE      R44 R37      ; R44 := R37
270 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
271 [-]: CALL      R39 0 1      ; R39(R40,...)
272 [-]: GETGLOBAL R39 K1       ; R39 := mMovie
273 [-]: SELF      R39 R39 K53  ; R40 := R39; R39 := R39["0x6B7B470B"]
274 [-]: LOADK     R41 K8       ; R41 := "RepPanel.RepBannerIcon"
275 [-]: MOVE      R42 R10      ; R42 := R10
276 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
277 [-]: LOADK     R42 K54      ; R42 := "_width"
278 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
279 [-]: GETGLOBAL R40 K1       ; R40 := mMovie
280 [-]: SELF      R40 R40 K53  ; R41 := R40; R40 := R40["0x6B7B470B"]
281 [-]: LOADK     R42 K22      ; R42 := "RepPanel.RepValue"
282 [-]: MOVE      R43 R10      ; R43 := R10
283 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
284 [-]: LOADK     R43 K55      ; R43 := "textWidth"
285 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
286 [-]: GETGLOBAL R41 K1       ; R41 := mMovie
287 [-]: SELF      R41 R41 K53  ; R42 := R41; R41 := R41["0x6B7B470B"]
288 [-]: LOADK     R43 K56      ; R43 := "RepPanel.RepBG"
289 [-]: MOVE      R44 R10      ; R44 := R10
290 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
291 [-]: LOADK     R44 K57      ; R44 := "_x"
292 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
293 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
294 [-]: SELF      R42 R42 K53  ; R43 := R42; R42 := R42["0x6B7B470B"]
295 [-]: LOADK     R44 K56      ; R44 := "RepPanel.RepBG"
296 [-]: MOVE      R45 R10      ; R45 := R10
297 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
298 [-]: LOADK     R45 K54      ; R45 := "_width"
299 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
300 [-]: GETGLOBAL R43 K58      ; R43 := 0xF595ADDE
301 [-]: MOVE      R44 R42      ; R44 := R42
302 [-]: CALL      R43 2 2      ; R43 := R43(R44)
303 [-]: MUL       R43 R43 K59  ; R43 := R43 * 0.5
304 [-]: ADD       R43 R41 R43  ; R43 := R41 + R43
305 [-]: EQ        0 R10 K5     ; if R10 ~= 1 then PC := 325
306 [-]: JMP       325          ; PC := 325
307 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
308 [-]: SELF      R44 R44 K18  ; R45 := R44; R44 := R44["0x1C19D966"]
309 [-]: LOADK     R46 K8       ; R46 := "RepPanel.RepBannerIcon"
310 [-]: MOVE      R47 R10      ; R47 := R10
311 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
312 [-]: LOADK     R47 K57      ; R47 := "_x"
313 [-]: GETGLOBAL R48 K58      ; R48 := 0xF595ADDE
314 [-]: MOVE      R49 R40      ; R49 := R40
315 [-]: CALL      R48 2 2      ; R48 := R48(R49)
316 [-]: MUL       R48 R48 K59  ; R48 := R48 * 0.5
317 [-]: ADD       R48 R43 R48  ; R48 := R43 + R48
318 [-]: GETGLOBAL R49 K58      ; R49 := 0xF595ADDE
319 [-]: MOVE      R50 R39      ; R50 := R39
320 [-]: CALL      R49 2 2      ; R49 := R49(R50)
321 [-]: MUL       R49 R49 K59  ; R49 := R49 * 0.5
322 [-]: ADD       R48 R48 R49  ; R48 := R48 + R49
323 [-]: CALL      R44 5 1      ; R44(R45,R46,R47,R48)
324 [-]: JMP       343          ; PC := 343
325 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
326 [-]: SELF      R44 R44 K18  ; R45 := R44; R44 := R44["0x1C19D966"]
327 [-]: LOADK     R46 K8       ; R46 := "RepPanel.RepBannerIcon"
328 [-]: MOVE      R47 R10      ; R47 := R10
329 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
330 [-]: LOADK     R47 K57      ; R47 := "_x"
331 [-]: GETGLOBAL R48 K58      ; R48 := 0xF595ADDE
332 [-]: MOVE      R49 R40      ; R49 := R40
333 [-]: CALL      R48 2 2      ; R48 := R48(R49)
334 [-]: MUL       R48 R48 K59  ; R48 := R48 * 0.5
335 [-]: ADD       R48 R43 R48  ; R48 := R43 + R48
336 [-]: GETGLOBAL R49 K58      ; R49 := 0xF595ADDE
337 [-]: MOVE      R50 R39      ; R50 := R39
338 [-]: CALL      R49 2 2      ; R49 := R49(R50)
339 [-]: MUL       R49 R49 K59  ; R49 := R49 * 0.5
340 [-]: ADD       R48 R48 R49  ; R48 := R48 + R49
341 [-]: SUB       R48 R48 K60  ; R48 := R48 - 12
342 [-]: CALL      R44 5 1      ; R44(R45,R46,R47,R48)
343 [-]: EQ        0 R29 K46    ; if R29 ~= nil then PC := 354
344 [-]: JMP       354          ; PC := 354
345 [-]: GETUPVAL  R44 U5       ; R44 := U5
346 [-]: GETTABLE  R44 R44 K50  ; R44 := R44["0xF81722A2"]
347 [-]: MOVE      R45 R38      ; R45 := R38
348 [-]: GETGLOBAL R46 K10      ; R46 := _G
349 [-]: GETTABLE  R46 R46 K61  ; R46 := R46["UIColor_NegativeReputation"]
350 [-]: GETGLOBAL R47 K10      ; R47 := _G
351 [-]: GETTABLE  R47 R47 K62  ; R47 := R47["UIColor_PositiveReputation"]
352 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
353 [-]: MOVE      R29 R44      ; R29 := R44
354 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
355 [-]: SELF      R44 R44 K18  ; R45 := R44; R44 := R44["0x1C19D966"]
356 [-]: LOADK     R46 K22      ; R46 := "RepPanel.RepValue"
357 [-]: MOVE      R47 R10      ; R47 := R10
358 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
359 [-]: LOADK     R47 K63      ; R47 := "textColor"
360 [-]: MOVE      R48 R29      ; R48 := R29
361 [-]: CALL      R44 5 1      ; R44(R45,R46,R47,R48)
362 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
363 [-]: SELF      R44 R44 K18  ; R45 := R44; R44 := R44["0x1C19D966"]
364 [-]: LOADK     R46 K22      ; R46 := "RepPanel.RepValue"
365 [-]: MOVE      R47 R10      ; R47 := R10
366 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
367 [-]: LOADK     R47 K64      ; R47 := "_alpha"
368 [-]: MOVE      R48 R30      ; R48 := R30
369 [-]: CALL      R44 5 1      ; R44(R45,R46,R47,R48)
370 [-]: GETUPVAL  R44 U6       ; R44 := U6
371 [-]: MOVE      R45 R7       ; R45 := R7
372 [-]: MOVE      R46 R10      ; R46 := R10
373 [-]: MOVE      R47 R28      ; R47 := R28
374 [-]: MOVE      R48 R27      ; R48 := R27
375 [-]: CALL      R44 5 1      ; R44(R45,R46,R47,R48)
376 [-]: ADD       R10 R10 K5   ; R10 := R10 + 1
377 [-]: FORLOOP   R22 85       ; R22 += R24; if R22 <= R23 then begin PC := 85; R25 := R22 end
378 [-]: MOVE      R44 R1       ; R44 := R1
379 [-]: MOVE      R44 R2       ; R44 := R2
380 [-]: RETURN    R0 1         ; return 


; Function #38.1:
;
; Name:            
; Defined at line: 1256
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mStanding"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mStanding"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1357
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R1 0         ; if not R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R2 1 1       ; R2()
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R2 3 1       ; R2(R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1368
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: TEST      R2 0         ; if not R2 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R2 K0        ; R2 := gGameConfig
  6 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3D1B86FA"]
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  9 [-]: RETURN    R2 0         ; return R2,...
 10 [-]: JMP       25           ; PC := 25
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R2 K0        ; R2 := gGameConfig
 17 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x9E8E66BA"]
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
 21 [-]: RETURN    R2 0         ; return R2,...
 22 [-]: JMP       25           ; PC := 25
 23 [-]: LOADK     R2 K4        ; R2 := 0
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1378
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mItemType"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mItemType"]
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x8B598ED4"]
  8 [-]: GETGLOBAL R4 K3        ; R4 := gLotusArtifactUpgradeType
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: TEST      R2 1         ; if R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 42
 14 [-]: JMP       42           ; PC := 42
 15 [-]: GETGLOBAL R2 K5        ; R2 := 0x1BF588C6
 16 [-]: LOADK     R3 K6        ; R3 := 0
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: GETGLOBAL R2 K7        ; R2 := 0x63B09107
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 21 [-]: JMP       40           ; PC := 40
 22 [-]: GETTABLE  R7 R6 K8     ; R7 := R6["upg"]
 23 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mItemType"]
 24 [-]: GETTABLE  R9 R7 K1     ; R9 := R7["mItemType"]
 25 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 40
 26 [-]: JMP       40           ; PC := 40
 27 [-]: GETTABLE  R8 R6 K9     ; R8 := R6["FromEnemyCache"]
 28 [-]: EQ        0 R8 K4      ; if R8 ~= nil then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mUpgradeFingerprint"]
 31 [-]: GETTABLE  R9 R7 K10    ; R9 := R7["mUpgradeFingerprint"]
 32 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETTABLE  R10 R6 K8    ; R10 := R6["upg"]
 35 [-]: GETTABLE  R11 R7 K11   ; R11 := R7["mItemCount"]
 36 [-]: GETTABLE  R12 R0 K11   ; R12 := R0["mItemCount"]
 37 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
 38 [-]: SETTABLE  R10 K11 R11  ; R10["mItemCount"] := R11
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 22; R4 := R5 end
 41 [-]: JMP       22           ; PC := 22
 42 [-]: GETGLOBAL R10 K12      ; R10 := Lotus_Game
 43 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["0xA9D5605B"]
 44 [-]: CALL      R10 1 2      ; R10 := R10()
 45 [-]: GETTABLE  R11 R0 K1    ; R11 := R0["mItemType"]
 46 [-]: SETTABLE  R10 K1 R11   ; R10["mItemType"] := R11
 47 [-]: GETTABLE  R11 R0 K10   ; R11 := R0["mUpgradeFingerprint"]
 48 [-]: SETTABLE  R10 K10 R11  ; R10["mUpgradeFingerprint"] := R11
 49 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["mItemCount"]
 50 [-]: SETTABLE  R10 K11 R11  ; R10["mItemCount"] := R11
 51 [-]: GETGLOBAL R11 K14      ; R11 := table
 52 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["0xE6450C9D"]
 53 [-]: GETUPVAL  R12 U0       ; R12 := U0
 54 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 55 [-]: SETTABLE  R13 K8 R10   ; R13["upg"] := R10
 56 [-]: SETTABLE  R13 K9 R1    ; R13["FromEnemyCache"] := R1
 57 [-]: CALL      R11 3 1      ; R11(R12,R13)
 58 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1408
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8B598ED4"]
  7 [-]: GETGLOBAL R4 K2        ; R4 := gLevelType
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R1 R0        ; R1 := R0
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x2855D567"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETTABLE  R1 R2 K4     ; R1 := R2["level"]
 21 [-]: MOVE      R2 R1        ; R2 := R1
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: MOVE      R1 R1        ; R1 := R1
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xF0BB6DD"]
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 32 [-]: TEST      R2 1         ; if R2 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: MOVE      R2 R3        ; R2 := R3
 36 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1429
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: SETTABLE  R1 K1 R2     ; R1["mPulseBG"] := R2
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: LT        0 R2 K3      ; if R2 >= 0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R1 R1        ; R1 := R1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: MUL       R3 R0 K4     ; R3 := R0 * 4
 15 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: TEST      R1 0         ; if not R1 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: LT        0 K3 R2      ; if 0 >= R2 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: LOADK     R2 K3        ; R2 := 0
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: GETGLOBAL R2 K5        ; R2 := gFlashMgr
 25 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xC4E70543"]
 26 [-]: CALL      R2 2 1       ; R2(R3)
 27 [-]: LOADNIL   R2 R2        ; R2 := nil
 28 [-]: MOVE      R2 R1        ; R2 := R1
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: LT        0 K7 R2      ; if 1 >= R2 then PC := 39
 31 [-]: JMP       39           ; PC := 39
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: GETGLOBAL R2 K8        ; R2 := mMovie
 35 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0xE7F490E3"]
 36 [-]: LOADK     R4 K3        ; R4 := 0
 37 [-]: CALL      R2 3 1       ; R2(R3,R4)
 38 [-]: RETURN    R0 1         ; return 
 39 [-]: GETGLOBAL R2 K8        ; R2 := mMovie
 40 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0xE7F490E3"]
 41 [-]: GETGLOBAL R4 K10       ; R4 := math
 42 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xF93F7CC8"]
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: SUB       R4 K7 R4     ; R4 := 1 - R4
 46 [-]: CALL      R2 3 1       ; R2(R3,R4)
 47 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1456
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 35
  8 [-]: JMP       35           ; PC := 35
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2C15B55B"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 35
 13 [-]: JMP       35           ; PC := 35
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2B788BAB"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 35
 18 [-]: JMP       35           ; PC := 35
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: EQ        0 R1 K3      ; if R1 ~= 1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x2E31258"]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: MOVE      R1 R0        ; R1 := R0
 26 [-]: MOVE      R1 R3        ; R1 := R3
 27 [-]: JMP       35           ; PC := 35
 28 [-]: LOADK     R1 K3        ; R1 := 1
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 31 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xE7F490E3"]
 32 [-]: GETUPVAL  R3 U2        ; R3 := U2
 33 [-]: CALL      R1 3 1       ; R1(R2,R3)
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: GETUPVAL  R1 U4        ; R1 := U4
 36 [-]: TEST      R1 1         ; if R1 then PC := 55
 37 [-]: JMP       55           ; PC := 55
 38 [-]: GETUPVAL  R1 U2        ; R1 := U2
 39 [-]: LT        0 K7 R1      ; if 0 >= R1 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R1 K8        ; R1 := math
 42 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x8B011038"]
 43 [-]: LOADK     R2 K7        ; R2 := 0
 44 [-]: GETUPVAL  R3 U2        ; R3 := U2
 45 [-]: GETGLOBAL R4 K10       ; R4 := 0x6306558E
 46 [-]: CALL      R4 1 2       ; R4 := R4()
 47 [-]: MUL       R4 R4 K3     ; R4 := R4 * 1
 48 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 49 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 50 [-]: MOVE      R1 R2        ; R1 := R2
 51 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 52 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xE7F490E3"]
 53 [-]: GETUPVAL  R3 U2        ; R3 := U2
 54 [-]: CALL      R1 3 1       ; R1(R2,R3)
 55 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1480
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 32
  3 [-]: JMP       32           ; PC := 32
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x87D2274C"]
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: TEST      R0 0         ; if not R0 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 10 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 32
 13 [-]: JMP       32           ; PC := 32
 14 [-]: GETGLOBAL R0 K3        ; R0 := gGameRules
 15 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xB8637349"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xA4269DBC"]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: JMP       32           ; PC := 32
 21 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 22 [-]: GETGLOBAL R1 K6        ; R1 := gGameData
 23 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 24 [-]: TEST      R0 1         ; if R0 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETGLOBAL R0 K6        ; R0 := gGameData
 27 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xC010E2ED"]
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xA4269DBC"]
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: MOVE      R0 R0        ; R0 := R0
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R0 K8        ; R0 := Lotus_Game
 36 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["0xA866E1C8"]
 37 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 38 [-]: RETURN    R0 0         ; return R0,...
 39 [-]: GETUPVAL  R0 U0        ; R0 := U0
 40 [-]: RETURN    R0 2         ; return R0
 41 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1500
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_DEFENSE"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1504
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_TERRITORY"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1508
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: MOVE      R1 R0        ; R1 := R0
  4 [-]: GETGLOBAL R2 K0        ; R2 := gPlayerProfileMgr
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x21EF7B1A"]
  6 [-]: LOADK     R4 K2        ; R4 := 0
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0x654F1092"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x2D0B8A86"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 40
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R5 K6        ; R5 := 0x63B09107
 18 [-]: GETTABLE  R6 R4 K7     ; R6 := R4["mGoals"]
 19 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 20 [-]: JMP       38           ; PC := 38
 21 [-]: GETTABLE  R10 R9 K8    ; R10 := R9["mRoaming"]
 22 [-]: TEST      R10 0        ; if not R10 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: MOVE      R1 R1        ; R1 := R1
 25 [-]: JMP       40           ; PC := 40
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETTABLE  R10 R9 K9    ; R10 := R9["mOptionalInMission"]
 28 [-]: TEST      R10 0        ; if not R10 then PC := 38
 29 [-]: JMP       38           ; PC := 38
 30 [-]: GETGLOBAL R10 K10      ; R10 := 0xEC274B1A
 31 [-]: GETTABLE  R11 R9 K11   ; R11 := R9["mNode"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: GETTABLE  R11 R0 K12   ; R11 := R0["location"]
 34 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R10 R1       ; R10 := R1
 37 [-]: RETURN    R10 2        ; return R10
 38 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
 39 [-]: JMP       21           ; PC := 21
 40 [-]: GETGLOBAL R10 K5       ; R10 := 0x400E7765
 41 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["goalId"]
 42 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 43 [-]: TEST      R10 1        ; if R10 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETTABLE  R10 R0 K13   ; R10 := R0["goalId"]
 46 [-]: EQ        0 R10 K14    ; if R10 ~= "" then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: JMP       52           ; PC := 52
 50 [-]: MOVE      R10 R0       ; R10 := R0
 51 [-]: MOVE      R10 R1       ; R10 := R1
 52 [-]: RETURN    R10 2        ; return R10
 53 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1529
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_SURVIVAL"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1533
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_RESCUE"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1537
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_HIVE"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1541
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_SECTOR"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1545
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["missionType"]
  4 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MT_EXCAVATE"]
  6 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1549
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xDE44F664"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x9FAED6BC
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["goalTag"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: LOADK     R2 K4        ; R2 := "TimeAttack"
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: EQ        0 R0 K5      ; if R0 ~= nil then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1553
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ACTUAL_EOM"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: TEST      R0 1         ; if R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FactionHunterSpawned"]
 14 [-]: GETGLOBAL R2 K4        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["FC_GRINEER"]
 16 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 47
 17 [-]: JMP       47           ; PC := 47
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["NumDeathSquadVictims"]
 20 [-]: EQ        0 R1 K7      ; if R1 ~= 0 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETUPVAL  R1 U2        ; R1 := U2
 23 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0x449D27BE"]
 24 [-]: GETGLOBAL R2 K9        ; R2 := missionEndTransmissionSet
 25 [-]: GETGLOBAL R3 K10       ; R3 := 0xEC274B1A
 26 [-]: LOADK     R4 K11       ; R4 := "MissionCompleteDeathSquadEscape"
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: LOADK     R4 K7        ; R4 := 0
 29 [-]: GETGLOBAL R5 K12       ; R5 := gRegion
 30 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x3E2F6BF"]
 31 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 32 [-]: CALL      R1 0 1       ; R1(R2,...)
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETUPVAL  R1 U2        ; R1 := U2
 35 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0x449D27BE"]
 36 [-]: GETGLOBAL R2 K9        ; R2 := missionEndTransmissionSet
 37 [-]: GETGLOBAL R3 K10       ; R3 := 0xEC274B1A
 38 [-]: LOADK     R4 K14       ; R4 := "MissionCompleteDeathSquadNoEscape"
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: LOADK     R4 K7        ; R4 := 0
 41 [-]: GETGLOBAL R5 K12       ; R5 := gRegion
 42 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x3E2F6BF"]
 43 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 44 [-]: CALL      R1 0 1       ; R1(R2,...)
 45 [-]: RETURN    R0 1         ; return 
 46 [-]: JMP       168          ; PC := 168
 47 [-]: GETGLOBAL R1 K0        ; R1 := _T
 48 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["EndOfMissionVoiceOverride"]
 49 [-]: EQ        1 R1 K16     ; if R1 == nil then PC := 62
 50 [-]: JMP       62           ; PC := 62
 51 [-]: GETGLOBAL R1 K0        ; R1 := _T
 52 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["EndOfMissionVoiceOverride"]
 53 [-]: EQ        1 R1 K17     ; if R1 == "" then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETUPVAL  R1 U3        ; R1 := U3
 56 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["0x25992394"]
 57 [-]: GETGLOBAL R2 K0        ; R2 := _T
 58 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["EndOfMissionVoiceOverride"]
 59 [-]: CALL      R1 2 1       ; R1(R2)
 60 [-]: RETURN    R0 1         ; return 
 61 [-]: JMP       168          ; PC := 168
 62 [-]: GETGLOBAL R1 K19       ; R1 := 0x400E7765
 63 [-]: GETGLOBAL R2 K0        ; R2 := _T
 64 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["MissionTransmissionSet"]
 65 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 66 [-]: TEST      R1 1         ; if R1 then PC := 168
 67 [-]: JMP       168          ; PC := 168
 68 [-]: GETUPVAL  R1 U4        ; R1 := U4
 69 [-]: CALL      R1 1 2       ; R1 := R1()
 70 [-]: TEST      R1 0         ; if not R1 then PC := 152
 71 [-]: JMP       152          ; PC := 152
 72 [-]: GETGLOBAL R1 K19       ; R1 := 0x400E7765
 73 [-]: GETGLOBAL R2 K0        ; R2 := _T
 74 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["MissionTransmissionSet"]
 75 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 76 [-]: TEST      R1 1         ; if R1 then PC := 167
 77 [-]: JMP       167          ; PC := 167
 78 [-]: GETGLOBAL R1 K21       ; R1 := gGameRules
 79 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1["0xED0EE7FB"]
 80 [-]: GETGLOBAL R3 K10       ; R3 := 0xEC274B1A
 81 [-]: LOADK     R4 K23       ; R4 := "Wave"
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: LOADK     R4 K7        ; R4 := 0
 84 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 85 [-]: GETGLOBAL R2 K21       ; R2 := gGameRules
 86 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0xDABFC86D"]
 87 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 88 [-]: ADD       R2 R2 K25    ; R2 := R2 + 1
 89 [-]: GETGLOBAL R3 K12       ; R3 := gRegion
 90 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x3E2F6BF"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: LOADK     R4 K26       ; R4 := -1
 93 [-]: LOADNIL   R5 R5        ; R5 := nil
 94 [-]: GETGLOBAL R6 K19       ; R6 := 0x400E7765
 95 [-]: MOVE      R7 R3        ; R7 := R3
 96 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 97 [-]: TEST      R6 1         ; if R6 then PC := 110
 98 [-]: JMP       110          ; PC := 110
 99 [-]: GETGLOBAL R6 K19       ; R6 := 0x400E7765
100 [-]: SELF      R7 R3 K27    ; R8 := R3; R7 := R3["0x72E5DB62"]
101 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
102 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
103 [-]: TEST      R6 1         ; if R6 then PC := 110
104 [-]: JMP       110          ; PC := 110
105 [-]: SELF      R6 R3 K27    ; R7 := R3; R6 := R3["0x72E5DB62"]
106 [-]: CALL      R6 2 2       ; R6 := R6(R7)
107 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6["0xB20407D7"]
108 [-]: CALL      R6 2 2       ; R6 := R6(R7)
109 [-]: MOVE      R4 R6        ; R4 := R6
110 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 117
111 [-]: JMP       117          ; PC := 117
112 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
113 [-]: LOADK     R7 K29       ; R7 := "EndOfMatchLeftBehind"
114 [-]: CALL      R6 2 2       ; R6 := R6(R7)
115 [-]: MOVE      R5 R6        ; R5 := R6
116 [-]: JMP       135          ; PC := 135
117 [-]: LE        0 K30 R1     ; if 5 > R1 then PC := 124
118 [-]: JMP       124          ; PC := 124
119 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
120 [-]: LOADK     R7 K31       ; R7 := "EndOfMatchBest"
121 [-]: CALL      R6 2 2       ; R6 := R6(R7)
122 [-]: MOVE      R5 R6        ; R5 := R6
123 [-]: JMP       135          ; PC := 135
124 [-]: LE        0 K32 R1     ; if 2 > R1 then PC := 131
125 [-]: JMP       131          ; PC := 131
126 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
127 [-]: LOADK     R7 K33       ; R7 := "EndOfMatchGood"
128 [-]: CALL      R6 2 2       ; R6 := R6(R7)
129 [-]: MOVE      R5 R6        ; R5 := R6
130 [-]: JMP       135          ; PC := 135
131 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
132 [-]: LOADK     R7 K34       ; R7 := "EndOfMatchPoor"
133 [-]: CALL      R6 2 2       ; R6 := R6(R7)
134 [-]: MOVE      R5 R6        ; R5 := R6
135 [-]: GETGLOBAL R6 K0        ; R6 := _T
136 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["MissionTransmissionSet"]
137 [-]: SELF      R6 R6 K35    ; R7 := R6; R6 := R6["0xD168273F"]
138 [-]: MOVE      R8 R5        ; R8 := R5
139 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
140 [-]: GETGLOBAL R7 K19       ; R7 := 0x400E7765
141 [-]: MOVE      R8 R6        ; R8 := R6
142 [-]: CALL      R7 2 2       ; R7 := R7(R8)
143 [-]: TEST      R7 1         ; if R7 then PC := 167
144 [-]: JMP       167          ; PC := 167
145 [-]: GETGLOBAL R7 K21       ; R7 := gGameRules
146 [-]: SELF      R7 R7 K36    ; R8 := R7; R7 := R7["0x4A57F63D"]
147 [-]: SELF      R9 R6 K37    ; R10 := R6; R9 := R6["0x1B252E3C"]
148 [-]: CALL      R9 2 2       ; R9 := R9(R10)
149 [-]: LOADK     R10 K38      ; R10 := "OnOnslaughtTransmissionReady"
150 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
151 [-]: JMP       167          ; PC := 167
152 [-]: GETGLOBAL R7 K19       ; R7 := 0x400E7765
153 [-]: GETGLOBAL R8 K0        ; R8 := _T
154 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["MissionTransmissionSet"]
155 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x46D0EB8D"]
156 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
157 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
158 [-]: TEST      R7 1         ; if R7 then PC := 167
159 [-]: JMP       167          ; PC := 167
160 [-]: GETUPVAL  R7 U3        ; R7 := U3
161 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["0x25992394"]
162 [-]: GETGLOBAL R8 K0        ; R8 := _T
163 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["MissionTransmissionSet"]
164 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x46D0EB8D"]
165 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
166 [-]: CALL      R7 0 1       ; R7(R8,...)
167 [-]: RETURN    R0 1         ; return 
168 [-]: GETUPVAL  R7 U1        ; R7 := U1
169 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["MissionType"]
170 [-]: GETGLOBAL R8 K12       ; R8 := gRegion
171 [-]: SELF      R8 R8 K41    ; R9 := R8; R8 := R8["0xD2075696"]
172 [-]: CALL      R8 2 2       ; R8 := R8(R9)
173 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["level"]
174 [-]: GETUPVAL  R9 U1        ; R9 := U1
175 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["ExterminateMidCout"]
176 [-]: EQ        1 R9 K44     ; if R9 == 9999 then PC := 190
177 [-]: JMP       190          ; PC := 190
178 [-]: GETUPVAL  R9 U2        ; R9 := U2
179 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
180 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
181 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
182 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
183 [-]: CALL      R11 2 2      ; R11 := R11(R12)
184 [-]: LOADK     R12 K7       ; R12 := 0
185 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
186 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
187 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
188 [-]: CALL      R9 0 1       ; R9(R10,...)
189 [-]: JMP       513          ; PC := 513
190 [-]: GETGLOBAL R9 K19       ; R9 := 0x400E7765
191 [-]: MOVE      R10 R8       ; R10 := R8
192 [-]: CALL      R9 2 2       ; R9 := R9(R10)
193 [-]: TEST      R9 1         ; if R9 then PC := 215
194 [-]: JMP       215          ; PC := 215
195 [-]: GETGLOBAL R9 K46       ; R9 := string
196 [-]: GETTABLE  R9 R9 K47    ; R9 := R9["0xDE44F664"]
197 [-]: SELF      R10 R8 K37   ; R11 := R8; R10 := R8["0x1B252E3C"]
198 [-]: CALL      R10 2 2      ; R10 := R10(R11)
199 [-]: LOADK     R11 K48      ; R11 := "Dojo"
200 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
201 [-]: EQ        1 R9 K16     ; if R9 == nil then PC := 215
202 [-]: JMP       215          ; PC := 215
203 [-]: GETUPVAL  R9 U2        ; R9 := U2
204 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
205 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
206 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
207 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
208 [-]: CALL      R11 2 2      ; R11 := R11(R12)
209 [-]: LOADK     R12 K7       ; R12 := 0
210 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
211 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
212 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
213 [-]: CALL      R9 0 1       ; R9(R10,...)
214 [-]: JMP       513          ; PC := 513
215 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
216 [-]: GETTABLE  R9 R9 K49    ; R9 := R9["MT_ASSASSINATION"]
217 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 231
218 [-]: JMP       231          ; PC := 231
219 [-]: GETUPVAL  R9 U2        ; R9 := U2
220 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
221 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
222 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
223 [-]: LOADK     R12 K50      ; R12 := "MissionCompleteAsassinate"
224 [-]: CALL      R11 2 2      ; R11 := R11(R12)
225 [-]: LOADK     R12 K7       ; R12 := 0
226 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
227 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
228 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
229 [-]: CALL      R9 0 1       ; R9(R10,...)
230 [-]: JMP       513          ; PC := 513
231 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
232 [-]: GETTABLE  R9 R9 K51    ; R9 := R9["MT_EXTERMINATION"]
233 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 247
234 [-]: JMP       247          ; PC := 247
235 [-]: GETUPVAL  R9 U2        ; R9 := U2
236 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
237 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
238 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
239 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
240 [-]: CALL      R11 2 2      ; R11 := R11(R12)
241 [-]: LOADK     R12 K7       ; R12 := 0
242 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
243 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
244 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
245 [-]: CALL      R9 0 1       ; R9(R10,...)
246 [-]: JMP       513          ; PC := 513
247 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
248 [-]: GETTABLE  R9 R9 K52    ; R9 := R9["MT_SURVIVAL"]
249 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 263
250 [-]: JMP       263          ; PC := 263
251 [-]: GETUPVAL  R9 U2        ; R9 := U2
252 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
253 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
254 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
255 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
256 [-]: CALL      R11 2 2      ; R11 := R11(R12)
257 [-]: LOADK     R12 K7       ; R12 := 0
258 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
259 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
260 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
261 [-]: CALL      R9 0 1       ; R9(R10,...)
262 [-]: JMP       513          ; PC := 513
263 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
264 [-]: GETTABLE  R9 R9 K53    ; R9 := R9["MT_RESCUE"]
265 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 279
266 [-]: JMP       279          ; PC := 279
267 [-]: GETUPVAL  R9 U2        ; R9 := U2
268 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
269 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
270 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
271 [-]: LOADK     R12 K54      ; R12 := "MissionCompleteRescue"
272 [-]: CALL      R11 2 2      ; R11 := R11(R12)
273 [-]: LOADK     R12 K7       ; R12 := 0
274 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
275 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
276 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
277 [-]: CALL      R9 0 1       ; R9(R10,...)
278 [-]: JMP       513          ; PC := 513
279 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
280 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["MT_SABOTAGE"]
281 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 295
282 [-]: JMP       295          ; PC := 295
283 [-]: GETUPVAL  R9 U2        ; R9 := U2
284 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
285 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
286 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
287 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
288 [-]: CALL      R11 2 2      ; R11 := R11(R12)
289 [-]: LOADK     R12 K7       ; R12 := 0
290 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
291 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
292 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
293 [-]: CALL      R9 0 1       ; R9(R10,...)
294 [-]: JMP       513          ; PC := 513
295 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
296 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MT_CAPTURE"]
297 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 311
298 [-]: JMP       311          ; PC := 311
299 [-]: GETUPVAL  R9 U2        ; R9 := U2
300 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
301 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
302 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
303 [-]: LOADK     R12 K57      ; R12 := "MissionCompleteCapture"
304 [-]: CALL      R11 2 2      ; R11 := R11(R12)
305 [-]: LOADK     R12 K7       ; R12 := 0
306 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
307 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
308 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
309 [-]: CALL      R9 0 1       ; R9(R10,...)
310 [-]: JMP       513          ; PC := 513
311 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
312 [-]: GETTABLE  R9 R9 K58    ; R9 := R9["MT_COUNTER_INTEL"]
313 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 327
314 [-]: JMP       327          ; PC := 327
315 [-]: GETUPVAL  R9 U2        ; R9 := U2
316 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
317 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
318 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
319 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
320 [-]: CALL      R11 2 2      ; R11 := R11(R12)
321 [-]: LOADK     R12 K7       ; R12 := 0
322 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
323 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
324 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
325 [-]: CALL      R9 0 1       ; R9(R10,...)
326 [-]: JMP       513          ; PC := 513
327 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
328 [-]: GETTABLE  R9 R9 K59    ; R9 := R9["MT_INTEL"]
329 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 343
330 [-]: JMP       343          ; PC := 343
331 [-]: GETUPVAL  R9 U2        ; R9 := U2
332 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
333 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
334 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
335 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
336 [-]: CALL      R11 2 2      ; R11 := R11(R12)
337 [-]: LOADK     R12 K7       ; R12 := 0
338 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
339 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
340 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
341 [-]: CALL      R9 0 1       ; R9(R10,...)
342 [-]: JMP       513          ; PC := 513
343 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
344 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["MT_DEFENSE"]
345 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 359
346 [-]: JMP       359          ; PC := 359
347 [-]: GETUPVAL  R9 U2        ; R9 := U2
348 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
349 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
350 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
351 [-]: LOADK     R12 K61      ; R12 := "MissionCompleteDefend"
352 [-]: CALL      R11 2 2      ; R11 := R11(R12)
353 [-]: LOADK     R12 K7       ; R12 := 0
354 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
355 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
356 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
357 [-]: CALL      R9 0 1       ; R9(R10,...)
358 [-]: JMP       513          ; PC := 513
359 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
360 [-]: GETTABLE  R9 R9 K62    ; R9 := R9["MT_TERRITORY"]
361 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 375
362 [-]: JMP       375          ; PC := 375
363 [-]: GETUPVAL  R9 U2        ; R9 := U2
364 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
365 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
366 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
367 [-]: LOADK     R12 K63      ; R12 := "MissionCompleteTerritory"
368 [-]: CALL      R11 2 2      ; R11 := R11(R12)
369 [-]: LOADK     R12 K7       ; R12 := 0
370 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
371 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
372 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
373 [-]: CALL      R9 0 1       ; R9(R10,...)
374 [-]: JMP       513          ; PC := 513
375 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
376 [-]: GETTABLE  R9 R9 K64    ; R9 := R9["MT_RETRIEVAL"]
377 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 391
378 [-]: JMP       391          ; PC := 391
379 [-]: GETUPVAL  R9 U2        ; R9 := U2
380 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
381 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
382 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
383 [-]: LOADK     R12 K65      ; R12 := "MissionCompleteRetrieval"
384 [-]: CALL      R11 2 2      ; R11 := R11(R12)
385 [-]: LOADK     R12 K7       ; R12 := 0
386 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
387 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
388 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
389 [-]: CALL      R9 0 1       ; R9(R10,...)
390 [-]: JMP       513          ; PC := 513
391 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
392 [-]: GETTABLE  R9 R9 K66    ; R9 := R9["MT_HIVE"]
393 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 407
394 [-]: JMP       407          ; PC := 407
395 [-]: GETUPVAL  R9 U2        ; R9 := U2
396 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
397 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
398 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
399 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
400 [-]: CALL      R11 2 2      ; R11 := R11(R12)
401 [-]: LOADK     R12 K7       ; R12 := 0
402 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
403 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
404 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
405 [-]: CALL      R9 0 1       ; R9(R10,...)
406 [-]: JMP       513          ; PC := 513
407 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
408 [-]: GETTABLE  R9 R9 K67    ; R9 := R9["MT_MASTERY"]
409 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 427
410 [-]: JMP       427          ; PC := 427
411 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
412 [-]: GETTABLE  R9 R9 K68    ; R9 := R9["MT_SALVAGE"]
413 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 427
414 [-]: JMP       427          ; PC := 427
415 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
416 [-]: GETTABLE  R9 R9 K69    ; R9 := R9["MT_EXCAVATE"]
417 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 427
418 [-]: JMP       427          ; PC := 427
419 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
420 [-]: GETTABLE  R9 R9 K70    ; R9 := R9["MT_RAID"]
421 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 427
422 [-]: JMP       427          ; PC := 427
423 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
424 [-]: GETTABLE  R9 R9 K71    ; R9 := R9["MT_PVP"]
425 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 429
426 [-]: JMP       429          ; PC := 429
427 [-]: RETURN    R0 1         ; return 
428 [-]: JMP       513          ; PC := 513
429 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
430 [-]: GETTABLE  R9 R9 K72    ; R9 := R9["MT_PURGE"]
431 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 435
432 [-]: JMP       435          ; PC := 435
433 [-]: RETURN    R0 1         ; return 
434 [-]: JMP       513          ; PC := 513
435 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
436 [-]: GETTABLE  R9 R9 K73    ; R9 := R9["MT_JUNCTION"]
437 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 440
438 [-]: JMP       440          ; PC := 440
439 [-]: JMP       513          ; PC := 513
440 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
441 [-]: GETTABLE  R9 R9 K74    ; R9 := R9["MT_ARENA"]
442 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 446
443 [-]: JMP       446          ; PC := 446
444 [-]: RETURN    R0 1         ; return 
445 [-]: JMP       513          ; PC := 513
446 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
447 [-]: GETTABLE  R9 R9 K75    ; R9 := R9["MT_RACE"]
448 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 451
449 [-]: JMP       451          ; PC := 451
450 [-]: JMP       513          ; PC := 513
451 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
452 [-]: GETTABLE  R9 R9 K76    ; R9 := R9["MT_ASSAULT"]
453 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 467
454 [-]: JMP       467          ; PC := 467
455 [-]: GETUPVAL  R9 U2        ; R9 := U2
456 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
457 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
458 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
459 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
460 [-]: CALL      R11 2 2      ; R11 := R11(R12)
461 [-]: LOADK     R12 K7       ; R12 := 0
462 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
463 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
464 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
465 [-]: CALL      R9 0 1       ; R9(R10,...)
466 [-]: JMP       513          ; PC := 513
467 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
468 [-]: GETTABLE  R9 R9 K77    ; R9 := R9["MT_LANDSCAPE"]
469 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 472
470 [-]: JMP       472          ; PC := 472
471 [-]: JMP       513          ; PC := 513
472 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
473 [-]: GETTABLE  R9 R9 K78    ; R9 := R9["MT_PURIFY"]
474 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 484
475 [-]: JMP       484          ; PC := 484
476 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
477 [-]: GETTABLE  R9 R9 K79    ; R9 := R9["MT_EVACUATION"]
478 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 484
479 [-]: JMP       484          ; PC := 484
480 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
481 [-]: GETTABLE  R9 R9 K80    ; R9 := R9["MT_ARTIFACT"]
482 [-]: EQ        0 R7 R9      ; if R7 ~= R9 then PC := 502
483 [-]: JMP       502          ; PC := 502
484 [-]: GETGLOBAL R9 K19       ; R9 := 0x400E7765
485 [-]: GETGLOBAL R10 K0       ; R10 := _T
486 [-]: GETTABLE  R10 R10 K81  ; R10 := R10["TransmissionSet"]
487 [-]: CALL      R9 2 2       ; R9 := R9(R10)
488 [-]: TEST      R9 1         ; if R9 then PC := 513
489 [-]: JMP       513          ; PC := 513
490 [-]: GETUPVAL  R9 U2        ; R9 := U2
491 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
492 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
493 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
494 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
495 [-]: CALL      R11 2 2      ; R11 := R11(R12)
496 [-]: LOADK     R12 K7       ; R12 := 0
497 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
498 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
499 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
500 [-]: CALL      R9 0 1       ; R9(R10,...)
501 [-]: JMP       513          ; PC := 513
502 [-]: GETUPVAL  R9 U2        ; R9 := U2
503 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x449D27BE"]
504 [-]: GETGLOBAL R10 K9       ; R10 := missionEndTransmissionSet
505 [-]: GETGLOBAL R11 K10      ; R11 := 0xEC274B1A
506 [-]: LOADK     R12 K45      ; R12 := "MissionComplete"
507 [-]: CALL      R11 2 2      ; R11 := R11(R12)
508 [-]: LOADK     R12 K7       ; R12 := 0
509 [-]: GETGLOBAL R13 K12      ; R13 := gRegion
510 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0x3E2F6BF"]
511 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
512 [-]: CALL      R9 0 1       ; R9(R10,...)
513 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1669
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  2 [-]: SETTABLE  R3 K0 R0     ; R3["Label"] := R0
  3 [-]: SETTABLE  R3 K1 R1     ; R3["Value"] := R1
  4 [-]: SETTABLE  R3 K2 R2     ; R3["Progress"] := R2
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0xA77DA8EE"]
  7 [-]: MOVE      R6 R3        ; R6 := R3
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 10 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1675
; #Upvalues:       0
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0x1BF588C6
  2 [-]: LOADK     R8 K1        ; R8 := 0
  3 [-]: CALL      R7 2 1       ; R7(R8)
  4 [-]: GETGLOBAL R7 K2        ; R7 := 0xF595ADDE
  5 [-]: MOVE      R8 R2        ; R8 := R2
  6 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  7 [-]: LOADK     R8 K1        ; R8 := 0
  8 [-]: GETGLOBAL R9 K3        ; R9 := 0xECFDD17
  9 [-]: MOVE      R10 R0       ; R10 := R0
 10 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETTABLE  R14 R13 K4   ; R14 := R13["Label"]
 13 [-]: EQ        0 R14 R1     ; if R14 ~= R1 then PC := 38
 14 [-]: JMP       38           ; PC := 38
 15 [-]: GETTABLE  R14 R0 R12   ; R14 := R0[R12]
 16 [-]: GETTABLE  R14 R14 K5   ; R14 := R14["Value"]
 17 [-]: LEN       R14 R14      ; R14 := # R14
 18 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 19 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["Value"]
 20 [-]: ADD       R16 R14 K6   ; R16 := R14 + 1
 21 [-]: SETTABLE  R15 R16 R7   ; R15[R16] := R7
 22 [-]: TEST      R3 0         ; if not R3 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 25 [-]: GETTABLE  R15 R15 K7   ; R15 := R15["BestValue"]
 26 [-]: LT        0 R15 R7     ; if R15 >= R7 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 29 [-]: SETTABLE  R15 K7 R7    ; R15["BestValue"] := R7
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 32 [-]: GETTABLE  R15 R15 K7   ; R15 := R15["BestValue"]
 33 [-]: LT        0 R7 R15     ; if R7 >= R15 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETTABLE  R15 R0 R12   ; R15 := R0[R12]
 36 [-]: SETTABLE  R15 K7 R7    ; R15["BestValue"] := R7
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: MOVE      R8 R12       ; R8 := R12
 39 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 12; R11 := R12 end
 40 [-]: JMP       12           ; PC := 12
 41 [-]: ADD       R15 R8 K6    ; R15 := R8 + 1
 42 [-]: NEWTABLE  R16 0 6      ; R16 := {}
 43 [-]: SETTABLE  R16 K4 R1    ; R16["Label"] := R1
 44 [-]: NEWTABLE  R17 0 0      ; R17 := {}
 45 [-]: SETTABLE  R16 K5 R17   ; R16["Value"] := R17
 46 [-]: SETTABLE  R16 K7 R7    ; R16["BestValue"] := R7
 47 [-]: SETTABLE  R16 K8 R3    ; R16["BestIsMax"] := R3
 48 [-]: SETTABLE  R16 K9 R4    ; R16["IsRatio"] := R4
 49 [-]: SETTABLE  R16 K10 R6   ; R16["HideValue"] := R6
 50 [-]: SETTABLE  R0 R15 R16   ; R0[R15] := R16
 51 [-]: ADD       R15 R8 K6    ; R15 := R8 + 1
 52 [-]: GETTABLE  R15 R0 R15   ; R15 := R0[R15]
 53 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["Value"]
 54 [-]: SETTABLE  R15 K6 R7    ; R15[1] := R7
 55 [-]: ADD       R15 R8 K6    ; R15 := R8 + 1
 56 [-]: GETTABLE  R15 R0 R15   ; R15 := R0[R15]
 57 [-]: SETTABLE  R15 K11 R5   ; R15["ProgressMax"] := R5
 58 [-]: RETURN    R0 2         ; return R0
 59 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 1709
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x1BF588C6
  2 [-]: LOADK     R4 K1        ; R4 := 0
  3 [-]: CALL      R3 2 1       ; R3(R4)
  4 [-]: LOADK     R3 K1        ; R3 := 0
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0xECFDD17
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETTABLE  R9 R8 K3     ; R9 := R8["Label"]
 10 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
 13 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["Value"]
 14 [-]: LEN       R9 R9        ; R9 := # R9
 15 [-]: GETTABLE  R10 R0 R7    ; R10 := R0[R7]
 16 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["Value"]
 17 [-]: ADD       R11 R9 K5    ; R11 := R9 + 1
 18 [-]: SETTABLE  R10 R11 R2   ; R10[R11] := R2
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: MOVE      R3 R7        ; R3 := R7
 21 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 9; R6 := R7 end
 22 [-]: JMP       9            ; PC := 9
 23 [-]: ADD       R10 R3 K5    ; R10 := R3 + 1
 24 [-]: NEWTABLE  R11 0 2      ; R11 := {}
 25 [-]: SETTABLE  R11 K3 R1    ; R11["Label"] := R1
 26 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 27 [-]: SETTABLE  R11 K4 R12   ; R11["Value"] := R12
 28 [-]: SETTABLE  R0 R10 R11   ; R0[R10] := R11
 29 [-]: ADD       R10 R3 K5    ; R10 := R3 + 1
 30 [-]: GETTABLE  R10 R0 R10   ; R10 := R0[R10]
 31 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["Value"]
 32 [-]: SETTABLE  R10 K5 R2    ; R10[1] := R2
 33 [-]: RETURN    R0 2         ; return R0
 34 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 1730
; #Upvalues:       0
; #Parameters:     8
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R8 0 8       ; R8 := {}
  2 [-]: SETTABLE  R8 K0 R0     ; R8["Name"] := R0
  3 [-]: SETTABLE  R8 K1 R1     ; R8["Count"] := R1
  4 [-]: SETTABLE  R8 K2 R2     ; R8["TaxedCount"] := R2
  5 [-]: SETTABLE  R8 K3 R3     ; R8["Icon"] := R3
  6 [-]: SETTABLE  R8 K4 R4     ; R8["Background"] := R4
  7 [-]: SETTABLE  R8 K5 R5     ; R8["Material"] := R5
  8 [-]: SETTABLE  R8 K6 R6     ; R8["Color"] := R6
  9 [-]: SETTABLE  R8 K7 R7     ; R8["SortPriority"] := R7
 10 [-]: RETURN    R8 2         ; return R8
 11 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 1743
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["goalId"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 42
  7 [-]: JMP       42           ; PC := 42
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["goalId"]
  9 [-]: EQ        1 R1 K2      ; if R1 == "" then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 55
 15 [-]: JMP       55           ; PC := 55
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x2D0B8A86"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mGoals"]
 20 [-]: LOADK     R2 K5        ; R2 := 1
 21 [-]: LEN       R3 R1        ; R3 := # R1
 22 [-]: LOADK     R4 K5        ; R4 := 1
 23 [-]: FORPREP   R2 40        ; R2 -= R4; PC := 40
 24 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 25 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["mId"]
 26 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["mId"]
 27 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["goalId"]
 28 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 31 [-]: GETTABLE  R7 R1 R5     ; R7 := R1[R5]
 32 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["mIcon"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: TEST      R6 1         ; if R6 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 37 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mIcon"]
 38 [-]: RETURN    R6 2         ; return R6
 39 [-]: JMP       55           ; PC := 55
 40 [-]: FORLOOP   R2 24        ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETUPVAL  R6 U2        ; R6 := U2
 43 [-]: CALL      R6 1 2       ; R6 := R6()
 44 [-]: TEST      R6 0         ; if not R6 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: LOADNIL   R6 R6        ; R6 := nil
 47 [-]: RETURN    R6 2         ; return R6
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETUPVAL  R6 U3        ; R6 := U3
 50 [-]: CALL      R6 1 2       ; R6 := R6()
 51 [-]: TEST      R6 0         ; if not R6 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R6 K8        ; R6 := onslaughtScoreIcon
 54 [-]: RETURN    R6 2         ; return R6
 55 [-]: GETGLOBAL R6 K9        ; R6 := eventIconTexture
 56 [-]: RETURN    R6 2         ; return R6
 57 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 1766
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: GETTABLE  R3 R2 K0     ; R3 := R2["maxWaveNum"]
  4 [-]: EQ        1 R3 K1      ; if R3 == 0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: CALL      R4 1 2       ; R4 := R4()
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: CALL      R5 1 2       ; R5 := R5()
 12 [-]: TEST      R5 0         ; if not R5 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: TESTSET   R5 R3 1      ; if R3 then PC := 17 else R5 := R3
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R5 R4        ; R5 := R4
 17 [-]: GETUPVAL  R6 U3        ; R6 := U3
 18 [-]: CALL      R6 1 2       ; R6 := R6()
 19 [-]: TEST      R6 0         ; if not R6 then PC := 99
 20 [-]: JMP       99           ; PC := 99
 21 [-]: LOADK     R6 K2        ; R6 := "/Lotus/Language/Menu/MissionScore"
 22 [-]: GETUPVAL  R7 U4        ; R7 := U4
 23 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0x2D0B8A86"]
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["mGoals"]
 26 [-]: LOADNIL   R8 R8        ; R8 := nil
 27 [-]: LOADK     R9 K5        ; R9 := 1
 28 [-]: LEN       R10 R7       ; R10 := # R7
 29 [-]: LOADK     R11 K5       ; R11 := 1
 30 [-]: FORPREP   R9 90        ; R9 -= R11; PC := 90
 31 [-]: GETTABLE  R13 R7 R12   ; R13 := R7[R12]
 32 [-]: GETTABLE  R14 R13 K6   ; R14 := R13["mId"]
 33 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["mId"]
 34 [-]: GETTABLE  R15 R2 K7    ; R15 := R2["goalId"]
 35 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: GETTABLE  R14 R13 K8   ; R14 := R13["mOptionalInMission"]
 38 [-]: TEST      R14 0        ; if not R14 then PC := 90
 39 [-]: JMP       90           ; PC := 90
 40 [-]: GETGLOBAL R14 K9       ; R14 := 0xEC274B1A
 41 [-]: GETTABLE  R15 R13 K10  ; R15 := R13["mNode"]
 42 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 43 [-]: GETTABLE  R15 R2 K11   ; R15 := R2["location"]
 44 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 90
 45 [-]: JMP       90           ; PC := 90
 46 [-]: GETTABLE  R14 R13 K12  ; R14 := R13["mScoreLocTag"]
 47 [-]: EQ        1 R14 K13    ; if R14 == "" then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: GETTABLE  R6 R13 K12   ; R6 := R13["mScoreLocTag"]
 50 [-]: TEST      R3 0         ; if not R3 then PC := 69
 51 [-]: JMP       69           ; PC := 69
 52 [-]: GETUPVAL  R14 U2       ; R14 := U2
 53 [-]: CALL      R14 1 2      ; R14 := R14()
 54 [-]: TEST      R14 0        ; if not R14 then PC := 69
 55 [-]: JMP       69           ; PC := 69
 56 [-]: GETTABLE  R14 R13 K14  ; R14 := R13["mScoreVar"]
 57 [-]: GETGLOBAL R15 K15      ; R15 := EMPTY_SYMBOL
 58 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 69
 59 [-]: JMP       69           ; PC := 69
 60 [-]: GETTABLE  R14 R13 K16  ; R14 := R13["mScoreSumTag"]
 61 [-]: GETGLOBAL R15 K15      ; R15 := EMPTY_SYMBOL
 62 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETTABLE  R14 R13 K17  ; R14 := R13["mScoreMaxTag"]
 65 [-]: GETGLOBAL R15 K15      ; R15 := EMPTY_SYMBOL
 66 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: MOVE      R5 R0        ; R5 := R0
 69 [-]: GETTABLE  R14 R13 K14  ; R14 := R13["mScoreVar"]
 70 [-]: GETGLOBAL R15 K9       ; R15 := 0xEC274B1A
 71 [-]: LOADK     R16 K18      ; R16 := "Halloween"
 72 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 73 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 80
 74 [-]: JMP       80           ; PC := 80
 75 [-]: GETTABLE  R14 R2 K0    ; R14 := R2["maxWaveNum"]
 76 [-]: LT        0 K1 R14     ; if 0 >= R14 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: MOVE      R5 R1        ; R5 := R1
 79 [-]: JMP       91           ; PC := 91
 80 [-]: GETTABLE  R14 R13 K14  ; R14 := R13["mScoreVar"]
 81 [-]: GETGLOBAL R15 K9       ; R15 := 0xEC274B1A
 82 [-]: LOADK     R16 K19      ; R16 := "FomorianEventScore"
 83 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 84 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: NEWTABLE  R14 0 1      ; R14 := {}
 87 [-]: SETTABLE  R14 K20 K13  ; R14["VALUE"] := ""
 88 [-]: MOVE      R8 R14       ; R8 := R14
 89 [-]: JMP       91           ; PC := 91
 90 [-]: FORLOOP   R9 31        ; R9 += R11; if R9 <= R10 then begin PC := 31; R12 := R9 end
 91 [-]: GETGLOBAL R14 K21      ; R14 := mMovie
 92 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5DB0BD4"]
 93 [-]: MOVE      R16 R6       ; R16 := R6
 94 [-]: MOVE      R17 R0       ; R17 := R0
 95 [-]: MOVE      R18 R8       ; R18 := R8
 96 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 97 [-]: MOVE      R1 R14       ; R1 := R14
 98 [-]: JMP       159          ; PC := 159
 99 [-]: TEST      R3 0         ; if not R3 then PC := 159
100 [-]: JMP       159          ; PC := 159
101 [-]: GETUPVAL  R14 U5       ; R14 := U5
102 [-]: CALL      R14 1 2      ; R14 := R14()
103 [-]: TEST      R14 0        ; if not R14 then PC := 112
104 [-]: JMP       112          ; PC := 112
105 [-]: GETGLOBAL R14 K21      ; R14 := mMovie
106 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5DB0BD4"]
107 [-]: LOADK     R16 K23      ; R16 := "/Lotus/Language/Menu/Profile_Wave"
108 [-]: MOVE      R17 R0       ; R17 := R0
109 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
110 [-]: MOVE      R1 R14       ; R1 := R14
111 [-]: JMP       159          ; PC := 159
112 [-]: GETUPVAL  R14 U6       ; R14 := U6
113 [-]: CALL      R14 1 2      ; R14 := R14()
114 [-]: TEST      R14 0        ; if not R14 then PC := 123
115 [-]: JMP       123          ; PC := 123
116 [-]: GETGLOBAL R14 K21      ; R14 := mMovie
117 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5DB0BD4"]
118 [-]: LOADK     R16 K24      ; R16 := "/Lotus/Language/Game/Round"
119 [-]: MOVE      R17 R0       ; R17 := R0
120 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
121 [-]: MOVE      R1 R14       ; R1 := R14
122 [-]: JMP       159          ; PC := 159
123 [-]: GETUPVAL  R14 U2       ; R14 := U2
124 [-]: CALL      R14 1 2      ; R14 := R14()
125 [-]: TEST      R14 0        ; if not R14 then PC := 129
126 [-]: JMP       129          ; PC := 129
127 [-]: TEST      R3 1         ; if R3 then PC := 131
128 [-]: JMP       131          ; PC := 131
129 [-]: TEST      R4 0         ; if not R4 then PC := 138
130 [-]: JMP       138          ; PC := 138
131 [-]: GETGLOBAL R14 K21      ; R14 := mMovie
132 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5DB0BD4"]
133 [-]: LOADK     R16 K25      ; R16 := "/Lotus/Language/Menu/Profile_Time"
134 [-]: MOVE      R17 R0       ; R17 := R0
135 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
136 [-]: MOVE      R1 R14       ; R1 := R14
137 [-]: JMP       159          ; PC := 159
138 [-]: GETUPVAL  R14 U7       ; R14 := U7
139 [-]: CALL      R14 1 2      ; R14 := R14()
140 [-]: TEST      R14 0        ; if not R14 then PC := 149
141 [-]: JMP       149          ; PC := 149
142 [-]: GETGLOBAL R14 K21      ; R14 := mMovie
143 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5DB0BD4"]
144 [-]: LOADK     R16 K26      ; R16 := "/Lotus/Language/Menu/Profile_Points"
145 [-]: MOVE      R17 R0       ; R17 := R0
146 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
147 [-]: MOVE      R1 R14       ; R1 := R14
148 [-]: JMP       159          ; PC := 159
149 [-]: GETUPVAL  R14 U8       ; R14 := U8
150 [-]: CALL      R14 1 2      ; R14 := R14()
151 [-]: TEST      R14 0        ; if not R14 then PC := 159
152 [-]: JMP       159          ; PC := 159
153 [-]: GETGLOBAL R14 K21      ; R14 := mMovie
154 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5DB0BD4"]
155 [-]: LOADK     R16 K2       ; R16 := "/Lotus/Language/Menu/MissionScore"
156 [-]: MOVE      R17 R0       ; R17 := R0
157 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
158 [-]: MOVE      R1 R14       ; R1 := R14
159 [-]: TEST      R1 0         ; if not R1 then PC := 166
160 [-]: JMP       166          ; PC := 166
161 [-]: GETGLOBAL R14 K27      ; R14 := string
162 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["0x639C642A"]
163 [-]: MOVE      R15 R1       ; R15 := R1
164 [-]: CALL      R14 2 2      ; R14 := R14(R15)
165 [-]: MOVE      R1 R14       ; R1 := R14
166 [-]: TEST      R5 0         ; if not R5 then PC := 175
167 [-]: JMP       175          ; PC := 175
168 [-]: GETUPVAL  R14 U9       ; R14 := U9
169 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["0xC65D09DD"]
170 [-]: GETGLOBAL R15 K21      ; R15 := mMovie
171 [-]: MOVE      R16 R0       ; R16 := R0
172 [-]: MOVE      R17 R0       ; R17 := R0
173 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
174 [-]: MOVE      R0 R14       ; R0 := R14
175 [-]: MOVE      R14 R1       ; R14 := R1
176 [-]: MOVE      R15 R0       ; R15 := R0
177 [-]: RETURN    R14 3        ; return R14,R15
178 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 1825
; #Upvalues:       27
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  95

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  3 [-]: LOADK     R3 K2        ; R3 := 0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x144A28F9"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: GETUPVAL  R5 U1        ; R5 := U1
 21 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0x87D2274C"]
 22 [-]: CALL      R5 1 2       ; R5 := R5()
 23 [-]: TEST      R5 1         ; if R5 then PC := 36
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0xCA086799"]
 27 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 28 [-]: EQ        0 R6 K7      ; if R6 ~= "0x1" then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETUPVAL  R6 U0        ; R6 := U0
 31 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0xFA1F022C"]
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: MOVE      R4 R6        ; R4 := R6
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETUPVAL  R6 U0        ; R6 := U0
 37 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xC6AB8F7"]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: MOVE      R4 R6        ; R4 := R6
 40 [-]: GETUPVAL  R6 U2        ; R6 := U2
 41 [-]: CALL      R6 1 2       ; R6 := R6()
 42 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 43 [-]: GETUPVAL  R8 U3        ; R8 := U3
 44 [-]: CALL      R8 1 2       ; R8 := R8()
 45 [-]: TEST      R8 0         ; if not R8 then PC := 82
 46 [-]: JMP       82           ; PC := 82
 47 [-]: TEST      R3 1         ; if R3 then PC := 82
 48 [-]: JMP       82           ; PC := 82
 49 [-]: GETGLOBAL R8 K10       ; R8 := gMatchingService
 50 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8["0x89A90137"]
 51 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 52 [-]: GETGLOBAL R9 K10       ; R9 := gMatchingService
 53 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0xC6E873C7"]
 54 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 55 [-]: LOADK     R10 K13      ; R10 := 1
 56 [-]: LEN       R11 R4       ; R11 := # R4
 57 [-]: LOADK     R12 K13      ; R12 := 1
 58 [-]: FORPREP   R10 80       ; R10 -= R12; PC := 80
 59 [-]: LOADK     R14 K13      ; R14 := 1
 60 [-]: LEN       R15 R8       ; R15 := # R8
 61 [-]: LOADK     R16 K13      ; R16 := 1
 62 [-]: FORPREP   R14 79       ; R14 -= R16; PC := 79
 63 [-]: GETTABLE  R18 R4 R13   ; R18 := R4[R13]
 64 [-]: GETTABLE  R18 R18 K14  ; R18 := R18["playerName"]
 65 [-]: GETTABLE  R19 R8 R17   ; R19 := R8[R17]
 66 [-]: GETTABLE  R19 R19 K15  ; R19 := R19["name"]
 67 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETTABLE  R18 R8 R17   ; R18 := R8[R17]
 70 [-]: GETTABLE  R18 R18 K16  ; R18 := R18["teamId"]
 71 [-]: EQ        0 R18 R9     ; if R18 ~= R9 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: GETGLOBAL R18 K17      ; R18 := table
 74 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["0xE6450C9D"]
 75 [-]: MOVE      R19 R7       ; R19 := R7
 76 [-]: GETTABLE  R20 R4 R13   ; R20 := R4[R13]
 77 [-]: CALL      R18 3 1      ; R18(R19,R20)
 78 [-]: JMP       80           ; PC := 80
 79 [-]: FORLOOP   R14 63       ; R14 += R16; if R14 <= R15 then begin PC := 63; R17 := R14 end
 80 [-]: FORLOOP   R10 59       ; R10 += R12; if R10 <= R11 then begin PC := 59; R13 := R10 end
 81 [-]: MOVE      R4 R7        ; R4 := R7
 82 [-]: LEN       R18 R4       ; R18 := # R4
 83 [-]: LOADK     R19 K2       ; R19 := 0
 84 [-]: LOADK     R20 K2       ; R20 := 0
 85 [-]: LOADK     R21 K13      ; R21 := 1
 86 [-]: MOVE      R22 R18      ; R22 := R18
 87 [-]: LOADK     R23 K13      ; R23 := 1
 88 [-]: FORPREP   R21 95       ; R21 -= R23; PC := 95
 89 [-]: GETTABLE  R25 R4 R24   ; R25 := R4[R24]
 90 [-]: GETTABLE  R25 R25 K19  ; R25 := R25["damageDealt"]
 91 [-]: ADD       R19 R19 R25  ; R19 := R19 + R25
 92 [-]: GETTABLE  R25 R4 R24   ; R25 := R4[R24]
 93 [-]: GETTABLE  R25 R25 K20  ; R25 := R25["damageTaken"]
 94 [-]: ADD       R20 R20 R25  ; R20 := R20 + R25
 95 [-]: FORLOOP   R21 89       ; R21 += R23; if R21 <= R22 then begin PC := 89; R24 := R21 end
 96 [-]: GETUPVAL  R25 U4       ; R25 := U4
 97 [-]: CALL      R25 1 2      ; R25 := R25()
 98 [-]: LOADK     R26 K13      ; R26 := 1
 99 [-]: LEN       R27 R4       ; R27 := # R4
100 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 185
101 [-]: JMP       185          ; PC := 185
102 [-]: MOVE      R27 R0       ; R27 := R0
103 [-]: LOADNIL   R28 R28      ; R28 := nil
104 [-]: LOADK     R29 K13      ; R29 := 1
105 [-]: LEN       R30 R25      ; R30 := # R25
106 [-]: LOADK     R31 K13      ; R31 := 1
107 [-]: FORPREP   R29 116      ; R29 -= R31; PC := 116
108 [-]: GETTABLE  R33 R25 R32  ; R33 := R25[R32]
109 [-]: GETTABLE  R33 R33 K15  ; R33 := R33["name"]
110 [-]: GETTABLE  R34 R4 R26   ; R34 := R4[R26]
111 [-]: GETTABLE  R34 R34 K14  ; R34 := R34["playerName"]
112 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 116
113 [-]: JMP       116          ; PC := 116
114 [-]: GETTABLE  R28 R25 R32  ; R28 := R25[R32]
115 [-]: MOVE      R27 R1       ; R27 := R1
116 [-]: FORLOOP   R29 108      ; R29 += R31; if R29 <= R30 then begin PC := 108; R32 := R29 end
117 [-]: TEST      R27 0        ; if not R27 then PC := 121
118 [-]: JMP       121          ; PC := 121
119 [-]: ADD       R26 R26 K13  ; R26 := R26 + 1
120 [-]: JMP       126          ; PC := 126
121 [-]: GETGLOBAL R33 K17      ; R33 := table
122 [-]: GETTABLE  R33 R33 K21  ; R33 := R33["0xCDB1FD5E"]
123 [-]: MOVE      R34 R4       ; R34 := R4
124 [-]: MOVE      R35 R26      ; R35 := R26
125 [-]: CALL      R33 3 1      ; R33(R34,R35)
126 [-]: GETGLOBAL R33 K3       ; R33 := 0x400E7765
127 [-]: MOVE      R34 R28      ; R34 := R28
128 [-]: CALL      R33 2 2      ; R33 := R33(R34)
129 [-]: TEST      R33 1        ; if R33 then PC := 99
130 [-]: JMP       99           ; PC := 99
131 [-]: GETUPVAL  R33 U1       ; R33 := U1
132 [-]: GETTABLE  R33 R33 K22  ; R33 := R33["0x49473D0D"]
133 [-]: GETGLOBAL R34 K23      ; R34 := mMovie
134 [-]: MOVE      R35 R28      ; R35 := R28
135 [-]: MOVE      R36 R6       ; R36 := R6
136 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
137 [-]: LOADK     R34 K24      ; R34 := ""
138 [-]: GETGLOBAL R35 K3       ; R35 := 0x400E7765
139 [-]: GETTABLE  R36 R33 K25  ; R36 := R33["NameWithRank"]
140 [-]: CALL      R35 2 2      ; R35 := R35(R36)
141 [-]: TEST      R35 1        ; if R35 then PC := 99
142 [-]: JMP       99           ; PC := 99
143 [-]: GETGLOBAL R35 K3       ; R35 := 0x400E7765
144 [-]: GETTABLE  R36 R33 K26  ; R36 := R33["Name"]
145 [-]: CALL      R35 2 2      ; R35 := R35(R36)
146 [-]: TEST      R35 1        ; if R35 then PC := 99
147 [-]: JMP       99           ; PC := 99
148 [-]: GETGLOBAL R35 K3       ; R35 := 0x400E7765
149 [-]: GETTABLE  R36 R33 K27  ; R36 := R33["WeaponInfo"]
150 [-]: CALL      R35 2 2      ; R35 := R35(R36)
151 [-]: TEST      R35 1        ; if R35 then PC := 156
152 [-]: JMP       156          ; PC := 156
153 [-]: MOVE      R35 R34      ; R35 := R34
154 [-]: GETTABLE  R36 R33 K27  ; R36 := R33["WeaponInfo"]
155 [-]: CONCAT    R34 R35 R36  ; R34 := R35 .. R36
156 [-]: GETGLOBAL R35 K3       ; R35 := 0x400E7765
157 [-]: GETTABLE  R36 R33 K28  ; R36 := R33["CompanionInfo"]
158 [-]: CALL      R35 2 2      ; R35 := R35(R36)
159 [-]: TEST      R35 1        ; if R35 then PC := 164
160 [-]: JMP       164          ; PC := 164
161 [-]: MOVE      R35 R34      ; R35 := R34
162 [-]: GETTABLE  R36 R33 K28  ; R36 := R33["CompanionInfo"]
163 [-]: CONCAT    R34 R35 R36  ; R34 := R35 .. R36
164 [-]: GETGLOBAL R35 K3       ; R35 := 0x400E7765
165 [-]: GETTABLE  R36 R33 K29  ; R36 := R33["AuraInfo"]
166 [-]: CALL      R35 2 2      ; R35 := R35(R36)
167 [-]: TEST      R35 1        ; if R35 then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: MOVE      R35 R34      ; R35 := R34
170 [-]: GETTABLE  R36 R33 K29  ; R36 := R33["AuraInfo"]
171 [-]: CONCAT    R34 R35 R36  ; R34 := R35 .. R36
172 [-]: EQ        1 R34 K24    ; if R34 == "" then PC := 99
173 [-]: JMP       99           ; PC := 99
174 [-]: GETGLOBAL R35 K17      ; R35 := table
175 [-]: GETTABLE  R35 R35 K18  ; R35 := R35["0xE6450C9D"]
176 [-]: GETUPVAL  R36 U5       ; R36 := U5
177 [-]: NEWTABLE  R37 0 3      ; R37 := {}
178 [-]: GETTABLE  R38 R33 K26  ; R38 := R33["Name"]
179 [-]: SETTABLE  R37 K26 R38  ; R37["Name"] := R38
180 [-]: GETTABLE  R38 R33 K25  ; R38 := R33["NameWithRank"]
181 [-]: SETTABLE  R37 K25 R38  ; R37["NameWithRank"] := R38
182 [-]: SETTABLE  R37 K30 R34  ; R37["LoadoutDesc"] := R34
183 [-]: CALL      R35 3 1      ; R35(R36,R37)
184 [-]: JMP       99           ; PC := 99
185 [-]: LEN       R18 R4       ; R18 := # R4
186 [-]: GETUPVAL  R35 U6       ; R35 := U6
187 [-]: GETUPVAL  R36 U7       ; R36 := U7
188 [-]: GETTABLE  R36 R36 K31  ; R36 := R36["Stats"]
189 [-]: GETTABLE  R35 R35 R36  ; R35 := R35[R36]
190 [-]: NEWTABLE  R36 0 0      ; R36 := {}
191 [-]: SETTABLE  R35 K32 R36  ; R35["statTable"] := R36
192 [-]: GETUPVAL  R35 U0       ; R35 := U0
193 [-]: SELF      R35 R35 K33  ; R36 := R35; R35 := R35["0xCE9852EC"]
194 [-]: CALL      R35 2 2      ; R35 := R35(R36)
195 [-]: MOVE      R36 R0       ; R36 := R0
196 [-]: MOVE      R37 R0       ; R37 := R0
197 [-]: MOVE      R37 R8       ; R37 := R8
198 [-]: LOADK     R37 K13      ; R37 := 1
199 [-]: MOVE      R38 R18      ; R38 := R18
200 [-]: LOADK     R39 K13      ; R39 := 1
201 [-]: FORPREP   R37 675      ; R37 -= R39; PC := 675
202 [-]: GETTABLE  R41 R4 R40   ; R41 := R4[R40]
203 [-]: TEST      R36 0        ; if not R36 then PC := 242
204 [-]: JMP       242          ; PC := 242
205 [-]: LOADNIL   R42 R42      ; R42 := nil
206 [-]: LOADK     R43 K13      ; R43 := 1
207 [-]: LEN       R44 R35      ; R44 := # R35
208 [-]: LOADK     R45 K13      ; R45 := 1
209 [-]: FORPREP   R43 216      ; R43 -= R45; PC := 216
210 [-]: GETTABLE  R47 R35 R46  ; R47 := R35[R46]
211 [-]: GETTABLE  R47 R47 K34  ; R47 := R47["winner"]
212 [-]: GETTABLE  R48 R41 K14  ; R48 := R41["playerName"]
213 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 216
214 [-]: JMP       216          ; PC := 216
215 [-]: GETTABLE  R42 R35 R46  ; R42 := R35[R46]
216 [-]: FORLOOP   R43 210      ; R43 += R45; if R43 <= R44 then begin PC := 210; R46 := R43 end
217 [-]: LOADK     R47 K35      ; R47 := "NONE"
218 [-]: GETGLOBAL R48 K3       ; R48 := 0x400E7765
219 [-]: MOVE      R49 R42      ; R49 := R42
220 [-]: CALL      R48 2 2      ; R48 := R48(R49)
221 [-]: TEST      R48 1        ; if R48 then PC := 226
222 [-]: JMP       226          ; PC := 226
223 [-]: SELF      R48 R42 K36  ; R49 := R42; R48 := R42["0x7E387325"]
224 [-]: CALL      R48 2 2      ; R48 := R48(R49)
225 [-]: MOVE      R47 R48      ; R47 := R48
226 [-]: GETUPVAL  R48 U6       ; R48 := U6
227 [-]: GETUPVAL  R49 U7       ; R49 := U7
228 [-]: GETTABLE  R49 R49 K31  ; R49 := R49["Stats"]
229 [-]: GETTABLE  R48 R48 R49  ; R48 := R48[R49]
230 [-]: GETUPVAL  R49 U9       ; R49 := U9
231 [-]: GETUPVAL  R50 U6       ; R50 := U6
232 [-]: GETUPVAL  R51 U7       ; R51 := U7
233 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
234 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
235 [-]: GETTABLE  R50 R50 K32  ; R50 := R50["statTable"]
236 [-]: LOADK     R51 K37      ; R51 := "MEDAL"
237 [-]: MOVE      R52 R47      ; R52 := R47
238 [-]: MOVE      R53 R1       ; R53 := R1
239 [-]: MOVE      R54 R0       ; R54 := R0
240 [-]: CALL      R49 6 2      ; R49 := R49(R50,R51,R52,R53,R54)
241 [-]: SETTABLE  R48 K32 R49  ; R48["statTable"] := R49
242 [-]: LOADK     R48 K2       ; R48 := 0
243 [-]: LOADK     R49 K2       ; R49 := 0
244 [-]: LT        0 K2 R19     ; if 0 >= R19 then PC := 248
245 [-]: JMP       248          ; PC := 248
246 [-]: GETTABLE  R50 R41 K19  ; R50 := R41["damageDealt"]
247 [-]: DIV       R48 R50 R19  ; R48 := R50 / R19
248 [-]: LT        0 K2 R20     ; if 0 >= R20 then PC := 252
249 [-]: JMP       252          ; PC := 252
250 [-]: GETTABLE  R50 R41 K20  ; R50 := R41["damageTaken"]
251 [-]: DIV       R49 R50 R20  ; R49 := R50 / R20
252 [-]: GETUPVAL  R50 U6       ; R50 := U6
253 [-]: GETUPVAL  R51 U7       ; R51 := U7
254 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
255 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
256 [-]: GETUPVAL  R51 U10      ; R51 := U10
257 [-]: GETUPVAL  R52 U6       ; R52 := U6
258 [-]: GETUPVAL  R53 U7       ; R53 := U7
259 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
260 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
261 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
262 [-]: LOADK     R53 K38      ; R53 := "/Lotus/Language/Menu/MissionStats_DamageDealt"
263 [-]: MOVE      R54 R48      ; R54 := R48
264 [-]: MOVE      R55 R1       ; R55 := R1
265 [-]: MOVE      R56 R1       ; R56 := R1
266 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
267 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
268 [-]: GETUPVAL  R50 U6       ; R50 := U6
269 [-]: GETUPVAL  R51 U7       ; R51 := U7
270 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
271 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
272 [-]: GETUPVAL  R51 U10      ; R51 := U10
273 [-]: GETUPVAL  R52 U6       ; R52 := U6
274 [-]: GETUPVAL  R53 U7       ; R53 := U7
275 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
276 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
277 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
278 [-]: LOADK     R53 K39      ; R53 := "/Lotus/Language/Menu/MissionStats_DamageTaken"
279 [-]: MOVE      R54 R49      ; R54 := R49
280 [-]: MOVE      R55 R0       ; R55 := R0
281 [-]: MOVE      R56 R1       ; R56 := R1
282 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
283 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
284 [-]: GETUPVAL  R50 U6       ; R50 := U6
285 [-]: GETUPVAL  R51 U7       ; R51 := U7
286 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
287 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
288 [-]: GETUPVAL  R51 U10      ; R51 := U10
289 [-]: GETUPVAL  R52 U6       ; R52 := U6
290 [-]: GETUPVAL  R53 U7       ; R53 := U7
291 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
292 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
293 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
294 [-]: LOADK     R53 K40      ; R53 := "/Lotus/Language/Menu/Profile_TotalKills"
295 [-]: GETTABLE  R54 R41 K41  ; R54 := R41["kills"]
296 [-]: MOVE      R55 R1       ; R55 := R1
297 [-]: MOVE      R56 R0       ; R56 := R0
298 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
299 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
300 [-]: GETUPVAL  R50 U6       ; R50 := U6
301 [-]: GETUPVAL  R51 U7       ; R51 := U7
302 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
303 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
304 [-]: GETUPVAL  R51 U10      ; R51 := U10
305 [-]: GETUPVAL  R52 U6       ; R52 := U6
306 [-]: GETUPVAL  R53 U7       ; R53 := U7
307 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
308 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
309 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
310 [-]: LOADK     R53 K42      ; R53 := "/Lotus/Language/Menu/MissionStats_HeadShots"
311 [-]: GETTABLE  R54 R41 K43  ; R54 := R41["headshots"]
312 [-]: MOVE      R55 R1       ; R55 := R1
313 [-]: MOVE      R56 R0       ; R56 := R0
314 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
315 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
316 [-]: GETUPVAL  R50 U6       ; R50 := U6
317 [-]: GETUPVAL  R51 U7       ; R51 := U7
318 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
319 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
320 [-]: GETUPVAL  R51 U10      ; R51 := U10
321 [-]: GETUPVAL  R52 U6       ; R52 := U6
322 [-]: GETUPVAL  R53 U7       ; R53 := U7
323 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
324 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
325 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
326 [-]: LOADK     R53 K44      ; R53 := "/Lotus/Language/Menu/MissionStats_MeleeKills"
327 [-]: GETTABLE  R54 R41 K45  ; R54 := R41["meleeKills"]
328 [-]: MOVE      R55 R1       ; R55 := R1
329 [-]: MOVE      R56 R0       ; R56 := R0
330 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
331 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
332 [-]: GETUPVAL  R50 U6       ; R50 := U6
333 [-]: GETUPVAL  R51 U7       ; R51 := U7
334 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
335 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
336 [-]: GETUPVAL  R51 U10      ; R51 := U10
337 [-]: GETUPVAL  R52 U6       ; R52 := U6
338 [-]: GETUPVAL  R53 U7       ; R53 := U7
339 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
340 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
341 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
342 [-]: LOADK     R53 K46      ; R53 := "/Lotus/Language/Menu/Profile_Deaths"
343 [-]: GETTABLE  R54 R41 K47  ; R54 := R41["deaths"]
344 [-]: MOVE      R55 R0       ; R55 := R0
345 [-]: MOVE      R56 R0       ; R56 := R0
346 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
347 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
348 [-]: GETUPVAL  R50 U6       ; R50 := U6
349 [-]: GETUPVAL  R51 U7       ; R51 := U7
350 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
351 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
352 [-]: GETUPVAL  R51 U10      ; R51 := U10
353 [-]: GETUPVAL  R52 U6       ; R52 := U6
354 [-]: GETUPVAL  R53 U7       ; R53 := U7
355 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
356 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
357 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
358 [-]: LOADK     R53 K48      ; R53 := "/Lotus/Language/Menu/MissionStats_UpgradesReceived"
359 [-]: GETTABLE  R54 R41 K49  ; R54 := R41["upgradesReceived"]
360 [-]: MOVE      R55 R1       ; R55 := R1
361 [-]: MOVE      R56 R0       ; R56 := R0
362 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
363 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
364 [-]: GETUPVAL  R50 U6       ; R50 := U6
365 [-]: GETUPVAL  R51 U7       ; R51 := U7
366 [-]: GETTABLE  R51 R51 K31  ; R51 := R51["Stats"]
367 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
368 [-]: GETUPVAL  R51 U10      ; R51 := U10
369 [-]: GETUPVAL  R52 U6       ; R52 := U6
370 [-]: GETUPVAL  R53 U7       ; R53 := U7
371 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
372 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
373 [-]: GETTABLE  R52 R52 K32  ; R52 := R52["statTable"]
374 [-]: LOADK     R53 K50      ; R53 := "/Lotus/Language/Menu/MissionStats_AbilitiesUsed"
375 [-]: GETTABLE  R54 R41 K51  ; R54 := R41["abilitiesUsed"]
376 [-]: MOVE      R55 R1       ; R55 := R1
377 [-]: MOVE      R56 R0       ; R56 := R0
378 [-]: CALL      R51 6 2      ; R51 := R51(R52,R53,R54,R55,R56)
379 [-]: SETTABLE  R50 K32 R51  ; R50["statTable"] := R51
380 [-]: LOADK     R50 K2       ; R50 := 0
381 [-]: GETTABLE  R51 R41 K52  ; R51 := R41["fireCount"]
382 [-]: GETTABLE  R52 R41 K53  ; R52 := R41["fireMeleeCount"]
383 [-]: SUB       R51 R51 R52  ; R51 := R51 - R52
384 [-]: LT        0 K2 R51     ; if 0 >= R51 then PC := 388
385 [-]: JMP       388          ; PC := 388
386 [-]: GETTABLE  R52 R41 K54  ; R52 := R41["hitCount"]
387 [-]: DIV       R50 R52 R51  ; R50 := R52 / R51
388 [-]: GETUPVAL  R52 U6       ; R52 := U6
389 [-]: GETUPVAL  R53 U7       ; R53 := U7
390 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
391 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
392 [-]: GETUPVAL  R53 U10      ; R53 := U10
393 [-]: GETUPVAL  R54 U6       ; R54 := U6
394 [-]: GETUPVAL  R55 U7       ; R55 := U7
395 [-]: GETTABLE  R55 R55 K31  ; R55 := R55["Stats"]
396 [-]: GETTABLE  R54 R54 R55  ; R54 := R54[R55]
397 [-]: GETTABLE  R54 R54 K32  ; R54 := R54["statTable"]
398 [-]: LOADK     R55 K55      ; R55 := "/Lotus/Language/Menu/MissionStats_FireAccuracy"
399 [-]: MOVE      R56 R50      ; R56 := R50
400 [-]: MOVE      R57 R1       ; R57 := R1
401 [-]: MOVE      R58 R1       ; R58 := R1
402 [-]: CALL      R53 6 2      ; R53 := R53(R54,R55,R56,R57,R58)
403 [-]: SETTABLE  R52 K32 R53  ; R52["statTable"] := R53
404 [-]: GETUPVAL  R52 U6       ; R52 := U6
405 [-]: GETUPVAL  R53 U7       ; R53 := U7
406 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
407 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
408 [-]: GETUPVAL  R53 U10      ; R53 := U10
409 [-]: GETUPVAL  R54 U6       ; R54 := U6
410 [-]: GETUPVAL  R55 U7       ; R55 := U7
411 [-]: GETTABLE  R55 R55 K31  ; R55 := R55["Stats"]
412 [-]: GETTABLE  R54 R54 R55  ; R54 := R54[R55]
413 [-]: GETTABLE  R54 R54 K32  ; R54 := R54["statTable"]
414 [-]: LOADK     R55 K56      ; R55 := "/Lotus/Language/Menu/MissionStats_PickupCount"
415 [-]: GETTABLE  R56 R41 K57  ; R56 := R41["pickupCount"]
416 [-]: MOVE      R57 R1       ; R57 := R1
417 [-]: MOVE      R58 R0       ; R58 := R0
418 [-]: CALL      R53 6 2      ; R53 := R53(R54,R55,R56,R57,R58)
419 [-]: SETTABLE  R52 K32 R53  ; R52["statTable"] := R53
420 [-]: GETUPVAL  R52 U6       ; R52 := U6
421 [-]: GETUPVAL  R53 U7       ; R53 := U7
422 [-]: GETTABLE  R53 R53 K31  ; R53 := R53["Stats"]
423 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
424 [-]: GETUPVAL  R53 U10      ; R53 := U10
425 [-]: GETUPVAL  R54 U6       ; R54 := U6
426 [-]: GETUPVAL  R55 U7       ; R55 := U7
427 [-]: GETTABLE  R55 R55 K31  ; R55 := R55["Stats"]
428 [-]: GETTABLE  R54 R54 R55  ; R54 := R54[R55]
429 [-]: GETTABLE  R54 R54 K32  ; R54 := R54["statTable"]
430 [-]: LOADK     R55 K58      ; R55 := "/Lotus/Language/Menu/MissionStats_Revives"
431 [-]: GETTABLE  R56 R41 K59  ; R56 := R41["revives"]
432 [-]: MOVE      R57 R1       ; R57 := R1
433 [-]: MOVE      R58 R0       ; R58 := R0
434 [-]: CALL      R53 6 2      ; R53 := R53(R54,R55,R56,R57,R58)
435 [-]: SETTABLE  R52 K32 R53  ; R52["statTable"] := R53
436 [-]: GETGLOBAL R52 K60      ; R52 := 0xF595ADDE
437 [-]: GETUPVAL  R53 U11      ; R53 := U11
438 [-]: GETTABLE  R53 R53 K61  ; R53 := R53["0xB57E56DF"]
439 [-]: GETTABLE  R54 R41 K62  ; R54 := R41["playerMissionInfo"]
440 [-]: GETTABLE  R54 R54 K63  ; R54 := R54["mMissionRating"]
441 [-]: LOADK     R55 K64      ; R55 := 2
442 [-]: CALL      R53 3 0      ; R53,... := R53(R54,R55)
443 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
444 [-]: MUL       R52 K65 R52  ; R52 := 100 * R52
445 [-]: TEST      R3 1         ; if R3 then PC := 487
446 [-]: JMP       487          ; PC := 487
447 [-]: GETTABLE  R53 R41 K14  ; R53 := R41["playerName"]
448 [-]: EQ        0 R53 R2     ; if R53 ~= R2 then PC := 487
449 [-]: JMP       487          ; PC := 487
450 [-]: LT        0 K2 R52     ; if 0 >= R52 then PC := 487
451 [-]: JMP       487          ; PC := 487
452 [-]: GETGLOBAL R53 K66      ; R53 := Engine
453 [-]: GETTABLE  R53 R53 K67  ; R53 := R53["0x695D4229"]
454 [-]: CALL      R53 1 2      ; R53 := R53()
455 [-]: TEST      R53 0        ; if not R53 then PC := 487
456 [-]: JMP       487          ; PC := 487
457 [-]: GETTABLE  R53 R6 K68   ; R53 := R6["alertId"]
458 [-]: EQ        1 R53 K24    ; if R53 == "" then PC := 487
459 [-]: JMP       487          ; PC := 487
460 [-]: GETTABLE  R53 R6 K69   ; R53 := R6["alertTag"]
461 [-]: EQ        1 R53 K24    ; if R53 == "" then PC := 487
462 [-]: JMP       487          ; PC := 487
463 [-]: GETGLOBAL R53 K70      ; R53 := gRegion
464 [-]: SELF      R53 R53 K71  ; R54 := R53; R53 := R53["0x372CB914"]
465 [-]: CALL      R53 2 2      ; R53 := R53(R54)
466 [-]: GETGLOBAL R54 K3       ; R54 := 0x400E7765
467 [-]: MOVE      R55 R53      ; R55 := R53
468 [-]: CALL      R54 2 2      ; R54 := R54(R55)
469 [-]: TEST      R54 1        ; if R54 then PC := 487
470 [-]: JMP       487          ; PC := 487
471 [-]: LOADK     R54 K72      ; R54 := "ALERT_"
472 [-]: GETGLOBAL R55 K73      ; R55 := string
473 [-]: GETTABLE  R55 R55 K74  ; R55 := R55["0x639C642A"]
474 [-]: GETGLOBAL R56 K75      ; R56 := 0x9FAED6BC
475 [-]: GETTABLE  R57 R6 K69   ; R57 := R6["alertTag"]
476 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
477 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
478 [-]: LOADK     R56 K76      ; R56 := "_COMPLETED"
479 [-]: CONCAT    R54 R54 R56  ; R54 := R54 .. R55 .. R56
480 [-]: GETGLOBAL R55 K77      ; R55 := gChallengeMgr
481 [-]: SELF      R55 R55 K78  ; R56 := R55; R55 := R55["0x83829B2"]
482 [-]: MOVE      R57 R53      ; R57 := R53
483 [-]: GETGLOBAL R58 K79      ; R58 := 0xEC274B1A
484 [-]: MOVE      R59 R54      ; R59 := R54
485 [-]: CALL      R58 2 0      ; R58,... := R58(R59)
486 [-]: CALL      R55 0 1      ; R55(R56,...)
487 [-]: TEST      R5 1         ; if R5 then PC := 675
488 [-]: JMP       675          ; PC := 675
489 [-]: EQ        0 R40 K13    ; if R40 ~= 1 then PC := 491
490 [-]: JMP       491          ; PC := 491
491 [-]: LT        0 K2 R52     ; if 0 >= R52 then PC := 495
492 [-]: JMP       495          ; PC := 495
493 [-]: MOVE      R55 R1       ; R55 := R1
494 [-]: MOVE      R55 R8       ; R55 := R8
495 [-]: GETTABLE  R55 R41 K14  ; R55 := R41["playerName"]
496 [-]: EQ        0 R55 R2     ; if R55 ~= R2 then PC := 675
497 [-]: JMP       675          ; PC := 675
498 [-]: LOADK     R55 K2       ; R55 := 0
499 [-]: GETTABLE  R56 R41 K62  ; R56 := R41["playerMissionInfo"]
500 [-]: GETTABLE  R57 R56 K80  ; R57 := R56["mScore"]
501 [-]: LT        0 K2 R57     ; if 0 >= R57 then PC := 514
502 [-]: JMP       514          ; PC := 514
503 [-]: GETUPVAL  R57 U11      ; R57 := U11
504 [-]: GETTABLE  R57 R57 K81  ; R57 := R57["0xF81722A2"]
505 [-]: GETUPVAL  R58 U8       ; R58 := U8
506 [-]: EQ        1 R58 K82    ; if R58 == "0x0" then PC := 509
507 [-]: JMP       509          ; PC := 509
508 [-]: MOVE      R58 R0       ; R58 := R0
509 [-]: MOVE      R58 R1       ; R58 := R1
510 [-]: LOADK     R59 K2       ; R59 := 0
511 [-]: GETTABLE  R60 R56 K80  ; R60 := R56["mScore"]
512 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
513 [-]: MOVE      R55 R57      ; R55 := R57
514 [-]: LT        0 K2 R55     ; if 0 >= R55 then PC := 539
515 [-]: JMP       539          ; PC := 539
516 [-]: GETTABLE  R57 R6 K83   ; R57 := R6["goalTag"]
517 [-]: GETGLOBAL R58 K79      ; R58 := 0xEC274B1A
518 [-]: LOADK     R59 K84      ; R59 := "KelaEvent"
519 [-]: CALL      R58 2 2      ; R58 := R58(R59)
520 [-]: EQ        1 R57 R58    ; if R57 == R58 then PC := 539
521 [-]: JMP       539          ; PC := 539
522 [-]: GETUPVAL  R57 U12      ; R57 := U12
523 [-]: MOVE      R58 R55      ; R58 := R55
524 [-]: CALL      R57 2 3      ; R57,R58 := R57(R58)
525 [-]: TEST      R57 0        ; if not R57 then PC := 539
526 [-]: JMP       539          ; PC := 539
527 [-]: GETGLOBAL R59 K17      ; R59 := table
528 [-]: GETTABLE  R59 R59 K18  ; R59 := R59["0xE6450C9D"]
529 [-]: GETUPVAL  R60 U13      ; R60 := U13
530 [-]: NEWTABLE  R61 0 5      ; R61 := {}
531 [-]: SETTABLE  R61 K26 R57  ; R61["Name"] := R57
532 [-]: SETTABLE  R61 K85 R58  ; R61["Count"] := R58
533 [-]: GETUPVAL  R62 U14      ; R62 := U14
534 [-]: CALL      R62 1 2      ; R62 := R62()
535 [-]: SETTABLE  R61 K86 R62  ; R61["Icon"] := R62
536 [-]: SETTABLE  R61 K87 K7   ; R61["IconIsSquare"] := "0x1"
537 [-]: SETTABLE  R61 K88 K89  ; R61["Background"] := nil
538 [-]: CALL      R59 3 1      ; R59(R60,R61)
539 [-]: GETTABLE  R59 R56 K90  ; R59 := R56["mMissionCompleteCreditBonus"]
540 [-]: GETTABLE  R60 R56 K91  ; R60 := R56["mCreditsEarnedInMission"]
541 [-]: ADD       R59 R59 R60  ; R59 := R59 + R60
542 [-]: GETTABLE  R60 R56 K92  ; R60 := R56["mNemesisTaxInfo"]
543 [-]: LT        0 K2 R59     ; if 0 >= R59 then PC := 562
544 [-]: JMP       562          ; PC := 562
545 [-]: GETGLOBAL R61 K17      ; R61 := table
546 [-]: GETTABLE  R61 R61 K18  ; R61 := R61["0xE6450C9D"]
547 [-]: GETUPVAL  R62 U13      ; R62 := U13
548 [-]: GETUPVAL  R63 U15      ; R63 := U15
549 [-]: GETGLOBAL R64 K73      ; R64 := string
550 [-]: GETTABLE  R64 R64 K74  ; R64 := R64["0x639C642A"]
551 [-]: GETGLOBAL R65 K23      ; R65 := mMovie
552 [-]: SELF      R65 R65 K93  ; R66 := R65; R65 := R65["0x5DB0BD4"]
553 [-]: LOADK     R67 K94      ; R67 := "/Lotus/Language/Menu/Store_BuyWithCredits"
554 [-]: MOVE      R68 R0       ; R68 := R0
555 [-]: CALL      R65 4 0      ; R65,... := R65(R66,R67,R68)
556 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
557 [-]: MOVE      R65 R59      ; R65 := R59
558 [-]: GETTABLE  R66 R60 K95  ; R66 := R60["mTaxedCredits"]
559 [-]: GETGLOBAL R67 K96      ; R67 := creditsIcon
560 [-]: CALL      R63 5 0      ; R63,... := R63(R64,R65,R66,R67)
561 [-]: CALL      R61 0 1      ; R61(R62,...)
562 [-]: MOVE      R61 R0       ; R61 := R0
563 [-]: TEST      R61 0        ; if not R61 then PC := 607
564 [-]: JMP       607          ; PC := 607
565 [-]: GETTABLE  R61 R56 K97  ; R61 := R56["mTotalCredits"]
566 [-]: LT        0 K2 R61     ; if 0 >= R61 then PC := 585
567 [-]: JMP       585          ; PC := 585
568 [-]: GETGLOBAL R62 K17      ; R62 := table
569 [-]: GETTABLE  R62 R62 K18  ; R62 := R62["0xE6450C9D"]
570 [-]: GETUPVAL  R63 U13      ; R63 := U13
571 [-]: GETUPVAL  R64 U15      ; R64 := U15
572 [-]: GETGLOBAL R65 K73      ; R65 := string
573 [-]: GETTABLE  R65 R65 K74  ; R65 := R65["0x639C642A"]
574 [-]: GETGLOBAL R66 K23      ; R66 := mMovie
575 [-]: SELF      R66 R66 K93  ; R67 := R66; R66 := R66["0x5DB0BD4"]
576 [-]: LOADK     R68 K98      ; R68 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
577 [-]: MOVE      R69 R0       ; R69 := R0
578 [-]: CALL      R66 4 0      ; R66,... := R66(R67,R68,R69)
579 [-]: CALL      R65 0 2      ; R65 := R65(R66,...)
580 [-]: MOVE      R66 R61      ; R66 := R61
581 [-]: LOADNIL   R67 R67      ; R67 := nil
582 [-]: GETGLOBAL R68 K96      ; R68 := creditsIcon
583 [-]: CALL      R64 5 0      ; R64,... := R64(R65,R66,R67,R68)
584 [-]: CALL      R62 0 1      ; R62(R63,...)
585 [-]: GETTABLE  R62 R56 K99  ; R62 := R56["mFinalCredits"]
586 [-]: LT        0 K2 R62     ; if 0 >= R62 then PC := 607
587 [-]: JMP       607          ; PC := 607
588 [-]: EQ        1 R62 R61    ; if R62 == R61 then PC := 607
589 [-]: JMP       607          ; PC := 607
590 [-]: GETGLOBAL R63 K17      ; R63 := table
591 [-]: GETTABLE  R63 R63 K18  ; R63 := R63["0xE6450C9D"]
592 [-]: GETUPVAL  R64 U13      ; R64 := U13
593 [-]: GETUPVAL  R65 U15      ; R65 := U15
594 [-]: GETGLOBAL R66 K73      ; R66 := string
595 [-]: GETTABLE  R66 R66 K74  ; R66 := R66["0x639C642A"]
596 [-]: GETGLOBAL R67 K23      ; R67 := mMovie
597 [-]: SELF      R67 R67 K93  ; R68 := R67; R67 := R67["0x5DB0BD4"]
598 [-]: LOADK     R69 K100     ; R69 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
599 [-]: MOVE      R70 R0       ; R70 := R0
600 [-]: CALL      R67 4 0      ; R67,... := R67(R68,R69,R70)
601 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
602 [-]: MOVE      R67 R62      ; R67 := R62
603 [-]: LOADNIL   R68 R68      ; R68 := nil
604 [-]: GETGLOBAL R69 K96      ; R69 := creditsIcon
605 [-]: CALL      R65 5 0      ; R65,... := R65(R66,R67,R68,R69)
606 [-]: CALL      R63 0 1      ; R63(R64,...)
607 [-]: GETTABLE  R63 R56 K101 ; R63 := R56["mFusionPoints"]
608 [-]: LT        0 K2 R63     ; if 0 >= R63 then PC := 629
609 [-]: JMP       629          ; PC := 629
610 [-]: GETGLOBAL R63 K17      ; R63 := table
611 [-]: GETTABLE  R63 R63 K18  ; R63 := R63["0xE6450C9D"]
612 [-]: GETUPVAL  R64 U16      ; R64 := U16
613 [-]: GETUPVAL  R65 U15      ; R65 := U15
614 [-]: GETGLOBAL R66 K73      ; R66 := string
615 [-]: GETTABLE  R66 R66 K74  ; R66 := R66["0x639C642A"]
616 [-]: GETGLOBAL R67 K23      ; R67 := mMovie
617 [-]: SELF      R67 R67 K93  ; R68 := R67; R67 := R67["0x5DB0BD4"]
618 [-]: LOADK     R69 K102     ; R69 := "/Lotus/Language/Items/FusionBundle"
619 [-]: MOVE      R70 R0       ; R70 := R0
620 [-]: CALL      R67 4 0      ; R67,... := R67(R68,R69,R70)
621 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
622 [-]: GETTABLE  R67 R56 K101 ; R67 := R56["mFusionPoints"]
623 [-]: GETTABLE  R68 R60 K103 ; R68 := R60["mTaxedFusionPoints"]
624 [-]: GETGLOBAL R69 K104     ; R69 := fusionPointsIcon
625 [-]: LOADNIL   R70 R72      ; R70 := R71 := R72 := nil
626 [-]: GETUPVAL  R73 U17      ; R73 := U17
627 [-]: CALL      R65 9 0      ; R65,... := R65(R66,R67,R68,R69,R70,R71,R72,R73)
628 [-]: CALL      R63 0 1      ; R63(R64,...)
629 [-]: GETTABLE  R63 R56 K105 ; R63 := R56["mCrewShipFusionPoints"]
630 [-]: LT        0 K2 R63     ; if 0 >= R63 then PC := 651
631 [-]: JMP       651          ; PC := 651
632 [-]: GETGLOBAL R63 K17      ; R63 := table
633 [-]: GETTABLE  R63 R63 K18  ; R63 := R63["0xE6450C9D"]
634 [-]: GETUPVAL  R64 U16      ; R64 := U16
635 [-]: GETUPVAL  R65 U15      ; R65 := U15
636 [-]: GETGLOBAL R66 K73      ; R66 := string
637 [-]: GETTABLE  R66 R66 K74  ; R66 := R66["0x639C642A"]
638 [-]: GETGLOBAL R67 K23      ; R67 := mMovie
639 [-]: SELF      R67 R67 K93  ; R68 := R67; R67 := R67["0x5DB0BD4"]
640 [-]: LOADK     R69 K106     ; R69 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
641 [-]: MOVE      R70 R0       ; R70 := R0
642 [-]: CALL      R67 4 0      ; R67,... := R67(R68,R69,R70)
643 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
644 [-]: GETTABLE  R67 R56 K105 ; R67 := R56["mCrewShipFusionPoints"]
645 [-]: GETTABLE  R68 R60 K107 ; R68 := R60["mTaxedCrewShipFusionPoints"]
646 [-]: GETGLOBAL R69 K108     ; R69 := crewShipFusionPointsIcon
647 [-]: LOADNIL   R70 R72      ; R70 := R71 := R72 := nil
648 [-]: GETUPVAL  R73 U17      ; R73 := U17
649 [-]: CALL      R65 9 0      ; R65,... := R65(R66,R67,R68,R69,R70,R71,R72,R73)
650 [-]: CALL      R63 0 1      ; R63(R64,...)
651 [-]: GETTABLE  R63 R56 K109 ; R63 := R56["mCollectedUpgrades"]
652 [-]: MOVE      R63 R18      ; R63 := R18
653 [-]: GETTABLE  R63 R56 K110 ; R63 := R56["mCollectedStoreItems"]
654 [-]: MOVE      R63 R19      ; R63 := R19
655 [-]: GETTABLE  R63 R56 K111 ; R63 := R56["mCollectedMiscItems"]
656 [-]: MOVE      R63 R20      ; R63 := R20
657 [-]: GETUPVAL  R63 U1       ; R63 := U1
658 [-]: GETTABLE  R63 R63 K112 ; R63 := R63["0xC65D09DD"]
659 [-]: GETGLOBAL R64 K23      ; R64 := mMovie
660 [-]: GETTABLE  R65 R56 K113 ; R65 := R56["mPlayedTime"]
661 [-]: LOADK     R66 K114     ; R66 := "Compact"
662 [-]: CALL      R63 4 2      ; R63 := R63(R64,R65,R66)
663 [-]: GETGLOBAL R64 K23      ; R64 := mMovie
664 [-]: SELF      R64 R64 K93  ; R65 := R64; R64 := R64["0x5DB0BD4"]
665 [-]: LOADK     R66 K115     ; R66 := "/Lotus/Language/Menu/MissionStats_Time"
666 [-]: MOVE      R67 R1       ; R67 := R1
667 [-]: NEWTABLE  R68 0 1      ; R68 := {}
668 [-]: SETTABLE  R68 K116 R63 ; R68["TIME"] := R63
669 [-]: CALL      R64 5 2      ; R64 := R64(R65,R66,R67,R68)
670 [-]: GETUPVAL  R65 U21      ; R65 := U21
671 [-]: LOADK     R66 K117     ; R66 := "StatsPanel"
672 [-]: MOVE      R67 R64      ; R67 := R64
673 [-]: LOADK     R68 K118     ; R68 := 850
674 [-]: CALL      R65 4 1      ; R65(R66,R67,R68)
675 [-]: FORLOOP   R37 202      ; R37 += R39; if R37 <= R38 then begin PC := 202; R40 := R37 end
676 [-]: LEN       R65 R25      ; R65 := # R25
677 [-]: LOADK     R66 K13      ; R66 := 1
678 [-]: GETUPVAL  R67 U22      ; R67 := U22
679 [-]: LOADK     R68 K13      ; R68 := 1
680 [-]: FORPREP   R66 868      ; R66 -= R68; PC := 868
681 [-]: LOADK     R70 K24      ; R70 := ""
682 [-]: LE        0 R69 R18    ; if R69 > R18 then PC := 686
683 [-]: JMP       686          ; PC := 686
684 [-]: GETTABLE  R71 R4 R69   ; R71 := R4[R69]
685 [-]: GETTABLE  R70 R71 K14  ; R70 := R71["playerName"]
686 [-]: LOADNIL   R71 R71      ; R71 := nil
687 [-]: LOADK     R72 K2       ; R72 := 0
688 [-]: LOADK     R73 K13      ; R73 := 1
689 [-]: MOVE      R74 R65      ; R74 := R65
690 [-]: LOADK     R75 K13      ; R75 := 1
691 [-]: FORPREP   R73 697      ; R73 -= R75; PC := 697
692 [-]: GETTABLE  R77 R25 R76  ; R77 := R25[R76]
693 [-]: GETTABLE  R77 R77 K15  ; R77 := R77["name"]
694 [-]: EQ        0 R77 R70    ; if R77 ~= R70 then PC := 697
695 [-]: JMP       697          ; PC := 697
696 [-]: MOVE      R72 R76      ; R72 := R76
697 [-]: FORLOOP   R73 692      ; R73 += R75; if R73 <= R74 then begin PC := 692; R76 := R73 end
698 [-]: LOADK     R77 K119     ; R77 := "StatsPanel.Player"
699 [-]: MOVE      R78 R69      ; R78 := R69
700 [-]: CONCAT    R77 R77 R78  ; R77 := R77 .. R78
701 [-]: LOADNIL   R78 R78      ; R78 := nil
702 [-]: EQ        1 R25 K89    ; if R25 == nil then PC := 708
703 [-]: JMP       708          ; PC := 708
704 [-]: LEN       R79 R25      ; R79 := # R25
705 [-]: LE        0 R72 R79    ; if R72 > R79 then PC := 708
706 [-]: JMP       708          ; PC := 708
707 [-]: GETTABLE  R78 R25 R72  ; R78 := R25[R72]
708 [-]: GETGLOBAL R79 K23      ; R79 := mMovie
709 [-]: SELF      R79 R79 K120 ; R80 := R79; R79 := R79["0x1C19D966"]
710 [-]: MOVE      R81 R77      ; R81 := R77
711 [-]: LOADK     R82 K121     ; R82 := "_visible"
712 [-]: GETGLOBAL R83 K3       ; R83 := 0x400E7765
713 [-]: MOVE      R84 R78      ; R84 := R78
714 [-]: CALL      R83 2 2      ; R83 := R83(R84)
715 [-]: MOVE      R83 R83      ; R83 := R83
716 [-]: CALL      R79 5 1      ; R79(R80,R81,R82,R83)
717 [-]: GETGLOBAL R79 K3       ; R79 := 0x400E7765
718 [-]: MOVE      R80 R78      ; R80 := R78
719 [-]: CALL      R79 2 2      ; R79 := R79(R80)
720 [-]: TEST      R79 1        ; if R79 then PC := 868
721 [-]: JMP       868          ; PC := 868
722 [-]: GETGLOBAL R79 K122     ; R79 := _G
723 [-]: GETTABLE  R79 R79 K123 ; R79 := R79["UITexture_ProfilePlaceHolder"]
724 [-]: LOADK     R80 K13      ; R80 := 1
725 [-]: GETGLOBAL R81 K124     ; R81 := cjson
726 [-]: GETTABLE  R81 R81 K125 ; R81 := R81["0x8A2E8315"]
727 [-]: GETTABLE  R82 R78 K126 ; R82 := R78["loadout"]
728 [-]: CALL      R81 2 2      ; R81 := R81(R82)
729 [-]: GETGLOBAL R82 K127     ; R82 := 0x1BF588C6
730 [-]: LOADK     R83 K2       ; R83 := 0
731 [-]: CALL      R82 2 1      ; R82(R83)
732 [-]: GETGLOBAL R82 K3       ; R82 := 0x400E7765
733 [-]: MOVE      R83 R81      ; R83 := R81
734 [-]: CALL      R82 2 2      ; R82 := R82(R83)
735 [-]: TEST      R82 1        ; if R82 then PC := 759
736 [-]: JMP       759          ; PC := 759
737 [-]: GETTABLE  R82 R81 K128 ; R82 := R81["ProfileImage"]
738 [-]: GETGLOBAL R83 K3       ; R83 := 0x400E7765
739 [-]: MOVE      R84 R82      ; R84 := R82
740 [-]: CALL      R83 2 2      ; R83 := R83(R84)
741 [-]: TEST      R83 1        ; if R83 then PC := 757
742 [-]: JMP       757          ; PC := 757
743 [-]: EQ        1 R82 K24    ; if R82 == "" then PC := 757
744 [-]: JMP       757          ; PC := 757
745 [-]: GETGLOBAL R83 K129     ; R83 := 0x7C282057
746 [-]: MOVE      R84 R82      ; R84 := R82
747 [-]: CALL      R83 2 2      ; R83 := R83(R84)
748 [-]: GETGLOBAL R84 K3       ; R84 := 0x400E7765
749 [-]: MOVE      R85 R83      ; R85 := R83
750 [-]: CALL      R84 2 2      ; R84 := R84(R85)
751 [-]: TEST      R84 1        ; if R84 then PC := 776
752 [-]: JMP       776          ; PC := 776
753 [-]: SELF      R84 R83 K130 ; R85 := R83; R84 := R83["0xF1A9732E"]
754 [-]: CALL      R84 2 2      ; R84 := R84(R85)
755 [-]: MOVE      R71 R84      ; R71 := R84
756 [-]: JMP       776          ; PC := 776
757 [-]: MOVE      R71 R79      ; R71 := R79
758 [-]: JMP       776          ; PC := 776
759 [-]: GETTABLE  R84 R78 K15  ; R84 := R78["name"]
760 [-]: EQ        0 R84 R2     ; if R84 ~= R2 then PC := 776
761 [-]: JMP       776          ; PC := 776
762 [-]: GETUPVAL  R84 U0       ; R84 := U0
763 [-]: SELF      R84 R84 K131 ; R85 := R84; R84 := R84["0x30BDE7F"]
764 [-]: CALL      R84 2 2      ; R84 := R84(R85)
765 [-]: SELF      R84 R84 K132 ; R85 := R84; R84 := R84["0xC07C8194"]
766 [-]: CALL      R84 2 2      ; R84 := R84(R85)
767 [-]: GETGLOBAL R85 K3       ; R85 := 0x400E7765
768 [-]: GETTABLE  R86 R84 K133 ; R86 := R84["mItemType"]
769 [-]: CALL      R85 2 2      ; R85 := R85(R86)
770 [-]: TEST      R85 1        ; if R85 then PC := 776
771 [-]: JMP       776          ; PC := 776
772 [-]: GETGLOBAL R85 K129     ; R85 := 0x7C282057
773 [-]: GETTABLE  R86 R84 K133 ; R86 := R84["mItemType"]
774 [-]: CALL      R85 2 2      ; R85 := R85(R86)
775 [-]: MOVE      R71 R85      ; R71 := R85
776 [-]: GETTABLE  R80 R78 K16  ; R80 := R78["teamId"]
777 [-]: GETGLOBAL R85 K23      ; R85 := mMovie
778 [-]: SELF      R85 R85 K120 ; R86 := R85; R85 := R85["0x1C19D966"]
779 [-]: MOVE      R87 R77      ; R87 := R77
780 [-]: LOADK     R88 K134     ; R88 := "_x"
781 [-]: GETUPVAL  R89 U23      ; R89 := U23
782 [-]: MOVE      R90 R69      ; R90 := R69
783 [-]: CALL      R89 2 0      ; R89,... := R89(R90)
784 [-]: CALL      R85 0 1      ; R85(R86,...)
785 [-]: GETGLOBAL R85 K23      ; R85 := mMovie
786 [-]: SELF      R85 R85 K135 ; R86 := R85; R85 := R85["0x880196A7"]
787 [-]: MOVE      R87 R77      ; R87 := R77
788 [-]: LOADK     R88 K26      ; R88 := "Name"
789 [-]: LOADK     R89 K136     ; R89 := "verticalAlignment"
790 [-]: LOADK     R90 K137     ; R90 := "bottom"
791 [-]: CALL      R85 6 1      ; R85(R86,R87,R88,R89,R90)
792 [-]: GETGLOBAL R85 K23      ; R85 := mMovie
793 [-]: SELF      R85 R85 K135 ; R86 := R85; R85 := R85["0x880196A7"]
794 [-]: MOVE      R87 R77      ; R87 := R77
795 [-]: LOADK     R88 K26      ; R88 := "Name"
796 [-]: LOADK     R89 K138     ; R89 := "tintIcons"
797 [-]: MOVE      R90 R1       ; R90 := R1
798 [-]: CALL      R85 6 1      ; R85(R86,R87,R88,R89,R90)
799 [-]: LOADK     R85 K2       ; R85 := 0
800 [-]: EQ        0 R69 K13    ; if R69 ~= 1 then PC := 805
801 [-]: JMP       805          ; PC := 805
802 [-]: LE        0 K139 R65   ; if 4 > R65 then PC := 805
803 [-]: JMP       805          ; PC := 805
804 [-]: LOADK     R85 K140     ; R85 := 8
805 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
806 [-]: SELF      R86 R86 K135 ; R87 := R86; R86 := R86["0x880196A7"]
807 [-]: MOVE      R88 R77      ; R88 := R77
808 [-]: LOADK     R89 K141     ; R89 := "Btn"
809 [-]: LOADK     R90 K142     ; R90 := "_width"
810 [-]: GETUPVAL  R91 U24      ; R91 := U24
811 [-]: ADD       R91 R91 R85  ; R91 := R91 + R85
812 [-]: CALL      R86 6 1      ; R86(R87,R88,R89,R90,R91)
813 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
814 [-]: SELF      R86 R86 K135 ; R87 := R86; R86 := R86["0x880196A7"]
815 [-]: MOVE      R88 R77      ; R88 := R77
816 [-]: LOADK     R89 K141     ; R89 := "Btn"
817 [-]: LOADK     R90 K134     ; R90 := "_x"
818 [-]: GETUPVAL  R91 U24      ; R91 := U24
819 [-]: UNM       R91 R91      ; R91 := - R91
820 [-]: MUL       R91 R91 K143 ; R91 := R91 * 0.5
821 [-]: SUB       R91 R91 R85  ; R91 := R91 - R85
822 [-]: CALL      R86 6 1      ; R86(R87,R88,R89,R90,R91)
823 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
824 [-]: SELF      R86 R86 K135 ; R87 := R86; R86 := R86["0x880196A7"]
825 [-]: MOVE      R88 R77      ; R88 := R77
826 [-]: LOADK     R89 K141     ; R89 := "Btn"
827 [-]: LOADK     R90 K144     ; R90 := "_alpha"
828 [-]: GETUPVAL  R91 U11      ; R91 := U11
829 [-]: GETTABLE  R91 R91 K81  ; R91 := R91["0xF81722A2"]
830 [-]: MOD       R92 R69 K64  ; R92 := R69 % 2
831 [-]: EQ        1 R92 K2     ; if R92 == 0 then PC := 834
832 [-]: JMP       834          ; PC := 834
833 [-]: MOVE      R92 R0       ; R92 := R0
834 [-]: MOVE      R92 R1       ; R92 := R1
835 [-]: LOADK     R93 K2       ; R93 := 0
836 [-]: LOADK     R94 K145     ; R94 := 5
837 [-]: CALL      R91 4 0      ; R91,... := R91(R92,R93,R94)
838 [-]: CALL      R86 0 1      ; R86(R87,...)
839 [-]: GETUPVAL  R86 U11      ; R86 := U11
840 [-]: GETTABLE  R86 R86 K146 ; R86 := R86["0x140B4E29"]
841 [-]: GETGLOBAL R87 K23      ; R87 := mMovie
842 [-]: MOVE      R88 R77      ; R88 := R77
843 [-]: LOADK     R89 K147     ; R89 := ".Name"
844 [-]: CONCAT    R88 R88 R89  ; R88 := R88 .. R89
845 [-]: MOVE      R89 R70      ; R89 := R70
846 [-]: LOADK     R90 K148     ; R90 := "..."
847 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
848 [-]: EQ        0 R70 K24    ; if R70 ~= "" then PC := 857
849 [-]: JMP       857          ; PC := 857
850 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
851 [-]: SELF      R86 R86 K135 ; R87 := R86; R86 := R86["0x880196A7"]
852 [-]: MOVE      R88 R77      ; R88 := R77
853 [-]: LOADK     R89 K86      ; R89 := "Icon"
854 [-]: LOADK     R90 K121     ; R90 := "_visible"
855 [-]: MOVE      R91 R0       ; R91 := R0
856 [-]: CALL      R86 6 1      ; R86(R87,R88,R89,R90,R91)
857 [-]: EQ        1 R71 K89    ; if R71 == nil then PC := 868
858 [-]: JMP       868          ; PC := 868
859 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
860 [-]: SELF      R86 R86 K149 ; R87 := R86; R86 := R86["0x4443A5E7"]
861 [-]: MOVE      R88 R77      ; R88 := R77
862 [-]: LOADK     R89 K150     ; R89 := ".Icon"
863 [-]: CONCAT    R88 R88 R89  ; R88 := R88 .. R89
864 [-]: MOVE      R89 R71      ; R89 := R71
865 [-]: GETGLOBAL R90 K122     ; R90 := _G
866 [-]: GETTABLE  R90 R90 K151 ; R90 := R90["UIMaterial_SmoothEdgeNoDepthTest"]
867 [-]: CALL      R86 5 1      ; R86(R87,R88,R89,R90)
868 [-]: FORLOOP   R66 681      ; R66 += R68; if R66 <= R67 then begin PC := 681; R69 := R66 end
869 [-]: GETUPVAL  R86 U7       ; R86 := U7
870 [-]: GETTABLE  R86 R86 K31  ; R86 := R86["Stats"]
871 [-]: MOVE      R86 R25      ; R86 := R25
872 [-]: GETUPVAL  R86 U6       ; R86 := U6
873 [-]: GETUPVAL  R87 U25      ; R87 := U25
874 [-]: GETTABLE  R86 R86 R87  ; R86 := R86[R87]
875 [-]: SELF      R86 R86 K152 ; R87 := R86; R86 := R86["0xB66B3F0B"]
876 [-]: CALL      R86 2 1      ; R86(R87)
877 [-]: GETUPVAL  R86 U8       ; R86 := U8
878 [-]: TEST      R86 0        ; if not R86 then PC := 894
879 [-]: JMP       894          ; PC := 894
880 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
881 [-]: SELF      R86 R86 K153 ; R87 := R86; R86 := R86["0x17028E8F"]
882 [-]: LOADK     R88 K154     ; R88 := "StatsPanel.CompleteBanner.CompleteTitle.text"
883 [-]: LOADK     R89 K155     ; R89 := "/Lotus/Language/Menu/MissionStats_Complete"
884 [-]: CALL      R86 4 1      ; R86(R87,R88,R89)
885 [-]: GETGLOBAL R86 K156     ; R86 := 0x8C64AFA9
886 [-]: GETGLOBAL R87 K23      ; R87 := mMovie
887 [-]: LOADK     R88 K157     ; R88 := "StatsPanel.CompleteBanner.CompleteTitle.setVertexColors"
888 [-]: LOADK     R89 K158     ; R89 := 16777215
889 [-]: LOADK     R90 K158     ; R90 := 16777215
890 [-]: LOADK     R91 K159     ; R91 := 3355443
891 [-]: LOADK     R92 K159     ; R92 := 3355443
892 [-]: CALL      R86 7 1      ; R86(R87,R88,R89,R90,R91,R92)
893 [-]: JMP       907          ; PC := 907
894 [-]: GETGLOBAL R86 K23      ; R86 := mMovie
895 [-]: SELF      R86 R86 K153 ; R87 := R86; R86 := R86["0x17028E8F"]
896 [-]: LOADK     R88 K154     ; R88 := "StatsPanel.CompleteBanner.CompleteTitle.text"
897 [-]: LOADK     R89 K160     ; R89 := "/Lotus/Language/Menu/MissionStats_Failed"
898 [-]: CALL      R86 4 1      ; R86(R87,R88,R89)
899 [-]: GETGLOBAL R86 K156     ; R86 := 0x8C64AFA9
900 [-]: GETGLOBAL R87 K23      ; R87 := mMovie
901 [-]: LOADK     R88 K157     ; R88 := "StatsPanel.CompleteBanner.CompleteTitle.setVertexColors"
902 [-]: LOADK     R89 K161     ; R89 := 16724787
903 [-]: LOADK     R90 K161     ; R90 := 16724787
904 [-]: LOADK     R91 K159     ; R91 := 3355443
905 [-]: LOADK     R92 K159     ; R92 := 3355443
906 [-]: CALL      R86 7 1      ; R86(R87,R88,R89,R90,R91,R92)
907 [-]: GETUPVAL  R86 U26      ; R86 := U26
908 [-]: TEST      R86 0        ; if not R86 then PC := 916
909 [-]: JMP       916          ; PC := 916
910 [-]: GETGLOBAL R86 K162     ; R86 := _T
911 [-]: GETTABLE  R86 R86 K163 ; R86 := R86["BackgroundMovie"]
912 [-]: SELF      R86 R86 K164 ; R87 := R86; R86 := R86["0x458F27A9"]
913 [-]: LOADK     R88 K165     ; R88 := "ShowBlockingMessage"
914 [-]: LOADK     R89 K2       ; R89 := 0
915 [-]: CALL      R86 4 1      ; R86(R87,R88,R89)
916 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2203
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2207
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 89
 10 [-]: JMP       89           ; PC := 89
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 89
 15 [-]: JMP       89           ; PC := 89
 16 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x144A28F9"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: LOADNIL   R3 R3        ; R3 := nil
 19 [-]: GETUPVAL  R4 U1        ; R4 := U1
 20 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0x87D2274C"]
 21 [-]: CALL      R4 1 2       ; R4 := R4()
 22 [-]: EQ        0 R4 K6      ; if R4 ~= "0x0" then PC := 40
 23 [-]: JMP       40           ; PC := 40
 24 [-]: GETGLOBAL R4 K7        ; R4 := _T
 25 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["eomScreenMode"]
 26 [-]: GETUPVAL  R5 U2        ; R5 := U2
 27 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["DETAILED_PREVIEW"]
 28 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETUPVAL  R4 U0        ; R4 := U0
 31 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0xCA086799"]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 0         ; if not R4 then PC := 40
 34 [-]: JMP       40           ; PC := 40
 35 [-]: GETUPVAL  R4 U0        ; R4 := U0
 36 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xFA1F022C"]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: MOVE      R3 R4        ; R3 := R4
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0xC6AB8F7"]
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: MOVE      R3 R4        ; R3 := R4
 44 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 45 [-]: MOVE      R5 R3        ; R5 := R3
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 89
 48 [-]: JMP       89           ; PC := 89
 49 [-]: LOADK     R4 K13       ; R4 := 1
 50 [-]: LEN       R5 R3        ; R5 := # R3
 51 [-]: LOADK     R6 K13       ; R6 := 1
 52 [-]: FORPREP   R4 88        ; R4 -= R6; PC := 88
 53 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 54 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["playerName"]
 55 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 88
 56 [-]: JMP       88           ; PC := 88
 57 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 58 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["playerMissionInfo"]
 59 [-]: MOVE      R8 R3        ; R8 := R3
 60 [-]: GETUPVAL  R8 U4        ; R8 := U4
 61 [-]: CALL      R8 1 2       ; R8 := R8()
 62 [-]: TEST      R8 0         ; if not R8 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: GETUPVAL  R8 U5        ; R8 := U5
 65 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["isPvp"]
 66 [-]: GETTABLE  R9 R3 R7     ; R9 := R3[R7]
 67 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["affMods"]
 68 [-]: LEN       R9 R9        ; R9 := # R9
 69 [-]: LT        0 K2 R9      ; if 0 >= R9 then PC := 78
 70 [-]: JMP       78           ; PC := 78
 71 [-]: GETUPVAL  R9 U6        ; R9 := U6
 72 [-]: GETTABLE  R10 R3 R7    ; R10 := R3[R7]
 73 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["affMods"]
 74 [-]: MOVE      R11 R8       ; R11 := R8
 75 [-]: CALL      R9 3 1       ; R9(R10,R11)
 76 [-]: MOVE      R0 R0        ; R0 := R0
 77 [-]: JMP       85           ; PC := 85
 78 [-]: GETUPVAL  R9 U7        ; R9 := U7
 79 [-]: CALL      R9 1 2       ; R9 := R9()
 80 [-]: TEST      R9 0         ; if not R9 then PC := 85
 81 [-]: JMP       85           ; PC := 85
 82 [-]: GETUPVAL  R9 U8        ; R9 := U8
 83 [-]: CALL      R9 1 1       ; R9()
 84 [-]: MOVE      R0 R0        ; R0 := R0
 85 [-]: GETTABLE  R9 R3 R7     ; R9 := R3[R7]
 86 [-]: MOVE      R9 R9        ; R9 := R9
 87 [-]: JMP       89           ; PC := 89
 88 [-]: FORLOOP   R4 53        ; R4 += R6; if R4 <= R5 then begin PC := 53; R7 := R4 end
 89 [-]: GETUPVAL  R9 U5        ; R9 := U5
 90 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["isPvp"]
 91 [-]: TEST      R9 0         ; if not R9 then PC := 103
 92 [-]: JMP       103          ; PC := 103
 93 [-]: TEST      R0 0         ; if not R0 then PC := 103
 94 [-]: JMP       103          ; PC := 103
 95 [-]: GETUPVAL  R9 U4        ; R9 := U4
 96 [-]: CALL      R9 1 2       ; R9 := R9()
 97 [-]: TEST      R9 0         ; if not R9 then PC := 103
 98 [-]: JMP       103          ; PC := 103
 99 [-]: GETUPVAL  R9 U6        ; R9 := U6
100 [-]: NEWTABLE  R10 0 0      ; R10 := {}
101 [-]: MOVE      R11 R1       ; R11 := R1
102 [-]: CALL      R9 3 1       ; R9(R10,R11)
103 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2248
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["eomScreenMode"]
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["ACTUAL_EOM"]
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 12 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["MT_DEFENSE"]
 14 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 17 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 18 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["MT_TERRITORY"]
 19 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETUPVAL  R2 U2        ; R2 := U2
 22 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0x59F0153"]
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: JMP       89           ; PC := 89
 28 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 29 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 30 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["MT_SURVIVAL"]
 31 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 54
 32 [-]: JMP       54           ; PC := 54
 33 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 34 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 35 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["MT_EXCAVATION"]
 36 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 54
 37 [-]: JMP       54           ; PC := 54
 38 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 39 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 40 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MT_EVACUATION"]
 41 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 54
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETUPVAL  R2 U3        ; R2 := U3
 44 [-]: CALL      R2 1 2       ; R2 := R2()
 45 [-]: TEST      R2 1         ; if R2 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETUPVAL  R2 U4        ; R2 := U4
 48 [-]: CALL      R2 1 2       ; R2 := R2()
 49 [-]: TEST      R2 0         ; if not R2 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["scenarioId"]
 52 [-]: EQ        1 R2 K12     ; if R2 == "" then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: GETUPVAL  R2 U2        ; R2 := U2
 55 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0xFEF6EBE4"]
 56 [-]: LOADNIL   R3 R3        ; R3 := nil
 57 [-]: MOVE      R4 R1        ; R4 := R1
 58 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 59 [-]: RETURN    R2 2         ; return R2
 60 [-]: JMP       89           ; PC := 89
 61 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 62 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 63 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["MT_ARTIFACT"]
 64 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 73
 65 [-]: JMP       73           ; PC := 73
 66 [-]: GETUPVAL  R2 U2        ; R2 := U2
 67 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["0x972C9085"]
 68 [-]: LOADNIL   R3 R3        ; R3 := nil
 69 [-]: MOVE      R4 R1        ; R4 := R1
 70 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 71 [-]: RETURN    R2 2         ; return R2
 72 [-]: JMP       89           ; PC := 89
 73 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
 74 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 75 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["MT_LANDSCAPE"]
 76 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 82
 77 [-]: JMP       82           ; PC := 82
 78 [-]: GETUPVAL  R2 U4        ; R2 := U4
 79 [-]: CALL      R2 1 2       ; R2 := R2()
 80 [-]: TEST      R2 0         ; if not R2 then PC := 89
 81 [-]: JMP       89           ; PC := 89
 82 [-]: GETTABLE  R2 R0 K17    ; R2 := R0["sortieId"]
 83 [-]: EQ        0 R2 K12     ; if R2 ~= "" then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: GETUPVAL  R2 U5        ; R2 := U5
 86 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0xE9C74141"]
 87 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 88 [-]: RETURN    R2 2         ; return R2
 89 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2264
; #Upvalues:       29
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  117

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x93B1256B
  2 [-]: LOADK     R2 K1        ; R2 := "EndOfMatch.lua: GiveMissionRewards. success="
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0x9FAED6BC
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: GETGLOBAL R1 K3        ; R1 := gPlayerProfileMgr
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x21EF7B1A"]
 10 [-]: LOADK     R3 K5        ; R3 := 0
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 23 [-]: GETGLOBAL R3 K7        ; R3 := gGameRules
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 0         ; if not R2 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["eomScreenMode"]
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["ACTUAL_EOM"]
 32 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: MOVE      R2 R1        ; R2 := R1
 36 [-]: TEST      R2 0         ; if not R2 then PC := 58
 37 [-]: JMP       58           ; PC := 58
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x61625DC7"]
 40 [-]: CALL      R3 2 1       ; R3(R4)
 41 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 42 [-]: GETGLOBAL R4 K3        ; R4 := gPlayerProfileMgr
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 58
 45 [-]: JMP       58           ; PC := 58
 46 [-]: GETUPVAL  R3 U0        ; R3 := U0
 47 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xB13C759C"]
 48 [-]: MOVE      R5 R0        ; R5 := R0
 49 [-]: CALL      R3 3 1       ; R3(R4,R5)
 50 [-]: GETGLOBAL R3 K3        ; R3 := gPlayerProfileMgr
 51 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xDB37C67"]
 52 [-]: LOADK     R5 K5        ; R5 := 0
 53 [-]: CALL      R3 3 1       ; R3(R4,R5)
 54 [-]: GETUPVAL  R3 U0        ; R3 := U0
 55 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xB13C759C"]
 56 [-]: MOVE      R5 R1        ; R5 := R1
 57 [-]: CALL      R3 3 1       ; R3(R4,R5)
 58 [-]: GETGLOBAL R3 K14       ; R3 := gRegion
 59 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x48FBE19F"]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: GETUPVAL  R4 U2        ; R4 := U2
 62 [-]: CALL      R4 1 2       ; R4 := R4()
 63 [-]: GETGLOBAL R5 K0        ; R5 := 0x93B1256B
 64 [-]: LOADK     R6 K16       ; R6 := "Connected: "
 65 [-]: GETGLOBAL R7 K2        ; R7 := 0x9FAED6BC
 66 [-]: GETGLOBAL R8 K7        ; R8 := gGameRules
 67 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x12E4AF4E"]
 68 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 69 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 70 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 71 [-]: CALL      R5 2 1       ; R5(R6)
 72 [-]: GETGLOBAL R5 K14       ; R5 := gRegion
 73 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0xA76F0612"]
 74 [-]: GETGLOBAL R7 K19       ; R7 := endTriggerTag
 75 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 76 [-]: LOADNIL   R6 R6        ; R6 := nil
 77 [-]: GETGLOBAL R7 K6        ; R7 := 0x400E7765
 78 [-]: MOVE      R8 R5        ; R8 := R5
 79 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 80 [-]: TEST      R7 1         ; if R7 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: GETTABLE  R6 R5 K20    ; R6 := R5[1]
 83 [-]: GETGLOBAL R7 K6        ; R7 := 0x400E7765
 84 [-]: MOVE      R8 R6        ; R8 := R6
 85 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 86 [-]: TEST      R7 0         ; if not R7 then PC := 91
 87 [-]: JMP       91           ; PC := 91
 88 [-]: GETGLOBAL R7 K0        ; R7 := 0x93B1256B
 89 [-]: LOADK     R8 K21       ; R8 := "extractionTrigger is nil! Assuming that all players are touching by default."
 90 [-]: CALL      R7 2 1       ; R7(R8)
 91 [-]: GETGLOBAL R7 K14       ; R7 := gRegion
 92 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7["0xA76F0612"]
 93 [-]: GETGLOBAL R9 K22       ; R9 := altEndTriggerTag
 94 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 95 [-]: LOADNIL   R8 R8        ; R8 := nil
 96 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
 97 [-]: MOVE      R10 R7       ; R10 := R7
 98 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 99 [-]: TEST      R9 1         ; if R9 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: GETTABLE  R8 R7 K20    ; R8 := R7[1]
102 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
103 [-]: GETGLOBAL R10 K23      ; R10 := windowOpenSound
104 [-]: CALL      R9 2 2       ; R9 := R9(R10)
105 [-]: TEST      R9 1         ; if R9 then PC := 111
106 [-]: JMP       111          ; PC := 111
107 [-]: GETUPVAL  R9 U3        ; R9 := U3
108 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["0x25992394"]
109 [-]: GETGLOBAL R10 K23      ; R10 := windowOpenSound
110 [-]: CALL      R9 2 1       ; R9(R10)
111 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
112 [-]: MOVE      R10 R8       ; R10 := R8
113 [-]: CALL      R9 2 2       ; R9 := R9(R10)
114 [-]: TEST      R9 1         ; if R9 then PC := 159
115 [-]: JMP       159          ; PC := 159
116 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
117 [-]: MOVE      R10 R6       ; R10 := R6
118 [-]: CALL      R9 2 2       ; R9 := R9(R10)
119 [-]: TEST      R9 1         ; if R9 then PC := 159
120 [-]: JMP       159          ; PC := 159
121 [-]: LOADK     R9 K5        ; R9 := 0
122 [-]: LOADK     R10 K5       ; R10 := 0
123 [-]: LOADK     R11 K20      ; R11 := 1
124 [-]: LEN       R12 R3       ; R12 := # R3
125 [-]: LOADK     R13 K20      ; R13 := 1
126 [-]: FORPREP   R11 149      ; R11 -= R13; PC := 149
127 [-]: LOADNIL   R15 R15      ; R15 := nil
128 [-]: GETGLOBAL R16 K6       ; R16 := 0x400E7765
129 [-]: GETTABLE  R17 R3 R14   ; R17 := R3[R14]
130 [-]: CALL      R16 2 2      ; R16 := R16(R17)
131 [-]: TEST      R16 1        ; if R16 then PC := 149
132 [-]: JMP       149          ; PC := 149
133 [-]: GETTABLE  R16 R3 R14   ; R16 := R3[R14]
134 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0x80B14403"]
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: MOVE      R15 R16      ; R15 := R16
137 [-]: SELF      R16 R6 K26   ; R17 := R6; R16 := R6["0xE37A3CB"]
138 [-]: MOVE      R18 R15      ; R18 := R15
139 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
140 [-]: TEST      R16 0        ; if not R16 then PC := 143
141 [-]: JMP       143          ; PC := 143
142 [-]: ADD       R9 R9 K20    ; R9 := R9 + 1
143 [-]: SELF      R16 R8 K26   ; R17 := R8; R16 := R8["0xE37A3CB"]
144 [-]: MOVE      R18 R15      ; R18 := R15
145 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
146 [-]: TEST      R16 0        ; if not R16 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: ADD       R10 R10 K20  ; R10 := R10 + 1
149 [-]: FORLOOP   R11 127      ; R11 += R13; if R11 <= R12 then begin PC := 127; R14 := R11 end
150 [-]: LT        0 R9 R10     ; if R9 >= R10 then PC := 159
151 [-]: JMP       159          ; PC := 159
152 [-]: GETGLOBAL R16 K0       ; R16 := 0x93B1256B
153 [-]: LOADK     R17 K27      ; R17 := "Alt trigger"
154 [-]: CALL      R16 2 1      ; R16(R17)
155 [-]: GETGLOBAL R16 K7       ; R16 := gGameRules
156 [-]: SELF      R16 R16 K28  ; R17 := R16; R16 := R16["0x7B6DB292"]
157 [-]: CALL      R16 2 1      ; R16(R17)
158 [-]: MOVE      R6 R8        ; R6 := R8
159 [-]: LOADNIL   R16 R16      ; R16 := nil
160 [-]: GETUPVAL  R17 U4       ; R17 := U4
161 [-]: CALL      R17 1 2      ; R17 := R17()
162 [-]: TEST      R17 0        ; if not R17 then PC := 169
163 [-]: JMP       169          ; PC := 169
164 [-]: GETGLOBAL R17 K29      ; R17 := Lotus_Game
165 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["0x203692D4"]
166 [-]: CALL      R17 1 2      ; R17 := R17()
167 [-]: MOVE      R16 R17      ; R16 := R17
168 [-]: JMP       173          ; PC := 173
169 [-]: GETGLOBAL R17 K7       ; R17 := gGameRules
170 [-]: SELF      R17 R17 K31  ; R18 := R17; R17 := R17["0x9CA9EC21"]
171 [-]: CALL      R17 2 2      ; R17 := R17(R18)
172 [-]: MOVE      R16 R17      ; R16 := R17
173 [-]: LOADK     R17 K32      ; R17 := 1.25
174 [-]: LOADK     R18 K20      ; R18 := 1
175 [-]: GETGLOBAL R19 K6       ; R19 := 0x400E7765
176 [-]: MOVE      R20 R4       ; R20 := R4
177 [-]: CALL      R19 2 2      ; R19 := R19(R20)
178 [-]: TEST      R19 1        ; if R19 then PC := 186
179 [-]: JMP       186          ; PC := 186
180 [-]: GETGLOBAL R19 K33      ; R19 := 0x93034B55
181 [-]: LOADK     R20 K20      ; R20 := 1
182 [-]: LOADK     R21 K34      ; R21 := 5
183 [-]: GETTABLE  R22 R4 K35   ; R22 := R4["difficulty"]
184 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
185 [-]: MOVE      R18 R19      ; R18 := R19
186 [-]: TEST      R0 0         ; if not R0 then PC := 228
187 [-]: JMP       228          ; PC := 228
188 [-]: TEST      R2 0         ; if not R2 then PC := 228
189 [-]: JMP       228          ; PC := 228
190 [-]: GETUPVAL  R19 U5       ; R19 := U5
191 [-]: CALL      R19 1 2      ; R19 := R19()
192 [-]: TEST      R19 1        ; if R19 then PC := 205
193 [-]: JMP       205          ; PC := 205
194 [-]: GETUPVAL  R19 U0       ; R19 := U0
195 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19["0xFFAA3354"]
196 [-]: CALL      R19 2 2      ; R19 := R19(R20)
197 [-]: TEST      R19 0        ; if not R19 then PC := 205
198 [-]: JMP       205          ; PC := 205
199 [-]: LOADK     R19 K20      ; R19 := 1
200 [-]: MUL       R17 R17 R19  ; R17 := R17 * R19
201 [-]: GETUPVAL  R20 U0       ; R20 := U0
202 [-]: SELF      R20 R20 K37  ; R21 := R20; R20 := R20["0x343910E3"]
203 [-]: MOVE      R22 R0       ; R22 := R0
204 [-]: CALL      R20 3 1      ; R20(R21,R22)
205 [-]: GETUPVAL  R20 U5       ; R20 := U5
206 [-]: CALL      R20 1 2      ; R20 := R20()
207 [-]: TEST      R20 0        ; if not R20 then PC := 224
208 [-]: JMP       224          ; PC := 224
209 [-]: GETUPVAL  R20 U6       ; R20 := U6
210 [-]: CALL      R20 1 2      ; R20 := R20()
211 [-]: TEST      R20 0        ; if not R20 then PC := 224
212 [-]: JMP       224          ; PC := 224
213 [-]: GETUPVAL  R20 U0       ; R20 := U0
214 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20["0x5D3ED70E"]
215 [-]: CALL      R20 2 2      ; R20 := R20(R21)
216 [-]: TEST      R20 0        ; if not R20 then PC := 224
217 [-]: JMP       224          ; PC := 224
218 [-]: LOADK     R20 K20      ; R20 := 1
219 [-]: MUL       R17 R17 R20  ; R17 := R17 * R20
220 [-]: GETUPVAL  R21 U0       ; R21 := U0
221 [-]: SELF      R21 R21 K39  ; R22 := R21; R21 := R21["0xCE3773E8"]
222 [-]: MOVE      R23 R0       ; R23 := R0
223 [-]: CALL      R21 3 1      ; R21(R22,R23)
224 [-]: GETGLOBAL R21 K7       ; R21 := gGameRules
225 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0xA2A094F9"]
226 [-]: CALL      R21 2 2      ; R21 := R21(R22)
227 [-]: MUL       R17 R17 R21  ; R17 := R17 * R21
228 [-]: TEST      R0 0         ; if not R0 then PC := 239
229 [-]: JMP       239          ; PC := 239
230 [-]: TEST      R2 0         ; if not R2 then PC := 239
231 [-]: JMP       239          ; PC := 239
232 [-]: GETUPVAL  R21 U7       ; R21 := U7
233 [-]: CALL      R21 1 2      ; R21 := R21()
234 [-]: TEST      R21 0        ; if not R21 then PC := 239
235 [-]: JMP       239          ; PC := 239
236 [-]: GETGLOBAL R21 K7       ; R21 := gGameRules
237 [-]: SELF      R21 R21 K41  ; R22 := R21; R21 := R21["0xF110EBEA"]
238 [-]: CALL      R21 2 1      ; R21(R22)
239 [-]: LOADK     R21 K5       ; R21 := 0
240 [-]: LOADK     R22 K5       ; R22 := 0
241 [-]: LOADK     R23 K5       ; R23 := 0
242 [-]: LOADK     R24 K5       ; R24 := 0
243 [-]: LOADK     R25 K5       ; R25 := 0
244 [-]: LOADK     R26 K5       ; R26 := 0
245 [-]: LOADK     R27 K5       ; R27 := 0
246 [-]: LOADK     R28 K5       ; R28 := 0
247 [-]: LOADK     R29 K5       ; R29 := 0
248 [-]: LOADK     R30 K5       ; R30 := 0
249 [-]: LOADK     R31 K5       ; R31 := 0
250 [-]: LOADK     R32 K5       ; R32 := 0
251 [-]: LOADK     R33 K5       ; R33 := 0
252 [-]: LOADK     R34 K5       ; R34 := 0
253 [-]: LOADK     R35 K5       ; R35 := 0
254 [-]: LOADK     R36 K5       ; R36 := 0
255 [-]: LOADK     R37 K5       ; R37 := 0
256 [-]: LOADK     R38 K5       ; R38 := 0
257 [-]: LOADK     R39 K5       ; R39 := 0
258 [-]: LOADK     R40 K5       ; R40 := 0
259 [-]: LOADK     R41 K5       ; R41 := 0
260 [-]: LOADK     R42 K5       ; R42 := 0
261 [-]: LOADK     R43 K5       ; R43 := 0
262 [-]: LOADK     R44 K5       ; R44 := 0
263 [-]: LOADK     R45 K20      ; R45 := 1
264 [-]: LEN       R46 R3       ; R46 := # R3
265 [-]: LOADK     R47 K20      ; R47 := 1
266 [-]: FORPREP   R45 1704     ; R45 -= R47; PC := 1704
267 [-]: LOADNIL   R49 R50      ; R49 := R50 := nil
268 [-]: GETGLOBAL R51 K6       ; R51 := 0x400E7765
269 [-]: GETTABLE  R52 R3 R48   ; R52 := R3[R48]
270 [-]: CALL      R51 2 2      ; R51 := R51(R52)
271 [-]: TEST      R51 1        ; if R51 then PC := 290
272 [-]: JMP       290          ; PC := 290
273 [-]: GETUPVAL  R51 U5       ; R51 := U5
274 [-]: CALL      R51 1 2      ; R51 := R51()
275 [-]: TEST      R51 0        ; if not R51 then PC := 282
276 [-]: JMP       282          ; PC := 282
277 [-]: GETTABLE  R51 R3 R48   ; R51 := R3[R48]
278 [-]: SELF      R51 R51 K25  ; R52 := R51; R51 := R51["0x80B14403"]
279 [-]: CALL      R51 2 2      ; R51 := R51(R52)
280 [-]: MOVE      R49 R51      ; R49 := R51
281 [-]: JMP       286          ; PC := 286
282 [-]: GETTABLE  R51 R3 R48   ; R51 := R3[R48]
283 [-]: SELF      R51 R51 K42  ; R52 := R51; R51 := R51["0x93E76705"]
284 [-]: CALL      R51 2 2      ; R51 := R51(R52)
285 [-]: MOVE      R49 R51      ; R49 := R51
286 [-]: GETTABLE  R51 R3 R48   ; R51 := R3[R48]
287 [-]: SELF      R51 R51 K43  ; R52 := R51; R51 := R51["0x8F7453D9"]
288 [-]: CALL      R51 2 2      ; R51 := R51(R52)
289 [-]: MOVE      R50 R51      ; R50 := R51
290 [-]: LOADNIL   R51 R51      ; R51 := nil
291 [-]: GETGLOBAL R52 K6       ; R52 := 0x400E7765
292 [-]: MOVE      R53 R49      ; R53 := R49
293 [-]: CALL      R52 2 2      ; R52 := R52(R53)
294 [-]: TEST      R52 1        ; if R52 then PC := 299
295 [-]: JMP       299          ; PC := 299
296 [-]: SELF      R52 R49 K44  ; R53 := R49; R52 := R49["0xADE7BF82"]
297 [-]: CALL      R52 2 2      ; R52 := R52(R53)
298 [-]: MOVE      R51 R52      ; R51 := R52
299 [-]: LOADNIL   R52 R52      ; R52 := nil
300 [-]: GETGLOBAL R53 K6       ; R53 := 0x400E7765
301 [-]: MOVE      R54 R50      ; R54 := R50
302 [-]: CALL      R53 2 2      ; R53 := R53(R54)
303 [-]: TEST      R53 1        ; if R53 then PC := 308
304 [-]: JMP       308          ; PC := 308
305 [-]: SELF      R53 R50 K45  ; R54 := R50; R53 := R50["0x8DB5D01F"]
306 [-]: CALL      R53 2 2      ; R53 := R53(R54)
307 [-]: MOVE      R52 R53      ; R52 := R53
308 [-]: GETGLOBAL R53 K6       ; R53 := 0x400E7765
309 [-]: MOVE      R54 R51      ; R54 := R51
310 [-]: CALL      R53 2 2      ; R53 := R53(R54)
311 [-]: TEST      R53 1        ; if R53 then PC := 1688
312 [-]: JMP       1688         ; PC := 1688
313 [-]: MOVE      R53 R1       ; R53 := R1
314 [-]: GETGLOBAL R54 K6       ; R54 := 0x400E7765
315 [-]: MOVE      R55 R6       ; R55 := R6
316 [-]: CALL      R54 2 2      ; R54 := R54(R55)
317 [-]: TEST      R54 1        ; if R54 then PC := 323
318 [-]: JMP       323          ; PC := 323
319 [-]: SELF      R54 R6 K26   ; R55 := R6; R54 := R6["0xE37A3CB"]
320 [-]: MOVE      R56 R49      ; R56 := R49
321 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
322 [-]: MOVE      R53 R54      ; R53 := R54
323 [-]: GETGLOBAL R54 K0       ; R54 := 0x93B1256B
324 [-]: GETTABLE  R55 R3 R48   ; R55 := R3[R48]
325 [-]: SELF      R55 R55 K46  ; R56 := R55; R55 := R55["0x144A28F9"]
326 [-]: CALL      R55 2 2      ; R55 := R55(R56)
327 [-]: LOADK     R56 K47      ; R56 := " - IsInTrigger="
328 [-]: GETGLOBAL R57 K2       ; R57 := 0x9FAED6BC
329 [-]: MOVE      R58 R53      ; R58 := R53
330 [-]: CALL      R57 2 2      ; R57 := R57(R58)
331 [-]: CONCAT    R55 R55 R57  ; R55 := R55 .. R56 .. R57
332 [-]: CALL      R54 2 1      ; R54(R55)
333 [-]: GETGLOBAL R54 K29      ; R54 := Lotus_Game
334 [-]: GETTABLE  R54 R54 K48  ; R54 := R54["0xC48DD245"]
335 [-]: CALL      R54 1 2      ; R54 := R54()
336 [-]: MOVE      R54 R8       ; R54 := R8
337 [-]: GETUPVAL  R54 U3       ; R54 := U3
338 [-]: GETTABLE  R54 R54 K49  ; R54 := R54["0xF81722A2"]
339 [-]: GETUPVAL  R55 U9       ; R55 := U9
340 [-]: GETTABLE  R55 R55 K50  ; R55 := R55["isPvp"]
341 [-]: GETGLOBAL R56 K29      ; R56 := Lotus_Game
342 [-]: GETTABLE  R56 R56 K51  ; R56 := R56["LOT_NORMAL_PVP"]
343 [-]: GETGLOBAL R57 K29      ; R57 := Lotus_Game
344 [-]: GETTABLE  R57 R57 K52  ; R57 := R57["LOT_NORMAL"]
345 [-]: CALL      R54 4 2      ; R54 := R54(R55,R56,R57)
346 [-]: TESTSET   R55 R0 0     ; if not R0 then PC := 349 else R55 := R0
347 [-]: JMP       349          ; PC := 349
348 [-]: MOVE      R55 R2       ; R55 := R2
349 [-]: SELF      R56 R51 K53  ; R57 := R51; R56 := R51["0x1A701618"]
350 [-]: MOVE      R58 R54      ; R58 := R54
351 [-]: GETGLOBAL R59 K29      ; R59 := Lotus_Game
352 [-]: GETTABLE  R59 R59 K54  ; R59 := R59["SUIT_SLOT"]
353 [-]: MOVE      R60 R55      ; R60 := R55
354 [-]: CALL      R56 5 2      ; R56 := R56(R57,R58,R59,R60)
355 [-]: MOVE      R21 R56      ; R21 := R56
356 [-]: SELF      R56 R51 K55  ; R57 := R51; R56 := R51["0xFDA653A8"]
357 [-]: MOVE      R58 R54      ; R58 := R54
358 [-]: GETGLOBAL R59 K29      ; R59 := Lotus_Game
359 [-]: GETTABLE  R59 R59 K54  ; R59 := R59["SUIT_SLOT"]
360 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
361 [-]: MOVE      R35 R56      ; R35 := R56
362 [-]: GETUPVAL  R56 U4       ; R56 := U4
363 [-]: CALL      R56 1 2      ; R56 := R56()
364 [-]: TEST      R56 0        ; if not R56 then PC := 378
365 [-]: JMP       378          ; PC := 378
366 [-]: MOVE      R22 R21      ; R22 := R21
367 [-]: MOVE      R23 R21      ; R23 := R21
368 [-]: MOVE      R24 R21      ; R24 := R21
369 [-]: MOVE      R26 R21      ; R26 := R21
370 [-]: MOVE      R27 R21      ; R27 := R21
371 [-]: MOVE      R28 R21      ; R28 := R21
372 [-]: MOVE      R29 R21      ; R29 := R21
373 [-]: LOADK     R34 K5       ; R34 := 0
374 [-]: LOADK     R30 K5       ; R30 := 0
375 [-]: LOADK     R31 K5       ; R31 := 0
376 [-]: LOADK     R32 K5       ; R32 := 0
377 [-]: JMP       903          ; PC := 903
378 [-]: GETUPVAL  R56 U3       ; R56 := U3
379 [-]: GETTABLE  R56 R56 K56  ; R56 := R56["0xB57E56DF"]
380 [-]: MUL       R57 R17 R21  ; R57 := R17 * R21
381 [-]: CALL      R56 2 2      ; R56 := R56(R57)
382 [-]: GETUPVAL  R57 U8       ; R57 := U8
383 [-]: SELF      R57 R57 K57  ; R58 := R57; R57 := R57["0x5E4D1FAB"]
384 [-]: MOVE      R59 R54      ; R59 := R54
385 [-]: GETGLOBAL R60 K29      ; R60 := Lotus_Game
386 [-]: GETTABLE  R60 R60 K54  ; R60 := R60["SUIT_SLOT"]
387 [-]: MOVE      R61 R56      ; R61 := R56
388 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
389 [-]: SELF      R57 R51 K53  ; R58 := R51; R57 := R51["0x1A701618"]
390 [-]: MOVE      R59 R54      ; R59 := R54
391 [-]: GETGLOBAL R60 K29      ; R60 := Lotus_Game
392 [-]: GETTABLE  R60 R60 K58  ; R60 := R60["PISTOL_SLOT"]
393 [-]: MOVE      R61 R55      ; R61 := R55
394 [-]: CALL      R57 5 2      ; R57 := R57(R58,R59,R60,R61)
395 [-]: MOVE      R22 R57      ; R22 := R57
396 [-]: SELF      R57 R51 K55  ; R58 := R51; R57 := R51["0xFDA653A8"]
397 [-]: MOVE      R59 R54      ; R59 := R54
398 [-]: GETGLOBAL R60 K29      ; R60 := Lotus_Game
399 [-]: GETTABLE  R60 R60 K58  ; R60 := R60["PISTOL_SLOT"]
400 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
401 [-]: MOVE      R36 R57      ; R36 := R57
402 [-]: GETUPVAL  R57 U3       ; R57 := U3
403 [-]: GETTABLE  R57 R57 K49  ; R57 := R57["0xF81722A2"]
404 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 407
405 [-]: JMP       407          ; PC := 407
406 [-]: MOVE      R58 R0       ; R58 := R0
407 [-]: MOVE      R58 R1       ; R58 := R1
408 [-]: LOADK     R59 K5       ; R59 := 0
409 [-]: GETUPVAL  R60 U3       ; R60 := U3
410 [-]: GETTABLE  R60 R60 K56  ; R60 := R60["0xB57E56DF"]
411 [-]: MUL       R61 R17 R22  ; R61 := R17 * R22
412 [-]: CALL      R60 2 0      ; R60,... := R60(R61)
413 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
414 [-]: GETUPVAL  R58 U8       ; R58 := U8
415 [-]: SELF      R58 R58 K57  ; R59 := R58; R58 := R58["0x5E4D1FAB"]
416 [-]: MOVE      R60 R54      ; R60 := R54
417 [-]: GETGLOBAL R61 K29      ; R61 := Lotus_Game
418 [-]: GETTABLE  R61 R61 K58  ; R61 := R61["PISTOL_SLOT"]
419 [-]: MOVE      R62 R57      ; R62 := R57
420 [-]: CALL      R58 5 1      ; R58(R59,R60,R61,R62)
421 [-]: SELF      R58 R51 K53  ; R59 := R51; R58 := R51["0x1A701618"]
422 [-]: MOVE      R60 R54      ; R60 := R54
423 [-]: GETGLOBAL R61 K29      ; R61 := Lotus_Game
424 [-]: GETTABLE  R61 R61 K60  ; R61 := R61["LONG_GUN_SLOT"]
425 [-]: MOVE      R62 R55      ; R62 := R55
426 [-]: CALL      R58 5 2      ; R58 := R58(R59,R60,R61,R62)
427 [-]: MOVE      R23 R58      ; R23 := R58
428 [-]: SELF      R58 R51 K55  ; R59 := R51; R58 := R51["0xFDA653A8"]
429 [-]: MOVE      R60 R54      ; R60 := R54
430 [-]: GETGLOBAL R61 K29      ; R61 := Lotus_Game
431 [-]: GETTABLE  R61 R61 K60  ; R61 := R61["LONG_GUN_SLOT"]
432 [-]: CALL      R58 4 2      ; R58 := R58(R59,R60,R61)
433 [-]: MOVE      R37 R58      ; R37 := R58
434 [-]: GETUPVAL  R58 U3       ; R58 := U3
435 [-]: GETTABLE  R58 R58 K49  ; R58 := R58["0xF81722A2"]
436 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 439
437 [-]: JMP       439          ; PC := 439
438 [-]: MOVE      R59 R0       ; R59 := R0
439 [-]: MOVE      R59 R1       ; R59 := R1
440 [-]: LOADK     R60 K5       ; R60 := 0
441 [-]: GETUPVAL  R61 U3       ; R61 := U3
442 [-]: GETTABLE  R61 R61 K56  ; R61 := R61["0xB57E56DF"]
443 [-]: MUL       R62 R17 R23  ; R62 := R17 * R23
444 [-]: CALL      R61 2 0      ; R61,... := R61(R62)
445 [-]: CALL      R58 0 2      ; R58 := R58(R59,...)
446 [-]: GETUPVAL  R59 U8       ; R59 := U8
447 [-]: SELF      R59 R59 K57  ; R60 := R59; R59 := R59["0x5E4D1FAB"]
448 [-]: MOVE      R61 R54      ; R61 := R54
449 [-]: GETGLOBAL R62 K29      ; R62 := Lotus_Game
450 [-]: GETTABLE  R62 R62 K60  ; R62 := R62["LONG_GUN_SLOT"]
451 [-]: MOVE      R63 R58      ; R63 := R58
452 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
453 [-]: SELF      R59 R51 K53  ; R60 := R51; R59 := R51["0x1A701618"]
454 [-]: MOVE      R61 R54      ; R61 := R54
455 [-]: GETGLOBAL R62 K29      ; R62 := Lotus_Game
456 [-]: GETTABLE  R62 R62 K61  ; R62 := R62["MELEE_SLOT"]
457 [-]: MOVE      R63 R55      ; R63 := R55
458 [-]: CALL      R59 5 2      ; R59 := R59(R60,R61,R62,R63)
459 [-]: MOVE      R24 R59      ; R24 := R59
460 [-]: SELF      R59 R51 K55  ; R60 := R51; R59 := R51["0xFDA653A8"]
461 [-]: MOVE      R61 R54      ; R61 := R54
462 [-]: GETGLOBAL R62 K29      ; R62 := Lotus_Game
463 [-]: GETTABLE  R62 R62 K61  ; R62 := R62["MELEE_SLOT"]
464 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
465 [-]: MOVE      R38 R59      ; R38 := R59
466 [-]: GETUPVAL  R59 U3       ; R59 := U3
467 [-]: GETTABLE  R59 R59 K49  ; R59 := R59["0xF81722A2"]
468 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 471
469 [-]: JMP       471          ; PC := 471
470 [-]: MOVE      R60 R0       ; R60 := R0
471 [-]: MOVE      R60 R1       ; R60 := R1
472 [-]: LOADK     R61 K5       ; R61 := 0
473 [-]: GETUPVAL  R62 U3       ; R62 := U3
474 [-]: GETTABLE  R62 R62 K56  ; R62 := R62["0xB57E56DF"]
475 [-]: MUL       R63 R17 R24  ; R63 := R17 * R24
476 [-]: CALL      R62 2 0      ; R62,... := R62(R63)
477 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
478 [-]: GETUPVAL  R60 U8       ; R60 := U8
479 [-]: SELF      R60 R60 K57  ; R61 := R60; R60 := R60["0x5E4D1FAB"]
480 [-]: MOVE      R62 R54      ; R62 := R54
481 [-]: GETGLOBAL R63 K29      ; R63 := Lotus_Game
482 [-]: GETTABLE  R63 R63 K61  ; R63 := R63["MELEE_SLOT"]
483 [-]: MOVE      R64 R59      ; R64 := R59
484 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
485 [-]: SELF      R60 R51 K53  ; R61 := R51; R60 := R51["0x1A701618"]
486 [-]: MOVE      R62 R54      ; R62 := R54
487 [-]: GETGLOBAL R63 K29      ; R63 := Lotus_Game
488 [-]: GETTABLE  R63 R63 K62  ; R63 := R63["HEAVY_GUN_SLOT"]
489 [-]: MOVE      R64 R55      ; R64 := R55
490 [-]: CALL      R60 5 2      ; R60 := R60(R61,R62,R63,R64)
491 [-]: MOVE      R25 R60      ; R25 := R60
492 [-]: SELF      R60 R51 K55  ; R61 := R51; R60 := R51["0xFDA653A8"]
493 [-]: MOVE      R62 R54      ; R62 := R54
494 [-]: GETGLOBAL R63 K29      ; R63 := Lotus_Game
495 [-]: GETTABLE  R63 R63 K62  ; R63 := R63["HEAVY_GUN_SLOT"]
496 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
497 [-]: MOVE      R39 R60      ; R39 := R60
498 [-]: GETUPVAL  R60 U3       ; R60 := U3
499 [-]: GETTABLE  R60 R60 K49  ; R60 := R60["0xF81722A2"]
500 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 503
501 [-]: JMP       503          ; PC := 503
502 [-]: MOVE      R61 R0       ; R61 := R0
503 [-]: MOVE      R61 R1       ; R61 := R1
504 [-]: LOADK     R62 K5       ; R62 := 0
505 [-]: GETUPVAL  R63 U3       ; R63 := U3
506 [-]: GETTABLE  R63 R63 K56  ; R63 := R63["0xB57E56DF"]
507 [-]: MUL       R64 R17 R25  ; R64 := R17 * R25
508 [-]: CALL      R63 2 0      ; R63,... := R63(R64)
509 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
510 [-]: GETUPVAL  R61 U8       ; R61 := U8
511 [-]: SELF      R61 R61 K57  ; R62 := R61; R61 := R61["0x5E4D1FAB"]
512 [-]: MOVE      R63 R54      ; R63 := R54
513 [-]: GETGLOBAL R64 K29      ; R64 := Lotus_Game
514 [-]: GETTABLE  R64 R64 K62  ; R64 := R64["HEAVY_GUN_SLOT"]
515 [-]: MOVE      R65 R60      ; R65 := R60
516 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
517 [-]: SELF      R61 R51 K53  ; R62 := R51; R61 := R51["0x1A701618"]
518 [-]: MOVE      R63 R54      ; R63 := R54
519 [-]: GETGLOBAL R64 K29      ; R64 := Lotus_Game
520 [-]: GETTABLE  R64 R64 K63  ; R64 := R64["SPECIAL_A_SLOT"]
521 [-]: MOVE      R65 R55      ; R65 := R55
522 [-]: CALL      R61 5 2      ; R61 := R61(R62,R63,R64,R65)
523 [-]: MOVE      R26 R61      ; R26 := R61
524 [-]: GETUPVAL  R61 U3       ; R61 := U3
525 [-]: GETTABLE  R61 R61 K56  ; R61 := R61["0xB57E56DF"]
526 [-]: MUL       R62 R17 R26  ; R62 := R17 * R26
527 [-]: CALL      R61 2 2      ; R61 := R61(R62)
528 [-]: GETUPVAL  R62 U8       ; R62 := U8
529 [-]: SELF      R62 R62 K57  ; R63 := R62; R62 := R62["0x5E4D1FAB"]
530 [-]: MOVE      R64 R54      ; R64 := R54
531 [-]: GETGLOBAL R65 K29      ; R65 := Lotus_Game
532 [-]: GETTABLE  R65 R65 K63  ; R65 := R65["SPECIAL_A_SLOT"]
533 [-]: MOVE      R66 R61      ; R66 := R61
534 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
535 [-]: SELF      R62 R51 K53  ; R63 := R51; R62 := R51["0x1A701618"]
536 [-]: MOVE      R64 R54      ; R64 := R54
537 [-]: GETGLOBAL R65 K29      ; R65 := Lotus_Game
538 [-]: GETTABLE  R65 R65 K64  ; R65 := R65["SPECIAL_B_SLOT"]
539 [-]: MOVE      R66 R55      ; R66 := R55
540 [-]: CALL      R62 5 2      ; R62 := R62(R63,R64,R65,R66)
541 [-]: MOVE      R27 R62      ; R27 := R62
542 [-]: GETUPVAL  R62 U3       ; R62 := U3
543 [-]: GETTABLE  R62 R62 K56  ; R62 := R62["0xB57E56DF"]
544 [-]: MUL       R63 R17 R27  ; R63 := R17 * R27
545 [-]: CALL      R62 2 2      ; R62 := R62(R63)
546 [-]: GETUPVAL  R63 U8       ; R63 := U8
547 [-]: SELF      R63 R63 K57  ; R64 := R63; R63 := R63["0x5E4D1FAB"]
548 [-]: MOVE      R65 R54      ; R65 := R54
549 [-]: GETGLOBAL R66 K29      ; R66 := Lotus_Game
550 [-]: GETTABLE  R66 R66 K64  ; R66 := R66["SPECIAL_B_SLOT"]
551 [-]: MOVE      R67 R62      ; R67 := R62
552 [-]: CALL      R63 5 1      ; R63(R64,R65,R66,R67)
553 [-]: SELF      R63 R51 K65  ; R64 := R51; R63 := R51["0x4DA4190"]
554 [-]: MOVE      R65 R55      ; R65 := R55
555 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
556 [-]: MOVE      R28 R63      ; R28 := R63
557 [-]: SELF      R63 R51 K66  ; R64 := R51; R63 := R51["0xC12EB4E3"]
558 [-]: MOVE      R65 R55      ; R65 := R55
559 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
560 [-]: MOVE      R29 R63      ; R29 := R63
561 [-]: GETUPVAL  R63 U3       ; R63 := U3
562 [-]: GETTABLE  R63 R63 K49  ; R63 := R63["0xF81722A2"]
563 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 566
564 [-]: JMP       566          ; PC := 566
565 [-]: MOVE      R64 R0       ; R64 := R0
566 [-]: MOVE      R64 R1       ; R64 := R1
567 [-]: LOADK     R65 K5       ; R65 := 0
568 [-]: GETUPVAL  R66 U3       ; R66 := U3
569 [-]: GETTABLE  R66 R66 K56  ; R66 := R66["0xB57E56DF"]
570 [-]: MUL       R67 R17 R28  ; R67 := R17 * R28
571 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
572 [-]: CALL      R63 0 2      ; R63 := R63(R64,...)
573 [-]: GETUPVAL  R64 U3       ; R64 := U3
574 [-]: GETTABLE  R64 R64 K49  ; R64 := R64["0xF81722A2"]
575 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 578
576 [-]: JMP       578          ; PC := 578
577 [-]: MOVE      R65 R0       ; R65 := R0
578 [-]: MOVE      R65 R1       ; R65 := R1
579 [-]: LOADK     R66 K5       ; R66 := 0
580 [-]: GETUPVAL  R67 U3       ; R67 := U3
581 [-]: GETTABLE  R67 R67 K56  ; R67 := R67["0xB57E56DF"]
582 [-]: MUL       R68 R17 R29  ; R68 := R17 * R29
583 [-]: CALL      R67 2 0      ; R67,... := R67(R68)
584 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
585 [-]: GETUPVAL  R65 U8       ; R65 := U8
586 [-]: SELF      R65 R65 K57  ; R66 := R65; R65 := R65["0x5E4D1FAB"]
587 [-]: GETGLOBAL R67 K29      ; R67 := Lotus_Game
588 [-]: GETTABLE  R67 R67 K67  ; R67 := R67["LOT_SENTINEL"]
589 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
590 [-]: GETTABLE  R68 R68 K54  ; R68 := R68["SUIT_SLOT"]
591 [-]: MOVE      R69 R63      ; R69 := R63
592 [-]: CALL      R65 5 1      ; R65(R66,R67,R68,R69)
593 [-]: GETUPVAL  R65 U8       ; R65 := U8
594 [-]: SELF      R65 R65 K57  ; R66 := R65; R65 := R65["0x5E4D1FAB"]
595 [-]: GETGLOBAL R67 K29      ; R67 := Lotus_Game
596 [-]: GETTABLE  R67 R67 K67  ; R67 := R67["LOT_SENTINEL"]
597 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
598 [-]: GETTABLE  R68 R68 K60  ; R68 := R68["LONG_GUN_SLOT"]
599 [-]: MOVE      R69 R64      ; R69 := R64
600 [-]: CALL      R65 5 1      ; R65(R66,R67,R68,R69)
601 [-]: SELF      R65 R51 K53  ; R66 := R51; R65 := R51["0x1A701618"]
602 [-]: GETGLOBAL R67 K29      ; R67 := Lotus_Game
603 [-]: GETTABLE  R67 R67 K68  ; R67 := R67["LOT_ARCHWING"]
604 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
605 [-]: GETTABLE  R68 R68 K54  ; R68 := R68["SUIT_SLOT"]
606 [-]: MOVE      R69 R55      ; R69 := R55
607 [-]: CALL      R65 5 2      ; R65 := R65(R66,R67,R68,R69)
608 [-]: MOVE      R30 R65      ; R30 := R65
609 [-]: SELF      R65 R51 K55  ; R66 := R51; R65 := R51["0xFDA653A8"]
610 [-]: GETGLOBAL R67 K29      ; R67 := Lotus_Game
611 [-]: GETTABLE  R67 R67 K68  ; R67 := R67["LOT_ARCHWING"]
612 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
613 [-]: GETTABLE  R68 R68 K54  ; R68 := R68["SUIT_SLOT"]
614 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
615 [-]: MOVE      R41 R65      ; R41 := R65
616 [-]: GETUPVAL  R65 U3       ; R65 := U3
617 [-]: GETTABLE  R65 R65 K49  ; R65 := R65["0xF81722A2"]
618 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 621
619 [-]: JMP       621          ; PC := 621
620 [-]: MOVE      R66 R0       ; R66 := R0
621 [-]: MOVE      R66 R1       ; R66 := R1
622 [-]: LOADK     R67 K5       ; R67 := 0
623 [-]: GETUPVAL  R68 U3       ; R68 := U3
624 [-]: GETTABLE  R68 R68 K56  ; R68 := R68["0xB57E56DF"]
625 [-]: MUL       R69 R17 R30  ; R69 := R17 * R30
626 [-]: CALL      R68 2 0      ; R68,... := R68(R69)
627 [-]: CALL      R65 0 2      ; R65 := R65(R66,...)
628 [-]: GETUPVAL  R66 U8       ; R66 := U8
629 [-]: SELF      R66 R66 K57  ; R67 := R66; R66 := R66["0x5E4D1FAB"]
630 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
631 [-]: GETTABLE  R68 R68 K68  ; R68 := R68["LOT_ARCHWING"]
632 [-]: GETGLOBAL R69 K29      ; R69 := Lotus_Game
633 [-]: GETTABLE  R69 R69 K54  ; R69 := R69["SUIT_SLOT"]
634 [-]: MOVE      R70 R65      ; R70 := R65
635 [-]: CALL      R66 5 1      ; R66(R67,R68,R69,R70)
636 [-]: SELF      R66 R51 K53  ; R67 := R51; R66 := R51["0x1A701618"]
637 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
638 [-]: GETTABLE  R68 R68 K68  ; R68 := R68["LOT_ARCHWING"]
639 [-]: GETGLOBAL R69 K29      ; R69 := Lotus_Game
640 [-]: GETTABLE  R69 R69 K60  ; R69 := R69["LONG_GUN_SLOT"]
641 [-]: MOVE      R70 R55      ; R70 := R55
642 [-]: CALL      R66 5 2      ; R66 := R66(R67,R68,R69,R70)
643 [-]: MOVE      R31 R66      ; R31 := R66
644 [-]: SELF      R66 R51 K55  ; R67 := R51; R66 := R51["0xFDA653A8"]
645 [-]: GETGLOBAL R68 K29      ; R68 := Lotus_Game
646 [-]: GETTABLE  R68 R68 K68  ; R68 := R68["LOT_ARCHWING"]
647 [-]: GETGLOBAL R69 K29      ; R69 := Lotus_Game
648 [-]: GETTABLE  R69 R69 K60  ; R69 := R69["LONG_GUN_SLOT"]
649 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
650 [-]: MOVE      R42 R66      ; R42 := R66
651 [-]: GETUPVAL  R66 U3       ; R66 := U3
652 [-]: GETTABLE  R66 R66 K49  ; R66 := R66["0xF81722A2"]
653 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 656
654 [-]: JMP       656          ; PC := 656
655 [-]: MOVE      R67 R0       ; R67 := R0
656 [-]: MOVE      R67 R1       ; R67 := R1
657 [-]: LOADK     R68 K5       ; R68 := 0
658 [-]: GETUPVAL  R69 U3       ; R69 := U3
659 [-]: GETTABLE  R69 R69 K56  ; R69 := R69["0xB57E56DF"]
660 [-]: MUL       R70 R17 R31  ; R70 := R17 * R31
661 [-]: CALL      R69 2 0      ; R69,... := R69(R70)
662 [-]: CALL      R66 0 2      ; R66 := R66(R67,...)
663 [-]: GETUPVAL  R67 U8       ; R67 := U8
664 [-]: SELF      R67 R67 K57  ; R68 := R67; R67 := R67["0x5E4D1FAB"]
665 [-]: GETGLOBAL R69 K29      ; R69 := Lotus_Game
666 [-]: GETTABLE  R69 R69 K68  ; R69 := R69["LOT_ARCHWING"]
667 [-]: GETGLOBAL R70 K29      ; R70 := Lotus_Game
668 [-]: GETTABLE  R70 R70 K60  ; R70 := R70["LONG_GUN_SLOT"]
669 [-]: MOVE      R71 R66      ; R71 := R66
670 [-]: CALL      R67 5 1      ; R67(R68,R69,R70,R71)
671 [-]: SELF      R67 R51 K53  ; R68 := R51; R67 := R51["0x1A701618"]
672 [-]: GETGLOBAL R69 K29      ; R69 := Lotus_Game
673 [-]: GETTABLE  R69 R69 K68  ; R69 := R69["LOT_ARCHWING"]
674 [-]: GETGLOBAL R70 K29      ; R70 := Lotus_Game
675 [-]: GETTABLE  R70 R70 K61  ; R70 := R70["MELEE_SLOT"]
676 [-]: MOVE      R71 R55      ; R71 := R55
677 [-]: CALL      R67 5 2      ; R67 := R67(R68,R69,R70,R71)
678 [-]: MOVE      R32 R67      ; R32 := R67
679 [-]: SELF      R67 R51 K55  ; R68 := R51; R67 := R51["0xFDA653A8"]
680 [-]: GETGLOBAL R69 K29      ; R69 := Lotus_Game
681 [-]: GETTABLE  R69 R69 K68  ; R69 := R69["LOT_ARCHWING"]
682 [-]: GETGLOBAL R70 K29      ; R70 := Lotus_Game
683 [-]: GETTABLE  R70 R70 K61  ; R70 := R70["MELEE_SLOT"]
684 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
685 [-]: MOVE      R43 R67      ; R43 := R67
686 [-]: GETUPVAL  R67 U3       ; R67 := U3
687 [-]: GETTABLE  R67 R67 K49  ; R67 := R67["0xF81722A2"]
688 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 691
689 [-]: JMP       691          ; PC := 691
690 [-]: MOVE      R68 R0       ; R68 := R0
691 [-]: MOVE      R68 R1       ; R68 := R1
692 [-]: LOADK     R69 K5       ; R69 := 0
693 [-]: GETUPVAL  R70 U3       ; R70 := U3
694 [-]: GETTABLE  R70 R70 K56  ; R70 := R70["0xB57E56DF"]
695 [-]: MUL       R71 R17 R32  ; R71 := R17 * R32
696 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
697 [-]: CALL      R67 0 2      ; R67 := R67(R68,...)
698 [-]: GETUPVAL  R68 U8       ; R68 := U8
699 [-]: SELF      R68 R68 K57  ; R69 := R68; R68 := R68["0x5E4D1FAB"]
700 [-]: GETGLOBAL R70 K29      ; R70 := Lotus_Game
701 [-]: GETTABLE  R70 R70 K68  ; R70 := R70["LOT_ARCHWING"]
702 [-]: GETGLOBAL R71 K29      ; R71 := Lotus_Game
703 [-]: GETTABLE  R71 R71 K61  ; R71 := R71["MELEE_SLOT"]
704 [-]: MOVE      R72 R67      ; R72 := R67
705 [-]: CALL      R68 5 1      ; R68(R69,R70,R71,R72)
706 [-]: SELF      R68 R51 K69  ; R69 := R51; R68 := R51["0xA34E7B37"]
707 [-]: CALL      R68 2 2      ; R68 := R68(R69)
708 [-]: MOVE      R34 R68      ; R34 := R68
709 [-]: SELF      R68 R51 K70  ; R69 := R51; R68 := R51["0x817B3B42"]
710 [-]: CALL      R68 2 2      ; R68 := R68(R69)
711 [-]: MOVE      R44 R68      ; R44 := R68
712 [-]: GETUPVAL  R68 U3       ; R68 := U3
713 [-]: GETTABLE  R68 R68 K49  ; R68 := R68["0xF81722A2"]
714 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 717
715 [-]: JMP       717          ; PC := 717
716 [-]: MOVE      R69 R0       ; R69 := R0
717 [-]: MOVE      R69 R1       ; R69 := R1
718 [-]: LOADK     R70 K5       ; R70 := 0
719 [-]: GETUPVAL  R71 U3       ; R71 := U3
720 [-]: GETTABLE  R71 R71 K56  ; R71 := R71["0xB57E56DF"]
721 [-]: MUL       R72 R17 R34  ; R72 := R17 * R34
722 [-]: CALL      R71 2 0      ; R71,... := R71(R72)
723 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
724 [-]: GETUPVAL  R69 U8       ; R69 := U8
725 [-]: SELF      R69 R69 K57  ; R70 := R69; R69 := R69["0x5E4D1FAB"]
726 [-]: GETGLOBAL R71 K29      ; R71 := Lotus_Game
727 [-]: GETTABLE  R71 R71 K71  ; R71 := R71["LOT_KDRIVE"]
728 [-]: GETGLOBAL R72 K29      ; R72 := Lotus_Game
729 [-]: GETTABLE  R72 R72 K54  ; R72 := R72["SUIT_SLOT"]
730 [-]: MOVE      R73 R68      ; R73 := R68
731 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
732 [-]: GETGLOBAL R69 K6       ; R69 := 0x400E7765
733 [-]: MOVE      R70 R52      ; R70 := R52
734 [-]: CALL      R69 2 2      ; R69 := R69(R70)
735 [-]: TEST      R69 1        ; if R69 then PC := 772
736 [-]: JMP       772          ; PC := 772
737 [-]: SELF      R69 R52 K53  ; R70 := R52; R69 := R52["0x1A701618"]
738 [-]: GETGLOBAL R71 K29      ; R71 := Lotus_Game
739 [-]: GETTABLE  R71 R71 K72  ; R71 := R71["LOT_OPERATOR"]
740 [-]: GETGLOBAL R72 K29      ; R72 := Lotus_Game
741 [-]: GETTABLE  R72 R72 K60  ; R72 := R72["LONG_GUN_SLOT"]
742 [-]: MOVE      R73 R55      ; R73 := R55
743 [-]: CALL      R69 5 2      ; R69 := R69(R70,R71,R72,R73)
744 [-]: MOVE      R33 R69      ; R33 := R69
745 [-]: SELF      R69 R52 K55  ; R70 := R52; R69 := R52["0xFDA653A8"]
746 [-]: GETGLOBAL R71 K29      ; R71 := Lotus_Game
747 [-]: GETTABLE  R71 R71 K72  ; R71 := R71["LOT_OPERATOR"]
748 [-]: GETGLOBAL R72 K29      ; R72 := Lotus_Game
749 [-]: GETTABLE  R72 R72 K60  ; R72 := R72["LONG_GUN_SLOT"]
750 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
751 [-]: MOVE      R40 R69      ; R40 := R69
752 [-]: GETUPVAL  R69 U3       ; R69 := U3
753 [-]: GETTABLE  R69 R69 K49  ; R69 := R69["0xF81722A2"]
754 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 757
755 [-]: JMP       757          ; PC := 757
756 [-]: MOVE      R70 R0       ; R70 := R0
757 [-]: MOVE      R70 R1       ; R70 := R1
758 [-]: LOADK     R71 K5       ; R71 := 0
759 [-]: GETUPVAL  R72 U3       ; R72 := U3
760 [-]: GETTABLE  R72 R72 K56  ; R72 := R72["0xB57E56DF"]
761 [-]: MUL       R73 R17 R33  ; R73 := R17 * R33
762 [-]: CALL      R72 2 0      ; R72,... := R72(R73)
763 [-]: CALL      R69 0 2      ; R69 := R69(R70,...)
764 [-]: GETUPVAL  R70 U8       ; R70 := U8
765 [-]: SELF      R70 R70 K57  ; R71 := R70; R70 := R70["0x5E4D1FAB"]
766 [-]: GETGLOBAL R72 K29      ; R72 := Lotus_Game
767 [-]: GETTABLE  R72 R72 K72  ; R72 := R72["LOT_OPERATOR"]
768 [-]: GETGLOBAL R73 K29      ; R73 := Lotus_Game
769 [-]: GETTABLE  R73 R73 K60  ; R73 := R73["LONG_GUN_SLOT"]
770 [-]: MOVE      R74 R69      ; R74 := R69
771 [-]: CALL      R70 5 1      ; R70(R71,R72,R73,R74)
772 [-]: MOVE      R70 R0       ; R70 := R0
773 [-]: TEST      R70 0        ; if not R70 then PC := 903
774 [-]: JMP       903          ; PC := 903
775 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
776 [-]: LOADK     R72 K73      ; R72 := "\n\r===== Starting XPs ====="
777 [-]: CALL      R71 2 1      ; R71(R72)
778 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
779 [-]: LOADK     R72 K74      ; R72 := "suitXp: "
780 [-]: MOVE      R73 R21      ; R73 := R21
781 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
782 [-]: CALL      R71 2 1      ; R71(R72)
783 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
784 [-]: LOADK     R72 K75      ; R72 := "rifleXp: "
785 [-]: MOVE      R73 R23      ; R73 := R23
786 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
787 [-]: CALL      R71 2 1      ; R71(R72)
788 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
789 [-]: LOADK     R72 K76      ; R72 := "pistolXp: "
790 [-]: MOVE      R73 R22      ; R73 := R22
791 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
792 [-]: CALL      R71 2 1      ; R71(R72)
793 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
794 [-]: LOADK     R72 K77      ; R72 := "meleeXp: "
795 [-]: MOVE      R73 R24      ; R73 := R24
796 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
797 [-]: CALL      R71 2 1      ; R71(R72)
798 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
799 [-]: LOADK     R72 K78      ; R72 := "heavyXp: "
800 [-]: MOVE      R73 R25      ; R73 := R25
801 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
802 [-]: CALL      R71 2 1      ; R71(R72)
803 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
804 [-]: LOADK     R72 K79      ; R72 := "specialAXp: "
805 [-]: MOVE      R73 R26      ; R73 := R26
806 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
807 [-]: CALL      R71 2 1      ; R71(R72)
808 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
809 [-]: LOADK     R72 K80      ; R72 := "specialBXp: "
810 [-]: MOVE      R73 R27      ; R73 := R27
811 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
812 [-]: CALL      R71 2 1      ; R71(R72)
813 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
814 [-]: LOADK     R72 K81      ; R72 := "sentinelXp: "
815 [-]: MOVE      R73 R28      ; R73 := R28
816 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
817 [-]: CALL      R71 2 1      ; R71(R72)
818 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
819 [-]: LOADK     R72 K82      ; R72 := "sentinelWeaponXp: "
820 [-]: MOVE      R73 R29      ; R73 := R29
821 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
822 [-]: CALL      R71 2 1      ; R71(R72)
823 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
824 [-]: LOADK     R72 K83      ; R72 := "archwingXp: "
825 [-]: MOVE      R73 R30      ; R73 := R30
826 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
827 [-]: CALL      R71 2 1      ; R71(R72)
828 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
829 [-]: LOADK     R72 K84      ; R72 := "archwingWeaponXp: "
830 [-]: MOVE      R73 R31      ; R73 := R31
831 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
832 [-]: CALL      R71 2 1      ; R71(R72)
833 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
834 [-]: LOADK     R72 K85      ; R72 := "archwingMeleeWeaponXp: "
835 [-]: MOVE      R73 R32      ; R73 := R32
836 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
837 [-]: CALL      R71 2 1      ; R71(R72)
838 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
839 [-]: LOADK     R72 K86      ; R72 := "HoverboardXP: "
840 [-]: MOVE      R73 R34      ; R73 := R34
841 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
842 [-]: CALL      R71 2 1      ; R71(R72)
843 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
844 [-]: LOADK     R72 K87      ; R72 := "Bonuses - multiplier = "
845 [-]: MOVE      R73 R17      ; R73 := R17
846 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
847 [-]: CALL      R71 2 1      ; R71(R72)
848 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
849 [-]: LOADK     R72 K88      ; R72 := "suit: "
850 [-]: MOVE      R73 R56      ; R73 := R56
851 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
852 [-]: CALL      R71 2 1      ; R71(R72)
853 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
854 [-]: LOADK     R72 K89      ; R72 := "rifle: "
855 [-]: MOVE      R73 R58      ; R73 := R58
856 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
857 [-]: CALL      R71 2 1      ; R71(R72)
858 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
859 [-]: LOADK     R72 K90      ; R72 := "pistol: "
860 [-]: MOVE      R73 R57      ; R73 := R57
861 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
862 [-]: CALL      R71 2 1      ; R71(R72)
863 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
864 [-]: LOADK     R72 K91      ; R72 := "melee: "
865 [-]: MOVE      R73 R59      ; R73 := R59
866 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
867 [-]: CALL      R71 2 1      ; R71(R72)
868 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
869 [-]: LOADK     R72 K92      ; R72 := "specialA: "
870 [-]: MOVE      R73 R61      ; R73 := R61
871 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
872 [-]: CALL      R71 2 1      ; R71(R72)
873 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
874 [-]: LOADK     R72 K93      ; R72 := "specialB: "
875 [-]: MOVE      R73 R62      ; R73 := R62
876 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
877 [-]: CALL      R71 2 1      ; R71(R72)
878 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
879 [-]: LOADK     R72 K94      ; R72 := "sentinel: "
880 [-]: MOVE      R73 R63      ; R73 := R63
881 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
882 [-]: CALL      R71 2 1      ; R71(R72)
883 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
884 [-]: LOADK     R72 K95      ; R72 := "sentinelWeapon: "
885 [-]: MOVE      R73 R64      ; R73 := R64
886 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
887 [-]: CALL      R71 2 1      ; R71(R72)
888 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
889 [-]: LOADK     R72 K96      ; R72 := "archwing: "
890 [-]: MOVE      R73 R65      ; R73 := R65
891 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
892 [-]: CALL      R71 2 1      ; R71(R72)
893 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
894 [-]: LOADK     R72 K97      ; R72 := "archwingWeapon: "
895 [-]: MOVE      R73 R66      ; R73 := R66
896 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
897 [-]: CALL      R71 2 1      ; R71(R72)
898 [-]: GETGLOBAL R71 K0       ; R71 := 0x93B1256B
899 [-]: LOADK     R72 K98      ; R72 := "archwingMeleeWeapon: "
900 [-]: MOVE      R73 R67      ; R73 := R67
901 [-]: CONCAT    R72 R72 R73  ; R72 := R72 .. R73
902 [-]: CALL      R71 2 1      ; R71(R72)
903 [-]: GETTABLE  R71 R3 R48   ; R71 := R3[R48]
904 [-]: SELF      R71 R71 K99  ; R72 := R71; R71 := R71["0x8F6EA7B6"]
905 [-]: CALL      R71 2 2      ; R71 := R71(R72)
906 [-]: TEST      R71 0        ; if not R71 then PC := 1408
907 [-]: JMP       1408         ; PC := 1408
908 [-]: GETGLOBAL R71 K8       ; R71 := _T
909 [-]: NEWTABLE  R72 0 0      ; R72 := {}
910 [-]: SETTABLE  R71 K100 R72 ; R71["StatCache"] := R72
911 [-]: LOADK     R71 K5       ; R71 := 0
912 [-]: GETGLOBAL R72 K29      ; R72 := Lotus_Game
913 [-]: GETTABLE  R72 R72 K101 ; R72 := R72["MAX_ArtifactPolarity"]
914 [-]: SUB       R72 R72 K20  ; R72 := R72 - 1
915 [-]: LOADK     R73 K20      ; R73 := 1
916 [-]: FORPREP   R71 925      ; R71 -= R73; PC := 925
917 [-]: GETUPVAL  R75 U8       ; R75 := U8
918 [-]: SELF      R75 R75 K102 ; R76 := R75; R75 := R75["0xAB6C9BC0"]
919 [-]: MOVE      R77 R74      ; R77 := R74
920 [-]: GETUPVAL  R78 U0       ; R78 := U0
921 [-]: SELF      R78 R78 K103 ; R79 := R78; R78 := R78["0x3C1E2B39"]
922 [-]: MOVE      R80 R74      ; R80 := R74
923 [-]: CALL      R78 3 0      ; R78,... := R78(R79,R80)
924 [-]: CALL      R75 0 1      ; R75(R76,...)
925 [-]: FORLOOP   R71 917      ; R71 += R73; if R71 <= R72 then begin PC := 917; R74 := R71 end
926 [-]: GETUPVAL  R75 U8       ; R75 := U8
927 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
928 [-]: MOVE      R77 R54      ; R77 := R54
929 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
930 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
931 [-]: MOVE      R79 R21      ; R79 := R21
932 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
933 [-]: GETUPVAL  R75 U8       ; R75 := U8
934 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
935 [-]: MOVE      R77 R54      ; R77 := R54
936 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
937 [-]: GETTABLE  R78 R78 K58  ; R78 := R78["PISTOL_SLOT"]
938 [-]: MOVE      R79 R22      ; R79 := R22
939 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
940 [-]: GETUPVAL  R75 U8       ; R75 := U8
941 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
942 [-]: MOVE      R77 R54      ; R77 := R54
943 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
944 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
945 [-]: MOVE      R79 R23      ; R79 := R23
946 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
947 [-]: GETUPVAL  R75 U8       ; R75 := U8
948 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
949 [-]: MOVE      R77 R54      ; R77 := R54
950 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
951 [-]: GETTABLE  R78 R78 K61  ; R78 := R78["MELEE_SLOT"]
952 [-]: MOVE      R79 R24      ; R79 := R24
953 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
954 [-]: GETUPVAL  R75 U8       ; R75 := U8
955 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
956 [-]: MOVE      R77 R54      ; R77 := R54
957 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
958 [-]: GETTABLE  R78 R78 K62  ; R78 := R78["HEAVY_GUN_SLOT"]
959 [-]: MOVE      R79 R25      ; R79 := R25
960 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
961 [-]: GETUPVAL  R75 U8       ; R75 := U8
962 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
963 [-]: MOVE      R77 R54      ; R77 := R54
964 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
965 [-]: GETTABLE  R78 R78 K63  ; R78 := R78["SPECIAL_A_SLOT"]
966 [-]: MOVE      R79 R26      ; R79 := R26
967 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
968 [-]: GETUPVAL  R75 U8       ; R75 := U8
969 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
970 [-]: MOVE      R77 R54      ; R77 := R54
971 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
972 [-]: GETTABLE  R78 R78 K64  ; R78 := R78["SPECIAL_B_SLOT"]
973 [-]: MOVE      R79 R27      ; R79 := R27
974 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
975 [-]: GETUPVAL  R75 U8       ; R75 := U8
976 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
977 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
978 [-]: GETTABLE  R77 R77 K67  ; R77 := R77["LOT_SENTINEL"]
979 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
980 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
981 [-]: MOVE      R79 R28      ; R79 := R28
982 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
983 [-]: GETUPVAL  R75 U8       ; R75 := U8
984 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
985 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
986 [-]: GETTABLE  R77 R77 K67  ; R77 := R77["LOT_SENTINEL"]
987 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
988 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
989 [-]: MOVE      R79 R29      ; R79 := R29
990 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
991 [-]: GETUPVAL  R75 U8       ; R75 := U8
992 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
993 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
994 [-]: GETTABLE  R77 R77 K68  ; R77 := R77["LOT_ARCHWING"]
995 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
996 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
997 [-]: MOVE      R79 R30      ; R79 := R30
998 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
999 [-]: GETUPVAL  R75 U8       ; R75 := U8
1000 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
1001 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1002 [-]: GETTABLE  R77 R77 K68  ; R77 := R77["LOT_ARCHWING"]
1003 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1004 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
1005 [-]: MOVE      R79 R31      ; R79 := R31
1006 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1007 [-]: GETUPVAL  R75 U8       ; R75 := U8
1008 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
1009 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1010 [-]: GETTABLE  R77 R77 K68  ; R77 := R77["LOT_ARCHWING"]
1011 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1012 [-]: GETTABLE  R78 R78 K61  ; R78 := R78["MELEE_SLOT"]
1013 [-]: MOVE      R79 R32      ; R79 := R32
1014 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1015 [-]: GETUPVAL  R75 U8       ; R75 := U8
1016 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
1017 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1018 [-]: GETTABLE  R77 R77 K72  ; R77 := R77["LOT_OPERATOR"]
1019 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1020 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
1021 [-]: MOVE      R79 R33      ; R79 := R33
1022 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1023 [-]: GETUPVAL  R75 U8       ; R75 := U8
1024 [-]: SELF      R75 R75 K104 ; R76 := R75; R75 := R75["0xB3BA4727"]
1025 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1026 [-]: GETTABLE  R77 R77 K71  ; R77 := R77["LOT_KDRIVE"]
1027 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1028 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
1029 [-]: MOVE      R79 R34      ; R79 := R34
1030 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1031 [-]: GETUPVAL  R75 U8       ; R75 := U8
1032 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1033 [-]: MOVE      R77 R54      ; R77 := R54
1034 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1035 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
1036 [-]: MOVE      R79 R35      ; R79 := R35
1037 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1038 [-]: GETUPVAL  R75 U8       ; R75 := U8
1039 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1040 [-]: MOVE      R77 R54      ; R77 := R54
1041 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1042 [-]: GETTABLE  R78 R78 K58  ; R78 := R78["PISTOL_SLOT"]
1043 [-]: MOVE      R79 R36      ; R79 := R36
1044 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1045 [-]: GETUPVAL  R75 U8       ; R75 := U8
1046 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1047 [-]: MOVE      R77 R54      ; R77 := R54
1048 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1049 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
1050 [-]: MOVE      R79 R37      ; R79 := R37
1051 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1052 [-]: GETUPVAL  R75 U8       ; R75 := U8
1053 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1054 [-]: MOVE      R77 R54      ; R77 := R54
1055 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1056 [-]: GETTABLE  R78 R78 K61  ; R78 := R78["MELEE_SLOT"]
1057 [-]: MOVE      R79 R38      ; R79 := R38
1058 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1059 [-]: GETUPVAL  R75 U8       ; R75 := U8
1060 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1061 [-]: MOVE      R77 R54      ; R77 := R54
1062 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1063 [-]: GETTABLE  R78 R78 K62  ; R78 := R78["HEAVY_GUN_SLOT"]
1064 [-]: MOVE      R79 R39      ; R79 := R39
1065 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1066 [-]: GETUPVAL  R75 U8       ; R75 := U8
1067 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1068 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1069 [-]: GETTABLE  R77 R77 K68  ; R77 := R77["LOT_ARCHWING"]
1070 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1071 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
1072 [-]: MOVE      R79 R41      ; R79 := R41
1073 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1074 [-]: GETUPVAL  R75 U8       ; R75 := U8
1075 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1076 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1077 [-]: GETTABLE  R77 R77 K68  ; R77 := R77["LOT_ARCHWING"]
1078 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1079 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
1080 [-]: MOVE      R79 R42      ; R79 := R42
1081 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1082 [-]: GETUPVAL  R75 U8       ; R75 := U8
1083 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1084 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1085 [-]: GETTABLE  R77 R77 K68  ; R77 := R77["LOT_ARCHWING"]
1086 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1087 [-]: GETTABLE  R78 R78 K61  ; R78 := R78["MELEE_SLOT"]
1088 [-]: MOVE      R79 R43      ; R79 := R43
1089 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1090 [-]: GETUPVAL  R75 U8       ; R75 := U8
1091 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1092 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1093 [-]: GETTABLE  R77 R77 K72  ; R77 := R77["LOT_OPERATOR"]
1094 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1095 [-]: GETTABLE  R78 R78 K60  ; R78 := R78["LONG_GUN_SLOT"]
1096 [-]: MOVE      R79 R40      ; R79 := R40
1097 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1098 [-]: GETUPVAL  R75 U8       ; R75 := U8
1099 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xFCFE4F16"]
1100 [-]: GETGLOBAL R77 K29      ; R77 := Lotus_Game
1101 [-]: GETTABLE  R77 R77 K71  ; R77 := R77["LOT_KDRIVE"]
1102 [-]: GETGLOBAL R78 K29      ; R78 := Lotus_Game
1103 [-]: GETTABLE  R78 R78 K54  ; R78 := R78["SUIT_SLOT"]
1104 [-]: MOVE      R79 R44      ; R79 := R44
1105 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
1106 [-]: GETUPVAL  R75 U0       ; R75 := U0
1107 [-]: SELF      R75 R75 K106 ; R76 := R75; R75 := R75["0x30BDE7F"]
1108 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1109 [-]: SELF      R76 R75 K107 ; R77 := R75; R76 := R75["0x6200B095"]
1110 [-]: MOVE      R78 R54      ; R78 := R54
1111 [-]: GETGLOBAL R79 K29      ; R79 := Lotus_Game
1112 [-]: GETTABLE  R79 R79 K54  ; R79 := R79["SUIT_SLOT"]
1113 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
1114 [-]: GETGLOBAL R77 K6       ; R77 := 0x400E7765
1115 [-]: MOVE      R78 R76      ; R78 := R76
1116 [-]: CALL      R77 2 2      ; R77 := R77(R78)
1117 [-]: TEST      R77 1        ; if R77 then PC := 1127
1118 [-]: JMP       1127         ; PC := 1127
1119 [-]: GETTABLE  R77 R76 K108 ; R77 := R76["mXP"]
1120 [-]: GETUPVAL  R78 U8       ; R78 := U8
1121 [-]: SELF      R78 R78 K109 ; R79 := R78; R78 := R78["0x1943E4AA"]
1122 [-]: MOVE      R80 R54      ; R80 := R54
1123 [-]: GETGLOBAL R81 K29      ; R81 := Lotus_Game
1124 [-]: GETTABLE  R81 R81 K54  ; R81 := R81["SUIT_SLOT"]
1125 [-]: MOVE      R82 R77      ; R82 := R77
1126 [-]: CALL      R78 5 1      ; R78(R79,R80,R81,R82)
1127 [-]: SELF      R78 R75 K107 ; R79 := R75; R78 := R75["0x6200B095"]
1128 [-]: MOVE      R80 R54      ; R80 := R54
1129 [-]: GETGLOBAL R81 K29      ; R81 := Lotus_Game
1130 [-]: GETTABLE  R81 R81 K60  ; R81 := R81["LONG_GUN_SLOT"]
1131 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
1132 [-]: GETGLOBAL R79 K6       ; R79 := 0x400E7765
1133 [-]: MOVE      R80 R78      ; R80 := R78
1134 [-]: CALL      R79 2 2      ; R79 := R79(R80)
1135 [-]: TEST      R79 1        ; if R79 then PC := 1145
1136 [-]: JMP       1145         ; PC := 1145
1137 [-]: GETTABLE  R79 R78 K108 ; R79 := R78["mXP"]
1138 [-]: GETUPVAL  R80 U8       ; R80 := U8
1139 [-]: SELF      R80 R80 K109 ; R81 := R80; R80 := R80["0x1943E4AA"]
1140 [-]: MOVE      R82 R54      ; R82 := R54
1141 [-]: GETGLOBAL R83 K29      ; R83 := Lotus_Game
1142 [-]: GETTABLE  R83 R83 K60  ; R83 := R83["LONG_GUN_SLOT"]
1143 [-]: MOVE      R84 R79      ; R84 := R79
1144 [-]: CALL      R80 5 1      ; R80(R81,R82,R83,R84)
1145 [-]: SELF      R80 R75 K107 ; R81 := R75; R80 := R75["0x6200B095"]
1146 [-]: MOVE      R82 R54      ; R82 := R54
1147 [-]: GETGLOBAL R83 K29      ; R83 := Lotus_Game
1148 [-]: GETTABLE  R83 R83 K58  ; R83 := R83["PISTOL_SLOT"]
1149 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
1150 [-]: GETGLOBAL R81 K6       ; R81 := 0x400E7765
1151 [-]: MOVE      R82 R80      ; R82 := R80
1152 [-]: CALL      R81 2 2      ; R81 := R81(R82)
1153 [-]: TEST      R81 1        ; if R81 then PC := 1163
1154 [-]: JMP       1163         ; PC := 1163
1155 [-]: GETTABLE  R81 R80 K108 ; R81 := R80["mXP"]
1156 [-]: GETUPVAL  R82 U8       ; R82 := U8
1157 [-]: SELF      R82 R82 K109 ; R83 := R82; R82 := R82["0x1943E4AA"]
1158 [-]: MOVE      R84 R54      ; R84 := R54
1159 [-]: GETGLOBAL R85 K29      ; R85 := Lotus_Game
1160 [-]: GETTABLE  R85 R85 K58  ; R85 := R85["PISTOL_SLOT"]
1161 [-]: MOVE      R86 R81      ; R86 := R81
1162 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
1163 [-]: SELF      R82 R75 K107 ; R83 := R75; R82 := R75["0x6200B095"]
1164 [-]: GETGLOBAL R84 K29      ; R84 := Lotus_Game
1165 [-]: GETTABLE  R84 R84 K72  ; R84 := R84["LOT_OPERATOR"]
1166 [-]: GETGLOBAL R85 K29      ; R85 := Lotus_Game
1167 [-]: GETTABLE  R85 R85 K60  ; R85 := R85["LONG_GUN_SLOT"]
1168 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
1169 [-]: GETGLOBAL R83 K6       ; R83 := 0x400E7765
1170 [-]: MOVE      R84 R82      ; R84 := R82
1171 [-]: CALL      R83 2 2      ; R83 := R83(R84)
1172 [-]: TEST      R83 1        ; if R83 then PC := 1182
1173 [-]: JMP       1182         ; PC := 1182
1174 [-]: GETUPVAL  R83 U8       ; R83 := U8
1175 [-]: SELF      R83 R83 K109 ; R84 := R83; R83 := R83["0x1943E4AA"]
1176 [-]: GETGLOBAL R85 K29      ; R85 := Lotus_Game
1177 [-]: GETTABLE  R85 R85 K72  ; R85 := R85["LOT_OPERATOR"]
1178 [-]: GETGLOBAL R86 K29      ; R86 := Lotus_Game
1179 [-]: GETTABLE  R86 R86 K60  ; R86 := R86["LONG_GUN_SLOT"]
1180 [-]: GETTABLE  R87 R82 K108 ; R87 := R82["mXP"]
1181 [-]: CALL      R83 5 1      ; R83(R84,R85,R86,R87)
1182 [-]: SELF      R83 R75 K107 ; R84 := R75; R83 := R75["0x6200B095"]
1183 [-]: MOVE      R85 R54      ; R85 := R54
1184 [-]: GETGLOBAL R86 K29      ; R86 := Lotus_Game
1185 [-]: GETTABLE  R86 R86 K61  ; R86 := R86["MELEE_SLOT"]
1186 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
1187 [-]: GETGLOBAL R84 K6       ; R84 := 0x400E7765
1188 [-]: MOVE      R85 R83      ; R85 := R83
1189 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1190 [-]: TEST      R84 1        ; if R84 then PC := 1200
1191 [-]: JMP       1200         ; PC := 1200
1192 [-]: GETTABLE  R84 R83 K108 ; R84 := R83["mXP"]
1193 [-]: GETUPVAL  R85 U8       ; R85 := U8
1194 [-]: SELF      R85 R85 K109 ; R86 := R85; R85 := R85["0x1943E4AA"]
1195 [-]: MOVE      R87 R54      ; R87 := R54
1196 [-]: GETGLOBAL R88 K29      ; R88 := Lotus_Game
1197 [-]: GETTABLE  R88 R88 K61  ; R88 := R88["MELEE_SLOT"]
1198 [-]: MOVE      R89 R84      ; R89 := R84
1199 [-]: CALL      R85 5 1      ; R85(R86,R87,R88,R89)
1200 [-]: SELF      R85 R75 K107 ; R86 := R75; R85 := R75["0x6200B095"]
1201 [-]: MOVE      R87 R54      ; R87 := R54
1202 [-]: GETGLOBAL R88 K29      ; R88 := Lotus_Game
1203 [-]: GETTABLE  R88 R88 K62  ; R88 := R88["HEAVY_GUN_SLOT"]
1204 [-]: CALL      R85 4 2      ; R85 := R85(R86,R87,R88)
1205 [-]: GETGLOBAL R86 K6       ; R86 := 0x400E7765
1206 [-]: MOVE      R87 R85      ; R87 := R85
1207 [-]: CALL      R86 2 2      ; R86 := R86(R87)
1208 [-]: TEST      R86 1        ; if R86 then PC := 1218
1209 [-]: JMP       1218         ; PC := 1218
1210 [-]: GETTABLE  R86 R85 K108 ; R86 := R85["mXP"]
1211 [-]: GETUPVAL  R87 U8       ; R87 := U8
1212 [-]: SELF      R87 R87 K109 ; R88 := R87; R87 := R87["0x1943E4AA"]
1213 [-]: MOVE      R89 R54      ; R89 := R54
1214 [-]: GETGLOBAL R90 K29      ; R90 := Lotus_Game
1215 [-]: GETTABLE  R90 R90 K62  ; R90 := R90["HEAVY_GUN_SLOT"]
1216 [-]: MOVE      R91 R86      ; R91 := R86
1217 [-]: CALL      R87 5 1      ; R87(R88,R89,R90,R91)
1218 [-]: SELF      R87 R75 K107 ; R88 := R75; R87 := R75["0x6200B095"]
1219 [-]: MOVE      R89 R54      ; R89 := R54
1220 [-]: GETGLOBAL R90 K29      ; R90 := Lotus_Game
1221 [-]: GETTABLE  R90 R90 K63  ; R90 := R90["SPECIAL_A_SLOT"]
1222 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1223 [-]: GETGLOBAL R88 K6       ; R88 := 0x400E7765
1224 [-]: MOVE      R89 R87      ; R89 := R87
1225 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1226 [-]: TEST      R88 1        ; if R88 then PC := 1236
1227 [-]: JMP       1236         ; PC := 1236
1228 [-]: GETTABLE  R88 R87 K108 ; R88 := R87["mXP"]
1229 [-]: GETUPVAL  R89 U8       ; R89 := U8
1230 [-]: SELF      R89 R89 K109 ; R90 := R89; R89 := R89["0x1943E4AA"]
1231 [-]: MOVE      R91 R54      ; R91 := R54
1232 [-]: GETGLOBAL R92 K29      ; R92 := Lotus_Game
1233 [-]: GETTABLE  R92 R92 K63  ; R92 := R92["SPECIAL_A_SLOT"]
1234 [-]: MOVE      R93 R88      ; R93 := R88
1235 [-]: CALL      R89 5 1      ; R89(R90,R91,R92,R93)
1236 [-]: SELF      R89 R75 K107 ; R90 := R75; R89 := R75["0x6200B095"]
1237 [-]: MOVE      R91 R54      ; R91 := R54
1238 [-]: GETGLOBAL R92 K29      ; R92 := Lotus_Game
1239 [-]: GETTABLE  R92 R92 K64  ; R92 := R92["SPECIAL_B_SLOT"]
1240 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1241 [-]: GETGLOBAL R90 K6       ; R90 := 0x400E7765
1242 [-]: MOVE      R91 R89      ; R91 := R89
1243 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1244 [-]: TEST      R90 1        ; if R90 then PC := 1254
1245 [-]: JMP       1254         ; PC := 1254
1246 [-]: GETTABLE  R90 R89 K108 ; R90 := R89["mXP"]
1247 [-]: GETUPVAL  R91 U8       ; R91 := U8
1248 [-]: SELF      R91 R91 K109 ; R92 := R91; R91 := R91["0x1943E4AA"]
1249 [-]: MOVE      R93 R54      ; R93 := R54
1250 [-]: GETGLOBAL R94 K29      ; R94 := Lotus_Game
1251 [-]: GETTABLE  R94 R94 K64  ; R94 := R94["SPECIAL_B_SLOT"]
1252 [-]: MOVE      R95 R90      ; R95 := R90
1253 [-]: CALL      R91 5 1      ; R91(R92,R93,R94,R95)
1254 [-]: SELF      R91 R75 K107 ; R92 := R75; R91 := R75["0x6200B095"]
1255 [-]: GETGLOBAL R93 K29      ; R93 := Lotus_Game
1256 [-]: GETTABLE  R93 R93 K67  ; R93 := R93["LOT_SENTINEL"]
1257 [-]: GETGLOBAL R94 K29      ; R94 := Lotus_Game
1258 [-]: GETTABLE  R94 R94 K54  ; R94 := R94["SUIT_SLOT"]
1259 [-]: CALL      R91 4 2      ; R91 := R91(R92,R93,R94)
1260 [-]: GETGLOBAL R92 K6       ; R92 := 0x400E7765
1261 [-]: MOVE      R93 R91      ; R93 := R91
1262 [-]: CALL      R92 2 2      ; R92 := R92(R93)
1263 [-]: TEST      R92 1        ; if R92 then PC := 1274
1264 [-]: JMP       1274         ; PC := 1274
1265 [-]: GETTABLE  R92 R91 K108 ; R92 := R91["mXP"]
1266 [-]: GETUPVAL  R93 U8       ; R93 := U8
1267 [-]: SELF      R93 R93 K109 ; R94 := R93; R93 := R93["0x1943E4AA"]
1268 [-]: GETGLOBAL R95 K29      ; R95 := Lotus_Game
1269 [-]: GETTABLE  R95 R95 K67  ; R95 := R95["LOT_SENTINEL"]
1270 [-]: GETGLOBAL R96 K29      ; R96 := Lotus_Game
1271 [-]: GETTABLE  R96 R96 K54  ; R96 := R96["SUIT_SLOT"]
1272 [-]: MOVE      R97 R92      ; R97 := R92
1273 [-]: CALL      R93 5 1      ; R93(R94,R95,R96,R97)
1274 [-]: SELF      R93 R75 K107 ; R94 := R75; R93 := R75["0x6200B095"]
1275 [-]: GETGLOBAL R95 K29      ; R95 := Lotus_Game
1276 [-]: GETTABLE  R95 R95 K67  ; R95 := R95["LOT_SENTINEL"]
1277 [-]: GETGLOBAL R96 K29      ; R96 := Lotus_Game
1278 [-]: GETTABLE  R96 R96 K60  ; R96 := R96["LONG_GUN_SLOT"]
1279 [-]: CALL      R93 4 2      ; R93 := R93(R94,R95,R96)
1280 [-]: GETGLOBAL R94 K6       ; R94 := 0x400E7765
1281 [-]: MOVE      R95 R93      ; R95 := R93
1282 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1283 [-]: TEST      R94 1        ; if R94 then PC := 1294
1284 [-]: JMP       1294         ; PC := 1294
1285 [-]: GETTABLE  R94 R93 K108 ; R94 := R93["mXP"]
1286 [-]: GETUPVAL  R95 U8       ; R95 := U8
1287 [-]: SELF      R95 R95 K109 ; R96 := R95; R95 := R95["0x1943E4AA"]
1288 [-]: GETGLOBAL R97 K29      ; R97 := Lotus_Game
1289 [-]: GETTABLE  R97 R97 K67  ; R97 := R97["LOT_SENTINEL"]
1290 [-]: GETGLOBAL R98 K29      ; R98 := Lotus_Game
1291 [-]: GETTABLE  R98 R98 K60  ; R98 := R98["LONG_GUN_SLOT"]
1292 [-]: MOVE      R99 R94      ; R99 := R94
1293 [-]: CALL      R95 5 1      ; R95(R96,R97,R98,R99)
1294 [-]: SELF      R95 R75 K107 ; R96 := R75; R95 := R75["0x6200B095"]
1295 [-]: GETGLOBAL R97 K29      ; R97 := Lotus_Game
1296 [-]: GETTABLE  R97 R97 K71  ; R97 := R97["LOT_KDRIVE"]
1297 [-]: GETGLOBAL R98 K29      ; R98 := Lotus_Game
1298 [-]: GETTABLE  R98 R98 K54  ; R98 := R98["SUIT_SLOT"]
1299 [-]: CALL      R95 4 2      ; R95 := R95(R96,R97,R98)
1300 [-]: GETGLOBAL R96 K6       ; R96 := 0x400E7765
1301 [-]: MOVE      R97 R95      ; R97 := R95
1302 [-]: CALL      R96 2 2      ; R96 := R96(R97)
1303 [-]: TEST      R96 1        ; if R96 then PC := 1314
1304 [-]: JMP       1314         ; PC := 1314
1305 [-]: GETTABLE  R96 R95 K108 ; R96 := R95["mXP"]
1306 [-]: GETUPVAL  R97 U8       ; R97 := U8
1307 [-]: SELF      R97 R97 K109 ; R98 := R97; R97 := R97["0x1943E4AA"]
1308 [-]: GETGLOBAL R99 K29      ; R99 := Lotus_Game
1309 [-]: GETTABLE  R99 R99 K71  ; R99 := R99["LOT_KDRIVE"]
1310 [-]: GETGLOBAL R100 K29     ; R100 := Lotus_Game
1311 [-]: GETTABLE  R100 R100 K54; R100 := R100["SUIT_SLOT"]
1312 [-]: MOVE      R101 R96     ; R101 := R96
1313 [-]: CALL      R97 5 1      ; R97(R98,R99,R100,R101)
1314 [-]: GETUPVAL  R97 U9       ; R97 := U9
1315 [-]: GETTABLE  R97 R97 K50  ; R97 := R97["isPvp"]
1316 [-]: TEST      R97 1        ; if R97 then PC := 1378
1317 [-]: JMP       1378         ; PC := 1378
1318 [-]: SELF      R97 R75 K107 ; R98 := R75; R97 := R75["0x6200B095"]
1319 [-]: GETGLOBAL R99 K29      ; R99 := Lotus_Game
1320 [-]: GETTABLE  R99 R99 K68  ; R99 := R99["LOT_ARCHWING"]
1321 [-]: GETGLOBAL R100 K29     ; R100 := Lotus_Game
1322 [-]: GETTABLE  R100 R100 K54; R100 := R100["SUIT_SLOT"]
1323 [-]: CALL      R97 4 2      ; R97 := R97(R98,R99,R100)
1324 [-]: GETGLOBAL R98 K6       ; R98 := 0x400E7765
1325 [-]: MOVE      R99 R97      ; R99 := R97
1326 [-]: CALL      R98 2 2      ; R98 := R98(R99)
1327 [-]: TEST      R98 1        ; if R98 then PC := 1338
1328 [-]: JMP       1338         ; PC := 1338
1329 [-]: GETTABLE  R98 R97 K108 ; R98 := R97["mXP"]
1330 [-]: GETUPVAL  R99 U8       ; R99 := U8
1331 [-]: SELF      R99 R99 K109 ; R100 := R99; R99 := R99["0x1943E4AA"]
1332 [-]: GETGLOBAL R101 K29     ; R101 := Lotus_Game
1333 [-]: GETTABLE  R101 R101 K68; R101 := R101["LOT_ARCHWING"]
1334 [-]: GETGLOBAL R102 K29     ; R102 := Lotus_Game
1335 [-]: GETTABLE  R102 R102 K54; R102 := R102["SUIT_SLOT"]
1336 [-]: MOVE      R103 R98     ; R103 := R98
1337 [-]: CALL      R99 5 1      ; R99(R100,R101,R102,R103)
1338 [-]: SELF      R99 R75 K107 ; R100 := R75; R99 := R75["0x6200B095"]
1339 [-]: GETGLOBAL R101 K29     ; R101 := Lotus_Game
1340 [-]: GETTABLE  R101 R101 K68; R101 := R101["LOT_ARCHWING"]
1341 [-]: GETGLOBAL R102 K29     ; R102 := Lotus_Game
1342 [-]: GETTABLE  R102 R102 K60; R102 := R102["LONG_GUN_SLOT"]
1343 [-]: CALL      R99 4 2      ; R99 := R99(R100,R101,R102)
1344 [-]: GETGLOBAL R100 K6      ; R100 := 0x400E7765
1345 [-]: MOVE      R101 R99     ; R101 := R99
1346 [-]: CALL      R100 2 2     ; R100 := R100(R101)
1347 [-]: TEST      R100 1       ; if R100 then PC := 1358
1348 [-]: JMP       1358         ; PC := 1358
1349 [-]: GETTABLE  R100 R99 K108; R100 := R99["mXP"]
1350 [-]: GETUPVAL  R101 U8      ; R101 := U8
1351 [-]: SELF      R101 R101 K109; R102 := R101; R101 := R101["0x1943E4AA"]
1352 [-]: GETGLOBAL R103 K29     ; R103 := Lotus_Game
1353 [-]: GETTABLE  R103 R103 K68; R103 := R103["LOT_ARCHWING"]
1354 [-]: GETGLOBAL R104 K29     ; R104 := Lotus_Game
1355 [-]: GETTABLE  R104 R104 K60; R104 := R104["LONG_GUN_SLOT"]
1356 [-]: MOVE      R105 R100    ; R105 := R100
1357 [-]: CALL      R101 5 1     ; R101(R102,R103,R104,R105)
1358 [-]: SELF      R101 R75 K107; R102 := R75; R101 := R75["0x6200B095"]
1359 [-]: GETGLOBAL R103 K29     ; R103 := Lotus_Game
1360 [-]: GETTABLE  R103 R103 K68; R103 := R103["LOT_ARCHWING"]
1361 [-]: GETGLOBAL R104 K29     ; R104 := Lotus_Game
1362 [-]: GETTABLE  R104 R104 K61; R104 := R104["MELEE_SLOT"]
1363 [-]: CALL      R101 4 2     ; R101 := R101(R102,R103,R104)
1364 [-]: GETGLOBAL R102 K6      ; R102 := 0x400E7765
1365 [-]: MOVE      R103 R101    ; R103 := R101
1366 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1367 [-]: TEST      R102 1       ; if R102 then PC := 1378
1368 [-]: JMP       1378         ; PC := 1378
1369 [-]: GETTABLE  R102 R101 K108; R102 := R101["mXP"]
1370 [-]: GETUPVAL  R103 U8      ; R103 := U8
1371 [-]: SELF      R103 R103 K109; R104 := R103; R103 := R103["0x1943E4AA"]
1372 [-]: GETGLOBAL R105 K29     ; R105 := Lotus_Game
1373 [-]: GETTABLE  R105 R105 K68; R105 := R105["LOT_ARCHWING"]
1374 [-]: GETGLOBAL R106 K29     ; R106 := Lotus_Game
1375 [-]: GETTABLE  R106 R106 K61; R106 := R106["MELEE_SLOT"]
1376 [-]: MOVE      R107 R102    ; R107 := R102
1377 [-]: CALL      R103 5 1     ; R103(R104,R105,R106,R107)
1378 [-]: GETGLOBAL R103 K8      ; R103 := _T
1379 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1380 [-]: SETTABLE  R103 K110 R21; R103["mSuitXp"] := R21
1381 [-]: GETGLOBAL R103 K8      ; R103 := _T
1382 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1383 [-]: SETTABLE  R103 K111 R23; R103["mRifleXp"] := R23
1384 [-]: GETGLOBAL R103 K8      ; R103 := _T
1385 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1386 [-]: SETTABLE  R103 K112 R22; R103["mPistolXp"] := R22
1387 [-]: GETGLOBAL R103 K8      ; R103 := _T
1388 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1389 [-]: SETTABLE  R103 K113 R24; R103["mMeleeXp"] := R24
1390 [-]: GETGLOBAL R103 K8      ; R103 := _T
1391 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1392 [-]: SETTABLE  R103 K114 R26; R103["mSpecialAXp"] := R26
1393 [-]: GETGLOBAL R103 K8      ; R103 := _T
1394 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1395 [-]: SETTABLE  R103 K115 R27; R103["mSpecialBXp"] := R27
1396 [-]: GETGLOBAL R103 K8      ; R103 := _T
1397 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1398 [-]: SETTABLE  R103 K116 R28; R103["SentinelXp"] := R28
1399 [-]: GETGLOBAL R103 K8      ; R103 := _T
1400 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1401 [-]: SETTABLE  R103 K117 R29; R103["SentinelWeaponXp"] := R29
1402 [-]: GETGLOBAL R103 K8      ; R103 := _T
1403 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1404 [-]: SETTABLE  R103 K118 R33; R103["OperatorAmpXp"] := R33
1405 [-]: GETGLOBAL R103 K8      ; R103 := _T
1406 [-]: GETTABLE  R103 R103 K100; R103 := R103["StatCache"]
1407 [-]: SETTABLE  R103 K119 R34; R103["HoverboardXP"] := R34
1408 [-]: GETUPVAL  R103 U8      ; R103 := U8
1409 [-]: SETTABLE  R103 K120 K5 ; R103["mScore"] := 0
1410 [-]: MOVE      R103 R1      ; R103 := R1
1411 [-]: GETUPVAL  R104 U7      ; R104 := U7
1412 [-]: CALL      R104 1 2     ; R104 := R104()
1413 [-]: TEST      R104 0       ; if not R104 then PC := 1434
1414 [-]: JMP       1434         ; PC := 1434
1415 [-]: GETUPVAL  R104 U9      ; R104 := U9
1416 [-]: GETTABLE  R104 R104 K50; R104 := R104["isPvp"]
1417 [-]: TEST      R104 1       ; if R104 then PC := 1434
1418 [-]: JMP       1434         ; PC := 1434
1419 [-]: MOVE      R103 R0      ; R103 := R0
1420 [-]: GETUPVAL  R104 U8      ; R104 := U8
1421 [-]: GETUPVAL  R105 U3      ; R105 := U3
1422 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1423 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1426
1424 [-]: JMP       1426         ; PC := 1426
1425 [-]: MOVE      R106 R0      ; R106 := R0
1426 [-]: MOVE      R106 R1      ; R106 := R1
1427 [-]: LOADK     R107 K5      ; R107 := 0
1428 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1429 [-]: SELF      R108 R108 K121; R109 := R108; R108 := R108["0x5C2CF316"]
1430 [-]: CALL      R108 2 0     ; R108,... := R108(R109)
1431 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1432 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1433 [-]: JMP       1584         ; PC := 1584
1434 [-]: GETUPVAL  R104 U10     ; R104 := U10
1435 [-]: CALL      R104 1 2     ; R104 := R104()
1436 [-]: TEST      R104 0       ; if not R104 then PC := 1455
1437 [-]: JMP       1455         ; PC := 1455
1438 [-]: GETUPVAL  R104 U8      ; R104 := U8
1439 [-]: GETUPVAL  R105 U3      ; R105 := U3
1440 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1441 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1444
1442 [-]: JMP       1444         ; PC := 1444
1443 [-]: MOVE      R106 R0      ; R106 := R0
1444 [-]: MOVE      R106 R1      ; R106 := R1
1445 [-]: LOADK     R107 K5      ; R107 := 0
1446 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1447 [-]: SELF      R108 R108 K122; R109 := R108; R108 := R108["0xED0EE7FB"]
1448 [-]: GETUPVAL  R110 U11     ; R110 := U11
1449 [-]: GETTABLE  R110 R110 K123; R110 := R110["HIVE_SCORE"]
1450 [-]: LOADK     R111 K5      ; R111 := 0
1451 [-]: CALL      R108 4 0     ; R108,... := R108(R109,R110,R111)
1452 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1453 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1454 [-]: JMP       1584         ; PC := 1584
1455 [-]: GETUPVAL  R104 U12     ; R104 := U12
1456 [-]: CALL      R104 1 2     ; R104 := R104()
1457 [-]: TEST      R104 0       ; if not R104 then PC := 1476
1458 [-]: JMP       1476         ; PC := 1476
1459 [-]: GETUPVAL  R104 U8      ; R104 := U8
1460 [-]: GETUPVAL  R105 U3      ; R105 := U3
1461 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1462 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1465
1463 [-]: JMP       1465         ; PC := 1465
1464 [-]: MOVE      R106 R0      ; R106 := R0
1465 [-]: MOVE      R106 R1      ; R106 := R1
1466 [-]: LOADK     R107 K5      ; R107 := 0
1467 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1468 [-]: SELF      R108 R108 K122; R109 := R108; R108 := R108["0xED0EE7FB"]
1469 [-]: GETUPVAL  R110 U11     ; R110 := U11
1470 [-]: GETTABLE  R110 R110 K124; R110 := R110["RESCUE_SCORE"]
1471 [-]: LOADK     R111 K5      ; R111 := 0
1472 [-]: CALL      R108 4 0     ; R108,... := R108(R109,R110,R111)
1473 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1474 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1475 [-]: JMP       1584         ; PC := 1584
1476 [-]: GETUPVAL  R104 U13     ; R104 := U13
1477 [-]: CALL      R104 1 2     ; R104 := R104()
1478 [-]: TEST      R104 0       ; if not R104 then PC := 1517
1479 [-]: JMP       1517         ; PC := 1517
1480 [-]: MOVE      R103 R0      ; R103 := R0
1481 [-]: GETUPVAL  R104 U8      ; R104 := U8
1482 [-]: GETUPVAL  R105 U3      ; R105 := U3
1483 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1484 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1487
1485 [-]: JMP       1487         ; PC := 1487
1486 [-]: MOVE      R106 R0      ; R106 := R0
1487 [-]: MOVE      R106 R1      ; R106 := R1
1488 [-]: LOADK     R107 K5      ; R107 := 0
1489 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1490 [-]: SELF      R108 R108 K122; R109 := R108; R108 := R108["0xED0EE7FB"]
1491 [-]: GETUPVAL  R110 U11     ; R110 := U11
1492 [-]: GETTABLE  R110 R110 K125; R110 := R110["WAVE_NUMBER"]
1493 [-]: LOADK     R111 K5      ; R111 := 0
1494 [-]: CALL      R108 4 0     ; R108,... := R108(R109,R110,R111)
1495 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1496 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1497 [-]: GETUPVAL  R104 U8      ; R104 := U8
1498 [-]: GETTABLE  R104 R104 K120; R104 := R104["mScore"]
1499 [-]: LT        0 K5 R104    ; if 0 >= R104 then PC := 1506
1500 [-]: JMP       1506         ; PC := 1506
1501 [-]: GETUPVAL  R104 U8      ; R104 := U8
1502 [-]: GETUPVAL  R105 U8      ; R105 := U8
1503 [-]: GETTABLE  R105 R105 K120; R105 := R105["mScore"]
1504 [-]: SUB       R105 R105 K20; R105 := R105 - 1
1505 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1506 [-]: GETUPVAL  R104 U8      ; R104 := U8
1507 [-]: GETTABLE  R104 R104 K120; R104 := R104["mScore"]
1508 [-]: LT        0 K126 R104  ; if 1000 >= R104 then PC := 1584
1509 [-]: JMP       1584         ; PC := 1584
1510 [-]: GETGLOBAL R104 K0      ; R104 := 0x93B1256B
1511 [-]: LOADK     R105 K127    ; R105 := "Extremely high score returned from NV_WAVE_NUMBER: "
1512 [-]: GETUPVAL  R106 U8      ; R106 := U8
1513 [-]: GETTABLE  R106 R106 K120; R106 := R106["mScore"]
1514 [-]: CONCAT    R105 R105 R106; R105 := R105 .. R106
1515 [-]: CALL      R104 2 1     ; R104(R105)
1516 [-]: JMP       1584         ; PC := 1584
1517 [-]: GETUPVAL  R104 U14     ; R104 := U14
1518 [-]: CALL      R104 1 2     ; R104 := R104()
1519 [-]: TEST      R104 0       ; if not R104 then PC := 1539
1520 [-]: JMP       1539         ; PC := 1539
1521 [-]: MOVE      R103 R0      ; R103 := R0
1522 [-]: GETUPVAL  R104 U8      ; R104 := U8
1523 [-]: GETUPVAL  R105 U3      ; R105 := U3
1524 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1525 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1528
1526 [-]: JMP       1528         ; PC := 1528
1527 [-]: MOVE      R106 R0      ; R106 := R0
1528 [-]: MOVE      R106 R1      ; R106 := R1
1529 [-]: LOADK     R107 K5      ; R107 := 0
1530 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1531 [-]: SELF      R108 R108 K122; R109 := R108; R108 := R108["0xED0EE7FB"]
1532 [-]: GETUPVAL  R110 U11     ; R110 := U11
1533 [-]: GETTABLE  R110 R110 K128; R110 := R110["TIME_ELAPSED"]
1534 [-]: LOADK     R111 K5      ; R111 := 0
1535 [-]: CALL      R108 4 0     ; R108,... := R108(R109,R110,R111)
1536 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1537 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1538 [-]: JMP       1584         ; PC := 1584
1539 [-]: GETUPVAL  R104 U15     ; R104 := U15
1540 [-]: CALL      R104 1 2     ; R104 := R104()
1541 [-]: TEST      R104 1       ; if R104 then PC := 1547
1542 [-]: JMP       1547         ; PC := 1547
1543 [-]: GETUPVAL  R104 U16     ; R104 := U16
1544 [-]: CALL      R104 1 2     ; R104 := R104()
1545 [-]: TEST      R104 0       ; if not R104 then PC := 1564
1546 [-]: JMP       1564         ; PC := 1564
1547 [-]: GETUPVAL  R104 U8      ; R104 := U8
1548 [-]: GETUPVAL  R105 U3      ; R105 := U3
1549 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1550 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1553
1551 [-]: JMP       1553         ; PC := 1553
1552 [-]: MOVE      R106 R0      ; R106 := R0
1553 [-]: MOVE      R106 R1      ; R106 := R1
1554 [-]: LOADK     R107 K5      ; R107 := 0
1555 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1556 [-]: SELF      R108 R108 K122; R109 := R108; R108 := R108["0xED0EE7FB"]
1557 [-]: GETUPVAL  R110 U11     ; R110 := U11
1558 [-]: GETTABLE  R110 R110 K129; R110 := R110["MISSION_SCORE"]
1559 [-]: LOADK     R111 K5      ; R111 := 0
1560 [-]: CALL      R108 4 0     ; R108,... := R108(R109,R110,R111)
1561 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1562 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1563 [-]: JMP       1584         ; PC := 1584
1564 [-]: GETUPVAL  R104 U17     ; R104 := U17
1565 [-]: CALL      R104 1 2     ; R104 := R104()
1566 [-]: TEST      R104 0       ; if not R104 then PC := 1584
1567 [-]: JMP       1584         ; PC := 1584
1568 [-]: GETUPVAL  R104 U8      ; R104 := U8
1569 [-]: GETUPVAL  R105 U3      ; R105 := U3
1570 [-]: GETTABLE  R105 R105 K49; R105 := R105["0xF81722A2"]
1571 [-]: EQ        1 R0 K59     ; if R0 == "0x0" then PC := 1574
1572 [-]: JMP       1574         ; PC := 1574
1573 [-]: MOVE      R106 R0      ; R106 := R0
1574 [-]: MOVE      R106 R1      ; R106 := R1
1575 [-]: LOADK     R107 K5      ; R107 := 0
1576 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1577 [-]: SELF      R108 R108 K122; R109 := R108; R108 := R108["0xED0EE7FB"]
1578 [-]: GETUPVAL  R110 U11     ; R110 := U11
1579 [-]: GETTABLE  R110 R110 K128; R110 := R110["TIME_ELAPSED"]
1580 [-]: LOADK     R111 K5      ; R111 := 0
1581 [-]: CALL      R108 4 0     ; R108,... := R108(R109,R110,R111)
1582 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1583 [-]: SETTABLE  R104 K120 R105; R104["mScore"] := R105
1584 [-]: GETUPVAL  R104 U18     ; R104 := U18
1585 [-]: CALL      R104 1 2     ; R104 := R104()
1586 [-]: TEST      R104 0       ; if not R104 then PC := 1621
1587 [-]: JMP       1621         ; PC := 1621
1588 [-]: GETUPVAL  R104 U19     ; R104 := U19
1589 [-]: GETTABLE  R104 R104 K130; R104 := R104["0x87D2274C"]
1590 [-]: CALL      R104 1 2     ; R104 := R104()
1591 [-]: TEST      R104 0       ; if not R104 then PC := 1621
1592 [-]: JMP       1621         ; PC := 1621
1593 [-]: GETUPVAL  R104 U20     ; R104 := U20
1594 [-]: CALL      R104 1 2     ; R104 := R104()
1595 [-]: GETGLOBAL R105 K6      ; R105 := 0x400E7765
1596 [-]: MOVE      R106 R104    ; R106 := R104
1597 [-]: CALL      R105 2 2     ; R105 := R105(R106)
1598 [-]: TEST      R105 1       ; if R105 then PC := 1621
1599 [-]: JMP       1621         ; PC := 1621
1600 [-]: SELF      R105 R104 K44; R106 := R104; R105 := R104["0xADE7BF82"]
1601 [-]: CALL      R105 2 2     ; R105 := R105(R106)
1602 [-]: GETGLOBAL R106 K6      ; R106 := 0x400E7765
1603 [-]: MOVE      R107 R105    ; R107 := R105
1604 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1605 [-]: TEST      R106 1       ; if R106 then PC := 1621
1606 [-]: JMP       1621         ; PC := 1621
1607 [-]: GETGLOBAL R106 K7      ; R106 := gGameRules
1608 [-]: SELF      R106 R106 K131; R107 := R106; R106 := R106["0xA2CB3BC5"]
1609 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1610 [-]: TEST      R106 1       ; if R106 then PC := 1621
1611 [-]: JMP       1621         ; PC := 1621
1612 [-]: SELF      R106 R105 K132; R107 := R105; R106 := R105["0xD9DA3D41"]
1613 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1614 [-]: LT        0 K5 R106    ; if 0 >= R106 then PC := 1621
1615 [-]: JMP       1621         ; PC := 1621
1616 [-]: NEWTABLE  R107 0 1     ; R107 := {}
1617 [-]: SETTABLE  R107 K133 R106; R107["Points"] := R106
1618 [-]: MOVE      R107 R21     ; R107 := R21
1619 [-]: GETUPVAL  R107 U8      ; R107 := U8
1620 [-]: SETTABLE  R107 K134 R106; R107["mMissionIntrinsicPoints"] := R106
1621 [-]: TEST      R0 0         ; if not R0 then PC := 1632
1622 [-]: JMP       1632         ; PC := 1632
1623 [-]: TEST      R2 0         ; if not R2 then PC := 1632
1624 [-]: JMP       1632         ; PC := 1632
1625 [-]: GETUPVAL  R107 U8      ; R107 := U8
1626 [-]: GETGLOBAL R108 K7      ; R108 := gGameRules
1627 [-]: SELF      R108 R108 K136; R109 := R108; R108 := R108["0xF6F008F4"]
1628 [-]: CALL      R108 2 2     ; R108 := R108(R109)
1629 [-]: DIV       R108 R108 K34; R108 := R108 / 5
1630 [-]: SETTABLE  R107 K135 R108; R107["mMissionRating"] := R108
1631 [-]: JMP       1634         ; PC := 1634
1632 [-]: GETUPVAL  R107 U8      ; R107 := U8
1633 [-]: SETTABLE  R107 K135 K5 ; R107["mMissionRating"] := 0
1634 [-]: GETGLOBAL R107 K6      ; R107 := 0x400E7765
1635 [-]: GETUPVAL  R108 U0      ; R108 := U0
1636 [-]: CALL      R107 2 2     ; R107 := R107(R108)
1637 [-]: TEST      R107 1       ; if R107 then PC := 1658
1638 [-]: JMP       1658         ; PC := 1658
1639 [-]: TEST      R103 0       ; if not R103 then PC := 1649
1640 [-]: JMP       1649         ; PC := 1649
1641 [-]: GETUPVAL  R107 U8      ; R107 := U8
1642 [-]: GETUPVAL  R108 U8      ; R108 := U8
1643 [-]: GETTABLE  R108 R108 K120; R108 := R108["mScore"]
1644 [-]: GETUPVAL  R109 U0      ; R109 := U0
1645 [-]: SELF      R109 R109 K137; R110 := R109; R109 := R109["0xB7C03D1C"]
1646 [-]: CALL      R109 2 2     ; R109 := R109(R110)
1647 [-]: MUL       R108 R108 R109; R108 := R108 * R109
1648 [-]: SETTABLE  R107 K120 R108; R107["mScore"] := R108
1649 [-]: GETUPVAL  R107 U0      ; R107 := U0
1650 [-]: SELF      R107 R107 K138; R108 := R107; R107 := R107["0x3E8B54AB"]
1651 [-]: GETTABLE  R109 R3 R48  ; R109 := R3[R48]
1652 [-]: GETUPVAL  R110 U8      ; R110 := U8
1653 [-]: CALL      R107 4 1     ; R107(R108,R109,R110)
1654 [-]: GETUPVAL  R107 U0      ; R107 := U0
1655 [-]: SELF      R107 R107 K139; R108 := R107; R107 := R107["0x9FD44551"]
1656 [-]: GETTABLE  R109 R3 R48  ; R109 := R3[R48]
1657 [-]: CALL      R107 3 1     ; R107(R108,R109)
1658 [-]: GETTABLE  R107 R3 R48  ; R107 := R3[R48]
1659 [-]: SELF      R107 R107 K99; R108 := R107; R107 := R107["0x8F6EA7B6"]
1660 [-]: CALL      R107 2 2     ; R107 := R107(R108)
1661 [-]: TEST      R107 0       ; if not R107 then PC := 1704
1662 [-]: JMP       1704         ; PC := 1704
1663 [-]: GETUPVAL  R107 U4      ; R107 := U4
1664 [-]: CALL      R107 1 2     ; R107 := R107()
1665 [-]: TEST      R107 1       ; if R107 then PC := 1704
1666 [-]: JMP       1704         ; PC := 1704
1667 [-]: GETUPVAL  R107 U19     ; R107 := U19
1668 [-]: GETTABLE  R107 R107 K130; R107 := R107["0x87D2274C"]
1669 [-]: CALL      R107 1 2     ; R107 := R107()
1670 [-]: TEST      R107 0       ; if not R107 then PC := 1681
1671 [-]: JMP       1681         ; PC := 1681
1672 [-]: GETGLOBAL R107 K7      ; R107 := gGameRules
1673 [-]: SELF      R107 R107 K140; R108 := R107; R107 := R107["0x626EB914"]
1674 [-]: GETTABLE  R109 R3 R48  ; R109 := R3[R48]
1675 [-]: TESTSET   R110 R0 0    ; if not R0 then PC := 1678 else R110 := R0
1676 [-]: JMP       1678         ; PC := 1678
1677 [-]: MOVE      R110 R2      ; R110 := R2
1678 [-]: MOVE      R111 R0      ; R111 := R0
1679 [-]: CALL      R107 5 1     ; R107(R108,R109,R110,R111)
1680 [-]: JMP       1704         ; PC := 1704
1681 [-]: GETGLOBAL R107 K7      ; R107 := gGameRules
1682 [-]: SELF      R107 R107 K140; R108 := R107; R107 := R107["0x626EB914"]
1683 [-]: GETTABLE  R109 R3 R48  ; R109 := R3[R48]
1684 [-]: MOVE      R110 R0      ; R110 := R0
1685 [-]: MOVE      R111 R0      ; R111 := R0
1686 [-]: CALL      R107 5 1     ; R107(R108,R109,R110,R111)
1687 [-]: JMP       1704         ; PC := 1704
1688 [-]: LOADK     R107 K141    ; R107 := "NULL"
1689 [-]: GETGLOBAL R108 K6      ; R108 := 0x400E7765
1690 [-]: GETTABLE  R109 R3 R48  ; R109 := R3[R48]
1691 [-]: CALL      R108 2 2     ; R108 := R108(R109)
1692 [-]: TEST      R108 1       ; if R108 then PC := 1698
1693 [-]: JMP       1698         ; PC := 1698
1694 [-]: GETTABLE  R108 R3 R48  ; R108 := R3[R48]
1695 [-]: SELF      R108 R108 K46; R109 := R108; R108 := R108["0x144A28F9"]
1696 [-]: CALL      R108 2 2     ; R108 := R108(R109)
1697 [-]: MOVE      R107 R108    ; R107 := R108
1698 [-]: GETGLOBAL R108 K0      ; R108 := 0x93B1256B
1699 [-]: LOADK     R109 K142    ; R109 := "Cannot give end of match rewards for player "
1700 [-]: MOVE      R110 R107    ; R110 := R107
1701 [-]: LOADK     R111 K143    ; R111 := "! Avatar was NULL or InventoryController was wrong type"
1702 [-]: CONCAT    R109 R109 R111; R109 := R109 .. R110 .. R111
1703 [-]: CALL      R108 2 1     ; R108(R109)
1704 [-]: FORLOOP   R45 267      ; R45 += R47; if R45 <= R46 then begin PC := 267; R48 := R45 end
1705 [-]: GETUPVAL  R108 U19     ; R108 := U19
1706 [-]: GETTABLE  R108 R108 K130; R108 := R108["0x87D2274C"]
1707 [-]: CALL      R108 1 2     ; R108 := R108()
1708 [-]: TEST      R108 0       ; if not R108 then PC := 1722
1709 [-]: JMP       1722         ; PC := 1722
1710 [-]: GETGLOBAL R108 K8      ; R108 := _T
1711 [-]: GETTABLE  R108 R108 K9 ; R108 := R108["eomScreenMode"]
1712 [-]: GETUPVAL  R109 U1      ; R109 := U1
1713 [-]: GETTABLE  R109 R109 K144; R109 := R109["DETAILED_PREVIEW"]
1714 [-]: EQ        0 R108 R109  ; if R108 ~= R109 then PC := 1722
1715 [-]: JMP       1722         ; PC := 1722
1716 [-]: GETUPVAL  R108 U22     ; R108 := U22
1717 [-]: CALL      R108 1 2     ; R108 := R108()
1718 [-]: TEST      R108 0       ; if not R108 then PC := 1722
1719 [-]: JMP       1722         ; PC := 1722
1720 [-]: GETUPVAL  R108 U23     ; R108 := U23
1721 [-]: CALL      R108 1 1     ; R108()
1722 [-]: GETUPVAL  R108 U0      ; R108 := U0
1723 [-]: SELF      R108 R108 K145; R109 := R108; R108 := R108["0x7CDBFCFD"]
1724 [-]: CALL      R108 2 1     ; R108(R109)
1725 [-]: TEST      R2 0         ; if not R2 then PC := 1865
1726 [-]: JMP       1865         ; PC := 1865
1727 [-]: TEST      R0 0         ; if not R0 then PC := 1751
1728 [-]: JMP       1751         ; PC := 1751
1729 [-]: GETTABLE  R108 R4 K146 ; R108 := R4["alertId"]
1730 [-]: EQ        1 R108 K147  ; if R108 == "" then PC := 1738
1731 [-]: JMP       1738         ; PC := 1738
1732 [-]: GETUPVAL  R108 U0      ; R108 := U0
1733 [-]: SELF      R108 R108 K148; R109 := R108; R108 := R108["0xC0A24390"]
1734 [-]: GETTABLE  R110 R4 K146 ; R110 := R4["alertId"]
1735 [-]: CALL      R108 3 2     ; R108 := R108(R109,R110)
1736 [-]: TEST      R108 1       ; if R108 then PC := 1749
1737 [-]: JMP       1749         ; PC := 1749
1738 [-]: GETTABLE  R108 R4 K149 ; R108 := R4["periodicMissionTag"]
1739 [-]: GETGLOBAL R109 K150    ; R109 := EMPTY_SYMBOL
1740 [-]: EQ        1 R108 R109  ; if R108 == R109 then PC := 1751
1741 [-]: JMP       1751         ; PC := 1751
1742 [-]: GETUPVAL  R108 U0      ; R108 := U0
1743 [-]: SELF      R108 R108 K151; R109 := R108; R108 := R108["0x2B046279"]
1744 [-]: GETTABLE  R110 R4 K149 ; R110 := R4["periodicMissionTag"]
1745 [-]: GETTABLE  R111 R4 K152 ; R111 := R4["periodicMissionCooldown"]
1746 [-]: CALL      R108 4 2     ; R108 := R108(R109,R110,R111)
1747 [-]: TEST      R108 1       ; if R108 then PC := 1751
1748 [-]: JMP       1751         ; PC := 1751
1749 [-]: MOVE      R108 R1      ; R108 := R1
1750 [-]: MOVE      R108 R24     ; R108 := R24
1751 [-]: MOVE      R108 R1      ; R108 := R1
1752 [-]: MOVE      R108 R25     ; R108 := R25
1753 [-]: GETUPVAL  R108 U4      ; R108 := U4
1754 [-]: CALL      R108 1 2     ; R108 := R108()
1755 [-]: TEST      R108 1       ; if R108 then PC := 1830
1756 [-]: JMP       1830         ; PC := 1830
1757 [-]: GETUPVAL  R108 U9      ; R108 := U9
1758 [-]: GETTABLE  R108 R108 K50; R108 := R108["isPvp"]
1759 [-]: TEST      R108 1       ; if R108 then PC := 1830
1760 [-]: JMP       1830         ; PC := 1830
1761 [-]: TEST      R0 0         ; if not R0 then PC := 1771
1762 [-]: JMP       1771         ; PC := 1771
1763 [-]: GETGLOBAL R108 K8      ; R108 := _T
1764 [-]: GETTABLE  R108 R108 K153; R108 := R108["OnEndOfMatchMissionSuccess"]
1765 [-]: EQ        1 R108 K154  ; if R108 == nil then PC := 1771
1766 [-]: JMP       1771         ; PC := 1771
1767 [-]: GETGLOBAL R108 K8      ; R108 := _T
1768 [-]: GETTABLE  R108 R108 K155; R108 := R108["0xC438589D"]
1769 [-]: CALL      R108 1 1     ; R108()
1770 [-]: JMP       1780         ; PC := 1780
1771 [-]: TEST      R0 1         ; if R0 then PC := 1780
1772 [-]: JMP       1780         ; PC := 1780
1773 [-]: GETGLOBAL R108 K8      ; R108 := _T
1774 [-]: GETTABLE  R108 R108 K156; R108 := R108["OnEndOfMatchMissionFail"]
1775 [-]: EQ        1 R108 K154  ; if R108 == nil then PC := 1780
1776 [-]: JMP       1780         ; PC := 1780
1777 [-]: GETGLOBAL R108 K8      ; R108 := _T
1778 [-]: GETTABLE  R108 R108 K157; R108 := R108["0x7AB7C421"]
1779 [-]: CALL      R108 1 1     ; R108()
1780 [-]: GETTABLE  R108 R4 K158 ; R108 := R4["missionType"]
1781 [-]: GETGLOBAL R109 K29     ; R109 := Lotus_Game
1782 [-]: GETTABLE  R109 R109 K159; R109 := R109["MT_RAILJACK"]
1783 [-]: EQ        1 R108 R109  ; if R108 == R109 then PC := 1786
1784 [-]: JMP       1786         ; PC := 1786
1785 [-]: MOVE      R108 R0      ; R108 := R0
1786 [-]: MOVE      R108 R1      ; R108 := R1
1787 [-]: TEST      R108 0       ; if not R108 then PC := 1804
1788 [-]: JMP       1804         ; PC := 1804
1789 [-]: TEST      R0 0         ; if not R0 then PC := 1804
1790 [-]: JMP       1804         ; PC := 1804
1791 [-]: GETGLOBAL R109 K8      ; R109 := _T
1792 [-]: GETTABLE  R109 R109 K160; R109 := R109["RailjackReturnToDojo"]
1793 [-]: TEST      R109 1       ; if R109 then PC := 1804
1794 [-]: JMP       1804         ; PC := 1804
1795 [-]: GETGLOBAL R109 K7      ; R109 := gGameRules
1796 [-]: SELF      R109 R109 K161; R110 := R109; R109 := R109["0x5E2F41BF"]
1797 [-]: GETGLOBAL R111 K29     ; R111 := Lotus_Game
1798 [-]: GETTABLE  R111 R111 K162; R111 := R111["LotusGameRules_ICT_FULL_INV_NO_REWARDS"]
1799 [-]: LOADK     R112 K5      ; R112 := 0
1800 [-]: LOADK     R113 K5      ; R113 := 0
1801 [-]: LOADK     R114 K163    ; R114 := "DbUpdateComplete"
1802 [-]: CALL      R109 6 1     ; R109(R110,R111,R112,R113,R114)
1803 [-]: JMP       1830         ; PC := 1830
1804 [-]: GETGLOBAL R109 K8      ; R109 := _T
1805 [-]: SETTABLE  R109 K160 K59; R109["RailjackReturnToDojo"] := "0x0"
1806 [-]: GETTABLE  R109 R4 K158 ; R109 := R4["missionType"]
1807 [-]: GETGLOBAL R110 K29     ; R110 := Lotus_Game
1808 [-]: GETTABLE  R110 R110 K164; R110 := R110["MT_RAID"]
1809 [-]: EQ        0 R109 R110  ; if R109 ~= R110 then PC := 1815
1810 [-]: JMP       1815         ; PC := 1815
1811 [-]: GETGLOBAL R109 K8      ; R109 := _T
1812 [-]: GETTABLE  R109 R109 K165; R109 := R109["raidIntermediateStage"]
1813 [-]: EQ        1 R109 K166  ; if R109 == "0x1" then PC := 1818
1814 [-]: JMP       1818         ; PC := 1818
1815 [-]: MOVE      R109 R108    ; R109 := R108
1816 [-]: JMP       1819         ; PC := 1819
1817 [-]: MOVE      R109 R0      ; R109 := R0
1818 [-]: MOVE      R109 R1      ; R109 := R1
1819 [-]: GETGLOBAL R110 K7      ; R110 := gGameRules
1820 [-]: SELF      R110 R110 K167; R111 := R110; R110 := R110["0x9CCFAAA1"]
1821 [-]: MOVE      R112 R0      ; R112 := R0
1822 [-]: GETGLOBAL R113 K168    ; R113 := mMovie
1823 [-]: LOADK     R114 K163    ; R114 := "DbUpdateComplete"
1824 [-]: MOVE      R115 R109    ; R115 := R109
1825 [-]: CALL      R110 6 1     ; R110(R111,R112,R113,R114,R115)
1826 [-]: TEST      R108 0       ; if not R108 then PC := 1830
1827 [-]: JMP       1830         ; PC := 1830
1828 [-]: MOVE      R110 R1      ; R110 := R1
1829 [-]: MOVE      R110 R26     ; R110 := R26
1830 [-]: GETUPVAL  R110 U8      ; R110 := U8
1831 [-]: EQ        1 R110 K154  ; if R110 == nil then PC := 1865
1832 [-]: JMP       1865         ; PC := 1865
1833 [-]: GETUPVAL  R110 U23     ; R110 := U23
1834 [-]: CALL      R110 1 1     ; R110()
1835 [-]: GETGLOBAL R110 K168    ; R110 := mMovie
1836 [-]: SELF      R110 R110 K169; R111 := R110; R110 := R110["0xA0D33344"]
1837 [-]: LOADK     R112 K170    ; R112 := "RewardsPanel.RewardList.Item1.Count"
1838 [-]: CALL      R110 3 2     ; R110 := R110(R111,R112)
1839 [-]: TEST      R110 1       ; if R110 then PC := 1865
1840 [-]: JMP       1865         ; PC := 1865
1841 [-]: GETGLOBAL R110 K0      ; R110 := 0x93B1256B
1842 [-]: LOADK     R111 K171    ; R111 := "[EndOfMatch.lua GetRewardCreditsToShow] On DB Update calculation"
1843 [-]: CALL      R110 2 1     ; R110(R111)
1844 [-]: GETUPVAL  R110 U27     ; R110 := U27
1845 [-]: CALL      R110 1 2     ; R110 := R110()
1846 [-]: GETGLOBAL R111 K168    ; R111 := mMovie
1847 [-]: SELF      R111 R111 K172; R112 := R111; R111 := R111["0x5DB0BD4"]
1848 [-]: LOADK     R113 K173    ; R113 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
1849 [-]: MOVE      R114 R1      ; R114 := R1
1850 [-]: CALL      R111 4 2     ; R111 := R111(R112,R113,R114)
1851 [-]: LT        0 K5 R110    ; if 0 >= R110 then PC := 1865
1852 [-]: JMP       1865         ; PC := 1865
1853 [-]: NEWTABLE  R112 0 4     ; R112 := {}
1854 [-]: SETTABLE  R112 K174 R111; R112["Name"] := R111
1855 [-]: SETTABLE  R112 K175 R110; R112["Count"] := R110
1856 [-]: GETGLOBAL R113 K177    ; R113 := creditsIcon
1857 [-]: SETTABLE  R112 K176 R113; R112["Icon"] := R113
1858 [-]: SETTABLE  R112 K178 K154; R112["Background"] := nil
1859 [-]: GETGLOBAL R113 K179    ; R113 := table
1860 [-]: GETTABLE  R113 R113 K180; R113 := R113["0xE6450C9D"]
1861 [-]: GETUPVAL  R114 U28     ; R114 := U28
1862 [-]: LOADK     R115 K181    ; R115 := 2
1863 [-]: MOVE      R116 R112    ; R116 := R112
1864 [-]: CALL      R113 4 1     ; R113(R114,R115,R116)
1865 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2818
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x84DCC428"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["UI_MODE_IN_GAME"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: LT        0 K2 R0      ; if 0 >= R0 then PC := 28
 11 [-]: JMP       28           ; PC := 28
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 28
 16 [-]: JMP       28           ; PC := 28
 17 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 18 [-]: GETGLOBAL R1 K4        ; R1 := xpTallySound
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 42
 21 [-]: JMP       42           ; PC := 42
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0x25992394"]
 24 [-]: GETGLOBAL R1 K4        ; R1 := xpTallySound
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: MOVE      R0 R2        ; R0 := R2
 27 [-]: JMP       42           ; PC := 42
 28 [-]: GETUPVAL  R0 U1        ; R0 := U1
 29 [-]: LE        0 R0 K2      ; if R0 > 0 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 32 [-]: GETUPVAL  R1 U2        ; R1 := U2
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETUPVAL  R0 U2        ; R0 := U2
 37 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x2842784A"]
 38 [-]: MOVE      R2 R1        ; R2 := R1
 39 [-]: CALL      R0 3 1       ; R0(R1,R2)
 40 [-]: LOADNIL   R0 R0        ; R0 := nil
 41 [-]: MOVE      R0 R2        ; R0 := R2
 42 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2833
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: ADD       R2 R2 R0     ; R2 := R2 + R0
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: TEST      R1 1         ; if R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2841
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R4 K0        ; R4 := ""
  2 [-]: TEST      R3 0         ; if not R3 then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: LOADK     R5 K1        ; R5 := "+ "
  5 [-]: GETGLOBAL R6 K2        ; R6 := mMovie
  6 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0x5DB0BD4"]
  7 [-]: LOADK     R8 K4        ; R8 := "<FOCUS>"
  8 [-]: MOVE      R9 R1        ; R9 := R1
  9 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 10 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
 13 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 14 [-]: GETTABLE  R7 R1 K5     ; R7 := R1["PolarityTag"]
 15 [-]: MOVE      R8 R1        ; R8 := R1
 16 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 17 [-]: LOADK     R6 K6        ; R6 := " "
 18 [-]: GETGLOBAL R7 K2        ; R7 := mMovie
 19 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0x5DB0BD4"]
 20 [-]: GETTABLE  R9 R1 K7     ; R9 := R1["LensTag"]
 21 [-]: MOVE      R10 R1       ; R10 := R1
 22 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 23 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 24 [-]: EQ        1 R2 K8      ; if R2 == 0 then PC := 33
 25 [-]: JMP       33           ; PC := 33
 26 [-]: MOVE      R5 R4        ; R5 := R4
 27 [-]: LOADK     R6 K6        ; R6 := " "
 28 [-]: GETUPVAL  R7 U0        ; R7 := U0
 29 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0x7E197415"]
 30 [-]: MOVE      R8 R2        ; R8 := R2
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 33 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
 34 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x1C19D966"]
 35 [-]: MOVE      R7 R0        ; R7 := R0
 36 [-]: LOADK     R8 K11       ; R8 := "text"
 37 [-]: MOVE      R9 R4        ; R9 := R4
 38 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 39 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2857
; #Upvalues:       12
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: SELF      R5 R5 K0     ; R6 := R5; R5 := R5["0xD75E681A"]
  3 [-]: MOVE      R7 R0        ; R7 := R0
  4 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
  5 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
  6 [-]: GETTABLE  R7 R2 K2     ; R7 := R2["Lens"]
  7 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  8 [-]: TEST      R6 1         ; if R6 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 11 [-]: MOVE      R7 R5        ; R7 := R5
 12 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 13 [-]: TEST      R6 0         ; if not R6 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SETTABLE  R5 K3 K4     ; R5["InterpingFocusGain"] := "0x1"
 17 [-]: GETGLOBAL R6 K5        ; R6 := 0x7C282057
 18 [-]: GETTABLE  R7 R2 K2     ; R7 := R2["Lens"]
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: LOADK     R7 K6        ; R7 := 1000
 21 [-]: LOADK     R8 K7        ; R8 := 13421772
 22 [-]: LOADK     R9 K8        ; R9 := 6750182
 23 [-]: GETGLOBAL R10 K9       ; R10 := 0xF595ADDE
 24 [-]: GETGLOBAL R11 K10      ; R11 := mMovie
 25 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0x6B7B470B"]
 26 [-]: MOVE      R13 R1       ; R13 := R1
 27 [-]: LOADK     R14 K12      ; R14 := ".XPBg"
 28 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 29 [-]: LOADK     R14 K13      ; R14 := "_width"
 30 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 31 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 32 [-]: GETUPVAL  R11 U1       ; R11 := U1
 33 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["0xC919C32B"]
 34 [-]: MOVE      R12 R6       ; R12 := R6
 35 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 36 [-]: GETUPVAL  R12 U2       ; R12 := U2
 37 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12["0x5AD5000D"]
 38 [-]: GETTABLE  R14 R11 K16  ; R14 := R11["PolarityType"]
 39 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 40 [-]: GETGLOBAL R13 K17      ; R13 := math
 41 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["0xF7005A7B"]
 42 [-]: DIV       R14 R12 R7   ; R14 := R12 / R7
 43 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 44 [-]: MOVE      R14 R13      ; R14 := R13
 45 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 46 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 47 [-]: MOVE      R17 R1       ; R17 := R1
 48 [-]: LOADK     R18 K20      ; R18 := "XP"
 49 [-]: LOADK     R19 K21      ; R19 := "textColor"
 50 [-]: GETGLOBAL R20 K22      ; R20 := _G
 51 [-]: GETTABLE  R20 R20 K23  ; R20 := R20["UIColor_White"]
 52 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 53 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 54 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 55 [-]: MOVE      R17 R1       ; R17 := R1
 56 [-]: LOADK     R18 K24      ; R18 := "BonusXP"
 57 [-]: LOADK     R19 K21      ; R19 := "textColor"
 58 [-]: GETGLOBAL R20 K22      ; R20 := _G
 59 [-]: GETTABLE  R20 R20 K23  ; R20 := R20["UIColor_White"]
 60 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 61 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 62 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 63 [-]: MOVE      R17 R1       ; R17 := R1
 64 [-]: LOADK     R18 K25      ; R18 := "StartXP"
 65 [-]: LOADK     R19 K26      ; R19 := "_color"
 66 [-]: GETGLOBAL R20 K22      ; R20 := _G
 67 [-]: GETTABLE  R20 R20 K23  ; R20 := R20["UIColor_White"]
 68 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 69 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 70 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 71 [-]: MOVE      R17 R1       ; R17 := R1
 72 [-]: LOADK     R18 K25      ; R18 := "StartXP"
 73 [-]: LOADK     R19 K27      ; R19 := "_visible"
 74 [-]: MOVE      R20 R1       ; R20 := R1
 75 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 76 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 77 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 78 [-]: MOVE      R17 R1       ; R17 := R1
 79 [-]: LOADK     R18 K28      ; R18 := "XPGain"
 80 [-]: LOADK     R19 K26      ; R19 := "_color"
 81 [-]: MOVE      R20 R8       ; R20 := R8
 82 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 83 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 84 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 85 [-]: MOVE      R17 R1       ; R17 := R1
 86 [-]: LOADK     R18 K28      ; R18 := "XPGain"
 87 [-]: LOADK     R19 K27      ; R19 := "_visible"
 88 [-]: MOVE      R20 R0       ; R20 := R0
 89 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 90 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 91 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 92 [-]: MOVE      R17 R1       ; R17 := R1
 93 [-]: LOADK     R18 K29      ; R18 := "XPBonus"
 94 [-]: LOADK     R19 K26      ; R19 := "_color"
 95 [-]: MOVE      R20 R9       ; R20 := R9
 96 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 97 [-]: GETGLOBAL R15 K10      ; R15 := mMovie
 98 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x880196A7"]
 99 [-]: MOVE      R17 R1       ; R17 := R1
100 [-]: LOADK     R18 K29      ; R18 := "XPBonus"
101 [-]: LOADK     R19 K27      ; R19 := "_visible"
102 [-]: MOVE      R20 R0       ; R20 := R0
103 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
104 [-]: GETGLOBAL R15 K17      ; R15 := math
105 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["0x32396E6F"]
106 [-]: MOVE      R16 R12      ; R16 := R12
107 [-]: MOVE      R17 R7       ; R17 := R7
108 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
109 [-]: DIV       R15 R15 R7   ; R15 := R15 / R7
110 [-]: GETGLOBAL R16 K10      ; R16 := mMovie
111 [-]: SELF      R16 R16 K19  ; R17 := R16; R16 := R16["0x880196A7"]
112 [-]: MOVE      R18 R1       ; R18 := R1
113 [-]: LOADK     R19 K25      ; R19 := "StartXP"
114 [-]: LOADK     R20 K13      ; R20 := "_width"
115 [-]: GETGLOBAL R21 K31      ; R21 := 0x6374FD98
116 [-]: MUL       R22 R15 R10  ; R22 := R15 * R10
117 [-]: LOADK     R23 K32      ; R23 := 0.0010000000474975
118 [-]: MOVE      R24 R10      ; R24 := R10
119 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
120 [-]: CALL      R16 0 1      ; R16(R17,...)
121 [-]: LOADK     R16 K33      ; R16 := 0
122 [-]: MOVE      R17 R12      ; R17 := R12
123 [-]: GETTABLE  R18 R11 K16  ; R18 := R11["PolarityType"]
124 [-]: GETTABLE  R18 R3 R18   ; R18 := R3[R18]
125 [-]: EQ        1 R18 K34    ; if R18 == nil then PC := 170
126 [-]: JMP       170          ; PC := 170
127 [-]: GETTABLE  R18 R11 K16  ; R18 := R11["PolarityType"]
128 [-]: GETTABLE  R18 R3 R18   ; R18 := R3[R18]
129 [-]: GETTABLE  R19 R2 K35   ; R19 := R2["FocusXp"]
130 [-]: SUB       R16 R18 R19  ; R16 := R18 - R19
131 [-]: ADD       R17 R12 R16  ; R17 := R12 + R16
132 [-]: GETGLOBAL R18 K17      ; R18 := math
133 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["0xF7005A7B"]
134 [-]: DIV       R19 R17 R7   ; R19 := R17 / R7
135 [-]: CALL      R18 2 2      ; R18 := R18(R19)
136 [-]: MOVE      R14 R18      ; R14 := R18
137 [-]: GETGLOBAL R18 K17      ; R18 := math
138 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["0x32396E6F"]
139 [-]: MOVE      R19 R17      ; R19 := R17
140 [-]: MOVE      R20 R7       ; R20 := R7
141 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
142 [-]: DIV       R18 R18 R7   ; R18 := R18 / R7
143 [-]: GETGLOBAL R19 K10      ; R19 := mMovie
144 [-]: SELF      R19 R19 K19  ; R20 := R19; R19 := R19["0x880196A7"]
145 [-]: MOVE      R21 R1       ; R21 := R1
146 [-]: LOADK     R22 K28      ; R22 := "XPGain"
147 [-]: LOADK     R23 K27      ; R23 := "_visible"
148 [-]: MOVE      R24 R1       ; R24 := R1
149 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
150 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 159
151 [-]: JMP       159          ; PC := 159
152 [-]: GETGLOBAL R19 K10      ; R19 := mMovie
153 [-]: SELF      R19 R19 K19  ; R20 := R19; R19 := R19["0x880196A7"]
154 [-]: MOVE      R21 R1       ; R21 := R1
155 [-]: LOADK     R22 K25      ; R22 := "StartXP"
156 [-]: LOADK     R23 K27      ; R23 := "_visible"
157 [-]: MOVE      R24 R0       ; R24 := R0
158 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
159 [-]: GETGLOBAL R19 K10      ; R19 := mMovie
160 [-]: SELF      R19 R19 K19  ; R20 := R19; R19 := R19["0x880196A7"]
161 [-]: MOVE      R21 R1       ; R21 := R1
162 [-]: LOADK     R22 K28      ; R22 := "XPGain"
163 [-]: LOADK     R23 K13      ; R23 := "_width"
164 [-]: GETGLOBAL R24 K31      ; R24 := 0x6374FD98
165 [-]: MUL       R25 R18 R10  ; R25 := R18 * R10
166 [-]: LOADK     R26 K32      ; R26 := 0.0010000000474975
167 [-]: MOVE      R27 R10      ; R27 := R10
168 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
169 [-]: CALL      R19 0 1      ; R19(R20,...)
170 [-]: GETUPVAL  R19 U3       ; R19 := U3
171 [-]: MOVE      R20 R1       ; R20 := R1
172 [-]: LOADK     R21 K36      ; R21 := ".BonusXP"
173 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
174 [-]: MOVE      R21 R11      ; R21 := R11
175 [-]: MOVE      R22 R17      ; R22 := R17
176 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
177 [-]: GETTABLE  R19 R2 K35   ; R19 := R2["FocusXp"]
178 [-]: ADD       R19 R17 R19  ; R19 := R17 + R19
179 [-]: SETTABLE  R5 K37 R19   ; R5["TotalFocus"] := R19
180 [-]: GETTABLE  R19 R2 K35   ; R19 := R2["FocusXp"]
181 [-]: SETTABLE  R5 K38 R19   ; R5["FocusGained"] := R19
182 [-]: SETTABLE  R5 K39 R11   ; R5["PolarityInfo"] := R11
183 [-]: TEST      R4 0         ; if not R4 then PC := 245
184 [-]: JMP       245          ; PC := 245
185 [-]: MOVE      R19 R1       ; R19 := R1
186 [-]: MOVE      R20 R17      ; R20 := R17
187 [-]: CLOSURE   R21 0        ; R21 := closure(Function #70.1)
188 [-]: MOVE      R0 R19       ; R0 := R19
189 [-]: GETUPVAL  R0 U4        ; R0 := U4
190 [-]: MOVE      R0 R2        ; R0 := R2
191 [-]: MOVE      R0 R20       ; R0 := R20
192 [-]: MOVE      R0 R7        ; R0 := R7
193 [-]: MOVE      R0 R14       ; R0 := R14
194 [-]: MOVE      R0 R1        ; R0 := R1
195 [-]: MOVE      R0 R10       ; R0 := R10
196 [-]: GETUPVAL  R0 U3        ; R0 := U3
197 [-]: MOVE      R0 R11       ; R0 := R11
198 [-]: GETUPVAL  R0 U1        ; R0 := U1
199 [-]: GETUPVAL  R0 U5        ; R0 := U5
200 [-]: GETUPVAL  R0 U6        ; R0 := U6
201 [-]: GETTABLE  R22 R2 K35   ; R22 := R2["FocusXp"]
202 [-]: EQ        1 R22 K33    ; if R22 == 0 then PC := 242
203 [-]: JMP       242          ; PC := 242
204 [-]: GETUPVAL  R22 U7       ; R22 := U7
205 [-]: LOADK     R23 K40      ; R23 := 1
206 [-]: MOVE      R24 R1       ; R24 := R1
207 [-]: CALL      R22 3 1      ; R22(R23,R24)
208 [-]: GETGLOBAL R22 K31      ; R22 := 0x6374FD98
209 [-]: GETTABLE  R23 R2 K35   ; R23 := R2["FocusXp"]
210 [-]: GETUPVAL  R24 U8       ; R24 := U8
211 [-]: DIV       R23 R23 R24  ; R23 := R23 / R24
212 [-]: GETUPVAL  R24 U9       ; R24 := U9
213 [-]: GETUPVAL  R25 U10      ; R25 := U10
214 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
215 [-]: GETGLOBAL R23 K10      ; R23 := mMovie
216 [-]: SELF      R23 R23 K19  ; R24 := R23; R23 := R23["0x880196A7"]
217 [-]: MOVE      R25 R1       ; R25 := R1
218 [-]: LOADK     R26 K29      ; R26 := "XPBonus"
219 [-]: LOADK     R27 K27      ; R27 := "_visible"
220 [-]: MOVE      R28 R1       ; R28 := R1
221 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
222 [-]: GETGLOBAL R23 K41      ; R23 := 0x52E17A90
223 [-]: GETGLOBAL R24 K10      ; R24 := mMovie
224 [-]: MOVE      R25 R1       ; R25 := R1
225 [-]: GETGLOBAL R26 K42      ; R26 := UISys
226 [-]: GETTABLE  R26 R26 K43  ; R26 := R26["FlashInstance_LINEAR"]
227 [-]: NEWTABLE  R27 1 0      ; R27 := {}
228 [-]: MOVE      R28 R21      ; R28 := R21
229 [-]: SETLIST   R27 1 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 1
230 [-]: NEWTABLE  R28 1 0      ; R28 := {}
231 [-]: LOADK     R29 K40      ; R29 := 1
232 [-]: SETLIST   R28 1 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
233 [-]: MOVE      R29 R22      ; R29 := R22
234 [-]: LOADK     R30 K44      ; R30 := 2
235 [-]: CLOSURE   R31 1        ; R31 := closure(Function #70.2)
236 [-]: GETUPVAL  R0 U7        ; R0 := U7
237 [-]: GETUPVAL  R0 U1        ; R0 := U1
238 [-]: GETUPVAL  R0 U11       ; R0 := U11
239 [-]: MOVE      R0 R5        ; R0 := R5
240 [-]: CALL      R23 9 1      ; R23(R24,R25,R26,R27,R28,R29,R30,R31)
241 [-]: JMP       243          ; PC := 243
242 [-]: SETTABLE  R5 K3 K45    ; R5["InterpingFocusGain"] := "0x0"
243 [-]: CLOSE     R19          ; SAVE R19,...
244 [-]: JMP       309          ; PC := 309
245 [-]: GETTABLE  R19 R2 K35   ; R19 := R2["FocusXp"]
246 [-]: EQ        1 R19 K33    ; if R19 == 0 then PC := 308
247 [-]: JMP       308          ; PC := 308
248 [-]: MOVE      R19 R1       ; R19 := R1
249 [-]: LOADK     R20 K46      ; R20 := ".XPBonus"
250 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
251 [-]: GETTABLE  R20 R2 K35   ; R20 := R2["FocusXp"]
252 [-]: ADD       R20 R17 R20  ; R20 := R17 + R20
253 [-]: GETGLOBAL R21 K17      ; R21 := math
254 [-]: GETTABLE  R21 R21 K18  ; R21 := R21["0xF7005A7B"]
255 [-]: DIV       R22 R20 R7   ; R22 := R20 / R7
256 [-]: CALL      R21 2 2      ; R21 := R21(R22)
257 [-]: LT        0 R14 R21    ; if R14 >= R21 then PC := 273
258 [-]: JMP       273          ; PC := 273
259 [-]: GETGLOBAL R22 K10      ; R22 := mMovie
260 [-]: SELF      R22 R22 K19  ; R23 := R22; R22 := R22["0x880196A7"]
261 [-]: MOVE      R24 R1       ; R24 := R1
262 [-]: LOADK     R25 K25      ; R25 := "StartXP"
263 [-]: LOADK     R26 K27      ; R26 := "_visible"
264 [-]: MOVE      R27 R0       ; R27 := R0
265 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
266 [-]: GETGLOBAL R22 K10      ; R22 := mMovie
267 [-]: SELF      R22 R22 K19  ; R23 := R22; R22 := R22["0x880196A7"]
268 [-]: MOVE      R24 R1       ; R24 := R1
269 [-]: LOADK     R25 K28      ; R25 := "XPGain"
270 [-]: LOADK     R26 K27      ; R26 := "_visible"
271 [-]: MOVE      R27 R0       ; R27 := R0
272 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
273 [-]: GETGLOBAL R22 K17      ; R22 := math
274 [-]: GETTABLE  R22 R22 K30  ; R22 := R22["0x32396E6F"]
275 [-]: GETTABLE  R23 R2 K35   ; R23 := R2["FocusXp"]
276 [-]: ADD       R23 R17 R23  ; R23 := R17 + R23
277 [-]: MOVE      R24 R7       ; R24 := R7
278 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
279 [-]: DIV       R22 R22 R7   ; R22 := R22 / R7
280 [-]: MUL       R23 R22 R10  ; R23 := R22 * R10
281 [-]: GETGLOBAL R24 K10      ; R24 := mMovie
282 [-]: SELF      R24 R24 K47  ; R25 := R24; R24 := R24["0x1C19D966"]
283 [-]: MOVE      R26 R19      ; R26 := R19
284 [-]: LOADK     R27 K27      ; R27 := "_visible"
285 [-]: MOVE      R28 R1       ; R28 := R1
286 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
287 [-]: GETGLOBAL R24 K10      ; R24 := mMovie
288 [-]: SELF      R24 R24 K47  ; R25 := R24; R24 := R24["0x1C19D966"]
289 [-]: MOVE      R26 R19      ; R26 := R19
290 [-]: LOADK     R27 K13      ; R27 := "_width"
291 [-]: MOVE      R28 R23      ; R28 := R23
292 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
293 [-]: GETUPVAL  R24 U3       ; R24 := U3
294 [-]: MOVE      R25 R1       ; R25 := R1
295 [-]: LOADK     R26 K36      ; R26 := ".BonusXP"
296 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
297 [-]: MOVE      R26 R11      ; R26 := R11
298 [-]: MOVE      R27 R20      ; R27 := R20
299 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
300 [-]: GETUPVAL  R24 U3       ; R24 := U3
301 [-]: MOVE      R25 R1       ; R25 := R1
302 [-]: LOADK     R26 K48      ; R26 := ".XP"
303 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
304 [-]: MOVE      R26 R11      ; R26 := R11
305 [-]: GETTABLE  R27 R2 K35   ; R27 := R2["FocusXp"]
306 [-]: MOVE      R28 R1       ; R28 := R1
307 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
308 [-]: SETTABLE  R5 K3 K45    ; R5["InterpingFocusGain"] := "0x0"
309 [-]: RETURN    R0 1         ; return 


; Function #70.1:
;
; Name:            
; Defined at line: 2919
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["FocusXp"]
 10 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 11 [-]: GETUPVAL  R2 U3        ; R2 := U3
 12 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 13 [-]: GETGLOBAL R3 K1        ; R3 := math
 14 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xF7005A7B"]
 15 [-]: GETUPVAL  R4 U4        ; R4 := U4
 16 [-]: DIV       R4 R2 R4     ; R4 := R2 / R4
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETUPVAL  R4 U5        ; R4 := U5
 19 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 36
 20 [-]: JMP       36           ; PC := 36
 21 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 22 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x880196A7"]
 23 [-]: GETUPVAL  R6 U6        ; R6 := U6
 24 [-]: LOADK     R7 K5        ; R7 := "StartXP"
 25 [-]: LOADK     R8 K6        ; R8 := "_visible"
 26 [-]: MOVE      R9 R0        ; R9 := R0
 27 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 28 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 29 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x880196A7"]
 30 [-]: GETUPVAL  R6 U6        ; R6 := U6
 31 [-]: LOADK     R7 K7        ; R7 := "XPGain"
 32 [-]: LOADK     R8 K6        ; R8 := "_visible"
 33 [-]: MOVE      R9 R0        ; R9 := R0
 34 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 35 [-]: MOVE      R3 R5        ; R3 := R5
 36 [-]: GETGLOBAL R4 K1        ; R4 := math
 37 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0x32396E6F"]
 38 [-]: MOVE      R5 R2        ; R5 := R2
 39 [-]: GETUPVAL  R6 U4        ; R6 := U4
 40 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 41 [-]: GETUPVAL  R5 U4        ; R5 := U4
 42 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 43 [-]: GETUPVAL  R5 U7        ; R5 := U7
 44 [-]: MUL       R5 R4 R5     ; R5 := R4 * R5
 45 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 46 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x880196A7"]
 47 [-]: GETUPVAL  R8 U6        ; R8 := U6
 48 [-]: LOADK     R9 K9        ; R9 := "XPBonus"
 49 [-]: LOADK     R10 K10      ; R10 := "_width"
 50 [-]: MOVE      R11 R5       ; R11 := R5
 51 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 52 [-]: GETUPVAL  R6 U8        ; R6 := U8
 53 [-]: GETUPVAL  R7 U6        ; R7 := U6
 54 [-]: LOADK     R8 K11       ; R8 := ".BonusXP"
 55 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 56 [-]: GETUPVAL  R8 U9        ; R8 := U9
 57 [-]: MOVE      R9 R2        ; R9 := R2
 58 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 59 [-]: GETUPVAL  R6 U8        ; R6 := U8
 60 [-]: GETUPVAL  R7 U6        ; R7 := U6
 61 [-]: LOADK     R8 K12       ; R8 := ".XP"
 62 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 63 [-]: GETUPVAL  R8 U9        ; R8 := U9
 64 [-]: MOVE      R9 R1        ; R9 := R1
 65 [-]: MOVE      R10 R1       ; R10 := R1
 66 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 67 [-]: GETGLOBAL R6 K13       ; R6 := 0x400E7765
 68 [-]: GETGLOBAL R7 K14       ; R7 := barFX
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: TEST      R6 1         ; if R6 then PC := 102
 71 [-]: JMP       102          ; PC := 102
 72 [-]: GETGLOBAL R6 K1        ; R6 := math
 73 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0x865961F7"]
 74 [-]: CALL      R6 1 2       ; R6 := R6()
 75 [-]: LT        0 R6 K16     ; if R6 >= 0.20000000298023 then PC := 102
 76 [-]: JMP       102          ; PC := 102
 77 [-]: GETUPVAL  R6 U10       ; R6 := U10
 78 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["0x69B983D"]
 79 [-]: GETGLOBAL R7 K3        ; R7 := mMovie
 80 [-]: GETUPVAL  R8 U6        ; R8 := U6
 81 [-]: LOADK     R9 K18       ; R9 := ".XPBonus"
 82 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 83 [-]: CALL      R6 3 3       ; R6,R7 := R6(R7,R8)
 84 [-]: EQ        0 R6 K19     ; if R6 ~= nil then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: LOADK     R6 K20       ; R6 := 0
 87 [-]: EQ        0 R7 K19     ; if R7 ~= nil then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: LOADK     R7 K20       ; R7 := 0
 90 [-]: GETUPVAL  R8 U11       ; R8 := U11
 91 [-]: GETUPVAL  R9 U12       ; R9 := U12
 92 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["ITEMS"]
 93 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 102
 94 [-]: JMP       102          ; PC := 102
 95 [-]: GETUPVAL  R8 U10       ; R8 := U10
 96 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["0xBB2F7661"]
 97 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
 98 [-]: GETGLOBAL R10 K14      ; R10 := barFX
 99 [-]: ADD       R11 R6 R5    ; R11 := R6 + R5
100 [-]: ADD       R12 R7 K23   ; R12 := R7 + 4
101 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
102 [-]: RETURN    R0 1         ; return 


; Function #70.2:
;
; Name:            
; Defined at line: 2969
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := -1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x84DCC428"]
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: GETGLOBAL R2 K3        ; R2 := xpCountDoneSound
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["UI_MODE_IN_GAME"]
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x25992394"]
 18 [-]: GETGLOBAL R2 K3        ; R2 := xpCountDoneSound
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: GETUPVAL  R1 U3        ; R1 := U3
 21 [-]: SETTABLE  R1 K6 K7     ; R1["InterpingFocusGain"] := "0x0"
 22 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 3004
; #Upvalues:       15
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0xF595ADDE
  2 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
  3 [-]: SELF      R8 R8 K2     ; R9 := R8; R8 := R8["0x6B7B470B"]
  4 [-]: MOVE      R10 R3       ; R10 := R3
  5 [-]: LOADK     R11 K3       ; R11 := ".XPBg"
  6 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
  7 [-]: LOADK     R11 K4       ; R11 := "_width"
  8 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
  9 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 10 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 11 [-]: MOVE      R9 R7        ; R9 := R7
 12 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 13 [-]: TEST      R8 0         ; if not R8 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: LOADK     R8 K6        ; R8 := 1341112
 17 [-]: LOADK     R9 K7        ; R9 := 1676518
 18 [-]: LOADK     R10 K8       ; R10 := 16626220
 19 [-]: GETTABLE  R11 R4 K9    ; R11 := R4["StartXp"]
 20 [-]: GETTABLE  R12 R4 K10   ; R12 := R4["XpGain"]
 21 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
 22 [-]: GETTABLE  R12 R4 K11   ; R12 := R4["XpBonus"]
 23 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
 24 [-]: GETTABLE  R12 R4 K12   ; R12 := R4["ItemType"]
 25 [-]: GETGLOBAL R13 K5       ; R13 := 0x400E7765
 26 [-]: MOVE      R14 R12      ; R14 := R12
 27 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 28 [-]: TEST      R13 0        ; if not R13 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETGLOBAL R13 K13      ; R13 := 0x2C00D429
 31 [-]: GETTABLE  R14 R4 K14   ; R14 := R4["Item"]
 32 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 33 [-]: MOVE      R12 R13      ; R12 := R13
 34 [-]: TEST      R5 0         ; if not R5 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETTABLE  R13 R4 K14   ; R13 := R4["Item"]
 37 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13["0x3077BE70"]
 38 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 39 [-]: MOVE      R12 R13      ; R12 := R13
 40 [-]: GETTABLE  R13 R4 K16   ; R13 := R4["IconOverride"]
 41 [-]: GETGLOBAL R14 K5       ; R14 := 0x400E7765
 42 [-]: MOVE      R15 R13      ; R15 := R13
 43 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 44 [-]: TEST      R14 0        ; if not R14 then PC := 55
 45 [-]: JMP       55           ; PC := 55
 46 [-]: GETGLOBAL R14 K5       ; R14 := 0x400E7765
 47 [-]: GETTABLE  R15 R4 K14   ; R15 := R4["Item"]
 48 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 49 [-]: TEST      R14 1        ; if R14 then PC := 55
 50 [-]: JMP       55           ; PC := 55
 51 [-]: GETTABLE  R14 R4 K14   ; R14 := R4["Item"]
 52 [-]: SELF      R14 R14 K17  ; R15 := R14; R14 := R14["0xF1A9732E"]
 53 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 54 [-]: MOVE      R13 R14      ; R13 := R14
 55 [-]: GETGLOBAL R14 K5       ; R14 := 0x400E7765
 56 [-]: MOVE      R15 R13      ; R15 := R13
 57 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 58 [-]: TEST      R14 1        ; if R14 then PC := 84
 59 [-]: JMP       84           ; PC := 84
 60 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
 61 [-]: SELF      R14 R14 K18  ; R15 := R14; R14 := R14["0x880196A7"]
 62 [-]: MOVE      R16 R3       ; R16 := R3
 63 [-]: LOADK     R17 K19      ; R17 := "Icon"
 64 [-]: LOADK     R18 K20      ; R18 := "_z"
 65 [-]: LOADK     R19 K21      ; R19 := -300
 66 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
 67 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
 68 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x4443A5E7"]
 69 [-]: MOVE      R16 R3       ; R16 := R3
 70 [-]: LOADK     R17 K23      ; R17 := ".Icon"
 71 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
 72 [-]: MOVE      R17 R13      ; R17 := R13
 73 [-]: GETGLOBAL R18 K24      ; R18 := _G
 74 [-]: GETTABLE  R18 R18 K25  ; R18 := R18["UIMaterial_SmoothEdgeNoDepthTest"]
 75 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 76 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
 77 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x4443A5E7"]
 78 [-]: MOVE      R16 R3       ; R16 := R3
 79 [-]: LOADK     R17 K26      ; R17 := ".Shadow"
 80 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
 81 [-]: MOVE      R17 R13      ; R17 := R13
 82 [-]: GETGLOBAL R18 K27      ; R18 := affinityItemShadowMaterial
 83 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 84 [-]: GETTABLE  R14 R4 K28   ; R14 := R4["LocTag"]
 85 [-]: TEST      R14 1        ; if R14 then PC := 98
 86 [-]: JMP       98           ; PC := 98
 87 [-]: GETGLOBAL R15 K5       ; R15 := 0x400E7765
 88 [-]: GETTABLE  R16 R4 K14   ; R16 := R4["Item"]
 89 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 90 [-]: TEST      R15 1        ; if R15 then PC := 98
 91 [-]: JMP       98           ; PC := 98
 92 [-]: GETGLOBAL R15 K29      ; R15 := 0x9FAED6BC
 93 [-]: GETTABLE  R16 R4 K14   ; R16 := R4["Item"]
 94 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16["0x616C74B6"]
 95 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
 96 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 97 [-]: MOVE      R14 R15      ; R14 := R15
 98 [-]: GETGLOBAL R15 K31      ; R15 := Lotus_Game
 99 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["0x94792F09"]
100 [-]: MOVE      R16 R14      ; R16 := R14
101 [-]: CALL      R15 2 2      ; R15 := R15(R16)
102 [-]: EQ        0 R15 K33    ; if R15 ~= "" then PC := 110
103 [-]: JMP       110          ; PC := 110
104 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
105 [-]: SELF      R16 R16 K34  ; R17 := R16; R16 := R16["0x5DB0BD4"]
106 [-]: MOVE      R18 R14      ; R18 := R14
107 [-]: MOVE      R19 R1       ; R19 := R1
108 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
109 [-]: MOVE      R15 R16      ; R15 := R16
110 [-]: GETGLOBAL R16 K31      ; R16 := Lotus_Game
111 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["LOT_SENTINEL"]
112 [-]: EQ        0 R0 R16     ; if R0 ~= R16 then PC := 134
113 [-]: JMP       134          ; PC := 134
114 [-]: GETGLOBAL R16 K31      ; R16 := Lotus_Game
115 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["SUIT_SLOT"]
116 [-]: EQ        0 R1 R16     ; if R1 ~= R16 then PC := 134
117 [-]: JMP       134          ; PC := 134
118 [-]: GETUPVAL  R16 U0       ; R16 := U0
119 [-]: EQ        1 R16 K33    ; if R16 == "" then PC := 134
120 [-]: JMP       134          ; PC := 134
121 [-]: GETUPVAL  R15 U0       ; R15 := U0
122 [-]: GETGLOBAL R16 K37      ; R16 := Engine
123 [-]: GETTABLE  R16 R16 K38  ; R16 := R16["0xE35E176B"]
124 [-]: CALL      R16 1 2      ; R16 := R16()
125 [-]: TEST      R16 0        ; if not R16 then PC := 134
126 [-]: JMP       134          ; PC := 134
127 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
128 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16["0x880196A7"]
129 [-]: MOVE      R18 R3       ; R18 := R3
130 [-]: LOADK     R19 K39      ; R19 := "Name"
131 [-]: LOADK     R20 K40      ; R20 := "fontName"
132 [-]: LOADK     R21 K41      ; R21 := "Arial Unicode MS"
133 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
134 [-]: GETGLOBAL R16 K31      ; R16 := Lotus_Game
135 [-]: GETTABLE  R16 R16 K42  ; R16 := R16["LOT_KDRIVE"]
136 [-]: EQ        0 R0 R16     ; if R0 ~= R16 then PC := 146
137 [-]: JMP       146          ; PC := 146
138 [-]: GETGLOBAL R16 K31      ; R16 := Lotus_Game
139 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["SUIT_SLOT"]
140 [-]: EQ        0 R1 R16     ; if R1 ~= R16 then PC := 146
141 [-]: JMP       146          ; PC := 146
142 [-]: GETUPVAL  R16 U1       ; R16 := U1
143 [-]: EQ        1 R16 K33    ; if R16 == "" then PC := 146
144 [-]: JMP       146          ; PC := 146
145 [-]: GETUPVAL  R15 U1       ; R15 := U1
146 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
147 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16["0x880196A7"]
148 [-]: MOVE      R18 R3       ; R18 := R3
149 [-]: LOADK     R19 K39      ; R19 := "Name"
150 [-]: LOADK     R20 K43      ; R20 := "verticalAlignment"
151 [-]: LOADK     R21 K44      ; R21 := "bottom"
152 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
153 [-]: GETUPVAL  R16 U2       ; R16 := U2
154 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["0xBA254C2A"]
155 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
156 [-]: MOVE      R18 R3       ; R18 := R3
157 [-]: LOADK     R19 K46      ; R19 := ".Name"
158 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
159 [-]: LOADK     R19 K47      ; R19 := 2
160 [-]: GETGLOBAL R20 K48      ; R20 := string
161 [-]: GETTABLE  R20 R20 K49  ; R20 := R20["0x639C642A"]
162 [-]: MOVE      R21 R15      ; R21 := R15
163 [-]: CALL      R20 2 2      ; R20 := R20(R21)
164 [-]: LOADK     R21 K50      ; R21 := "..."
165 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
166 [-]: GETGLOBAL R16 K51      ; R16 := gPlayerProfileMgr
167 [-]: SELF      R16 R16 K52  ; R17 := R16; R16 := R16["0x21EF7B1A"]
168 [-]: LOADK     R18 K53      ; R18 := 0
169 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
170 [-]: SELF      R17 R16 K54  ; R18 := R16; R17 := R16["0x654F1092"]
171 [-]: CALL      R17 2 2      ; R17 := R17(R18)
172 [-]: SELF      R18 R17 K55  ; R19 := R17; R18 := R17["0x30BDE7F"]
173 [-]: CALL      R18 2 2      ; R18 := R18(R19)
174 [-]: SELF      R19 R18 K56  ; R20 := R18; R19 := R18["0x6200B095"]
175 [-]: MOVE      R21 R0       ; R21 := R0
176 [-]: MOVE      R22 R1       ; R22 := R1
177 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
178 [-]: LOADNIL   R20 R20      ; R20 := nil
179 [-]: TEST      R5 0         ; if not R5 then PC := 189
180 [-]: JMP       189          ; PC := 189
181 [-]: GETGLOBAL R21 K5       ; R21 := 0x400E7765
182 [-]: GETTABLE  R22 R4 K57   ; R22 := R4["Expiry"]
183 [-]: CALL      R21 2 2      ; R21 := R21(R22)
184 [-]: TEST      R21 1        ; if R21 then PC := 212
185 [-]: JMP       212          ; PC := 212
186 [-]: GETTABLE  R21 R4 K57   ; R21 := R4["Expiry"]
187 [-]: GETTABLE  R20 R21 K58  ; R20 := R21["sec"]
188 [-]: JMP       212          ; PC := 212
189 [-]: EQ        1 R19 K59    ; if R19 == nil then PC := 212
190 [-]: JMP       212          ; PC := 212
191 [-]: SELF      R21 R16 K54  ; R22 := R16; R21 := R16["0x654F1092"]
192 [-]: CALL      R21 2 2      ; R21 := R21(R22)
193 [-]: SELF      R21 R21 K60  ; R22 := R21; R21 := R21["0x6F2E05FD"]
194 [-]: CALL      R21 2 2      ; R21 := R21(R22)
195 [-]: SELF      R21 R21 K61  ; R22 := R21; R21 := R21["0xD2EADDBF"]
196 [-]: GETTABLE  R23 R19 K62  ; R23 := R19["mItemId"]
197 [-]: GETTABLE  R23 R23 K63  ; R23 := R23["mId"]
198 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
199 [-]: EQ        1 R21 K59    ; if R21 == nil then PC := 212
200 [-]: JMP       212          ; PC := 212
201 [-]: GETTABLE  R22 R21 K64  ; R22 := R21["mItemType"]
202 [-]: EQ        1 R22 R12    ; if R22 == R12 then PC := 206
203 [-]: JMP       206          ; PC := 206
204 [-]: LOADK     R20 K53      ; R20 := 0
205 [-]: JMP       212          ; PC := 212
206 [-]: SELF      R23 R21 K65  ; R24 := R21; R23 := R21["0x228EBE57"]
207 [-]: CALL      R23 2 2      ; R23 := R23(R24)
208 [-]: TEST      R23 0        ; if not R23 then PC := 212
209 [-]: JMP       212          ; PC := 212
210 [-]: GETTABLE  R23 R21 K66  ; R23 := R21["mExpiry"]
211 [-]: GETTABLE  R20 R23 K58  ; R20 := R23["sec"]
212 [-]: GETGLOBAL R23 K67      ; R23 := gGameConfig
213 [-]: SELF      R23 R23 K68  ; R24 := R23; R23 := R23["0x3070974D"]
214 [-]: MOVE      R25 R12      ; R25 := R12
215 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
216 [-]: GETGLOBAL R24 K67      ; R24 := gGameConfig
217 [-]: SELF      R24 R24 K69  ; R25 := R24; R24 := R24["0x6BA57B8E"]
218 [-]: MOVE      R26 R12      ; R26 := R12
219 [-]: GETTABLE  R27 R19 K70  ; R27 := R19["mPolarized"]
220 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
221 [-]: GETGLOBAL R25 K71      ; R25 := math
222 [-]: GETTABLE  R25 R25 K72  ; R25 := R25["0x65F9712A"]
223 [-]: MOVE      R26 R24      ; R26 := R24
224 [-]: GETUPVAL  R27 U3       ; R27 := U3
225 [-]: GETTABLE  R28 R4 K9    ; R28 := R4["StartXp"]
226 [-]: MOVE      R29 R12      ; R29 := R12
227 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
228 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
229 [-]: EQ        1 R25 R24    ; if R25 == R24 then PC := 238
230 [-]: JMP       238          ; PC := 238
231 [-]: GETTABLE  R26 R4 K73   ; R26 := R4["FocusXp"]
232 [-]: EQ        1 R26 K59    ; if R26 == nil then PC := 238
233 [-]: JMP       238          ; PC := 238
234 [-]: GETTABLE  R26 R4 K73   ; R26 := R4["FocusXp"]
235 [-]: EQ        1 R26 K53    ; if R26 == 0 then PC := 238
236 [-]: JMP       238          ; PC := 238
237 [-]: MOVE      R25 R24      ; R25 := R24
238 [-]: CLOSURE   R26 0        ; R26 := closure(Function #71.1)
239 [-]: MOVE      R0 R20       ; R0 := R20
240 [-]: GETUPVAL  R0 U4        ; R0 := U4
241 [-]: MOVE      R0 R23       ; R0 := R23
242 [-]: MOVE      R0 R3        ; R0 := R3
243 [-]: MOVE      R27 R26      ; R27 := R26
244 [-]: MOVE      R28 R25      ; R28 := R25
245 [-]: CALL      R27 2 1      ; R27(R28)
246 [-]: CLOSURE   R27 1        ; R27 := closure(Function #71.2)
247 [-]: MOVE      R0 R26       ; R0 := R26
248 [-]: MOVE      R0 R25       ; R0 := R25
249 [-]: MOVE      R0 R20       ; R0 := R20
250 [-]: GETUPVAL  R0 U5        ; R0 := U5
251 [-]: MOVE      R0 R27       ; R0 := R27
252 [-]: GETGLOBAL R28 K5       ; R28 := 0x400E7765
253 [-]: GETUPVAL  R29 U5       ; R29 := U5
254 [-]: CALL      R28 2 2      ; R28 := R28(R29)
255 [-]: TEST      R28 1        ; if R28 then PC := 261
256 [-]: JMP       261          ; PC := 261
257 [-]: TEST      R20 0        ; if not R20 then PC := 261
258 [-]: JMP       261          ; PC := 261
259 [-]: MOVE      R28 R27      ; R28 := R27
260 [-]: CALL      R28 1 1      ; R28()
261 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
262 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
263 [-]: MOVE      R30 R3       ; R30 := R3
264 [-]: LOADK     R31 K74      ; R31 := "XP"
265 [-]: LOADK     R32 K75      ; R32 := "text"
266 [-]: LOADK     R33 K33      ; R33 := ""
267 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
268 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
269 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
270 [-]: MOVE      R30 R3       ; R30 := R3
271 [-]: LOADK     R31 K74      ; R31 := "XP"
272 [-]: LOADK     R32 K76      ; R32 := "textColor"
273 [-]: MOVE      R33 R9       ; R33 := R9
274 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
275 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
276 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
277 [-]: MOVE      R30 R3       ; R30 := R3
278 [-]: LOADK     R31 K77      ; R31 := "BonusXP"
279 [-]: LOADK     R32 K78      ; R32 := "multiline"
280 [-]: GETGLOBAL R33 K5       ; R33 := 0x400E7765
281 [-]: GETTABLE  R34 R4 K79   ; R34 := R4["Lens"]
282 [-]: CALL      R33 2 2      ; R33 := R33(R34)
283 [-]: TEST      R33 0        ; if not R33 then PC := 289
284 [-]: JMP       289          ; PC := 289
285 [-]: EQ        0 R25 R24    ; if R25 ~= R24 then PC := 288
286 [-]: JMP       288          ; PC := 288
287 [-]: MOVE      R33 R0       ; R33 := R0
288 [-]: MOVE      R33 R1       ; R33 := R1
289 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
290 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
291 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
292 [-]: MOVE      R30 R3       ; R30 := R3
293 [-]: LOADK     R31 K77      ; R31 := "BonusXP"
294 [-]: LOADK     R32 K75      ; R32 := "text"
295 [-]: LOADK     R33 K33      ; R33 := ""
296 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
297 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
298 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
299 [-]: MOVE      R30 R3       ; R30 := R3
300 [-]: LOADK     R31 K77      ; R31 := "BonusXP"
301 [-]: LOADK     R32 K76      ; R32 := "textColor"
302 [-]: MOVE      R33 R10      ; R33 := R10
303 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
304 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
305 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
306 [-]: MOVE      R30 R3       ; R30 := R3
307 [-]: LOADK     R31 K80      ; R31 := "StartXP"
308 [-]: LOADK     R32 K81      ; R32 := "_color"
309 [-]: MOVE      R33 R8       ; R33 := R8
310 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
311 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
312 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
313 [-]: MOVE      R30 R3       ; R30 := R3
314 [-]: LOADK     R31 K82      ; R31 := "XPGain"
315 [-]: LOADK     R32 K81      ; R32 := "_color"
316 [-]: MOVE      R33 R9       ; R33 := R9
317 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
318 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
319 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
320 [-]: MOVE      R30 R3       ; R30 := R3
321 [-]: LOADK     R31 K82      ; R31 := "XPGain"
322 [-]: LOADK     R32 K4       ; R32 := "_width"
323 [-]: LOADK     R33 K83      ; R33 := 0.10000000149012
324 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
325 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
326 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
327 [-]: MOVE      R30 R3       ; R30 := R3
328 [-]: LOADK     R31 K82      ; R31 := "XPGain"
329 [-]: LOADK     R32 K84      ; R32 := "_visible"
330 [-]: MOVE      R33 R0       ; R33 := R0
331 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
332 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
333 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
334 [-]: MOVE      R30 R3       ; R30 := R3
335 [-]: LOADK     R31 K85      ; R31 := "XPBonus"
336 [-]: LOADK     R32 K81      ; R32 := "_color"
337 [-]: MOVE      R33 R10      ; R33 := R10
338 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
339 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
340 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
341 [-]: MOVE      R30 R3       ; R30 := R3
342 [-]: LOADK     R31 K85      ; R31 := "XPBonus"
343 [-]: LOADK     R32 K4       ; R32 := "_width"
344 [-]: LOADK     R33 K83      ; R33 := 0.10000000149012
345 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
346 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
347 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
348 [-]: MOVE      R30 R3       ; R30 := R3
349 [-]: LOADK     R31 K85      ; R31 := "XPBonus"
350 [-]: LOADK     R32 K84      ; R32 := "_visible"
351 [-]: MOVE      R33 R0       ; R33 := R0
352 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
353 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
354 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28["0x880196A7"]
355 [-]: MOVE      R30 R3       ; R30 := R3
356 [-]: LOADK     R31 K86      ; R31 := "XPBg"
357 [-]: LOADK     R32 K84      ; R32 := "_visible"
358 [-]: MOVE      R33 R1       ; R33 := R1
359 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
360 [-]: CLOSURE   R28 2        ; R28 := closure(Function #71.3)
361 [-]: GETUPVAL  R0 U2        ; R0 := U2
362 [-]: GETGLOBAL R29 K87      ; R29 := _T
363 [-]: GETTABLE  R29 R29 K88  ; R29 := R29["eomScreenMode"]
364 [-]: GETUPVAL  R30 U6       ; R30 := U6
365 [-]: GETTABLE  R30 R30 K89  ; R30 := R30["QUICK_PREVIEW"]
366 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 369
367 [-]: JMP       369          ; PC := 369
368 [-]: MOVE      R29 R0       ; R29 := R0
369 [-]: MOVE      R29 R1       ; R29 := R1
370 [-]: GETGLOBAL R30 K67      ; R30 := gGameConfig
371 [-]: SELF      R30 R30 K90  ; R31 := R30; R30 := R30["0xAE770DA7"]
372 [-]: GETTABLE  R32 R4 K9    ; R32 := R4["StartXp"]
373 [-]: MOVE      R33 R12      ; R33 := R12
374 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
375 [-]: GETGLOBAL R31 K67      ; R31 := gGameConfig
376 [-]: SELF      R31 R31 K91  ; R32 := R31; R31 := R31["0x33586603"]
377 [-]: GETTABLE  R33 R4 K9    ; R33 := R4["StartXp"]
378 [-]: MOVE      R34 R12      ; R34 := R12
379 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
380 [-]: GETTABLE  R32 R4 K9    ; R32 := R4["StartXp"]
381 [-]: SUB       R32 R32 R30  ; R32 := R32 - R30
382 [-]: SUB       R33 R31 R30  ; R33 := R31 - R30
383 [-]: DIV       R32 R32 R33  ; R32 := R32 / R33
384 [-]: EQ        1 R20 K59    ; if R20 == nil then PC := 395
385 [-]: JMP       395          ; PC := 395
386 [-]: GETGLOBAL R33 K1       ; R33 := mMovie
387 [-]: SELF      R33 R33 K18  ; R34 := R33; R33 := R33["0x880196A7"]
388 [-]: MOVE      R35 R3       ; R35 := R3
389 [-]: LOADK     R36 K80      ; R36 := "StartXP"
390 [-]: LOADK     R37 K4       ; R37 := "_width"
391 [-]: MOVE      R38 R7       ; R38 := R7
392 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
393 [-]: RETURN    R0 1         ; return 
394 [-]: JMP       425          ; PC := 425
395 [-]: EQ        0 R25 R24    ; if R25 ~= R24 then PC := 425
396 [-]: JMP       425          ; PC := 425
397 [-]: GETGLOBAL R33 K5       ; R33 := 0x400E7765
398 [-]: GETTABLE  R34 R4 K79   ; R34 := R4["Lens"]
399 [-]: CALL      R33 2 2      ; R33 := R33(R34)
400 [-]: TEST      R33 0        ; if not R33 then PC := 417
401 [-]: JMP       417          ; PC := 417
402 [-]: GETGLOBAL R33 K1       ; R33 := mMovie
403 [-]: SELF      R33 R33 K18  ; R34 := R33; R33 := R33["0x880196A7"]
404 [-]: MOVE      R35 R3       ; R35 := R3
405 [-]: LOADK     R36 K80      ; R36 := "StartXP"
406 [-]: LOADK     R37 K84      ; R37 := "_visible"
407 [-]: MOVE      R38 R0       ; R38 := R0
408 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
409 [-]: GETGLOBAL R33 K1       ; R33 := mMovie
410 [-]: SELF      R33 R33 K18  ; R34 := R33; R33 := R33["0x880196A7"]
411 [-]: MOVE      R35 R3       ; R35 := R3
412 [-]: LOADK     R36 K86      ; R36 := "XPBg"
413 [-]: LOADK     R37 K84      ; R37 := "_visible"
414 [-]: MOVE      R38 R0       ; R38 := R0
415 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
416 [-]: JMP       424          ; PC := 424
417 [-]: GETUPVAL  R33 U7       ; R33 := U7
418 [-]: MOVE      R34 R2       ; R34 := R2
419 [-]: MOVE      R35 R3       ; R35 := R3
420 [-]: MOVE      R36 R4       ; R36 := R4
421 [-]: MOVE      R37 R6       ; R37 := R6
422 [-]: MOVE      R38 R29      ; R38 := R29
423 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
424 [-]: RETURN    R0 1         ; return 
425 [-]: GETGLOBAL R33 K1       ; R33 := mMovie
426 [-]: SELF      R33 R33 K18  ; R34 := R33; R33 := R33["0x880196A7"]
427 [-]: MOVE      R35 R3       ; R35 := R3
428 [-]: LOADK     R36 K80      ; R36 := "StartXP"
429 [-]: LOADK     R37 K84      ; R37 := "_visible"
430 [-]: LT        1 K53 R32    ; if 0 < R32 then PC := 433
431 [-]: JMP       433          ; PC := 433
432 [-]: MOVE      R38 R0       ; R38 := R0
433 [-]: MOVE      R38 R1       ; R38 := R1
434 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
435 [-]: LT        0 K53 R32    ; if 0 >= R32 then PC := 444
436 [-]: JMP       444          ; PC := 444
437 [-]: GETGLOBAL R33 K1       ; R33 := mMovie
438 [-]: SELF      R33 R33 K18  ; R34 := R33; R33 := R33["0x880196A7"]
439 [-]: MOVE      R35 R3       ; R35 := R3
440 [-]: LOADK     R36 K80      ; R36 := "StartXP"
441 [-]: LOADK     R37 K4       ; R37 := "_width"
442 [-]: MUL       R38 R32 R7   ; R38 := R32 * R7
443 [-]: CALL      R33 6 1      ; R33(R34,R35,R36,R37,R38)
444 [-]: TEST      R29 0        ; if not R29 then PC := 535
445 [-]: JMP       535          ; PC := 535
446 [-]: LOADK     R33 K92      ; R33 := "/Lotus/Language/Menu/EndOfMatch_XP"
447 [-]: MOVE      R34 R3       ; R34 := R3
448 [-]: LOADK     R35 K93      ; R35 := ".XPGain"
449 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
450 [-]: MOVE      R35 R3       ; R35 := R3
451 [-]: LOADK     R36 K94      ; R36 := ".XP"
452 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
453 [-]: GETTABLE  R36 R4 K10   ; R36 := R4["XpGain"]
454 [-]: GETTABLE  R37 R4 K9    ; R37 := R4["StartXp"]
455 [-]: LOADK     R38 K33      ; R38 := ""
456 [-]: MOVE      R39 R1       ; R39 := R1
457 [-]: CLOSURE   R40 3        ; R40 := closure(Function #71.4)
458 [-]: MOVE      R0 R39       ; R0 := R39
459 [-]: GETUPVAL  R0 U8        ; R0 := U8
460 [-]: MOVE      R0 R36       ; R0 := R36
461 [-]: MOVE      R0 R37       ; R0 := R37
462 [-]: MOVE      R0 R30       ; R0 := R30
463 [-]: MOVE      R0 R31       ; R0 := R31
464 [-]: MOVE      R0 R3        ; R0 := R3
465 [-]: MOVE      R0 R38       ; R0 := R38
466 [-]: MOVE      R0 R25       ; R0 := R25
467 [-]: MOVE      R0 R24       ; R0 := R24
468 [-]: GETUPVAL  R0 U3        ; R0 := U3
469 [-]: MOVE      R0 R12       ; R0 := R12
470 [-]: MOVE      R0 R7        ; R0 := R7
471 [-]: MOVE      R0 R34       ; R0 := R34
472 [-]: MOVE      R0 R28       ; R0 := R28
473 [-]: MOVE      R0 R35       ; R0 := R35
474 [-]: MOVE      R0 R33       ; R0 := R33
475 [-]: MOVE      R0 R26       ; R0 := R26
476 [-]: GETUPVAL  R0 U4        ; R0 := U4
477 [-]: GETUPVAL  R0 U9        ; R0 := U9
478 [-]: GETUPVAL  R0 U10       ; R0 := U10
479 [-]: CLOSURE   R41 4        ; R41 := closure(Function #71.5)
480 [-]: GETUPVAL  R0 U11       ; R0 := U11
481 [-]: GETUPVAL  R0 U4        ; R0 := U4
482 [-]: GETUPVAL  R0 U2        ; R0 := U2
483 [-]: CLOSURE   R42 5        ; R42 := closure(Function #71.6)
484 [-]: MOVE      R0 R34       ; R0 := R34
485 [-]: MOVE      R0 R3        ; R0 := R3
486 [-]: MOVE      R0 R35       ; R0 := R35
487 [-]: MOVE      R0 R33       ; R0 := R33
488 [-]: MOVE      R0 R36       ; R0 := R36
489 [-]: MOVE      R0 R4        ; R0 := R4
490 [-]: MOVE      R0 R37       ; R0 := R37
491 [-]: MOVE      R0 R38       ; R0 := R38
492 [-]: MOVE      R0 R25       ; R0 := R25
493 [-]: MOVE      R0 R24       ; R0 := R24
494 [-]: GETUPVAL  R0 U12       ; R0 := U12
495 [-]: GETUPVAL  R0 U13       ; R0 := U13
496 [-]: GETUPVAL  R0 U14       ; R0 := U14
497 [-]: MOVE      R0 R40       ; R0 := R40
498 [-]: MOVE      R0 R41       ; R0 := R41
499 [-]: EQ        1 R25 R24    ; if R25 == R24 then PC := 533
500 [-]: JMP       533          ; PC := 533
501 [-]: GETUPVAL  R43 U11      ; R43 := U11
502 [-]: LOADK     R44 K95      ; R44 := 1
503 [-]: MOVE      R45 R1       ; R45 := R1
504 [-]: CALL      R43 3 1      ; R43(R44,R45)
505 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
506 [-]: SELF      R43 R43 K18  ; R44 := R43; R43 := R43["0x880196A7"]
507 [-]: MOVE      R45 R3       ; R45 := R3
508 [-]: LOADK     R46 K82      ; R46 := "XPGain"
509 [-]: LOADK     R47 K84      ; R47 := "_visible"
510 [-]: MOVE      R48 R1       ; R48 := R1
511 [-]: CALL      R43 6 1      ; R43(R44,R45,R46,R47,R48)
512 [-]: GETGLOBAL R43 K96      ; R43 := 0x6374FD98
513 [-]: GETUPVAL  R44 U12      ; R44 := U12
514 [-]: DIV       R44 R36 R44  ; R44 := R36 / R44
515 [-]: GETUPVAL  R45 U13      ; R45 := U13
516 [-]: GETUPVAL  R46 U14      ; R46 := U14
517 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
518 [-]: GETGLOBAL R44 K97      ; R44 := 0x52E17A90
519 [-]: GETGLOBAL R45 K1       ; R45 := mMovie
520 [-]: MOVE      R46 R3       ; R46 := R3
521 [-]: GETGLOBAL R47 K98      ; R47 := UISys
522 [-]: GETTABLE  R47 R47 K99  ; R47 := R47["FlashInstance_LINEAR"]
523 [-]: NEWTABLE  R48 1 0      ; R48 := {}
524 [-]: MOVE      R49 R40      ; R49 := R40
525 [-]: SETLIST   R48 1 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 1
526 [-]: NEWTABLE  R49 1 0      ; R49 := {}
527 [-]: LOADK     R50 K95      ; R50 := 1
528 [-]: SETLIST   R49 1 1      ; R49[(1-1)*FPF+i] := R(49+i), 1 <= i <= 1
529 [-]: MOVE      R50 R43      ; R50 := R43
530 [-]: LOADK     R51 K47      ; R51 := 2
531 [-]: MOVE      R52 R42      ; R52 := R42
532 [-]: CALL      R44 9 1      ; R44(R45,R46,R47,R48,R49,R50,R51,R52)
533 [-]: CLOSE     R33          ; SAVE R33,...
534 [-]: JMP       649          ; PC := 649
535 [-]: MOVE      R33 R0       ; R33 := R0
536 [-]: GETTABLE  R34 R4 K9    ; R34 := R4["StartXp"]
537 [-]: GETTABLE  R35 R4 K10   ; R35 := R4["XpGain"]
538 [-]: ADD       R34 R34 R35  ; R34 := R34 + R35
539 [-]: GETTABLE  R35 R4 K11   ; R35 := R4["XpBonus"]
540 [-]: ADD       R34 R34 R35  ; R34 := R34 + R35
541 [-]: SUB       R35 R34 R30  ; R35 := R34 - R30
542 [-]: SUB       R36 R31 R30  ; R36 := R31 - R30
543 [-]: DIV       R35 R35 R36  ; R35 := R35 / R36
544 [-]: LE        0 K95 R35    ; if 1 > R35 then PC := 583
545 [-]: JMP       583          ; PC := 583
546 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
547 [-]: SELF      R36 R36 K18  ; R37 := R36; R36 := R36["0x880196A7"]
548 [-]: MOVE      R38 R3       ; R38 := R3
549 [-]: LOADK     R39 K80      ; R39 := "StartXP"
550 [-]: LOADK     R40 K84      ; R40 := "_visible"
551 [-]: MOVE      R41 R0       ; R41 := R0
552 [-]: CALL      R36 6 1      ; R36(R37,R38,R39,R40,R41)
553 [-]: GETGLOBAL R36 K71      ; R36 := math
554 [-]: GETTABLE  R36 R36 K72  ; R36 := R36["0x65F9712A"]
555 [-]: MOVE      R37 R24      ; R37 := R24
556 [-]: GETUPVAL  R38 U3       ; R38 := U3
557 [-]: MOVE      R39 R34      ; R39 := R34
558 [-]: MOVE      R40 R12      ; R40 := R12
559 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
560 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
561 [-]: MOVE      R25 R36      ; R25 := R36
562 [-]: GETGLOBAL R36 K67      ; R36 := gGameConfig
563 [-]: SELF      R36 R36 K90  ; R37 := R36; R36 := R36["0xAE770DA7"]
564 [-]: MOVE      R38 R11      ; R38 := R11
565 [-]: MOVE      R39 R12      ; R39 := R12
566 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
567 [-]: MOVE      R30 R36      ; R30 := R36
568 [-]: GETGLOBAL R36 K67      ; R36 := gGameConfig
569 [-]: SELF      R36 R36 K91  ; R37 := R36; R36 := R36["0x33586603"]
570 [-]: MOVE      R38 R11      ; R38 := R11
571 [-]: MOVE      R39 R12      ; R39 := R12
572 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
573 [-]: MOVE      R31 R36      ; R31 := R36
574 [-]: GETTABLE  R36 R4 K9    ; R36 := R4["StartXp"]
575 [-]: GETTABLE  R37 R4 K10   ; R37 := R4["XpGain"]
576 [-]: ADD       R36 R36 R37  ; R36 := R36 + R37
577 [-]: LE        0 R36 R30    ; if R36 > R30 then PC := 580
578 [-]: JMP       580          ; PC := 580
579 [-]: MOVE      R33 R1       ; R33 := R1
580 [-]: MOVE      R36 R26      ; R36 := R26
581 [-]: MOVE      R37 R25      ; R37 := R25
582 [-]: CALL      R36 2 1      ; R36(R37)
583 [-]: MOVE      R36 R3       ; R36 := R3
584 [-]: LOADK     R37 K93      ; R37 := ".XPGain"
585 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
586 [-]: MOVE      R37 R3       ; R37 := R3
587 [-]: LOADK     R38 K94      ; R38 := ".XP"
588 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
589 [-]: LOADK     R38 K92      ; R38 := "/Lotus/Language/Menu/EndOfMatch_XP"
590 [-]: GETTABLE  R39 R4 K9    ; R39 := R4["StartXp"]
591 [-]: GETTABLE  R40 R4 K10   ; R40 := R4["XpGain"]
592 [-]: ADD       R39 R39 R40  ; R39 := R39 + R40
593 [-]: MOVE      R40 R28      ; R40 := R28
594 [-]: MOVE      R41 R37      ; R41 := R37
595 [-]: MOVE      R42 R38      ; R42 := R38
596 [-]: GETTABLE  R43 R4 K10   ; R43 := R4["XpGain"]
597 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
598 [-]: TEST      R33 1        ; if R33 then PC := 619
599 [-]: JMP       619          ; PC := 619
600 [-]: SUB       R40 R39 R30  ; R40 := R39 - R30
601 [-]: SUB       R41 R31 R30  ; R41 := R31 - R30
602 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
603 [-]: MUL       R41 R40 R7   ; R41 := R40 * R7
604 [-]: LE        0 R24 R25    ; if R24 > R25 then PC := 607
605 [-]: JMP       607          ; PC := 607
606 [-]: MOVE      R41 R7       ; R41 := R7
607 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
608 [-]: SELF      R42 R42 K100 ; R43 := R42; R42 := R42["0x1C19D966"]
609 [-]: MOVE      R44 R36      ; R44 := R36
610 [-]: LOADK     R45 K84      ; R45 := "_visible"
611 [-]: MOVE      R46 R1       ; R46 := R1
612 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
613 [-]: GETGLOBAL R42 K1       ; R42 := mMovie
614 [-]: SELF      R42 R42 K100 ; R43 := R42; R42 := R42["0x1C19D966"]
615 [-]: MOVE      R44 R36      ; R44 := R36
616 [-]: LOADK     R45 K4       ; R45 := "_width"
617 [-]: MOVE      R46 R41      ; R46 := R41
618 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
619 [-]: MOVE      R42 R3       ; R42 := R3
620 [-]: LOADK     R43 K101     ; R43 := ".XPBonus"
621 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
622 [-]: MOVE      R43 R3       ; R43 := R3
623 [-]: LOADK     R44 K102     ; R44 := ".BonusXP"
624 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
625 [-]: LOADK     R44 K103     ; R44 := "/Lotus/Language/Menu/EndOfMatch_Bonus"
626 [-]: GETTABLE  R45 R4 K11   ; R45 := R4["XpBonus"]
627 [-]: ADD       R45 R39 R45  ; R45 := R39 + R45
628 [-]: SUB       R46 R45 R30  ; R46 := R45 - R30
629 [-]: SUB       R47 R31 R30  ; R47 := R31 - R30
630 [-]: DIV       R46 R46 R47  ; R46 := R46 / R47
631 [-]: MUL       R47 R46 R7   ; R47 := R46 * R7
632 [-]: MOVE      R48 R28      ; R48 := R28
633 [-]: MOVE      R49 R43      ; R49 := R43
634 [-]: MOVE      R50 R44      ; R50 := R44
635 [-]: GETTABLE  R51 R4 K11   ; R51 := R4["XpBonus"]
636 [-]: CALL      R48 4 1      ; R48(R49,R50,R51)
637 [-]: GETGLOBAL R48 K1       ; R48 := mMovie
638 [-]: SELF      R48 R48 K100 ; R49 := R48; R48 := R48["0x1C19D966"]
639 [-]: MOVE      R50 R42      ; R50 := R42
640 [-]: LOADK     R51 K84      ; R51 := "_visible"
641 [-]: MOVE      R52 R1       ; R52 := R1
642 [-]: CALL      R48 5 1      ; R48(R49,R50,R51,R52)
643 [-]: GETGLOBAL R48 K1       ; R48 := mMovie
644 [-]: SELF      R48 R48 K100 ; R49 := R48; R48 := R48["0x1C19D966"]
645 [-]: MOVE      R50 R42      ; R50 := R42
646 [-]: LOADK     R51 K4       ; R51 := "_width"
647 [-]: MOVE      R52 R47      ; R52 := R47
648 [-]: CALL      R48 5 1      ; R48(R49,R50,R51,R52)
649 [-]: RETURN    R0 1         ; return 


; Function #71.1:
;
; Name:            
; Defined at line: 3093
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 32
  3 [-]: JMP       32           ; PC := 32
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xD09D7910"]
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: LOADNIL   R3 R3        ; R3 := nil
  9 [-]: LE        0 R2 K3      ; if R2 > 0 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 12 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 13 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/Expired"
 14 [-]: MOVE      R7 R0        ; R7 := R0
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: MOVE      R3 R4        ; R3 := R4
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0xE233A311"]
 20 [-]: MOVE      R5 R2        ; R5 := R2
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 24 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 25 [-]: LOADK     R6 K8        ; R6 := "<TIMER>"
 26 [-]: MOVE      R7 R1        ; R7 := R1
 27 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 28 [-]: MOVE      R5 R4        ; R5 := R4
 29 [-]: MOVE      R6 R3        ; R6 := R3
 30 [-]: CONCAT    R1 R5 R6     ; R1 := R5 .. R6
 31 [-]: JMP       59           ; PC := 59
 32 [-]: EQ        0 R0 K3      ; if R0 ~= 0 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 35 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 36 [-]: LOADK     R7 K9        ; R7 := "/Lotus/Language/Ranks/Rank0"
 37 [-]: MOVE      R8 R0        ; R8 := R0
 38 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 39 [-]: MOVE      R1 R5        ; R1 := R5
 40 [-]: JMP       59           ; PC := 59
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 45 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 46 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Ranks/MaxRank"
 47 [-]: MOVE      R8 R0        ; R8 := R0
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R1 R5        ; R1 := R5
 50 [-]: JMP       59           ; PC := 59
 51 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 52 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 53 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Language/Menu/Arsenal_Rank"
 54 [-]: MOVE      R8 R0        ; R8 := R0
 55 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 56 [-]: LOADK     R6 K12       ; R6 := " "
 57 [-]: MOVE      R7 R0        ; R7 := R0
 58 [-]: CONCAT    R1 R5 R7     ; R1 := R5 .. R6 .. R7
 59 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 60 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x880196A7"]
 61 [-]: GETUPVAL  R7 U3        ; R7 := U3
 62 [-]: LOADK     R8 K14       ; R8 := "Rank"
 63 [-]: LOADK     R9 K15       ; R9 := "text"
 64 [-]: MOVE      R10 R1       ; R10 := R1
 65 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 66 [-]: RETURN    R0 1         ; return 


; Function #71.2:
;
; Name:            
; Defined at line: 3117
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U2        ; R0 := U2
  5 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R0 K1        ; R0 := Engine
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xD09D7910"]
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LE        0 R0 K3      ; if R0 > 0 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x61494587"]
 16 [-]: LOADK     R3 K5        ; R3 := 1
 17 [-]: GETUPVAL  R4 U4        ; R4 := U4
 18 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 19 [-]: RETURN    R0 1         ; return 


; Function #71.3:
;
; Name:            
; Defined at line: 3148
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R3 K0        ; R3 := ""
  2 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETGLOBAL R4 K2        ; R4 := 0xF595ADDE
  5 [-]: MOVE      R5 R2        ; R5 := R2
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: LT        0 K3 R4      ; if 0 >= R4 then PC := 23
  8 [-]: JMP       23           ; PC := 23
  9 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 10 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: MOVE      R7 R0        ; R7 := R0
 13 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 14 [-]: GETUPVAL  R9 U0        ; R9 := U0
 15 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0x7E197415"]
 16 [-]: GETGLOBAL R10 K2       ; R10 := 0xF595ADDE
 17 [-]: MOVE      R11 R2       ; R11 := R2
 18 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 19 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 20 [-]: SETTABLE  R8 K6 R9     ; R8["XP"] := R9
 21 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 24 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x1C19D966"]
 25 [-]: MOVE      R6 R0        ; R6 := R0
 26 [-]: LOADK     R7 K9        ; R7 := "text"
 27 [-]: MOVE      R8 R3        ; R8 := R3
 28 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 29 [-]: RETURN    R0 1         ; return 


; Function #71.4:
;
; Name:            
; Defined at line: 3196
; #Upvalues:       21
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 10 [-]: GETUPVAL  R2 U3        ; R2 := U3
 11 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 12 [-]: GETUPVAL  R3 U4        ; R3 := U4
 13 [-]: SUB       R3 R2 R3     ; R3 := R2 - R3
 14 [-]: GETUPVAL  R4 U5        ; R4 := U5
 15 [-]: GETUPVAL  R5 U4        ; R5 := U4
 16 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 17 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 18 [-]: LE        0 K0 R3      ; if 1 > R3 then PC := 67
 19 [-]: JMP       67           ; PC := 67
 20 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 21 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x880196A7"]
 22 [-]: GETUPVAL  R6 U6        ; R6 := U6
 23 [-]: LOADK     R7 K3        ; R7 := "StartXP"
 24 [-]: LOADK     R8 K4        ; R8 := "_visible"
 25 [-]: MOVE      R9 R0        ; R9 := R0
 26 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 27 [-]: GETUPVAL  R4 U7        ; R4 := U7
 28 [-]: EQ        1 R4 K5      ; if R4 == "" then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 31 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x1C19D966"]
 32 [-]: GETUPVAL  R6 U7        ; R6 := U7
 33 [-]: LOADK     R7 K4        ; R7 := "_visible"
 34 [-]: MOVE      R8 R0        ; R8 := R0
 35 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 36 [-]: GETGLOBAL R4 K7        ; R4 := math
 37 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0x65F9712A"]
 38 [-]: GETUPVAL  R5 U9        ; R5 := U9
 39 [-]: GETUPVAL  R6 U10       ; R6 := U10
 40 [-]: MOVE      R7 R2        ; R7 := R2
 41 [-]: GETUPVAL  R8 U11       ; R8 := U11
 42 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 43 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 44 [-]: MOVE      R4 R8        ; R4 := R8
 45 [-]: GETGLOBAL R4 K9        ; R4 := gGameConfig
 46 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0xAE770DA7"]
 47 [-]: MOVE      R6 R2        ; R6 := R2
 48 [-]: GETUPVAL  R7 U11       ; R7 := U11
 49 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 50 [-]: MOVE      R4 R4        ; R4 := R4
 51 [-]: GETGLOBAL R4 K9        ; R4 := gGameConfig
 52 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x33586603"]
 53 [-]: MOVE      R6 R2        ; R6 := R2
 54 [-]: GETUPVAL  R7 U11       ; R7 := U11
 55 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 56 [-]: MOVE      R4 R5        ; R4 := R5
 57 [-]: GETGLOBAL R4 K7        ; R4 := math
 58 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0xBE342C7C"]
 59 [-]: MOVE      R5 R3        ; R5 := R3
 60 [-]: LOADK     R6 K0        ; R6 := 1
 61 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 62 [-]: LT        0 R4 K13     ; if R4 >= 9.9999999747524e-07 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADK     R3 K0        ; R3 := 1
 65 [-]: JMP       67           ; PC := 67
 66 [-]: MOVE      R3 R4        ; R3 := R4
 67 [-]: GETUPVAL  R5 U12       ; R5 := U12
 68 [-]: MUL       R5 R3 R5     ; R5 := R3 * R5
 69 [-]: GETUPVAL  R6 U8        ; R6 := U8
 70 [-]: GETUPVAL  R7 U9        ; R7 := U9
 71 [-]: LE        0 R7 R6      ; if R7 > R6 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: GETUPVAL  R5 U12       ; R5 := U12
 74 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 75 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x1C19D966"]
 76 [-]: GETUPVAL  R8 U13       ; R8 := U13
 77 [-]: LOADK     R9 K14       ; R9 := "_width"
 78 [-]: MOVE      R10 R5       ; R10 := R5
 79 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 80 [-]: GETUPVAL  R6 U14       ; R6 := U14
 81 [-]: GETUPVAL  R7 U15       ; R7 := U15
 82 [-]: GETUPVAL  R8 U16       ; R8 := U16
 83 [-]: MOVE      R9 R1        ; R9 := R1
 84 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 85 [-]: GETUPVAL  R6 U17       ; R6 := U17
 86 [-]: GETUPVAL  R7 U8        ; R7 := U8
 87 [-]: CALL      R6 2 1       ; R6(R7)
 88 [-]: GETGLOBAL R6 K15       ; R6 := 0x400E7765
 89 [-]: GETGLOBAL R7 K16       ; R7 := barFX
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 125
 92 [-]: JMP       125          ; PC := 125
 93 [-]: GETGLOBAL R6 K7        ; R6 := math
 94 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["0x865961F7"]
 95 [-]: CALL      R6 1 2       ; R6 := R6()
 96 [-]: LT        0 R6 K18     ; if R6 >= 0.20000000298023 then PC := 125
 97 [-]: JMP       125          ; PC := 125
 98 [-]: GETUPVAL  R6 U18       ; R6 := U18
 99 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0x69B983D"]
100 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
101 [-]: GETUPVAL  R8 U13       ; R8 := U13
102 [-]: CALL      R6 3 3       ; R6,R7 := R6(R7,R8)
103 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: LOADK     R6 K21       ; R6 := 0
106 [-]: EQ        0 R7 K20     ; if R7 ~= nil then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: LOADK     R7 K21       ; R7 := 0
109 [-]: GETUPVAL  R8 U8        ; R8 := U8
110 [-]: GETUPVAL  R9 U9        ; R9 := U9
111 [-]: LT        0 R8 R9      ; if R8 >= R9 then PC := 125
112 [-]: JMP       125          ; PC := 125
113 [-]: GETUPVAL  R8 U19       ; R8 := U19
114 [-]: GETUPVAL  R9 U20       ; R9 := U20
115 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["ITEMS"]
116 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 125
117 [-]: JMP       125          ; PC := 125
118 [-]: GETUPVAL  R8 U18       ; R8 := U18
119 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["0xBB2F7661"]
120 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
121 [-]: GETGLOBAL R10 K16      ; R10 := barFX
122 [-]: ADD       R11 R6 R5    ; R11 := R6 + R5
123 [-]: ADD       R12 R7 K24   ; R12 := R7 + 4
124 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
125 [-]: RETURN    R0 1         ; return 


; Function #71.5:
;
; Name:            
; Defined at line: 3253
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := -1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x84DCC428"]
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: GETGLOBAL R2 K3        ; R2 := xpCountDoneSound
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["UI_MODE_IN_GAME"]
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x25992394"]
 18 [-]: GETGLOBAL R2 K3        ; R2 := xpCountDoneSound
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #71.6:
;
; Name:            
; Defined at line: 3263
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: LOADK     R1 K0        ; R1 := ".XPBonus"
  3 [-]: CONCAT    R0 R0 R1     ; R0 := R0 .. R1
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: LOADK     R1 K1        ; R1 := ".BonusXP"
  7 [-]: CONCAT    R0 R0 R1     ; R0 := R0 .. R1
  8 [-]: MOVE      R0 R2        ; R0 := R2
  9 [-]: LOADK     R0 K2        ; R0 := "/Lotus/Language/Menu/EndOfMatch_Bonus"
 10 [-]: MOVE      R0 R3        ; R0 := R3
 11 [-]: GETUPVAL  R0 U5        ; R0 := U5
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["XpBonus"]
 13 [-]: MOVE      R0 R4        ; R0 := R4
 14 [-]: GETUPVAL  R0 U5        ; R0 := U5
 15 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["StartXp"]
 16 [-]: GETUPVAL  R1 U5        ; R1 := U5
 17 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["XpGain"]
 18 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 19 [-]: MOVE      R0 R6        ; R0 := R6
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: LOADK     R1 K6        ; R1 := ".XPGain"
 22 [-]: CONCAT    R0 R0 R1     ; R0 := R0 .. R1
 23 [-]: MOVE      R0 R7        ; R0 := R7
 24 [-]: GETUPVAL  R0 U8        ; R0 := U8
 25 [-]: GETUPVAL  R1 U9        ; R1 := U9
 26 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 58
 27 [-]: JMP       58           ; PC := 58
 28 [-]: GETGLOBAL R0 K7        ; R0 := 0x6374FD98
 29 [-]: GETUPVAL  R1 U4        ; R1 := U4
 30 [-]: GETUPVAL  R2 U10       ; R2 := U10
 31 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
 32 [-]: GETUPVAL  R2 U11       ; R2 := U11
 33 [-]: GETUPVAL  R3 U12       ; R3 := U12
 34 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 35 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 36 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x1C19D966"]
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: LOADK     R4 K10       ; R4 := "_visible"
 39 [-]: MOVE      R5 R1        ; R5 := R1
 40 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 41 [-]: GETGLOBAL R1 K11       ; R1 := 0x52E17A90
 42 [-]: GETGLOBAL R2 K8        ; R2 := mMovie
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETGLOBAL R4 K12       ; R4 := UISys
 45 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["FlashInstance_LINEAR"]
 46 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 47 [-]: GETUPVAL  R6 U13       ; R6 := U13
 48 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 49 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 50 [-]: LOADK     R7 K14       ; R7 := 1
 51 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 52 [-]: MOVE      R7 R0        ; R7 := R0
 53 [-]: LOADK     R8 K15       ; R8 := 0
 54 [-]: CLOSURE   R9 0         ; R9 := closure(Function #71.6.1)
 55 [-]: GETUPVAL  R0 U14       ; R0 := U14
 56 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 57 [-]: JMP       60           ; PC := 60
 58 [-]: GETUPVAL  R1 U14       ; R1 := U14
 59 [-]: CALL      R1 1 1       ; R1()
 60 [-]: RETURN    R0 1         ; return 


; Function #71.6.1:
;
; Name:            
; Defined at line: 3274
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 3343
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: LOADK     R5 K3        ; R5 := ".XPBg"
  6 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  7 [-]: LOADK     R5 K4        ; R5 := "_width"
  8 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
  9 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 10 [-]: GETGLOBAL R2 K5        ; R2 := intrinsicsIcon
 11 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 82
 15 [-]: JMP       82           ; PC := 82
 16 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 17 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: LOADK     R6 K8        ; R6 := "Icon"
 20 [-]: LOADK     R7 K9        ; R7 := "_z"
 21 [-]: LOADK     R8 K10       ; R8 := -300
 22 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 23 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 24 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x4443A5E7"]
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: LOADK     R6 K12       ; R6 := ".Icon"
 27 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 28 [-]: MOVE      R6 R2        ; R6 := R2
 29 [-]: GETGLOBAL R7 K13       ; R7 := _G
 30 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIMaterial_SmoothEdgeNoDepthTest"]
 31 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 32 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 33 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x4443A5E7"]
 34 [-]: MOVE      R5 R0        ; R5 := R0
 35 [-]: LOADK     R6 K15       ; R6 := ".Shadow"
 36 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 37 [-]: MOVE      R6 R2        ; R6 := R2
 38 [-]: GETGLOBAL R7 K16       ; R7 := affinityItemShadowMaterial
 39 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 40 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 41 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: LOADK     R6 K8        ; R6 := "Icon"
 44 [-]: LOADK     R7 K4        ; R7 := "_width"
 45 [-]: LOADK     R8 K17       ; R8 := 106
 46 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 47 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 48 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 49 [-]: MOVE      R5 R0        ; R5 := R0
 50 [-]: LOADK     R6 K8        ; R6 := "Icon"
 51 [-]: LOADK     R7 K18       ; R7 := "_height"
 52 [-]: LOADK     R8 K17       ; R8 := 106
 53 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 54 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 55 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 56 [-]: MOVE      R5 R0        ; R5 := R0
 57 [-]: LOADK     R6 K19       ; R6 := "Shadow"
 58 [-]: LOADK     R7 K4        ; R7 := "_width"
 59 [-]: LOADK     R8 K17       ; R8 := 106
 60 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 61 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 62 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 63 [-]: MOVE      R5 R0        ; R5 := R0
 64 [-]: LOADK     R6 K19       ; R6 := "Shadow"
 65 [-]: LOADK     R7 K18       ; R7 := "_height"
 66 [-]: LOADK     R8 K17       ; R8 := 106
 67 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 68 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 69 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 70 [-]: MOVE      R5 R0        ; R5 := R0
 71 [-]: LOADK     R6 K8        ; R6 := "Icon"
 72 [-]: LOADK     R7 K20       ; R7 := "_x"
 73 [-]: LOADK     R8 K21       ; R8 := 130
 74 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 75 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 76 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x880196A7"]
 77 [-]: MOVE      R5 R0        ; R5 := R0
 78 [-]: LOADK     R6 K19       ; R6 := "Shadow"
 79 [-]: LOADK     R7 K20       ; R7 := "_x"
 80 [-]: LOADK     R8 K21       ; R8 := 130
 81 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 82 [-]: GETGLOBAL R3 K22       ; R3 := 0xE6DC43B0
 83 [-]: LOADK     R4 K23       ; R4 := "/Lotus/Language/Intrinsics/Intrinsics"
 84 [-]: MOVE      R5 R1        ; R5 := R1
 85 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 86 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 87 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x880196A7"]
 88 [-]: MOVE      R6 R0        ; R6 := R0
 89 [-]: LOADK     R7 K24       ; R7 := "Name"
 90 [-]: LOADK     R8 K25       ; R8 := "verticalAlignment"
 91 [-]: LOADK     R9 K26       ; R9 := "bottom"
 92 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 93 [-]: GETUPVAL  R4 U0        ; R4 := U0
 94 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["0xBA254C2A"]
 95 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 96 [-]: MOVE      R6 R0        ; R6 := R0
 97 [-]: LOADK     R7 K28       ; R7 := ".Name"
 98 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 99 [-]: LOADK     R7 K29       ; R7 := 2
100 [-]: GETGLOBAL R8 K30       ; R8 := string
101 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["0x639C642A"]
102 [-]: MOVE      R9 R3        ; R9 := R3
103 [-]: CALL      R8 2 2       ; R8 := R8(R9)
104 [-]: LOADK     R9 K32       ; R9 := "..."
105 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
106 [-]: LOADK     R4 K33       ; R4 := 1000
107 [-]: GETUPVAL  R5 U1        ; R5 := U1
108 [-]: SELF      R5 R5 K34    ; R6 := R5; R5 := R5["0x4188085C"]
109 [-]: GETGLOBAL R7 K35       ; R7 := Lotus_Game
110 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["LPP_SPACE"]
111 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
112 [-]: GETUPVAL  R6 U2        ; R6 := U2
113 [-]: EQ        1 R6 K37     ; if R6 == nil then PC := 125
114 [-]: JMP       125          ; PC := 125
115 [-]: GETUPVAL  R6 U2        ; R6 := U2
116 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["mStartIntrinsicPoints"]
117 [-]: LT        0 K39 R6     ; if 0 >= R6 then PC := 125
118 [-]: JMP       125          ; PC := 125
119 [-]: GETUPVAL  R6 U2        ; R6 := U2
120 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["mStartIntrinsicPoints"]
121 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 125
122 [-]: JMP       125          ; PC := 125
123 [-]: GETUPVAL  R6 U2        ; R6 := U2
124 [-]: GETTABLE  R5 R6 K38    ; R5 := R6["mStartIntrinsicPoints"]
125 [-]: MOD       R6 R5 R4     ; R6 := R5 % R4
126 [-]: GETGLOBAL R7 K40       ; R7 := math
127 [-]: GETTABLE  R7 R7 K41    ; R7 := R7["0xF7005A7B"]
128 [-]: DIV       R8 R5 R4     ; R8 := R5 / R4
129 [-]: CALL      R7 2 2       ; R7 := R7(R8)
130 [-]: MOVE      R8 R7        ; R8 := R7
131 [-]: GETGLOBAL R9 K30       ; R9 := string
132 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["0x639C642A"]
133 [-]: GETGLOBAL R10 K22      ; R10 := 0xE6DC43B0
134 [-]: LOADK     R11 K42      ; R11 := "/Lotus/Language/Menu/Profile_Points"
135 [-]: MOVE      R12 R1       ; R12 := R1
136 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
137 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
138 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
139 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
140 [-]: MOVE      R12 R0       ; R12 := R0
141 [-]: LOADK     R13 K43      ; R13 := "Rank"
142 [-]: LOADK     R14 K44      ; R14 := "text"
143 [-]: MOVE      R15 R7       ; R15 := R7
144 [-]: LOADK     R16 K45      ; R16 := " "
145 [-]: MOVE      R17 R9       ; R17 := R9
146 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
147 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
148 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
149 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
150 [-]: MOVE      R12 R0       ; R12 := R0
151 [-]: LOADK     R13 K46      ; R13 := "XP"
152 [-]: LOADK     R14 K44      ; R14 := "text"
153 [-]: LOADK     R15 K47      ; R15 := ""
154 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
155 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
156 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
157 [-]: MOVE      R12 R0       ; R12 := R0
158 [-]: LOADK     R13 K48      ; R13 := "BonusXP"
159 [-]: LOADK     R14 K44      ; R14 := "text"
160 [-]: LOADK     R15 K47      ; R15 := ""
161 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
162 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
163 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
164 [-]: MOVE      R12 R0       ; R12 := R0
165 [-]: LOADK     R13 K49      ; R13 := "XPGain"
166 [-]: LOADK     R14 K4       ; R14 := "_width"
167 [-]: LOADK     R15 K50      ; R15 := 0.10000000149012
168 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
169 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
170 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
171 [-]: MOVE      R12 R0       ; R12 := R0
172 [-]: LOADK     R13 K49      ; R13 := "XPGain"
173 [-]: LOADK     R14 K51      ; R14 := "_visible"
174 [-]: MOVE      R15 R0       ; R15 := R0
175 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
176 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
177 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
178 [-]: MOVE      R12 R0       ; R12 := R0
179 [-]: LOADK     R13 K52      ; R13 := "XPBonus"
180 [-]: LOADK     R14 K4       ; R14 := "_width"
181 [-]: LOADK     R15 K50      ; R15 := 0.10000000149012
182 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
183 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
184 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
185 [-]: MOVE      R12 R0       ; R12 := R0
186 [-]: LOADK     R13 K52      ; R13 := "XPBonus"
187 [-]: LOADK     R14 K51      ; R14 := "_visible"
188 [-]: MOVE      R15 R0       ; R15 := R0
189 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
190 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
191 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x880196A7"]
192 [-]: MOVE      R12 R0       ; R12 := R0
193 [-]: LOADK     R13 K53      ; R13 := "XPBg"
194 [-]: LOADK     R14 K51      ; R14 := "_visible"
195 [-]: MOVE      R15 R1       ; R15 := R1
196 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
197 [-]: GETGLOBAL R10 K54      ; R10 := _T
198 [-]: GETTABLE  R10 R10 K55  ; R10 := R10["eomScreenMode"]
199 [-]: GETUPVAL  R11 U3       ; R11 := U3
200 [-]: GETTABLE  R11 R11 K56  ; R11 := R11["QUICK_PREVIEW"]
201 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 204
202 [-]: JMP       204          ; PC := 204
203 [-]: MOVE      R10 R0       ; R10 := R0
204 [-]: MOVE      R10 R1       ; R10 := R1
205 [-]: DIV       R11 R6 R4    ; R11 := R6 / R4
206 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
207 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12["0x880196A7"]
208 [-]: MOVE      R14 R0       ; R14 := R0
209 [-]: LOADK     R15 K57      ; R15 := "StartXP"
210 [-]: LOADK     R16 K51      ; R16 := "_visible"
211 [-]: LT        1 K39 R11    ; if 0 < R11 then PC := 214
212 [-]: JMP       214          ; PC := 214
213 [-]: MOVE      R17 R0       ; R17 := R0
214 [-]: MOVE      R17 R1       ; R17 := R1
215 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
216 [-]: LT        0 K39 R11    ; if 0 >= R11 then PC := 225
217 [-]: JMP       225          ; PC := 225
218 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
219 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12["0x880196A7"]
220 [-]: MOVE      R14 R0       ; R14 := R0
221 [-]: LOADK     R15 K57      ; R15 := "StartXP"
222 [-]: LOADK     R16 K4       ; R16 := "_width"
223 [-]: MUL       R17 R11 R1   ; R17 := R11 * R1
224 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
225 [-]: TEST      R10 0        ; if not R10 then PC := 283
226 [-]: JMP       283          ; PC := 283
227 [-]: MOVE      R12 R0       ; R12 := R0
228 [-]: LOADK     R13 K58      ; R13 := ".XPGain"
229 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
230 [-]: GETUPVAL  R13 U4       ; R13 := U4
231 [-]: GETTABLE  R13 R13 K59  ; R13 := R13["Points"]
232 [-]: MOVE      R14 R6       ; R14 := R6
233 [-]: LOADK     R15 K47      ; R15 := ""
234 [-]: MOVE      R16 R1       ; R16 := R1
235 [-]: CLOSURE   R17 0        ; R17 := closure(Function #72.1)
236 [-]: MOVE      R0 R16       ; R0 := R16
237 [-]: GETUPVAL  R0 U5        ; R0 := U5
238 [-]: MOVE      R0 R13       ; R0 := R13
239 [-]: MOVE      R0 R14       ; R0 := R14
240 [-]: MOVE      R0 R6        ; R0 := R6
241 [-]: MOVE      R0 R4        ; R0 := R4
242 [-]: MOVE      R0 R0        ; R0 := R0
243 [-]: MOVE      R0 R15       ; R0 := R15
244 [-]: MOVE      R0 R8        ; R0 := R8
245 [-]: MOVE      R0 R7        ; R0 := R7
246 [-]: MOVE      R0 R1        ; R0 := R1
247 [-]: MOVE      R0 R12       ; R0 := R12
248 [-]: MOVE      R0 R9        ; R0 := R9
249 [-]: GETUPVAL  R0 U6        ; R0 := U6
250 [-]: GETUPVAL  R18 U7       ; R18 := U7
251 [-]: LOADK     R19 K60      ; R19 := 1
252 [-]: MOVE      R20 R1       ; R20 := R1
253 [-]: CALL      R18 3 1      ; R18(R19,R20)
254 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
255 [-]: SELF      R18 R18 K7   ; R19 := R18; R18 := R18["0x880196A7"]
256 [-]: MOVE      R20 R0       ; R20 := R0
257 [-]: LOADK     R21 K49      ; R21 := "XPGain"
258 [-]: LOADK     R22 K51      ; R22 := "_visible"
259 [-]: MOVE      R23 R1       ; R23 := R1
260 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
261 [-]: GETGLOBAL R18 K61      ; R18 := 0x6374FD98
262 [-]: GETUPVAL  R19 U8       ; R19 := U8
263 [-]: DIV       R19 R13 R19  ; R19 := R13 / R19
264 [-]: GETUPVAL  R20 U9       ; R20 := U9
265 [-]: GETUPVAL  R21 U10      ; R21 := U10
266 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
267 [-]: GETGLOBAL R19 K62      ; R19 := 0x52E17A90
268 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
269 [-]: MOVE      R21 R0       ; R21 := R0
270 [-]: GETGLOBAL R22 K63      ; R22 := UISys
271 [-]: GETTABLE  R22 R22 K64  ; R22 := R22["FlashInstance_LINEAR"]
272 [-]: NEWTABLE  R23 1 0      ; R23 := {}
273 [-]: MOVE      R24 R17      ; R24 := R17
274 [-]: SETLIST   R23 1 1      ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 1
275 [-]: NEWTABLE  R24 1 0      ; R24 := {}
276 [-]: LOADK     R25 K60      ; R25 := 1
277 [-]: SETLIST   R24 1 1      ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 1
278 [-]: MOVE      R25 R18      ; R25 := R18
279 [-]: LOADK     R26 K29      ; R26 := 2
280 [-]: CALL      R19 8 1      ; R19(R20,R21,R22,R23,R24,R25,R26)
281 [-]: CLOSE     R12          ; SAVE R12,...
282 [-]: JMP       318          ; PC := 318
283 [-]: GETUPVAL  R12 U4       ; R12 := U4
284 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["Points"]
285 [-]: ADD       R12 R5 R12   ; R12 := R5 + R12
286 [-]: GETGLOBAL R13 K40      ; R13 := math
287 [-]: GETTABLE  R13 R13 K41  ; R13 := R13["0xF7005A7B"]
288 [-]: DIV       R14 R12 K33  ; R14 := R12 / 1000
289 [-]: CALL      R13 2 2      ; R13 := R13(R14)
290 [-]: MOVE      R8 R13       ; R8 := R13
291 [-]: MOD       R13 R12 K33  ; R13 := R12 % 1000
292 [-]: DIV       R13 R13 R4   ; R13 := R13 / R4
293 [-]: MUL       R14 R13 R1   ; R14 := R13 * R1
294 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
295 [-]: SELF      R15 R15 K7   ; R16 := R15; R15 := R15["0x880196A7"]
296 [-]: MOVE      R17 R0       ; R17 := R0
297 [-]: LOADK     R18 K43      ; R18 := "Rank"
298 [-]: LOADK     R19 K44      ; R19 := "text"
299 [-]: MOVE      R20 R8       ; R20 := R8
300 [-]: LOADK     R21 K45      ; R21 := " "
301 [-]: MOVE      R22 R9       ; R22 := R9
302 [-]: CONCAT    R20 R20 R22  ; R20 := R20 .. R21 .. R22
303 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
304 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
305 [-]: SELF      R15 R15 K7   ; R16 := R15; R15 := R15["0x880196A7"]
306 [-]: MOVE      R17 R0       ; R17 := R0
307 [-]: LOADK     R18 K49      ; R18 := "XPGain"
308 [-]: LOADK     R19 K51      ; R19 := "_visible"
309 [-]: MOVE      R20 R1       ; R20 := R1
310 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
311 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
312 [-]: SELF      R15 R15 K7   ; R16 := R15; R15 := R15["0x880196A7"]
313 [-]: MOVE      R17 R0       ; R17 := R0
314 [-]: LOADK     R18 K49      ; R18 := "XPGain"
315 [-]: LOADK     R19 K4       ; R19 := "_width"
316 [-]: MOVE      R20 R14      ; R20 := R14
317 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
318 [-]: RETURN    R0 1         ; return 


; Function #72.1:
;
; Name:            
; Defined at line: 3403
; #Upvalues:       14
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: MUL       R1 R1 R0     ; R1 := R1 * R0
 10 [-]: GETUPVAL  R2 U3        ; R2 := U3
 11 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 12 [-]: GETUPVAL  R3 U4        ; R3 := U4
 13 [-]: SUB       R3 R2 R3     ; R3 := R2 - R3
 14 [-]: GETUPVAL  R4 U5        ; R4 := U5
 15 [-]: GETUPVAL  R5 U4        ; R5 := U4
 16 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 17 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 18 [-]: LE        0 K0 R3      ; if 1 > R3 then PC := 60
 19 [-]: JMP       60           ; PC := 60
 20 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 21 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x880196A7"]
 22 [-]: GETUPVAL  R6 U6        ; R6 := U6
 23 [-]: LOADK     R7 K3        ; R7 := "StartXP"
 24 [-]: LOADK     R8 K4        ; R8 := "_visible"
 25 [-]: MOVE      R9 R0        ; R9 := R0
 26 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 27 [-]: GETUPVAL  R4 U7        ; R4 := U7
 28 [-]: EQ        1 R4 K5      ; if R4 == "" then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 31 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x1C19D966"]
 32 [-]: GETUPVAL  R6 U7        ; R6 := U7
 33 [-]: LOADK     R7 K4        ; R7 := "_visible"
 34 [-]: MOVE      R8 R0        ; R8 := R0
 35 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 36 [-]: GETUPVAL  R4 U9        ; R4 := U9
 37 [-]: GETGLOBAL R5 K7        ; R5 := math
 38 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0xF7005A7B"]
 39 [-]: DIV       R6 R2 K9     ; R6 := R2 / 1000
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 42 [-]: MOVE      R4 R8        ; R4 := R8
 43 [-]: LOADK     R4 K10       ; R4 := 0
 44 [-]: MOVE      R4 R4        ; R4 := R4
 45 [-]: GETGLOBAL R4 K7        ; R4 := math
 46 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xBE342C7C"]
 47 [-]: MOVE      R5 R3        ; R5 := R3
 48 [-]: LOADK     R6 K0        ; R6 := 1
 49 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 50 [-]: MOD       R5 R2 K9     ; R5 := R2 % 1000
 51 [-]: EQ        0 R5 K10     ; if R5 ~= 0 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: LOADK     R3 K12       ; R3 := 9.9999999747524e-07
 54 [-]: JMP       60           ; PC := 60
 55 [-]: LT        0 R4 K12     ; if R4 >= 9.9999999747524e-07 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: LOADK     R3 K0        ; R3 := 1
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R3 R4        ; R3 := R4
 60 [-]: GETUPVAL  R5 U10       ; R5 := U10
 61 [-]: MUL       R5 R3 R5     ; R5 := R3 * R5
 62 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 63 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6["0x1C19D966"]
 64 [-]: GETUPVAL  R8 U11       ; R8 := U11
 65 [-]: LOADK     R9 K13       ; R9 := "_width"
 66 [-]: MOVE      R10 R5       ; R10 := R5
 67 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 68 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 69 [-]: SELF      R6 R6 K2     ; R7 := R6; R6 := R6["0x880196A7"]
 70 [-]: GETUPVAL  R8 U6        ; R8 := U6
 71 [-]: LOADK     R9 K14       ; R9 := "Rank"
 72 [-]: LOADK     R10 K15      ; R10 := "text"
 73 [-]: GETUPVAL  R11 U8       ; R11 := U8
 74 [-]: LOADK     R12 K16      ; R12 := " "
 75 [-]: GETUPVAL  R13 U12      ; R13 := U12
 76 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
 77 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 78 [-]: GETGLOBAL R6 K17       ; R6 := 0x400E7765
 79 [-]: GETGLOBAL R7 K18       ; R7 := barFX
 80 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 81 [-]: TEST      R6 1         ; if R6 then PC := 106
 82 [-]: JMP       106          ; PC := 106
 83 [-]: GETGLOBAL R6 K7        ; R6 := math
 84 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["0x865961F7"]
 85 [-]: CALL      R6 1 2       ; R6 := R6()
 86 [-]: LT        0 R6 K20     ; if R6 >= 0.20000000298023 then PC := 106
 87 [-]: JMP       106          ; PC := 106
 88 [-]: GETUPVAL  R6 U13       ; R6 := U13
 89 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["0x69B983D"]
 90 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 91 [-]: GETUPVAL  R8 U11       ; R8 := U11
 92 [-]: CALL      R6 3 3       ; R6,R7 := R6(R7,R8)
 93 [-]: EQ        0 R6 K22     ; if R6 ~= nil then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: LOADK     R6 K10       ; R6 := 0
 96 [-]: EQ        0 R7 K22     ; if R7 ~= nil then PC := 99
 97 [-]: JMP       99           ; PC := 99
 98 [-]: LOADK     R7 K10       ; R7 := 0
 99 [-]: GETUPVAL  R8 U13       ; R8 := U13
100 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["0xBB2F7661"]
101 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
102 [-]: GETGLOBAL R10 K18      ; R10 := barFX
103 [-]: ADD       R11 R6 R5    ; R11 := R6 + R5
104 [-]: ADD       R12 R7 K24   ; R12 := R7 + 4
105 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
106 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 3471
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.Grid"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["0x9A7B3F36"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  6 [-]: LOADK     R3 K4        ; R3 := "AffinityPanel.Grid.Item"
  7 [-]: LOADNIL   R4 R4        ; R4 := nil
  8 [-]: LOADK     R5 K5        ; R5 := 3
  9 [-]: LOADK     R6 K5        ; R6 := 3
 10 [-]: CALL      R1 6 2       ; R1 := R1(R2,R3,R4,R5,R6)
 11 [-]: MOVE      R1 R0        ; R1 := R0
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SETTABLE  R1 K6 K7     ; R1["mColumnSeparation"] := 566
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: SETTABLE  R1 K8 K9     ; R1["mRowSeparation"] := 116
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mInitialDepth"]
 19 [-]: ADD       R2 R2 K11    ; R2 := R2 + 1000
 20 [-]: SETTABLE  R1 K10 R2    ; R1["mInitialDepth"] := R2
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0xE13A565"]
 23 [-]: LOADNIL   R3 R6        ; R3 := R4 := R5 := R6 := nil
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SETTABLE  R1 K13 K14   ; R1["mWrapAroundNavigation"] := "0x0"
 27 [-]: GETUPVAL  R1 U0        ; R1 := U0
 28 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0x3DB61F37"]
 29 [-]: LOADK     R3 K16       ; R3 := "AffinityPanel.ScrollBar"
 30 [-]: LOADK     R4 K17       ; R4 := -11
 31 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 32 [-]: GETUPVAL  R1 U0        ; R1 := U0
 33 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1["0xF9C18536"]
 34 [-]: CALL      R1 2 1       ; R1(R2)
 35 [-]: GETUPVAL  R1 U0        ; R1 := U0
 36 [-]: SETTABLE  R1 K19 K5    ; R1["mLowerBoundBuffer"] := 3
 37 [-]: GETUPVAL  R1 U0        ; R1 := U0
 38 [-]: CLOSURE   R2 0         ; R2 := closure(Function #73.1)
 39 [-]: SETTABLE  R1 K20 R2    ; R1["mElementDrawCallback"] := R2
 40 [-]: GETUPVAL  R1 U1        ; R1 := U1
 41 [-]: CALL      R1 1 2       ; R1 := R1()
 42 [-]: TEST      R1 0         ; if not R1 then PC := 81
 43 [-]: JMP       81           ; PC := 81
 44 [-]: GETUPVAL  R1 U2        ; R1 := U2
 45 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["0x87D2274C"]
 46 [-]: CALL      R1 1 2       ; R1 := R1()
 47 [-]: TEST      R1 0         ; if not R1 then PC := 81
 48 [-]: JMP       81           ; PC := 81
 49 [-]: GETUPVAL  R1 U3        ; R1 := U3
 50 [-]: CALL      R1 1 2       ; R1 := R1()
 51 [-]: GETGLOBAL R2 K22       ; R2 := 0x400E7765
 52 [-]: MOVE      R3 R1        ; R3 := R1
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: TEST      R2 1         ; if R2 then PC := 100
 55 [-]: JMP       100          ; PC := 100
 56 [-]: SELF      R2 R1 K23    ; R3 := R1; R2 := R1["0xADE7BF82"]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: GETGLOBAL R3 K22       ; R3 := 0x400E7765
 59 [-]: MOVE      R4 R2        ; R4 := R2
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: TEST      R3 1         ; if R3 then PC := 100
 62 [-]: JMP       100          ; PC := 100
 63 [-]: GETGLOBAL R3 K24       ; R3 := gGameRules
 64 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3["0xA2CB3BC5"]
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 100
 67 [-]: JMP       100          ; PC := 100
 68 [-]: SELF      R3 R2 K26    ; R4 := R2; R3 := R2["0xD9DA3D41"]
 69 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 70 [-]: LT        0 K27 R3     ; if 0 >= R3 then PC := 100
 71 [-]: JMP       100          ; PC := 100
 72 [-]: NEWTABLE  R4 0 1       ; R4 := {}
 73 [-]: SETTABLE  R4 K28 R3    ; R4["Points"] := R3
 74 [-]: MOVE      R4 R4        ; R4 := R4
 75 [-]: GETUPVAL  R4 U5        ; R4 := U5
 76 [-]: SETTABLE  R4 K29 R3    ; R4["mMissionIntrinsicPoints"] := R3
 77 [-]: GETUPVAL  R4 U6        ; R4 := U6
 78 [-]: ADD       R4 R4 K30    ; R4 := R4 + 1
 79 [-]: MOVE      R4 R6        ; R4 := R6
 80 [-]: JMP       100          ; PC := 100
 81 [-]: GETUPVAL  R4 U5        ; R4 := U5
 82 [-]: EQ        1 R4 K31     ; if R4 == nil then PC := 100
 83 [-]: JMP       100          ; PC := 100
 84 [-]: GETUPVAL  R4 U5        ; R4 := U5
 85 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["mMissionIntrinsicPoints"]
 86 [-]: LT        0 K27 R4     ; if 0 >= R4 then PC := 100
 87 [-]: JMP       100          ; PC := 100
 88 [-]: GETUPVAL  R4 U5        ; R4 := U5
 89 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["mMissionRating"]
 90 [-]: LT        0 K27 R4     ; if 0 >= R4 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: NEWTABLE  R4 0 1       ; R4 := {}
 93 [-]: GETUPVAL  R5 U5        ; R5 := U5
 94 [-]: GETTABLE  R5 R5 K29    ; R5 := R5["mMissionIntrinsicPoints"]
 95 [-]: SETTABLE  R4 K28 R5    ; R4["Points"] := R5
 96 [-]: MOVE      R4 R4        ; R4 := R4
 97 [-]: GETUPVAL  R4 U6        ; R4 := U6
 98 [-]: ADD       R4 R4 K30    ; R4 := R4 + 1
 99 [-]: MOVE      R4 R6        ; R4 := R6
100 [-]: LOADK     R4 K30       ; R4 := 1
101 [-]: GETUPVAL  R5 U6        ; R5 := U6
102 [-]: LOADK     R6 K30       ; R6 := 1
103 [-]: FORPREP   R4 110       ; R4 -= R6; PC := 110
104 [-]: GETUPVAL  R8 U0        ; R8 := U0
105 [-]: SELF      R8 R8 K33    ; R9 := R8; R8 := R8["0xA77DA8EE"]
106 [-]: NEWTABLE  R10 0 1      ; R10 := {}
107 [-]: SETTABLE  R10 K34 R7   ; R10["Id"] := R7
108 [-]: MOVE      R11 R1       ; R11 := R1
109 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
110 [-]: FORLOOP   R4 104       ; R4 += R6; if R4 <= R5 then begin PC := 104; R7 := R4 end
111 [-]: GETUPVAL  R8 U0        ; R8 := U0
112 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8["0x6470BAF4"]
113 [-]: CALL      R8 2 1       ; R8(R9)
114 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
115 [-]: SELF      R8 R8 K36    ; R9 := R8; R8 := R8["0x6B7B470B"]
116 [-]: LOADK     R10 K37      ; R10 := "AffinityPanel.BottomLine"
117 [-]: LOADK     R11 K38      ; R11 := "_y"
118 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
119 [-]: GETUPVAL  R9 U6        ; R9 := U6
120 [-]: LT        0 R9 K39     ; if R9 >= 7 then PC := 133
121 [-]: JMP       133          ; PC := 133
122 [-]: GETUPVAL  R9 U6        ; R9 := U6
123 [-]: LT        0 K5 R9      ; if 3 >= R9 then PC := 133
124 [-]: JMP       133          ; PC := 133
125 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
126 [-]: SELF      R9 R9 K40    ; R10 := R9; R9 := R9["0x1C19D966"]
127 [-]: LOADK     R11 K37      ; R11 := "AffinityPanel.BottomLine"
128 [-]: LOADK     R12 K38      ; R12 := "_y"
129 [-]: GETUPVAL  R13 U0       ; R13 := U0
130 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["mRowSeparation"]
131 [-]: SUB       R13 R8 R13   ; R13 := R8 - R13
132 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
133 [-]: GETUPVAL  R9 U6        ; R9 := U6
134 [-]: LT        0 R9 K41     ; if R9 >= 4 then PC := 145
135 [-]: JMP       145          ; PC := 145
136 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
137 [-]: SELF      R9 R9 K40    ; R10 := R9; R9 := R9["0x1C19D966"]
138 [-]: LOADK     R11 K37      ; R11 := "AffinityPanel.BottomLine"
139 [-]: LOADK     R12 K38      ; R12 := "_y"
140 [-]: GETUPVAL  R13 U0       ; R13 := U0
141 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["mRowSeparation"]
142 [-]: MUL       R13 R13 K42  ; R13 := R13 * 2
143 [-]: SUB       R13 R8 R13   ; R13 := R8 - R13
144 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
145 [-]: RETURN    R0 1         ; return 


; Function #73.1:
;
; Name:            
; Defined at line: 3486
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 3520
; #Upvalues:       22
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  70

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0x87D2274C"]
  3 [-]: CALL      R3 1 2       ; R3 := R3()
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: CALL      R4 1 2       ; R4 := R4()
  6 [-]: LOADNIL   R5 R5        ; R5 := nil
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: LOADK     R7 K1        ; R7 := 0
  9 [-]: CLOSURE   R8 0         ; R8 := closure(Function #74.1)
 10 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
 11 [-]: MOVE      R10 R4       ; R10 := R4
 12 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 13 [-]: TEST      R9 1         ; if R9 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: SELF      R9 R4 K3     ; R10 := R4; R9 := R4["0xADE7BF82"]
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: MOVE      R5 R9        ; R5 := R9
 18 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
 19 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9["0x5DB0BD4"]
 20 [-]: LOADK     R11 K6       ; R11 := "/Lotus/Language/Menu/Arsenal_Rank"
 21 [-]: MOVE      R12 R1       ; R12 := R1
 22 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 23 [-]: GETUPVAL  R10 U2       ; R10 := U2
 24 [-]: LOADK     R11 K7       ; R11 := "AffinityPanel"
 25 [-]: MOVE      R12 R9       ; R12 := R9
 26 [-]: CALL      R10 3 1      ; R10(R11,R12)
 27 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 28 [-]: MOVE      R11 R5       ; R11 := R5
 29 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 30 [-]: TEST      R10 0        ; if not R10 then PC := 53
 31 [-]: JMP       53           ; PC := 53
 32 [-]: GETGLOBAL R10 K8       ; R10 := 0x93B1256B
 33 [-]: LOADK     R11 K9       ; R11 := "Cannot PopulateAffinityPanel local player! Avatar was NULL or InventoryController was wrong type"
 34 [-]: CALL      R10 2 1      ; R10(R11)
 35 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
 36 [-]: GETUPVAL  R10 U3       ; R10 := U3
 37 [-]: LE        0 R7 R10     ; if R7 > R10 then PC := 52
 38 [-]: JMP       52           ; PC := 52
 39 [-]: MOVE      R10 R7       ; R10 := R7
 40 [-]: GETUPVAL  R11 U4       ; R11 := U4
 41 [-]: LOADK     R12 K10      ; R12 := 1
 42 [-]: FORPREP   R10 51       ; R10 -= R12; PC := 51
 43 [-]: GETGLOBAL R14 K4       ; R14 := mMovie
 44 [-]: SELF      R14 R14 K11  ; R15 := R14; R14 := R14["0x1C19D966"]
 45 [-]: MOVE      R16 R8       ; R16 := R8
 46 [-]: MOVE      R17 R13      ; R17 := R13
 47 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 48 [-]: LOADK     R17 K12      ; R17 := "_visible"
 49 [-]: MOVE      R18 R0       ; R18 := R0
 50 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 51 [-]: FORLOOP   R10 43       ; R10 += R12; if R10 <= R11 then begin PC := 43; R13 := R10 end
 52 [-]: RETURN    R0 1         ; return 
 53 [-]: TEST      R3 1         ; if R3 then PC := 98
 54 [-]: JMP       98           ; PC := 98
 55 [-]: GETGLOBAL R14 K13      ; R14 := _T
 56 [-]: NEWTABLE  R15 0 0      ; R15 := {}
 57 [-]: SETTABLE  R14 K14 R15  ; R14["StatCache"] := R15
 58 [-]: GETGLOBAL R14 K13      ; R14 := _T
 59 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 60 [-]: GETUPVAL  R15 U5       ; R15 := U5
 61 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mSuitXp"]
 62 [-]: SETTABLE  R14 K15 R15  ; R14["mSuitXp"] := R15
 63 [-]: GETGLOBAL R14 K13      ; R14 := _T
 64 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 65 [-]: GETUPVAL  R15 U5       ; R15 := U5
 66 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["mRifleXp"]
 67 [-]: SETTABLE  R14 K16 R15  ; R14["mRifleXp"] := R15
 68 [-]: GETGLOBAL R14 K13      ; R14 := _T
 69 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 70 [-]: GETUPVAL  R15 U5       ; R15 := U5
 71 [-]: GETTABLE  R15 R15 K17  ; R15 := R15["mPistolXp"]
 72 [-]: SETTABLE  R14 K17 R15  ; R14["mPistolXp"] := R15
 73 [-]: GETGLOBAL R14 K13      ; R14 := _T
 74 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 75 [-]: GETUPVAL  R15 U5       ; R15 := U5
 76 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["mMeleeXp"]
 77 [-]: SETTABLE  R14 K18 R15  ; R14["mMeleeXp"] := R15
 78 [-]: GETGLOBAL R14 K13      ; R14 := _T
 79 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 80 [-]: GETUPVAL  R15 U5       ; R15 := U5
 81 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["mSpecialAXp"]
 82 [-]: SETTABLE  R14 K19 R15  ; R14["mSpecialAXp"] := R15
 83 [-]: GETGLOBAL R14 K13      ; R14 := _T
 84 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 85 [-]: GETUPVAL  R15 U5       ; R15 := U5
 86 [-]: GETTABLE  R15 R15 K20  ; R15 := R15["mSpecialBXp"]
 87 [-]: SETTABLE  R14 K20 R15  ; R14["mSpecialBXp"] := R15
 88 [-]: GETGLOBAL R14 K13      ; R14 := _T
 89 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 90 [-]: GETUPVAL  R15 U5       ; R15 := U5
 91 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["mSentinelXp"]
 92 [-]: SETTABLE  R14 K21 R15  ; R14["SentinelXp"] := R15
 93 [-]: GETGLOBAL R14 K13      ; R14 := _T
 94 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["StatCache"]
 95 [-]: GETUPVAL  R15 U5       ; R15 := U5
 96 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["mHoverboardXP"]
 97 [-]: SETTABLE  R14 K23 R15  ; R14["HoverboardXP"] := R15
 98 [-]: GETUPVAL  R14 U6       ; R14 := U6
 99 [-]: CALL      R14 1 2      ; R14 := R14()
100 [-]: TEST      R14 0        ; if not R14 then PC := 130
101 [-]: JMP       130          ; PC := 130
102 [-]: GETUPVAL  R14 U5       ; R14 := U5
103 [-]: SETTABLE  R14 K25 K1   ; R14["mStartSuitXp"] := 0
104 [-]: GETUPVAL  R14 U5       ; R14 := U5
105 [-]: SETTABLE  R14 K26 K1   ; R14["mStartRifleXp"] := 0
106 [-]: GETUPVAL  R14 U5       ; R14 := U5
107 [-]: SETTABLE  R14 K27 K1   ; R14["mStartPistolXp"] := 0
108 [-]: GETUPVAL  R14 U5       ; R14 := U5
109 [-]: SETTABLE  R14 K28 K1   ; R14["mStartMeleeXp"] := 0
110 [-]: GETUPVAL  R14 U5       ; R14 := U5
111 [-]: SETTABLE  R14 K29 K1   ; R14["mStartSentinelXp"] := 0
112 [-]: GETUPVAL  R14 U5       ; R14 := U5
113 [-]: SETTABLE  R14 K30 K1   ; R14["mStartSentinelWeaponXp"] := 0
114 [-]: GETUPVAL  R14 U5       ; R14 := U5
115 [-]: SETTABLE  R14 K31 K1   ; R14["mSuitXpBonus"] := 0
116 [-]: GETUPVAL  R14 U5       ; R14 := U5
117 [-]: SETTABLE  R14 K32 K1   ; R14["mRifleXpBonus"] := 0
118 [-]: GETUPVAL  R14 U5       ; R14 := U5
119 [-]: SETTABLE  R14 K33 K1   ; R14["mPistolXpBonus"] := 0
120 [-]: GETUPVAL  R14 U5       ; R14 := U5
121 [-]: SETTABLE  R14 K34 K1   ; R14["mMeleeXpBonus"] := 0
122 [-]: GETUPVAL  R14 U5       ; R14 := U5
123 [-]: SETTABLE  R14 K35 K1   ; R14["mSentinelXpBonus"] := 0
124 [-]: GETUPVAL  R14 U5       ; R14 := U5
125 [-]: SETTABLE  R14 K36 K1   ; R14["mSentinelWeaponXpBonus"] := 0
126 [-]: GETUPVAL  R14 U5       ; R14 := U5
127 [-]: SETTABLE  R14 K37 K1   ; R14["mStartHoverboardXp"] := 0
128 [-]: GETUPVAL  R14 U5       ; R14 := U5
129 [-]: SETTABLE  R14 K38 K1   ; R14["mHoverboardXPBonus"] := 0
130 [-]: GETUPVAL  R14 U7       ; R14 := U7
131 [-]: GETTABLE  R14 R14 K39  ; R14 := R14["0xF81722A2"]
132 [-]: GETUPVAL  R15 U8       ; R15 := U8
133 [-]: GETTABLE  R15 R15 K40  ; R15 := R15["isPvp"]
134 [-]: GETGLOBAL R16 K41      ; R16 := Lotus_Game
135 [-]: GETTABLE  R16 R16 K42  ; R16 := R16["LOT_NORMAL_PVP"]
136 [-]: GETGLOBAL R17 K41      ; R17 := Lotus_Game
137 [-]: GETTABLE  R17 R17 K43  ; R17 := R17["LOT_NORMAL"]
138 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
139 [-]: CLOSURE   R15 1        ; R15 := closure(Function #74.2)
140 [-]: MOVE      R0 R1        ; R0 := R1
141 [-]: GETUPVAL  R0 U9        ; R0 := U9
142 [-]: GETUPVAL  R0 U7        ; R0 := U7
143 [-]: GETUPVAL  R0 U10       ; R0 := U10
144 [-]: GETUPVAL  R0 U11       ; R0 := U11
145 [-]: GETUPVAL  R0 U12       ; R0 := U12
146 [-]: GETGLOBAL R16 K44      ; R16 := gPlayerProfileMgr
147 [-]: SELF      R16 R16 K45  ; R17 := R16; R16 := R16["0x21EF7B1A"]
148 [-]: LOADK     R18 K1       ; R18 := 0
149 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
150 [-]: TEST      R3 1         ; if R3 then PC := 201
151 [-]: JMP       201          ; PC := 201
152 [-]: GETUPVAL  R17 U11      ; R17 := U11
153 [-]: SELF      R17 R17 K46  ; R18 := R17; R17 := R17["0xCA086799"]
154 [-]: CALL      R17 2 2      ; R17 := R17(R18)
155 [-]: TEST      R17 0        ; if not R17 then PC := 201
156 [-]: JMP       201          ; PC := 201
157 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
158 [-]: MOVE      R18 R16      ; R18 := R16
159 [-]: CALL      R17 2 2      ; R17 := R17(R18)
160 [-]: TEST      R17 1        ; if R17 then PC := 201
161 [-]: JMP       201          ; PC := 201
162 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
163 [-]: GETGLOBAL R18 K47      ; R18 := gRegion
164 [-]: CALL      R17 2 2      ; R17 := R17(R18)
165 [-]: TEST      R17 1        ; if R17 then PC := 201
166 [-]: JMP       201          ; PC := 201
167 [-]: GETGLOBAL R17 K48      ; R17 := gGameRules
168 [-]: SELF      R17 R17 K49  ; R18 := R17; R17 := R17["0xC17093D6"]
169 [-]: CALL      R17 2 2      ; R17 := R17(R18)
170 [-]: MOVE      R1 R17       ; R1 := R17
171 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
172 [-]: MOVE      R18 R1       ; R18 := R1
173 [-]: CALL      R17 2 2      ; R17 := R17(R18)
174 [-]: TEST      R17 1        ; if R17 then PC := 201
175 [-]: JMP       201          ; PC := 201
176 [-]: SELF      R17 R16 K50  ; R18 := R16; R17 := R16["0x144A28F9"]
177 [-]: CALL      R17 2 2      ; R17 := R17(R18)
178 [-]: GETUPVAL  R18 U11      ; R18 := U11
179 [-]: SELF      R18 R18 K51  ; R19 := R18; R18 := R18["0xD11FBDB8"]
180 [-]: CALL      R18 2 2      ; R18 := R18(R19)
181 [-]: LOADK     R19 K10      ; R19 := 1
182 [-]: LEN       R20 R18      ; R20 := # R18
183 [-]: LOADK     R21 K10      ; R21 := 1
184 [-]: FORPREP   R19 200      ; R19 -= R21; PC := 200
185 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
186 [-]: GETTABLE  R23 R23 K52  ; R23 := R23["name"]
187 [-]: EQ        0 R23 R17    ; if R23 ~= R17 then PC := 200
188 [-]: JMP       200          ; PC := 200
189 [-]: GETGLOBAL R23 K53      ; R23 := cjson
190 [-]: GETTABLE  R23 R23 K54  ; R23 := R23["0x8A2E8315"]
191 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
192 [-]: GETTABLE  R24 R24 K55  ; R24 := R24["loadout"]
193 [-]: CALL      R23 2 2      ; R23 := R23(R24)
194 [-]: MOVE      R2 R23       ; R2 := R23
195 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
196 [-]: GETTABLE  R23 R23 K56  ; R23 := R23["kubrowName"]
197 [-]: MOVE      R23 R13      ; R23 := R13
198 [-]: MOVE      R6 R1        ; R6 := R1
199 [-]: JMP       201          ; PC := 201
200 [-]: FORLOOP   R19 185      ; R19 += R21; if R19 <= R20 then begin PC := 185; R22 := R19 end
201 [-]: NEWTABLE  R23 0 0      ; R23 := {}
202 [-]: CLOSURE   R24 2        ; R24 := closure(Function #74.3)
203 [-]: GETUPVAL  R0 U0        ; R0 := U0
204 [-]: GETUPVAL  R0 U5        ; R0 := U5
205 [-]: MOVE      R0 R23       ; R0 := R23
206 [-]: GETUPVAL  R25 U11      ; R25 := U11
207 [-]: SELF      R25 R25 K57  ; R26 := R25; R25 := R25["0x30BDE7F"]
208 [-]: CALL      R25 2 2      ; R25 := R25(R26)
209 [-]: GETUPVAL  R26 U14      ; R26 := U14
210 [-]: MOVE      R27 R25      ; R27 := R25
211 [-]: CALL      R26 2 2      ; R26 := R26(R27)
212 [-]: CLOSURE   R27 3        ; R27 := closure(Function #74.4)
213 [-]: MOVE      R0 R15       ; R0 := R15
214 [-]: MOVE      R0 R2        ; R0 := R2
215 [-]: GETUPVAL  R0 U15       ; R0 := U15
216 [-]: MOVE      R0 R26       ; R0 := R26
217 [-]: GETUPVAL  R0 U7        ; R0 := U7
218 [-]: MOVE      R0 R0        ; R0 := R0
219 [-]: GETUPVAL  R0 U5        ; R0 := U5
220 [-]: MOVE      R0 R24       ; R0 := R24
221 [-]: MOVE      R28 R27      ; R28 := R27
222 [-]: MOVE      R29 R14      ; R29 := R14
223 [-]: GETGLOBAL R30 K41      ; R30 := Lotus_Game
224 [-]: GETTABLE  R30 R30 K58  ; R30 := R30["SUIT_SLOT"]
225 [-]: MOVE      R31 R5       ; R31 := R5
226 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
227 [-]: MOVE      R29 R27      ; R29 := R27
228 [-]: MOVE      R30 R14      ; R30 := R14
229 [-]: GETGLOBAL R31 K41      ; R31 := Lotus_Game
230 [-]: GETTABLE  R31 R31 K59  ; R31 := R31["LONG_GUN_SLOT"]
231 [-]: MOVE      R32 R5       ; R32 := R5
232 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
233 [-]: MOVE      R30 R27      ; R30 := R27
234 [-]: MOVE      R31 R14      ; R31 := R14
235 [-]: GETGLOBAL R32 K41      ; R32 := Lotus_Game
236 [-]: GETTABLE  R32 R32 K60  ; R32 := R32["PISTOL_SLOT"]
237 [-]: MOVE      R33 R5       ; R33 := R5
238 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
239 [-]: MOVE      R31 R27      ; R31 := R27
240 [-]: MOVE      R32 R14      ; R32 := R14
241 [-]: GETGLOBAL R33 K41      ; R33 := Lotus_Game
242 [-]: GETTABLE  R33 R33 K61  ; R33 := R33["MELEE_SLOT"]
243 [-]: MOVE      R34 R5       ; R34 := R5
244 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
245 [-]: MOVE      R32 R27      ; R32 := R27
246 [-]: MOVE      R33 R14      ; R33 := R14
247 [-]: GETGLOBAL R34 K41      ; R34 := Lotus_Game
248 [-]: GETTABLE  R34 R34 K62  ; R34 := R34["HEAVY_GUN_SLOT"]
249 [-]: MOVE      R35 R5       ; R35 := R5
250 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
251 [-]: MOVE      R33 R27      ; R33 := R27
252 [-]: MOVE      R34 R14      ; R34 := R14
253 [-]: GETGLOBAL R35 K41      ; R35 := Lotus_Game
254 [-]: GETTABLE  R35 R35 K63  ; R35 := R35["SPECIAL_A_SLOT"]
255 [-]: MOVE      R36 R5       ; R36 := R5
256 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
257 [-]: MOVE      R34 R27      ; R34 := R27
258 [-]: MOVE      R35 R14      ; R35 := R14
259 [-]: GETGLOBAL R36 K41      ; R36 := Lotus_Game
260 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["SPECIAL_B_SLOT"]
261 [-]: MOVE      R37 R5       ; R37 := R5
262 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
263 [-]: NEWTABLE  R35 0 1      ; R35 := {}
264 [-]: SETTABLE  R35 K65 K66  ; R35["Show"] := "0x0"
265 [-]: GETGLOBAL R36 K47      ; R36 := gRegion
266 [-]: SELF      R36 R36 K67  ; R37 := R36; R36 := R36["0x372CB914"]
267 [-]: CALL      R36 2 2      ; R36 := R36(R37)
268 [-]: GETGLOBAL R37 K2       ; R37 := 0x400E7765
269 [-]: MOVE      R38 R36      ; R38 := R36
270 [-]: CALL      R37 2 2      ; R37 := R37(R38)
271 [-]: TEST      R37 1        ; if R37 then PC := 300
272 [-]: JMP       300          ; PC := 300
273 [-]: SELF      R37 R36 K68  ; R38 := R36; R37 := R36["0x8F7453D9"]
274 [-]: CALL      R37 2 2      ; R37 := R37(R38)
275 [-]: GETGLOBAL R38 K2       ; R38 := 0x400E7765
276 [-]: MOVE      R39 R37      ; R39 := R37
277 [-]: CALL      R38 2 2      ; R38 := R38(R39)
278 [-]: TEST      R38 1        ; if R38 then PC := 290
279 [-]: JMP       290          ; PC := 290
280 [-]: MOVE      R38 R27      ; R38 := R27
281 [-]: GETGLOBAL R39 K41      ; R39 := Lotus_Game
282 [-]: GETTABLE  R39 R39 K69  ; R39 := R39["LOT_OPERATOR"]
283 [-]: GETGLOBAL R40 K41      ; R40 := Lotus_Game
284 [-]: GETTABLE  R40 R40 K59  ; R40 := R40["LONG_GUN_SLOT"]
285 [-]: SELF      R41 R37 K70  ; R42 := R37; R41 := R37["0x8DB5D01F"]
286 [-]: CALL      R41 2 0      ; R41,... := R41(R42)
287 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
288 [-]: MOVE      R35 R38      ; R35 := R38
289 [-]: JMP       300          ; PC := 300
290 [-]: TEST      R6 0         ; if not R6 then PC := 300
291 [-]: JMP       300          ; PC := 300
292 [-]: MOVE      R38 R27      ; R38 := R27
293 [-]: GETGLOBAL R39 K41      ; R39 := Lotus_Game
294 [-]: GETTABLE  R39 R39 K69  ; R39 := R39["LOT_OPERATOR"]
295 [-]: GETGLOBAL R40 K41      ; R40 := Lotus_Game
296 [-]: GETTABLE  R40 R40 K59  ; R40 := R40["LONG_GUN_SLOT"]
297 [-]: LOADNIL   R41 R41      ; R41 := nil
298 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
299 [-]: MOVE      R35 R38      ; R35 := R38
300 [-]: NEWTABLE  R38 0 1      ; R38 := {}
301 [-]: SETTABLE  R38 K65 K66  ; R38["Show"] := "0x0"
302 [-]: NEWTABLE  R39 0 1      ; R39 := {}
303 [-]: SETTABLE  R39 K65 K66  ; R39["Show"] := "0x0"
304 [-]: NEWTABLE  R40 0 1      ; R40 := {}
305 [-]: SETTABLE  R40 K65 K66  ; R40["Show"] := "0x0"
306 [-]: GETUPVAL  R41 U16      ; R41 := U16
307 [-]: CALL      R41 1 2      ; R41 := R41()
308 [-]: GETTABLE  R41 R41 K71  ; R41 := R41["archwingRequired"]
309 [-]: EQ        1 R41 K72    ; if R41 == "0x1" then PC := 313
310 [-]: JMP       313          ; PC := 313
311 [-]: TEST      R26 0        ; if not R26 then PC := 339
312 [-]: JMP       339          ; PC := 339
313 [-]: MOVE      R41 R27      ; R41 := R27
314 [-]: GETGLOBAL R42 K41      ; R42 := Lotus_Game
315 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["LOT_ARCHWING"]
316 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
317 [-]: GETTABLE  R43 R43 K58  ; R43 := R43["SUIT_SLOT"]
318 [-]: MOVE      R44 R5       ; R44 := R5
319 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
320 [-]: MOVE      R38 R41      ; R38 := R41
321 [-]: TEST      R26 1        ; if R26 then PC := 339
322 [-]: JMP       339          ; PC := 339
323 [-]: MOVE      R41 R27      ; R41 := R27
324 [-]: GETGLOBAL R42 K41      ; R42 := Lotus_Game
325 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["LOT_ARCHWING"]
326 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
327 [-]: GETTABLE  R43 R43 K59  ; R43 := R43["LONG_GUN_SLOT"]
328 [-]: MOVE      R44 R5       ; R44 := R5
329 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
330 [-]: MOVE      R39 R41      ; R39 := R41
331 [-]: MOVE      R41 R27      ; R41 := R27
332 [-]: GETGLOBAL R42 K41      ; R42 := Lotus_Game
333 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["LOT_ARCHWING"]
334 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
335 [-]: GETTABLE  R43 R43 K61  ; R43 := R43["MELEE_SLOT"]
336 [-]: MOVE      R44 R5       ; R44 := R5
337 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
338 [-]: MOVE      R40 R41      ; R40 := R41
339 [-]: GETUPVAL  R41 U17      ; R41 := U17
340 [-]: EQ        1 R41 K74    ; if R41 == nil then PC := 348
341 [-]: JMP       348          ; PC := 348
342 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
343 [-]: GETUPVAL  R41 U18      ; R41 := U18
344 [-]: MOVE      R42 R8       ; R42 := R8
345 [-]: MOVE      R43 R7       ; R43 := R7
346 [-]: CALL      R42 2 0      ; R42,... := R42(R43)
347 [-]: CALL      R41 0 1      ; R41(R42,...)
348 [-]: GETTABLE  R41 R28 K65  ; R41 := R28["Show"]
349 [-]: TEST      R41 0        ; if not R41 then PC := 364
350 [-]: JMP       364          ; PC := 364
351 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
352 [-]: GETUPVAL  R41 U19      ; R41 := U19
353 [-]: MOVE      R42 R14      ; R42 := R14
354 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
355 [-]: GETTABLE  R43 R43 K58  ; R43 := R43["SUIT_SLOT"]
356 [-]: MOVE      R44 R7       ; R44 := R7
357 [-]: MOVE      R45 R8       ; R45 := R8
358 [-]: MOVE      R46 R7       ; R46 := R7
359 [-]: CALL      R45 2 2      ; R45 := R45(R46)
360 [-]: MOVE      R46 R28      ; R46 := R28
361 [-]: MOVE      R47 R6       ; R47 := R6
362 [-]: MOVE      R48 R23      ; R48 := R23
363 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
364 [-]: GETTABLE  R41 R29 K65  ; R41 := R29["Show"]
365 [-]: TEST      R41 0        ; if not R41 then PC := 380
366 [-]: JMP       380          ; PC := 380
367 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
368 [-]: GETUPVAL  R41 U19      ; R41 := U19
369 [-]: MOVE      R42 R14      ; R42 := R14
370 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
371 [-]: GETTABLE  R43 R43 K59  ; R43 := R43["LONG_GUN_SLOT"]
372 [-]: MOVE      R44 R7       ; R44 := R7
373 [-]: MOVE      R45 R8       ; R45 := R8
374 [-]: MOVE      R46 R7       ; R46 := R7
375 [-]: CALL      R45 2 2      ; R45 := R45(R46)
376 [-]: MOVE      R46 R29      ; R46 := R29
377 [-]: MOVE      R47 R6       ; R47 := R6
378 [-]: MOVE      R48 R23      ; R48 := R23
379 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
380 [-]: GETTABLE  R41 R30 K65  ; R41 := R30["Show"]
381 [-]: TEST      R41 0        ; if not R41 then PC := 396
382 [-]: JMP       396          ; PC := 396
383 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
384 [-]: GETUPVAL  R41 U19      ; R41 := U19
385 [-]: MOVE      R42 R14      ; R42 := R14
386 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
387 [-]: GETTABLE  R43 R43 K60  ; R43 := R43["PISTOL_SLOT"]
388 [-]: MOVE      R44 R7       ; R44 := R7
389 [-]: MOVE      R45 R8       ; R45 := R8
390 [-]: MOVE      R46 R7       ; R46 := R7
391 [-]: CALL      R45 2 2      ; R45 := R45(R46)
392 [-]: MOVE      R46 R30      ; R46 := R30
393 [-]: MOVE      R47 R6       ; R47 := R6
394 [-]: MOVE      R48 R23      ; R48 := R23
395 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
396 [-]: GETTABLE  R41 R31 K65  ; R41 := R31["Show"]
397 [-]: TEST      R41 0        ; if not R41 then PC := 412
398 [-]: JMP       412          ; PC := 412
399 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
400 [-]: GETUPVAL  R41 U19      ; R41 := U19
401 [-]: MOVE      R42 R14      ; R42 := R14
402 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
403 [-]: GETTABLE  R43 R43 K61  ; R43 := R43["MELEE_SLOT"]
404 [-]: MOVE      R44 R7       ; R44 := R7
405 [-]: MOVE      R45 R8       ; R45 := R8
406 [-]: MOVE      R46 R7       ; R46 := R7
407 [-]: CALL      R45 2 2      ; R45 := R45(R46)
408 [-]: MOVE      R46 R31      ; R46 := R31
409 [-]: MOVE      R47 R6       ; R47 := R6
410 [-]: MOVE      R48 R23      ; R48 := R23
411 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
412 [-]: GETTABLE  R41 R32 K65  ; R41 := R32["Show"]
413 [-]: TEST      R41 0        ; if not R41 then PC := 428
414 [-]: JMP       428          ; PC := 428
415 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
416 [-]: GETUPVAL  R41 U19      ; R41 := U19
417 [-]: MOVE      R42 R14      ; R42 := R14
418 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
419 [-]: GETTABLE  R43 R43 K62  ; R43 := R43["HEAVY_GUN_SLOT"]
420 [-]: MOVE      R44 R7       ; R44 := R7
421 [-]: MOVE      R45 R8       ; R45 := R8
422 [-]: MOVE      R46 R7       ; R46 := R7
423 [-]: CALL      R45 2 2      ; R45 := R45(R46)
424 [-]: MOVE      R46 R32      ; R46 := R32
425 [-]: MOVE      R47 R6       ; R47 := R6
426 [-]: MOVE      R48 R23      ; R48 := R23
427 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
428 [-]: GETTABLE  R41 R33 K65  ; R41 := R33["Show"]
429 [-]: TEST      R41 0        ; if not R41 then PC := 444
430 [-]: JMP       444          ; PC := 444
431 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
432 [-]: GETUPVAL  R41 U19      ; R41 := U19
433 [-]: MOVE      R42 R14      ; R42 := R14
434 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
435 [-]: GETTABLE  R43 R43 K63  ; R43 := R43["SPECIAL_A_SLOT"]
436 [-]: MOVE      R44 R7       ; R44 := R7
437 [-]: MOVE      R45 R8       ; R45 := R8
438 [-]: MOVE      R46 R7       ; R46 := R7
439 [-]: CALL      R45 2 2      ; R45 := R45(R46)
440 [-]: MOVE      R46 R33      ; R46 := R33
441 [-]: MOVE      R47 R6       ; R47 := R6
442 [-]: MOVE      R48 R23      ; R48 := R23
443 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
444 [-]: GETTABLE  R41 R34 K65  ; R41 := R34["Show"]
445 [-]: TEST      R41 0        ; if not R41 then PC := 460
446 [-]: JMP       460          ; PC := 460
447 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
448 [-]: GETUPVAL  R41 U19      ; R41 := U19
449 [-]: MOVE      R42 R14      ; R42 := R14
450 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
451 [-]: GETTABLE  R43 R43 K64  ; R43 := R43["SPECIAL_B_SLOT"]
452 [-]: MOVE      R44 R7       ; R44 := R7
453 [-]: MOVE      R45 R8       ; R45 := R8
454 [-]: MOVE      R46 R7       ; R46 := R7
455 [-]: CALL      R45 2 2      ; R45 := R45(R46)
456 [-]: MOVE      R46 R34      ; R46 := R34
457 [-]: MOVE      R47 R6       ; R47 := R6
458 [-]: MOVE      R48 R23      ; R48 := R23
459 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
460 [-]: GETTABLE  R41 R35 K65  ; R41 := R35["Show"]
461 [-]: TEST      R41 0        ; if not R41 then PC := 477
462 [-]: JMP       477          ; PC := 477
463 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
464 [-]: GETUPVAL  R41 U19      ; R41 := U19
465 [-]: GETGLOBAL R42 K41      ; R42 := Lotus_Game
466 [-]: GETTABLE  R42 R42 K69  ; R42 := R42["LOT_OPERATOR"]
467 [-]: GETGLOBAL R43 K41      ; R43 := Lotus_Game
468 [-]: GETTABLE  R43 R43 K59  ; R43 := R43["LONG_GUN_SLOT"]
469 [-]: MOVE      R44 R7       ; R44 := R7
470 [-]: MOVE      R45 R8       ; R45 := R8
471 [-]: MOVE      R46 R7       ; R46 := R7
472 [-]: CALL      R45 2 2      ; R45 := R45(R46)
473 [-]: MOVE      R46 R35      ; R46 := R35
474 [-]: MOVE      R47 R6       ; R47 := R6
475 [-]: MOVE      R48 R23      ; R48 := R23
476 [-]: CALL      R41 8 1      ; R41(R42,R43,R44,R45,R46,R47,R48)
477 [-]: GETUPVAL  R41 U8       ; R41 := U8
478 [-]: GETTABLE  R41 R41 K40  ; R41 := R41["isPvp"]
479 [-]: TEST      R41 1        ; if R41 then PC := 682
480 [-]: JMP       682          ; PC := 682
481 [-]: LOADNIL   R41 R44      ; R41 := R42 := R43 := R44 := nil
482 [-]: SELF      R45 R25 K75  ; R46 := R25; R45 := R25["0xF3640469"]
483 [-]: CALL      R45 2 2      ; R45 := R45(R46)
484 [-]: TEST      R3 0         ; if not R3 then PC := 628
485 [-]: JMP       628          ; PC := 628
486 [-]: TEST      R45 0        ; if not R45 then PC := 492
487 [-]: JMP       492          ; PC := 492
488 [-]: GETTABLE  R46 R25 K76  ; R46 := R25["mKubrowPetDetails"]
489 [-]: GETTABLE  R46 R46 K77  ; R46 := R46["mName"]
490 [-]: MOVE      R46 R13      ; R46 := R13
491 [-]: JMP       494          ; PC := 494
492 [-]: LOADK     R46 K78      ; R46 := ""
493 [-]: MOVE      R46 R13      ; R46 := R13
494 [-]: SELF      R46 R5 K79   ; R47 := R5; R46 := R5["0x30DABA98"]
495 [-]: CALL      R46 2 2      ; R46 := R46(R47)
496 [-]: MOVE      R42 R46      ; R42 := R46
497 [-]: GETGLOBAL R46 K2       ; R46 := 0x400E7765
498 [-]: MOVE      R47 R42      ; R47 := R42
499 [-]: CALL      R46 2 2      ; R46 := R46(R47)
500 [-]: TEST      R46 1        ; if R46 then PC := 522
501 [-]: JMP       522          ; PC := 522
502 [-]: SELF      R46 R42 K70  ; R47 := R42; R46 := R42["0x8DB5D01F"]
503 [-]: CALL      R46 2 2      ; R46 := R46(R47)
504 [-]: SELF      R46 R46 K80  ; R47 := R46; R46 := R46["0x6978AC59"]
505 [-]: CALL      R46 2 2      ; R46 := R46(R47)
506 [-]: MOVE      R41 R46      ; R41 := R46
507 [-]: TEST      R45 1        ; if R45 then PC := 515
508 [-]: JMP       515          ; PC := 515
509 [-]: SELF      R46 R42 K70  ; R47 := R42; R46 := R42["0x8DB5D01F"]
510 [-]: CALL      R46 2 2      ; R46 := R46(R47)
511 [-]: SELF      R46 R46 K81  ; R47 := R46; R46 := R46["0x6EA0928F"]
512 [-]: LOADK     R48 K1       ; R48 := 0
513 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
514 [-]: MOVE      R44 R46      ; R44 := R46
515 [-]: SELF      R46 R25 K82  ; R47 := R25; R46 := R25["0xF73D098D"]
516 [-]: CALL      R46 2 2      ; R46 := R46(R47)
517 [-]: TEST      R46 0        ; if not R46 then PC := 522
518 [-]: JMP       522          ; PC := 522
519 [-]: SELF      R46 R42 K83  ; R47 := R42; R46 := R42["0xFA66CF82"]
520 [-]: CALL      R46 2 2      ; R46 := R46(R47)
521 [-]: MOVE      R46 R13      ; R46 := R13
522 [-]: GETGLOBAL R46 K2       ; R46 := 0x400E7765
523 [-]: MOVE      R47 R42      ; R47 := R42
524 [-]: CALL      R46 2 2      ; R46 := R46(R47)
525 [-]: TEST      R46 1        ; if R46 then PC := 532
526 [-]: JMP       532          ; PC := 532
527 [-]: GETGLOBAL R46 K2       ; R46 := 0x400E7765
528 [-]: MOVE      R47 R41      ; R47 := R41
529 [-]: CALL      R46 2 2      ; R46 := R46(R47)
530 [-]: TEST      R46 0        ; if not R46 then PC := 628
531 [-]: JMP       628          ; PC := 628
532 [-]: SELF      R46 R25 K84  ; R47 := R25; R46 := R25["0x6D25F92"]
533 [-]: GETGLOBAL R48 K41      ; R48 := Lotus_Game
534 [-]: GETTABLE  R48 R48 K85  ; R48 := R48["LOT_SENTINEL"]
535 [-]: GETGLOBAL R49 K41      ; R49 := Lotus_Game
536 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["SUIT_SLOT"]
537 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
538 [-]: GETGLOBAL R47 K2       ; R47 := 0x400E7765
539 [-]: MOVE      R48 R46      ; R48 := R46
540 [-]: CALL      R47 2 2      ; R47 := R47(R48)
541 [-]: TEST      R47 1        ; if R47 then PC := 595
542 [-]: JMP       595          ; PC := 595
543 [-]: GETGLOBAL R47 K2       ; R47 := 0x400E7765
544 [-]: GETTABLE  R48 R46 K86  ; R48 := R46["mItem"]
545 [-]: CALL      R47 2 2      ; R47 := R47(R48)
546 [-]: TEST      R47 1        ; if R47 then PC := 595
547 [-]: JMP       595          ; PC := 595
548 [-]: GETGLOBAL R47 K2       ; R47 := 0x400E7765
549 [-]: GETTABLE  R48 R46 K86  ; R48 := R46["mItem"]
550 [-]: GETTABLE  R48 R48 K87  ; R48 := R48["mItemType"]
551 [-]: CALL      R47 2 2      ; R47 := R47(R48)
552 [-]: TEST      R47 1        ; if R47 then PC := 595
553 [-]: JMP       595          ; PC := 595
554 [-]: GETGLOBAL R47 K88      ; R47 := 0x7C282057
555 [-]: GETTABLE  R48 R46 K86  ; R48 := R46["mItem"]
556 [-]: GETTABLE  R48 R48 K87  ; R48 := R48["mItemType"]
557 [-]: CALL      R47 2 2      ; R47 := R47(R48)
558 [-]: MOVE      R41 R47      ; R41 := R47
559 [-]: GETTABLE  R47 R46 K86  ; R47 := R46["mItem"]
560 [-]: GETTABLE  R47 R47 K89  ; R47 := R47["mModularParts"]
561 [-]: LEN       R47 R47      ; R47 := # R47
562 [-]: LT        0 K1 R47     ; if 0 >= R47 then PC := 571
563 [-]: JMP       571          ; PC := 571
564 [-]: GETUPVAL  R47 U12      ; R47 := U12
565 [-]: GETTABLE  R47 R47 K90  ; R47 := R47["0x5957FFE7"]
566 [-]: GETTABLE  R48 R46 K86  ; R48 := R46["mItem"]
567 [-]: GETTABLE  R48 R48 K89  ; R48 := R48["mModularParts"]
568 [-]: LOADNIL   R49 R49      ; R49 := nil
569 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
570 [-]: MOVE      R43 R47      ; R43 := R47
571 [-]: GETTABLE  R47 R46 K86  ; R47 := R46["mItem"]
572 [-]: SELF      R47 R47 K91  ; R48 := R47; R47 := R47["0xAFA67B2D"]
573 [-]: GETTABLE  R49 R46 K92  ; R49 := R46["mCustSlot"]
574 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
575 [-]: SELF      R48 R47 K93  ; R49 := R47; R48 := R47["0xA11BA586"]
576 [-]: GETGLOBAL R50 K41      ; R50 := Lotus_Game
577 [-]: GETTABLE  R50 R50 K94  ; R50 := R50["BodySkin"]
578 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
579 [-]: GETGLOBAL R49 K2       ; R49 := 0x400E7765
580 [-]: MOVE      R50 R48      ; R50 := R48
581 [-]: CALL      R49 2 2      ; R49 := R49(R50)
582 [-]: TEST      R49 1        ; if R49 then PC := 595
583 [-]: JMP       595          ; PC := 595
584 [-]: GETGLOBAL R49 K88      ; R49 := 0x7C282057
585 [-]: MOVE      R50 R48      ; R50 := R48
586 [-]: CALL      R49 2 2      ; R49 := R49(R50)
587 [-]: GETGLOBAL R50 K2       ; R50 := 0x400E7765
588 [-]: MOVE      R51 R49      ; R51 := R49
589 [-]: CALL      R50 2 2      ; R50 := R50(R51)
590 [-]: TEST      R50 1        ; if R50 then PC := 595
591 [-]: JMP       595          ; PC := 595
592 [-]: SELF      R50 R49 K95  ; R51 := R49; R50 := R49["0xF1A9732E"]
593 [-]: CALL      R50 2 2      ; R50 := R50(R51)
594 [-]: MOVE      R43 R50      ; R43 := R50
595 [-]: TEST      R45 1        ; if R45 then PC := 628
596 [-]: JMP       628          ; PC := 628
597 [-]: GETGLOBAL R50 K2       ; R50 := 0x400E7765
598 [-]: MOVE      R51 R41      ; R51 := R41
599 [-]: CALL      R50 2 2      ; R50 := R50(R51)
600 [-]: TEST      R50 1        ; if R50 then PC := 628
601 [-]: JMP       628          ; PC := 628
602 [-]: SELF      R50 R25 K96  ; R51 := R25; R50 := R25["0x6200B095"]
603 [-]: GETGLOBAL R52 K41      ; R52 := Lotus_Game
604 [-]: GETTABLE  R52 R52 K85  ; R52 := R52["LOT_SENTINEL"]
605 [-]: GETGLOBAL R53 K41      ; R53 := Lotus_Game
606 [-]: GETTABLE  R53 R53 K59  ; R53 := R53["LONG_GUN_SLOT"]
607 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
608 [-]: GETGLOBAL R51 K2       ; R51 := 0x400E7765
609 [-]: MOVE      R52 R50      ; R52 := R50
610 [-]: CALL      R51 2 2      ; R51 := R51(R52)
611 [-]: TEST      R51 1        ; if R51 then PC := 628
612 [-]: JMP       628          ; PC := 628
613 [-]: GETGLOBAL R51 K2       ; R51 := 0x400E7765
614 [-]: GETTABLE  R52 R50 K87  ; R52 := R50["mItemType"]
615 [-]: CALL      R51 2 2      ; R51 := R51(R52)
616 [-]: TEST      R51 1        ; if R51 then PC := 628
617 [-]: JMP       628          ; PC := 628
618 [-]: GETGLOBAL R51 K88      ; R51 := 0x7C282057
619 [-]: SELF      R52 R25 K96  ; R53 := R25; R52 := R25["0x6200B095"]
620 [-]: GETGLOBAL R54 K41      ; R54 := Lotus_Game
621 [-]: GETTABLE  R54 R54 K85  ; R54 := R54["LOT_SENTINEL"]
622 [-]: GETGLOBAL R55 K41      ; R55 := Lotus_Game
623 [-]: GETTABLE  R55 R55 K59  ; R55 := R55["LONG_GUN_SLOT"]
624 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
625 [-]: GETTABLE  R52 R52 K87  ; R52 := R52["mItemType"]
626 [-]: CALL      R51 2 2      ; R51 := R51(R52)
627 [-]: MOVE      R44 R51      ; R44 := R51
628 [-]: MOVE      R51 R27      ; R51 := R27
629 [-]: GETGLOBAL R52 K41      ; R52 := Lotus_Game
630 [-]: GETTABLE  R52 R52 K85  ; R52 := R52["LOT_SENTINEL"]
631 [-]: GETGLOBAL R53 K41      ; R53 := Lotus_Game
632 [-]: GETTABLE  R53 R53 K58  ; R53 := R53["SUIT_SLOT"]
633 [-]: MOVE      R54 R5       ; R54 := R5
634 [-]: MOVE      R55 R41      ; R55 := R41
635 [-]: CALL      R51 5 2      ; R51 := R51(R52,R53,R54,R55)
636 [-]: GETGLOBAL R52 K2       ; R52 := 0x400E7765
637 [-]: MOVE      R53 R43      ; R53 := R43
638 [-]: CALL      R52 2 2      ; R52 := R52(R53)
639 [-]: TEST      R52 1        ; if R52 then PC := 642
640 [-]: JMP       642          ; PC := 642
641 [-]: SETTABLE  R51 K97 R43  ; R51["IconOverride"] := R43
642 [-]: MOVE      R52 R27      ; R52 := R27
643 [-]: GETGLOBAL R53 K41      ; R53 := Lotus_Game
644 [-]: GETTABLE  R53 R53 K85  ; R53 := R53["LOT_SENTINEL"]
645 [-]: GETGLOBAL R54 K41      ; R54 := Lotus_Game
646 [-]: GETTABLE  R54 R54 K59  ; R54 := R54["LONG_GUN_SLOT"]
647 [-]: MOVE      R55 R5       ; R55 := R5
648 [-]: MOVE      R56 R44      ; R56 := R44
649 [-]: CALL      R52 5 2      ; R52 := R52(R53,R54,R55,R56)
650 [-]: GETTABLE  R53 R51 K65  ; R53 := R51["Show"]
651 [-]: TEST      R53 0        ; if not R53 then PC := 682
652 [-]: JMP       682          ; PC := 682
653 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
654 [-]: GETUPVAL  R53 U19      ; R53 := U19
655 [-]: GETGLOBAL R54 K41      ; R54 := Lotus_Game
656 [-]: GETTABLE  R54 R54 K85  ; R54 := R54["LOT_SENTINEL"]
657 [-]: GETGLOBAL R55 K41      ; R55 := Lotus_Game
658 [-]: GETTABLE  R55 R55 K58  ; R55 := R55["SUIT_SLOT"]
659 [-]: MOVE      R56 R7       ; R56 := R7
660 [-]: MOVE      R57 R8       ; R57 := R8
661 [-]: MOVE      R58 R7       ; R58 := R7
662 [-]: CALL      R57 2 2      ; R57 := R57(R58)
663 [-]: MOVE      R58 R51      ; R58 := R51
664 [-]: MOVE      R59 R6       ; R59 := R6
665 [-]: CALL      R53 7 1      ; R53(R54,R55,R56,R57,R58,R59)
666 [-]: GETTABLE  R53 R52 K65  ; R53 := R52["Show"]
667 [-]: TEST      R53 0        ; if not R53 then PC := 682
668 [-]: JMP       682          ; PC := 682
669 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
670 [-]: GETUPVAL  R53 U19      ; R53 := U19
671 [-]: GETGLOBAL R54 K41      ; R54 := Lotus_Game
672 [-]: GETTABLE  R54 R54 K85  ; R54 := R54["LOT_SENTINEL"]
673 [-]: GETGLOBAL R55 K41      ; R55 := Lotus_Game
674 [-]: GETTABLE  R55 R55 K59  ; R55 := R55["LONG_GUN_SLOT"]
675 [-]: MOVE      R56 R7       ; R56 := R7
676 [-]: MOVE      R57 R8       ; R57 := R8
677 [-]: MOVE      R58 R7       ; R58 := R7
678 [-]: CALL      R57 2 2      ; R57 := R57(R58)
679 [-]: MOVE      R58 R52      ; R58 := R52
680 [-]: MOVE      R59 R6       ; R59 := R6
681 [-]: CALL      R53 7 1      ; R53(R54,R55,R56,R57,R58,R59)
682 [-]: GETUPVAL  R53 U20      ; R53 := U20
683 [-]: CALL      R53 1 2      ; R53 := R53()
684 [-]: TEST      R53 0        ; if not R53 then PC := 768
685 [-]: JMP       768          ; PC := 768
686 [-]: LOADNIL   R53 R54      ; R53 := R54 := nil
687 [-]: SELF      R55 R25 K84  ; R56 := R25; R55 := R25["0x6D25F92"]
688 [-]: GETGLOBAL R57 K41      ; R57 := Lotus_Game
689 [-]: GETTABLE  R57 R57 K98  ; R57 := R57["LOT_KDRIVE"]
690 [-]: GETGLOBAL R58 K41      ; R58 := Lotus_Game
691 [-]: GETTABLE  R58 R58 K58  ; R58 := R58["SUIT_SLOT"]
692 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
693 [-]: GETGLOBAL R56 K2       ; R56 := 0x400E7765
694 [-]: MOVE      R57 R55      ; R57 := R55
695 [-]: CALL      R56 2 2      ; R56 := R56(R57)
696 [-]: TEST      R56 1        ; if R56 then PC := 737
697 [-]: JMP       737          ; PC := 737
698 [-]: GETGLOBAL R56 K2       ; R56 := 0x400E7765
699 [-]: GETTABLE  R57 R55 K86  ; R57 := R55["mItem"]
700 [-]: CALL      R56 2 2      ; R56 := R56(R57)
701 [-]: TEST      R56 1        ; if R56 then PC := 737
702 [-]: JMP       737          ; PC := 737
703 [-]: GETGLOBAL R56 K2       ; R56 := 0x400E7765
704 [-]: GETTABLE  R57 R55 K86  ; R57 := R55["mItem"]
705 [-]: GETTABLE  R57 R57 K87  ; R57 := R57["mItemType"]
706 [-]: CALL      R56 2 2      ; R56 := R56(R57)
707 [-]: TEST      R56 1        ; if R56 then PC := 737
708 [-]: JMP       737          ; PC := 737
709 [-]: GETGLOBAL R56 K88      ; R56 := 0x7C282057
710 [-]: GETTABLE  R57 R55 K86  ; R57 := R55["mItem"]
711 [-]: GETTABLE  R57 R57 K87  ; R57 := R57["mItemType"]
712 [-]: CALL      R56 2 2      ; R56 := R56(R57)
713 [-]: MOVE      R53 R56      ; R53 := R56
714 [-]: GETTABLE  R56 R55 K86  ; R56 := R55["mItem"]
715 [-]: GETTABLE  R56 R56 K89  ; R56 := R56["mModularParts"]
716 [-]: LEN       R56 R56      ; R56 := # R56
717 [-]: LT        0 K1 R56     ; if 0 >= R56 then PC := 726
718 [-]: JMP       726          ; PC := 726
719 [-]: GETUPVAL  R56 U12      ; R56 := U12
720 [-]: GETTABLE  R56 R56 K90  ; R56 := R56["0x5957FFE7"]
721 [-]: GETTABLE  R57 R55 K86  ; R57 := R55["mItem"]
722 [-]: GETTABLE  R57 R57 K89  ; R57 := R57["mModularParts"]
723 [-]: LOADNIL   R58 R58      ; R58 := nil
724 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
725 [-]: MOVE      R54 R56      ; R54 := R56
726 [-]: GETTABLE  R56 R55 K86  ; R56 := R55["mItem"]
727 [-]: GETTABLE  R56 R56 K99  ; R56 := R56["mItemName"]
728 [-]: EQ        1 R56 K74    ; if R56 == nil then PC := 737
729 [-]: JMP       737          ; PC := 737
730 [-]: GETTABLE  R56 R55 K86  ; R56 := R55["mItem"]
731 [-]: GETTABLE  R56 R56 K99  ; R56 := R56["mItemName"]
732 [-]: EQ        1 R56 K78    ; if R56 == "" then PC := 737
733 [-]: JMP       737          ; PC := 737
734 [-]: GETTABLE  R56 R55 K86  ; R56 := R55["mItem"]
735 [-]: GETTABLE  R56 R56 K99  ; R56 := R56["mItemName"]
736 [-]: MOVE      R56 R21      ; R56 := R21
737 [-]: MOVE      R56 R27      ; R56 := R27
738 [-]: GETGLOBAL R57 K41      ; R57 := Lotus_Game
739 [-]: GETTABLE  R57 R57 K98  ; R57 := R57["LOT_KDRIVE"]
740 [-]: GETGLOBAL R58 K41      ; R58 := Lotus_Game
741 [-]: GETTABLE  R58 R58 K58  ; R58 := R58["SUIT_SLOT"]
742 [-]: MOVE      R59 R5       ; R59 := R5
743 [-]: MOVE      R60 R53      ; R60 := R53
744 [-]: CALL      R56 5 2      ; R56 := R56(R57,R58,R59,R60)
745 [-]: GETTABLE  R57 R56 K65  ; R57 := R56["Show"]
746 [-]: TEST      R57 0        ; if not R57 then PC := 768
747 [-]: JMP       768          ; PC := 768
748 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
749 [-]: GETGLOBAL R57 K2       ; R57 := 0x400E7765
750 [-]: MOVE      R58 R54      ; R58 := R54
751 [-]: CALL      R57 2 2      ; R57 := R57(R58)
752 [-]: TEST      R57 1        ; if R57 then PC := 755
753 [-]: JMP       755          ; PC := 755
754 [-]: SETTABLE  R56 K97 R54  ; R56["IconOverride"] := R54
755 [-]: GETUPVAL  R57 U19      ; R57 := U19
756 [-]: GETGLOBAL R58 K41      ; R58 := Lotus_Game
757 [-]: GETTABLE  R58 R58 K98  ; R58 := R58["LOT_KDRIVE"]
758 [-]: GETGLOBAL R59 K41      ; R59 := Lotus_Game
759 [-]: GETTABLE  R59 R59 K58  ; R59 := R59["SUIT_SLOT"]
760 [-]: MOVE      R60 R7       ; R60 := R7
761 [-]: MOVE      R61 R8       ; R61 := R8
762 [-]: MOVE      R62 R7       ; R62 := R7
763 [-]: CALL      R61 2 2      ; R61 := R61(R62)
764 [-]: MOVE      R62 R56      ; R62 := R56
765 [-]: MOVE      R63 R6       ; R63 := R6
766 [-]: MOVE      R64 R23      ; R64 := R23
767 [-]: CALL      R57 8 1      ; R57(R58,R59,R60,R61,R62,R63,R64)
768 [-]: GETTABLE  R57 R38 K65  ; R57 := R38["Show"]
769 [-]: TEST      R57 0        ; if not R57 then PC := 785
770 [-]: JMP       785          ; PC := 785
771 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
772 [-]: GETUPVAL  R57 U19      ; R57 := U19
773 [-]: GETGLOBAL R58 K41      ; R58 := Lotus_Game
774 [-]: GETTABLE  R58 R58 K73  ; R58 := R58["LOT_ARCHWING"]
775 [-]: GETGLOBAL R59 K41      ; R59 := Lotus_Game
776 [-]: GETTABLE  R59 R59 K58  ; R59 := R59["SUIT_SLOT"]
777 [-]: MOVE      R60 R7       ; R60 := R7
778 [-]: MOVE      R61 R8       ; R61 := R8
779 [-]: MOVE      R62 R7       ; R62 := R7
780 [-]: CALL      R61 2 2      ; R61 := R61(R62)
781 [-]: MOVE      R62 R38      ; R62 := R38
782 [-]: MOVE      R63 R6       ; R63 := R6
783 [-]: MOVE      R64 R23      ; R64 := R23
784 [-]: CALL      R57 8 1      ; R57(R58,R59,R60,R61,R62,R63,R64)
785 [-]: GETTABLE  R57 R39 K65  ; R57 := R39["Show"]
786 [-]: TEST      R57 0        ; if not R57 then PC := 811
787 [-]: JMP       811          ; PC := 811
788 [-]: GETGLOBAL R57 K2       ; R57 := 0x400E7765
789 [-]: MOVE      R58 R32      ; R58 := R32
790 [-]: CALL      R57 2 2      ; R57 := R57(R58)
791 [-]: TEST      R57 1        ; if R57 then PC := 811
792 [-]: JMP       811          ; PC := 811
793 [-]: GETTABLE  R57 R32 K100 ; R57 := R32["Item"]
794 [-]: GETTABLE  R58 R39 K100 ; R58 := R39["Item"]
795 [-]: EQ        1 R57 R58    ; if R57 == R58 then PC := 811
796 [-]: JMP       811          ; PC := 811
797 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
798 [-]: GETUPVAL  R57 U19      ; R57 := U19
799 [-]: GETGLOBAL R58 K41      ; R58 := Lotus_Game
800 [-]: GETTABLE  R58 R58 K73  ; R58 := R58["LOT_ARCHWING"]
801 [-]: GETGLOBAL R59 K41      ; R59 := Lotus_Game
802 [-]: GETTABLE  R59 R59 K59  ; R59 := R59["LONG_GUN_SLOT"]
803 [-]: MOVE      R60 R7       ; R60 := R7
804 [-]: MOVE      R61 R8       ; R61 := R8
805 [-]: MOVE      R62 R7       ; R62 := R7
806 [-]: CALL      R61 2 2      ; R61 := R61(R62)
807 [-]: MOVE      R62 R39      ; R62 := R39
808 [-]: MOVE      R63 R6       ; R63 := R6
809 [-]: MOVE      R64 R23      ; R64 := R23
810 [-]: CALL      R57 8 1      ; R57(R58,R59,R60,R61,R62,R63,R64)
811 [-]: GETTABLE  R57 R40 K65  ; R57 := R40["Show"]
812 [-]: TEST      R57 0        ; if not R57 then PC := 828
813 [-]: JMP       828          ; PC := 828
814 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
815 [-]: GETUPVAL  R57 U19      ; R57 := U19
816 [-]: GETGLOBAL R58 K41      ; R58 := Lotus_Game
817 [-]: GETTABLE  R58 R58 K73  ; R58 := R58["LOT_ARCHWING"]
818 [-]: GETGLOBAL R59 K41      ; R59 := Lotus_Game
819 [-]: GETTABLE  R59 R59 K61  ; R59 := R59["MELEE_SLOT"]
820 [-]: MOVE      R60 R7       ; R60 := R7
821 [-]: MOVE      R61 R8       ; R61 := R8
822 [-]: MOVE      R62 R7       ; R62 := R7
823 [-]: CALL      R61 2 2      ; R61 := R61(R62)
824 [-]: MOVE      R62 R40      ; R62 := R40
825 [-]: MOVE      R63 R6       ; R63 := R6
826 [-]: MOVE      R64 R23      ; R64 := R23
827 [-]: CALL      R57 8 1      ; R57(R58,R59,R60,R61,R62,R63,R64)
828 [-]: ADD       R7 R7 K10    ; R7 := R7 + 1
829 [-]: GETUPVAL  R57 U3       ; R57 := U3
830 [-]: LE        0 R7 R57     ; if R7 > R57 then PC := 845
831 [-]: JMP       845          ; PC := 845
832 [-]: MOVE      R57 R7       ; R57 := R7
833 [-]: GETUPVAL  R58 U4       ; R58 := U4
834 [-]: LOADK     R59 K10      ; R59 := 1
835 [-]: FORPREP   R57 844      ; R57 -= R59; PC := 844
836 [-]: GETGLOBAL R61 K4       ; R61 := mMovie
837 [-]: SELF      R61 R61 K11  ; R62 := R61; R61 := R61["0x1C19D966"]
838 [-]: MOVE      R63 R8       ; R63 := R8
839 [-]: MOVE      R64 R60      ; R64 := R60
840 [-]: CALL      R63 2 2      ; R63 := R63(R64)
841 [-]: LOADK     R64 K12      ; R64 := "_visible"
842 [-]: MOVE      R65 R0       ; R65 := R0
843 [-]: CALL      R61 5 1      ; R61(R62,R63,R64,R65)
844 [-]: FORLOOP   R57 836      ; R57 += R59; if R57 <= R58 then begin PC := 836; R60 := R57 end
845 [-]: TEST      R3 0         ; if not R3 then PC := 888
846 [-]: JMP       888          ; PC := 888
847 [-]: LOADK     R61 K10      ; R61 := 1
848 [-]: LOADK     R62 K101     ; R62 := 9
849 [-]: LOADK     R63 K10      ; R63 := 1
850 [-]: FORPREP   R61 887      ; R61 -= R63; PC := 887
851 [-]: GETGLOBAL R65 K4       ; R65 := mMovie
852 [-]: SELF      R65 R65 K102 ; R66 := R65; R65 := R65["0x7E1F26D7"]
853 [-]: LOADK     R67 K103     ; R67 := "AffinityPanel.Grid.Item"
854 [-]: MOVE      R68 R64      ; R68 := R64
855 [-]: LOADK     R69 K104     ; R69 := ".Info.XPBg"
856 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
857 [-]: GETGLOBAL R68 K105     ; R68 := _G
858 [-]: GETTABLE  R68 R68 K106 ; R68 := R68["UIMaterial_SmoothEdgeNoDepthTest"]
859 [-]: CALL      R65 4 1      ; R65(R66,R67,R68)
860 [-]: GETGLOBAL R65 K4       ; R65 := mMovie
861 [-]: SELF      R65 R65 K102 ; R66 := R65; R65 := R65["0x7E1F26D7"]
862 [-]: LOADK     R67 K103     ; R67 := "AffinityPanel.Grid.Item"
863 [-]: MOVE      R68 R64      ; R68 := R64
864 [-]: LOADK     R69 K107     ; R69 := ".Info.StartXP"
865 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
866 [-]: GETGLOBAL R68 K105     ; R68 := _G
867 [-]: GETTABLE  R68 R68 K106 ; R68 := R68["UIMaterial_SmoothEdgeNoDepthTest"]
868 [-]: CALL      R65 4 1      ; R65(R66,R67,R68)
869 [-]: GETGLOBAL R65 K4       ; R65 := mMovie
870 [-]: SELF      R65 R65 K102 ; R66 := R65; R65 := R65["0x7E1F26D7"]
871 [-]: LOADK     R67 K103     ; R67 := "AffinityPanel.Grid.Item"
872 [-]: MOVE      R68 R64      ; R68 := R64
873 [-]: LOADK     R69 K108     ; R69 := ".Info.XPGain"
874 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
875 [-]: GETGLOBAL R68 K105     ; R68 := _G
876 [-]: GETTABLE  R68 R68 K106 ; R68 := R68["UIMaterial_SmoothEdgeNoDepthTest"]
877 [-]: CALL      R65 4 1      ; R65(R66,R67,R68)
878 [-]: GETGLOBAL R65 K4       ; R65 := mMovie
879 [-]: SELF      R65 R65 K102 ; R66 := R65; R65 := R65["0x7E1F26D7"]
880 [-]: LOADK     R67 K103     ; R67 := "AffinityPanel.Grid.Item"
881 [-]: MOVE      R68 R64      ; R68 := R64
882 [-]: LOADK     R69 K109     ; R69 := ".Info.XPBonus"
883 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
884 [-]: GETGLOBAL R68 K105     ; R68 := _G
885 [-]: GETTABLE  R68 R68 K106 ; R68 := R68["UIMaterial_SmoothEdgeNoDepthTest"]
886 [-]: CALL      R65 4 1      ; R65(R66,R67,R68)
887 [-]: FORLOOP   R61 851      ; R61 += R63; if R61 <= R62 then begin PC := 851; R64 := R61 end
888 [-]: RETURN    R0 1         ; return 


; Function #74.1:
;
; Name:            
; Defined at line: 3530
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "AffinityPanel.Grid.Item"
  2 [-]: EQ        1 R0 K1      ; if R0 == 1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x9FAED6BC
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
  9 [-]: MOVE      R2 R1        ; R2 := R1
 10 [-]: LOADK     R3 K3        ; R3 := ".Info"
 11 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #74.2:
;
; Name:            
; Defined at line: 3595
; #Upvalues:       6
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: SETTABLE  R0 K0 K1     ; R0["IconOverride"] := nil
  2 [-]: GETGLOBAL R11 K2       ; R11 := 0x400E7765
  3 [-]: MOVE      R12 R1       ; R12 := R1
  4 [-]: CALL      R11 2 2      ; R11 := R11(R12)
  5 [-]: TEST      R11 1        ; if R11 then PC := 150
  6 [-]: JMP       150          ; PC := 150
  7 [-]: GETGLOBAL R11 K2       ; R11 := 0x400E7765
  8 [-]: GETUPVAL  R12 U0       ; R12 := U0
  9 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 10 [-]: TEST      R11 1        ; if R11 then PC := 150
 11 [-]: JMP       150          ; PC := 150
 12 [-]: GETTABLE  R11 R1 K3    ; R11 := R1["NORMAL"]
 13 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 14 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["LOT_SENTINEL"]
 15 [-]: EQ        0 R3 R12     ; if R3 ~= R12 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETTABLE  R11 R1 K6    ; R11 := R1["SENTINEL"]
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 20 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["LOT_ARCHWING"]
 21 [-]: EQ        0 R3 R12     ; if R3 ~= R12 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETTABLE  R11 R1 K8    ; R11 := R1["ARCHWING"]
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 26 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["LOT_OPERATOR"]
 27 [-]: EQ        0 R3 R12     ; if R3 ~= R12 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETTABLE  R11 R1 K10   ; R11 := R1["OPERATOR"]
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 32 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["LOT_KDRIVE"]
 33 [-]: EQ        0 R3 R12     ; if R3 ~= R12 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: GETTABLE  R11 R1 K12   ; R11 := R1["KDRIVE"]
 36 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 37 [-]: MOVE      R13 R11      ; R13 := R11
 38 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 39 [-]: TEST      R12 1        ; if R12 then PC := 267
 40 [-]: JMP       267          ; PC := 267
 41 [-]: ADD       R12 R4 K13   ; R12 := R4 + 1
 42 [-]: GETTABLE  R12 R11 R12  ; R12 := R11[R12]
 43 [-]: GETGLOBAL R13 K2       ; R13 := 0x400E7765
 44 [-]: MOVE      R14 R12      ; R14 := R12
 45 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 46 [-]: TEST      R13 1        ; if R13 then PC := 267
 47 [-]: JMP       267          ; PC := 267
 48 [-]: GETUPVAL  R13 U0       ; R13 := U0
 49 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13["0x62FBC1B8"]
 50 [-]: GETGLOBAL R15 K15      ; R15 := 0x2C00D429
 51 [-]: GETTABLE  R16 R12 K16  ; R16 := R12["ItemType"]
 52 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 53 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 54 [-]: MOVE      R6 R13       ; R6 := R13
 55 [-]: GETGLOBAL R13 K15      ; R13 := 0x2C00D429
 56 [-]: GETTABLE  R14 R12 K17  ; R14 := R12["FocusLens"]
 57 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 58 [-]: MOVE      R7 R13       ; R7 := R13
 59 [-]: GETTABLE  R8 R12 K18   ; R8 := R12["Expiry"]
 60 [-]: GETGLOBAL R13 K2       ; R13 := 0x400E7765
 61 [-]: MOVE      R14 R6       ; R14 := R6
 62 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 63 [-]: TEST      R13 1        ; if R13 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: GETTABLE  R10 R12 K19  ; R10 := R12["LocTag"]
 66 [-]: GETGLOBAL R13 K2       ; R13 := 0x400E7765
 67 [-]: GETTABLE  R14 R12 K20  ; R14 := R12["Texture"]
 68 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 69 [-]: TEST      R13 1        ; if R13 then PC := 75
 70 [-]: JMP       75           ; PC := 75
 71 [-]: GETGLOBAL R13 K15      ; R13 := 0x2C00D429
 72 [-]: GETTABLE  R14 R12 K20  ; R14 := R12["Texture"]
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: SETTABLE  R0 K0 R13    ; R0["IconOverride"] := R13
 75 [-]: GETGLOBAL R13 K2       ; R13 := 0x400E7765
 76 [-]: MOVE      R14 R6       ; R14 := R6
 77 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 78 [-]: TEST      R13 1        ; if R13 then PC := 267
 79 [-]: JMP       267          ; PC := 267
 80 [-]: GETTABLE  R13 R12 K21  ; R13 := R12["WeaponUpgrades"]
 81 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 267
 82 [-]: JMP       267          ; PC := 267
 83 [-]: SELF      R13 R6 K22   ; R14 := R6; R13 := R6["0x3077BE70"]
 84 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 85 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13["0x8B598ED4"]
 86 [-]: GETUPVAL  R15 U1       ; R15 := U1
 87 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 88 [-]: TEST      R13 1        ; if R13 then PC := 267
 89 [-]: JMP       267          ; PC := 267
 90 [-]: GETUPVAL  R13 U2       ; R13 := U2
 91 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["0xF81722A2"]
 92 [-]: SELF      R14 R6 K22   ; R15 := R6; R14 := R6["0x3077BE70"]
 93 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 94 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14["0x8B598ED4"]
 95 [-]: GETUPVAL  R16 U3       ; R16 := U3
 96 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 97 [-]: GETGLOBAL R15 K4       ; R15 := Lotus_Game
 98 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["ArmRight"]
 99 [-]: GETUPVAL  R16 U2       ; R16 := U2
100 [-]: GETTABLE  R16 R16 K24  ; R16 := R16["0xF81722A2"]
101 [-]: GETGLOBAL R17 K4       ; R17 := Lotus_Game
102 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["SUIT_SLOT"]
103 [-]: EQ        1 R4 R17     ; if R4 == R17 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R17 R0       ; R17 := R0
106 [-]: MOVE      R17 R1       ; R17 := R1
107 [-]: GETGLOBAL R18 K4       ; R18 := Lotus_Game
108 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["BodySkin"]
109 [-]: GETGLOBAL R19 K4       ; R19 := Lotus_Game
110 [-]: GETTABLE  R19 R19 K28  ; R19 := R19["Helmet"]
111 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
112 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
113 [-]: LOADK     R14 K13      ; R14 := 1
114 [-]: GETTABLE  R15 R12 K21  ; R15 := R12["WeaponUpgrades"]
115 [-]: LEN       R15 R15      ; R15 := # R15
116 [-]: LOADK     R16 K13      ; R16 := 1
117 [-]: FORPREP   R14 148      ; R14 -= R16; PC := 148
118 [-]: GETGLOBAL R18 K15      ; R18 := 0x2C00D429
119 [-]: GETTABLE  R19 R12 K21  ; R19 := R12["WeaponUpgrades"]
120 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
121 [-]: CALL      R18 2 2      ; R18 := R18(R19)
122 [-]: GETGLOBAL R19 K2       ; R19 := 0x400E7765
123 [-]: MOVE      R20 R18      ; R20 := R18
124 [-]: CALL      R19 2 2      ; R19 := R19(R20)
125 [-]: TEST      R19 1        ; if R19 then PC := 148
126 [-]: JMP       148          ; PC := 148
127 [-]: SELF      R19 R18 K23  ; R20 := R18; R19 := R18["0x8B598ED4"]
128 [-]: GETGLOBAL R21 K29      ; R21 := gLotusSuitCustomizationType
129 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
130 [-]: TEST      R19 0        ; if not R19 then PC := 148
131 [-]: JMP       148          ; PC := 148
132 [-]: GETUPVAL  R19 U0       ; R19 := U0
133 [-]: SELF      R19 R19 K14  ; R20 := R19; R19 := R19["0x62FBC1B8"]
134 [-]: MOVE      R21 R18      ; R21 := R18
135 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
136 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
137 [-]: MOVE      R21 R19      ; R21 := R19
138 [-]: CALL      R20 2 2      ; R20 := R20(R21)
139 [-]: TEST      R20 1        ; if R20 then PC := 148
140 [-]: JMP       148          ; PC := 148
141 [-]: SELF      R20 R19 K30  ; R21 := R19; R20 := R19["0xD2305994"]
142 [-]: MOVE      R22 R13      ; R22 := R13
143 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
144 [-]: TEST      R20 0        ; if not R20 then PC := 148
145 [-]: JMP       148          ; PC := 148
146 [-]: MOVE      R9 R19       ; R9 := R19
147 [-]: JMP       267          ; PC := 267
148 [-]: FORLOOP   R14 118      ; R14 += R16; if R14 <= R15 then begin PC := 118; R17 := R14 end
149 [-]: JMP       267          ; PC := 267
150 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
151 [-]: MOVE      R21 R2       ; R21 := R2
152 [-]: CALL      R20 2 2      ; R20 := R20(R21)
153 [-]: TEST      R20 0        ; if not R20 then PC := 160
154 [-]: JMP       160          ; PC := 160
155 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
156 [-]: MOVE      R21 R5       ; R21 := R5
157 [-]: CALL      R20 2 2      ; R20 := R20(R21)
158 [-]: TEST      R20 1        ; if R20 then PC := 267
159 [-]: JMP       267          ; PC := 267
160 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
161 [-]: MOVE      R21 R5       ; R21 := R5
162 [-]: CALL      R20 2 2      ; R20 := R20(R21)
163 [-]: TEST      R20 1        ; if R20 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: MOVE      R6 R5        ; R6 := R5
166 [-]: JMP       175          ; PC := 175
167 [-]: SELF      R20 R2 K31   ; R21 := R2; R20 := R2["0x328DFD71"]
168 [-]: GETUPVAL  R22 U4       ; R22 := U4
169 [-]: SELF      R22 R22 K32  ; R23 := R22; R22 := R22["0x30BDE7F"]
170 [-]: CALL      R22 2 2      ; R22 := R22(R23)
171 [-]: MOVE      R23 R3       ; R23 := R3
172 [-]: MOVE      R24 R4       ; R24 := R4
173 [-]: CALL      R20 5 2      ; R20 := R20(R21,R22,R23,R24)
174 [-]: MOVE      R6 R20       ; R6 := R20
175 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
176 [-]: MOVE      R21 R6       ; R21 := R6
177 [-]: CALL      R20 2 2      ; R20 := R20(R21)
178 [-]: TEST      R20 1        ; if R20 then PC := 227
179 [-]: JMP       227          ; PC := 227
180 [-]: SELF      R20 R6 K23   ; R21 := R6; R20 := R6["0x8B598ED4"]
181 [-]: GETUPVAL  R22 U1       ; R22 := U1
182 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
183 [-]: TEST      R20 1        ; if R20 then PC := 227
184 [-]: JMP       227          ; PC := 227
185 [-]: SELF      R20 R6 K33   ; R21 := R6; R20 := R6["0x2CE62326"]
186 [-]: CALL      R20 2 2      ; R20 := R20(R21)
187 [-]: TEST      R20 0        ; if not R20 then PC := 192
188 [-]: JMP       192          ; PC := 192
189 [-]: SELF      R20 R6 K33   ; R21 := R6; R20 := R6["0x2CE62326"]
190 [-]: CALL      R20 2 2      ; R20 := R20(R21)
191 [-]: MOVE      R6 R20       ; R6 := R20
192 [-]: GETUPVAL  R20 U2       ; R20 := U2
193 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["0xF81722A2"]
194 [-]: SELF      R21 R6 K23   ; R22 := R6; R21 := R6["0x8B598ED4"]
195 [-]: GETUPVAL  R23 U3       ; R23 := U3
196 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
197 [-]: GETGLOBAL R22 K4       ; R22 := Lotus_Game
198 [-]: GETTABLE  R22 R22 K25  ; R22 := R22["ArmRight"]
199 [-]: GETUPVAL  R23 U2       ; R23 := U2
200 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["0xF81722A2"]
201 [-]: GETGLOBAL R24 K4       ; R24 := Lotus_Game
202 [-]: GETTABLE  R24 R24 K26  ; R24 := R24["SUIT_SLOT"]
203 [-]: EQ        1 R4 R24     ; if R4 == R24 then PC := 206
204 [-]: JMP       206          ; PC := 206
205 [-]: MOVE      R24 R0       ; R24 := R0
206 [-]: MOVE      R24 R1       ; R24 := R1
207 [-]: GETGLOBAL R25 K4       ; R25 := Lotus_Game
208 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["BodySkin"]
209 [-]: GETGLOBAL R26 K4       ; R26 := Lotus_Game
210 [-]: GETTABLE  R26 R26 K28  ; R26 := R26["Helmet"]
211 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
212 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
213 [-]: SELF      R21 R6 K34   ; R22 := R6; R21 := R6["0xAFA67B2D"]
214 [-]: CALL      R21 2 2      ; R21 := R21(R22)
215 [-]: SELF      R22 R21 K35  ; R23 := R21; R22 := R21["0xA11BA586"]
216 [-]: MOVE      R24 R20      ; R24 := R20
217 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
218 [-]: GETGLOBAL R23 K2       ; R23 := 0x400E7765
219 [-]: MOVE      R24 R22      ; R24 := R22
220 [-]: CALL      R23 2 2      ; R23 := R23(R24)
221 [-]: TEST      R23 1        ; if R23 then PC := 227
222 [-]: JMP       227          ; PC := 227
223 [-]: GETGLOBAL R23 K36      ; R23 := 0x7C282057
224 [-]: MOVE      R24 R22      ; R24 := R22
225 [-]: CALL      R23 2 2      ; R23 := R23(R24)
226 [-]: MOVE      R9 R23       ; R9 := R23
227 [-]: GETUPVAL  R23 U4       ; R23 := U4
228 [-]: SELF      R23 R23 K32  ; R24 := R23; R23 := R23["0x30BDE7F"]
229 [-]: CALL      R23 2 2      ; R23 := R23(R24)
230 [-]: SELF      R23 R23 K37  ; R24 := R23; R23 := R23["0x6200B095"]
231 [-]: MOVE      R25 R3       ; R25 := R3
232 [-]: MOVE      R26 R4       ; R26 := R4
233 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
234 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
235 [-]: MOVE      R25 R23      ; R25 := R23
236 [-]: CALL      R24 2 2      ; R24 := R24(R25)
237 [-]: TEST      R24 1        ; if R24 then PC := 267
238 [-]: JMP       267          ; PC := 267
239 [-]: GETTABLE  R7 R23 K38   ; R7 := R23["mFocusLens"]
240 [-]: GETGLOBAL R24 K4       ; R24 := Lotus_Game
241 [-]: GETTABLE  R24 R24 K39  ; R24 := R24["NUM_NORMAL_LOADOUT_SLOTS"]
242 [-]: LE        0 R24 R4     ; if R24 > R4 then PC := 267
243 [-]: JMP       267          ; PC := 267
244 [-]: GETTABLE  R24 R23 K40  ; R24 := R23["mItemType"]
245 [-]: SETTABLE  R0 K16 R24   ; R0["ItemType"] := R24
246 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
247 [-]: MOVE      R25 R6       ; R25 := R6
248 [-]: CALL      R24 2 2      ; R24 := R24(R25)
249 [-]: TEST      R24 0        ; if not R24 then PC := 267
250 [-]: JMP       267          ; PC := 267
251 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
252 [-]: GETTABLE  R25 R0 K16   ; R25 := R0["ItemType"]
253 [-]: CALL      R24 2 2      ; R24 := R24(R25)
254 [-]: TEST      R24 1        ; if R24 then PC := 267
255 [-]: JMP       267          ; PC := 267
256 [-]: GETGLOBAL R24 K36      ; R24 := 0x7C282057
257 [-]: GETTABLE  R25 R0 K16   ; R25 := R0["ItemType"]
258 [-]: CALL      R24 2 2      ; R24 := R24(R25)
259 [-]: SELF      R25 R24 K41  ; R26 := R24; R25 := R24["0x616C74B6"]
260 [-]: CALL      R25 2 2      ; R25 := R25(R26)
261 [-]: SELF      R25 R25 K42  ; R26 := R25; R25 := R25["0x5EC7A3D2"]
262 [-]: CALL      R25 2 2      ; R25 := R25(R26)
263 [-]: MOVE      R10 R25      ; R10 := R25
264 [-]: SELF      R25 R24 K43  ; R26 := R24; R25 := R24["0xF1A9732E"]
265 [-]: CALL      R25 2 2      ; R25 := R25(R26)
266 [-]: SETTABLE  R0 K0 R25    ; R0["IconOverride"] := R25
267 [-]: SETTABLE  R0 K44 R6    ; R0["Item"] := R6
268 [-]: GETGLOBAL R25 K2       ; R25 := 0x400E7765
269 [-]: MOVE      R26 R9       ; R26 := R9
270 [-]: CALL      R25 2 2      ; R25 := R25(R26)
271 [-]: TEST      R25 1        ; if R25 then PC := 277
272 [-]: JMP       277          ; PC := 277
273 [-]: SELF      R25 R9 K43   ; R26 := R9; R25 := R9["0xF1A9732E"]
274 [-]: CALL      R25 2 2      ; R25 := R25(R26)
275 [-]: SETTABLE  R0 K0 R25    ; R0["IconOverride"] := R25
276 [-]: JMP       297          ; PC := 297
277 [-]: GETGLOBAL R25 K2       ; R25 := 0x400E7765
278 [-]: MOVE      R26 R6       ; R26 := R6
279 [-]: CALL      R25 2 2      ; R25 := R25(R26)
280 [-]: TEST      R25 1        ; if R25 then PC := 297
281 [-]: JMP       297          ; PC := 297
282 [-]: SELF      R25 R6 K23   ; R26 := R6; R25 := R6["0x8B598ED4"]
283 [-]: GETGLOBAL R27 K45      ; R27 := gLotusWeaponType
284 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
285 [-]: TEST      R25 0        ; if not R25 then PC := 297
286 [-]: JMP       297          ; PC := 297
287 [-]: SELF      R25 R6 K46   ; R26 := R6; R25 := R6["0x3180ADE8"]
288 [-]: CALL      R25 2 2      ; R25 := R25(R26)
289 [-]: TEST      R25 0        ; if not R25 then PC := 297
290 [-]: JMP       297          ; PC := 297
291 [-]: GETUPVAL  R25 U5       ; R25 := U5
292 [-]: GETTABLE  R25 R25 K47  ; R25 := R25["0x5957FFE7"]
293 [-]: SELF      R26 R6 K48   ; R27 := R6; R26 := R6["0x64F4B16D"]
294 [-]: CALL      R26 2 0      ; R26,... := R26(R27)
295 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
296 [-]: SETTABLE  R0 K0 R25    ; R0["IconOverride"] := R25
297 [-]: SETTABLE  R0 K49 R7    ; R0["Lens"] := R7
298 [-]: SETTABLE  R0 K18 R8    ; R0["Expiry"] := R8
299 [-]: TEST      R10 0        ; if not R10 then PC := 302
300 [-]: JMP       302          ; PC := 302
301 [-]: SETTABLE  R0 K19 R10   ; R0["LocTag"] := R10
302 [-]: RETURN    R0 1         ; return 


; Function #74.3:
;
; Name:            
; Defined at line: 3722
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Lens"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R3 K2        ; R3 := 0
  7 [-]: RETURN    R3 2         ; return R3
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0xC919C32B"]
 10 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Lens"]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: GETUPVAL  R4 U1        ; R4 := U1
 13 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0xD0416D28"]
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: MOVE      R7 R2        ; R7 := R2
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: GETUPVAL  R5 U2        ; R5 := U2
 18 [-]: GETTABLE  R6 R3 K5     ; R6 := R3["PolarityType"]
 19 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 20 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETUPVAL  R5 U2        ; R5 := U2
 23 [-]: GETTABLE  R6 R3 K5     ; R6 := R3["PolarityType"]
 24 [-]: SETTABLE  R5 R6 K2     ; R5[R6] := 0
 25 [-]: GETUPVAL  R5 U2        ; R5 := U2
 26 [-]: GETTABLE  R6 R3 K5     ; R6 := R3["PolarityType"]
 27 [-]: GETUPVAL  R7 U2        ; R7 := U2
 28 [-]: GETTABLE  R8 R3 K5     ; R8 := R3["PolarityType"]
 29 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 30 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 31 [-]: SETTABLE  R5 R6 R7     ; R5[R6] := R7
 32 [-]: RETURN    R4 2         ; return R4
 33 [-]: RETURN    R0 1         ; return 


; Function #74.4:
;
; Name:            
; Defined at line: 3741
; #Upvalues:       8
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R4 0 1       ; R4 := {}
  2 [-]: SETTABLE  R4 K0 K1     ; R4["Show"] := "0x0"
  3 [-]: GETUPVAL  R5 U0        ; R5 := U0
  4 [-]: MOVE      R6 R4        ; R6 := R4
  5 [-]: GETUPVAL  R7 U1        ; R7 := U1
  6 [-]: MOVE      R8 R2        ; R8 := R2
  7 [-]: MOVE      R9 R0        ; R9 := R0
  8 [-]: MOVE      R10 R1       ; R10 := R1
  9 [-]: MOVE      R11 R3       ; R11 := R3
 10 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 11 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
 12 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["Item"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: TEST      R5 0         ; if not R5 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
 17 [-]: GETTABLE  R6 R4 K4     ; R6 := R4["ItemType"]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: TEST      R5 1         ; if R5 then PC := 29
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETUPVAL  R5 U2        ; R5 := U2
 22 [-]: MOVE      R6 R0        ; R6 := R0
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 25 [-]: TEST      R5 1         ; if R5 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETUPVAL  R5 U3        ; R5 := U3
 28 [-]: JMP       31           ; PC := 31
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: SETTABLE  R4 K0 R5     ; R4["Show"] := R5
 32 [-]: GETTABLE  R5 R4 K0     ; R5 := R4["Show"]
 33 [-]: TEST      R5 0         ; if not R5 then PC := 64
 34 [-]: JMP       64           ; PC := 64
 35 [-]: GETUPVAL  R5 U4        ; R5 := U4
 36 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 37 [-]: GETUPVAL  R6 U5        ; R6 := U5
 38 [-]: LOADK     R7 K7        ; R7 := 0
 39 [-]: GETUPVAL  R8 U6        ; R8 := U6
 40 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8["0xFECF1DDF"]
 41 [-]: MOVE      R10 R0       ; R10 := R0
 42 [-]: MOVE      R11 R1       ; R11 := R1
 43 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 44 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 45 [-]: SETTABLE  R4 K5 R5     ; R4["XpBonus"] := R5
 46 [-]: GETUPVAL  R5 U6        ; R5 := U6
 47 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x70B145D3"]
 48 [-]: MOVE      R7 R0        ; R7 := R0
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 51 [-]: SETTABLE  R4 K9 R5     ; R4["XpGain"] := R5
 52 [-]: GETUPVAL  R5 U6        ; R5 := U6
 53 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5["0x174E790"]
 54 [-]: MOVE      R7 R0        ; R7 := R0
 55 [-]: MOVE      R8 R1        ; R8 := R1
 56 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 57 [-]: SETTABLE  R4 K11 R5    ; R4["StartXp"] := R5
 58 [-]: GETUPVAL  R5 U7        ; R5 := U7
 59 [-]: MOVE      R6 R4        ; R6 := R4
 60 [-]: MOVE      R7 R0        ; R7 := R0
 61 [-]: MOVE      R8 R1        ; R8 := R1
 62 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 63 [-]: SETTABLE  R4 K13 R5    ; R4["FocusXp"] := R5
 64 [-]: RETURN    R4 2         ; return R4
 65 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 3982
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R0 R1 K2     ; R0 := R1["mMissionCompleteCreditBonus"]
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x93B1256B
 10 [-]: LOADK     R2 K4        ; R2 := "[EndOfMatch.lua GetRewardCreditsToShow] Mission Complete Bonus: "
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mMissionCompleteCreditBonus"]
 13 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3994
; #Upvalues:       17
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  55

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x17028E8F"]
  3 [-]: LOADK     R3 K2        ; R3 := "RewardsPanel.ItemsObtained.text"
  4 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/EndOfMission_Items"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: GETGLOBAL R1 K4        ; R1 := gRegion
  7 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x372CB914"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: LOADNIL   R2 R3        ; R2 := R3 := nil
 10 [-]: GETGLOBAL R4 K6        ; R4 := 0x400E7765
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 26
 14 [-]: JMP       26           ; PC := 26
 15 [-]: SELF      R4 R1 K7     ; R5 := R1; R4 := R1["0x80B14403"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: MOVE      R2 R4        ; R2 := R4
 18 [-]: SELF      R4 R1 K8     ; R5 := R1; R4 := R1["0x8F7453D9"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: MOVE      R3 R4        ; R3 := R4
 21 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x93E76705"]
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: MOVE      R2 R4        ; R2 := R4
 26 [-]: LOADNIL   R4 R4        ; R4 := nil
 27 [-]: GETGLOBAL R5 K6        ; R5 := 0x400E7765
 28 [-]: MOVE      R6 R2        ; R6 := R2
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: TEST      R5 1         ; if R5 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: SELF      R5 R2 K10    ; R6 := R2; R5 := R2["0xADE7BF82"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: MOVE      R4 R5        ; R4 := R5
 35 [-]: GETGLOBAL R5 K6        ; R5 := 0x400E7765
 36 [-]: MOVE      R6 R4        ; R6 := R4
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: TEST      R5 0         ; if not R5 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETGLOBAL R5 K11       ; R5 := 0x93B1256B
 41 [-]: LOADK     R6 K12       ; R6 := "Cannot PopulateRewardsPanel local player! Avatar was NULL or InventoryController was wrong type"
 42 [-]: CALL      R5 2 1       ; R5(R6)
 43 [-]: RETURN    R0 1         ; return 
 44 [-]: MOVE      R5 R0        ; R5 := R0
 45 [-]: GETUPVAL  R6 U0        ; R6 := U0
 46 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["0x87D2274C"]
 47 [-]: CALL      R6 1 2       ; R6 := R6()
 48 [-]: TEST      R6 0         ; if not R6 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETUPVAL  R6 U1        ; R6 := U1
 51 [-]: CALL      R6 1 2       ; R6 := R6()
 52 [-]: TEST      R6 1         ; if R6 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETUPVAL  R6 U2        ; R6 := U2
 55 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["isPvp"]
 56 [-]: TEST      R6 1         ; if R6 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: GETGLOBAL R6 K15       ; R6 := gGameRules
 59 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6["0xD1D9574D"]
 60 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 61 [-]: MOVE      R5 R6        ; R5 := R6
 62 [-]: TEST      R0 1         ; if R0 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: TEST      R5 0         ; if not R5 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: RETURN    R0 1         ; return 
 67 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 68 [-]: MOVE      R6 R3        ; R6 := R3
 69 [-]: SELF      R6 R4 K17    ; R7 := R4; R6 := R4["0x14468C58"]
 70 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 71 [-]: MOVE      R6 R4        ; R6 := R4
 72 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 73 [-]: GETUPVAL  R7 U4        ; R7 := U4
 74 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 75 [-]: TEST      R6 0         ; if not R6 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 78 [-]: MOVE      R6 R4        ; R6 := R4
 79 [-]: GETUPVAL  R6 U6        ; R6 := U6
 80 [-]: CALL      R6 1 2       ; R6 := R6()
 81 [-]: MOVE      R6 R5        ; R6 := R5
 82 [-]: SELF      R6 R4 K18    ; R7 := R4; R6 := R4["0xE1369487"]
 83 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 84 [-]: MOVE      R6 R7        ; R6 := R7
 85 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 86 [-]: GETUPVAL  R7 U7        ; R7 := U7
 87 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 88 [-]: TEST      R6 0         ; if not R6 then PC := 92
 89 [-]: JMP       92           ; PC := 92
 90 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 91 [-]: MOVE      R6 R7        ; R6 := R7
 92 [-]: SELF      R6 R4 K19    ; R7 := R4; R6 := R4["0x1715B359"]
 93 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 94 [-]: LT        0 K20 R6     ; if 0 >= R6 then PC := 109
 95 [-]: JMP       109          ; PC := 109
 96 [-]: GETGLOBAL R7 K21       ; R7 := _T
 97 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["eomScreenMode"]
 98 [-]: GETUPVAL  R8 U8        ; R8 := U8
 99 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["ACTUAL_EOM"]
100 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 109
101 [-]: JMP       109          ; PC := 109
102 [-]: GETGLOBAL R7 K24       ; R7 := table
103 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["0xE6450C9D"]
104 [-]: GETUPVAL  R8 U7        ; R8 := U7
105 [-]: NEWTABLE  R9 0 2       ; R9 := {}
106 [-]: SETTABLE  R9 K26 K27   ; R9["mIsMystery"] := "0x1"
107 [-]: SETTABLE  R9 K28 R6    ; R9["mItemCount"] := R6
108 [-]: CALL      R7 3 1       ; R7(R8,R9)
109 [-]: GETUPVAL  R7 U7        ; R7 := U7
110 [-]: LEN       R7 R7        ; R7 := # R7
111 [-]: LOADK     R8 K29       ; R8 := 1
112 [-]: LOADK     R9 K30       ; R9 := -1
113 [-]: FORPREP   R7 141       ; R7 -= R9; PC := 141
114 [-]: GETUPVAL  R11 U7       ; R11 := U7
115 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
116 [-]: GETTABLE  R12 R11 K28  ; R12 := R11["mItemCount"]
117 [-]: LE        1 R12 K20    ; if R12 <= 0 then PC := 136
118 [-]: JMP       136          ; PC := 136
119 [-]: GETGLOBAL R12 K21      ; R12 := _T
120 [-]: GETTABLE  R12 R12 K22  ; R12 := R12["eomScreenMode"]
121 [-]: GETUPVAL  R13 U8       ; R13 := U8
122 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["ACTUAL_EOM"]
123 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 141
124 [-]: JMP       141          ; PC := 141
125 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
126 [-]: GETTABLE  R13 R11 K31  ; R13 := R11["mItemType"]
127 [-]: CALL      R12 2 2      ; R12 := R12(R13)
128 [-]: TEST      R12 1        ; if R12 then PC := 141
129 [-]: JMP       141          ; PC := 141
130 [-]: GETTABLE  R12 R11 K31  ; R12 := R11["mItemType"]
131 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12["0x8B598ED4"]
132 [-]: GETUPVAL  R14 U9       ; R14 := U9
133 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
134 [-]: TEST      R12 0        ; if not R12 then PC := 141
135 [-]: JMP       141          ; PC := 141
136 [-]: GETGLOBAL R12 K24      ; R12 := table
137 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["0xCDB1FD5E"]
138 [-]: GETUPVAL  R13 U7       ; R13 := U7
139 [-]: MOVE      R14 R10      ; R14 := R10
140 [-]: CALL      R12 3 1      ; R12(R13,R14)
141 [-]: FORLOOP   R7 114       ; R7 += R9; if R7 <= R8 then begin PC := 114; R10 := R7 end
142 [-]: LOADK     R12 K20      ; R12 := 0
143 [-]: LOADK     R13 K20      ; R13 := 0
144 [-]: LOADK     R14 K20      ; R14 := 0
145 [-]: GETGLOBAL R15 K6       ; R15 := 0x400E7765
146 [-]: MOVE      R16 R3       ; R16 := R3
147 [-]: CALL      R15 2 2      ; R15 := R15(R16)
148 [-]: TEST      R15 1        ; if R15 then PC := 241
149 [-]: JMP       241          ; PC := 241
150 [-]: SELF      R15 R3 K34   ; R16 := R3; R15 := R3["0x8DB5D01F"]
151 [-]: CALL      R15 2 2      ; R15 := R15(R16)
152 [-]: SELF      R16 R15 K17  ; R17 := R15; R16 := R15["0x14468C58"]
153 [-]: CALL      R16 2 2      ; R16 := R16(R17)
154 [-]: SELF      R17 R15 K18  ; R18 := R15; R17 := R15["0xE1369487"]
155 [-]: CALL      R17 2 2      ; R17 := R17(R18)
156 [-]: SELF      R18 R15 K35  ; R19 := R15; R18 := R15["0xB028C957"]
157 [-]: CALL      R18 2 2      ; R18 := R18(R19)
158 [-]: MOVE      R12 R18      ; R12 := R18
159 [-]: SELF      R18 R15 K36  ; R19 := R15; R18 := R15["0xE35D7BA5"]
160 [-]: MOVE      R20 R0       ; R20 := R0
161 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
162 [-]: MOVE      R13 R18      ; R13 := R18
163 [-]: SELF      R18 R15 K36  ; R19 := R15; R18 := R15["0xE35D7BA5"]
164 [-]: MOVE      R20 R1       ; R20 := R1
165 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
166 [-]: MOVE      R14 R18      ; R14 := R18
167 [-]: LOADK     R18 K29      ; R18 := 1
168 [-]: LEN       R19 R16      ; R19 := # R16
169 [-]: LOADK     R20 K29      ; R20 := 1
170 [-]: FORPREP   R18 203      ; R18 -= R20; PC := 203
171 [-]: MOVE      R22 R0       ; R22 := R0
172 [-]: LOADK     R23 K29      ; R23 := 1
173 [-]: GETUPVAL  R24 U4       ; R24 := U4
174 [-]: LEN       R24 R24      ; R24 := # R24
175 [-]: LOADK     R25 K29      ; R25 := 1
176 [-]: FORPREP   R23 195      ; R23 -= R25; PC := 195
177 [-]: GETUPVAL  R27 U4       ; R27 := U4
178 [-]: GETTABLE  R27 R27 R26  ; R27 := R27[R26]
179 [-]: GETTABLE  R27 R27 K31  ; R27 := R27["mItemType"]
180 [-]: GETTABLE  R28 R16 R21  ; R28 := R16[R21]
181 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["mItemType"]
182 [-]: EQ        0 R27 R28    ; if R27 ~= R28 then PC := 195
183 [-]: JMP       195          ; PC := 195
184 [-]: GETUPVAL  R27 U4       ; R27 := U4
185 [-]: GETTABLE  R27 R27 R26  ; R27 := R27[R26]
186 [-]: GETUPVAL  R28 U4       ; R28 := U4
187 [-]: GETTABLE  R28 R28 R26  ; R28 := R28[R26]
188 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["mItemCount"]
189 [-]: GETTABLE  R29 R16 R21  ; R29 := R16[R21]
190 [-]: GETTABLE  R29 R29 K28  ; R29 := R29["mItemCount"]
191 [-]: ADD       R28 R28 R29  ; R28 := R28 + R29
192 [-]: SETTABLE  R27 K28 R28  ; R27["mItemCount"] := R28
193 [-]: MOVE      R22 R1       ; R22 := R1
194 [-]: JMP       196          ; PC := 196
195 [-]: FORLOOP   R23 177      ; R23 += R25; if R23 <= R24 then begin PC := 177; R26 := R23 end
196 [-]: TEST      R22 1        ; if R22 then PC := 203
197 [-]: JMP       203          ; PC := 203
198 [-]: GETGLOBAL R27 K24      ; R27 := table
199 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["0xE6450C9D"]
200 [-]: GETUPVAL  R28 U4       ; R28 := U4
201 [-]: GETTABLE  R29 R16 R21  ; R29 := R16[R21]
202 [-]: CALL      R27 3 1      ; R27(R28,R29)
203 [-]: FORLOOP   R18 171      ; R18 += R20; if R18 <= R19 then begin PC := 171; R21 := R18 end
204 [-]: LOADK     R27 K29      ; R27 := 1
205 [-]: LEN       R28 R17      ; R28 := # R17
206 [-]: LOADK     R29 K29      ; R29 := 1
207 [-]: FORPREP   R27 240      ; R27 -= R29; PC := 240
208 [-]: MOVE      R31 R0       ; R31 := R0
209 [-]: LOADK     R32 K29      ; R32 := 1
210 [-]: GETUPVAL  R33 U7       ; R33 := U7
211 [-]: LEN       R33 R33      ; R33 := # R33
212 [-]: LOADK     R34 K29      ; R34 := 1
213 [-]: FORPREP   R32 232      ; R32 -= R34; PC := 232
214 [-]: GETUPVAL  R36 U7       ; R36 := U7
215 [-]: GETTABLE  R36 R36 R35  ; R36 := R36[R35]
216 [-]: GETTABLE  R36 R36 K31  ; R36 := R36["mItemType"]
217 [-]: GETTABLE  R37 R17 R30  ; R37 := R17[R30]
218 [-]: GETTABLE  R37 R37 K31  ; R37 := R37["mItemType"]
219 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 232
220 [-]: JMP       232          ; PC := 232
221 [-]: GETUPVAL  R36 U7       ; R36 := U7
222 [-]: GETTABLE  R36 R36 R35  ; R36 := R36[R35]
223 [-]: GETUPVAL  R37 U7       ; R37 := U7
224 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
225 [-]: GETTABLE  R37 R37 K28  ; R37 := R37["mItemCount"]
226 [-]: GETTABLE  R38 R17 R30  ; R38 := R17[R30]
227 [-]: GETTABLE  R38 R38 K28  ; R38 := R38["mItemCount"]
228 [-]: ADD       R37 R37 R38  ; R37 := R37 + R38
229 [-]: SETTABLE  R36 K28 R37  ; R36["mItemCount"] := R37
230 [-]: MOVE      R31 R1       ; R31 := R1
231 [-]: JMP       233          ; PC := 233
232 [-]: FORLOOP   R32 214      ; R32 += R34; if R32 <= R33 then begin PC := 214; R35 := R32 end
233 [-]: TEST      R31 1        ; if R31 then PC := 240
234 [-]: JMP       240          ; PC := 240
235 [-]: GETGLOBAL R36 K24      ; R36 := table
236 [-]: GETTABLE  R36 R36 K25  ; R36 := R36["0xE6450C9D"]
237 [-]: GETUPVAL  R37 U7       ; R37 := U7
238 [-]: GETTABLE  R38 R17 R30  ; R38 := R17[R30]
239 [-]: CALL      R36 3 1      ; R36(R37,R38)
240 [-]: FORLOOP   R27 208      ; R27 += R29; if R27 <= R28 then begin PC := 208; R30 := R27 end
241 [-]: GETGLOBAL R36 K4       ; R36 := gRegion
242 [-]: SELF      R36 R36 K37  ; R37 := R36; R36 := R36["0xB3ABFFBB"]
243 [-]: CALL      R36 2 2      ; R36 := R36(R37)
244 [-]: GETGLOBAL R37 K6       ; R37 := 0x400E7765
245 [-]: MOVE      R38 R36      ; R38 := R36
246 [-]: CALL      R37 2 2      ; R37 := R37(R38)
247 [-]: TEST      R37 1        ; if R37 then PC := 289
248 [-]: JMP       289          ; PC := 289
249 [-]: LEN       R37 R36      ; R37 := # R36
250 [-]: LT        0 K20 R37    ; if 0 >= R37 then PC := 289
251 [-]: JMP       289          ; PC := 289
252 [-]: MOVE      R37 R0       ; R37 := R0
253 [-]: SELF      R38 R4 K38   ; R39 := R4; R38 := R4["0x3AC4BD05"]
254 [-]: MOVE      R40 R0       ; R40 := R0
255 [-]: MOVE      R41 R1       ; R41 := R1
256 [-]: MOVE      R42 R37      ; R42 := R37
257 [-]: CALL      R38 5 2      ; R38 := R38(R39,R40,R41,R42)
258 [-]: GETGLOBAL R39 K6       ; R39 := 0x400E7765
259 [-]: MOVE      R40 R38      ; R40 := R38
260 [-]: CALL      R39 2 2      ; R39 := R39(R40)
261 [-]: TEST      R39 1        ; if R39 then PC := 289
262 [-]: JMP       289          ; PC := 289
263 [-]: LOADK     R39 K29      ; R39 := 1
264 [-]: LEN       R40 R38      ; R40 := # R38
265 [-]: LOADK     R41 K29      ; R41 := 1
266 [-]: FORPREP   R39 288      ; R39 -= R41; PC := 288
267 [-]: GETGLOBAL R43 K6       ; R43 := 0x400E7765
268 [-]: GETTABLE  R44 R38 R42  ; R44 := R38[R42]
269 [-]: GETTABLE  R44 R44 K31  ; R44 := R44["mItemType"]
270 [-]: CALL      R43 2 2      ; R43 := R43(R44)
271 [-]: TEST      R43 1        ; if R43 then PC := 288
272 [-]: JMP       288          ; PC := 288
273 [-]: GETTABLE  R43 R38 R42  ; R43 := R38[R42]
274 [-]: GETTABLE  R43 R43 K28  ; R43 := R43["mItemCount"]
275 [-]: LT        0 K20 R43    ; if 0 >= R43 then PC := 288
276 [-]: JMP       288          ; PC := 288
277 [-]: GETGLOBAL R43 K24      ; R43 := table
278 [-]: GETTABLE  R43 R43 K25  ; R43 := R43["0xE6450C9D"]
279 [-]: GETUPVAL  R44 U3       ; R44 := U3
280 [-]: NEWTABLE  R45 0 2      ; R45 := {}
281 [-]: GETTABLE  R46 R38 R42  ; R46 := R38[R42]
282 [-]: GETTABLE  R46 R46 K31  ; R46 := R46["mItemType"]
283 [-]: SETTABLE  R45 K31 R46  ; R45["mItemType"] := R46
284 [-]: GETTABLE  R46 R38 R42  ; R46 := R38[R42]
285 [-]: GETTABLE  R46 R46 K28  ; R46 := R46["mItemCount"]
286 [-]: SETTABLE  R45 K28 R46  ; R45["mItemCount"] := R46
287 [-]: CALL      R43 3 1      ; R43(R44,R45)
288 [-]: FORLOOP   R39 267      ; R39 += R41; if R39 <= R40 then begin PC := 267; R42 := R39 end
289 [-]: GETUPVAL  R43 U10      ; R43 := U10
290 [-]: GETTABLE  R43 R43 K39  ; R43 := R43["mScore"]
291 [-]: LT        0 K20 R43    ; if 0 >= R43 then PC := 311
292 [-]: JMP       311          ; PC := 311
293 [-]: GETUPVAL  R43 U11      ; R43 := U11
294 [-]: GETUPVAL  R44 U10      ; R44 := U10
295 [-]: GETTABLE  R44 R44 K39  ; R44 := R44["mScore"]
296 [-]: CALL      R43 2 3      ; R43,R44 := R43(R44)
297 [-]: TEST      R43 0        ; if not R43 then PC := 311
298 [-]: JMP       311          ; PC := 311
299 [-]: GETGLOBAL R45 K24      ; R45 := table
300 [-]: GETTABLE  R45 R45 K25  ; R45 := R45["0xE6450C9D"]
301 [-]: GETUPVAL  R46 U12      ; R46 := U12
302 [-]: NEWTABLE  R47 0 5      ; R47 := {}
303 [-]: SETTABLE  R47 K40 R43  ; R47["Name"] := R43
304 [-]: SETTABLE  R47 K41 R44  ; R47["Count"] := R44
305 [-]: GETUPVAL  R48 U13      ; R48 := U13
306 [-]: CALL      R48 1 2      ; R48 := R48()
307 [-]: SETTABLE  R47 K42 R48  ; R47["Icon"] := R48
308 [-]: SETTABLE  R47 K43 K27  ; R47["IconIsSquare"] := "0x1"
309 [-]: SETTABLE  R47 K44 K45  ; R47["Background"] := nil
310 [-]: CALL      R45 3 1      ; R45(R46,R47)
311 [-]: GETGLOBAL R45 K21      ; R45 := _T
312 [-]: GETTABLE  R45 R45 K22  ; R45 := R45["eomScreenMode"]
313 [-]: GETUPVAL  R46 U8       ; R46 := U8
314 [-]: GETTABLE  R46 R46 K46  ; R46 := R46["DETAILED_PREVIEW"]
315 [-]: EQ        1 R45 R46    ; if R45 == R46 then PC := 328
316 [-]: JMP       328          ; PC := 328
317 [-]: GETGLOBAL R45 K21      ; R45 := _T
318 [-]: GETTABLE  R45 R45 K22  ; R45 := R45["eomScreenMode"]
319 [-]: GETUPVAL  R46 U8       ; R46 := U8
320 [-]: GETTABLE  R46 R46 K47  ; R46 := R46["QUICK_PREVIEW"]
321 [-]: EQ        1 R45 R46    ; if R45 == R46 then PC := 328
322 [-]: JMP       328          ; PC := 328
323 [-]: GETUPVAL  R45 U0       ; R45 := U0
324 [-]: GETTABLE  R45 R45 K13  ; R45 := R45["0x87D2274C"]
325 [-]: CALL      R45 1 2      ; R45 := R45()
326 [-]: TEST      R45 1        ; if R45 then PC := 428
327 [-]: JMP       428          ; PC := 428
328 [-]: LOADK     R45 K20      ; R45 := 0
329 [-]: GETUPVAL  R46 U0       ; R46 := U0
330 [-]: GETTABLE  R46 R46 K13  ; R46 := R46["0x87D2274C"]
331 [-]: CALL      R46 1 2      ; R46 := R46()
332 [-]: TEST      R46 1        ; if R46 then PC := 337
333 [-]: JMP       337          ; PC := 337
334 [-]: GETUPVAL  R46 U14      ; R46 := U14
335 [-]: CALL      R46 1 2      ; R46 := R46()
336 [-]: ADD       R45 R45 R46  ; R45 := R45 + R46
337 [-]: SELF      R46 R4 K35   ; R47 := R4; R46 := R4["0xB028C957"]
338 [-]: CALL      R46 2 2      ; R46 := R46(R47)
339 [-]: ADD       R46 R45 R46  ; R46 := R45 + R46
340 [-]: ADD       R45 R46 R12  ; R45 := R46 + R12
341 [-]: LT        0 K20 R45    ; if 0 >= R45 then PC := 362
342 [-]: JMP       362          ; PC := 362
343 [-]: GETGLOBAL R46 K48      ; R46 := string
344 [-]: GETTABLE  R46 R46 K49  ; R46 := R46["0x639C642A"]
345 [-]: GETGLOBAL R47 K0       ; R47 := mMovie
346 [-]: SELF      R47 R47 K50  ; R48 := R47; R47 := R47["0x5DB0BD4"]
347 [-]: LOADK     R49 K51      ; R49 := "/Lotus/Language/Menu/Store_BuyWithCredits"
348 [-]: MOVE      R50 R1       ; R50 := R1
349 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
350 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
351 [-]: NEWTABLE  R47 0 4      ; R47 := {}
352 [-]: SETTABLE  R47 K40 R46  ; R47["Name"] := R46
353 [-]: SETTABLE  R47 K41 R45  ; R47["Count"] := R45
354 [-]: GETGLOBAL R48 K52      ; R48 := creditsIcon
355 [-]: SETTABLE  R47 K42 R48  ; R47["Icon"] := R48
356 [-]: SETTABLE  R47 K44 K45  ; R47["Background"] := nil
357 [-]: GETGLOBAL R48 K24      ; R48 := table
358 [-]: GETTABLE  R48 R48 K25  ; R48 := R48["0xE6450C9D"]
359 [-]: GETUPVAL  R49 U12      ; R49 := U12
360 [-]: MOVE      R50 R47      ; R50 := R47
361 [-]: CALL      R48 3 1      ; R48(R49,R50)
362 [-]: GETUPVAL  R48 U10      ; R48 := U10
363 [-]: SELF      R49 R4 K36   ; R50 := R4; R49 := R4["0xE35D7BA5"]
364 [-]: MOVE      R51 R0       ; R51 := R0
365 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
366 [-]: ADD       R49 R49 R13  ; R49 := R49 + R13
367 [-]: SETTABLE  R48 K53 R49  ; R48["mFusionPoints"] := R49
368 [-]: GETUPVAL  R48 U10      ; R48 := U10
369 [-]: GETTABLE  R48 R48 K53  ; R48 := R48["mFusionPoints"]
370 [-]: LT        0 K20 R48    ; if 0 >= R48 then PC := 395
371 [-]: JMP       395          ; PC := 395
372 [-]: GETGLOBAL R48 K48      ; R48 := string
373 [-]: GETTABLE  R48 R48 K49  ; R48 := R48["0x639C642A"]
374 [-]: GETGLOBAL R49 K0       ; R49 := mMovie
375 [-]: SELF      R49 R49 K50  ; R50 := R49; R49 := R49["0x5DB0BD4"]
376 [-]: LOADK     R51 K54      ; R51 := "/Lotus/Language/Items/FusionBundle"
377 [-]: MOVE      R52 R1       ; R52 := R1
378 [-]: CALL      R49 4 0      ; R49,... := R49(R50,R51,R52)
379 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
380 [-]: NEWTABLE  R49 0 5      ; R49 := {}
381 [-]: SETTABLE  R49 K40 R48  ; R49["Name"] := R48
382 [-]: GETUPVAL  R50 U10      ; R50 := U10
383 [-]: GETTABLE  R50 R50 K53  ; R50 := R50["mFusionPoints"]
384 [-]: SETTABLE  R49 K41 R50  ; R49["Count"] := R50
385 [-]: GETGLOBAL R50 K55      ; R50 := fusionPointsIcon
386 [-]: SETTABLE  R49 K42 R50  ; R49["Icon"] := R50
387 [-]: SETTABLE  R49 K44 K45  ; R49["Background"] := nil
388 [-]: GETUPVAL  R50 U15      ; R50 := U15
389 [-]: SETTABLE  R49 K56 R50  ; R49["SortPriority"] := R50
390 [-]: GETGLOBAL R50 K24      ; R50 := table
391 [-]: GETTABLE  R50 R50 K25  ; R50 := R50["0xE6450C9D"]
392 [-]: GETUPVAL  R51 U16      ; R51 := U16
393 [-]: MOVE      R52 R49      ; R52 := R49
394 [-]: CALL      R50 3 1      ; R50(R51,R52)
395 [-]: GETUPVAL  R50 U10      ; R50 := U10
396 [-]: SELF      R51 R4 K36   ; R52 := R4; R51 := R4["0xE35D7BA5"]
397 [-]: MOVE      R53 R1       ; R53 := R1
398 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
399 [-]: ADD       R51 R51 R14  ; R51 := R51 + R14
400 [-]: SETTABLE  R50 K57 R51  ; R50["mCrewShipFusionPoints"] := R51
401 [-]: GETUPVAL  R50 U10      ; R50 := U10
402 [-]: GETTABLE  R50 R50 K57  ; R50 := R50["mCrewShipFusionPoints"]
403 [-]: LT        0 K20 R50    ; if 0 >= R50 then PC := 428
404 [-]: JMP       428          ; PC := 428
405 [-]: GETGLOBAL R50 K48      ; R50 := string
406 [-]: GETTABLE  R50 R50 K49  ; R50 := R50["0x639C642A"]
407 [-]: GETGLOBAL R51 K0       ; R51 := mMovie
408 [-]: SELF      R51 R51 K50  ; R52 := R51; R51 := R51["0x5DB0BD4"]
409 [-]: LOADK     R53 K58      ; R53 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
410 [-]: MOVE      R54 R1       ; R54 := R1
411 [-]: CALL      R51 4 0      ; R51,... := R51(R52,R53,R54)
412 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
413 [-]: NEWTABLE  R51 0 5      ; R51 := {}
414 [-]: SETTABLE  R51 K40 R50  ; R51["Name"] := R50
415 [-]: GETUPVAL  R52 U10      ; R52 := U10
416 [-]: GETTABLE  R52 R52 K57  ; R52 := R52["mCrewShipFusionPoints"]
417 [-]: SETTABLE  R51 K41 R52  ; R51["Count"] := R52
418 [-]: GETGLOBAL R52 K59      ; R52 := crewShipFusionPointsIcon
419 [-]: SETTABLE  R51 K42 R52  ; R51["Icon"] := R52
420 [-]: SETTABLE  R51 K44 K45  ; R51["Background"] := nil
421 [-]: GETUPVAL  R52 U15      ; R52 := U15
422 [-]: SETTABLE  R51 K56 R52  ; R51["SortPriority"] := R52
423 [-]: GETGLOBAL R52 K24      ; R52 := table
424 [-]: GETTABLE  R52 R52 K25  ; R52 := R52["0xE6450C9D"]
425 [-]: GETUPVAL  R53 U16      ; R53 := U16
426 [-]: MOVE      R54 R51      ; R54 := R51
427 [-]: CALL      R52 3 1      ; R52(R53,R54)
428 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 4148
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6374FD98
  2 [-]: GETGLOBAL R1 K1        ; R1 := math
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xBCF846DF"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: DIV       R2 R2 K3     ; R2 := R2 / 3
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: LOADK     R2 K4        ; R2 := 1
  8 [-]: LOADK     R3 K3        ; R3 := 3
  9 [-]: TAILCALL  R0 4 0       ; R0,... := R0(R1,R2,R3)
 10 [-]: RETURN    R0 0         ; return R0,...
 11 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 4152
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: EQ        1 R0 K0      ; if R0 == 3 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: LOADK     R2 K1        ; R2 := "RewardsPanel"
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: SUB       R2 K0 R0     ; R2 := 3 - R0
 14 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 15 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x6B7B470B"]
 17 [-]: LOADK     R4 K5        ; R4 := "RewardsPanel.PanelBG"
 18 [-]: LOADK     R5 K6        ; R5 := "_y"
 19 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 20 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 21 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 22 [-]: LOADK     R5 K5        ; R5 := "RewardsPanel.PanelBG"
 23 [-]: LOADK     R6 K7        ; R6 := "_height"
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: ADD       R3 R3 R1     ; R3 := R3 + R1
 26 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 27 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 28 [-]: LOADK     R6 K8        ; R6 := "RewardsPanel.RewardList"
 29 [-]: LOADK     R7 K6        ; R7 := "_y"
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 32 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x6B7B470B"]
 33 [-]: LOADK     R7 K9        ; R7 := "RewardsPanel.ScrollBar"
 34 [-]: LOADK     R8 K6        ; R8 := "_y"
 35 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 36 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 37 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 38 [-]: LOADK     R8 K5        ; R8 := "RewardsPanel.PanelBG"
 39 [-]: LOADK     R9 K6        ; R9 := "_y"
 40 [-]: SUB       R10 R2 R1    ; R10 := R2 - R1
 41 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 42 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 43 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 44 [-]: LOADK     R8 K5        ; R8 := "RewardsPanel.PanelBG"
 45 [-]: LOADK     R9 K7        ; R9 := "_height"
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 48 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 49 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 50 [-]: LOADK     R8 K11       ; R8 := "RewardsPanel.Mask"
 51 [-]: LOADK     R9 K6        ; R9 := "_y"
 52 [-]: SUB       R10 R2 R1    ; R10 := R2 - R1
 53 [-]: ADD       R10 R10 K0   ; R10 := R10 + 3
 54 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 55 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 56 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 57 [-]: LOADK     R8 K11       ; R8 := "RewardsPanel.Mask"
 58 [-]: LOADK     R9 K7        ; R9 := "_height"
 59 [-]: SUB       R10 R3 K12   ; R10 := R3 - 6
 60 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 61 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 62 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 63 [-]: LOADK     R8 K8        ; R8 := "RewardsPanel.RewardList"
 64 [-]: LOADK     R9 K6        ; R9 := "_y"
 65 [-]: SUB       R10 R4 R1    ; R10 := R4 - R1
 66 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 67 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 68 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 69 [-]: LOADK     R8 K9        ; R8 := "RewardsPanel.ScrollBar"
 70 [-]: LOADK     R9 K6        ; R9 := "_y"
 71 [-]: SUB       R10 R5 R1    ; R10 := R5 - R1
 72 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 73 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 74 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 75 [-]: LOADK     R8 K13       ; R8 := "RewardsPanel.SideLights"
 76 [-]: LOADK     R9 K14       ; R9 := "_visible"
 77 [-]: MOVE      R10 R0       ; R10 := R0
 78 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 79 [-]: GETGLOBAL R6 K15       ; R6 := 0x329BDC44
 80 [-]: LOADK     R7 K16       ; R7 := "EE.Interface.Components.Grid"
 81 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 82 [-]: GETTABLE  R7 R6 K17    ; R7 := R6["0x9A7B3F36"]
 83 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
 84 [-]: LOADK     R9 K18       ; R9 := "RewardsPanel.RewardList.Item1"
 85 [-]: LOADNIL   R10 R10      ; R10 := nil
 86 [-]: LOADK     R11 K19      ; R11 := 1
 87 [-]: GETUPVAL  R12 U4       ; R12 := U4
 88 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["0xF81722A2"]
 89 [-]: GETUPVAL  R13 U5       ; R13 := U5
 90 [-]: LT        1 R13 K21    ; if R13 < 7 then PC := 93
 91 [-]: JMP       93           ; PC := 93
 92 [-]: MOVE      R13 R0       ; R13 := R0
 93 [-]: MOVE      R13 R1       ; R13 := R1
 94 [-]: GETUPVAL  R14 U4       ; R14 := U4
 95 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["0xF81722A2"]
 96 [-]: GETUPVAL  R15 U5       ; R15 := U5
 97 [-]: LT        1 R15 K22    ; if R15 < 4 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: MOVE      R15 R0       ; R15 := R0
100 [-]: MOVE      R15 R1       ; R15 := R1
101 [-]: LOADK     R16 K21      ; R16 := 7
102 [-]: LOADK     R17 K23      ; R17 := 5
103 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
104 [-]: LOADK     R15 K22      ; R15 := 4
105 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
106 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
107 [-]: MOVE      R7 R3        ; R7 := R3
108 [-]: GETUPVAL  R7 U3        ; R7 := U3
109 [-]: SETTABLE  R7 K24 K25   ; R7["mColumnSeparation"] := 130
110 [-]: GETUPVAL  R7 U3        ; R7 := U3
111 [-]: SETTABLE  R7 K26 K27   ; R7["mRowSeparation"] := 85
112 [-]: GETUPVAL  R7 U3        ; R7 := U3
113 [-]: GETUPVAL  R8 U3        ; R8 := U3
114 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["mInitialDepth"]
115 [-]: ADD       R8 R8 K29    ; R8 := R8 + 100
116 [-]: SETTABLE  R7 K28 R8    ; R7["mInitialDepth"] := R8
117 [-]: GETUPVAL  R7 U3        ; R7 := U3
118 [-]: SELF      R7 R7 K30    ; R8 := R7; R7 := R7["0xE13A565"]
119 [-]: LOADK     R9 K31       ; R9 := "RewardItemSelected"
120 [-]: LOADK     R10 K32      ; R10 := "RewardItemFocused"
121 [-]: LOADK     R11 K33      ; R11 := "RewardItemUnfocused"
122 [-]: LOADK     R12 K34      ; R12 := "RewardItemPressed"
123 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
124 [-]: GETUPVAL  R7 U3        ; R7 := U3
125 [-]: SETTABLE  R7 K35 K36   ; R7["mWrapAroundNavigation"] := "0x0"
126 [-]: GETUPVAL  R7 U3        ; R7 := U3
127 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7["0x3DB61F37"]
128 [-]: LOADK     R9 K9        ; R9 := "RewardsPanel.ScrollBar"
129 [-]: CALL      R7 3 1       ; R7(R8,R9)
130 [-]: GETUPVAL  R7 U3        ; R7 := U3
131 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["mScrollBar"]
132 [-]: SUB       R8 R3 K0     ; R8 := R3 - 3
133 [-]: SETTABLE  R7 K39 R8    ; R7["mHeight"] := R8
134 [-]: GETUPVAL  R7 U3        ; R7 := U3
135 [-]: SETTABLE  R7 K40 K19   ; R7["mScroll"] := 1
136 [-]: GETUPVAL  R7 U3        ; R7 := U3
137 [-]: SELF      R7 R7 K41    ; R8 := R7; R7 := R7["0xF9C18536"]
138 [-]: CALL      R7 2 1       ; R7(R8)
139 [-]: GETUPVAL  R7 U3        ; R7 := U3
140 [-]: SETTABLE  R7 K42 K43   ; R7["mSmoothScrollExtraSpace"] := 0
141 [-]: GETUPVAL  R7 U3        ; R7 := U3
142 [-]: SETTABLE  R7 K44 K19   ; R7["mExtraRowScroll"] := 1
143 [-]: GETUPVAL  R7 U3        ; R7 := U3
144 [-]: GETGLOBAL R8 K46       ; R8 := 0xF595ADDE
145 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
146 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9["0x6B7B470B"]
147 [-]: LOADK     R11 K47      ; R11 := "RewardsPanel.RewardList.Item1.Icon"
148 [-]: LOADK     R12 K48      ; R12 := "_x"
149 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
150 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
151 [-]: SETTABLE  R7 K45 R8    ; R7["mInitIconXPos"] := R8
152 [-]: GETUPVAL  R7 U3        ; R7 := U3
153 [-]: GETGLOBAL R8 K46       ; R8 := 0xF595ADDE
154 [-]: GETGLOBAL R9 K3        ; R9 := mMovie
155 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9["0x6B7B470B"]
156 [-]: LOADK     R11 K47      ; R11 := "RewardsPanel.RewardList.Item1.Icon"
157 [-]: LOADK     R12 K50      ; R12 := "_width"
158 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
159 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
160 [-]: SETTABLE  R7 K49 R8    ; R7["mInitIconWidth"] := R8
161 [-]: GETUPVAL  R7 U3        ; R7 := U3
162 [-]: CLOSURE   R8 0         ; R8 := closure(Function #78.1)
163 [-]: GETUPVAL  R0 U6        ; R0 := U6
164 [-]: GETUPVAL  R0 U3        ; R0 := U3
165 [-]: GETUPVAL  R0 U4        ; R0 := U4
166 [-]: GETUPVAL  R0 U7        ; R0 := U7
167 [-]: GETUPVAL  R0 U8        ; R0 := U8
168 [-]: GETUPVAL  R0 U9        ; R0 := U9
169 [-]: SETTABLE  R7 K51 R8    ; R7["mElementDrawCallback"] := R8
170 [-]: GETUPVAL  R7 U3        ; R7 := U3
171 [-]: CLOSURE   R8 1         ; R8 := closure(Function #78.2)
172 [-]: GETUPVAL  R0 U4        ; R0 := U4
173 [-]: SETTABLE  R7 K52 R8    ; R7["mOnFocusedCallback"] := R8
174 [-]: GETUPVAL  R7 U3        ; R7 := U3
175 [-]: CLOSURE   R8 2         ; R8 := closure(Function #78.3)
176 [-]: SETTABLE  R7 K53 R8    ; R7["mOnUnfocusedCallback"] := R8
177 [-]: GETGLOBAL R7 K54       ; R7 := 0x8C64AFA9
178 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
179 [-]: LOADK     R9 K55       ; R9 := "RewardsPanel.ScrollBar.swapDepths"
180 [-]: GETUPVAL  R10 U3       ; R10 := U3
181 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["mInitialDepth"]
182 [-]: ADD       R10 R10 K56  ; R10 := R10 + 2000
183 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
184 [-]: RETURN    R0 1         ; return 


; Function #78.1:
;
; Name:            
; Defined at line: 4188
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0x323C4EEF"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  8 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["Icon"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 64
 11 [-]: JMP       64           ; PC := 64
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mInitIconXPos"]
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mInitIconWidth"]
 16 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["IconIsSquare"]
 17 [-]: TEST      R4 0         ; if not R4 then PC := 35
 18 [-]: JMP       35           ; PC := 35
 19 [-]: GETGLOBAL R4 K8        ; R4 := 0xF595ADDE
 20 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 21 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x6B7B470B"]
 22 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 23 [-]: LOADK     R8 K10       ; R8 := ".Icon"
 24 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 25 [-]: LOADK     R8 K11       ; R8 := "_height"
 26 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 27 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 28 [-]: GETGLOBAL R5 K12       ; R5 := math
 29 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["0xF93F7CC8"]
 30 [-]: SUB       R6 R3 R4     ; R6 := R3 - R4
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: DIV       R5 R5 K14    ; R5 := R5 / 2
 33 [-]: SUB       R2 R2 R5     ; R2 := R2 - R5
 34 [-]: MOVE      R3 R4        ; R3 := R4
 35 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 36 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 37 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 38 [-]: LOADK     R8 K4        ; R8 := "Icon"
 39 [-]: LOADK     R9 K16       ; R9 := "_width"
 40 [-]: MOVE      R10 R3       ; R10 := R3
 41 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 42 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 43 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 44 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 45 [-]: LOADK     R8 K4        ; R8 := "Icon"
 46 [-]: LOADK     R9 K17       ; R9 := "_x"
 47 [-]: MOVE      R10 R2       ; R10 := R2
 48 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 49 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 50 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 51 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 52 [-]: LOADK     R8 K18       ; R8 := "Shadow"
 53 [-]: LOADK     R9 K16       ; R9 := "_width"
 54 [-]: MOVE      R10 R3       ; R10 := R3
 55 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 56 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 57 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 58 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 59 [-]: LOADK     R8 K18       ; R8 := "Shadow"
 60 [-]: LOADK     R9 K17       ; R9 := "_x"
 61 [-]: MOVE      R10 R2       ; R10 := R2
 62 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 63 [-]: JMP       78           ; PC := 78
 64 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 65 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 66 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 67 [-]: LOADK     R8 K4        ; R8 := "Icon"
 68 [-]: LOADK     R9 K19       ; R9 := "_visible"
 69 [-]: MOVE      R10 R0       ; R10 := R0
 70 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 71 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 72 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 73 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 74 [-]: LOADK     R8 K18       ; R8 := "Shadow"
 75 [-]: LOADK     R9 K19       ; R9 := "_visible"
 76 [-]: MOVE      R10 R0       ; R10 := R0
 77 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 78 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 79 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5["0x880196A7"]
 80 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 81 [-]: LOADK     R8 K20       ; R8 := "Count"
 82 [-]: LOADK     R9 K19       ; R9 := "_visible"
 83 [-]: GETTABLE  R10 R0 K20   ; R10 := R0["Count"]
 84 [-]: EQ        0 R10 K21    ; if R10 ~= 0 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: MOVE      R10 R0       ; R10 := R0
 87 [-]: MOVE      R10 R1       ; R10 := R1
 88 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 89 [-]: GETGLOBAL R5 K8        ; R5 := 0xF595ADDE
 90 [-]: GETGLOBAL R6 K1        ; R6 := mMovie
 91 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x6B7B470B"]
 92 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mClipName"]
 93 [-]: LOADK     R9 K22       ; R9 := ".ItemName"
 94 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 95 [-]: LOADK     R9 K23       ; R9 := "textLines"
 96 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 97 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 98 [-]: GETGLOBAL R6 K8        ; R6 := 0xF595ADDE
 99 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
100 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x6B7B470B"]
101 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
102 [-]: LOADK     R10 K24      ; R10 := ".Background2"
103 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
104 [-]: LOADK     R10 K11      ; R10 := "_height"
105 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
106 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
107 [-]: DIV       R6 R6 K14    ; R6 := R6 / 2
108 [-]: GETGLOBAL R7 K8        ; R7 := 0xF595ADDE
109 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
110 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0x6B7B470B"]
111 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
112 [-]: LOADK     R11 K22      ; R11 := ".ItemName"
113 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
114 [-]: LOADK     R11 K25      ; R11 := "textHeight"
115 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
116 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
117 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["Count"]
118 [-]: EQ        0 R8 K21     ; if R8 ~= 0 then PC := 130
119 [-]: JMP       130          ; PC := 130
120 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
121 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
122 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
123 [-]: LOADK     R11 K26      ; R11 := "ItemName"
124 [-]: LOADK     R12 K27      ; R12 := "_y"
125 [-]: DIV       R13 R7 K14   ; R13 := R7 / 2
126 [-]: ADD       R13 R13 K28  ; R13 := R13 + 3
127 [-]: SUB       R13 R6 R13   ; R13 := R6 - R13
128 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
129 [-]: JMP       167          ; PC := 167
130 [-]: LE        0 K28 R5     ; if 3 > R5 then PC := 150
131 [-]: JMP       150          ; PC := 150
132 [-]: GETUPVAL  R8 U2        ; R8 := U2
133 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["0xBA254C2A"]
134 [-]: GETGLOBAL R9 K1        ; R9 := mMovie
135 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
136 [-]: LOADK     R11 K22      ; R11 := ".ItemName"
137 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
138 [-]: LOADK     R11 K28      ; R11 := 3
139 [-]: GETTABLE  R12 R0 K30   ; R12 := R0["Name"]
140 [-]: LOADK     R13 K31      ; R13 := "..."
141 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
142 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
143 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
144 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
145 [-]: LOADK     R11 K26      ; R11 := "ItemName"
146 [-]: LOADK     R12 K27      ; R12 := "_y"
147 [-]: SUB       R13 R6 K32   ; R13 := R6 - 40
148 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
149 [-]: JMP       167          ; PC := 167
150 [-]: EQ        0 R5 K14     ; if R5 ~= 2 then PC := 160
151 [-]: JMP       160          ; PC := 160
152 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
153 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
154 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
155 [-]: LOADK     R11 K26      ; R11 := "ItemName"
156 [-]: LOADK     R12 K27      ; R12 := "_y"
157 [-]: SUB       R13 R6 K33   ; R13 := R6 - 31
158 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
159 [-]: JMP       167          ; PC := 167
160 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
161 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
162 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
163 [-]: LOADK     R11 K26      ; R11 := "ItemName"
164 [-]: LOADK     R12 K27      ; R12 := "_y"
165 [-]: SUB       R13 R6 K34   ; R13 := R6 - 22
166 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
167 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
168 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
169 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
170 [-]: LOADK     R11 K4       ; R11 := "Icon"
171 [-]: LOADK     R12 K35      ; R12 := "_z"
172 [-]: LOADK     R13 K36      ; R13 := -300
173 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
174 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
175 [-]: SELF      R8 R8 K37    ; R9 := R8; R8 := R8["0x7E1F26D7"]
176 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
177 [-]: LOADK     R11 K38      ; R11 := ".Shadow"
178 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
179 [-]: GETGLOBAL R11 K39      ; R11 := affinityItemShadowMaterial
180 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
181 [-]: LE        0 K28 R5     ; if 3 > R5 then PC := 191
182 [-]: JMP       191          ; PC := 191
183 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
184 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
185 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
186 [-]: LOADK     R11 K20      ; R11 := "Count"
187 [-]: LOADK     R12 K27      ; R12 := "_y"
188 [-]: ADD       R13 R6 K40   ; R13 := R6 + 18
189 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
190 [-]: JMP       209          ; PC := 209
191 [-]: EQ        0 R5 K14     ; if R5 ~= 2 then PC := 202
192 [-]: JMP       202          ; PC := 202
193 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
194 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
195 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
196 [-]: LOADK     R11 K20      ; R11 := "Count"
197 [-]: LOADK     R12 K27      ; R12 := "_y"
198 [-]: SUB       R13 R7 K41   ; R13 := R7 - 27
199 [-]: ADD       R13 R6 R13   ; R13 := R6 + R13
200 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
201 [-]: JMP       209          ; PC := 209
202 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
203 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
204 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
205 [-]: LOADK     R11 K20      ; R11 := "Count"
206 [-]: LOADK     R12 K27      ; R12 := "_y"
207 [-]: MOVE      R13 R6       ; R13 := R6
208 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
209 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
210 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
211 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
212 [-]: LOADK     R11 K42      ; R11 := "Background2"
213 [-]: LOADK     R12 K19      ; R12 := "_visible"
214 [-]: GETUPVAL  R13 U2       ; R13 := U2
215 [-]: GETTABLE  R13 R13 K43  ; R13 := R13["0xF81722A2"]
216 [-]: GETTABLE  R14 R0 K44   ; R14 := R0["Id"]
217 [-]: MOD       R14 R14 K14  ; R14 := R14 % 2
218 [-]: EQ        1 R14 K21    ; if R14 == 0 then PC := 221
219 [-]: JMP       221          ; PC := 221
220 [-]: MOVE      R14 R0       ; R14 := R0
221 [-]: MOVE      R14 R1       ; R14 := R1
222 [-]: MOVE      R15 R1       ; R15 := R1
223 [-]: MOVE      R16 R0       ; R16 := R0
224 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
225 [-]: CALL      R8 0 1       ; R8(R9,...)
226 [-]: GETUPVAL  R8 U3        ; R8 := U3
227 [-]: GETTABLE  R8 R8 K45    ; R8 := R8["0x87D2274C"]
228 [-]: CALL      R8 1 2       ; R8 := R8()
229 [-]: TEST      R8 0         ; if not R8 then PC := 247
230 [-]: JMP       247          ; PC := 247
231 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
232 [-]: SELF      R8 R8 K37    ; R9 := R8; R8 := R8["0x7E1F26D7"]
233 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
234 [-]: LOADK     R11 K46      ; R11 := ".Background"
235 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
236 [-]: GETGLOBAL R11 K47      ; R11 := _G
237 [-]: GETTABLE  R11 R11 K48  ; R11 := R11["UIMaterial_SmoothEdgeNoDepthTest"]
238 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
239 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
240 [-]: SELF      R8 R8 K37    ; R9 := R8; R8 := R8["0x7E1F26D7"]
241 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
242 [-]: LOADK     R11 K24      ; R11 := ".Background2"
243 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
244 [-]: GETGLOBAL R11 K47      ; R11 := _G
245 [-]: GETTABLE  R11 R11 K48  ; R11 := R11["UIMaterial_SmoothEdgeNoDepthTest"]
246 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
247 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
248 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8["0x880196A7"]
249 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
250 [-]: LOADK     R11 K42      ; R11 := "Background2"
251 [-]: LOADK     R12 K49      ; R12 := "_alpha"
252 [-]: LOADK     R13 K50      ; R13 := 20
253 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
254 [-]: GETTABLE  R8 R0 K51    ; R8 := R0["TaxedCount"]
255 [-]: EQ        1 R8 K52     ; if R8 == nil then PC := 525
256 [-]: JMP       525          ; PC := 525
257 [-]: GETTABLE  R8 R0 K51    ; R8 := R0["TaxedCount"]
258 [-]: LT        0 K21 R8     ; if 0 >= R8 then PC := 525
259 [-]: JMP       525          ; PC := 525
260 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mClipName"]
261 [-]: LOADK     R9 K53       ; R9 := ".StolenOverlay"
262 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
263 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
264 [-]: LOADK     R10 K54      ; R10 := ".StolenBacker"
265 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
266 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
267 [-]: SELF      R10 R10 K55  ; R11 := R10; R10 := R10["0x1C19D966"]
268 [-]: MOVE      R12 R8       ; R12 := R8
269 [-]: LOADK     R13 K19      ; R13 := "_visible"
270 [-]: MOVE      R14 R1       ; R14 := R1
271 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
272 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
273 [-]: SELF      R10 R10 K55  ; R11 := R10; R10 := R10["0x1C19D966"]
274 [-]: MOVE      R12 R9       ; R12 := R9
275 [-]: LOADK     R13 K19      ; R13 := "_visible"
276 [-]: MOVE      R14 R1       ; R14 := R1
277 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
278 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
279 [-]: SELF      R10 R10 K56  ; R11 := R10; R10 := R10["0x26581636"]
280 [-]: MOVE      R12 R8       ; R12 := R8
281 [-]: LOADK     R13 K57      ; R13 := ".Backer"
282 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
283 [-]: GETGLOBAL R13 K58      ; R13 := lichBackerStolen
284 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
285 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
286 [-]: SELF      R10 R10 K56  ; R11 := R10; R10 := R10["0x26581636"]
287 [-]: MOVE      R12 R9       ; R12 := R9
288 [-]: LOADK     R13 K59      ; R13 := ".Banner"
289 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
290 [-]: GETGLOBAL R13 K60      ; R13 := lichBannerStolen
291 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
292 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
293 [-]: SELF      R10 R10 K56  ; R11 := R10; R10 := R10["0x26581636"]
294 [-]: MOVE      R12 R8       ; R12 := R8
295 [-]: LOADK     R13 K10      ; R13 := ".Icon"
296 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
297 [-]: GETGLOBAL R13 K61      ; R13 := lichIconStolen
298 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
299 [-]: GETGLOBAL R10 K1       ; R10 := mMovie
300 [-]: SELF      R10 R10 K62  ; R11 := R10; R10 := R10["0x17028E8F"]
301 [-]: MOVE      R12 R8       ; R12 := R8
302 [-]: LOADK     R13 K63      ; R13 := ".Label.text"
303 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
304 [-]: LOADK     R13 K64      ; R13 := "/Lotus/Language/Game/CTF_Stolen"
305 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
306 [-]: GETGLOBAL R10 K8       ; R10 := 0xF595ADDE
307 [-]: GETGLOBAL R11 K1       ; R11 := mMovie
308 [-]: SELF      R11 R11 K9   ; R12 := R11; R11 := R11["0x6B7B470B"]
309 [-]: MOVE      R13 R8       ; R13 := R8
310 [-]: LOADK     R14 K65      ; R14 := ".Label._x"
311 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
312 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
313 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
314 [-]: GETGLOBAL R11 K8       ; R11 := 0xF595ADDE
315 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
316 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12["0x6B7B470B"]
317 [-]: MOVE      R14 R8       ; R14 := R8
318 [-]: LOADK     R15 K66      ; R15 := ".Label._width"
319 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
320 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
321 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
322 [-]: ADD       R10 R10 R11  ; R10 := R10 + R11
323 [-]: GETGLOBAL R11 K8       ; R11 := 0xF595ADDE
324 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
325 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12["0x6B7B470B"]
326 [-]: MOVE      R14 R8       ; R14 := R8
327 [-]: LOADK     R15 K67      ; R15 := ".Label.textWidth"
328 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
329 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
330 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
331 [-]: GETGLOBAL R12 K8       ; R12 := 0xF595ADDE
332 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
333 [-]: SELF      R13 R13 K9   ; R14 := R13; R13 := R13["0x6B7B470B"]
334 [-]: MOVE      R15 R8       ; R15 := R8
335 [-]: LOADK     R16 K68      ; R16 := ".Backer._x"
336 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
337 [-]: CALL      R13 3 0      ; R13,... := R13(R14,R15)
338 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
339 [-]: SUB       R13 R12 R10  ; R13 := R12 - R10
340 [-]: ADD       R13 R13 R11  ; R13 := R13 + R11
341 [-]: ADD       R13 R13 K69  ; R13 := R13 + 50
342 [-]: DIV       R14 R11 K14  ; R14 := R11 / 2
343 [-]: SUB       R14 R10 R14  ; R14 := R10 - R14
344 [-]: SUB       R14 R14 K70  ; R14 := R14 - 7
345 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
346 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15["0x880196A7"]
347 [-]: MOVE      R17 R8       ; R17 := R8
348 [-]: LOADK     R18 K71      ; R18 := "Backer"
349 [-]: LOADK     R19 K16      ; R19 := "_width"
350 [-]: MOVE      R20 R13      ; R20 := R13
351 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
352 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
353 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15["0x880196A7"]
354 [-]: MOVE      R17 R8       ; R17 := R8
355 [-]: LOADK     R18 K4       ; R18 := "Icon"
356 [-]: LOADK     R19 K17      ; R19 := "_x"
357 [-]: MOVE      R20 R14      ; R20 := R14
358 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
359 [-]: GETGLOBAL R15 K8       ; R15 := 0xF595ADDE
360 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
361 [-]: SELF      R16 R16 K9   ; R17 := R16; R16 := R16["0x6B7B470B"]
362 [-]: MOVE      R18 R8       ; R18 := R8
363 [-]: LOADK     R19 K17      ; R19 := "_x"
364 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
365 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
366 [-]: GETGLOBAL R16 K8       ; R16 := 0xF595ADDE
367 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
368 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17["0x6B7B470B"]
369 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
370 [-]: LOADK     R20 K72      ; R20 := ".Count"
371 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
372 [-]: LOADK     R20 K17      ; R20 := "_x"
373 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
374 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
375 [-]: SUB       R15 R15 R16  ; R15 := R15 - R16
376 [-]: UNM       R15 R15      ; R15 := - R15
377 [-]: GETGLOBAL R16 K8       ; R16 := 0xF595ADDE
378 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
379 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17["0x6B7B470B"]
380 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
381 [-]: LOADK     R20 K72      ; R20 := ".Count"
382 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
383 [-]: LOADK     R20 K73      ; R20 := "textWidth"
384 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
385 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
386 [-]: DIV       R16 R16 K14  ; R16 := R16 / 2
387 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
388 [-]: GETGLOBAL R16 K8       ; R16 := 0xF595ADDE
389 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
390 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17["0x6B7B470B"]
391 [-]: MOVE      R19 R8       ; R19 := R8
392 [-]: LOADK     R20 K27      ; R20 := "_y"
393 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
394 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
395 [-]: GETGLOBAL R17 K8       ; R17 := 0xF595ADDE
396 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
397 [-]: SELF      R18 R18 K9   ; R19 := R18; R18 := R18["0x6B7B470B"]
398 [-]: GETTABLE  R20 R0 K2    ; R20 := R0["mClipName"]
399 [-]: LOADK     R21 K72      ; R21 := ".Count"
400 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
401 [-]: LOADK     R21 K27      ; R21 := "_y"
402 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
403 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
404 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
405 [-]: UNM       R16 R16      ; R16 := - R16
406 [-]: GETGLOBAL R17 K8       ; R17 := 0xF595ADDE
407 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
408 [-]: SELF      R18 R18 K9   ; R19 := R18; R18 := R18["0x6B7B470B"]
409 [-]: GETTABLE  R20 R0 K2    ; R20 := R0["mClipName"]
410 [-]: LOADK     R21 K72      ; R21 := ".Count"
411 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
412 [-]: LOADK     R21 K25      ; R21 := "textHeight"
413 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
414 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
415 [-]: DIV       R17 R17 K14  ; R17 := R17 / 2
416 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
417 [-]: ADD       R16 R16 K28  ; R16 := R16 + 3
418 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
419 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
420 [-]: MOVE      R19 R8       ; R19 := R8
421 [-]: LOADK     R20 K74      ; R20 := "X"
422 [-]: LOADK     R21 K17      ; R21 := "_x"
423 [-]: MOVE      R22 R15      ; R22 := R15
424 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
425 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
426 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
427 [-]: MOVE      R19 R8       ; R19 := R8
428 [-]: LOADK     R20 K74      ; R20 := "X"
429 [-]: LOADK     R21 K27      ; R21 := "_y"
430 [-]: MOVE      R22 R16      ; R22 := R16
431 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
432 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
433 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
434 [-]: MOVE      R19 R8       ; R19 := R8
435 [-]: LOADK     R20 K74      ; R20 := "X"
436 [-]: LOADK     R21 K49      ; R21 := "_alpha"
437 [-]: LOADK     R22 K69      ; R22 := 50
438 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
439 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
440 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
441 [-]: MOVE      R19 R8       ; R19 := R8
442 [-]: LOADK     R20 K75      ; R20 := "XShadow"
443 [-]: LOADK     R21 K17      ; R21 := "_x"
444 [-]: SUB       R22 R15 K76  ; R22 := R15 - 1
445 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
446 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
447 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
448 [-]: MOVE      R19 R8       ; R19 := R8
449 [-]: LOADK     R20 K75      ; R20 := "XShadow"
450 [-]: LOADK     R21 K27      ; R21 := "_y"
451 [-]: ADD       R22 R16 K76  ; R22 := R16 + 1
452 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
453 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
454 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
455 [-]: MOVE      R19 R8       ; R19 := R8
456 [-]: LOADK     R20 K75      ; R20 := "XShadow"
457 [-]: LOADK     R21 K49      ; R21 := "_alpha"
458 [-]: LOADK     R22 K69      ; R22 := 50
459 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
460 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
461 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
462 [-]: MOVE      R19 R8       ; R19 := R8
463 [-]: LOADK     R20 K74      ; R20 := "X"
464 [-]: LOADK     R21 K77      ; R21 := "_color"
465 [-]: GETGLOBAL R22 K8       ; R22 := 0xF595ADDE
466 [-]: LOADK     R23 K78      ; R23 := "0x"
467 [-]: GETUPVAL  R24 U4       ; R24 := U4
468 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
469 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
470 [-]: CALL      R17 0 1      ; R17(R18,...)
471 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
472 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
473 [-]: MOVE      R19 R8       ; R19 := R8
474 [-]: LOADK     R20 K75      ; R20 := "XShadow"
475 [-]: LOADK     R21 K77      ; R21 := "_color"
476 [-]: LOADK     R22 K21      ; R22 := 0
477 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
478 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
479 [-]: SELF      R17 R17 K15  ; R18 := R17; R17 := R17["0x880196A7"]
480 [-]: MOVE      R19 R8       ; R19 := R8
481 [-]: LOADK     R20 K79      ; R20 := "Label"
482 [-]: LOADK     R21 K77      ; R21 := "_color"
483 [-]: GETGLOBAL R22 K8       ; R22 := 0xF595ADDE
484 [-]: LOADK     R23 K78      ; R23 := "0x"
485 [-]: GETUPVAL  R24 U4       ; R24 := U4
486 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
487 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
488 [-]: CALL      R17 0 1      ; R17(R18,...)
489 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
490 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17["0x6B7B470B"]
491 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
492 [-]: LOADK     R20 K72      ; R20 := ".Count"
493 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
494 [-]: LOADK     R20 K80      ; R20 := "text"
495 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
496 [-]: GETTABLE  R18 R0 K51   ; R18 := R0["TaxedCount"]
497 [-]: GETTABLE  R19 R0 K20   ; R19 := R0["Count"]
498 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 512
499 [-]: JMP       512          ; PC := 512
500 [-]: MOVE      R18 R17      ; R18 := R17
501 [-]: GETGLOBAL R19 K1       ; R19 := mMovie
502 [-]: SELF      R19 R19 K81  ; R20 := R19; R19 := R19["0x5DB0BD4"]
503 [-]: LOADK     R21 K82      ; R21 := " <MINI_ARROW> "
504 [-]: MOVE      R22 R1       ; R22 := R1
505 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
506 [-]: LOADK     R20 K83      ; R20 := "<font color=\"#FFFFFF\">"
507 [-]: GETTABLE  R21 R0 K20   ; R21 := R0["Count"]
508 [-]: GETTABLE  R22 R0 K51   ; R22 := R0["TaxedCount"]
509 [-]: SUB       R21 R21 R22  ; R21 := R21 - R22
510 [-]: LOADK     R22 K84      ; R22 := "</font>"
511 [-]: CONCAT    R17 R18 R22  ; R17 := R18 .. R19 .. R20 .. R21 .. R22
512 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
513 [-]: SELF      R18 R18 K15  ; R19 := R18; R18 := R18["0x880196A7"]
514 [-]: GETTABLE  R20 R0 K2    ; R20 := R0["mClipName"]
515 [-]: LOADK     R21 K20      ; R21 := "Count"
516 [-]: LOADK     R22 K80      ; R22 := "text"
517 [-]: LOADK     R23 K85      ; R23 := "<p><font color=\"#"
518 [-]: GETUPVAL  R24 U4       ; R24 := U4
519 [-]: LOADK     R25 K86      ; R25 := "\">"
520 [-]: MOVE      R26 R17      ; R26 := R17
521 [-]: LOADK     R27 K87      ; R27 := "</font></p>"
522 [-]: CONCAT    R23 R23 R27  ; R23 := R23 .. R24 .. R25 .. R26 .. R27
523 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
524 [-]: JMP       673          ; PC := 673
525 [-]: GETTABLE  R18 R0 K88   ; R18 := R0["Recovered"]
526 [-]: TEST      R18 0        ; if not R18 then PC := 659
527 [-]: JMP       659          ; PC := 659
528 [-]: GETTABLE  R18 R0 K2    ; R18 := R0["mClipName"]
529 [-]: LOADK     R19 K53      ; R19 := ".StolenOverlay"
530 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
531 [-]: GETTABLE  R19 R0 K2    ; R19 := R0["mClipName"]
532 [-]: LOADK     R20 K54      ; R20 := ".StolenBacker"
533 [-]: CONCAT    R19 R19 R20  ; R19 := R19 .. R20
534 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
535 [-]: SELF      R20 R20 K55  ; R21 := R20; R20 := R20["0x1C19D966"]
536 [-]: MOVE      R22 R18      ; R22 := R18
537 [-]: LOADK     R23 K19      ; R23 := "_visible"
538 [-]: MOVE      R24 R1       ; R24 := R1
539 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
540 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
541 [-]: SELF      R20 R20 K55  ; R21 := R20; R20 := R20["0x1C19D966"]
542 [-]: MOVE      R22 R19      ; R22 := R19
543 [-]: LOADK     R23 K19      ; R23 := "_visible"
544 [-]: MOVE      R24 R1       ; R24 := R1
545 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
546 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
547 [-]: SELF      R20 R20 K56  ; R21 := R20; R20 := R20["0x26581636"]
548 [-]: MOVE      R22 R18      ; R22 := R18
549 [-]: LOADK     R23 K57      ; R23 := ".Backer"
550 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
551 [-]: GETGLOBAL R23 K89      ; R23 := lichBackerRecovered
552 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
553 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
554 [-]: SELF      R20 R20 K56  ; R21 := R20; R20 := R20["0x26581636"]
555 [-]: MOVE      R22 R19      ; R22 := R19
556 [-]: LOADK     R23 K59      ; R23 := ".Banner"
557 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
558 [-]: GETGLOBAL R23 K90      ; R23 := lichBannerRecovered
559 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
560 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
561 [-]: SELF      R20 R20 K56  ; R21 := R20; R20 := R20["0x26581636"]
562 [-]: MOVE      R22 R18      ; R22 := R18
563 [-]: LOADK     R23 K10      ; R23 := ".Icon"
564 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
565 [-]: GETGLOBAL R23 K91      ; R23 := lichIconRecovered
566 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
567 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
568 [-]: SELF      R20 R20 K15  ; R21 := R20; R20 := R20["0x880196A7"]
569 [-]: MOVE      R22 R18      ; R22 := R18
570 [-]: LOADK     R23 K79      ; R23 := "Label"
571 [-]: LOADK     R24 K80      ; R24 := "text"
572 [-]: GETGLOBAL R25 K92      ; R25 := string
573 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["0x639C642A"]
574 [-]: GETGLOBAL R26 K94      ; R26 := 0xE6DC43B0
575 [-]: LOADK     R27 K95      ; R27 := "/Lotus/Language/Game/Recovered"
576 [-]: NEWTABLE  R28 0 0      ; R28 := {}
577 [-]: CALL      R26 3 0      ; R26,... := R26(R27,R28)
578 [-]: CALL      R25 0 0      ; R25,... := R25(R26,...)
579 [-]: CALL      R20 0 1      ; R20(R21,...)
580 [-]: GETGLOBAL R20 K8       ; R20 := 0xF595ADDE
581 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
582 [-]: SELF      R21 R21 K9   ; R22 := R21; R21 := R21["0x6B7B470B"]
583 [-]: MOVE      R23 R18      ; R23 := R18
584 [-]: LOADK     R24 K65      ; R24 := ".Label._x"
585 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
586 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
587 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
588 [-]: GETGLOBAL R21 K8       ; R21 := 0xF595ADDE
589 [-]: GETGLOBAL R22 K1       ; R22 := mMovie
590 [-]: SELF      R22 R22 K9   ; R23 := R22; R22 := R22["0x6B7B470B"]
591 [-]: MOVE      R24 R18      ; R24 := R18
592 [-]: LOADK     R25 K66      ; R25 := ".Label._width"
593 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
594 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
595 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
596 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
597 [-]: GETGLOBAL R21 K8       ; R21 := 0xF595ADDE
598 [-]: GETGLOBAL R22 K1       ; R22 := mMovie
599 [-]: SELF      R22 R22 K9   ; R23 := R22; R22 := R22["0x6B7B470B"]
600 [-]: MOVE      R24 R18      ; R24 := R18
601 [-]: LOADK     R25 K67      ; R25 := ".Label.textWidth"
602 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
603 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
604 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
605 [-]: GETGLOBAL R22 K8       ; R22 := 0xF595ADDE
606 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
607 [-]: SELF      R23 R23 K9   ; R24 := R23; R23 := R23["0x6B7B470B"]
608 [-]: MOVE      R25 R18      ; R25 := R18
609 [-]: LOADK     R26 K68      ; R26 := ".Backer._x"
610 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
611 [-]: CALL      R23 3 0      ; R23,... := R23(R24,R25)
612 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
613 [-]: SUB       R23 R22 R20  ; R23 := R22 - R20
614 [-]: ADD       R23 R23 R21  ; R23 := R23 + R21
615 [-]: ADD       R23 R23 K69  ; R23 := R23 + 50
616 [-]: DIV       R24 R21 K14  ; R24 := R21 / 2
617 [-]: SUB       R24 R20 R24  ; R24 := R20 - R24
618 [-]: SUB       R24 R24 K70  ; R24 := R24 - 7
619 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
620 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
621 [-]: MOVE      R27 R18      ; R27 := R18
622 [-]: LOADK     R28 K71      ; R28 := "Backer"
623 [-]: LOADK     R29 K16      ; R29 := "_width"
624 [-]: MOVE      R30 R23      ; R30 := R23
625 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
626 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
627 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
628 [-]: MOVE      R27 R18      ; R27 := R18
629 [-]: LOADK     R28 K4       ; R28 := "Icon"
630 [-]: LOADK     R29 K17      ; R29 := "_x"
631 [-]: MOVE      R30 R24      ; R30 := R24
632 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
633 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
634 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
635 [-]: MOVE      R27 R18      ; R27 := R18
636 [-]: LOADK     R28 K74      ; R28 := "X"
637 [-]: LOADK     R29 K49      ; R29 := "_alpha"
638 [-]: LOADK     R30 K21      ; R30 := 0
639 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
640 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
641 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
642 [-]: MOVE      R27 R18      ; R27 := R18
643 [-]: LOADK     R28 K75      ; R28 := "XShadow"
644 [-]: LOADK     R29 K49      ; R29 := "_alpha"
645 [-]: LOADK     R30 K21      ; R30 := 0
646 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
647 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
648 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
649 [-]: MOVE      R27 R18      ; R27 := R18
650 [-]: LOADK     R28 K79      ; R28 := "Label"
651 [-]: LOADK     R29 K77      ; R29 := "_color"
652 [-]: GETGLOBAL R30 K8       ; R30 := 0xF595ADDE
653 [-]: LOADK     R31 K78      ; R31 := "0x"
654 [-]: GETUPVAL  R32 U5       ; R32 := U5
655 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
656 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
657 [-]: CALL      R25 0 1      ; R25(R26,...)
658 [-]: JMP       673          ; PC := 673
659 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
660 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
661 [-]: GETTABLE  R27 R0 K2    ; R27 := R0["mClipName"]
662 [-]: LOADK     R28 K96      ; R28 := "StolenOverlay"
663 [-]: LOADK     R29 K19      ; R29 := "_visible"
664 [-]: MOVE      R30 R0       ; R30 := R0
665 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
666 [-]: GETGLOBAL R25 K1       ; R25 := mMovie
667 [-]: SELF      R25 R25 K15  ; R26 := R25; R25 := R25["0x880196A7"]
668 [-]: GETTABLE  R27 R0 K2    ; R27 := R0["mClipName"]
669 [-]: LOADK     R28 K97      ; R28 := "StolenBacker"
670 [-]: LOADK     R29 K19      ; R29 := "_visible"
671 [-]: MOVE      R30 R0       ; R30 := R0
672 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
673 [-]: RETURN    R0 1         ; return 


; Function #78.2:
;
; Name:            
; Defined at line: 4308
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x302AAB2F"]
  3 [-]: LOADK     R3 K2        ; R3 := "RewardsPanel.PanelBG"
  4 [-]: LOADK     R4 K3        ; R4 := "RectEdgeColor"
  5 [-]: GETGLOBAL R5 K4        ; R5 := _G
  6 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["UIColorObject_Yellow"]
  7 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["r"]
  8 [-]: GETGLOBAL R6 K4        ; R6 := _G
  9 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColorObject_Yellow"]
 10 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["g"]
 11 [-]: GETGLOBAL R7 K4        ; R7 := _G
 12 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColorObject_Yellow"]
 13 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["b"]
 14 [-]: LOADK     R8 K9        ; R8 := 1
 15 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 16 [-]: GETTABLE  R1 R0 K10    ; R1 := R0["mClipName"]
 17 [-]: EQ        0 R1 K11     ; if R1 ~= nil then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x25992394"]
 22 [-]: GETGLOBAL R2 K4        ; R2 := _G
 23 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UISound_Focus"]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: RETURN    R0 1         ; return 


; Function #78.3:
;
; Name:            
; Defined at line: 4316
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x302AAB2F"]
  3 [-]: LOADK     R4 K2        ; R4 := "RewardsPanel.PanelBG"
  4 [-]: LOADK     R5 K3        ; R5 := "RectEdgeColor"
  5 [-]: GETGLOBAL R6 K4        ; R6 := _G
  6 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColorObject_White"]
  7 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["r"]
  8 [-]: GETGLOBAL R7 K4        ; R7 := _G
  9 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColorObject_White"]
 10 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["g"]
 11 [-]: GETGLOBAL R8 K4        ; R8 := _G
 12 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["UIColorObject_White"]
 13 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["b"]
 14 [-]: LOADK     R9 K9        ; R9 := 0.20000000298023
 15 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 16 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 4322
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R1 K0        ; R1 := gMiscItemBaseType
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: GETGLOBAL R3 K1        ; R3 := table
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xA5C58010"]
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #79.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: MOVE      R0 R0        ; R0 := R0
 12 [-]: CALL      R3 3 1       ; R3(R4,R5)
 13 [-]: CLOSE     R1           ; SAVE R1,...
 14 [-]: RETURN    R0 1         ; return 


; Function #79.1:
;
; Name:            
; Defined at line: 4329
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: LOADK     R2 K0        ; R2 := 1
  2 [-]: LOADK     R3 K0        ; R3 := 1
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
  4 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemType"]
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 40
  7 [-]: JMP       40           ; PC := 40
  8 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mItemType"]
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x8B598ED4"]
 10 [-]: GETUPVAL  R6 U0        ; R6 := U0
 11 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 12 [-]: TEST      R4 0         ; if not R4 then PC := 26
 13 [-]: JMP       26           ; PC := 26
 14 [-]: GETGLOBAL R4 K4        ; R4 := 0x7C282057
 15 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemType"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 18 [-]: MOVE      R6 R4        ; R6 := R4
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 40
 21 [-]: JMP       40           ; PC := 40
 22 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4["0xBCF63E96"]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: MOVE      R2 R5        ; R2 := R5
 25 [-]: JMP       40           ; PC := 40
 26 [-]: GETGLOBAL R5 K6        ; R5 := 0xECFDD17
 27 [-]: GETUPVAL  R6 U1        ; R6 := U1
 28 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 29 [-]: JMP       38           ; PC := 38
 30 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mItemType"]
 31 [-]: SELF      R10 R10 K3   ; R11 := R10; R10 := R10["0x8B598ED4"]
 32 [-]: MOVE      R12 R8       ; R12 := R8
 33 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 34 [-]: TEST      R10 0        ; if not R10 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R2 R9        ; R2 := R9
 37 [-]: JMP       40           ; PC := 40
 38 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 30; R7 := R8 end
 39 [-]: JMP       30           ; PC := 30
 40 [-]: GETGLOBAL R10 K1       ; R10 := 0x400E7765
 41 [-]: GETTABLE  R11 R1 K2    ; R11 := R1["mItemType"]
 42 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 43 [-]: TEST      R10 1        ; if R10 then PC := 77
 44 [-]: JMP       77           ; PC := 77
 45 [-]: GETTABLE  R10 R1 K2    ; R10 := R1["mItemType"]
 46 [-]: SELF      R10 R10 K3   ; R11 := R10; R10 := R10["0x8B598ED4"]
 47 [-]: GETUPVAL  R12 U0       ; R12 := U0
 48 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 49 [-]: TEST      R10 0        ; if not R10 then PC := 63
 50 [-]: JMP       63           ; PC := 63
 51 [-]: GETGLOBAL R10 K4       ; R10 := 0x7C282057
 52 [-]: GETTABLE  R11 R1 K2    ; R11 := R1["mItemType"]
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 55 [-]: MOVE      R12 R10      ; R12 := R10
 56 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 57 [-]: TEST      R11 1        ; if R11 then PC := 77
 58 [-]: JMP       77           ; PC := 77
 59 [-]: SELF      R11 R10 K5   ; R12 := R10; R11 := R10["0xBCF63E96"]
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: MOVE      R3 R11       ; R3 := R11
 62 [-]: JMP       77           ; PC := 77
 63 [-]: GETGLOBAL R11 K6       ; R11 := 0xECFDD17
 64 [-]: GETUPVAL  R12 U1       ; R12 := U1
 65 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETTABLE  R16 R1 K2    ; R16 := R1["mItemType"]
 68 [-]: SELF      R16 R16 K3   ; R17 := R16; R16 := R16["0x8B598ED4"]
 69 [-]: MOVE      R18 R14      ; R18 := R14
 70 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 71 [-]: TEST      R16 0        ; if not R16 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: MOVE      R3 R15       ; R3 := R15
 74 [-]: JMP       77           ; PC := 77
 75 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 67; R13 := R14 end
 76 [-]: JMP       67           ; PC := 67
 77 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: MOVE      R16 R0       ; R16 := R0
 80 [-]: MOVE      R16 R1       ; R16 := R1
 81 [-]: RETURN    R16 2        ; return R16
 82 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 4387
; #Upvalues:       26
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  118

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x7CF71D03"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: MOVE      R2 R1        ; R2 := R1
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: TEST      R2 0         ; if not R2 then PC := 28
 10 [-]: JMP       28           ; PC := 28
 11 [-]: GETGLOBAL R2 K1        ; R2 := table
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xE6450C9D"]
 13 [-]: GETUPVAL  R3 U1        ; R3 := U1
 14 [-]: NEWTABLE  R4 0 5       ; R4 := {}
 15 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 16 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 17 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Menu/EndOfMission_RewardsAlreadyEarned"
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 20 [-]: SETTABLE  R4 K3 R5     ; R4["Name"] := R5
 21 [-]: SETTABLE  R4 K7 K8     ; R4["Count"] := ""
 22 [-]: GETGLOBAL R5 K10       ; R5 := _G
 23 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["UITexture_Locked"]
 24 [-]: SETTABLE  R4 K9 R5     ; R4["Icon"] := R5
 25 [-]: SETTABLE  R4 K12 K13   ; R4["IconIsSquare"] := "0x1"
 26 [-]: SETTABLE  R4 K14 K15   ; R4["Background"] := nil
 27 [-]: CALL      R2 3 1       ; R2(R3,R4)
 28 [-]: GETGLOBAL R2 K10       ; R2 := _G
 29 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["NemesisEndBody"]
 30 [-]: GETGLOBAL R3 K17       ; R3 := 0x400E7765
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: TEST      R3 1         ; if R3 then PC := 213
 34 [-]: JMP       213          ; PC := 213
 35 [-]: GETGLOBAL R3 K18       ; R3 := 0x7C282057
 36 [-]: GETTABLE  R4 R2 K19    ; R4 := R2["EphemeraReward"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETGLOBAL R4 K17       ; R4 := 0x400E7765
 39 [-]: MOVE      R5 R3        ; R5 := R3
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 53
 42 [-]: JMP       53           ; PC := 53
 43 [-]: GETUPVAL  R4 U3        ; R4 := U3
 44 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["0x1B75557F"]
 45 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
 46 [-]: MOVE      R6 R3        ; R6 := R3
 47 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 48 [-]: GETGLOBAL R5 K1        ; R5 := table
 49 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xE6450C9D"]
 50 [-]: GETUPVAL  R6 U1        ; R6 := U1
 51 [-]: MOVE      R7 R4        ; R7 := R4
 52 [-]: CALL      R5 3 1       ; R5(R6,R7)
 53 [-]: GETTABLE  R5 R2 K21    ; R5 := R2["WeaponRecipe"]
 54 [-]: EQ        1 R5 K15     ; if R5 == nil then PC := 75
 55 [-]: JMP       75           ; PC := 75
 56 [-]: GETGLOBAL R5 K18       ; R5 := 0x7C282057
 57 [-]: GETTABLE  R6 R2 K21    ; R6 := R2["WeaponRecipe"]
 58 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["ItemType"]
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: GETGLOBAL R6 K17       ; R6 := 0x400E7765
 61 [-]: MOVE      R7 R5        ; R7 := R5
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: TEST      R6 1         ; if R6 then PC := 75
 64 [-]: JMP       75           ; PC := 75
 65 [-]: GETUPVAL  R6 U3        ; R6 := U3
 66 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["0xFF986D3C"]
 67 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
 68 [-]: MOVE      R8 R5        ; R8 := R5
 69 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 70 [-]: GETGLOBAL R7 K1        ; R7 := table
 71 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["0xE6450C9D"]
 72 [-]: GETUPVAL  R8 U1        ; R8 := U1
 73 [-]: MOVE      R9 R6        ; R9 := R6
 74 [-]: CALL      R7 3 1       ; R7(R8,R9)
 75 [-]: GETTABLE  R7 R2 K24    ; R7 := R2["RecoveredItemInfo"]
 76 [-]: EQ        1 R7 K15     ; if R7 == nil then PC := 213
 77 [-]: JMP       213          ; PC := 213
 78 [-]: GETTABLE  R8 R7 K25    ; R8 := R7["RecoveredCredits"]
 79 [-]: EQ        1 R8 K15     ; if R8 == nil then PC := 100
 80 [-]: JMP       100          ; PC := 100
 81 [-]: GETTABLE  R8 R7 K25    ; R8 := R7["RecoveredCredits"]
 82 [-]: LT        0 K26 R8     ; if 0 >= R8 then PC := 100
 83 [-]: JMP       100          ; PC := 100
 84 [-]: NEWTABLE  R8 0 4       ; R8 := {}
 85 [-]: GETGLOBAL R9 K27       ; R9 := 0xE6DC43B0
 86 [-]: LOADK     R10 K28      ; R10 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
 87 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 88 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 89 [-]: SETTABLE  R8 K3 R9     ; R8["Name"] := R9
 90 [-]: GETTABLE  R9 R7 K25    ; R9 := R7["RecoveredCredits"]
 91 [-]: SETTABLE  R8 K7 R9     ; R8["Count"] := R9
 92 [-]: GETGLOBAL R9 K29       ; R9 := creditsIcon
 93 [-]: SETTABLE  R8 K9 R9     ; R8["Icon"] := R9
 94 [-]: SETTABLE  R8 K30 K13   ; R8["Recovered"] := "0x1"
 95 [-]: GETGLOBAL R9 K1        ; R9 := table
 96 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["0xE6450C9D"]
 97 [-]: GETUPVAL  R10 U1       ; R10 := U1
 98 [-]: MOVE      R11 R8       ; R11 := R8
 99 [-]: CALL      R9 3 1       ; R9(R10,R11)
100 [-]: GETTABLE  R9 R7 K31    ; R9 := R7["RecoveredFusionPoints"]
101 [-]: EQ        1 R9 K15     ; if R9 == nil then PC := 122
102 [-]: JMP       122          ; PC := 122
103 [-]: GETTABLE  R9 R7 K31    ; R9 := R7["RecoveredFusionPoints"]
104 [-]: LT        0 K26 R9     ; if 0 >= R9 then PC := 122
105 [-]: JMP       122          ; PC := 122
106 [-]: NEWTABLE  R9 0 4       ; R9 := {}
107 [-]: GETGLOBAL R10 K27      ; R10 := 0xE6DC43B0
108 [-]: LOADK     R11 K32      ; R11 := "/Lotus/Language/Items/FusionBundle"
109 [-]: NEWTABLE  R12 0 0      ; R12 := {}
110 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
111 [-]: SETTABLE  R9 K3 R10    ; R9["Name"] := R10
112 [-]: GETTABLE  R10 R7 K31   ; R10 := R7["RecoveredFusionPoints"]
113 [-]: SETTABLE  R9 K7 R10    ; R9["Count"] := R10
114 [-]: GETGLOBAL R10 K33      ; R10 := fusionPointsIcon
115 [-]: SETTABLE  R9 K9 R10    ; R9["Icon"] := R10
116 [-]: SETTABLE  R9 K30 K13   ; R9["Recovered"] := "0x1"
117 [-]: GETGLOBAL R10 K1       ; R10 := table
118 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["0xE6450C9D"]
119 [-]: GETUPVAL  R11 U1       ; R11 := U1
120 [-]: MOVE      R12 R9       ; R12 := R9
121 [-]: CALL      R10 3 1      ; R10(R11,R12)
122 [-]: GETTABLE  R10 R7 K34   ; R10 := R7["RecoveredCrewShipFusionPoints"]
123 [-]: EQ        1 R10 K15    ; if R10 == nil then PC := 144
124 [-]: JMP       144          ; PC := 144
125 [-]: GETTABLE  R10 R7 K34   ; R10 := R7["RecoveredCrewShipFusionPoints"]
126 [-]: LT        0 K26 R10    ; if 0 >= R10 then PC := 144
127 [-]: JMP       144          ; PC := 144
128 [-]: NEWTABLE  R10 0 4      ; R10 := {}
129 [-]: GETGLOBAL R11 K27      ; R11 := 0xE6DC43B0
130 [-]: LOADK     R12 K35      ; R12 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
131 [-]: NEWTABLE  R13 0 0      ; R13 := {}
132 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
133 [-]: SETTABLE  R10 K3 R11   ; R10["Name"] := R11
134 [-]: GETTABLE  R11 R7 K34   ; R11 := R7["RecoveredCrewShipFusionPoints"]
135 [-]: SETTABLE  R10 K7 R11   ; R10["Count"] := R11
136 [-]: GETGLOBAL R11 K36      ; R11 := crewShipFusionPointsIcon
137 [-]: SETTABLE  R10 K9 R11   ; R10["Icon"] := R11
138 [-]: SETTABLE  R10 K30 K13  ; R10["Recovered"] := "0x1"
139 [-]: GETGLOBAL R11 K1       ; R11 := table
140 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["0xE6450C9D"]
141 [-]: GETUPVAL  R12 U1       ; R12 := U1
142 [-]: MOVE      R13 R10      ; R13 := R10
143 [-]: CALL      R11 3 1      ; R11(R12,R13)
144 [-]: GETTABLE  R11 R7 K37   ; R11 := R7["RecoveredMiscItems"]
145 [-]: LOADK     R12 K38      ; R12 := 1
146 [-]: LEN       R13 R11      ; R13 := # R11
147 [-]: LOADK     R14 K38      ; R14 := 1
148 [-]: FORPREP   R12 178      ; R12 -= R14; PC := 178
149 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
150 [-]: GETGLOBAL R17 K39      ; R17 := 0x2C00D429
151 [-]: GETTABLE  R18 R16 K22  ; R18 := R16["ItemType"]
152 [-]: CALL      R17 2 2      ; R17 := R17(R18)
153 [-]: GETGLOBAL R18 K17      ; R18 := 0x400E7765
154 [-]: MOVE      R19 R17      ; R19 := R17
155 [-]: CALL      R18 2 2      ; R18 := R18(R19)
156 [-]: TEST      R18 1        ; if R18 then PC := 178
157 [-]: JMP       178          ; PC := 178
158 [-]: GETUPVAL  R18 U4       ; R18 := U4
159 [-]: MOVE      R19 R17      ; R19 := R17
160 [-]: CALL      R18 2 2      ; R18 := R18(R19)
161 [-]: TEST      R18 1        ; if R18 then PC := 178
162 [-]: JMP       178          ; PC := 178
163 [-]: GETUPVAL  R18 U3       ; R18 := U3
164 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["0xFF986D3C"]
165 [-]: GETGLOBAL R19 K4       ; R19 := mMovie
166 [-]: GETGLOBAL R20 K18      ; R20 := 0x7C282057
167 [-]: MOVE      R21 R17      ; R21 := R17
168 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
169 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
170 [-]: GETTABLE  R19 R16 K40  ; R19 := R16["ItemCount"]
171 [-]: SETTABLE  R18 K7 R19   ; R18["Count"] := R19
172 [-]: SETTABLE  R18 K30 K13  ; R18["Recovered"] := "0x1"
173 [-]: GETGLOBAL R19 K1       ; R19 := table
174 [-]: GETTABLE  R19 R19 K2   ; R19 := R19["0xE6450C9D"]
175 [-]: GETUPVAL  R20 U1       ; R20 := U1
176 [-]: MOVE      R21 R18      ; R21 := R18
177 [-]: CALL      R19 3 1      ; R19(R20,R21)
178 [-]: FORLOOP   R12 149      ; R12 += R14; if R12 <= R13 then begin PC := 149; R15 := R12 end
179 [-]: GETTABLE  R19 R7 K41   ; R19 := R7["RecoveredCollectedItems"]
180 [-]: LOADK     R20 K38      ; R20 := 1
181 [-]: LEN       R21 R19      ; R21 := # R19
182 [-]: LOADK     R22 K38      ; R22 := 1
183 [-]: FORPREP   R20 212      ; R20 -= R22; PC := 212
184 [-]: GETTABLE  R24 R19 R23  ; R24 := R19[R23]
185 [-]: GETGLOBAL R25 K18      ; R25 := 0x7C282057
186 [-]: GETTABLE  R26 R24 K42  ; R26 := R24["StoreItem"]
187 [-]: CALL      R25 2 2      ; R25 := R25(R26)
188 [-]: GETGLOBAL R26 K17      ; R26 := 0x400E7765
189 [-]: MOVE      R27 R25      ; R27 := R25
190 [-]: CALL      R26 2 2      ; R26 := R26(R27)
191 [-]: TEST      R26 1        ; if R26 then PC := 212
192 [-]: JMP       212          ; PC := 212
193 [-]: GETUPVAL  R26 U4       ; R26 := U4
194 [-]: SELF      R27 R25 K43  ; R28 := R25; R27 := R25["0x3077BE70"]
195 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
196 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
197 [-]: TEST      R26 1        ; if R26 then PC := 212
198 [-]: JMP       212          ; PC := 212
199 [-]: GETUPVAL  R26 U3       ; R26 := U3
200 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["0x1B75557F"]
201 [-]: GETGLOBAL R27 K4       ; R27 := mMovie
202 [-]: MOVE      R28 R25      ; R28 := R25
203 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
204 [-]: GETTABLE  R27 R24 K40  ; R27 := R24["ItemCount"]
205 [-]: SETTABLE  R26 K7 R27   ; R26["Count"] := R27
206 [-]: SETTABLE  R26 K30 K13  ; R26["Recovered"] := "0x1"
207 [-]: GETGLOBAL R27 K1       ; R27 := table
208 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["0xE6450C9D"]
209 [-]: GETUPVAL  R28 U1       ; R28 := U1
210 [-]: MOVE      R29 R26      ; R29 := R26
211 [-]: CALL      R27 3 1      ; R27(R28,R29)
212 [-]: FORLOOP   R20 184      ; R20 += R22; if R20 <= R21 then begin PC := 184; R23 := R20 end
213 [-]: GETGLOBAL R27 K44      ; R27 := 0x63B09107
214 [-]: GETUPVAL  R28 U5       ; R28 := U5
215 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
216 [-]: JMP       222          ; PC := 222
217 [-]: GETGLOBAL R32 K1       ; R32 := table
218 [-]: GETTABLE  R32 R32 K2   ; R32 := R32["0xE6450C9D"]
219 [-]: GETUPVAL  R33 U1       ; R33 := U1
220 [-]: MOVE      R34 R31      ; R34 := R31
221 [-]: CALL      R32 3 1      ; R32(R33,R34)
222 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 217; R29 := R30 end
223 [-]: JMP       217          ; PC := 217
224 [-]: LOADNIL   R32 R32      ; R32 := nil
225 [-]: GETGLOBAL R33 K17      ; R33 := 0x400E7765
226 [-]: GETGLOBAL R34 K45      ; R34 := gRegion
227 [-]: CALL      R33 2 2      ; R33 := R33(R34)
228 [-]: TEST      R33 1        ; if R33 then PC := 234
229 [-]: JMP       234          ; PC := 234
230 [-]: GETGLOBAL R33 K45      ; R33 := gRegion
231 [-]: SELF      R33 R33 K46  ; R34 := R33; R33 := R33["0x372CB914"]
232 [-]: CALL      R33 2 2      ; R33 := R33(R34)
233 [-]: MOVE      R32 R33      ; R32 := R33
234 [-]: NEWTABLE  R33 0 0      ; R33 := {}
235 [-]: NEWTABLE  R34 0 0      ; R34 := {}
236 [-]: GETGLOBAL R35 K47      ; R35 := _T
237 [-]: GETTABLE  R35 R35 K48  ; R35 := R35["eomScreenMode"]
238 [-]: GETUPVAL  R36 U6       ; R36 := U6
239 [-]: GETTABLE  R36 R36 K49  ; R36 := R36["ACTUAL_EOM"]
240 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 258
241 [-]: JMP       258          ; PC := 258
242 [-]: GETUPVAL  R35 U7       ; R35 := U7
243 [-]: GETTABLE  R35 R35 K50  ; R35 := R35["0x87D2274C"]
244 [-]: CALL      R35 1 2      ; R35 := R35()
245 [-]: EQ        0 R35 K51    ; if R35 ~= "0x0" then PC := 257
246 [-]: JMP       257          ; PC := 257
247 [-]: GETGLOBAL R35 K47      ; R35 := _T
248 [-]: GETTABLE  R35 R35 K48  ; R35 := R35["eomScreenMode"]
249 [-]: GETUPVAL  R36 U6       ; R36 := U6
250 [-]: GETTABLE  R36 R36 K52  ; R36 := R36["DETAILED_PREVIEW"]
251 [-]: EQ        0 R35 R36    ; if R35 ~= R36 then PC := 257
252 [-]: JMP       257          ; PC := 257
253 [-]: GETUPVAL  R35 U8       ; R35 := U8
254 [-]: SELF      R35 R35 K53  ; R36 := R35; R35 := R35["0xCA086799"]
255 [-]: CALL      R35 2 2      ; R35 := R35(R36)
256 [-]: JMP       259          ; PC := 259
257 [-]: MOVE      R35 R0       ; R35 := R0
258 [-]: MOVE      R35 R1       ; R35 := R1
259 [-]: GETUPVAL  R36 U9       ; R36 := U9
260 [-]: GETTABLE  R36 R36 K54  ; R36 := R36["mNemesisTaxInfo"]
261 [-]: GETTABLE  R36 R36 K55  ; R36 := R36["mTaxedCollectedItems"]
262 [-]: GETGLOBAL R37 K44      ; R37 := 0x63B09107
263 [-]: GETUPVAL  R38 U10      ; R38 := U10
264 [-]: CALL      R37 2 4      ; R37,R38,R39 := R37(R38)
265 [-]: JMP       396          ; PC := 396
266 [-]: GETGLOBAL R42 K17      ; R42 := 0x400E7765
267 [-]: GETTABLE  R43 R41 K56  ; R43 := R41["storeItem"]
268 [-]: CALL      R42 2 2      ; R42 := R42(R43)
269 [-]: TEST      R42 1        ; if R42 then PC := 396
270 [-]: JMP       396          ; PC := 396
271 [-]: GETTABLE  R42 R41 K57  ; R42 := R41["isStripped"]
272 [-]: TEST      R42 0        ; if not R42 then PC := 276
273 [-]: JMP       276          ; PC := 276
274 [-]: TEST      R35 0        ; if not R35 then PC := 396
275 [-]: JMP       396          ; PC := 396
276 [-]: GETTABLE  R42 R41 K56  ; R42 := R41["storeItem"]
277 [-]: SELF      R42 R42 K43  ; R43 := R42; R42 := R42["0x3077BE70"]
278 [-]: CALL      R42 2 2      ; R42 := R42(R43)
279 [-]: GETGLOBAL R43 K17      ; R43 := 0x400E7765
280 [-]: MOVE      R44 R42      ; R44 := R42
281 [-]: CALL      R43 2 2      ; R43 := R43(R44)
282 [-]: TEST      R43 1        ; if R43 then PC := 294
283 [-]: JMP       294          ; PC := 294
284 [-]: GETUPVAL  R43 U4       ; R43 := U4
285 [-]: MOVE      R44 R42      ; R44 := R42
286 [-]: CALL      R43 2 2      ; R43 := R43(R44)
287 [-]: TEST      R43 0        ; if not R43 then PC := 294
288 [-]: JMP       294          ; PC := 294
289 [-]: SELF      R43 R42 K58  ; R44 := R42; R43 := R42["0x8B598ED4"]
290 [-]: GETUPVAL  R45 U11      ; R45 := U11
291 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
292 [-]: TEST      R43 0        ; if not R43 then PC := 396
293 [-]: JMP       396          ; PC := 396
294 [-]: GETUPVAL  R43 U3       ; R43 := U3
295 [-]: GETTABLE  R43 R43 K20  ; R43 := R43["0x1B75557F"]
296 [-]: GETGLOBAL R44 K4       ; R44 := mMovie
297 [-]: GETTABLE  R45 R41 K56  ; R45 := R41["storeItem"]
298 [-]: NEWTABLE  R46 0 2      ; R46 := {}
299 [-]: SETTABLE  R46 K59 R41  ; R46["ItemInfo"] := R41
300 [-]: GETUPVAL  R47 U8       ; R47 := U8
301 [-]: SETTABLE  R46 K60 R47  ; R46["GameData"] := R47
302 [-]: LOADNIL   R47 R48      ; R47 := R48 := nil
303 [-]: MOVE      R49 R1       ; R49 := R1
304 [-]: CALL      R43 7 2      ; R43 := R43(R44,R45,R46,R47,R48,R49)
305 [-]: GETTABLE  R44 R43 K7   ; R44 := R43["Count"]
306 [-]: EQ        0 R44 K38    ; if R44 ~= 1 then PC := 319
307 [-]: JMP       319          ; PC := 319
308 [-]: GETTABLE  R44 R43 K61  ; R44 := R43["Category"]
309 [-]: GETGLOBAL R45 K62      ; R45 := Engine
310 [-]: GETTABLE  R45 R45 K63  ; R45 := R45["Item_CreditBundles"]
311 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 318
312 [-]: JMP       318          ; PC := 318
313 [-]: GETTABLE  R44 R43 K61  ; R44 := R43["Category"]
314 [-]: GETGLOBAL R45 K62      ; R45 := Engine
315 [-]: GETTABLE  R45 R45 K64  ; R45 := R45["Item_FusionBundles"]
316 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 319
317 [-]: JMP       319          ; PC := 319
318 [-]: SETTABLE  R43 K7 K26   ; R43["Count"] := 0
319 [-]: GETTABLE  R44 R41 K65  ; R44 := R41["FromEnemyCache"]
320 [-]: TEST      R44 0        ; if not R44 then PC := 331
321 [-]: JMP       331          ; PC := 331
322 [-]: GETGLOBAL R44 K4       ; R44 := mMovie
323 [-]: SELF      R44 R44 K5   ; R45 := R44; R44 := R44["0x5DB0BD4"]
324 [-]: GETUPVAL  R46 U12      ; R46 := U12
325 [-]: MOVE      R47 R1       ; R47 := R1
326 [-]: NEWTABLE  R48 0 1      ; R48 := {}
327 [-]: GETTABLE  R49 R43 K3   ; R49 := R43["Name"]
328 [-]: SETTABLE  R48 K66 R49  ; R48["ITEM_NAME"] := R49
329 [-]: CALL      R44 5 2      ; R44 := R44(R45,R46,R47,R48)
330 [-]: SETTABLE  R43 K3 R44   ; R43["Name"] := R44
331 [-]: LOADK     R44 K38      ; R44 := 1
332 [-]: LEN       R45 R36      ; R45 := # R36
333 [-]: LOADK     R46 K38      ; R46 := 1
334 [-]: FORPREP   R44 345      ; R44 -= R46; PC := 345
335 [-]: GETTABLE  R48 R36 R47  ; R48 := R36[R47]
336 [-]: GETTABLE  R48 R48 K56  ; R48 := R48["storeItem"]
337 [-]: SELF      R48 R48 K43  ; R49 := R48; R48 := R48["0x3077BE70"]
338 [-]: CALL      R48 2 2      ; R48 := R48(R49)
339 [-]: EQ        0 R48 R42    ; if R48 ~= R42 then PC := 345
340 [-]: JMP       345          ; PC := 345
341 [-]: GETTABLE  R48 R36 R47  ; R48 := R36[R47]
342 [-]: GETTABLE  R48 R48 K68  ; R48 := R48["itemCount"]
343 [-]: SETTABLE  R43 K67 R48  ; R43["TaxedCount"] := R48
344 [-]: JMP       346          ; PC := 346
345 [-]: FORLOOP   R44 335      ; R44 += R46; if R44 <= R45 then begin PC := 335; R47 := R44 end
346 [-]: SELF      R48 R42 K58  ; R49 := R42; R48 := R42["0x8B598ED4"]
347 [-]: GETUPVAL  R50 U13      ; R50 := U13
348 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
349 [-]: TEST      R48 0        ; if not R48 then PC := 361
350 [-]: JMP       361          ; PC := 361
351 [-]: GETTABLE  R48 R41 K56  ; R48 := R41["storeItem"]
352 [-]: SELF      R48 R48 K70  ; R49 := R48; R48 := R48["0x17B9C4FF"]
353 [-]: CALL      R48 2 2      ; R48 := R48(R49)
354 [-]: SETTABLE  R43 K69 R48  ; R43["Rarity"] := R48
355 [-]: GETGLOBAL R48 K1       ; R48 := table
356 [-]: GETTABLE  R48 R48 K2   ; R48 := R48["0xE6450C9D"]
357 [-]: MOVE      R49 R33      ; R49 := R33
358 [-]: MOVE      R50 R43      ; R50 := R43
359 [-]: CALL      R48 3 1      ; R48(R49,R50)
360 [-]: JMP       366          ; PC := 366
361 [-]: GETGLOBAL R48 K1       ; R48 := table
362 [-]: GETTABLE  R48 R48 K2   ; R48 := R48["0xE6450C9D"]
363 [-]: MOVE      R49 R34      ; R49 := R34
364 [-]: MOVE      R50 R43      ; R50 := R43
365 [-]: CALL      R48 3 1      ; R48(R49,R50)
366 [-]: GETTABLE  R48 R43 K7   ; R48 := R43["Count"]
367 [-]: TEST      R0 1         ; if R0 then PC := 396
368 [-]: JMP       396          ; PC := 396
369 [-]: GETGLOBAL R49 K17      ; R49 := 0x400E7765
370 [-]: GETGLOBAL R50 K71      ; R50 := gChallengeMgr
371 [-]: CALL      R49 2 2      ; R49 := R49(R50)
372 [-]: TEST      R49 1        ; if R49 then PC := 396
373 [-]: JMP       396          ; PC := 396
374 [-]: GETGLOBAL R49 K17      ; R49 := 0x400E7765
375 [-]: MOVE      R50 R32      ; R50 := R32
376 [-]: CALL      R49 2 2      ; R49 := R49(R50)
377 [-]: TEST      R49 1        ; if R49 then PC := 396
378 [-]: JMP       396          ; PC := 396
379 [-]: GETGLOBAL R49 K17      ; R49 := 0x400E7765
380 [-]: MOVE      R50 R42      ; R50 := R42
381 [-]: CALL      R49 2 2      ; R49 := R49(R50)
382 [-]: TEST      R49 1        ; if R49 then PC := 396
383 [-]: JMP       396          ; PC := 396
384 [-]: TEST      R48 0        ; if not R48 then PC := 396
385 [-]: JMP       396          ; PC := 396
386 [-]: LT        0 K26 R48    ; if 0 >= R48 then PC := 396
387 [-]: JMP       396          ; PC := 396
388 [-]: GETGLOBAL R49 K71      ; R49 := gChallengeMgr
389 [-]: SELF      R49 R49 K72  ; R50 := R49; R49 := R49["0xD395D8DD"]
390 [-]: MOVE      R51 R32      ; R51 := R32
391 [-]: GETUPVAL  R52 U14      ; R52 := U14
392 [-]: MOVE      R53 R48      ; R53 := R48
393 [-]: LOADNIL   R54 R54      ; R54 := nil
394 [-]: MOVE      R55 R42      ; R55 := R42
395 [-]: CALL      R49 7 1      ; R49(R50,R51,R52,R53,R54,R55)
396 [-]: TFORLOOP  R37 2        ; R40,R41 :=  R37(R38,R39); if R40 ~= nil then begin PC = 266; R39 := R40 end
397 [-]: JMP       266          ; PC := 266
398 [-]: GETGLOBAL R49 K1       ; R49 := table
399 [-]: GETTABLE  R49 R49 K73  ; R49 := R49["0xA5C58010"]
400 [-]: MOVE      R50 R33      ; R50 := R33
401 [-]: CLOSURE   R51 0        ; R51 := closure(Function #80.1)
402 [-]: CALL      R49 3 1      ; R49(R50,R51)
403 [-]: GETGLOBAL R49 K44      ; R49 := 0x63B09107
404 [-]: MOVE      R50 R33      ; R50 := R33
405 [-]: CALL      R49 2 4      ; R49,R50,R51 := R49(R50)
406 [-]: JMP       412          ; PC := 412
407 [-]: GETGLOBAL R54 K1       ; R54 := table
408 [-]: GETTABLE  R54 R54 K2   ; R54 := R54["0xE6450C9D"]
409 [-]: GETUPVAL  R55 U1       ; R55 := U1
410 [-]: MOVE      R56 R53      ; R56 := R53
411 [-]: CALL      R54 3 1      ; R54(R55,R56)
412 [-]: TFORLOOP  R49 2        ; R52,R53 :=  R49(R50,R51); if R52 ~= nil then begin PC = 407; R51 := R52 end
413 [-]: JMP       407          ; PC := 407
414 [-]: GETGLOBAL R54 K44      ; R54 := 0x63B09107
415 [-]: MOVE      R55 R34      ; R55 := R34
416 [-]: CALL      R54 2 4      ; R54,R55,R56 := R54(R55)
417 [-]: JMP       423          ; PC := 423
418 [-]: GETGLOBAL R59 K1       ; R59 := table
419 [-]: GETTABLE  R59 R59 K2   ; R59 := R59["0xE6450C9D"]
420 [-]: GETUPVAL  R60 U1       ; R60 := U1
421 [-]: MOVE      R61 R58      ; R61 := R58
422 [-]: CALL      R59 3 1      ; R59(R60,R61)
423 [-]: TFORLOOP  R54 2        ; R57,R58 :=  R54(R55,R56); if R57 ~= nil then begin PC = 418; R56 := R57 end
424 [-]: JMP       418          ; PC := 418
425 [-]: GETGLOBAL R59 K44      ; R59 := 0x63B09107
426 [-]: GETUPVAL  R60 U15      ; R60 := U15
427 [-]: CALL      R59 2 4      ; R59,R60,R61 := R59(R60)
428 [-]: JMP       462          ; PC := 462
429 [-]: GETTABLE  R64 R63 K74  ; R64 := R63["mItemType"]
430 [-]: GETGLOBAL R65 K17      ; R65 := 0x400E7765
431 [-]: MOVE      R66 R64      ; R66 := R64
432 [-]: CALL      R65 2 2      ; R65 := R65(R66)
433 [-]: TEST      R65 1        ; if R65 then PC := 459
434 [-]: JMP       459          ; PC := 459
435 [-]: GETGLOBAL R65 K75      ; R65 := 0xEAC5E738
436 [-]: MOVE      R66 R64      ; R66 := R64
437 [-]: CALL      R65 2 2      ; R65 := R65(R66)
438 [-]: TEST      R65 0        ; if not R65 then PC := 444
439 [-]: JMP       444          ; PC := 444
440 [-]: GETGLOBAL R65 K18      ; R65 := 0x7C282057
441 [-]: MOVE      R66 R64      ; R66 := R64
442 [-]: CALL      R65 2 2      ; R65 := R65(R66)
443 [-]: MOVE      R64 R65      ; R64 := R65
444 [-]: GETUPVAL  R65 U3       ; R65 := U3
445 [-]: GETTABLE  R65 R65 K23  ; R65 := R65["0xFF986D3C"]
446 [-]: GETGLOBAL R66 K4       ; R66 := mMovie
447 [-]: MOVE      R67 R64      ; R67 := R64
448 [-]: NEWTABLE  R68 0 2      ; R68 := {}
449 [-]: SETTABLE  R68 K59 R63  ; R68["ItemInfo"] := R63
450 [-]: GETUPVAL  R69 U8       ; R69 := U8
451 [-]: SETTABLE  R68 K60 R69  ; R68["GameData"] := R69
452 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
453 [-]: GETGLOBAL R66 K1       ; R66 := table
454 [-]: GETTABLE  R66 R66 K2   ; R66 := R66["0xE6450C9D"]
455 [-]: GETUPVAL  R67 U1       ; R67 := U1
456 [-]: MOVE      R68 R65      ; R68 := R65
457 [-]: CALL      R66 3 1      ; R66(R67,R68)
458 [-]: JMP       462          ; PC := 462
459 [-]: GETGLOBAL R66 K76      ; R66 := 0x93B1256B
460 [-]: LOADK     R67 K77      ; R67 := "MissionStatsAndResults: invalid Consumable acquired during mission?"
461 [-]: CALL      R66 2 1      ; R66(R67)
462 [-]: TFORLOOP  R59 2        ; R62,R63 :=  R59(R60,R61); if R62 ~= nil then begin PC = 429; R61 := R62 end
463 [-]: JMP       429          ; PC := 429
464 [-]: NEWTABLE  R66 0 0      ; R66 := {}
465 [-]: GETGLOBAL R67 K78      ; R67 := gRecipeItemType
466 [-]: SETTABLE  R66 R67 K79  ; R66[R67] := 9
467 [-]: GETUPVAL  R67 U16      ; R67 := U16
468 [-]: MOVE      R68 R66      ; R68 := R66
469 [-]: CALL      R67 2 1      ; R67(R68)
470 [-]: GETGLOBAL R67 K1       ; R67 := table
471 [-]: GETTABLE  R67 R67 K73  ; R67 := R67["0xA5C58010"]
472 [-]: GETUPVAL  R68 U17      ; R68 := U17
473 [-]: CLOSURE   R69 1        ; R69 := closure(Function #80.2)
474 [-]: CALL      R67 3 1      ; R67(R68,R69)
475 [-]: LOADK     R67 K38      ; R67 := 1
476 [-]: GETUPVAL  R68 U17      ; R68 := U17
477 [-]: LEN       R68 R68      ; R68 := # R68
478 [-]: LOADNIL   R69 R69      ; R69 := nil
479 [-]: GETGLOBAL R70 K17      ; R70 := 0x400E7765
480 [-]: GETGLOBAL R71 K80      ; R71 := gGameRules
481 [-]: CALL      R70 2 2      ; R70 := R70(R71)
482 [-]: TEST      R70 1        ; if R70 then PC := 488
483 [-]: JMP       488          ; PC := 488
484 [-]: GETGLOBAL R70 K80      ; R70 := gGameRules
485 [-]: SELF      R70 R70 K81  ; R71 := R70; R70 := R70["0xC17093D6"]
486 [-]: CALL      R70 2 2      ; R70 := R70(R71)
487 [-]: MOVE      R69 R70      ; R69 := R70
488 [-]: NEWTABLE  R70 0 0      ; R70 := {}
489 [-]: GETUPVAL  R71 U9       ; R71 := U9
490 [-]: GETTABLE  R71 R71 K54  ; R71 := R71["mNemesisTaxInfo"]
491 [-]: GETTABLE  R71 R71 K82  ; R71 := R71["mTaxedMiscItems"]
492 [-]: LOADK     R72 K38      ; R72 := 1
493 [-]: LEN       R73 R71      ; R73 := # R71
494 [-]: LOADK     R74 K38      ; R74 := 1
495 [-]: FORPREP   R72 514      ; R72 -= R74; PC := 514
496 [-]: GETGLOBAL R76 K17      ; R76 := 0x400E7765
497 [-]: GETTABLE  R77 R71 R75  ; R77 := R71[R75]
498 [-]: GETTABLE  R77 R77 K74  ; R77 := R77["mItemType"]
499 [-]: CALL      R76 2 2      ; R76 := R76(R77)
500 [-]: TEST      R76 1        ; if R76 then PC := 514
501 [-]: JMP       514          ; PC := 514
502 [-]: GETTABLE  R76 R71 R75  ; R76 := R71[R75]
503 [-]: GETTABLE  R76 R76 K74  ; R76 := R76["mItemType"]
504 [-]: SELF      R76 R76 K58  ; R77 := R76; R76 := R76["0x8B598ED4"]
505 [-]: GETGLOBAL R78 K83      ; R78 := gLotusArtifactUpgradeType
506 [-]: CALL      R76 3 2      ; R76 := R76(R77,R78)
507 [-]: TEST      R76 1        ; if R76 then PC := 514
508 [-]: JMP       514          ; PC := 514
509 [-]: GETGLOBAL R76 K1       ; R76 := table
510 [-]: GETTABLE  R76 R76 K2   ; R76 := R76["0xE6450C9D"]
511 [-]: MOVE      R77 R70      ; R77 := R70
512 [-]: GETTABLE  R78 R71 R75  ; R78 := R71[R75]
513 [-]: CALL      R76 3 1      ; R76(R77,R78)
514 [-]: FORLOOP   R72 496      ; R72 += R74; if R72 <= R73 then begin PC := 496; R75 := R72 end
515 [-]: GETGLOBAL R76 K44      ; R76 := 0x63B09107
516 [-]: GETUPVAL  R77 U18      ; R77 := U18
517 [-]: CALL      R76 2 4      ; R76,R77,R78 := R76(R77)
518 [-]: JMP       769          ; PC := 769
519 [-]: GETTABLE  R81 R80 K74  ; R81 := R80["mItemType"]
520 [-]: GETTABLE  R82 R80 K84  ; R82 := R80["mIsMystery"]
521 [-]: TEST      R82 0        ; if not R82 then PC := 540
522 [-]: JMP       540          ; PC := 540
523 [-]: NEWTABLE  R82 0 0      ; R82 := {}
524 [-]: GETGLOBAL R83 K4       ; R83 := mMovie
525 [-]: SELF      R83 R83 K5   ; R84 := R83; R83 := R83["0x5DB0BD4"]
526 [-]: LOADK     R85 K85      ; R85 := "/Lotus/Language/Game/UnidentifiedItem"
527 [-]: MOVE      R86 R0       ; R86 := R0
528 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
529 [-]: SETTABLE  R82 K3 R83   ; R82["Name"] := R83
530 [-]: GETTABLE  R83 R80 K86  ; R83 := R80["mItemCount"]
531 [-]: SETTABLE  R82 K7 R83   ; R82["Count"] := R83
532 [-]: GETGLOBAL R83 K87      ; R83 := questionMarkTexture
533 [-]: SETTABLE  R82 K9 R83   ; R82["Icon"] := R83
534 [-]: GETGLOBAL R83 K1       ; R83 := table
535 [-]: GETTABLE  R83 R83 K2   ; R83 := R83["0xE6450C9D"]
536 [-]: GETUPVAL  R84 U1       ; R84 := U1
537 [-]: MOVE      R85 R82      ; R85 := R82
538 [-]: CALL      R83 3 1      ; R83(R84,R85)
539 [-]: JMP       769          ; PC := 769
540 [-]: GETGLOBAL R83 K17      ; R83 := 0x400E7765
541 [-]: MOVE      R84 R81      ; R84 := R81
542 [-]: CALL      R83 2 2      ; R83 := R83(R84)
543 [-]: TEST      R83 0        ; if not R83 then PC := 549
544 [-]: JMP       549          ; PC := 549
545 [-]: GETGLOBAL R83 K76      ; R83 := 0x93B1256B
546 [-]: LOADK     R84 K88      ; R84 := "MissionStatsAndResults: invalid miscItem in mMiscItems"
547 [-]: CALL      R83 2 1      ; R83(R84)
548 [-]: JMP       769          ; PC := 769
549 [-]: GETGLOBAL R83 K75      ; R83 := 0xEAC5E738
550 [-]: MOVE      R84 R81      ; R84 := R81
551 [-]: CALL      R83 2 2      ; R83 := R83(R84)
552 [-]: TEST      R83 0        ; if not R83 then PC := 558
553 [-]: JMP       558          ; PC := 558
554 [-]: GETGLOBAL R83 K18      ; R83 := 0x7C282057
555 [-]: MOVE      R84 R81      ; R84 := R81
556 [-]: CALL      R83 2 2      ; R83 := R83(R84)
557 [-]: MOVE      R81 R83      ; R81 := R83
558 [-]: GETGLOBAL R83 K17      ; R83 := 0x400E7765
559 [-]: MOVE      R84 R81      ; R84 := R81
560 [-]: CALL      R83 2 2      ; R83 := R83(R84)
561 [-]: TEST      R83 0        ; if not R83 then PC := 571
562 [-]: JMP       571          ; PC := 571
563 [-]: GETGLOBAL R83 K76      ; R83 := 0x93B1256B
564 [-]: LOADK     R84 K89      ; R84 := "MissionStatsAndResults: broken miscItem WRes: "
565 [-]: GETTABLE  R85 R80 K74  ; R85 := R80["mItemType"]
566 [-]: SELF      R85 R85 K90  ; R86 := R85; R85 := R85["0x1B252E3C"]
567 [-]: CALL      R85 2 2      ; R85 := R85(R86)
568 [-]: CONCAT    R84 R84 R85  ; R84 := R84 .. R85
569 [-]: CALL      R83 2 1      ; R83(R84)
570 [-]: JMP       769          ; PC := 769
571 [-]: GETGLOBAL R83 K47      ; R83 := _T
572 [-]: GETTABLE  R83 R83 K48  ; R83 := R83["eomScreenMode"]
573 [-]: GETUPVAL  R84 U6       ; R84 := U6
574 [-]: GETTABLE  R84 R84 K49  ; R84 := R84["ACTUAL_EOM"]
575 [-]: EQ        1 R83 R84    ; if R83 == R84 then PC := 590
576 [-]: JMP       590          ; PC := 590
577 [-]: GETGLOBAL R83 K17      ; R83 := 0x400E7765
578 [-]: MOVE      R84 R81      ; R84 := R81
579 [-]: CALL      R83 2 2      ; R83 := R83(R84)
580 [-]: TEST      R83 1        ; if R83 then PC := 590
581 [-]: JMP       590          ; PC := 590
582 [-]: SELF      R83 R81 K58  ; R84 := R81; R83 := R81["0x8B598ED4"]
583 [-]: GETGLOBAL R85 K78      ; R85 := gRecipeItemType
584 [-]: CALL      R83 3 2      ; R83 := R83(R84,R85)
585 [-]: TEST      R83 0        ; if not R83 then PC := 592
586 [-]: JMP       592          ; PC := 592
587 [-]: GETUPVAL  R83 U19      ; R83 := U19
588 [-]: CALL      R83 1 2      ; R83 := R83()
589 [-]: JMP       592          ; PC := 592
590 [-]: MOVE      R83 R0       ; R83 := R0
591 [-]: MOVE      R83 R1       ; R83 := R1
592 [-]: TEST      R83 1        ; if R83 then PC := 769
593 [-]: JMP       769          ; PC := 769
594 [-]: LE        0 R67 R68    ; if R67 > R68 then PC := 631
595 [-]: JMP       631          ; PC := 631
596 [-]: LOADK     R84 K38      ; R84 := 1
597 [-]: SELF      R85 R81 K58  ; R86 := R81; R85 := R81["0x8B598ED4"]
598 [-]: GETGLOBAL R87 K91      ; R87 := gMiscItemBaseType
599 [-]: CALL      R85 3 2      ; R85 := R85(R86,R87)
600 [-]: TEST      R85 0        ; if not R85 then PC := 606
601 [-]: JMP       606          ; PC := 606
602 [-]: SELF      R85 R81 K92  ; R86 := R81; R85 := R81["0xBCF63E96"]
603 [-]: CALL      R85 2 2      ; R85 := R85(R86)
604 [-]: MOVE      R84 R85      ; R84 := R85
605 [-]: JMP       619          ; PC := 619
606 [-]: GETGLOBAL R85 K93      ; R85 := 0xECFDD17
607 [-]: MOVE      R86 R66      ; R86 := R66
608 [-]: CALL      R85 2 4      ; R85,R86,R87 := R85(R86)
609 [-]: JMP       617          ; PC := 617
610 [-]: SELF      R90 R81 K58  ; R91 := R81; R90 := R81["0x8B598ED4"]
611 [-]: MOVE      R92 R88      ; R92 := R88
612 [-]: CALL      R90 3 2      ; R90 := R90(R91,R92)
613 [-]: TEST      R90 0        ; if not R90 then PC := 617
614 [-]: JMP       617          ; PC := 617
615 [-]: MOVE      R84 R89      ; R84 := R89
616 [-]: JMP       619          ; PC := 619
617 [-]: TFORLOOP  R85 2        ; R88,R89 :=  R85(R86,R87); if R88 ~= nil then begin PC = 610; R87 := R88 end
618 [-]: JMP       610          ; PC := 610
619 [-]: GETUPVAL  R90 U17      ; R90 := U17
620 [-]: GETTABLE  R90 R90 R67  ; R90 := R90[R67]
621 [-]: GETTABLE  R90 R90 K94  ; R90 := R90["SortPriority"]
622 [-]: LT        0 R84 R90    ; if R84 >= R90 then PC := 631
623 [-]: JMP       631          ; PC := 631
624 [-]: GETGLOBAL R90 K1       ; R90 := table
625 [-]: GETTABLE  R90 R90 K2   ; R90 := R90["0xE6450C9D"]
626 [-]: GETUPVAL  R91 U1       ; R91 := U1
627 [-]: GETUPVAL  R92 U17      ; R92 := U17
628 [-]: GETTABLE  R92 R92 R67  ; R92 := R92[R67]
629 [-]: CALL      R90 3 1      ; R90(R91,R92)
630 [-]: ADD       R67 R67 K38  ; R67 := R67 + 1
631 [-]: NEWTABLE  R90 0 0      ; R90 := {}
632 [-]: SELF      R91 R81 K58  ; R92 := R81; R91 := R81["0x8B598ED4"]
633 [-]: GETGLOBAL R93 K95      ; R93 := gFishItemType
634 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
635 [-]: TEST      R91 0        ; if not R91 then PC := 675
636 [-]: JMP       675          ; PC := 675
637 [-]: LOADNIL   R91 R91      ; R91 := nil
638 [-]: GETGLOBAL R92 K17      ; R92 := 0x400E7765
639 [-]: MOVE      R93 R69      ; R93 := R69
640 [-]: CALL      R92 2 2      ; R92 := R92(R93)
641 [-]: TEST      R92 1        ; if R92 then PC := 648
642 [-]: JMP       648          ; PC := 648
643 [-]: SELF      R92 R69 K96  ; R93 := R69; R92 := R69["0x62FBC1B8"]
644 [-]: MOVE      R94 R81      ; R94 := R81
645 [-]: CALL      R92 3 2      ; R92 := R92(R93,R94)
646 [-]: MOVE      R91 R92      ; R91 := R92
647 [-]: JMP       659          ; PC := 659
648 [-]: GETGLOBAL R92 K18      ; R92 := 0x7C282057
649 [-]: LOADK     R93 K97      ; R93 := "/Lotus/StoreItems/"
650 [-]: GETGLOBAL R94 K98      ; R94 := string
651 [-]: GETTABLE  R94 R94 K99  ; R94 := R94["0x7B782033"]
652 [-]: SELF      R95 R81 K90  ; R96 := R81; R95 := R81["0x1B252E3C"]
653 [-]: CALL      R95 2 2      ; R95 := R95(R96)
654 [-]: LOADK     R96 K100     ; R96 := 8
655 [-]: CALL      R94 3 2      ; R94 := R94(R95,R96)
656 [-]: CONCAT    R93 R93 R94  ; R93 := R93 .. R94
657 [-]: CALL      R92 2 2      ; R92 := R92(R93)
658 [-]: MOVE      R91 R92      ; R91 := R92
659 [-]: GETGLOBAL R92 K17      ; R92 := 0x400E7765
660 [-]: MOVE      R93 R91      ; R93 := R91
661 [-]: CALL      R92 2 2      ; R92 := R92(R93)
662 [-]: TEST      R92 1        ; if R92 then PC := 685
663 [-]: JMP       685          ; PC := 685
664 [-]: GETUPVAL  R92 U3       ; R92 := U3
665 [-]: GETTABLE  R92 R92 K20  ; R92 := R92["0x1B75557F"]
666 [-]: GETGLOBAL R93 K4       ; R93 := mMovie
667 [-]: MOVE      R94 R91      ; R94 := R91
668 [-]: NEWTABLE  R95 0 2      ; R95 := {}
669 [-]: SETTABLE  R95 K59 R80  ; R95["ItemInfo"] := R80
670 [-]: GETUPVAL  R96 U8       ; R96 := U8
671 [-]: SETTABLE  R95 K60 R96  ; R95["GameData"] := R96
672 [-]: CALL      R92 4 2      ; R92 := R92(R93,R94,R95)
673 [-]: MOVE      R90 R92      ; R90 := R92
674 [-]: JMP       685          ; PC := 685
675 [-]: GETUPVAL  R92 U3       ; R92 := U3
676 [-]: GETTABLE  R92 R92 K23  ; R92 := R92["0xFF986D3C"]
677 [-]: GETGLOBAL R93 K4       ; R93 := mMovie
678 [-]: MOVE      R94 R81      ; R94 := R81
679 [-]: NEWTABLE  R95 0 2      ; R95 := {}
680 [-]: SETTABLE  R95 K59 R80  ; R95["ItemInfo"] := R80
681 [-]: GETUPVAL  R96 U8       ; R96 := U8
682 [-]: SETTABLE  R95 K60 R96  ; R95["GameData"] := R96
683 [-]: CALL      R92 4 2      ; R92 := R92(R93,R94,R95)
684 [-]: MOVE      R90 R92      ; R90 := R92
685 [-]: GETTABLE  R92 R80 K86  ; R92 := R80["mItemCount"]
686 [-]: SETTABLE  R90 K7 R92   ; R90["Count"] := R92
687 [-]: LOADK     R92 K38      ; R92 := 1
688 [-]: LEN       R93 R70      ; R93 := # R70
689 [-]: LOADK     R94 K38      ; R94 := 1
690 [-]: FORPREP   R92 699      ; R92 -= R94; PC := 699
691 [-]: GETTABLE  R96 R70 R95  ; R96 := R70[R95]
692 [-]: GETTABLE  R96 R96 K74  ; R96 := R96["mItemType"]
693 [-]: EQ        0 R96 R81    ; if R96 ~= R81 then PC := 699
694 [-]: JMP       699          ; PC := 699
695 [-]: GETTABLE  R96 R70 R95  ; R96 := R70[R95]
696 [-]: GETTABLE  R96 R96 K86  ; R96 := R96["mItemCount"]
697 [-]: SETTABLE  R90 K67 R96  ; R90["TaxedCount"] := R96
698 [-]: JMP       700          ; PC := 700
699 [-]: FORLOOP   R92 691      ; R92 += R94; if R92 <= R93 then begin PC := 691; R95 := R92 end
700 [-]: GETTABLE  R96 R90 K7   ; R96 := R90["Count"]
701 [-]: EQ        1 R96 K26    ; if R96 == 0 then PC := 769
702 [-]: JMP       769          ; PC := 769
703 [-]: SELF      R96 R81 K58  ; R97 := R81; R96 := R81["0x8B598ED4"]
704 [-]: GETUPVAL  R98 U20      ; R98 := U20
705 [-]: CALL      R96 3 2      ; R96 := R96(R97,R98)
706 [-]: TEST      R96 0        ; if not R96 then PC := 752
707 [-]: JMP       752          ; PC := 752
708 [-]: GETGLOBAL R96 K10      ; R96 := _G
709 [-]: GETTABLE  R96 R96 K101 ; R96 := R96["LastMissionKuva"]
710 [-]: EQ        0 R96 K15    ; if R96 ~= nil then PC := 740
711 [-]: JMP       740          ; PC := 740
712 [-]: GETUPVAL  R96 U21      ; R96 := U21
713 [-]: CALL      R96 1 2      ; R96 := R96()
714 [-]: GETTABLE  R97 R96 K102 ; R97 := R96["periodicMissionTag"]
715 [-]: GETGLOBAL R98 K103     ; R98 := EMPTY_SYMBOL
716 [-]: EQ        1 R97 R98    ; if R97 == R98 then PC := 731
717 [-]: JMP       731          ; PC := 731
718 [-]: GETGLOBAL R97 K104     ; R97 := gPlayerProfileMgr
719 [-]: SELF      R97 R97 K105 ; R98 := R97; R97 := R97["0x21EF7B1A"]
720 [-]: LOADK     R99 K26      ; R99 := 0
721 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
722 [-]: SELF      R97 R97 K106 ; R98 := R97; R97 := R97["0x654F1092"]
723 [-]: CALL      R97 2 2      ; R97 := R97(R98)
724 [-]: SELF      R97 R97 K107 ; R98 := R97; R97 := R97["0x2B046279"]
725 [-]: GETTABLE  R99 R96 K102 ; R99 := R96["periodicMissionTag"]
726 [-]: GETUPVAL  R100 U7      ; R100 := U7
727 [-]: GETTABLE  R100 R100 K108; R100 := R100["KUVA_TOWER_MISSION_INTERVAL"]
728 [-]: CALL      R97 4 2      ; R97 := R97(R98,R99,R100)
729 [-]: TEST      R97 0        ; if not R97 then PC := 769
730 [-]: JMP       769          ; PC := 769
731 [-]: GETGLOBAL R97 K1       ; R97 := table
732 [-]: GETTABLE  R97 R97 K2   ; R97 := R97["0xE6450C9D"]
733 [-]: GETUPVAL  R98 U1       ; R98 := U1
734 [-]: LOADK     R99 K38      ; R99 := 1
735 [-]: MOVE      R100 R90     ; R100 := R90
736 [-]: CALL      R97 4 1      ; R97(R98,R99,R100)
737 [-]: GETGLOBAL R97 K10      ; R97 := _G
738 [-]: SETTABLE  R97 K101 R90 ; R97["LastMissionKuva"] := R90
739 [-]: JMP       769          ; PC := 769
740 [-]: GETGLOBAL R97 K10      ; R97 := _G
741 [-]: GETTABLE  R97 R97 K101 ; R97 := R97["LastMissionKuva"]
742 [-]: GETTABLE  R98 R90 K67  ; R98 := R90["TaxedCount"]
743 [-]: SETTABLE  R97 K67 R98  ; R97["TaxedCount"] := R98
744 [-]: GETGLOBAL R97 K1       ; R97 := table
745 [-]: GETTABLE  R97 R97 K2   ; R97 := R97["0xE6450C9D"]
746 [-]: GETUPVAL  R98 U1       ; R98 := U1
747 [-]: LOADK     R99 K38      ; R99 := 1
748 [-]: GETGLOBAL R100 K10     ; R100 := _G
749 [-]: GETTABLE  R100 R100 K101; R100 := R100["LastMissionKuva"]
750 [-]: CALL      R97 4 1      ; R97(R98,R99,R100)
751 [-]: JMP       769          ; PC := 769
752 [-]: SELF      R97 R81 K58  ; R98 := R81; R97 := R81["0x8B598ED4"]
753 [-]: GETUPVAL  R99 U22      ; R99 := U22
754 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
755 [-]: TEST      R97 0        ; if not R97 then PC := 764
756 [-]: JMP       764          ; PC := 764
757 [-]: GETGLOBAL R97 K1       ; R97 := table
758 [-]: GETTABLE  R97 R97 K2   ; R97 := R97["0xE6450C9D"]
759 [-]: GETUPVAL  R98 U1       ; R98 := U1
760 [-]: LOADK     R99 K38      ; R99 := 1
761 [-]: MOVE      R100 R90     ; R100 := R90
762 [-]: CALL      R97 4 1      ; R97(R98,R99,R100)
763 [-]: JMP       769          ; PC := 769
764 [-]: GETGLOBAL R97 K1       ; R97 := table
765 [-]: GETTABLE  R97 R97 K2   ; R97 := R97["0xE6450C9D"]
766 [-]: GETUPVAL  R98 U1       ; R98 := U1
767 [-]: MOVE      R99 R90      ; R99 := R90
768 [-]: CALL      R97 3 1      ; R97(R98,R99)
769 [-]: TFORLOOP  R76 2        ; R79,R80 :=  R76(R77,R78); if R79 ~= nil then begin PC = 519; R78 := R79 end
770 [-]: JMP       519          ; PC := 519
771 [-]: MOVE      R97 R67      ; R97 := R67
772 [-]: MOVE      R98 R68      ; R98 := R68
773 [-]: LOADK     R99 K38      ; R99 := 1
774 [-]: FORPREP   R97 781      ; R97 -= R99; PC := 781
775 [-]: GETGLOBAL R101 K1      ; R101 := table
776 [-]: GETTABLE  R101 R101 K2 ; R101 := R101["0xE6450C9D"]
777 [-]: GETUPVAL  R102 U1      ; R102 := U1
778 [-]: GETUPVAL  R103 U17     ; R103 := U17
779 [-]: GETTABLE  R103 R103 R100; R103 := R103[R100]
780 [-]: CALL      R101 3 1     ; R101(R102,R103)
781 [-]: FORLOOP   R97 775      ; R97 += R99; if R97 <= R98 then begin PC := 775; R100 := R97 end
782 [-]: GETGLOBAL R101 K44     ; R101 := 0x63B09107
783 [-]: GETUPVAL  R102 U23     ; R102 := U23
784 [-]: CALL      R101 2 4     ; R101,R102,R103 := R101(R102)
785 [-]: JMP       818          ; PC := 818
786 [-]: GETGLOBAL R106 K17     ; R106 := 0x400E7765
787 [-]: GETTABLE  R107 R105 K74; R107 := R105["mItemType"]
788 [-]: CALL      R106 2 2     ; R106 := R106(R107)
789 [-]: TEST      R106 1       ; if R106 then PC := 818
790 [-]: JMP       818          ; PC := 818
791 [-]: GETTABLE  R106 R105 K74; R106 := R105["mItemType"]
792 [-]: SELF      R106 R106 K58; R107 := R106; R106 := R106["0x8B598ED4"]
793 [-]: GETGLOBAL R108 K83     ; R108 := gLotusArtifactUpgradeType
794 [-]: CALL      R106 3 2     ; R106 := R106(R107,R108)
795 [-]: TEST      R106 0       ; if not R106 then PC := 802
796 [-]: JMP       802          ; PC := 802
797 [-]: GETUPVAL  R106 U4      ; R106 := U4
798 [-]: GETTABLE  R107 R105 K74; R107 := R105["mItemType"]
799 [-]: CALL      R106 2 2     ; R106 := R106(R107)
800 [-]: TEST      R106 1       ; if R106 then PC := 818
801 [-]: JMP       818          ; PC := 818
802 [-]: GETGLOBAL R106 K18     ; R106 := 0x7C282057
803 [-]: GETTABLE  R107 R105 K74; R107 := R105["mItemType"]
804 [-]: CALL      R106 2 2     ; R106 := R106(R107)
805 [-]: GETUPVAL  R107 U3      ; R107 := U3
806 [-]: GETTABLE  R107 R107 K23; R107 := R107["0xFF986D3C"]
807 [-]: GETGLOBAL R108 K4      ; R108 := mMovie
808 [-]: MOVE      R109 R106    ; R109 := R106
809 [-]: NEWTABLE  R110 0 1     ; R110 := {}
810 [-]: SETTABLE  R110 K59 R105; R110["ItemInfo"] := R105
811 [-]: MOVE      R111 R1      ; R111 := R1
812 [-]: CALL      R107 5 2     ; R107 := R107(R108,R109,R110,R111)
813 [-]: GETGLOBAL R108 K1      ; R108 := table
814 [-]: GETTABLE  R108 R108 K2 ; R108 := R108["0xE6450C9D"]
815 [-]: GETUPVAL  R109 U1      ; R109 := U1
816 [-]: MOVE      R110 R107    ; R110 := R107
817 [-]: CALL      R108 3 1     ; R108(R109,R110)
818 [-]: TFORLOOP  R101 2       ; R104,R105 :=  R101(R102,R103); if R104 ~= nil then begin PC = 786; R103 := R104 end
819 [-]: JMP       786          ; PC := 786
820 [-]: LOADK     R108 K38     ; R108 := 1
821 [-]: GETUPVAL  R109 U1      ; R109 := U1
822 [-]: LEN       R109 R109    ; R109 := # R109
823 [-]: LOADK     R110 K38     ; R110 := 1
824 [-]: FORPREP   R108 856     ; R108 -= R110; PC := 856
825 [-]: GETUPVAL  R112 U1      ; R112 := U1
826 [-]: GETTABLE  R112 R112 R111; R112 := R112[R111]
827 [-]: GETUPVAL  R113 U0      ; R113 := U0
828 [-]: SELF      R113 R113 K109; R114 := R113; R113 := R113["0xA77DA8EE"]
829 [-]: NEWTABLE  R115 0 11    ; R115 := {}
830 [-]: SETTABLE  R115 K110 R111; R115["Id"] := R111
831 [-]: GETTABLE  R116 R112 K3 ; R116 := R112["Name"]
832 [-]: SETTABLE  R115 K3 R116 ; R115["Name"] := R116
833 [-]: GETTABLE  R116 R112 K7 ; R116 := R112["Count"]
834 [-]: SETTABLE  R115 K7 R116 ; R115["Count"] := R116
835 [-]: GETTABLE  R116 R112 K67; R116 := R112["TaxedCount"]
836 [-]: SETTABLE  R115 K67 R116; R115["TaxedCount"] := R116
837 [-]: GETTABLE  R116 R112 K30; R116 := R112["Recovered"]
838 [-]: SETTABLE  R115 K30 R116; R115["Recovered"] := R116
839 [-]: GETTABLE  R116 R112 K9 ; R116 := R112["Icon"]
840 [-]: SETTABLE  R115 K9 R116 ; R115["Icon"] := R116
841 [-]: GETTABLE  R116 R112 K12; R116 := R112["IconIsSquare"]
842 [-]: TEST      R116 1       ; if R116 then PC := 845
843 [-]: JMP       845          ; PC := 845
844 [-]: GETTABLE  R116 R112 K111; R116 := R112["Themed"]
845 [-]: SETTABLE  R115 K12 R116; R115["IconIsSquare"] := R116
846 [-]: GETTABLE  R116 R112 K14; R116 := R112["Background"]
847 [-]: SETTABLE  R115 K14 R116; R115["Background"] := R116
848 [-]: GETTABLE  R116 R112 K112; R116 := R112["Material"]
849 [-]: SETTABLE  R115 K112 R116; R115["Material"] := R116
850 [-]: GETTABLE  R116 R112 K113; R116 := R112["Color"]
851 [-]: SETTABLE  R115 K113 R116; R115["Color"] := R116
852 [-]: GETTABLE  R116 R112 K114; R116 := R112["ExtraShaderVars"]
853 [-]: SETTABLE  R115 K114 R116; R115["ExtraShaderVars"] := R116
854 [-]: MOVE      R116 R1      ; R116 := R1
855 [-]: CALL      R113 4 1     ; R113(R114,R115,R116)
856 [-]: FORLOOP   R108 825     ; R108 += R110; if R108 <= R109 then begin PC := 825; R111 := R108 end
857 [-]: GETUPVAL  R113 U0      ; R113 := U0
858 [-]: SELF      R113 R113 K115; R114 := R113; R113 := R113["0x6470BAF4"]
859 [-]: LOADNIL   R115 R115    ; R115 := nil
860 [-]: MOVE      R116 R1      ; R116 := R1
861 [-]: MOVE      R117 R1      ; R117 := R1
862 [-]: CALL      R113 5 1     ; R113(R114,R115,R116,R117)
863 [-]: GETGLOBAL R113 K4      ; R113 := mMovie
864 [-]: SELF      R113 R113 K5 ; R114 := R113; R113 := R113["0x5DB0BD4"]
865 [-]: LOADK     R115 K116    ; R115 := "/Lotus/Language/Menu/Item_Rewards"
866 [-]: MOVE      R116 R1      ; R116 := R1
867 [-]: CALL      R113 4 2     ; R113 := R113(R114,R115,R116)
868 [-]: GETUPVAL  R114 U24     ; R114 := U24
869 [-]: LOADK     R115 K117    ; R115 := "RewardsPanel"
870 [-]: MOVE      R116 R113    ; R116 := R113
871 [-]: CALL      R114 3 1     ; R114(R115,R116)
872 [-]: GETUPVAL  R114 U0      ; R114 := U0
873 [-]: SELF      R114 R114 K118; R115 := R114; R114 := R114["0xC51A5C9D"]
874 [-]: CALL      R114 2 2     ; R114 := R114(R115)
875 [-]: LT        0 K26 R114   ; if 0 >= R114 then PC := 883
876 [-]: JMP       883          ; PC := 883
877 [-]: GETUPVAL  R115 U0      ; R115 := U0
878 [-]: SELF      R115 R115 K119; R116 := R115; R115 := R115["0x3BC31182"]
879 [-]: LOADK     R117 K38     ; R117 := 1
880 [-]: CALL      R115 3 1     ; R115(R116,R117)
881 [-]: GETUPVAL  R115 U0      ; R115 := U0
882 [-]: MOVE      R115 R25     ; R115 := R25
883 [-]: RETURN    R0 1         ; return 


; Function #80.1:
;
; Name:            
; Defined at line: 4524
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Rarity"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Rarity"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Rarity"]
  6 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Rarity"]
  7 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Name"]
 14 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Name"]
 15 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: MOVE      R2 R1        ; R2 := R1
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #80.2:
;
; Name:            
; Defined at line: 4562
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["SortPriority"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["SortPriority"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 4701
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: EQ        1 R0 K0      ; if R0 == 3 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: LOADK     R2 K1        ; R2 := "ModsPanel"
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: SUB       R2 K0 R0     ; R2 := 3 - R0
 14 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 15 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x6B7B470B"]
 17 [-]: LOADK     R4 K5        ; R4 := "ModsPanel.PanelBG"
 18 [-]: LOADK     R5 K6        ; R5 := "_y"
 19 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 20 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 21 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 22 [-]: LOADK     R5 K5        ; R5 := "ModsPanel.PanelBG"
 23 [-]: LOADK     R6 K7        ; R6 := "_height"
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: ADD       R3 R3 R1     ; R3 := R3 + R1
 26 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 27 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 28 [-]: LOADK     R6 K8        ; R6 := "ModsPanel.Mod"
 29 [-]: LOADK     R7 K6        ; R7 := "_y"
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 32 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x6B7B470B"]
 33 [-]: LOADK     R7 K9        ; R7 := "ModsPanel.ScrollBar"
 34 [-]: LOADK     R8 K6        ; R8 := "_y"
 35 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 36 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 37 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 38 [-]: LOADK     R8 K5        ; R8 := "ModsPanel.PanelBG"
 39 [-]: LOADK     R9 K6        ; R9 := "_y"
 40 [-]: SUB       R10 R2 R1    ; R10 := R2 - R1
 41 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 42 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 43 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 44 [-]: LOADK     R8 K5        ; R8 := "ModsPanel.PanelBG"
 45 [-]: LOADK     R9 K7        ; R9 := "_height"
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 48 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 49 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 50 [-]: LOADK     R8 K8        ; R8 := "ModsPanel.Mod"
 51 [-]: LOADK     R9 K6        ; R9 := "_y"
 52 [-]: SUB       R10 R4 R1    ; R10 := R4 - R1
 53 [-]: SUB       R10 R10 K11  ; R10 := R10 - 10
 54 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 55 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 56 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 57 [-]: LOADK     R8 K9        ; R8 := "ModsPanel.ScrollBar"
 58 [-]: LOADK     R9 K6        ; R9 := "_y"
 59 [-]: SUB       R10 R5 R1    ; R10 := R5 - R1
 60 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 61 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 62 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x1C19D966"]
 63 [-]: LOADK     R8 K12       ; R8 := "ModsPanel.SideLights"
 64 [-]: LOADK     R9 K13       ; R9 := "_visible"
 65 [-]: MOVE      R10 R0       ; R10 := R0
 66 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 67 [-]: GETGLOBAL R6 K14       ; R6 := 0x329BDC44
 68 [-]: LOADK     R7 K15       ; R7 := "EE.Interface.Components.Grid"
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: GETTABLE  R7 R6 K16    ; R7 := R6["0x9A7B3F36"]
 71 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
 72 [-]: LOADK     R9 K8        ; R9 := "ModsPanel.Mod"
 73 [-]: LOADNIL   R10 R10      ; R10 := nil
 74 [-]: LOADK     R11 K17      ; R11 := 1
 75 [-]: GETUPVAL  R12 U4       ; R12 := U4
 76 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["0xF81722A2"]
 77 [-]: GETUPVAL  R13 U5       ; R13 := U5
 78 [-]: LT        1 R13 K19    ; if R13 < 7 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: MOVE      R13 R0       ; R13 := R0
 81 [-]: MOVE      R13 R1       ; R13 := R1
 82 [-]: GETUPVAL  R14 U4       ; R14 := U4
 83 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["0xF81722A2"]
 84 [-]: GETUPVAL  R15 U5       ; R15 := U5
 85 [-]: LT        1 R15 K20    ; if R15 < 4 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R15 R0       ; R15 := R0
 88 [-]: MOVE      R15 R1       ; R15 := R1
 89 [-]: LOADK     R16 K20      ; R16 := 4
 90 [-]: LOADK     R17 K0       ; R17 := 3
 91 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 92 [-]: LOADK     R15 K2       ; R15 := 2
 93 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
 94 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 95 [-]: MOVE      R7 R3        ; R7 := R3
 96 [-]: GETUPVAL  R7 U3        ; R7 := U3
 97 [-]: SETTABLE  R7 K21 K22   ; R7["mColumnSeparation"] := 170
 98 [-]: GETUPVAL  R7 U3        ; R7 := U3
 99 [-]: GETUPVAL  R8 U4        ; R8 := U4
100 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["0xF81722A2"]
101 [-]: GETUPVAL  R9 U5        ; R9 := U5
102 [-]: LT        1 R9 K20     ; if R9 < 4 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R9 R0        ; R9 := R0
105 [-]: MOVE      R9 R1        ; R9 := R1
106 [-]: LOADK     R10 K24      ; R10 := 138
107 [-]: LOADK     R11 K25      ; R11 := 150
108 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
109 [-]: SETTABLE  R7 K23 R8    ; R7["mRowSeparation"] := R8
110 [-]: GETUPVAL  R7 U3        ; R7 := U3
111 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7["0xE13A565"]
112 [-]: LOADK     R9 K27       ; R9 := "ModItemSelected"
113 [-]: LOADK     R10 K28      ; R10 := "ModItemFocused"
114 [-]: LOADK     R11 K29      ; R11 := "ModItemUnfocused"
115 [-]: LOADK     R12 K30      ; R12 := "ModItemPressed"
116 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
117 [-]: GETUPVAL  R7 U3        ; R7 := U3
118 [-]: SELF      R7 R7 K31    ; R8 := R7; R7 := R7["0x3DB61F37"]
119 [-]: LOADK     R9 K9        ; R9 := "ModsPanel.ScrollBar"
120 [-]: CALL      R7 3 1       ; R7(R8,R9)
121 [-]: GETUPVAL  R7 U3        ; R7 := U3
122 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["mScrollBar"]
123 [-]: SUB       R8 R3 K0     ; R8 := R3 - 3
124 [-]: SETTABLE  R7 K33 R8    ; R7["mHeight"] := R8
125 [-]: GETUPVAL  R7 U3        ; R7 := U3
126 [-]: SETTABLE  R7 K34 K17   ; R7["mScroll"] := 1
127 [-]: GETUPVAL  R7 U3        ; R7 := U3
128 [-]: SETTABLE  R7 K35 K36   ; R7["mSmoothScrollExtraSpace"] := 0
129 [-]: GETUPVAL  R7 U3        ; R7 := U3
130 [-]: CLOSURE   R8 0         ; R8 := closure(Function #81.1)
131 [-]: SETTABLE  R7 K37 R8    ; R7["RepositionButton"] := R8
132 [-]: GETUPVAL  R7 U3        ; R7 := U3
133 [-]: CLOSURE   R8 1         ; R8 := closure(Function #81.2)
134 [-]: GETUPVAL  R0 U6        ; R0 := U6
135 [-]: GETUPVAL  R0 U3        ; R0 := U3
136 [-]: GETUPVAL  R0 U7        ; R0 := U7
137 [-]: GETUPVAL  R0 U8        ; R0 := U8
138 [-]: SETTABLE  R7 K38 R8    ; R7["mElementDrawCallback"] := R8
139 [-]: GETUPVAL  R7 U3        ; R7 := U3
140 [-]: CLOSURE   R8 2         ; R8 := closure(Function #81.3)
141 [-]: GETUPVAL  R0 U4        ; R0 := U4
142 [-]: GETUPVAL  R0 U6        ; R0 := U6
143 [-]: SETTABLE  R7 K39 R8    ; R7["mOnFocusedCallback"] := R8
144 [-]: GETUPVAL  R7 U3        ; R7 := U3
145 [-]: CLOSURE   R8 3         ; R8 := closure(Function #81.4)
146 [-]: GETUPVAL  R0 U6        ; R0 := U6
147 [-]: SETTABLE  R7 K40 R8    ; R7["mOnUnfocusedCallback"] := R8
148 [-]: GETUPVAL  R7 U3        ; R7 := U3
149 [-]: GETUPVAL  R8 U3        ; R8 := U3
150 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["Redraw"]
151 [-]: SETTABLE  R7 K41 R8    ; R7["_OriginalRedraw"] := R8
152 [-]: GETUPVAL  R7 U3        ; R7 := U3
153 [-]: CLOSURE   R8 4         ; R8 := closure(Function #81.5)
154 [-]: GETUPVAL  R0 U3        ; R0 := U3
155 [-]: GETUPVAL  R0 U9        ; R0 := U9
156 [-]: SETTABLE  R7 K42 R8    ; R7["Redraw"] := R8
157 [-]: RETURN    R0 1         ; return 


; Function #81.1:
;
; Name:            
; Defined at line: 4730
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x591EC043"]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 137
  4 [-]: JMP       137          ; PC := 137
  5 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mOriginalButtonHeight"]
  6 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 137
  7 [-]: JMP       137          ; PC := 137
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mInitialY"]
  9 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mRowSeparation"]
 10 [-]: MUL       R3 R3 K5     ; R3 := R3 * 0.5
 11 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 12 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mSmoothScrollExtraSpace"]
 13 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 14 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mInitialY"]
 15 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mRowSeparation"]
 16 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mRows"]
 17 [-]: SUB       R5 R5 K5     ; R5 := R5 - 0.5
 18 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
 19 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 20 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mSmoothScrollExtraSpace"]
 21 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 22 [-]: SUB       R3 R3 K8     ; R3 := R3 - 110
 23 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["mDebugScroll"]
 24 [-]: TEST      R4 0         ; if not R4 then PC := 64
 25 [-]: JMP       64           ; PC := 64
 26 [-]: GETTABLE  R4 R1 K10    ; R4 := R1["mIndex"]
 27 [-]: EQ        0 R4 K11     ; if R4 ~= 1 then PC := 64
 28 [-]: JMP       64           ; PC := 64
 29 [-]: GETGLOBAL R4 K12       ; R4 := 0x8C64AFA9
 30 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mMovie"]
 31 [-]: LOADK     R6 K14       ; R6 := "DebugMc.clear"
 32 [-]: CALL      R4 3 1       ; R4(R5,R6)
 33 [-]: GETGLOBAL R4 K12       ; R4 := 0x8C64AFA9
 34 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mMovie"]
 35 [-]: LOADK     R6 K15       ; R6 := "DebugMc.lineStyle"
 36 [-]: LOADK     R7 K11       ; R7 := 1
 37 [-]: LOADK     R8 K16       ; R8 := 16711680
 38 [-]: LOADK     R9 K17       ; R9 := 100
 39 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 40 [-]: GETGLOBAL R4 K12       ; R4 := 0x8C64AFA9
 41 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mMovie"]
 42 [-]: LOADK     R6 K18       ; R6 := "DebugMc.moveTo"
 43 [-]: LOADK     R7 K19       ; R7 := 2000
 44 [-]: MOVE      R8 R2        ; R8 := R2
 45 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 46 [-]: GETGLOBAL R4 K12       ; R4 := 0x8C64AFA9
 47 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mMovie"]
 48 [-]: LOADK     R6 K20       ; R6 := "DebugMc.lineTo"
 49 [-]: LOADK     R7 K21       ; R7 := 4000
 50 [-]: MOVE      R8 R2        ; R8 := R2
 51 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 52 [-]: GETGLOBAL R4 K12       ; R4 := 0x8C64AFA9
 53 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mMovie"]
 54 [-]: LOADK     R6 K18       ; R6 := "DebugMc.moveTo"
 55 [-]: LOADK     R7 K19       ; R7 := 2000
 56 [-]: MOVE      R8 R3        ; R8 := R3
 57 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 58 [-]: GETGLOBAL R4 K12       ; R4 := 0x8C64AFA9
 59 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mMovie"]
 60 [-]: LOADK     R6 K20       ; R6 := "DebugMc.lineTo"
 61 [-]: LOADK     R7 K21       ; R7 := 4000
 62 [-]: MOVE      R8 R3        ; R8 := R3
 63 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 64 [-]: GETGLOBAL R4 K22       ; R4 := 0xF595ADDE
 65 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 66 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5["0x6B7B470B"]
 67 [-]: GETTABLE  R7 R1 K24    ; R7 := R1["mClipName"]
 68 [-]: LOADK     R8 K25       ; R8 := "_yscale"
 69 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 70 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 71 [-]: EQ        0 R4 K1      ; if R4 ~= nil then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADK     R4 K11       ; R4 := 1
 74 [-]: JMP       76           ; PC := 76
 75 [-]: DIV       R4 R4 K17    ; R4 := R4 / 100
 76 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mOriginalButtonHeight"]
 77 [-]: MUL       R5 R5 R4     ; R5 := R5 * R4
 78 [-]: LOADNIL   R6 R6        ; R6 := nil
 79 [-]: MUL       R7 K26 R4    ; R7 := -7 * R4
 80 [-]: SELF      R8 R0 K27    ; R9 := R0; R8 := R0["0xF68300E4"]
 81 [-]: MOVE      R10 R1       ; R10 := R1
 82 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 83 [-]: MUL       R9 R5 K5     ; R9 := R5 * 0.5
 84 [-]: ADD       R9 R8 R9     ; R9 := R8 + R9
 85 [-]: LT        0 R3 R9      ; if R3 >= R9 then PC := 102
 86 [-]: JMP       102          ; PC := 102
 87 [-]: ADD       R9 R5 R3     ; R9 := R5 + R3
 88 [-]: SUB       R9 R9 R8     ; R9 := R9 - R8
 89 [-]: MUL       R10 R5 K5    ; R10 := R5 * 0.5
 90 [-]: SUB       R6 R9 R10    ; R6 := R9 - R10
 91 [-]: GETGLOBAL R9 K28       ; R9 := math
 92 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["0x8B011038"]
 93 [-]: MOVE      R10 R6       ; R10 := R6
 94 [-]: LOADK     R11 K30      ; R11 := 0.0099999997764826
 95 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 96 [-]: MOVE      R6 R9        ; R6 := R9
 97 [-]: UNM       R9 R5        ; R9 := - R5
 98 [-]: ADD       R9 R9 R6     ; R9 := R9 + R6
 99 [-]: DIV       R9 R9 K31    ; R9 := R9 / 2
100 [-]: ADD       R7 R7 R9     ; R7 := R7 + R9
101 [-]: JMP       121          ; PC := 121
102 [-]: MUL       R9 R5 K5     ; R9 := R5 * 0.5
103 [-]: SUB       R9 R8 R9     ; R9 := R8 - R9
104 [-]: LT        0 R9 R2      ; if R9 >= R2 then PC := 120
105 [-]: JMP       120          ; PC := 120
106 [-]: SUB       R9 R2 R8     ; R9 := R2 - R8
107 [-]: MUL       R10 R5 K5    ; R10 := R5 * 0.5
108 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
109 [-]: UNM       R6 R9        ; R6 := - R9
110 [-]: GETGLOBAL R9 K28       ; R9 := math
111 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["0x8B011038"]
112 [-]: MOVE      R10 R6       ; R10 := R6
113 [-]: LOADK     R11 K30      ; R11 := 0.0099999997764826
114 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
115 [-]: MOVE      R6 R9        ; R6 := R9
116 [-]: SUB       R9 R5 R6     ; R9 := R5 - R6
117 [-]: DIV       R9 R9 K31    ; R9 := R9 / 2
118 [-]: ADD       R7 R7 R9     ; R7 := R7 + R9
119 [-]: JMP       121          ; PC := 121
120 [-]: MOVE      R6 R5        ; R6 := R5
121 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 137
122 [-]: JMP       137          ; PC := 137
123 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["mMovie"]
124 [-]: SELF      R9 R9 K32    ; R10 := R9; R9 := R9["0x880196A7"]
125 [-]: GETTABLE  R11 R1 K24   ; R11 := R1["mClipName"]
126 [-]: LOADK     R12 K33      ; R12 := "Btn"
127 [-]: LOADK     R13 K34      ; R13 := "_height"
128 [-]: DIV       R14 R6 R4    ; R14 := R6 / R4
129 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
130 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["mMovie"]
131 [-]: SELF      R9 R9 K32    ; R10 := R9; R9 := R9["0x880196A7"]
132 [-]: GETTABLE  R11 R1 K24   ; R11 := R1["mClipName"]
133 [-]: LOADK     R12 K33      ; R12 := "Btn"
134 [-]: LOADK     R13 K35      ; R13 := "_y"
135 [-]: DIV       R14 R7 R4    ; R14 := R7 / R4
136 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
137 [-]: RETURN    R0 1         ; return 


; Function #81.2:
;
; Name:            
; Defined at line: 4775
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA7A7B88"]
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: LOADNIL   R3 R5        ; R3 := R4 := R5 := nil
  9 [-]: LOADK     R6 K3        ; R6 := 2
 10 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x97B489B5"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 1         ; if R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["Id"]
 20 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["Id"]
 21 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: MOVE      R2 R1        ; R2 := R1
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x697262FB"]
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 29 [-]: LOADK     R6 K8        ; R6 := ".Card"
 30 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: LOADK     R7 K9        ; R7 := 0
 33 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
 34 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Card"]
 35 [-]: LOADK     R11 K3       ; R11 := 2
 36 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 37 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["TaxedCount"]
 38 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 112
 39 [-]: JMP       112          ; PC := 112
 40 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["TaxedCount"]
 41 [-]: LT        0 K9 R3      ; if 0 >= R3 then PC := 112
 42 [-]: JMP       112          ; PC := 112
 43 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 44 [-]: LOADK     R4 K12       ; R4 := ".StolenOverlay"
 45 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 46 [-]: GETGLOBAL R4 K13       ; R4 := mMovie
 47 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4["0x6B7B470B"]
 48 [-]: MOVE      R6 R3        ; R6 := R3
 49 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 50 [-]: EQ        0 R4 K15     ; if R4 ~= "undefined" then PC := 105
 51 [-]: JMP       105          ; PC := 105
 52 [-]: GETGLOBAL R5 K16       ; R5 := 0x8C64AFA9
 53 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
 54 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 55 [-]: LOADK     R8 K17       ; R8 := ".attachMovie"
 56 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 57 [-]: LOADK     R8 K18       ; R8 := "StolenModOverlay"
 58 [-]: LOADK     R9 K19       ; R9 := "StolenOverlay"
 59 [-]: LOADK     R10 K20      ; R10 := 2000
 60 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 61 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 62 [-]: SELF      R5 R5 K21    ; R6 := R5; R5 := R5["0x1C19D966"]
 63 [-]: MOVE      R7 R3        ; R7 := R3
 64 [-]: LOADK     R8 K22       ; R8 := "_alpha"
 65 [-]: LOADK     R9 K23       ; R9 := 100
 66 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 67 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 68 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x26581636"]
 69 [-]: MOVE      R7 R3        ; R7 := R3
 70 [-]: LOADK     R8 K25       ; R8 := ".Backer"
 71 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 72 [-]: GETGLOBAL R8 K26       ; R8 := lichBackerStolen
 73 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 74 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 75 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x26581636"]
 76 [-]: MOVE      R7 R3        ; R7 := R3
 77 [-]: LOADK     R8 K27       ; R8 := ".Icon"
 78 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 79 [-]: GETGLOBAL R8 K28       ; R8 := lichIconStolen
 80 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 81 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 82 [-]: SELF      R5 R5 K29    ; R6 := R5; R5 := R5["0x880196A7"]
 83 [-]: MOVE      R7 R3        ; R7 := R3
 84 [-]: LOADK     R8 K30       ; R8 := "Label"
 85 [-]: LOADK     R9 K31       ; R9 := "text"
 86 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["TaxedCount"]
 87 [-]: LOADK     R11 K32      ; R11 := "x "
 88 [-]: GETGLOBAL R12 K33      ; R12 := 0xE6DC43B0
 89 [-]: LOADK     R13 K34      ; R13 := "/Lotus/Language/Game/CTF_Stolen"
 90 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 91 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 92 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 93 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 94 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 95 [-]: SELF      R5 R5 K29    ; R6 := R5; R5 := R5["0x880196A7"]
 96 [-]: MOVE      R7 R3        ; R7 := R3
 97 [-]: LOADK     R8 K30       ; R8 := "Label"
 98 [-]: LOADK     R9 K35       ; R9 := "_color"
 99 [-]: GETGLOBAL R10 K36      ; R10 := 0xF595ADDE
100 [-]: LOADK     R11 K37      ; R11 := "0x"
101 [-]: GETUPVAL  R12 U2       ; R12 := U2
102 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
103 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
104 [-]: CALL      R5 0 1       ; R5(R6,...)
105 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
106 [-]: SELF      R5 R5 K21    ; R6 := R5; R5 := R5["0x1C19D966"]
107 [-]: MOVE      R7 R3        ; R7 := R3
108 [-]: LOADK     R8 K38       ; R8 := "_visible"
109 [-]: MOVE      R9 R1        ; R9 := R1
110 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
111 [-]: JMP       191          ; PC := 191
112 [-]: GETTABLE  R5 R0 K39    ; R5 := R0["Recovered"]
113 [-]: TEST      R5 0         ; if not R5 then PC := 184
114 [-]: JMP       184          ; PC := 184
115 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
116 [-]: LOADK     R6 K12       ; R6 := ".StolenOverlay"
117 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
118 [-]: GETGLOBAL R6 K13       ; R6 := mMovie
119 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x6B7B470B"]
120 [-]: MOVE      R8 R5        ; R8 := R5
121 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
122 [-]: EQ        0 R6 K15     ; if R6 ~= "undefined" then PC := 177
123 [-]: JMP       177          ; PC := 177
124 [-]: GETGLOBAL R7 K16       ; R7 := 0x8C64AFA9
125 [-]: GETGLOBAL R8 K13       ; R8 := mMovie
126 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["mClipName"]
127 [-]: LOADK     R10 K17      ; R10 := ".attachMovie"
128 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
129 [-]: LOADK     R10 K18      ; R10 := "StolenModOverlay"
130 [-]: LOADK     R11 K19      ; R11 := "StolenOverlay"
131 [-]: LOADK     R12 K20      ; R12 := 2000
132 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
133 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
134 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x1C19D966"]
135 [-]: MOVE      R9 R5        ; R9 := R5
136 [-]: LOADK     R10 K22      ; R10 := "_alpha"
137 [-]: LOADK     R11 K23      ; R11 := 100
138 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
139 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
140 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x26581636"]
141 [-]: MOVE      R9 R5        ; R9 := R5
142 [-]: LOADK     R10 K25      ; R10 := ".Backer"
143 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
144 [-]: GETGLOBAL R10 K40      ; R10 := lichBackerRecovered
145 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
146 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
147 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x26581636"]
148 [-]: MOVE      R9 R5        ; R9 := R5
149 [-]: LOADK     R10 K27      ; R10 := ".Icon"
150 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
151 [-]: GETGLOBAL R10 K41      ; R10 := lichIconRecovered
152 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
153 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
154 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7["0x880196A7"]
155 [-]: MOVE      R9 R5        ; R9 := R5
156 [-]: LOADK     R10 K30      ; R10 := "Label"
157 [-]: LOADK     R11 K31      ; R11 := "text"
158 [-]: GETGLOBAL R12 K42      ; R12 := string
159 [-]: GETTABLE  R12 R12 K43  ; R12 := R12["0x639C642A"]
160 [-]: GETGLOBAL R13 K33      ; R13 := 0xE6DC43B0
161 [-]: LOADK     R14 K44      ; R14 := "/Lotus/Language/Game/Recovered"
162 [-]: NEWTABLE  R15 0 0      ; R15 := {}
163 [-]: CALL      R13 3 0      ; R13,... := R13(R14,R15)
164 [-]: CALL      R12 0 0      ; R12,... := R12(R13,...)
165 [-]: CALL      R7 0 1       ; R7(R8,...)
166 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
167 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7["0x880196A7"]
168 [-]: MOVE      R9 R5        ; R9 := R5
169 [-]: LOADK     R10 K30      ; R10 := "Label"
170 [-]: LOADK     R11 K35      ; R11 := "_color"
171 [-]: GETGLOBAL R12 K36      ; R12 := 0xF595ADDE
172 [-]: LOADK     R13 K37      ; R13 := "0x"
173 [-]: GETUPVAL  R14 U3       ; R14 := U3
174 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
175 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
176 [-]: CALL      R7 0 1       ; R7(R8,...)
177 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
178 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x1C19D966"]
179 [-]: MOVE      R9 R5        ; R9 := R5
180 [-]: LOADK     R10 K38      ; R10 := "_visible"
181 [-]: MOVE      R11 R1       ; R11 := R1
182 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
183 [-]: JMP       191          ; PC := 191
184 [-]: GETGLOBAL R7 K13       ; R7 := mMovie
185 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7["0x880196A7"]
186 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["mClipName"]
187 [-]: LOADK     R10 K19      ; R10 := "StolenOverlay"
188 [-]: LOADK     R11 K38      ; R11 := "_visible"
189 [-]: MOVE      R12 R0       ; R12 := R0
190 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
191 [-]: RETURN    R0 1         ; return 


; Function #81.3:
;
; Name:            
; Defined at line: 4813
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x302AAB2F"]
  3 [-]: LOADK     R3 K2        ; R3 := "ModsPanel.PanelBG"
  4 [-]: LOADK     R4 K3        ; R4 := "RectEdgeColor"
  5 [-]: GETGLOBAL R5 K4        ; R5 := _G
  6 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["UIColorObject_Yellow"]
  7 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["r"]
  8 [-]: GETGLOBAL R6 K4        ; R6 := _G
  9 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColorObject_Yellow"]
 10 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["g"]
 11 [-]: GETGLOBAL R7 K4        ; R7 := _G
 12 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColorObject_Yellow"]
 13 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["b"]
 14 [-]: LOADK     R8 K9        ; R8 := 1
 15 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 16 [-]: GETTABLE  R1 R0 K10    ; R1 := R0["mClipName"]
 17 [-]: EQ        0 R1 K11     ; if R1 ~= nil then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x25992394"]
 22 [-]: GETGLOBAL R2 K4        ; R2 := _G
 23 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UISound_Focus"]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["0x697262FB"]
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mClipName"]
 29 [-]: LOADK     R4 K15       ; R4 := ".Card"
 30 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
 33 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["Card"]
 34 [-]: LOADK     R9 K17       ; R9 := 2
 35 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 36 [-]: GETGLOBAL R1 K18       ; R1 := 0x8C64AFA9
 37 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 38 [-]: LOADK     R3 K19       ; R3 := "ModsPanel.swapDepths"
 39 [-]: LOADK     R4 K20       ; R4 := 1100
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K18       ; R1 := 0x8C64AFA9
 42 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 43 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mClipName"]
 44 [-]: LOADK     R4 K21       ; R4 := ".swapDepths"
 45 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 46 [-]: LOADK     R4 K22       ; R4 := 1200
 47 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 48 [-]: RETURN    R0 1         ; return 


; Function #81.4:
;
; Name:            
; Defined at line: 4826
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x302AAB2F"]
  3 [-]: LOADK     R4 K2        ; R4 := "ModsPanel.PanelBG"
  4 [-]: LOADK     R5 K3        ; R5 := "RectEdgeColor"
  5 [-]: GETGLOBAL R6 K4        ; R6 := _G
  6 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColorObject_White"]
  7 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["r"]
  8 [-]: GETGLOBAL R7 K4        ; R7 := _G
  9 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColorObject_White"]
 10 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["g"]
 11 [-]: GETGLOBAL R8 K4        ; R8 := _G
 12 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["UIColorObject_White"]
 13 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["b"]
 14 [-]: LOADK     R9 K9        ; R9 := 0.20000000298023
 15 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 16 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mClipName"]
 17 [-]: EQ        0 R2 K11     ; if R2 ~= nil then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0x697262FB"]
 22 [-]: MOVE      R3 R0        ; R3 := R0
 23 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["mClipName"]
 24 [-]: LOADK     R5 K13       ; R5 := ".Card"
 25 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 26 [-]: MOVE      R5 R0        ; R5 := R0
 27 [-]: LOADNIL   R6 R8        ; R6 := R7 := R8 := nil
 28 [-]: GETTABLE  R9 R0 K14    ; R9 := R0["Card"]
 29 [-]: LOADK     R10 K15      ; R10 := 2
 30 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 31 [-]: RETURN    R0 1         ; return 


; Function #81.5:
;
; Name:            
; Defined at line: 4835
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: CLOSURE   R4 0         ; R4 := closure(Function #81.5.1)
  2 [-]: GETUPVAL  R0 U0        ; R0 := U0
  3 [-]: MOVE      R5 R4        ; R5 := R4
  4 [-]: MOVE      R6 R0        ; R6 := R0
  5 [-]: CALL      R5 2 1       ; R5(R6)
  6 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0["0x9EA7C9C6"]
  7 [-]: CLOSURE   R7 1         ; R7 := closure(Function #81.5.2)
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: MOVE      R0 R4        ; R0 := R4
 11 [-]: MOVE      R8 R2        ; R8 := R2
 12 [-]: MOVE      R9 R3        ; R9 := R3
 13 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 14 [-]: RETURN    R0 1         ; return 


; Function #81.5.1:
;
; Name:            
; Defined at line: 4837
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x51396186"]
  3 [-]: CLOSURE   R3 0         ; R3 := closure(Function #81.5.1.1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #81.5.1.1:
;
; Name:            
; Defined at line: 4839
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "enabled"
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #81.5.2:
;
; Name:            
; Defined at line: 4846
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x61494587"]
  8 [-]: LOADK     R2 K2        ; R2 := 0.10000000149012
  9 [-]: CLOSURE   R3 0         ; R3 := closure(Function #81.5.2.1)
 10 [-]: GETUPVAL  R0 U2        ; R0 := U2
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #81.5.2.1:
;
; Name:            
; Defined at line: 4851
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 4858
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  68

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x7CF71D03"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: LOADK     R0 K1        ; R0 := 0
  7 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mNemesisTaxInfo"]
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTaxedMiscItems"]
 11 [-]: GETUPVAL  R3 U2        ; R3 := U2
 12 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mNemesisTaxInfo"]
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mTaxedCollectedItems"]
 14 [-]: LOADK     R4 K5        ; R4 := 1
 15 [-]: LEN       R5 R2        ; R5 := # R2
 16 [-]: LOADK     R6 K5        ; R6 := 1
 17 [-]: FORPREP   R4 40        ; R4 -= R6; PC := 40
 18 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 19 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
 20 [-]: MOVE      R10 R8       ; R10 := R8
 21 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 22 [-]: TEST      R9 1         ; if R9 then PC := 40
 23 [-]: JMP       40           ; PC := 40
 24 [-]: GETGLOBAL R9 K6        ; R9 := 0x400E7765
 25 [-]: GETTABLE  R10 R8 K7    ; R10 := R8["mItemType"]
 26 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 27 [-]: TEST      R9 1         ; if R9 then PC := 40
 28 [-]: JMP       40           ; PC := 40
 29 [-]: GETTABLE  R9 R8 K7     ; R9 := R8["mItemType"]
 30 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0x8B598ED4"]
 31 [-]: GETGLOBAL R11 K9       ; R11 := gLotusArtifactUpgradeType
 32 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 33 [-]: TEST      R9 0         ; if not R9 then PC := 40
 34 [-]: JMP       40           ; PC := 40
 35 [-]: GETGLOBAL R9 K10       ; R9 := table
 36 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["0xE6450C9D"]
 37 [-]: MOVE      R10 R1       ; R10 := R1
 38 [-]: MOVE      R11 R8       ; R11 := R8
 39 [-]: CALL      R9 3 1       ; R9(R10,R11)
 40 [-]: FORLOOP   R4 18        ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
 41 [-]: LOADK     R9 K5        ; R9 := 1
 42 [-]: LEN       R10 R3       ; R10 := # R3
 43 [-]: LOADK     R11 K5       ; R11 := 1
 44 [-]: FORPREP   R9 79        ; R9 -= R11; PC := 79
 45 [-]: GETTABLE  R13 R3 R12   ; R13 := R3[R12]
 46 [-]: GETGLOBAL R14 K6       ; R14 := 0x400E7765
 47 [-]: MOVE      R15 R13      ; R15 := R13
 48 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 49 [-]: TEST      R14 1        ; if R14 then PC := 79
 50 [-]: JMP       79           ; PC := 79
 51 [-]: GETGLOBAL R14 K6       ; R14 := 0x400E7765
 52 [-]: GETTABLE  R15 R13 K12  ; R15 := R13["storeItem"]
 53 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 54 [-]: TEST      R14 1        ; if R14 then PC := 79
 55 [-]: JMP       79           ; PC := 79
 56 [-]: GETGLOBAL R14 K6       ; R14 := 0x400E7765
 57 [-]: GETTABLE  R15 R13 K12  ; R15 := R13["storeItem"]
 58 [-]: SELF      R15 R15 K13  ; R16 := R15; R15 := R15["0x3077BE70"]
 59 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 60 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 61 [-]: TEST      R14 1        ; if R14 then PC := 79
 62 [-]: JMP       79           ; PC := 79
 63 [-]: GETTABLE  R14 R13 K12  ; R14 := R13["storeItem"]
 64 [-]: SELF      R14 R14 K13  ; R15 := R14; R14 := R14["0x3077BE70"]
 65 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 66 [-]: SELF      R15 R14 K8   ; R16 := R14; R15 := R14["0x8B598ED4"]
 67 [-]: GETGLOBAL R17 K9       ; R17 := gLotusArtifactUpgradeType
 68 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 69 [-]: TEST      R15 0        ; if not R15 then PC := 79
 70 [-]: JMP       79           ; PC := 79
 71 [-]: GETGLOBAL R15 K10      ; R15 := table
 72 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["0xE6450C9D"]
 73 [-]: MOVE      R16 R1       ; R16 := R1
 74 [-]: NEWTABLE  R17 0 2      ; R17 := {}
 75 [-]: SETTABLE  R17 K7 R14   ; R17["mItemType"] := R14
 76 [-]: GETTABLE  R18 R13 K15  ; R18 := R13["itemCount"]
 77 [-]: SETTABLE  R17 K14 R18  ; R17["mItemCount"] := R18
 78 [-]: CALL      R15 3 1      ; R15(R16,R17)
 79 [-]: FORLOOP   R9 45        ; R9 += R11; if R9 <= R10 then begin PC := 45; R12 := R9 end
 80 [-]: GETGLOBAL R15 K16      ; R15 := 0x63B09107
 81 [-]: GETUPVAL  R16 U3       ; R16 := U3
 82 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 83 [-]: JMP       164          ; PC := 164
 84 [-]: GETGLOBAL R20 K6       ; R20 := 0x400E7765
 85 [-]: GETTABLE  R21 R19 K12  ; R21 := R19["storeItem"]
 86 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 87 [-]: TEST      R20 1        ; if R20 then PC := 164
 88 [-]: JMP       164          ; PC := 164
 89 [-]: GETGLOBAL R20 K6       ; R20 := 0x400E7765
 90 [-]: GETTABLE  R21 R19 K12  ; R21 := R19["storeItem"]
 91 [-]: SELF      R21 R21 K13  ; R22 := R21; R21 := R21["0x3077BE70"]
 92 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
 93 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
 94 [-]: TEST      R20 1        ; if R20 then PC := 164
 95 [-]: JMP       164          ; PC := 164
 96 [-]: GETUPVAL  R20 U4       ; R20 := U4
 97 [-]: GETTABLE  R21 R19 K12  ; R21 := R19["storeItem"]
 98 [-]: SELF      R21 R21 K13  ; R22 := R21; R21 := R21["0x3077BE70"]
 99 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
100 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
101 [-]: TEST      R20 0        ; if not R20 then PC := 164
102 [-]: JMP       164          ; PC := 164
103 [-]: GETTABLE  R20 R19 K12  ; R20 := R19["storeItem"]
104 [-]: SELF      R20 R20 K13  ; R21 := R20; R20 := R20["0x3077BE70"]
105 [-]: CALL      R20 2 2      ; R20 := R20(R21)
106 [-]: SELF      R20 R20 K8   ; R21 := R20; R20 := R20["0x8B598ED4"]
107 [-]: GETUPVAL  R22 U5       ; R22 := U5
108 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
109 [-]: TEST      R20 1        ; if R20 then PC := 164
110 [-]: JMP       164          ; PC := 164
111 [-]: GETTABLE  R20 R19 K12  ; R20 := R19["storeItem"]
112 [-]: SELF      R20 R20 K13  ; R21 := R20; R20 := R20["0x3077BE70"]
113 [-]: CALL      R20 2 2      ; R20 := R20(R21)
114 [-]: GETGLOBAL R21 K17      ; R21 := Lotus_Game
115 [-]: GETTABLE  R21 R21 K18  ; R21 := R21["0xA9D5605B"]
116 [-]: CALL      R21 1 2      ; R21 := R21()
117 [-]: SETTABLE  R21 K7 R20   ; R21["mItemType"] := R20
118 [-]: GETTABLE  R22 R19 K19  ; R22 := R19["levelOverride"]
119 [-]: SELF      R23 R20 K8   ; R24 := R20; R23 := R20["0x8B598ED4"]
120 [-]: GETGLOBAL R25 K20      ; R25 := gRandomizedArtifactUpgradeType
121 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
122 [-]: TEST      R23 1        ; if R23 then PC := 129
123 [-]: JMP       129          ; PC := 129
124 [-]: GETTABLE  R23 R21 K22  ; R23 := R21["mInstance"]
125 [-]: SELF      R23 R23 K23  ; R24 := R23; R23 := R23["0xF59A737B"]
126 [-]: MOVE      R25 R22      ; R25 := R22
127 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
128 [-]: SETTABLE  R21 K21 R23  ; R21["mUpgradeFingerprint"] := R23
129 [-]: GETTABLE  R23 R19 K15  ; R23 := R19["itemCount"]
130 [-]: SETTABLE  R21 K14 R23  ; R21["mItemCount"] := R23
131 [-]: GETUPVAL  R23 U6       ; R23 := U6
132 [-]: MOVE      R24 R21      ; R24 := R21
133 [-]: GETTABLE  R25 R19 K24  ; R25 := R19["FromEnemyCache"]
134 [-]: CALL      R23 3 1      ; R23(R24,R25)
135 [-]: GETTABLE  R23 R21 K22  ; R23 := R21["mInstance"]
136 [-]: SELF      R23 R23 K25  ; R24 := R23; R23 := R23["0xFEEE14D7"]
137 [-]: GETTABLE  R25 R21 K21  ; R25 := R21["mUpgradeFingerprint"]
138 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
139 [-]: GETGLOBAL R24 K17      ; R24 := Lotus_Game
140 [-]: GETTABLE  R24 R24 K26  ; R24 := R24["AP_FUSION"]
141 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 164
142 [-]: JMP       164          ; PC := 164
143 [-]: GETGLOBAL R24 K27      ; R24 := _T
144 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["eomScreenMode"]
145 [-]: GETUPVAL  R25 U7       ; R25 := U7
146 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["ACTUAL_EOM"]
147 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 164
148 [-]: JMP       164          ; PC := 164
149 [-]: GETGLOBAL R24 K30      ; R24 := gRegion
150 [-]: SELF      R24 R24 K31  ; R25 := R24; R24 := R24["0x372CB914"]
151 [-]: CALL      R24 2 2      ; R24 := R24(R25)
152 [-]: GETGLOBAL R25 K6       ; R25 := 0x400E7765
153 [-]: MOVE      R26 R24      ; R26 := R24
154 [-]: CALL      R25 2 2      ; R25 := R25(R26)
155 [-]: TEST      R25 1        ; if R25 then PC := 164
156 [-]: JMP       164          ; PC := 164
157 [-]: GETGLOBAL R25 K32      ; R25 := gChallengeMgr
158 [-]: SELF      R25 R25 K33  ; R26 := R25; R25 := R25["0x83829B2"]
159 [-]: MOVE      R27 R24      ; R27 := R24
160 [-]: GETGLOBAL R28 K34      ; R28 := 0xEC274B1A
161 [-]: LOADK     R29 K35      ; R29 := "EARN_UPGRADE_MOD"
162 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
163 [-]: CALL      R25 0 1      ; R25(R26,...)
164 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 84; R17 := R18 end
165 [-]: JMP       84           ; PC := 84
166 [-]: GETGLOBAL R25 K16      ; R25 := 0x63B09107
167 [-]: GETUPVAL  R26 U8       ; R26 := U8
168 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
169 [-]: JMP       203          ; PC := 203
170 [-]: GETUPVAL  R30 U4       ; R30 := U4
171 [-]: GETTABLE  R31 R29 K7   ; R31 := R29["mItemType"]
172 [-]: CALL      R30 2 2      ; R30 := R30(R31)
173 [-]: TEST      R30 0        ; if not R30 then PC := 203
174 [-]: JMP       203          ; PC := 203
175 [-]: GETGLOBAL R30 K27      ; R30 := _T
176 [-]: GETTABLE  R30 R30 K28  ; R30 := R30["eomScreenMode"]
177 [-]: GETUPVAL  R31 U7       ; R31 := U7
178 [-]: GETTABLE  R31 R31 K29  ; R31 := R31["ACTUAL_EOM"]
179 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 199
180 [-]: JMP       199          ; PC := 199
181 [-]: GETUPVAL  R30 U9       ; R30 := U9
182 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["0x87D2274C"]
183 [-]: CALL      R30 1 2      ; R30 := R30()
184 [-]: TEST      R30 0        ; if not R30 then PC := 199
185 [-]: JMP       199          ; PC := 199
186 [-]: GETGLOBAL R30 K6       ; R30 := 0x400E7765
187 [-]: GETTABLE  R31 R29 K7   ; R31 := R29["mItemType"]
188 [-]: CALL      R30 2 2      ; R30 := R30(R31)
189 [-]: TEST      R30 1        ; if R30 then PC := 203
190 [-]: JMP       203          ; PC := 203
191 [-]: GETTABLE  R30 R29 K7   ; R30 := R29["mItemType"]
192 [-]: SELF      R30 R30 K8   ; R31 := R30; R30 := R30["0x8B598ED4"]
193 [-]: GETGLOBAL R32 K37      ; R32 := gGameConfig
194 [-]: SELF      R32 R32 K38  ; R33 := R32; R32 := R32["0x2074A9F4"]
195 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
196 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
197 [-]: TEST      R30 1        ; if R30 then PC := 203
198 [-]: JMP       203          ; PC := 203
199 [-]: GETUPVAL  R30 U6       ; R30 := U6
200 [-]: MOVE      R31 R29      ; R31 := R29
201 [-]: LOADNIL   R32 R32      ; R32 := nil
202 [-]: CALL      R30 3 1      ; R30(R31,R32)
203 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 170; R27 := R28 end
204 [-]: JMP       170          ; PC := 170
205 [-]: NEWTABLE  R30 0 0      ; R30 := {}
206 [-]: LOADK     R31 K5       ; R31 := 1
207 [-]: GETUPVAL  R32 U1       ; R32 := U1
208 [-]: LEN       R32 R32      ; R32 := # R32
209 [-]: LOADK     R33 K5       ; R33 := 1
210 [-]: FORPREP   R31 253      ; R31 -= R33; PC := 253
211 [-]: ADD       R0 R0 K5     ; R0 := R0 + 1
212 [-]: GETUPVAL  R35 U10      ; R35 := U10
213 [-]: GETTABLE  R35 R35 K39  ; R35 := R35["0x8383A1DC"]
214 [-]: GETUPVAL  R36 U1       ; R36 := U1
215 [-]: GETTABLE  R36 R36 R0   ; R36 := R36[R0]
216 [-]: GETTABLE  R36 R36 K40  ; R36 := R36["upg"]
217 [-]: MOVE      R37 R0       ; R37 := R0
218 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
219 [-]: GETUPVAL  R36 U1       ; R36 := U1
220 [-]: GETTABLE  R36 R36 R0   ; R36 := R36[R0]
221 [-]: GETTABLE  R36 R36 K24  ; R36 := R36["FromEnemyCache"]
222 [-]: TEST      R36 1        ; if R36 then PC := 233
223 [-]: JMP       233          ; PC := 233
224 [-]: GETUPVAL  R36 U1       ; R36 := U1
225 [-]: GETTABLE  R36 R36 R0   ; R36 := R36[R0]
226 [-]: GETTABLE  R36 R36 K40  ; R36 := R36["upg"]
227 [-]: GETTABLE  R36 R36 K7   ; R36 := R36["mItemType"]
228 [-]: SELF      R36 R36 K8   ; R37 := R36; R36 := R36["0x8B598ED4"]
229 [-]: GETGLOBAL R38 K37      ; R38 := gGameConfig
230 [-]: SELF      R38 R38 K38  ; R39 := R38; R38 := R38["0x2074A9F4"]
231 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
232 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
233 [-]: SETTABLE  R35 K41 R36  ; R35["isIdentifiedMod"] := R36
234 [-]: GETTABLE  R36 R35 K41  ; R36 := R35["isIdentifiedMod"]
235 [-]: TEST      R36 0        ; if not R36 then PC := 246
236 [-]: JMP       246          ; PC := 246
237 [-]: GETGLOBAL R36 K43      ; R36 := mMovie
238 [-]: SELF      R36 R36 K44  ; R37 := R36; R36 := R36["0x5DB0BD4"]
239 [-]: GETUPVAL  R38 U11      ; R38 := U11
240 [-]: MOVE      R39 R0       ; R39 := R0
241 [-]: NEWTABLE  R40 0 1      ; R40 := {}
242 [-]: GETTABLE  R41 R35 K42  ; R41 := R35["mName"]
243 [-]: SETTABLE  R40 K45 R41  ; R40["ITEM_NAME"] := R41
244 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
245 [-]: SETTABLE  R35 K42 R36  ; R35["mName"] := R36
246 [-]: GETGLOBAL R36 K10      ; R36 := table
247 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["0xE6450C9D"]
248 [-]: MOVE      R37 R30      ; R37 := R30
249 [-]: MOVE      R38 R35      ; R38 := R35
250 [-]: CALL      R36 3 1      ; R36(R37,R38)
251 [-]: GETGLOBAL R36 K46      ; R36 := 0x1BF588C6
252 [-]: CALL      R36 1 1      ; R36()
253 [-]: FORLOOP   R31 211      ; R31 += R33; if R31 <= R32 then begin PC := 211; R34 := R31 end
254 [-]: GETGLOBAL R36 K47      ; R36 := _G
255 [-]: GETTABLE  R36 R36 K48  ; R36 := R36["NemesisEndBody"]
256 [-]: GETGLOBAL R37 K6       ; R37 := 0x400E7765
257 [-]: MOVE      R38 R36      ; R38 := R36
258 [-]: CALL      R37 2 2      ; R37 := R37(R38)
259 [-]: TEST      R37 1        ; if R37 then PC := 323
260 [-]: JMP       323          ; PC := 323
261 [-]: GETTABLE  R37 R36 K49  ; R37 := R36["RecoveredItemInfo"]
262 [-]: EQ        1 R37 K50    ; if R37 == nil then PC := 323
263 [-]: JMP       323          ; PC := 323
264 [-]: CLOSURE   R38 0        ; R38 := closure(Function #82.1)
265 [-]: MOVE      R0 R0        ; R0 := R0
266 [-]: GETUPVAL  R0 U10       ; R0 := U10
267 [-]: MOVE      R0 R30       ; R0 := R30
268 [-]: GETTABLE  R39 R37 K51  ; R39 := R37["RecoveredMiscItems"]
269 [-]: LOADK     R40 K5       ; R40 := 1
270 [-]: LEN       R41 R39      ; R41 := # R39
271 [-]: LOADK     R42 K5       ; R42 := 1
272 [-]: FORPREP   R40 290      ; R40 -= R42; PC := 290
273 [-]: GETTABLE  R44 R39 R43  ; R44 := R39[R43]
274 [-]: GETGLOBAL R45 K52      ; R45 := 0x2C00D429
275 [-]: GETTABLE  R46 R44 K53  ; R46 := R44["ItemType"]
276 [-]: CALL      R45 2 2      ; R45 := R45(R46)
277 [-]: GETGLOBAL R46 K6       ; R46 := 0x400E7765
278 [-]: MOVE      R47 R45      ; R47 := R45
279 [-]: CALL      R46 2 2      ; R46 := R46(R47)
280 [-]: TEST      R46 1        ; if R46 then PC := 290
281 [-]: JMP       290          ; PC := 290
282 [-]: GETUPVAL  R46 U4       ; R46 := U4
283 [-]: MOVE      R47 R45      ; R47 := R45
284 [-]: CALL      R46 2 2      ; R46 := R46(R47)
285 [-]: TEST      R46 0        ; if not R46 then PC := 290
286 [-]: JMP       290          ; PC := 290
287 [-]: MOVE      R46 R38      ; R46 := R38
288 [-]: MOVE      R47 R44      ; R47 := R44
289 [-]: CALL      R46 2 1      ; R46(R47)
290 [-]: FORLOOP   R40 273      ; R40 += R42; if R40 <= R41 then begin PC := 273; R43 := R40 end
291 [-]: GETTABLE  R46 R37 K54  ; R46 := R37["RecoveredCollectedItems"]
292 [-]: LOADK     R47 K5       ; R47 := 1
293 [-]: LEN       R48 R46      ; R48 := # R46
294 [-]: LOADK     R49 K5       ; R49 := 1
295 [-]: FORPREP   R47 322      ; R47 -= R49; PC := 322
296 [-]: GETTABLE  R51 R46 R50  ; R51 := R46[R50]
297 [-]: GETGLOBAL R52 K55      ; R52 := 0x7C282057
298 [-]: GETTABLE  R53 R51 K56  ; R53 := R51["StoreItem"]
299 [-]: CALL      R52 2 2      ; R52 := R52(R53)
300 [-]: GETGLOBAL R53 K6       ; R53 := 0x400E7765
301 [-]: MOVE      R54 R52      ; R54 := R52
302 [-]: CALL      R53 2 2      ; R53 := R53(R54)
303 [-]: TEST      R53 1        ; if R53 then PC := 322
304 [-]: JMP       322          ; PC := 322
305 [-]: SELF      R53 R52 K13  ; R54 := R52; R53 := R52["0x3077BE70"]
306 [-]: CALL      R53 2 2      ; R53 := R53(R54)
307 [-]: MOVE      R52 R53      ; R52 := R53
308 [-]: GETGLOBAL R53 K6       ; R53 := 0x400E7765
309 [-]: MOVE      R54 R52      ; R54 := R52
310 [-]: CALL      R53 2 2      ; R53 := R53(R54)
311 [-]: TEST      R53 1        ; if R53 then PC := 322
312 [-]: JMP       322          ; PC := 322
313 [-]: GETUPVAL  R53 U4       ; R53 := U4
314 [-]: MOVE      R54 R52      ; R54 := R52
315 [-]: CALL      R53 2 2      ; R53 := R53(R54)
316 [-]: TEST      R53 0        ; if not R53 then PC := 322
317 [-]: JMP       322          ; PC := 322
318 [-]: SETTABLE  R51 K53 R52  ; R51["ItemType"] := R52
319 [-]: MOVE      R53 R38      ; R53 := R38
320 [-]: MOVE      R54 R51      ; R54 := R51
321 [-]: CALL      R53 2 1      ; R53(R54)
322 [-]: FORLOOP   R47 296      ; R47 += R49; if R47 <= R48 then begin PC := 296; R50 := R47 end
323 [-]: GETGLOBAL R53 K10      ; R53 := table
324 [-]: GETTABLE  R53 R53 K57  ; R53 := R53["0xA5C58010"]
325 [-]: MOVE      R54 R30      ; R54 := R30
326 [-]: CLOSURE   R55 1        ; R55 := closure(Function #82.2)
327 [-]: CALL      R53 3 1      ; R53(R54,R55)
328 [-]: LOADK     R53 K5       ; R53 := 1
329 [-]: LEN       R54 R30      ; R54 := # R30
330 [-]: LOADK     R55 K5       ; R55 := 1
331 [-]: FORPREP   R53 361      ; R53 -= R55; PC := 361
332 [-]: GETUPVAL  R57 U10      ; R57 := U10
333 [-]: GETTABLE  R57 R57 K58  ; R57 := R57["0xA8A95C66"]
334 [-]: GETUPVAL  R58 U0       ; R58 := U0
335 [-]: GETTABLE  R59 R30 R56  ; R59 := R30[R56]
336 [-]: GETTABLE  R59 R59 K59  ; R59 := R59["mId"]
337 [-]: NEWTABLE  R60 0 1      ; R60 := {}
338 [-]: GETTABLE  R61 R30 R56  ; R61 := R30[R56]
339 [-]: SETTABLE  R60 K60 R61  ; R60["Card"] := R61
340 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
341 [-]: GETTABLE  R58 R57 K60  ; R58 := R57["Card"]
342 [-]: GETTABLE  R58 R58 K61  ; R58 := R58["mUpgradeItemType"]
343 [-]: GETTABLE  R59 R57 K60  ; R59 := R57["Card"]
344 [-]: GETTABLE  R59 R59 K62  ; R59 := R59["Recovered"]
345 [-]: SETTABLE  R57 K62 R59  ; R57["Recovered"] := R59
346 [-]: LOADK     R59 K5       ; R59 := 1
347 [-]: LEN       R60 R1       ; R60 := # R1
348 [-]: LOADK     R61 K5       ; R61 := 1
349 [-]: FORPREP   R59 358      ; R59 -= R61; PC := 358
350 [-]: GETTABLE  R63 R1 R62   ; R63 := R1[R62]
351 [-]: GETTABLE  R63 R63 K7   ; R63 := R63["mItemType"]
352 [-]: EQ        0 R63 R58    ; if R63 ~= R58 then PC := 358
353 [-]: JMP       358          ; PC := 358
354 [-]: GETTABLE  R63 R1 R62   ; R63 := R1[R62]
355 [-]: GETTABLE  R63 R63 K14  ; R63 := R63["mItemCount"]
356 [-]: SETTABLE  R57 K63 R63  ; R57["TaxedCount"] := R63
357 [-]: JMP       359          ; PC := 359
358 [-]: FORLOOP   R59 350      ; R59 += R61; if R59 <= R60 then begin PC := 350; R62 := R59 end
359 [-]: GETGLOBAL R63 K46      ; R63 := 0x1BF588C6
360 [-]: CALL      R63 1 1      ; R63()
361 [-]: FORLOOP   R53 332      ; R53 += R55; if R53 <= R54 then begin PC := 332; R56 := R53 end
362 [-]: GETUPVAL  R63 U0       ; R63 := U0
363 [-]: SELF      R63 R63 K64  ; R64 := R63; R63 := R63["0x6470BAF4"]
364 [-]: CALL      R63 2 1      ; R63(R64)
365 [-]: GETGLOBAL R63 K43      ; R63 := mMovie
366 [-]: SELF      R63 R63 K44  ; R64 := R63; R63 := R63["0x5DB0BD4"]
367 [-]: LOADK     R65 K65      ; R65 := "/Lotus/Language/Menu/Mod_Rewards"
368 [-]: MOVE      R66 R1       ; R66 := R1
369 [-]: CALL      R63 4 2      ; R63 := R63(R64,R65,R66)
370 [-]: GETUPVAL  R64 U12      ; R64 := U12
371 [-]: LOADK     R65 K66      ; R65 := "ModsPanel"
372 [-]: MOVE      R66 R63      ; R66 := R63
373 [-]: LOADK     R67 K67      ; R67 := 425
374 [-]: CALL      R64 4 1      ; R64(R65,R66,R67)
375 [-]: RETURN    R0 1         ; return 


; Function #82.1:
;
; Name:            
; Defined at line: 4934
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xA9D5605B"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0x7C282057
  5 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["ItemType"]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: SETTABLE  R1 K2 R2     ; R1["mItemType"] := R2
  8 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["ItemCount"]
  9 [-]: SETTABLE  R1 K5 R2     ; R1["mItemCount"] := R2
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: ADD       R2 R2 K7     ; R2 := R2 + 1
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: GETUPVAL  R2 U1        ; R2 := U1
 14 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x8383A1DC"]
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: SETTABLE  R2 K9 K10    ; R2["Recovered"] := "0x1"
 19 [-]: GETGLOBAL R3 K11       ; R3 := table
 20 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xE6450C9D"]
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: CALL      R3 3 1       ; R3(R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #82.2:
;
; Name:            
; Defined at line: 4970
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Recovered"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Recovered"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Recovered"]
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       53           ; PC := 53
  8 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mIsNew"]
  9 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mIsNew"]
 10 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mIsNew"]
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       53           ; PC := 53
 15 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["isIdentifiedMod"]
 16 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["isIdentifiedMod"]
 17 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["isIdentifiedMod"]
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: JMP       53           ; PC := 53
 22 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRarity"]
 23 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRarity"]
 24 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRarity"]
 27 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRarity"]
 28 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: RETURN    R2 2         ; return R2
 33 [-]: JMP       53           ; PC := 53
 34 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mName"]
 35 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mName"]
 36 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mName"]
 39 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mName"]
 40 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: MOVE      R2 R1        ; R2 := R1
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: JMP       53           ; PC := 53
 46 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mLevel"]
 47 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mLevel"]
 48 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: MOVE      R2 R1        ; R2 := R1
 52 [-]: RETURN    R2 2         ; return R2
 53 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 5005
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: EQ        1 R0 K0      ; if R0 == 3 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: LOADK     R2 K1        ; R2 := "StatsPanel"
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: SUB       R2 K0 R0     ; R2 := 3 - R0
 14 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 15 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x6B7B470B"]
 17 [-]: LOADK     R4 K5        ; R4 := "StatsPanel.PanelBG"
 18 [-]: LOADK     R5 K6        ; R5 := "_y"
 19 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 20 [-]: SUB       R2 R2 R1     ; R2 := R2 - R1
 21 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 22 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 23 [-]: LOADK     R5 K5        ; R5 := "StatsPanel.PanelBG"
 24 [-]: LOADK     R6 K7        ; R6 := "_height"
 25 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 26 [-]: ADD       R3 R3 R1     ; R3 := R3 + R1
 27 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 28 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x6B7B470B"]
 29 [-]: LOADK     R6 K8        ; R6 := "StatsPanel.Player1"
 30 [-]: LOADK     R7 K6        ; R7 := "_y"
 31 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 32 [-]: SUB       R4 R4 R1     ; R4 := R4 - R1
 33 [-]: GETGLOBAL R5 K3        ; R5 := mMovie
 34 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x6B7B470B"]
 35 [-]: LOADK     R7 K9        ; R7 := "StatsPanel.StatList"
 36 [-]: LOADK     R8 K6        ; R8 := "_y"
 37 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 38 [-]: SUB       R5 R5 R1     ; R5 := R5 - R1
 39 [-]: GETGLOBAL R6 K3        ; R6 := mMovie
 40 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x6B7B470B"]
 41 [-]: LOADK     R8 K10       ; R8 := "StatsPanel.ScrollBar"
 42 [-]: LOADK     R9 K6        ; R9 := "_y"
 43 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 44 [-]: SUB       R6 R6 R1     ; R6 := R6 - R1
 45 [-]: GETGLOBAL R7 K3        ; R7 := mMovie
 46 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7["0x1C19D966"]
 47 [-]: LOADK     R9 K5        ; R9 := "StatsPanel.PanelBG"
 48 [-]: LOADK     R10 K6       ; R10 := "_y"
 49 [-]: MOVE      R11 R2       ; R11 := R2
 50 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 51 [-]: GETGLOBAL R7 K3        ; R7 := mMovie
 52 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7["0x1C19D966"]
 53 [-]: LOADK     R9 K5        ; R9 := "StatsPanel.PanelBG"
 54 [-]: LOADK     R10 K7       ; R10 := "_height"
 55 [-]: MOVE      R11 R3       ; R11 := R3
 56 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 57 [-]: LOADK     R7 K12       ; R7 := 1
 58 [-]: GETUPVAL  R8 U3        ; R8 := U3
 59 [-]: LOADK     R9 K12       ; R9 := 1
 60 [-]: FORPREP   R7 78        ; R7 -= R9; PC := 78
 61 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 62 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0x1C19D966"]
 63 [-]: LOADK     R13 K13      ; R13 := "StatsPanel.Player"
 64 [-]: MOVE      R14 R10      ; R14 := R10
 65 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 66 [-]: LOADK     R14 K6       ; R14 := "_y"
 67 [-]: MOVE      R15 R4       ; R15 := R4
 68 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 69 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 70 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x880196A7"]
 71 [-]: LOADK     R13 K13      ; R13 := "StatsPanel.Player"
 72 [-]: MOVE      R14 R10      ; R14 := R10
 73 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 74 [-]: LOADK     R14 K15      ; R14 := "Btn"
 75 [-]: LOADK     R15 K7       ; R15 := "_height"
 76 [-]: MOVE      R16 R3       ; R16 := R3
 77 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 78 [-]: FORLOOP   R7 61        ; R7 += R9; if R7 <= R8 then begin PC := 61; R10 := R7 end
 79 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 80 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0x1C19D966"]
 81 [-]: LOADK     R13 K9       ; R13 := "StatsPanel.StatList"
 82 [-]: LOADK     R14 K6       ; R14 := "_y"
 83 [-]: MOVE      R15 R5       ; R15 := R5
 84 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 85 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 86 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0x1C19D966"]
 87 [-]: LOADK     R13 K10      ; R13 := "StatsPanel.ScrollBar"
 88 [-]: LOADK     R14 K6       ; R14 := "_y"
 89 [-]: MOVE      R15 R6       ; R15 := R6
 90 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 91 [-]: GETUPVAL  R11 U4       ; R11 := U4
 92 [-]: CALL      R11 1 1      ; R11()
 93 [-]: GETUPVAL  R11 U5       ; R11 := U5
 94 [-]: SUB       R11 R11 K16  ; R11 := R11 - 10
 95 [-]: LOADK     R12 K12      ; R12 := 1
 96 [-]: GETUPVAL  R13 U3       ; R13 := U3
 97 [-]: LOADK     R14 K12      ; R14 := 1
 98 [-]: FORPREP   R12 118      ; R12 -= R14; PC := 118
 99 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
100 [-]: SELF      R16 R16 K14  ; R17 := R16; R16 := R16["0x880196A7"]
101 [-]: LOADK     R18 K13      ; R18 := "StatsPanel.Player"
102 [-]: MOVE      R19 R15      ; R19 := R15
103 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
104 [-]: LOADK     R19 K17      ; R19 := "Name"
105 [-]: LOADK     R20 K18      ; R20 := "_width"
106 [-]: MOVE      R21 R11      ; R21 := R11
107 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
108 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
109 [-]: SELF      R16 R16 K14  ; R17 := R16; R16 := R16["0x880196A7"]
110 [-]: LOADK     R18 K13      ; R18 := "StatsPanel.Player"
111 [-]: MOVE      R19 R15      ; R19 := R15
112 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
113 [-]: LOADK     R19 K17      ; R19 := "Name"
114 [-]: LOADK     R20 K19      ; R20 := "_x"
115 [-]: UNM       R21 R11      ; R21 := - R11
116 [-]: MUL       R21 R21 K20  ; R21 := R21 * 0.5
117 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
118 [-]: FORLOOP   R12 99       ; R12 += R14; if R12 <= R13 then begin PC := 99; R15 := R12 end
119 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
120 [-]: SELF      R16 R16 K11  ; R17 := R16; R16 := R16["0x1C19D966"]
121 [-]: LOADK     R18 K21      ; R18 := "StatsPanel.SideLights"
122 [-]: LOADK     R19 K22      ; R19 := "_visible"
123 [-]: MOVE      R20 R0       ; R20 := R0
124 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
125 [-]: GETGLOBAL R16 K23      ; R16 := 0x329BDC44
126 [-]: LOADK     R17 K24      ; R17 := "EE.Interface.Components.Grid"
127 [-]: CALL      R16 2 2      ; R16 := R16(R17)
128 [-]: GETTABLE  R17 R16 K25  ; R17 := R16["0x9A7B3F36"]
129 [-]: GETGLOBAL R18 K3       ; R18 := mMovie
130 [-]: LOADK     R19 K26      ; R19 := "StatsPanel.StatList.StatsBlock"
131 [-]: LOADNIL   R20 R20      ; R20 := nil
132 [-]: LOADK     R21 K12      ; R21 := 1
133 [-]: GETUPVAL  R22 U7       ; R22 := U7
134 [-]: GETTABLE  R22 R22 K27  ; R22 := R22["0xF81722A2"]
135 [-]: EQ        1 R0 K0      ; if R0 == 3 then PC := 138
136 [-]: JMP       138          ; PC := 138
137 [-]: MOVE      R23 R0       ; R23 := R0
138 [-]: MOVE      R23 R1       ; R23 := R1
139 [-]: LOADK     R24 K28      ; R24 := 4
140 [-]: GETUPVAL  R25 U7       ; R25 := U7
141 [-]: GETTABLE  R25 R25 K27  ; R25 := R25["0xF81722A2"]
142 [-]: EQ        1 R0 K2      ; if R0 == 2 then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: MOVE      R26 R0       ; R26 := R0
145 [-]: MOVE      R26 R1       ; R26 := R1
146 [-]: LOADK     R27 K29      ; R27 := 6
147 [-]: LOADK     R28 K30      ; R28 := 7
148 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
149 [-]: CALL      R22 0 0      ; R22,... := R22(R23,...)
150 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
151 [-]: MOVE      R17 R6       ; R17 := R6
152 [-]: GETUPVAL  R17 U6       ; R17 := U6
153 [-]: SETTABLE  R17 K31 K12  ; R17["mInitialX"] := 1
154 [-]: GETGLOBAL R17 K3       ; R17 := mMovie
155 [-]: SELF      R17 R17 K11  ; R18 := R17; R17 := R17["0x1C19D966"]
156 [-]: LOADK     R19 K32      ; R19 := "StatsPanel.StatMask"
157 [-]: LOADK     R20 K6       ; R20 := "_y"
158 [-]: MOVE      R21 R5       ; R21 := R5
159 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
160 [-]: GETGLOBAL R17 K3       ; R17 := mMovie
161 [-]: SELF      R17 R17 K11  ; R18 := R17; R17 := R17["0x1C19D966"]
162 [-]: LOADK     R19 K32      ; R19 := "StatsPanel.StatMask"
163 [-]: LOADK     R20 K7       ; R20 := "_height"
164 [-]: SUB       R21 R5 R2    ; R21 := R5 - R2
165 [-]: SUB       R21 R3 R21   ; R21 := R3 - R21
166 [-]: SUB       R21 R21 K2   ; R21 := R21 - 2
167 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
168 [-]: GETUPVAL  R17 U6       ; R17 := U6
169 [-]: SETTABLE  R17 K33 K34  ; R17["mWrapAroundNavigation"] := "0x0"
170 [-]: GETUPVAL  R17 U6       ; R17 := U6
171 [-]: SETTABLE  R17 K35 K36  ; R17["mRowSeparation"] := 65
172 [-]: GETUPVAL  R17 U6       ; R17 := U6
173 [-]: SELF      R17 R17 K37  ; R18 := R17; R17 := R17["0x3DB61F37"]
174 [-]: LOADK     R19 K10      ; R19 := "StatsPanel.ScrollBar"
175 [-]: CALL      R17 3 1      ; R17(R18,R19)
176 [-]: GETUPVAL  R17 U6       ; R17 := U6
177 [-]: GETTABLE  R17 R17 K38  ; R17 := R17["mScrollBar"]
178 [-]: SUB       R18 R3 K0    ; R18 := R3 - 3
179 [-]: SETTABLE  R17 K39 R18  ; R17["mHeight"] := R18
180 [-]: GETUPVAL  R17 U6       ; R17 := U6
181 [-]: SETTABLE  R17 K40 K12  ; R17["mScroll"] := 1
182 [-]: GETUPVAL  R17 U6       ; R17 := U6
183 [-]: SELF      R17 R17 K41  ; R18 := R17; R17 := R17["0xF9C18536"]
184 [-]: CALL      R17 2 1      ; R17(R18)
185 [-]: GETUPVAL  R17 U6       ; R17 := U6
186 [-]: SETTABLE  R17 K42 K12  ; R17["mExtraRowScroll"] := 1
187 [-]: GETUPVAL  R17 U6       ; R17 := U6
188 [-]: CLOSURE   R18 0        ; R18 := closure(Function #83.1)
189 [-]: GETUPVAL  R0 U8        ; R0 := U8
190 [-]: GETUPVAL  R0 U9        ; R0 := U9
191 [-]: SETTABLE  R17 K43 R18  ; R17["mElementDrawCallback"] := R18
192 [-]: GETUPVAL  R17 U6       ; R17 := U6
193 [-]: CLOSURE   R18 1        ; R18 := closure(Function #83.2)
194 [-]: SETTABLE  R17 K44 R18  ; R17["mOnFocusedCallback"] := R18
195 [-]: GETUPVAL  R17 U6       ; R17 := U6
196 [-]: CLOSURE   R18 2        ; R18 := closure(Function #83.3)
197 [-]: SETTABLE  R17 K45 R18  ; R17["mOnUnfocusedCallback"] := R18
198 [-]: GETGLOBAL R17 K3       ; R17 := mMovie
199 [-]: SELF      R17 R17 K11  ; R18 := R17; R17 := R17["0x1C19D966"]
200 [-]: LOADK     R19 K46      ; R19 := "StatsPanel.Player2.PanelBG"
201 [-]: LOADK     R20 K22      ; R20 := "_visible"
202 [-]: MOVE      R21 R0       ; R21 := R0
203 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
204 [-]: GETGLOBAL R17 K3       ; R17 := mMovie
205 [-]: SELF      R17 R17 K11  ; R18 := R17; R17 := R17["0x1C19D966"]
206 [-]: LOADK     R19 K47      ; R19 := "StatsPanel.Player4.PanelBG"
207 [-]: LOADK     R20 K22      ; R20 := "_visible"
208 [-]: MOVE      R21 R0       ; R21 := R0
209 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
210 [-]: GETGLOBAL R17 K48      ; R17 := 0x400E7765
211 [-]: GETGLOBAL R18 K49      ; R18 := gGameRules
212 [-]: CALL      R17 2 2      ; R17 := R17(R18)
213 [-]: TEST      R17 1        ; if R17 then PC := 237
214 [-]: JMP       237          ; PC := 237
215 [-]: GETGLOBAL R17 K49      ; R17 := gGameRules
216 [-]: SELF      R17 R17 K50  ; R18 := R17; R17 := R17["0x8AC0DDF4"]
217 [-]: CALL      R17 2 2      ; R17 := R17(R18)
218 [-]: MOVE      R17 R10      ; R17 := R10
219 [-]: GETUPVAL  R17 U11      ; R17 := U11
220 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["0xC65D09DD"]
221 [-]: GETGLOBAL R18 K3       ; R18 := mMovie
222 [-]: GETUPVAL  R19 U10      ; R19 := U10
223 [-]: LOADK     R20 K52      ; R20 := "Compact"
224 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
225 [-]: GETGLOBAL R18 K3       ; R18 := mMovie
226 [-]: SELF      R18 R18 K53  ; R19 := R18; R18 := R18["0x5DB0BD4"]
227 [-]: LOADK     R20 K54      ; R20 := "/Lotus/Language/Menu/MissionStats_Time"
228 [-]: MOVE      R21 R1       ; R21 := R1
229 [-]: NEWTABLE  R22 0 1      ; R22 := {}
230 [-]: SETTABLE  R22 K55 R17  ; R22["TIME"] := R17
231 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
232 [-]: GETUPVAL  R19 U12      ; R19 := U12
233 [-]: LOADK     R20 K1       ; R20 := "StatsPanel"
234 [-]: MOVE      R21 R18      ; R21 := R18
235 [-]: LOADK     R22 K56      ; R22 := 850
236 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
237 [-]: RETURN    R0 1         ; return 


; Function #83.1:
;
; Name:            
; Defined at line: 5052
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Stats"]
  4 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  5 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x333CC57A"]
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7E1F26D7"]
 10 [-]: LOADK     R3 K4        ; R3 := "StatsPanel.PanelBG"
 11 [-]: GETGLOBAL R4 K5        ; R4 := _G
 12 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["UIMaterial_RectangleNoDepth"]
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: RETURN    R0 1         ; return 


; Function #83.2:
;
; Name:            
; Defined at line: 5057
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x302AAB2F"]
  3 [-]: LOADK     R3 K2        ; R3 := "StatsPanel.PanelBG"
  4 [-]: LOADK     R4 K3        ; R4 := "RectEdgeColor"
  5 [-]: GETGLOBAL R5 K4        ; R5 := _G
  6 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["UIColorObject_Yellow"]
  7 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["r"]
  8 [-]: GETGLOBAL R6 K4        ; R6 := _G
  9 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColorObject_Yellow"]
 10 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["g"]
 11 [-]: GETGLOBAL R7 K4        ; R7 := _G
 12 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColorObject_Yellow"]
 13 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["b"]
 14 [-]: LOADK     R8 K9        ; R8 := 1
 15 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 16 [-]: RETURN    R0 1         ; return 


; Function #83.3:
;
; Name:            
; Defined at line: 5061
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x302AAB2F"]
  3 [-]: LOADK     R3 K2        ; R3 := "StatsPanel.PanelBG"
  4 [-]: LOADK     R4 K3        ; R4 := "RectEdgeColor"
  5 [-]: GETGLOBAL R5 K4        ; R5 := _G
  6 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["UIColorObject_White"]
  7 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["r"]
  8 [-]: GETGLOBAL R6 K4        ; R6 := _G
  9 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColorObject_White"]
 10 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["g"]
 11 [-]: GETGLOBAL R7 K4        ; R7 := _G
 12 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIColorObject_White"]
 13 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["b"]
 14 [-]: LOADK     R8 K9        ; R8 := 0.20000000298023
 15 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 16 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 5076
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #84.1)
  3 [-]: SETTABLE  R0 K0 R1     ; R0["GetLoc"] := R1
  4 [-]: CLOSURE   R1 1         ; R1 := closure(Function #84.2)
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: GETUPVAL  R0 U4        ; R0 := U4
 10 [-]: GETUPVAL  R0 U5        ; R0 := U5
 11 [-]: GETUPVAL  R0 U6        ; R0 := U6
 12 [-]: SETTABLE  R0 K1 R1     ; R0["Draw"] := R1
 13 [-]: CLOSURE   R1 2         ; R1 := closure(Function #84.3)
 14 [-]: GETUPVAL  R0 U1        ; R0 := U1
 15 [-]: GETUPVAL  R0 U7        ; R0 := U7
 16 [-]: GETUPVAL  R0 U8        ; R0 := U8
 17 [-]: GETUPVAL  R0 U9        ; R0 := U9
 18 [-]: SETTABLE  R0 K2 R1     ; R0["Populate"] := R1
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #84.1:
;
; Name:            
; Defined at line: 5078
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := "/Lotus/Language/Menu/MissionStats_Stats"
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #84.2:
;
; Name:            
; Defined at line: 5080
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x17028E8F"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := ".Name.text"
  5 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  6 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["Label"]
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x880196A7"]
 10 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
 11 [-]: LOADK     R5 K6        ; R5 := "Name"
 12 [-]: LOADK     R6 K7        ; R6 := "textColor"
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 15 [-]: LOADNIL   R2 R2        ; R2 := nil
 16 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["Value"]
 17 [-]: LEN       R3 R3        ; R3 := # R3
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETUPVAL  R5 U2        ; R5 := U2
 20 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 21 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["statTable"]
 22 [-]: GETGLOBAL R5 K10       ; R5 := 0xF595ADDE
 23 [-]: GETTABLE  R6 R1 K11    ; R6 := R1["Id"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 26 [-]: LT        0 K12 R3     ; if 1 >= R3 then PC := 47
 27 [-]: JMP       47           ; PC := 47
 28 [-]: LOADK     R5 K12       ; R5 := 1
 29 [-]: GETTABLE  R6 R4 K8     ; R6 := R4["Value"]
 30 [-]: LEN       R6 R6        ; R6 := # R6
 31 [-]: LOADK     R7 K12       ; R7 := 1
 32 [-]: FORPREP   R5 46        ; R5 -= R7; PC := 46
 33 [-]: GETTABLE  R9 R4 K8     ; R9 := R4["Value"]
 34 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 35 [-]: GETTABLE  R10 R4 K13   ; R10 := R4["BestValue"]
 36 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETTABLE  R9 R4 K13    ; R9 := R4["BestValue"]
 39 [-]: EQ        0 R9 K14     ; if R9 ~= 0 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETTABLE  R9 R4 K15    ; R9 := R4["BestIsMax"]
 42 [-]: TEST      R9 1         ; if R9 then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: MOVE      R2 R8        ; R2 := R8
 45 [-]: JMP       47           ; PC := 47
 46 [-]: FORLOOP   R5 33        ; R5 += R7; if R5 <= R6 then begin PC := 33; R8 := R5 end
 47 [-]: LOADNIL   R9 R9        ; R9 := nil
 48 [-]: LOADK     R10 K12      ; R10 := 1
 49 [-]: GETUPVAL  R11 U3       ; R11 := U3
 50 [-]: LOADK     R12 K12      ; R12 := 1
 51 [-]: FORPREP   R10 143      ; R10 -= R12; PC := 143
 52 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["mClipName"]
 53 [-]: LOADK     R15 K16      ; R15 := ".Stat"
 54 [-]: MOVE      R16 R13      ; R16 := R13
 55 [-]: CONCAT    R9 R14 R16   ; R9 := R14 .. R15 .. R16
 56 [-]: LE        0 R13 R3     ; if R13 > R3 then PC := 131
 57 [-]: JMP       131          ; PC := 131
 58 [-]: GETGLOBAL R14 K0       ; R14 := mMovie
 59 [-]: SELF      R14 R14 K17  ; R15 := R14; R14 := R14["0x1C19D966"]
 60 [-]: MOVE      R16 R9       ; R16 := R9
 61 [-]: LOADK     R17 K18      ; R17 := "_visible"
 62 [-]: MOVE      R18 R1       ; R18 := R1
 63 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 64 [-]: LOADK     R14 K19      ; R14 := ""
 65 [-]: GETTABLE  R15 R4 K20   ; R15 := R4["IsRatio"]
 66 [-]: TEST      R15 0        ; if not R15 then PC := 81
 67 [-]: JMP       81           ; PC := 81
 68 [-]: GETGLOBAL R15 K21      ; R15 := string
 69 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["0x4B1F4F58"]
 70 [-]: LOADK     R16 K23      ; R16 := "%d%%"
 71 [-]: GETGLOBAL R17 K24      ; R17 := math
 72 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["0xF7005A7B"]
 73 [-]: GETTABLE  R18 R1 K8    ; R18 := R1["Value"]
 74 [-]: GETTABLE  R18 R18 R13  ; R18 := R18[R13]
 75 [-]: MUL       R18 R18 K26  ; R18 := R18 * 100
 76 [-]: ADD       R18 R18 K27  ; R18 := R18 + 0.5
 77 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
 78 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 79 [-]: MOVE      R14 R15      ; R14 := R15
 80 [-]: JMP       83           ; PC := 83
 81 [-]: GETTABLE  R15 R1 K8    ; R15 := R1["Value"]
 82 [-]: GETTABLE  R14 R15 R13  ; R14 := R15[R13]
 83 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
 84 [-]: SELF      R15 R15 K17  ; R16 := R15; R15 := R15["0x1C19D966"]
 85 [-]: MOVE      R17 R9       ; R17 := R9
 86 [-]: LOADK     R18 K28      ; R18 := "_x"
 87 [-]: GETUPVAL  R19 U4       ; R19 := U4
 88 [-]: MOVE      R20 R13      ; R20 := R13
 89 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
 90 [-]: CALL      R15 0 1      ; R15(R16,...)
 91 [-]: EQ        0 R13 R2     ; if R13 ~= R2 then PC := 108
 92 [-]: JMP       108          ; PC := 108
 93 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
 94 [-]: SELF      R15 R15 K5   ; R16 := R15; R15 := R15["0x880196A7"]
 95 [-]: MOVE      R17 R9       ; R17 := R9
 96 [-]: LOADK     R18 K29      ; R18 := "Field"
 97 [-]: LOADK     R19 K7       ; R19 := "textColor"
 98 [-]: GETUPVAL  R20 U5       ; R20 := U5
 99 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
100 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
101 [-]: SELF      R15 R15 K5   ; R16 := R15; R15 := R15["0x880196A7"]
102 [-]: MOVE      R17 R9       ; R17 := R9
103 [-]: LOADK     R18 K30      ; R18 := "TopStat"
104 [-]: LOADK     R19 K18      ; R19 := "_visible"
105 [-]: MOVE      R20 R1       ; R20 := R1
106 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
107 [-]: JMP       122          ; PC := 122
108 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
109 [-]: SELF      R15 R15 K5   ; R16 := R15; R15 := R15["0x880196A7"]
110 [-]: MOVE      R17 R9       ; R17 := R9
111 [-]: LOADK     R18 K29      ; R18 := "Field"
112 [-]: LOADK     R19 K7       ; R19 := "textColor"
113 [-]: GETUPVAL  R20 U6       ; R20 := U6
114 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
115 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
116 [-]: SELF      R15 R15 K5   ; R16 := R15; R15 := R15["0x880196A7"]
117 [-]: MOVE      R17 R9       ; R17 := R9
118 [-]: LOADK     R18 K30      ; R18 := "TopStat"
119 [-]: LOADK     R19 K18      ; R19 := "_visible"
120 [-]: MOVE      R20 R0       ; R20 := R0
121 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
122 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
123 [-]: SELF      R15 R15 K31  ; R16 := R15; R15 := R15["0xD6A79FE9"]
124 [-]: MOVE      R17 R9       ; R17 := R9
125 [-]: LOADK     R18 K32      ; R18 := ".Field"
126 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
127 [-]: LOADK     R18 K33      ; R18 := "text"
128 [-]: MOVE      R19 R14      ; R19 := R14
129 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
130 [-]: JMP       143          ; PC := 143
131 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
132 [-]: SELF      R15 R15 K17  ; R16 := R15; R15 := R15["0x1C19D966"]
133 [-]: MOVE      R17 R9       ; R17 := R9
134 [-]: LOADK     R18 K18      ; R18 := "_visible"
135 [-]: MOVE      R19 R0       ; R19 := R0
136 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
137 [-]: GETGLOBAL R15 K0       ; R15 := mMovie
138 [-]: SELF      R15 R15 K17  ; R16 := R15; R15 := R15["0x1C19D966"]
139 [-]: MOVE      R17 R9       ; R17 := R9
140 [-]: LOADK     R18 K34      ; R18 := "_rotation"
141 [-]: LOADK     R19 K35      ; R19 := 24
142 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
143 [-]: FORLOOP   R10 52       ; R10 += R12; if R10 <= R11 then begin PC := 52; R13 := R10 end
144 [-]: RETURN    R0 1         ; return 


; Function #84.3:
;
; Name:            
; Defined at line: 5128
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Stats"]
  4 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["statTable"]
  6 [-]: LOADK     R1 K2        ; R1 := 1
  7 [-]: LEN       R2 R0        ; R2 := # R0
  8 [-]: LOADK     R3 K2        ; R3 := 1
  9 [-]: FORPREP   R1 17        ; R1 -= R3; PC := 17
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: GETTABLE  R6 R0 R4     ; R6 := R0[R4]
 12 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Label"]
 13 [-]: GETTABLE  R7 R0 R4     ; R7 := R0[R4]
 14 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["Value"]
 15 [-]: LOADNIL   R8 R8        ; R8 := nil
 16 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 17 [-]: FORLOOP   R1 10        ; R1 += R3; if R1 <= R2 then begin PC := 10; R4 := R1 end
 18 [-]: GETUPVAL  R5 U3        ; R5 := U3
 19 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x6470BAF4"]
 20 [-]: CALL      R5 2 1       ; R5(R6)
 21 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 5139
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  4 [-]: LOADK     R3 K3        ; R3 := "AffinityPanel"
  5 [-]: LOADK     R4 K4        ; R4 := "_y"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: SETTABLE  R0 K0 R1     ; R0["Affinity"] := R1
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
 11 [-]: LOADK     R3 K6        ; R3 := "RewardsPanel"
 12 [-]: LOADK     R4 K4        ; R4 := "_y"
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: SETTABLE  R0 K5 R1     ; R0["Rewards"] := R1
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
 18 [-]: LOADK     R3 K8        ; R3 := "ModsPanel"
 19 [-]: LOADK     R4 K4        ; R4 := "_y"
 20 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 21 [-]: SETTABLE  R0 K7 R1     ; R0["Mods"] := R1
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
 25 [-]: LOADK     R3 K10       ; R3 := "StatsPanel"
 26 [-]: LOADK     R4 K4        ; R4 := "_y"
 27 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 28 [-]: SETTABLE  R0 K9 R1     ; R0["Stats"] := R1
 29 [-]: GETGLOBAL R0 K11       ; R0 := 0xF595ADDE
 30 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 31 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
 32 [-]: LOADK     R3 K12       ; R3 := "RepPanel.RepBar1.Fill"
 33 [-]: LOADK     R4 K13       ; R4 := "_x"
 34 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 35 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 5147
; #Upvalues:       8
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R3 1 2       ; R3 := R3()
  4 [-]: TEST      R3 1         ; if R3 then PC := 124
  5 [-]: JMP       124          ; PC := 124
  6 [-]: TEST      R0 0         ; if not R0 then PC := 45
  7 [-]: JMP       45           ; PC := 45
  8 [-]: GETUPVAL  R3 U1        ; R3 := U1
  9 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["isPvp"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 45
 11 [-]: JMP       45           ; PC := 45
 12 [-]: LOADK     R2 K2        ; R2 := "/Lotus/Language/Game/CTF_Title"
 13 [-]: GETUPVAL  R3 U1        ; R3 := U1
 14 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 15 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["PVPMODE_DEATHMATCH"]
 17 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADK     R2 K6        ; R2 := "/Lotus/Language/Game/DM_Title"
 20 [-]: JMP       124          ; PC := 124
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 23 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 24 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["PVPMODE_TEAMDEATHMATCH"]
 25 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: LOADK     R2 K8        ; R2 := "/Lotus/Language/Game/TDM_Title"
 28 [-]: JMP       124          ; PC := 124
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 31 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 32 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["PVPMODE_SPEEDBALL"]
 33 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: LOADK     R2 K10       ; R2 := "/Lotus/Language/Game/SB_Title"
 36 [-]: JMP       124          ; PC := 124
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["pvpType"]
 39 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 40 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["PVPMODE_VOIDTEAR"]
 41 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 124
 42 [-]: JMP       124          ; PC := 124
 43 [-]: LOADK     R2 K12       ; R2 := "/Lotus/Language/Game/VoidTear_Title"
 44 [-]: JMP       124          ; PC := 124
 45 [-]: GETUPVAL  R3 U2        ; R3 := U2
 46 [-]: CALL      R3 1 2       ; R3 := R3()
 47 [-]: TEST      R3 0         ; if not R3 then PC := 67
 48 [-]: JMP       67           ; PC := 67
 49 [-]: GETUPVAL  R3 U3        ; R3 := U3
 50 [-]: CALL      R3 1 2       ; R3 := R3()
 51 [-]: TEST      R3 0         ; if not R3 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: LOADK     R2 K13       ; R2 := "/Lotus/Language/G1Quests/ProjectIndexTitle"
 54 [-]: JMP       124          ; PC := 124
 55 [-]: GETUPVAL  R3 U4        ; R3 := U4
 56 [-]: CALL      R3 1 2       ; R3 := R3()
 57 [-]: GETTABLE  R4 R3 K14    ; R4 := R3["goalTag"]
 58 [-]: GETGLOBAL R5 K15       ; R5 := 0xEC274B1A
 59 [-]: LOADK     R6 K16       ; R6 := "WaterFight"
 60 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 61 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: LOADK     R2 K17       ; R2 := "/Lotus/Language/Alerts/TacAlertWaterFight"
 64 [-]: JMP       124          ; PC := 124
 65 [-]: LOADK     R2 K18       ; R2 := "/Lotus/Language/G1Quests/KelaEventTitle"
 66 [-]: JMP       124          ; PC := 124
 67 [-]: GETUPVAL  R4 U5        ; R4 := U5
 68 [-]: CALL      R4 1 2       ; R4 := R4()
 69 [-]: TEST      R4 0         ; if not R4 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: RETURN    R0 1         ; return 
 72 [-]: JMP       124          ; PC := 124
 73 [-]: GETUPVAL  R4 U4        ; R4 := U4
 74 [-]: CALL      R4 1 2       ; R4 := R4()
 75 [-]: GETGLOBAL R5 K19       ; R5 := 0x400E7765
 76 [-]: MOVE      R6 R4        ; R6 := R4
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: TEST      R5 1         ; if R5 then PC := 124
 79 [-]: JMP       124          ; PC := 124
 80 [-]: GETTABLE  R5 R4 K20    ; R5 := R4["missionType"]
 81 [-]: GETGLOBAL R6 K4        ; R6 := Lotus_Game
 82 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["MT_LANDSCAPE"]
 83 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MOVE      R5 R0        ; R5 := R0
 86 [-]: MOVE      R5 R1        ; R5 := R1
 87 [-]: TEST      R5 0         ; if not R5 then PC := 105
 88 [-]: JMP       105          ; PC := 105
 89 [-]: GETTABLE  R6 R4 K22    ; R6 := R4["sortieId"]
 90 [-]: EQ        0 R6 K0      ; if R6 ~= "" then PC := 105
 91 [-]: JMP       105          ; PC := 105
 92 [-]: GETTABLE  R6 R4 K14    ; R6 := R4["goalTag"]
 93 [-]: GETGLOBAL R7 K23       ; R7 := EMPTY_SYMBOL
 94 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 105
 95 [-]: JMP       105          ; PC := 105
 96 [-]: GETTABLE  R6 R4 K24    ; R6 := R4["location"]
 97 [-]: GETUPVAL  R7 U6        ; R7 := U6
 98 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["PLAINS_NODE_TAG"]
 99 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: LOADK     R2 K26       ; R2 := "/Lotus/Language/Menu/ReturnToCetusSummary"
102 [-]: JMP       124          ; PC := 124
103 [-]: LOADK     R2 K27       ; R2 := "/Lotus/Language/Menu/ReturnToFortunaSummary"
104 [-]: JMP       124          ; PC := 124
105 [-]: TEST      R0 0         ; if not R0 then PC := 117
106 [-]: JMP       117          ; PC := 117
107 [-]: GETGLOBAL R6 K19       ; R6 := 0x400E7765
108 [-]: GETGLOBAL R7 K28       ; R7 := gGameRules
109 [-]: CALL      R6 2 2       ; R6 := R6(R7)
110 [-]: TEST      R6 1         ; if R6 then PC := 117
111 [-]: JMP       117          ; PC := 117
112 [-]: GETGLOBAL R6 K28       ; R6 := gGameRules
113 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6["0xB983BA95"]
114 [-]: CALL      R6 2 2       ; R6 := R6(R7)
115 [-]: TEST      R6 1         ; if R6 then PC := 124
116 [-]: JMP       124          ; PC := 124
117 [-]: GETUPVAL  R6 U7        ; R6 := U7
118 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["0xF81722A2"]
119 [-]: MOVE      R7 R1        ; R7 := R1
120 [-]: LOADK     R8 K31       ; R8 := "/Lotus/Language/Menu/Mission_Success_Summary"
121 [-]: LOADK     R9 K32       ; R9 := "/Lotus/Language/Menu/Mission_Failed"
122 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
123 [-]: MOVE      R2 R6        ; R2 := R6
124 [-]: GETGLOBAL R6 K33       ; R6 := mMovie
125 [-]: SELF      R6 R6 K34    ; R7 := R6; R6 := R6["0x17028E8F"]
126 [-]: LOADK     R8 K35       ; R8 := "Title.text"
127 [-]: MOVE      R9 R2        ; R9 := R2
128 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
129 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 5196
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := _G
  2 [-]: SETTABLE  R2 K1 K2     ; R2["EndOfMatch_didActuallySetupStuff"] := "0x1"
  3 [-]: GETGLOBAL R2 K0        ; R2 := _G
  4 [-]: TESTSET   R3 R0 0      ; if not R0 then PC := 7 else R3 := R0
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: SETTABLE  R2 K3 R3     ; R2["EndOfMatch_abortingAndWasDoingPvpChallenge"] := R3
  8 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 5201
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xA58BB96C"]
  6 [-]: CALL      R0 2 1       ; R0(R1)
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R2        ; R0 := R2
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R3        ; R0 := R3
 14 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 15 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xDA6F41DE"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 19 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x17CDFEEA"]
 20 [-]: MOVE      R2 R0        ; R2 := R0
 21 [-]: CALL      R0 3 1       ; R0(R1,R2)
 22 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 23 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xFC6EAAAA"]
 24 [-]: MOVE      R2 R1        ; R2 := R1
 25 [-]: CALL      R0 3 1       ; R0(R1,R2)
 26 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 27 [-]: GETUPVAL  R1 U4        ; R1 := U4
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 1         ; if R0 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: GETUPVAL  R0 U4        ; R0 := U4
 32 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x17CDFEEA"]
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: CALL      R0 3 1       ; R0(R1,R2)
 35 [-]: GETUPVAL  R0 U4        ; R0 := U4
 36 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xFC6EAAAA"]
 37 [-]: MOVE      R2 R1        ; R2 := R1
 38 [-]: CALL      R0 3 1       ; R0(R1,R2)
 39 [-]: LOADK     R0 K6        ; R0 := -1
 40 [-]: MOVE      R0 R5        ; R0 := R5
 41 [-]: GETGLOBAL R0 K7        ; R0 := _T
 42 [-]: GETUPVAL  R1 U6        ; R1 := U6
 43 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["ACTUAL_EOM"]
 44 [-]: SETTABLE  R0 K8 R1     ; R0["eomScreenMode"] := R1
 45 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 46 [-]: GETGLOBAL R1 K7        ; R1 := _T
 47 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["EnableUIInput"]
 48 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 49 [-]: TEST      R0 1         ; if R0 then PC := 56
 50 [-]: JMP       56           ; PC := 56
 51 [-]: GETGLOBAL R0 K7        ; R0 := _T
 52 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["0x8ED0D55D"]
 53 [-]: CALL      R0 1 1       ; R0()
 54 [-]: MOVE      R0 R1        ; R0 := R1
 55 [-]: MOVE      R0 R7        ; R0 := R7
 56 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 57 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x1C19D966"]
 58 [-]: LOADK     R2 K13       ; R2 := "Message"
 59 [-]: LOADK     R3 K14       ; R3 := "_alpha"
 60 [-]: LOADK     R4 K15       ; R4 := 0
 61 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 62 [-]: GETGLOBAL R0 K16       ; R0 := 0x329BDC44
 63 [-]: LOADK     R1 K17       ; R1 := "Lotus.Interface.Libs.DioramaLoader"
 64 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 65 [-]: GETTABLE  R1 R0 K18    ; R1 := R0["0xC042262A"]
 66 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
 67 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 68 [-]: MOVE      R1 R8        ; R1 := R8
 69 [-]: MOVE      R1 R0        ; R1 := R0
 70 [-]: MOVE      R1 R9        ; R1 := R9
 71 [-]: GETUPVAL  R1 U10       ; R1 := U10
 72 [-]: CALL      R1 1 1       ; R1()
 73 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 5234
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x8C7099E9"]
  8 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xF595D5E1"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 12 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xEE069D65"]
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R0 0 1       ; R0(R1,...)
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0xEA569929"]
 17 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 18 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
 19 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x1C19D966"]
 21 [-]: LOADK     R4 K7        ; R4 := "Tile"
 22 [-]: LOADK     R5 K8        ; R5 := "_width"
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 25 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 26 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x1C19D966"]
 27 [-]: LOADK     R4 K7        ; R4 := "Tile"
 28 [-]: LOADK     R5 K9        ; R5 := "_height"
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 31 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 5244
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 1       ; R2()
  3 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 5248
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.AnchorMgr"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["0x46FF1A3C"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R1 1 1       ; R1()
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x329BDC44
 11 [-]: LOADK     R2 K4        ; R2 := "Lotus.Interface.Libs.TimerMgr"
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["0xC2A7FAC0"]
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: MOVE      R2 R2        ; R2 := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 5257
; #Upvalues:       60
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x93B1256B
  2 [-]: LOADK     R1 K1        ; R1 := "EndOfMatch.lua::Initialize"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
  5 [-]: GETGLOBAL R1 K3        ; R1 := endOfMatchPvpMovie
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 48
  8 [-]: JMP       48           ; PC := 48
  9 [-]: GETGLOBAL R0 K4        ; R0 := mMovie
 10 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x5FF274BB"]
 11 [-]: GETGLOBAL R2 K3        ; R2 := endOfMatchPvpMovie
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 1         ; if R0 then PC := 48
 18 [-]: JMP       48           ; PC := 48
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x625791A8"]
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: CALL      R0 3 1       ; R0(R1,R2)
 23 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 24 [-]: GETGLOBAL R1 K7        ; R1 := gGameRules
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R0 K7        ; R0 := gGameRules
 29 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x8B598ED4"]
 30 [-]: GETGLOBAL R2 K9        ; R2 := gLotusBaseGameRulesType
 31 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETGLOBAL R0 K7        ; R0 := gGameRules
 35 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xB983BA95"]
 36 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 37 [-]: JMP       40           ; PC := 40
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: MOVE      R0 R1        ; R0 := R1
 40 [-]: GETUPVAL  R1 U0        ; R1 := U0
 41 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDA6F41DE"]
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: CALL      R1 3 1       ; R1(R2,R3)
 44 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 45 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x71E8736F"]
 46 [-]: MOVE      R3 R0        ; R3 := R0
 47 [-]: CALL      R1 3 1       ; R1(R2,R3)
 48 [-]: GETGLOBAL R1 K13       ; R1 := _G
 49 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["StalkerMode"]
 50 [-]: TEST      R1 0         ; if not R1 then PC := 84
 51 [-]: JMP       84           ; PC := 84
 52 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 53 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0x1C19D966"]
 54 [-]: LOADK     R3 K16       ; R3 := "_root"
 55 [-]: LOADK     R4 K17       ; R4 := "_alpha"
 56 [-]: LOADK     R5 K18       ; R5 := 0
 57 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 58 [-]: GETUPVAL  R1 U1        ; R1 := U1
 59 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["0x87D2274C"]
 60 [-]: CALL      R1 1 2       ; R1 := R1()
 61 [-]: TEST      R1 0         ; if not R1 then PC := 73
 62 [-]: JMP       73           ; PC := 73
 63 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 64 [-]: GETGLOBAL R2 K7        ; R2 := gGameRules
 65 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 66 [-]: TEST      R1 1         ; if R1 then PC := 79
 67 [-]: JMP       79           ; PC := 79
 68 [-]: GETGLOBAL R1 K7        ; R1 := gGameRules
 69 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xB983BA95"]
 70 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 71 [-]: TEST      R1 0         ; if not R1 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: MOVE      R1 R1        ; R1 := R1
 74 [-]: MOVE      R1 R2        ; R1 := R2
 75 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 76 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1["0xA58BB96C"]
 77 [-]: CALL      R1 2 1       ; R1(R2)
 78 [-]: JMP       83           ; PC := 83
 79 [-]: GETGLOBAL R1 K21       ; R1 := Engine
 80 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["0xC53FF352"]
 81 [-]: MOVE      R2 R1        ; R2 := R1
 82 [-]: CALL      R1 2 1       ; R1(R2)
 83 [-]: RETURN    R0 1         ; return 
 84 [-]: GETGLOBAL R1 K23       ; R1 := _T
 85 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["ForceHideEOM"]
 86 [-]: TEST      R1 0         ; if not R1 then PC := 100
 87 [-]: JMP       100          ; PC := 100
 88 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 89 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1["0x1C19D966"]
 90 [-]: LOADK     R3 K16       ; R3 := "_root"
 91 [-]: LOADK     R4 K17       ; R4 := "_alpha"
 92 [-]: LOADK     R5 K18       ; R5 := 0
 93 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 94 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 95 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1["0xC324B42D"]
 96 [-]: MOVE      R3 R0        ; R3 := R0
 97 [-]: CALL      R1 3 1       ; R1(R2,R3)
 98 [-]: MOVE      R1 R1        ; R1 := R1
 99 [-]: MOVE      R1 R3        ; R1 := R3
100 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
101 [-]: GETGLOBAL R2 K26       ; R2 := commonResourcesMovie
102 [-]: CALL      R1 2 2       ; R1 := R1(R2)
103 [-]: TEST      R1 1         ; if R1 then PC := 113
104 [-]: JMP       113          ; PC := 113
105 [-]: GETGLOBAL R1 K13       ; R1 := _G
106 [-]: GETTABLE  R1 R1 K27    ; R1 := R1["UIColorObject_White"]
107 [-]: EQ        0 R1 K28     ; if R1 ~= nil then PC := 113
108 [-]: JMP       113          ; PC := 113
109 [-]: GETGLOBAL R1 K29       ; R1 := gFlashMgr
110 [-]: SELF      R1 R1 K30    ; R2 := R1; R1 := R1["0x24FF386"]
111 [-]: GETGLOBAL R3 K26       ; R3 := commonResourcesMovie
112 [-]: CALL      R1 3 1       ; R1(R2,R3)
113 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
114 [-]: GETGLOBAL R2 K31       ; R2 := consumablesOverlayMovie
115 [-]: CALL      R1 2 2       ; R1 := R1(R2)
116 [-]: TEST      R1 1         ; if R1 then PC := 131
117 [-]: JMP       131          ; PC := 131
118 [-]: GETGLOBAL R1 K29       ; R1 := gFlashMgr
119 [-]: SELF      R1 R1 K32    ; R2 := R1; R1 := R1["0x616DD092"]
120 [-]: GETGLOBAL R3 K31       ; R3 := consumablesOverlayMovie
121 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
122 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
123 [-]: MOVE      R3 R1        ; R3 := R1
124 [-]: CALL      R2 2 2       ; R2 := R2(R3)
125 [-]: TEST      R2 1         ; if R2 then PC := 131
126 [-]: JMP       131          ; PC := 131
127 [-]: SELF      R2 R1 K33    ; R3 := R1; R2 := R1["0x458F27A9"]
128 [-]: LOADK     R4 K34       ; R4 := "Close"
129 [-]: LOADK     R5 K35       ; R5 := ""
130 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
131 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
132 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2["0xD692CA7B"]
133 [-]: GETGLOBAL R4 K23       ; R4 := _T
134 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["RadialSolarMapOpen"]
135 [-]: EQ        1 R4 K38     ; if R4 == "0x1" then PC := 138
136 [-]: JMP       138          ; PC := 138
137 [-]: MOVE      R4 R0        ; R4 := R0
138 [-]: MOVE      R4 R1        ; R4 := R1
139 [-]: CALL      R2 3 1       ; R2(R3,R4)
140 [-]: GETGLOBAL R2 K13       ; R2 := _G
141 [-]: GETTABLE  R2 R2 K39    ; R2 := R2["EndOfMatch_didActuallySetupStuff"]
142 [-]: TEST      R2 0         ; if not R2 then PC := 149
143 [-]: JMP       149          ; PC := 149
144 [-]: GETGLOBAL R2 K13       ; R2 := _G
145 [-]: SETTABLE  R2 K39 K28   ; R2["EndOfMatch_didActuallySetupStuff"] := nil
146 [-]: GETGLOBAL R2 K13       ; R2 := _G
147 [-]: GETTABLE  R2 R2 K40    ; R2 := R2["EndOfMatch_abortingAndWasDoingPvpChallenge"]
148 [-]: MOVE      R2 R4        ; R2 := R4
149 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
150 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
151 [-]: LOADK     R4 K41       ; R4 := "RepPanel.RepName5"
152 [-]: LOADK     R5 K42       ; R5 := "_visible"
153 [-]: MOVE      R6 R0        ; R6 := R0
154 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
155 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
156 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
157 [-]: LOADK     R4 K43       ; R4 := "RepPanel.RepIcon5"
158 [-]: LOADK     R5 K42       ; R5 := "_visible"
159 [-]: MOVE      R6 R0        ; R6 := R0
160 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
161 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
162 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
163 [-]: LOADK     R4 K44       ; R4 := "RepPanel.RepValue5"
164 [-]: LOADK     R5 K42       ; R5 := "_visible"
165 [-]: MOVE      R6 R0        ; R6 := R0
166 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
167 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
168 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
169 [-]: LOADK     R4 K45       ; R4 := "RepPanel.RepTitle5"
170 [-]: LOADK     R5 K42       ; R5 := "_visible"
171 [-]: MOVE      R6 R0        ; R6 := R0
172 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
173 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
174 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
175 [-]: LOADK     R4 K46       ; R4 := "RepPanel.RepBar5"
176 [-]: LOADK     R5 K42       ; R5 := "_visible"
177 [-]: MOVE      R6 R0        ; R6 := R0
178 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
179 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
180 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
181 [-]: LOADK     R4 K47       ; R4 := "RepPanel.RepBG5"
182 [-]: LOADK     R5 K42       ; R5 := "_visible"
183 [-]: MOVE      R6 R0        ; R6 := R0
184 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
185 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
186 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x1C19D966"]
187 [-]: LOADK     R4 K48       ; R4 := "RepPanel.RepBannerIcon5"
188 [-]: LOADK     R5 K42       ; R5 := "_visible"
189 [-]: MOVE      R6 R0        ; R6 := R0
190 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
191 [-]: GETUPVAL  R2 U5        ; R2 := U5
192 [-]: CALL      R2 1 1       ; R2()
193 [-]: GETGLOBAL R2 K23       ; R2 := _T
194 [-]: SETTABLE  R2 K49 K38   ; R2["EOMOpen"] := "0x1"
195 [-]: GETUPVAL  R2 U1        ; R2 := U1
196 [-]: GETTABLE  R2 R2 K50    ; R2 := R2["0xB4BBB185"]
197 [-]: MOVE      R3 R1        ; R3 := R1
198 [-]: CALL      R2 2 1       ; R2(R3)
199 [-]: LOADK     R2 K51       ; R2 := 1
200 [-]: MOVE      R2 R6        ; R2 := R6
201 [-]: GETUPVAL  R2 U7        ; R2 := U7
202 [-]: CALL      R2 1 2       ; R2 := R2()
203 [-]: GETTABLE  R3 R2 K52    ; R3 := R2["archwingRequired"]
204 [-]: TEST      R3 0         ; if not R3 then PC := 208
205 [-]: JMP       208          ; PC := 208
206 [-]: GETTABLE  R3 R2 K53    ; R3 := R2["isSharkwingMission"]
207 [-]: MOVE      R3 R3        ; R3 := R3
208 [-]: MOVE      R3 R8        ; R3 := R8
209 [-]: GETUPVAL  R3 U9        ; R3 := U9
210 [-]: GETTABLE  R4 R2 K55    ; R4 := R2["missionType"]
211 [-]: GETGLOBAL R5 K56       ; R5 := Lotus_Game
212 [-]: GETTABLE  R5 R5 K57    ; R5 := R5["MT_PVP"]
213 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 216
214 [-]: JMP       216          ; PC := 216
215 [-]: MOVE      R4 R0        ; R4 := R0
216 [-]: MOVE      R4 R1        ; R4 := R1
217 [-]: SETTABLE  R3 K54 R4    ; R3["isPvp"] := R4
218 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
219 [-]: GETGLOBAL R4 K58       ; R4 := gGameData
220 [-]: CALL      R3 2 2       ; R3 := R3(R4)
221 [-]: TEST      R3 0         ; if not R3 then PC := 227
222 [-]: JMP       227          ; PC := 227
223 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
224 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0xA58BB96C"]
225 [-]: CALL      R3 2 1       ; R3(R4)
226 [-]: RETURN    R0 1         ; return 
227 [-]: GETGLOBAL R3 K58       ; R3 := gGameData
228 [-]: MOVE      R3 R10       ; R3 := R10
229 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
230 [-]: GETGLOBAL R4 K7        ; R4 := gGameRules
231 [-]: CALL      R3 2 2       ; R3 := R3(R4)
232 [-]: TEST      R3 1         ; if R3 then PC := 238
233 [-]: JMP       238          ; PC := 238
234 [-]: GETGLOBAL R3 K7        ; R3 := gGameRules
235 [-]: SELF      R3 R3 K59    ; R4 := R3; R3 := R3["0x84D07DF8"]
236 [-]: CALL      R3 2 2       ; R3 := R3(R4)
237 [-]: MOVE      R3 R11       ; R3 := R11
238 [-]: GETGLOBAL R3 K23       ; R3 := _T
239 [-]: GETUPVAL  R4 U12       ; R4 := U12
240 [-]: GETTABLE  R4 R4 K61    ; R4 := R4["ACTUAL_EOM"]
241 [-]: SETTABLE  R3 K60 R4    ; R3["eomScreenMode"] := R4
242 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
243 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
244 [-]: SELF      R4 R4 K62    ; R5 := R4; R4 := R4["0x4C52612B"]
245 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
246 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
247 [-]: TEST      R3 1         ; if R3 then PC := 263
248 [-]: JMP       263          ; PC := 263
249 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
250 [-]: SELF      R3 R3 K62    ; R4 := R3; R3 := R3["0x4C52612B"]
251 [-]: CALL      R3 2 2       ; R3 := R3(R4)
252 [-]: GETGLOBAL R4 K29       ; R4 := gFlashMgr
253 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0x616DD092"]
254 [-]: GETGLOBAL R6 K63       ; R6 := topMenuMovie
255 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
256 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 263
257 [-]: JMP       263          ; PC := 263
258 [-]: GETGLOBAL R3 K23       ; R3 := _T
259 [-]: GETUPVAL  R4 U12       ; R4 := U12
260 [-]: GETTABLE  R4 R4 K64    ; R4 := R4["DETAILED_PREVIEW"]
261 [-]: SETTABLE  R3 K60 R4    ; R3["eomScreenMode"] := R4
262 [-]: JMP       310          ; PC := 310
263 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
264 [-]: GETGLOBAL R4 K7        ; R4 := gGameRules
265 [-]: CALL      R3 2 2       ; R3 := R3(R4)
266 [-]: TEST      R3 1         ; if R3 then PC := 310
267 [-]: JMP       310          ; PC := 310
268 [-]: MOVE      R3 R0        ; R3 := R0
269 [-]: GETUPVAL  R4 U9        ; R4 := U9
270 [-]: GETTABLE  R4 R4 K54    ; R4 := R4["isPvp"]
271 [-]: TEST      R4 0         ; if not R4 then PC := 293
272 [-]: JMP       293          ; PC := 293
273 [-]: GETGLOBAL R4 K7        ; R4 := gGameRules
274 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x8B598ED4"]
275 [-]: GETGLOBAL R6 K65       ; R6 := gLotusPvpGameRulesType
276 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
277 [-]: TEST      R4 0         ; if not R4 then PC := 293
278 [-]: JMP       293          ; PC := 293
279 [-]: GETGLOBAL R4 K7        ; R4 := gGameRules
280 [-]: SELF      R4 R4 K66    ; R5 := R4; R4 := R4["0x5DFBCA3F"]
281 [-]: CALL      R4 2 2       ; R4 := R4(R5)
282 [-]: GETGLOBAL R5 K56       ; R5 := Lotus_Game
283 [-]: GETTABLE  R5 R5 K67    ; R5 := R5["PVP_MATCH_ENDED"]
284 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 290
285 [-]: JMP       290          ; PC := 290
286 [-]: GETGLOBAL R5 K56       ; R5 := Lotus_Game
287 [-]: GETTABLE  R5 R5 K68    ; R5 := R5["PVP_ROUND_ENDED"]
288 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 291
289 [-]: JMP       291          ; PC := 291
290 [-]: MOVE      R3 R0        ; R3 := R0
291 [-]: MOVE      R3 R1        ; R3 := R1
292 [-]: JMP       302          ; PC := 302
293 [-]: GETUPVAL  R5 U1        ; R5 := U1
294 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["0x87D2274C"]
295 [-]: CALL      R5 1 2       ; R5 := R5()
296 [-]: TESTSET   R3 R5 0      ; if not R5 then PC := 302 else R3 := R5
297 [-]: JMP       302          ; PC := 302
298 [-]: GETGLOBAL R5 K7        ; R5 := gGameRules
299 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0xB983BA95"]
300 [-]: CALL      R5 2 2       ; R5 := R5(R6)
301 [-]: MOVE      R3 R5        ; R3 := R5
302 [-]: TEST      R3 0         ; if not R3 then PC := 310
303 [-]: JMP       310          ; PC := 310
304 [-]: GETGLOBAL R5 K23       ; R5 := _T
305 [-]: GETUPVAL  R6 U12       ; R6 := U12
306 [-]: GETTABLE  R6 R6 K69    ; R6 := R6["QUICK_PREVIEW"]
307 [-]: SETTABLE  R5 K60 R6    ; R5["eomScreenMode"] := R6
308 [-]: GETGLOBAL R5 K23       ; R5 := _T
309 [-]: SETTABLE  R5 K70 K71   ; R5["eomInputIgnored"] := "0x0"
310 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
311 [-]: MOVE      R6 R2        ; R6 := R2
312 [-]: CALL      R5 2 2       ; R5 := R5(R6)
313 [-]: TEST      R5 1         ; if R5 then PC := 332
314 [-]: JMP       332          ; PC := 332
315 [-]: GETTABLE  R5 R2 K55    ; R5 := R2["missionType"]
316 [-]: GETGLOBAL R6 K56       ; R6 := Lotus_Game
317 [-]: GETTABLE  R6 R6 K72    ; R6 := R6["MT_RAID"]
318 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 330
319 [-]: JMP       330          ; PC := 330
320 [-]: GETTABLE  R5 R2 K55    ; R5 := R2["missionType"]
321 [-]: GETGLOBAL R6 K56       ; R6 := Lotus_Game
322 [-]: GETTABLE  R6 R6 K73    ; R6 := R6["MT_MASTERY"]
323 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 330
324 [-]: JMP       330          ; PC := 330
325 [-]: GETTABLE  R5 R2 K55    ; R5 := R2["missionType"]
326 [-]: GETGLOBAL R6 K56       ; R6 := Lotus_Game
327 [-]: GETTABLE  R6 R6 K74    ; R6 := R6["MT_RAILJACK"]
328 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 332
329 [-]: JMP       332          ; PC := 332
330 [-]: MOVE      R5 R0        ; R5 := R0
331 [-]: MOVE      R5 R13       ; R5 := R13
332 [-]: GETUPVAL  R5 U13       ; R5 := U13
333 [-]: TEST      R5 0         ; if not R5 then PC := 366
334 [-]: JMP       366          ; PC := 366
335 [-]: GETGLOBAL R5 K23       ; R5 := _T
336 [-]: GETTABLE  R5 R5 K60    ; R5 := R5["eomScreenMode"]
337 [-]: GETUPVAL  R6 U12       ; R6 := U12
338 [-]: GETTABLE  R6 R6 K61    ; R6 := R6["ACTUAL_EOM"]
339 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 366
340 [-]: JMP       366          ; PC := 366
341 [-]: GETUPVAL  R5 U9        ; R5 := U9
342 [-]: GETTABLE  R5 R5 K54    ; R5 := R5["isPvp"]
343 [-]: TEST      R5 1         ; if R5 then PC := 366
344 [-]: JMP       366          ; PC := 366
345 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
346 [-]: SELF      R5 R5 K75    ; R6 := R5; R5 := R5["0x17CDFEEA"]
347 [-]: MOVE      R7 R1        ; R7 := R1
348 [-]: CALL      R5 3 1       ; R5(R6,R7)
349 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
350 [-]: SELF      R5 R5 K76    ; R6 := R5; R5 := R5["0xFC6EAAAA"]
351 [-]: MOVE      R7 R0        ; R7 := R0
352 [-]: CALL      R5 3 1       ; R5(R6,R7)
353 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
354 [-]: GETUPVAL  R6 U0        ; R6 := U0
355 [-]: CALL      R5 2 2       ; R5 := R5(R6)
356 [-]: TEST      R5 1         ; if R5 then PC := 366
357 [-]: JMP       366          ; PC := 366
358 [-]: GETUPVAL  R5 U0        ; R5 := U0
359 [-]: SELF      R5 R5 K75    ; R6 := R5; R5 := R5["0x17CDFEEA"]
360 [-]: MOVE      R7 R1        ; R7 := R1
361 [-]: CALL      R5 3 1       ; R5(R6,R7)
362 [-]: GETUPVAL  R5 U0        ; R5 := U0
363 [-]: SELF      R5 R5 K76    ; R6 := R5; R5 := R5["0xFC6EAAAA"]
364 [-]: MOVE      R7 R0        ; R7 := R0
365 [-]: CALL      R5 3 1       ; R5(R6,R7)
366 [-]: GETGLOBAL R5 K23       ; R5 := _T
367 [-]: GETTABLE  R5 R5 K60    ; R5 := R5["eomScreenMode"]
368 [-]: GETUPVAL  R6 U12       ; R6 := U12
369 [-]: GETTABLE  R6 R6 K61    ; R6 := R6["ACTUAL_EOM"]
370 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 373
371 [-]: JMP       373          ; PC := 373
372 [-]: MOVE      R5 R0        ; R5 := R0
373 [-]: MOVE      R5 R1        ; R5 := R1
374 [-]: GETUPVAL  R6 U9        ; R6 := U9
375 [-]: GETTABLE  R6 R6 K54    ; R6 := R6["isPvp"]
376 [-]: TEST      R6 0         ; if not R6 then PC := 406
377 [-]: JMP       406          ; PC := 406
378 [-]: GETUPVAL  R6 U14       ; R6 := U14
379 [-]: CALL      R6 1 1       ; R6()
380 [-]: LOADK     R6 K77       ; R6 := 25
381 [-]: MOVE      R6 R15       ; R6 := R15
382 [-]: GETGLOBAL R6 K23       ; R6 := _T
383 [-]: GETTABLE  R6 R6 K60    ; R6 := R6["eomScreenMode"]
384 [-]: GETUPVAL  R7 U12       ; R7 := U12
385 [-]: GETTABLE  R7 R7 K61    ; R7 := R7["ACTUAL_EOM"]
386 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 411
387 [-]: JMP       411          ; PC := 411
388 [-]: GETGLOBAL R6 K23       ; R6 := _T
389 [-]: GETTABLE  R6 R6 K78    ; R6 := R6["TopMenuOpen"]
390 [-]: TEST      R6 0         ; if not R6 then PC := 411
391 [-]: JMP       411          ; PC := 411
392 [-]: GETGLOBAL R6 K29       ; R6 := gFlashMgr
393 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6["0x616DD092"]
394 [-]: GETGLOBAL R8 K63       ; R8 := topMenuMovie
395 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
396 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
397 [-]: MOVE      R8 R6        ; R8 := R6
398 [-]: CALL      R7 2 2       ; R7 := R7(R8)
399 [-]: TEST      R7 1         ; if R7 then PC := 411
400 [-]: JMP       411          ; PC := 411
401 [-]: SELF      R7 R6 K33    ; R8 := R6; R7 := R6["0x458F27A9"]
402 [-]: LOADK     R9 K79       ; R9 := "ForceClose"
403 [-]: LOADK     R10 K35      ; R10 := ""
404 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
405 [-]: JMP       411          ; PC := 411
406 [-]: GETUPVAL  R7 U11       ; R7 := U11
407 [-]: EQ        1 R7 K35     ; if R7 == "" then PC := 411
408 [-]: JMP       411          ; PC := 411
409 [-]: LOADK     R7 K80       ; R7 := 14
410 [-]: MOVE      R7 R15       ; R7 := R15
411 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
412 [-]: SELF      R7 R7 K81    ; R8 := R7; R7 := R7["0x163B749C"]
413 [-]: MOVE      R9 R0        ; R9 := R0
414 [-]: CALL      R7 3 1       ; R7(R8,R9)
415 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
416 [-]: SELF      R7 R7 K82    ; R8 := R7; R7 := R7["0x7ED97A84"]
417 [-]: GETGLOBAL R9 K13       ; R9 := _G
418 [-]: GETTABLE  R9 R9 K83    ; R9 := R9["UIMaterial_Plain"]
419 [-]: CALL      R7 3 1       ; R7(R8,R9)
420 [-]: GETUPVAL  R7 U1        ; R7 := U1
421 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["0x87D2274C"]
422 [-]: CALL      R7 1 2       ; R7 := R7()
423 [-]: TEST      R7 1         ; if R7 then PC := 431
424 [-]: JMP       431          ; PC := 431
425 [-]: GETUPVAL  R8 U16       ; R8 := U16
426 [-]: GETTABLE  R8 R8 K84    ; R8 := R8["0x25992394"]
427 [-]: GETGLOBAL R9 K13       ; R9 := _G
428 [-]: GETTABLE  R9 R9 K85    ; R9 := R9["UISound_GridOpen"]
429 [-]: CALL      R8 2 1       ; R8(R9)
430 [-]: JMP       435          ; PC := 435
431 [-]: GETGLOBAL R8 K4        ; R8 := mMovie
432 [-]: SELF      R8 R8 K86    ; R9 := R8; R8 := R8["0x6B4C9862"]
433 [-]: MOVE      R10 R1       ; R10 := R1
434 [-]: CALL      R8 3 1       ; R8(R9,R10)
435 [-]: TEST      R7 0         ; if not R7 then PC := 466
436 [-]: JMP       466          ; PC := 466
437 [-]: GETGLOBAL R8 K87       ; R8 := gRegion
438 [-]: SELF      R8 R8 K88    ; R9 := R8; R8 := R8["0xA559F558"]
439 [-]: CALL      R8 2 2       ; R8 := R8(R9)
440 [-]: TEST      R8 0         ; if not R8 then PC := 466
441 [-]: JMP       466          ; PC := 466
442 [-]: TEST      R5 0         ; if not R5 then PC := 466
443 [-]: JMP       466          ; PC := 466
444 [-]: GETUPVAL  R8 U17       ; R8 := U17
445 [-]: CALL      R8 1 2       ; R8 := R8()
446 [-]: TEST      R8 0         ; if not R8 then PC := 452
447 [-]: JMP       452          ; PC := 452
448 [-]: GETGLOBAL R8 K23       ; R8 := _T
449 [-]: GETTABLE  R8 R8 K89    ; R8 := R8["EndlessExtermination_ForceEomForAll"]
450 [-]: TEST      R8 1         ; if R8 then PC := 466
451 [-]: JMP       466          ; PC := 466
452 [-]: GETUPVAL  R8 U18       ; R8 := U18
453 [-]: CALL      R8 1 2       ; R8 := R8()
454 [-]: TEST      R8 1         ; if R8 then PC := 466
455 [-]: JMP       466          ; PC := 466
456 [-]: GETGLOBAL R8 K87       ; R8 := gRegion
457 [-]: SELF      R8 R8 K90    ; R9 := R8; R8 := R8["0xD1CEF990"]
458 [-]: CALL      R8 2 2       ; R8 := R8(R9)
459 [-]: SELF      R9 R8 K91    ; R10 := R8; R9 := R8["0x20092973"]
460 [-]: CALL      R9 2 2       ; R9 := R9(R10)
461 [-]: SELF      R9 R9 K92    ; R10 := R9; R9 := R9["0xC5E91BA6"]
462 [-]: MOVE      R11 R0       ; R11 := R0
463 [-]: CALL      R9 3 1       ; R9(R10,R11)
464 [-]: SELF      R9 R8 K93    ; R10 := R8; R9 := R8["0xF9D1445B"]
465 [-]: CALL      R9 2 1       ; R9(R10)
466 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
467 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
468 [-]: LOADK     R11 K94      ; R11 := "Title"
469 [-]: LOADK     R12 K17      ; R12 := "_alpha"
470 [-]: LOADK     R13 K18      ; R13 := 0
471 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
472 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
473 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
474 [-]: LOADK     R11 K95      ; R11 := "Message.Message"
475 [-]: LOADK     R12 K96      ; R12 := "text"
476 [-]: LOADK     R13 K35      ; R13 := ""
477 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
478 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
479 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
480 [-]: LOADK     R11 K97      ; R11 := "MainMenu.Label"
481 [-]: LOADK     R12 K96      ; R12 := "text"
482 [-]: LOADK     R13 K98      ; R13 := "MAIN MENU"
483 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
484 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
485 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
486 [-]: LOADK     R11 K99      ; R11 := "MainMenu"
487 [-]: LOADK     R12 K100     ; R12 := "callback"
488 [-]: LOADK     R13 K99      ; R13 := "MainMenu"
489 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
490 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
491 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
492 [-]: LOADK     R11 K99      ; R11 := "MainMenu"
493 [-]: LOADK     R12 K42      ; R12 := "_visible"
494 [-]: MOVE      R13 R0       ; R13 := R0
495 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
496 [-]: GETGLOBAL R9 K4        ; R9 := mMovie
497 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0x1C19D966"]
498 [-]: LOADK     R11 K101     ; R11 := "ScrollBar1"
499 [-]: LOADK     R12 K42      ; R12 := "_visible"
500 [-]: MOVE      R13 R0       ; R13 := R0
501 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
502 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
503 [-]: GETGLOBAL R10 K7       ; R10 := gGameRules
504 [-]: CALL      R9 2 2       ; R9 := R9(R10)
505 [-]: TEST      R9 1         ; if R9 then PC := 531
506 [-]: JMP       531          ; PC := 531
507 [-]: GETGLOBAL R9 K7        ; R9 := gGameRules
508 [-]: SELF      R9 R9 K102   ; R10 := R9; R9 := R9["0x8709CE86"]
509 [-]: CALL      R9 2 2       ; R9 := R9(R10)
510 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
511 [-]: MOVE      R11 R9       ; R11 := R9
512 [-]: CALL      R10 2 2      ; R10 := R10(R11)
513 [-]: TEST      R10 1        ; if R10 then PC := 531
514 [-]: JMP       531          ; PC := 531
515 [-]: TEST      R5 0         ; if not R5 then PC := 531
516 [-]: JMP       531          ; PC := 531
517 [-]: TEST      R7 0         ; if not R7 then PC := 531
518 [-]: JMP       531          ; PC := 531
519 [-]: GETUPVAL  R10 U18      ; R10 := U18
520 [-]: CALL      R10 1 2      ; R10 := R10()
521 [-]: TEST      R10 1        ; if R10 then PC := 526
522 [-]: JMP       526          ; PC := 526
523 [-]: SELF      R10 R9 K6    ; R11 := R9; R10 := R9["0x625791A8"]
524 [-]: MOVE      R12 R0       ; R12 := R0
525 [-]: CALL      R10 3 1      ; R10(R11,R12)
526 [-]: GETGLOBAL R10 K7       ; R10 := gGameRules
527 [-]: SELF      R10 R10 K103 ; R11 := R10; R10 := R10["0x72B63B13"]
528 [-]: CALL      R10 2 1      ; R10(R11)
529 [-]: GETGLOBAL R10 K23      ; R10 := _T
530 [-]: SETTABLE  R10 K104 K38 ; R10["MissionEnded"] := "0x1"
531 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
532 [-]: GETUPVAL  R11 U19      ; R11 := U19
533 [-]: CALL      R10 2 2      ; R10 := R10(R11)
534 [-]: TEST      R10 0        ; if not R10 then PC := 575
535 [-]: JMP       575          ; PC := 575
536 [-]: GETUPVAL  R10 U9       ; R10 := U9
537 [-]: GETTABLE  R10 R10 K54  ; R10 := R10["isPvp"]
538 [-]: TEST      R10 0        ; if not R10 then PC := 569
539 [-]: JMP       569          ; PC := 569
540 [-]: GETUPVAL  R10 U9       ; R10 := U9
541 [-]: GETTABLE  R10 R10 K105 ; R10 := R10["pvpType"]
542 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
543 [-]: GETTABLE  R11 R11 K106 ; R11 := R11["PVPMODE_SPEEDBALL"]
544 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 562
545 [-]: JMP       562          ; PC := 562
546 [-]: TEST      R5 0         ; if not R5 then PC := 555
547 [-]: JMP       555          ; PC := 555
548 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
549 [-]: SELF      R10 R10 K107 ; R11 := R10; R10 := R10["0x5DB0BD4"]
550 [-]: LOADK     R12 K108     ; R12 := "/Lotus/Language/Menu/NextRoundTime"
551 [-]: MOVE      R13 R0       ; R13 := R0
552 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
553 [-]: MOVE      R10 R19      ; R10 := R19
554 [-]: JMP       575          ; PC := 575
555 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
556 [-]: SELF      R10 R10 K107 ; R11 := R10; R10 := R10["0x5DB0BD4"]
557 [-]: LOADK     R12 K109     ; R12 := "/Lotus/Language/Menu/NextHalfTime"
558 [-]: MOVE      R13 R0       ; R13 := R0
559 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
560 [-]: MOVE      R10 R19      ; R10 := R19
561 [-]: JMP       575          ; PC := 575
562 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
563 [-]: SELF      R10 R10 K107 ; R11 := R10; R10 := R10["0x5DB0BD4"]
564 [-]: LOADK     R12 K108     ; R12 := "/Lotus/Language/Menu/NextRoundTime"
565 [-]: MOVE      R13 R0       ; R13 := R0
566 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
567 [-]: MOVE      R10 R19      ; R10 := R19
568 [-]: JMP       575          ; PC := 575
569 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
570 [-]: SELF      R10 R10 K107 ; R11 := R10; R10 := R10["0x5DB0BD4"]
571 [-]: LOADK     R12 K110     ; R12 := "/Lotus/Language/Menu/EndOfMission_ReturnToMainMenu"
572 [-]: MOVE      R13 R0       ; R13 := R0
573 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
574 [-]: MOVE      R10 R19      ; R10 := R19
575 [-]: GETUPVAL  R10 U20      ; R10 := U20
576 [-]: CALL      R10 1 1      ; R10()
577 [-]: TEST      R5 0         ; if not R5 then PC := 696
578 [-]: JMP       696          ; PC := 696
579 [-]: GETUPVAL  R10 U21      ; R10 := U21
580 [-]: CALL      R10 1 2      ; R10 := R10()
581 [-]: TEST      R10 1        ; if R10 then PC := 647
582 [-]: JMP       647          ; PC := 647
583 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
584 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
585 [-]: LOADK     R12 K111     ; R12 := "AffinityPanel"
586 [-]: LOADK     R13 K112     ; R13 := "_y"
587 [-]: GETGLOBAL R14 K113     ; R14 := 0xF595ADDE
588 [-]: GETUPVAL  R15 U22      ; R15 := U22
589 [-]: GETTABLE  R15 R15 K114 ; R15 := R15["Affinity"]
590 [-]: CALL      R14 2 2      ; R14 := R14(R15)
591 [-]: SUB       R14 R14 K115 ; R14 := R14 - 300
592 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
593 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
594 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
595 [-]: LOADK     R12 K116     ; R12 := "RewardsPanel"
596 [-]: LOADK     R13 K112     ; R13 := "_y"
597 [-]: GETGLOBAL R14 K113     ; R14 := 0xF595ADDE
598 [-]: GETUPVAL  R15 U22      ; R15 := U22
599 [-]: GETTABLE  R15 R15 K117 ; R15 := R15["Rewards"]
600 [-]: CALL      R14 2 2      ; R14 := R14(R15)
601 [-]: ADD       R14 R14 K115 ; R14 := R14 + 300
602 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
603 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
604 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
605 [-]: LOADK     R12 K118     ; R12 := "ModsPanel"
606 [-]: LOADK     R13 K112     ; R13 := "_y"
607 [-]: GETGLOBAL R14 K113     ; R14 := 0xF595ADDE
608 [-]: GETUPVAL  R15 U22      ; R15 := U22
609 [-]: GETTABLE  R15 R15 K119 ; R15 := R15["Mods"]
610 [-]: CALL      R14 2 2      ; R14 := R14(R15)
611 [-]: ADD       R14 R14 K115 ; R14 := R14 + 300
612 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
613 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
614 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
615 [-]: LOADK     R12 K120     ; R12 := "StatsPanel"
616 [-]: LOADK     R13 K112     ; R13 := "_y"
617 [-]: GETGLOBAL R14 K113     ; R14 := 0xF595ADDE
618 [-]: GETUPVAL  R15 U22      ; R15 := U22
619 [-]: GETTABLE  R15 R15 K121 ; R15 := R15["Stats"]
620 [-]: CALL      R14 2 2      ; R14 := R14(R15)
621 [-]: ADD       R14 K115 R14 ; R14 := 300 + R14
622 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
623 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
624 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
625 [-]: LOADK     R12 K111     ; R12 := "AffinityPanel"
626 [-]: LOADK     R13 K17      ; R13 := "_alpha"
627 [-]: LOADK     R14 K18      ; R14 := 0
628 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
629 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
630 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
631 [-]: LOADK     R12 K116     ; R12 := "RewardsPanel"
632 [-]: LOADK     R13 K17      ; R13 := "_alpha"
633 [-]: LOADK     R14 K18      ; R14 := 0
634 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
635 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
636 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
637 [-]: LOADK     R12 K118     ; R12 := "ModsPanel"
638 [-]: LOADK     R13 K17      ; R13 := "_alpha"
639 [-]: LOADK     R14 K18      ; R14 := 0
640 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
641 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
642 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
643 [-]: LOADK     R12 K120     ; R12 := "StatsPanel"
644 [-]: LOADK     R13 K17      ; R13 := "_alpha"
645 [-]: LOADK     R14 K18      ; R14 := 0
646 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
647 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
648 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
649 [-]: LOADK     R12 K122     ; R12 := "Message"
650 [-]: LOADK     R13 K17      ; R13 := "_alpha"
651 [-]: LOADK     R14 K18      ; R14 := 0
652 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
653 [-]: GETGLOBAL R10 K4       ; R10 := mMovie
654 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x1C19D966"]
655 [-]: LOADK     R12 K94      ; R12 := "Title"
656 [-]: LOADK     R13 K17      ; R13 := "_alpha"
657 [-]: LOADK     R14 K18      ; R14 := 0
658 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
659 [-]: GETUPVAL  R10 U9       ; R10 := U9
660 [-]: GETTABLE  R10 R10 K105 ; R10 := R10["pvpType"]
661 [-]: GETGLOBAL R11 K56      ; R11 := Lotus_Game
662 [-]: GETTABLE  R11 R11 K106 ; R11 := R11["PVPMODE_SPEEDBALL"]
663 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 666
664 [-]: JMP       666          ; PC := 666
665 [-]: MOVE      R10 R0       ; R10 := R0
666 [-]: MOVE      R10 R1       ; R10 := R1
667 [-]: GETGLOBAL R11 K4       ; R11 := mMovie
668 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x1C19D966"]
669 [-]: LOADK     R13 K123     ; R13 := "Tile"
670 [-]: LOADK     R14 K17      ; R14 := "_alpha"
671 [-]: GETUPVAL  R15 U16      ; R15 := U16
672 [-]: GETTABLE  R15 R15 K124 ; R15 := R15["0xF81722A2"]
673 [-]: MOVE      R16 R10      ; R16 := R10
674 [-]: LOADK     R17 K125     ; R17 := 100
675 [-]: LOADK     R18 K126     ; R18 := 250
676 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
677 [-]: CALL      R11 0 1      ; R11(R12,...)
678 [-]: GETGLOBAL R11 K4       ; R11 := mMovie
679 [-]: SELF      R11 R11 K127 ; R12 := R11; R11 := R11["0x26581636"]
680 [-]: LOADK     R13 K123     ; R13 := "Tile"
681 [-]: GETGLOBAL R14 K128     ; R14 := tileTexture
682 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
683 [-]: GETGLOBAL R11 K4       ; R11 := mMovie
684 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x1C19D966"]
685 [-]: LOADK     R13 K129     ; R13 := "RepPanelPVP"
686 [-]: LOADK     R14 K42      ; R14 := "_visible"
687 [-]: MOVE      R15 R0       ; R15 := R0
688 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
689 [-]: GETGLOBAL R11 K4       ; R11 := mMovie
690 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x1C19D966"]
691 [-]: LOADK     R13 K130     ; R13 := "RepPanel"
692 [-]: LOADK     R14 K42      ; R14 := "_visible"
693 [-]: MOVE      R15 R0       ; R15 := R0
694 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
695 [-]: JMP       721          ; PC := 721
696 [-]: GETUPVAL  R11 U9       ; R11 := U9
697 [-]: GETTABLE  R11 R11 K105 ; R11 := R11["pvpType"]
698 [-]: GETGLOBAL R12 K56      ; R12 := Lotus_Game
699 [-]: GETTABLE  R12 R12 K106 ; R12 := R12["PVPMODE_SPEEDBALL"]
700 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 703
701 [-]: JMP       703          ; PC := 703
702 [-]: MOVE      R11 R0       ; R11 := R0
703 [-]: MOVE      R11 R1       ; R11 := R1
704 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
705 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12["0x1C19D966"]
706 [-]: LOADK     R14 K123     ; R14 := "Tile"
707 [-]: LOADK     R15 K17      ; R15 := "_alpha"
708 [-]: GETUPVAL  R16 U16      ; R16 := U16
709 [-]: GETTABLE  R16 R16 K124 ; R16 := R16["0xF81722A2"]
710 [-]: MOVE      R17 R11      ; R17 := R11
711 [-]: LOADK     R18 K125     ; R18 := 100
712 [-]: LOADK     R19 K126     ; R19 := 250
713 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
714 [-]: CALL      R12 0 1      ; R12(R13,...)
715 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
716 [-]: SELF      R12 R12 K131 ; R13 := R12; R12 := R12["0x4443A5E7"]
717 [-]: LOADK     R14 K123     ; R14 := "Tile"
718 [-]: GETGLOBAL R15 K128     ; R15 := tileTexture
719 [-]: GETGLOBAL R16 K132     ; R16 := tileMaterial
720 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
721 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
722 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
723 [-]: LOADK     R14 K134     ; R14 := "RewardsPanel.PanelBG"
724 [-]: GETGLOBAL R15 K13      ; R15 := _G
725 [-]: GETTABLE  R15 R15 K135 ; R15 := R15["UIMaterial_RectangleNoDepth"]
726 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
727 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
728 [-]: SELF      R12 R12 K136 ; R13 := R12; R12 := R12["0x302AAB2F"]
729 [-]: LOADK     R14 K134     ; R14 := "RewardsPanel.PanelBG"
730 [-]: LOADK     R15 K137     ; R15 := "RectEdgeColor"
731 [-]: GETGLOBAL R16 K13      ; R16 := _G
732 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["UIColorObject_White"]
733 [-]: GETTABLE  R16 R16 K138 ; R16 := R16["r"]
734 [-]: GETGLOBAL R17 K13      ; R17 := _G
735 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["UIColorObject_White"]
736 [-]: GETTABLE  R17 R17 K139 ; R17 := R17["g"]
737 [-]: GETGLOBAL R18 K13      ; R18 := _G
738 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["UIColorObject_White"]
739 [-]: GETTABLE  R18 R18 K140 ; R18 := R18["b"]
740 [-]: LOADK     R19 K141     ; R19 := 0.20000000298023
741 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
742 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
743 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
744 [-]: LOADK     R14 K142     ; R14 := "StatsPanel.PanelBG"
745 [-]: GETGLOBAL R15 K13      ; R15 := _G
746 [-]: GETTABLE  R15 R15 K135 ; R15 := R15["UIMaterial_RectangleNoDepth"]
747 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
748 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
749 [-]: SELF      R12 R12 K136 ; R13 := R12; R12 := R12["0x302AAB2F"]
750 [-]: LOADK     R14 K142     ; R14 := "StatsPanel.PanelBG"
751 [-]: LOADK     R15 K137     ; R15 := "RectEdgeColor"
752 [-]: GETGLOBAL R16 K13      ; R16 := _G
753 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["UIColorObject_White"]
754 [-]: GETTABLE  R16 R16 K138 ; R16 := R16["r"]
755 [-]: GETGLOBAL R17 K13      ; R17 := _G
756 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["UIColorObject_White"]
757 [-]: GETTABLE  R17 R17 K139 ; R17 := R17["g"]
758 [-]: GETGLOBAL R18 K13      ; R18 := _G
759 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["UIColorObject_White"]
760 [-]: GETTABLE  R18 R18 K140 ; R18 := R18["b"]
761 [-]: LOADK     R19 K141     ; R19 := 0.20000000298023
762 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
763 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
764 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
765 [-]: LOADK     R14 K143     ; R14 := "ModsPanel.PanelBG"
766 [-]: GETGLOBAL R15 K13      ; R15 := _G
767 [-]: GETTABLE  R15 R15 K135 ; R15 := R15["UIMaterial_RectangleNoDepth"]
768 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
769 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
770 [-]: SELF      R12 R12 K136 ; R13 := R12; R12 := R12["0x302AAB2F"]
771 [-]: LOADK     R14 K143     ; R14 := "ModsPanel.PanelBG"
772 [-]: LOADK     R15 K137     ; R15 := "RectEdgeColor"
773 [-]: GETGLOBAL R16 K13      ; R16 := _G
774 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["UIColorObject_White"]
775 [-]: GETTABLE  R16 R16 K138 ; R16 := R16["r"]
776 [-]: GETGLOBAL R17 K13      ; R17 := _G
777 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["UIColorObject_White"]
778 [-]: GETTABLE  R17 R17 K139 ; R17 := R17["g"]
779 [-]: GETGLOBAL R18 K13      ; R18 := _G
780 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["UIColorObject_White"]
781 [-]: GETTABLE  R18 R18 K140 ; R18 := R18["b"]
782 [-]: LOADK     R19 K141     ; R19 := 0.20000000298023
783 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
784 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
785 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
786 [-]: LOADK     R14 K144     ; R14 := "AffinityPanel.PanelBg"
787 [-]: GETGLOBAL R15 K13      ; R15 := _G
788 [-]: GETTABLE  R15 R15 K135 ; R15 := R15["UIMaterial_RectangleNoDepth"]
789 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
790 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
791 [-]: SELF      R12 R12 K136 ; R13 := R12; R12 := R12["0x302AAB2F"]
792 [-]: LOADK     R14 K144     ; R14 := "AffinityPanel.PanelBg"
793 [-]: LOADK     R15 K137     ; R15 := "RectEdgeColor"
794 [-]: GETGLOBAL R16 K13      ; R16 := _G
795 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["UIColorObject_White"]
796 [-]: GETTABLE  R16 R16 K138 ; R16 := R16["r"]
797 [-]: GETGLOBAL R17 K13      ; R17 := _G
798 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["UIColorObject_White"]
799 [-]: GETTABLE  R17 R17 K139 ; R17 := R17["g"]
800 [-]: GETGLOBAL R18 K13      ; R18 := _G
801 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["UIColorObject_White"]
802 [-]: GETTABLE  R18 R18 K140 ; R18 := R18["b"]
803 [-]: LOADK     R19 K141     ; R19 := 0.20000000298023
804 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
805 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
806 [-]: SELF      R12 R12 K136 ; R13 := R12; R12 := R12["0x302AAB2F"]
807 [-]: LOADK     R14 K144     ; R14 := "AffinityPanel.PanelBg"
808 [-]: LOADK     R15 K145     ; R15 := "RectInnerColor"
809 [-]: GETGLOBAL R16 K13      ; R16 := _G
810 [-]: GETTABLE  R16 R16 K146 ; R16 := R16["UIColorObject_DarkBlue"]
811 [-]: GETTABLE  R16 R16 K138 ; R16 := R16["r"]
812 [-]: GETGLOBAL R17 K13      ; R17 := _G
813 [-]: GETTABLE  R17 R17 K146 ; R17 := R17["UIColorObject_DarkBlue"]
814 [-]: GETTABLE  R17 R17 K139 ; R17 := R17["g"]
815 [-]: GETGLOBAL R18 K13      ; R18 := _G
816 [-]: GETTABLE  R18 R18 K146 ; R18 := R18["UIColorObject_DarkBlue"]
817 [-]: GETTABLE  R18 R18 K140 ; R18 := R18["b"]
818 [-]: LOADK     R19 K18      ; R19 := 0
819 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
820 [-]: GETUPVAL  R12 U1       ; R12 := U1
821 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["0x87D2274C"]
822 [-]: CALL      R12 1 2      ; R12 := R12()
823 [-]: TEST      R12 1        ; if R12 then PC := 831
824 [-]: JMP       831          ; PC := 831
825 [-]: GETGLOBAL R12 K23      ; R12 := _T
826 [-]: GETTABLE  R12 R12 K60  ; R12 := R12["eomScreenMode"]
827 [-]: GETUPVAL  R13 U12      ; R13 := U12
828 [-]: GETTABLE  R13 R13 K64  ; R13 := R13["DETAILED_PREVIEW"]
829 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 973
830 [-]: JMP       973          ; PC := 973
831 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
832 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
833 [-]: LOADK     R14 K147     ; R14 := "RewardsPanel.Frame"
834 [-]: GETGLOBAL R15 K13      ; R15 := _G
835 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
836 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
837 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
838 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
839 [-]: LOADK     R14 K149     ; R14 := "StatsPanel.Frame"
840 [-]: GETGLOBAL R15 K13      ; R15 := _G
841 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
842 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
843 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
844 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
845 [-]: LOADK     R14 K150     ; R14 := "StatsPanel.Player1"
846 [-]: GETGLOBAL R15 K13      ; R15 := _G
847 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
848 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
849 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
850 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
851 [-]: LOADK     R14 K151     ; R14 := "StatsPanel.Player2"
852 [-]: GETGLOBAL R15 K13      ; R15 := _G
853 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
854 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
855 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
856 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
857 [-]: LOADK     R14 K152     ; R14 := "StatsPanel.Player3"
858 [-]: GETGLOBAL R15 K13      ; R15 := _G
859 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
860 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
861 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
862 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
863 [-]: LOADK     R14 K153     ; R14 := "StatsPanel.Player4"
864 [-]: GETGLOBAL R15 K13      ; R15 := _G
865 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
866 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
867 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
868 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
869 [-]: LOADK     R14 K154     ; R14 := "StatsPanel.Player1.PanelBG"
870 [-]: GETGLOBAL R15 K13      ; R15 := _G
871 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
872 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
873 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
874 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
875 [-]: LOADK     R14 K155     ; R14 := "StatsPanel.Player2.PanelBG"
876 [-]: GETGLOBAL R15 K13      ; R15 := _G
877 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
878 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
879 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
880 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
881 [-]: LOADK     R14 K156     ; R14 := "StatsPanel.Player3.PanelBG"
882 [-]: GETGLOBAL R15 K13      ; R15 := _G
883 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
884 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
885 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
886 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
887 [-]: LOADK     R14 K157     ; R14 := "StatsPanel.Player4.PanelBG"
888 [-]: GETGLOBAL R15 K13      ; R15 := _G
889 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
890 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
891 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
892 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
893 [-]: LOADK     R14 K158     ; R14 := "ModsPanel.Frame"
894 [-]: GETGLOBAL R15 K13      ; R15 := _G
895 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
896 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
897 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
898 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
899 [-]: LOADK     R14 K159     ; R14 := "AffinityPanel.Frame"
900 [-]: GETGLOBAL R15 K13      ; R15 := _G
901 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
902 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
903 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
904 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
905 [-]: LOADK     R14 K160     ; R14 := "AffinityPanel.Frame.TopLine"
906 [-]: GETGLOBAL R15 K13      ; R15 := _G
907 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
908 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
909 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
910 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
911 [-]: LOADK     R14 K161     ; R14 := "AffinityPanel.Frame.BottomLine"
912 [-]: GETGLOBAL R15 K13      ; R15 := _G
913 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
914 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
915 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
916 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
917 [-]: LOADK     R14 K162     ; R14 := "RewardsPanel.TopLine"
918 [-]: GETGLOBAL R15 K13      ; R15 := _G
919 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
920 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
921 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
922 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
923 [-]: LOADK     R14 K163     ; R14 := "RewardsPanel.BottomLine"
924 [-]: GETGLOBAL R15 K13      ; R15 := _G
925 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
926 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
927 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
928 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
929 [-]: LOADK     R14 K164     ; R14 := "ModsPanel.TopLine"
930 [-]: GETGLOBAL R15 K13      ; R15 := _G
931 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
932 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
933 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
934 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
935 [-]: LOADK     R14 K165     ; R14 := "ModsPanel.BottomLine"
936 [-]: GETGLOBAL R15 K13      ; R15 := _G
937 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
938 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
939 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
940 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
941 [-]: LOADK     R14 K166     ; R14 := "StatsPanel.TopLine"
942 [-]: GETGLOBAL R15 K13      ; R15 := _G
943 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
944 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
945 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
946 [-]: SELF      R12 R12 K133 ; R13 := R12; R12 := R12["0x7E1F26D7"]
947 [-]: LOADK     R14 K167     ; R14 := "StatsPanel.BottomLine"
948 [-]: GETGLOBAL R15 K13      ; R15 := _G
949 [-]: GETTABLE  R15 R15 K148 ; R15 := R15["UIMaterial_SmoothEdgeNoDepthTest"]
950 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
951 [-]: LOADK     R12 K51      ; R12 := 1
952 [-]: LOADK     R13 K168     ; R13 := 9
953 [-]: LOADK     R14 K51      ; R14 := 1
954 [-]: FORPREP   R12 972      ; R12 -= R14; PC := 972
955 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
956 [-]: SELF      R16 R16 K133 ; R17 := R16; R16 := R16["0x7E1F26D7"]
957 [-]: LOADK     R18 K169     ; R18 := "AffinityPanel.Grid.Item"
958 [-]: MOVE      R19 R15      ; R19 := R15
959 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
960 [-]: GETGLOBAL R19 K13      ; R19 := _G
961 [-]: GETTABLE  R19 R19 K148 ; R19 := R19["UIMaterial_SmoothEdgeNoDepthTest"]
962 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
963 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
964 [-]: SELF      R16 R16 K133 ; R17 := R16; R16 := R16["0x7E1F26D7"]
965 [-]: LOADK     R18 K169     ; R18 := "AffinityPanel.Grid.Item"
966 [-]: MOVE      R19 R15      ; R19 := R15
967 [-]: LOADK     R20 K170     ; R20 := ".Info"
968 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
969 [-]: GETGLOBAL R19 K13      ; R19 := _G
970 [-]: GETTABLE  R19 R19 K148 ; R19 := R19["UIMaterial_SmoothEdgeNoDepthTest"]
971 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
972 [-]: FORLOOP   R12 955      ; R12 += R14; if R12 <= R13 then begin PC := 955; R15 := R12 end
973 [-]: GETGLOBAL R16 K23      ; R16 := _T
974 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["eomScreenMode"]
975 [-]: GETUPVAL  R17 U12      ; R17 := U12
976 [-]: GETTABLE  R17 R17 K69  ; R17 := R17["QUICK_PREVIEW"]
977 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 986
978 [-]: JMP       986          ; PC := 986
979 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
980 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16["0x1C19D966"]
981 [-]: LOADK     R18 K94      ; R18 := "Title"
982 [-]: LOADK     R19 K17      ; R19 := "_alpha"
983 [-]: LOADK     R20 K125     ; R20 := 100
984 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
985 [-]: JMP       1039         ; PC := 1039
986 [-]: GETGLOBAL R16 K23      ; R16 := _T
987 [-]: GETTABLE  R16 R16 K60  ; R16 := R16["eomScreenMode"]
988 [-]: GETUPVAL  R17 U12      ; R17 := U12
989 [-]: GETTABLE  R17 R17 K64  ; R17 := R17["DETAILED_PREVIEW"]
990 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 1025
991 [-]: JMP       1025         ; PC := 1025
992 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
993 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16["0x1C19D966"]
994 [-]: LOADK     R18 K16      ; R18 := "_root"
995 [-]: LOADK     R19 K17      ; R19 := "_alpha"
996 [-]: LOADK     R20 K18      ; R20 := 0
997 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
998 [-]: GETUPVAL  R16 U17      ; R16 := U17
999 [-]: CALL      R16 1 2      ; R16 := R16()
1000 [-]: TEST      R16 0        ; if not R16 then PC := 1008
1001 [-]: JMP       1008         ; PC := 1008
1002 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
1003 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16["0x1C19D966"]
1004 [-]: LOADK     R18 K94      ; R18 := "Title"
1005 [-]: LOADK     R19 K17      ; R19 := "_alpha"
1006 [-]: LOADK     R20 K125     ; R20 := 100
1007 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
1008 [-]: GETGLOBAL R16 K171     ; R16 := 0x52E17A90
1009 [-]: GETGLOBAL R17 K4       ; R17 := mMovie
1010 [-]: LOADK     R18 K16      ; R18 := "_root"
1011 [-]: GETGLOBAL R19 K172     ; R19 := UISys
1012 [-]: GETTABLE  R19 R19 K173 ; R19 := R19["FlashInstance_LINEAR"]
1013 [-]: NEWTABLE  R20 1 0      ; R20 := {}
1014 [-]: LOADK     R21 K17      ; R21 := "_alpha"
1015 [-]: SETLIST   R20 1 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
1016 [-]: NEWTABLE  R21 1 0      ; R21 := {}
1017 [-]: LOADK     R22 K125     ; R22 := 100
1018 [-]: SETLIST   R21 1 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
1019 [-]: LOADK     R22 K174     ; R22 := 0.30000001192093
1020 [-]: LOADK     R23 K18      ; R23 := 0
1021 [-]: CLOSURE   R24 0        ; R24 := closure(Function #92.1)
1022 [-]: GETUPVAL  R0 U23       ; R0 := U23
1023 [-]: CALL      R16 9 1      ; R16(R17,R18,R19,R20,R21,R22,R23,R24)
1024 [-]: JMP       1039         ; PC := 1039
1025 [-]: GETGLOBAL R16 K171     ; R16 := 0x52E17A90
1026 [-]: GETGLOBAL R17 K4       ; R17 := mMovie
1027 [-]: LOADK     R18 K94      ; R18 := "Title"
1028 [-]: GETGLOBAL R19 K172     ; R19 := UISys
1029 [-]: GETTABLE  R19 R19 K175 ; R19 := R19["FlashInstance_SMOOTH_STEP"]
1030 [-]: NEWTABLE  R20 1 0      ; R20 := {}
1031 [-]: LOADK     R21 K17      ; R21 := "_alpha"
1032 [-]: SETLIST   R20 1 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
1033 [-]: NEWTABLE  R21 1 0      ; R21 := {}
1034 [-]: LOADK     R22 K125     ; R22 := 100
1035 [-]: SETLIST   R21 1 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
1036 [-]: LOADK     R22 K176     ; R22 := 2
1037 [-]: LOADK     R23 K18      ; R23 := 0
1038 [-]: CALL      R16 8 1      ; R16(R17,R18,R19,R20,R21,R22,R23)
1039 [-]: TEST      R7 1         ; if R7 then PC := 1048
1040 [-]: JMP       1048         ; PC := 1048
1041 [-]: GETGLOBAL R16 K177     ; R16 := 0x329BDC44
1042 [-]: LOADK     R17 K178     ; R17 := "Lotus.Interface.Libs.DioramaLoader"
1043 [-]: CALL      R16 2 2      ; R16 := R16(R17)
1044 [-]: GETTABLE  R17 R16 K179 ; R17 := R16["0xC042262A"]
1045 [-]: GETGLOBAL R18 K4       ; R18 := mMovie
1046 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1047 [-]: MOVE      R17 R24      ; R17 := R24
1048 [-]: GETUPVAL  R17 U25      ; R17 := U25
1049 [-]: GETUPVAL  R18 U26      ; R18 := U26
1050 [-]: GETTABLE  R18 R18 K121 ; R18 := R18["Stats"]
1051 [-]: GETUPVAL  R19 U27      ; R19 := U27
1052 [-]: CALL      R19 1 2      ; R19 := R19()
1053 [-]: SETTABLE  R17 R18 R19  ; R17[R18] := R19
1054 [-]: GETGLOBAL R17 K23      ; R17 := _T
1055 [-]: GETTABLE  R17 R17 K60  ; R17 := R17["eomScreenMode"]
1056 [-]: GETUPVAL  R18 U12      ; R18 := U12
1057 [-]: GETTABLE  R18 R18 K64  ; R18 := R18["DETAILED_PREVIEW"]
1058 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 1062
1059 [-]: JMP       1062         ; PC := 1062
1060 [-]: GETUPVAL  R17 U28      ; R17 := U28
1061 [-]: CALL      R17 1 1      ; R17()
1062 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
1063 [-]: GETUPVAL  R18 U29      ; R18 := U29
1064 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1065 [-]: TEST      R17 0        ; if not R17 then PC := 1071
1066 [-]: JMP       1071         ; PC := 1071
1067 [-]: GETGLOBAL R17 K56      ; R17 := Lotus_Game
1068 [-]: GETTABLE  R17 R17 K180 ; R17 := R17["0xC48DD245"]
1069 [-]: CALL      R17 1 2      ; R17 := R17()
1070 [-]: MOVE      R17 R29      ; R17 := R29
1071 [-]: TEST      R7 0         ; if not R7 then PC := 1354
1072 [-]: JMP       1354         ; PC := 1354
1073 [-]: GETGLOBAL R17 K13      ; R17 := _G
1074 [-]: SETTABLE  R17 K181 K28 ; R17["LastMissionKuva"] := nil
1075 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
1076 [-]: GETGLOBAL R18 K7       ; R18 := gGameRules
1077 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1078 [-]: TEST      R17 1        ; if R17 then PC := 1083
1079 [-]: JMP       1083         ; PC := 1083
1080 [-]: GETGLOBAL R17 K7       ; R17 := gGameRules
1081 [-]: SELF      R17 R17 K182 ; R18 := R17; R17 := R17["0xA2CB3BC5"]
1082 [-]: CALL      R17 2 2      ; R17 := R17(R18)
1083 [-]: TEST      R17 0        ; if not R17 then PC := 1094
1084 [-]: JMP       1094         ; PC := 1094
1085 [-]: GETGLOBAL R18 K0       ; R18 := 0x93B1256B
1086 [-]: LOADK     R19 K183     ; R19 := "Mission Failed"
1087 [-]: CALL      R18 2 1      ; R18(R19)
1088 [-]: GETUPVAL  R18 U3       ; R18 := U3
1089 [-]: TEST      R18 0        ; if not R18 then PC := 1097
1090 [-]: JMP       1097         ; PC := 1097
1091 [-]: MOVE      R18 R0       ; R18 := R0
1092 [-]: MOVE      R18 R3       ; R18 := R3
1093 [-]: JMP       1097         ; PC := 1097
1094 [-]: GETGLOBAL R18 K0       ; R18 := 0x93B1256B
1095 [-]: LOADK     R19 K184     ; R19 := "Mission Succeeded"
1096 [-]: CALL      R18 2 1      ; R18(R19)
1097 [-]: TEST      R5 0         ; if not R5 then PC := 1205
1098 [-]: JMP       1205         ; PC := 1205
1099 [-]: GETGLOBAL R18 K2       ; R18 := 0x400E7765
1100 [-]: GETGLOBAL R19 K7       ; R19 := gGameRules
1101 [-]: CALL      R18 2 2      ; R18 := R18(R19)
1102 [-]: TEST      R18 1        ; if R18 then PC := 1205
1103 [-]: JMP       1205         ; PC := 1205
1104 [-]: GETGLOBAL R18 K7       ; R18 := gGameRules
1105 [-]: SELF      R18 R18 K185 ; R19 := R18; R18 := R18["0xE20DC519"]
1106 [-]: CALL      R18 2 2      ; R18 := R18(R19)
1107 [-]: GETGLOBAL R19 K56      ; R19 := Lotus_Game
1108 [-]: GETTABLE  R19 R19 K186 ; R19 := R19["MT_JUNCTION"]
1109 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 1205
1110 [-]: JMP       1205         ; PC := 1205
1111 [-]: TEST      R17 1        ; if R17 then PC := 1171
1112 [-]: JMP       1171         ; PC := 1171
1113 [-]: GETUPVAL  R18 U30      ; R18 := U30
1114 [-]: GETGLOBAL R19 K7       ; R19 := gGameRules
1115 [-]: SELF      R19 R19 K188 ; R20 := R19; R19 := R19["0xED0EE7FB"]
1116 [-]: GETUPVAL  R21 U31      ; R21 := U31
1117 [-]: GETTABLE  R21 R21 K189 ; R21 := R21["FACTION_HUNTER_SPAWNED"]
1118 [-]: LOADK     R22 K190     ; R22 := 999
1119 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
1120 [-]: SETTABLE  R18 K187 R19 ; R18["FactionHunterSpawned"] := R19
1121 [-]: GETUPVAL  R18 U30      ; R18 := U30
1122 [-]: GETTABLE  R18 R18 K187 ; R18 := R18["FactionHunterSpawned"]
1123 [-]: GETGLOBAL R19 K56      ; R19 := Lotus_Game
1124 [-]: GETTABLE  R19 R19 K191 ; R19 := R19["FC_GRINEER"]
1125 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 1135
1126 [-]: JMP       1135         ; PC := 1135
1127 [-]: GETUPVAL  R18 U30      ; R18 := U30
1128 [-]: GETGLOBAL R19 K7       ; R19 := gGameRules
1129 [-]: SELF      R19 R19 K188 ; R20 := R19; R19 := R19["0xED0EE7FB"]
1130 [-]: GETUPVAL  R21 U31      ; R21 := U31
1131 [-]: GETTABLE  R21 R21 K193 ; R21 := R21["NUM_DEATH_SQUAD_VICTIMS"]
1132 [-]: LOADK     R22 K18      ; R22 := 0
1133 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
1134 [-]: SETTABLE  R18 K192 R19 ; R18["NumDeathSquadVictims"] := R19
1135 [-]: GETUPVAL  R18 U30      ; R18 := U30
1136 [-]: GETGLOBAL R19 K7       ; R19 := gGameRules
1137 [-]: SELF      R19 R19 K188 ; R20 := R19; R19 := R19["0xED0EE7FB"]
1138 [-]: GETGLOBAL R21 K195     ; R21 := 0xEC274B1A
1139 [-]: LOADK     R22 K196     ; R22 := "ExterminateMid"
1140 [-]: CALL      R21 2 2      ; R21 := R21(R22)
1141 [-]: LOADK     R22 K197     ; R22 := 9999
1142 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
1143 [-]: SETTABLE  R18 K194 R19 ; R18["ExterminateMidCout"] := R19
1144 [-]: GETUPVAL  R18 U30      ; R18 := U30
1145 [-]: GETGLOBAL R19 K7       ; R19 := gGameRules
1146 [-]: SELF      R19 R19 K185 ; R20 := R19; R19 := R19["0xE20DC519"]
1147 [-]: CALL      R19 2 2      ; R19 := R19(R20)
1148 [-]: SETTABLE  R18 K198 R19 ; R18["MissionType"] := R19
1149 [-]: GETUPVAL  R18 U32      ; R18 := U32
1150 [-]: SELF      R18 R18 K199 ; R19 := R18; R18 := R18["0x61494587"]
1151 [-]: LOADK     R20 K176     ; R20 := 2
1152 [-]: GETUPVAL  R21 U33      ; R21 := U33
1153 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
1154 [-]: GETUPVAL  R18 U3       ; R18 := U3
1155 [-]: TEST      R18 1        ; if R18 then PC := 1175
1156 [-]: JMP       1175         ; PC := 1175
1157 [-]: GETUPVAL  R18 U9       ; R18 := U9
1158 [-]: GETTABLE  R18 R18 K54  ; R18 := R18["isPvp"]
1159 [-]: TEST      R18 1        ; if R18 then PC := 1166
1160 [-]: JMP       1166         ; PC := 1166
1161 [-]: GETUPVAL  R18 U16      ; R18 := U16
1162 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["0x25992394"]
1163 [-]: GETGLOBAL R19 K200     ; R19 := missionFinalSuccessSound
1164 [-]: CALL      R18 2 1      ; R18(R19)
1165 [-]: JMP       1175         ; PC := 1175
1166 [-]: GETUPVAL  R18 U16      ; R18 := U16
1167 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["0x25992394"]
1168 [-]: GETGLOBAL R19 K201     ; R19 := missionFinalSuccessSoundPvp
1169 [-]: CALL      R18 2 1      ; R18(R19)
1170 [-]: JMP       1175         ; PC := 1175
1171 [-]: GETUPVAL  R18 U16      ; R18 := U16
1172 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["0x25992394"]
1173 [-]: GETGLOBAL R19 K202     ; R19 := missionFinalFailureSound
1174 [-]: CALL      R18 2 1      ; R18(R19)
1175 [-]: GETUPVAL  R18 U9       ; R18 := U9
1176 [-]: GETTABLE  R18 R18 K54  ; R18 := R18["isPvp"]
1177 [-]: TEST      R18 1        ; if R18 then PC := 1205
1178 [-]: JMP       1205         ; PC := 1205
1179 [-]: TEST      R17 0        ; if not R17 then PC := 1186
1180 [-]: JMP       1186         ; PC := 1186
1181 [-]: GETUPVAL  R18 U16      ; R18 := U16
1182 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["0x25992394"]
1183 [-]: GETGLOBAL R19 K203     ; R19 := missionEndFailFXSound
1184 [-]: CALL      R18 2 1      ; R18(R19)
1185 [-]: JMP       1205         ; PC := 1205
1186 [-]: GETUPVAL  R18 U17      ; R18 := U17
1187 [-]: CALL      R18 1 2      ; R18 := R18()
1188 [-]: TEST      R18 0        ; if not R18 then PC := 1198
1189 [-]: JMP       1198         ; PC := 1198
1190 [-]: GETGLOBAL R18 K7       ; R18 := gGameRules
1191 [-]: SELF      R18 R18 K204 ; R19 := R18; R18 := R18["0x4A57F63D"]
1192 [-]: GETGLOBAL R20 K205     ; R20 := onslaughtMissionEndFXSound
1193 [-]: SELF      R20 R20 K206 ; R21 := R20; R20 := R20["0x1B252E3C"]
1194 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1195 [-]: LOADK     R21 K207     ; R21 := "OnOnslaughtMusicReady"
1196 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
1197 [-]: JMP       1205         ; PC := 1205
1198 [-]: GETUPVAL  R18 U3       ; R18 := U3
1199 [-]: TEST      R18 1        ; if R18 then PC := 1205
1200 [-]: JMP       1205         ; PC := 1205
1201 [-]: GETUPVAL  R18 U16      ; R18 := U16
1202 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["0x25992394"]
1203 [-]: GETGLOBAL R19 K208     ; R19 := missionEndFXSound
1204 [-]: CALL      R18 2 1      ; R18(R19)
1205 [-]: GETUPVAL  R18 U34      ; R18 := U34
1206 [-]: MOVE      R19 R1       ; R19 := R1
1207 [-]: MOVE      R20 R17      ; R20 := R17
1208 [-]: CALL      R18 3 1      ; R18(R19,R20)
1209 [-]: GETUPVAL  R18 U35      ; R18 := U35
1210 [-]: CALL      R18 1 2      ; R18 := R18()
1211 [-]: TEST      R18 1        ; if R18 then PC := 1219
1212 [-]: JMP       1219         ; PC := 1219
1213 [-]: GETUPVAL  R18 U21      ; R18 := U21
1214 [-]: CALL      R18 1 2      ; R18 := R18()
1215 [-]: TEST      R18 1        ; if R18 then PC := 1219
1216 [-]: JMP       1219         ; PC := 1219
1217 [-]: GETUPVAL  R18 U36      ; R18 := U36
1218 [-]: CALL      R18 1 2      ; R18 := R18()
1219 [-]: TEST      R18 0        ; if not R18 then PC := 1228
1220 [-]: JMP       1228         ; PC := 1228
1221 [-]: GETGLOBAL R19 K23      ; R19 := _T
1222 [-]: GETTABLE  R19 R19 K60  ; R19 := R19["eomScreenMode"]
1223 [-]: GETUPVAL  R20 U12      ; R20 := U12
1224 [-]: GETTABLE  R20 R20 K69  ; R20 := R20["QUICK_PREVIEW"]
1225 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 1228
1226 [-]: JMP       1228         ; PC := 1228
1227 [-]: MOVE      R19 R0       ; R19 := R0
1228 [-]: MOVE      R19 R1       ; R19 := R1
1229 [-]: TEST      R19 0        ; if not R19 then PC := 1294
1230 [-]: JMP       1294         ; PC := 1294
1231 [-]: GETUPVAL  R20 U37      ; R20 := U37
1232 [-]: MOVE      R21 R17      ; R21 := R17
1233 [-]: CALL      R20 2 1      ; R20(R21)
1234 [-]: GETUPVAL  R20 U38      ; R20 := U38
1235 [-]: CALL      R20 1 1      ; R20()
1236 [-]: GETUPVAL  R20 U40      ; R20 := U40
1237 [-]: CALL      R20 1 2      ; R20 := R20()
1238 [-]: MOVE      R20 R39      ; R20 := R39
1239 [-]: TEST      R17 0        ; if not R17 then PC := 1257
1240 [-]: JMP       1257         ; PC := 1257
1241 [-]: GETUPVAL  R20 U29      ; R20 := U29
1242 [-]: SETTABLE  R20 K209 K18 ; R20["mSuitXpBonus"] := 0
1243 [-]: GETUPVAL  R20 U29      ; R20 := U29
1244 [-]: SETTABLE  R20 K210 K18 ; R20["mPistolXpBonus"] := 0
1245 [-]: GETUPVAL  R20 U29      ; R20 := U29
1246 [-]: SETTABLE  R20 K211 K18 ; R20["mRifleXpBonus"] := 0
1247 [-]: GETUPVAL  R20 U29      ; R20 := U29
1248 [-]: SETTABLE  R20 K212 K18 ; R20["mMeleeXpBonus"] := 0
1249 [-]: GETUPVAL  R20 U29      ; R20 := U29
1250 [-]: SETTABLE  R20 K213 K18 ; R20["mSentinelXpBonus"] := 0
1251 [-]: GETUPVAL  R20 U29      ; R20 := U29
1252 [-]: SETTABLE  R20 K214 K18 ; R20["mSentinelWeaponXpBonus"] := 0
1253 [-]: GETUPVAL  R20 U29      ; R20 := U29
1254 [-]: SETTABLE  R20 K215 K18 ; R20["mHoverboardXP"] := 0
1255 [-]: GETUPVAL  R20 U29      ; R20 := U29
1256 [-]: SETTABLE  R20 K216 K18 ; R20["mHoverboardXPBonus"] := 0
1257 [-]: GETUPVAL  R20 U41      ; R20 := U41
1258 [-]: CALL      R20 1 1      ; R20()
1259 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1260 [-]: CALL      R20 1 1      ; R20()
1261 [-]: GETUPVAL  R20 U42      ; R20 := U42
1262 [-]: MOVE      R21 R17      ; R21 := R17
1263 [-]: CALL      R20 2 1      ; R20(R21)
1264 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1265 [-]: CALL      R20 1 1      ; R20()
1266 [-]: GETUPVAL  R20 U43      ; R20 := U43
1267 [-]: MOVE      R21 R17      ; R21 := R17
1268 [-]: CALL      R20 2 1      ; R20(R21)
1269 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1270 [-]: CALL      R20 1 1      ; R20()
1271 [-]: GETUPVAL  R20 U44      ; R20 := U44
1272 [-]: CALL      R20 1 1      ; R20()
1273 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1274 [-]: CALL      R20 1 1      ; R20()
1275 [-]: GETUPVAL  R20 U45      ; R20 := U45
1276 [-]: CALL      R20 1 1      ; R20()
1277 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1278 [-]: CALL      R20 1 1      ; R20()
1279 [-]: GETUPVAL  R20 U46      ; R20 := U46
1280 [-]: CALL      R20 1 1      ; R20()
1281 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1282 [-]: CALL      R20 1 1      ; R20()
1283 [-]: GETUPVAL  R20 U47      ; R20 := U47
1284 [-]: CALL      R20 1 1      ; R20()
1285 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1286 [-]: CALL      R20 1 1      ; R20()
1287 [-]: GETUPVAL  R20 U48      ; R20 := U48
1288 [-]: CALL      R20 1 1      ; R20()
1289 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1290 [-]: CALL      R20 1 1      ; R20()
1291 [-]: GETUPVAL  R20 U49      ; R20 := U49
1292 [-]: LOADNIL   R21 R21      ; R21 := nil
1293 [-]: CALL      R20 2 1      ; R20(R21)
1294 [-]: TEST      R18 1        ; if R18 then PC := 1298
1295 [-]: JMP       1298         ; PC := 1298
1296 [-]: TEST      R5 0         ; if not R5 then PC := 1321
1297 [-]: JMP       1321         ; PC := 1321
1298 [-]: GETUPVAL  R20 U50      ; R20 := U50
1299 [-]: GETUPVAL  R21 U51      ; R21 := U51
1300 [-]: GETTABLE  R21 R21 K218 ; R21 := R21["SCOREBOARD"]
1301 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 1315
1302 [-]: JMP       1315         ; PC := 1315
1303 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
1304 [-]: GETUPVAL  R21 U0       ; R21 := U0
1305 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1306 [-]: TEST      R20 1        ; if R20 then PC := 1315
1307 [-]: JMP       1315         ; PC := 1315
1308 [-]: GETUPVAL  R20 U0       ; R20 := U0
1309 [-]: SELF      R20 R20 K33  ; R21 := R20; R20 := R20["0x458F27A9"]
1310 [-]: LOADK     R22 K219     ; R22 := "PopulateScoreboard"
1311 [-]: GETGLOBAL R23 K220     ; R23 := 0x9FAED6BC
1312 [-]: GETUPVAL  R24 U52      ; R24 := U52
1313 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
1314 [-]: CALL      R20 0 1      ; R20(R21,...)
1315 [-]: TEST      R5 1         ; if R5 then PC := 1321
1316 [-]: JMP       1321         ; PC := 1321
1317 [-]: GETUPVAL  R20 U53      ; R20 := U53
1318 [-]: GETUPVAL  R21 U51      ; R21 := U51
1319 [-]: GETTABLE  R21 R21 K218 ; R21 := R21["SCOREBOARD"]
1320 [-]: CALL      R20 2 1      ; R20(R21)
1321 [-]: GETUPVAL  R20 U35      ; R20 := U35
1322 [-]: CALL      R20 1 2      ; R20 := R20()
1323 [-]: TEST      R20 0        ; if not R20 then PC := 1329
1324 [-]: JMP       1329         ; PC := 1329
1325 [-]: GETUPVAL  R20 U54      ; R20 := U54
1326 [-]: MOVE      R21 R17      ; R21 := R17
1327 [-]: CALL      R20 2 1      ; R20(R21)
1328 [-]: JMP       1517         ; PC := 1517
1329 [-]: TEST      R5 0         ; if not R5 then PC := 1334
1330 [-]: JMP       1334         ; PC := 1334
1331 [-]: GETUPVAL  R20 U54      ; R20 := U54
1332 [-]: MOVE      R21 R17      ; R21 := R17
1333 [-]: CALL      R20 2 1      ; R20(R21)
1334 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
1335 [-]: GETGLOBAL R21 K221     ; R21 := titleFX
1336 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1337 [-]: TEST      R20 1        ; if R20 then PC := 1517
1338 [-]: JMP       1517         ; PC := 1517
1339 [-]: GETUPVAL  R20 U50      ; R20 := U50
1340 [-]: GETUPVAL  R21 U51      ; R21 := U51
1341 [-]: GETTABLE  R21 R21 K222 ; R21 := R21["MASTERY"]
1342 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 1517
1343 [-]: JMP       1517         ; PC := 1517
1344 [-]: GETUPVAL  R20 U1       ; R20 := U1
1345 [-]: GETTABLE  R20 R20 K223 ; R20 := R20["0xBB2F7661"]
1346 [-]: GETGLOBAL R21 K4       ; R21 := mMovie
1347 [-]: GETGLOBAL R22 K221     ; R22 := titleFX
1348 [-]: LOADK     R23 K224     ; R23 := 960
1349 [-]: GETUPVAL  R24 U22      ; R24 := U22
1350 [-]: GETTABLE  R24 R24 K94  ; R24 := R24["Title"]
1351 [-]: ADD       R24 R24 K225 ; R24 := R24 + 30
1352 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
1353 [-]: JMP       1517         ; PC := 1517
1354 [-]: GETUPVAL  R20 U38      ; R20 := U38
1355 [-]: CALL      R20 1 1      ; R20()
1356 [-]: GETUPVAL  R20 U40      ; R20 := U40
1357 [-]: CALL      R20 1 2      ; R20 := R20()
1358 [-]: MOVE      R20 R39      ; R20 := R39
1359 [-]: GETUPVAL  R20 U41      ; R20 := U41
1360 [-]: CALL      R20 1 1      ; R20()
1361 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1362 [-]: CALL      R20 1 1      ; R20()
1363 [-]: GETUPVAL  R20 U44      ; R20 := U44
1364 [-]: CALL      R20 1 1      ; R20()
1365 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1366 [-]: CALL      R20 1 1      ; R20()
1367 [-]: GETUPVAL  R20 U46      ; R20 := U46
1368 [-]: CALL      R20 1 1      ; R20()
1369 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1370 [-]: CALL      R20 1 1      ; R20()
1371 [-]: GETUPVAL  R20 U48      ; R20 := U48
1372 [-]: CALL      R20 1 1      ; R20()
1373 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1374 [-]: CALL      R20 1 1      ; R20()
1375 [-]: GETUPVAL  R20 U49      ; R20 := U49
1376 [-]: LOADNIL   R21 R21      ; R21 := nil
1377 [-]: CALL      R20 2 1      ; R20(R21)
1378 [-]: GETUPVAL  R20 U34      ; R20 := U34
1379 [-]: MOVE      R21 R0       ; R21 := R0
1380 [-]: GETUPVAL  R22 U52      ; R22 := U52
1381 [-]: TEST      R22 1        ; if R22 then PC := 1394
1382 [-]: JMP       1394         ; PC := 1394
1383 [-]: GETGLOBAL R22 K2       ; R22 := 0x400E7765
1384 [-]: GETGLOBAL R23 K13      ; R23 := _G
1385 [-]: GETTABLE  R23 R23 K226 ; R23 := R23["MissionSuccessOverride"]
1386 [-]: CALL      R22 2 2      ; R22 := R22(R23)
1387 [-]: TEST      R22 1        ; if R22 then PC := 1392
1388 [-]: JMP       1392         ; PC := 1392
1389 [-]: GETGLOBAL R22 K13      ; R22 := _G
1390 [-]: GETTABLE  R22 R22 K226 ; R22 := R22["MissionSuccessOverride"]
1391 [-]: JMP       1394         ; PC := 1394
1392 [-]: MOVE      R22 R0       ; R22 := R0
1393 [-]: MOVE      R22 R1       ; R22 := R1
1394 [-]: CALL      R20 3 1      ; R20(R21,R22)
1395 [-]: GETGLOBAL R20 K13      ; R20 := _G
1396 [-]: SETTABLE  R20 K226 K71 ; R20["MissionSuccessOverride"] := "0x0"
1397 [-]: GETUPVAL  R20 U52      ; R20 := U52
1398 [-]: TEST      R20 1        ; if R20 then PC := 1421
1399 [-]: JMP       1421         ; PC := 1421
1400 [-]: GETUPVAL  R20 U29      ; R20 := U29
1401 [-]: SETTABLE  R20 K209 K18 ; R20["mSuitXpBonus"] := 0
1402 [-]: GETUPVAL  R20 U29      ; R20 := U29
1403 [-]: SETTABLE  R20 K210 K18 ; R20["mPistolXpBonus"] := 0
1404 [-]: GETUPVAL  R20 U29      ; R20 := U29
1405 [-]: SETTABLE  R20 K211 K18 ; R20["mRifleXpBonus"] := 0
1406 [-]: GETUPVAL  R20 U29      ; R20 := U29
1407 [-]: SETTABLE  R20 K212 K18 ; R20["mMeleeXpBonus"] := 0
1408 [-]: GETUPVAL  R20 U29      ; R20 := U29
1409 [-]: SETTABLE  R20 K213 K18 ; R20["mSentinelXpBonus"] := 0
1410 [-]: GETUPVAL  R20 U29      ; R20 := U29
1411 [-]: SETTABLE  R20 K214 K18 ; R20["mSentinelWeaponXpBonus"] := 0
1412 [-]: GETUPVAL  R20 U29      ; R20 := U29
1413 [-]: SETTABLE  R20 K215 K18 ; R20["mHoverboardXP"] := 0
1414 [-]: GETUPVAL  R20 U29      ; R20 := U29
1415 [-]: SETTABLE  R20 K216 K18 ; R20["mHoverboardXPBonus"] := 0
1416 [-]: GETUPVAL  R20 U16      ; R20 := U16
1417 [-]: GETTABLE  R20 R20 K84  ; R20 := R20["0x25992394"]
1418 [-]: GETGLOBAL R21 K202     ; R21 := missionFinalFailureSound
1419 [-]: CALL      R20 2 1      ; R20(R21)
1420 [-]: JMP       1428         ; PC := 1428
1421 [-]: GETUPVAL  R20 U3       ; R20 := U3
1422 [-]: TEST      R20 1        ; if R20 then PC := 1428
1423 [-]: JMP       1428         ; PC := 1428
1424 [-]: GETUPVAL  R20 U16      ; R20 := U16
1425 [-]: GETTABLE  R20 R20 K84  ; R20 := R20["0x25992394"]
1426 [-]: GETGLOBAL R21 K200     ; R21 := missionFinalSuccessSound
1427 [-]: CALL      R20 2 1      ; R20(R21)
1428 [-]: GETUPVAL  R20 U42      ; R20 := U42
1429 [-]: GETUPVAL  R21 U52      ; R21 := U52
1430 [-]: MOVE      R21 R21      ; R21 := R21
1431 [-]: CALL      R20 2 1      ; R20(R21)
1432 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1433 [-]: CALL      R20 1 1      ; R20()
1434 [-]: GETUPVAL  R20 U45      ; R20 := U45
1435 [-]: CALL      R20 1 1      ; R20()
1436 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1437 [-]: CALL      R20 1 1      ; R20()
1438 [-]: GETUPVAL  R20 U47      ; R20 := U47
1439 [-]: CALL      R20 1 1      ; R20()
1440 [-]: GETGLOBAL R20 K217     ; R20 := 0x1BF588C6
1441 [-]: CALL      R20 1 1      ; R20()
1442 [-]: GETUPVAL  R20 U50      ; R20 := U50
1443 [-]: GETUPVAL  R21 U51      ; R21 := U51
1444 [-]: GETTABLE  R21 R21 K218 ; R21 := R21["SCOREBOARD"]
1445 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 1459
1446 [-]: JMP       1459         ; PC := 1459
1447 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
1448 [-]: GETUPVAL  R21 U0       ; R21 := U0
1449 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1450 [-]: TEST      R20 1        ; if R20 then PC := 1459
1451 [-]: JMP       1459         ; PC := 1459
1452 [-]: GETUPVAL  R20 U0       ; R20 := U0
1453 [-]: SELF      R20 R20 K33  ; R21 := R20; R20 := R20["0x458F27A9"]
1454 [-]: LOADK     R22 K227     ; R22 := "InitializeFanfare"
1455 [-]: GETGLOBAL R23 K220     ; R23 := 0x9FAED6BC
1456 [-]: GETUPVAL  R24 U52      ; R24 := U52
1457 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
1458 [-]: CALL      R20 0 1      ; R20(R21,...)
1459 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
1460 [-]: MOVE      R21 R2       ; R21 := R2
1461 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1462 [-]: TEST      R20 1        ; if R20 then PC := 1469
1463 [-]: JMP       1469         ; PC := 1469
1464 [-]: GETTABLE  R20 R2 K55   ; R20 := R2["missionType"]
1465 [-]: GETGLOBAL R21 K56      ; R21 := Lotus_Game
1466 [-]: GETTABLE  R21 R21 K228 ; R21 := R21["MT_SECTOR"]
1467 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 1475
1468 [-]: JMP       1475         ; PC := 1475
1469 [-]: TEST      R5 0         ; if not R5 then PC := 1475
1470 [-]: JMP       1475         ; PC := 1475
1471 [-]: GETUPVAL  R20 U54      ; R20 := U54
1472 [-]: GETUPVAL  R21 U52      ; R21 := U52
1473 [-]: MOVE      R21 R21      ; R21 := R21
1474 [-]: CALL      R20 2 1      ; R20(R21)
1475 [-]: MOVE      R20 R0       ; R20 := R0
1476 [-]: LOADNIL   R21 R21      ; R21 := nil
1477 [-]: GETGLOBAL R22 K56      ; R22 := Lotus_Game
1478 [-]: GETTABLE  R22 R22 K229 ; R22 := R22["0xA866E1C8"]
1479 [-]: CALL      R22 1 2      ; R22 := R22()
1480 [-]: GETGLOBAL R23 K2       ; R23 := 0x400E7765
1481 [-]: GETTABLE  R24 R22 K230 ; R24 := R22["levelKeyName"]
1482 [-]: CALL      R23 2 2      ; R23 := R23(R24)
1483 [-]: TEST      R23 1        ; if R23 then PC := 1489
1484 [-]: JMP       1489         ; PC := 1489
1485 [-]: GETGLOBAL R23 K231     ; R23 := 0x7C282057
1486 [-]: GETTABLE  R24 R22 K230 ; R24 := R22["levelKeyName"]
1487 [-]: CALL      R23 2 2      ; R23 := R23(R24)
1488 [-]: MOVE      R21 R23      ; R21 := R23
1489 [-]: TEST      R20 0        ; if not R20 then PC := 1500
1490 [-]: JMP       1500         ; PC := 1500
1491 [-]: GETGLOBAL R23 K2       ; R23 := 0x400E7765
1492 [-]: GETGLOBAL R24 K232     ; R24 := missionCompleteDiorama
1493 [-]: CALL      R23 2 2      ; R23 := R23(R24)
1494 [-]: TEST      R23 1        ; if R23 then PC := 1517
1495 [-]: JMP       1517         ; PC := 1517
1496 [-]: GETUPVAL  R23 U55      ; R23 := U55
1497 [-]: GETGLOBAL R24 K232     ; R24 := missionCompleteDiorama
1498 [-]: CALL      R23 2 1      ; R23(R24)
1499 [-]: JMP       1517         ; PC := 1517
1500 [-]: GETGLOBAL R23 K2       ; R23 := 0x400E7765
1501 [-]: MOVE      R24 R21      ; R24 := R21
1502 [-]: CALL      R23 2 2      ; R23 := R23(R24)
1503 [-]: TEST      R23 1        ; if R23 then PC := 1517
1504 [-]: JMP       1517         ; PC := 1517
1505 [-]: GETGLOBAL R23 K231     ; R23 := 0x7C282057
1506 [-]: SELF      R24 R21 K233 ; R25 := R21; R24 := R21["0x9E0B3260"]
1507 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
1508 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
1509 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
1510 [-]: MOVE      R25 R23      ; R25 := R23
1511 [-]: CALL      R24 2 2      ; R24 := R24(R25)
1512 [-]: TEST      R24 1        ; if R24 then PC := 1517
1513 [-]: JMP       1517         ; PC := 1517
1514 [-]: GETUPVAL  R24 U55      ; R24 := U55
1515 [-]: MOVE      R25 R23      ; R25 := R23
1516 [-]: CALL      R24 2 1      ; R24(R25)
1517 [-]: GETGLOBAL R24 K4       ; R24 := mMovie
1518 [-]: SELF      R24 R24 K15  ; R25 := R24; R24 := R24["0x1C19D966"]
1519 [-]: LOADK     R26 K144     ; R26 := "AffinityPanel.PanelBg"
1520 [-]: LOADK     R27 K42      ; R27 := "_visible"
1521 [-]: GETGLOBAL R28 K21      ; R28 := Engine
1522 [-]: GETTABLE  R28 R28 K234 ; R28 := R28["0x9490FE70"]
1523 [-]: CALL      R28 1 2      ; R28 := R28()
1524 [-]: TEST      R28 0        ; if not R28 then PC := 1531
1525 [-]: JMP       1531         ; PC := 1531
1526 [-]: GETUPVAL  R28 U39      ; R28 := U39
1527 [-]: LT        1 K168 R28   ; if 9 < R28 then PC := 1530
1528 [-]: JMP       1530         ; PC := 1530
1529 [-]: MOVE      R28 R0       ; R28 := R0
1530 [-]: MOVE      R28 R1       ; R28 := R1
1531 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
1532 [-]: GETUPVAL  R24 U56      ; R24 := U56
1533 [-]: CALL      R24 1 1      ; R24()
1534 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
1535 [-]: GETGLOBAL R25 K235     ; R25 := particleFX
1536 [-]: CALL      R24 2 2      ; R24 := R24(R25)
1537 [-]: TEST      R24 1        ; if R24 then PC := 1553
1538 [-]: JMP       1553         ; PC := 1553
1539 [-]: GETUPVAL  R24 U50      ; R24 := U50
1540 [-]: GETUPVAL  R25 U51      ; R25 := U51
1541 [-]: GETTABLE  R25 R25 K222 ; R25 := R25["MASTERY"]
1542 [-]: EQ        1 R24 R25    ; if R24 == R25 then PC := 1553
1543 [-]: JMP       1553         ; PC := 1553
1544 [-]: GETUPVAL  R24 U1       ; R24 := U1
1545 [-]: GETTABLE  R24 R24 K223 ; R24 := R24["0xBB2F7661"]
1546 [-]: GETGLOBAL R25 K4       ; R25 := mMovie
1547 [-]: GETGLOBAL R26 K235     ; R26 := particleFX
1548 [-]: LOADK     R27 K224     ; R27 := 960
1549 [-]: GETUPVAL  R28 U22      ; R28 := U22
1550 [-]: GETTABLE  R28 R28 K94  ; R28 := R28["Title"]
1551 [-]: ADD       R28 R28 K225 ; R28 := R28 + 30
1552 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
1553 [-]: GETUPVAL  R24 U50      ; R24 := U50
1554 [-]: GETUPVAL  R25 U51      ; R25 := U51
1555 [-]: GETTABLE  R25 R25 K222 ; R25 := R25["MASTERY"]
1556 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 1601
1557 [-]: JMP       1601         ; PC := 1601
1558 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
1559 [-]: GETGLOBAL R25 K236     ; R25 := masteryMovie
1560 [-]: CALL      R24 2 2      ; R24 := R24(R25)
1561 [-]: TEST      R24 1        ; if R24 then PC := 1587
1562 [-]: JMP       1587         ; PC := 1587
1563 [-]: GETGLOBAL R24 K23      ; R24 := _T
1564 [-]: SETTABLE  R24 K237 K38 ; R24["MasteryMovie_CompleteMode"] := "0x1"
1565 [-]: GETGLOBAL R24 K4       ; R24 := mMovie
1566 [-]: SELF      R24 R24 K5   ; R25 := R24; R24 := R24["0x5FF274BB"]
1567 [-]: GETGLOBAL R26 K236     ; R26 := masteryMovie
1568 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
1569 [-]: MOVE      R24 R57      ; R24 := R57
1570 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
1571 [-]: GETUPVAL  R25 U57      ; R25 := U57
1572 [-]: CALL      R24 2 2      ; R24 := R24(R25)
1573 [-]: TEST      R24 1        ; if R24 then PC := 1587
1574 [-]: JMP       1587         ; PC := 1587
1575 [-]: GETGLOBAL R24 K23      ; R24 := _T
1576 [-]: CLOSURE   R25 1        ; R25 := closure(Function #92.2)
1577 [-]: SETTABLE  R24 K238 R25 ; R24["EOM_OnMasteryClosed"] := R25
1578 [-]: GETUPVAL  R24 U57      ; R24 := U57
1579 [-]: SELF      R24 R24 K33  ; R25 := R24; R24 := R24["0x458F27A9"]
1580 [-]: LOADK     R26 K239     ; R26 := "SetCallBack"
1581 [-]: LOADK     R27 K238     ; R27 := "EOM_OnMasteryClosed"
1582 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
1583 [-]: GETGLOBAL R24 K4       ; R24 := mMovie
1584 [-]: SELF      R24 R24 K6   ; R25 := R24; R24 := R24["0x625791A8"]
1585 [-]: MOVE      R26 R0       ; R26 := R0
1586 [-]: CALL      R24 3 1      ; R24(R25,R26)
1587 [-]: TEST      R7 0         ; if not R7 then PC := 1601
1588 [-]: JMP       1601         ; PC := 1601
1589 [-]: GETGLOBAL R24 K2       ; R24 := 0x400E7765
1590 [-]: GETGLOBAL R25 K23      ; R25 := _T
1591 [-]: GETTABLE  R25 R25 K240 ; R25 := R25["SquadOverlay"]
1592 [-]: CALL      R24 2 2      ; R24 := R24(R25)
1593 [-]: TEST      R24 1        ; if R24 then PC := 1601
1594 [-]: JMP       1601         ; PC := 1601
1595 [-]: GETGLOBAL R24 K23      ; R24 := _T
1596 [-]: GETTABLE  R24 R24 K240 ; R24 := R24["SquadOverlay"]
1597 [-]: SELF      R24 R24 K33  ; R25 := R24; R24 := R24["0x458F27A9"]
1598 [-]: LOADK     R26 K241     ; R26 := "SetForceHidden"
1599 [-]: LOADK     R27 K242     ; R27 := "true"
1600 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
1601 [-]: MOVE      R24 R1       ; R24 := R1
1602 [-]: MOVE      R24 R2       ; R24 := R2
1603 [-]: TEST      R7 1         ; if R7 then PC := 1610
1604 [-]: JMP       1610         ; PC := 1610
1605 [-]: TEST      R5 1         ; if R5 then PC := 1610
1606 [-]: JMP       1610         ; PC := 1610
1607 [-]: MOVE      R24 R0       ; R24 := R0
1608 [-]: MOVE      R24 R23      ; R24 := R23
1609 [-]: JMP       1660         ; PC := 1660
1610 [-]: TEST      R7 1         ; if R7 then PC := 1642
1611 [-]: JMP       1642         ; PC := 1642
1612 [-]: TEST      R5 0         ; if not R5 then PC := 1642
1613 [-]: JMP       1642         ; PC := 1642
1614 [-]: GETGLOBAL R24 K29      ; R24 := gFlashMgr
1615 [-]: SELF      R24 R24 K32  ; R25 := R24; R24 := R24["0x616DD092"]
1616 [-]: GETUPVAL  R26 U16      ; R26 := U16
1617 [-]: GETTABLE  R26 R26 K243 ; R26 := R26["0xBCEEAD81"]
1618 [-]: CALL      R26 1 0      ; R26,... := R26()
1619 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
1620 [-]: GETGLOBAL R25 K2       ; R25 := 0x400E7765
1621 [-]: MOVE      R26 R24      ; R26 := R24
1622 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1623 [-]: TEST      R25 1        ; if R25 then PC := 1633
1624 [-]: JMP       1633         ; PC := 1633
1625 [-]: SELF      R25 R24 K33  ; R26 := R24; R25 := R24["0x458F27A9"]
1626 [-]: LOADK     R27 K244     ; R27 := "EnableInput"
1627 [-]: LOADK     R28 K35      ; R28 := ""
1628 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
1629 [-]: SELF      R25 R24 K33  ; R26 := R24; R25 := R24["0x458F27A9"]
1630 [-]: LOADK     R27 K245     ; R27 := "DisableInput"
1631 [-]: LOADK     R28 K35      ; R28 := ""
1632 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
1633 [-]: GETUPVAL  R25 U3       ; R25 := U3
1634 [-]: TEST      R25 1        ; if R25 then PC := 1660
1635 [-]: JMP       1660         ; PC := 1660
1636 [-]: GETGLOBAL R25 K23      ; R25 := _T
1637 [-]: GETTABLE  R25 R25 K246 ; R25 := R25["0x8ED0D55D"]
1638 [-]: CALL      R25 1 1      ; R25()
1639 [-]: MOVE      R25 R1       ; R25 := R1
1640 [-]: MOVE      R25 R58      ; R25 := R58
1641 [-]: JMP       1660         ; PC := 1660
1642 [-]: GETGLOBAL R25 K23      ; R25 := _T
1643 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["eomScreenMode"]
1644 [-]: GETUPVAL  R26 U12      ; R26 := U12
1645 [-]: GETTABLE  R26 R26 K69  ; R26 := R26["QUICK_PREVIEW"]
1646 [-]: EQ        1 R25 R26    ; if R25 == R26 then PC := 1660
1647 [-]: JMP       1660         ; PC := 1660
1648 [-]: GETGLOBAL R25 K23      ; R25 := _T
1649 [-]: GETTABLE  R25 R25 K247 ; R25 := R25["EnableUIInput"]
1650 [-]: EQ        1 R25 K28    ; if R25 == nil then PC := 1660
1651 [-]: JMP       1660         ; PC := 1660
1652 [-]: GETUPVAL  R25 U3       ; R25 := U3
1653 [-]: TEST      R25 1        ; if R25 then PC := 1660
1654 [-]: JMP       1660         ; PC := 1660
1655 [-]: GETGLOBAL R25 K23      ; R25 := _T
1656 [-]: GETTABLE  R25 R25 K246 ; R25 := R25["0x8ED0D55D"]
1657 [-]: CALL      R25 1 1      ; R25()
1658 [-]: MOVE      R25 R1       ; R25 := R1
1659 [-]: MOVE      R25 R58      ; R25 := R58
1660 [-]: TEST      R5 0         ; if not R5 then PC := 1678
1661 [-]: JMP       1678         ; PC := 1678
1662 [-]: GETGLOBAL R25 K2       ; R25 := 0x400E7765
1663 [-]: GETGLOBAL R26 K7       ; R26 := gGameRules
1664 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1665 [-]: TEST      R25 1        ; if R25 then PC := 1678
1666 [-]: JMP       1678         ; PC := 1678
1667 [-]: GETGLOBAL R25 K7       ; R25 := gGameRules
1668 [-]: SELF      R25 R25 K248 ; R26 := R25; R25 := R25["0x3B270AEB"]
1669 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1670 [-]: TEST      R25 1        ; if R25 then PC := 1678
1671 [-]: JMP       1678         ; PC := 1678
1672 [-]: GETGLOBAL R25 K7       ; R25 := gGameRules
1673 [-]: SELF      R25 R25 K249 ; R26 := R25; R25 := R25["0x6EF24057"]
1674 [-]: MOVE      R27 R1       ; R27 := R1
1675 [-]: CALL      R25 3 1      ; R25(R26,R27)
1676 [-]: MOVE      R25 R1       ; R25 := R1
1677 [-]: MOVE      R25 R59      ; R25 := R59
1678 [-]: GETUPVAL  R25 U4       ; R25 := U4
1679 [-]: TEST      R25 0        ; if not R25 then PC := 1685
1680 [-]: JMP       1685         ; PC := 1685
1681 [-]: GETUPVAL  R25 U53      ; R25 := U53
1682 [-]: GETUPVAL  R26 U51      ; R26 := U51
1683 [-]: GETTABLE  R26 R26 K250 ; R26 := R26["REP"]
1684 [-]: CALL      R25 2 1      ; R25(R26)
1685 [-]: GETUPVAL  R25 U17      ; R25 := U17
1686 [-]: CALL      R25 1 2      ; R25 := R25()
1687 [-]: TEST      R25 0        ; if not R25 then PC := 1696
1688 [-]: JMP       1696         ; PC := 1696
1689 [-]: GETGLOBAL R25 K7       ; R25 := gGameRules
1690 [-]: SELF      R25 R25 K204 ; R26 := R25; R25 := R25["0x4A57F63D"]
1691 [-]: GETGLOBAL R27 K251     ; R27 := onslaughtBackgroundTexture
1692 [-]: SELF      R27 R27 K206 ; R28 := R27; R27 := R27["0x1B252E3C"]
1693 [-]: CALL      R27 2 2      ; R27 := R27(R28)
1694 [-]: LOADK     R28 K252     ; R28 := "OnOnslaughtBackgroundReady"
1695 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
1696 [-]: RETURN    R0 1         ; return 


; Function #92.1:
;
; Name:            
; Defined at line: 5523
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #92.2:
;
; Name:            
; Defined at line: 5738
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "AutoClose"
  4 [-]: LOADK     R3 K3        ; R3 := "0"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 5791
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x93B1256B
  2 [-]: LOADK     R1 K1        ; R1 := "EndOfMatch.lua - Close"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: LOADK     R0 K2        ; R0 := -1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: GETGLOBAL R0 K3        ; R0 := _T
  9 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["eomScreenMode"]
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["ACTUAL_EOM"]
 12 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: GETGLOBAL R0 K6        ; R0 := _G
 15 [-]: SETTABLE  R0 K7 K8     ; R0["NemesisEndBody"] := nil
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: TEST      R0 1         ; if R0 then PC := 35
 18 [-]: JMP       35           ; PC := 35
 19 [-]: GETGLOBAL R0 K9        ; R0 := 0x52E17A90
 20 [-]: GETGLOBAL R1 K10       ; R1 := mMovie
 21 [-]: LOADK     R2 K11       ; R2 := "_root"
 22 [-]: GETGLOBAL R3 K12       ; R3 := UISys
 23 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["FlashInstance_SMOOTH_STEP"]
 24 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 25 [-]: LOADK     R5 K14       ; R5 := "_alpha"
 26 [-]: LOADK     R6 K15       ; R6 := "background"
 27 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 28 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 29 [-]: LOADK     R6 K16       ; R6 := 0
 30 [-]: LOADK     R7 K16       ; R7 := 0
 31 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 32 [-]: LOADK     R6 K17       ; R6 := 0.20000000298023
 33 [-]: LOADK     R7 K16       ; R7 := 0
 34 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 35 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 5807
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: MOVE      R0 R1        ; R0 := R1
 12 [-]: LE        0 R0 K2      ; if R0 > 0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADK     R0 K3        ; R0 := 0.0010000000474975
 15 [-]: MOVE      R0 R1        ; R0 := R1
 16 [-]: LOADK     R1 K4        ; R1 := 1
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 5821
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := 0.5
  2 [-]: LOADK     R1 K1        ; R1 := 1
  3 [-]: MOVE      R1 R0        ; R1 := R0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: TEST      R1 1         ; if R1 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: TEST      R1 0         ; if not R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: LOADK     R0 K2        ; R0 := 3.5
 13 [-]: SUB       R1 R0 K0     ; R1 := R0 - 0.5
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: EQ        1 R1 K3      ; if R1 == "" then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: LOADK     R0 K4        ; R0 := 4
 20 [-]: SUB       R1 R0 K0     ; R1 := R0 - 0.5
 21 [-]: MOVE      R1 R0        ; R1 := R0
 22 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 5837
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x458F27A9"]
  8 [-]: LOADK     R3 K2        ; R3 := "EaseInComplete"
  9 [-]: GETGLOBAL R4 K3        ; R4 := 0x9FAED6BC
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 12 [-]: CALL      R1 0 1       ; R1(R2,...)
 13 [-]: GETGLOBAL R1 K4        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["OverrideRewardDelay"]
 15 [-]: EQ        1 R1 K6      ; if R1 == nil then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R1 K4        ; R1 := _T
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["OverrideRewardDelay"]
 19 [-]: MOVE      R1 R1        ; R1 := R1
 20 [-]: GETGLOBAL R1 K4        ; R1 := _T
 21 [-]: SETTABLE  R1 K5 K6     ; R1["OverrideRewardDelay"] := nil
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0x87D2274C"]
 25 [-]: CALL      R1 1 2       ; R1 := R1()
 26 [-]: TEST      R1 0         ; if not R1 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: LOADK     R1 K8        ; R1 := 0
 29 [-]: MOVE      R1 R1        ; R1 := R1
 30 [-]: GETUPVAL  R1 U3        ; R1 := U3
 31 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x61494587"]
 32 [-]: LOADK     R3 K10       ; R3 := 1
 33 [-]: GETUPVAL  R4 U4        ; R4 := U4
 34 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 35 [-]: MOVE      R1 R0        ; R1 := R0
 36 [-]: MOVE      R1 R5        ; R1 := R5
 37 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 5855
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x87D2274C"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 44
  5 [-]: JMP       44           ; PC := 44
  6 [-]: GETGLOBAL R0 K1        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["eomScreenMode"]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ACTUAL_EOM"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 44
 11 [-]: JMP       44           ; PC := 44
 12 [-]: GETGLOBAL R0 K4        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xB8637349"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["syndicateXP"]
 16 [-]: LT        0 K7 R0      ; if 0 >= R0 then PC := 44
 17 [-]: JMP       44           ; PC := 44
 18 [-]: GETGLOBAL R0 K4        ; R0 := gGameRules
 19 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x889EAB05"]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 0         ; if not R0 then PC := 44
 22 [-]: JMP       44           ; PC := 44
 23 [-]: GETGLOBAL R0 K9        ; R0 := 0x400E7765
 24 [-]: GETUPVAL  R1 U2        ; R1 := U2
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 44
 27 [-]: JMP       44           ; PC := 44
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xC51A5C9D"]
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: LT        0 K11 R0     ; if 1 >= R0 then PC := 44
 32 [-]: JMP       44           ; PC := 44
 33 [-]: GETUPVAL  R0 U3        ; R0 := U3
 34 [-]: GETUPVAL  R1 U4        ; R1 := U4
 35 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["ITEMS"]
 36 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETUPVAL  R0 U2        ; R0 := U2
 39 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0x3BC31182"]
 40 [-]: GETUPVAL  R2 U2        ; R2 := U2
 41 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0xC51A5C9D"]
 42 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 43 [-]: CALL      R0 0 1       ; R0(R1,...)
 44 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 5866
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB8637349"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: LOADK     R1 K2        ; R1 := 1
  5 [-]: GETGLOBAL R2 K3        ; R2 := questMissionKeysToCheckForLoad
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 37        ; R1 -= R3; PC := 37
  9 [-]: GETGLOBAL R5 K3        ; R5 := questMissionKeysToCheckForLoad
 10 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 11 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["levelKeyName"]
 12 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 37
 13 [-]: JMP       37           ; PC := 37
 14 [-]: GETGLOBAL R7 K5        ; R7 := gRegion
 15 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7["0xD2075696"]
 16 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 17 [-]: SETTABLE  R7 K7 K8     ; R7["loadFromLobby"] := "0x0"
 18 [-]: SETTABLE  R7 K9 K10    ; R7["migrateServer"] := "0x1"
 19 [-]: SETTABLE  R7 K11 K10   ; R7["migrateSession"] := "0x1"
 20 [-]: GETGLOBAL R8 K13       ; R8 := 0x400E7765
 21 [-]: GETGLOBAL R9 K14       ; R9 := gMatchingService
 22 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0xD5E03646"]
 23 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 24 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 25 [-]: MOVE      R8 R8        ; R8 := R8
 26 [-]: SETTABLE  R7 K12 R8    ; R7["hostingMultiplayer"] := R8
 27 [-]: GETGLOBAL R8 K0        ; R8 := gGameRules
 28 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8["0xDF9F13B2"]
 29 [-]: MOVE      R10 R7       ; R10 := R7
 30 [-]: CALL      R8 3 1       ; R8(R9,R10)
 31 [-]: GETGLOBAL R8 K17       ; R8 := Engine
 32 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["0x56DF865D"]
 33 [-]: MOVE      R9 R7        ; R9 := R7
 34 [-]: CALL      R8 2 1       ; R8(R9)
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: RETURN    R8 2         ; return R8
 37 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 38 [-]: MOVE      R8 R0        ; R8 := R0
 39 [-]: RETURN    R8 2         ; return R8
 40 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 5886
; #Upvalues:       50
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K2        ; R0 := 0x6306558E
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x80D6B1A"]
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 17 [-]: GETGLOBAL R2 K4        ; R2 := gRegion
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 22 [-]: GETGLOBAL R2 K5        ; R2 := gGameRules
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: TEST      R1 0         ; if not R1 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: GETUPVAL  R1 U1        ; R1 := U1
 28 [-]: TEST      R1 0         ; if not R1 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: MOVE      R1 R0        ; R1 := R0
 31 [-]: MOVE      R1 R1        ; R1 := R1
 32 [-]: GETUPVAL  R1 U2        ; R1 := U2
 33 [-]: CALL      R1 1 1       ; R1()
 34 [-]: GETUPVAL  R1 U3        ; R1 := U3
 35 [-]: TEST      R1 0         ; if not R1 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: GETGLOBAL R1 K6        ; R1 := gFlashMgr
 39 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1089D053"]
 40 [-]: LOADK     R3 K8        ; R3 := "Lotus.EnableKudosSystem"
 41 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 42 [-]: TEST      R1 0         ; if not R1 then PC := 87
 43 [-]: JMP       87           ; PC := 87
 44 [-]: GETUPVAL  R1 U4        ; R1 := U4
 45 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x87D2274C"]
 46 [-]: CALL      R1 1 2       ; R1 := R1()
 47 [-]: TEST      R1 0         ; if not R1 then PC := 62
 48 [-]: JMP       62           ; PC := 62
 49 [-]: GETUPVAL  R1 U5        ; R1 := U5
 50 [-]: CALL      R1 1 2       ; R1 := R1()
 51 [-]: TEST      R1 1         ; if R1 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETUPVAL  R1 U6        ; R1 := U6
 54 [-]: CALL      R1 1 2       ; R1 := R1()
 55 [-]: TEST      R1 0         ; if not R1 then PC := 87
 56 [-]: JMP       87           ; PC := 87
 57 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 58 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xA2CB3BC5"]
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: TEST      R1 1         ; if R1 then PC := 87
 61 [-]: JMP       87           ; PC := 87
 62 [-]: GETGLOBAL R1 K11       ; R1 := _T
 63 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["eomScreenMode"]
 64 [-]: GETUPVAL  R2 U7        ; R2 := U7
 65 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["ACTUAL_EOM"]
 66 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 87
 67 [-]: JMP       87           ; PC := 87
 68 [-]: GETUPVAL  R1 U8        ; R1 := U8
 69 [-]: TEST      R1 1         ; if R1 then PC := 87
 70 [-]: JMP       87           ; PC := 87
 71 [-]: GETGLOBAL R1 K11       ; R1 := _T
 72 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["0x4AFC37AA"]
 73 [-]: LOADK     R2 K15       ; R2 := "AccoladesVoting"
 74 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 75 [-]: EQ        1 R1 K16     ; if R1 == nil then PC := 87
 76 [-]: JMP       87           ; PC := 87
 77 [-]: MOVE      R2 R1        ; R2 := R1
 78 [-]: MOVE      R2 R9        ; R2 := R9
 79 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 80 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x5FF274BB"]
 81 [-]: MOVE      R4 R1        ; R4 := R1
 82 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 83 [-]: MOVE      R2 R10       ; R2 := R10
 84 [-]: MOVE      R2 R1        ; R2 := R1
 85 [-]: MOVE      R2 R3        ; R2 := R3
 86 [-]: RETURN    R0 1         ; return 
 87 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 88 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x8BF7ABD3"]
 89 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 90 [-]: GETGLOBAL R3 K11       ; R3 := _T
 91 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["eomScreenMode"]
 92 [-]: GETUPVAL  R4 U7        ; R4 := U7
 93 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["DETAILED_PREVIEW"]
 94 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 97
 95 [-]: JMP       97           ; PC := 97
 96 [-]: MOVE      R3 R0        ; R3 := R0
 97 [-]: MOVE      R3 R1        ; R3 := R1
 98 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 118
 99 [-]: JMP       118          ; PC := 118
100 [-]: GETGLOBAL R2 K11       ; R2 := _T
101 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["eomScreenMode"]
102 [-]: GETUPVAL  R3 U7        ; R3 := U7
103 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["ACTUAL_EOM"]
104 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 107
105 [-]: JMP       107          ; PC := 107
106 [-]: JMP       118          ; PC := 118
107 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
108 [-]: GETGLOBAL R3 K20       ; R3 := topMenuMovie
109 [-]: CALL      R2 2 2       ; R2 := R2(R3)
110 [-]: TEST      R2 1         ; if R2 then PC := 118
111 [-]: JMP       118          ; PC := 118
112 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
113 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x1C19D966"]
114 [-]: LOADK     R4 K22       ; R4 := "_root"
115 [-]: LOADK     R5 K23       ; R5 := "_alpha"
116 [-]: LOADK     R6 K24       ; R6 := 100
117 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
118 [-]: GETGLOBAL R2 K11       ; R2 := _T
119 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["eomScreenMode"]
120 [-]: GETUPVAL  R3 U7        ; R3 := U7
121 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["ACTUAL_EOM"]
122 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 142
123 [-]: JMP       142          ; PC := 142
124 [-]: GETUPVAL  R2 U11       ; R2 := U11
125 [-]: TEST      R2 1         ; if R2 then PC := 142
126 [-]: JMP       142          ; PC := 142
127 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
128 [-]: GETGLOBAL R3 K5        ; R3 := gGameRules
129 [-]: CALL      R2 2 2       ; R2 := R2(R3)
130 [-]: TEST      R2 1         ; if R2 then PC := 142
131 [-]: JMP       142          ; PC := 142
132 [-]: GETGLOBAL R2 K5        ; R2 := gGameRules
133 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2["0x535FA304"]
134 [-]: CALL      R2 2 2       ; R2 := R2(R3)
135 [-]: TEST      R2 0         ; if not R2 then PC := 142
136 [-]: JMP       142          ; PC := 142
137 [-]: MOVE      R2 R1        ; R2 := R1
138 [-]: MOVE      R2 R11       ; R2 := R11
139 [-]: GETGLOBAL R2 K5        ; R2 := gGameRules
140 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2["0xC63BA25A"]
141 [-]: CALL      R2 2 1       ; R2(R3)
142 [-]: GETGLOBAL R2 K11       ; R2 := _T
143 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["eomScreenMode"]
144 [-]: GETUPVAL  R3 U7        ; R3 := U7
145 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["QUICK_PREVIEW"]
146 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 158
147 [-]: JMP       158          ; PC := 158
148 [-]: GETGLOBAL R2 K11       ; R2 := _T
149 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["eomInputIgnored"]
150 [-]: TEST      R2 1         ; if R2 then PC := 158
151 [-]: JMP       158          ; PC := 158
152 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
153 [-]: SELF      R2 R2 K29    ; R3 := R2; R2 := R2["0xDA6F41DE"]
154 [-]: MOVE      R4 R1        ; R4 := R1
155 [-]: CALL      R2 3 1       ; R2(R3,R4)
156 [-]: GETGLOBAL R2 K11       ; R2 := _T
157 [-]: SETTABLE  R2 K28 K30   ; R2["eomInputIgnored"] := "0x1"
158 [-]: GETGLOBAL R2 K4        ; R2 := gRegion
159 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2["0xA559F558"]
160 [-]: CALL      R2 2 2       ; R2 := R2(R3)
161 [-]: TEST      R2 1         ; if R2 then PC := 169
162 [-]: JMP       169          ; PC := 169
163 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
164 [-]: GETGLOBAL R3 K32       ; R3 := gMatchingService
165 [-]: SELF      R3 R3 K33    ; R4 := R3; R3 := R3["0xD5E03646"]
166 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
167 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
168 [-]: JMP       171          ; PC := 171
169 [-]: MOVE      R2 R0        ; R2 := R0
170 [-]: MOVE      R2 R1        ; R2 := R1
171 [-]: GETUPVAL  R3 U12       ; R3 := U12
172 [-]: GETTABLE  R3 R3 K34    ; R3 := R3["isPvp"]
173 [-]: TEST      R3 1         ; if R3 then PC := 281
174 [-]: JMP       281          ; PC := 281
175 [-]: GETUPVAL  R3 U13       ; R3 := U13
176 [-]: LE        0 K35 R3     ; if 0 > R3 then PC := 281
177 [-]: JMP       281          ; PC := 281
178 [-]: GETUPVAL  R3 U13       ; R3 := U13
179 [-]: ADD       R3 R3 R0     ; R3 := R3 + R0
180 [-]: MOVE      R3 R13       ; R3 := R13
181 [-]: GETUPVAL  R3 U14       ; R3 := U14
182 [-]: TEST      R3 1         ; if R3 then PC := 222
183 [-]: JMP       222          ; PC := 222
184 [-]: GETGLOBAL R3 K36       ; R3 := gClient
185 [-]: SELF      R3 R3 K37    ; R4 := R3; R3 := R3["0xBDD64BD5"]
186 [-]: CALL      R3 2 2       ; R3 := R3(R4)
187 [-]: TEST      R3 1         ; if R3 then PC := 194
188 [-]: JMP       194          ; PC := 194
189 [-]: GETGLOBAL R3 K36       ; R3 := gClient
190 [-]: SELF      R3 R3 K38    ; R4 := R3; R3 := R3["0x5E897FC8"]
191 [-]: CALL      R3 2 2       ; R3 := R3(R4)
192 [-]: TEST      R3 0         ; if not R3 then PC := 215
193 [-]: JMP       215          ; PC := 215
194 [-]: GETGLOBAL R3 K5        ; R3 := gGameRules
195 [-]: SELF      R3 R3 K39    ; R4 := R3; R3 := R3["0x12E4AF4E"]
196 [-]: CALL      R3 2 2       ; R3 := R3(R4)
197 [-]: TEST      R3 0         ; if not R3 then PC := 215
198 [-]: JMP       215          ; PC := 215
199 [-]: GETGLOBAL R3 K4        ; R3 := gRegion
200 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0xA559F558"]
201 [-]: CALL      R3 2 2       ; R3 := R3(R4)
202 [-]: TEST      R3 1         ; if R3 then PC := 207
203 [-]: JMP       207          ; PC := 207
204 [-]: GETUPVAL  R3 U13       ; R3 := U13
205 [-]: LT        1 K24 R3     ; if 100 < R3 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETGLOBAL R3 K40       ; R3 := Engine
208 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["0x1398DAFB"]
209 [-]: CALL      R3 1 2       ; R3 := R3()
210 [-]: TEST      R3 0         ; if not R3 then PC := 222
211 [-]: JMP       222          ; PC := 222
212 [-]: GETUPVAL  R3 U13       ; R3 := U13
213 [-]: LT        0 K42 R3     ; if 7 >= R3 then PC := 222
214 [-]: JMP       222          ; PC := 222
215 [-]: GETGLOBAL R3 K43       ; R3 := 0x93B1256B
216 [-]: LOADK     R4 K44       ; R4 := "EndOfMatch - disconnected, closing"
217 [-]: CALL      R3 2 1       ; R3(R4)
218 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
219 [-]: SELF      R3 R3 K45    ; R4 := R3; R3 := R3["0xA58BB96C"]
220 [-]: CALL      R3 2 1       ; R3(R4)
221 [-]: RETURN    R0 1         ; return 
222 [-]: GETUPVAL  R3 U15       ; R3 := U15
223 [-]: TEST      R3 1         ; if R3 then PC := 278
224 [-]: JMP       278          ; PC := 278
225 [-]: GETUPVAL  R3 U13       ; R3 := U13
226 [-]: LT        0 K46 R3     ; if 2 >= R3 then PC := 278
227 [-]: JMP       278          ; PC := 278
228 [-]: LOADK     R3 K47       ; R3 := ""
229 [-]: GETUPVAL  R4 U16       ; R4 := U16
230 [-]: TEST      R4 0         ; if not R4 then PC := 239
231 [-]: JMP       239          ; PC := 239
232 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
233 [-]: SELF      R4 R4 K48    ; R5 := R4; R4 := R4["0x5DB0BD4"]
234 [-]: LOADK     R6 K49       ; R6 := "/Lotus/Language/Menu/UpdatingDB"
235 [-]: MOVE      R7 R0        ; R7 := R0
236 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
237 [-]: MOVE      R3 R4        ; R3 := R4
238 [-]: JMP       245          ; PC := 245
239 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
240 [-]: SELF      R4 R4 K48    ; R5 := R4; R4 := R4["0x5DB0BD4"]
241 [-]: LOADK     R6 K50       ; R6 := "/Lotus/Language/Game/WaitingForPlayers"
242 [-]: MOVE      R7 R0        ; R7 := R0
243 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
244 [-]: MOVE      R3 R4        ; R3 := R4
245 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
246 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x1C19D966"]
247 [-]: LOADK     R6 K51       ; R6 := "Message.Message"
248 [-]: LOADK     R7 K52       ; R7 := "text"
249 [-]: MOVE      R8 R3        ; R8 := R3
250 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
251 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
252 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x1C19D966"]
253 [-]: LOADK     R6 K53       ; R6 := "Message.MessageShadow"
254 [-]: LOADK     R7 K52       ; R7 := "text"
255 [-]: MOVE      R8 R3        ; R8 := R3
256 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
257 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
258 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x1C19D966"]
259 [-]: LOADK     R6 K54       ; R6 := "Message"
260 [-]: LOADK     R7 K23       ; R7 := "_alpha"
261 [-]: GETGLOBAL R8 K55       ; R8 := math
262 [-]: GETTABLE  R8 R8 K56    ; R8 := R8["0xF93F7CC8"]
263 [-]: GETGLOBAL R9 K55       ; R9 := math
264 [-]: GETTABLE  R9 R9 K57    ; R9 := R9["0xBB3F1476"]
265 [-]: GETUPVAL  R10 U13      ; R10 := U13
266 [-]: MUL       R10 K58 R10  ; R10 := 5 * R10
267 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
268 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
269 [-]: MUL       R8 R8 K59    ; R8 := R8 * 30
270 [-]: ADD       R8 K60 R8    ; R8 := 50 + R8
271 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
272 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
273 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x1C19D966"]
274 [-]: LOADK     R6 K22       ; R6 := "_root"
275 [-]: LOADK     R7 K23       ; R7 := "_alpha"
276 [-]: LOADK     R8 K24       ; R8 := 100
277 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
278 [-]: TEST      R2 1         ; if R2 then PC := 281
279 [-]: JMP       281          ; PC := 281
280 [-]: RETURN    R0 1         ; return 
281 [-]: GETUPVAL  R4 U15       ; R4 := U15
282 [-]: TEST      R4 1         ; if R4 then PC := 316
283 [-]: JMP       316          ; PC := 316
284 [-]: GETUPVAL  R4 U4        ; R4 := U4
285 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0x87D2274C"]
286 [-]: CALL      R4 1 2       ; R4 := R4()
287 [-]: TEST      R4 0         ; if not R4 then PC := 316
288 [-]: JMP       316          ; PC := 316
289 [-]: GETGLOBAL R4 K4        ; R4 := gRegion
290 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0xA559F558"]
291 [-]: CALL      R4 2 2       ; R4 := R4(R5)
292 [-]: TEST      R4 0         ; if not R4 then PC := 316
293 [-]: JMP       316          ; PC := 316
294 [-]: GETGLOBAL R4 K5        ; R4 := gGameRules
295 [-]: SELF      R4 R4 K61    ; R5 := R4; R4 := R4["0xB8637349"]
296 [-]: CALL      R4 2 2       ; R4 := R4(R5)
297 [-]: GETTABLE  R4 R4 K62    ; R4 := R4["missionType"]
298 [-]: GETGLOBAL R5 K63       ; R5 := Lotus_Game
299 [-]: GETTABLE  R5 R5 K64    ; R5 := R5["MT_RAID"]
300 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 316
301 [-]: JMP       316          ; PC := 316
302 [-]: GETGLOBAL R5 K11       ; R5 := _T
303 [-]: GETTABLE  R5 R5 K65    ; R5 := R5["inventoriesCommitted"]
304 [-]: TEST      R5 0         ; if not R5 then PC := 316
305 [-]: JMP       316          ; PC := 316
306 [-]: GETUPVAL  R5 U17       ; R5 := U17
307 [-]: LT        0 R5 K35     ; if R5 >= 0 then PC := 316
308 [-]: JMP       316          ; PC := 316
309 [-]: GETGLOBAL R5 K43       ; R5 := 0x93B1256B
310 [-]: LOADK     R6 K66       ; R6 := "Inventories committed, closing EOM"
311 [-]: CALL      R5 2 1       ; R5(R6)
312 [-]: GETGLOBAL R5 K11       ; R5 := _T
313 [-]: SETTABLE  R5 K65 K67   ; R5["inventoriesCommitted"] := "0x0"
314 [-]: GETUPVAL  R5 U18       ; R5 := U18
315 [-]: CALL      R5 1 1       ; R5()
316 [-]: GETUPVAL  R5 U15       ; R5 := U15
317 [-]: TEST      R5 1         ; if R5 then PC := 476
318 [-]: JMP       476          ; PC := 476
319 [-]: GETUPVAL  R5 U19       ; R5 := U19
320 [-]: TEST      R5 0         ; if not R5 then PC := 476
321 [-]: JMP       476          ; PC := 476
322 [-]: GETUPVAL  R5 U20       ; R5 := U20
323 [-]: CALL      R5 1 2       ; R5 := R5()
324 [-]: GETTABLE  R6 R5 K62    ; R6 := R5["missionType"]
325 [-]: GETTABLE  R7 R5 K68    ; R7 := R5["goalTag"]
326 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
327 [-]: MOVE      R9 R7        ; R9 := R7
328 [-]: CALL      R8 2 2       ; R8 := R8(R9)
329 [-]: TEST      R8 1         ; if R8 then PC := 341
330 [-]: JMP       341          ; PC := 341
331 [-]: GETGLOBAL R8 K69       ; R8 := 0xEC274B1A
332 [-]: LOADK     R9 K70       ; R9 := "MoonQuestMissionThree"
333 [-]: CALL      R8 2 2       ; R8 := R8(R9)
334 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 341
335 [-]: JMP       341          ; PC := 341
336 [-]: GETUPVAL  R8 U21       ; R8 := U21
337 [-]: SELF      R8 R8 K71    ; R9 := R8; R8 := R8["0xAC367C49"]
338 [-]: GETUPVAL  R10 U22      ; R10 := U22
339 [-]: CALL      R8 3 1       ; R8(R9,R10)
340 [-]: JMP       374          ; PC := 374
341 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
342 [-]: MOVE      R9 R7        ; R9 := R7
343 [-]: CALL      R8 2 2       ; R8 := R8(R9)
344 [-]: TEST      R8 1         ; if R8 then PC := 356
345 [-]: JMP       356          ; PC := 356
346 [-]: GETGLOBAL R8 K69       ; R8 := 0xEC274B1A
347 [-]: LOADK     R9 K72       ; R9 := "MoonQuestMissionFour"
348 [-]: CALL      R8 2 2       ; R8 := R8(R9)
349 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 356
350 [-]: JMP       356          ; PC := 356
351 [-]: GETUPVAL  R8 U21       ; R8 := U21
352 [-]: SELF      R8 R8 K71    ; R9 := R8; R8 := R8["0xAC367C49"]
353 [-]: GETUPVAL  R10 U23      ; R10 := U23
354 [-]: CALL      R8 3 1       ; R8(R9,R10)
355 [-]: JMP       374          ; PC := 374
356 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
357 [-]: MOVE      R9 R7        ; R9 := R7
358 [-]: CALL      R8 2 2       ; R8 := R8(R9)
359 [-]: TEST      R8 1         ; if R8 then PC := 374
360 [-]: JMP       374          ; PC := 374
361 [-]: GETGLOBAL R8 K69       ; R8 := 0xEC274B1A
362 [-]: LOADK     R9 K73       ; R9 := "MoonQuestMissionFive"
363 [-]: CALL      R8 2 2       ; R8 := R8(R9)
364 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 374
365 [-]: JMP       374          ; PC := 374
366 [-]: GETUPVAL  R8 U21       ; R8 := U21
367 [-]: SELF      R8 R8 K71    ; R9 := R8; R8 := R8["0xAC367C49"]
368 [-]: GETUPVAL  R10 U23      ; R10 := U23
369 [-]: CALL      R8 3 1       ; R8(R9,R10)
370 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
371 [-]: SELF      R8 R8 K45    ; R9 := R8; R8 := R8["0xA58BB96C"]
372 [-]: CALL      R8 2 1       ; R8(R9)
373 [-]: RETURN    R0 1         ; return 
374 [-]: GETGLOBAL R8 K6        ; R8 := gFlashMgr
375 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8["0x1089D053"]
376 [-]: LOADK     R10 K74      ; R10 := "LotusGameRules.DemoMode"
377 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
378 [-]: TEST      R8 0         ; if not R8 then PC := 385
379 [-]: JMP       385          ; PC := 385
380 [-]: GETGLOBAL R8 K40       ; R8 := Engine
381 [-]: GETTABLE  R8 R8 K75    ; R8 := R8["0xC53FF352"]
382 [-]: MOVE      R9 R0        ; R9 := R0
383 [-]: CALL      R8 2 1       ; R8(R9)
384 [-]: JMP       473          ; PC := 473
385 [-]: GETGLOBAL R8 K63       ; R8 := Lotus_Game
386 [-]: GETTABLE  R8 R8 K64    ; R8 := R8["MT_RAID"]
387 [-]: EQ        0 R6 R8      ; if R6 ~= R8 then PC := 393
388 [-]: JMP       393          ; PC := 393
389 [-]: GETGLOBAL R8 K11       ; R8 := _T
390 [-]: GETTABLE  R8 R8 K76    ; R8 := R8["raidIntermediateStage"]
391 [-]: TEST      R8 1         ; if R8 then PC := 397
392 [-]: JMP       397          ; PC := 397
393 [-]: GETUPVAL  R8 U12       ; R8 := U12
394 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["isPvp"]
395 [-]: TEST      R8 0         ; if not R8 then PC := 401
396 [-]: JMP       401          ; PC := 401
397 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
398 [-]: SELF      R8 R8 K45    ; R9 := R8; R8 := R8["0xA58BB96C"]
399 [-]: CALL      R8 2 1       ; R8(R9)
400 [-]: JMP       473          ; PC := 473
401 [-]: GETGLOBAL R8 K63       ; R8 := Lotus_Game
402 [-]: GETTABLE  R8 R8 K77    ; R8 := R8["MT_RAILJACK"]
403 [-]: EQ        0 R6 R8      ; if R6 ~= R8 then PC := 414
404 [-]: JMP       414          ; PC := 414
405 [-]: GETGLOBAL R8 K5        ; R8 := gGameRules
406 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8["0xA2CB3BC5"]
407 [-]: CALL      R8 2 2       ; R8 := R8(R9)
408 [-]: TEST      R8 1         ; if R8 then PC := 414
409 [-]: JMP       414          ; PC := 414
410 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
411 [-]: SELF      R8 R8 K45    ; R9 := R8; R8 := R8["0xA58BB96C"]
412 [-]: CALL      R8 2 1       ; R8(R9)
413 [-]: JMP       473          ; PC := 473
414 [-]: GETUPVAL  R8 U24       ; R8 := U24
415 [-]: CALL      R8 1 2       ; R8 := R8()
416 [-]: TEST      R8 0         ; if not R8 then PC := 422
417 [-]: JMP       422          ; PC := 422
418 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
419 [-]: SELF      R8 R8 K45    ; R9 := R8; R8 := R8["0xA58BB96C"]
420 [-]: CALL      R8 2 1       ; R8(R9)
421 [-]: JMP       473          ; PC := 473
422 [-]: GETGLOBAL R8 K4        ; R8 := gRegion
423 [-]: SELF      R8 R8 K31    ; R9 := R8; R8 := R8["0xA559F558"]
424 [-]: CALL      R8 2 2       ; R8 := R8(R9)
425 [-]: TEST      R8 0         ; if not R8 then PC := 459
426 [-]: JMP       459          ; PC := 459
427 [-]: GETUPVAL  R8 U4        ; R8 := U4
428 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0x87D2274C"]
429 [-]: CALL      R8 1 2       ; R8 := R8()
430 [-]: TEST      R8 0         ; if not R8 then PC := 468
431 [-]: JMP       468          ; PC := 468
432 [-]: GETUPVAL  R8 U25       ; R8 := U25
433 [-]: GETTABLE  R8 R8 K78    ; R8 := R8["0xF81722A2"]
434 [-]: GETGLOBAL R9 K5        ; R9 := gGameRules
435 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9["0xA2CB3BC5"]
436 [-]: CALL      R9 2 2       ; R9 := R9(R10)
437 [-]: GETGLOBAL R10 K40      ; R10 := Engine
438 [-]: GETTABLE  R10 R10 K79  ; R10 := R10["GameRules_GS_FAILURE"]
439 [-]: GETGLOBAL R11 K40      ; R11 := Engine
440 [-]: GETTABLE  R11 R11 K80  ; R11 := R11["GameRules_GS_SUCCESS"]
441 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
442 [-]: GETUPVAL  R9 U25       ; R9 := U25
443 [-]: GETTABLE  R9 R9 K78    ; R9 := R9["0xF81722A2"]
444 [-]: GETGLOBAL R10 K63      ; R10 := Lotus_Game
445 [-]: GETTABLE  R10 R10 K77  ; R10 := R10["MT_RAILJACK"]
446 [-]: EQ        1 R6 R10     ; if R6 == R10 then PC := 449
447 [-]: JMP       449          ; PC := 449
448 [-]: MOVE      R10 R0       ; R10 := R0
449 [-]: MOVE      R10 R1       ; R10 := R1
450 [-]: LOADK     R11 K81      ; R11 := -1
451 [-]: LOADK     R12 K35      ; R12 := 0
452 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
453 [-]: GETGLOBAL R10 K5       ; R10 := gGameRules
454 [-]: SELF      R10 R10 K82  ; R11 := R10; R10 := R10["0xFDF2F5AC"]
455 [-]: MOVE      R12 R8       ; R12 := R8
456 [-]: MOVE      R13 R9       ; R13 := R9
457 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
458 [-]: JMP       468          ; PC := 468
459 [-]: GETUPVAL  R10 U26      ; R10 := U26
460 [-]: TEST      R10 1        ; if R10 then PC := 464
461 [-]: JMP       464          ; PC := 464
462 [-]: TEST      R2 0         ; if not R2 then PC := 468
463 [-]: JMP       468          ; PC := 468
464 [-]: GETGLOBAL R10 K40      ; R10 := Engine
465 [-]: GETTABLE  R10 R10 K75  ; R10 := R10["0xC53FF352"]
466 [-]: MOVE      R11 R0       ; R11 := R0
467 [-]: CALL      R10 2 1      ; R10(R11)
468 [-]: GETUPVAL  R10 U14      ; R10 := U14
469 [-]: TEST      R10 0        ; if not R10 then PC := 473
470 [-]: JMP       473          ; PC := 473
471 [-]: MOVE      R10 R1       ; R10 := R1
472 [-]: MOVE      R10 R15      ; R10 := R15
473 [-]: LOADK     R10 K35      ; R10 := 0
474 [-]: MOVE      R10 R13      ; R10 := R13
475 [-]: RETURN    R0 1         ; return 
476 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
477 [-]: GETUPVAL  R11 U27      ; R11 := U27
478 [-]: CALL      R10 2 2      ; R10 := R10(R11)
479 [-]: TEST      R10 1        ; if R10 then PC := 485
480 [-]: JMP       485          ; PC := 485
481 [-]: GETUPVAL  R10 U27      ; R10 := U27
482 [-]: SELF      R10 R10 K83  ; R11 := R10; R10 := R10["0x8C7099E9"]
483 [-]: MOVE      R12 R0       ; R12 := R0
484 [-]: CALL      R10 3 1      ; R10(R11,R12)
485 [-]: GETUPVAL  R10 U17      ; R10 := U17
486 [-]: LT        0 K35 R10    ; if 0 >= R10 then PC := 707
487 [-]: JMP       707          ; PC := 707
488 [-]: GETUPVAL  R10 U17      ; R10 := U17
489 [-]: SUB       R10 R10 R0   ; R10 := R10 - R0
490 [-]: MOVE      R10 R17      ; R10 := R17
491 [-]: GETGLOBAL R10 K55      ; R10 := math
492 [-]: GETTABLE  R10 R10 K84  ; R10 := R10["0xBCF846DF"]
493 [-]: GETUPVAL  R11 U17      ; R11 := U17
494 [-]: CALL      R10 2 2      ; R10 := R10(R11)
495 [-]: LOADK     R11 K47      ; R11 := ""
496 [-]: LT        0 K35 R10    ; if 0 >= R10 then PC := 510
497 [-]: JMP       510          ; PC := 510
498 [-]: GETUPVAL  R12 U28      ; R12 := U28
499 [-]: EQ        1 R12 K16    ; if R12 == nil then PC := 510
500 [-]: JMP       510          ; PC := 510
501 [-]: GETGLOBAL R12 K85      ; R12 := string
502 [-]: GETTABLE  R12 R12 K86  ; R12 := R12["0x4B1F4F58"]
503 [-]: GETUPVAL  R13 U28      ; R13 := U28
504 [-]: GETUPVAL  R14 U25      ; R14 := U25
505 [-]: GETTABLE  R14 R14 K87  ; R14 := R14["0xB57E56DF"]
506 [-]: MOVE      R15 R10      ; R15 := R10
507 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
508 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
509 [-]: MOVE      R11 R12      ; R11 := R12
510 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
511 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12["0x1C19D966"]
512 [-]: LOADK     R14 K51      ; R14 := "Message.Message"
513 [-]: LOADK     R15 K52      ; R15 := "text"
514 [-]: MOVE      R16 R11      ; R16 := R11
515 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
516 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
517 [-]: SELF      R12 R12 K21  ; R13 := R12; R12 := R12["0x1C19D966"]
518 [-]: LOADK     R14 K53      ; R14 := "Message.MessageShadow"
519 [-]: LOADK     R15 K52      ; R15 := "text"
520 [-]: MOVE      R16 R11      ; R16 := R11
521 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
522 [-]: GETUPVAL  R12 U29      ; R12 := U29
523 [-]: TEST      R12 1        ; if R12 then PC := 557
524 [-]: JMP       557          ; PC := 557
525 [-]: GETUPVAL  R12 U17      ; R12 := U17
526 [-]: GETUPVAL  R13 U30      ; R13 := U30
527 [-]: DIV       R13 R13 K88  ; R13 := R13 / 3
528 [-]: LT        0 R12 R13    ; if R12 >= R13 then PC := 557
529 [-]: JMP       557          ; PC := 557
530 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
531 [-]: GETGLOBAL R13 K5       ; R13 := gGameRules
532 [-]: CALL      R12 2 2      ; R12 := R12(R13)
533 [-]: TEST      R12 1        ; if R12 then PC := 555
534 [-]: JMP       555          ; PC := 555
535 [-]: GETGLOBAL R12 K5       ; R12 := gGameRules
536 [-]: SELF      R12 R12 K89  ; R13 := R12; R12 := R12["0x8B598ED4"]
537 [-]: GETGLOBAL R14 K90      ; R14 := gLotusBaseGameRulesType
538 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
539 [-]: TEST      R12 0        ; if not R12 then PC := 555
540 [-]: JMP       555          ; PC := 555
541 [-]: GETGLOBAL R12 K5       ; R12 := gGameRules
542 [-]: SELF      R12 R12 K10  ; R13 := R12; R12 := R12["0xA2CB3BC5"]
543 [-]: CALL      R12 2 2      ; R12 := R12(R13)
544 [-]: TEST      R12 0        ; if not R12 then PC := 555
545 [-]: JMP       555          ; PC := 555
546 [-]: GETUPVAL  R12 U31      ; R12 := U31
547 [-]: CALL      R12 1 2      ; R12 := R12()
548 [-]: TEST      R12 0        ; if not R12 then PC := 555
549 [-]: JMP       555          ; PC := 555
550 [-]: MOVE      R12 R0       ; R12 := R0
551 [-]: MOVE      R12 R14      ; R12 := R14
552 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
553 [-]: SELF      R12 R12 K45  ; R13 := R12; R12 := R12["0xA58BB96C"]
554 [-]: CALL      R12 2 1      ; R12(R13)
555 [-]: MOVE      R12 R1       ; R12 := R1
556 [-]: MOVE      R12 R29      ; R12 := R29
557 [-]: GETUPVAL  R12 U17      ; R12 := U17
558 [-]: LT        0 R12 K35    ; if R12 >= 0 then PC := 601
559 [-]: JMP       601          ; PC := 601
560 [-]: GETUPVAL  R12 U16      ; R12 := U16
561 [-]: TEST      R12 1        ; if R12 then PC := 571
562 [-]: JMP       571          ; PC := 571
563 [-]: GETUPVAL  R12 U12      ; R12 := U12
564 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["isPvp"]
565 [-]: TEST      R12 0        ; if not R12 then PC := 599
566 [-]: JMP       599          ; PC := 599
567 [-]: GETUPVAL  R12 U12      ; R12 := U12
568 [-]: GETTABLE  R12 R12 K91  ; R12 := R12["allPlayersCommitted"]
569 [-]: TEST      R12 1        ; if R12 then PC := 599
570 [-]: JMP       599          ; PC := 599
571 [-]: GETUPVAL  R12 U12      ; R12 := U12
572 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["isPvp"]
573 [-]: TEST      R12 1        ; if R12 then PC := 581
574 [-]: JMP       581          ; PC := 581
575 [-]: GETUPVAL  R12 U6       ; R12 := U6
576 [-]: CALL      R12 1 2      ; R12 := R12()
577 [-]: TEST      R12 1        ; if R12 then PC := 581
578 [-]: JMP       581          ; PC := 581
579 [-]: MOVE      R12 R1       ; R12 := R1
580 [-]: MOVE      R12 R32      ; R12 := R32
581 [-]: GETGLOBAL R12 K1       ; R12 := mMovie
582 [-]: SELF      R12 R12 K48  ; R13 := R12; R12 := R12["0x5DB0BD4"]
583 [-]: LOADK     R14 K49      ; R14 := "/Lotus/Language/Menu/UpdatingDB"
584 [-]: MOVE      R15 R0       ; R15 := R0
585 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
586 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
587 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13["0x1C19D966"]
588 [-]: LOADK     R15 K51      ; R15 := "Message.Message"
589 [-]: LOADK     R16 K52      ; R16 := "text"
590 [-]: MOVE      R17 R12      ; R17 := R12
591 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
592 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
593 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13["0x1C19D966"]
594 [-]: LOADK     R15 K53      ; R15 := "Message.MessageShadow"
595 [-]: LOADK     R16 K52      ; R16 := "text"
596 [-]: MOVE      R17 R12      ; R17 := R12
597 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
598 [-]: JMP       601          ; PC := 601
599 [-]: GETUPVAL  R13 U18      ; R13 := U18
600 [-]: CALL      R13 1 1      ; R13()
601 [-]: GETUPVAL  R13 U14      ; R13 := U14
602 [-]: TEST      R13 1        ; if R13 then PC := 707
603 [-]: JMP       707          ; PC := 707
604 [-]: GETUPVAL  R13 U17      ; R13 := U17
605 [-]: LE        0 R13 K92    ; if R13 > 1 then PC := 634
606 [-]: JMP       634          ; PC := 634
607 [-]: GETUPVAL  R13 U33      ; R13 := U33
608 [-]: TEST      R13 0        ; if not R13 then PC := 613
609 [-]: JMP       613          ; PC := 613
610 [-]: LOADK     R13 K35      ; R13 := 0
611 [-]: MOVE      R13 R34      ; R13 := R34
612 [-]: JMP       620          ; PC := 620
613 [-]: GETGLOBAL R13 K93      ; R13 := 0x6374FD98
614 [-]: GETUPVAL  R14 U34      ; R14 := U34
615 [-]: SUB       R14 R14 R0   ; R14 := R14 - R0
616 [-]: LOADK     R15 K35      ; R15 := 0
617 [-]: LOADK     R16 K92      ; R16 := 1
618 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
619 [-]: MOVE      R13 R34      ; R13 := R34
620 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
621 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13["0x1C19D966"]
622 [-]: LOADK     R15 K22      ; R15 := "_root"
623 [-]: LOADK     R16 K23      ; R16 := "_alpha"
624 [-]: GETUPVAL  R17 U34      ; R17 := U34
625 [-]: MUL       R17 R17 K24  ; R17 := R17 * 100
626 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
627 [-]: GETGLOBAL R13 K1       ; R13 := mMovie
628 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13["0x1C19D966"]
629 [-]: LOADK     R15 K94      ; R15 := "background"
630 [-]: LOADK     R16 K23      ; R16 := "_alpha"
631 [-]: GETUPVAL  R17 U34      ; R17 := U34
632 [-]: MUL       R17 R17 K24  ; R17 := R17 * 100
633 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
634 [-]: GETUPVAL  R13 U17      ; R13 := U17
635 [-]: GETUPVAL  R14 U35      ; R14 := U35
636 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 707
637 [-]: JMP       707          ; PC := 707
638 [-]: GETUPVAL  R13 U36      ; R13 := U36
639 [-]: TEST      R13 1        ; if R13 then PC := 707
640 [-]: JMP       707          ; PC := 707
641 [-]: MOVE      R13 R1       ; R13 := R1
642 [-]: MOVE      R13 R36      ; R13 := R36
643 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
644 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
645 [-]: LOADK     R15 K96      ; R15 := "AffinityPanel"
646 [-]: GETGLOBAL R16 K97      ; R16 := UISys
647 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
648 [-]: NEWTABLE  R17 2 0      ; R17 := {}
649 [-]: LOADK     R18 K99      ; R18 := "_y"
650 [-]: LOADK     R19 K23      ; R19 := "_alpha"
651 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
652 [-]: NEWTABLE  R18 2 0      ; R18 := {}
653 [-]: LOADK     R19 K24      ; R19 := 100
654 [-]: LOADK     R20 K35      ; R20 := 0
655 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
656 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
657 [-]: LOADK     R20 K100     ; R20 := 0.30000001192093
658 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
659 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
660 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
661 [-]: LOADK     R15 K101     ; R15 := "RewardsPanel"
662 [-]: GETGLOBAL R16 K97      ; R16 := UISys
663 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
664 [-]: NEWTABLE  R17 2 0      ; R17 := {}
665 [-]: LOADK     R18 K99      ; R18 := "_y"
666 [-]: LOADK     R19 K23      ; R19 := "_alpha"
667 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
668 [-]: NEWTABLE  R18 2 0      ; R18 := {}
669 [-]: LOADK     R19 K102     ; R19 := 300
670 [-]: LOADK     R20 K35      ; R20 := 0
671 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
672 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
673 [-]: LOADK     R20 K100     ; R20 := 0.30000001192093
674 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
675 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
676 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
677 [-]: LOADK     R15 K103     ; R15 := "ModsPanel"
678 [-]: GETGLOBAL R16 K97      ; R16 := UISys
679 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
680 [-]: NEWTABLE  R17 2 0      ; R17 := {}
681 [-]: LOADK     R18 K99      ; R18 := "_y"
682 [-]: LOADK     R19 K23      ; R19 := "_alpha"
683 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
684 [-]: NEWTABLE  R18 2 0      ; R18 := {}
685 [-]: LOADK     R19 K104     ; R19 := 800
686 [-]: LOADK     R20 K35      ; R20 := 0
687 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
688 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
689 [-]: LOADK     R20 K100     ; R20 := 0.30000001192093
690 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
691 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
692 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
693 [-]: LOADK     R15 K105     ; R15 := "StatsPanel"
694 [-]: GETGLOBAL R16 K97      ; R16 := UISys
695 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
696 [-]: NEWTABLE  R17 2 0      ; R17 := {}
697 [-]: LOADK     R18 K99      ; R18 := "_y"
698 [-]: LOADK     R19 K23      ; R19 := "_alpha"
699 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
700 [-]: NEWTABLE  R18 2 0      ; R18 := {}
701 [-]: LOADK     R19 K106     ; R19 := 1100
702 [-]: LOADK     R20 K35      ; R20 := 0
703 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
704 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
705 [-]: LOADK     R20 K100     ; R20 := 0.30000001192093
706 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
707 [-]: GETUPVAL  R13 U37      ; R13 := U37
708 [-]: LT        0 K35 R13    ; if 0 >= R13 then PC := 809
709 [-]: JMP       809          ; PC := 809
710 [-]: GETGLOBAL R13 K11      ; R13 := _T
711 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["eomScreenMode"]
712 [-]: GETUPVAL  R14 U7       ; R14 := U7
713 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["ACTUAL_EOM"]
714 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 809
715 [-]: JMP       809          ; PC := 809
716 [-]: GETUPVAL  R13 U37      ; R13 := U37
717 [-]: SUB       R13 R13 R0   ; R13 := R13 - R0
718 [-]: MOVE      R13 R37      ; R13 := R37
719 [-]: GETUPVAL  R13 U37      ; R13 := U37
720 [-]: LE        0 R13 K35    ; if R13 > 0 then PC := 809
721 [-]: JMP       809          ; PC := 809
722 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
723 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
724 [-]: LOADK     R15 K96      ; R15 := "AffinityPanel"
725 [-]: GETGLOBAL R16 K97      ; R16 := UISys
726 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
727 [-]: NEWTABLE  R17 2 0      ; R17 := {}
728 [-]: LOADK     R18 K99      ; R18 := "_y"
729 [-]: LOADK     R19 K23      ; R19 := "_alpha"
730 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
731 [-]: NEWTABLE  R18 2 0      ; R18 := {}
732 [-]: GETUPVAL  R19 U38      ; R19 := U38
733 [-]: GETTABLE  R19 R19 K107 ; R19 := R19["Affinity"]
734 [-]: LOADK     R20 K24      ; R20 := 100
735 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
736 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
737 [-]: LOADK     R20 K108     ; R20 := 0.80000001192093
738 [-]: CLOSURE   R21 0        ; R21 := closure(Function #99.1)
739 [-]: GETUPVAL  R0 U39       ; R0 := U39
740 [-]: CALL      R13 9 1      ; R13(R14,R15,R16,R17,R18,R19,R20,R21)
741 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
742 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
743 [-]: LOADK     R15 K101     ; R15 := "RewardsPanel"
744 [-]: GETGLOBAL R16 K97      ; R16 := UISys
745 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
746 [-]: NEWTABLE  R17 2 0      ; R17 := {}
747 [-]: LOADK     R18 K99      ; R18 := "_y"
748 [-]: LOADK     R19 K23      ; R19 := "_alpha"
749 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
750 [-]: NEWTABLE  R18 2 0      ; R18 := {}
751 [-]: GETUPVAL  R19 U38      ; R19 := U38
752 [-]: GETTABLE  R19 R19 K109 ; R19 := R19["Rewards"]
753 [-]: LOADK     R20 K24      ; R20 := 100
754 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
755 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
756 [-]: LOADK     R20 K108     ; R20 := 0.80000001192093
757 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
758 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
759 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
760 [-]: LOADK     R15 K103     ; R15 := "ModsPanel"
761 [-]: GETGLOBAL R16 K97      ; R16 := UISys
762 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
763 [-]: NEWTABLE  R17 2 0      ; R17 := {}
764 [-]: LOADK     R18 K99      ; R18 := "_y"
765 [-]: LOADK     R19 K23      ; R19 := "_alpha"
766 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
767 [-]: NEWTABLE  R18 2 0      ; R18 := {}
768 [-]: GETUPVAL  R19 U38      ; R19 := U38
769 [-]: GETTABLE  R19 R19 K110 ; R19 := R19["Mods"]
770 [-]: LOADK     R20 K24      ; R20 := 100
771 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
772 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
773 [-]: LOADK     R20 K108     ; R20 := 0.80000001192093
774 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
775 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
776 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
777 [-]: LOADK     R15 K105     ; R15 := "StatsPanel"
778 [-]: GETGLOBAL R16 K97      ; R16 := UISys
779 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
780 [-]: NEWTABLE  R17 2 0      ; R17 := {}
781 [-]: LOADK     R18 K99      ; R18 := "_y"
782 [-]: LOADK     R19 K23      ; R19 := "_alpha"
783 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
784 [-]: NEWTABLE  R18 2 0      ; R18 := {}
785 [-]: GETUPVAL  R19 U38      ; R19 := U38
786 [-]: GETTABLE  R19 R19 K111 ; R19 := R19["Stats"]
787 [-]: LOADK     R20 K24      ; R20 := 100
788 [-]: SETLIST   R18 2 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 2
789 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
790 [-]: LOADK     R20 K108     ; R20 := 0.80000001192093
791 [-]: CLOSURE   R21 1        ; R21 := closure(Function #99.2)
792 [-]: GETUPVAL  R0 U40       ; R0 := U40
793 [-]: GETUPVAL  R0 U25       ; R0 := U25
794 [-]: CALL      R13 9 1      ; R13(R14,R15,R16,R17,R18,R19,R20,R21)
795 [-]: GETGLOBAL R13 K95      ; R13 := 0x52E17A90
796 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
797 [-]: LOADK     R15 K54      ; R15 := "Message"
798 [-]: GETGLOBAL R16 K97      ; R16 := UISys
799 [-]: GETTABLE  R16 R16 K98  ; R16 := R16["FlashInstance_EASE_OUT"]
800 [-]: NEWTABLE  R17 1 0      ; R17 := {}
801 [-]: LOADK     R18 K23      ; R18 := "_alpha"
802 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
803 [-]: NEWTABLE  R18 1 0      ; R18 := {}
804 [-]: LOADK     R19 K24      ; R19 := 100
805 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
806 [-]: LOADK     R19 K100     ; R19 := 0.30000001192093
807 [-]: LOADK     R20 K108     ; R20 := 0.80000001192093
808 [-]: CALL      R13 8 1      ; R13(R14,R15,R16,R17,R18,R19,R20)
809 [-]: GETUPVAL  R13 U15      ; R13 := U15
810 [-]: TEST      R13 1        ; if R13 then PC := 820
811 [-]: JMP       820          ; PC := 820
812 [-]: GETUPVAL  R13 U4       ; R13 := U4
813 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["0x87D2274C"]
814 [-]: CALL      R13 1 2      ; R13 := R13()
815 [-]: TEST      R13 1        ; if R13 then PC := 820
816 [-]: JMP       820          ; PC := 820
817 [-]: GETUPVAL  R13 U41      ; R13 := U41
818 [-]: MOVE      R14 R0       ; R14 := R0
819 [-]: CALL      R13 2 1      ; R13(R14)
820 [-]: GETUPVAL  R13 U42      ; R13 := U42
821 [-]: TEST      R13 0        ; if not R13 then PC := 829
822 [-]: JMP       829          ; PC := 829
823 [-]: GETGLOBAL R13 K11      ; R13 := _T
824 [-]: GETTABLE  R13 R13 K112 ; R13 := R13["SetButtons"]
825 [-]: EQ        1 R13 K16    ; if R13 == nil then PC := 829
826 [-]: JMP       829          ; PC := 829
827 [-]: GETUPVAL  R13 U39      ; R13 := U39
828 [-]: CALL      R13 1 1      ; R13()
829 [-]: GETGLOBAL R13 K11      ; R13 := _T
830 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["eomScreenMode"]
831 [-]: GETUPVAL  R14 U7       ; R14 := U7
832 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["QUICK_PREVIEW"]
833 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 863
834 [-]: JMP       863          ; PC := 863
835 [-]: GETUPVAL  R13 U43      ; R13 := U43
836 [-]: CALL      R13 1 1      ; R13()
837 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
838 [-]: GETUPVAL  R14 U44      ; R14 := U44
839 [-]: CALL      R13 2 2      ; R13 := R13(R14)
840 [-]: TEST      R13 1        ; if R13 then PC := 848
841 [-]: JMP       848          ; PC := 848
842 [-]: GETUPVAL  R13 U44      ; R13 := U44
843 [-]: SELF      R13 R13 K113 ; R14 := R13; R13 := R13["0x51396186"]
844 [-]: CLOSURE   R15 2        ; R15 := closure(Function #99.3)
845 [-]: GETUPVAL  R0 U45       ; R0 := U45
846 [-]: MOVE      R0 R0        ; R0 := R0
847 [-]: CALL      R13 3 1      ; R13(R14,R15)
848 [-]: GETUPVAL  R13 U0       ; R13 := U0
849 [-]: TEST      R13 0        ; if not R13 then PC := 863
850 [-]: JMP       863          ; PC := 863
851 [-]: GETUPVAL  R13 U46      ; R13 := U46
852 [-]: EQ        0 R13 K35    ; if R13 ~= 0 then PC := 863
853 [-]: JMP       863          ; PC := 863
854 [-]: GETUPVAL  R13 U17      ; R13 := U17
855 [-]: LT        0 R13 K114   ; if R13 >= 3.5 then PC := 863
856 [-]: JMP       863          ; PC := 863
857 [-]: GETUPVAL  R13 U47      ; R13 := U47
858 [-]: CALL      R13 1 1      ; R13()
859 [-]: LOADK     R13 K81      ; R13 := -1
860 [-]: MOVE      R13 R46      ; R13 := R46
861 [-]: GETUPVAL  R13 U48      ; R13 := U48
862 [-]: CALL      R13 1 1      ; R13()
863 [-]: GETGLOBAL R13 K11      ; R13 := _T
864 [-]: GETTABLE  R13 R13 K115 ; R13 := R13["MissionEnded"]
865 [-]: TEST      R13 1        ; if R13 then PC := 892
866 [-]: JMP       892          ; PC := 892
867 [-]: GETUPVAL  R13 U4       ; R13 := U4
868 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["0x87D2274C"]
869 [-]: CALL      R13 1 2      ; R13 := R13()
870 [-]: TEST      R13 0        ; if not R13 then PC := 892
871 [-]: JMP       892          ; PC := 892
872 [-]: GETUPVAL  R13 U4       ; R13 := U4
873 [-]: GETTABLE  R13 R13 K116 ; R13 := R13["0xC65D09DD"]
874 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
875 [-]: GETGLOBAL R15 K5       ; R15 := gGameRules
876 [-]: SELF      R15 R15 K117 ; R16 := R15; R15 := R15["0x8AC0DDF4"]
877 [-]: CALL      R15 2 2      ; R15 := R15(R16)
878 [-]: LOADK     R16 K118     ; R16 := "Compact"
879 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
880 [-]: GETGLOBAL R14 K1       ; R14 := mMovie
881 [-]: SELF      R14 R14 K48  ; R15 := R14; R14 := R14["0x5DB0BD4"]
882 [-]: LOADK     R16 K119     ; R16 := "/Lotus/Language/Menu/MissionStats_Time"
883 [-]: MOVE      R17 R1       ; R17 := R1
884 [-]: NEWTABLE  R18 0 1      ; R18 := {}
885 [-]: SETTABLE  R18 K120 R13 ; R18["TIME"] := R13
886 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
887 [-]: GETUPVAL  R15 U49      ; R15 := U49
888 [-]: LOADK     R16 K105     ; R16 := "StatsPanel"
889 [-]: MOVE      R17 R14      ; R17 := R14
890 [-]: LOADK     R18 K121     ; R18 := 850
891 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
892 [-]: RETURN    R0 1         ; return 


; Function #99.1:
;
; Name:            
; Defined at line: 6109
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #99.2:
;
; Name:            
; Defined at line: 6113
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xD1BD9D6"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := "StatsPanel.Player1.Icon"
  5 [-]: GETGLOBAL R3 K3        ; R3 := statsFX
  6 [-]: LOADK     R4 K4        ; R4 := 0
  7 [-]: LOADK     R5 K4        ; R5 := 0
  8 [-]: CALL      R0 6 2       ; R0 := R0(R1,R2,R3,R4,R5)
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: RETURN    R0 1         ; return 


; Function #99.3:
;
; Name:            
; Defined at line: 6133
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x8C7099E9"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 6154
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LEN       R1 R1        ; R1 := # R1
  3 [-]: LOADK     R2 K0        ; R2 := 1
  4 [-]: LOADK     R3 K1        ; R3 := -1
  5 [-]: FORPREP   R1 27        ; R1 -= R3; PC := 27
  6 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
  9 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["storeItem"]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 15 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["storeItem"]
 16 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8292A1EF"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: GETGLOBAL R6 K5        ; R6 := Engine
 19 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Item_FusionBundles"]
 20 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R5 K7        ; R5 := table
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["0xCDB1FD5E"]
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: MOVE      R7 R4        ; R7 := R4
 26 [-]: CALL      R5 3 1       ; R5(R6,R7)
 27 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 28 [-]: LEN       R5 R0        ; R5 := # R0
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: LEN       R6 R6        ; R6 := # R6
 31 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: GETGLOBAL R5 K9        ; R5 := 0x93B1256B
 34 [-]: LOADK     R6 K10       ; R6 := "WRONG NUM REWARDS"
 35 [-]: CALL      R5 2 1       ; R5(R6)
 36 [-]: LOADK     R5 K0        ; R5 := 1
 37 [-]: LEN       R6 R0        ; R6 := # R0
 38 [-]: LOADK     R7 K0        ; R7 := 1
 39 [-]: FORPREP   R5 82        ; R5 -= R7; PC := 82
 40 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
 41 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 42 [-]: GETTABLE  R11 R9 K12   ; R11 := R9["StoreItem"]
 43 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 44 [-]: SETTABLE  R9 K3 R10    ; R9["storeItem"] := R10
 45 [-]: GETTABLE  R10 R9 K14   ; R10 := R9["ItemCount"]
 46 [-]: SETTABLE  R9 K13 R10   ; R9["itemCount"] := R10
 47 [-]: GETTABLE  R10 R9 K16   ; R10 := R9["UpgradeLevel"]
 48 [-]: SETTABLE  R9 K15 R10   ; R9["levelOverride"] := R10
 49 [-]: GETTABLE  R10 R9 K18   ; R10 := R9["Credits"]
 50 [-]: SETTABLE  R9 K17 R10   ; R9["credits"] := R10
 51 [-]: GETTABLE  R10 R9 K15   ; R10 := R9["levelOverride"]
 52 [-]: EQ        0 R10 K19    ; if R10 ~= nil then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: SETTABLE  R9 K15 K20   ; R9["levelOverride"] := 0
 55 [-]: GETUPVAL  R10 U0       ; R10 := U0
 56 [-]: LEN       R10 R10      ; R10 := # R10
 57 [-]: LE        0 R8 R10     ; if R8 > R10 then PC := 82
 58 [-]: JMP       82           ; PC := 82
 59 [-]: GETUPVAL  R10 U0       ; R10 := U0
 60 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 61 [-]: GETTABLE  R11 R9 K3    ; R11 := R9["storeItem"]
 62 [-]: GETTABLE  R12 R10 K3   ; R12 := R10["storeItem"]
 63 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 68
 64 [-]: JMP       68           ; PC := 68
 65 [-]: GETGLOBAL R11 K9       ; R11 := 0x93B1256B
 66 [-]: LOADK     R12 K21      ; R12 := "WRONG TYPE"
 67 [-]: CALL      R11 2 1      ; R11(R12)
 68 [-]: GETTABLE  R11 R9 K13   ; R11 := R9["itemCount"]
 69 [-]: GETTABLE  R12 R10 K13  ; R12 := R10["itemCount"]
 70 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 75
 71 [-]: JMP       75           ; PC := 75
 72 [-]: GETGLOBAL R11 K9       ; R11 := 0x93B1256B
 73 [-]: LOADK     R12 K22      ; R12 := "WRONG COUNT"
 74 [-]: CALL      R11 2 1      ; R11(R12)
 75 [-]: GETTABLE  R11 R9 K15   ; R11 := R9["levelOverride"]
 76 [-]: GETTABLE  R12 R10 K15  ; R12 := R10["levelOverride"]
 77 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 82
 78 [-]: JMP       82           ; PC := 82
 79 [-]: GETGLOBAL R11 K9       ; R11 := 0x93B1256B
 80 [-]: LOADK     R12 K23      ; R12 := "WRONG LEVEL"
 81 [-]: CALL      R11 2 1      ; R11(R12)
 82 [-]: FORLOOP   R5 40        ; R5 += R7; if R5 <= R6 then begin PC := 40; R8 := R5 end
 83 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 6194
; #Upvalues:       29
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  68

  1 [-]: MOVE      R2 R0        ; R2 := R0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R2 K0        ; R2 := 5
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 40
  8 [-]: JMP       40           ; PC := 40
  9 [-]: LT        0 K2 R2      ; if 0 >= R2 then PC := 40
 10 [-]: JMP       40           ; PC := 40
 11 [-]: SUB       R2 R2 K3     ; R2 := R2 - 1
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x93B1256B
 13 [-]: LOADK     R4 K5        ; R4 := "!Something stomped on mGameData! Trying to recover"
 14 [-]: CALL      R3 2 1       ; R3(R4)
 15 [-]: GETGLOBAL R3 K6        ; R3 := gPlayerProfileMgr
 16 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x21EF7B1A"]
 17 [-]: LOADK     R5 K2        ; R5 := 0
 18 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 19 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 20 [-]: MOVE      R5 R3        ; R5 := R3
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: TEST      R4 1         ; if R4 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3["0x654F1092"]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETGLOBAL R4 K4        ; R4 := 0x93B1256B
 29 [-]: LOADK     R5 K9        ; R5 := "No player profile!!!!"
 30 [-]: CALL      R4 2 1       ; R4(R5)
 31 [-]: GETGLOBAL R4 K1        ; R4 := 0x400E7765
 32 [-]: GETUPVAL  R5 U1        ; R5 := U1
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: TEST      R4 0         ; if not R4 then PC := 4
 35 [-]: JMP       4            ; PC := 4
 36 [-]: GETGLOBAL R4 K10       ; R4 := 0x201191EA
 37 [-]: LOADK     R5 K2        ; R5 := 0
 38 [-]: CALL      R4 2 1       ; R4(R5)
 39 [-]: JMP       4            ; PC := 4
 40 [-]: LOADK     R4 K2        ; R4 := 0
 41 [-]: TEST      R0 0         ; if not R0 then PC := 487
 42 [-]: JMP       487          ; PC := 487
 43 [-]: EQ        1 R0 K11     ; if R0 == "false" then PC := 487
 44 [-]: JMP       487          ; PC := 487
 45 [-]: GETGLOBAL R5 K12       ; R5 := _T
 46 [-]: SETTABLE  R5 K13 K14   ; R5["gInventorySaved"] := "0x1"
 47 [-]: GETGLOBAL R5 K15       ; R5 := cjson
 48 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["0x8A2E8315"]
 49 [-]: MOVE      R6 R1        ; R6 := R1
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: GETTABLE  R6 R5 K17    ; R6 := R5["MissionRewards"]
 52 [-]: EQ        1 R6 K18     ; if R6 == nil then PC := 97
 53 [-]: JMP       97           ; PC := 97
 54 [-]: GETUPVAL  R6 U2        ; R6 := U2
 55 [-]: GETTABLE  R7 R5 K17    ; R7 := R5["MissionRewards"]
 56 [-]: CALL      R6 2 1       ; R6(R7)
 57 [-]: GETTABLE  R6 R5 K17    ; R6 := R5["MissionRewards"]
 58 [-]: MOVE      R6 R3        ; R6 := R3
 59 [-]: GETGLOBAL R6 K19       ; R6 := gGameRules
 60 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0x8B598ED4"]
 61 [-]: GETGLOBAL R8 K21       ; R8 := gLotusGameRulesType
 62 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 63 [-]: TEST      R6 0         ; if not R6 then PC := 97
 64 [-]: JMP       97           ; PC := 97
 65 [-]: GETUPVAL  R6 U1        ; R6 := U1
 66 [-]: SELF      R6 R6 K22    ; R7 := R6; R6 := R6["0xE9C74141"]
 67 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 68 [-]: GETGLOBAL R7 K23       ; R7 := 0x63B09107
 69 [-]: GETUPVAL  R8 U3        ; R8 := U3
 70 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 71 [-]: JMP       85           ; PC := 85
 72 [-]: GETTABLE  R12 R11 K24  ; R12 := R11["credits"]
 73 [-]: EQ        1 R12 K18    ; if R12 == nil then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: GETTABLE  R12 R11 K24  ; R12 := R11["credits"]
 76 [-]: ADD       R4 R4 R12    ; R4 := R4 + R12
 77 [-]: JMP       85           ; PC := 85
 78 [-]: GETUPVAL  R12 U1       ; R12 := U1
 79 [-]: SELF      R12 R12 K25  ; R13 := R12; R12 := R12["0x3B24A566"]
 80 [-]: GETTABLE  R14 R11 K26  ; R14 := R11["storeItem"]
 81 [-]: GETTABLE  R15 R11 K27  ; R15 := R11["levelOverride"]
 82 [-]: MOVE      R16 R1       ; R16 := R1
 83 [-]: GETTABLE  R17 R11 K28  ; R17 := R11["itemCount"]
 84 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
 85 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 72; R9 := R10 end
 86 [-]: JMP       72           ; PC := 72
 87 [-]: LOADK     R12 K3       ; R12 := 1
 88 [-]: LEN       R13 R6       ; R13 := # R6
 89 [-]: LOADK     R14 K3       ; R14 := 1
 90 [-]: FORPREP   R12 96       ; R12 -= R14; PC := 96
 91 [-]: GETGLOBAL R16 K29      ; R16 := table
 92 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["0xE6450C9D"]
 93 [-]: GETUPVAL  R17 U3       ; R17 := U3
 94 [-]: GETTABLE  R18 R6 R15   ; R18 := R6[R15]
 95 [-]: CALL      R16 3 1      ; R16(R17,R18)
 96 [-]: FORLOOP   R12 91       ; R12 += R14; if R12 <= R13 then begin PC := 91; R15 := R12 end
 97 [-]: GETTABLE  R16 R5 K31   ; R16 := R5["CreditsBonus"]
 98 [-]: EQ        1 R16 K18    ; if R16 == nil then PC := 120
 99 [-]: JMP       120          ; PC := 120
100 [-]: GETTABLE  R16 R5 K31   ; R16 := R5["CreditsBonus"]
101 [-]: GETTABLE  R16 R16 K32  ; R16 := R16[2]
102 [-]: LT        0 K2 R16     ; if 0 >= R16 then PC := 120
103 [-]: JMP       120          ; PC := 120
104 [-]: MOVE      R16 R0       ; R16 := R0
105 [-]: TEST      R16 0        ; if not R16 then PC := 116
106 [-]: JMP       116          ; PC := 116
107 [-]: GETTABLE  R16 R5 K31   ; R16 := R5["CreditsBonus"]
108 [-]: GETTABLE  R16 R16 K3   ; R16 := R16[1]
109 [-]: GETTABLE  R17 R5 K31   ; R17 := R5["CreditsBonus"]
110 [-]: GETTABLE  R17 R17 K32  ; R17 := R17[2]
111 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: GETTABLE  R16 R5 K31   ; R16 := R5["CreditsBonus"]
114 [-]: GETTABLE  R16 R16 K3   ; R16 := R16[1]
115 [-]: ADD       R4 R4 R16    ; R4 := R4 + R16
116 [-]: GETUPVAL  R16 U4       ; R16 := U4
117 [-]: GETTABLE  R17 R5 K31   ; R17 := R5["CreditsBonus"]
118 [-]: GETTABLE  R17 R17 K32  ; R17 := R17[2]
119 [-]: SETTABLE  R16 K33 R17  ; R16["mMissionCompleteCreditBonus"] := R17
120 [-]: GETTABLE  R16 R5 K34   ; R16 := R5["TotalCredits"]
121 [-]: EQ        1 R16 K18    ; if R16 == nil then PC := 131
122 [-]: JMP       131          ; PC := 131
123 [-]: GETUPVAL  R16 U4       ; R16 := U4
124 [-]: GETTABLE  R17 R5 K34   ; R17 := R5["TotalCredits"]
125 [-]: GETTABLE  R17 R17 K3   ; R17 := R17[1]
126 [-]: SETTABLE  R16 K35 R17  ; R16["mTotalCredits"] := R17
127 [-]: GETUPVAL  R16 U4       ; R16 := U4
128 [-]: GETTABLE  R17 R5 K34   ; R17 := R5["TotalCredits"]
129 [-]: GETTABLE  R17 R17 K32  ; R17 := R17[2]
130 [-]: SETTABLE  R16 K36 R17  ; R16["mFinalCredits"] := R17
131 [-]: GETTABLE  R16 R5 K37   ; R16 := R5["NemesisRankUp"]
132 [-]: EQ        1 R16 K18    ; if R16 == nil then PC := 156
133 [-]: JMP       156          ; PC := 156
134 [-]: GETGLOBAL R16 K38      ; R16 := gGameData
135 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16["0x17358D95"]
136 [-]: CALL      R16 2 2      ; R16 := R16(R17)
137 [-]: GETUPVAL  R17 U5       ; R17 := U5
138 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0x84108DE9"]
139 [-]: MOVE      R18 R16      ; R18 := R16
140 [-]: CALL      R17 2 2      ; R17 := R17(R18)
141 [-]: GETGLOBAL R18 K41      ; R18 := 0xE6DC43B0
142 [-]: LOADK     R19 K42      ; R19 := "/Lotus/Language/Kingpins/NemesisPopupRankupLabel"
143 [-]: MOVE      R20 R0       ; R20 := R0
144 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
145 [-]: GETGLOBAL R19 K43      ; R19 := _G
146 [-]: NEWTABLE  R20 0 5      ; R20 := {}
147 [-]: SETTABLE  R20 K45 K14  ; R20["OpenScreen"] := "0x1"
148 [-]: SETTABLE  R20 K46 K14  ; R20["IsRankUp"] := "0x1"
149 [-]: GETTABLE  R21 R5 K37   ; R21 := R5["NemesisRankUp"]
150 [-]: ADD       R21 R21 K3   ; R21 := R21 + 1
151 [-]: SETTABLE  R20 K47 R21  ; R20["Rank"] := R21
152 [-]: SETTABLE  R20 K48 R18  ; R20["Description"] := R18
153 [-]: GETTABLE  R21 R17 K50  ; R21 := R17["mName"]
154 [-]: SETTABLE  R20 K49 R21  ; R20["Name"] := R21
155 [-]: SETTABLE  R19 K44 R20  ; R19["NemesisPopup_Info"] := R20
156 [-]: GETTABLE  R19 R5 K51   ; R19 := R5["NemesisTaxInfo"]
157 [-]: EQ        1 R19 K18    ; if R19 == nil then PC := 285
158 [-]: JMP       285          ; PC := 285
159 [-]: GETUPVAL  R19 U5       ; R19 := U5
160 [-]: GETTABLE  R19 R19 K52  ; R19 := R19["0x85329A4B"]
161 [-]: GETGLOBAL R20 K53      ; R20 := 0xEC274B1A
162 [-]: LOADK     R21 K54      ; R21 := "RewardsTaxed"
163 [-]: CALL      R20 2 2      ; R20 := R20(R21)
164 [-]: MOVE      R21 R1       ; R21 := R1
165 [-]: CALL      R19 3 1      ; R19(R20,R21)
166 [-]: GETGLOBAL R19 K12      ; R19 := _T
167 [-]: SETTABLE  R19 K55 K56  ; R19["EndOfMissionVoiceOverride"] := ""
168 [-]: GETUPVAL  R19 U4       ; R19 := U4
169 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["mNemesisTaxInfo"]
170 [-]: GETGLOBAL R20 K59      ; R20 := 0xF595ADDE
171 [-]: GETTABLE  R21 R5 K51   ; R21 := R5["NemesisTaxInfo"]
172 [-]: GETTABLE  R21 R21 K60  ; R21 := R21["TaxRate"]
173 [-]: CALL      R20 2 2      ; R20 := R20(R21)
174 [-]: SETTABLE  R19 K58 R20  ; R19["mTaxRate"] := R20
175 [-]: GETTABLE  R19 R5 K51   ; R19 := R5["NemesisTaxInfo"]
176 [-]: GETTABLE  R19 R19 K61  ; R19 := R19["TaxedCredits"]
177 [-]: EQ        1 R19 K18    ; if R19 == nil then PC := 186
178 [-]: JMP       186          ; PC := 186
179 [-]: GETUPVAL  R19 U4       ; R19 := U4
180 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["mNemesisTaxInfo"]
181 [-]: GETGLOBAL R20 K59      ; R20 := 0xF595ADDE
182 [-]: GETTABLE  R21 R5 K51   ; R21 := R5["NemesisTaxInfo"]
183 [-]: GETTABLE  R21 R21 K61  ; R21 := R21["TaxedCredits"]
184 [-]: CALL      R20 2 2      ; R20 := R20(R21)
185 [-]: SETTABLE  R19 K62 R20  ; R19["mTaxedCredits"] := R20
186 [-]: GETTABLE  R19 R5 K51   ; R19 := R5["NemesisTaxInfo"]
187 [-]: GETTABLE  R19 R19 K63  ; R19 := R19["TaxedFusionPoints"]
188 [-]: EQ        1 R19 K18    ; if R19 == nil then PC := 197
189 [-]: JMP       197          ; PC := 197
190 [-]: GETUPVAL  R19 U4       ; R19 := U4
191 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["mNemesisTaxInfo"]
192 [-]: GETGLOBAL R20 K59      ; R20 := 0xF595ADDE
193 [-]: GETTABLE  R21 R5 K51   ; R21 := R5["NemesisTaxInfo"]
194 [-]: GETTABLE  R21 R21 K63  ; R21 := R21["TaxedFusionPoints"]
195 [-]: CALL      R20 2 2      ; R20 := R20(R21)
196 [-]: SETTABLE  R19 K64 R20  ; R19["mTaxedFusionPoints"] := R20
197 [-]: GETTABLE  R19 R5 K51   ; R19 := R5["NemesisTaxInfo"]
198 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["TaxedCrewShipFusionPoints"]
199 [-]: EQ        1 R19 K18    ; if R19 == nil then PC := 208
200 [-]: JMP       208          ; PC := 208
201 [-]: GETUPVAL  R19 U4       ; R19 := U4
202 [-]: GETTABLE  R19 R19 K57  ; R19 := R19["mNemesisTaxInfo"]
203 [-]: GETGLOBAL R20 K59      ; R20 := 0xF595ADDE
204 [-]: GETTABLE  R21 R5 K51   ; R21 := R5["NemesisTaxInfo"]
205 [-]: GETTABLE  R21 R21 K65  ; R21 := R21["TaxedCrewShipFusionPoints"]
206 [-]: CALL      R20 2 2      ; R20 := R20(R21)
207 [-]: SETTABLE  R19 K66 R20  ; R19["mTaxedCrewShipFusionPoints"] := R20
208 [-]: GETTABLE  R19 R5 K51   ; R19 := R5["NemesisTaxInfo"]
209 [-]: GETTABLE  R19 R19 K67  ; R19 := R19["TaxedMiscItems"]
210 [-]: EQ        1 R19 K18    ; if R19 == nil then PC := 239
211 [-]: JMP       239          ; PC := 239
212 [-]: NEWTABLE  R19 0 0      ; R19 := {}
213 [-]: LOADK     R20 K3       ; R20 := 1
214 [-]: GETTABLE  R21 R5 K51   ; R21 := R5["NemesisTaxInfo"]
215 [-]: GETTABLE  R21 R21 K67  ; R21 := R21["TaxedMiscItems"]
216 [-]: LEN       R21 R21      ; R21 := # R21
217 [-]: LOADK     R22 K3       ; R22 := 1
218 [-]: FORPREP   R20 235      ; R20 -= R22; PC := 235
219 [-]: GETTABLE  R24 R5 K51   ; R24 := R5["NemesisTaxInfo"]
220 [-]: GETTABLE  R24 R24 K67  ; R24 := R24["TaxedMiscItems"]
221 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
222 [-]: GETGLOBAL R25 K29      ; R25 := table
223 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["0xE6450C9D"]
224 [-]: MOVE      R26 R19      ; R26 := R19
225 [-]: GETGLOBAL R27 K68      ; R27 := Lotus_Game
226 [-]: GETTABLE  R27 R27 K69  ; R27 := R27["0xB880C02"]
227 [-]: GETGLOBAL R28 K70      ; R28 := 0x2C00D429
228 [-]: GETTABLE  R29 R24 K71  ; R29 := R24["ItemType"]
229 [-]: CALL      R28 2 2      ; R28 := R28(R29)
230 [-]: GETGLOBAL R29 K59      ; R29 := 0xF595ADDE
231 [-]: GETTABLE  R30 R24 K72  ; R30 := R24["ItemCount"]
232 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
233 [-]: CALL      R27 0 0      ; R27,... := R27(R28,...)
234 [-]: CALL      R25 0 1      ; R25(R26,...)
235 [-]: FORLOOP   R20 219      ; R20 += R22; if R20 <= R21 then begin PC := 219; R23 := R20 end
236 [-]: GETUPVAL  R25 U4       ; R25 := U4
237 [-]: GETTABLE  R25 R25 K57  ; R25 := R25["mNemesisTaxInfo"]
238 [-]: SETTABLE  R25 K73 R19  ; R25["mTaxedMiscItems"] := R19
239 [-]: GETTABLE  R25 R5 K51   ; R25 := R5["NemesisTaxInfo"]
240 [-]: GETTABLE  R25 R25 K74  ; R25 := R25["TaxedCollectedItems"]
241 [-]: EQ        1 R25 K18    ; if R25 == nil then PC := 285
242 [-]: JMP       285          ; PC := 285
243 [-]: NEWTABLE  R25 0 0      ; R25 := {}
244 [-]: LOADK     R26 K3       ; R26 := 1
245 [-]: GETTABLE  R27 R5 K51   ; R27 := R5["NemesisTaxInfo"]
246 [-]: GETTABLE  R27 R27 K74  ; R27 := R27["TaxedCollectedItems"]
247 [-]: LEN       R27 R27      ; R27 := # R27
248 [-]: LOADK     R28 K3       ; R28 := 1
249 [-]: FORPREP   R26 281      ; R26 -= R28; PC := 281
250 [-]: GETTABLE  R30 R5 K51   ; R30 := R5["NemesisTaxInfo"]
251 [-]: GETTABLE  R30 R30 K74  ; R30 := R30["TaxedCollectedItems"]
252 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
253 [-]: GETGLOBAL R31 K68      ; R31 := Lotus_Game
254 [-]: GETTABLE  R31 R31 K75  ; R31 := R31["0x5DD416A8"]
255 [-]: CALL      R31 1 2      ; R31 := R31()
256 [-]: GETGLOBAL R32 K76      ; R32 := 0x7C282057
257 [-]: GETTABLE  R33 R30 K77  ; R33 := R30["StoreItem"]
258 [-]: CALL      R32 2 2      ; R32 := R32(R33)
259 [-]: SETTABLE  R31 K26 R32  ; R31["storeItem"] := R32
260 [-]: GETTABLE  R32 R30 K72  ; R32 := R30["ItemCount"]
261 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 268
262 [-]: JMP       268          ; PC := 268
263 [-]: GETGLOBAL R32 K59      ; R32 := 0xF595ADDE
264 [-]: GETTABLE  R33 R30 K72  ; R33 := R30["ItemCount"]
265 [-]: CALL      R32 2 2      ; R32 := R32(R33)
266 [-]: SETTABLE  R31 K28 R32  ; R31["itemCount"] := R32
267 [-]: JMP       269          ; PC := 269
268 [-]: SETTABLE  R31 K28 K3   ; R31["itemCount"] := 1
269 [-]: GETTABLE  R32 R30 K78  ; R32 := R30["LevelOverride"]
270 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 276
271 [-]: JMP       276          ; PC := 276
272 [-]: GETGLOBAL R32 K59      ; R32 := 0xF595ADDE
273 [-]: GETTABLE  R33 R30 K78  ; R33 := R30["LevelOverride"]
274 [-]: CALL      R32 2 2      ; R32 := R32(R33)
275 [-]: SETTABLE  R31 K27 R32  ; R31["levelOverride"] := R32
276 [-]: GETGLOBAL R32 K29      ; R32 := table
277 [-]: GETTABLE  R32 R32 K30  ; R32 := R32["0xE6450C9D"]
278 [-]: MOVE      R33 R25      ; R33 := R25
279 [-]: MOVE      R34 R31      ; R34 := R31
280 [-]: CALL      R32 3 1      ; R32(R33,R34)
281 [-]: FORLOOP   R26 250      ; R26 += R28; if R26 <= R27 then begin PC := 250; R29 := R26 end
282 [-]: GETUPVAL  R32 U4       ; R32 := U4
283 [-]: GETTABLE  R32 R32 K57  ; R32 := R32["mNemesisTaxInfo"]
284 [-]: SETTABLE  R32 K79 R25  ; R32["mTaxedCollectedItems"] := R25
285 [-]: GETTABLE  R32 R5 K80   ; R32 := R5["FusionPoints"]
286 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 291
287 [-]: JMP       291          ; PC := 291
288 [-]: GETUPVAL  R32 U4       ; R32 := U4
289 [-]: GETTABLE  R33 R5 K80   ; R33 := R5["FusionPoints"]
290 [-]: SETTABLE  R32 K81 R33  ; R32["mFusionPoints"] := R33
291 [-]: GETTABLE  R32 R5 K82   ; R32 := R5["CrewShipFusionPoints"]
292 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 297
293 [-]: JMP       297          ; PC := 297
294 [-]: GETUPVAL  R32 U4       ; R32 := U4
295 [-]: GETTABLE  R33 R5 K82   ; R33 := R5["CrewShipFusionPoints"]
296 [-]: SETTABLE  R32 K83 R33  ; R32["mCrewShipFusionPoints"] := R33
297 [-]: GETUPVAL  R32 U4       ; R32 := U4
298 [-]: GETUPVAL  R33 U6       ; R33 := U6
299 [-]: SETTABLE  R32 K84 R33  ; R32["mPlayedTime"] := R33
300 [-]: GETTABLE  R32 R5 K85   ; R32 := R5["BonusVoidTrace"]
301 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 367
302 [-]: JMP       367          ; PC := 367
303 [-]: GETGLOBAL R32 K1       ; R32 := 0x400E7765
304 [-]: GETGLOBAL R33 K86      ; R33 := gRegion
305 [-]: SELF      R33 R33 K87  ; R34 := R33; R33 := R33["0x372CB914"]
306 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
307 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
308 [-]: TEST      R32 1        ; if R32 then PC := 332
309 [-]: JMP       332          ; PC := 332
310 [-]: GETGLOBAL R32 K86      ; R32 := gRegion
311 [-]: SELF      R32 R32 K87  ; R33 := R32; R32 := R32["0x372CB914"]
312 [-]: CALL      R32 2 2      ; R32 := R32(R33)
313 [-]: SELF      R32 R32 K88  ; R33 := R32; R32 := R32["0x93E76705"]
314 [-]: CALL      R32 2 2      ; R32 := R32(R33)
315 [-]: GETGLOBAL R33 K1       ; R33 := 0x400E7765
316 [-]: MOVE      R34 R32      ; R34 := R32
317 [-]: CALL      R33 2 2      ; R33 := R33(R34)
318 [-]: TEST      R33 1        ; if R33 then PC := 332
319 [-]: JMP       332          ; PC := 332
320 [-]: GETGLOBAL R33 K1       ; R33 := 0x400E7765
321 [-]: SELF      R34 R32 K89  ; R35 := R32; R34 := R32["0xADE7BF82"]
322 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
323 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
324 [-]: TEST      R33 1        ; if R33 then PC := 332
325 [-]: JMP       332          ; PC := 332
326 [-]: SELF      R33 R32 K89  ; R34 := R32; R33 := R32["0xADE7BF82"]
327 [-]: CALL      R33 2 2      ; R33 := R33(R34)
328 [-]: SELF      R33 R33 K90  ; R34 := R33; R33 := R33["0x9A58BDA4"]
329 [-]: GETUPVAL  R35 U7       ; R35 := U7
330 [-]: GETTABLE  R36 R5 K85   ; R36 := R5["BonusVoidTrace"]
331 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
332 [-]: MOVE      R33 R0       ; R33 := R0
333 [-]: LOADK     R34 K3       ; R34 := 1
334 [-]: GETUPVAL  R35 U8       ; R35 := U8
335 [-]: LEN       R35 R35      ; R35 := # R35
336 [-]: LOADK     R36 K3       ; R36 := 1
337 [-]: FORPREP   R34 354      ; R34 -= R36; PC := 354
338 [-]: GETUPVAL  R38 U8       ; R38 := U8
339 [-]: GETTABLE  R38 R38 R37  ; R38 := R38[R37]
340 [-]: GETTABLE  R38 R38 K91  ; R38 := R38["mItemType"]
341 [-]: GETUPVAL  R39 U7       ; R39 := U7
342 [-]: EQ        0 R38 R39    ; if R38 ~= R39 then PC := 354
343 [-]: JMP       354          ; PC := 354
344 [-]: GETUPVAL  R38 U8       ; R38 := U8
345 [-]: GETTABLE  R38 R38 R37  ; R38 := R38[R37]
346 [-]: GETUPVAL  R39 U8       ; R39 := U8
347 [-]: GETTABLE  R39 R39 R37  ; R39 := R39[R37]
348 [-]: GETTABLE  R39 R39 K92  ; R39 := R39["mItemCount"]
349 [-]: GETTABLE  R40 R5 K85   ; R40 := R5["BonusVoidTrace"]
350 [-]: ADD       R39 R39 R40  ; R39 := R39 + R40
351 [-]: SETTABLE  R38 K92 R39  ; R38["mItemCount"] := R39
352 [-]: MOVE      R33 R1       ; R33 := R1
353 [-]: JMP       355          ; PC := 355
354 [-]: FORLOOP   R34 338      ; R34 += R36; if R34 <= R35 then begin PC := 338; R37 := R34 end
355 [-]: TEST      R33 1        ; if R33 then PC := 367
356 [-]: JMP       367          ; PC := 367
357 [-]: GETGLOBAL R38 K68      ; R38 := Lotus_Game
358 [-]: GETTABLE  R38 R38 K69  ; R38 := R38["0xB880C02"]
359 [-]: GETUPVAL  R39 U7       ; R39 := U7
360 [-]: GETTABLE  R40 R5 K85   ; R40 := R5["BonusVoidTrace"]
361 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
362 [-]: GETGLOBAL R39 K29      ; R39 := table
363 [-]: GETTABLE  R39 R39 K30  ; R39 := R39["0xE6450C9D"]
364 [-]: GETUPVAL  R40 U8       ; R40 := U8
365 [-]: MOVE      R41 R38      ; R41 := R38
366 [-]: CALL      R39 3 1      ; R39(R40,R41)
367 [-]: GETGLOBAL R39 K1       ; R39 := 0x400E7765
368 [-]: GETUPVAL  R40 U9       ; R40 := U9
369 [-]: CALL      R39 2 2      ; R39 := R39(R40)
370 [-]: TEST      R39 1        ; if R39 then PC := 407
371 [-]: JMP       407          ; PC := 407
372 [-]: GETUPVAL  R39 U10      ; R39 := U10
373 [-]: CALL      R39 1 2      ; R39 := R39()
374 [-]: TEST      R39 1        ; if R39 then PC := 385
375 [-]: JMP       385          ; PC := 385
376 [-]: GETTABLE  R39 R5 K93   ; R39 := R5["DailyMissionBonus"]
377 [-]: EQ        1 R39 K18    ; if R39 == nil then PC := 385
378 [-]: JMP       385          ; PC := 385
379 [-]: GETUPVAL  R39 U9       ; R39 := U9
380 [-]: SELF      R39 R39 K94  ; R40 := R39; R39 := R39["0x458F27A9"]
381 [-]: LOADK     R41 K95      ; R41 := "SetFirstWinOfDay"
382 [-]: LOADK     R42 K56      ; R42 := ""
383 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
384 [-]: JMP       407          ; PC := 407
385 [-]: GETUPVAL  R39 U10      ; R39 := U10
386 [-]: CALL      R39 1 2      ; R39 := R39()
387 [-]: TEST      R39 0        ; if not R39 then PC := 407
388 [-]: JMP       407          ; PC := 407
389 [-]: GETTABLE  R39 R5 K96   ; R39 := R5["DailyPVPWinBonus"]
390 [-]: EQ        1 R39 K18    ; if R39 == nil then PC := 407
391 [-]: JMP       407          ; PC := 407
392 [-]: GETUPVAL  R39 U11      ; R39 := U11
393 [-]: GETTABLE  R39 R39 K97  ; R39 := R39["pvpType"]
394 [-]: GETGLOBAL R40 K68      ; R40 := Lotus_Game
395 [-]: GETTABLE  R40 R40 K98  ; R40 := R40["PVPMODE_DEATHMATCH"]
396 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 399
397 [-]: JMP       399          ; PC := 399
398 [-]: MOVE      R39 R0       ; R39 := R0
399 [-]: MOVE      R39 R1       ; R39 := R1
400 [-]: GETUPVAL  R40 U9       ; R40 := U9
401 [-]: SELF      R40 R40 K94  ; R41 := R40; R40 := R40["0x458F27A9"]
402 [-]: LOADK     R42 K95      ; R42 := "SetFirstWinOfDay"
403 [-]: GETGLOBAL R43 K99      ; R43 := 0x9FAED6BC
404 [-]: MOVE      R44 R39      ; R44 := R39
405 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
406 [-]: CALL      R40 0 1      ; R40(R41,...)
407 [-]: GETUPVAL  R40 U12      ; R40 := U12
408 [-]: CALL      R40 1 2      ; R40 := R40()
409 [-]: GETGLOBAL R41 K100     ; R41 := string
410 [-]: GETTABLE  R41 R41 K101 ; R41 := R41["0xDE44F664"]
411 [-]: GETGLOBAL R42 K99      ; R42 := 0x9FAED6BC
412 [-]: GETTABLE  R43 R40 K102 ; R43 := R40["location"]
413 [-]: CALL      R42 2 2      ; R42 := R42(R43)
414 [-]: LOADK     R43 K103     ; R43 := "Nightwave"
415 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
416 [-]: TEST      R41 0        ; if not R41 then PC := 449
417 [-]: JMP       449          ; PC := 449
418 [-]: GETGLOBAL R41 K104     ; R41 := 0xECFDD17
419 [-]: GETTABLE  R42 R40 K105 ; R42 := R40["missionReward"]
420 [-]: GETTABLE  R42 R42 K106 ; R42 := R42["countedItems"]
421 [-]: CALL      R41 2 4      ; R41,R42,R43 := R41(R42)
422 [-]: JMP       447          ; PC := 447
423 [-]: GETGLOBAL R46 K76      ; R46 := 0x7C282057
424 [-]: GETTABLE  R47 R45 K91  ; R47 := R45["mItemType"]
425 [-]: CALL      R46 2 2      ; R46 := R46(R47)
426 [-]: GETGLOBAL R47 K29      ; R47 := table
427 [-]: GETTABLE  R47 R47 K30  ; R47 := R47["0xE6450C9D"]
428 [-]: GETUPVAL  R48 U13      ; R48 := U13
429 [-]: NEWTABLE  R49 0 5      ; R49 := {}
430 [-]: GETGLOBAL R50 K107     ; R50 := mMovie
431 [-]: SELF      R50 R50 K108 ; R51 := R50; R50 := R50["0x5DB0BD4"]
432 [-]: GETGLOBAL R52 K99      ; R52 := 0x9FAED6BC
433 [-]: SELF      R53 R46 K109 ; R54 := R46; R53 := R46["0x616C74B6"]
434 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
435 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
436 [-]: MOVE      R53 R1       ; R53 := R1
437 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
438 [-]: SETTABLE  R49 K49 R50  ; R49["Name"] := R50
439 [-]: GETTABLE  R50 R45 K92  ; R50 := R45["mItemCount"]
440 [-]: SETTABLE  R49 K110 R50 ; R49["Count"] := R50
441 [-]: SELF      R50 R46 K112 ; R51 := R46; R50 := R46["0xF1A9732E"]
442 [-]: CALL      R50 2 2      ; R50 := R50(R51)
443 [-]: SETTABLE  R49 K111 R50 ; R49["Icon"] := R50
444 [-]: SETTABLE  R49 K113 K14 ; R49["IconIsSquare"] := "0x1"
445 [-]: SETTABLE  R49 K114 K18 ; R49["Background"] := nil
446 [-]: CALL      R47 3 1      ; R47(R48,R49)
447 [-]: TFORLOOP  R41 2        ; R44,R45 :=  R41(R42,R43); if R44 ~= nil then begin PC = 423; R43 := R44 end
448 [-]: JMP       423          ; PC := 423
449 [-]: GETTABLE  R47 R5 K115  ; R47 := R5["ScenarioScoreChange"]
450 [-]: EQ        1 R47 K18    ; if R47 == nil then PC := 487
451 [-]: JMP       487          ; PC := 487
452 [-]: NEWTABLE  R47 0 2      ; R47 := {}
453 [-]: GETUPVAL  R48 U14      ; R48 := U14
454 [-]: SETTABLE  R47 K91 R48  ; R47["mItemType"] := R48
455 [-]: GETTABLE  R48 R5 K115  ; R48 := R5["ScenarioScoreChange"]
456 [-]: SETTABLE  R47 K92 R48  ; R47["mItemCount"] := R48
457 [-]: GETGLOBAL R48 K29      ; R48 := table
458 [-]: GETTABLE  R48 R48 K30  ; R48 := R48["0xE6450C9D"]
459 [-]: GETUPVAL  R49 U8       ; R49 := U8
460 [-]: MOVE      R50 R47      ; R50 := R47
461 [-]: CALL      R48 3 1      ; R48(R49,R50)
462 [-]: GETGLOBAL R48 K12      ; R48 := _T
463 [-]: GETTABLE  R48 R48 K116 ; R48 := R48["SendScenarioHubEvent"]
464 [-]: TEST      R48 0        ; if not R48 then PC := 487
465 [-]: JMP       487          ; PC := 487
466 [-]: NEWTABLE  R48 0 0      ; R48 := {}
467 [-]: GETTABLE  R49 R40 K117 ; R49 := R40["missionType"]
468 [-]: GETGLOBAL R50 K68      ; R50 := Lotus_Game
469 [-]: GETTABLE  R50 R50 K118 ; R50 := R50["MT_RAILJACK"]
470 [-]: EQ        0 R49 R50    ; if R49 ~= R50 then PC := 475
471 [-]: JMP       475          ; PC := 475
472 [-]: GETTABLE  R49 R5 K115  ; R49 := R5["ScenarioScoreChange"]
473 [-]: SETTABLE  R48 K119 R49 ; R48["SpaceScore"] := R49
474 [-]: JMP       477          ; PC := 477
475 [-]: GETTABLE  R49 R5 K115  ; R49 := R5["ScenarioScoreChange"]
476 [-]: SETTABLE  R48 K120 R49 ; R48["GroundScore"] := R49
477 [-]: GETGLOBAL R49 K12      ; R49 := _T
478 [-]: GETTABLE  R49 R49 K121 ; R49 := R49["0xDBD60887"]
479 [-]: LOADNIL   R50 R51      ; R50 := R51 := nil
480 [-]: LOADK     R52 K122     ; R52 := "Scores"
481 [-]: GETGLOBAL R53 K15      ; R53 := cjson
482 [-]: GETTABLE  R53 R53 K123 ; R53 := R53["0x8DC1075B"]
483 [-]: MOVE      R54 R48      ; R54 := R48
484 [-]: CALL      R53 2 2      ; R53 := R53(R54)
485 [-]: LOADK     R54 K124     ; R54 := "inc"
486 [-]: CALL      R49 6 1      ; R49(R50,R51,R52,R53,R54)
487 [-]: GETUPVAL  R49 U15      ; R49 := U15
488 [-]: CALL      R49 1 2      ; R49 := R49()
489 [-]: TEST      R49 0        ; if not R49 then PC := 524
490 [-]: JMP       524          ; PC := 524
491 [-]: GETUPVAL  R49 U16      ; R49 := U16
492 [-]: GETTABLE  R49 R49 K125 ; R49 := R49["0x87D2274C"]
493 [-]: CALL      R49 1 2      ; R49 := R49()
494 [-]: TEST      R49 0        ; if not R49 then PC := 524
495 [-]: JMP       524          ; PC := 524
496 [-]: GETUPVAL  R49 U17      ; R49 := U17
497 [-]: CALL      R49 1 2      ; R49 := R49()
498 [-]: GETGLOBAL R50 K1       ; R50 := 0x400E7765
499 [-]: MOVE      R51 R49      ; R51 := R49
500 [-]: CALL      R50 2 2      ; R50 := R50(R51)
501 [-]: TEST      R50 1        ; if R50 then PC := 524
502 [-]: JMP       524          ; PC := 524
503 [-]: SELF      R50 R49 K89  ; R51 := R49; R50 := R49["0xADE7BF82"]
504 [-]: CALL      R50 2 2      ; R50 := R50(R51)
505 [-]: GETGLOBAL R51 K1       ; R51 := 0x400E7765
506 [-]: MOVE      R52 R50      ; R52 := R50
507 [-]: CALL      R51 2 2      ; R51 := R51(R52)
508 [-]: TEST      R51 1        ; if R51 then PC := 524
509 [-]: JMP       524          ; PC := 524
510 [-]: GETGLOBAL R51 K19      ; R51 := gGameRules
511 [-]: SELF      R51 R51 K126 ; R52 := R51; R51 := R51["0xA2CB3BC5"]
512 [-]: CALL      R51 2 2      ; R51 := R51(R52)
513 [-]: TEST      R51 1        ; if R51 then PC := 524
514 [-]: JMP       524          ; PC := 524
515 [-]: SELF      R51 R50 K127 ; R52 := R50; R51 := R50["0xD9DA3D41"]
516 [-]: CALL      R51 2 2      ; R51 := R51(R52)
517 [-]: LT        0 K2 R51     ; if 0 >= R51 then PC := 524
518 [-]: JMP       524          ; PC := 524
519 [-]: NEWTABLE  R52 0 1      ; R52 := {}
520 [-]: SETTABLE  R52 K128 R51 ; R52["Points"] := R51
521 [-]: MOVE      R52 R18      ; R52 := R18
522 [-]: GETUPVAL  R52 U4       ; R52 := U4
523 [-]: SETTABLE  R52 K129 R51 ; R52["mMissionIntrinsicPoints"] := R51
524 [-]: GETGLOBAL R52 K1       ; R52 := 0x400E7765
525 [-]: GETUPVAL  R53 U1       ; R53 := U1
526 [-]: CALL      R52 2 2      ; R52 := R52(R53)
527 [-]: TEST      R52 1        ; if R52 then PC := 553
528 [-]: JMP       553          ; PC := 553
529 [-]: GETGLOBAL R52 K1       ; R52 := 0x400E7765
530 [-]: GETUPVAL  R53 U4       ; R53 := U4
531 [-]: CALL      R52 2 2      ; R52 := R52(R53)
532 [-]: TEST      R52 1        ; if R52 then PC := 553
533 [-]: JMP       553          ; PC := 553
534 [-]: GETGLOBAL R52 K1       ; R52 := 0x400E7765
535 [-]: GETGLOBAL R53 K86      ; R53 := gRegion
536 [-]: CALL      R52 2 2      ; R52 := R52(R53)
537 [-]: TEST      R52 1        ; if R52 then PC := 553
538 [-]: JMP       553          ; PC := 553
539 [-]: GETGLOBAL R52 K1       ; R52 := 0x400E7765
540 [-]: GETGLOBAL R53 K86      ; R53 := gRegion
541 [-]: SELF      R53 R53 K87  ; R54 := R53; R53 := R53["0x372CB914"]
542 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
543 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
544 [-]: TEST      R52 1        ; if R52 then PC := 553
545 [-]: JMP       553          ; PC := 553
546 [-]: GETUPVAL  R52 U1       ; R52 := U1
547 [-]: SELF      R52 R52 K130 ; R53 := R52; R52 := R52["0x3E8B54AB"]
548 [-]: GETGLOBAL R54 K86      ; R54 := gRegion
549 [-]: SELF      R54 R54 K87  ; R55 := R54; R54 := R54["0x372CB914"]
550 [-]: CALL      R54 2 2      ; R54 := R54(R55)
551 [-]: GETUPVAL  R55 U4       ; R55 := U4
552 [-]: CALL      R52 4 1      ; R52(R53,R54,R55)
553 [-]: GETGLOBAL R52 K19      ; R52 := gGameRules
554 [-]: SELF      R52 R52 K131 ; R53 := R52; R52 := R52["0x254FEAEA"]
555 [-]: CALL      R52 2 1      ; R52(R53)
556 [-]: GETUPVAL  R52 U19      ; R52 := U19
557 [-]: CALL      R52 1 1      ; R52()
558 [-]: GETUPVAL  R52 U20      ; R52 := U20
559 [-]: CALL      R52 1 2      ; R52 := R52()
560 [-]: ADD       R4 R4 R52    ; R4 := R4 + R52
561 [-]: GETGLOBAL R52 K1       ; R52 := 0x400E7765
562 [-]: GETUPVAL  R53 U4       ; R53 := U4
563 [-]: CALL      R52 2 2      ; R52 := R52(R53)
564 [-]: TEST      R52 1        ; if R52 then PC := 573
565 [-]: JMP       573          ; PC := 573
566 [-]: GETUPVAL  R52 U4       ; R52 := U4
567 [-]: GETTABLE  R52 R52 K132 ; R52 := R52["mCreditsEarnedInMission"]
568 [-]: LT        0 K2 R52     ; if 0 >= R52 then PC := 573
569 [-]: JMP       573          ; PC := 573
570 [-]: GETUPVAL  R52 U4       ; R52 := U4
571 [-]: GETTABLE  R52 R52 K132 ; R52 := R52["mCreditsEarnedInMission"]
572 [-]: ADD       R4 R4 R52    ; R4 := R4 + R52
573 [-]: LT        0 K2 R4      ; if 0 >= R4 then PC := 598
574 [-]: JMP       598          ; PC := 598
575 [-]: GETGLOBAL R53 K100     ; R53 := string
576 [-]: GETTABLE  R53 R53 K133 ; R53 := R53["0x639C642A"]
577 [-]: GETGLOBAL R54 K107     ; R54 := mMovie
578 [-]: SELF      R54 R54 K108 ; R55 := R54; R54 := R54["0x5DB0BD4"]
579 [-]: LOADK     R56 K134     ; R56 := "/Lotus/Language/Menu/Store_BuyWithCredits"
580 [-]: MOVE      R57 R1       ; R57 := R1
581 [-]: CALL      R54 4 0      ; R54,... := R54(R55,R56,R57)
582 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
583 [-]: NEWTABLE  R54 0 5      ; R54 := {}
584 [-]: SETTABLE  R54 K49 R53  ; R54["Name"] := R53
585 [-]: SETTABLE  R54 K110 R4  ; R54["Count"] := R4
586 [-]: GETUPVAL  R55 U4       ; R55 := U4
587 [-]: GETTABLE  R55 R55 K57  ; R55 := R55["mNemesisTaxInfo"]
588 [-]: GETTABLE  R55 R55 K62  ; R55 := R55["mTaxedCredits"]
589 [-]: SETTABLE  R54 K135 R55 ; R54["TaxedCount"] := R55
590 [-]: GETGLOBAL R55 K136     ; R55 := creditsIcon
591 [-]: SETTABLE  R54 K111 R55 ; R54["Icon"] := R55
592 [-]: SETTABLE  R54 K114 K18 ; R54["Background"] := nil
593 [-]: GETGLOBAL R55 K29      ; R55 := table
594 [-]: GETTABLE  R55 R55 K30  ; R55 := R55["0xE6450C9D"]
595 [-]: GETUPVAL  R56 U13      ; R56 := U13
596 [-]: MOVE      R57 R54      ; R57 := R54
597 [-]: CALL      R55 3 1      ; R55(R56,R57)
598 [-]: MOVE      R55 R0       ; R55 := R0
599 [-]: TEST      R55 0        ; if not R55 then PC := 643
600 [-]: JMP       643          ; PC := 643
601 [-]: GETUPVAL  R55 U4       ; R55 := U4
602 [-]: GETTABLE  R55 R55 K35  ; R55 := R55["mTotalCredits"]
603 [-]: LT        0 K2 R55     ; if 0 >= R55 then PC := 622
604 [-]: JMP       622          ; PC := 622
605 [-]: GETGLOBAL R56 K29      ; R56 := table
606 [-]: GETTABLE  R56 R56 K30  ; R56 := R56["0xE6450C9D"]
607 [-]: GETUPVAL  R57 U13      ; R57 := U13
608 [-]: GETUPVAL  R58 U21      ; R58 := U21
609 [-]: GETGLOBAL R59 K100     ; R59 := string
610 [-]: GETTABLE  R59 R59 K133 ; R59 := R59["0x639C642A"]
611 [-]: GETGLOBAL R60 K107     ; R60 := mMovie
612 [-]: SELF      R60 R60 K108 ; R61 := R60; R60 := R60["0x5DB0BD4"]
613 [-]: LOADK     R62 K137     ; R62 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
614 [-]: MOVE      R63 R0       ; R63 := R0
615 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
616 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
617 [-]: MOVE      R60 R55      ; R60 := R55
618 [-]: LOADNIL   R61 R61      ; R61 := nil
619 [-]: GETGLOBAL R62 K136     ; R62 := creditsIcon
620 [-]: CALL      R58 5 0      ; R58,... := R58(R59,R60,R61,R62)
621 [-]: CALL      R56 0 1      ; R56(R57,...)
622 [-]: GETUPVAL  R56 U4       ; R56 := U4
623 [-]: GETTABLE  R56 R56 K36  ; R56 := R56["mFinalCredits"]
624 [-]: LT        0 K2 R56     ; if 0 >= R56 then PC := 643
625 [-]: JMP       643          ; PC := 643
626 [-]: GETGLOBAL R57 K29      ; R57 := table
627 [-]: GETTABLE  R57 R57 K30  ; R57 := R57["0xE6450C9D"]
628 [-]: GETUPVAL  R58 U13      ; R58 := U13
629 [-]: GETUPVAL  R59 U21      ; R59 := U21
630 [-]: GETGLOBAL R60 K100     ; R60 := string
631 [-]: GETTABLE  R60 R60 K133 ; R60 := R60["0x639C642A"]
632 [-]: GETGLOBAL R61 K107     ; R61 := mMovie
633 [-]: SELF      R61 R61 K108 ; R62 := R61; R61 := R61["0x5DB0BD4"]
634 [-]: LOADK     R63 K138     ; R63 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
635 [-]: MOVE      R64 R0       ; R64 := R0
636 [-]: CALL      R61 4 0      ; R61,... := R61(R62,R63,R64)
637 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
638 [-]: MOVE      R61 R56      ; R61 := R56
639 [-]: LOADNIL   R62 R62      ; R62 := nil
640 [-]: GETGLOBAL R63 K136     ; R63 := creditsIcon
641 [-]: CALL      R59 5 0      ; R59,... := R59(R60,R61,R62,R63)
642 [-]: CALL      R57 0 1      ; R57(R58,...)
643 [-]: GETGLOBAL R57 K1       ; R57 := 0x400E7765
644 [-]: GETUPVAL  R58 U4       ; R58 := U4
645 [-]: CALL      R57 2 2      ; R57 := R57(R58)
646 [-]: TEST      R57 1        ; if R57 then PC := 679
647 [-]: JMP       679          ; PC := 679
648 [-]: GETUPVAL  R57 U4       ; R57 := U4
649 [-]: GETTABLE  R57 R57 K81  ; R57 := R57["mFusionPoints"]
650 [-]: LT        0 K2 R57     ; if 0 >= R57 then PC := 679
651 [-]: JMP       679          ; PC := 679
652 [-]: GETGLOBAL R57 K100     ; R57 := string
653 [-]: GETTABLE  R57 R57 K133 ; R57 := R57["0x639C642A"]
654 [-]: GETGLOBAL R58 K107     ; R58 := mMovie
655 [-]: SELF      R58 R58 K108 ; R59 := R58; R58 := R58["0x5DB0BD4"]
656 [-]: LOADK     R60 K139     ; R60 := "/Lotus/Language/Items/FusionBundle"
657 [-]: MOVE      R61 R1       ; R61 := R1
658 [-]: CALL      R58 4 0      ; R58,... := R58(R59,R60,R61)
659 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
660 [-]: NEWTABLE  R58 0 6      ; R58 := {}
661 [-]: SETTABLE  R58 K49 R57  ; R58["Name"] := R57
662 [-]: GETUPVAL  R59 U4       ; R59 := U4
663 [-]: GETTABLE  R59 R59 K81  ; R59 := R59["mFusionPoints"]
664 [-]: SETTABLE  R58 K110 R59 ; R58["Count"] := R59
665 [-]: GETUPVAL  R59 U4       ; R59 := U4
666 [-]: GETTABLE  R59 R59 K57  ; R59 := R59["mNemesisTaxInfo"]
667 [-]: GETTABLE  R59 R59 K64  ; R59 := R59["mTaxedFusionPoints"]
668 [-]: SETTABLE  R58 K135 R59 ; R58["TaxedCount"] := R59
669 [-]: GETGLOBAL R59 K140     ; R59 := fusionPointsIcon
670 [-]: SETTABLE  R58 K111 R59 ; R58["Icon"] := R59
671 [-]: SETTABLE  R58 K114 K18 ; R58["Background"] := nil
672 [-]: GETUPVAL  R59 U22      ; R59 := U22
673 [-]: SETTABLE  R58 K141 R59 ; R58["SortPriority"] := R59
674 [-]: GETGLOBAL R59 K29      ; R59 := table
675 [-]: GETTABLE  R59 R59 K30  ; R59 := R59["0xE6450C9D"]
676 [-]: GETUPVAL  R60 U23      ; R60 := U23
677 [-]: MOVE      R61 R58      ; R61 := R58
678 [-]: CALL      R59 3 1      ; R59(R60,R61)
679 [-]: GETGLOBAL R59 K1       ; R59 := 0x400E7765
680 [-]: GETUPVAL  R60 U4       ; R60 := U4
681 [-]: CALL      R59 2 2      ; R59 := R59(R60)
682 [-]: TEST      R59 1        ; if R59 then PC := 715
683 [-]: JMP       715          ; PC := 715
684 [-]: GETUPVAL  R59 U4       ; R59 := U4
685 [-]: GETTABLE  R59 R59 K83  ; R59 := R59["mCrewShipFusionPoints"]
686 [-]: LT        0 K2 R59     ; if 0 >= R59 then PC := 715
687 [-]: JMP       715          ; PC := 715
688 [-]: GETGLOBAL R59 K100     ; R59 := string
689 [-]: GETTABLE  R59 R59 K133 ; R59 := R59["0x639C642A"]
690 [-]: GETGLOBAL R60 K107     ; R60 := mMovie
691 [-]: SELF      R60 R60 K108 ; R61 := R60; R60 := R60["0x5DB0BD4"]
692 [-]: LOADK     R62 K142     ; R62 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
693 [-]: MOVE      R63 R1       ; R63 := R1
694 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
695 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
696 [-]: NEWTABLE  R60 0 6      ; R60 := {}
697 [-]: SETTABLE  R60 K49 R59  ; R60["Name"] := R59
698 [-]: GETUPVAL  R61 U4       ; R61 := U4
699 [-]: GETTABLE  R61 R61 K83  ; R61 := R61["mCrewShipFusionPoints"]
700 [-]: SETTABLE  R60 K110 R61 ; R60["Count"] := R61
701 [-]: GETUPVAL  R61 U4       ; R61 := U4
702 [-]: GETTABLE  R61 R61 K57  ; R61 := R61["mNemesisTaxInfo"]
703 [-]: GETTABLE  R61 R61 K66  ; R61 := R61["mTaxedCrewShipFusionPoints"]
704 [-]: SETTABLE  R60 K135 R61 ; R60["TaxedCount"] := R61
705 [-]: GETGLOBAL R61 K143     ; R61 := crewShipFusionPointsIcon
706 [-]: SETTABLE  R60 K111 R61 ; R60["Icon"] := R61
707 [-]: SETTABLE  R60 K114 K18 ; R60["Background"] := nil
708 [-]: GETUPVAL  R61 U22      ; R61 := U22
709 [-]: SETTABLE  R60 K141 R61 ; R60["SortPriority"] := R61
710 [-]: GETGLOBAL R61 K29      ; R61 := table
711 [-]: GETTABLE  R61 R61 K30  ; R61 := R61["0xE6450C9D"]
712 [-]: GETUPVAL  R62 U23      ; R62 := U23
713 [-]: MOVE      R63 R60      ; R63 := R60
714 [-]: CALL      R61 3 1      ; R61(R62,R63)
715 [-]: GETUPVAL  R61 U24      ; R61 := U24
716 [-]: CALL      R61 1 1      ; R61()
717 [-]: GETUPVAL  R61 U25      ; R61 := U25
718 [-]: CALL      R61 1 1      ; R61()
719 [-]: GETGLOBAL R61 K1       ; R61 := 0x400E7765
720 [-]: GETUPVAL  R62 U1       ; R62 := U1
721 [-]: CALL      R61 2 2      ; R61 := R61(R62)
722 [-]: TEST      R61 1        ; if R61 then PC := 798
723 [-]: JMP       798          ; PC := 798
724 [-]: GETUPVAL  R61 U1       ; R61 := U1
725 [-]: SELF      R61 R61 K144 ; R62 := R61; R61 := R61["0x94095C4C"]
726 [-]: CALL      R61 2 1      ; R61(R62)
727 [-]: GETUPVAL  R61 U26      ; R61 := U26
728 [-]: CALL      R61 1 2      ; R61 := R61()
729 [-]: TEST      R61 0        ; if not R61 then PC := 798
730 [-]: JMP       798          ; PC := 798
731 [-]: GETUPVAL  R61 U1       ; R61 := U1
732 [-]: SELF      R61 R61 K145 ; R62 := R61; R61 := R61["0x2DB9261A"]
733 [-]: LOADK     R63 K146     ; R63 := "EEFinalRank"
734 [-]: GETGLOBAL R64 K19      ; R64 := gGameRules
735 [-]: SELF      R64 R64 K147 ; R65 := R64; R64 := R64["0xED0EE7FB"]
736 [-]: GETGLOBAL R66 K53      ; R66 := 0xEC274B1A
737 [-]: LOADK     R67 K148     ; R67 := "AvgWaveRank"
738 [-]: CALL      R66 2 2      ; R66 := R66(R67)
739 [-]: LOADK     R67 K149     ; R67 := 4
740 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
741 [-]: CALL      R61 0 1      ; R61(R62,...)
742 [-]: GETUPVAL  R61 U1       ; R61 := U1
743 [-]: SELF      R61 R61 K145 ; R62 := R61; R61 := R61["0x2DB9261A"]
744 [-]: LOADK     R63 K150     ; R63 := "EEKills"
745 [-]: GETGLOBAL R64 K19      ; R64 := gGameRules
746 [-]: SELF      R64 R64 K147 ; R65 := R64; R64 := R64["0xED0EE7FB"]
747 [-]: GETGLOBAL R66 K53      ; R66 := 0xEC274B1A
748 [-]: LOADK     R67 K151     ; R67 := "Kills"
749 [-]: CALL      R66 2 2      ; R66 := R66(R67)
750 [-]: LOADK     R67 K2       ; R67 := 0
751 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
752 [-]: CALL      R61 0 1      ; R61(R62,...)
753 [-]: GETUPVAL  R61 U1       ; R61 := U1
754 [-]: SELF      R61 R61 K145 ; R62 := R61; R61 := R61["0x2DB9261A"]
755 [-]: LOADK     R63 K152     ; R63 := "EEVipKills"
756 [-]: GETGLOBAL R64 K19      ; R64 := gGameRules
757 [-]: SELF      R64 R64 K147 ; R65 := R64; R64 := R64["0xED0EE7FB"]
758 [-]: GETGLOBAL R66 K53      ; R66 := 0xEC274B1A
759 [-]: LOADK     R67 K153     ; R67 := "VIPKills"
760 [-]: CALL      R66 2 2      ; R66 := R66(R67)
761 [-]: LOADK     R67 K2       ; R67 := 0
762 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
763 [-]: CALL      R61 0 1      ; R61(R62,...)
764 [-]: GETUPVAL  R61 U1       ; R61 := U1
765 [-]: SELF      R61 R61 K145 ; R62 := R61; R61 := R61["0x2DB9261A"]
766 [-]: LOADK     R63 K154     ; R63 := "EETotal"
767 [-]: GETGLOBAL R64 K19      ; R64 := gGameRules
768 [-]: SELF      R64 R64 K147 ; R65 := R64; R64 := R64["0xED0EE7FB"]
769 [-]: GETGLOBAL R66 K53      ; R66 := 0xEC274B1A
770 [-]: LOADK     R67 K155     ; R67 := "Score"
771 [-]: CALL      R66 2 2      ; R66 := R66(R67)
772 [-]: LOADK     R67 K2       ; R67 := 0
773 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
774 [-]: CALL      R61 0 1      ; R61(R62,...)
775 [-]: GETUPVAL  R61 U1       ; R61 := U1
776 [-]: SELF      R61 R61 K145 ; R62 := R61; R61 := R61["0x2DB9261A"]
777 [-]: LOADK     R63 K156     ; R63 := "EEWaveScore"
778 [-]: GETGLOBAL R64 K19      ; R64 := gGameRules
779 [-]: SELF      R64 R64 K147 ; R65 := R64; R64 := R64["0xED0EE7FB"]
780 [-]: GETGLOBAL R66 K53      ; R66 := 0xEC274B1A
781 [-]: LOADK     R67 K157     ; R67 := "WaveClearScore"
782 [-]: CALL      R66 2 2      ; R66 := R66(R67)
783 [-]: LOADK     R67 K2       ; R67 := 0
784 [-]: CALL      R64 4 0      ; R64,... := R64(R65,R66,R67)
785 [-]: CALL      R61 0 1      ; R61(R62,...)
786 [-]: GETUPVAL  R61 U1       ; R61 := U1
787 [-]: SELF      R61 R61 K145 ; R62 := R61; R61 := R61["0x2DB9261A"]
788 [-]: LOADK     R63 K158     ; R63 := "EEWaveReached"
789 [-]: GETGLOBAL R64 K19      ; R64 := gGameRules
790 [-]: SELF      R64 R64 K147 ; R65 := R64; R64 := R64["0xED0EE7FB"]
791 [-]: GETGLOBAL R66 K53      ; R66 := 0xEC274B1A
792 [-]: LOADK     R67 K159     ; R67 := "Wave"
793 [-]: CALL      R66 2 2      ; R66 := R66(R67)
794 [-]: LOADK     R67 K2       ; R67 := 0
795 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
796 [-]: ADD       R64 R64 K3   ; R64 := R64 + 1
797 [-]: CALL      R61 4 1      ; R61(R62,R63,R64)
798 [-]: GETGLOBAL R61 K38      ; R61 := gGameData
799 [-]: SELF      R61 R61 K160 ; R62 := R61; R61 := R61["0xC5F3D29"]
800 [-]: CALL      R61 2 1      ; R61(R62)
801 [-]: GETUPVAL  R61 U27      ; R61 := U27
802 [-]: TEST      R61 0        ; if not R61 then PC := 806
803 [-]: JMP       806          ; PC := 806
804 [-]: GETUPVAL  R61 U28      ; R61 := U28
805 [-]: CALL      R61 1 1      ; R61()
806 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 6474
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 6478
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 6482
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETGLOBAL R5 K1        ; R5 := gRegion
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R4 K1        ; R4 := gRegion
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x48FBE19F"]
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: MOVE      R3 R4        ; R3 := R4
 10 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: LEN       R4 R3        ; R4 := # R3
 16 [-]: LT        1 K3 R4      ; if 1 < R4 then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: TEST      R4 1         ; if R4 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETUPVAL  R4 U1        ; R4 := U1
 22 [-]: LT        1 K4 R4      ; if 0 < R4 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R4 U2        ; R4 := U2
 25 [-]: TEST      R4 1         ; if R4 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETUPVAL  R4 U3        ; R4 := U3
 28 [-]: EQ        0 R4 K5      ; if R4 ~= -1 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R4 K6        ; R4 := string
 32 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0xDE44F664"]
 33 [-]: MOVE      R5 R1        ; R5 := R1
 34 [-]: LOADK     R6 K8        ; R6 := "_SPACE"
 35 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 36 [-]: EQ        1 R4 K9      ; if R4 == nil then PC := 69
 37 [-]: JMP       69           ; PC := 69
 38 [-]: GETGLOBAL R4 K10       ; R4 := _T
 39 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["eomScreenMode"]
 40 [-]: GETUPVAL  R5 U4        ; R5 := U4
 41 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["ACTUAL_EOM"]
 42 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 69
 43 [-]: JMP       69           ; PC := 69
 44 [-]: EQ        0 R2 K13     ; if R2 ~= "1" then PC := 69
 45 [-]: JMP       69           ; PC := 69
 46 [-]: GETUPVAL  R4 U3        ; R4 := U3
 47 [-]: LT        1 R4 K14     ; if R4 < 5 then PC := 65
 48 [-]: JMP       65           ; PC := 65
 49 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 50 [-]: GETGLOBAL R5 K15       ; R5 := gGameRules
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: TEST      R4 1         ; if R4 then PC := 69
 53 [-]: JMP       69           ; PC := 69
 54 [-]: GETGLOBAL R4 K15       ; R4 := gGameRules
 55 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4["0x8B598ED4"]
 56 [-]: GETGLOBAL R6 K17       ; R6 := gLotusBaseGameRulesType
 57 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 58 [-]: TEST      R4 0         ; if not R4 then PC := 69
 59 [-]: JMP       69           ; PC := 69
 60 [-]: GETGLOBAL R4 K15       ; R4 := gGameRules
 61 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0xA2CB3BC5"]
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 1         ; if R4 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETUPVAL  R4 U5        ; R4 := U5
 66 [-]: MOVE      R4 R3        ; R4 := R3
 67 [-]: LOADK     R4 K3        ; R4 := 1
 68 [-]: RETURN    R4 2         ; return R4
 69 [-]: LOADNIL   R4 R4        ; R4 := nil
 70 [-]: RETURN    R4 2         ; return R4
 71 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 6503
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x52E17A90
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: LOADK     R2 K2        ; R2 := "_root"
  4 [-]: GETGLOBAL R3 K3        ; R3 := UISys
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["FlashInstance_LINEAR"]
  6 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  7 [-]: LOADK     R5 K5        ; R5 := "_alpha"
  8 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: LOADK     R6 K6        ; R6 := 0
 11 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 12 [-]: LOADK     R6 K7        ; R6 := 0.25
 13 [-]: LOADK     R7 K6        ; R7 := 0
 14 [-]: CLOSURE   R8 0         ; R8 := closure(Function #105.1)
 15 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 16 [-]: RETURN    R0 1         ; return 


; Function #105.1:
;
; Name:            
; Defined at line: 6505
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["SetButtons"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xEFDFBF7E"]
  7 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
  8 [-]: LOADNIL   R2 R2        ; R2 := nil
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K4        ; R0 := mMovie
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xA58BB96C"]
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 6514
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["eomScreenMode"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["DETAILED_PREVIEW"]
  5 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 11 [-]: GETGLOBAL R1 K4        ; R1 := gMatchingService
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xD5E03646"]
 13 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 14 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 15 [-]: TEST      R0 1         ; if R0 then PC := 31
 16 [-]: JMP       31           ; PC := 31
 17 [-]: GETUPVAL  R0 U2        ; R0 := U2
 18 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x84DCC428"]
 19 [-]: CALL      R0 1 2       ; R0 := R0()
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 22 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETUPVAL  R0 U2        ; R0 := U2
 25 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x84DCC428"]
 26 [-]: CALL      R0 1 2       ; R0 := R0()
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
 29 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
 32 [-]: GETUPVAL  R1 U3        ; R1 := U3
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETUPVAL  R0 U3        ; R0 := U3
 37 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0x993A6B2C"]
 38 [-]: CALL      R0 2 1       ; R0(R1)
 39 [-]: GETUPVAL  R0 U3        ; R0 := U3
 40 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xE3DC9156"]
 41 [-]: CALL      R0 2 1       ; R0(R1)
 42 [-]: GETGLOBAL R0 K0        ; R0 := _T
 43 [-]: SETTABLE  R0 K11 K12   ; R0["hasMissionStats"] := "0x0"
 44 [-]: GETUPVAL  R0 U4        ; R0 := U4
 45 [-]: TEST      R0 0         ; if not R0 then PC := 66
 46 [-]: JMP       66           ; PC := 66
 47 [-]: MOVE      R0 R1        ; R0 := R1
 48 [-]: MOVE      R0 R5        ; R0 := R5
 49 [-]: GETGLOBAL R0 K0        ; R0 := _T
 50 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["IsInScreenStack"]
 51 [-]: TEST      R0 0         ; if not R0 then PC := 64
 52 [-]: JMP       64           ; PC := 64
 53 [-]: GETGLOBAL R0 K0        ; R0 := _T
 54 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["0x1632CF80"]
 55 [-]: LOADK     R1 K15       ; R1 := "EndOfMatch"
 56 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 57 [-]: TEST      R0 0         ; if not R0 then PC := 64
 58 [-]: JMP       64           ; PC := 64
 59 [-]: GETGLOBAL R0 K0        ; R0 := _T
 60 [-]: GETTABLE  R0 R0 K16    ; R0 := R0["0x18468666"]
 61 [-]: LOADK     R1 K15       ; R1 := "EndOfMatch"
 62 [-]: CALL      R0 2 1       ; R0(R1)
 63 [-]: JMP       66           ; PC := 66
 64 [-]: GETUPVAL  R0 U1        ; R0 := U1
 65 [-]: CALL      R0 1 1       ; R0()
 66 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 6538
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: LOADNIL   R0 R0        ; R0 := nil
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: LOADK     R0 K0        ; R0 := -1
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x6306558E
 10 [-]: CALL      R1 1 0       ; R1,... := R1()
 11 [-]: CALL      R0 0 1       ; R0(R1,...)
 12 [-]: GETGLOBAL R0 K2        ; R0 := gFlashMgr
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xC4E70543"]
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETUPVAL  R0 U3        ; R0 := U3
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 6549
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  8 [-]: LOADK     R2 K2        ; R2 := "UpdateMapVote"
  9 [-]: LOADK     R3 K3        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 6555
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  8 [-]: LOADK     R2 K2        ; R2 := "PopulateMapVote"
  9 [-]: LOADK     R3 K3        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 6561
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  8 [-]: LOADK     R2 K2        ; R2 := "OnMapVotingFinished"
  9 [-]: LOADK     R3 K3        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 6567
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["allPlayersCommitted"] := "0x1"
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: LT        0 R0 K2      ; if R0 >= 0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 6576
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3AEEE6C2"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 6582
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xD963824A"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 6588
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xA133F1D5"]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 6594
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 51
  3 [-]: JMP       51           ; PC := 51
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
  6 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x6B7B470B"]
  8 [-]: LOADK     R6 K3        ; R6 := "_root"
  9 [-]: LOADK     R7 K4        ; R7 := "_xmouse"
 10 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 11 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 12 [-]: GETGLOBAL R4 K0        ; R4 := 0xF595ADDE
 13 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 14 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x6B7B470B"]
 15 [-]: LOADK     R7 K3        ; R7 := "_root"
 16 [-]: LOADK     R8 K5        ; R8 := "_ymouse"
 17 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 18 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 19 [-]: GETUPVAL  R5 U2        ; R5 := U2
 20 [-]: LT        0 K6 R5      ; if 9 >= R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: LT        0 R4 K7      ; if R4 >= 550 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETUPVAL  R5 U3        ; R5 := U3
 25 [-]: GETTABLE  R2 R5 K8     ; R2 := R5["mScrollBar"]
 26 [-]: JMP       39           ; PC := 39
 27 [-]: LT        0 R3 K7      ; if R3 >= 550 then PC := 32
 28 [-]: JMP       32           ; PC := 32
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETTABLE  R2 R5 K8     ; R2 := R5["mScrollBar"]
 31 [-]: JMP       39           ; PC := 39
 32 [-]: LT        0 R3 K9      ; if R3 >= 950 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETUPVAL  R5 U5        ; R5 := U5
 35 [-]: GETTABLE  R2 R5 K8     ; R2 := R5["mScrollBar"]
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETUPVAL  R5 U6        ; R5 := U6
 38 [-]: GETTABLE  R2 R5 K8     ; R2 := R5["mScrollBar"]
 39 [-]: GETGLOBAL R5 K10       ; R5 := 0x400E7765
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: TEST      R5 1         ; if R5 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: SELF      R5 R2 K11    ; R6 := R2; R5 := R2["0x9F50FF89"]
 45 [-]: GETGLOBAL R7 K0        ; R7 := 0xF595ADDE
 46 [-]: MOVE      R8 R1        ; R8 := R1
 47 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 48 [-]: GETGLOBAL R8 K12       ; R8 := _G
 49 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["UISound_Scroll"]
 50 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 51 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 6614
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xA58BB96C"]
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 12 [-]: GETGLOBAL R2 K6        ; R2 := gGameRules
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETGLOBAL R1 K6        ; R1 := gGameRules
 17 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xF647419A"]
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: GETGLOBAL R1 K1        ; R1 := Engine
 20 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0xC53FF352"]
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 6624
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x1C988750"]
  3 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/QuitGameConfirm"
  4 [-]: LOADK     R2 K2        ; R2 := "ExitPvpAtEOM"
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 6628
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x87D2274C"]
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: TEST      R0 1         ; if R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: TEST      R1 0         ; if not R1 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: TEST      R0 1         ; if R0 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETUPVAL  R1 U3        ; R1 := U3
 18 [-]: CALL      R1 1 1       ; R1()
 19 [-]: GETGLOBAL R1 K3        ; R1 := _T
 20 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["GoToPreviousScreen"]
 21 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 47
 22 [-]: JMP       47           ; PC := 47
 23 [-]: GETGLOBAL R1 K3        ; R1 := _T
 24 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["eomScreenMode"]
 25 [-]: GETUPVAL  R2 U4        ; R2 := U4
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["ACTUAL_EOM"]
 27 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 47
 28 [-]: JMP       47           ; PC := 47
 29 [-]: GETGLOBAL R1 K3        ; R1 := _T
 30 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0x1632CF80"]
 31 [-]: LOADK     R2 K9        ; R2 := "MissionStats"
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: TEST      R1 0         ; if not R1 then PC := 44
 34 [-]: JMP       44           ; PC := 44
 35 [-]: GETGLOBAL R1 K10       ; R1 := 0x400E7765
 36 [-]: GETGLOBAL R2 K11       ; R2 := gGameRules
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 1         ; if R1 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETGLOBAL R1 K3        ; R1 := _T
 41 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0xB92B95FB"]
 42 [-]: CALL      R1 1 1       ; R1()
 43 [-]: JMP       55           ; PC := 55
 44 [-]: GETUPVAL  R1 U3        ; R1 := U3
 45 [-]: CALL      R1 1 1       ; R1()
 46 [-]: JMP       55           ; PC := 55
 47 [-]: TEST      R0 0         ; if not R0 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 50 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 51 [-]: CALL      R1 2 1       ; R1(R2)
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETUPVAL  R1 U3        ; R1 := U3
 54 [-]: CALL      R1 1 1       ; R1()
 55 [-]: GETUPVAL  R1 U5        ; R1 := U5
 56 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["0x25992394"]
 57 [-]: GETGLOBAL R2 K14       ; R2 := _G
 58 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["UISound_GridOpenTwo"]
 59 [-]: CALL      R1 2 1       ; R1(R2)
 60 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 6654
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 6658
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 6664
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 6669
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 0         ; if not R0 then PC := 23
  4 [-]: JMP       23           ; PC := 23
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x87D2274C"]
  7 [-]: CALL      R0 1 2       ; R0 := R0()
  8 [-]: TEST      R0 0         ; if not R0 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R0 K1        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["eomScreenMode"]
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ACTUAL_EOM"]
 14 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R0 K4        ; R0 := gRegion
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xA559F558"]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: TEST      R0 1         ; if R0 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: CALL      R0 1 1       ; R0()
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x87D2274C"]
 25 [-]: CALL      R0 1 2       ; R0 := R0()
 26 [-]: TEST      R0 0         ; if not R0 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETGLOBAL R0 K6        ; R0 := gGameRules
 29 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xA2CB3BC5"]
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: GETUPVAL  R1 U4        ; R1 := U4
 32 [-]: CALL      R1 1 2       ; R1 := R1()
 33 [-]: TEST      R1 0         ; if not R1 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: MOVE      R1 R0        ; R1 := R0
 36 [-]: GETUPVAL  R2 U5        ; R2 := U5
 37 [-]: CALL      R2 1 2       ; R2 := R2()
 38 [-]: GETUPVAL  R3 U6        ; R3 := U6
 39 [-]: TEST      R3 0         ; if not R3 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETUPVAL  R3 U7        ; R3 := U7
 42 [-]: TEST      R3 0         ; if not R3 then PC := 71
 43 [-]: JMP       71           ; PC := 71
 44 [-]: GETUPVAL  R3 U8        ; R3 := U8
 45 [-]: EQ        0 R3 K8      ; if R3 ~= -1 then PC := 71
 46 [-]: JMP       71           ; PC := 71
 47 [-]: GETUPVAL  R3 U1        ; R3 := U1
 48 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0x87D2274C"]
 49 [-]: CALL      R3 1 2       ; R3 := R3()
 50 [-]: TEST      R3 0         ; if not R3 then PC := 73
 51 [-]: JMP       73           ; PC := 73
 52 [-]: TEST      R1 1         ; if R1 then PC := 73
 53 [-]: JMP       73           ; PC := 73
 54 [-]: TEST      R2 0         ; if not R2 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: TEST      R0 0         ; if not R0 then PC := 73
 57 [-]: JMP       73           ; PC := 73
 58 [-]: TEST      R0 1         ; if R0 then PC := 71
 59 [-]: JMP       71           ; PC := 71
 60 [-]: GETGLOBAL R3 K6        ; R3 := gGameRules
 61 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x889EAB05"]
 62 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 63 [-]: TEST      R3 1         ; if R3 then PC := 71
 64 [-]: JMP       71           ; PC := 71
 65 [-]: GETGLOBAL R3 K1        ; R3 := _T
 66 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["eomScreenMode"]
 67 [-]: GETUPVAL  R4 U2        ; R4 := U2
 68 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["ACTUAL_EOM"]
 69 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: MOVE      R3 R1        ; R3 := R1
 72 [-]: RETURN    R3 2         ; return R3
 73 [-]: GETUPVAL  R3 U9        ; R3 := U9
 74 [-]: TEST      R3 1         ; if R3 then PC := 83
 75 [-]: JMP       83           ; PC := 83
 76 [-]: GETUPVAL  R3 U10       ; R3 := U10
 77 [-]: TEST      R3 1         ; if R3 then PC := 83
 78 [-]: JMP       83           ; PC := 83
 79 [-]: GETUPVAL  R3 U11       ; R3 := U11
 80 [-]: CALL      R3 1 1       ; R3()
 81 [-]: MOVE      R3 R1        ; R3 := R1
 82 [-]: RETURN    R3 2         ; return R3
 83 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 6688
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 6694
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2176B11E"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 6700
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 16
  3 [-]: JMP       16           ; PC := 16
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x3BC31182"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 6706
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["SetButtons"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: EQ        1 R1 K3      ; if R1 == "" then PC := 25
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R1 K4        ; R1 := table
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xE6450C9D"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 18 [-]: SETTABLE  R3 K6 K7     ; R3["Label"] := "/Lotus/Language/Menu/LastMissionFailReason"
 19 [-]: CLOSURE   R4 0         ; R4 := closure(Function #126.1)
 20 [-]: GETUPVAL  R0 U2        ; R0 := U2
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: SETTABLE  R3 K8 R4     ; R3["CallBack"] := R4
 23 [-]: SETTABLE  R3 K9 K10    ; R3["CallOut"] := "MENU_GENERIC2"
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: GETUPVAL  R1 U3        ; R1 := U3
 26 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["0x87D2274C"]
 27 [-]: CALL      R1 1 2       ; R1 := R1()
 28 [-]: GETUPVAL  R2 U3        ; R2 := U3
 29 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0x917774C"]
 30 [-]: CALL      R2 1 2       ; R2 := R2()
 31 [-]: TEST      R2 1         ; if R2 then PC := 69
 32 [-]: JMP       69           ; PC := 69
 33 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
 34 [-]: GETUPVAL  R4 U4        ; R4 := U4
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: TEST      R3 1         ; if R3 then PC := 69
 37 [-]: JMP       69           ; PC := 69
 38 [-]: GETUPVAL  R3 U4        ; R3 := U4
 39 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x256B18D6"]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: EQ        1 R3 K3      ; if R3 == "" then PC := 69
 42 [-]: JMP       69           ; PC := 69
 43 [-]: GETUPVAL  R3 U5        ; R3 := U5
 44 [-]: CALL      R3 1 2       ; R3 := R3()
 45 [-]: GETTABLE  R4 R3 K15    ; R4 := R3["goalTag"]
 46 [-]: GETGLOBAL R5 K16       ; R5 := 0xEC274B1A
 47 [-]: LOADK     R6 K17       ; R6 := "TreasureHunt"
 48 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 49 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 69
 50 [-]: JMP       69           ; PC := 69
 51 [-]: GETTABLE  R4 R3 K18    ; R4 := R3["missionType"]
 52 [-]: GETGLOBAL R5 K19       ; R5 := Lotus_Game
 53 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["MT_LANDSCAPE"]
 54 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 69
 55 [-]: JMP       69           ; PC := 69
 56 [-]: GETGLOBAL R4 K0        ; R4 := _T
 57 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["HasDailyTribute"]
 58 [-]: TEST      R4 1         ; if R4 then PC := 69
 59 [-]: JMP       69           ; PC := 69
 60 [-]: GETGLOBAL R4 K4        ; R4 := table
 61 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xE6450C9D"]
 62 [-]: MOVE      R5 R0        ; R5 := R0
 63 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 64 [-]: SETTABLE  R6 K6 K22    ; R6["Label"] := "/Lotus/Language/Menu/PlayLastMission"
 65 [-]: GETUPVAL  R7 U6        ; R7 := U6
 66 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
 67 [-]: SETTABLE  R6 K9 K23    ; R6["CallOut"] := "MENU_GENERIC1"
 68 [-]: CALL      R4 3 1       ; R4(R5,R6)
 69 [-]: GETGLOBAL R4 K0        ; R4 := _T
 70 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["eomScreenMode"]
 71 [-]: GETUPVAL  R5 U7        ; R5 := U7
 72 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["DETAILED_PREVIEW"]
 73 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 84
 74 [-]: JMP       84           ; PC := 84
 75 [-]: GETGLOBAL R4 K4        ; R4 := table
 76 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xE6450C9D"]
 77 [-]: MOVE      R5 R0        ; R5 := R0
 78 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 79 [-]: SETTABLE  R6 K6 K26    ; R6["Label"] := "/Lotus/Language/Menu/Global_Back"
 80 [-]: CLOSURE   R7 1         ; R7 := closure(Function #126.2)
 81 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
 82 [-]: SETTABLE  R6 K9 K27    ; R6["CallOut"] := "MENU_CANCEL"
 83 [-]: CALL      R4 3 1       ; R4(R5,R6)
 84 [-]: TEST      R1 0         ; if not R1 then PC := 99
 85 [-]: JMP       99           ; PC := 99
 86 [-]: GETUPVAL  R4 U8        ; R4 := U8
 87 [-]: CALL      R4 1 2       ; R4 := R4()
 88 [-]: TEST      R4 1         ; if R4 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: GETUPVAL  R4 U9        ; R4 := U9
 91 [-]: CALL      R4 1 2       ; R4 := R4()
 92 [-]: TEST      R4 0         ; if not R4 then PC := 114
 93 [-]: JMP       114          ; PC := 114
 94 [-]: GETGLOBAL R4 K28       ; R4 := gGameRules
 95 [-]: SELF      R4 R4 K29    ; R5 := R4; R4 := R4["0xA2CB3BC5"]
 96 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 97 [-]: TEST      R4 1         ; if R4 then PC := 114
 98 [-]: JMP       114          ; PC := 114
 99 [-]: GETGLOBAL R4 K0        ; R4 := _T
100 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["eomScreenMode"]
101 [-]: GETUPVAL  R5 U7        ; R5 := U7
102 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["ACTUAL_EOM"]
103 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 114
104 [-]: JMP       114          ; PC := 114
105 [-]: GETGLOBAL R4 K4        ; R4 := table
106 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xE6450C9D"]
107 [-]: MOVE      R5 R0        ; R5 := R0
108 [-]: NEWTABLE  R6 0 3       ; R6 := {}
109 [-]: SETTABLE  R6 K6 K31    ; R6["Label"] := "/Lotus/Language/Menu/Exit"
110 [-]: CLOSURE   R7 2         ; R7 := closure(Function #126.3)
111 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
112 [-]: SETTABLE  R6 K9 K27    ; R6["CallOut"] := "MENU_CANCEL"
113 [-]: CALL      R4 3 1       ; R4(R5,R6)
114 [-]: GETUPVAL  R4 U10       ; R4 := U10
115 [-]: CALL      R4 1 2       ; R4 := R4()
116 [-]: TEST      R4 0         ; if not R4 then PC := 140
117 [-]: JMP       140          ; PC := 140
118 [-]: TEST      R1 0         ; if not R1 then PC := 140
119 [-]: JMP       140          ; PC := 140
120 [-]: GETGLOBAL R4 K0        ; R4 := _T
121 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["eomScreenMode"]
122 [-]: GETUPVAL  R5 U7        ; R5 := U7
123 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["ACTUAL_EOM"]
124 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: GETGLOBAL R4 K32       ; R4 := gRegion
127 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0xA559F558"]
128 [-]: CALL      R4 2 2       ; R4 := R4(R5)
129 [-]: TEST      R4 1         ; if R4 then PC := 140
130 [-]: JMP       140          ; PC := 140
131 [-]: GETGLOBAL R4 K4        ; R4 := table
132 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xE6450C9D"]
133 [-]: MOVE      R5 R0        ; R5 := R0
134 [-]: NEWTABLE  R6 0 3       ; R6 := {}
135 [-]: SETTABLE  R6 K6 K34    ; R6["Label"] := "/Lotus/Language/Menu/ExitArenaUpperCase"
136 [-]: CLOSURE   R7 3         ; R7 := closure(Function #126.4)
137 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
138 [-]: SETTABLE  R6 K9 K27    ; R6["CallOut"] := "MENU_CANCEL"
139 [-]: CALL      R4 3 1       ; R4(R5,R6)
140 [-]: TEST      R1 0         ; if not R1 then PC := 162
141 [-]: JMP       162          ; PC := 162
142 [-]: GETGLOBAL R4 K0        ; R4 := _T
143 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["eomScreenMode"]
144 [-]: GETUPVAL  R5 U7        ; R5 := U7
145 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["ACTUAL_EOM"]
146 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 162
147 [-]: JMP       162          ; PC := 162
148 [-]: GETUPVAL  R4 U11       ; R4 := U11
149 [-]: GETUPVAL  R5 U12       ; R5 := U12
150 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["MASTERY"]
151 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 162
152 [-]: JMP       162          ; PC := 162
153 [-]: GETGLOBAL R4 K4        ; R4 := table
154 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xE6450C9D"]
155 [-]: MOVE      R5 R0        ; R5 := R0
156 [-]: NEWTABLE  R6 0 3       ; R6 := {}
157 [-]: SETTABLE  R6 K6 K36    ; R6["Label"] := "/Lotus/Language/Menu/Badlands_Continue"
158 [-]: CLOSURE   R7 4         ; R7 := closure(Function #126.5)
159 [-]: SETTABLE  R6 K8 R7     ; R6["CallBack"] := R7
160 [-]: SETTABLE  R6 K9 K37    ; R6["CallOut"] := "MENU_SELECT"
161 [-]: CALL      R4 3 1       ; R4(R5,R6)
162 [-]: GETGLOBAL R4 K0        ; R4 := _T
163 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["0xEFDFBF7E"]
164 [-]: GETGLOBAL R5 K39       ; R5 := mMovie
165 [-]: MOVE      R6 R0        ; R6 := R0
166 [-]: GETGLOBAL R7 K40       ; R7 := 0x6B695579
167 [-]: LOADK     R8 K41       ; R8 := 1
168 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
169 [-]: CALL      R4 0 1       ; R4(R5,...)
170 [-]: RETURN    R0 1         ; return 


; Function #126.1:
;
; Name:            
; Defined at line: 6718
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xB11F032"]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #126.2:
;
; Name:            
; Defined at line: 6733
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_CANCEL"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #126.3:
;
; Name:            
; Defined at line: 6736
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_CANCEL"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #126.4:
;
; Name:            
; Defined at line: 6740
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_CANCEL"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #126.5:
;
; Name:            
; Defined at line: 6744
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "AutoClose"
  4 [-]: LOADK     R3 K3        ; R3 := "0"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 6750
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: TEST      R1 1         ; if R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x302AAB2F"]
 11 [-]: LOADK     R3 K3        ; R3 := "RewardsPanel.PanelBG"
 12 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
 13 [-]: GETGLOBAL R5 K5        ; R5 := _G
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_Yellow"]
 15 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 16 [-]: GETGLOBAL R6 K5        ; R6 := _G
 17 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_Yellow"]
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 19 [-]: GETGLOBAL R7 K5        ; R7 := _G
 20 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_Yellow"]
 21 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 22 [-]: LOADK     R8 K10       ; R8 := 1
 23 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 24 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 6756
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: TEST      R1 1         ; if R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x302AAB2F"]
 11 [-]: LOADK     R3 K3        ; R3 := "RewardsPanel.PanelBG"
 12 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
 13 [-]: GETGLOBAL R5 K5        ; R5 := _G
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_White"]
 15 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 16 [-]: GETGLOBAL R6 K5        ; R6 := _G
 17 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_White"]
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 19 [-]: GETGLOBAL R7 K5        ; R7 := _G
 20 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_White"]
 21 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 22 [-]: LOADK     R8 K10       ; R8 := 0.20000000298023
 23 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 24 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 6762
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 54
  5 [-]: JMP       54           ; PC := 54
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: TEST      R1 1         ; if R1 then PC := 54
  8 [-]: JMP       54           ; PC := 54
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x302AAB2F"]
 11 [-]: LOADK     R3 K3        ; R3 := "StatsPanel.PanelBG"
 12 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
 13 [-]: GETGLOBAL R5 K5        ; R5 := _G
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_Yellow"]
 15 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 16 [-]: GETGLOBAL R6 K5        ; R6 := _G
 17 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_Yellow"]
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 19 [-]: GETGLOBAL R7 K5        ; R7 := _G
 20 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_Yellow"]
 21 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 22 [-]: LOADK     R8 K10       ; R8 := 1
 23 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 24 [-]: LOADNIL   R1 R1        ; R1 := nil
 25 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 26 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x6B7B470B"]
 27 [-]: LOADK     R4 K12       ; R4 := "StatsPanel."
 28 [-]: MOVE      R5 R0        ; R5 := R0
 29 [-]: LOADK     R6 K13       ; R6 := ".Name.text"
 30 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 31 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 32 [-]: LOADK     R3 K10       ; R3 := 1
 33 [-]: GETUPVAL  R4 U1        ; R4 := U1
 34 [-]: LEN       R4 R4        ; R4 := # R4
 35 [-]: LOADK     R5 K10       ; R5 := 1
 36 [-]: FORPREP   R3 53        ; R3 -= R5; PC := 53
 37 [-]: GETUPVAL  R7 U1        ; R7 := U1
 38 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 39 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["Name"]
 40 [-]: EQ        0 R7 R2      ; if R7 ~= R2 then PC := 53
 41 [-]: JMP       53           ; PC := 53
 42 [-]: GETUPVAL  R7 U1        ; R7 := U1
 43 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 44 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["NameWithRank"]
 45 [-]: LOADK     R8 K16       ; R8 := "\n\r"
 46 [-]: GETUPVAL  R9 U1        ; R9 := U1
 47 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 48 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["LoadoutDesc"]
 49 [-]: CONCAT    R1 R7 R9     ; R1 := R7 .. R8 .. R9
 50 [-]: GETGLOBAL R7 K18       ; R7 := _T
 51 [-]: SETTABLE  R7 K19 R1    ; R7["gToolTip"] := R1
 52 [-]: JMP       54           ; PC := 54
 53 [-]: FORLOOP   R3 37        ; R3 += R5; if R3 <= R4 then begin PC := 37; R6 := R3 end
 54 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 6777
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: TEST      R1 1         ; if R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x302AAB2F"]
 11 [-]: LOADK     R3 K3        ; R3 := "StatsPanel.PanelBG"
 12 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
 13 [-]: GETGLOBAL R5 K5        ; R5 := _G
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_White"]
 15 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 16 [-]: GETGLOBAL R6 K5        ; R6 := _G
 17 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_White"]
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 19 [-]: GETGLOBAL R7 K5        ; R7 := _G
 20 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_White"]
 21 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 22 [-]: LOADK     R8 K10       ; R8 := 0.20000000298023
 23 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 24 [-]: GETGLOBAL R1 K11       ; R1 := _T
 25 [-]: SETTABLE  R1 K12 K13   ; R1["gToolTip"] := nil
 26 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 6784
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x4C23E28F"]
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["DECREMENT"]
 13 [-]: CALL      R0 3 1       ; R0(R1,R2)
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 6791
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x4C23E28F"]
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["INCREMENT"]
 13 [-]: CALL      R0 3 1       ; R0(R1,R2)
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 6798
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 6804
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2176B11E"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 6810
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x3BC31182"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 6816
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x25992394"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UISound_Focus"]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: LOADK     R3 K5        ; R3 := "MenuBar"
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: LOADK     R5 K6        ; R5 := "_color"
 11 [-]: GETGLOBAL R6 K1        ; R6 := _G
 12 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["UIColor_Yellow"]
 13 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 6821
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x880196A7"]
  3 [-]: LOADK     R3 K2        ; R3 := "MenuBar"
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: LOADK     R5 K3        ; R5 := "_color"
  6 [-]: GETGLOBAL R6 K4        ; R6 := _G
  7 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIColor_White"]
  8 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  9 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 6825
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xC51A5C9D"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mSelectedElement"]
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Id"]
 13 [-]: ADD       R2 R2 R0     ; R2 := R2 + R0
 14 [-]: LT        0 R1 R2      ; if R1 >= R2 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: LT        0 R2 K4      ; if R2 >= 1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: LOADK     R2 K4        ; R2 := 1
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: EQ        1 R3 R2      ; if R3 == R2 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x3BC31182"]
 25 [-]: MOVE      R5 R2        ; R5 := R2
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 6842
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: EQ        0 R0 K0      ; if R0 ~= "LeftArrow" then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: LOADK     R2 K1        ; R2 := -1
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: LOADK     R2 K2        ; R2 := 1
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 6852
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xED0EE7FB"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xEC274B1A
  4 [-]: LOADK     R3 K3        ; R3 := "Team1Score"
  5 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := gGameRules
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xED0EE7FB"]
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0xEC274B1A
 10 [-]: LOADK     R4 K4        ; R4 := "Team2Score"
 11 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x400E7765
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x86E626FB"]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETGLOBAL R4 K2        ; R4 := 0xEC274B1A
 23 [-]: LOADK     R5 K7        ; R5 := "Team1"
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: TEST      R3 0         ; if not R3 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: MOVE      R4 R1        ; R4 := R1
 35 [-]: RETURN    R4 2         ; return R4
 36 [-]: JMP       42           ; PC := 42
 37 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: MOVE      R4 R1        ; R4 := R1
 41 [-]: RETURN    R4 2         ; return R4
 42 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 6865
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 6869
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIMaterial_FocusLensStore"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xA141F573"]
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 12 [-]: GETUPVAL  R1 U2        ; R1 := U2
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R0 U2        ; R0 := U2
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x9D2060CB"]
 18 [-]: CLOSURE   R2 0         ; R2 := closure(Function #142.1)
 19 [-]: GETUPVAL  R0 U3        ; R0 := U3
 20 [-]: CALL      R0 3 1       ; R0(R1,R2)
 21 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 22 [-]: GETUPVAL  R1 U4        ; R1 := U4
 23 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 24 [-]: TEST      R0 1         ; if R0 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETUPVAL  R0 U5        ; R0 := U5
 27 [-]: MOVE      R1 R1        ; R1 := R1
 28 [-]: MOVE      R2 R1        ; R2 := R1
 29 [-]: CALL      R0 3 1       ; R0(R1,R2)
 30 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 31 [-]: GETUPVAL  R1 U6        ; R1 := U6
 32 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 33 [-]: TEST      R0 1         ; if R0 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETUPVAL  R0 U6        ; R0 := U6
 36 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x9D2060CB"]
 37 [-]: CLOSURE   R2 1         ; R2 := closure(Function #142.2)
 38 [-]: GETUPVAL  R0 U7        ; R0 := U7
 39 [-]: GETUPVAL  R0 U8        ; R0 := U8
 40 [-]: GETUPVAL  R0 U6        ; R0 := U6
 41 [-]: CALL      R0 3 1       ; R0(R1,R2)
 42 [-]: RETURN    R0 1         ; return 


; Function #142.1:
;
; Name:            
; Defined at line: 6884
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["PolarityInfo"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 37
  5 [-]: JMP       37           ; PC := 37
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["TotalFocus"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 37
 10 [-]: JMP       37           ; PC := 37
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["FocusGained"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 37
 15 [-]: JMP       37           ; PC := 37
 16 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["InterpingFocusGain"]
 17 [-]: TEST      R1 1         ; if R1 then PC := 37
 18 [-]: JMP       37           ; PC := 37
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mClipName"]
 21 [-]: LOADK     R3 K6        ; R3 := ".Info.BonusXP"
 22 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 23 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["PolarityInfo"]
 24 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["TotalFocus"]
 25 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 26 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["FocusGained"]
 27 [-]: LT        0 K7 R1      ; if 0 >= R1 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mClipName"]
 31 [-]: LOADK     R3 K8        ; R3 := ".Info.XP"
 32 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 33 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["PolarityInfo"]
 34 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["FocusGained"]
 35 [-]: MOVE      R5 R1        ; R5 := R1
 36 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 37 [-]: RETURN    R0 1         ; return 


; Function #142.2:
;
; Name:            
; Defined at line: 6903
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Card"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 33
  5 [-]: JMP       33           ; PC := 33
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["Card"]
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["isIdentifiedMod"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x8383A1DC"]
 10 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Card"]
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mUpgrade"]
 12 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Card"]
 13 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mId"]
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: SETTABLE  R0 K1 R2     ; R0["Card"] := R2
 16 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Card"]
 17 [-]: SETTABLE  R2 K2 R1     ; R2["isIdentifiedMod"] := R1
 18 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Card"]
 19 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["isIdentifiedMod"]
 20 [-]: TEST      R2 0         ; if not R2 then PC := 33
 21 [-]: JMP       33           ; PC := 33
 22 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Card"]
 23 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 25 [-]: GETUPVAL  R5 U1        ; R5 := U1
 26 [-]: MOVE      R6 R0        ; R6 := R0
 27 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 28 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["Card"]
 29 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mName"]
 30 [-]: SETTABLE  R7 K9 R8     ; R7["ITEM_NAME"] := R8
 31 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 32 [-]: SETTABLE  R2 K6 R3     ; R2["mName"] := R3
 33 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mClipName"]
 34 [-]: EQ        1 R2 K11     ; if R2 == nil then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xA372F64A"]
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: CALL      R2 2 1       ; R2(R3)
 40 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 6921
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: MOVE      R0 R1        ; R0 := R1
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R2        ; R0 := R2
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: MOVE      R0 R3        ; R0 := R3
  8 [-]: GETUPVAL  R0 U4        ; R0 := U4
  9 [-]: CALL      R0 1 1       ; R0()
 10 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 6929
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 6933
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 6941
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 6945
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 6949
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: TEST      R0 1         ; if R0 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x17028E8F"]
  9 [-]: LOADK     R3 K3        ; R3 := "MenuBar.Right.Tf.text"
 10 [-]: LOADK     R4 K4        ; R4 := "<MENU_RTRIGGER2>"
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x17028E8F"]
 14 [-]: LOADK     R3 K5        ; R3 := "MenuBar.Left.Tf.text"
 15 [-]: LOADK     R4 K6        ; R4 := "<MENU_LTRIGGER2>"
 16 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETGLOBAL R1 K7        ; R1 := 0x8C64AFA9
 19 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 20 [-]: LOADK     R3 K8        ; R3 := "MenuBar.LeftArrow.swapDepths"
 21 [-]: LOADK     R4 K9        ; R4 := 8001
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: GETGLOBAL R1 K7        ; R1 := 0x8C64AFA9
 24 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 25 [-]: LOADK     R3 K10       ; R3 := "MenuBar.RightArrow.swapDepths"
 26 [-]: LOADK     R4 K11       ; R4 := 8002
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x1C19D966"]
 30 [-]: LOADK     R3 K13       ; R3 := "MenuBar.Right"
 31 [-]: LOADK     R4 K14       ; R4 := "_visible"
 32 [-]: MOVE      R5 R0        ; R5 := R0
 33 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 34 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 35 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x1C19D966"]
 36 [-]: LOADK     R3 K15       ; R3 := "MenuBar.Left"
 37 [-]: LOADK     R4 K14       ; R4 := "_visible"
 38 [-]: MOVE      R5 R0        ; R5 := R0
 39 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 40 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 41 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x1C19D966"]
 42 [-]: LOADK     R3 K16       ; R3 := "MenuBar.RightArrow"
 43 [-]: LOADK     R4 K14       ; R4 := "_visible"
 44 [-]: MOVE      R5 R0        ; R5 := R0
 45 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 46 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 47 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x1C19D966"]
 48 [-]: LOADK     R3 K17       ; R3 := "MenuBar.LeftArrow"
 49 [-]: LOADK     R4 K14       ; R4 := "_visible"
 50 [-]: MOVE      R5 R0        ; R5 := R0
 51 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 52 [-]: RETURN    R0 1         ; return 


