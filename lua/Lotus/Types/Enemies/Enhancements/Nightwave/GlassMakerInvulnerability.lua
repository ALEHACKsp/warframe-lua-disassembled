code size: 71
code size: 206
code size: 5
code size: 271
code size: 80
code size: 61
code size: 90
code size: 8
code size: 79
code size: 66
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis M:\git repos\warframe-lua-disassembled\lua\Lotus\Types\Enemies\Enhancements\Nightwave\GlassMakerInvulnerability.luac 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xEC274B1A
  2 [-]: LOADK     R1 K1        ; R1 := "WpInvuln"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7C282057
  5 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Fx/Gameplay/CephalonTear/CephalonTearCorrupted"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x7C282057
  8 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Fx/Gameplay/CephalonTear/CephalonTearCorruptedProj"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0x7C282057
 11 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Sounds/Gameplay/CephalonWeave/CephalonTearGrenadeCountdownSeq"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K6        ; R4 := 0x2C00D429
 14 [-]: LOADK     R5 K7        ; R5 := "/Lotus/StoreItems/Types/Items/SyndicateDogTags/NoraGlassmakerDogTag"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: LOADK     R5 K8        ; R5 := 0.60000002384186
 17 [-]: LOADK     R6 K9        ; R6 := 600
 18 [-]: LOADK     R7 K10       ; R7 := 50
 19 [-]: LOADK     R8 K11       ; R8 := 1.0099999904633
 20 [-]: MOVE      R9 R1        ; R9 := R1
 21 [-]: LOADK     R10 K12      ; R10 := 25
 22 [-]: GETGLOBAL R11 K2       ; R11 := 0x7C282057
 23 [-]: LOADK     R12 K13      ; R12 := "/Lotus/Fx/Gameplay/CephalonTear/CephalonTearEnemyExplosion"
 24 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 25 [-]: LOADK     R12 K14      ; R12 := 3
 26 [-]: CLOSURE   R13 0        ; R13 := closure(Function #1)
 27 [-]: MOVE      R0 R0        ; R0 := R0
 28 [-]: MOVE      R0 R1        ; R0 := R1
 29 [-]: CLOSURE   R14 1        ; R14 := closure(Function #2)
 30 [-]: MOVE      R0 R13       ; R0 := R13
 31 [-]: SETGLOBAL R14 K15      ; WeakpointsChanged := R14
 32 [-]: SETGLOBAL R14 K16      ; 0xDED52E4C := R14
 33 [-]: CLOSURE   R14 2        ; R14 := closure(Function #3)
 34 [-]: MOVE      R0 R1        ; R0 := R1
 35 [-]: MOVE      R0 R3        ; R0 := R3
 36 [-]: MOVE      R0 R12       ; R0 := R12
 37 [-]: MOVE      R0 R2        ; R0 := R2
 38 [-]: MOVE      R0 R6        ; R0 := R6
 39 [-]: MOVE      R0 R7        ; R0 := R7
 40 [-]: MOVE      R0 R9        ; R0 := R9
 41 [-]: MOVE      R0 R10       ; R0 := R10
 42 [-]: MOVE      R0 R11       ; R0 := R11
 43 [-]: SETGLOBAL R14 K17      ; PostDeathTickingBomb := R14
 44 [-]: SETGLOBAL R14 K18      ; 0x71666182 := R14
 45 [-]: CLOSURE   R14 3        ; R14 := closure(Function #4)
 46 [-]: MOVE      R0 R4        ; R0 := R4
 47 [-]: MOVE      R0 R5        ; R0 := R5
 48 [-]: SETGLOBAL R14 K19      ; OnKilled := R14
 49 [-]: SETGLOBAL R14 K20      ; 0x3ACCA768 := R14
 50 [-]: CLOSURE   R14 4        ; R14 := closure(Function #5)
 51 [-]: MOVE      R0 R6        ; R0 := R6
 52 [-]: MOVE      R0 R7        ; R0 := R7
 53 [-]: MOVE      R0 R8        ; R0 := R8
 54 [-]: SETGLOBAL R14 K21      ; OnDamaged := R14
 55 [-]: SETGLOBAL R14 K22      ; 0x653EC65A := R14
 56 [-]: CLOSURE   R14 5        ; R14 := closure(Function #6)
 57 [-]: MOVE      R0 R6        ; R0 := R6
 58 [-]: MOVE      R0 R7        ; R0 := R7
 59 [-]: SETGLOBAL R14 K23      ; ProjectorControlGlowByDamage := R14
 60 [-]: SETGLOBAL R14 K24      ; 0x22684446 := R14
 61 [-]: CLOSURE   R14 6        ; R14 := closure(Function #7)
 62 [-]: SETGLOBAL R14 K25      ; _AddGlassPortsChild := R14
 63 [-]: SETGLOBAL R14 K26      ; 0x331227D7 := R14
 64 [-]: CLOSURE   R14 7        ; R14 := closure(Function #8)
 65 [-]: SETGLOBAL R14 K27      ; AddGlassPorts := R14
 66 [-]: SETGLOBAL R14 K28      ; 0xC6075A73 := R14
 67 [-]: CLOSURE   R14 8        ; R14 := closure(Function #9)
 68 [-]: MOVE      R0 R13       ; R0 := R13
 69 [-]: SETGLOBAL R14 K29      ; HitproxyCleaner := R14
 70 [-]: SETGLOBAL R14 K30      ; 0xC8442C4E := R14
 71 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 23
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8B598ED4"]
  7 [-]: GETGLOBAL R4 K2        ; R4 := gAvatarType
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x5A115A02"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0xA3F6069B"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETGLOBAL R3 K5        ; R3 := gRegion
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0xA559F558"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 0         ; if not R3 then PC := 95
 22 [-]: JMP       95           ; PC := 95
 23 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0xBBBCE54D"]
 24 [-]: GETGLOBAL R5 K8        ; R5 := Game
 25 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["PT_KNOCKED_DOWN"]
 26 [-]: GETUPVAL  R6 U0        ; R6 := U0
 27 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 28 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0xBBBCE54D"]
 29 [-]: GETGLOBAL R5 K8        ; R5 := Game
 30 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["PT_STAGGERED"]
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0xBBBCE54D"]
 34 [-]: GETGLOBAL R5 K8        ; R5 := Game
 35 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["PT_BIG_STAGGER"]
 36 [-]: GETUPVAL  R6 U0        ; R6 := U0
 37 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 38 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0xBBBCE54D"]
 39 [-]: GETGLOBAL R5 K8        ; R5 := Game
 40 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["PT_STUNNED"]
 41 [-]: GETUPVAL  R6 U0        ; R6 := U0
 42 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 43 [-]: SELF      R3 R2 K13    ; R4 := R2; R3 := R2["0x80788195"]
 44 [-]: GETGLOBAL R5 K14       ; R5 := Engine
 45 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["KNOCKDOWN"]
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 48 [-]: SELF      R3 R2 K13    ; R4 := R2; R3 := R2["0x80788195"]
 49 [-]: GETGLOBAL R5 K14       ; R5 := Engine
 50 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["PAIN"]
 51 [-]: GETUPVAL  R6 U0        ; R6 := U0
 52 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 53 [-]: SELF      R3 R2 K13    ; R4 := R2; R3 := R2["0x80788195"]
 54 [-]: GETGLOBAL R5 K14       ; R5 := Engine
 55 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["STAGGER"]
 56 [-]: GETUPVAL  R6 U0        ; R6 := U0
 57 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 58 [-]: SELF      R3 R2 K13    ; R4 := R2; R3 := R2["0x80788195"]
 59 [-]: GETGLOBAL R5 K14       ; R5 := Engine
 60 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["BIG_STAGGER"]
 61 [-]: GETUPVAL  R6 U0        ; R6 := U0
 62 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 63 [-]: SELF      R3 R2 K13    ; R4 := R2; R3 := R2["0x80788195"]
 64 [-]: GETGLOBAL R5 K14       ; R5 := Engine
 65 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["STUN"]
 66 [-]: GETUPVAL  R6 U0        ; R6 := U0
 67 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 68 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0xA3F6069B"]
 69 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 70 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0x1758DB26"]
 71 [-]: GETUPVAL  R5 U0        ; R5 := U0
 72 [-]: CALL      R3 3 1       ; R3(R4,R5)
 73 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0xA3F6069B"]
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3["0x8A9BBEE2"]
 76 [-]: GETUPVAL  R5 U0        ; R5 := U0
 77 [-]: CALL      R3 3 1       ; R3(R4,R5)
 78 [-]: GETGLOBAL R3 K14       ; R3 := Engine
 79 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["0xFA1ED226"]
 80 [-]: CALL      R3 1 2       ; R3 := R3()
 81 [-]: SELF      R4 R3 K23    ; R5 := R3; R4 := R3["0xC4A45AF8"]
 82 [-]: GETGLOBAL R6 K14       ; R6 := Engine
 83 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["DT_IMPACT"]
 84 [-]: LOADK     R7 K25       ; R7 := 1
 85 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 86 [-]: SELF      R4 R3 K26    ; R5 := R3; R4 := R3["0x535CFE87"]
 87 [-]: GETGLOBAL R6 K8        ; R6 := Game
 88 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["PT_STAGGERED"]
 89 [-]: MOVE      R7 R1        ; R7 := R1
 90 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 91 [-]: SETTABLE  R3 K27 K28   ; R3["baseAmount"] := 0
 92 [-]: SELF      R4 R0 K29    ; R5 := R0; R4 := R0["0x4722B671"]
 93 [-]: MOVE      R6 R3        ; R6 := R3
 94 [-]: CALL      R4 3 1       ; R4(R5,R6)
 95 [-]: LE        0 K25 R1     ; if 1 > R1 then PC := 182
 96 [-]: JMP       182          ; PC := 182
 97 [-]: GETGLOBAL R4 K30       ; R4 := math
 98 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["0x8B011038"]
 99 [-]: LOADK     R5 K28       ; R5 := 0
100 [-]: GETGLOBAL R6 K32       ; R6 := resistancePerWeakPoint
101 [-]: MUL       R6 R6 R1     ; R6 := R6 * R1
102 [-]: SUB       R6 K25 R6    ; R6 := 1 - R6
103 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
104 [-]: SELF      R5 R2 K33    ; R6 := R2; R5 := R2["0x92152A74"]
105 [-]: GETUPVAL  R7 U0        ; R7 := U0
106 [-]: GETGLOBAL R8 K14       ; R8 := Engine
107 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["DT_ANY"]
108 [-]: GETGLOBAL R9 K14       ; R9 := Engine
109 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["ANY_PART"]
110 [-]: MOVE      R10 R4       ; R10 := R4
111 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
112 [-]: SELF      R5 R2 K36    ; R6 := R2; R5 := R2["0x64B88A7A"]
113 [-]: GETUPVAL  R7 U0        ; R7 := U0
114 [-]: GETGLOBAL R8 K14       ; R8 := Engine
115 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["DT_ANY"]
116 [-]: GETGLOBAL R9 K14       ; R9 := Engine
117 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["ANY_PART"]
118 [-]: MOVE      R10 R4       ; R10 := R4
119 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
120 [-]: GETGLOBAL R5 K37       ; R5 := 0x201191EA
121 [-]: LOADK     R6 K28       ; R6 := 0
122 [-]: CALL      R5 2 1       ; R5(R6)
123 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
124 [-]: MOVE      R6 R0        ; R6 := R0
125 [-]: CALL      R5 2 2       ; R5 := R5(R6)
126 [-]: TEST      R5 1         ; if R5 then PC := 206
127 [-]: JMP       206          ; PC := 206
128 [-]: GETGLOBAL R5 K5        ; R5 := gRegion
129 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xA559F558"]
130 [-]: CALL      R5 2 2       ; R5 := R5(R6)
131 [-]: TEST      R5 0         ; if not R5 then PC := 206
132 [-]: JMP       206          ; PC := 206
133 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0["0xA3F6069B"]
134 [-]: CALL      R5 2 2       ; R5 := R5(R6)
135 [-]: MOVE      R2 R5        ; R2 := R5
136 [-]: SELF      R5 R2 K38    ; R6 := R2; R5 := R2["0xF3B1BA84"]
137 [-]: GETGLOBAL R7 K8        ; R7 := Game
138 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["PT_KNOCKED_DOWN"]
139 [-]: GETUPVAL  R8 U0        ; R8 := U0
140 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
141 [-]: SELF      R5 R2 K38    ; R6 := R2; R5 := R2["0xF3B1BA84"]
142 [-]: GETGLOBAL R7 K8        ; R7 := Game
143 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["PT_STAGGERED"]
144 [-]: GETUPVAL  R8 U0        ; R8 := U0
145 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
146 [-]: SELF      R5 R2 K38    ; R6 := R2; R5 := R2["0xF3B1BA84"]
147 [-]: GETGLOBAL R7 K8        ; R7 := Game
148 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["PT_BIG_STAGGER"]
149 [-]: GETUPVAL  R8 U0        ; R8 := U0
150 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
151 [-]: SELF      R5 R2 K38    ; R6 := R2; R5 := R2["0xF3B1BA84"]
152 [-]: GETGLOBAL R7 K8        ; R7 := Game
153 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["PT_STUNNED"]
154 [-]: GETUPVAL  R8 U0        ; R8 := U0
155 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
156 [-]: SELF      R5 R2 K39    ; R6 := R2; R5 := R2["0x64728A2A"]
157 [-]: GETGLOBAL R7 K14       ; R7 := Engine
158 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["KNOCKDOWN"]
159 [-]: GETUPVAL  R8 U0        ; R8 := U0
160 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
161 [-]: SELF      R5 R2 K39    ; R6 := R2; R5 := R2["0x64728A2A"]
162 [-]: GETGLOBAL R7 K14       ; R7 := Engine
163 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["PAIN"]
164 [-]: GETUPVAL  R8 U0        ; R8 := U0
165 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
166 [-]: SELF      R5 R2 K39    ; R6 := R2; R5 := R2["0x64728A2A"]
167 [-]: GETGLOBAL R7 K14       ; R7 := Engine
168 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["STAGGER"]
169 [-]: GETUPVAL  R8 U0        ; R8 := U0
170 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
171 [-]: SELF      R5 R2 K39    ; R6 := R2; R5 := R2["0x64728A2A"]
172 [-]: GETGLOBAL R7 K14       ; R7 := Engine
173 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["BIG_STAGGER"]
174 [-]: GETUPVAL  R8 U0        ; R8 := U0
175 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
176 [-]: SELF      R5 R2 K39    ; R6 := R2; R5 := R2["0x64728A2A"]
177 [-]: GETGLOBAL R7 K14       ; R7 := Engine
178 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["STUN"]
179 [-]: GETUPVAL  R8 U0        ; R8 := U0
180 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
181 [-]: JMP       206          ; PC := 206
182 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
183 [-]: GETGLOBAL R6 K40       ; R6 := _T
184 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["CephalonTearDamageFreezeTable"]
185 [-]: CALL      R5 2 2       ; R5 := R5(R6)
186 [-]: TEST      R5 0         ; if not R5 then PC := 191
187 [-]: JMP       191          ; PC := 191
188 [-]: GETGLOBAL R5 K40       ; R5 := _T
189 [-]: NEWTABLE  R6 0 0       ; R6 := {}
190 [-]: SETTABLE  R5 K41 R6    ; R5["CephalonTearDamageFreezeTable"] := R6
191 [-]: GETGLOBAL R5 K40       ; R5 := _T
192 [-]: GETTABLE  R5 R5 K41    ; R5 := R5["CephalonTearDamageFreezeTable"]
193 [-]: SELF      R6 R0 K42    ; R7 := R0; R6 := R0["0xDBEF0FB6"]
194 [-]: CALL      R6 2 2       ; R6 := R6(R7)
195 [-]: SETTABLE  R5 R6 K43    ; R5[R6] := "0x1"
196 [-]: SELF      R5 R0 K44    ; R6 := R0; R5 := R0["0x9F1DC568"]
197 [-]: GETUPVAL  R7 U1        ; R7 := U1
198 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
199 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
200 [-]: MOVE      R7 R5        ; R7 := R5
201 [-]: CALL      R6 2 2       ; R6 := R6(R7)
202 [-]: TEST      R6 1         ; if R6 then PC := 206
203 [-]: JMP       206          ; PC := 206
204 [-]: SELF      R6 R5 K45    ; R7 := R5; R6 := R5["0xD4C2743F"]
205 [-]: CALL      R6 2 1       ; R6(R7)
206 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 86
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 90
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xEC274B1A
  2 [-]: LOADK     R2 K1        ; R2 := "PostDeathTickingBomb"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0x8B598ED4"]
  5 [-]: GETGLOBAL R4 K3        ; R4 := gRagdollType
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: TEST      R2 0         ; if not R2 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0xDE48B8CA"]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: LOADK     R5 K5        ; R5 := 0.0010000000474975
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0["0xCCA6EEB7"]
 14 [-]: LOADK     R4 K7        ; R4 := 800
 15 [-]: LOADK     R5 K7        ; R5 := 800
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: SELF      R2 R0 K8     ; R3 := R0; R2 := R0["0x24E09544"]
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: SELF      R2 R0 K9     ; R3 := R0; R2 := R0["0xA4499253"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: MOVE      R0 R2        ; R0 := R2
 24 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R2 K11       ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["CephalonTearDamageCounterTable"]
 32 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0["0xDBEF0FB6"]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 35 [-]: EQ        1 R2 K14     ; if R2 == nil then PC := 229
 36 [-]: JMP       229          ; PC := 229
 37 [-]: LT        0 K15 R2     ; if 0 >= R2 then PC := 229
 38 [-]: JMP       229          ; PC := 229
 39 [-]: LOADNIL   R3 R3        ; R3 := nil
 40 [-]: GETGLOBAL R4 K11       ; R4 := _T
 41 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["CephalonTearDamageFreezeTable"]
 42 [-]: EQ        1 R4 K14     ; if R4 == nil then PC := 60
 43 [-]: JMP       60           ; PC := 60
 44 [-]: GETGLOBAL R4 K11       ; R4 := _T
 45 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["CephalonTearDamageFreezeTable"]
 46 [-]: SELF      R5 R0 K13    ; R6 := R0; R5 := R0["0xDBEF0FB6"]
 47 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 48 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 49 [-]: TEST      R4 0         ; if not R4 then PC := 60
 50 [-]: JMP       60           ; PC := 60
 51 [-]: SELF      R4 R0 K17    ; R5 := R0; R4 := R0["0xAB436EF2"]
 52 [-]: GETUPVAL  R6 U0        ; R6 := U0
 53 [-]: GETGLOBAL R7 K18       ; R7 := EMPTY_SYMBOL
 54 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 55 [-]: SELF      R4 R0 K17    ; R5 := R0; R4 := R0["0xAB436EF2"]
 56 [-]: GETUPVAL  R6 U1        ; R6 := U1
 57 [-]: GETGLOBAL R7 K18       ; R7 := EMPTY_SYMBOL
 58 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 59 [-]: MOVE      R3 R4        ; R3 := R4
 60 [-]: LOADK     R4 K15       ; R4 := 0
 61 [-]: GETGLOBAL R5 K0        ; R5 := 0xEC274B1A
 62 [-]: LOADK     R6 K19       ; R6 := "BaseColor"
 63 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 64 [-]: MOVE      R6 R0        ; R6 := R0
 65 [-]: LOADNIL   R7 R7        ; R7 := nil
 66 [-]: GETUPVAL  R8 U2        ; R8 := U2
 67 [-]: LT        0 R4 R8      ; if R4 >= R8 then PC := 132
 68 [-]: JMP       132          ; PC := 132
 69 [-]: GETGLOBAL R8 K20       ; R8 := 0x201191EA
 70 [-]: LOADK     R9 K15       ; R9 := 0
 71 [-]: CALL      R8 2 1       ; R8(R9)
 72 [-]: GETGLOBAL R8 K10       ; R8 := 0x400E7765
 73 [-]: MOVE      R9 R6        ; R9 := R6
 74 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 75 [-]: TEST      R8 0         ; if not R8 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: RETURN    R0 1         ; return 
 78 [-]: JMP       106          ; PC := 106
 79 [-]: SELF      R8 R6 K2     ; R9 := R6; R8 := R6["0x8B598ED4"]
 80 [-]: GETGLOBAL R10 K21      ; R10 := gLotusNpcAvatarType
 81 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 82 [-]: TEST      R8 0         ; if not R8 then PC := 106
 83 [-]: JMP       106          ; PC := 106
 84 [-]: GETGLOBAL R8 K10       ; R8 := 0x400E7765
 85 [-]: SELF      R9 R6 K22    ; R10 := R6; R9 := R6["0xF18FC6E4"]
 86 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 87 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 88 [-]: TEST      R8 1         ; if R8 then PC := 106
 89 [-]: JMP       106          ; PC := 106
 90 [-]: SELF      R8 R6 K22    ; R9 := R6; R8 := R6["0xF18FC6E4"]
 91 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 92 [-]: MOVE      R6 R8        ; R6 := R8
 93 [-]: SELF      R8 R6 K4     ; R9 := R6; R8 := R6["0xDE48B8CA"]
 94 [-]: MOVE      R10 R1       ; R10 := R1
 95 [-]: LOADK     R11 K5       ; R11 := 0.0010000000474975
 96 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 97 [-]: SELF      R8 R6 K6     ; R9 := R6; R8 := R6["0xCCA6EEB7"]
 98 [-]: LOADK     R10 K7       ; R10 := 800
 99 [-]: LOADK     R11 K7       ; R11 := 800
100 [-]: MOVE      R12 R1       ; R12 := R1
101 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
102 [-]: SELF      R8 R6 K8     ; R9 := R6; R8 := R6["0x24E09544"]
103 [-]: MOVE      R10 R1       ; R10 := R1
104 [-]: CALL      R8 3 1       ; R8(R9,R10)
105 [-]: LOADNIL   R7 R7        ; R7 := nil
106 [-]: GETGLOBAL R8 K23       ; R8 := 0x4CDEF9FF
107 [-]: CALL      R8 1 2       ; R8 := R8()
108 [-]: ADD       R4 R4 R8     ; R4 := R4 + R8
109 [-]: GETUPVAL  R8 U2        ; R8 := U2
110 [-]: DIV       R8 R4 R8     ; R8 := R4 / R8
111 [-]: GETGLOBAL R9 K10       ; R9 := 0x400E7765
112 [-]: MOVE      R10 R7       ; R10 := R7
113 [-]: CALL      R9 2 2       ; R9 := R9(R10)
114 [-]: TEST      R9 0         ; if not R9 then PC := 121
115 [-]: JMP       121          ; PC := 121
116 [-]: SELF      R9 R6 K24    ; R10 := R6; R9 := R6["0x9F1DC568"]
117 [-]: GETUPVAL  R11 U3       ; R11 := U3
118 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
119 [-]: MOVE      R7 R9        ; R7 := R9
120 [-]: JMP       66           ; PC := 66
121 [-]: MUL       R9 R8 R8     ; R9 := R8 * R8
122 [-]: MUL       R9 R9 R8     ; R9 := R9 * R8
123 [-]: MUL       R9 R9 K25    ; R9 := R9 * 8
124 [-]: SELF      R10 R7 K26   ; R11 := R7; R10 := R7["0xD124E361"]
125 [-]: MOVE      R12 R5       ; R12 := R5
126 [-]: MOVE      R13 R9       ; R13 := R9
127 [-]: MUL       R14 R9 K27   ; R14 := R9 * 0.15000000596046
128 [-]: MUL       R15 R9 K28   ; R15 := R9 * 0.019999999552965
129 [-]: LOADK     R16 K29      ; R16 := 1
130 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
131 [-]: JMP       66           ; PC := 66
132 [-]: GETGLOBAL R10 K30      ; R10 := math
133 [-]: GETTABLE  R10 R10 K31  ; R10 := R10["0x65F9712A"]
134 [-]: GETUPVAL  R11 U4       ; R11 := U4
135 [-]: GETUPVAL  R12 U5       ; R12 := U5
136 [-]: MUL       R12 R12 R2   ; R12 := R12 * R2
137 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
138 [-]: GETUPVAL  R11 U6       ; R11 := U6
139 [-]: TEST      R11 0        ; if not R11 then PC := 166
140 [-]: JMP       166          ; PC := 166
141 [-]: GETGLOBAL R11 K32      ; R11 := gGameRules
142 [-]: SELF      R11 R11 K33  ; R12 := R11; R11 := R11["0xB8637349"]
143 [-]: CALL      R11 2 2      ; R11 := R11(R12)
144 [-]: SELF      R12 R0 K34   ; R13 := R0; R12 := R0["0xABD9DD93"]
145 [-]: CALL      R12 2 2      ; R12 := R12(R13)
146 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
147 [-]: MOVE      R14 R11      ; R14 := R11
148 [-]: CALL      R13 2 2      ; R13 := R13(R14)
149 [-]: TEST      R13 1        ; if R13 then PC := 166
150 [-]: JMP       166          ; PC := 166
151 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
152 [-]: MOVE      R14 R12      ; R14 := R12
153 [-]: CALL      R13 2 2      ; R13 := R13(R14)
154 [-]: TEST      R13 1        ; if R13 then PC := 166
155 [-]: JMP       166          ; PC := 166
156 [-]: GETGLOBAL R13 K32      ; R13 := gGameRules
157 [-]: SELF      R13 R13 K35  ; R14 := R13; R13 := R13["0x1EBB7703"]
158 [-]: MOVE      R15 R10      ; R15 := R10
159 [-]: GETGLOBAL R16 K36      ; R16 := Engine
160 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["DAMAGE"]
161 [-]: GETTABLE  R17 R11 K38  ; R17 := R11["difficulty"]
162 [-]: SELF      R18 R12 K39  ; R19 := R12; R18 := R12["0x7632A12E"]
163 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
164 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
165 [-]: MOVE      R10 R13      ; R10 := R13
166 [-]: GETGLOBAL R13 K36      ; R13 := Engine
167 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["0x29915328"]
168 [-]: CALL      R13 1 2      ; R13 := R13()
169 [-]: SETTABLE  R13 K41 R10  ; R13["baseAmount"] := R10
170 [-]: GETUPVAL  R14 U7       ; R14 := U7
171 [-]: SETTABLE  R13 K42 R14  ; R13["radius"] := R14
172 [-]: SETTABLE  R13 K43 K44  ; R13["staticCoverOnly"] := "0x1"
173 [-]: SETTABLE  R13 K45 K46  ; R13["targetAvatarHeads"] := "0x0"
174 [-]: SETTABLE  R13 K47 K46  ; R13["hostAuthoritative"] := "0x0"
175 [-]: SELF      R14 R13 K48  ; R15 := R13; R14 := R13["0x6A59BB20"]
176 [-]: SELF      R16 R0 K49   ; R17 := R0; R16 := R0["0xBBAF192"]
177 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
178 [-]: CALL      R14 0 1      ; R14(R15,...)
179 [-]: SELF      R14 R13 K50  ; R15 := R13; R14 := R13["0xC4A45AF8"]
180 [-]: GETGLOBAL R16 K36      ; R16 := Engine
181 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["DT_SLASH"]
182 [-]: LOADK     R17 K29      ; R17 := 1
183 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
184 [-]: SELF      R14 R13 K52  ; R15 := R13; R14 := R13["0x336239F7"]
185 [-]: LOADK     R16 K53      ; R16 := 200
186 [-]: CALL      R14 3 1      ; R14(R15,R16)
187 [-]: GETGLOBAL R14 K54      ; R14 := gRegion
188 [-]: SELF      R14 R14 K55  ; R15 := R14; R14 := R14["0x4BC2A4A3"]
189 [-]: MOVE      R16 R13      ; R16 := R13
190 [-]: CALL      R14 3 1      ; R14(R15,R16)
191 [-]: GETGLOBAL R14 K10      ; R14 := 0x400E7765
192 [-]: MOVE      R15 R0       ; R15 := R0
193 [-]: CALL      R14 2 2      ; R14 := R14(R15)
194 [-]: TEST      R14 1        ; if R14 then PC := 210
195 [-]: JMP       210          ; PC := 210
196 [-]: GETGLOBAL R14 K54      ; R14 := gRegion
197 [-]: SELF      R14 R14 K56  ; R15 := R14; R14 := R14["0xBDD34CC6"]
198 [-]: GETUPVAL  R16 U8       ; R16 := U8
199 [-]: SELF      R17 R0 K57   ; R18 := R0; R17 := R0["0x6DA72501"]
200 [-]: CALL      R17 2 2      ; R17 := R17(R18)
201 [-]: GETGLOBAL R18 K58      ; R18 := 0x221C9700
202 [-]: LOADK     R19 K15      ; R19 := 0
203 [-]: LOADK     R20 K59      ; R20 := 0.5
204 [-]: LOADK     R21 K15      ; R21 := 0
205 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
206 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
207 [-]: SELF      R18 R0 K60   ; R19 := R0; R18 := R0["0xF23A7849"]
208 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
209 [-]: CALL      R14 0 1      ; R14(R15,...)
210 [-]: GETGLOBAL R14 K10      ; R14 := 0x400E7765
211 [-]: MOVE      R15 R3       ; R15 := R3
212 [-]: CALL      R14 2 2      ; R14 := R14(R15)
213 [-]: TEST      R14 1        ; if R14 then PC := 217
214 [-]: JMP       217          ; PC := 217
215 [-]: SELF      R14 R3 K61   ; R15 := R3; R14 := R3["0xD4C2743F"]
216 [-]: CALL      R14 2 1      ; R14(R15)
217 [-]: GETGLOBAL R14 K10      ; R14 := 0x400E7765
218 [-]: MOVE      R15 R7       ; R15 := R7
219 [-]: CALL      R14 2 2      ; R14 := R14(R15)
220 [-]: TEST      R14 1        ; if R14 then PC := 229
221 [-]: JMP       229          ; PC := 229
222 [-]: SELF      R14 R7 K26   ; R15 := R7; R14 := R7["0xD124E361"]
223 [-]: MOVE      R16 R5       ; R16 := R5
224 [-]: LOADK     R17 K15      ; R17 := 0
225 [-]: LOADK     R18 K15      ; R18 := 0
226 [-]: LOADK     R19 K15      ; R19 := 0
227 [-]: LOADK     R20 K29      ; R20 := 1
228 [-]: CALL      R14 7 1      ; R14(R15,R16,R17,R18,R19,R20)
229 [-]: GETGLOBAL R14 K11      ; R14 := _T
230 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["CephalonTearDamageCounterTable"]
231 [-]: SELF      R15 R0 K13   ; R16 := R0; R15 := R0["0xDBEF0FB6"]
232 [-]: CALL      R15 2 2      ; R15 := R15(R16)
233 [-]: SETTABLE  R14 R15 K14  ; R14[R15] := nil
234 [-]: GETGLOBAL R14 K11      ; R14 := _T
235 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["CephalonTearDamageFreezeTable"]
236 [-]: SELF      R15 R0 K13   ; R16 := R0; R15 := R0["0xDBEF0FB6"]
237 [-]: CALL      R15 2 2      ; R15 := R15(R16)
238 [-]: SETTABLE  R14 R15 K14  ; R14[R15] := nil
239 [-]: EQ        1 R2 K14     ; if R2 == nil then PC := 271
240 [-]: JMP       271          ; PC := 271
241 [-]: LT        0 K15 R2     ; if 0 >= R2 then PC := 271
242 [-]: JMP       271          ; PC := 271
243 [-]: GETGLOBAL R14 K10      ; R14 := 0x400E7765
244 [-]: MOVE      R15 R0       ; R15 := R0
245 [-]: CALL      R14 2 2      ; R14 := R14(R15)
246 [-]: TEST      R14 0        ; if not R14 then PC := 249
247 [-]: JMP       249          ; PC := 249
248 [-]: RETURN    R0 1         ; return 
249 [-]: SELF      R14 R0 K62   ; R15 := R0; R14 := R0["0xC432A31F"]
250 [-]: CALL      R14 2 2      ; R14 := R14(R15)
251 [-]: LT        0 K15 R14    ; if 0 >= R14 then PC := 264
252 [-]: JMP       264          ; PC := 264
253 [-]: LOADK     R15 K15      ; R15 := 0
254 [-]: SUB       R16 R14 K29  ; R16 := R14 - 1
255 [-]: LOADK     R17 K29      ; R17 := 1
256 [-]: FORPREP   R15 262      ; R15 -= R17; PC := 262
257 [-]: SELF      R19 R0 K63   ; R20 := R0; R19 := R0["0x977EF3DA"]
258 [-]: MOVE      R21 R18      ; R21 := R18
259 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
260 [-]: SELF      R20 R19 K61  ; R21 := R19; R20 := R19["0xD4C2743F"]
261 [-]: CALL      R20 2 1      ; R20(R21)
262 [-]: FORLOOP   R15 257      ; R15 += R17; if R15 <= R16 then begin PC := 257; R18 := R15 end
263 [-]: JMP       271          ; PC := 271
264 [-]: GETGLOBAL R20 K10      ; R20 := 0x400E7765
265 [-]: MOVE      R21 R0       ; R21 := R0
266 [-]: CALL      R20 2 2      ; R20 := R20(R21)
267 [-]: TEST      R20 1        ; if R20 then PC := 271
268 [-]: JMP       271          ; PC := 271
269 [-]: SELF      R20 R0 K61   ; R21 := R0; R20 := R0["0xD4C2743F"]
270 [-]: CALL      R20 2 1      ; R20(R21)
271 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 196
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CephalonTearDamageFreezeTable"]
  3 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0xDBEF0FB6"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SETTABLE  R1 R2 K3     ; R1[R2] := "0x1"
  6 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x8E8A9D7"]
  7 [-]: GETGLOBAL R3 K5        ; R3 := Engine
  8 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["FROZEN_GLASS"]
  9 [-]: LOADK     R4 K7        ; R4 := 1
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0["0xF18FC6E4"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K9        ; R2 := 0xEC274B1A
 14 [-]: LOADK     R3 K10       ; R3 := "PostDeathTickingBomb"
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K11       ; R3 := 0x400E7765
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 0         ; if not R3 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0["0xB26452A2"]
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 25 [-]: JMP       30           ; PC := 30
 26 [-]: SELF      R3 R1 K12    ; R4 := R1; R3 := R1["0xB26452A2"]
 27 [-]: MOVE      R5 R2        ; R5 := R2
 28 [-]: MOVE      R6 R0        ; R6 := R0
 29 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 30 [-]: GETGLOBAL R3 K13       ; R3 := gRegion
 31 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0xA559F558"]
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: TEST      R3 0         ; if not R3 then PC := 80
 34 [-]: JMP       80           ; PC := 80
 35 [-]: GETGLOBAL R3 K15       ; R3 := 0x7C282057
 36 [-]: GETUPVAL  R4 U0        ; R4 := U0
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETGLOBAL R4 K15       ; R4 := 0x7C282057
 39 [-]: SELF      R5 R3 K16    ; R6 := R3; R5 := R3["0x3077BE70"]
 40 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 41 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 42 [-]: GETGLOBAL R5 K17       ; R5 := math
 43 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["0xF7005A7B"]
 44 [-]: SELF      R6 R3 K19    ; R7 := R3; R6 := R3["0xE10719C5"]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: GETUPVAL  R7 U1        ; R7 := U1
 47 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 48 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 49 [-]: GETGLOBAL R6 K13       ; R6 := gRegion
 50 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0x48FBE19F"]
 51 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 52 [-]: GETGLOBAL R7 K21       ; R7 := 0xECFDD17
 53 [-]: MOVE      R8 R6        ; R8 := R6
 54 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 55 [-]: JMP       78           ; PC := 78
 56 [-]: GETGLOBAL R12 K11      ; R12 := 0x400E7765
 57 [-]: MOVE      R13 R11      ; R13 := R11
 58 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 59 [-]: TEST      R12 1        ; if R12 then PC := 78
 60 [-]: JMP       78           ; PC := 78
 61 [-]: SELF      R12 R11 K22  ; R13 := R11; R12 := R11["0xB3F0027"]
 62 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 63 [-]: TEST      R12 0        ; if not R12 then PC := 78
 64 [-]: JMP       78           ; PC := 78
 65 [-]: SELF      R12 R11 K23  ; R13 := R11; R12 := R11["0x80B14403"]
 66 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 67 [-]: GETGLOBAL R13 K11      ; R13 := 0x400E7765
 68 [-]: MOVE      R14 R12      ; R14 := R12
 69 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 70 [-]: TEST      R13 1        ; if R13 then PC := 78
 71 [-]: JMP       78           ; PC := 78
 72 [-]: SELF      R13 R12 K24  ; R14 := R12; R13 := R12["0x8DB5D01F"]
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: SELF      R13 R13 K25  ; R14 := R13; R13 := R13["0x5388FA75"]
 75 [-]: MOVE      R15 R4       ; R15 := R4
 76 [-]: MOVE      R16 R5       ; R16 := R5
 77 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 78 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 56; R9 := R10 end
 79 [-]: JMP       56           ; PC := 56
 80 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 227
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CephalonTearDamageCounterTable"]
  3 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0xDBEF0FB6"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  6 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K0        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["CephalonTearDamageFreezeTable"]
 11 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["CephalonTearDamageFreezeTable"]
 15 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0xDBEF0FB6"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 18 [-]: TEST      R1 0         ; if not R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x1AF4507E"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0x45933E1"]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: GETGLOBAL R3 K7        ; R3 := 0x400E7765
 26 [-]: MOVE      R4 R2        ; R4 := R2
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: TEST      R3 1         ; if R3 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x8B598ED4"]
 31 [-]: GETGLOBAL R5 K9        ; R5 := gLotusNpcAvatarType
 32 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 33 [-]: TEST      R3 0         ; if not R3 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: GETGLOBAL R3 K10       ; R3 := math
 37 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0xBCF846DF"]
 38 [-]: GETUPVAL  R4 U0        ; R4 := U0
 39 [-]: GETUPVAL  R5 U1        ; R5 := U1
 40 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: GETGLOBAL R4 K0        ; R4 := _T
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["CephalonTearDamageCounterTable"]
 44 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0["0xDBEF0FB6"]
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 47 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0["0x6A7E5F92"]
 50 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0["0xECB5B892"]
 51 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 52 [-]: GETUPVAL  R8 U2        ; R8 := U2
 53 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
 54 [-]: CALL      R5 3 1       ; R5(R6,R7)
 55 [-]: GETGLOBAL R5 K0        ; R5 := _T
 56 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["CephalonTearDamageCounterTable"]
 57 [-]: SELF      R6 R0 K2     ; R7 := R0; R6 := R0["0xDBEF0FB6"]
 58 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 59 [-]: ADD       R7 R4 K14    ; R7 := R4 + 1
 60 [-]: SETTABLE  R5 R6 R7     ; R5[R6] := R7
 61 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 253
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0xD5FAF012"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := gRegion
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA559F558"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 26
  7 [-]: JMP       26           ; PC := 26
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0xD5FAF012"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R2 K4        ; R2 := 0x201191EA
 18 [-]: LOADK     R3 K5        ; R3 := 0.10000000149012
 19 [-]: CALL      R2 2 1       ; R2(R3)
 20 [-]: JMP       8            ; PC := 8
 21 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0xD5FAF012"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: MOVE      R1 R2        ; R1 := R2
 24 [-]: JMP       26           ; PC := 26
 25 [-]: JMP       8            ; PC := 8
 26 [-]: LOADK     R2 K6        ; R2 := 1
 27 [-]: GETGLOBAL R3 K7        ; R3 := 0xEC274B1A
 28 [-]: LOADK     R4 K8        ; R4 := "TimeScalar"
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K7        ; R4 := 0xEC274B1A
 31 [-]: LOADK     R5 K9        ; R5 := "UnlitAtten"
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: GETUPVAL  R6 U1        ; R6 := U1
 35 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
 36 [-]: GETUPVAL  R6 U1        ; R6 := U1
 37 [-]: LE        0 R6 K10     ; if R6 > 0 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADK     R5 K11       ; R5 := 100
 40 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 41 [-]: MOVE      R7 R1        ; R7 := R1
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: TEST      R6 1         ; if R6 then PC := 90
 44 [-]: JMP       90           ; PC := 90
 45 [-]: SELF      R6 R1 K12    ; R7 := R1; R6 := R1["0x5A115A02"]
 46 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 47 [-]: TEST      R6 1         ; if R6 then PC := 90
 48 [-]: JMP       90           ; PC := 90
 49 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 50 [-]: GETGLOBAL R7 K13       ; R7 := _T
 51 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CephalonTearDamageCounterTable"]
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: TEST      R6 0         ; if not R6 then PC := 58
 54 [-]: JMP       58           ; PC := 58
 55 [-]: GETGLOBAL R6 K13       ; R6 := _T
 56 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 57 [-]: SETTABLE  R6 K14 R7    ; R6["CephalonTearDamageCounterTable"] := R7
 58 [-]: GETGLOBAL R6 K13       ; R6 := _T
 59 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["CephalonTearDamageCounterTable"]
 60 [-]: SELF      R7 R1 K15    ; R8 := R1; R7 := R1["0xDBEF0FB6"]
 61 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 62 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 63 [-]: EQ        1 R6 R2      ; if R6 == R2 then PC := 85
 64 [-]: JMP       85           ; PC := 85
 65 [-]: EQ        1 R6 K16     ; if R6 == nil then PC := 85
 66 [-]: JMP       85           ; PC := 85
 67 [-]: GETGLOBAL R7 K17       ; R7 := math
 68 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["0x65F9712A"]
 69 [-]: MOVE      R8 R6        ; R8 := R6
 70 [-]: MOVE      R9 R5        ; R9 := R5
 71 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 72 [-]: DIV       R7 R7 R5     ; R7 := R7 / R5
 73 [-]: SELF      R8 R0 K19    ; R9 := R0; R8 := R0["0xD124E361"]
 74 [-]: MOVE      R10 R3       ; R10 := R3
 75 [-]: MUL       R11 K20 R7   ; R11 := 4 * R7
 76 [-]: ADD       R11 K6 R11   ; R11 := 1 + R11
 77 [-]: LOADK     R12 K10      ; R12 := 0
 78 [-]: LOADK     R13 K10      ; R13 := 0
 79 [-]: LOADK     R14 K6       ; R14 := 1
 80 [-]: CALL      R8 7 1       ; R8(R9,R10,R11,R12,R13,R14)
 81 [-]: SELF      R8 R0 K19    ; R9 := R0; R8 := R0["0xD124E361"]
 82 [-]: MOVE      R10 R4       ; R10 := R4
 83 [-]: MUL       R11 R7 K21   ; R11 := R7 * 10
 84 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 85 [-]: MOVE      R2 R6        ; R2 := R6
 86 [-]: GETGLOBAL R8 K4        ; R8 := 0x201191EA
 87 [-]: LOADK     R9 K10       ; R9 := 0
 88 [-]: CALL      R8 2 1       ; R8(R9)
 89 [-]: JMP       40           ; PC := 40
 90 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 290
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x94BCBD40
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R3 K1        ; R3 := "OnKilled"
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x4E4DB8B7"]
  6 [-]: LOADK     R3 K3        ; R3 := "OnDamaged"
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 295
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x8B598ED4"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gLotusNpcAvatarType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 1         ; if R1 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R1 K2        ; R1 := gRegion
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xA559F558"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0xD5FAF012"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R1 K6        ; R1 := 0x201191EA
 21 [-]: LOADK     R2 K7        ; R2 := 0.10000000149012
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: JMP       11           ; PC := 11
 24 [-]: JMP       26           ; PC := 26
 25 [-]: JMP       11           ; PC := 11
 26 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0xD5FAF012"]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: MOVE      R0 R1        ; R0 := R1
 29 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 1         ; if R1 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x8B598ED4"]
 35 [-]: GETGLOBAL R3 K1        ; R3 := gLotusNpcAvatarType
 36 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 37 [-]: TEST      R1 1         ; if R1 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: GETGLOBAL R1 K2        ; R1 := gRegion
 41 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xA559F558"]
 42 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 43 [-]: TEST      R1 1         ; if R1 then PC := 68
 44 [-]: JMP       68           ; PC := 68
 45 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 46 [-]: GETGLOBAL R2 K8        ; R2 := _T
 47 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["CephalonTearDamageCounterTable"]
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 54
 50 [-]: JMP       54           ; PC := 54
 51 [-]: GETGLOBAL R1 K8        ; R1 := _T
 52 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 53 [-]: SETTABLE  R1 K9 R2     ; R1["CephalonTearDamageCounterTable"] := R2
 54 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 55 [-]: GETGLOBAL R2 K8        ; R2 := _T
 56 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CephalonTearDamageFreezeTable"]
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: TEST      R1 0         ; if not R1 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETGLOBAL R1 K8        ; R1 := _T
 61 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 62 [-]: SETTABLE  R1 K10 R2    ; R1["CephalonTearDamageFreezeTable"] := R2
 63 [-]: GETGLOBAL R1 K8        ; R1 := _T
 64 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["CephalonTearDamageCounterTable"]
 65 [-]: SELF      R2 R0 K11    ; R3 := R0; R2 := R0["0xDBEF0FB6"]
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: SETTABLE  R1 R2 K12    ; R1[R2] := 0
 68 [-]: SELF      R1 R0 K13    ; R2 := R0; R1 := R0["0x5A115A02"]
 69 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 70 [-]: TEST      R1 0         ; if not R1 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: RETURN    R0 1         ; return 
 73 [-]: SELF      R1 R0 K14    ; R2 := R0; R1 := R0["0xB26452A2"]
 74 [-]: GETGLOBAL R3 K15       ; R3 := 0xEC274B1A
 75 [-]: LOADK     R4 K16       ; R4 := "_AddGlassPortsChild"
 76 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 77 [-]: MOVE      R4 R0        ; R4 := R0
 78 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 79 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 331
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x201191EA
  2 [-]: LOADK     R2 K1        ; R2 := 0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x9F1DC568"]
 11 [-]: GETGLOBAL R3 K4        ; R3 := gHitProxyType
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x2F79FBD3"]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: LT        0 K1 R2      ; if 0 >= R2 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R2 K0        ; R2 := 0x201191EA
 28 [-]: LOADK     R3 K6        ; R3 := 0.10000000149012
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: JMP       13           ; PC := 13
 31 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 66
 35 [-]: JMP       66           ; PC := 66
 36 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0["0x2F79FBD3"]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: LT        0 K1 R2      ; if 0 >= R2 then PC := 66
 39 [-]: JMP       66           ; PC := 66
 40 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0xD5FAF012"]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 43 [-]: MOVE      R4 R2        ; R4 := R2
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 64
 46 [-]: JMP       64           ; PC := 64
 47 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x8B598ED4"]
 48 [-]: GETGLOBAL R5 K9        ; R5 := gRagdollType
 49 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 50 [-]: TEST      R3 0         ; if not R3 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2["0xA4499253"]
 53 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 54 [-]: MOVE      R2 R3        ; R2 := R3
 55 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 56 [-]: MOVE      R4 R2        ; R4 := R2
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: TEST      R3 1         ; if R3 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R3 U0        ; R3 := U0
 61 [-]: MOVE      R4 R2        ; R4 := R2
 62 [-]: LOADK     R5 K1        ; R5 := 0
 63 [-]: CALL      R3 3 1       ; R3(R4,R5)
 64 [-]: SELF      R3 R0 K11    ; R4 := R0; R3 := R0["0xD4C2743F"]
 65 [-]: CALL      R3 2 1       ; R3(R4)
 66 [-]: RETURN    R0 1         ; return 


